* source: Core/ROMvX0.asm.py
                                          163   enableListing()
                                          164   #-----------------------------------------------------------------------
                                          165   #
                                          166   #  Start of core
                                          167   #
                                          168   #-----------------------------------------------------------------------
                                          169
                                          170   # Pre-loading the formal interface as a way to get warnings when
                                          171   # accidentally redefined with a different value
                                          172   loadBindings('ROMvX0_interface.json')
                                          173   loadBindings('Core/interface-dev.json') # Provisional values for DEVROM
                                          174
                                          175   # Gigatron clock
                                          176   cpuClock = 6.250e+06
                                          177
                                          178   # Output pin assignment for VGA
                                          179   R, G, B, hSync, vSync = 1, 4, 16, 64, 128
                                          180   syncBits = hSync+vSync # Both pulses negative
                                          181
                                          182   # When the XOUT register is in the circuit, the rising edge triggers its update.
                                          183   # The loop can therefore not be agnostic to the horizontal pulse polarity.
                                          184   assert syncBits & hSync != 0
                                          185
                                          186   # VGA 640x480 defaults (to be adjusted below!)
                                          187   vFront = 10     # Vertical front porch
                                          188   vPulse = 2      # Vertical sync pulse
                                          189   vBack  = 33     # Vertical back porch
                                          190   vgaLines = vFront + vPulse + vBack + 480
                                          191   vgaClock = 25.175e+06
                                          192
                                          193   # Video adjustments for Gigatron
                                          194   # 1. Our clock is (slightly) slower than 1/4th VGA clock. Not all monitors will
                                          195   #    accept the decreased frame rate, so we restore the frame rate to above
                                          196   #    minimum 59.94 Hz by cutting some lines from the vertical front porch.
                                          197   vFrontAdjust = vgaLines - int(4 * cpuClock / vgaClock * vgaLines)
                                          198   vFront -= vFrontAdjust
                                          199   # 2. Extend vertical sync pulse so we can feed the game controller the same
                                          200   #    signal. This is needed for controllers based on the 4021 instead of 74165
                                          201   vPulseExtension = max(0, 8-vPulse)
                                          202   vPulse += vPulseExtension
                                          203   # 3. Borrow these lines from the back porch so the refresh rate remains
                                          204   #    unaffected
                                          205   vBack -= vPulseExtension
                                          206
                                          207   # Start value of vertical blank counter
                                          208   videoYline0 = 1-2*(vFront+vPulse+vBack-2)
                                          209
                                          210   # Mismatch between video lines and sound channels
                                          211   soundDiscontinuity = (vFront+vPulse+vBack) % 4
                                          212
                                          213   # QQVGA resolution
                                          214   qqVgaWidth      = 160
                                          215   qqVgaHeight     = 120
                                          216
                                          217   # Game controller bits (actual controllers in kit have negative output)
                                          218   # +----------------------------------------+
                                          219   # |       Up                        B*     |
                                          220   # |  Left    Right               B     A*  |
                                          221   # |      Down      Select Start     A      |
                                          222   # +----------------------------------------+ *=Auto fire
                                          223   buttonRight     = 1
                                          224   buttonLeft      = 2
                                          225   buttonDown      = 4
                                          226   buttonUp        = 8
                                          227   buttonStart     = 16
                                          228   buttonSelect    = 32
                                          229   buttonB         = 64
                                          230   buttonA         = 128
                                          231
                                          232   #-----------------------------------------------------------------------
                                          233   #
                                          234   #  RAM page 0: zero-page variables
                                          235   #
                                          236   #-----------------------------------------------------------------------
                                          237
                                          238   # Memory size in pages from auto-detect
                                          239   memSize         = zpByte()
                                          240
                                          241   # Active interpreter page, swapped with channel, so that we can do a one
                                          242   # instruction vCpuSelect reset, i.e. st(vCpuSelect,[vCpuSelect])
                                          243   vCpuSelect      = zpByte()
                                          244
                                          245   # Next sound sample being synthesized
                                          246   sample          = zpByte()
                                          247   # To save one instruction in the critical inner loop, `sample' is always
                                          248   # reset with its own address instead of, for example, the value 0. Compare:
                                          249   # 1 instruction reset
                                          250   #       st sample,[sample]
                                          251   # 2 instruction reset:
                                          252   #       ld 0
                                          253   #       st [sample]
                                          254   # The difference is not audible. This is fine when the reset/address
                                          255   # value is low and doesn't overflow with 4 channels added to it.
                                          256   # There is an alternative, but it requires pull-down diodes on the data bus:
                                          257   #       st [sample],[sample]
                                          258   assert 4*63 + sample < 256
                                          259   # We pin this reset/address value to 3, so `sample' swings from 3 to 255
                                          260   assert sample == 3
                                          261
                                          262   # Former bootCount and bootCheck (<= ROMv3)
                                          263   vSPH             = zpByte()
                                          264   #zpReserved      = zpByte() # Recycled and still unused. Candidate future uses:
                                          265                              # - Video driver high address (for alternative video modes)
                                          266                              # - v6502: ADH offset ("MMU")
                                          267                              # - v8080: ???
                                          268
                                          269   # The current channel number for sound generation. Advanced every scan line
                                          270   # and independent of the vertical refresh to maintain constant oscillation.
                                          271   channel         = zpByte()
                                          272
                                          273   # Entropy harvested from SRAM startup and controller input
                                          274   entropy         = zpByte(3)
                                          275
                                          276   # Visible video
                                          277   videoY          = zpByte() # Counts up from 0 to 238 in steps of 2
                                          278                              # Counts up (and is odd) during vertical blank
                                          279   videoModeB      = zpByte() # Handler for every 2nd line (pixel burst or vCPU)
                                          280   videoModeC      = zpByte() # Handler for every 3rd line (pixel burst or vCPU)
                                          281   videoModeD      = zpByte() # Handler for every 4th line (pixel burst or vCPU)
                                          282
                                          283   nextVideo       = zpByte() # Jump offset to scan line handler (videoA, B, C...)
                                          284   videoPulse      = nextVideo # Used for pulse width modulation
                                          285
                                          286   # Frame counter is good enough as system clock
                                          287   frameCount      = zpByte(1)
                                          288
                                          289   # Serial input (game controller)
                                          290   serialRaw       = zpByte() # New raw serial read
                                          291   serialLast      = zpByte() # Previous serial read
                                          292   buttonState     = zpByte() # Clearable button state
                                          293   resetTimer      = zpByte() # After 2 seconds of holding 'Start', do a soft reset
                                          294                              # XXX move to page 1 to free up space
                                          295
                                          296   # Extended output (blinkenlights in bit 0:3 and audio in bit 4:7). This
                                          297   # value must be present in AC during a rising hSync edge. It then gets
                                          298   # copied to the XOUT register by the hardware. The XOUT register is only
                                          299   # accessible in this indirect manner because it isn't part of the core
                                          300   # CPU architecture.
                                          301   xout            = zpByte()
                                          302   xoutMask        = zpByte() # The blinkenlights and sound on/off state
                                          303
                                          304   # vCPU interpreter
                                          305   vTicks          = zpByte()  # Interpreter ticks are units of 2 clocks
                                          306   vPC             = zpByte(2) # Interpreter program counter, points into RAM
                                          307   vAC             = zpByte(2) # Interpreter accumulator, 16-bits
                                          308   vLR             = zpByte(2) # Return address, for returning after CALL
                                          309   vSP             = zpByte(1) # Stack pointer
                                          310   vTmp            = zpByte()
                                          311   vReturn         = zpByte()  # Return into video loop (in page of vBlankStart)
                                          312
                                          313   # Scratch
                                          314   frameX          = zpByte() # Starting byte within page
                                          315   frameY          = zpByte() # Page of current pixel line (updated by videoA)
                                          316
                                          317   # Vertical blank (reuse some variables used in the visible part)
                                          318   videoSync0      = frameX   # Vertical sync type on current line (0xc0 or 0x40)
                                          319   videoSync1      = frameY   # Same during horizontal pulse (0x80 or 0x00)
                                          320
                                          321   # Versioning for GT1 compatibility
                                          322   # Please refer to Docs/GT1-files.txt for interpreting this variable
                                          323   romType         = zpByte(1)
                                          324
                                          325   # The low 3 bits are repurposed to select the actively updated sound channels.
                                          326   # Valid bit combinations are:
                                          327   #  xxxxx011     Default after reset: 4 channels (page 1,2,3,4)
                                          328   #  xxxxx001     2 channels at double update rate (page 1,2)
                                          329   #  xxxxx000     1 channel at quadruple update rate (page 1)
                                          330   # The main application for this is to free up the high bytes of page 2,3,4.
                                          331   channelMask = symbol('channelMask_v4')
                                          332   assert romType == channelMask
                                          333
                                          334   # SYS function arguments and results/scratch
                                          335   sysFn           = zpByte(2)
                                          336   sysArgs         = zpByte(8)
                                          337
                                          338   # Play sound if non-zero, count down and stop sound when zero
                                          339   soundTimer      = zpByte()
                                          340
                                          341   # Fow now the LED state machine itself is hard-coded in the program ROM
                                          342   ledTimer        = zpByte() # Number of ticks until next LED change
                                          343   ledState_v2     = zpByte() # Current LED state
                                          344   ledTempo        = zpByte() # Next value for ledTimer after LED state change
                                          345
                                          346   # All bytes above, except 0x80, are free for temporary/scratch/stacks etc
                                          347   userVars        = zpByte(0)
                                          348
                                          349   #-----------------------------------------------------------------------
                                          350   #
                                          351   #  RAM page 1: video line table
                                          352   #
                                          353   #-----------------------------------------------------------------------
                                          354
                                          355   # Byte 0-239 define the video lines
                                          356   videoTable      = 0x0100 # Indirection table: Y[0] dX[0]  ..., Y[119] dX[119]
                                          357
                                          358   vReset          = 0x01f0
                                          359   vIRQ_v5         = 0x01f6
                                          360   ctrlBits        = 0x01f8
                                          361   videoTop_v5     = 0x01f9 # Number of skip lines
                                          362
                                          363   # Highest bytes are for sound channel variables
                                          364   wavA = 250      # Waveform modulation with `adda'
                                          365   wavX = 251      # Waveform modulation with `xora'
                                          366   keyL = 252      # Frequency low 7 bits (bit7 == 0)
                                          367   keyH = 253      # Frequency high 8 bits
                                          368   oscL = 254      # Phase low 7 bits
                                          369   oscH = 255      # Phase high 8 bits
                                          370
                                          371   #-----------------------------------------------------------------------
                                          372   #  Memory layout
                                          373   #-----------------------------------------------------------------------
                                          374
                                          375   userCode = 0x0200       # Application vCPU code
                                          376   soundTable = 0x0700     # Wave form tables (doubles as right-shift-2 table)
                                          377   screenMemory = 0x0800   # Default start of screen memory: 0x0800 to 0x7fff
                                          378
                                          379   #-----------------------------------------------------------------------
                                          380   #  Application definitions
                                          381   #-----------------------------------------------------------------------
                                          382
                                          383   maxTicks = 30//2                 # Duration of vCPU's slowest virtual opcode (ticks)
                                          384   minTicks = 14//2                 # vcPU's fastest instruction
                                          385   v6502_maxTicks = 38//2           # Max duration of v6502 processing phase (ticks)
                                          386
                                          387   runVcpu_overhead = 5            # Caller overhead (cycles)
                                          388   vCPU_overhead = 9               # Callee overhead of jumping in and out (cycles)
                                          389   v6502_overhead = 11             # Callee overhead for v6502 (cycles)
                                          390
                                          391   v6502_adjust = (v6502_maxTicks - maxTicks) + (v6502_overhead - vCPU_overhead)//2
                                          392   assert v6502_adjust >= 0        # v6502's overhead is a bit more than vCPU
                                          393
                                          394   def runVcpu(n, ref=None, returnTo=None):
                                          395     """Macro to run interpreter for exactly n cycles. Returns 0 in AC.
                                          396
                                          397     - `n' is the number of available Gigatron cycles including overhead.
                                          398       This is converted into interpreter ticks and takes into account
                                          399       the vCPU calling overheads. A `nop' is inserted when necessary
                                          400       for alignment between cycles and ticks.
                                          401     - `returnTo' is where program flow continues after return. If not set
                                          402        explicitely, it will be the first instruction behind the expansion.
                                          403     - If another interpreter than vCPU is active (v6502...), that one
                                          404       must adjust for the timing differences, because runVcpu wouldn't know."""
                                          405
                                          406     overhead = runVcpu_overhead + vCPU_overhead
                                          407     if returnTo == 0x100:         # Special case for videoZ
                                          408       overhead -= 2
                                          409
                                          410     if n is None:
                                          411       # (Clumsily) create a maximum time slice, corresponding to a vTicks
                                          412       # value of 127 (giving 282 cycles). A higher value doesn't work because
                                          413       # then SYS functions that just need 28 cycles (0 excess) won't start.
                                          414       n = (127 + maxTicks) * 2 + overhead
                                          415
                                          416     n -= overhead
                                          417     assert n > 0
                                          418
                                          419     if n % 2 == 1:
                                          420       nop()                       # Tick alignment
                                          421       n -= 1
                                          422     assert n % 2 == 0
                                          423
                                          424     print('runVcpu at $%04x net cycles %3s info %s' % (pc(), n, ref))
                                          425
                                          426     if returnTo != 0x100:
                                          427       if returnTo is None:
                                          428         returnTo = pc() + 5       # Next instruction
                                          429       ld(lo(returnTo))            #0
                                          430       st([vReturn])               #1
                                          431
                                          432     n //= 2
                                          433     n -= maxTicks                 # First instruction always runs
                                          434     assert n < 128
                                          435     assert n >= v6502_adjust
                                          436
                                          437     ld([vCpuSelect],Y)            #2
                                          438     jmp(Y,'ENTER')                #3
                                          439     ld(n)                         #4
                                          440   assert runVcpu_overhead ==       5
                                          441
                                          442   #-----------------------------------------------------------------------
                                          443   #       v6502 definitions
                                          444   #-----------------------------------------------------------------------
                                          445
                                          446   # Registers are zero page variables
                                          447   v6502_PC        = vLR           # Program Counter
                                          448   v6502_PCL       = vLR+0         # Program Counter Low
                                          449   v6502_PCH       = vLR+1         # Program Counter High
                                          450   v6502_S         = vSP           # Stack Pointer (kept as "S+1")
                                          451   v6502_A         = vAC+0         # Accumulator
                                          452   v6502_BI        = vAC+1         # B Input Register (used by SBC)
                                          453   v6502_ADL       = sysArgs+0     # Low Address Register
                                          454   v6502_ADH       = sysArgs+1     # High Address Register
                                          455   v6502_IR        = sysArgs+2     # Instruction Register
                                          456   v6502_P         = sysArgs+3     # Processor Status Register (V flag in bit 7)
                                          457   v6502_Qz        = sysArgs+4     # Quick Status Register for Z flag
                                          458   v6502_Qn        = sysArgs+5     # Quick Status Register for N flag
                                          459   v6502_X         = sysArgs+6     # Index Register X
                                          460   v6502_Y         = sysArgs+7     # Index Register Y
                                          461   v6502_Tmp       = vTmp          # Scratch (may be clobbered outside v6502)
                                          462
                                          463   # MOS 6502 definitions for P register
                                          464   v6502_Cflag = 1                 # Carry Flag (unsigned overflow)
                                          465   v6502_Zflag = 2                 # Zero Flag (all bits zero)
                                          466   v6502_Iflag = 4                 # Interrupt Enable Flag (1=Disable)
                                          467   v6502_Dflag = 8                 # Decimal Enable Flag (aka BCD mode, 1=Enable)
                                          468   v6502_Bflag = 16                # Break (or PHP) Instruction Flag
                                          469   v6502_Uflag = 32                # Unused (always 1)
                                          470   v6502_Vflag = 64                # Overflow Flag (signed overflow)
                                          471   v6502_Nflag = 128               # Negative Flag (bit 7 of result)
                                          472
                                          473   # In emulation it is much faster to keep the V flag in bit 7
                                          474   # This can be corrected when importing/exporting with PHP, PLP, etc
                                          475   v6502_Vemu = 128
                                          476
                                          477   # On overflow:
                                          478   #       """Overflow is set if two inputs with the same sign produce
                                          479   #          a result with a different sign. Otherwise it is clear."""
                                          480   # Formula (without carry/borrow in!):
                                          481   #       (A ^ (A+B)) & (B ^ (A+B)) & 0x80
                                          482   # References:
                                          483   #       http://www.righto.com/2012/12/the-6502-overflow-flag-explained.html
                                          484   #       http://6502.org/tutorials/vflag.html
                                          485
                                          486   # Memory layout
                                          487   v6502_Stack     = 0x0000        # 0x0100 is already used in the Gigatron
                                          488   #v6502_NMI      = 0xfffa
                                          489   #v6502_RESET    = 0xfffc
                                          490   #v6502_IRQ      = 0xfffe
                                          491
                                          492   #-----------------------------------------------------------------------
                                          493   #
                                          494   #  $0000 ROM page 0: Boot
                                          495   #
                                          496   #-----------------------------------------------------------------------
                                          497
                                          498   align(0x100, size=0x80)
                                          499
                                          500   # Give a first sign of life that can be checked with a voltmeter
              address
              |    encoding
              |    |     instruction
              |    |     |    operands
              |    |     |    |
              V    V     V    V
              0000 0000  ld   $00         501   ld(0b0000)                      # LEDs |OOOO|
              0001 1880  ld   $80,out     502   ld(syncBits^hSync,OUT)          # Prepare XOUT update, hSync goes down, RGB to black
              0002 18c0  ld   $c0,out     503   ld(syncBits,OUT)                # hSync goes up, updating XOUT
                                          504
                                          505   # Setup I/O and RAM expander
              0003 c17c  ctrl $7c         506   ctrl(0b01111100)                # Disable SPI slaves, enable RAM, bank 1
                                          507   #      ^^^^^^^^
                                          508   #      |||||||`-- SCLK
                                          509   #      ||||||`--- Not connected
                                          510   #      |||||`---- /SS0
                                          511   #      ||||`----- /SS1
                                          512   #      |||`------ /SS2
                                          513   #      ||`------- /SS3
                                          514   #      |`-------- B0
                                          515   #      `--------- B1
                                          516   # bit15 --------- MOSI = 0
                                          517
                                          518   # Simple RAM test and size check by writing to [1<<n] and see if [0] changes or not.
              0004 0001  ld   $01         519   ld(1)                           # Quick RAM test and count
                                          520   label('.countMem0')
.countMem0:   0005 d601  st   [$01],y     521   st([memSize],Y)                 # Store in RAM and load AC in Y
              0006 00ff  ld   $ff         522   ld(255)
              0007 6900  xora [y,$00]     523   xora([Y,0])                     # Invert value from memory
              0008 ca00  st   [y,$00]     524   st([Y,0])                       # Test RAM by writing the new value
              0009 c200  st   [$00]       525   st([0])                         # Copy result in [0]
              000a 6900  xora [y,$00]     526   xora([Y,0])                     # Read back and compare if written ok
              000b ec0b  bne  $000b       527   bne(pc())                       # Loop forever on RAM failure here
              000c 00ff  ld   $ff         528   ld(255)
              000d 6900  xora [y,$00]     529   xora([Y,0])                     # Invert memory value again
              000e ca00  st   [y,$00]     530   st([Y,0])                       # To restore original value
              000f 6100  xora [$00]       531   xora([0])                       # Compare with inverted copy
              0010 f014  beq  .countMem1  532   beq('.countMem1')               # If equal, we wrapped around
              0011 0101  ld   [$01]       533   ld([memSize])
              0012 fc05  bra  .countMem0  534   bra('.countMem0')               # Loop to test next address line
              0013 8200  adda ac          535   adda(AC)                        # Executes in the branch delay slot!
                                          536   label('.countMem1')
                                          537
                                          538   # Momentarily wait to allow for debouncing of the reset switch by spinning
                                          539   # roughly 2^15 times at 2 clocks per loop: 6.5ms@10MHz to 10ms@6.3MHz
                                          540   # Real-world switches normally bounce shorter than that.
                                          541   # "[...] 16 switches exhibited an average 1557 usec of bouncing, with,
                                          542   #  as I said, a max of 6200 usec" (From: http://www.ganssle.com/debouncing.htm)
                                          543   # Relevant for the breadboard version, as the kit doesn't have a reset switch.
                                          544
.countMem1:   0014 00ff  ld   $ff         545   ld(255)                         # Debounce reset button
                                          546   label('.debounce')
.debounce:    0015 c200  st   [$00]       547   st([0])
              0016 ec16  bne  $0016       548   bne(pc())
              0017 a001  suba $01         549   suba(1)                         # Branch delay slot
              0018 0100  ld   [$00]       550   ld([0])
              0019 ec15  bne  .debounce   551   bne('.debounce')
              001a a001  suba $01         552   suba(1)                         # Branch delay slot
                                          553
                                          554   # Update LEDs (memory is present and counted, reset is stable)
              001b 0001  ld   $01         555   ld(0b0001)                      # LEDs |*OOO|
              001c 1880  ld   $80,out     556   ld(syncBits^hSync,OUT)
              001d 18c0  ld   $c0,out     557   ld(syncBits,OUT)
                                          558
                                          559   # Scan the entire RAM space to collect entropy for a random number generator.
                                          560   # The 16-bit address space is scanned, even if less RAM was detected.
              001e 0000  ld   $00         561   ld(0)                           # Collect entropy from RAM
              001f d218  st   [$18],x     562   st([vAC+0],X)
              0020 d619  st   [$19],y     563   st([vAC+1],Y)
                                          564   label('.initEnt0')
.initEnt0:    0021 0106  ld   [$06]       565   ld([entropy+0])
              0022 f425  bge  .initEnt1   566   bpl('.initEnt1')
              0023 8d00  adda [y,x]       567   adda([Y,X])
              0024 60bf  xora $bf         568   xora(191)
                                          569   label('.initEnt1')
.initEnt1:    0025 c206  st   [$06]       570   st([entropy+0])
              0026 0107  ld   [$07]       571   ld([entropy+1])
              0027 f42a  bge  .initEnt2   572   bpl('.initEnt2')
              0028 8106  adda [$06]       573   adda([entropy+0])
              0029 60c1  xora $c1         574   xora(193)
                                          575   label('.initEnt2')
.initEnt2:    002a c207  st   [$07]       576   st([entropy+1])
              002b 8108  adda [$08]       577   adda([entropy+2])
              002c c208  st   [$08]       578   st([entropy+2])
              002d 0118  ld   [$18]       579   ld([vAC+0])
              002e 8001  adda $01         580   adda(1)
              002f ec21  bne  .initEnt0   581   bne('.initEnt0')
              0030 d218  st   [$18],x     582   st([vAC+0],X)
              0031 0119  ld   [$19]       583   ld([vAC+1])
              0032 8001  adda $01         584   adda(1)
              0033 ec21  bne  .initEnt0   585   bne('.initEnt0')
              0034 d619  st   [$19],y     586   st([vAC+1],Y)
                                          587
                                          588   # Update LEDs
              0035 0003  ld   $03         589   ld(0b0011)                      # LEDs |**OO|
              0036 1880  ld   $80,out     590   ld(syncBits^hSync,OUT)
              0037 18c0  ld   $c0,out     591   ld(syncBits,OUT)
                                          592
                                          593   # vCPU reset handler
              0038 00ee  ld   $ee         594   ld((vReset&255)-2)              # Setup vCPU reset handler
              0039 c216  st   [$16]       595   st([vPC])
              003a 9002  adda $02,x       596   adda(2,X)
              003b 0001  ld   $01         597   ld(vReset>>8)
              003c d617  st   [$17],y     598   st([vPC+1],Y)
              003d dc59  st   $59,[y,x++] 599   st('LDI',             [Y,Xpp])
              003e dc5e  st   $5e,[y,x++] 600   st('SYS_Reset_88',    [Y,Xpp])
              003f dc2b  st   $2b,[y,x++] 601   st('STW',             [Y,Xpp])
              0040 dc22  st   $22,[y,x++] 602   st(sysFn,             [Y,Xpp])
              0041 dcb4  st   $b4,[y,x++] 603   st('SYS',             [Y,Xpp])  # SYS -> SYS_Reset_88 -> SYS_Exec_88
              0042 dce3  st   $e3,[y,x++] 604   st(256-88//2+maxTicks,[Y,Xpp])
              0043 dc00  st   $00,[y,x++] 605   st(0,                 [Y,Xpp])  # vIRQ_v5: Disable interrupts
              0044 dc00  st   $00,[y,x++] 606   st(0,                 [Y,Xpp])  # vIRQ_v5
              0045 dcfc  st   $fc,[y,x++] 607   st(0b11111100,        [Y,Xpp])  # Control register
              0046 dc00  st   $00,[y,x++] 608   st(0,                 [Y,Xpp])  # videoTop
                                          609
              0047 0002  ld   $02         610   ld(hi('ENTER'))                 # Active interpreter (vCPU,v6502) = vCPU
              0048 c202  st   [$02]       611   st([vCpuSelect])
                                          612
              0049 00ff  ld   $ff         613   ld(255)                         # Setup serial input
              004a c20e  st   [$0e]       614   st([frameCount])
              004b c20f  st   [$0f]       615   st([serialRaw])
              004c c210  st   [$10]       616   st([serialLast])
              004d c211  st   [$11]       617   st([buttonState])
              004e c212  st   [$12]       618   st([resetTimer])                # resetTimer<0 when entering Main.gcl
                                          619
              004f 0007  ld   $07         620   ld(0b0111)                      # LEDs |***O|
              0050 1880  ld   $80,out     621   ld(syncBits^hSync,OUT)
              0051 18c0  ld   $c0,out     622   ld(syncBits,OUT)
                                          623
              0052 0000  ld   $00         624   ld(0)
              0053 c200  st   [$00]       625   st([0])                         # Carry lookup ([0x80] in 1st line of vBlank)
              0054 c205  st   [$05]       626   st([channel])
              0055 c22c  st   [$2c]       627   st([soundTimer])
                                          628
              0056 000f  ld   $0f         629   ld(0b1111)                      # LEDs |****|
              0057 1880  ld   $80,out     630   ld(syncBits^hSync,OUT)
              0058 18c0  ld   $c0,out     631   ld(syncBits,OUT)
              0059 c213  st   [$13]       632   st([xout])                      # Setup for control by video loop
              005a c214  st   [$14]       633   st([xoutMask])
                                          634
              005b 1401  ld   $01,y       635   ld(hi('startVideo'),Y)          # Enter video loop at vertical blank
              005c e003  jmp  y,$03       636   jmp(Y,'startVideo')
              005d c22e  st   [$2e]       637   st([ledState_v2])               # Setting to 1..126 means "stopped"
                                          638
                                          639   #-----------------------------------------------------------------------
                                          640   # Extension SYS_Reset_88: Soft reset
                                          641   #-----------------------------------------------------------------------
                                          642
                                          643   # SYS_Reset_88 initiates an immediate Gigatron reset from within the vCPU.
                                          644   # The reset sequence itself is mostly implemented in GCL by Reset.gcl,
                                          645   # which must first be loaded into RAM. But as that takes more than 1 scanline,
                                          646   # some vCPU bootstrapping code gets loaded with SYS_Exec_88.
                                          647   # !!! This function was REMOVED from interface.json
                                          648   # !!! Better use vReset as generic entry point for soft reset
                                          649
                                          650   # ROM type (see also Docs/GT1-files.txt)
                                          651   romTypeValue = symbol('romTypeValue_ROMvX0')
                                          652
                                          653   label('SYS_Reset_88')
                                          654   assert pc()>>8 == 0
                                          655   assert (romTypeValue & 7) == 0
SYS_Reset_88: 005e 141f  ld   $1f,y       656   ld(hi('sys_Reset_88'),Y)        #15
              005f e041  jmp  y,$41       657   jmp(Y,'sys_Reset_88')           #16
              0060 0080  ld   $80         658   ld(romTypeValue)                #17 Set ROM type/version and clear channel mask
                                          659
                                          660
                                          661   # STPX implementation
                                          662   label('stpx#13')
stpx#13:      0061 0500  ld   [x]         663   ld([X])                         #13,
              0062 c21d  st   [$1d]       664   st([vTmp])                      #14,
              0063 de00  st   [y,x++]     665   st([Y,Xpp])                     #15, relies on being in page 0!
              0064 0500  ld   [x]         666   ld([X])                         #16, y
              0065 8500  adda [x]         667   adda([X])                       #17, y*2
              0066 1200  ld   ac,x        668   ld(AC,X)                        #18,
              0067 1401  ld   $01,y       669   ld(1,Y)                         #19, Y,X = 0x0100 + 2*y, (0 >= y <= 127)
              0068 0d00  ld   [y,x]       670   ld([Y,X])                       #20,
              0069 1600  ld   ac,y        671   ld(AC,Y)                        #21, Y = [Y,X]
              006a 112b  ld   [$2b],x     672   ld([sysArgs+7],X)               #22,
              006b 0500  ld   [x]         673   ld([X])                         #23, colour
              006c 111d  ld   [$1d],x     674   ld([vTmp],X)                    #24,
              006d ce00  st   [y,x]       675   st([Y,X])                       #25, [Y,X] = colour
              006e 1403  ld   $03,y       676   ld(hi('NEXTY'),Y)               #26,
              006f e000  jmp  y,$00       677   jmp(Y,'NEXTY')                  #27,
              0070 00f1  ld   $f1         678   ld(-30/2)                       #28,
                                          679
                                          680
              0071 0200  nop              681   align(0x80, size=0x80)
              0072 0200  nop
              0073 0200  nop
              * 15 times
                                          682   assert pc() == 0x80
                                          683
                                          684
                                          685   # ADDW moved to page0 to free up room for more instruction slots in page3
                                          686   # This implemetation of ADDW relies on Y=0 and hence cannot be dispatched from any other page
                                          687   label('addw#13')
addw#13:      0080 0118  ld   [$18]       688   ld([vAC])                       #13 Low byte
              0081 c21d  st   [$1d]       689   st([vTmp])                      #14 Store low result
              0082 8500  adda [x]         690   adda([X])                       #15
              0083 c218  st   [$18]       691   st([vAC])                       #16
              0084 e88f  blt  .addw#19    692   bmi('.addw#19')                 #17 Now figure out if there was a carry
              0085 0500  ld   [x]         693   ld([X])                         #18
              0086 de00  st   [y,x++]     694   st([Y,Xpp])                     #29
              0087 411d  ora  [$1d]       695   ora([vTmp])                     #20
              0088 e898  blt  .addw#23    696   bmi('.addw#23')                 #21 If Carry == 1
              0089 0500  ld   [x]         697   ld([X])                         #22
              008a 8119  adda [$19]       698   adda([vAC+1])                   #23
              008b c219  st   [$19]       699   st([vAC+1])                     #24 Store high result
              008c 1403  ld   $03,y       700   ld(hi('REENTER'),Y)             #25
              008d e0cb  jmp  y,$cb       701   jmp(Y,'REENTER')                #26
              008e 00f1  ld   $f1         702   ld(-30/2)                       #27
                                          703   label('.addw#19')
.addw#19:     008f de00  st   [y,x++]     704   st([Y,Xpp])                     #19
              0090 211d  anda [$1d]       705   anda([vTmp])                    #20
              0091 e898  blt  .addw#23    706   bmi('.addw#23')                 #21 If Carry == 1
              0092 0500  ld   [x]         707   ld([X])                         #22
              0093 8119  adda [$19]       708   adda([vAC+1])                   #23
              0094 c219  st   [$19]       709   st([vAC+1])                     #24 Store high result
              0095 1403  ld   $03,y       710   ld(hi('REENTER'),Y)             #25
              0096 e0cb  jmp  y,$cb       711   jmp(Y,'REENTER')                #26
              0097 00f1  ld   $f1         712   ld(-30/2)                       #27
                                          713   label('.addw#23')
.addw#23:     0098 8001  adda $01         714   adda(1)                         #23
              0099 8119  adda [$19]       715   adda([vAC+1])                   #24
              009a c219  st   [$19]       716   st([vAC+1])                     #25 Store high result
              009b 1403  ld   $03,y       717   ld(hi('NEXTY'),Y)               #26
              009c e000  jmp  y,$00       718   jmp(Y,'NEXTY')                  #27
              009d 00f1  ld   $f1         719   ld(-30/2)                       #28
                                          720
                                          721
                                          722   #-----------------------------------------------------------------------
                                          723   # Placeholders for future SYS functions. This works as a kind of jump
                                          724   # table. The indirection allows SYS implementations to be moved around
                                          725   # between ROM versions, at the expense of 2 clock cycles (or 1). When
                                          726   # the function is not present it just acts as a NOP. Of course, when a
                                          727   # SYS function must be patched or extended it needs to have budget for
                                          728   # that in its declared maximum cycle count.
                                          729   #
                                          730   # Technically the same goal can be achieved by starting each function
                                          731   # with 2 nop's, or by overdeclaring their duration in the first place
                                          732   # (a bit is still wise to do). But this can result in fragmentation
                                          733   # of future ROM images. The indirection avoids that.
                                          734   #
                                          735   # An added advantage of having these in ROM page 0 is that it saves one
                                          736   # byte when setting sysFn: LDI+STW (4 bytes) instead of LDWI+STW (5 bytes)
                                          737   #-----------------------------------------------------------------------
                                          738
                                          739   label('SYS_Multiply_s16_vX_66')
SYS_Multiply_s16_vX_66:
              009e 1419  ld   $19,y       740   ld(hi('sys_Multiply_s16'),Y)    #15 slot 0x9e
              009f e000  jmp  y,$00       741   jmp(Y,'sys_Multiply_s16')       #16
              00a0 012a  ld   [$2a]       742   ld([sysArgs+6])                 #17 load mask.lo
                                          743
                                          744   label('SYS_Divide_s16_vX_80')
SYS_Divide_s16_vX_80:
              00a1 1419  ld   $19,y       745   ld(hi('sys_Divide_s16'),Y)      #15 slot 0xa1
              00a2 e038  jmp  y,$38       746   jmp(Y,'sys_Divide_s16')         #16
              00a3 0128  ld   [$28]       747   ld([sysArgs+4])                 #17
                                          748
                                          749   label('SYS_DrawLine_vX_86')
SYS_DrawLine_vX_86:
              00a4 1419  ld   $19,y       750   ld(hi('sys_DrawLine'),Y)        #15 slot 0xa4
              00a5 e07f  jmp  y,$7f       751   jmp(Y,'sys_DrawLine')           #16
              00a6 01a3  ld   [$a3]       752   ld([0xA3])                      #17 fgcolour
                                          753
                                          754   label('SYS_ReceiveSerial1')
SYS_ReceiveSerial1:
              00a7 141a  ld   $1a,y       755   ld(hi('sys_ReceiveSerial1'),Y)  #15 slot 0xa7
              00a8 e000  jmp  y,$00       756   jmp(Y,'sys_ReceiveSerial1')     #16
              00a9 0109  ld   [$09]       757   ld([videoY])                    #17 scanline Y
                                          758
                                          759   label('SYS_WaitVBlank_vX_28')
SYS_WaitVBlank_vX_28:
              00aa 141a  ld   $1a,y       760   ld(hi('sys_WaitVBlank'),Y)      #15 slot 0xaa
              00ab e014  jmp  y,$14       761   jmp(Y,'sys_WaitVBlank')         #16
              00ac 0109  ld   [$09]       762   ld([videoY])                    #17 scanline Y
                                          763
                                          764   #-----------------------------------------------------------------------
                                          765   # Extension SYS_Exec_88: Load code from ROM into memory and execute it
                                          766   #-----------------------------------------------------------------------
                                          767   #
                                          768   # This loads the vCPU code with consideration of the current vSP
                                          769   # Used during reset, but also for switching between applications or for
                                          770   # loading data from ROM from within an application (overlays).
                                          771   #
                                          772   # ROM stream format is [<addrH> <addrL> <n&255> n*<byte>]* 0
                                          773   # on top of lookup tables.
                                          774   #
                                          775   # Variables:
                                          776   #       sysArgs[0:1]    ROM pointer (in)
                                          777   #       sysArgs[2:3]    RAM pointer (changed)
                                          778   #       sysArgs[4]      State counter (changed)
                                          779   #       vLR             vCPU continues here (in)
                                          780
                                          781   label('SYS_Exec_88')
SYS_Exec_88:  00ad 1412  ld   $12,y       782   ld(hi('sys_Exec'),Y)            #15 slot 0xad
              00ae e04f  jmp  y,$4f       783   jmp(Y,'sys_Exec')               #16
              00af 0000  ld   $00         784   ld(0)                           #17 Address of loader on zero page
                                          785
              00b0 1403  ld   $03,y       786   ld(hi('REENTER'),Y)             #15 slot 0xb0
              00b1 e0cb  jmp  y,$cb       787   jmp(Y,'REENTER')                #16
              00b2 00f6  ld   $f6         788   ld(-20/2)                       #17
                                          789
              00b3 1403  ld   $03,y       790   ld(hi('REENTER'),Y)             #15 slot 0xb3
              00b4 e0cb  jmp  y,$cb       791   jmp(Y,'REENTER')                #16
              00b5 00f6  ld   $f6         792   ld(-20/2)                       #17
                                          793
                                          794   label('SYS_SpritePattern_vX_134')
SYS_SpritePattern_vX_134:
              00b6 141e  ld   $1e,y       795   ld(hi('sys_SpritePattern'),Y)   #15 slot 0xb6
              00b7 e000  jmp  y,$00       796   jmp(Y,'sys_SpritePattern')      #16
              00b8 1124  ld   [$24],x     797   ld([sysArgs+0],X)               #17 src.lo
                                          798
                                          799   label('SYS_SortUint8Array_vX_52')
SYS_SortUint8Array_vX_52:
              00b9 141a  ld   $1a,y       800   ld(hi('sys_SortUint8Array'),Y)  #15 slot 0xb9
              00ba e01f  jmp  y,$1f       801   jmp(Y,'sys_SortUint8Array')     #16
              00bb 1525  ld   [$25],y     802   ld([sysArgs+1],Y)               #17 array pointer is in sysArgs0
                                          803
                                          804   label('SYS_SortSprites_vX_62')
SYS_SortSprites_vX_62:
              00bc 141c  ld   $1c,y       805   ld(hi('sys_SortSprites'),Y)     #15 slot 0xbc
              00bd e000  jmp  y,$00       806   jmp(Y,'sys_SortSprites')        #16
              00be 1525  ld   [$25],y     807   ld([sysArgs+1],Y)               #17 array pointer is in sysArgs0
                                          808
                                          809   label('SYS_SortViaIndices_vX_44')
SYS_SortViaIndices_vX_44:
              00bf 141a  ld   $1a,y       810   ld(hi('sys_SortViaIndices'),Y)  #15 slot 0xbf
              00c0 e066  jmp  y,$66       811   jmp(Y,'sys_SortViaIndices')     #16
              00c1 1525  ld   [$25],y     812   ld([sysArgs+1],Y)               #17 src pointer
                                          813
                                          814   label('SYS_MemCopyByte_vX_40')
SYS_MemCopyByte_vX_40:
              00c2 141b  ld   $1b,y       815   ld(hi('sys_MemCopyByte'),Y)     #15 slot 0xc2
              00c3 e000  jmp  y,$00       816   jmp(Y,'sys_MemCopyByte')        #16
              00c4 1525  ld   [$25],y     817   ld([sysArgs+1],Y)               #17 src pointer
                                          818
                                          819   label('SYS_MemCopyWord_vX_48')
SYS_MemCopyWord_vX_48:
              00c5 141b  ld   $1b,y       820   ld(hi('sys_MemCopyWord'),Y)     #15 slot 0xc5
              00c6 e018  jmp  y,$18       821   jmp(Y,'sys_MemCopyWord')        #16
              00c7 1525  ld   [$25],y     822   ld([sysArgs+1],Y)               #17 src pointer
                                          823
                                          824   label('SYS_MemCopyDWord_vX_58')
SYS_MemCopyDWord_vX_58:
              00c8 141b  ld   $1b,y       825   ld(hi('sys_MemCopyDWord'),Y)    #15 slot 0xc8
              00c9 e037  jmp  y,$37       826   jmp(Y,'sys_MemCopyDWord')       #16
              00ca 1525  ld   [$25],y     827   ld([sysArgs+1],Y)               #17 src pointer
                                          828
                                          829   label('SYS_DrawVLine_vX_66')
SYS_DrawVLine_vX_66:
              00cb 141d  ld   $1d,y       830   ld(hi('sys_DrawVLine'),Y)       #15 slot 0xcb
              00cc e085  jmp  y,$85       831   jmp(Y,'sys_DrawVLine')          #16
              00cd 1527  ld   [$27],y     832   ld([sysArgs+3],Y)               #17
                                          833
                                          834   label('SYS_DrawSprite_vX_132')
SYS_DrawSprite_vX_132:
              00ce 141d  ld   $1d,y       835   ld(hi('sys_DrawSprite'),Y)      #15 slot 0xce
              00cf e000  jmp  y,$00       836   jmp(Y,'sys_DrawSprite')         #16
              00d0 1182  ld   [$82],x     837   ld([0x82],X)                    #17 spriteX
                                          838
                                          839   label('SYS_DrawBullet_vX_140')
SYS_DrawBullet_vX_140:
              00d1 141e  ld   $1e,y       840   ld(hi('sys_DrawBullet'),Y)      #15 slot 0xd1
              00d2 e076  jmp  y,$76       841   jmp(Y,'sys_DrawBullet')         #16
              00d3 1182  ld   [$82],x     842   ld([0x82],X)                    #17, bulletX
                                          843
                                          844   label('SYS_CmpByteBounds_vX_54')
SYS_CmpByteBounds_vX_54:
              00d4 141f  ld   $1f,y       845   ld(hi('sys_CmpByteBounds'),Y)   #15 slot 0xd4
              00d5 e000  jmp  y,$00       846   jmp(Y,'sys_CmpByteBounds')      #16
              00d6 01bf  ld   [$bf]       847   ld([0xBF])                      #17 count
                                          848
                                          849   label('SYS_Divide_u168_vX_56')
SYS_Divide_u168_vX_56:
              00d7 141f  ld   $1f,y       850   ld(hi('sys_Divide_u168'),Y)     #15 slot 0xd7
              00d8 e05d  jmp  y,$5d       851   jmp(Y,'sys_Divide_u168')        #16
              00d9 0125  ld   [$25]       852   ld([sysArgs+1])                 #17
                                          853
                                          854   label('SYS_ReadPixel_vX_32')
SYS_ReadPixel_vX_32:
              00da 141b  ld   $1b,y       855   ld(hi('sys_ReadPixel'),Y)       #15 slot 0xda
              00db e060  jmp  y,$60       856   jmp(Y,'sys_ReadPixel')          #16
              00dc 0119  ld   [$19]       857   ld([vAC+1])                     #17 y
                                          858
                                          859   label('SYS_DrawPixel_vX_30')
SYS_DrawPixel_vX_30:
              00dd 141b  ld   $1b,y       860   ld(hi('sys_DrawPixel'),Y)       #15 slot 0xdd
              00de e06d  jmp  y,$6d       861   jmp(Y,'sys_DrawPixel')          #16
              00df 0125  ld   [$25]       862   ld([sysArgs+1])                 #17 y
                                          863
              00e0 1403  ld   $03,y       864   ld(hi('REENTER'),Y)             #15 slot 0xe0
              00e1 e0cb  jmp  y,$cb       865   jmp(Y,'REENTER')                #16
              00e2 00f6  ld   $f6         866   ld(-20/2)                       #17
                                          867
              00e3 1403  ld   $03,y       868   ld(hi('REENTER'),Y)             #15 slot 0xe3
              00e4 e0cb  jmp  y,$cb       869   jmp(Y,'REENTER')                #16
              00e5 00f6  ld   $f6         870   ld(-20/2)                       #17
                                          871
              00e6 1403  ld   $03,y       872   ld(hi('REENTER'),Y)             #15 slot 0xe6
              00e7 e0cb  jmp  y,$cb       873   jmp(Y,'REENTER')                #16
              00e8 00f6  ld   $f6         874   ld(-20/2)                       #17
                                          875
                                          876   #-----------------------------------------------------------------------
                                          877   # Extension SYS_StoreBytes_DEVROM_XXX
                                          878   #-----------------------------------------------------------------------
                                          879
              00e9 1403  ld   $03,y       880   ld(hi('REENTER'),Y)             #15 slot 0xe9
              00ea e0cb  jmp  y,$cb       881   jmp(Y,'REENTER')                #16
              00eb 00f6  ld   $f6         882   ld(-20/2)                       #17
                                          883
                                          884   #-----------------------------------------------------------------------
                                          885   # Extension SYS_LoadBytes_DEVROM_XXX
                                          886   #-----------------------------------------------------------------------
                                          887
                                          888   # Load object variables into zero-page
                                          889   # XXX Unfinished
                                          890   #
                                          891   # Variables
                                          892   #       vLR             Pointer to size byte + object variables
                                          893   #       $30...$30+n-1   Target location
                                          894
                                          895   label('SYS_LoadBytes_DEVROM_XXX')
SYS_LoadBytes_DEVROM_XXX:
              00ec 1412  ld   $12,y       896   ld(hi('sys_LoadBytes'),Y)       #15
              00ed e0ed  jmp  y,$ed       897   jmp(Y,'sys_LoadBytes')          #16
              00ee 151b  ld   [$1b],y     898   ld([vLR+1],Y)                   #17
                                          899
                                          900   #-----------------------------------------------------------------------
                                          901   # Extension SYS_ReadRomDir_v5_80
                                          902   #-----------------------------------------------------------------------
                                          903
                                          904   # Get next entry from ROM file system. Use vAC=0 to get the first entry.
                                          905
                                          906   # Variables:
                                          907   #       vAC             Start address of current entry (inout)
                                          908   #       sysArgs[0:7]    File name, padded with zeroes (out)
                                          909
                                          910   label('SYS_ReadRomDir_v5_80')
SYS_ReadRomDir_v5_80:
              00ef 14df  ld   $df,y       911   ld(hi('sys_ReadRomDir'),Y)      #15
              00f0 e093  jmp  y,$93       912   jmp(Y,'sys_ReadRomDir')         #16
              00f1 0119  ld   [$19]       913   ld([vAC+1])                     #17
                                          914
              00f2 0200  nop              915   fillers(until=symbol('SYS_Out_22') & 255)
              00f3 0200  nop
                                          916
                                          917   #-----------------------------------------------------------------------
                                          918   # Extension SYS_Out_22
                                          919   #-----------------------------------------------------------------------
                                          920
                                          921   # Send byte to output port
                                          922   #
                                          923   # Variables:
                                          924   #       vAC
                                          925
                                          926   label('SYS_Out_22')
SYS_Out_22:   00f4 1924  ld   [$24],out   927   ld([sysArgs+0],OUT)             #15
              00f5 0200  nop              928   nop()                           #16
              00f6 1403  ld   $03,y       929   ld(hi('REENTER'),Y)             #17
              00f7 e0cb  jmp  y,$cb       930   jmp(Y,'REENTER')                #18
              00f8 00f5  ld   $f5         931   ld(-22/2)                       #19
                                          932
                                          933   #-----------------------------------------------------------------------
                                          934   # Extension SYS_In_24
                                          935   #-----------------------------------------------------------------------
                                          936
                                          937   # Read a byte from the input port
                                          938   #
                                          939   # Variables:
                                          940   #       vAC
                                          941
                                          942   label('SYS_In_24')
SYS_In_24:    00f9 c318  st   in,[$18]    943   st(IN, [vAC])                   #15
              00fa 0000  ld   $00         944   ld(0)                           #16
              00fb c219  st   [$19]       945   st([vAC+1])                     #17
              00fc 0200  nop              946   nop()                           #18
              00fd 1403  ld   $03,y       947   ld(hi('REENTER'),Y)             #19
              00fe e0cb  jmp  y,$cb       948   jmp(Y,'REENTER')                #20
              00ff 00f4  ld   $f4         949   ld(-24/2)                       #21
                                          950
                                          951   assert pc()&255 == 0
                                          952
                                          953   #-----------------------------------------------------------------------
                                          954   #
                                          955   #  $0100 ROM page 1: Video loop vertical blank
                                          956   #
                                          957   #-----------------------------------------------------------------------
                                          958   align(0x100, size=0x100)
                                          959
                                          960   # Video off mode (also no sound, serial, timer, blinkenlights, ...).
                                          961   # For benchmarking purposes. This still has the overhead for the vTicks
                                          962   # administration, time slice granularity etc.
                                          963   label('videoZ')
                                          964   videoZ = pc()
videoZ:       0100 1502  ld   [$02],y     965   runVcpu(None, '---- novideo', returnTo=videoZ)
              0101 e0ff  jmp  y,$ff
              0102 007f  ld   $7f
                                          966
                                          967   label('startVideo')             # (Re)start of video signal from idle state
startVideo:   0103 00c0  ld   $c0         968   ld(syncBits)
                                          969
                                          970   # Start of vertical blank interval
                                          971   label('vBlankStart')
vBlankStart:  0104 c21f  st   [$1f]       972   st([videoSync0])                #32 Start of vertical blank interval
              0105 0080  ld   $80         973   ld(syncBits^hSync)              #33
              0106 c220  st   [$20]       974   st([videoSync1])                #34
                                          975
                                          976   # Reset line counter before vCPU can see it
              0107 00b3  ld   $b3         977   ld(videoYline0)                 #35
              0108 c209  st   [$09]       978   st([videoY])                    #36
                                          979
                                          980   # Update frame count and [0x80] (4 cycles)
              0109 0001  ld   $01         981   ld(1)                           #37 Reinitialize carry lookup, for robustness
              010a c280  st   [$80]       982   st([0x80])                      #38
              010b 810e  adda [$0e]       983   adda([frameCount])              #39 Frame counter
              010c c20e  st   [$0e]       984   st([frameCount])                #40
                                          985
                                          986   # Mix entropy (11 cycles)
              010d 6107  xora [$07]       987   xora([entropy+1])               #41 Mix entropy
              010e 610f  xora [$0f]       988   xora([serialRaw])               #42 Mix in serial input
              010f 8106  adda [$06]       989   adda([entropy+0])               #43
              0110 c206  st   [$06]       990   st([entropy+0])                 #44
              0111 8108  adda [$08]       991   adda([entropy+2])               #45 Some hidden state
              0112 c208  st   [$08]       992   st([entropy+2])                 #46
              0113 e816  blt  $0116       993   bmi(pc()+3)                     #47
              0114 fc17  bra  $0117       994   bra(pc()+3)                     #48
              0115 6053  xora $53         995   xora(64+16+2+1)                 #49
              0116 606c  xora $6c         996   xora(64+32+8+4)                 #49(!)
              0117 8107  adda [$07]       997   adda([entropy+1])               #50
              0118 c207  st   [$07]       998   st([entropy+1])                 #51
                                          999
                                          1000  # LED sequencer (18 cycles)
              0119 012d  ld   [$2d]       1001  ld([ledTimer])                  #52 Blinkenlight sequencer
              011a f01d  beq  $011d       1002  beq(pc()+3)                     #53
              011b fc1e  bra  $011e       1003  bra(pc()+3)                     #54
              011c a001  suba $01         1004  suba(1)                         #55
              011d 012f  ld   [$2f]       1005  ld([ledTempo])                  #55(!)
              011e c22d  st   [$2d]       1006  st([ledTimer])                  #56
              011f f022  beq  $0122       1007  beq(pc()+3)                     #57
              0120 fc23  bra  $0123       1008  bra(pc()+3)                     #58
              0121 0000  ld   $00         1009  ld(0)                           #59 Don't advance state
              0122 0001  ld   $01         1010  ld(1)                           #59(!) Advance state when timer passes through 0
              0123 812e  adda [$2e]       1011  adda([ledState_v2])             #60
              0124 ec27  bne  $0127       1012  bne(pc()+3)                     #61
              0125 fc28  bra  $0128       1013  bra(pc()+3)                     #62
              0126 00e8  ld   $e8         1014  ld(-24)                         #63 State 0 becomes -24, start of sequence
              0127 e42c  bgt  .leds#65    1015  bgt('.leds#65')                 #63(!) Catch the stopped state (>0)
              0128 c22e  st   [$2e]       1016  st([ledState_v2])               #64
              0129 8048  adda $48         1017  adda('.leds#69')                #65
              012a fe00  bra  ac          1018  bra(AC)                         #66 Jump to lookup table
              012b fc48  bra  .leds#69    1019  bra('.leds#69')                 #67 Single-instruction subroutine
                                          1020
                                          1021  label('.leds#65')
.leds#65:     012c 000f  ld   $0f         1022  ld(0x0f)                        #65 Maintain stopped state
              012d c22e  st   [$2e]       1023  st([ledState_v2])               #66
              012e fc48  bra  .leds#69    1024  bra('.leds#69')                 #67
              012f 2114  anda [$14]       1025  anda([xoutMask])                #68 Always clear sound bits (this is why AC=0x0f)
                                          1026
              0130 000f  ld   $0f         1027  ld(0b1111)                      #68 LEDs |****| offset -24 Low 4 bits are the LED output
              0131 0007  ld   $07         1028  ld(0b0111)                      #68 LEDs |***O|
              0132 0003  ld   $03         1029  ld(0b0011)                      #68 LEDs |**OO|
              0133 0001  ld   $01         1030  ld(0b0001)                      #68 LEDs |*OOO|
              0134 0002  ld   $02         1031  ld(0b0010)                      #68 LEDs |O*OO|
              0135 0004  ld   $04         1032  ld(0b0100)                      #68 LEDs |OO*O|
              0136 0008  ld   $08         1033  ld(0b1000)                      #68 LEDs |OOO*|
              0137 0004  ld   $04         1034  ld(0b0100)                      #68 LEDs |OO*O|
              0138 0002  ld   $02         1035  ld(0b0010)                      #68 LEDs |O*OO|
              0139 0001  ld   $01         1036  ld(0b0001)                      #68 LEDs |*OOO|
              013a 0003  ld   $03         1037  ld(0b0011)                      #68 LEDs |**OO|
              013b 0007  ld   $07         1038  ld(0b0111)                      #68 LEDs |***O|
              013c 000f  ld   $0f         1039  ld(0b1111)                      #68 LEDs |****|
              013d 000e  ld   $0e         1040  ld(0b1110)                      #68 LEDs |O***|
              013e 000c  ld   $0c         1041  ld(0b1100)                      #68 LEDs |OO**|
              013f 0008  ld   $08         1042  ld(0b1000)                      #68 LEDs |OOO*|
              0140 0004  ld   $04         1043  ld(0b0100)                      #68 LEDs |OO*O|
              0141 0002  ld   $02         1044  ld(0b0010)                      #68 LEDs |O*OO|
              0142 0001  ld   $01         1045  ld(0b0001)                      #68 LEDs |*OOO|
              0143 0002  ld   $02         1046  ld(0b0010)                      #68 LEDs |O*OO|
              0144 0004  ld   $04         1047  ld(0b0100)                      #68 LEDs |OO*O|
              0145 0008  ld   $08         1048  ld(0b1000)                      #68 LEDs |OOO*|
              0146 000c  ld   $0c         1049  ld(0b1100)                      #68 LEDs |OO**|
              0147 000e  ld   $0e         1050  ld(0b1110)                      #68 LEDs |O***| offset -1
                                          1051  label('.leds#69')
.leds#69:     0148 c214  st   [$14]       1052  st([xoutMask])                  #69 Sound bits will be re-enabled below
              0149 0010  ld   $10         1053  ld(vPulse*2)                    #70 vPulse default length when not modulated
              014a c20d  st   [$0d]       1054  st([videoPulse])                #71
                                          1055
                                          1056  # When the total number of scan lines per frame is not an exact multiple of the
                                          1057  # (4) channels, there will be an audible discontinuity if no measure is taken.
                                          1058  # This static noise can be suppressed by swallowing the first `lines mod 4'
                                          1059  # partial samples after transitioning into vertical blank. This is easiest if
                                          1060  # the modulo is 0 (do nothing), 1 (reset sample when entering the last visible
                                          1061  # scan line), or 2 (reset sample while in the first blank scan line). For the
                                          1062  # last case there is no solution yet: give a warning.
                                          1063  extra = 0
                                          1064  if soundDiscontinuity == 2:
                                          1065    st(sample, [sample])          # Sound continuity
                                          1066    extra += 1
                                          1067  if soundDiscontinuity > 2:
                                          1068    highlight('Warning: sound discontinuity not suppressed')
                                          1069
                                          1070  # vCPU interrupt
              014b 010e  ld   [$0e]       1071  ld([frameCount])                #72
                                          1072  beq('vBlankFirst#75')           #73
              014c f052  beq  vBlankFirst#75
                                          1073
              014d 0055  ld   $55         1074  runVcpu(186-74-extra,           #74 Application cycles (scan line 0)
              014e c21e  st   [$1e]
              014f 1502  ld   [$02],y
              0150 e0ff  jmp  y,$ff
              0151 0022  ld   $22
                                          1075      '---D line 0 no timeout',
                                          1076      returnTo='vBlankFirst#186')
                                          1077
                                          1078  label('vBlankFirst#75')
vBlankFirst#75:
              0152 1412  ld   $12,y       1079  ld(hi('vBlankFirst#78'),Y)      #75
              0153 e000  jmp  y,$00       1080  jmp(Y,'vBlankFirst#78')         #76
              0154 1401  ld   $01,y       1081  ld(hi(vIRQ_v5),Y)               #77
                                          1082  label('vBlankFirst#186')
                                          1083
                                          1084  # Mitigation for rogue channelMask (3 cycles)
vBlankFirst#186:
              0155 0121  ld   [$21]       1085  ld([channelMask])               #186 Normalize channelMask, for robustness
              0156 20fb  anda $fb         1086  anda(0b11111011)                #187
              0157 c221  st   [$21]       1087  st([channelMask])               #188
                                          1088
                                          1089  # Sound on/off (6 cycles)
              0158 012c  ld   [$2c]       1090  ld([soundTimer])                #189 Sound on/off
              0159 ec5c  bne  $015c       1091  bne(pc()+3)                     #190
              015a fc5d  bra  $015d       1092  bra(pc()+3)                     #191
              015b 0000  ld   $00         1093  ld(0)                           #192 Keeps sound unchanged (should be off here)
              015c 00f0  ld   $f0         1094  ld(0xf0)                        #192(!) Turns sound back on
              015d 4114  ora  [$14]       1095  ora([xoutMask])                 #193
              015e c214  st   [$14]       1096  st([xoutMask])                  #194
                                          1097
                                          1098  # Sound timer count down (5 cycles)
              015f 012c  ld   [$2c]       1099  ld([soundTimer])                #195 Sound timer
              0160 f063  beq  $0163       1100  beq(pc()+3)                     #196
              0161 fc64  bra  $0164       1101  bra(pc()+3)                     #197
              0162 a001  suba $01         1102  suba(1)                         #198
              0163 0000  ld   $00         1103  ld(0)                           #198
              0164 c22c  st   [$2c]       1104  st([soundTimer])                #199
                                          1105
              0165 191f  ld   [$1f],out   1106  ld([videoSync0],OUT)            #0 <New scan line start>
                                          1107  label('sound1')
sound1:       0166 0105  ld   [$05]       1108  ld([channel])                   #1 Advance to next sound channel
              0167 2121  anda [$21]       1109  anda([channelMask])             #2
              0168 8001  adda $01         1110  adda(1)                         #3
              0169 1920  ld   [$20],out   1111  ld([videoSync1],OUT)            #4 Start horizontal pulse
              016a d605  st   [$05],y     1112  st([channel],Y)                 #5
              016b 007f  ld   $7f         1113  ld(0x7f)                        #6 Update sound channel
              016c 29fe  anda [y,$fe]     1114  anda([Y,oscL])                  #7
              016d 89fc  adda [y,$fc]     1115  adda([Y,keyL])                  #8
              016e cafe  st   [y,$fe]     1116  st([Y,oscL])                    #9
              016f 3080  anda $80,x       1117  anda(0x80,X)                    #10
              0170 0500  ld   [x]         1118  ld([X])                         #11
              0171 89ff  adda [y,$ff]     1119  adda([Y,oscH])                  #12
              0172 89fd  adda [y,$fd]     1120  adda([Y,keyH])                  #13
              0173 caff  st   [y,$ff]     1121  st([Y,oscH])                    #14
              0174 20fc  anda $fc         1122  anda(0xfc)                      #15
              0175 69fb  xora [y,$fb]     1123  xora([Y,wavX])                  #16
              0176 1200  ld   ac,x        1124  ld(AC,X)                        #17
              0177 09fa  ld   [y,$fa]     1125  ld([Y,wavA])                    #18
              0178 1407  ld   $07,y       1126  ld(soundTable>>8,Y)             #19
              0179 8d00  adda [y,x]       1127  adda([Y,X])                     #20
              017a e87d  blt  $017d       1128  bmi(pc()+3)                     #21
              017b fc7e  bra  $017e       1129  bra(pc()+3)                     #22
              017c 203f  anda $3f         1130  anda(63)                        #23
              017d 003f  ld   $3f         1131  ld(63)                          #23(!)
              017e 8103  adda [$03]       1132  adda([sample])                  #24
              017f c203  st   [$03]       1133  st([sample])                    #25
                                          1134
              0180 0113  ld   [$13]       1135  ld([xout])                      #26 Gets copied to XOUT
              0181 1412  ld   $12,y       1136  ld(hi('vBlankLast#34'),Y)       #27 Prepare jumping out of page in last line
              0182 191f  ld   [$1f],out   1137  ld([videoSync0],OUT)            #28 End horizontal pulse
                                          1138
                                          1139  # Count through the vertical blank interval until its last scan line
              0183 0109  ld   [$09]       1140  ld([videoY])                    #29
                                          1141  bpl('.vBlankLast#32')           #30
              0184 f4b1  bge  .vBlankLast#32
              0185 8002  adda $02         1142  adda(2)                         #31
              0186 c209  st   [$09]       1143  st([videoY])                    #32
                                          1144
                                          1145  # Determine if we're in the vertical sync pulse
              0187 a0bd  suba $bd         1146  suba(1-2*(vBack+vPulse-1))      #33 Prepare sync values
              0188 ec8d  bne  .prepSync36 1147  bne('.prepSync36')              #34 Tests for start of vPulse
              0189 a10d  suba [$0d]       1148  suba([videoPulse])              #35
              018a 0040  ld   $40         1149  ld(syncBits^vSync)              #36 Entering vertical sync pulse
              018b fc92  bra  .prepSync39 1150  bra('.prepSync39')              #37
              018c c21f  st   [$1f]       1151  st([videoSync0])                #38
                                          1152  label('.prepSync36')
.prepSync36:  018d ec91  bne  .prepSync38 1153  bne('.prepSync38')              #36 Tests for end of vPulse
              018e 00c0  ld   $c0         1154  ld(syncBits)                    #37
              018f fc93  bra  .prepSync40 1155  bra('.prepSync40')              #38 Entering vertical back porch
              0190 c21f  st   [$1f]       1156  st([videoSync0])                #39
                                          1157  label('.prepSync38')
.prepSync38:  0191 011f  ld   [$1f]       1158  ld([videoSync0])                #38 Load current value
                                          1159  label('.prepSync39')
.prepSync39:  0192 0200  nop              1160  nop()                           #39
                                          1161  label('.prepSync40')
.prepSync40:  0193 6040  xora $40         1162  xora(hSync)                     #40 Precompute, as during the pulse there is no time
              0194 c220  st   [$20]       1163  st([videoSync1])                #41
                                          1164
                                          1165  # Capture the serial input before the '595 shifts it out
              0195 0109  ld   [$09]       1166  ld([videoY])                    #42 Capture serial input
              0196 60cf  xora $cf         1167  xora(1-2*(vBack-1-1))           #43 Exactly when the 74HC595 has captured all 8 controller bits
              0197 ec9a  bne  $019a       1168  bne(pc()+3)                     #44
              0198 fc9b  bra  $019b       1169  bra(pc()+3)                     #45
              0199 c30f  st   in,[$0f]    1170  st(IN, [serialRaw])             #46
              019a c000  st   $00,[$00]   1171  st(0,[0])                       #46(!) Reinitialize carry lookup, for robustness
                                          1172
                                          1173  # Update [xout] with the next sound sample every 4 scan lines.
                                          1174  # Keep doing this on 'videoC equivalent' scan lines in vertical blank.
              019b 0109  ld   [$09]       1175  ld([videoY])                    #47
              019c 2006  anda $06         1176  anda(6)                         #48
                                          1177  beq('vBlankSample')             #49
              019d f0a6  beq  vBlankSample
              019e 0103  ld   [$03]       1178  ld([sample])                    #50
                                          1179
                                          1180  label('vBlankNormal')
vBlankNormal: 019f 00a4  ld   $a4         1181  runVcpu(199-51, 'AB-D line 1-36')#51 Application cycles (vBlank scan lines without sound sample update)
              01a0 c21e  st   [$1e]
              01a1 1502  ld   [$02],y
              01a2 e0ff  jmp  y,$ff
              01a3 0034  ld   $34
              01a4 fc66  bra  sound1      1182  bra('sound1')                   #199
              01a5 191f  ld   [$1f],out   1183  ld([videoSync0],OUT)            #0 <New scan line start>
                                          1184
                                          1185  label('vBlankSample')
vBlankSample: 01a6 400f  ora  $0f         1186  ora(0x0f)                       #51 New sound sample is ready
              01a7 2114  anda [$14]       1187  anda([xoutMask])                #52
              01a8 c213  st   [$13]       1188  st([xout])                      #53
              01a9 c003  st   $03,[$03]   1189  st(sample, [sample])            #54 Reset for next sample
                                          1190
              01aa 00af  ld   $af         1191  runVcpu(199-55, '--C- line 3-39')#55 Application cycles (vBlank scan lines with sound sample update)
              01ab c21e  st   [$1e]
              01ac 1502  ld   [$02],y
              01ad e0ff  jmp  y,$ff
              01ae 0032  ld   $32
              01af fc66  bra  sound1      1192  bra('sound1')                   #199
              01b0 191f  ld   [$1f],out   1193  ld([videoSync0],OUT)            #0 <New scan line start>
                                          1194
                                          1195  #-----------------------------------------------------------------------
                                          1196
                                          1197  label('.vBlankLast#32')
.vBlankLast#32:
              01b1 e032  jmp  y,$32       1198  jmp(Y,'vBlankLast#34')          #32 Jump out of page for space reasons
                                          1199  #assert hi(controllerType) == hi(pc()) # Assume these share the high address
              01b2 1401  ld   $01,y       1200  ld(hi(pc()),Y)                  #33
                                          1201
                                          1202  label('vBlankLast#52')
                                          1203
                                          1204  # Respond to reset button (14 cycles)
                                          1205  # - ResetTimer decrements as long as just [Start] is pressed down
                                          1206  # - Reaching 0 (normal) or 128 (extended) triggers the soft reset sequence
                                          1207  # - Initial value is 128 (or 255 at boot), first decrement, then check
                                          1208  # - This starts vReset -> SYS_Reset_88 -> SYS_Exec_88 -> Reset.gcl -> Main.gcl
                                          1209  # - Main.gcl then recognizes extended presses if resetTimer is 0..127 ("paasei")
                                          1210  # - This requires a full cycle (4s) in the warm boot scenario
                                          1211  # - Or a half cycle (2s) when pressing [Select] down during hard reset
                                          1212  # - This furthermore requires >=1 frame (and <=128) to have passed between
                                          1213  #   reaching 128 and getting through Reset and the start of Main, while [Start]
                                          1214  #   was still pressed so the count reaches <128. Two reasonable expectations.
                                          1215  # - The unintended power-up scenarios of ROMv1 (pulling SER_DATA low, or
                                          1216  #   pressing [Select] together with another button) now don't trigger anymore.
                                          1217
vBlankLast#52:
              01b3 0111  ld   [$11]       1218  ld([buttonState])               #52 Check [Start] for soft reset
              01b4 60ef  xora $ef         1219  xora(~buttonStart)              #53
              01b5 ecbe  bne  .restart#56 1220  bne('.restart#56')              #54
              01b6 0112  ld   [$12]       1221  ld([resetTimer])                #55 As long as button pressed
              01b7 a001  suba $01         1222  suba(1)                         #56 ... count down the timer
              01b8 c212  st   [$12]       1223  st([resetTimer])                #57
              01b9 207f  anda $7f         1224  anda(127)                       #58
              01ba f0c6  beq  .restart#61 1225  beq('.restart#61')              #59 Reset at 0 (normal 2s) or 128 (extended 4s)
              01bb 00ee  ld   $ee         1226  ld((vReset&255)-2)              #60 Start force reset when hitting 0
              01bc fcc5  bra  .restart#63 1227  bra('.restart#63')              #61 ... otherwise do nothing yet
              01bd fcc4  bra  .restart#64 1228  bra('.restart#64')              #62
                                          1229  label('.restart#56')
.restart#56:  01be 0001  ld   $01         1230  wait(62-56)                     #56
              01bf ecbf  bne  $01bf
              01c0 a001  suba $01
              01c1 0200  nop
              01c2 0080  ld   $80         1231  ld(128)                         #62 Not pressed, reset the timer
              01c3 c212  st   [$12]       1232  st([resetTimer])                #63
                                          1233  label('.restart#64')
.restart#64:  01c4 fccb  bra  .restart#66 1234  bra('.restart#66')              #64
                                          1235  label('.restart#63')
.restart#63:  01c5 0200  nop              1236  nop()                           #63,65
                                          1237  label('.restart#61')
.restart#61:  01c6 c216  st   [$16]       1238  st([vPC])                       #61 Point vPC at vReset
              01c7 0001  ld   $01         1239  ld(vReset>>8)                   #62
              01c8 c217  st   [$17]       1240  st([vPC+1])                     #63
              01c9 0002  ld   $02         1241  ld(hi('ENTER'))                 #64 Set active interpreter to vCPU
              01ca c202  st   [$02]       1242  st([vCpuSelect])                #65
                                          1243  label('.restart#66')
                                          1244
                                          1245  # Switch video mode when (only) select is pressed (16 cycles)
                                          1246  # XXX We could make this a vCPU interrupt
.restart#66:  01cb 0111  ld   [$11]       1247  ld([buttonState])               #66 Check [Select] to switch modes
              01cc 60df  xora $df         1248  xora(~buttonSelect)             #67 Only trigger when just [Select] is pressed
              01cd ece2  bne  .select#70  1249  bne('.select#70')               #68
              01ce 010b  ld   [$0b]       1250  ld([videoModeC])                #69
              01cf e8d5  blt  .select#72  1251  bmi('.select#72')               #70 Branch when line C is off
              01d0 010a  ld   [$0a]       1252  ld([videoModeB])                #71 Rotate: Off->D->B->C
              01d1 c20b  st   [$0b]       1253  st([videoModeC])                #72
              01d2 010c  ld   [$0c]       1254  ld([videoModeD])                #73
              01d3 c20a  st   [$0a]       1255  st([videoModeB])                #74
              01d4 fcda  bra  .select#77  1256  bra('.select#77')               #75
                                          1257  label('.select#72')
.select#72:   01d5 00f6  ld   $f6         1258  ld('nopixels')                  #72,76
              01d6 000a  ld   $0a         1259  ld('pixels')                    #73 Reset: On->D->B->C
              01d7 c20b  st   [$0b]       1260  st([videoModeC])                #74
              01d8 c20a  st   [$0a]       1261  st([videoModeB])                #75
              01d9 0200  nop              1262  nop()                           #76
                                          1263  label('.select#77')
.select#77:   01da c20c  st   [$0c]       1264  st([videoModeD])                #77
              01db 0035  ld   $35         1265  wait(188-78)                    #78 Don't waste code space expanding runVcpu here
              01dc ecdc  bne  $01dc
              01dd a001  suba $01
              01de 0200  nop
                                          1266  # AC==255 now
              01df c211  st   [$11]       1267  st([buttonState])               #188
                                          1268  bra('vBlankEnd#191')            #189
              01e0 fcea  bra  vBlankEnd#191
              01e1 0000  ld   $00         1269  ld(0)                           #190
                                          1270  label('.select#70')
                                          1271
                                          1272  # Mitigation of runaway channel variable
.select#70:   01e2 0105  ld   [$05]       1273  ld([channel])                   #70 Normalize channel, for robustness
              01e3 2003  anda $03         1274  anda(0b00000011)                #71
              01e4 c205  st   [$05]       1275  st([channel])                   #72 Stop wild channel updates
                                          1276
              01e5 00ea  ld   $ea         1277  runVcpu(191-73, '---D line 40') #73 Application cycles (scan line 40)
              01e6 c21e  st   [$1e]
              01e7 1502  ld   [$02],y
              01e8 e0ff  jmp  y,$ff
              01e9 0025  ld   $25
                                          1278
                                          1279  # AC==0 now
                                          1280  label('vBlankEnd#191')
vBlankEnd#191:
              01ea 1401  ld   $01,y       1281  ld(videoTop_v5>>8,Y)            #191
              01eb 09f9  ld   [y,$f9]     1282  ld([Y,videoTop_v5])             #192
              01ec c209  st   [$09]       1283  st([videoY])                    #193
              01ed c21f  st   [$1f]       1284  st([frameX])                    #194
              01ee ecf1  bne  $01f1       1285  bne(pc()+3)                     #195
              01ef fcf2  bra  $01f2       1286  bra(pc()+3)                     #196
              01f0 0001  ld   $01         1287  ld('videoA')                    #197
              01f1 00ec  ld   $ec         1288  ld('videoF')                    #197(!)
              01f2 c20d  st   [$0d]       1289  st([nextVideo])                 #198
              01f3 0105  ld   [$05]       1290  ld([channel])                   #199 Advance to next sound channel
              01f4 2121  anda [$21]       1291  anda([channelMask])             #0 <New scan line start>
              01f5 8001  adda $01         1292  adda(1)                         #1
              01f6 1402  ld   $02,y       1293  ld(hi('sound2'),Y)              #2
              01f7 e0b1  jmp  y,$b1       1294  jmp(Y,'sound2')                 #3
              01f8 1880  ld   $80,out     1295  ld(syncBits^hSync,OUT)          #4 Start horizontal pulse
                                          1296
              01f9 0200  nop              1297  fillers(until=0xff)
              01fa 0200  nop
              01fb 0200  nop
              * 6 times
                                          1298
                                          1299  #-----------------------------------------------------------------------
                                          1300  # Return point for vCPU slices during visible screen area
                                          1301  #-----------------------------------------------------------------------
                                          1302
                                          1303  assert pc() == 0x1ff            # Enables runVcpu() to re-enter into the next page
              01ff fcae  bra  sound3      1304  bra('sound3')                   #200,0 <New scan line start>
                                          1305
                                          1306  #-----------------------------------------------------------------------
                                          1307  #
                                          1308  #  $0200 ROM page 2: Video loop visible scanlines
                                          1309  #
                                          1310  #-----------------------------------------------------------------------
                                          1311  align(0x100, size=0x100)
              0200 0105  ld   [$05]       1312  ld([channel])                   #1 Advance to next sound channel
                                          1313
                                          1314  # Back porch A: first of 4 repeated scan lines
                                          1315  # - Fetch next Yi and store it for retrieval in the next scan lines
                                          1316  # - Calculate Xi from dXi, but there is no cycle time left to store it as well
                                          1317  label('videoA')
videoA:       0201 00ca  ld   $ca         1318  ld('videoB')                    #29 1st scanline of 4 (always visible)
              0202 c20d  st   [$0d]       1319  st([nextVideo])                 #30
              0203 1401  ld   $01,y       1320  ld(videoTable>>8,Y)             #31
              0204 1109  ld   [$09],x     1321  ld([videoY],X)                  #32
              0205 0d00  ld   [y,x]       1322  ld([Y,X])                       #33
              0206 de00  st   [y,x++]     1323  st([Y,Xpp])                     #34 Just X++
              0207 c220  st   [$20]       1324  st([frameY])                    #35
              0208 0d00  ld   [y,x]       1325  ld([Y,X])                       #36
              0209 911f  adda [$1f],x     1326  adda([frameX],X)                #37
                                          1327  label('pixels')
pixels:       020a 1520  ld   [$20],y     1328  ld([frameY],Y)                  #38
              020b 00c0  ld   $c0         1329  ld(syncBits)                    #39
                                          1330
                                          1331  # Stream 160 pixels from memory location <Yi,Xi> onwards
                                          1332  # Superimpose the sync signal bits to be robust against misprogramming
                                          1333  for i in range(qqVgaWidth):
              020c 5d00  ora  [y,x++],out 1334    ora([Y,Xpp],OUT)              #40-199 Pixel burst
              020d 5d00  ora  [y,x++],out
              020e 5d00  ora  [y,x++],out
              * 160 times
              02ac 18c0  ld   $c0,out     1335  ld(syncBits,OUT)                #0 <New scan line start> Back to black
                                          1336
                                          1337  # Front porch
              02ad 0105  ld   [$05]       1338  ld([channel])                   #1 Advance to next sound channel
                                          1339  label('sound3')                 # Return from vCPU interpreter
sound3:       02ae 2121  anda [$21]       1340  anda([channelMask])             #2
              02af 8001  adda $01         1341  adda(1)                         #3
              02b0 1880  ld   $80,out     1342  ld(syncBits^hSync,OUT)          #4 Start horizontal pulse
                                          1343
                                          1344  # Horizontal sync and sound channel update for scanlines outside vBlank
                                          1345  label('sound2')
sound2:       02b1 d605  st   [$05],y     1346  st([channel],Y)                 #5
              02b2 007f  ld   $7f         1347  ld(0x7f)                        #6
              02b3 29fe  anda [y,$fe]     1348  anda([Y,oscL])                  #7
              02b4 89fc  adda [y,$fc]     1349  adda([Y,keyL])                  #8
              02b5 cafe  st   [y,$fe]     1350  st([Y,oscL])                    #9
              02b6 3080  anda $80,x       1351  anda(0x80,X)                    #10
              02b7 0500  ld   [x]         1352  ld([X])                         #11
              02b8 89ff  adda [y,$ff]     1353  adda([Y,oscH])                  #12
              02b9 89fd  adda [y,$fd]     1354  adda([Y,keyH])                  #13
              02ba caff  st   [y,$ff]     1355  st([Y,oscH] )                   #14
              02bb 20fc  anda $fc         1356  anda(0xfc)                      #15
              02bc 69fb  xora [y,$fb]     1357  xora([Y,wavX])                  #16
              02bd 1200  ld   ac,x        1358  ld(AC,X)                        #17
              02be 09fa  ld   [y,$fa]     1359  ld([Y,wavA])                    #18
              02bf 1407  ld   $07,y       1360  ld(soundTable>>8,Y)             #19
              02c0 8d00  adda [y,x]       1361  adda([Y,X])                     #20
              02c1 e8c4  blt  $02c4       1362  bmi(pc()+3)                     #21
              02c2 fcc5  bra  $02c5       1363  bra(pc()+3)                     #22
              02c3 203f  anda $3f         1364  anda(63)                        #23
              02c4 003f  ld   $3f         1365  ld(63)                          #23(!)
              02c5 8103  adda [$03]       1366  adda([sample])                  #24
              02c6 c203  st   [$03]       1367  st([sample])                    #25
                                          1368
              02c7 0113  ld   [$13]       1369  ld([xout])                      #26 Gets copied to XOUT
              02c8 fd0d  bra  [$0d]       1370  bra([nextVideo])                #27
              02c9 18c0  ld   $c0,out     1371  ld(syncBits,OUT)                #28 End horizontal pulse
                                          1372
                                          1373  # Back porch B: second of 4 repeated scan lines
                                          1374  # - Recompute Xi from dXi and store for retrieval in the next scan lines
                                          1375  label('videoB')
videoB:       02ca 00d3  ld   $d3         1376  ld('videoC')                    #29 2nd scanline of 4
              02cb c20d  st   [$0d]       1377  st([nextVideo])                 #30
              02cc 1401  ld   $01,y       1378  ld(videoTable>>8,Y)             #31
              02cd 0109  ld   [$09]       1379  ld([videoY])                    #32
              02ce 9001  adda $01,x       1380  adda(1,X)                       #33
              02cf 011f  ld   [$1f]       1381  ld([frameX])                    #34
              02d0 8d00  adda [y,x]       1382  adda([Y,X])                     #35
              02d1 fd0a  bra  [$0a]       1383  bra([videoModeB])               #36
              02d2 d21f  st   [$1f],x     1384  st([frameX],X)                  #37 Store in RAM and X
                                          1385
                                          1386  # Back porch C: third of 4 repeated scan lines
                                          1387  # - Nothing new to for video do as Yi and Xi are known,
                                          1388  # - This is the time to emit and reset the next sound sample
                                          1389  label('videoC')
videoC:       02d3 00dc  ld   $dc         1390  ld('videoD')                    #29 3rd scanline of 4
              02d4 c20d  st   [$0d]       1391  st([nextVideo])                 #30
              02d5 0103  ld   [$03]       1392  ld([sample])                    #31 New sound sample is ready (didn't fit in the audio loop)
              02d6 400f  ora  $0f         1393  ora(0x0f)                       #32
              02d7 2114  anda [$14]       1394  anda([xoutMask])                #33
              02d8 c213  st   [$13]       1395  st([xout])                      #34 Update [xout] with new sample (4 channels just updated)
              02d9 c003  st   $03,[$03]   1396  st(sample, [sample])            #35 Reset for next sample
              02da fd0b  bra  [$0b]       1397  bra([videoModeC])               #36
              02db 111f  ld   [$1f],x     1398  ld([frameX],X)                  #37
                                          1399
                                          1400  # Back porch D: last of 4 repeated scan lines
                                          1401  # - Calculate the next frame index
                                          1402  # - Decide if this is the last line or not
                                          1403  label('videoD')                 # Default video mode
videoD:       02dc 111f  ld   [$1f],x     1404  ld([frameX], X)                 #29 4th scanline of 4
              02dd 0109  ld   [$09]       1405  ld([videoY])                    #30
              02de a0ee  suba $ee         1406  suba((120-1)*2)                 #31
                                          1407  beq('.lastpixels#34')           #32
              02df f0e5  beq  .lastpixels#34
              02e0 80f0  adda $f0         1408  adda(120*2)                     #33 More pixel lines to go
              02e1 c209  st   [$09]       1409  st([videoY])                    #34
              02e2 0001  ld   $01         1410  ld('videoA')                    #35
              02e3 fd0c  bra  [$0c]       1411  bra([videoModeD])               #36
              02e4 c20d  st   [$0d]       1412  st([nextVideo])                 #37
                                          1413
                                          1414  label('.lastpixels#34')
                                          1415  if soundDiscontinuity == 1:
.lastpixels#34:
              02e5 c003  st   $03,[$03]   1416    st(sample, [sample])          #34 Sound continuity
                                          1417  else:
                                          1418    nop()                         #34
              02e6 00e9  ld   $e9         1419  ld('videoE')                    #35 No more pixel lines to go
              02e7 fd0c  bra  [$0c]       1420  bra([videoModeD])               #36
              02e8 c20d  st   [$0d]       1421  st([nextVideo])                 #37
                                          1422
                                          1423  # Back porch "E": after the last line
                                          1424  # - Go back and and enter vertical blank (program page 2)
                                          1425  label('videoE') # Exit visible area
videoE:       02e9 1401  ld   $01,y       1426  ld(hi('vBlankStart'),Y)         #29 Return to vertical blank interval
              02ea e004  jmp  y,$04       1427  jmp(Y,'vBlankStart')            #30
              02eb 00c0  ld   $c0         1428  ld(syncBits)                    #31
                                          1429
                                          1430  # Video mode that blacks out one or more pixel lines from the top of screen.
                                          1431  # This yields some speed, but also frees up screen memory for other purposes.
                                          1432  # Note: Sound output becomes choppier the more pixel lines are skipped
                                          1433  # Note: The vertical blank driver leaves 0x80 behind in [videoSync1]
                                          1434  label('videoF')
videoF:       02ec 0120  ld   [$20]       1435  ld([videoSync1])                #29 Completely black pixel line
              02ed 8080  adda $80         1436  adda(0x80)                      #30
              02ee d220  st   [$20],x     1437  st([videoSync1],X)              #31
              02ef 011f  ld   [$1f]       1438  ld([frameX])                    #32
              02f0 a500  suba [x]         1439  suba([X])                       #33 Decrements every two VGA scanlines
              02f1 f0f4  beq  .videoF#36  1440  beq('.videoF#36')               #34
              02f2 c21f  st   [$1f]       1441  st([frameX])                    #35
              02f3 fcf6  bra  nopixels    1442  bra('nopixels')                 #36
                                          1443  label('.videoF#36')
.videoF#36:   02f4 0001  ld   $01         1444  ld('videoA')                    #36,37 Transfer to visible screen area
              02f5 c20d  st   [$0d]       1445  st([nextVideo])                 #37
                                          1446  #
                                          1447  # Alternative for pixel burst: faster application mode
                                          1448  label('nopixels')
nopixels:     02f6 00ff  ld   $ff         1449  runVcpu(200-38, 'ABCD line 40-520',
              02f7 c21e  st   [$1e]
              02f8 1502  ld   [$02],y
              02f9 e0ff  jmp  y,$ff
              02fa 003b  ld   $3b
                                          1450    returnTo=0x1ff)               #38 Application interpreter (black scanlines)
                                          1451
                                          1452  #-----------------------------------------------------------------------
                                          1453  #
                                          1454  #  $0300 ROM page 3: Application interpreter primary page
                                          1455  #
                                          1456  #-----------------------------------------------------------------------
                                          1457
                                          1458  # Enter the timing-aware application interpreter (aka virtual CPU, vCPU)
                                          1459  #
                                          1460  # This routine will execute as many as possible instructions in the
                                          1461  # allotted time. When time runs out, it synchronizes such that the total
                                          1462  # duration matches the caller's request. Durations are counted in `ticks',
                                          1463  # which are multiples of 2 clock cycles.
                                          1464  #
                                          1465  # Synopsis: Use the runVcpu() macro as entry point
                                          1466
                                          1467  # We let 'ENTER' begin one word before the page boundary, for a bit extra
                                          1468  # precious space in the packed interpreter code page. Although ENTER's
                                          1469  # first instruction is bra() which normally doesn't cross page boundaries,
                                          1470  # in this case it will still jump into the right space, because branches
                                          1471  # from $xxFF land in the next page anyway.
                                          1472  while pc()&255 < 255:
              02fb 0200  nop              1473    nop()
              02fc 0200  nop
              02fd 0200  nop
              02fe 0200  nop
                                          1474  label('ENTER')
ENTER:        02ff fc03  bra  .next2      1475  bra('.next2')                   #0 Enter at '.next2' (so no startup overhead)
                                          1476  # --- Page boundary ---
                                          1477  align(0x100,size=0x100)
                                          1478  label('NEXTY')                  # Alternative for REENTER
NEXTY:        0300 1517  ld   [$17],y     1479  ld([vPC+1],Y)                   #1
                                          1480
                                          1481  # Fetch next instruction and execute it, but only if there are sufficient
                                          1482  # ticks left for the slowest instruction.
                                          1483  label('NEXT')
NEXT:         0301 8115  adda [$15]       1484  adda([vTicks])                  #0 Track elapsed ticks (actually counting down: AC<0)
              0302 e80b  blt  EXIT        1485  blt('EXIT')                     #1 Escape near time out
                                          1486  label('.next2')
.next2:       0303 c215  st   [$15]       1487  st([vTicks])                    #2
              0304 0116  ld   [$16]       1488  ld([vPC])                       #3 Advance vPC
              0305 8002  adda $02         1489  adda(2)                         #4
              0306 d216  st   [$16],x     1490  st([vPC],X)                     #5
              0307 0d00  ld   [y,x]       1491  ld([Y,X])                       #6 Fetch opcode (actually a branch target)
              0308 de00  st   [y,x++]     1492  st([Y,Xpp])                     #7 Just X++
              0309 fe00  bra  ac          1493  bra(AC)                         #8 Dispatch
              030a 0d00  ld   [y,x]       1494  ld([Y,X])                       #9 Prefetch operand
                                          1495
                                          1496  # Resync with video driver and transfer control
                                          1497  label('EXIT')
EXIT:         030b 800f  adda $0f         1498  adda(maxTicks)                  #3
                                          1499  label('RESYNC')
RESYNC:       030c e40c  bgt  RESYNC      1500  bgt(pc()&255)                   #4 Resync
              030d a001  suba $01         1501  suba(1)                         #5
              030e 1401  ld   $01,y       1502  ld(hi('vBlankStart'),Y)         #6
              030f e11e  jmp  y,[$1e]     1503  jmp(Y,[vReturn])                #7 To video driver
              0310 0000  ld   $00         1504  ld(0)                           #8 AC should be 0 already. Still..
                                          1505  assert vCPU_overhead ==          9
                                          1506
                                          1507  # pc = 0x0311, Opcode = 0x11
                                          1508  # Instruction LDWI: Load immediate word constant (vAC=D), 24 cycles
                                          1509  label('LDWI')
LDWI:         0311 140b  ld   $0b,y       1510  ld(hi('ldwi#13'),Y)             #10
              0312 e0b0  jmp  y,$b0       1511  jmp(Y,'ldwi#13')                #11
              0313 1517  ld   [$17],y     1512  ld([vPC+1],Y)                   #12
                                          1513
                                          1514  # pc = 0x0314, Opcode = 0x14
                                          1515  # Instruction DEC: Decrement byte var ([D]--), 22 cycles
                                          1516  label('DEC')
DEC:          0314 1416  ld   $16,y       1517  ld(hi('dec#13'),Y)              #10
              0315 e007  jmp  y,$07       1518  jmp(Y,'dec#13')                 #11
                                          1519  #dummy                          #12 Overlap
                                          1520  #
                                          1521  # pc = 0x0316, Opcode = 0x16
                                          1522  # Instruction MOVQB: Load a byte var with a small constant 0..255, 28 cycles
                                          1523  label('MOVQB')
MOVQB:        0316 1416  ld   $16,y       1524  ld(hi('movqb#13'),Y)            #10 #12
              0317 e061  jmp  y,$61       1525  jmp(Y,'movqb#13')               #11
                                          1526  #dummy                          #12 Overlap
                                          1527  #
                                          1528  # pc = 0x0318, Opcode = 0x18
                                          1529  # Instruction LSRB: Logical shift right on a byte var, 28 cycles
                                          1530  label('LSRB')
LSRB:         0318 1416  ld   $16,y       1531  ld(hi('lsrb#13'),Y)             #10 #12
              0319 e07e  jmp  y,$7e       1532  jmp(Y,'lsrb#13')                #11
                                          1533  #dummy                          #12 Overlap
                                          1534  #
                                          1535  # pc = 0x031a, Opcode = 0x1a
                                          1536  # Instruction LD: Load byte from zero page (vAC=[D]), 22 cycles
                                          1537  label('LD')
LD:           031a 1416  ld   $16,y       1538  ld(hi('ld#13'),Y)               #10 #12
              031b e00e  jmp  y,$0e       1539  jmp(Y,'ld#13')                  #11
                                          1540  #dummy                          #12 Overlap
                                          1541  #
                                          1542  # pc = 0x031c, Opcode = 0x1c
                                          1543  # Instruction LOKEQI: Loke immediate unsigned word into address contained in [vAC], 34 cycles
                                          1544  label('LOKEQI')
LOKEQI:       031c 142d  ld   $2d,y       1545  ld(hi('lokeqi#13'),Y)           #10 #12
              031d e0b4  jmp  y,$b4       1546  jmp(Y,'lokeqi#13')              #11
              031e c21d  st   [$1d]       1547  st([vTmp])                      #12 imm.1
                                          1548
                                          1549  # pc = 0x031f, Opcode = 0x1f
                                          1550  # Instruction CMPHS: Adjust high byte for signed compare (vACH=XXX), 28 cycles
                                          1551  label('CMPHS')
CMPHS:        031f 1417  ld   $17,y       1552  ld(hi('cmphs#13'),Y)            #10
              0320 e000  jmp  y,$00       1553  jmp(Y,'cmphs#13')               #11
                                          1554  #dummy                          #12 Overlap, not dependent on ld(AC,X) anymore
                                          1555  #
                                          1556  # pc = 0x0321, Opcode = 0x21
                                          1557  # Instruction LDW: Load word from zero page (vAC=[D]+256*[D+1]), 24 cycles
                                          1558  label('LDW')
LDW:          0321 1416  ld   $16,y       1559  ld(hi('ldw#13'),Y)              #10 #12
              0322 e0b9  jmp  y,$b9       1560  jmp(Y,'ldw#13')                 #11
                                          1561  #dummy                          #12 Overlap
                                          1562  #
                                          1563  # pc = 0x0323, Opcode = 0x23
                                          1564  # Instruction PEEK+: Peek byte at address contained in var, inc var, 30 cycles
                                          1565  label('PEEK+')
PEEK+:        0323 1404  ld   $04,y       1566  ld(hi('peek+#13'),Y)            #10 #12
              0324 e08f  jmp  y,$8f       1567  jmp(Y,'peek+#13')               #11
                                          1568  #dummy                          #12 Overlap
                                          1569  #
                                          1570  # pc = 0x0325, Opcode = 0x25
                                          1571  # Instruction POKEI: Poke immediate byte into address contained in [vAC], 20 cycles
                                          1572  label('POKEI')
POKEI:        0325 1417  ld   $17,y       1573  ld(hi('pokei#13'),Y)            #10 #12
              0326 e0bc  jmp  y,$bc       1574  jmp(Y,'pokei#13')               #11
                                          1575  #dummy                          #12 Overlap
                                          1576  #
                                          1577  # pc = 0x0327, Opcode = 0x27
                                          1578  # Instruction LSLV: Logical shift left word var, 28 cycles
                                          1579  label('LSLV')
LSLV:         0327 1416  ld   $16,y       1580  ld(hi('lslv#13'),Y)             #10 #12
              0328 e0a5  jmp  y,$a5       1581  jmp(Y,'lslv#13')                #11
                                          1582  #dummy                          #12 Overlap
                                          1583  #
                                          1584  # pc = 0x0329, Opcode = 0x29
                                          1585  # Instruction ADDBA: vAC += var.lo, 28 cycles
                                          1586  label('ADDBA')
ADDBA:        0329 1417  ld   $17,y       1587  ld(hi('addba#13'),Y)            #10 #12
              032a e078  jmp  y,$78       1588  jmp(Y,'addba#13')               #11
                                          1589  #dummy                          #12 Overlap
                                          1590  #
                                          1591  # pc = 0x032b, Opcode = 0x2b
                                          1592  # Instruction STW: Store word in zero page ([D],[D+1]=vAC&255,vAC>>8), 24 cycles
                                          1593  label('STW')
STW:          032b 1416  ld   $16,y       1594  ld(hi('stw#13'),Y)              #10 #12
              032c e0c3  jmp  y,$c3       1595  jmp(Y,'stw#13')                 #11
                                          1596  #dummy                          #12 Overlap
                                          1597  #
                                          1598  # pc = 0x032d, Opcode = 0x2d
                                          1599  # Instruction ADDBI: Add a constant 0..255 to byte var, 28 cycles
                                          1600  label('ADDBI')
ADDBI:        032d 1416  ld   $16,y       1601  ld(hi('addbi#13'),Y)            #10 #12
              032e e0da  jmp  y,$da       1602  jmp(Y,'addbi#13')               #11
                                          1603  #dummy                          #12 Overlap
                                          1604  #
                                          1605  # pc = 0x032f, Opcode = 0x2f
                                          1606  # Instruction PREFX2
                                          1607  label('PREFX2')
PREFX2:       032f 1414  ld   $14,y       1608  ld(hi('prefx2#13'),Y)           #10 #12
              0330 e0ed  jmp  y,$ed       1609  jmp(Y,'prefx2#13')              #11
              0331 c22b  st   [$2b]       1610  st([sysArgs+7])                 #12 Operand
                                          1611
                                          1612  # pc = 0x0332, Opcode = 0x32
                                          1613  # Instruction DBNE:  Decrement byte var and branch if not zero, 28 cycles
                                          1614  label('DBNE')
DBNE:         0332 1415  ld   $15,y       1615  ld(hi('dbne#13'),Y)             #10
              0333 e053  jmp  y,$53       1616  jmp(Y,'dbne#13')                #11
              0334 1517  ld   [$17],y     1617  ld([vPC+1],Y)                   #12 vPC.hi
                                          1618
                                          1619  # pc = 0x0335, Opcode = 0x35
                                          1620  # Instruction BCC: Test AC sign and branch conditionally, variable, (24-26), cycles
                                          1621  label('BCC')
BCC:          0335 fe00  bra  ac          1622  bra(AC)                         #10 AC is the conditional operand
              0336 de00  st   [y,x++]     1623  st([Y,Xpp])                     #11 X++
                                          1624
                                          1625  # pc = 0x0337, Opcode = 0x37
                                          1626  # Instruction DOKEI: Doke immediate word into address contained in [vAC], 30 cycles
                                          1627  label('DOKEI')
DOKEI:        0337 1417  ld   $17,y       1628  ld(hi('dokei#13'),Y)            #10
              0338 e0c2  jmp  y,$c2       1629  jmp(Y,'dokei#13')               #11
                                          1630  #dummy                          #12 Overlap
                                          1631  #
                                          1632  # pc = 0x0339, Opcode = 0x39
                                          1633  # Instruction PEEKV: Read byte from address contained in var, 30 cycles
                                          1634  label('PEEKV')
PEEKV:        0339 1416  ld   $16,y       1635  ld(hi('peekv#13'),Y)            #10
              033a e086  jmp  y,$86       1636  jmp(Y,'peekv#13')               #11
                                          1637  #dummy                          #12 Overlap
                                          1638  #
                                          1639  # pc = 0x033b, Opcode = 0x3b
                                          1640  # Instruction DEEKV: Read word from address contained in var, 28 cycles
                                          1641  label('DEEKV')
DEEKV:        033b 1416  ld   $16,y       1642  ld(hi('deekv#13'),Y)            #10 #12
              033c e095  jmp  y,$95       1643  jmp(Y,'deekv#13')               #11
                                          1644  #dummy                          #12 Overlap
                                          1645  #
                                          1646  # pc = 0x033d, Opcode = 0x3d
                                          1647  # Instruction LOKEI: Loke immediate long into address contained in [vAC], 42 cycles
                                          1648  label('LOKEI')
LOKEI:        033d 142d  ld   $2d,y       1649  ld(hi('lokei#13'),Y)            #10
              033e e0ce  jmp  y,$ce       1650  jmp(Y,'lokei#13')               #11
                                          1651  #dummy                          #12 Overlap
                                          1652  #
                                          1653  # pc = 0x033f, Opcode = 0x3f
                                          1654  # Conditional EQ: Branch if zero (if(vACL==0)vPCL=D)
              033f 1417  ld   $17,y       1655  ld(hi('beq#15'),Y)              #12 #12
              0340 e019  jmp  y,$19       1656  jmp(Y,'beq#15')                 #13
              0341 1517  ld   [$17],y     1657  ld([vPC+1],Y)                   #14 vPC.hi
                                          1658
                                          1659  # pc = 0x0342, Opcode = 0x42
                                          1660  # Instruction ADDVI: Add 8bit immediate to 16bit zero page var, var += imm, vAC = var, 50 cycles
                                          1661  label('ADDVI')
ADDVI:        0342 1428  ld   $28,y       1662  ld(hi('addvi#13'),Y)            #10
              0343 e000  jmp  y,$00       1663  jmp(Y,'addvi#13')               #11
                                          1664  #dummy                          #12 Overlap
                                          1665
                                          1666  # pc = 0x0344, Opcode = 0x44
                                          1667  # Instruction SUBVI: Subtract 8bit immediate from 16bit zero page var, var -= imm, vAC = var, 50 cycles
                                          1668  label('SUBVI')
SUBVI:        0344 1428  ld   $28,y       1669  ld(hi('subvi#13'),Y)            #10
              0345 e039  jmp  y,$39       1670  jmp(Y,'subvi#13')               #11
                                          1671  #dummy                          #12 Overlap
                                          1672
                                          1673  # pc = 0x0346, Opcode = 0x46
                                          1674  # Instruction DOKE+: doke word in vAC to address contained in var, var += 2, 30 cycles
                                          1675  label('DOKE+')
DOKE+:        0346 1418  ld   $18,y       1676  ld(hi('doke+#13'),Y)            #10 #12
              0347 e012  jmp  y,$12       1677  jmp(Y,'doke+#13')               #11
                                          1678  #dummy                          #12 Overlap
                                          1679  #
                                          1680  # pc = 0x0348, Opcode = 0x48
                                          1681  # Instruction NOTB: var.lo = ~var.lo, 22 cycles
                                          1682  label('NOTB')
NOTB:         0348 1418  ld   $18,y       1683  ld(hi('notb#13'),Y)             #10 #12
              0349 e00b  jmp  y,$0b       1684  jmp(Y,'notb#13')                #11
                                          1685  #dummy                          #12 Overlap
                                          1686  #
                                          1687  # pc = 0x034a, Opcode = 0x4a
                                          1688  # Instruction DJGE:
                                          1689  label('DJGE')
DJGE:         034a 142b  ld   $2b,y       1690  ld(hi('djge#13'),Y)             #10 #12
              034b e000  jmp  y,$00       1691  jmp(Y,'djge#13')                #11
              034c 1517  ld   [$17],y     1692  ld([vPC+1],Y)                   #12
                                          1693
                                          1694  # pc = 0x034d, Opcode = 0x4d
                                          1695  # Conditional GT: Branch if positive (if(vACL>0)vPCL=D)
              034d 1417  ld   $17,y       1696  ld(hi('bgt#15'),Y)              #12
              034e e035  jmp  y,$35       1697  jmp(Y,'bgt#15')                 #13
              034f 1517  ld   [$17],y     1698  ld([vPC+1],Y)                   #14 vPC.hi
                                          1699
                                          1700  # pc = 0x0350, Opcode = 0x50
                                          1701  # Conditional LT: Branch if negative (if(vACL<0)vPCL=D)
              0350 1417  ld   $17,y       1702  ld(hi('blt#15'),Y)              #12
              0351 e04a  jmp  y,$4a       1703  jmp(Y,'blt#15')                 #13
              0352 1517  ld   [$17],y     1704  ld([vPC+1],Y)                   #14 vPC.hi
                                          1705
                                          1706  # pc = 0x0353, Opcode = 0x53
                                          1707  # Conditional GE: Branch if positive or zero (if(vACL>=0)vPCL=D)
              0353 1417  ld   $17,y       1708  ld(hi('bge#15'),Y)              #12
              0354 e057  jmp  y,$57       1709  jmp(Y,'bge#15')                 #13
              0355 1517  ld   [$17],y     1710  ld([vPC+1],Y)                   #14 vPC.hi
                                          1711
                                          1712  # pc = 0x0356, Opcode = 0x56
                                          1713  # Conditional LE: Branch if negative or zero (if(vACL<=0)vPCL=D)
              0356 1417  ld   $17,y       1714  ld(hi('ble#15'),Y)              #12
              0357 e064  jmp  y,$64       1715  jmp(Y,'ble#15')                 #13
              0358 1517  ld   [$17],y     1716  ld([vPC+1],Y)                   #14 vPC.hi
                                          1717
                                          1718  # pc = 0x0359, Opcode = 0x59
                                          1719  # Instruction LDI: Load immediate small positive constant (vAC=D), 20 cycles
                                          1720  label('LDI')
LDI:          0359 1416  ld   $16,y       1721  ld(hi('ldi#13'),Y)              #10
              035a e016  jmp  y,$16       1722  jmp(Y,'ldi#13')                 #11
                                          1723  #dummy                          #12 Overlap
                                          1724  #
                                          1725  # pc = 0x035b, Opcode = 0x5b
                                          1726  # Instruction MOVQW: Load a word var with a small constant 0..255, 30 cycles
                                          1727  label('MOVQW')
MOVQW:        035b 1416  ld   $16,y       1728  ld(hi('movqw#13'),Y)            #10 #12
              035c e06e  jmp  y,$6e       1729  jmp(Y,'movqw#13')               #11
              035d 1517  ld   [$17],y     1730  ld([vPC+1],Y)                   #12 vPC.hi
                                          1731
                                          1732  # pc = 0x035e, Opcode = 0x5e
                                          1733  # Instruction ST: Store byte in zero page ([D]=vAC&255), 20 cycles
                                          1734  label('ST')
ST:           035e 1416  ld   $16,y       1735  ld(hi('st#13'),Y)               #10
              035f e01c  jmp  y,$1c       1736  jmp(Y,'st#13')                  #11
                                          1737  #dummy                          #12 Overlap
                                          1738  #
                                          1739  # pc = 0x0360, Opcode = 0x60
                                          1740  # Instruction DEEK+: Deek word at address contained in var, var += 2, 30 cycles
                                          1741  label('DEEK+')
DEEK+:        0360 1417  ld   $17,y       1742  ld(hi('deek+#13'),Y)            #10 #12
              0361 e0d1  jmp  y,$d1       1743  jmp(Y,'deek+#13')               #11
              0362 1400  ld   $00,y       1744  ld(0,Y)                         #12
                                          1745
                                          1746  # pc = 0x0363, Opcode = 0x63
                                          1747  # Instruction POP: Pop address from stack (vLR,vSP==[vSP]+256*[vSP+1],vSP+2), 30 cycles
                                          1748  label('POP')
POP:          0363 140b  ld   $0b,y       1749  ld(hi('pop#13'),Y)              #10
              0364 e0ba  jmp  y,$ba       1750  jmp(Y,'pop#13')                 #11
                                          1751  #dummy                          #12 Overlap
                                          1752  #
                                          1753  # pc = 0x0365, Opcode = 0x65
                                          1754  # Instruction MOV: Moves a byte from src var to dst var, 28 cycles
                                          1755  label('MOV')
MOV:          0365 1416  ld   $16,y       1756  ld(hi('mov#13'),Y)              #10
              0366 e02c  jmp  y,$2c       1757  jmp(Y,'mov#13')                 #11
                                          1758  #dummy                          #12 Overlap
                                          1759  #
                                          1760  # pc = 0x0367, Opcode = 0x67
                                          1761  # Instruction PEEKA: Peek a byte from [vAC] to var, 24 cycles
                                          1762  label('PEEKA')
PEEKA:        0367 1416  ld   $16,y       1763  ld(hi('peeka#13'),Y)            #10 #12
              0368 e03a  jmp  y,$3a       1764  jmp(Y,'peeka#13')               #11
                                          1765  #dummy                          #12 Overlap
                                          1766  #
                                          1767  # pc = 0x0369, Opcode = 0x69
                                          1768  # Instruction POKEA: Poke a byte from var to [vAC], 22 cycles
                                          1769  label('POKEA')
POKEA:        0369 1417  ld   $17,y       1770  ld(hi('pokea#13'),Y)            #10 #12
              036a e0a4  jmp  y,$a4       1771  jmp(Y,'pokea#13')               #11
                                          1772  #dummy                          #12 Overlap
                                          1773
                                          1774  # pc = 0x036b, Opcode = 0x6b
                                          1775  # Instruction TEQ: Test for EQ, returns 0x0000 or 0x0101 in vAC, 28 cycles
                                          1776  label('TEQ')
TEQ:          036b 1415  ld   $15,y       1777  ld(hi('teq#13'),Y)              #10 #12
              036c e066  jmp  y,$66       1778  jmp(Y,'teq#13')                 #11
                                          1779  #dummy                          #12 Overlap
                                          1780  #
                                          1781  # pc = 0x036d, Opcode = 0x6d
                                          1782  # Instruction TNE: Test for NE, returns 0x0000 or 0x0101 in vAC, 28 cycles
                                          1783  label('TNE')
TNE:          036d 1415  ld   $15,y       1784  ld(hi('tne#13'),Y)              #10 #12
              036e e075  jmp  y,$75       1785  jmp(Y,'tne#13')                 #11
                                          1786  #dummy                          #12 Overlap
                                          1787  #
                                          1788  # pc = 0x036f, Opcode = 0x6f
                                          1789  # Instruction DEEKA: Deek a word from [vAC] to var, 30 cycles
                                          1790  label('DEEKA')
DEEKA:        036f 1416  ld   $16,y       1791  ld(hi('deeka#13'),Y)            #10, #12
              0370 e043  jmp  y,$43       1792  jmp(Y,'deeka#13')               #11
              0371 c21d  st   [$1d]       1793  st([vTmp])                      #12 mask
                                          1794
                                          1795  # pc = 0x0372, Opcode = 0x72
                                          1796  # Conditional NE: Branch if not zero (if(vACL!=0)vPCL=D)
              0372 1417  ld   $17,y       1797  ld(hi('bne#15'),Y)              #12
              0373 e027  jmp  y,$27       1798  jmp(Y,'bne#15')                 #13
              0374 1517  ld   [$17],y     1799  ld([vPC+1],Y)                   #14 vPC.hi
                                          1800
                                          1801  # pc = 0x0375, Opcode = 0x75
                                          1802  # Instruction PUSH: Push vLR on stack ([vSP-2],v[vSP-1],vSP=vLR&255,vLR>>8,vLR-2), 30 cycles
                                          1803  label('PUSH')
PUSH:         0375 140b  ld   $0b,y       1804  ld(hi('push#13'),Y)             #10
              0376 e0ca  jmp  y,$ca       1805  jmp(Y,'push#13')                #11
                                          1806  #dummy                          #12 Overlap
                                          1807  #
                                          1808  # pc = 0x0377, Opcode = 0x77
                                          1809  # Instruction SUBBA: vAC -= var.lo, 28 cycles
                                          1810  label('SUBBA')
SUBBA:        0377 1417  ld   $17,y       1811  ld(hi('subba#13'),Y)            #10 #12
              0378 e08e  jmp  y,$8e       1812  jmp(Y,'subba#13')               #11
                                          1813  #dummy                          #12 Overlap
                                          1814  #
                                          1815  # pc = 0x0379, Opcode = 0x79
                                          1816  # Instruction INCW: Increment word var, 26 cycles
                                          1817  label('INCW')
INCW:         0379 1415  ld   $15,y       1818  ld(hi('incw#13'),Y)             #10
              037a e034  jmp  y,$34       1819  jmp(Y,'incw#13')                #11
                                          1820  #dummy                          #12 Overlap
                                          1821  #
                                          1822  # pc = 0x037b, Opcode = 0x7b
                                          1823  # Instruction DECW: Decrement word var, 26 cycles
                                          1824  label('DECW')
DECW:         037b 1415  ld   $15,y       1825  ld(hi('decw#13'),Y)             #10 #12
              037c e043  jmp  y,$43       1826  jmp(Y,'decw#13')                #11
                                          1827  #dummy                          #12 Overlap
                                          1828  #
                                          1829  # pc = 0x037d, Opcode = 0x7d
                                          1830  # Instruction DOKEA: Doke a word from var to [vAC], 30 cycles
                                          1831  label('DOKEA')
DOKEA:        037d 1417  ld   $17,y       1832  ld(hi('dokea#13'),Y)            #10 #12
              037e e0ac  jmp  y,$ac       1833  jmp(Y,'dokea#13')               #11
                                          1834  #dummy                          #12 Overlap
                                          1835
                                          1836  # pc = 0x037f, Opcode = 0x7f
                                          1837  # Instruction LUP: ROM lookup (vAC=ROM[vAC+D]), 26 cycles
                                          1838  label('LUP')
LUP:          037f 1519  ld   [$19],y     1839  ld([vAC+1],Y)                   #10 #12
              0380 e0fb  jmp  y,$fb       1840  jmp(Y,251)                      #11 Trampoline offset
              0381 8118  adda [$18]       1841  adda([vAC])                     #12
                                          1842
                                          1843  # pc = 0x0382, Opcode = 0x82
                                          1844  # Instruction ANDI: Logical-AND with small constant (vAC&=D), 20 cycles
                                          1845  label('ANDI')
ANDI:         0382 1404  ld   $04,y       1846  ld(hi('andi#13'),Y)             #10
              0383 e022  jmp  y,$22       1847  jmp(Y,'andi#13')                #11
              0384 2118  anda [$18]       1848  anda([vAC])                     #12
                                          1849
                                          1850  # pc = 0x0385, Opcode = 0x85
                                          1851  # Instruction CALLI: Goto immediate address and remember vPC (vLR,vPC=vPC+3,$HHLL-2), 28 cycles
                                          1852  label('CALLI')
CALLI:        0385 140b  ld   $0b,y       1853  ld(hi('calli#13'),Y)            #10
              0386 e0d8  jmp  y,$d8       1854  jmp(Y,'calli#13')               #11
              0387 0116  ld   [$16]       1855  ld([vPC])                       #12
                                          1856
                                          1857  # pc = 0x0388, Opcode = 0x88
                                          1858  # Instruction ORI: Logical-OR with small constant (vAC|=D), 20 cycles
                                          1859  label('ORI')
ORI:          0388 1416  ld   $16,y       1860  ld(hi('ori#13'),Y)              #10
              0389 e022  jmp  y,$22       1861  jmp(Y,'ori#13')                 #11
                                          1862  #dummy                          #12 Overlap
                                          1863  #
                                          1864  # pc = 0x038a, Opcode = 0x8a
                                          1865  # Instruction PEEKA+: Peek a byte from [vAC] to var, incw vAC, 28 to 30 cycles
                                          1866  label('PEEKA+')
PEEKA+:       038a 1414  ld   $14,y       1867  ld(hi('peeka+#13'),Y)           #10
              038b e046  jmp  y,$46       1868  jmp(Y,'peeka+#13')              #11
                                          1869  #dummy                          #12 Overlap
                                          1870  #
                                          1871  # pc = 0x038c, Opcode = 0x8c
                                          1872  # Instruction XORI: Logical-XOR with small constant (vAC^=D), 20 cycles
                                          1873  label('XORI')
XORI:         038c 1418  ld   $18,y       1874  ld(hi('xori#13'),Y)             #10 #12
              038d e022  jmp  y,$22       1875  jmp(Y,'xori#13')                #11
                                          1876  #dummy                          #12 Overlap
                                          1877  #
                                          1878  # pc = 0x038e, Opcode = 0x8e
                                          1879  # Instruction DBGE:  Decrement byte var and branch if >= 0, 30 cycles
                                          1880  label('DBGE')
DBGE:         038e 1418  ld   $18,y       1881  ld(hi('dbge#13'),Y)             #10
              038f e030  jmp  y,$30       1882  jmp(Y,'dbge#13')                #11
                                          1883  #dummy                          #12 Overlap
                                          1884  #
                                          1885  # pc = 0x0390, Opcode = 0x90
                                          1886  # Instruction BRA: Branch unconditionally (vPC=(vPC&0xff00)+D), 18 cycles
                                          1887  label('BRA')
BRA:          0390 1418  ld   $18,y       1888  ld(hi('bra#13'),Y)              #10
              0391 e02d  jmp  y,$2d       1889  jmp(Y,'bra#13')                 #11
              0392 c216  st   [$16]       1890  st([vPC])                       #12
                                          1891
                                          1892  # pc = 0x0393, Opcode = 0x93
                                          1893  # Instruction INC: Increment zero page byte ([D]++), 20 cycles
                                          1894  label('INC')
INC:          0393 1416  ld   $16,y       1895  ld(hi('inc#13'),Y)              #10
              0394 e000  jmp  y,$00       1896  jmp(Y,'inc#13')                 #11
                                          1897  #dummy                          #12 Overlap
                                          1898  #
                                          1899  # pc = 0x0395, Opcode = 0x95
                                          1900  # Instruction SPARE1:
                                          1901  label('SPARE1')
SPARE1:       0395 1403  ld   $03,y       1902  ld(hi('SPARE1'),Y)              #10 #12
              0396 e095  jmp  y,$95       1903  jmp(Y,'SPARE1')                 #11
                                          1904  #dummy                          #12 Overlap
                                          1905  #
                                          1906  # pc = 0x0397, Opcode = 0x97
                                          1907  # Instruction CMPHU: Adjust high byte for unsigned compare (vACH=XXX), 28 cycles
                                          1908  label('CMPHU')
CMPHU:        0397 1417  ld   $17,y       1909  ld(hi('cmphu#13'),Y)            #10 #12
              0398 e00e  jmp  y,$0e       1910  jmp(Y,'cmphu#13')               #11
                                          1911  #dummy                          #12 Overlap, not dependent on ld(AC,X) anymore
                                          1912  #
                                          1913  # pc = 0x0399, Opcode = 0x99
                                          1914  # Instruction ADDW: Word addition with zero page (vAC+=[D]+256*[D+1]), 30 cycles
                                          1915  label('ADDW')
ADDW:         0399 1400  ld   $00,y       1916  ld(hi('addw#13'),Y)             #10 #12
              039a e080  jmp  y,$80       1917  jmp(Y,'addw#13')                #11 Y=0
              039b 1200  ld   ac,x        1918  ld(AC,X)                        #12 Address of low byte to be added
                                          1919
                                          1920  # pc = 0x039c, Opcode = 0x9c
                                          1921  # Instruction LDNI: Load an 8bit immediate as a negative 16bit immediate into vAC, 22 cycles
                                          1922  label('LDNI')
LDNI:         039c 1418  ld   $18,y       1923  ld(hi('ldni#13'),Y)             #10
              039d e044  jmp  y,$44       1924  jmp(Y,'ldni#13')                #11
                                          1925  #dummy                          #12 Overlap
                                          1926
                                          1927  # pc = 0x039e, Opcode = 0x9e
                                          1928  # Instruction ANDBK: vAC = var & imm, 30 cycles
                                          1929  label('ANDBK')
ANDBK:        039e 1418  ld   $18,y       1930  ld(hi('andbk#13'),Y)            #10
              039f e04c  jmp  y,$4c       1931  jmp(Y,'andbk#13')               #11
                                          1932  #dummy                          #12 Overlap
                                          1933
                                          1934  # pc = 0x03a0, Opcode = 0xa0
                                          1935  # Instruction ORBK: vAC = var | imm, 30 cycles
                                          1936  label('ORBK')
ORBK:         03a0 1418  ld   $18,y       1937  ld(hi('orbk#13'),Y)             #10
              03a1 e05c  jmp  y,$5c       1938  jmp(Y,'orbk#13')                #11
                                          1939  #dummy                          #12 Overlap
                                          1940
                                          1941  # pc = 0x03a2, Opcode = 0xa2
                                          1942  # Instruction XORBK: vAC = var ^ imm, 30 cycles
                                          1943  label('XORBK')
XORBK:        03a2 1418  ld   $18,y       1944  ld(hi('xorbk#13'),Y)            #10
              03a3 e06c  jmp  y,$6c       1945  jmp(Y,'xorbk#13')               #11
                                          1946  #dummy                          #12 Overlap
                                          1947
                                          1948  # pc = 0x03a4, Opcode = 0xa4, 26 to 46 cycles
                                          1949  # Instruction DJNE:
                                          1950  label('DJNE')
DJNE:         03a4 142a  ld   $2a,y       1951  ld(hi('djne#13'),Y)             #10
              03a5 e0a6  jmp  y,$a6       1952  jmp(Y,'djne#13')                #11
              03a6 1517  ld   [$17],y     1953  ld([vPC+1],Y)                   #12
                                          1954
                                          1955  # pc = 0x03a7, Opcode = 0xa7
                                          1956  # Instruction CMPI: Compare byte variable to 8bit immediate, 36 to 36 cycles
                                          1957  label('CMPI')
CMPI:         03a7 1418  ld   $18,y       1958  ld(hi('cmpi#13'),Y)             #10
              03a8 e07c  jmp  y,$7c       1959  jmp(Y,'cmpi#13')                #11
                                          1960  #dummy                          #12 Overlap
                                          1961
                                          1962  # pc = 0x03a9, Opcode = 0xa9
                                          1963  # Instruction ADDVW: Add two 16bit zero page vars, dst += src, vAC = dst, 28 to 54 cycles
                                          1964  label('ADDVW')
ADDVW:        03a9 1414  ld   $14,y       1965  ld(hi('addvw#13'),Y)            #10 #12
              03aa e05b  jmp  y,$5b       1966  jmp(Y,'addvw#13')               #11
                                          1967  #dummy                          #12 Overlap
                                          1968
                                          1969  # pc = 0x03ab, Opcode = 0xab
                                          1970  # Instruction SUBVW: Subtract two 16bit zero page vars, dst -= src, vAC = dst, 30 to 54 cycles
                                          1971  label('SUBVW')
SUBVW:        03ab 1414  ld   $14,y       1972  ld(hi('subvw#13'),Y)            #10 #12
              03ac e0a4  jmp  y,$a4       1973  jmp(Y,'subvw#13')               #11
                                          1974  #dummy                          #12 Overlap
                                          1975
                                          1976  # pc = 0x03ad, Opcode = 0xad
                                          1977  # Instruction PEEK: Read byte from memory (vAC=[vAC]), 26 cycles
                                          1978  label('PEEK')
PEEK:         03ad 1404  ld   $04,y       1979  ld(hi('peek#13'),Y)             #10 #12
              03ae e052  jmp  y,$52       1980  jmp(Y,'peek#13')                #11
                                          1981  #dummy                          #12 Overlap
                                          1982  #
                                          1983  # The 'SYS' vCPU instruction first checks the number of desired ticks given by
                                          1984  # the operand. As long as there are insufficient ticks available in the current
                                          1985  # time slice, the instruction will be retried. This will effectively wait for
                                          1986  # the next scan line if the current slice is almost out of time. Then a jump to
                                          1987  # native code is made. This code can do whatever it wants, but it must return
                                          1988  # to the 'REENTER' label when done. When returning, AC must hold (the negative
                                          1989  # of) the actual consumed number of whole ticks for the entire virtual
                                          1990  # instruction cycle (from NEXT to NEXT). This duration may not exceed the prior
                                          1991  # declared duration in the operand + 28 (or maxTicks). The operand specifies the
                                          1992  # (negative) of the maximum number of *extra* ticks that the native call will
                                          1993  # need. The GCL compiler automatically makes this calculation from gross number
                                          1994  # of cycles to excess number of ticks.
                                          1995  # SYS functions can modify vPC to implement repetition. For example to split
                                          1996  # up work into multiple chucks.
                                          1997  label('.sys#13')
.sys#13:      03af 1418  ld   $18,y       1998  ld(hi('.sys#16'),Y)             #13
              03b0 e000  jmp  y,$00       1999  jmp(Y,'.sys#16')                #14
                                          2000  #dummy                          #15 Overlap
                                          2001  #
                                          2002  # pc = 0x03b1, Opcode = 0xb1
                                          2003  # Instruction PREFX1
                                          2004  label('PREFX1')
PREFX1:       03b1 1414  ld   $14,y       2005  ld(hi('prefx1#13'),Y)           #10 #12
              03b2 e0f5  jmp  y,$f5       2006  jmp(Y,'prefx1#13')              #11
              03b3 0023  ld   $23         2007  ld(hi('PREFX1_PAGE'))           #12 ENTER is at $(n-1)ff, where n = instruction page
                                          2008
                                          2009  # pc = 0x03b4, Opcode = 0xb4
                                          2010  # Instruction SYS: Native call, <=256 cycles (<=128 ticks, in reality less)
                                          2011  label('SYS')
SYS:          03b4 8115  adda [$15]       2012  adda([vTicks])                  #10
              03b5 e8af  blt  .sys#13     2013  blt('.sys#13')                  #11
              03b6 1523  ld   [$23],y     2014  ld([sysFn+1],Y)                 #12
              03b7 e122  jmp  y,[$22]     2015  jmp(Y,[sysFn])                  #13
                                          2016  #dummy                          #14 Overlap
                                          2017  #
                                          2018  # pc = 0x03b8, Opcode = 0xb8
                                          2019  # Instruction SUBW: Word subtract with zero page (AC-=[D]+256*[D+1]), 30 cycles
                                          2020  label('SUBW')
SUBW:         03b8 140b  ld   $0b,y       2021  ld(hi('subw#13'),Y)             #10 #14
              03b9 e0e4  jmp  y,$e4       2022  jmp(Y,'subw#13')                #11 Y=0
              03ba 1200  ld   ac,x        2023  ld(AC,X)                        #12 Address of low byte to be added
                                          2024
                                          2025  # pc = 0x03bb, Opcode = 0xbb
                                          2026  # Instruction JEQ: jump to 16bit address if vAC=0
                                          2027  label('JEQ')
JEQ:          03bb 1418  ld   $18,y       2028  ld(hi('jeq#13'),Y)              #10
              03bc e0a2  jmp  y,$a2       2029  jmp(Y,'jeq#13')                 #11
                                          2030  #dummy                          #12 Overlap
                                          2031  #
                                          2032  # pc = 0x03bd, Opcode = 0xbd
                                          2033  # Instruction JNE: jump to 16bit address if vAC!=0
                                          2034  label('JNE')
JNE:          03bd 1418  ld   $18,y       2035  ld(hi('jne#13'),Y)              #10 #12
              03be e0b4  jmp  y,$b4       2036  jmp(Y,'jne#13')                 #11
                                          2037  #dummy                          #12 Overlap
                                          2038  #
                                          2039  # pc = 0x03bf, Opcode = 0xbf
                                          2040  # Instruction JLT: jump to 16bit address if vAC<0
                                          2041  label('JLT')
JLT:          03bf 1418  ld   $18,y       2042  ld(hi('jlt#13'),Y)              #10 #12
              03c0 e0c6  jmp  y,$c6       2043  jmp(Y,'jlt#13')                 #11
                                          2044  #dummy                          #12 Overlap
                                          2045  #
                                          2046  # pc = 0x03c1, Opcode = 0xc1
                                          2047  # Instruction JGT: jump to 16bit address if vAC>0
                                          2048  label('JGT')
JGT:          03c1 1414  ld   $14,y       2049  ld(hi('jgt#13'),Y)              #10 #12
              03c2 e000  jmp  y,$00       2050  jmp(Y,'jgt#13')                 #11
                                          2051  #dummy                          #12 Overlap
                                          2052  #
                                          2053  # pc = 0x03c3, Opcode = 0xc3
                                          2054  # Instruction JLE: jump to 16bit address if vAC<=0
                                          2055  label('JLE')
JLE:          03c3 1414  ld   $14,y       2056  ld(hi('jle#13'),Y)              #10 #12
              03c4 e019  jmp  y,$19       2057  jmp(Y,'jle#13')                 #11
                                          2058  #dummy                          #12 Overlap
                                          2059  #
                                          2060  # pc = 0x03c5, Opcode = 0xc5
                                          2061  # Instruction JGE: jump to 16bit address if vAC>=0
                                          2062  label('JGE')
JGE:          03c5 1414  ld   $14,y       2063  ld(hi('jge#13'),Y)              #10 #12
              03c6 e035  jmp  y,$35       2064  jmp(Y,'jge#13')                 #11
                                          2065  #dummy                          #12 Overlap
                                          2066  #
                                          2067  # pc = 0x03c7, Opcode = 0xc7
                                          2068  # Instruction PREFX3: switches instruction page to 0x2200
                                          2069  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2099#p2099
                                          2070  label('PREFX3')
PREFX3:       03c7 1414  ld   $14,y       2071  ld(hi('prefx3#13'),Y)           #10 #12
              03c8 e0e5  jmp  y,$e5       2072  jmp(Y,'prefx3#13')              #11
              03c9 c22b  st   [$2b]       2073  st([sysArgs+7])                 #12 Second operand
                                          2074
                                          2075  # SYS calls and instruction implementations rely on these labels
                                          2076  label('REENTER_28')
REENTER_28:   03ca 00f2  ld   $f2         2077  ld(-28/2)                       #25
                                          2078  label('REENTER')
REENTER:      03cb fc01  bra  NEXT        2079  bra('NEXT')                     #26 Return from SYS calls
              03cc 1517  ld   [$17],y     2080  ld([vPC+1],Y)                   #27
                                          2081
                                          2082  fillers(until=0xcd)
                                          2083
                                          2084  #
                                          2085  # The instructions below are all implemented in the second code page. Jumping
                                          2086  # back and forth makes each 6 cycles slower, but it also saves space in the
                                          2087  # primary page for the instructions above. Most of them are in fact not very
                                          2088  # critical, as evidenced by the fact that they weren't needed for the first
                                          2089  # Gigatron applications (Snake, Racer, Mandelbrot, Loader). By providing them
                                          2090  # in this way, at least they don't need to be implemented as a SYS extension.
                                          2091  #
                                          2092  # pc = 0x03cd, Opcode = 0xcd
                                          2093  # Instruction DEF: Define data or code (vAC,vPC=vPC+2,(vPC&0xff00)+D), 26 cycles
                                          2094  label('DEF')
DEF:          03cd 1404  ld   $04,y       2095  ld(hi('def#13'),Y)              #10
              03ce e017  jmp  y,$17       2096  jmp(Y,'def#13')                 #11
                                          2097  #dummy                          #12 Overlap
                                          2098  #
                                          2099  # pc = 0x03cf, Opcode = 0xcf
                                          2100  # Instruction CALL: Goto address and remember vPC (vLR,vPC=vPC+2,[D]+256*[D+1]-2), 30 cycles
                                          2101  label('CALL')
CALL:         03cf 1404  ld   $04,y       2102  ld(hi('call#13'),Y)             #10, #12
              03d0 e007  jmp  y,$07       2103  jmp(Y,'call#13')                #11
                                          2104  #dummy                          #12 Overlap
                                          2105  #
                                          2106  # pc = 0x03d1, Opcode = 0xd1
                                          2107  # Instruction POKE+: Poke byte in vAC to address contained in var, inc var, 30 cycles
                                          2108  label('POKE+')
POKE+:        03d1 1416  ld   $16,y       2109  ld(hi('poke+#13'),Y)            #10 #12
              03d2 e0cc  jmp  y,$cc       2110  jmp(Y,'poke+#13')               #11
                                          2111  #dummy                          #12 Overlap
                                          2112  #
                                          2113  # pc = 0x03d3, Opcode = 0xd3
                                          2114  # Instruction LSRV: Logical shift right word var, 56 cycles
                                          2115  label('LSRV')
LSRV:         03d3 142c  ld   $2c,y       2116  ld(hi('lsrv#13'),Y)             #10 #12
              03d4 e048  jmp  y,$48       2117  jmp(Y,'lsrv#13')                #11
                                          2118  #dummy                          #12 Overlap
                                          2119  #
                                          2120  # pc = 0x03d5, Opcode = 0xd5
                                          2121  # Instruction TGE: Test for GE, returns 0x0000 or 0x0101 in vAC, 26 cycles
                                          2122  label('TGE')
TGE:          03d5 1415  ld   $15,y       2123  ld(hi('tge#13'),Y)              #10 #12
              03d6 e084  jmp  y,$84       2124  jmp(Y,'tge#13')                 #11
                                          2125  #dummy                          #12 Overlap
                                          2126  #
                                          2127  # pc = 0x03d7, Opcode = 0xd7
                                          2128  # Instruction TLT: Test for LT, returns 0x0000 or 0x0101 in vAC, 26 cycles
                                          2129  label('TLT')
TLT:          03d7 1415  ld   $15,y       2130  ld(hi('tlt#13'),Y)             #10 #12
              03d8 e092  jmp  y,$92       2131  jmp(Y,'tlt#13')                #11
                                          2132  #dummy                         #12 Overlap
                                          2133  #
                                          2134  # pc = 0x03d9, Opcode = 0xd9
                                          2135  # Instruction TGT: Test for GT, returns 0x0000 or 0x0101 in vAC, 28 cycles
                                          2136  label('TGT')
TGT:          03d9 1415  ld   $15,y       2137  ld(hi('tgt#13'),Y)             #10 #12
              03da e0a0  jmp  y,$a0       2138  jmp(Y,'tgt#13')                #11
                                          2139  #dummy                         #12 Overlap
                                          2140  #
                                          2141  # pc = 0x03db, Opcode = 0xdb
                                          2142  # Instruction TLE: Test for LE, returns 0x0000 or 0x0101 in vAC
                                          2143  label('TLE')
TLE:          03db 1415  ld   $15,y       2144  ld(hi('tle#13'),Y)             #10 #12
              03dc e0b6  jmp  y,$b6       2145  jmp(Y,'tle#13')                #11
                                          2146  #dummy                         #12 Overlap
                                          2147  #
                                          2148  # pc = 0x03dd, Opcode = 0xdd
                                          2149  # Instruction SPARE2:
                                          2150  label('SPARE2')
SPARE2:       03dd 1403  ld   $03,y       2151  ld(hi('SPARE2'),Y)             #10 #12
              03de e0dd  jmp  y,$dd       2152  jmp(Y,'SPARE2')                #11
                                          2153  #dummy                         #12 Overlap
                                          2154  #
                                          2155  # pc = 0x03df, Opcode = 0xdf
                                          2156  # Instruction ALLOC: Create or destroy stack frame (vSP+=D), 20 cycles
                                          2157  label('ALLOC')
ALLOC:        03df 1416  ld   $16,y       2158  ld(hi('alloc#13'),Y)           #10
              03e0 e027  jmp  y,$27       2159  jmp(Y,'alloc#13')              #11
                                          2160  #dummy                         #12 Overlap
                                          2161  #
                                          2162  # pc = 0x03e1, Opcode = 0xe1
                                          2163  # Instruction SUBBI: Subtract a constant 0..255 from a byte var, 28 cycles
                                          2164  label('SUBBI')
SUBBI:        03e1 1416  ld   $16,y       2165  ld(hi('subbi#13'),Y)            #10 #12
              03e2 e053  jmp  y,$53       2166  jmp(Y,'subbi#13')               #11
                                          2167  #dummy                          #12 Overlap
                                          2168  #
                                          2169  # pc = 0x03e3, Opcode = 0xe3
                                          2170  # Instruction ADDI: Add small positive constant (vAC+=D), 26 cycles
                                          2171  label('ADDI')
ADDI:         03e3 1415  ld   $15,y       2172  ld(hi('addi#13'),Y)             #10 #12
              03e4 e000  jmp  y,$00       2173  jmp(Y,'addi#13')                #11
              03e5 c21d  st   [$1d]       2174  st([vTmp])                      #12
                                          2175
                                          2176  # pc = 0x03e6, Opcode = 0xe6
                                          2177  # Instruction SUBI: Subtract small positive constant (vAC+=D), 26 cycles
                                          2178  label('SUBI')
SUBI:         03e6 1415  ld   $15,y       2179  ld(hi('subi#13'),Y)             #10
              03e7 e014  jmp  y,$14       2180  jmp(Y,'subi#13')                #11
              03e8 c21d  st   [$1d]       2181  st([vTmp])                      #12
                                          2182
                                          2183  # pc = 0x03e9, Opcode = 0xe9
                                          2184  # Instruction LSLW: Logical shift left (vAC<<=1), 28 cycles
                                          2185  # Useful, because ADDW can't add vAC to itself. Also more compact.
                                          2186  label('LSLW')
LSLW:         03e9 1404  ld   $04,y       2187  ld(hi('lslw#13'),Y)             #10
              03ea e028  jmp  y,$28       2188  jmp(Y,'lslw#13')                #11
              03eb 0118  ld   [$18]       2189  ld([vAC])                       #12
                                          2190
                                          2191  # pc = 0x03ec, Opcode = 0xec
                                          2192  # Instruction STLW: Store word in stack frame ([vSP+D],[vSP+D+1]=vAC&255,vAC>>8), 24 cycles
                                          2193  label('STLW')
STLW:         03ec 1404  ld   $04,y       2194  ld(hi('stlw#13'),Y)             #10
              03ed e034  jmp  y,$34       2195  jmp(Y,'stlw#13')                #11
                                          2196  #dummy()                        #12 Overlap
                                          2197  #
                                          2198  # pc = 0x03ee, Opcode = 0xee
                                          2199  # Instruction LDLW: Load word from stack frame (vAC=[vSP+D]+256*[vSP+D+1]), 24 cycles
                                          2200  label('LDLW')
LDLW:         03ee 1404  ld   $04,y       2201  ld(hi('ldlw#13'),Y)             #10,12
              03ef e03d  jmp  y,$3d       2202  jmp(Y,'ldlw#13')                #11
                                          2203  #dummy()                        #12 Overlap
                                          2204  #
                                          2205  # pc = 0x03f0, Opcode = 0xf0
                                          2206  # Instruction POKE: Write byte in memory ([[D+1],[D]]=vAC&255), 26 cycles
                                          2207  label('POKE')
POKE:         03f0 1404  ld   $04,y       2208  ld(hi('poke#13'),Y)             #10,12
              03f1 e047  jmp  y,$47       2209  jmp(Y,'poke#13')                #11
              03f2 c21d  st   [$1d]       2210  st([vTmp])                      #12
                                          2211
                                          2212  # pc = 0x03f3, Opcode = 0xf3
                                          2213  # Instruction DOKE: Write word in memory ([[D+1],[D]],[[D+1],[D]+1]=vAC&255,vAC>>8), 28 cycles
                                          2214  label('DOKE')
DOKE:         03f3 1404  ld   $04,y       2215  ld(hi('doke#13'),Y)             #10
              03f4 e05e  jmp  y,$5e       2216  jmp(Y,'doke#13')                #11
              03f5 c21d  st   [$1d]       2217  st([vTmp])                      #12
                                          2218
                                          2219  # pc = 0x03f6, Opcode = 0xf6
                                          2220  # Instruction DEEK: Read word from memory (vAC=[vAC]+256*[vAC+1]), 28 cycles
                                          2221  label('DEEK')
DEEK:         03f6 1404  ld   $04,y       2222  ld(hi('deek#13'),Y)             #10
              03f7 e06b  jmp  y,$6b       2223  jmp(Y,'deek#13')                #11
                                          2224  #dummy()                        #12 Overlap
                                          2225  #
                                          2226  # pc = 0x03f8, Opcode = 0xf8
                                          2227  # Instruction ANDW: Word logical-AND with zero page (vAC&=[D]+256*[D+1]), 28 cycles
                                          2228  label('ANDW')
ANDW:         03f8 1404  ld   $04,y       2229  ld(hi('andw#13'),Y)             #10,12
              03f9 e077  jmp  y,$77       2230  jmp(Y,'andw#13')                #11
                                          2231  #dummy()                        #12 Overlap
                                          2232  #
                                          2233  # pc = 0x03fa, Opcode = 0xfa
                                          2234  # Instruction ORW: Word logical-OR with zero page (vAC|=[D]+256*[D+1]), 28 cycles
                                          2235  label('ORW')
ORW:          03fa 1404  ld   $04,y       2236  ld(hi('orw#13'),Y)              #10,12
              03fb e083  jmp  y,$83       2237  jmp(Y,'orw#13')                 #11
                                          2238  #dummy()                        #12 Overlap
                                          2239  #
                                          2240  # pc = 0x03fc, Opcode = 0xfc
                                          2241  # Instruction XORW: Word logical-XOR with zero page (vAC^=[D]+256*[D+1]), 28 cycles
                                          2242  label('XORW')
XORW:         03fc 1415  ld   $15,y       2243  ld(hi('xorw#13'),Y)             #10,12
              03fd e029  jmp  y,$29       2244  jmp(Y,'xorw#13')                #11
              03fe 1200  ld   ac,x        2245  ld(AC,X)                        #12
                                          2246
                                          2247  # pc = 0x03ff, Opcode = 0xff
                                          2248  # Instruction RET: Function return (vPC=vLR-2), 16 cycles
                                          2249  label('RET')
RET:          03ff 011a  ld   [$1a]       2250  ld([vLR])                       #10
                                          2251  assert pc()&255 == 0
                                          2252
                                          2253
                                          2254  #-----------------------------------------------------------------------
                                          2255  #
                                          2256  #  $0400 ROM page 4: Application interpreter extension
                                          2257  #
                                          2258  #-----------------------------------------------------------------------
                                          2259  align(0x100, size=0x100)
                                          2260
                                          2261  # (Continue RET)
              0400 a002  suba $02         2262  suba(2)                         #11
              0401 c216  st   [$16]       2263  st([vPC])                       #12
              0402 011b  ld   [$1b]       2264  ld([vLR+1])                     #13
              0403 c217  st   [$17]       2265  st([vPC+1])                     #14
              0404 1403  ld   $03,y       2266  ld(hi('REENTER'),Y)             #15
              0405 e0cb  jmp  y,$cb       2267  jmp(Y,'REENTER')                #16
              0406 00f6  ld   $f6         2268  ld(-20/2)                       #17
                                          2269
                                          2270  # CALL implementation
                                          2271  label('call#13')
call#13:      0407 1200  ld   ac,x        2272  ld(AC,X)                        #13
              0408 0116  ld   [$16]       2273  ld([vPC])                       #14
              0409 8002  adda $02         2274  adda(2)                         #15 Point to instruction after CALL
              040a c21a  st   [$1a]       2275  st([vLR])                       #16
              040b 0117  ld   [$17]       2276  ld([vPC+1])                     #17
              040c c21b  st   [$1b]       2277  st([vLR+1])                     #18
              040d 1400  ld   $00,y       2278  ld(0,Y)                         #19
              040e 0500  ld   [x]         2279  ld([X])                         #20
              040f de00  st   [y,x++]     2280  st([Y,Xpp])                     #21
              0410 a002  suba $02         2281  suba(2)                         #22 Because NEXT will add 2
              0411 c216  st   [$16]       2282  st([vPC])                       #23
              0412 0500  ld   [x]         2283  ld([X])                         #24
              0413 c217  st   [$17]       2284  st([vPC+1])                     #25
              0414 1403  ld   $03,y       2285  ld(hi('NEXTY'),Y)               #26
              0415 e000  jmp  y,$00       2286  jmp(Y,'NEXTY')                  #27
              0416 00f1  ld   $f1         2287  ld(-30/2)                       #28
                                          2288
                                          2289  # DEF implementation
                                          2290  label('def#13')
def#13:       0417 c21d  st   [$1d]       2291  st([vTmp])                      #13
              0418 0116  ld   [$16]       2292  ld([vPC])                       #14
              0419 8002  adda $02         2293  adda(2)                         #15
              041a c218  st   [$18]       2294  st([vAC])                       #16
              041b 0117  ld   [$17]       2295  ld([vPC+1])                     #17
              041c c219  st   [$19]       2296  st([vAC+1])                     #18
              041d 011d  ld   [$1d]       2297  ld([vTmp])                      #19
              041e c216  st   [$16]       2298  st([vPC])                       #20
              041f 1403  ld   $03,y       2299  ld(hi('REENTER'),Y)             #21
              0420 e0cb  jmp  y,$cb       2300  jmp(Y,'REENTER')                #22
              0421 00f3  ld   $f3         2301  ld(-26/2)                       #23
                                          2302
                                          2303  # ANDI implementation
                                          2304  label('andi#13')
andi#13:      0422 c218  st   [$18]       2305  st([vAC])                       #13
              0423 0000  ld   $00         2306  ld(0)                           #14 Clear high byte
              0424 c219  st   [$19]       2307  st([vAC+1])                     #15
              0425 1403  ld   $03,y       2308  ld(hi('NEXTY'),Y)               #16
              0426 e000  jmp  y,$00       2309  jmp(Y,'NEXTY')                  #17
              0427 00f6  ld   $f6         2310  ld(-20/2)                       #18
                                          2311
                                          2312  # LSLW implementation
                                          2313  label('lslw#13')
lslw#13:      0428 3080  anda $80,x       2314  anda(128,X)                     #13
              0429 8118  adda [$18]       2315  adda([vAC])                     #14
              042a c218  st   [$18]       2316  st([vAC])                       #15
              042b 0500  ld   [x]         2317  ld([X])                         #16
              042c 8119  adda [$19]       2318  adda([vAC+1])                   #17
              042d 8119  adda [$19]       2319  adda([vAC+1])                   #18
              042e c219  st   [$19]       2320  st([vAC+1])                     #19
              042f 0116  ld   [$16]       2321  ld([vPC])                       #20
              0430 a001  suba $01         2322  suba(1)                         #21
              0431 1403  ld   $03,y       2323  ld(hi('REENTER_28'),Y)          #22
              0432 e0ca  jmp  y,$ca       2324  jmp(Y,'REENTER_28')             #23
              0433 c216  st   [$16]       2325  st([vPC])                       #24
                                          2326
                                          2327  # STLW implementation
                                          2328  label('stlw#13')
stlw#13:      0434 1504  ld   [$04],y     2329  ld([vSPH],Y)                    #13
              0435 911c  adda [$1c],x     2330  adda([vSP],X)                   #14
              0436 0118  ld   [$18]       2331  ld([vAC])                       #15
              0437 de00  st   [y,x++]     2332  st([Y,Xpp])                     #16
              0438 0119  ld   [$19]       2333  ld([vAC+1])                     #17
              0439 ce00  st   [y,x]       2334  st([Y,X])                       #18
              043a 1403  ld   $03,y       2335  ld(hi('REENTER'),Y)             #19
              043b e0cb  jmp  y,$cb       2336  jmp(Y,'REENTER')                #20
              043c 00f4  ld   $f4         2337  ld(-24/2)                       #21
                                          2338
                                          2339  # LDLW implementation
                                          2340  label('ldlw#13')
ldlw#13:      043d 1504  ld   [$04],y     2341  ld([vSPH],Y)                    #13
              043e 911c  adda [$1c],x     2342  adda([vSP],X)                   #14
              043f 0d00  ld   [y,x]       2343  ld([Y,X])                       #15
              0440 de00  st   [y,x++]     2344  st([Y,Xpp])                     #16
              0441 c218  st   [$18]       2345  st([vAC])                       #17
              0442 0d00  ld   [y,x]       2346  ld([Y,X])                       #18
              0443 c219  st   [$19]       2347  st([vAC+1])                     #19
              0444 1403  ld   $03,y       2348  ld(hi('NEXTY'),Y)               #20
              0445 e000  jmp  y,$00       2349  jmp(Y,'NEXTY')                  #21
              0446 00f4  ld   $f4         2350  ld(-24/2)                       #22
                                          2351
                                          2352  # POKE implementation
                                          2353  label('poke#13')
poke#13:      0447 9001  adda $01,x       2354  adda(1,X)                       #13
              0448 0500  ld   [x]         2355  ld([X])                         #14
              0449 1600  ld   ac,y        2356  ld(AC,Y)                        #15
              044a 111d  ld   [$1d],x     2357  ld([vTmp],X)                    #16
              044b 0500  ld   [x]         2358  ld([X])                         #17
              044c 1200  ld   ac,x        2359  ld(AC,X)                        #18
              044d 0118  ld   [$18]       2360  ld([vAC])                       #19
              044e ce00  st   [y,x]       2361  st([Y,X])                       #20
              044f 1403  ld   $03,y       2362  ld(hi('REENTER'),Y)             #21
              0450 e0cb  jmp  y,$cb       2363  jmp(Y,'REENTER')                #22
              0451 00f3  ld   $f3         2364  ld(-26/2)                       #23
                                          2365
                                          2366  # PEEK implementation
                                          2367  label('peek#13')
peek#13:      0452 1118  ld   [$18],x     2368  ld([vAC],X)                     #13
              0453 1519  ld   [$19],y     2369  ld([vAC+1],Y)                   #14
              0454 0d00  ld   [y,x]       2370  ld([Y,X])                       #15
              0455 c218  st   [$18]       2371  st([vAC])                       #16
              0456 0000  ld   $00         2372  ld(0)                           #17
              0457 c219  st   [$19]       2373  st([vAC+1])                     #18
              0458 0116  ld   [$16]       2374  ld([vPC])                       #19
              0459 a001  suba $01         2375  suba(1)                         #20
              045a c216  st   [$16]       2376  st([vPC])                       #21
              045b 1403  ld   $03,y       2377  ld(hi('NEXTY'),Y)               #22
              045c e000  jmp  y,$00       2378  jmp(Y,'NEXTY')                  #23
              045d 00f3  ld   $f3         2379  ld(-26/2)                       #24
                                          2380
                                          2381  # DOKE implementation
                                          2382  label('doke#13')
doke#13:      045e 9001  adda $01,x       2383  adda(1,X)                       #13
              045f 0500  ld   [x]         2384  ld([X])                         #14
              0460 1600  ld   ac,y        2385  ld(AC,Y)                        #15
              0461 111d  ld   [$1d],x     2386  ld([vTmp],X)                    #16
              0462 0500  ld   [x]         2387  ld([X])                         #17
              0463 1200  ld   ac,x        2388  ld(AC,X)                        #18
              0464 0118  ld   [$18]       2389  ld([vAC])                       #19
              0465 de00  st   [y,x++]     2390  st([Y,Xpp])                     #20
              0466 0119  ld   [$19]       2391  ld([vAC+1])                     #21
              0467 ce00  st   [y,x]       2392  st([Y,X])                       #22 Incompatible with REENTER_28
              0468 1403  ld   $03,y       2393  ld(hi('REENTER'),Y)             #23
              0469 e0cb  jmp  y,$cb       2394  jmp(Y,'REENTER')                #24
              046a 00f2  ld   $f2         2395  ld(-28/2)                       #25
                                          2396
                                          2397  # DEEK implementation
                                          2398  label('deek#13')
deek#13:      046b 0116  ld   [$16]       2399  ld([vPC])                       #13
              046c a001  suba $01         2400  suba(1)                         #14
              046d c216  st   [$16]       2401  st([vPC])                       #15
              046e 1118  ld   [$18],x     2402  ld([vAC],X)                     #16
              046f 1519  ld   [$19],y     2403  ld([vAC+1],Y)                   #17
              0470 0d00  ld   [y,x]       2404  ld([Y,X])                       #18
              0471 de00  st   [y,x++]     2405  st([Y,Xpp])                     #19 Just X++
              0472 c218  st   [$18]       2406  st([vAC])                       #20
              0473 0d00  ld   [y,x]       2407  ld([Y,X])                       #21
              0474 1403  ld   $03,y       2408  ld(hi('REENTER_28'),Y)          #22
              0475 e0ca  jmp  y,$ca       2409  jmp(Y,'REENTER_28')             #23
              0476 c219  st   [$19]       2410  st([vAC+1])                     #24
                                          2411
                                          2412  # ANDW implementation
                                          2413  label('andw#13')
andw#13:      0477 1200  ld   ac,x        2414  ld(AC,X)                        #13
              0478 1400  ld   $00,y       2415  ld(0,Y)                         #14
              0479 0500  ld   [x]         2416  ld([X])                         #15
              047a de00  st   [y,x++]     2417  st([Y,Xpp])                     #16
              047b 2118  anda [$18]       2418  anda([vAC])                     #17
              047c c218  st   [$18]       2419  st([vAC])                       #18
              047d 0500  ld   [x]         2420  ld([X])                         #19
              047e 2119  anda [$19]       2421  anda([vAC+1])                   #20
              047f c219  st   [$19]       2422  st([vAC+1])                     #21
              0480 1403  ld   $03,y       2423  ld(hi('NEXTY'),Y)               #22
              0481 e000  jmp  y,$00       2424  jmp(Y,'NEXTY')                  #23
              0482 00f3  ld   $f3         2425  ld(-26/2)                       #24
                                          2426
                                          2427  # ORW implementation
                                          2428  label('orw#13')
orw#13:       0483 1200  ld   ac,x        2429  ld(AC,X)                        #13
              0484 1400  ld   $00,y       2430  ld(0,Y)                         #14
              0485 0500  ld   [x]         2431  ld([X])                         #15
              0486 de00  st   [y,x++]     2432  st([Y,Xpp])                     #16
              0487 4118  ora  [$18]       2433  ora([vAC])                      #17
              0488 c218  st   [$18]       2434  st([vAC])                       #18
              0489 0500  ld   [x]         2435  ld([X])                         #19
              048a 4119  ora  [$19]       2436  ora([vAC+1])                    #20
              048b c219  st   [$19]       2437  st([vAC+1])                     #21
              048c 1403  ld   $03,y       2438  ld(hi('NEXTY'),Y)               #22
              048d e000  jmp  y,$00       2439  jmp(Y,'NEXTY')                  #23
              048e 00f3  ld   $f3         2440  ld(-26/2)                       #24
                                          2441
                                          2442  # PEEK+ implementation
                                          2443  label('peek+#13')
peek+#13:     048f 1400  ld   $00,y       2444  ld(0,Y)                         #13
              0490 1200  ld   ac,x        2445  ld(AC,X)                        #14
              0491 0500  ld   [x]         2446  ld([X])                         #15 low byte peek address
              0492 c21d  st   [$1d]       2447  st([vTmp])                      #16
              0493 8001  adda $01         2448  adda(1)                         #17
              0494 de00  st   [y,x++]     2449  st([Y,Xpp])                     #18
              0495 0500  ld   [x]         2450  ld([X])                         #19 high byte peek address
              0496 1600  ld   ac,y        2451  ld(AC,Y)                        #20
              0497 111d  ld   [$1d],x     2452  ld([vTmp],X)                    #21
              0498 0d00  ld   [y,x]       2453  ld([Y,X])                       #22
              0499 c218  st   [$18]       2454  st([vAC])                       #23
              049a 0000  ld   $00         2455  ld(0)                           #24
              049b c219  st   [$19]       2456  st([vAC+1])                     #25
              049c 1403  ld   $03,y       2457  ld(hi('NEXTY'),Y)               #26
              049d e000  jmp  y,$00       2458  jmp(Y,'NEXTY')                  #27
              049e 00f1  ld   $f1         2459  ld(-30/2)                       #28
                                          2460
              049f 0200  nop              2461  fillers(until=0xa7)
              04a0 0200  nop
              04a1 0200  nop
              * 8 times
                                          2462
                                          2463  # pc = 0x04a7
                                          2464  #-----------------------------------------------------------------------
                                          2465  #
                                          2466  #  vCPU extension functions (for acceleration and compaction) follow below.
                                          2467  #
                                          2468  #  The naming convention is: SYS_<CamelCase>[_v<V>]_<N>
                                          2469  #
                                          2470  #  With <N> the maximum number of cycles the function will run
                                          2471  #  (counted from NEXT to NEXT). This is the same number that must
                                          2472  #  be passed to the 'SYS' vCPU instruction as operand, and it will
                                          2473  #  appear in the GCL code upon use.
                                          2474  #
                                          2475  #  If a SYS extension got introduced after ROM v1, the version number of
                                          2476  #  introduction is included in the name. This helps the programmer to be
                                          2477  #  reminded to verify the acutal ROM version and fail gracefully on older
                                          2478  #  ROMs than required. See also Docs/GT1-files.txt on using [romType].
                                          2479  #
                                          2480  #-----------------------------------------------------------------------
                                          2481
                                          2482  #-----------------------------------------------------------------------
                                          2483  # Extension SYS_Random_34: Update entropy and copy to vAC
                                          2484  #-----------------------------------------------------------------------
                                          2485
                                          2486  # This same algorithm runs automatically once per vertical blank.
                                          2487  # Use this function to get numbers at a higher rate.
                                          2488  #
                                          2489  # Variables:
                                          2490  #       vAC
                                          2491
                                          2492  label('SYS_Random_34')
SYS_Random_34:
              04a7 010e  ld   [$0e]       2493  ld([frameCount])                #15
              04a8 6107  xora [$07]       2494  xora([entropy+1])               #16
              04a9 610f  xora [$0f]       2495  xora([serialRaw])               #17
              04aa 8106  adda [$06]       2496  adda([entropy+0])               #18
              04ab c206  st   [$06]       2497  st([entropy+0])                 #19
              04ac c218  st   [$18]       2498  st([vAC+0])                     #20
              04ad 8108  adda [$08]       2499  adda([entropy+2])               #21
              04ae c208  st   [$08]       2500  st([entropy+2])                 #22
              04af e8b2  blt  .sysRnd0    2501  bmi('.sysRnd0')                 #23
              04b0 fcb3  bra  .sysRnd1    2502  bra('.sysRnd1')                 #24
              04b1 6053  xora $53         2503  xora(64+16+2+1)                 #25
                                          2504  label('.sysRnd0')
.sysRnd0:     04b2 606c  xora $6c         2505  xora(64+32+8+4)                 #25
                                          2506  label('.sysRnd1')
.sysRnd1:     04b3 8107  adda [$07]       2507  adda([entropy+1])               #26
              04b4 c207  st   [$07]       2508  st([entropy+1])                 #27
              04b5 c219  st   [$19]       2509  st([vAC+1])                     #28
              04b6 1403  ld   $03,y       2510  ld(hi('REENTER'),Y)             #29
              04b7 e0cb  jmp  y,$cb       2511  jmp(Y,'REENTER')                #30
              04b8 00ef  ld   $ef         2512  ld(-34/2)                       #31
                                          2513
                                          2514  label('SYS_LSRW7_30')
SYS_LSRW7_30: 04b9 0118  ld   [$18]       2515  ld([vAC])                       #15
              04ba 3080  anda $80,x       2516  anda(128,X)                     #16
              04bb 0119  ld   [$19]       2517  ld([vAC+1])                     #17
              04bc 8200  adda ac          2518  adda(AC)                        #18
              04bd 4500  ora  [x]         2519  ora([X])                        #19
              04be c218  st   [$18]       2520  st([vAC])                       #20
              04bf 0119  ld   [$19]       2521  ld([vAC+1])                     #21
              04c0 3080  anda $80,x       2522  anda(128,X)                     #22
              04c1 0500  ld   [x]         2523  ld([X])                         #23
              04c2 c219  st   [$19]       2524  st([vAC+1])                     #24
              04c3 1403  ld   $03,y       2525  ld(hi('REENTER'),Y)             #25
              04c4 e0cb  jmp  y,$cb       2526  jmp(Y,'REENTER')                #26
              04c5 00f1  ld   $f1         2527  ld(-30/2)                       #27
                                          2528
                                          2529  label('SYS_LSRW8_24')
SYS_LSRW8_24: 04c6 0119  ld   [$19]       2530  ld([vAC+1])                     #15
              04c7 c218  st   [$18]       2531  st([vAC])                       #16
              04c8 0000  ld   $00         2532  ld(0)                           #17
              04c9 c219  st   [$19]       2533  st([vAC+1])                     #18
              04ca 1403  ld   $03,y       2534  ld(hi('REENTER'),Y)             #19
              04cb e0cb  jmp  y,$cb       2535  jmp(Y,'REENTER')                #20
              04cc 00f4  ld   $f4         2536  ld(-24/2)                       #21
                                          2537
                                          2538  label('SYS_LSLW8_24')
SYS_LSLW8_24: 04cd 0118  ld   [$18]       2539  ld([vAC])                       #15
              04ce c219  st   [$19]       2540  st([vAC+1])                     #16
              04cf 0000  ld   $00         2541  ld(0)                           #17
              04d0 c218  st   [$18]       2542  st([vAC])                       #18
              04d1 1403  ld   $03,y       2543  ld(hi('REENTER'),Y)             #19
              04d2 e0cb  jmp  y,$cb       2544  jmp(Y,'REENTER')                #20
              04d3 00f4  ld   $f4         2545  ld(-24/2)                       #21
                                          2546
                                          2547  #-----------------------------------------------------------------------
                                          2548  # Extension SYS_Draw4_30
                                          2549  #-----------------------------------------------------------------------
                                          2550
                                          2551  # Draw 4 pixels on screen, horizontally next to each other
                                          2552  #
                                          2553  # Variables:
                                          2554  #       sysArgs[0:3]    Pixels (in)
                                          2555  #       sysArgs[4:5]    Position on screen (in)
                                          2556
                                          2557  label('SYS_Draw4_30')
SYS_Draw4_30: 04d4 1128  ld   [$28],x     2558  ld([sysArgs+4],X)               #15
              04d5 1529  ld   [$29],y     2559  ld([sysArgs+5],Y)               #16
              04d6 0124  ld   [$24]       2560  ld([sysArgs+0])                 #17
              04d7 de00  st   [y,x++]     2561  st([Y,Xpp])                     #18
              04d8 0125  ld   [$25]       2562  ld([sysArgs+1])                 #19
              04d9 de00  st   [y,x++]     2563  st([Y,Xpp])                     #20
              04da 0126  ld   [$26]       2564  ld([sysArgs+2])                 #21
              04db de00  st   [y,x++]     2565  st([Y,Xpp])                     #22
              04dc 0127  ld   [$27]       2566  ld([sysArgs+3])                 #23
              04dd de00  st   [y,x++]     2567  st([Y,Xpp])                     #24
              04de 1403  ld   $03,y       2568  ld(hi('REENTER'),Y)             #25
              04df e0cb  jmp  y,$cb       2569  jmp(Y,'REENTER')                #26
              04e0 00f1  ld   $f1         2570  ld(-30/2)                       #27
                                          2571
                                          2572  #-----------------------------------------------------------------------
                                          2573  # Extension SYS_VDrawBits_134:
                                          2574  #-----------------------------------------------------------------------
                                          2575
                                          2576  # Draw slice of a character, 8 pixels vertical
                                          2577  #
                                          2578  # Variables:
                                          2579  #       sysArgs[0]      Color 0 "background" (in)
                                          2580  #       sysArgs[1]      Color 1 "pen" (in)
                                          2581  #       sysArgs[2]      8 bits, highest bit first (in, changed)
                                          2582  #       sysArgs[4:5]    Position on screen (in)
                                          2583
                                          2584  label('SYS_VDrawBits_134')
SYS_VDrawBits_134:
              04e1 1412  ld   $12,y       2585  ld(hi('sys_VDrawBits'),Y)       #15
              04e2 e093  jmp  y,$93       2586  jmp(Y,'sys_VDrawBits')          #16
              04e3 1128  ld   [$28],x     2587  ld([sysArgs+4],X)               #17
                                          2588
                                          2589  #-----------------------------------------------------------------------
                                          2590
                                          2591  # Interrupt handler:
                                          2592  #       STW  $xx        -> optionally store vCpuSelect
                                          2593  #       ... IRQ payload ...
                                          2594  # either:
                                          2595  #       LDWI $400
                                          2596  #       LUP  0          -> vRTI and don't switch interpreter (immediate resume)
                                          2597  # or:
                                          2598  #       LDWI $400
                                          2599  #       LUP  $xx        -> vRTI and switch interpreter type as stored in [$xx]
              04e4 0200  nop              2600  fillers(until=251-13)
              04e5 0200  nop
              04e6 0200  nop
              * 10 times
                                          2601  label('vRTI#15')
vRTI#15:      04ee 0130  ld   [$30]       2602  ld([0x30])                      #15 Continue with vCPU in the same timeslice (faster)
              04ef c216  st   [$16]       2603  st([vPC])                       #16
              04f0 0131  ld   [$31]       2604  ld([0x31])                      #17
              04f1 c217  st   [$17]       2605  st([vPC+1])                     #18
              04f2 0132  ld   [$32]       2606  ld([0x32])                      #19
              04f3 c218  st   [$18]       2607  st([vAC])                       #20
              04f4 0133  ld   [$33]       2608  ld([0x33])                      #21
              04f5 c219  st   [$19]       2609  st([vAC+1])                     #22
              04f6 0134  ld   [$34]       2610  ld([0x34])                      #23 Restore vCpuSelect for PREFIX
              04f7 c202  st   [$02]       2611  st([vCpuSelect])                #24
              04f8 9401  adda $01,y       2612  adda(1,Y)                       #25 Jump to correct PREFIX page, (or page by default)
              04f9 e0cb  jmp  y,$cb       2613  jmp(Y,'REENTER')                #26
              04fa 00f1  ld   $f1         2614  ld(-30/2)                       #27
                                          2615  # vRTI entry point
                                          2616  assert(pc()&255 == 251)         # The landing offset 251 for LUP trampoline is fixed
              04fb f0ee  beq  vRTI#15     2617  beq('vRTI#15')                  #13 vRTI sequence
              04fc 9001  adda $01,x       2618  adda(1,X)                       #14
              04fd 1412  ld   $12,y       2619  ld(hi('vRTI#18'),Y)             #15 Switch and wait for end of timeslice (slower)
              04fe e022  jmp  y,$22       2620  jmp(Y,'vRTI#18')                #16
              04ff c21d  st   [$1d]       2621  st([vTmp])                      #17
                                          2622
                                          2623  #-----------------------------------------------------------------------
                                          2624  #
                                          2625  #  $0500 ROM page 5-6: Shift table and code
                                          2626  #
                                          2627  #-----------------------------------------------------------------------
                                          2628
                                          2629  align(0x100, size=0x200)
                                          2630
                                          2631  # Lookup table for i>>n, with n in 1..6
                                          2632  # Indexing ix = i & ~b | (b-1), where b = 1<<(n-1)
                                          2633  #       ...
                                          2634  #       ld   <.ret
                                          2635  #       st   [vTmp]
                                          2636  #       ld   >shiftTable,y
                                          2637  #       <calculate ix>
                                          2638  #       jmp  y,ac
                                          2639  #       bra  $ff
                                          2640  # .ret: ...
                                          2641  #
                                          2642  # i >> 7 can be always be done with RAM: [i&128]
                                          2643  #       ...
                                          2644  #       anda $80,x
                                          2645  #       ld   [x]
                                          2646  #       ...
                                          2647
                                          2648  label('shiftTable')
                                          2649  shiftTable = pc()
                                          2650
                                          2651  for ix in range(255):
                                          2652    for n in range(1,7): # Find first zero
                                          2653      if ~ix & (1 << (n-1)):
                                          2654        break
                                          2655    pattern = ['x' if i<n else '1' if ix&(1<<i) else '0' for i in range(8)]
                                          2656    ld(ix>>n); C('0b%s >> %d' % (''.join(reversed(pattern)), n))
shiftTable:   0500 0000  ld   $00         ;0b0000000x >> 1
              0501 0000  ld   $00         ;0b000000xx >> 2
              0502 0001  ld   $01         ;0b0000001x >> 1
              0503 0000  ld   $00         ;0b00000xxx >> 3
              0504 0002  ld   $02         ;0b0000010x >> 1
              0505 0001  ld   $01         ;0b000001xx >> 2
              0506 0003  ld   $03         ;0b0000011x >> 1
              0507 0000  ld   $00         ;0b0000xxxx >> 4
              0508 0004  ld   $04         ;0b0000100x >> 1
              0509 0002  ld   $02         ;0b000010xx >> 2
              050a 0005  ld   $05         ;0b0000101x >> 1
              050b 0001  ld   $01         ;0b00001xxx >> 3
              050c 0006  ld   $06         ;0b0000110x >> 1
              050d 0003  ld   $03         ;0b000011xx >> 2
              050e 0007  ld   $07         ;0b0000111x >> 1
              050f 0000  ld   $00         ;0b000xxxxx >> 5
              0510 0008  ld   $08         ;0b0001000x >> 1
              0511 0004  ld   $04         ;0b000100xx >> 2
              0512 0009  ld   $09         ;0b0001001x >> 1
              0513 0002  ld   $02         ;0b00010xxx >> 3
              0514 000a  ld   $0a         ;0b0001010x >> 1
              0515 0005  ld   $05         ;0b000101xx >> 2
              0516 000b  ld   $0b         ;0b0001011x >> 1
              0517 0001  ld   $01         ;0b0001xxxx >> 4
              0518 000c  ld   $0c         ;0b0001100x >> 1
              0519 0006  ld   $06         ;0b000110xx >> 2
              051a 000d  ld   $0d         ;0b0001101x >> 1
              051b 0003  ld   $03         ;0b00011xxx >> 3
              051c 000e  ld   $0e         ;0b0001110x >> 1
              051d 0007  ld   $07         ;0b000111xx >> 2
              051e 000f  ld   $0f         ;0b0001111x >> 1
              051f 0000  ld   $00         ;0b00xxxxxx >> 6
              0520 0010  ld   $10         ;0b0010000x >> 1
              0521 0008  ld   $08         ;0b001000xx >> 2
              0522 0011  ld   $11         ;0b0010001x >> 1
              0523 0004  ld   $04         ;0b00100xxx >> 3
              0524 0012  ld   $12         ;0b0010010x >> 1
              0525 0009  ld   $09         ;0b001001xx >> 2
              0526 0013  ld   $13         ;0b0010011x >> 1
              0527 0002  ld   $02         ;0b0010xxxx >> 4
              0528 0014  ld   $14         ;0b0010100x >> 1
              0529 000a  ld   $0a         ;0b001010xx >> 2
              052a 0015  ld   $15         ;0b0010101x >> 1
              052b 0005  ld   $05         ;0b00101xxx >> 3
              052c 0016  ld   $16         ;0b0010110x >> 1
              052d 000b  ld   $0b         ;0b001011xx >> 2
              052e 0017  ld   $17         ;0b0010111x >> 1
              052f 0001  ld   $01         ;0b001xxxxx >> 5
              0530 0018  ld   $18         ;0b0011000x >> 1
              0531 000c  ld   $0c         ;0b001100xx >> 2
              0532 0019  ld   $19         ;0b0011001x >> 1
              0533 0006  ld   $06         ;0b00110xxx >> 3
              0534 001a  ld   $1a         ;0b0011010x >> 1
              0535 000d  ld   $0d         ;0b001101xx >> 2
              0536 001b  ld   $1b         ;0b0011011x >> 1
              0537 0003  ld   $03         ;0b0011xxxx >> 4
              0538 001c  ld   $1c         ;0b0011100x >> 1
              0539 000e  ld   $0e         ;0b001110xx >> 2
              053a 001d  ld   $1d         ;0b0011101x >> 1
              053b 0007  ld   $07         ;0b00111xxx >> 3
              053c 001e  ld   $1e         ;0b0011110x >> 1
              053d 000f  ld   $0f         ;0b001111xx >> 2
              053e 001f  ld   $1f         ;0b0011111x >> 1
              053f 0000  ld   $00         ;0b00xxxxxx >> 6
              0540 0020  ld   $20         ;0b0100000x >> 1
              0541 0010  ld   $10         ;0b010000xx >> 2
              0542 0021  ld   $21         ;0b0100001x >> 1
              0543 0008  ld   $08         ;0b01000xxx >> 3
              0544 0022  ld   $22         ;0b0100010x >> 1
              0545 0011  ld   $11         ;0b010001xx >> 2
              0546 0023  ld   $23         ;0b0100011x >> 1
              0547 0004  ld   $04         ;0b0100xxxx >> 4
              0548 0024  ld   $24         ;0b0100100x >> 1
              0549 0012  ld   $12         ;0b010010xx >> 2
              054a 0025  ld   $25         ;0b0100101x >> 1
              054b 0009  ld   $09         ;0b01001xxx >> 3
              054c 0026  ld   $26         ;0b0100110x >> 1
              054d 0013  ld   $13         ;0b010011xx >> 2
              054e 0027  ld   $27         ;0b0100111x >> 1
              054f 0002  ld   $02         ;0b010xxxxx >> 5
              0550 0028  ld   $28         ;0b0101000x >> 1
              0551 0014  ld   $14         ;0b010100xx >> 2
              0552 0029  ld   $29         ;0b0101001x >> 1
              0553 000a  ld   $0a         ;0b01010xxx >> 3
              0554 002a  ld   $2a         ;0b0101010x >> 1
              0555 0015  ld   $15         ;0b010101xx >> 2
              0556 002b  ld   $2b         ;0b0101011x >> 1
              0557 0005  ld   $05         ;0b0101xxxx >> 4
              0558 002c  ld   $2c         ;0b0101100x >> 1
              0559 0016  ld   $16         ;0b010110xx >> 2
              055a 002d  ld   $2d         ;0b0101101x >> 1
              055b 000b  ld   $0b         ;0b01011xxx >> 3
              055c 002e  ld   $2e         ;0b0101110x >> 1
              055d 0017  ld   $17         ;0b010111xx >> 2
              055e 002f  ld   $2f         ;0b0101111x >> 1
              055f 0001  ld   $01         ;0b01xxxxxx >> 6
              0560 0030  ld   $30         ;0b0110000x >> 1
              0561 0018  ld   $18         ;0b011000xx >> 2
              0562 0031  ld   $31         ;0b0110001x >> 1
              0563 000c  ld   $0c         ;0b01100xxx >> 3
              0564 0032  ld   $32         ;0b0110010x >> 1
              0565 0019  ld   $19         ;0b011001xx >> 2
              0566 0033  ld   $33         ;0b0110011x >> 1
              0567 0006  ld   $06         ;0b0110xxxx >> 4
              0568 0034  ld   $34         ;0b0110100x >> 1
              0569 001a  ld   $1a         ;0b011010xx >> 2
              056a 0035  ld   $35         ;0b0110101x >> 1
              056b 000d  ld   $0d         ;0b01101xxx >> 3
              056c 0036  ld   $36         ;0b0110110x >> 1
              056d 001b  ld   $1b         ;0b011011xx >> 2
              056e 0037  ld   $37         ;0b0110111x >> 1
              056f 0003  ld   $03         ;0b011xxxxx >> 5
              0570 0038  ld   $38         ;0b0111000x >> 1
              0571 001c  ld   $1c         ;0b011100xx >> 2
              0572 0039  ld   $39         ;0b0111001x >> 1
              0573 000e  ld   $0e         ;0b01110xxx >> 3
              0574 003a  ld   $3a         ;0b0111010x >> 1
              0575 001d  ld   $1d         ;0b011101xx >> 2
              0576 003b  ld   $3b         ;0b0111011x >> 1
              0577 0007  ld   $07         ;0b0111xxxx >> 4
              0578 003c  ld   $3c         ;0b0111100x >> 1
              0579 001e  ld   $1e         ;0b011110xx >> 2
              057a 003d  ld   $3d         ;0b0111101x >> 1
              057b 000f  ld   $0f         ;0b01111xxx >> 3
              057c 003e  ld   $3e         ;0b0111110x >> 1
              057d 001f  ld   $1f         ;0b011111xx >> 2
              057e 003f  ld   $3f         ;0b0111111x >> 1
              057f 0001  ld   $01         ;0b01xxxxxx >> 6
              0580 0040  ld   $40         ;0b1000000x >> 1
              0581 0020  ld   $20         ;0b100000xx >> 2
              0582 0041  ld   $41         ;0b1000001x >> 1
              0583 0010  ld   $10         ;0b10000xxx >> 3
              0584 0042  ld   $42         ;0b1000010x >> 1
              0585 0021  ld   $21         ;0b100001xx >> 2
              0586 0043  ld   $43         ;0b1000011x >> 1
              0587 0008  ld   $08         ;0b1000xxxx >> 4
              0588 0044  ld   $44         ;0b1000100x >> 1
              0589 0022  ld   $22         ;0b100010xx >> 2
              058a 0045  ld   $45         ;0b1000101x >> 1
              058b 0011  ld   $11         ;0b10001xxx >> 3
              058c 0046  ld   $46         ;0b1000110x >> 1
              058d 0023  ld   $23         ;0b100011xx >> 2
              058e 0047  ld   $47         ;0b1000111x >> 1
              058f 0004  ld   $04         ;0b100xxxxx >> 5
              0590 0048  ld   $48         ;0b1001000x >> 1
              0591 0024  ld   $24         ;0b100100xx >> 2
              0592 0049  ld   $49         ;0b1001001x >> 1
              0593 0012  ld   $12         ;0b10010xxx >> 3
              0594 004a  ld   $4a         ;0b1001010x >> 1
              0595 0025  ld   $25         ;0b100101xx >> 2
              0596 004b  ld   $4b         ;0b1001011x >> 1
              0597 0009  ld   $09         ;0b1001xxxx >> 4
              0598 004c  ld   $4c         ;0b1001100x >> 1
              0599 0026  ld   $26         ;0b100110xx >> 2
              059a 004d  ld   $4d         ;0b1001101x >> 1
              059b 0013  ld   $13         ;0b10011xxx >> 3
              059c 004e  ld   $4e         ;0b1001110x >> 1
              059d 0027  ld   $27         ;0b100111xx >> 2
              059e 004f  ld   $4f         ;0b1001111x >> 1
              059f 0002  ld   $02         ;0b10xxxxxx >> 6
              05a0 0050  ld   $50         ;0b1010000x >> 1
              05a1 0028  ld   $28         ;0b101000xx >> 2
              05a2 0051  ld   $51         ;0b1010001x >> 1
              05a3 0014  ld   $14         ;0b10100xxx >> 3
              05a4 0052  ld   $52         ;0b1010010x >> 1
              05a5 0029  ld   $29         ;0b101001xx >> 2
              05a6 0053  ld   $53         ;0b1010011x >> 1
              05a7 000a  ld   $0a         ;0b1010xxxx >> 4
              05a8 0054  ld   $54         ;0b1010100x >> 1
              05a9 002a  ld   $2a         ;0b101010xx >> 2
              05aa 0055  ld   $55         ;0b1010101x >> 1
              05ab 0015  ld   $15         ;0b10101xxx >> 3
              05ac 0056  ld   $56         ;0b1010110x >> 1
              05ad 002b  ld   $2b         ;0b101011xx >> 2
              05ae 0057  ld   $57         ;0b1010111x >> 1
              05af 0005  ld   $05         ;0b101xxxxx >> 5
              05b0 0058  ld   $58         ;0b1011000x >> 1
              05b1 002c  ld   $2c         ;0b101100xx >> 2
              05b2 0059  ld   $59         ;0b1011001x >> 1
              05b3 0016  ld   $16         ;0b10110xxx >> 3
              05b4 005a  ld   $5a         ;0b1011010x >> 1
              05b5 002d  ld   $2d         ;0b101101xx >> 2
              05b6 005b  ld   $5b         ;0b1011011x >> 1
              05b7 000b  ld   $0b         ;0b1011xxxx >> 4
              05b8 005c  ld   $5c         ;0b1011100x >> 1
              05b9 002e  ld   $2e         ;0b101110xx >> 2
              05ba 005d  ld   $5d         ;0b1011101x >> 1
              05bb 0017  ld   $17         ;0b10111xxx >> 3
              05bc 005e  ld   $5e         ;0b1011110x >> 1
              05bd 002f  ld   $2f         ;0b101111xx >> 2
              05be 005f  ld   $5f         ;0b1011111x >> 1
              05bf 0002  ld   $02         ;0b10xxxxxx >> 6
              05c0 0060  ld   $60         ;0b1100000x >> 1
              05c1 0030  ld   $30         ;0b110000xx >> 2
              05c2 0061  ld   $61         ;0b1100001x >> 1
              05c3 0018  ld   $18         ;0b11000xxx >> 3
              05c4 0062  ld   $62         ;0b1100010x >> 1
              05c5 0031  ld   $31         ;0b110001xx >> 2
              05c6 0063  ld   $63         ;0b1100011x >> 1
              05c7 000c  ld   $0c         ;0b1100xxxx >> 4
              05c8 0064  ld   $64         ;0b1100100x >> 1
              05c9 0032  ld   $32         ;0b110010xx >> 2
              05ca 0065  ld   $65         ;0b1100101x >> 1
              05cb 0019  ld   $19         ;0b11001xxx >> 3
              05cc 0066  ld   $66         ;0b1100110x >> 1
              05cd 0033  ld   $33         ;0b110011xx >> 2
              05ce 0067  ld   $67         ;0b1100111x >> 1
              05cf 0006  ld   $06         ;0b110xxxxx >> 5
              05d0 0068  ld   $68         ;0b1101000x >> 1
              05d1 0034  ld   $34         ;0b110100xx >> 2
              05d2 0069  ld   $69         ;0b1101001x >> 1
              05d3 001a  ld   $1a         ;0b11010xxx >> 3
              05d4 006a  ld   $6a         ;0b1101010x >> 1
              05d5 0035  ld   $35         ;0b110101xx >> 2
              05d6 006b  ld   $6b         ;0b1101011x >> 1
              05d7 000d  ld   $0d         ;0b1101xxxx >> 4
              05d8 006c  ld   $6c         ;0b1101100x >> 1
              05d9 0036  ld   $36         ;0b110110xx >> 2
              05da 006d  ld   $6d         ;0b1101101x >> 1
              05db 001b  ld   $1b         ;0b11011xxx >> 3
              05dc 006e  ld   $6e         ;0b1101110x >> 1
              05dd 0037  ld   $37         ;0b110111xx >> 2
              05de 006f  ld   $6f         ;0b1101111x >> 1
              05df 0003  ld   $03         ;0b11xxxxxx >> 6
              05e0 0070  ld   $70         ;0b1110000x >> 1
              05e1 0038  ld   $38         ;0b111000xx >> 2
              05e2 0071  ld   $71         ;0b1110001x >> 1
              05e3 001c  ld   $1c         ;0b11100xxx >> 3
              05e4 0072  ld   $72         ;0b1110010x >> 1
              05e5 0039  ld   $39         ;0b111001xx >> 2
              05e6 0073  ld   $73         ;0b1110011x >> 1
              05e7 000e  ld   $0e         ;0b1110xxxx >> 4
              05e8 0074  ld   $74         ;0b1110100x >> 1
              05e9 003a  ld   $3a         ;0b111010xx >> 2
              05ea 0075  ld   $75         ;0b1110101x >> 1
              05eb 001d  ld   $1d         ;0b11101xxx >> 3
              05ec 0076  ld   $76         ;0b1110110x >> 1
              05ed 003b  ld   $3b         ;0b111011xx >> 2
              05ee 0077  ld   $77         ;0b1110111x >> 1
              05ef 0007  ld   $07         ;0b111xxxxx >> 5
              05f0 0078  ld   $78         ;0b1111000x >> 1
              05f1 003c  ld   $3c         ;0b111100xx >> 2
              05f2 0079  ld   $79         ;0b1111001x >> 1
              05f3 001e  ld   $1e         ;0b11110xxx >> 3
              05f4 007a  ld   $7a         ;0b1111010x >> 1
              05f5 003d  ld   $3d         ;0b111101xx >> 2
              05f6 007b  ld   $7b         ;0b1111011x >> 1
              05f7 000f  ld   $0f         ;0b1111xxxx >> 4
              05f8 007c  ld   $7c         ;0b1111100x >> 1
              05f9 003e  ld   $3e         ;0b111110xx >> 2
              05fa 007d  ld   $7d         ;0b1111101x >> 1
              05fb 001f  ld   $1f         ;0b11111xxx >> 3
              05fc 007e  ld   $7e         ;0b1111110x >> 1
              05fd 003f  ld   $3f         ;0b111111xx >> 2
              05fe 007f  ld   $7f         ;0b1111111x >> 1
                                          2657
                                          2658  assert pc()&255 == 255
              05ff fd1d  bra  [$1d]       2659  bra([vTmp])                     # Jumps back into next page
                                          2660
                                          2661  label('SYS_LSRW1_48')
                                          2662  assert pc()&255 == 0            # First instruction on this page *must* be a nop
SYS_LSRW1_48: 0600 0200  nop              2663  nop()                           #15
              0601 1405  ld   $05,y       2664  ld(hi('shiftTable'),Y)          #16 Logical shift right 1 bit (X >> 1)
              0602 0008  ld   $08         2665  ld('.sysLsrw1a')                #17 Shift low byte
              0603 c21d  st   [$1d]       2666  st([vTmp])                      #18
              0604 0118  ld   [$18]       2667  ld([vAC])                       #19
              0605 20fe  anda $fe         2668  anda(0b11111110)                #20
              0606 e200  jmp  y,ac        2669  jmp(Y,AC)                       #21
              0607 fcff  bra  $ff         2670  bra(255)                        #22 bra shiftTable+255
                                          2671  label('.sysLsrw1a')
.sysLsrw1a:   0608 c218  st   [$18]       2672  st([vAC])                       #26
              0609 0119  ld   [$19]       2673  ld([vAC+1])                     #27 Transfer bit 8
              060a 2001  anda $01         2674  anda(1)                         #28
              060b 807f  adda $7f         2675  adda(127)                       #29
              060c 2080  anda $80         2676  anda(128)                       #30
              060d 4118  ora  [$18]       2677  ora([vAC])                      #31
              060e c218  st   [$18]       2678  st([vAC])                       #32
              060f 0015  ld   $15         2679  ld('.sysLsrw1b')                #33 Shift high byte
              0610 c21d  st   [$1d]       2680  st([vTmp])                      #34
              0611 0119  ld   [$19]       2681  ld([vAC+1])                     #35
              0612 20fe  anda $fe         2682  anda(0b11111110)                #36
              0613 e200  jmp  y,ac        2683  jmp(Y,AC)                       #37
              0614 fcff  bra  $ff         2684  bra(255)                        #38 bra shiftTable+255
                                          2685  label('.sysLsrw1b')
.sysLsrw1b:   0615 c219  st   [$19]       2686  st([vAC+1])                     #42
              0616 1403  ld   $03,y       2687  ld(hi('REENTER'),Y)             #43
              0617 e0cb  jmp  y,$cb       2688  jmp(Y,'REENTER')                #44
              0618 00e8  ld   $e8         2689  ld(-48/2)                       #45
                                          2690
                                          2691  label('SYS_LSRW2_52')
SYS_LSRW2_52: 0619 1405  ld   $05,y       2692  ld(hi('shiftTable'),Y)          #15 Logical shift right 2 bit (X >> 2)
              061a 0021  ld   $21         2693  ld('.sysLsrw2a')                #16 Shift low byte
              061b c21d  st   [$1d]       2694  st([vTmp])                      #17
              061c 0118  ld   [$18]       2695  ld([vAC])                       #18
              061d 20fc  anda $fc         2696  anda(0b11111100)                #19
              061e 4001  ora  $01         2697  ora( 0b00000001)                #20
              061f e200  jmp  y,ac        2698  jmp(Y,AC)                       #21
              0620 fcff  bra  $ff         2699  bra(255)                        #22 bra shiftTable+255
                                          2700  label('.sysLsrw2a')
.sysLsrw2a:   0621 c218  st   [$18]       2701  st([vAC])                       #26
              0622 0119  ld   [$19]       2702  ld([vAC+1])                     #27 Transfer bit 8:9
              0623 8200  adda ac          2703  adda(AC)                        #28
              0624 8200  adda ac          2704  adda(AC)                        #29
              0625 8200  adda ac          2705  adda(AC)                        #30
              0626 8200  adda ac          2706  adda(AC)                        #31
              0627 8200  adda ac          2707  adda(AC)                        #32
              0628 8200  adda ac          2708  adda(AC)                        #33
              0629 4118  ora  [$18]       2709  ora([vAC])                      #34
              062a c218  st   [$18]       2710  st([vAC])                       #35
              062b 0032  ld   $32         2711  ld('.sysLsrw2b')                #36 Shift high byte
              062c c21d  st   [$1d]       2712  st([vTmp])                      #37
              062d 0119  ld   [$19]       2713  ld([vAC+1])                     #38
              062e 20fc  anda $fc         2714  anda(0b11111100)                #39
              062f 4001  ora  $01         2715  ora( 0b00000001)                #40
              0630 e200  jmp  y,ac        2716  jmp(Y,AC)                       #41
              0631 fcff  bra  $ff         2717  bra(255)                        #42 bra shiftTable+255
                                          2718  label('.sysLsrw2b')
.sysLsrw2b:   0632 c219  st   [$19]       2719  st([vAC+1])                     #46
              0633 1403  ld   $03,y       2720  ld(hi('REENTER'),Y)             #47
              0634 e0cb  jmp  y,$cb       2721  jmp(Y,'REENTER')                #48
              0635 00e6  ld   $e6         2722  ld(-52/2)                       #49
                                          2723
                                          2724  label('SYS_LSRW3_52')
SYS_LSRW3_52: 0636 1405  ld   $05,y       2725  ld(hi('shiftTable'),Y)          #15 Logical shift right 3 bit (X >> 3)
              0637 003e  ld   $3e         2726  ld('.sysLsrw3a')                #16 Shift low byte
              0638 c21d  st   [$1d]       2727  st([vTmp])                      #17
              0639 0118  ld   [$18]       2728  ld([vAC])                       #18
              063a 20f8  anda $f8         2729  anda(0b11111000)                #19
              063b 4003  ora  $03         2730  ora( 0b00000011)                #20
              063c e200  jmp  y,ac        2731  jmp(Y,AC)                       #21
              063d fcff  bra  $ff         2732  bra(255)                        #22 bra shiftTable+255
                                          2733  label('.sysLsrw3a')
.sysLsrw3a:   063e c218  st   [$18]       2734  st([vAC])                       #26
              063f 0119  ld   [$19]       2735  ld([vAC+1])                     #27 Transfer bit 8:10
              0640 8200  adda ac          2736  adda(AC)                        #28
              0641 8200  adda ac          2737  adda(AC)                        #29
              0642 8200  adda ac          2738  adda(AC)                        #30
              0643 8200  adda ac          2739  adda(AC)                        #31
              0644 8200  adda ac          2740  adda(AC)                        #32
              0645 4118  ora  [$18]       2741  ora([vAC])                      #33
              0646 c218  st   [$18]       2742  st([vAC])                       #34
              0647 004e  ld   $4e         2743  ld('.sysLsrw3b')                #35 Shift high byte
              0648 c21d  st   [$1d]       2744  st([vTmp])                      #36
              0649 0119  ld   [$19]       2745  ld([vAC+1])                     #37
              064a 20f8  anda $f8         2746  anda(0b11111000)                #38
              064b 4003  ora  $03         2747  ora( 0b00000011)                #39
              064c e200  jmp  y,ac        2748  jmp(Y,AC)                       #40
              064d fcff  bra  $ff         2749  bra(255)                        #41 bra shiftTable+255
                                          2750  label('.sysLsrw3b')
.sysLsrw3b:   064e c219  st   [$19]       2751  st([vAC+1])                     #45
              064f 00e6  ld   $e6         2752  ld(-52/2)                       #46
              0650 1403  ld   $03,y       2753  ld(hi('REENTER'),Y)             #47
              0651 e0cb  jmp  y,$cb       2754  jmp(Y,'REENTER')                #48
                                          2755  #nop()                          #49
                                          2756
                                          2757  label('SYS_LSRW4_50')
SYS_LSRW4_50: 0652 1405  ld   $05,y       2758  ld(hi('shiftTable'),Y)          #15,49 Logical shift right 4 bit (X >> 4)
              0653 005a  ld   $5a         2759  ld('.sysLsrw4a')                #16 Shift low byte
              0654 c21d  st   [$1d]       2760  st([vTmp])                      #17
              0655 0118  ld   [$18]       2761  ld([vAC])                       #18
              0656 20f0  anda $f0         2762  anda(0b11110000)                #19
              0657 4007  ora  $07         2763  ora( 0b00000111)                #20
              0658 e200  jmp  y,ac        2764  jmp(Y,AC)                       #21
              0659 fcff  bra  $ff         2765  bra(255)                        #22 bra shiftTable+255
                                          2766  label('.sysLsrw4a')
.sysLsrw4a:   065a c218  st   [$18]       2767  st([vAC])                       #26
              065b 0119  ld   [$19]       2768  ld([vAC+1])                     #27 Transfer bit 8:11
              065c 8200  adda ac          2769  adda(AC)                        #28
              065d 8200  adda ac          2770  adda(AC)                        #29
              065e 8200  adda ac          2771  adda(AC)                        #30
              065f 8200  adda ac          2772  adda(AC)                        #31
              0660 4118  ora  [$18]       2773  ora([vAC])                      #32
              0661 c218  st   [$18]       2774  st([vAC])                       #33
              0662 0069  ld   $69         2775  ld('.sysLsrw4b')                #34 Shift high byte'
              0663 c21d  st   [$1d]       2776  st([vTmp])                      #35
              0664 0119  ld   [$19]       2777  ld([vAC+1])                     #36
              0665 20f0  anda $f0         2778  anda(0b11110000)                #37
              0666 4007  ora  $07         2779  ora( 0b00000111)                #38
              0667 e200  jmp  y,ac        2780  jmp(Y,AC)                       #39
              0668 fcff  bra  $ff         2781  bra(255)                        #40 bra shiftTable+255
                                          2782  label('.sysLsrw4b')
.sysLsrw4b:   0669 c219  st   [$19]       2783  st([vAC+1])                     #44
              066a 1403  ld   $03,y       2784  ld(hi('REENTER'),Y)             #45
              066b e0cb  jmp  y,$cb       2785  jmp(Y,'REENTER')                #46
              066c 00e7  ld   $e7         2786  ld(-50/2)                       #47
                                          2787
                                          2788  label('SYS_LSRW5_50')
SYS_LSRW5_50: 066d 1405  ld   $05,y       2789  ld(hi('shiftTable'),Y)          #15 Logical shift right 5 bit (X >> 5)
              066e 0075  ld   $75         2790  ld('.sysLsrw5a')                #16 Shift low byte
              066f c21d  st   [$1d]       2791  st([vTmp])                      #17
              0670 0118  ld   [$18]       2792  ld([vAC])                       #18
              0671 20e0  anda $e0         2793  anda(0b11100000)                #19
              0672 400f  ora  $0f         2794  ora( 0b00001111)                #20
              0673 e200  jmp  y,ac        2795  jmp(Y,AC)                       #21
              0674 fcff  bra  $ff         2796  bra(255)                        #22 bra shiftTable+255
                                          2797  label('.sysLsrw5a')
.sysLsrw5a:   0675 c218  st   [$18]       2798  st([vAC])                       #26
              0676 0119  ld   [$19]       2799  ld([vAC+1])                     #27 Transfer bit 8:13
              0677 8200  adda ac          2800  adda(AC)                        #28
              0678 8200  adda ac          2801  adda(AC)                        #29
              0679 8200  adda ac          2802  adda(AC)                        #30
              067a 4118  ora  [$18]       2803  ora([vAC])                      #31
              067b c218  st   [$18]       2804  st([vAC])                       #32
              067c 0083  ld   $83         2805  ld('.sysLsrw5b')                #33 Shift high byte
              067d c21d  st   [$1d]       2806  st([vTmp])                      #34
              067e 0119  ld   [$19]       2807  ld([vAC+1])                     #35
              067f 20e0  anda $e0         2808  anda(0b11100000)                #36
              0680 400f  ora  $0f         2809  ora( 0b00001111)                #37
              0681 e200  jmp  y,ac        2810  jmp(Y,AC)                       #38
              0682 fcff  bra  $ff         2811  bra(255)                        #39 bra shiftTable+255
                                          2812  label('.sysLsrw5b')
.sysLsrw5b:   0683 c219  st   [$19]       2813  st([vAC+1])                     #44
              0684 00e7  ld   $e7         2814  ld(-50/2)                       #45
              0685 1403  ld   $03,y       2815  ld(hi('REENTER'),Y)             #46
              0686 e0cb  jmp  y,$cb       2816  jmp(Y,'REENTER')                #47
                                          2817  #nop()                          #48
                                          2818
                                          2819  label('SYS_LSRW6_48')
SYS_LSRW6_48: 0687 1405  ld   $05,y       2820  ld(hi('shiftTable'),Y)          #15,44 Logical shift right 6 bit (X >> 6)
              0688 008f  ld   $8f         2821  ld('.sysLsrw6a')                #16 Shift low byte
              0689 c21d  st   [$1d]       2822  st([vTmp])                      #17
              068a 0118  ld   [$18]       2823  ld([vAC])                       #18
              068b 20c0  anda $c0         2824  anda(0b11000000)                #19
              068c 401f  ora  $1f         2825  ora( 0b00011111)                #20
              068d e200  jmp  y,ac        2826  jmp(Y,AC)                       #21
              068e fcff  bra  $ff         2827  bra(255)                        #22 bra shiftTable+255
                                          2828  label('.sysLsrw6a')
.sysLsrw6a:   068f c218  st   [$18]       2829  st([vAC])                       #26
              0690 0119  ld   [$19]       2830  ld([vAC+1])                     #27 Transfer bit 8:13
              0691 8200  adda ac          2831  adda(AC)                        #28
              0692 8200  adda ac          2832  adda(AC)                        #29
              0693 4118  ora  [$18]       2833  ora([vAC])                      #30
              0694 c218  st   [$18]       2834  st([vAC])                       #31
              0695 009c  ld   $9c         2835  ld('.sysLsrw6b')                #32 Shift high byte
              0696 c21d  st   [$1d]       2836  st([vTmp])                      #33
              0697 0119  ld   [$19]       2837  ld([vAC+1])                     #34
              0698 20c0  anda $c0         2838  anda(0b11000000)                #35
              0699 401f  ora  $1f         2839  ora( 0b00011111)                #36
              069a e200  jmp  y,ac        2840  jmp(Y,AC)                       #37
              069b fcff  bra  $ff         2841  bra(255)                        #38 bra shiftTable+255
                                          2842  label('.sysLsrw6b')
.sysLsrw6b:   069c c219  st   [$19]       2843  st([vAC+1])                     #42
              069d 1403  ld   $03,y       2844  ld(hi('REENTER'),Y)             #43
              069e e0cb  jmp  y,$cb       2845  jmp(Y,'REENTER')                #44
              069f 00e8  ld   $e8         2846  ld(-48/2)                       #45
                                          2847
                                          2848  label('SYS_LSLW4_46')
SYS_LSLW4_46: 06a0 1405  ld   $05,y       2849  ld(hi('shiftTable'),Y)          #15 Logical shift left 4 bit (X << 4)
              06a1 00ae  ld   $ae         2850  ld('.sysLsrl4')                 #16
              06a2 c21d  st   [$1d]       2851  st([vTmp])                      #17
              06a3 0119  ld   [$19]       2852  ld([vAC+1])                     #18
              06a4 8200  adda ac          2853  adda(AC)                        #19
              06a5 8200  adda ac          2854  adda(AC)                        #20
              06a6 8200  adda ac          2855  adda(AC)                        #21
              06a7 8200  adda ac          2856  adda(AC)                        #22
              06a8 c219  st   [$19]       2857  st([vAC+1])                     #23
              06a9 0118  ld   [$18]       2858  ld([vAC])                       #24
              06aa 20f0  anda $f0         2859  anda(0b11110000)                #25
              06ab 4007  ora  $07         2860  ora( 0b00000111)                #26
              06ac e200  jmp  y,ac        2861  jmp(Y,AC)                       #27
              06ad fcff  bra  $ff         2862  bra(255)                        #28 bra shiftTable+255
                                          2863  label('.sysLsrl4')
.sysLsrl4:    06ae 4119  ora  [$19]       2864  ora([vAC+1])                    #32
              06af c219  st   [$19]       2865  st([vAC+1])                     #33
              06b0 0118  ld   [$18]       2866  ld([vAC])                       #34
              06b1 8200  adda ac          2867  adda(AC)                        #35
              06b2 8200  adda ac          2868  adda(AC)                        #36
              06b3 8200  adda ac          2869  adda(AC)                        #37
              06b4 8200  adda ac          2870  adda(AC)                        #38
              06b5 c218  st   [$18]       2871  st([vAC])                       #39
              06b6 00e9  ld   $e9         2872  ld(-46/2)                       #40
              06b7 1403  ld   $03,y       2873  ld(hi('REENTER'),Y)             #41
              06b8 e0cb  jmp  y,$cb       2874  jmp(Y,'REENTER')                #42
                                          2875  #nop()                          #43
                                          2876
                                          2877  #-----------------------------------------------------------------------
                                          2878  #       v6502 right shift instruction
                                          2879  #-----------------------------------------------------------------------
                                          2880
                                          2881  label('v6502_lsr#30')
v6502_lsr#30: 06b9 1525  ld   [$25],y     2882  ld([v6502_ADH],Y)               #30 Result
              06ba ce00  st   [y,x]       2883  st([Y,X])                       #31
              06bb c228  st   [$28]       2884  st([v6502_Qz])                  #32 Z flag
              06bc c229  st   [$29]       2885  st([v6502_Qn])                  #33 N flag
              06bd 140e  ld   $0e,y       2886  ld(hi('v6502_next'),Y)          #34
              06be 00ed  ld   $ed         2887  ld(-38/2)                       #35
              06bf e020  jmp  y,$20       2888  jmp(Y,'v6502_next')             #36
                                          2889  #nop()                          #37 Overlap
                                          2890  #
                                          2891  label('v6502_ror#38')
v6502_ror#38: 06c0 1525  ld   [$25],y     2892  ld([v6502_ADH],Y)               #38,38 Result
              06c1 4119  ora  [$19]       2893  ora([v6502_BI])                 #39 Transfer bit 8
              06c2 ce00  st   [y,x]       2894  st([Y,X])                       #40
              06c3 c228  st   [$28]       2895  st([v6502_Qz])                  #41 Z flag
              06c4 c229  st   [$29]       2896  st([v6502_Qn])                  #42 N flag
              06c5 140e  ld   $0e,y       2897  ld(hi('v6502_next'),Y)          #43
              06c6 e020  jmp  y,$20       2898  jmp(Y,'v6502_next')             #44
              06c7 00e9  ld   $e9         2899  ld(-46/2)                       #45
                                          2900
                                          2901  #-----------------------------------------------------------------------
                                          2902  #       vCPU LSRB
                                          2903  #-----------------------------------------------------------------------
                                          2904
                                          2905  label('.lsrb#24')
.lsrb#24:     06c8 c600  st   [x]         2906  st([X])                         #24
              06c9 1403  ld   $03,y       2907  ld(hi('REENTER'),Y)             #25
              06ca e0cb  jmp  y,$cb       2908  jmp(Y,'REENTER')                #26
              06cb 00f1  ld   $f1         2909  ld(-30/2)                       #27
                                          2910
                                          2911  #-----------------------------------------------------------------------
                                          2912  #       vCPU LSRV
                                          2913  #-----------------------------------------------------------------------
                                          2914
                                          2915  label('.lsrv#27')
.lsrv#27:     06cc 142c  ld   $2c,y       2916  ld(hi('.lsrv#30'),Y)            #27
              06cd e053  jmp  y,$53       2917  jmp(Y,'.lsrv#30')               #28
              06ce c600  st   [x]         2918  st([X])                         #29 shifted byte low
                                          2919
                                          2920  label('.lsrv#51')
.lsrv#51:     06cf c600  st   [x]         2921  st([X])                         #51 shifted byte hi
              06d0 1403  ld   $03,y       2922  ld(hi('NEXTY'),Y)               #52
              06d1 e000  jmp  y,$00       2923  jmp(Y,'NEXTY')                  #53
              06d2 00e4  ld   $e4         2924  ld(-56/2)                       #54
                                          2925
                                          2926  #-----------------------------------------------------------------------
                                          2927  #       vCPU LSRVL
                                          2928  #-----------------------------------------------------------------------
                                          2929
                                          2930  label('.lsrvl#26')
.lsrvl#26:    06d3 142c  ld   $2c,y       2931  ld(hi('.lsrvl#29'),Y)           #26
              06d4 e075  jmp  y,$75       2932  jmp(Y,'.lsrvl#29')              #27
              06d5 c600  st   [x]         2933  st([X])                         #28 shifted byte 0
                                          2934
                                          2935  label('.lsrvl#54')
.lsrvl#54:    06d6 142c  ld   $2c,y       2936  ld(hi('.lsrvl#57'),Y)           #54
              06d7 e08b  jmp  y,$8b       2937  jmp(Y,'.lsrvl#57')              #55
              06d8 c600  st   [x]         2938  st([X])                         #56 shifted byte 1
                                          2939
                                          2940  label('.lsrvl#76')
.lsrvl#76:    06d9 142c  ld   $2c,y       2941  ld(hi('.lsrvl#79'),Y)           #76
              06da e09b  jmp  y,$9b       2942  jmp(Y,'.lsrvl#79')              #77
              06db c600  st   [x]         2943  st([X])                         #78 shifted byte 2
                                          2944
                                          2945  label('.lsrvl#98')
.lsrvl#98:    06dc c600  st   [x]         2946  st([X])                         #98 shifted byte 3
              06dd 1403  ld   $03,y       2947  ld(hi('REENTER'),Y)             #99
              06de e0cb  jmp  y,$cb       2948  jmp(Y,'REENTER')                #100
              06df 00cc  ld   $cc         2949  ld(-104/2)                      #101
                                          2950
                                          2951
                                          2952  #-----------------------------------------------------------------------
                                          2953  #
                                          2954  #  $0700 ROM page 7-8: Gigatron font data
                                          2955  #
                                          2956  #-----------------------------------------------------------------------
                                          2957
              06e0 0200  nop              2958  align(0x100, size=0x100)
              06e1 0200  nop
              06e2 0200  nop
              * 32 times
                                          2959
                                          2960  label('font32up')
                                          2961  for ch in range(32, 32+50):
                                          2962    comment = 'Char %s' % repr(chr(ch))
                                          2963    for byte in font.font[ch-32]:
                                          2964      ld(byte)
font32up:     0700 0000  ld   $00         ;Char ' '
              0701 0000  ld   $00
              0702 0000  ld   $00
              * 5 times
              0705 0000  ld   $00         ;Char '!'
              0706 0000  ld   $00
              0707 00fa  ld   $fa
              0708 0000  ld   $00
              0709 0000  ld   $00
              070a 00a0  ld   $a0         ;Char '"'
              070b 00c0  ld   $c0
              070c 0000  ld   $00
              070d 00a0  ld   $a0
              070e 00c0  ld   $c0
              070f 0028  ld   $28         ;Char '#'
              0710 00fe  ld   $fe
              0711 0028  ld   $28
              0712 00fe  ld   $fe
              0713 0028  ld   $28
              0714 0024  ld   $24         ;Char '$'
              0715 0054  ld   $54
              0716 00fe  ld   $fe
              0717 0054  ld   $54
              0718 0048  ld   $48
              0719 00c4  ld   $c4         ;Char '%'
              071a 00c8  ld   $c8
              071b 0010  ld   $10
              071c 0026  ld   $26
              071d 0046  ld   $46
              071e 006c  ld   $6c         ;Char '&'
              071f 0092  ld   $92
              0720 006a  ld   $6a
              0721 0004  ld   $04
              0722 000a  ld   $0a
              0723 0000  ld   $00         ;Char "'"
              0724 00a0  ld   $a0
              0725 00c0  ld   $c0
              0726 0000  ld   $00
              0727 0000  ld   $00
              0728 0000  ld   $00         ;Char '('
              0729 0038  ld   $38
              072a 0044  ld   $44
              072b 0082  ld   $82
              072c 0000  ld   $00
              072d 0000  ld   $00         ;Char ')'
              072e 0082  ld   $82
              072f 0044  ld   $44
              0730 0038  ld   $38
              0731 0000  ld   $00
              0732 0028  ld   $28         ;Char '*'
              0733 0010  ld   $10
              0734 007c  ld   $7c
              0735 0010  ld   $10
              0736 0028  ld   $28
              0737 0010  ld   $10         ;Char '+'
              0738 0010  ld   $10
              0739 007c  ld   $7c
              073a 0010  ld   $10
              073b 0010  ld   $10
              073c 0000  ld   $00         ;Char ','
              073d 0005  ld   $05
              073e 0006  ld   $06
              073f 0000  ld   $00
              0740 0000  ld   $00
              0741 0010  ld   $10         ;Char '-'
              0742 0010  ld   $10
              0743 0010  ld   $10
              * 5 times
              0746 0000  ld   $00         ;Char '.'
              0747 0002  ld   $02
              0748 0002  ld   $02
              0749 0000  ld   $00
              074a 0000  ld   $00
              074b 0000  ld   $00         ;Char '/'
              074c 0006  ld   $06
              074d 0018  ld   $18
              074e 0060  ld   $60
              074f 0000  ld   $00
              0750 007c  ld   $7c         ;Char '0'
              0751 008a  ld   $8a
              0752 0092  ld   $92
              0753 00a2  ld   $a2
              0754 007c  ld   $7c
              0755 0022  ld   $22         ;Char '1'
              0756 0042  ld   $42
              0757 00fe  ld   $fe
              0758 0002  ld   $02
              0759 0002  ld   $02
              075a 0046  ld   $46         ;Char '2'
              075b 008a  ld   $8a
              075c 0092  ld   $92
              075d 0092  ld   $92
              075e 0062  ld   $62
              075f 0044  ld   $44         ;Char '3'
              0760 0082  ld   $82
              0761 0092  ld   $92
              0762 0092  ld   $92
              0763 006c  ld   $6c
              0764 0018  ld   $18         ;Char '4'
              0765 0028  ld   $28
              0766 0048  ld   $48
              0767 00fe  ld   $fe
              0768 0008  ld   $08
              0769 00e4  ld   $e4         ;Char '5'
              076a 00a2  ld   $a2
              076b 00a2  ld   $a2
              076c 00a2  ld   $a2
              076d 009c  ld   $9c
              076e 003c  ld   $3c         ;Char '6'
              076f 0052  ld   $52
              0770 0092  ld   $92
              0771 0092  ld   $92
              0772 000c  ld   $0c
              0773 0080  ld   $80         ;Char '7'
              0774 008e  ld   $8e
              0775 0090  ld   $90
              0776 00a0  ld   $a0
              0777 00c0  ld   $c0
              0778 006c  ld   $6c         ;Char '8'
              0779 0092  ld   $92
              077a 0092  ld   $92
              077b 0092  ld   $92
              077c 006c  ld   $6c
              077d 0060  ld   $60         ;Char '9'
              077e 0092  ld   $92
              077f 0092  ld   $92
              0780 0094  ld   $94
              0781 0078  ld   $78
              0782 0000  ld   $00         ;Char ':'
              0783 0024  ld   $24
              0784 0024  ld   $24
              0785 0000  ld   $00
              0786 0000  ld   $00
              0787 0000  ld   $00         ;Char ';'
              0788 0025  ld   $25
              0789 0026  ld   $26
              078a 0000  ld   $00
              078b 0000  ld   $00
              078c 0010  ld   $10         ;Char '<'
              078d 0028  ld   $28
              078e 0044  ld   $44
              078f 0082  ld   $82
              0790 0000  ld   $00
              0791 0028  ld   $28         ;Char '='
              0792 0028  ld   $28
              0793 0028  ld   $28
              * 5 times
              0796 0000  ld   $00         ;Char '>'
              0797 0082  ld   $82
              0798 0044  ld   $44
              0799 0028  ld   $28
              079a 0010  ld   $10
              079b 0040  ld   $40         ;Char '?'
              079c 0080  ld   $80
              079d 008a  ld   $8a
              079e 0090  ld   $90
              079f 0060  ld   $60
              07a0 007c  ld   $7c         ;Char '@'
              07a1 0082  ld   $82
              07a2 00ba  ld   $ba
              07a3 00aa  ld   $aa
              07a4 0078  ld   $78
              07a5 003e  ld   $3e         ;Char 'A'
              07a6 0048  ld   $48
              07a7 0088  ld   $88
              07a8 0048  ld   $48
              07a9 003e  ld   $3e
              07aa 00fe  ld   $fe         ;Char 'B'
              07ab 0092  ld   $92
              07ac 0092  ld   $92
              07ad 0092  ld   $92
              07ae 006c  ld   $6c
              07af 007c  ld   $7c         ;Char 'C'
              07b0 0082  ld   $82
              07b1 0082  ld   $82
              07b2 0082  ld   $82
              07b3 0044  ld   $44
              07b4 00fe  ld   $fe         ;Char 'D'
              07b5 0082  ld   $82
              07b6 0082  ld   $82
              07b7 0044  ld   $44
              07b8 0038  ld   $38
              07b9 00fe  ld   $fe         ;Char 'E'
              07ba 0092  ld   $92
              07bb 0092  ld   $92
              07bc 0092  ld   $92
              07bd 0082  ld   $82
              07be 00fe  ld   $fe         ;Char 'F'
              07bf 0090  ld   $90
              07c0 0090  ld   $90
              07c1 0090  ld   $90
              07c2 0080  ld   $80
              07c3 007c  ld   $7c         ;Char 'G'
              07c4 0082  ld   $82
              07c5 0082  ld   $82
              07c6 0092  ld   $92
              07c7 005c  ld   $5c
              07c8 00fe  ld   $fe         ;Char 'H'
              07c9 0010  ld   $10
              07ca 0010  ld   $10
              07cb 0010  ld   $10
              07cc 00fe  ld   $fe
              07cd 0000  ld   $00         ;Char 'I'
              07ce 0082  ld   $82
              07cf 00fe  ld   $fe
              07d0 0082  ld   $82
              07d1 0000  ld   $00
              07d2 0004  ld   $04         ;Char 'J'
              07d3 0002  ld   $02
              07d4 0082  ld   $82
              07d5 00fc  ld   $fc
              07d6 0080  ld   $80
              07d7 00fe  ld   $fe         ;Char 'K'
              07d8 0010  ld   $10
              07d9 0028  ld   $28
              07da 0044  ld   $44
              07db 0082  ld   $82
              07dc 00fe  ld   $fe         ;Char 'L'
              07dd 0002  ld   $02
              07de 0002  ld   $02
              07df 0002  ld   $02
              07e0 0002  ld   $02
              07e1 00fe  ld   $fe         ;Char 'M'
              07e2 0040  ld   $40
              07e3 0030  ld   $30
              07e4 0040  ld   $40
              07e5 00fe  ld   $fe
              07e6 00fe  ld   $fe         ;Char 'N'
              07e7 0020  ld   $20
              07e8 0010  ld   $10
              07e9 0008  ld   $08
              07ea 00fe  ld   $fe
              07eb 007c  ld   $7c         ;Char 'O'
              07ec 0082  ld   $82
              07ed 0082  ld   $82
              07ee 0082  ld   $82
              07ef 007c  ld   $7c
              07f0 00fe  ld   $fe         ;Char 'P'
              07f1 0090  ld   $90
              07f2 0090  ld   $90
              07f3 0090  ld   $90
              07f4 0060  ld   $60
              07f5 007c  ld   $7c         ;Char 'Q'
              07f6 0082  ld   $82
              07f7 008a  ld   $8a
              07f8 0084  ld   $84
              07f9 007a  ld   $7a
                                          2965      comment = C(comment)
                                          2966
              07fa 0200  nop              2967  trampoline()
              07fb fe00  bra  ac          ;+-----------------------------------+
              07fc fcfd  bra  $07fd       ;|                                   |
              07fd 1418  ld   $18,y       ;| Trampoline for page $0700 lookups |
              07fe e006  jmp  y,$06       ;|                                   |
              07ff c218  st   [$18]       ;+-----------------------------------+
                                          2968
                                          2969  #-----------------------------------------------------------------------
                                          2970
                                          2971  align(0x100, size=0x100)
                                          2972
                                          2973  label('font82up')
                                          2974  for ch in range(32+50, 132):
                                          2975    comment = 'Char %s' % repr(chr(ch))
                                          2976    for byte in font.font[ch-32]:
                                          2977      ld(byte)
font82up:     0800 00fe  ld   $fe         ;Char 'R'
              0801 0090  ld   $90
              0802 0098  ld   $98
              0803 0094  ld   $94
              0804 0062  ld   $62
              0805 0062  ld   $62         ;Char 'S'
              0806 0092  ld   $92
              0807 0092  ld   $92
              0808 0092  ld   $92
              0809 000c  ld   $0c
              080a 0080  ld   $80         ;Char 'T'
              080b 0080  ld   $80
              080c 00fe  ld   $fe
              080d 0080  ld   $80
              080e 0080  ld   $80
              080f 00fc  ld   $fc         ;Char 'U'
              0810 0002  ld   $02
              0811 0002  ld   $02
              0812 0002  ld   $02
              0813 00fc  ld   $fc
              0814 00f0  ld   $f0         ;Char 'V'
              0815 000c  ld   $0c
              0816 0002  ld   $02
              0817 000c  ld   $0c
              0818 00f0  ld   $f0
              0819 00fe  ld   $fe         ;Char 'W'
              081a 0004  ld   $04
              081b 0018  ld   $18
              081c 0004  ld   $04
              081d 00fe  ld   $fe
              081e 00c6  ld   $c6         ;Char 'X'
              081f 0028  ld   $28
              0820 0010  ld   $10
              0821 0028  ld   $28
              0822 00c6  ld   $c6
              0823 00e0  ld   $e0         ;Char 'Y'
              0824 0010  ld   $10
              0825 000e  ld   $0e
              0826 0010  ld   $10
              0827 00e0  ld   $e0
              0828 0086  ld   $86         ;Char 'Z'
              0829 008a  ld   $8a
              082a 0092  ld   $92
              082b 00a2  ld   $a2
              082c 00c2  ld   $c2
              082d 0000  ld   $00         ;Char '['
              082e 00fe  ld   $fe
              082f 0082  ld   $82
              0830 0082  ld   $82
              0831 0000  ld   $00
              0832 0000  ld   $00         ;Char '\\'
              0833 0060  ld   $60
              0834 0018  ld   $18
              0835 0006  ld   $06
              0836 0000  ld   $00
              0837 0000  ld   $00         ;Char ']'
              0838 0082  ld   $82
              0839 0082  ld   $82
              083a 00fe  ld   $fe
              083b 0000  ld   $00
              083c 0020  ld   $20         ;Char '^'
              083d 0040  ld   $40
              083e 0080  ld   $80
              083f 0040  ld   $40
              0840 0020  ld   $20
              0841 0002  ld   $02         ;Char '_'
              0842 0002  ld   $02
              0843 0002  ld   $02
              * 5 times
              0846 0000  ld   $00         ;Char '`'
              0847 0000  ld   $00
              0848 00c0  ld   $c0
              0849 00a0  ld   $a0
              084a 0000  ld   $00
              084b 0004  ld   $04         ;Char 'a'
              084c 002a  ld   $2a
              084d 002a  ld   $2a
              084e 002a  ld   $2a
              084f 001e  ld   $1e
              0850 00fe  ld   $fe         ;Char 'b'
              0851 0022  ld   $22
              0852 0022  ld   $22
              0853 0022  ld   $22
              0854 001c  ld   $1c
              0855 001c  ld   $1c         ;Char 'c'
              0856 0022  ld   $22
              0857 0022  ld   $22
              0858 0022  ld   $22
              0859 0002  ld   $02
              085a 001c  ld   $1c         ;Char 'd'
              085b 0022  ld   $22
              085c 0022  ld   $22
              085d 0022  ld   $22
              085e 00fe  ld   $fe
              085f 001c  ld   $1c         ;Char 'e'
              0860 002a  ld   $2a
              0861 002a  ld   $2a
              0862 002a  ld   $2a
              0863 0018  ld   $18
              0864 0010  ld   $10         ;Char 'f'
              0865 007e  ld   $7e
              0866 0090  ld   $90
              0867 0080  ld   $80
              0868 0040  ld   $40
              0869 0018  ld   $18         ;Char 'g'
              086a 0025  ld   $25
              086b 0025  ld   $25
              086c 0025  ld   $25
              086d 001e  ld   $1e
              086e 00fe  ld   $fe         ;Char 'h'
              086f 0020  ld   $20
              0870 0020  ld   $20
              0871 0020  ld   $20
              0872 001e  ld   $1e
              0873 0000  ld   $00         ;Char 'i'
              0874 0022  ld   $22
              0875 00be  ld   $be
              0876 0002  ld   $02
              0877 0000  ld   $00
              0878 0002  ld   $02         ;Char 'j'
              0879 0001  ld   $01
              087a 0021  ld   $21
              087b 00be  ld   $be
              087c 0000  ld   $00
              087d 00fe  ld   $fe         ;Char 'k'
              087e 0008  ld   $08
              087f 0018  ld   $18
              0880 0024  ld   $24
              0881 0002  ld   $02
              0882 0000  ld   $00         ;Char 'l'
              0883 0082  ld   $82
              0884 00fe  ld   $fe
              0885 0002  ld   $02
              0886 0000  ld   $00
              0887 003e  ld   $3e         ;Char 'm'
              0888 0020  ld   $20
              0889 001c  ld   $1c
              088a 0020  ld   $20
              088b 001e  ld   $1e
              088c 003e  ld   $3e         ;Char 'n'
              088d 0010  ld   $10
              088e 0020  ld   $20
              088f 0020  ld   $20
              0890 001e  ld   $1e
              0891 001c  ld   $1c         ;Char 'o'
              0892 0022  ld   $22
              0893 0022  ld   $22
              0894 0022  ld   $22
              0895 001c  ld   $1c
              0896 003f  ld   $3f         ;Char 'p'
              0897 0024  ld   $24
              0898 0024  ld   $24
              0899 0024  ld   $24
              089a 0018  ld   $18
              089b 0018  ld   $18         ;Char 'q'
              089c 0024  ld   $24
              089d 0024  ld   $24
              089e 0024  ld   $24
              089f 003f  ld   $3f
              08a0 003e  ld   $3e         ;Char 'r'
              08a1 0010  ld   $10
              08a2 0020  ld   $20
              08a3 0020  ld   $20
              08a4 0010  ld   $10
              08a5 0012  ld   $12         ;Char 's'
              08a6 002a  ld   $2a
              08a7 002a  ld   $2a
              08a8 002a  ld   $2a
              08a9 0004  ld   $04
              08aa 0020  ld   $20         ;Char 't'
              08ab 00fc  ld   $fc
              08ac 0022  ld   $22
              08ad 0002  ld   $02
              08ae 0004  ld   $04
              08af 003c  ld   $3c         ;Char 'u'
              08b0 0002  ld   $02
              08b1 0002  ld   $02
              08b2 0004  ld   $04
              08b3 003e  ld   $3e
              08b4 0038  ld   $38         ;Char 'v'
              08b5 0004  ld   $04
              08b6 0002  ld   $02
              08b7 0004  ld   $04
              08b8 0038  ld   $38
              08b9 003c  ld   $3c         ;Char 'w'
              08ba 0002  ld   $02
              08bb 000c  ld   $0c
              08bc 0002  ld   $02
              08bd 003c  ld   $3c
              08be 0022  ld   $22         ;Char 'x'
              08bf 0014  ld   $14
              08c0 0008  ld   $08
              08c1 0014  ld   $14
              08c2 0022  ld   $22
              08c3 0038  ld   $38         ;Char 'y'
              08c4 0005  ld   $05
              08c5 0005  ld   $05
              08c6 0005  ld   $05
              08c7 003e  ld   $3e
              08c8 0022  ld   $22         ;Char 'z'
              08c9 0026  ld   $26
              08ca 002a  ld   $2a
              08cb 0032  ld   $32
              08cc 0022  ld   $22
              08cd 0010  ld   $10         ;Char '{'
              08ce 006c  ld   $6c
              08cf 0082  ld   $82
              08d0 0082  ld   $82
              08d1 0000  ld   $00
              08d2 0000  ld   $00         ;Char '|'
              08d3 0000  ld   $00
              08d4 00fe  ld   $fe
              08d5 0000  ld   $00
              08d6 0000  ld   $00
              08d7 0000  ld   $00         ;Char '}'
              08d8 0082  ld   $82
              08d9 0082  ld   $82
              08da 006c  ld   $6c
              08db 0010  ld   $10
              08dc 0040  ld   $40         ;Char '~'
              08dd 0080  ld   $80
              08de 0040  ld   $40
              08df 0020  ld   $20
              08e0 0040  ld   $40
              08e1 00fe  ld   $fe         ;Char '\x7f'
              08e2 00fe  ld   $fe
              08e3 00fe  ld   $fe
              * 5 times
              08e6 0010  ld   $10         ;Char '\x80'
              08e7 0038  ld   $38
              08e8 0054  ld   $54
              08e9 0010  ld   $10
              08ea 0010  ld   $10
              08eb 0010  ld   $10         ;Char '\x81'
              08ec 0020  ld   $20
              08ed 007c  ld   $7c
              08ee 0020  ld   $20
              08ef 0010  ld   $10
              08f0 0010  ld   $10         ;Char '\x82'
              08f1 0010  ld   $10
              08f2 0054  ld   $54
              08f3 0038  ld   $38
              08f4 0010  ld   $10
              08f5 0010  ld   $10         ;Char '\x83'
              08f6 0008  ld   $08
              08f7 007c  ld   $7c
              08f8 0008  ld   $08
              08f9 0010  ld   $10
                                          2978      comment = C(comment)
                                          2979
              08fa 0200  nop              2980  trampoline()
              08fb fe00  bra  ac          ;+-----------------------------------+
              08fc fcfd  bra  $08fd       ;|                                   |
              08fd 1418  ld   $18,y       ;| Trampoline for page $0800 lookups |
              08fe e006  jmp  y,$06       ;|                                   |
              08ff c218  st   [$18]       ;+-----------------------------------+
                                          2981
                                          2982  #-----------------------------------------------------------------------
                                          2983  #
                                          2984  #  $0900 ROM page 9: Key table for music
                                          2985  #
                                          2986  #-----------------------------------------------------------------------
                                          2987
                                          2988  align(0x100, size=0x100)
                                          2989  notes = 'CCDDEFFGGAAB'
                                          2990  sampleRate = cpuClock / 200.0 / 4
                                          2991  label('notesTable')
notesTable:   0900 0000  ld   $00         2992  ld(0)
              0901 0000  ld   $00         2993  ld(0)
                                          2994  for i in range(0, 250, 2):
                                          2995    j = i//2-1
                                          2996    freq = 440.0*2.0**((j-57)/12.0)
                                          2997    if j>=0 and freq <= sampleRate/2.0:
                                          2998      key = int(round(32768 * freq / sampleRate))
                                          2999      octave, note = j//12, notes[j%12]
                                          3000      sharp = '-' if notes[j%12-1] != note else '#'
                                          3001      comment = '%s%s%s (%0.1f Hz)' % (note, sharp, octave, freq)
                                          3002      ld(key&127); C(comment); ld(key>>7)
              0902 0045  ld   $45         ;C-0 (16.4 Hz)
              0903 0000  ld   $00
              0904 0049  ld   $49         ;C#0 (17.3 Hz)
              0905 0000  ld   $00
              0906 004d  ld   $4d         ;D-0 (18.4 Hz)
              0907 0000  ld   $00
              0908 0052  ld   $52         ;D#0 (19.4 Hz)
              0909 0000  ld   $00
              090a 0056  ld   $56         ;E-0 (20.6 Hz)
              090b 0000  ld   $00
              090c 005c  ld   $5c         ;F-0 (21.8 Hz)
              090d 0000  ld   $00
              090e 0061  ld   $61         ;F#0 (23.1 Hz)
              090f 0000  ld   $00
              0910 0067  ld   $67         ;G-0 (24.5 Hz)
              0911 0000  ld   $00
              0912 006d  ld   $6d         ;G#0 (26.0 Hz)
              0913 0000  ld   $00
              0914 0073  ld   $73         ;A-0 (27.5 Hz)
              0915 0000  ld   $00
              0916 007a  ld   $7a         ;A#0 (29.1 Hz)
              0917 0000  ld   $00
              0918 0001  ld   $01         ;B-0 (30.9 Hz)
              0919 0001  ld   $01
              091a 0009  ld   $09         ;C-1 (32.7 Hz)
              091b 0001  ld   $01
              091c 0011  ld   $11         ;C#1 (34.6 Hz)
              091d 0001  ld   $01
              091e 001a  ld   $1a         ;D-1 (36.7 Hz)
              091f 0001  ld   $01
              0920 0023  ld   $23         ;D#1 (38.9 Hz)
              0921 0001  ld   $01
              0922 002d  ld   $2d         ;E-1 (41.2 Hz)
              0923 0001  ld   $01
              0924 0037  ld   $37         ;F-1 (43.7 Hz)
              0925 0001  ld   $01
              0926 0042  ld   $42         ;F#1 (46.2 Hz)
              0927 0001  ld   $01
              0928 004e  ld   $4e         ;G-1 (49.0 Hz)
              0929 0001  ld   $01
              092a 005a  ld   $5a         ;G#1 (51.9 Hz)
              092b 0001  ld   $01
              092c 0067  ld   $67         ;A-1 (55.0 Hz)
              092d 0001  ld   $01
              092e 0074  ld   $74         ;A#1 (58.3 Hz)
              092f 0001  ld   $01
              0930 0003  ld   $03         ;B-1 (61.7 Hz)
              0931 0002  ld   $02
              0932 0012  ld   $12         ;C-2 (65.4 Hz)
              0933 0002  ld   $02
              0934 0023  ld   $23         ;C#2 (69.3 Hz)
              0935 0002  ld   $02
              0936 0034  ld   $34         ;D-2 (73.4 Hz)
              0937 0002  ld   $02
              0938 0046  ld   $46         ;D#2 (77.8 Hz)
              0939 0002  ld   $02
              093a 005a  ld   $5a         ;E-2 (82.4 Hz)
              093b 0002  ld   $02
              093c 006e  ld   $6e         ;F-2 (87.3 Hz)
              093d 0002  ld   $02
              093e 0004  ld   $04         ;F#2 (92.5 Hz)
              093f 0003  ld   $03
              0940 001b  ld   $1b         ;G-2 (98.0 Hz)
              0941 0003  ld   $03
              0942 0033  ld   $33         ;G#2 (103.8 Hz)
              0943 0003  ld   $03
              0944 004d  ld   $4d         ;A-2 (110.0 Hz)
              0945 0003  ld   $03
              0946 0069  ld   $69         ;A#2 (116.5 Hz)
              0947 0003  ld   $03
              0948 0006  ld   $06         ;B-2 (123.5 Hz)
              0949 0004  ld   $04
              094a 0025  ld   $25         ;C-3 (130.8 Hz)
              094b 0004  ld   $04
              094c 0045  ld   $45         ;C#3 (138.6 Hz)
              094d 0004  ld   $04
              094e 0068  ld   $68         ;D-3 (146.8 Hz)
              094f 0004  ld   $04
              0950 000c  ld   $0c         ;D#3 (155.6 Hz)
              0951 0005  ld   $05
              0952 0033  ld   $33         ;E-3 (164.8 Hz)
              0953 0005  ld   $05
              0954 005c  ld   $5c         ;F-3 (174.6 Hz)
              0955 0005  ld   $05
              0956 0008  ld   $08         ;F#3 (185.0 Hz)
              0957 0006  ld   $06
              0958 0036  ld   $36         ;G-3 (196.0 Hz)
              0959 0006  ld   $06
              095a 0067  ld   $67         ;G#3 (207.7 Hz)
              095b 0006  ld   $06
              095c 001b  ld   $1b         ;A-3 (220.0 Hz)
              095d 0007  ld   $07
              095e 0052  ld   $52         ;A#3 (233.1 Hz)
              095f 0007  ld   $07
              0960 000c  ld   $0c         ;B-3 (246.9 Hz)
              0961 0008  ld   $08
              0962 0049  ld   $49         ;C-4 (261.6 Hz)
              0963 0008  ld   $08
              0964 000b  ld   $0b         ;C#4 (277.2 Hz)
              0965 0009  ld   $09
              0966 0050  ld   $50         ;D-4 (293.7 Hz)
              0967 0009  ld   $09
              0968 0019  ld   $19         ;D#4 (311.1 Hz)
              0969 000a  ld   $0a
              096a 0067  ld   $67         ;E-4 (329.6 Hz)
              096b 000a  ld   $0a
              096c 0039  ld   $39         ;F-4 (349.2 Hz)
              096d 000b  ld   $0b
              096e 0010  ld   $10         ;F#4 (370.0 Hz)
              096f 000c  ld   $0c
              0970 006c  ld   $6c         ;G-4 (392.0 Hz)
              0971 000c  ld   $0c
              0972 004e  ld   $4e         ;G#4 (415.3 Hz)
              0973 000d  ld   $0d
              0974 0035  ld   $35         ;A-4 (440.0 Hz)
              0975 000e  ld   $0e
              0976 0023  ld   $23         ;A#4 (466.2 Hz)
              0977 000f  ld   $0f
              0978 0017  ld   $17         ;B-4 (493.9 Hz)
              0979 0010  ld   $10
              097a 0013  ld   $13         ;C-5 (523.3 Hz)
              097b 0011  ld   $11
              097c 0015  ld   $15         ;C#5 (554.4 Hz)
              097d 0012  ld   $12
              097e 001f  ld   $1f         ;D-5 (587.3 Hz)
              097f 0013  ld   $13
              0980 0032  ld   $32         ;D#5 (622.3 Hz)
              0981 0014  ld   $14
              0982 004d  ld   $4d         ;E-5 (659.3 Hz)
              0983 0015  ld   $15
              0984 0072  ld   $72         ;F-5 (698.5 Hz)
              0985 0016  ld   $16
              0986 0020  ld   $20         ;F#5 (740.0 Hz)
              0987 0018  ld   $18
              0988 0058  ld   $58         ;G-5 (784.0 Hz)
              0989 0019  ld   $19
              098a 001c  ld   $1c         ;G#5 (830.6 Hz)
              098b 001b  ld   $1b
              098c 006b  ld   $6b         ;A-5 (880.0 Hz)
              098d 001c  ld   $1c
              098e 0046  ld   $46         ;A#5 (932.3 Hz)
              098f 001e  ld   $1e
              0990 002f  ld   $2f         ;B-5 (987.8 Hz)
              0991 0020  ld   $20
              0992 0025  ld   $25         ;C-6 (1046.5 Hz)
              0993 0022  ld   $22
              0994 002a  ld   $2a         ;C#6 (1108.7 Hz)
              0995 0024  ld   $24
              0996 003f  ld   $3f         ;D-6 (1174.7 Hz)
              0997 0026  ld   $26
              0998 0064  ld   $64         ;D#6 (1244.5 Hz)
              0999 0028  ld   $28
              099a 001a  ld   $1a         ;E-6 (1318.5 Hz)
              099b 002b  ld   $2b
              099c 0063  ld   $63         ;F-6 (1396.9 Hz)
              099d 002d  ld   $2d
              099e 003f  ld   $3f         ;F#6 (1480.0 Hz)
              099f 0030  ld   $30
              09a0 0031  ld   $31         ;G-6 (1568.0 Hz)
              09a1 0033  ld   $33
              09a2 0038  ld   $38         ;G#6 (1661.2 Hz)
              09a3 0036  ld   $36
              09a4 0056  ld   $56         ;A-6 (1760.0 Hz)
              09a5 0039  ld   $39
              09a6 000d  ld   $0d         ;A#6 (1864.7 Hz)
              09a7 003d  ld   $3d
              09a8 005e  ld   $5e         ;B-6 (1975.5 Hz)
              09a9 0040  ld   $40
              09aa 004b  ld   $4b         ;C-7 (2093.0 Hz)
              09ab 0044  ld   $44
              09ac 0055  ld   $55         ;C#7 (2217.5 Hz)
              09ad 0048  ld   $48
              09ae 007e  ld   $7e         ;D-7 (2349.3 Hz)
              09af 004c  ld   $4c
              09b0 0048  ld   $48         ;D#7 (2489.0 Hz)
              09b1 0051  ld   $51
              09b2 0034  ld   $34         ;E-7 (2637.0 Hz)
              09b3 0056  ld   $56
              09b4 0046  ld   $46         ;F-7 (2793.8 Hz)
              09b5 005b  ld   $5b
              09b6 007f  ld   $7f         ;F#7 (2960.0 Hz)
              09b7 0060  ld   $60
              09b8 0061  ld   $61         ;G-7 (3136.0 Hz)
              09b9 0066  ld   $66
              09ba 006f  ld   $6f         ;G#7 (3322.4 Hz)
              09bb 006c  ld   $6c
              09bc 002c  ld   $2c         ;A-7 (3520.0 Hz)
              09bd 0073  ld   $73
              09be 001a  ld   $1a         ;A#7 (3729.3 Hz)
              09bf 007a  ld   $7a
                                          3003
                                          3004  # NOTE trampoline, (0x09c0), (cycles times are +1 for midi#13)
                                          3005  label('noteTrampoline')
noteTrampoline:
              09c0 fe00  bra  ac          3006  bra(AC)                         #22,#23 #35,#36 fetches ROM note byte, (low then high)
              09c1 fcc2  bra  $09c2       3007  bra(pc()+1)                     #24,#37
              09c2 1427  ld   $27,y       3008  ld(hi('note#13'),Y)             #25,#38 midi#13 lives in the same page
              09c3 e11d  jmp  y,[$1d]     3009  jmp(Y,[vTmp])                   #26,#39
              09c4 0200  nop              3010  nop()                           #27,#40
                                          3011
              09c5 0200  nop              3012  trampoline()
              09c6 0200  nop
              09c7 0200  nop
              * 54 times
              09fb fe00  bra  ac          ;+-----------------------------------+
              09fc fcfd  bra  $09fd       ;|                                   |
              09fd 1418  ld   $18,y       ;| Trampoline for page $0900 lookups |
              09fe e006  jmp  y,$06       ;|                                   |
              09ff c218  st   [$18]       ;+-----------------------------------+
                                          3013
                                          3014  #-----------------------------------------------------------------------
                                          3015  #
                                          3016  #  $0a00 ROM page 10: Inversion table
                                          3017  #
                                          3018  #-----------------------------------------------------------------------
                                          3019
                                          3020  align(0x100, size=0x100)
                                          3021  label('invTable')
                                          3022
                                          3023  # Unit 64, table offset 16 (=1/4), value offset 1: (x+16)*(y+1) == 64*64 - e
                                          3024  for i in range(251):
invTable:     0a00 00ff  ld   $ff         3025    ld(4096//(i+16)-1)
              0a01 00ef  ld   $ef
              0a02 00e2  ld   $e2
              0a03 00d6  ld   $d6
              0a04 00cb  ld   $cb
              0a05 00c2  ld   $c2
              0a06 00b9  ld   $b9
              0a07 00b1  ld   $b1
              0a08 00a9  ld   $a9
              0a09 00a2  ld   $a2
              0a0a 009c  ld   $9c
              0a0b 0096  ld   $96
              0a0c 0091  ld   $91
              0a0d 008c  ld   $8c
              0a0e 0087  ld   $87
              0a0f 0083  ld   $83
              0a10 007f  ld   $7f
              0a11 007b  ld   $7b
              0a12 0077  ld   $77
              0a13 0074  ld   $74
              0a14 0070  ld   $70
              0a15 006d  ld   $6d
              0a16 006a  ld   $6a
              0a17 0068  ld   $68
              0a18 0065  ld   $65
              0a19 0062  ld   $62
              0a1a 0060  ld   $60
              0a1b 005e  ld   $5e
              0a1c 005c  ld   $5c
              0a1d 005a  ld   $5a
              0a1e 0058  ld   $58
              0a1f 0056  ld   $56
              0a20 0054  ld   $54
              0a21 0052  ld   $52
              0a22 0050  ld   $50
              0a23 004f  ld   $4f
              0a24 004d  ld   $4d
              0a25 004c  ld   $4c
              0a26 004a  ld   $4a
              0a27 0049  ld   $49
              0a28 0048  ld   $48
              0a29 0046  ld   $46
              0a2a 0045  ld   $45
              0a2b 0044  ld   $44
              0a2c 0043  ld   $43
              0a2d 0042  ld   $42
              0a2e 0041  ld   $41
              0a2f 0040  ld   $40
              0a30 003f  ld   $3f
              0a31 003e  ld   $3e
              0a32 003d  ld   $3d
              0a33 003c  ld   $3c
              0a34 003b  ld   $3b
              0a35 003a  ld   $3a
              0a36 0039  ld   $39
              0a37 0038  ld   $38
              0a38 0037  ld   $37
              0a39 0037  ld   $37
              0a3a 0036  ld   $36
              0a3b 0035  ld   $35
              0a3c 0034  ld   $34
              0a3d 0034  ld   $34
              0a3e 0033  ld   $33
              0a3f 0032  ld   $32
              0a40 0032  ld   $32
              0a41 0031  ld   $31
              0a42 0030  ld   $30
              0a43 0030  ld   $30
              0a44 002f  ld   $2f
              0a45 002f  ld   $2f
              0a46 002e  ld   $2e
              0a47 002e  ld   $2e
              0a48 002d  ld   $2d
              0a49 002d  ld   $2d
              0a4a 002c  ld   $2c
              0a4b 002c  ld   $2c
              0a4c 002b  ld   $2b
              0a4d 002b  ld   $2b
              0a4e 002a  ld   $2a
              0a4f 002a  ld   $2a
              0a50 0029  ld   $29
              0a51 0029  ld   $29
              0a52 0028  ld   $28
              0a53 0028  ld   $28
              0a54 0027  ld   $27
              0a55 0027  ld   $27
              0a56 0027  ld   $27
              0a57 0026  ld   $26
              0a58 0026  ld   $26
              0a59 0026  ld   $26
              0a5a 0025  ld   $25
              0a5b 0025  ld   $25
              0a5c 0024  ld   $24
              0a5d 0024  ld   $24
              0a5e 0024  ld   $24
              0a5f 0023  ld   $23
              0a60 0023  ld   $23
              0a61 0023  ld   $23
              0a62 0022  ld   $22
              0a63 0022  ld   $22
              0a64 0022  ld   $22
              0a65 0022  ld   $22
              0a66 0021  ld   $21
              0a67 0021  ld   $21
              0a68 0021  ld   $21
              0a69 0020  ld   $20
              0a6a 0020  ld   $20
              0a6b 0020  ld   $20
              0a6c 0020  ld   $20
              0a6d 001f  ld   $1f
              0a6e 001f  ld   $1f
              0a6f 001f  ld   $1f
              0a70 001f  ld   $1f
              0a71 001e  ld   $1e
              0a72 001e  ld   $1e
              0a73 001e  ld   $1e
              0a74 001e  ld   $1e
              0a75 001d  ld   $1d
              0a76 001d  ld   $1d
              0a77 001d  ld   $1d
              0a78 001d  ld   $1d
              0a79 001c  ld   $1c
              0a7a 001c  ld   $1c
              0a7b 001c  ld   $1c
              * 5 times
              0a7e 001b  ld   $1b
              0a7f 001b  ld   $1b
              0a80 001b  ld   $1b
              * 5 times
              0a83 001a  ld   $1a
              0a84 001a  ld   $1a
              0a85 001a  ld   $1a
              * 5 times
              0a88 0019  ld   $19
              0a89 0019  ld   $19
              0a8a 0019  ld   $19
              * 6 times
              0a8e 0018  ld   $18
              0a8f 0018  ld   $18
              0a90 0018  ld   $18
              * 6 times
              0a94 0017  ld   $17
              0a95 0017  ld   $17
              0a96 0017  ld   $17
              * 7 times
              0a9b 0016  ld   $16
              0a9c 0016  ld   $16
              0a9d 0016  ld   $16
              * 8 times
              0aa3 0015  ld   $15
              0aa4 0015  ld   $15
              0aa5 0015  ld   $15
              * 8 times
              0aab 0014  ld   $14
              0aac 0014  ld   $14
              0aad 0014  ld   $14
              * 9 times
              0ab4 0013  ld   $13
              0ab5 0013  ld   $13
              0ab6 0013  ld   $13
              * 9 times
              0abd 0012  ld   $12
              0abe 0012  ld   $12
              0abf 0012  ld   $12
              * 11 times
              0ac8 0011  ld   $11
              0ac9 0011  ld   $11
              0aca 0011  ld   $11
              * 12 times
              0ad4 0010  ld   $10
              0ad5 0010  ld   $10
              0ad6 0010  ld   $10
              * 13 times
              0ae1 000f  ld   $0f
              0ae2 000f  ld   $0f
              0ae3 000f  ld   $0f
              * 16 times
              0af1 000e  ld   $0e
              0af2 000e  ld   $0e
              0af3 000e  ld   $0e
              * 10 times
                                          3026
                                          3027  trampoline()
              0afb fe00  bra  ac          ;+-----------------------------------+
              0afc fcfd  bra  $0afd       ;|                                   |
              0afd 1418  ld   $18,y       ;| Trampoline for page $0a00 lookups |
              0afe e006  jmp  y,$06       ;|                                   |
              0aff c218  st   [$18]       ;+-----------------------------------+
                                          3028
                                          3029  #-----------------------------------------------------------------------
                                          3030  #
                                          3031  #  $0b00 ROM page 11: More SYS functions
                                          3032  #
                                          3033  #-----------------------------------------------------------------------
                                          3034
                                          3035  align(0x100, size=0x100)
                                          3036
                                          3037  #-----------------------------------------------------------------------
                                          3038  # Extension SYS_SetMode_v2_80
                                          3039  #-----------------------------------------------------------------------
                                          3040
                                          3041  # Set video mode to 0 to 3 black scanlines per pixel line.
                                          3042  #
                                          3043  # Mainly for making the MODE command available in Tiny BASIC, so that
                                          3044  # the user can experiment. It's adviced to refrain from using
                                          3045  # SYS_SetMode_v2_80 in regular applications. Video mode is a deeply
                                          3046  # personal preference, and the programmer shouldn't overrule the user
                                          3047  # in that choice. The Gigatron philisophy is that the end user has
                                          3048  # the final say on what happens on the system, not the application,
                                          3049  # even if that implies a degraded performance. This doesn't mean that
                                          3050  # all applications must work well in all video modes: mode 1 is still
                                          3051  # the default. If an application really doesn't work at all in that
                                          3052  # mode, it's acceptable to change mode once after loading.
                                          3053  #
                                          3054  # There's no "SYS_GetMode" function.
                                          3055  #
                                          3056  # Variables:
                                          3057  #       vAC bit 0:1     Mode:
                                          3058  #                         0      "ABCD" -> Full mode (slowest)
                                          3059  #                         1      "ABC-" -> Default mode after reset
                                          3060  #                         2      "A-C-" -> at67's mode
                                          3061  #                         3      "A---" -> HGM's mode
                                          3062  #       vAC bit 2:15    Ignored bits and should be 0
                                          3063  #
                                          3064  # Special values (ROM v4):
                                          3065  #       vAC = 1975      Zombie mode (no video signals, no input,
                                          3066  #                        no blinkenlights).
                                          3067  #       vAC = -1        Leave zombie mode and restore previous mode.
                                          3068
                                          3069  # Actual duration is <80 cycles, but keep some room for future extensions
                                          3070  label('SYS_SetMode_v2_80')
SYS_SetMode_v2_80:
              0b00 140b  ld   $0b,y       3071  ld(hi('sys_SetMode'),Y)         #15
              0b01 e054  jmp  y,$54       3072  jmp(Y,'sys_SetMode')            #16
              0b02 011e  ld   [$1e]       3073  ld([vReturn])                   #17
                                          3074
                                          3075  #-----------------------------------------------------------------------
                                          3076  # Extension SYS_SetMemory_v2_54
                                          3077  #-----------------------------------------------------------------------
                                          3078
                                          3079  # SYS function for setting 1..256 bytes
                                          3080  #
                                          3081  # sysArgs[0]   Copy count (in, changed)
                                          3082  # sysArgs[1]   Copy value (in)
                                          3083  # sysArgs[2:3] Destination address (in, changed)
                                          3084  #
                                          3085  # Sets up to 8 bytes per invocation before restarting itself through vCPU.
                                          3086  # Doesn't wrap around page boundary. Can run 3 times per 148-cycle time slice.
                                          3087  # All combined that gives a 300% speedup over ROMv4 and before.
                                          3088
                                          3089  label('SYS_SetMemory_v2_54')
SYS_SetMemory_v2_54:
              0b03 0124  ld   [$24]       3090  ld([sysArgs+0])                 #15
                                          3091  bra('sys_SetMemory#18')         #16
              0b04 fc18  bra  sys_SetMemory#18
              0b05 1126  ld   [$26],x     3092  ld([sysArgs+2],X)               #17
                                          3093
                                          3094  #-----------------------------------------------------------------------
                                          3095  # Extension SYS_SendSerial1_v3_80
                                          3096  #-----------------------------------------------------------------------
                                          3097
                                          3098  # SYS function for sending data over serial controller port using
                                          3099  # pulse width modulation of the vertical sync signal.
                                          3100  #
                                          3101  # Variables:
                                          3102  #       sysArgs[0:1]    Source address               (in, changed)
                                          3103  #       sysArgs[2]      Start bit mask (typically 1) (in, changed)
                                          3104  #       sysArgs[3]      Number of send frames X      (in, changed)
                                          3105  #
                                          3106  # The sending will abort if input data is detected on the serial port.
                                          3107  # Returns 0 in case of all bits sent, or <>0 in case of abort
                                          3108  #
                                          3109  # This modulates the next upcoming X vertical pulses with the supplied
                                          3110  # data. A zero becomes a 7 line vPulse, a one will be 9 lines.
                                          3111  # After that, the vPulse width falls back to 8 lines (idle).
                                          3112
                                          3113  label('SYS_SendSerial1_v3_80')
SYS_SendSerial1_v3_80:
              0b06 0109  ld   [$09]       3114  ld([videoY])                    #15
                                          3115  bra('sys_SendSerial1')          #16
              0b07 fc83  bra  sys_SendSerial1
              0b08 60b3  xora $b3         3116  xora(videoYline0)               #17 First line of vertical blank
                                          3117
                                          3118  #-----------------------------------------------------------------------
                                          3119  # Extension SYS_ExpanderControl_v4_40
                                          3120  #-----------------------------------------------------------------------
                                          3121
                                          3122  # Sets the I/O and RAM expander's control register
                                          3123  #
                                          3124  # Variables:
                                          3125  #       vAC bit 2       Device enable /SS0
                                          3126  #           bit 3       Device enable /SS1
                                          3127  #           bit 4       Device enable /SS2
                                          3128  #           bit 5       Device enable /SS3
                                          3129  #           bit 6       Banking B0
                                          3130  #           bit 7       Banking B1
                                          3131  #           bit 15      Data out MOSI
                                          3132  #       sysArgs[7]      Cache for control state (written to)
                                          3133  #
                                          3134  # Intended for prototyping, and probably too low-level for most applications
                                          3135  # Still there's a safeguard: it's not possible to disable RAM using this
                                          3136
                                          3137  label('SYS_ExpanderControl_v4_40')
SYS_ExpanderControl_v4_40:
              0b09 140c  ld   $0c,y       3138  ld(hi('sys_ExpanderControl'),Y) #15
              0b0a e0fb  jmp  y,$fb       3139  jmp(Y,'sys_ExpanderControl')    #16
              0b0b 00fc  ld   $fc         3140  ld(0b11111100)                  #17 Safety (SCLK=0)
                                          3141  #    ^^^^^^^^
                                          3142  #    |||||||`-- SCLK
                                          3143  #    ||||||`--- Not connected
                                          3144  #    |||||`---- /SS0
                                          3145  #    ||||`----- /SS1
                                          3146  #    |||`------ /SS2
                                          3147  #    ||`------- /SS3
                                          3148  #    |`-------- B0
                                          3149  #    `--------- B1
                                          3150
                                          3151  #-----------------------------------------------------------------------
                                          3152  # Extension SYS_Run6502_v4_80
                                          3153  #-----------------------------------------------------------------------
                                          3154
                                          3155  # Transfer control to v6502
                                          3156  #
                                          3157  # Calling 6502 code from vCPU goes (only) through this SYS function.
                                          3158  # Directly modifying the vCpuSelect variable is unreliable. The
                                          3159  # control transfer is immediate, without waiting for the current
                                          3160  # time slice to end or first returning to vCPU.
                                          3161  #
                                          3162  # vCPU code and v6502 code can interoperate without much hassle:
                                          3163  # - The v6502 program counter is vLR, and v6502 doesn't touch vPC
                                          3164  # - Returning to vCPU is with the BRK instruction
                                          3165  # - BRK doesn't dump process state on the stack
                                          3166  # - vCPU can save/restore the vLR with PUSH/POP
                                          3167  # - Stacks are shared, vAC is shared
                                          3168  # - vAC can indicate what the v6502 code wants. vAC+1 will be cleared
                                          3169  # - Alternative is to leave a word in sysArgs[6:7] (v6502 X and Y registers)
                                          3170  # - Another way is to set vPC before BRK, and vCPU will continue there(+2)
                                          3171  #
                                          3172  # Calling v6502 code from vCPU looks like this:
                                          3173  #       LDWI  SYS_Run6502_v4_80
                                          3174  #       STW   sysFn
                                          3175  #       LDWI  $6502_start_address
                                          3176  #       STW   vLR
                                          3177  #       SYS   80
                                          3178  #
                                          3179  # Variables:
                                          3180  #       vAC             Accumulator
                                          3181  #       vLR             Program Counter
                                          3182  #       vSP             Stack Pointer (+1)
                                          3183  #       sysArgs[6]      Index Register X
                                          3184  #       sysArgs[7]      Index Register Y
                                          3185  # For info:
                                          3186  #       sysArgs[0:1]    Address Register, free to clobber
                                          3187  #       sysArgs[2]      Instruction Register, free to clobber
                                          3188  #       sysArgs[3:5]    Flags, don't touch
                                          3189  #
                                          3190  # Implementation details::
                                          3191  #
                                          3192  #  The time to reserve for this transition is the maximum time
                                          3193  #  between NEXT and v6502_check. This is
                                          3194  #       SYS call duration + 2*v6502_maxTicks + (v6502_overhead - vCPU_overhead)
                                          3195  #     = 22 + 38 + (11 - 9) = 62 cycles.
                                          3196  #  So reserving 80 cycles is future proof. This isn't overhead, as it includes
                                          3197  #  the fetching of the first 6502 opcode and its operands..
                                          3198  #
                                          3199  #                      0            10                 28=0         9
                                          3200  #    ---+----+---------+------------+------------------+-----------+---
                                          3201  # video | nop| runVcpu |   ENTER    | At least one ins |   EXIT    | video
                                          3202  #    ---+----+---------+------------+------------------+-----------+---
                                          3203  #        sync  prelude  ENTER-to-ins    ins-to-NEXT     NEXT-to-video
                                          3204  #       |<-->|
                                          3205  #        0/1 |<------->|
                                          3206  #                 5    |<----------------------------->|
                                          3207  #          runVCpu_overhead           28               |<--------->|
                                          3208  #                                 2*maxTicks                 9
                                          3209  #                                                      vCPU_overhead
                                          3210  #
                                          3211  #                      0                21                    38=0       11
                                          3212  #    ---+----+---------+----------------+--------------------+-----------+---
                                          3213  # video | nop| runVcpu |   v6502_ENTER  | At least one fetch |v6502_exitB| video
                                          3214  #    ---+----+---------+----------------+--------------------+-----------+---
                                          3215  #        sync  prelude   enter-to-fetch     fetch-to-check    check-to-video
                                          3216  #       |<-->|
                                          3217  #        0/1 |<------->|
                                          3218  #                 5    |<----------------------------------->|
                                          3219  #          runVcpu_overhead           38                     |<--------->|
                                          3220  #                              2*v6520_maxTicks                    11
                                          3221  #                                                            v6502_overhead
                                          3222
                                          3223  label('SYS_Run6502_v4_80')
SYS_Run6502_v4_80:
              0b0c 140d  ld   $0d,y       3224  ld(hi('sys_v6502'),Y)           #15
              0b0d e07f  jmp  y,$7f       3225  jmp(Y,'sys_v6502')              #16
              0b0e 000d  ld   $0d         3226  ld(hi('v6502_ENTER'))           #17 Activate v6502
                                          3227
                                          3228  #-----------------------------------------------------------------------
                                          3229  # Extension SYS_ResetWaveforms_v4_50
                                          3230  #-----------------------------------------------------------------------
                                          3231
                                          3232  # soundTable[4x+0] = sawtooth, to be modified into metallic/noise
                                          3233  # soundTable[4x+1] = pulse
                                          3234  # soundTable[4x+2] = triangle
                                          3235  # soundTable[4x+3] = sawtooth, also useful to right shift 2 bits
                                          3236
                                          3237  label('SYS_ResetWaveforms_v4_50')
SYS_ResetWaveforms_v4_50:
              0b0f 1412  ld   $12,y       3238  ld(hi('sys_ResetWaveforms'),Y)  #15 Initial setup of waveforms. [vAC+0]=i
              0b10 e0b2  jmp  y,$b2       3239  jmp(Y,'sys_ResetWaveforms')     #16
              0b11 1407  ld   $07,y       3240  ld(soundTable>>8,Y)             #17
                                          3241
                                          3242  #-----------------------------------------------------------------------
                                          3243  # Extension SYS_ShuffleNoise_v4_46
                                          3244  #-----------------------------------------------------------------------
                                          3245
                                          3246  # Use simple 6-bits variation of RC4 to permutate waveform 0 in soundTable
                                          3247
                                          3248  label('SYS_ShuffleNoise_v4_46')
SYS_ShuffleNoise_v4_46:
              0b12 1412  ld   $12,y       3249  ld(hi('sys_ShuffleNoise'),Y)    #15 Shuffle soundTable[4i+0]. [vAC+0]=4j, [vAC+1]=4i
              0b13 e0d3  jmp  y,$d3       3250  jmp(Y,'sys_ShuffleNoise')       #16
              0b14 1407  ld   $07,y       3251  ld(soundTable>>8,Y)             #17
                                          3252
                                          3253  #-----------------------------------------------------------------------
                                          3254  # Extension SYS_SpiExchangeBytes_v4_134
                                          3255  #-----------------------------------------------------------------------
                                          3256
                                          3257  # Send AND receive 1..256 bytes over SPI interface
                                          3258
                                          3259  # Variables:
                                          3260  #       sysArgs[0]      Page index start, for both send/receive (in, changed)
                                          3261  #       sysArgs[1]      Memory page for send data (in)
                                          3262  #       sysArgs[2]      Page index stop (in)
                                          3263  #       sysArgs[3]      Memory page for receive data (in)
                                          3264  #       sysArgs[4]      Scratch (changed)
                                          3265
                                          3266  label('SYS_SpiExchangeBytes_v4_134')
SYS_SpiExchangeBytes_v4_134:
              0b15 140d  ld   $0d,y       3267  ld(hi('sys_SpiExchangeBytes'),Y)#15
              0b16 e009  jmp  y,$09       3268  jmp(Y,'sys_SpiExchangeBytes')   #16
              0b17 1401  ld   $01,y       3269  ld(hi(ctrlBits),Y)              #17 Control state as saved by SYS_ExpanderControl
                                          3270
                                          3271  #-----------------------------------------------------------------------
                                          3272  #  Implementations
                                          3273  #-----------------------------------------------------------------------
                                          3274
                                          3275  # SYS_SetMemory_54 implementation
                                          3276  label('sys_SetMemory#18')
sys_SetMemory#18:
              0b18 1527  ld   [$27],y     3277  ld([sysArgs+3],Y)               #18
              0b19 f83c  ble  .sysSb#21   3278  ble('.sysSb#21')                #19 Enter fast lane if >=128 or at 0 (-> 256)
              0b1a a008  suba $08         3279  suba(8)                         #20
              0b1b f43e  bge  .sysSb#23   3280  bge('.sysSb#23')                #21 Or when >=8
              0b1c c224  st   [$24]       3281  st([sysArgs+0])                 #22
              0b1d 2004  anda $04         3282  anda(4)                         #23
              0b1e f025  beq  .sysSb#26   3283  beq('.sysSb#26')                #24
              0b1f 0125  ld   [$25]       3284  ld([sysArgs+1])                 #25 Set 4 pixels
              0b20 de00  st   [y,x++]     3285  st([Y,Xpp])                     #26
              0b21 de00  st   [y,x++]     3286  st([Y,Xpp])                     #27
              0b22 de00  st   [y,x++]     3287  st([Y,Xpp])                     #28
              0b23 fc28  bra  .sysSb#31   3288  bra('.sysSb#31')                #29
              0b24 de00  st   [y,x++]     3289  st([Y,Xpp])                     #30
                                          3290  label('.sysSb#26')
.sysSb#26:    0b25 0001  ld   $01         3291  wait(31-26)                     #26
              0b26 ec26  bne  $0b26
              0b27 a001  suba $01
                                          3292  label('.sysSb#31')
.sysSb#31:    0b28 0124  ld   [$24]       3293  ld([sysArgs+0])                 #31
              0b29 2002  anda $02         3294  anda(2)                         #32
              0b2a f02f  beq  .sysSb#35   3295  beq('.sysSb#35')                #33
              0b2b 0125  ld   [$25]       3296  ld([sysArgs+1])                 #34 Set 2 pixels
              0b2c de00  st   [y,x++]     3297  st([Y,Xpp])                     #35
              0b2d fc32  bra  .sysSb#38   3298  bra('.sysSb#38')                #36
              0b2e de00  st   [y,x++]     3299  st([Y,Xpp])                     #37
                                          3300  label('.sysSb#35')
.sysSb#35:    0b2f 0200  nop              3301  wait(38-35)                     #35
              0b30 0200  nop
              0b31 0200  nop
                                          3302  label('.sysSb#38')
.sysSb#38:    0b32 0124  ld   [$24]       3303  ld([sysArgs+0])                 #38
              0b33 2001  anda $01         3304  anda(1)                         #39
              0b34 f037  beq  $0b37       3305  beq(pc()+3)                     #40
              0b35 fc38  bra  $0b38       3306  bra(pc()+3)                     #41
              0b36 0125  ld   [$25]       3307  ld([sysArgs+1])                 #42 Set 1 pixel
              0b37 0d00  ld   [y,x]       3308  ld([Y,X])                       #42(!) No change
              0b38 ce00  st   [y,x]       3309  st([Y,X])                       #43
              0b39 1403  ld   $03,y       3310  ld(hi('NEXTY'),Y)               #44 Return
              0b3a e000  jmp  y,$00       3311  jmp(Y,'NEXTY')                  #45 All done
              0b3b 00e8  ld   $e8         3312  ld(-48/2)                       #46
                                          3313  label('.sysSb#21')
.sysSb#21:    0b3c 0200  nop              3314  nop()                           #21
              0b3d c224  st   [$24]       3315  st([sysArgs+0])                 #22
                                          3316  label('.sysSb#23')
.sysSb#23:    0b3e 0125  ld   [$25]       3317  ld([sysArgs+1])                 #23 Set 8 pixels
              0b3f de00  st   [y,x++]     3318  st([Y,Xpp])                     #24
              0b40 de00  st   [y,x++]     3319  st([Y,Xpp])                     #25
              0b41 de00  st   [y,x++]     3320  st([Y,Xpp])                     #26
              0b42 de00  st   [y,x++]     3321  st([Y,Xpp])                     #27
              0b43 de00  st   [y,x++]     3322  st([Y,Xpp])                     #28
              0b44 de00  st   [y,x++]     3323  st([Y,Xpp])                     #29
              0b45 de00  st   [y,x++]     3324  st([Y,Xpp])                     #30
              0b46 de00  st   [y,x++]     3325  st([Y,Xpp])                     #31
              0b47 0126  ld   [$26]       3326  ld([sysArgs+2])                 #32 Advance write pointer
              0b48 8008  adda $08         3327  adda(8)                         #33
              0b49 c226  st   [$26]       3328  st([sysArgs+2])                 #34
              0b4a 0124  ld   [$24]       3329  ld([sysArgs+0])                 #35
              0b4b f04e  beq  $0b4e       3330  beq(pc()+3)                     #36
              0b4c fc4f  bra  $0b4f       3331  bra(pc()+3)                     #37
              0b4d 00fe  ld   $fe         3332  ld(-2)                          #38 Self-restart when more to do
              0b4e 0000  ld   $00         3333  ld(0)                           #38(!)
              0b4f 8116  adda [$16]       3334  adda([vPC])                     #39
              0b50 c216  st   [$16]       3335  st([vPC])                       #40
              0b51 1403  ld   $03,y       3336  ld(hi('REENTER'),Y)             #41
              0b52 e0cb  jmp  y,$cb       3337  jmp(Y,'REENTER')                #42
              0b53 00e9  ld   $e9         3338  ld(-46/2)                       #43
                                          3339
                                          3340  # SYS_SetMode_80 implementation
                                          3341  label('sys_SetMode')
sys_SetMode:  0b54 ec57  bne  $0b57       3342  bne(pc()+3)                     #18
              0b55 fc57  bra  $0b57       3343  bra(pc()+2)                     #19
              0b56 0003  ld   $03         3344  ld('startVideo')                #20 First enable video if disabled
              0b57 c21e  st   [$1e]       3345  st([vReturn])                   #20,21
              0b58 0119  ld   [$19]       3346  ld([vAC+1])                     #22
              0b59 f063  beq  .sysSm#25   3347  beq('.sysSm#25')                #23
              0b5a 1403  ld   $03,y       3348  ld(hi('REENTER'),Y)             #24
              0b5b 6118  xora [$18]       3349  xora([vAC])                     #25
              0b5c 60b0  xora $b0         3350  xora((1975>>8)^(1975&255))      #26 Poor man\'s 1975 detection
              0b5d ec60  bne  $0b60       3351  bne(pc()+3)                     #27
              0b5e fc61  bra  $0b61       3352  bra(pc()+3)                     #28
                                          3353  assert videoZ == 0x0100
              0b5f c21e  st   [$1e]       3354  st([vReturn])                   #29 DISABLE video/audio/serial/etc
              0b60 0200  nop              3355  nop()                           #29(!) Ignore and return
              0b61 e0cb  jmp  y,$cb       3356  jmp(Y,'REENTER')                #30
              0b62 00ef  ld   $ef         3357  ld(-34/2)                       #31
                                          3358  label('.sysSm#25')
.sysSm#25:    0b63 0118  ld   [$18]       3359  ld([vAC])                       #25 Mode 0,1,2,3
              0b64 2003  anda $03         3360  anda(3)                         #26
              0b65 8068  adda $68         3361  adda('.sysSm#30')               #27
              0b66 fe00  bra  ac          3362  bra(AC)                         #28
              0b67 fc6c  bra  .sysSm#31   3363  bra('.sysSm#31')                #29
                                          3364  label('.sysSm#30')
.sysSm#30:    0b68 000a  ld   $0a         3365  ld('pixels')                    #30 videoB lines
              0b69 000a  ld   $0a         3366  ld('pixels')                    #30
              0b6a 00f6  ld   $f6         3367  ld('nopixels')                  #30
              0b6b 00f6  ld   $f6         3368  ld('nopixels')                  #30
                                          3369  label('.sysSm#31')
.sysSm#31:    0b6c c20a  st   [$0a]       3370  st([videoModeB])                #31
              0b6d 0118  ld   [$18]       3371  ld([vAC])                       #32
              0b6e 2003  anda $03         3372  anda(3)                         #33
              0b6f 8072  adda $72         3373  adda('.sysSm#37')               #34
              0b70 fe00  bra  ac          3374  bra(AC)                         #35
              0b71 fc76  bra  .sysSm#38   3375  bra('.sysSm#38')                #36
                                          3376  label('.sysSm#37')
.sysSm#37:    0b72 000a  ld   $0a         3377  ld('pixels')                    #37 videoC lines
              0b73 000a  ld   $0a         3378  ld('pixels')                    #37
              0b74 000a  ld   $0a         3379  ld('pixels')                    #37
              0b75 00f6  ld   $f6         3380  ld('nopixels')                  #37
                                          3381  label('.sysSm#38')
.sysSm#38:    0b76 c20b  st   [$0b]       3382  st([videoModeC])                #38
              0b77 0118  ld   [$18]       3383  ld([vAC])                       #39
              0b78 2003  anda $03         3384  anda(3)                         #40
              0b79 807c  adda $7c         3385  adda('.sysSm#44')               #41
              0b7a fe00  bra  ac          3386  bra(AC)                         #42
              0b7b fc80  bra  .sysSm#45   3387  bra('.sysSm#45')                #43
                                          3388  label('.sysSm#44')
.sysSm#44:    0b7c 000a  ld   $0a         3389  ld('pixels')                    #44 videoD lines
              0b7d 00f6  ld   $f6         3390  ld('nopixels')                  #44
              0b7e 00f6  ld   $f6         3391  ld('nopixels')                  #44
              0b7f 00f6  ld   $f6         3392  ld('nopixels')                  #44
                                          3393  label('.sysSm#45')
.sysSm#45:    0b80 c20c  st   [$0c]       3394  st([videoModeD])                #45
              0b81 e0cb  jmp  y,$cb       3395  jmp(Y,'REENTER')                #46
              0b82 00e7  ld   $e7         3396  ld(-50/2)                       #47
                                          3397
                                          3398  # SYS_SendSerial1_v3_80 implementation
                                          3399  label('sys_SendSerial1')
sys_SendSerial1:
              0b83 f08a  beq  .sysSs#20   3400  beq('.sysSs#20')                #18
              0b84 1124  ld   [$24],x     3401  ld([sysArgs+0],X)               #19
              0b85 0116  ld   [$16]       3402  ld([vPC])                       #20 Wait for vBlank
              0b86 a002  suba $02         3403  suba(2)                         #21
              0b87 1403  ld   $03,y       3404  ld(hi('REENTER_28'),Y)          #22
              0b88 e0ca  jmp  y,$ca       3405  jmp(Y,'REENTER_28')             #23
              0b89 c216  st   [$16]       3406  st([vPC])                       #24
                                          3407  label('.sysSs#20')
.sysSs#20:    0b8a 1525  ld   [$25],y     3408  ld([sysArgs+1],Y)               #20 Synchronized with vBlank
              0b8b 0d00  ld   [y,x]       3409  ld([Y,X])                       #21 Copy next bit
              0b8c 2126  anda [$26]       3410  anda([sysArgs+2])               #22
              0b8d ec90  bne  $0b90       3411  bne(pc()+3)                     #23
              0b8e fc91  bra  $0b91       3412  bra(pc()+3)                     #24
              0b8f 000e  ld   $0e         3413  ld(7*2)                         #25
              0b90 0012  ld   $12         3414  ld(9*2)                         #25
              0b91 c20d  st   [$0d]       3415  st([videoPulse])                #26
              0b92 0126  ld   [$26]       3416  ld([sysArgs+2])                 #27 Rotate input bit
              0b93 8200  adda ac          3417  adda(AC)                        #28
              0b94 ec97  bne  $0b97       3418  bne(pc()+3)                     #29
              0b95 fc97  bra  $0b97       3419  bra(pc()+2)                     #30
              0b96 0001  ld   $01         3420  ld(1)                           #31
              0b97 c226  st   [$26]       3421  st([sysArgs+2])                 #31,32 (must be idempotent)
              0b98 2001  anda $01         3422  anda(1)                         #33 Optionally increment pointer
              0b99 8124  adda [$24]       3423  adda([sysArgs+0])               #34
              0b9a d224  st   [$24],x     3424  st([sysArgs+0],X)               #35
              0b9b 0127  ld   [$27]       3425  ld([sysArgs+3])                 #36 Frame counter
              0b9c a001  suba $01         3426  suba(1)                         #37
              0b9d f0ac  beq  .sysSs#40   3427  beq('.sysSs#40')                #38
              0b9e 1403  ld   $03,y       3428  ld(hi('REENTER'),Y)             #39
              0b9f c227  st   [$27]       3429  st([sysArgs+3])                 #40
              0ba0 010f  ld   [$0f]       3430  ld([serialRaw])                 #41 Test for anything being sent back
              0ba1 60ff  xora $ff         3431  xora(255)                       #42
              0ba2 f0a7  beq  .sysSs#45   3432  beq('.sysSs#45')                #43
              0ba3 c218  st   [$18]       3433  st([vAC])                       #44 Abort after key press with non-zero error
              0ba4 c219  st   [$19]       3434  st([vAC+1])                     #45
              0ba5 e0cb  jmp  y,$cb       3435  jmp(Y,'REENTER')                #46
              0ba6 00e7  ld   $e7         3436  ld(-50/2)                       #47
                                          3437  label('.sysSs#45')
.sysSs#45:    0ba7 0116  ld   [$16]       3438  ld([vPC])                       #45 Continue sending bits
              0ba8 a002  suba $02         3439  suba(2)                         #46
              0ba9 c216  st   [$16]       3440  st([vPC])                       #47
              0baa e0cb  jmp  y,$cb       3441  jmp(Y,'REENTER')                #48
              0bab 00e6  ld   $e6         3442  ld(-52/2)                       #49
                                          3443  label('.sysSs#40')
.sysSs#40:    0bac c218  st   [$18]       3444  st([vAC])                       #40 Stop sending bits, no error
              0bad c219  st   [$19]       3445  st([vAC+1])                     #41
              0bae e0cb  jmp  y,$cb       3446  jmp(Y,'REENTER')                #42
              0baf 00e9  ld   $e9         3447  ld(-46/2)                       #43
                                          3448
                                          3449  # LDWI implementation (vCPU instruction)
                                          3450  label('ldwi#13')
ldwi#13:      0bb0 c218  st   [$18]       3451  st([vAC])                       #13 Operand
              0bb1 de00  st   [y,x++]     3452  st([Y,Xpp])                     #14 Just X++
              0bb2 0d00  ld   [y,x]       3453  ld([Y,X])                       #15 Fetch second operand
              0bb3 c219  st   [$19]       3454  st([vAC+1])                     #16
              0bb4 0116  ld   [$16]       3455  ld([vPC])                       #17 Advance vPC one more
              0bb5 8001  adda $01         3456  adda(1)                         #18
              0bb6 c216  st   [$16]       3457  st([vPC])                       #19
              0bb7 1403  ld   $03,y       3458  ld(hi('NEXTY'),Y)               #20
              0bb8 e000  jmp  y,$00       3459  jmp(Y,'NEXTY')                  #21
              0bb9 00f4  ld   $f4         3460  ld(-24/2)                       #22
                                          3461
                                          3462  # POP implementation (vCPU instruction)
                                          3463  label('pop#13')
pop#13:       0bba 1504  ld   [$04],y     3464  ld([vSPH],Y)                    #13 vSP.hi
              0bbb 111c  ld   [$1c],x     3465  ld([vSP],X)                     #14
              0bbc 0d00  ld   [y,x]       3466  ld([Y,X])                       #15
              0bbd de00  st   [y,x++]     3467  st([Y,Xpp])                     #16
              0bbe c21a  st   [$1a]       3468  st([vLR])                       #17
              0bbf 0d00  ld   [y,x]       3469  ld([Y,X])                       #18
              0bc0 c21b  st   [$1b]       3470  st([vLR+1])                     #19
              0bc1 011c  ld   [$1c]       3471  ld([vSP])                       #20
              0bc2 8002  adda $02         3472  adda(2)                         #21
              0bc3 c21c  st   [$1c]       3473  st([vSP])                       #22
              0bc4 0116  ld   [$16]       3474  ld([vPC])                       #23
              0bc5 a001  suba $01         3475  suba(1)                         #24
              0bc6 c216  st   [$16]       3476  st([vPC])                       #25
              0bc7 1403  ld   $03,y       3477  ld(hi('NEXTY'),Y)               #26
              0bc8 e000  jmp  y,$00       3478  jmp(Y,'NEXTY')                  #27
              0bc9 00f1  ld   $f1         3479  ld(-30/2)                       #28
                                          3480
                                          3481  # PUSH implementation (vCPU instruction)
                                          3482  label('push#13')
push#13:      0bca 1504  ld   [$04],y     3483  ld([vSPH],Y)                    #13 vSP.hi
              0bcb 011c  ld   [$1c]       3484  ld([vSP])                       #14
              0bcc a002  suba $02         3485  suba(2)                         #15
              0bcd d21c  st   [$1c],x     3486  st([vSP],X)                     #16
              0bce 011a  ld   [$1a]       3487  ld([vLR])                       #17
              0bcf de00  st   [y,x++]     3488  st([Y,Xpp])                     #18
              0bd0 011b  ld   [$1b]       3489  ld([vLR+1])                     #19
              0bd1 ce00  st   [y,x]       3490  st([Y,X])                       #20
              0bd2 0116  ld   [$16]       3491  ld([vPC])                       #21
              0bd3 a001  suba $01         3492  suba(1)                         #22
              0bd4 c216  st   [$16]       3493  st([vPC])                       #23
              0bd5 1403  ld   $03,y       3494  ld(hi('NEXTY'),Y)               #24
              0bd6 e000  jmp  y,$00       3495  jmp(Y,'NEXTY')                  #25
              0bd7 00f2  ld   $f2         3496  ld(-28/2)                       #26
                                          3497
                                          3498  # CALLI implementation (vCPU instruction)
                                          3499  label('calli#13')
calli#13:     0bd8 8003  adda $03         3500  adda(3)                         #13
              0bd9 c21a  st   [$1a]       3501  st([vLR])                       #14
              0bda 0117  ld   [$17]       3502  ld([vPC+1])                     #15
              0bdb d61b  st   [$1b],y     3503  st([vLR+1],Y)                   #16
              0bdc 0d00  ld   [y,x]       3504  ld([Y,X])                       #17
              0bdd de00  st   [y,x++]     3505  st([Y,Xpp])                     #18 Just X++
              0bde a002  suba $02         3506  suba(2)                         #19
              0bdf c216  st   [$16]       3507  st([vPC])                       #20
              0be0 0d00  ld   [y,x]       3508  ld([Y,X])                       #21
              0be1 1403  ld   $03,y       3509  ld(hi('REENTER_28'),Y)          #22
              0be2 e0ca  jmp  y,$ca       3510  jmp(Y,'REENTER_28')             #23
              0be3 c217  st   [$17]       3511  st([vPC+1])                     #24
                                          3512
                                          3513  # SUBW implemetation
                                          3514  label('subw#13')
subw#13:      0be4 8001  adda $01         3515  adda(1)                         #13
              0be5 c21d  st   [$1d]       3516  st([vTmp])                      #14 Address of high byte to be subtracted
              0be6 0118  ld   [$18]       3517  ld([vAC])                       #15 Low byte
              0be7 e8f4  blt  .subw#18    3518  bmi('.subw#18')                 #16
              0be8 a500  suba [x]         3519  suba([X])                       #17
              0be9 c218  st   [$18]       3520  st([vAC])                       #18 Store low result
              0bea 4500  ora  [x]         3521  ora([X])                        #19 Carry in bit 7
              0beb 3080  anda $80,x       3522  anda(0x80,X)                    #20 Move carry to bit 0
              0bec 0119  ld   [$19]       3523  ld([vAC+1])                     #21
              0bed a500  suba [x]         3524  suba([X])                       #22
              0bee 111d  ld   [$1d],x     3525  ld([vTmp],X)                    #23
              0bef a500  suba [x]         3526  suba([X])                       #24
              0bf0 c219  st   [$19]       3527  st([vAC+1])                     #25
              0bf1 1403  ld   $03,y       3528  ld(hi('NEXTY'),Y)               #26
              0bf2 e000  jmp  y,$00       3529  jmp(Y,'NEXTY')                  #27
              0bf3 00f1  ld   $f1         3530  ld(-30/2)                       #28
                                          3531  label('.subw#18')
.subw#18:     0bf4 c218  st   [$18]       3532  st([vAC])                       #18 Store low result
              0bf5 2500  anda [x]         3533  anda([X])                       #19 Carry in bit 7
              0bf6 3080  anda $80,x       3534  anda(0x80,X)                    #20 Move carry to bit 0
              0bf7 0119  ld   [$19]       3535  ld([vAC+1])                     #21
              0bf8 a500  suba [x]         3536  suba([X])                       #22
              0bf9 111d  ld   [$1d],x     3537  ld([vTmp],X)                    #23
              0bfa a500  suba [x]         3538  suba([X])                       #24
              0bfb c219  st   [$19]       3539  st([vAC+1])                     #25
              0bfc 1403  ld   $03,y       3540  ld(hi('NEXTY'),Y)               #26
              0bfd e000  jmp  y,$00       3541  jmp(Y,'NEXTY')                  #27
              0bfe 00f1  ld   $f1         3542  ld(-30/2)                       #28
                                          3543
                                          3544
                                          3545  #-----------------------------------------------------------------------
                                          3546  #
                                          3547  #  $0c00 ROM page 12: More SYS functions (sprites)
                                          3548  #
                                          3549  #       Page 1: vertical blank interval
                                          3550  #       Page 2: visible scanlines
                                          3551  #
                                          3552  #-----------------------------------------------------------------------
                                          3553
              0bff 0200  nop              3554  align(0x100, size=0x100)
                                          3555
                                          3556  #-----------------------------------------------------------------------
                                          3557  # Extension SYS_Sprite6_v3_64
                                          3558  # Extension SYS_Sprite6x_v3_64
                                          3559  # Extension SYS_Sprite6y_v3_64
                                          3560  # Extension SYS_Sprite6xy_v3_64
                                          3561  #-----------------------------------------------------------------------
                                          3562
                                          3563  # Blit sprite in screen memory
                                          3564  #
                                          3565  # Variables
                                          3566  #       vAC             Destination address in screen
                                          3567  #       sysArgs[0:1]    Source address of 6xY pixels (colors 0..63) terminated
                                          3568  #                       by negative byte value N (typically N = -Y)
                                          3569  #       sysArgs[2:7]    Scratch (user as copy buffer)
                                          3570  #
                                          3571  # This SYS function draws a sprite of 6 pixels wide and Y pixels high.
                                          3572  # The pixel data is read sequentually from RAM, in horizontal chunks
                                          3573  # of 6 pixels at a time, and then written to the screen through the
                                          3574  # destination pointer (each chunk underneath the previous), thus
                                          3575  # drawing a 6xY stripe. Pixel values should be non-negative. The first
                                          3576  # negative byte N after a chunk signals the end of the sprite data.
                                          3577  # So the sprite's height Y is determined by the source data and is
                                          3578  # therefore flexible. This negative byte value, typically N == -Y,
                                          3579  # is then used to adjust the destination pointer's high byte, to make
                                          3580  # it easier to draw sprites wider than 6 pixels: just repeat the SYS
                                          3581  # call for as many 6-pixel wide stripes you need. All arguments are
                                          3582  # already left in place to facilitate this. After one call, the source
                                          3583  # pointer will point past that source data, effectively:
                                          3584  #       src += Y * 6 + 1
                                          3585  # The destination pointer will have been adjusted as:
                                          3586  #       dst += (Y + N) * 256 + 6
                                          3587  # (With arithmetic wrapping around on the same memory page)
                                          3588  #
                                          3589  # Y is only limited by source memory, not by CPU cycles. The
                                          3590  # implementation is such that the SYS function self-repeats, each
                                          3591  # time drawing the next 6-pixel chunk. It can typically draw 12
                                          3592  # pixels per scanline this way.
                                          3593
                                          3594  label('SYS_Sprite6_v3_64')
                                          3595
SYS_Sprite6_v3_64:
              0c00 1124  ld   [$24],x     3596  ld([sysArgs+0],X)               #15 Pixel data source address
              0c01 1525  ld   [$25],y     3597  ld([sysArgs+1],Y)               #16
              0c02 0d00  ld   [y,x]       3598  ld([Y,X])                       #17 Next pixel or stop
              0c03 f411  bge  .sysDpx0    3599  bpl('.sysDpx0')                 #18
              0c04 de00  st   [y,x++]     3600  st([Y,Xpp])                     #19 Just X++
                                          3601
              0c05 8119  adda [$19]       3602  adda([vAC+1])                   #20 Adjust dst for convenience
              0c06 c219  st   [$19]       3603  st([vAC+1])                     #21
              0c07 0118  ld   [$18]       3604  ld([vAC])                       #22
              0c08 8006  adda $06         3605  adda(6)                         #23
              0c09 c218  st   [$18]       3606  st([vAC])                       #24
              0c0a 0124  ld   [$24]       3607  ld([sysArgs+0])                 #25 Adjust src for convenience
              0c0b 8001  adda $01         3608  adda(1)                         #26
              0c0c c224  st   [$24]       3609  st([sysArgs+0])                 #27
              0c0d 0200  nop              3610  nop()                           #28
              0c0e 1403  ld   $03,y       3611  ld(hi('REENTER'),Y)             #29 Normal exit (no self-repeat)
              0c0f e0cb  jmp  y,$cb       3612  jmp(Y,'REENTER')                #30
              0c10 00ef  ld   $ef         3613  ld(-34/2)                       #31
                                          3614
                                          3615  label('.sysDpx0')
.sysDpx0:     0c11 c226  st   [$26]       3616  st([sysArgs+2])                 #20 Gobble 6 pixels into buffer
              0c12 0d00  ld   [y,x]       3617  ld([Y,X])                       #21
              0c13 de00  st   [y,x++]     3618  st([Y,Xpp])                     #22 Just X++
              0c14 c227  st   [$27]       3619  st([sysArgs+3])                 #23
              0c15 0d00  ld   [y,x]       3620  ld([Y,X])                       #24
              0c16 de00  st   [y,x++]     3621  st([Y,Xpp])                     #25 Just X++
              0c17 c228  st   [$28]       3622  st([sysArgs+4])                 #26
              0c18 0d00  ld   [y,x]       3623  ld([Y,X])                       #27
              0c19 de00  st   [y,x++]     3624  st([Y,Xpp])                     #28 Just X++
              0c1a c229  st   [$29]       3625  st([sysArgs+5])                 #29
              0c1b 0d00  ld   [y,x]       3626  ld([Y,X])                       #30
              0c1c de00  st   [y,x++]     3627  st([Y,Xpp])                     #31 Just X++
              0c1d c22a  st   [$2a]       3628  st([sysArgs+6])                 #32
              0c1e 0d00  ld   [y,x]       3629  ld([Y,X])                       #33
              0c1f de00  st   [y,x++]     3630  st([Y,Xpp])                     #34 Just X++
              0c20 c22b  st   [$2b]       3631  st([sysArgs+7])                 #35
                                          3632
              0c21 1118  ld   [$18],x     3633  ld([vAC],X)                     #36 Screen memory destination address
              0c22 1519  ld   [$19],y     3634  ld([vAC+1],Y)                   #37
              0c23 0126  ld   [$26]       3635  ld([sysArgs+2])                 #38 Write 6 pixels
              0c24 de00  st   [y,x++]     3636  st([Y,Xpp])                     #39
              0c25 0127  ld   [$27]       3637  ld([sysArgs+3])                 #40
              0c26 de00  st   [y,x++]     3638  st([Y,Xpp])                     #41
              0c27 0128  ld   [$28]       3639  ld([sysArgs+4])                 #42
              0c28 de00  st   [y,x++]     3640  st([Y,Xpp])                     #43
              0c29 0129  ld   [$29]       3641  ld([sysArgs+5])                 #44
              0c2a de00  st   [y,x++]     3642  st([Y,Xpp])                     #45
              0c2b 012a  ld   [$2a]       3643  ld([sysArgs+6])                 #46
              0c2c de00  st   [y,x++]     3644  st([Y,Xpp])                     #47
              0c2d 012b  ld   [$2b]       3645  ld([sysArgs+7])                 #48
              0c2e de00  st   [y,x++]     3646  st([Y,Xpp])                     #49
                                          3647
              0c2f 0124  ld   [$24]       3648  ld([sysArgs+0])                 #50 src += 6
              0c30 8006  adda $06         3649  adda(6)                         #51
              0c31 c224  st   [$24]       3650  st([sysArgs+0])                 #52
              0c32 0119  ld   [$19]       3651  ld([vAC+1])                     #53 dst += 256
              0c33 8001  adda $01         3652  adda(1)                         #54
              0c34 c219  st   [$19]       3653  st([vAC+1])                     #55
                                          3654
              0c35 0116  ld   [$16]       3655  ld([vPC])                       #56 Self-repeating SYS call
              0c36 a002  suba $02         3656  suba(2)                         #57
              0c37 c216  st   [$16]       3657  st([vPC])                       #58
              0c38 1403  ld   $03,y       3658  ld(hi('REENTER'),Y)             #59
              0c39 e0cb  jmp  y,$cb       3659  jmp(Y,'REENTER')                #60
              0c3a 00e0  ld   $e0         3660  ld(-64/2)                       #61
                                          3661
              0c3b 0200  nop              3662  align(64)
              0c3c 0200  nop
              0c3d 0200  nop
              * 5 times
                                          3663  label('SYS_Sprite6x_v3_64')
                                          3664
SYS_Sprite6x_v3_64:
              0c40 1124  ld   [$24],x     3665  ld([sysArgs+0],X)               #15 Pixel data source address
              0c41 1525  ld   [$25],y     3666  ld([sysArgs+1],Y)               #16
              0c42 0d00  ld   [y,x]       3667  ld([Y,X])                       #17 Next pixel or stop
              0c43 f451  bge  .sysDpx1    3668  bpl('.sysDpx1')                 #18
              0c44 de00  st   [y,x++]     3669  st([Y,Xpp])                     #19 Just X++
                                          3670
              0c45 8119  adda [$19]       3671  adda([vAC+1])                   #20 Adjust dst for convenience
              0c46 c219  st   [$19]       3672  st([vAC+1])                     #21
              0c47 0118  ld   [$18]       3673  ld([vAC])                       #22
              0c48 a006  suba $06         3674  suba(6)                         #23
              0c49 c218  st   [$18]       3675  st([vAC])                       #24
              0c4a 0124  ld   [$24]       3676  ld([sysArgs+0])                 #25 Adjust src for convenience
              0c4b 8001  adda $01         3677  adda(1)                         #26
              0c4c c224  st   [$24]       3678  st([sysArgs+0])                 #27
              0c4d 0200  nop              3679  nop()                           #28
              0c4e 1403  ld   $03,y       3680  ld(hi('REENTER'),Y)             #29 Normal exit (no self-repeat)
              0c4f e0cb  jmp  y,$cb       3681  jmp(Y,'REENTER')                #30
              0c50 00ef  ld   $ef         3682  ld(-34/2)                       #31
                                          3683
                                          3684  label('.sysDpx1')
.sysDpx1:     0c51 c22b  st   [$2b]       3685  st([sysArgs+7])                 #20 Gobble 6 pixels into buffer (backwards)
              0c52 0d00  ld   [y,x]       3686  ld([Y,X])                       #21
              0c53 de00  st   [y,x++]     3687  st([Y,Xpp])                     #22 Just X++
              0c54 c22a  st   [$2a]       3688  st([sysArgs+6])                 #23
              0c55 0d00  ld   [y,x]       3689  ld([Y,X])                       #24
              0c56 de00  st   [y,x++]     3690  st([Y,Xpp])                     #25 Just X++
              0c57 c229  st   [$29]       3691  st([sysArgs+5])                 #26
              0c58 0d00  ld   [y,x]       3692  ld([Y,X])                       #27
              0c59 de00  st   [y,x++]     3693  st([Y,Xpp])                     #28 Just X++
              0c5a c228  st   [$28]       3694  st([sysArgs+4])                 #29
              0c5b 0d00  ld   [y,x]       3695  ld([Y,X])                       #30
              0c5c de00  st   [y,x++]     3696  st([Y,Xpp])                     #31 Just X++
              0c5d c227  st   [$27]       3697  st([sysArgs+3])                 #32
              0c5e 0d00  ld   [y,x]       3698  ld([Y,X])                       #33
              0c5f de00  st   [y,x++]     3699  st([Y,Xpp])                     #34 Just X++
                                          3700
              0c60 1118  ld   [$18],x     3701  ld([vAC],X)                     #35 Screen memory destination address
              0c61 1519  ld   [$19],y     3702  ld([vAC+1],Y)                   #36
              0c62 de00  st   [y,x++]     3703  st([Y,Xpp])                     #37 Write 6 pixels
              0c63 0127  ld   [$27]       3704  ld([sysArgs+3])                 #38
              0c64 de00  st   [y,x++]     3705  st([Y,Xpp])                     #39
              0c65 0128  ld   [$28]       3706  ld([sysArgs+4])                 #40
              0c66 de00  st   [y,x++]     3707  st([Y,Xpp])                     #41
              0c67 0129  ld   [$29]       3708  ld([sysArgs+5])                 #42
              0c68 de00  st   [y,x++]     3709  st([Y,Xpp])                     #43
              0c69 012a  ld   [$2a]       3710  ld([sysArgs+6])                 #44
              0c6a de00  st   [y,x++]     3711  st([Y,Xpp])                     #45
              0c6b 012b  ld   [$2b]       3712  ld([sysArgs+7])                 #46
              0c6c de00  st   [y,x++]     3713  st([Y,Xpp])                     #47
                                          3714
              0c6d 0124  ld   [$24]       3715  ld([sysArgs+0])                 #48 src += 6
              0c6e 8006  adda $06         3716  adda(6)                         #49
              0c6f c224  st   [$24]       3717  st([sysArgs+0])                 #50
              0c70 0119  ld   [$19]       3718  ld([vAC+1])                     #51 dst += 256
              0c71 8001  adda $01         3719  adda(1)                         #52
              0c72 c219  st   [$19]       3720  st([vAC+1])                     #53
                                          3721
              0c73 0116  ld   [$16]       3722  ld([vPC])                       #54 Self-repeating SYS call
              0c74 a002  suba $02         3723  suba(2)                         #55
              0c75 c216  st   [$16]       3724  st([vPC])                       #56
              0c76 1403  ld   $03,y       3725  ld(hi('REENTER'),Y)             #57
              0c77 e0cb  jmp  y,$cb       3726  jmp(Y,'REENTER')                #58
              0c78 00e1  ld   $e1         3727  ld(-62/2)                       #59
                                          3728
              0c79 0200  nop              3729  align(64)
              0c7a 0200  nop
              0c7b 0200  nop
              * 7 times
                                          3730  label('SYS_Sprite6y_v3_64')
                                          3731
SYS_Sprite6y_v3_64:
              0c80 1124  ld   [$24],x     3732  ld([sysArgs+0],X)               #15 Pixel data source address
              0c81 1525  ld   [$25],y     3733  ld([sysArgs+1],Y)               #16
              0c82 0d00  ld   [y,x]       3734  ld([Y,X])                       #17 Next pixel or stop
              0c83 f493  bge  .sysDpx2    3735  bpl('.sysDpx2')                 #18
              0c84 de00  st   [y,x++]     3736  st([Y,Xpp])                     #19 Just X++
                                          3737
              0c85 60ff  xora $ff         3738  xora(255)                       #20 Adjust dst for convenience
              0c86 8001  adda $01         3739  adda(1)                         #21
              0c87 8119  adda [$19]       3740  adda([vAC+1])                   #22
              0c88 c219  st   [$19]       3741  st([vAC+1])                     #23
              0c89 0118  ld   [$18]       3742  ld([vAC])                       #24
              0c8a 8006  adda $06         3743  adda(6)                         #25
              0c8b c218  st   [$18]       3744  st([vAC])                       #26
              0c8c 0124  ld   [$24]       3745  ld([sysArgs+0])                 #27 Adjust src for convenience
              0c8d 8001  adda $01         3746  adda(1)                         #28
              0c8e c224  st   [$24]       3747  st([sysArgs+0])                 #29
              0c8f 0200  nop              3748  nop()                           #30
              0c90 1403  ld   $03,y       3749  ld(hi('REENTER'),Y)             #31 Normal exit (no self-repeat)
              0c91 e0cb  jmp  y,$cb       3750  jmp(Y,'REENTER')                #32
              0c92 00ee  ld   $ee         3751  ld(-36/2)                       #33
                                          3752
                                          3753  label('.sysDpx2')
.sysDpx2:     0c93 c226  st   [$26]       3754  st([sysArgs+2])                 #20 Gobble 6 pixels into buffer
              0c94 0d00  ld   [y,x]       3755  ld([Y,X])                       #21
              0c95 de00  st   [y,x++]     3756  st([Y,Xpp])                     #22 Just X++
              0c96 c227  st   [$27]       3757  st([sysArgs+3])                 #23
              0c97 0d00  ld   [y,x]       3758  ld([Y,X])                       #24
              0c98 de00  st   [y,x++]     3759  st([Y,Xpp])                     #25 Just X++
              0c99 c228  st   [$28]       3760  st([sysArgs+4])                 #26
              0c9a 0d00  ld   [y,x]       3761  ld([Y,X])                       #27
              0c9b de00  st   [y,x++]     3762  st([Y,Xpp])                     #28 Just X++
              0c9c c229  st   [$29]       3763  st([sysArgs+5])                 #29
              0c9d 0d00  ld   [y,x]       3764  ld([Y,X])                       #30
              0c9e de00  st   [y,x++]     3765  st([Y,Xpp])                     #31 Just X++
              0c9f c22a  st   [$2a]       3766  st([sysArgs+6])                 #32
              0ca0 0d00  ld   [y,x]       3767  ld([Y,X])                       #33
              0ca1 de00  st   [y,x++]     3768  st([Y,Xpp])                     #34 Just X++
              0ca2 c22b  st   [$2b]       3769  st([sysArgs+7])                 #35
                                          3770
              0ca3 1118  ld   [$18],x     3771  ld([vAC],X)                     #36 Screen memory destination address
              0ca4 1519  ld   [$19],y     3772  ld([vAC+1],Y)                   #37
              0ca5 0126  ld   [$26]       3773  ld([sysArgs+2])                 #38 Write 6 pixels
              0ca6 de00  st   [y,x++]     3774  st([Y,Xpp])                     #39
              0ca7 0127  ld   [$27]       3775  ld([sysArgs+3])                 #40
              0ca8 de00  st   [y,x++]     3776  st([Y,Xpp])                     #41
              0ca9 0128  ld   [$28]       3777  ld([sysArgs+4])                 #42
              0caa de00  st   [y,x++]     3778  st([Y,Xpp])                     #43
              0cab 0129  ld   [$29]       3779  ld([sysArgs+5])                 #44
              0cac de00  st   [y,x++]     3780  st([Y,Xpp])                     #45
              0cad 012a  ld   [$2a]       3781  ld([sysArgs+6])                 #46
              0cae de00  st   [y,x++]     3782  st([Y,Xpp])                     #47
              0caf 012b  ld   [$2b]       3783  ld([sysArgs+7])                 #48
              0cb0 de00  st   [y,x++]     3784  st([Y,Xpp])                     #49
                                          3785
              0cb1 0124  ld   [$24]       3786  ld([sysArgs+0])                 #50 src += 6
              0cb2 8006  adda $06         3787  adda(6)                         #51
              0cb3 c224  st   [$24]       3788  st([sysArgs+0])                 #52
              0cb4 0119  ld   [$19]       3789  ld([vAC+1])                     #53 dst -= 256
              0cb5 a001  suba $01         3790  suba(1)                         #54
              0cb6 c219  st   [$19]       3791  st([vAC+1])                     #55
                                          3792
              0cb7 0116  ld   [$16]       3793  ld([vPC])                       #56 Self-repeating SYS call
              0cb8 a002  suba $02         3794  suba(2)                         #57
              0cb9 c216  st   [$16]       3795  st([vPC])                       #58
              0cba 1403  ld   $03,y       3796  ld(hi('REENTER'),Y)             #59
              0cbb e0cb  jmp  y,$cb       3797  jmp(Y,'REENTER')                #60
              0cbc 00e0  ld   $e0         3798  ld(-64/2)                       #61
                                          3799
              0cbd 0200  nop              3800  align(64)
              0cbe 0200  nop
              0cbf 0200  nop
                                          3801  label('SYS_Sprite6xy_v3_64')
                                          3802
SYS_Sprite6xy_v3_64:
              0cc0 1124  ld   [$24],x     3803  ld([sysArgs+0],X)               #15 Pixel data source address
              0cc1 1525  ld   [$25],y     3804  ld([sysArgs+1],Y)               #16
              0cc2 0d00  ld   [y,x]       3805  ld([Y,X])                       #17 Next pixel or stop
              0cc3 f4d3  bge  .sysDpx3    3806  bpl('.sysDpx3')                 #18
              0cc4 de00  st   [y,x++]     3807  st([Y,Xpp])                     #19 Just X++
                                          3808
              0cc5 60ff  xora $ff         3809  xora(255)                       #20 Adjust dst for convenience
              0cc6 8001  adda $01         3810  adda(1)                         #21
              0cc7 8119  adda [$19]       3811  adda([vAC+1])                   #22
              0cc8 c219  st   [$19]       3812  st([vAC+1])                     #23
              0cc9 0118  ld   [$18]       3813  ld([vAC])                       #24
              0cca a006  suba $06         3814  suba(6)                         #25
              0ccb c218  st   [$18]       3815  st([vAC])                       #26
              0ccc 0124  ld   [$24]       3816  ld([sysArgs+0])                 #27 Adjust src for convenience
              0ccd 8001  adda $01         3817  adda(1)                         #28
              0cce c224  st   [$24]       3818  st([sysArgs+0])                 #29
              0ccf 0200  nop              3819  nop()                           #30
              0cd0 1403  ld   $03,y       3820  ld(hi('REENTER'),Y)             #31 Normal exit (no self-repeat)
              0cd1 e0cb  jmp  y,$cb       3821  jmp(Y,'REENTER')                #32
              0cd2 00ee  ld   $ee         3822  ld(-36/2)                       #33
                                          3823
                                          3824  label('.sysDpx3')
.sysDpx3:     0cd3 c22b  st   [$2b]       3825  st([sysArgs+7])                 #20 Gobble 6 pixels into buffer (backwards)
              0cd4 0d00  ld   [y,x]       3826  ld([Y,X])                       #21
              0cd5 de00  st   [y,x++]     3827  st([Y,Xpp])                     #22 Just X++
              0cd6 c22a  st   [$2a]       3828  st([sysArgs+6])                 #23
              0cd7 0d00  ld   [y,x]       3829  ld([Y,X])                       #24
              0cd8 de00  st   [y,x++]     3830  st([Y,Xpp])                     #25 Just X++
              0cd9 c229  st   [$29]       3831  st([sysArgs+5])                 #26
              0cda 0d00  ld   [y,x]       3832  ld([Y,X])                       #27
              0cdb de00  st   [y,x++]     3833  st([Y,Xpp])                     #28 Just X++
              0cdc c228  st   [$28]       3834  st([sysArgs+4])                 #29
              0cdd 0d00  ld   [y,x]       3835  ld([Y,X])                       #30
              0cde de00  st   [y,x++]     3836  st([Y,Xpp])                     #31 Just X++
              0cdf c227  st   [$27]       3837  st([sysArgs+3])                 #32
              0ce0 0d00  ld   [y,x]       3838  ld([Y,X])                       #33
              0ce1 de00  st   [y,x++]     3839  st([Y,Xpp])                     #34 Just X++
                                          3840
              0ce2 1118  ld   [$18],x     3841  ld([vAC],X)                     #35 Screen memory destination address
              0ce3 1519  ld   [$19],y     3842  ld([vAC+1],Y)                   #36
              0ce4 de00  st   [y,x++]     3843  st([Y,Xpp])                     #37 Write 6 pixels
              0ce5 0127  ld   [$27]       3844  ld([sysArgs+3])                 #38
              0ce6 de00  st   [y,x++]     3845  st([Y,Xpp])                     #39
              0ce7 0128  ld   [$28]       3846  ld([sysArgs+4])                 #40
              0ce8 de00  st   [y,x++]     3847  st([Y,Xpp])                     #41
              0ce9 0129  ld   [$29]       3848  ld([sysArgs+5])                 #42
              0cea de00  st   [y,x++]     3849  st([Y,Xpp])                     #43
              0ceb 012a  ld   [$2a]       3850  ld([sysArgs+6])                 #44
              0cec de00  st   [y,x++]     3851  st([Y,Xpp])                     #45
              0ced 012b  ld   [$2b]       3852  ld([sysArgs+7])                 #46
              0cee de00  st   [y,x++]     3853  st([Y,Xpp])                     #47
                                          3854
              0cef 0124  ld   [$24]       3855  ld([sysArgs+0])                 #48 src += 6
              0cf0 8006  adda $06         3856  adda(6)                         #49
              0cf1 c224  st   [$24]       3857  st([sysArgs+0])                 #50
              0cf2 0119  ld   [$19]       3858  ld([vAC+1])                     #51 dst -= 256
              0cf3 a001  suba $01         3859  suba(1)                         #52
              0cf4 c219  st   [$19]       3860  st([vAC+1])                     #53
                                          3861
              0cf5 0116  ld   [$16]       3862  ld([vPC])                       #54 Self-repeating SYS call
              0cf6 a002  suba $02         3863  suba(2)                         #55
              0cf7 c216  st   [$16]       3864  st([vPC])                       #56
              0cf8 1403  ld   $03,y       3865  ld(hi('REENTER'),Y)             #57
              0cf9 e0cb  jmp  y,$cb       3866  jmp(Y,'REENTER')                #58
              0cfa 00e1  ld   $e1         3867  ld(-62/2)                       #59
                                          3868
                                          3869  #-----------------------------------------------------------------------
                                          3870
                                          3871  label('sys_ExpanderControl')
                                          3872
sys_ExpanderControl:
              0cfb 2118  anda [$18]       3873  anda([vAC])                     #18
              0cfc d218  st   [$18],x     3874  st([vAC],X)                     #19
              0cfd 1401  ld   $01,y       3875  ld(hi(ctrlBits),Y)              #20
              0cfe caf8  st   [y,$f8]     3876  st([Y,ctrlBits])                #21 Set control variable
              0cff 1519  ld   [$19],y     3877  ld([vAC+1],Y)                   #22 MOSI (A15)
              0d00 cd00  ctrl y,x         3878  ctrl(Y,X)                       #23 Try set the expander control register
                                          3879
              0d01 0127  ld   [$27]       3880  ld([sysArgs+3])                 #24 Prepare for SYS_SpiExchangeBytes
                                          3881  assert pc()&255 < 255-3         # Beware of page crossing: asm.py won't warn
              0d02 ec05  bne  $0d05       3882  bne(pc()+3)                     #25
              0d03 fc05  bra  $0d05       3883  bra(pc()+2)                     #26
              0d04 0125  ld   [$25]       3884  ld([sysArgs+1])                 #27
              0d05 c227  st   [$27]       3885  st([sysArgs+3])                 #27,28 (must be idempotent)
                                          3886
              0d06 1403  ld   $03,y       3887  ld(hi('REENTER'),Y)             #29
              0d07 e0cb  jmp  y,$cb       3888  jmp(Y,'REENTER')                #30
              0d08 00ef  ld   $ef         3889  ld(-34/2)                       #31
                                          3890
                                          3891  #-----------------------------------------------------------------------
                                          3892
                                          3893  label('sys_SpiExchangeBytes')
                                          3894
sys_SpiExchangeBytes:
              0d09 09f8  ld   [y,$f8]     3895  ld([Y,ctrlBits])                #18
              0d0a c228  st   [$28]       3896  st([sysArgs+4])                 #19
                                          3897
              0d0b 1124  ld   [$24],x     3898  ld([sysArgs+0],X)               #20 Fetch byte to send
              0d0c 1525  ld   [$25],y     3899  ld([sysArgs+1],Y)               #21
              0d0d 0d00  ld   [y,x]       3900  ld([Y,X])                       #22
                                          3901
                                          3902  for i in range(8):
                                          3903    st([vTmp],Y);C('Bit %d'%(7-i))#23+i*12
              0d0e d61d  st   [$1d],y     ;Bit 7
              0d0f 1128  ld   [$28],x     3904    ld([sysArgs+4],X)             #24+i*12
              0d10 dd00  ctrl y,x++       3905    ctrl(Y,Xpp)                   #25+i*12 Set MOSI
              0d11 dd00  ctrl y,x++       3906    ctrl(Y,Xpp)                   #26+i*12 Raise SCLK, disable RAM!
              0d12 0100  ld   [$00]       3907    ld([0])                       #27+i*12 Get MISO
              0d13 200f  anda $0f         3908    anda(0b00001111)              #28+i*12 This is why R1 as pull-DOWN is simpler
              0d14 f017  beq  $0d17       3909    beq(pc()+3)                   #29+i*12
              0d15 fc17  bra  $0d17       3910    bra(pc()+2)                   #30+i*12
              0d16 0001  ld   $01         3911    ld(1)                         #31+i*12
              0d17 cd00  ctrl y,x         3912    ctrl(Y,X)                     #32+i*12,29+i*12 (Must be idempotent) Lower SCLK
              0d18 811d  adda [$1d]       3913    adda([vTmp])                  #33+i*12 Shift
              0d19 811d  adda [$1d]       3914    adda([vTmp])                  #34+i*12
              0d1a d61d  st   [$1d],y     ;Bit 6
              0d1b 1128  ld   [$28],x
              0d1c dd00  ctrl y,x++
              0d1d dd00  ctrl y,x++
              0d1e 0100  ld   [$00]
              0d1f 200f  anda $0f
              0d20 f023  beq  $0d23
              0d21 fc23  bra  $0d23
              0d22 0001  ld   $01
              0d23 cd00  ctrl y,x
              0d24 811d  adda [$1d]
              0d25 811d  adda [$1d]
              0d26 d61d  st   [$1d],y     ;Bit 5
              0d27 1128  ld   [$28],x
              0d28 dd00  ctrl y,x++
              0d29 dd00  ctrl y,x++
              0d2a 0100  ld   [$00]
              0d2b 200f  anda $0f
              0d2c f02f  beq  $0d2f
              0d2d fc2f  bra  $0d2f
              0d2e 0001  ld   $01
              0d2f cd00  ctrl y,x
              0d30 811d  adda [$1d]
              0d31 811d  adda [$1d]
              0d32 d61d  st   [$1d],y     ;Bit 4
              0d33 1128  ld   [$28],x
              0d34 dd00  ctrl y,x++
              0d35 dd00  ctrl y,x++
              0d36 0100  ld   [$00]
              0d37 200f  anda $0f
              0d38 f03b  beq  $0d3b
              0d39 fc3b  bra  $0d3b
              0d3a 0001  ld   $01
              0d3b cd00  ctrl y,x
              0d3c 811d  adda [$1d]
              0d3d 811d  adda [$1d]
              0d3e d61d  st   [$1d],y     ;Bit 3
              0d3f 1128  ld   [$28],x
              0d40 dd00  ctrl y,x++
              0d41 dd00  ctrl y,x++
              0d42 0100  ld   [$00]
              0d43 200f  anda $0f
              0d44 f047  beq  $0d47
              0d45 fc47  bra  $0d47
              0d46 0001  ld   $01
              0d47 cd00  ctrl y,x
              0d48 811d  adda [$1d]
              0d49 811d  adda [$1d]
              0d4a d61d  st   [$1d],y     ;Bit 2
              0d4b 1128  ld   [$28],x
              0d4c dd00  ctrl y,x++
              0d4d dd00  ctrl y,x++
              0d4e 0100  ld   [$00]
              0d4f 200f  anda $0f
              0d50 f053  beq  $0d53
              0d51 fc53  bra  $0d53
              0d52 0001  ld   $01
              0d53 cd00  ctrl y,x
              0d54 811d  adda [$1d]
              0d55 811d  adda [$1d]
              0d56 d61d  st   [$1d],y     ;Bit 1
              0d57 1128  ld   [$28],x
              0d58 dd00  ctrl y,x++
              0d59 dd00  ctrl y,x++
              0d5a 0100  ld   [$00]
              0d5b 200f  anda $0f
              0d5c f05f  beq  $0d5f
              0d5d fc5f  bra  $0d5f
              0d5e 0001  ld   $01
              0d5f cd00  ctrl y,x
              0d60 811d  adda [$1d]
              0d61 811d  adda [$1d]
              0d62 d61d  st   [$1d],y     ;Bit 0
              0d63 1128  ld   [$28],x
              0d64 dd00  ctrl y,x++
              0d65 dd00  ctrl y,x++
              0d66 0100  ld   [$00]
              0d67 200f  anda $0f
              0d68 f06b  beq  $0d6b
              0d69 fc6b  bra  $0d6b
              0d6a 0001  ld   $01
              0d6b cd00  ctrl y,x
              0d6c 811d  adda [$1d]
              0d6d 811d  adda [$1d]
                                          3915
              0d6e 1124  ld   [$24],x     3916  ld([sysArgs+0],X)               #119 Store received byte
              0d6f 1527  ld   [$27],y     3917  ld([sysArgs+3],Y)               #120
              0d70 ce00  st   [y,x]       3918  st([Y,X])                       #121
                                          3919
              0d71 0124  ld   [$24]       3920  ld([sysArgs+0])                 #122 Advance pointer
              0d72 8001  adda $01         3921  adda(1)                         #123
              0d73 c224  st   [$24]       3922  st([sysArgs+0])                 #124
                                          3923
              0d74 6126  xora [$26]       3924  xora([sysArgs+2])               #125 Reached end?
              0d75 f07c  beq  .sysSpi#128 3925  beq('.sysSpi#128')              #126
                                          3926
              0d76 0116  ld   [$16]       3927  ld([vPC])                       #127 Self-repeating SYS call
              0d77 a002  suba $02         3928  suba(2)                         #128
              0d78 c216  st   [$16]       3929  st([vPC])                       #129
              0d79 1403  ld   $03,y       3930  ld(hi('NEXTY'),Y)               #130
              0d7a e000  jmp  y,$00       3931  jmp(Y,'NEXTY')                  #131
              0d7b 00bd  ld   $bd         3932  ld(-134/2)                      #132
                                          3933
                                          3934  label('.sysSpi#128')
.sysSpi#128:  0d7c 1403  ld   $03,y       3935  ld(hi('NEXTY'),Y)               #128 Continue program
              0d7d e000  jmp  y,$00       3936  jmp(Y,'NEXTY')                  #129
              0d7e 00be  ld   $be         3937  ld(-132/2)                      #130
                                          3938
                                          3939  #-----------------------------------------------------------------------
                                          3940
                                          3941  label('sys_v6502')
                                          3942
sys_v6502:    0d7f d602  st   [$02],y     3943  st([vCpuSelect],Y)              #18 Activate v6502
              0d80 00f5  ld   $f5         3944  ld(-22/2)                       #19
              0d81 e0ff  jmp  y,$ff       3945  jmp(Y,'v6502_ENTER')            #20 Transfer control in the same time slice
              0d82 8115  adda [$15]       3946  adda([vTicks])                  #21
                                          3947  assert (38 - 22)//2 >= v6502_adjust
                                          3948
                                          3949  #-----------------------------------------------------------------------
                                          3950  #       MOS 6502 emulator
                                          3951  #-----------------------------------------------------------------------
                                          3952
                                          3953  # Some quirks:
                                          3954  # - Stack in zero page instead of page 1
                                          3955  # - No interrupts
                                          3956  # - No decimal mode (may never be added). D flag is emulated but ignored.
                                          3957  # - BRK switches back to running 16-bits vCPU
                                          3958  # - Illegal opcodes map to BRK, but can read ghost operands before trapping
                                          3959  # - Illegal opcode $ff won't be trapped and cause havoc instead
                                          3960
                                          3961  # Big things TODO:
                                          3962  # XXX Tuning, put most frequent instructions in the primary page
                                          3963
                                          3964  label('v6502_ror')
                                          3965  assert v6502_Cflag == 1
v6502_ror:    0d83 1525  ld   [$25],y     3966  ld([v6502_ADH],Y)               #12
              0d84 00fc  ld   $fc         3967  ld(-46//2+v6502_maxTicks)       #13 Is there enough time for the excess ticks?
              0d85 8115  adda [$15]       3968  adda([vTicks])                  #14
              0d86 e89a  blt  .recheck17  3969  blt('.recheck17')               #15
              0d87 0127  ld   [$27]       3970  ld([v6502_P])                   #16 Transfer C to "bit 8"
              0d88 2001  anda $01         3971  anda(1)                         #17
              0d89 807f  adda $7f         3972  adda(127)                       #18
              0d8a 2080  anda $80         3973  anda(128)                       #19
              0d8b c219  st   [$19]       3974  st([v6502_BI])                  #20 The real 6502 wouldn't use BI for this
              0d8c 0127  ld   [$27]       3975  ld([v6502_P])                   #21 Transfer bit 0 to C
              0d8d 20fe  anda $fe         3976  anda(~1)                        #22
              0d8e c227  st   [$27]       3977  st([v6502_P])                   #23
              0d8f 0d00  ld   [y,x]       3978  ld([Y,X])                       #24
              0d90 2001  anda $01         3979  anda(1)                         #25
              0d91 4127  ora  [$27]       3980  ora([v6502_P])                  #26
              0d92 c227  st   [$27]       3981  st([v6502_P])                   #27
              0d93 00c0  ld   $c0         3982  ld('v6502_ror#38')              #28 Shift table lookup
              0d94 c21d  st   [$1d]       3983  st([vTmp])                      #29
              0d95 0d00  ld   [y,x]       3984  ld([Y,X])                       #30
              0d96 20fe  anda $fe         3985  anda(~1)                        #31
              0d97 1405  ld   $05,y       3986  ld(hi('shiftTable'),Y)          #32
              0d98 e200  jmp  y,ac        3987  jmp(Y,AC)                       #33
              0d99 fcff  bra  $ff         3988  bra(255)                        #34 bra shiftTable+255
                                          3989  label('.recheck17')
.recheck17:   0d9a 140e  ld   $0e,y       3990  ld(hi('v6502_check'),Y)         #17 Go back to time check before dispatch
              0d9b e0f2  jmp  y,$f2       3991  jmp(Y,'v6502_check')            #18
              0d9c 00f6  ld   $f6         3992  ld(-20/2)                       #19
                                          3993
                                          3994  label('v6502_lsr')
                                          3995  assert v6502_Cflag == 1
v6502_lsr:    0d9d 1525  ld   [$25],y     3996  ld([v6502_ADH],Y)               #12
              0d9e 0127  ld   [$27]       3997  ld([v6502_P])                   #13 Transfer bit 0 to C
              0d9f 20fe  anda $fe         3998  anda(~1)                        #14
              0da0 c227  st   [$27]       3999  st([v6502_P])                   #15
              0da1 0d00  ld   [y,x]       4000  ld([Y,X])                       #16
              0da2 2001  anda $01         4001  anda(1)                         #17
              0da3 4127  ora  [$27]       4002  ora([v6502_P])                  #18
              0da4 c227  st   [$27]       4003  st([v6502_P])                   #19
              0da5 00b9  ld   $b9         4004  ld('v6502_lsr#30')              #20 Shift table lookup
              0da6 c21d  st   [$1d]       4005  st([vTmp])                      #21
              0da7 0d00  ld   [y,x]       4006  ld([Y,X])                       #22
              0da8 20fe  anda $fe         4007  anda(~1)                        #23
              0da9 1405  ld   $05,y       4008  ld(hi('shiftTable'),Y)          #24
              0daa e200  jmp  y,ac        4009  jmp(Y,AC)                       #25
              0dab fcff  bra  $ff         4010  bra(255)                        #26 bra shiftTable+255
                                          4011
                                          4012  label('v6502_rol')
                                          4013  assert v6502_Cflag == 1
v6502_rol:    0dac 1525  ld   [$25],y     4014  ld([v6502_ADH],Y)               #12
              0dad 0d00  ld   [y,x]       4015  ld([Y,X])                       #13
              0dae 2080  anda $80         4016  anda(0x80)                      #14
              0daf c21d  st   [$1d]       4017  st([v6502_Tmp])                 #15
              0db0 0127  ld   [$27]       4018  ld([v6502_P])                   #16
              0db1 2001  anda $01         4019  anda(1)                         #17
                                          4020  label('.rol#18')
.rol#18:      0db2 8d00  adda [y,x]       4021  adda([Y,X])                     #18
              0db3 8d00  adda [y,x]       4022  adda([Y,X])                     #19
              0db4 ce00  st   [y,x]       4023  st([Y,X])                       #20
              0db5 c228  st   [$28]       4024  st([v6502_Qz])                  #21 Z flag
              0db6 c229  st   [$29]       4025  st([v6502_Qn])                  #22 N flag
              0db7 0127  ld   [$27]       4026  ld([v6502_P])                   #23 C Flag
              0db8 20fe  anda $fe         4027  anda(~1)                        #24
              0db9 111d  ld   [$1d],x     4028  ld([v6502_Tmp],X)               #25
              0dba 4500  ora  [x]         4029  ora([X])                        #26
              0dbb c227  st   [$27]       4030  st([v6502_P])                   #27
              0dbc 140e  ld   $0e,y       4031  ld(hi('v6502_next'),Y)          #28
              0dbd 00f0  ld   $f0         4032  ld(-32/2)                       #29
              0dbe e020  jmp  y,$20       4033  jmp(Y,'v6502_next')             #30
                                          4034  #nop()                          #31 Overlap
                                          4035  #
                                          4036  label('v6502_asl')
v6502_asl:    0dbf 1525  ld   [$25],y     4037  ld([v6502_ADH],Y)               #12,32
              0dc0 0d00  ld   [y,x]       4038  ld([Y,X])                       #13
              0dc1 2080  anda $80         4039  anda(0x80)                      #14
              0dc2 c21d  st   [$1d]       4040  st([v6502_Tmp])                 #15
              0dc3 fcb2  bra  .rol#18     4041  bra('.rol#18')                  #16
              0dc4 0000  ld   $00         4042  ld(0)                           #17
                                          4043
                                          4044  label('v6502_jmp1')
v6502_jmp1:   0dc5 0200  nop              4045  nop()                           #12
              0dc6 0124  ld   [$24]       4046  ld([v6502_ADL])                 #13
              0dc7 c21a  st   [$1a]       4047  st([v6502_PCL])                 #14
              0dc8 0125  ld   [$25]       4048  ld([v6502_ADH])                 #15
              0dc9 c21b  st   [$1b]       4049  st([v6502_PCH])                 #16
              0dca 140e  ld   $0e,y       4050  ld(hi('v6502_next'),Y)          #17
              0dcb e020  jmp  y,$20       4051  jmp(Y,'v6502_next')             #18
              0dcc 00f6  ld   $f6         4052  ld(-20/2)                       #19
                                          4053
                                          4054  label('v6502_jmp2')
v6502_jmp2:   0dcd 0200  nop              4055  nop()                           #12
              0dce 1525  ld   [$25],y     4056  ld([v6502_ADH],Y)               #13
              0dcf 0d00  ld   [y,x]       4057  ld([Y,X])                       #14
              0dd0 de00  st   [y,x++]     4058  st([Y,Xpp])                     #15 (Just X++) Wrap around: bug compatible with NMOS
              0dd1 c21a  st   [$1a]       4059  st([v6502_PCL])                 #16
              0dd2 0d00  ld   [y,x]       4060  ld([Y,X])                       #17
              0dd3 c21b  st   [$1b]       4061  st([v6502_PCH])                 #18
              0dd4 140e  ld   $0e,y       4062  ld(hi('v6502_next'),Y)          #19
              0dd5 e020  jmp  y,$20       4063  jmp(Y,'v6502_next')             #20
              0dd6 00f5  ld   $f5         4064  ld(-22/2)                       #21
                                          4065
                                          4066  label('v6502_pla')
v6502_pla:    0dd7 011c  ld   [$1c]       4067  ld([v6502_S])                   #12
              0dd8 1200  ld   ac,x        4068  ld(AC,X)                        #13
              0dd9 8001  adda $01         4069  adda(1)                         #14
              0dda c21c  st   [$1c]       4070  st([v6502_S])                   #15
              0ddb 0500  ld   [x]         4071  ld([X])                         #16
              0ddc c218  st   [$18]       4072  st([v6502_A])                   #17
              0ddd c228  st   [$28]       4073  st([v6502_Qz])                  #18 Z flag
              0dde c229  st   [$29]       4074  st([v6502_Qn])                  #19 N flag
              0ddf 140e  ld   $0e,y       4075  ld(hi('v6502_next'),Y)          #20
              0de0 00f4  ld   $f4         4076  ld(-24/2)                       #21
              0de1 e020  jmp  y,$20       4077  jmp(Y,'v6502_next')             #22
                                          4078  #nop()                          #23 Overlap
                                          4079  #
                                          4080  label('v6502_pha')
v6502_pha:    0de2 140e  ld   $0e,y       4081  ld(hi('v6502_next'),Y)          #12,24
              0de3 011c  ld   [$1c]       4082  ld([v6502_S])                   #13
              0de4 a001  suba $01         4083  suba(1)                         #14
              0de5 d21c  st   [$1c],x     4084  st([v6502_S],X)                 #15
              0de6 0118  ld   [$18]       4085  ld([v6502_A])                   #16
              0de7 c600  st   [x]         4086  st([X])                         #17
              0de8 e020  jmp  y,$20       4087  jmp(Y,'v6502_next')             #18
              0de9 00f6  ld   $f6         4088  ld(-20/2)                       #19
                                          4089
                                          4090  label('v6502_brk')
v6502_brk:    0dea 0002  ld   $02         4091  ld(hi('ENTER'))                 #12 Switch to vCPU
              0deb c202  st   [$02]       4092  st([vCpuSelect])                #13
                                          4093  assert v6502_A == vAC
              0dec 0000  ld   $00         4094  ld(0)                           #14
              0ded c219  st   [$19]       4095  st([vAC+1])                     #15
              0dee 1403  ld   $03,y       4096  ld(hi('REENTER'),Y)             #16 Switch in the current time slice
              0def 00fa  ld   $fa         4097  ld(-22//2+v6502_adjust)         #17
              0df0 e0cb  jmp  y,$cb       4098  jmp(Y,'REENTER')                #18
              0df1 0200  nop              4099  nop()                           #19
                                          4100
                                          4101  # All interpreter entry points must share the same page offset, because
                                          4102  # this offset is hard-coded as immediate operand in the video driver.
                                          4103  # The Gigatron's original vCPU's 'ENTER' label is already at $2ff, so we
                                          4104  # just use $dff for 'v6502_ENTER'. v6502 actually has two entry points.
                                          4105  # The other is 'v6502_RESUME' at $10ff. It is used for instructions
                                          4106  # that were fetched but not yet executed. Allowing the split gives finer
                                          4107  # granulariy, and hopefully more throughput for the simpler instructions.
                                          4108  # (There is no "overhead" for allowing instruction splitting, because
                                          4109  #  both emulation phases must administer [vTicks] anyway.)
                                          4110  while pc()&255 < 255:
              0df2 0200  nop              4111    nop()
              0df3 0200  nop
              0df4 0200  nop
              * 13 times
                                          4112  label('v6502_ENTER')
v6502_ENTER:  0dff fc22  bra  v6502_next2 4113  bra('v6502_next2')              #0 v6502 primary entry point
                                          4114  # --- Page boundary ---
              0e00 a005  suba $05         4115  suba(v6502_adjust)              #1,19 Adjust for vCPU/v6520 timing differences
                                          4116
                                          4117  #19 Addressing modes
                                          4118  (   'v6502_mode0'  ); bra('v6502_modeIZX'); bra('v6502_modeIMM'); bra('v6502_modeILL') # $00 xxx000xx
              0e01 fce0  bra  v6502_modeIZX
              0e02 fc42  bra  v6502_modeIMM
              0e03 fc58  bra  v6502_modeIMP
                                          4119  bra('v6502_modeZP');  bra('v6502_modeZP');  bra('v6502_modeZP');  bra('v6502_modeILL') # $04 xxx001xx
              0e04 fc5d  bra  v6502_modeZP
              0e05 fc5d  bra  v6502_modeZP
              0e06 fc5d  bra  v6502_modeZP
              0e07 fc58  bra  v6502_modeIMP
                                          4120  bra('v6502_modeIMP'); bra('v6502_modeIMM'); bra('v6502_modeACC'); bra('v6502_modeILL') # $08 xxx010xx
              0e08 fc58  bra  v6502_modeIMP
              0e09 fc42  bra  v6502_modeIMM
              0e0a fc52  bra  v6502_modeACC
              0e0b fc58  bra  v6502_modeIMP
                                          4121  bra('v6502_modeABS'); bra('v6502_modeABS'); bra('v6502_modeABS'); bra('v6502_modeILL') # $0c xxx011xx
              0e0c fc78  bra  v6502_modeABS
              0e0d fc78  bra  v6502_modeABS
              0e0e fc78  bra  v6502_modeABS
              0e0f fc58  bra  v6502_modeIMP
                                          4122  bra('v6502_modeREL'); bra('v6502_modeIZY'); bra('v6502_modeIMM'); bra('v6502_modeILL') # $10 xxx100xx
              0e10 fccf  bra  v6502_modeREL
              0e11 fcab  bra  v6502_modeIZY
              0e12 fc42  bra  v6502_modeIMM
              0e13 fc58  bra  v6502_modeIMP
                                          4123  bra('v6502_modeZPX'); bra('v6502_modeZPX'); bra('v6502_modeZPX'); bra('v6502_modeILL') # $14 xxx101xx
              0e14 fc5b  bra  v6502_modeZPX
              0e15 fc5b  bra  v6502_modeZPX
              0e16 fc5b  bra  v6502_modeZPX
              0e17 fc58  bra  v6502_modeIMP
                                          4124  bra('v6502_modeIMP'); bra('v6502_modeABY'); bra('v6502_modeIMP'); bra('v6502_modeILL') # $18 xxx110xx
              0e18 fc58  bra  v6502_modeIMP
              0e19 fc7b  bra  v6502_modeABY
              0e1a fc58  bra  v6502_modeIMP
              0e1b fc58  bra  v6502_modeIMP
                                          4125  bra('v6502_modeABX'); bra('v6502_modeABX'); bra('v6502_modeABX'); bra('v6502_modeILL') # $1c xxx111xx
              0e1c fc7a  bra  v6502_modeABX
              0e1d fc7a  bra  v6502_modeABX
              0e1e fc7a  bra  v6502_modeABX
              0e1f fc58  bra  v6502_modeIMP
                                          4126
                                          4127  # Special encoding cases for emulator:
                                          4128  #     $00 BRK -         but gets mapped to #$DD      handled in v6502_mode0
                                          4129  #     $20 JSR $DDDD     but gets mapped to #$DD      handled in v6502_mode0 and v6502_JSR
                                          4130  #     $40 RTI -         but gets mapped to #$DD      handled in v6502_mode0
                                          4131  #     $60 RTS -         but gets mapped to #$DD      handled in v6502_mode0
                                          4132  #     $6C JMP ($DDDD)   but gets mapped to $DDDD     handled in v6502_JMP2
                                          4133  #     $96 STX $DD,Y     but gets mapped to $DD,X     handled in v6502_STX2
                                          4134  #     $B6 LDX $DD,Y     but gets mapped to $DD,X     handled in v6502_LDX2
                                          4135  #     $BE LDX $DDDD,Y   but gets mapped to $DDDD,X   handled in v6502_modeABX
                                          4136
                                          4137  label('v6502_next')
v6502_next:   0e20 8115  adda [$15]       4138  adda([vTicks])                  #0
                                          4139  blt('v6502_exitBefore')         #1 No more ticks
              0e21 e83a  blt  v6502_exitBefore
                                          4140  label('v6502_next2')
v6502_next2:  0e22 c215  st   [$15]       4141  st([vTicks])                    #2
                                          4142  #
                                          4143  # Fetch opcode
              0e23 111a  ld   [$1a],x     4144  ld([v6502_PCL],X)               #3
              0e24 151b  ld   [$1b],y     4145  ld([v6502_PCH],Y)               #4
              0e25 0d00  ld   [y,x]       4146  ld([Y,X])                       #5 Fetch IR
              0e26 c226  st   [$26]       4147  st([v6502_IR])                  #6
              0e27 011a  ld   [$1a]       4148  ld([v6502_PCL])                 #7 PC++
              0e28 8001  adda $01         4149  adda(1)                         #8
              0e29 d21a  st   [$1a],x     4150  st([v6502_PCL],X)               #9
              0e2a f02d  beq  $0e2d       4151  beq(pc()+3)                     #10
              0e2b fc2e  bra  $0e2e       4152  bra(pc()+3)                     #11
              0e2c 0000  ld   $00         4153  ld(0)                           #12
              0e2d 0001  ld   $01         4154  ld(1)                           #12(!)
              0e2e 811b  adda [$1b]       4155  adda([v6502_PCH])               #13
              0e2f d61b  st   [$1b],y     4156  st([v6502_PCH],Y)               #14
                                          4157  #
                                          4158  # Get addressing mode and fetch operands
              0e30 0126  ld   [$26]       4159  ld([v6502_IR])                  #15 Get addressing mode
              0e31 201f  anda $1f         4160  anda(31)                        #16
              0e32 fe00  bra  ac          4161  bra(AC)                         #17
              0e33 fc34  bra  .next20     4162  bra('.next20')                  #18
                                          4163  # (jump table)                  #19
                                          4164  label('.next20')
.next20:      0e34 0d00  ld   [y,x]       4165  ld([Y,X])                       #20 Fetch L
                                          4166  # Most opcodes branch away at this point, but IR & 31 == 0 falls through
                                          4167  #
                                          4168  # Implicit Mode for  BRK JSR RTI RTS (<  0x80) -- 26 cycles
                                          4169  # Immediate Mode for LDY CPY CPX     (>= 0x80) -- 36 cycles
                                          4170  label('v6502_mode0')
v6502_mode0:  0e35 0126  ld   [$26]       4171  ld([v6502_IR])                  #21 'xxx0000'
              0e36 e845  blt  .imm24      4172  bmi('.imm24')                   #22
              0e37 011b  ld   [$1b]       4173  ld([v6502_PCH])                 #23
              0e38 fcf2  bra  v6502_check 4174  bra('v6502_check')              #24
              0e39 00f3  ld   $f3         4175  ld(-26/2)                       #25
                                          4176
                                          4177  # Resync with video driver. At this point we're returning BEFORE
                                          4178  # fetching and executing the next instruction.
                                          4179  label('v6502_exitBefore')
v6502_exitBefore:
              0e3a 8013  adda $13         4180  adda(v6502_maxTicks)            #3 Exit BEFORE fetch
              0e3b e43b  bgt  $0e3b       4181  bgt(pc()&255)                   #4 Resync
              0e3c a001  suba $01         4182  suba(1)                         #5
              0e3d 000d  ld   $0d         4183  ld(hi('v6502_ENTER'))           #6 Set entry point to before 'fetch'
              0e3e c202  st   [$02]       4184  st([vCpuSelect])                #7
              0e3f 1401  ld   $01,y       4185  ld(hi('vBlankStart'),Y)         #8
              0e40 e11e  jmp  y,[$1e]     4186  jmp(Y,[vReturn])                #9 To video driver
              0e41 0000  ld   $00         4187  ld(0)                           #10
                                          4188  assert v6502_overhead ==         11
                                          4189
                                          4190  # Immediate Mode: #$FF -- 36 cycles
                                          4191  label('v6502_modeIMM')
v6502_modeIMM:
              0e42 0200  nop              4192  nop()                           #21 Wait for v6502_mode0 to join
              0e43 0200  nop              4193  nop()                           #22
              0e44 011b  ld   [$1b]       4194  ld([v6502_PCH])                 #23 Copy PC
                                          4195  label('.imm24')
.imm24:       0e45 c225  st   [$25]       4196  st([v6502_ADH])                 #24
              0e46 011a  ld   [$1a]       4197  ld([v6502_PCL])                 #25
              0e47 d224  st   [$24],x     4198  st([v6502_ADL],X)               #26
              0e48 8001  adda $01         4199  adda(1)                         #27 PC++
              0e49 c21a  st   [$1a]       4200  st([v6502_PCL])                 #28
              0e4a f04d  beq  $0e4d       4201  beq(pc()+3)                     #29
              0e4b fc4e  bra  $0e4e       4202  bra(pc()+3)                     #30
              0e4c 0000  ld   $00         4203  ld(0)                           #31
              0e4d 0001  ld   $01         4204  ld(1)                           #31(!)
              0e4e 811b  adda [$1b]       4205  adda([v6502_PCH])               #32
              0e4f c21b  st   [$1b]       4206  st([v6502_PCH])                 #33
              0e50 fcf2  bra  v6502_check 4207  bra('v6502_check')              #34
              0e51 00ee  ld   $ee         4208  ld(-36/2)                       #35
                                          4209
                                          4210  # Accumulator Mode: ROL ROR LSL ASR -- 28 cycles
                                          4211  label('v6502_modeACC')
v6502_modeACC:
              0e52 0018  ld   $18         4212  ld(v6502_A&255)                 #21 Address of AC
              0e53 d224  st   [$24],x     4213  st([v6502_ADL],X)               #22
              0e54 0000  ld   $00         4214  ld(v6502_A>>8)                  #23
              0e55 c225  st   [$25]       4215  st([v6502_ADH])                 #24
              0e56 00f2  ld   $f2         4216  ld(-28/2)                       #25
              0e57 fcf2  bra  v6502_check 4217  bra('v6502_check')              #26
                                          4218  #nop()                          #27 Overlap
                                          4219  #
                                          4220  # Implied Mode: no operand -- 24 cycles
                                          4221  label('v6502_modeILL')
                                          4222  label('v6502_modeIMP')
v6502_modeILL:
v6502_modeIMP:
              0e58 0200  nop              4223  nop()                           #21,27
              0e59 fcf2  bra  v6502_check 4224  bra('v6502_check')              #22
              0e5a 00f4  ld   $f4         4225  ld(-24/2)                       #23
                                          4226
                                          4227  # Zero Page Modes: $DD $DD,X $DD,Y -- 36 cycles
                                          4228  label('v6502_modeZPX')
v6502_modeZPX:
              0e5b fc5f  bra  .zp23       4229  bra('.zp23')                    #21
              0e5c 812a  adda [$2a]       4230  adda([v6502_X])                 #22
                                          4231  label('v6502_modeZP')
v6502_modeZP: 0e5d fc5f  bra  .zp23       4232  bra('.zp23')                    #21
              0e5e 0200  nop              4233  nop()                           #22
                                          4234  label('.zp23')
.zp23:        0e5f d224  st   [$24],x     4235  st([v6502_ADL],X)               #23
              0e60 0000  ld   $00         4236  ld(0)                           #24 H=0
              0e61 c225  st   [$25]       4237  st([v6502_ADH])                 #25
              0e62 0001  ld   $01         4238  ld(1)                           #26 PC++
              0e63 811a  adda [$1a]       4239  adda([v6502_PCL])               #27
              0e64 c21a  st   [$1a]       4240  st([v6502_PCL])                 #28
              0e65 f068  beq  $0e68       4241  beq(pc()+3)                     #29
              0e66 fc69  bra  $0e69       4242  bra(pc()+3)                     #30
              0e67 0000  ld   $00         4243  ld(0)                           #31
              0e68 0001  ld   $01         4244  ld(1)                           #31(!)
              0e69 811b  adda [$1b]       4245  adda([v6502_PCH])               #32
              0e6a c21b  st   [$1b]       4246  st([v6502_PCH])                 #33
              0e6b fcf2  bra  v6502_check 4247  bra('v6502_check')              #34
              0e6c 00ee  ld   $ee         4248  ld(-36/2)                       #35
                                          4249
                                          4250  # Possible retry loop for modeABS and modeIZY. Because these need
                                          4251  # more time than the v6502_maxTicks of 38 Gigatron cycles, we may
                                          4252  # have to restart them after the next horizontal pulse.
                                          4253  label('.retry28')
.retry28:     0e6d f070  beq  $0e70       4254  beq(pc()+3)                     #28,37 PC--
              0e6e fc71  bra  $0e71       4255  bra(pc()+3)                     #29
              0e6f 0000  ld   $00         4256  ld(0)                           #30
              0e70 00ff  ld   $ff         4257  ld(-1)                          #30(!)
              0e71 811b  adda [$1b]       4258  adda([v6502_PCH])               #31
              0e72 c21b  st   [$1b]       4259  st([v6502_PCH])                 #32
              0e73 011a  ld   [$1a]       4260  ld([v6502_PCL])                 #33
              0e74 a001  suba $01         4261  suba(1)                         #34
              0e75 c21a  st   [$1a]       4262  st([v6502_PCL])                 #35
              0e76 fc20  bra  v6502_next  4263  bra('v6502_next')               #36 Retry until sufficient time
              0e77 00ed  ld   $ed         4264  ld(-38/2)                       #37
                                          4265
                                          4266  # Absolute Modes: $DDDD $DDDD,X $DDDD,Y -- 64 cycles
                                          4267  label('v6502_modeABS')
v6502_modeABS:
              0e78 fc7d  bra  .abs23      4268  bra('.abs23')                   #21
              0e79 0000  ld   $00         4269  ld(0)                           #22
                                          4270  label('v6502_modeABX')
v6502_modeABX:
              0e7a fc7d  bra  .abs23      4271  bra('.abs23')                   #21
                                          4272  label('v6502_modeABY')
v6502_modeABY:
              0e7b 012a  ld   [$2a]       4273  ld([v6502_X])                   #21,22
              0e7c 012b  ld   [$2b]       4274  ld([v6502_Y])                   #22
                                          4275  label('.abs23')
.abs23:       0e7d c224  st   [$24]       4276  st([v6502_ADL])                 #23
              0e7e 00f3  ld   $f3         4277  ld(-64//2+v6502_maxTicks)       #24 Is there enough time for the excess ticks?
              0e7f 8115  adda [$15]       4278  adda([vTicks])                  #25
              0e80 e86d  blt  .retry28    4279  blt('.retry28')                 #26
              0e81 011a  ld   [$1a]       4280  ld([v6502_PCL])                 #27
              0e82 0126  ld   [$26]       4281  ld([v6502_IR])                  #28 Special case $BE: LDX $DDDD,Y (we got X in ADL)
              0e83 60be  xora $be         4282  xora(0xbe)                      #29
              0e84 f087  beq  $0e87       4283  beq(pc()+3)                     #30
              0e85 fc88  bra  $0e88       4284  bra(pc()+3)                     #31
              0e86 0124  ld   [$24]       4285  ld([v6502_ADL])                 #32
              0e87 012b  ld   [$2b]       4286  ld([v6502_Y])                   #32(!)
              0e88 8d00  adda [y,x]       4287  adda([Y,X])                     #33 Fetch and add L
              0e89 c224  st   [$24]       4288  st([v6502_ADL])                 #34
              0e8a e88e  blt  .abs37      4289  bmi('.abs37')                   #35 Carry?
              0e8b ad00  suba [y,x]       4290  suba([Y,X])                     #36 Gets back original operand
              0e8c fc90  bra  .abs39      4291  bra('.abs39')                   #37
              0e8d 4d00  ora  [y,x]       4292  ora([Y,X])                      #38 Carry in bit 7
                                          4293  label('.abs37')
.abs37:       0e8e 2d00  anda [y,x]       4294  anda([Y,X])                     #37 Carry in bit 7
              0e8f 0200  nop              4295  nop()                           #38
                                          4296  label('.abs39')
.abs39:       0e90 3080  anda $80,x       4297  anda(0x80,X)                    #39 Move carry to bit 0
              0e91 0500  ld   [x]         4298  ld([X])                         #40
              0e92 c225  st   [$25]       4299  st([v6502_ADH])                 #41
              0e93 011a  ld   [$1a]       4300  ld([v6502_PCL])                 #42 PC++
              0e94 8001  adda $01         4301  adda(1)                         #43
              0e95 d21a  st   [$1a],x     4302  st([v6502_PCL],X)               #44
              0e96 f099  beq  $0e99       4303  beq(pc()+3)                     #45
              0e97 fc9a  bra  $0e9a       4304  bra(pc()+3)                     #46
              0e98 0000  ld   $00         4305  ld(0)                           #47
              0e99 0001  ld   $01         4306  ld(1)                           #47(!)
              0e9a 811b  adda [$1b]       4307  adda([v6502_PCH])               #48
              0e9b d61b  st   [$1b],y     4308  st([v6502_PCH],Y)               #49
              0e9c 0d00  ld   [y,x]       4309  ld([Y,X])                       #50 Fetch H
              0e9d 8125  adda [$25]       4310  adda([v6502_ADH])               #51
              0e9e c225  st   [$25]       4311  st([v6502_ADH])                 #52
              0e9f 011a  ld   [$1a]       4312  ld([v6502_PCL])                 #53 PC++
              0ea0 8001  adda $01         4313  adda(1)                         #54
              0ea1 c21a  st   [$1a]       4314  st([v6502_PCL])                 #55
              0ea2 f0a5  beq  $0ea5       4315  beq(pc()+3)                     #56
              0ea3 fca6  bra  $0ea6       4316  bra(pc()+3)                     #57
              0ea4 0000  ld   $00         4317  ld(0)                           #58
              0ea5 0001  ld   $01         4318  ld(1)                           #58(!)
              0ea6 811b  adda [$1b]       4319  adda([v6502_PCH])               #59
              0ea7 c21b  st   [$1b]       4320  st([v6502_PCH])                 #60
              0ea8 1124  ld   [$24],x     4321  ld([v6502_ADL],X)               #61
              0ea9 fcf2  bra  v6502_check 4322  bra('v6502_check')              #62
              0eaa 00e0  ld   $e0         4323  ld(-64/2)                       #63
                                          4324
                                          4325  # Indirect Indexed Mode: ($DD),Y -- 54 cycles
                                          4326  label('v6502_modeIZY')
v6502_modeIZY:
              0eab 1200  ld   ac,x        4327  ld(AC,X)                        #21 $DD
              0eac 1400  ld   $00,y       4328  ld(0,Y)                         #22 $00DD
              0ead 00f8  ld   $f8         4329  ld(-54//2+v6502_maxTicks)       #23 Is there enough time for the excess ticks?
              0eae 8115  adda [$15]       4330  adda([vTicks])                  #24
              0eaf 0200  nop              4331  nop()                           #25
              0eb0 e86d  blt  .retry28    4332  blt('.retry28')                 #26
              0eb1 011a  ld   [$1a]       4333  ld([v6502_PCL])                 #27
              0eb2 8001  adda $01         4334  adda(1)                         #28 PC++
              0eb3 c21a  st   [$1a]       4335  st([v6502_PCL])                 #29
              0eb4 f0b7  beq  $0eb7       4336  beq(pc()+3)                     #30
              0eb5 fcb8  bra  $0eb8       4337  bra(pc()+3)                     #31
              0eb6 0000  ld   $00         4338  ld(0)                           #32
              0eb7 0001  ld   $01         4339  ld(1)                           #32(!)
              0eb8 811b  adda [$1b]       4340  adda([v6502_PCH])               #33
              0eb9 c21b  st   [$1b]       4341  st([v6502_PCH])                 #34
              0eba 0d00  ld   [y,x]       4342  ld([Y,X])                       #35 Read word from zero-page
              0ebb de00  st   [y,x++]     4343  st([Y,Xpp])                     #36 (Just X++) Wrap-around is correct
              0ebc c224  st   [$24]       4344  st([v6502_ADL])                 #37
              0ebd 0d00  ld   [y,x]       4345  ld([Y,X])                       #38
              0ebe c225  st   [$25]       4346  st([v6502_ADH])                 #39
              0ebf 012b  ld   [$2b]       4347  ld([v6502_Y])                   #40 Add Y
              0ec0 8124  adda [$24]       4348  adda([v6502_ADL])               #41
              0ec1 c224  st   [$24]       4349  st([v6502_ADL])                 #42
              0ec2 e8c6  blt  .izy45      4350  bmi('.izy45')                   #43 Carry?
              0ec3 a12b  suba [$2b]       4351  suba([v6502_Y])                 #44 Gets back original operand
              0ec4 fcc8  bra  .izy47      4352  bra('.izy47')                   #45
              0ec5 412b  ora  [$2b]       4353  ora([v6502_Y])                  #46 Carry in bit 7
                                          4354  label('.izy45')
.izy45:       0ec6 212b  anda [$2b]       4355  anda([v6502_Y])                 #45 Carry in bit 7
              0ec7 0200  nop              4356  nop()                           #46
                                          4357  label('.izy47')
.izy47:       0ec8 3080  anda $80,x       4358  anda(0x80,X)                    #47 Move carry to bit 0
              0ec9 0500  ld   [x]         4359  ld([X])                         #48
              0eca 8125  adda [$25]       4360  adda([v6502_ADH])               #49
              0ecb c225  st   [$25]       4361  st([v6502_ADH])                 #50
              0ecc 1124  ld   [$24],x     4362  ld([v6502_ADL],X)               #51
              0ecd fcf2  bra  v6502_check 4363  bra('v6502_check')              #52
              0ece 00e5  ld   $e5         4364  ld(-54/2)                       #53
                                          4365
                                          4366  # Relative Mode: BEQ BNE BPL BMI BCC BCS BVC BVS -- 36 cycles
                                          4367  label('v6502_modeREL')
v6502_modeREL:
              0ecf d224  st   [$24],x     4368  st([v6502_ADL],X)               #21 Offset (Only needed for branch)
              0ed0 e8d3  blt  $0ed3       4369  bmi(pc()+3)                     #22 Sign extend
              0ed1 fcd4  bra  $0ed4       4370  bra(pc()+3)                     #23
              0ed2 0000  ld   $00         4371  ld(0)                           #24
              0ed3 00ff  ld   $ff         4372  ld(255)                         #24(!)
              0ed4 c225  st   [$25]       4373  st([v6502_ADH])                 #25
              0ed5 011a  ld   [$1a]       4374  ld([v6502_PCL])                 #26 PC++ (Needed for both cases)
              0ed6 8001  adda $01         4375  adda(1)                         #27
              0ed7 c21a  st   [$1a]       4376  st([v6502_PCL])                 #28
              0ed8 f0db  beq  $0edb       4377  beq(pc()+3)                     #29
              0ed9 fcdc  bra  $0edc       4378  bra(pc()+3)                     #30
              0eda 0000  ld   $00         4379  ld(0)                           #31
              0edb 0001  ld   $01         4380  ld(1)                           #31(!)
              0edc 811b  adda [$1b]       4381  adda([v6502_PCH])               #32
              0edd c21b  st   [$1b]       4382  st([v6502_PCH])                 #33
              0ede fcf2  bra  v6502_check 4383  bra('v6502_check')              #34
              0edf 00ee  ld   $ee         4384  ld(-36/2)                       #53
                                          4385
                                          4386  # Indexed Indirect Mode: ($DD,X) -- 38 cycles
                                          4387  label('v6502_modeIZX')
v6502_modeIZX:
              0ee0 812a  adda [$2a]       4388  adda([v6502_X])                 #21 Add X
              0ee1 c21d  st   [$1d]       4389  st([v6502_Tmp])                 #22
              0ee2 9001  adda $01,x       4390  adda(1,X)                       #23 Read word from zero-page
              0ee3 0500  ld   [x]         4391  ld([X])                         #24
              0ee4 c225  st   [$25]       4392  st([v6502_ADH])                 #25
              0ee5 111d  ld   [$1d],x     4393  ld([v6502_Tmp],X)               #26
              0ee6 0500  ld   [x]         4394  ld([X])                         #27
              0ee7 d224  st   [$24],x     4395  st([v6502_ADL],X)               #28
              0ee8 011a  ld   [$1a]       4396  ld([v6502_PCL])                 #29 PC++
              0ee9 8001  adda $01         4397  adda(1)                         #30
              0eea c21a  st   [$1a]       4398  st([v6502_PCL])                 #31
              0eeb f0ee  beq  $0eee       4399  beq(pc()+3)                     #32
              0eec fcef  bra  $0eef       4400  bra(pc()+3)                     #33
              0eed 0000  ld   $00         4401  ld(0)                           #34
              0eee 0001  ld   $01         4402  ld(1)                           #34(!)
              0eef 811b  adda [$1b]       4403  adda([v6502_PCH])               #35
              0ef0 c21b  st   [$1b]       4404  st([v6502_PCH])                 #36
              0ef1 00ed  ld   $ed         4405  ld(-38/2)                       #37 !!! Fall through to v6502_check !!!
                                          4406  #
                                          4407  # Update elapsed time for the addressing mode processing.
                                          4408  # Then check if we can immediately execute this instruction.
                                          4409  # Otherwise transfer control to the video driver.
                                          4410  label('v6502_check')
v6502_check:  0ef2 8115  adda [$15]       4411  adda([vTicks])                  #0
                                          4412  blt('v6502_exitAfter')          #1 No more ticks
              0ef3 e8f8  blt  v6502_exitAfter
              0ef4 c215  st   [$15]       4413  st([vTicks])                    #2
              0ef5 140f  ld   $0f,y       4414  ld(hi('v6502_execute'),Y)       #3
              0ef6 e126  jmp  y,[$26]     4415  jmp(Y,[v6502_IR])               #4
              0ef7 fcff  bra  $ff         4416  bra(255)                        #5
                                          4417
                                          4418  # Otherwise resync with video driver. At this point we're returning AFTER
                                          4419  # addressing mode decoding, but before executing the instruction.
                                          4420  label('v6502_exitAfter')
v6502_exitAfter:
              0ef8 8013  adda $13         4421  adda(v6502_maxTicks)            #3 Exit AFTER fetch
              0ef9 e4f9  bgt  $0ef9       4422  bgt(pc()&255)                   #4 Resync
              0efa a001  suba $01         4423  suba(1)                         #5
              0efb 0010  ld   $10         4424  ld(hi('v6502_RESUME'))          #6 Set entry point to before 'execute'
              0efc c202  st   [$02]       4425  st([vCpuSelect])                #7
              0efd 1401  ld   $01,y       4426  ld(hi('vBlankStart'),Y)         #8
              0efe e11e  jmp  y,[$1e]     4427  jmp(Y,[vReturn])                #9 To video driver
              0eff 0000  ld   $00         4428  ld(0)                           #10
                                          4429  assert v6502_overhead ==         11
                                          4430
                                          4431  align(0x100,size=0x100)
                                          4432  label('v6502_execute')
                                          4433  # This page works as a 255-entry (0..254) jump table for 6502 opcodes.
                                          4434  # Jumping into this page must have 'bra 255' in the branch delay slot
                                          4435  # in order to get out again and dispatch to the right continuation.
                                          4436  # X must hold [v6502_ADL],
                                          4437  # Y will hold hi('v6502_execute'),
                                          4438  # A will be loaded with the code offset (this is skipped at offset $ff)
v6502_execute:
              0f00 00fd  ld   $fd         4439  ld('v6502_BRK'); ld('v6502_ORA'); ld('v6502_ILL'); ld('v6502_ILL') #6 $00
              0f01 0089  ld   $89
              0f02 00fd  ld   $fd
              0f03 00fd  ld   $fd
              0f04 00fd  ld   $fd         4440  ld('v6502_ILL'); ld('v6502_ORA'); ld('v6502_ASL'); ld('v6502_ILL') #6
              0f05 0089  ld   $89
              0f06 00f1  ld   $f1
              0f07 00fd  ld   $fd
              0f08 00f3  ld   $f3         4441  ld('v6502_PHP'); ld('v6502_ORA'); ld('v6502_ASL'); ld('v6502_ILL') #6
              0f09 0089  ld   $89
              0f0a 00f1  ld   $f1
              0f0b 00fd  ld   $fd
              0f0c 00fd  ld   $fd         4442  ld('v6502_ILL'); ld('v6502_ORA'); ld('v6502_ASL'); ld('v6502_ILL') #6
              0f0d 0089  ld   $89
              0f0e 00f1  ld   $f1
              0f0f 00fd  ld   $fd
              0f10 003f  ld   $3f         4443  ld('v6502_BPL'); ld('v6502_ORA'); ld('v6502_ILL'); ld('v6502_ILL') #6 $10
              0f11 0089  ld   $89
              0f12 00fd  ld   $fd
              0f13 00fd  ld   $fd
              0f14 00fd  ld   $fd         4444  ld('v6502_ILL'); ld('v6502_ORA'); ld('v6502_ASL'); ld('v6502_ILL') #6
              0f15 0089  ld   $89
              0f16 00f1  ld   $f1
              0f17 00fd  ld   $fd
              0f18 0036  ld   $36         4445  ld('v6502_CLC'); ld('v6502_ORA'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0f19 0089  ld   $89
              0f1a 00fd  ld   $fd
              0f1b 00fd  ld   $fd
              0f1c 00fd  ld   $fd         4446  ld('v6502_ILL'); ld('v6502_ORA'); ld('v6502_ASL'); ld('v6502_ILL') #6
              0f1d 0089  ld   $89
              0f1e 00f1  ld   $f1
              0f1f 00fd  ld   $fd
              0f20 009a  ld   $9a         4447  ld('v6502_JSR'); ld('v6502_AND'); ld('v6502_ILL'); ld('v6502_ILL') #6 $20
              0f21 0085  ld   $85
              0f22 00fd  ld   $fd
              0f23 00fd  ld   $fd
              0f24 00f5  ld   $f5         4448  ld('v6502_BIT'); ld('v6502_AND'); ld('v6502_ROL'); ld('v6502_ILL') #6
              0f25 0085  ld   $85
              0f26 00f7  ld   $f7
              0f27 00fd  ld   $fd
              0f28 00f9  ld   $f9         4449  ld('v6502_PLP'); ld('v6502_AND'); ld('v6502_ROL'); ld('v6502_ILL') #6
              0f29 0085  ld   $85
              0f2a 00f7  ld   $f7
              0f2b 00fd  ld   $fd
              0f2c 00f5  ld   $f5         4450  ld('v6502_BIT'); ld('v6502_AND'); ld('v6502_ROL'); ld('v6502_ILL') #6
              0f2d 0085  ld   $85
              0f2e 00f7  ld   $f7
              0f2f 00fd  ld   $fd
              0f30 0042  ld   $42         4451  ld('v6502_BMI'); ld('v6502_AND'); ld('v6502_ILL'); ld('v6502_ILL') #6 $30
              0f31 0085  ld   $85
              0f32 00fd  ld   $fd
              0f33 00fd  ld   $fd
              0f34 00fd  ld   $fd         4452  ld('v6502_ILL'); ld('v6502_AND'); ld('v6502_ROL'); ld('v6502_ILL') #6
              0f35 0085  ld   $85
              0f36 00f7  ld   $f7
              0f37 00fd  ld   $fd
              0f38 0038  ld   $38         4453  ld('v6502_SEC'); ld('v6502_AND'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0f39 0085  ld   $85
              0f3a 00fd  ld   $fd
              0f3b 00fd  ld   $fd
              0f3c 00fd  ld   $fd         4454  ld('v6502_ILL'); ld('v6502_AND'); ld('v6502_ROL'); ld('v6502_ILL') #6
              0f3d 0085  ld   $85
              0f3e 00f7  ld   $f7
              0f3f 00fd  ld   $fd
              0f40 00d3  ld   $d3         4455  ld('v6502_RTI'); ld('v6502_EOR'); ld('v6502_ILL'); ld('v6502_ILL') #6 $40
              0f41 008c  ld   $8c
              0f42 00fd  ld   $fd
              0f43 00fd  ld   $fd
              0f44 00fd  ld   $fd         4456  ld('v6502_ILL'); ld('v6502_EOR'); ld('v6502_LSR'); ld('v6502_ILL') #6
              0f45 008c  ld   $8c
              0f46 00d7  ld   $d7
              0f47 00fd  ld   $fd
              0f48 00d9  ld   $d9         4457  ld('v6502_PHA'); ld('v6502_EOR'); ld('v6502_LSR'); ld('v6502_ILL') #6
              0f49 008c  ld   $8c
              0f4a 00d7  ld   $d7
              0f4b 00fd  ld   $fd
              0f4c 0096  ld   $96         4458  ld('v6502_JMP1');ld('v6502_EOR'); ld('v6502_LSR'); ld('v6502_ILL') #6
              0f4d 008c  ld   $8c
              0f4e 00d7  ld   $d7
              0f4f 00fd  ld   $fd
              0f50 0045  ld   $45         4459  ld('v6502_BVC'); ld('v6502_EOR'); ld('v6502_ILL'); ld('v6502_ILL') #6 $50
              0f51 008c  ld   $8c
              0f52 00fd  ld   $fd
              0f53 00fd  ld   $fd
              0f54 00fd  ld   $fd         4460  ld('v6502_ILL'); ld('v6502_EOR'); ld('v6502_LSR'); ld('v6502_ILL') #6
              0f55 008c  ld   $8c
              0f56 00d7  ld   $d7
              0f57 00fd  ld   $fd
              0f58 00db  ld   $db         4461  ld('v6502_CLI'); ld('v6502_EOR'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0f59 008c  ld   $8c
              0f5a 00fd  ld   $fd
              0f5b 00fd  ld   $fd
              0f5c 00fd  ld   $fd         4462  ld('v6502_ILL'); ld('v6502_EOR'); ld('v6502_LSR'); ld('v6502_ILL') #6
              0f5d 008c  ld   $8c
              0f5e 00d7  ld   $d7
              0f5f 00fd  ld   $fd
              0f60 00dd  ld   $dd         4463  ld('v6502_RTS'); ld('v6502_ADC'); ld('v6502_ILL'); ld('v6502_ILL') #6 $60
              0f61 0001  ld   $01
              0f62 00fd  ld   $fd
              0f63 00fd  ld   $fd
              0f64 00fd  ld   $fd         4464  ld('v6502_ILL'); ld('v6502_ADC'); ld('v6502_ROR'); ld('v6502_ILL') #6
              0f65 0001  ld   $01
              0f66 00d5  ld   $d5
              0f67 00fd  ld   $fd
              0f68 00df  ld   $df         4465  ld('v6502_PLA'); ld('v6502_ADC'); ld('v6502_ROR'); ld('v6502_ILL') #6
              0f69 0001  ld   $01
              0f6a 00d5  ld   $d5
              0f6b 00fd  ld   $fd
              0f6c 0098  ld   $98         4466  ld('v6502_JMP2');ld('v6502_ADC'); ld('v6502_ROR'); ld('v6502_ILL') #6
              0f6d 0001  ld   $01
              0f6e 00d5  ld   $d5
              0f6f 00fd  ld   $fd
              0f70 0049  ld   $49         4467  ld('v6502_BVS'); ld('v6502_ADC'); ld('v6502_ILL'); ld('v6502_ILL') #6 $70
              0f71 0001  ld   $01
              0f72 00fd  ld   $fd
              0f73 00fd  ld   $fd
              0f74 00fd  ld   $fd         4468  ld('v6502_ILL'); ld('v6502_ADC'); ld('v6502_ROR'); ld('v6502_ILL') #6
              0f75 0001  ld   $01
              0f76 00d5  ld   $d5
              0f77 00fd  ld   $fd
              0f78 00e1  ld   $e1         4469  ld('v6502_SEI'); ld('v6502_ADC'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0f79 0001  ld   $01
              0f7a 00fd  ld   $fd
              0f7b 00fd  ld   $fd
              0f7c 00fd  ld   $fd         4470  ld('v6502_ILL'); ld('v6502_ADC'); ld('v6502_ROR'); ld('v6502_ILL') #6
              0f7d 0001  ld   $01
              0f7e 00d5  ld   $d5
              0f7f 00fd  ld   $fd
              0f80 00fd  ld   $fd         4471  ld('v6502_ILL'); ld('v6502_STA'); ld('v6502_ILL'); ld('v6502_ILL') #6 $80
              0f81 00c1  ld   $c1
              0f82 00fd  ld   $fd
              0f83 00fd  ld   $fd
              0f84 00c7  ld   $c7         4472  ld('v6502_STY'); ld('v6502_STA'); ld('v6502_STX'); ld('v6502_ILL') #6
              0f85 00c1  ld   $c1
              0f86 00c3  ld   $c3
              0f87 00fd  ld   $fd
              0f88 007f  ld   $7f         4473  ld('v6502_DEY'); ld('v6502_ILL'); ld('v6502_TXA'); ld('v6502_ILL') #6
              0f89 00fd  ld   $fd
              0f8a 00cd  ld   $cd
              0f8b 00fd  ld   $fd
              0f8c 00c7  ld   $c7         4474  ld('v6502_STY'); ld('v6502_STA'); ld('v6502_STX'); ld('v6502_ILL') #6
              0f8d 00c1  ld   $c1
              0f8e 00c3  ld   $c3
              0f8f 00fd  ld   $fd
              0f90 004d  ld   $4d         4475  ld('v6502_BCC'); ld('v6502_STA'); ld('v6502_ILL'); ld('v6502_ILL') #6 $90
              0f91 00c1  ld   $c1
              0f92 00fd  ld   $fd
              0f93 00fd  ld   $fd
              0f94 00c7  ld   $c7         4476  ld('v6502_STY'); ld('v6502_STA'); ld('v6502_STX2');ld('v6502_ILL') #6
              0f95 00c1  ld   $c1
              0f96 00c5  ld   $c5
              0f97 00fd  ld   $fd
              0f98 00cf  ld   $cf         4477  ld('v6502_TYA'); ld('v6502_STA'); ld('v6502_TXS'); ld('v6502_ILL') #6
              0f99 00c1  ld   $c1
              0f9a 00e3  ld   $e3
              0f9b 00fd  ld   $fd
              0f9c 00fd  ld   $fd         4478  ld('v6502_ILL'); ld('v6502_STA'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0f9d 00c1  ld   $c1
              0f9e 00fd  ld   $fd
              0f9f 00fd  ld   $fd
              0fa0 00bf  ld   $bf         4479  ld('v6502_LDY'); ld('v6502_LDA'); ld('v6502_LDX'); ld('v6502_ILL') #6 $A0
              0fa1 00b9  ld   $b9
              0fa2 00bb  ld   $bb
              0fa3 00fd  ld   $fd
              0fa4 00bf  ld   $bf         4480  ld('v6502_LDY'); ld('v6502_LDA'); ld('v6502_LDX'); ld('v6502_ILL') #6
              0fa5 00b9  ld   $b9
              0fa6 00bb  ld   $bb
              0fa7 00fd  ld   $fd
              0fa8 00cb  ld   $cb         4481  ld('v6502_TAY'); ld('v6502_LDA'); ld('v6502_TAX'); ld('v6502_ILL') #6
              0fa9 00b9  ld   $b9
              0faa 00c9  ld   $c9
              0fab 00fd  ld   $fd
              0fac 00bf  ld   $bf         4482  ld('v6502_LDY'); ld('v6502_LDA'); ld('v6502_LDX'); ld('v6502_ILL') #6
              0fad 00b9  ld   $b9
              0fae 00bb  ld   $bb
              0faf 00fd  ld   $fd
              0fb0 0051  ld   $51         4483  ld('v6502_BCS'); ld('v6502_LDA'); ld('v6502_ILL'); ld('v6502_ILL') #6 $B0
              0fb1 00b9  ld   $b9
              0fb2 00fd  ld   $fd
              0fb3 00fd  ld   $fd
              0fb4 00bf  ld   $bf         4484  ld('v6502_LDY'); ld('v6502_LDA'); ld('v6502_LDX2');ld('v6502_ILL') #6
              0fb5 00b9  ld   $b9
              0fb6 00bd  ld   $bd
              0fb7 00fd  ld   $fd
              0fb8 00d1  ld   $d1         4485  ld('v6502_CLV'); ld('v6502_LDA'); ld('v6502_TSX'); ld('v6502_ILL') #6
              0fb9 00b9  ld   $b9
              0fba 00e5  ld   $e5
              0fbb 00fd  ld   $fd
              0fbc 00bf  ld   $bf         4486  ld('v6502_LDY'); ld('v6502_LDA'); ld('v6502_LDX'); ld('v6502_ILL') #6
              0fbd 00b9  ld   $b9
              0fbe 00bb  ld   $bb
              0fbf 00fd  ld   $fd
              0fc0 00e7  ld   $e7         4487  ld('v6502_CPY'); ld('v6502_CMP'); ld('v6502_ILL'); ld('v6502_ILL') #6 $C0
              0fc1 00e9  ld   $e9
              0fc2 00fd  ld   $fd
              0fc3 00fd  ld   $fd
              0fc4 00e7  ld   $e7         4488  ld('v6502_CPY'); ld('v6502_CMP'); ld('v6502_DEC'); ld('v6502_ILL') #6
              0fc5 00e9  ld   $e9
              0fc6 00eb  ld   $eb
              0fc7 00fd  ld   $fd
              0fc8 007b  ld   $7b         4489  ld('v6502_INY'); ld('v6502_CMP'); ld('v6502_DEX'); ld('v6502_ILL') #6
              0fc9 00e9  ld   $e9
              0fca 0077  ld   $77
              0fcb 00fd  ld   $fd
              0fcc 00e7  ld   $e7         4490  ld('v6502_CPY'); ld('v6502_CMP'); ld('v6502_DEC'); ld('v6502_ILL') #6
              0fcd 00e9  ld   $e9
              0fce 00eb  ld   $eb
              0fcf 00fd  ld   $fd
              0fd0 0055  ld   $55         4491  ld('v6502_BNE'); ld('v6502_CMP'); ld('v6502_ILL'); ld('v6502_ILL') #6 $D0
              0fd1 00e9  ld   $e9
              0fd2 00fd  ld   $fd
              0fd3 00fd  ld   $fd
              0fd4 00fd  ld   $fd         4492  ld('v6502_ILL'); ld('v6502_CMP'); ld('v6502_DEC'); ld('v6502_ILL') #6
              0fd5 00e9  ld   $e9
              0fd6 00eb  ld   $eb
              0fd7 00fd  ld   $fd
              0fd8 00ed  ld   $ed         4493  ld('v6502_CLD'); ld('v6502_CMP'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0fd9 00e9  ld   $e9
              0fda 00fd  ld   $fd
              0fdb 00fd  ld   $fd
              0fdc 00fd  ld   $fd         4494  ld('v6502_ILL'); ld('v6502_CMP'); ld('v6502_DEC'); ld('v6502_ILL') #6
              0fdd 00e9  ld   $e9
              0fde 00eb  ld   $eb
              0fdf 00fd  ld   $fd
              0fe0 00ef  ld   $ef         4495  ld('v6502_CPX'); ld('v6502_SBC'); ld('v6502_ILL'); ld('v6502_ILL') #6 $E0
              0fe1 0029  ld   $29
              0fe2 00fd  ld   $fd
              0fe3 00fd  ld   $fd
              0fe4 00ef  ld   $ef         4496  ld('v6502_CPX'); ld('v6502_SBC'); ld('v6502_INC'); ld('v6502_ILL') #6
              0fe5 0029  ld   $29
              0fe6 00b7  ld   $b7
              0fe7 00fd  ld   $fd
              0fe8 006c  ld   $6c         4497  ld('v6502_INX'); ld('v6502_SBC'); ld('v6502_NOP'); ld('v6502_ILL') #6
              0fe9 0029  ld   $29
              0fea 0083  ld   $83
              0feb 00fd  ld   $fd
              0fec 00ef  ld   $ef         4498  ld('v6502_CPX'); ld('v6502_SBC'); ld('v6502_INC'); ld('v6502_ILL') #6
              0fed 0029  ld   $29
              0fee 00b7  ld   $b7
              0fef 00fd  ld   $fd
              0ff0 0058  ld   $58         4499  ld('v6502_BEQ'); ld('v6502_SBC'); ld('v6502_ILL'); ld('v6502_ILL') #6 $F0
              0ff1 0029  ld   $29
              0ff2 00fd  ld   $fd
              0ff3 00fd  ld   $fd
              0ff4 00fd  ld   $fd         4500  ld('v6502_ILL'); ld('v6502_SBC'); ld('v6502_INC'); ld('v6502_ILL') #6
              0ff5 0029  ld   $29
              0ff6 00b7  ld   $b7
              0ff7 00fd  ld   $fd
              0ff8 00fb  ld   $fb         4501  ld('v6502_SED'); ld('v6502_SBC'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0ff9 0029  ld   $29
              0ffa 00fd  ld   $fd
              0ffb 00fd  ld   $fd
              0ffc 00fd  ld   $fd         4502  ld('v6502_ILL'); ld('v6502_SBC'); ld('v6502_INC')                  #6
              0ffd 0029  ld   $29
              0ffe 00b7  ld   $b7
              0fff fe00  bra  ac          4503  bra(AC)                         #6,7 Dispatch into next page
                                          4504  # --- Page boundary ---
                                          4505  align(0x100,size=0x100)
              1000 140e  ld   $0e,y       4506  ld(hi('v6502_next'),Y)          #8 Handy for instructions that don't clobber Y
                                          4507
                                          4508  label('v6502_ADC')
                                          4509  assert pc()&255 == 1
                                          4510  assert v6502_Cflag == 1
                                          4511  assert v6502_Vemu == 128
v6502_ADC:    1001 1525  ld   [$25],y     4512  ld([v6502_ADH],Y)               #9 Must be at page offset 1, so A=1
              1002 2127  anda [$27]       4513  anda([v6502_P])                 #10 Carry in (AC=1 because lo('v6502_ADC')=1)
              1003 8118  adda [$18]       4514  adda([v6502_A])                 #11 Sum
              1004 f020  beq  .adc14      4515  beq('.adc14')                   #12 Danger zone for dropping a carry
              1005 8d00  adda [y,x]       4516  adda([Y,X])                     #13
              1006 c228  st   [$28]       4517  st([v6502_Qz])                  #14 Z flag, don't overwrite left-hand side (A) yet
              1007 c229  st   [$29]       4518  st([v6502_Qn])                  #15 N flag
              1008 6118  xora [$18]       4519  xora([v6502_A])                 #16 V flag, (Q^A) & (B^Q) & 0x80
              1009 c218  st   [$18]       4520  st([v6502_A])                   #17
              100a 0d00  ld   [y,x]       4521  ld([Y,X])                       #18
              100b 6128  xora [$28]       4522  xora([v6502_Qz])                #19
              100c 2118  anda [$18]       4523  anda([v6502_A])                 #20
              100d 2080  anda $80         4524  anda(0x80)                      #21
              100e c21d  st   [$1d]       4525  st([v6502_Tmp])                 #22
              100f 0128  ld   [$28]       4526  ld([v6502_Qz])                  #23 Update A
              1010 c218  st   [$18]       4527  st([v6502_A])                   #24
              1011 e815  blt  .adc27      4528  bmi('.adc27')                   #25 C flag
              1012 ad00  suba [y,x]       4529  suba([Y,X])                     #26
              1013 fc17  bra  .adc29      4530  bra('.adc29')                   #27
              1014 4d00  ora  [y,x]       4531  ora([Y,X])                      #28
                                          4532  label('.adc27')
.adc27:       1015 2d00  anda [y,x]       4533  anda([Y,X])                     #27
              1016 0200  nop              4534  nop()                           #28
                                          4535  label('.adc29')
.adc29:       1017 3080  anda $80,x       4536  anda(0x80,X)                    #29
              1018 0127  ld   [$27]       4537  ld([v6502_P])                   #30 Update P
              1019 207e  anda $7e         4538  anda(~v6502_Vemu&~v6502_Cflag)  #31
              101a 4500  ora  [x]         4539  ora([X])                        #32
              101b 411d  ora  [$1d]       4540  ora([v6502_Tmp])                #33
              101c c227  st   [$27]       4541  st([v6502_P])                   #34
              101d 140e  ld   $0e,y       4542  ld(hi('v6502_next'),Y)          #35
              101e e020  jmp  y,$20       4543  jmp(Y,'v6502_next')             #36
              101f 00ed  ld   $ed         4544  ld(-38/2)                       #37
                                          4545  # Cin=1, A=$FF, B=$DD --> Result=$DD, Cout=1, V=0
                                          4546  # Cin=0, A=$00, B=$DD --> Result=$DD, Cout=0, V=0
                                          4547  label('.adc14')
.adc14:       1020 c218  st   [$18]       4548  st([v6502_A])                   #14 Special case
              1021 c228  st   [$28]       4549  st([v6502_Qz])                  #15 Z flag
              1022 c229  st   [$29]       4550  st([v6502_Qn])                  #16 N flag
              1023 0127  ld   [$27]       4551  ld([v6502_P])                   #17
              1024 207f  anda $7f         4552  anda(0x7f)                      #18 V=0, keep C
              1025 c227  st   [$27]       4553  st([v6502_P])                   #19
              1026 140e  ld   $0e,y       4554  ld(hi('v6502_next'),Y)          #20
              1027 00f4  ld   $f4         4555  ld(-24/2)                       #21
              1028 e020  jmp  y,$20       4556  jmp(Y,'v6502_next')             #22
                                          4557  #nop()                          #23 Overlap
                                          4558  #
                                          4559  label('v6502_SBC')
                                          4560  # No matter how hard we try, v6502_SBC always comes out a lot clumsier
                                          4561  # than v6502_ADC. And that one already barely fits in 38 cycles and is
                                          4562  # hard to follow. So we use a hack: transmorph our SBC into an ADC with
                                          4563  # inverted operand, and then dispatch again. Simple and effective.
v6502_SBC:    1029 1525  ld   [$25],y     4564  ld([v6502_ADH],Y)               #9,24
              102a 0d00  ld   [y,x]       4565  ld([Y,X])                       #10
              102b 60ff  xora $ff         4566  xora(255)                       #11 Invert right-hand side operand
              102c c219  st   [$19]       4567  st([v6502_BI])                  #12 Park modified operand for v6502_ADC
              102d 0019  ld   $19         4568  ld(v6502_BI&255)                #13 Address of BI
              102e d224  st   [$24],x     4569  st([v6502_ADL],X)               #14
              102f 0000  ld   $00         4570  ld(v6502_BI>>8)                 #15
              1030 c225  st   [$25]       4571  st([v6502_ADH])                 #16
              1031 0069  ld   $69         4572  ld(0x69)                        #17 ADC #$xx (Any ADC opcode will do)
              1032 c226  st   [$26]       4573  st([v6502_IR])                  #18
              1033 140e  ld   $0e,y       4574  ld(hi('v6502_check'),Y)         #20 Go back to time check before dispatch
              1034 e0f2  jmp  y,$f2       4575  jmp(Y,'v6502_check')            #20
              1035 00f5  ld   $f5         4576  ld(-22/2)                       #21
                                          4577
                                          4578  # Carry calculation table
                                          4579  #   L7 R7 C7   RX UC SC
                                          4580  #   -- -- -- | -- -- --
                                          4581  #    0  0  0 |  0  0  0
                                          4582  #    0  0  1 |  0  0  0
                                          4583  #    1  0  0 |  0  1 +1
                                          4584  #    1  0  1 |  0  0  0
                                          4585  #    0  1  0 | -1  1  0
                                          4586  #    0  1  1 | -1  0 -1
                                          4587  #    1  1  0 | -1  1  0
                                          4588  #    1  1  1 | -1  1  0
                                          4589  #   -- -- -- | -- -- --
                                          4590  #    ^  ^  ^    ^  ^  ^
                                          4591  #    |  |  |    |  |  `--- Carry of unsigned L + signed R: SC = RX + UC
                                          4592  #    |  |  |    |  `----- Carry of unsigned L + unsigned R: UC = C7 ? L7&R7 : L7|R7
                                          4593  #    |  |  |    `------- Sign extension of signed R
                                          4594  #    |  |  `--------- MSB of unextended L + R
                                          4595  #    |  `----------- MSB of right operand R
                                          4596  #    `------------- MSB of left operand L
                                          4597
                                          4598  label('v6502_CLC')
v6502_CLC:    1036 0127  ld   [$27]       4599  ld([v6502_P])                   #9
              1037 fc3b  bra  .sec12      4600  bra('.sec12')                   #10
                                          4601  label('v6502_SEC')
v6502_SEC:    1038 20fe  anda $fe         4602  anda(~v6502_Cflag)              #9,11 Overlap
              1039 0127  ld   [$27]       4603  ld([v6502_P])                   #10
              103a 4001  ora  $01         4604  ora(v6502_Cflag)                #11
                                          4605  label('.sec12')
.sec12:       103b c227  st   [$27]       4606  st([v6502_P])                   #12
              103c 0200  nop              4607  nop()                           #13
                                          4608  label('.next14')
.next14:      103d e020  jmp  y,$20       4609  jmp(Y,'v6502_next')             #14
              103e 00f8  ld   $f8         4610  ld(-16/2)                       #15
                                          4611
                                          4612  label('v6502_BPL')
v6502_BPL:    103f 0129  ld   [$29]       4613  ld([v6502_Qn])                  #9
              1040 e875  blt  .next12     4614  bmi('.next12')                  #10
              1041 f45b  bge  .branch13   4615  bpl('.branch13')                #11
                                          4616  #nop()                          #12 Overlap
                                          4617  label('v6502_BMI')
v6502_BMI:    1042 0129  ld   [$29]       4618  ld([v6502_Qn])                  #9,12
              1043 f475  bge  .next12     4619  bpl('.next12')                  #10
              1044 e85b  blt  .branch13   4620  bmi('.branch13')                #11
                                          4621  #nop()                          #12 Overlap
                                          4622  label('v6502_BVC')
v6502_BVC:    1045 0127  ld   [$27]       4623  ld([v6502_P])                   #9,12
              1046 2080  anda $80         4624  anda(v6502_Vemu)                #10
              1047 f05b  beq  .branch13   4625  beq('.branch13')                #11
              1048 ec3d  bne  .next14     4626  bne('.next14')                  #12
                                          4627  #nop()                          #13 Overlap
                                          4628  label('v6502_BVS')
v6502_BVS:    1049 0127  ld   [$27]       4629  ld([v6502_P])                   #9,13
              104a 2080  anda $80         4630  anda(v6502_Vemu)                #10
              104b ec5b  bne  .branch13   4631  bne('.branch13')                #11
              104c f03d  beq  .next14     4632  beq('.next14')                  #12
                                          4633  #nop()                          #13 Overlap
                                          4634  label('v6502_BCC')
v6502_BCC:    104d 0127  ld   [$27]       4635  ld([v6502_P])                   #9,13
              104e 2001  anda $01         4636  anda(v6502_Cflag)               #10
              104f f05b  beq  .branch13   4637  beq('.branch13')                #11
              1050 ec3d  bne  .next14     4638  bne('.next14')                  #12
                                          4639  #nop()                          #13 Overlap
                                          4640  label('v6502_BCS')
v6502_BCS:    1051 0127  ld   [$27]       4641  ld([v6502_P])                   #9,13
              1052 2001  anda $01         4642  anda(v6502_Cflag)               #10
              1053 ec5b  bne  .branch13   4643  bne('.branch13')                #11
              1054 f03d  beq  .next14     4644  beq('.next14')                  #12
                                          4645  #nop()                          #13 Overlap
                                          4646  label('v6502_BNE')
v6502_BNE:    1055 0128  ld   [$28]       4647  ld([v6502_Qz])                  #9,13
              1056 f075  beq  .next12     4648  beq('.next12')                  #10
              1057 ec5b  bne  .branch13   4649  bne('.branch13')                #11
                                          4650  #nop()                          #12 Overlap
                                          4651  label('v6502_BEQ')
v6502_BEQ:    1058 0128  ld   [$28]       4652  ld([v6502_Qz])                  #9,12
              1059 ec75  bne  .next12     4653  bne('.next12')                  #10
              105a f05b  beq  .branch13   4654  beq('.branch13')                #11
                                          4655  #nop()                          #12 Overlap
                                          4656  label('.branch13')
.branch13:    105b 0124  ld   [$24]       4657  ld([v6502_ADL])                 #13,12 PC + offset
              105c 811a  adda [$1a]       4658  adda([v6502_PCL])               #14
              105d c21a  st   [$1a]       4659  st([v6502_PCL])                 #15
              105e e862  blt  .bra0       4660  bmi('.bra0')                    #16 Carry
              105f a124  suba [$24]       4661  suba([v6502_ADL])               #17
              1060 fc64  bra  .bra1       4662  bra('.bra1')                    #18
              1061 4124  ora  [$24]       4663  ora([v6502_ADL])                #19
                                          4664  label('.bra0')
.bra0:        1062 2124  anda [$24]       4665  anda([v6502_ADL])               #18
              1063 0200  nop              4666  nop()                           #19
                                          4667  label('.bra1')
.bra1:        1064 3080  anda $80,x       4668  anda(0x80,X)                    #20
              1065 0500  ld   [x]         4669  ld([X])                         #21
              1066 8125  adda [$25]       4670  adda([v6502_ADH])               #22
              1067 811b  adda [$1b]       4671  adda([v6502_PCH])               #23
              1068 c21b  st   [$1b]       4672  st([v6502_PCH])                 #24
              1069 0200  nop              4673  nop()                           #25
              106a e020  jmp  y,$20       4674  jmp(Y,'v6502_next')             #26
              106b 00f2  ld   $f2         4675  ld(-28/2)                       #27
                                          4676
                                          4677  label('v6502_INX')
v6502_INX:    106c 0200  nop              4678  nop()                           #9
              106d 012a  ld   [$2a]       4679  ld([v6502_X])                   #10
              106e 8001  adda $01         4680  adda(1)                         #11
              106f c22a  st   [$2a]       4681  st([v6502_X])                   #12
                                          4682  label('.inx13')
.inx13:       1070 c228  st   [$28]       4683  st([v6502_Qz])                  #13 Z flag
              1071 c229  st   [$29]       4684  st([v6502_Qn])                  #14 N flag
              1072 00f7  ld   $f7         4685  ld(-18/2)                       #15
              1073 e020  jmp  y,$20       4686  jmp(Y,'v6502_next')             #16
              1074 0200  nop              4687  nop()                           #17
                                          4688
                                          4689  label('.next12')
.next12:      1075 e020  jmp  y,$20       4690  jmp(Y,'v6502_next')             #12
              1076 00f9  ld   $f9         4691  ld(-14/2)                       #13
                                          4692
                                          4693  label('v6502_DEX')
v6502_DEX:    1077 012a  ld   [$2a]       4694  ld([v6502_X])                   #9
              1078 a001  suba $01         4695  suba(1)                         #10
              1079 fc70  bra  .inx13      4696  bra('.inx13')                   #11
              107a c22a  st   [$2a]       4697  st([v6502_X])                   #12
                                          4698
                                          4699  label('v6502_INY')
v6502_INY:    107b 012b  ld   [$2b]       4700  ld([v6502_Y])                   #9
              107c 8001  adda $01         4701  adda(1)                         #10
              107d fc70  bra  .inx13      4702  bra('.inx13')                   #11
              107e c22b  st   [$2b]       4703  st([v6502_Y])                   #12
                                          4704
                                          4705  label('v6502_DEY')
v6502_DEY:    107f 012b  ld   [$2b]       4706  ld([v6502_Y])                   #9
              1080 a001  suba $01         4707  suba(1)                         #10
              1081 fc70  bra  .inx13      4708  bra('.inx13')                   #11
              1082 c22b  st   [$2b]       4709  st([v6502_Y])                   #12
                                          4710
                                          4711  label('v6502_NOP')
v6502_NOP:    1083 00fa  ld   $fa         4712  ld(-12/2)                       #9
              1084 e020  jmp  y,$20       4713  jmp(Y,'v6502_next')             #10
                                          4714  #nop()                          #11 Overlap
                                          4715  #
                                          4716  label('v6502_AND')
v6502_AND:    1085 1525  ld   [$25],y     4717  ld([v6502_ADH],Y)               #9,11
              1086 0118  ld   [$18]       4718  ld([v6502_A])                   #10
              1087 fc90  bra  .eor13      4719  bra('.eor13')                   #11
              1088 2d00  anda [y,x]       4720  anda([Y,X])                     #12
                                          4721
                                          4722  label('v6502_ORA')
v6502_ORA:    1089 1525  ld   [$25],y     4723  ld([v6502_ADH],Y)               #9
              108a 0118  ld   [$18]       4724  ld([v6502_A])                   #10
              108b fc90  bra  .eor13      4725  bra('.eor13')                   #11
                                          4726  label('v6502_EOR')
v6502_EOR:    108c 4d00  ora  [y,x]       4727  ora([Y,X])                      #12,9
                                          4728  #
                                          4729  #label('v6502_EOR')
                                          4730  #nop()                          #9 Overlap
              108d 1525  ld   [$25],y     4731  ld([v6502_ADH],Y)               #10
              108e 0118  ld   [$18]       4732  ld([v6502_A])                   #11
              108f 6d00  xora [y,x]       4733  xora([Y,X])                     #12
                                          4734  label('.eor13')
.eor13:       1090 c218  st   [$18]       4735  st([v6502_A])                   #13
              1091 c228  st   [$28]       4736  st([v6502_Qz])                  #14 Z flag
              1092 c229  st   [$29]       4737  st([v6502_Qn])                  #15 N flag
              1093 140e  ld   $0e,y       4738  ld(hi('v6502_next'),Y)          #16
              1094 00f6  ld   $f6         4739  ld(-20/2)                       #17
              1095 e020  jmp  y,$20       4740  jmp(Y,'v6502_next')             #18
                                          4741  #nop()                          #19 Overlap
                                          4742  #
                                          4743  label('v6502_JMP1')
v6502_JMP1:   1096 140d  ld   $0d,y       4744  ld(hi('v6502_jmp1'),Y)          #9,19 JMP $DDDD
              1097 e0c5  jmp  y,$c5       4745  jmp(Y,'v6502_jmp1')             #10
                                          4746  #nop()                          #11 Overlap
                                          4747  label('v6502_JMP2')
v6502_JMP2:   1098 140d  ld   $0d,y       4748  ld(hi('v6502_jmp2'),Y)          #9 JMP ($DDDD)
              1099 e0cd  jmp  y,$cd       4749  jmp(Y,'v6502_jmp2')             #10
                                          4750  #nop()                          #11 Overlap
                                          4751  label('v6502_JSR')
v6502_JSR:    109a 011c  ld   [$1c]       4752  ld([v6502_S])                   #9,11
              109b a002  suba $02         4753  suba(2)                         #10
              109c d21c  st   [$1c],x     4754  st([v6502_S],X)                 #11
              109d 1400  ld   $00,y       4755  ld(v6502_Stack>>8,Y)            #12
              109e 011b  ld   [$1b]       4756  ld([v6502_PCH])                 #13 Let ADL,ADH point to L operand
              109f c225  st   [$25]       4757  st([v6502_ADH])                 #14
              10a0 011a  ld   [$1a]       4758  ld([v6502_PCL])                 #15
              10a1 c224  st   [$24]       4759  st([v6502_ADL])                 #16
              10a2 8001  adda $01         4760  adda(1)                         #17 Push ++PC
              10a3 c21a  st   [$1a]       4761  st([v6502_PCL])                 #18 Let PCL,PCH point to H operand
              10a4 de00  st   [y,x++]     4762  st([Y,Xpp])                     #19
              10a5 f0a8  beq  $10a8       4763  beq(pc()+3)                     #20
              10a6 fca9  bra  $10a9       4764  bra(pc()+3)                     #21
              10a7 0000  ld   $00         4765  ld(0)                           #22
              10a8 0001  ld   $01         4766  ld(1)                           #22(!)
              10a9 811b  adda [$1b]       4767  adda([v6502_PCH])               #23
              10aa c21b  st   [$1b]       4768  st([v6502_PCH])                 #24
              10ab ce00  st   [y,x]       4769  st([Y,X])                       #25
              10ac 1124  ld   [$24],x     4770  ld([v6502_ADL],X)               #26 Fetch L
              10ad 1525  ld   [$25],y     4771  ld([v6502_ADH],Y)               #27
              10ae 0d00  ld   [y,x]       4772  ld([Y,X])                       #28
              10af 111a  ld   [$1a],x     4773  ld([v6502_PCL],X)               #29 Fetch H
              10b0 c21a  st   [$1a]       4774  st([v6502_PCL])                 #30
              10b1 151b  ld   [$1b],y     4775  ld([v6502_PCH],Y)               #31
              10b2 0d00  ld   [y,x]       4776  ld([Y,X])                       #32
              10b3 c21b  st   [$1b]       4777  st([v6502_PCH])                 #33
              10b4 140e  ld   $0e,y       4778  ld(hi('v6502_next'),Y)          #34
              10b5 00ed  ld   $ed         4779  ld(-38/2)                       #35
              10b6 e020  jmp  y,$20       4780  jmp(Y,'v6502_next')             #36
                                          4781  #nop()                          #37 Overlap
                                          4782  #
                                          4783  label('v6502_INC')
v6502_INC:    10b7 1411  ld   $11,y       4784  ld(hi('v6502_inc'),Y)           #9,37
              10b8 e00e  jmp  y,$0e       4785  jmp(Y,'v6502_inc')              #10
                                          4786  #nop()                          #11 Overlap
                                          4787  label('v6502_LDA')
v6502_LDA:    10b9 1411  ld   $11,y       4788  ld(hi('v6502_lda'),Y)           #9,11
              10ba e018  jmp  y,$18       4789  jmp(Y,'v6502_lda')              #10
                                          4790  #nop()                          #11 Overlap
                                          4791  label('v6502_LDX')
v6502_LDX:    10bb 1411  ld   $11,y       4792  ld(hi('v6502_ldx'),Y)           #9,11
              10bc e022  jmp  y,$22       4793  jmp(Y,'v6502_ldx')              #10
                                          4794  #nop()                          #11 Overlap
                                          4795  label('v6502_LDX2')
v6502_LDX2:   10bd 1411  ld   $11,y       4796  ld(hi('v6502_ldx2'),Y)          #9,11
              10be e02a  jmp  y,$2a       4797  jmp(Y,'v6502_ldx2')             #10
                                          4798  #nop()                          #11 Overlap
                                          4799  label('v6502_LDY')
v6502_LDY:    10bf 1411  ld   $11,y       4800  ld(hi('v6502_ldy'),Y)           #9,11
              10c0 e026  jmp  y,$26       4801  jmp(Y,'v6502_ldy')              #10
                                          4802  #nop()                          #11 Overlap
                                          4803  label('v6502_STA')
v6502_STA:    10c1 1411  ld   $11,y       4804  ld(hi('v6502_sta'),Y)           #9,11
              10c2 e034  jmp  y,$34       4805  jmp(Y,'v6502_sta')              #10
                                          4806  #nop()                          #11 Overlap
                                          4807  label('v6502_STX')
v6502_STX:    10c3 1411  ld   $11,y       4808  ld(hi('v6502_stx'),Y)           #9,11
              10c4 e03a  jmp  y,$3a       4809  jmp(Y,'v6502_stx')              #10
                                          4810  #nop()                          #11 Overlap
                                          4811  label('v6502_STX2')
v6502_STX2:   10c5 1411  ld   $11,y       4812  ld(hi('v6502_stx2'),Y)          #9,11
              10c6 e040  jmp  y,$40       4813  jmp(Y,'v6502_stx2')             #10
                                          4814  #nop()                          #11 Overlap
                                          4815  label('v6502_STY')
v6502_STY:    10c7 1411  ld   $11,y       4816  ld(hi('v6502_sty'),Y)           #9,11
              10c8 e048  jmp  y,$48       4817  jmp(Y,'v6502_sty')              #10
                                          4818  #nop()                          #11 Overlap
                                          4819  label('v6502_TAX')
v6502_TAX:    10c9 1411  ld   $11,y       4820  ld(hi('v6502_tax'),Y)           #9,11
              10ca e04d  jmp  y,$4d       4821  jmp(Y,'v6502_tax')              #10
                                          4822  #nop()                          #11 Overlap
                                          4823  label('v6502_TAY')
v6502_TAY:    10cb 1411  ld   $11,y       4824  ld(hi('v6502_tay'),Y)           #9,11
              10cc e062  jmp  y,$62       4825  jmp(Y,'v6502_tay')              #10
                                          4826  #nop()                          #11 Overlap
                                          4827  label('v6502_TXA')
v6502_TXA:    10cd 1411  ld   $11,y       4828  ld(hi('v6502_txa'),Y)           #9,11
              10ce e065  jmp  y,$65       4829  jmp(Y,'v6502_txa')              #10
                                          4830  #nop()                          #11 Overlap
                                          4831  label('v6502_TYA')
v6502_TYA:    10cf 1411  ld   $11,y       4832  ld(hi('v6502_tya'),Y)           #9,11
              10d0 e068  jmp  y,$68       4833  jmp(Y,'v6502_tya')              #10
                                          4834  #nop()                          #11 Overlap
                                          4835  label('v6502_CLV')
v6502_CLV:    10d1 1411  ld   $11,y       4836  ld(hi('v6502_clv'),Y)           #9,11
              10d2 e076  jmp  y,$76       4837  jmp(Y,'v6502_clv')              #10
                                          4838  #nop()                          #11 Overlap
                                          4839  label('v6502_RTI')
v6502_RTI:    10d3 1411  ld   $11,y       4840  ld(hi('v6502_rti'),Y)           #9,11
              10d4 e0e4  jmp  y,$e4       4841  jmp(Y,'v6502_rti')              #10
                                          4842  #nop()                          #11 Overlap
                                          4843  label('v6502_ROR')
v6502_ROR:    10d5 140d  ld   $0d,y       4844  ld(hi('v6502_ror'),Y)           #9,11
              10d6 e083  jmp  y,$83       4845  jmp(Y,'v6502_ror')              #10
                                          4846  #nop()                          #11 Overlap
                                          4847  label('v6502_LSR')
v6502_LSR:    10d7 140d  ld   $0d,y       4848  ld(hi('v6502_lsr'),Y)           #9,11
              10d8 e09d  jmp  y,$9d       4849  jmp(Y,'v6502_lsr')              #10
                                          4850  #nop()                          #11 Overlap
                                          4851  label('v6502_PHA')
v6502_PHA:    10d9 140d  ld   $0d,y       4852  ld(hi('v6502_pha'),Y)           #9,11
              10da e0e2  jmp  y,$e2       4853  jmp(Y,'v6502_pha')              #10
                                          4854  #nop()                          #11 Overlap
                                          4855  label('v6502_CLI')
v6502_CLI:    10db 1411  ld   $11,y       4856  ld(hi('v6502_cli'),Y)           #9,11
              10dc e06b  jmp  y,$6b       4857  jmp(Y,'v6502_cli')              #10
                                          4858  #nop()                          #11 Overlap
                                          4859  label('v6502_RTS')
v6502_RTS:    10dd 1411  ld   $11,y       4860  ld(hi('v6502_rts'),Y)           #9,11
              10de e08f  jmp  y,$8f       4861  jmp(Y,'v6502_rts')              #10
                                          4862  #nop()                          #11 Overlap
                                          4863  label('v6502_PLA')
v6502_PLA:    10df 140d  ld   $0d,y       4864  ld(hi('v6502_pla'),Y)           #9,11
              10e0 e0d7  jmp  y,$d7       4865  jmp(Y,'v6502_pla')              #10
                                          4866  #nop()                          #11 Overlap
                                          4867  label('v6502_SEI')
v6502_SEI:    10e1 1411  ld   $11,y       4868  ld(hi('v6502_sei'),Y)           #9,11
              10e2 e06e  jmp  y,$6e       4869  jmp(Y,'v6502_sei')              #10
                                          4870  #nop()                          #11 Overlap
                                          4871  label('v6502_TXS')
v6502_TXS:    10e3 1411  ld   $11,y       4872  ld(hi('v6502_txs'),Y)           #9,11
              10e4 e05e  jmp  y,$5e       4873  jmp(Y,'v6502_txs')              #10
                                          4874  #nop()                          #11 Overlap
                                          4875  label('v6502_TSX')
v6502_TSX:    10e5 1411  ld   $11,y       4876  ld(hi('v6502_tsx'),Y)           #9,11
              10e6 e054  jmp  y,$54       4877  jmp(Y,'v6502_tsx')              #10
                                          4878  #nop()                          #11 Overlap
                                          4879  label('v6502_CPY')
v6502_CPY:    10e7 1411  ld   $11,y       4880  ld(hi('v6502_cpy'),Y)           #9,11
              10e8 e0bd  jmp  y,$bd       4881  jmp(Y,'v6502_cpy')              #10
                                          4882  #nop()                          #11 Overlap
                                          4883  label('v6502_CMP')
v6502_CMP:    10e9 1411  ld   $11,y       4884  ld(hi('v6502_cmp'),Y)           #9,11
              10ea e0be  jmp  y,$be       4885  jmp(Y,'v6502_cmp')              #10
                                          4886  #nop()                          #11 Overlap
                                          4887  label('v6502_DEC')
v6502_DEC:    10eb 1411  ld   $11,y       4888  ld(hi('v6502_dec'),Y)           #9,11
              10ec e005  jmp  y,$05       4889  jmp(Y,'v6502_dec')              #10
                                          4890  #nop()                          #11 Overlap
                                          4891  label('v6502_CLD')
v6502_CLD:    10ed 1411  ld   $11,y       4892  ld(hi('v6502_cld'),Y)           #9,11
              10ee e071  jmp  y,$71       4893  jmp(Y,'v6502_cld')              #10
                                          4894  #nop()                          #11 Overlap
                                          4895  label('v6502_CPX')
v6502_CPX:    10ef 1411  ld   $11,y       4896  ld(hi('v6502_cpx'),Y)           #9,11
              10f0 e0bb  jmp  y,$bb       4897  jmp(Y,'v6502_cpx')              #10
                                          4898  #nop()                          #11 Overlap
                                          4899  label('v6502_ASL')
v6502_ASL:    10f1 140d  ld   $0d,y       4900  ld(hi('v6502_asl'),Y)           #9,11
              10f2 e0bf  jmp  y,$bf       4901  jmp(Y,'v6502_asl')              #10
                                          4902  #nop()                          #11 Overlap
                                          4903  label('v6502_PHP')
v6502_PHP:    10f3 1411  ld   $11,y       4904  ld(hi('v6502_php'),Y)           #9,11
              10f4 e0a2  jmp  y,$a2       4905  jmp(Y,'v6502_php')              #10
                                          4906  #nop()                          #11 Overlap
                                          4907  label('v6502_BIT')
v6502_BIT:    10f5 1411  ld   $11,y       4908  ld(hi('v6502_bit'),Y)           #9
              10f6 e07d  jmp  y,$7d       4909  jmp(Y,'v6502_bit')              #10
                                          4910  #nop()                          #11 Overlap
                                          4911  label('v6502_ROL')
v6502_ROL:    10f7 140d  ld   $0d,y       4912  ld(hi('v6502_rol'),Y)           #9
              10f8 e0ac  jmp  y,$ac       4913  jmp(Y,'v6502_rol')              #10
                                          4914  #nop()                          #11 Overlap
                                          4915  label('v6502_PLP')
v6502_PLP:    10f9 1411  ld   $11,y       4916  ld(hi('v6502_plp'),Y)           #9
              10fa e0d4  jmp  y,$d4       4917  jmp(Y,'v6502_plp')              #10
                                          4918  #nop()                          #11 Overlap
                                          4919  label('v6502_SED')              # Decimal mode not implemented
v6502_SED:    10fb 1411  ld   $11,y       4920  ld(hi('v6502_sed'),Y)           #9,11
              10fc e074  jmp  y,$74       4921  jmp(Y,'v6502_sed')              #10
                                          4922  #nop()                          #11 Overlap
                                          4923  label('v6502_ILL') # All illegal opcodes map to BRK, except $FF which will crash
                                          4924  label('v6502_BRK')
v6502_ILL:
v6502_BRK:    10fd 140d  ld   $0d,y       4925  ld(hi('v6502_brk'),Y)           #9
              10fe e0ea  jmp  y,$ea       4926  jmp(Y,'v6502_brk')              #10
                                          4927  #nop()                          #11 Overlap
                                          4928
                                          4929  while pc()&255 < 255:
                                          4930    nop()
                                          4931
                                          4932  # `v6502_RESUME' is the interpreter's secondary entry point for when
                                          4933  # the opcode and operands were already fetched, just before the last hPulse.
                                          4934  # It must be at $xxff, prefably somewhere in v6502's own code pages.
                                          4935  label('v6502_RESUME')
                                          4936  assert (pc()&255) == 255
v6502_RESUME: 10ff a005  suba $05         4937  suba(v6502_adjust)              #0,11 v6502 secondary entry point
                                          4938  # --- Page boundary ---
                                          4939  align(0x100,size=0x200)
              1100 c215  st   [$15]       4940  st([vTicks])                    #1
              1101 1124  ld   [$24],x     4941  ld([v6502_ADL],X)               #2
              1102 140f  ld   $0f,y       4942  ld(hi('v6502_execute'),Y)       #3
              1103 e126  jmp  y,[$26]     4943  jmp(Y,[v6502_IR])               #4
              1104 fcff  bra  $ff         4944  bra(255)                        #5
                                          4945
                                          4946  label('v6502_dec')
v6502_dec:    1105 1525  ld   [$25],y     4947  ld([v6502_ADH],Y)               #12
              1106 0d00  ld   [y,x]       4948  ld([Y,X])                       #13
              1107 a001  suba $01         4949  suba(1)                         #14
              1108 ce00  st   [y,x]       4950  st([Y,X])                       #15
              1109 c228  st   [$28]       4951  st([v6502_Qz])                  #16 Z flag
              110a c229  st   [$29]       4952  st([v6502_Qn])                  #17 N flag
              110b 140e  ld   $0e,y       4953  ld(hi('v6502_next'),Y)          #18
              110c 00f5  ld   $f5         4954  ld(-22/2)                       #19
              110d e020  jmp  y,$20       4955  jmp(Y,'v6502_next')             #20
                                          4956  #nop()                          #21 Overlap
                                          4957  #
                                          4958  label('v6502_inc')
v6502_inc:    110e 1525  ld   [$25],y     4959  ld([v6502_ADH],Y)               #12,22
              110f 0d00  ld   [y,x]       4960  ld([Y,X])                       #13
              1110 8001  adda $01         4961  adda(1)                         #14
              1111 ce00  st   [y,x]       4962  st([Y,X])                       #15
              1112 c228  st   [$28]       4963  st([v6502_Qz])                  #16 Z flag
              1113 c229  st   [$29]       4964  st([v6502_Qn])                  #17 N flag
              1114 140e  ld   $0e,y       4965  ld(hi('v6502_next'),Y)          #18
              1115 00f5  ld   $f5         4966  ld(-22/2)                       #19
              1116 e020  jmp  y,$20       4967  jmp(Y,'v6502_next')             #20
              1117 0200  nop              4968  nop()                           #21
                                          4969
                                          4970  label('v6502_lda')
v6502_lda:    1118 0200  nop              4971  nop()                           #12
              1119 1525  ld   [$25],y     4972  ld([v6502_ADH],Y)               #13
              111a 0d00  ld   [y,x]       4973  ld([Y,X])                       #14
              111b c218  st   [$18]       4974  st([v6502_A])                   #15
                                          4975  label('.lda16')
.lda16:       111c c228  st   [$28]       4976  st([v6502_Qz])                  #16 Z flag
              111d c229  st   [$29]       4977  st([v6502_Qn])                  #17 N flag
              111e 0200  nop              4978  nop()                           #18
              111f 140e  ld   $0e,y       4979  ld(hi('v6502_next'),Y)          #19
              1120 e020  jmp  y,$20       4980  jmp(Y,'v6502_next')             #20
              1121 00f5  ld   $f5         4981  ld(-22/2)                       #21
                                          4982
                                          4983  label('v6502_ldx')
v6502_ldx:    1122 1525  ld   [$25],y     4984  ld([v6502_ADH],Y)               #12
              1123 0d00  ld   [y,x]       4985  ld([Y,X])                       #13
              1124 fc1c  bra  .lda16      4986  bra('.lda16')                   #14
              1125 c22a  st   [$2a]       4987  st([v6502_X])                   #15
                                          4988
                                          4989  label('v6502_ldy')
v6502_ldy:    1126 1525  ld   [$25],y     4990  ld([v6502_ADH],Y)               #12
              1127 0d00  ld   [y,x]       4991  ld([Y,X])                       #13
              1128 fc1c  bra  .lda16      4992  bra('.lda16')                   #14
              1129 c22b  st   [$2b]       4993  st([v6502_Y])                   #15
                                          4994
                                          4995  label('v6502_ldx2')
v6502_ldx2:   112a 0124  ld   [$24]       4996  ld([v6502_ADL])                 #12 Special case $B6: LDX $DD,Y
              112b a12a  suba [$2a]       4997  suba([v6502_X])                 #13 Undo X offset
              112c 912b  adda [$2b],x     4998  adda([v6502_Y],X)               #14 Apply Y instead
              112d 0500  ld   [x]         4999  ld([X])                         #15
              112e c22a  st   [$2a]       5000  st([v6502_X])                   #16
              112f c228  st   [$28]       5001  st([v6502_Qz])                  #17 Z flag
              1130 c229  st   [$29]       5002  st([v6502_Qn])                  #18 N flag
              1131 140e  ld   $0e,y       5003  ld(hi('v6502_next'),Y)          #19
              1132 e020  jmp  y,$20       5004  jmp(Y,'v6502_next')             #20
              1133 00f5  ld   $f5         5005  ld(-22/2)                       #21
                                          5006
                                          5007  label('v6502_sta')
v6502_sta:    1134 1525  ld   [$25],y     5008  ld([v6502_ADH],Y)               #12
              1135 0118  ld   [$18]       5009  ld([v6502_A])                   #13
              1136 ce00  st   [y,x]       5010  st([Y,X])                       #14
              1137 140e  ld   $0e,y       5011  ld(hi('v6502_next'),Y)          #15
              1138 e020  jmp  y,$20       5012  jmp(Y,'v6502_next')             #16
              1139 00f7  ld   $f7         5013  ld(-18/2)                       #17
                                          5014
                                          5015  label('v6502_stx')
v6502_stx:    113a 1525  ld   [$25],y     5016  ld([v6502_ADH],Y)               #12
              113b 012a  ld   [$2a]       5017  ld([v6502_X])                   #13
              113c ce00  st   [y,x]       5018  st([Y,X])                       #14
              113d 140e  ld   $0e,y       5019  ld(hi('v6502_next'),Y)          #15
              113e e020  jmp  y,$20       5020  jmp(Y,'v6502_next')             #16
              113f 00f7  ld   $f7         5021  ld(-18/2)                       #17
                                          5022
                                          5023  label('v6502_stx2')
v6502_stx2:   1140 0124  ld   [$24]       5024  ld([v6502_ADL])                 #12 Special case $96: STX $DD,Y
              1141 a12a  suba [$2a]       5025  suba([v6502_X])                 #13 Undo X offset
              1142 912b  adda [$2b],x     5026  adda([v6502_Y],X)               #14 Apply Y instead
              1143 012a  ld   [$2a]       5027  ld([v6502_X])                   #15
              1144 c600  st   [x]         5028  st([X])                         #16
              1145 140e  ld   $0e,y       5029  ld(hi('v6502_next'),Y)          #17
              1146 e020  jmp  y,$20       5030  jmp(Y,'v6502_next')             #18
              1147 00f6  ld   $f6         5031  ld(-20/2)                       #19
                                          5032
                                          5033  label('v6502_sty')
v6502_sty:    1148 1525  ld   [$25],y     5034  ld([v6502_ADH],Y)               #12
              1149 012b  ld   [$2b]       5035  ld([v6502_Y])                   #13
              114a ce00  st   [y,x]       5036  st([Y,X])                       #14
              114b 140e  ld   $0e,y       5037  ld(hi('v6502_next'),Y)          #15
              114c e020  jmp  y,$20       5038  jmp(Y,'v6502_next')             #16
                                          5039  label('v6502_tax')
v6502_tax:    114d 00f7  ld   $f7         5040  ld(-18/2)                       #17,12
                                          5041  #
                                          5042  #label('v6502_tax')
                                          5043  #nop()                          #12 Overlap
              114e 0118  ld   [$18]       5044  ld([v6502_A])                   #13
              114f c22a  st   [$2a]       5045  st([v6502_X])                   #14
                                          5046  label('.tax15')
.tax15:       1150 c228  st   [$28]       5047  st([v6502_Qz])                  #15 Z flag
              1151 c229  st   [$29]       5048  st([v6502_Qn])                  #16 N flag
              1152 140e  ld   $0e,y       5049  ld(hi('v6502_next'),Y)          #17
              1153 e020  jmp  y,$20       5050  jmp(Y,'v6502_next')             #18
                                          5051  label('v6502_tsx')
v6502_tsx:    1154 00f6  ld   $f6         5052  ld(-20/2)                       #19
                                          5053  #
                                          5054  #label('v6502_tsx')
                                          5055  #nop()                          #12 Overlap
              1155 011c  ld   [$1c]       5056  ld([v6502_S])                   #13
              1156 a001  suba $01         5057  suba(1)                         #14 Shift down on export
              1157 c22a  st   [$2a]       5058  st([v6502_X])                   #15
                                          5059  label('.tsx16')
.tsx16:       1158 c228  st   [$28]       5060  st([v6502_Qz])                  #16 Z flag
              1159 c229  st   [$29]       5061  st([v6502_Qn])                  #17 N flag
              115a 0200  nop              5062  nop()                           #18
              115b 140e  ld   $0e,y       5063  ld(hi('v6502_next'),Y)          #19
              115c e020  jmp  y,$20       5064  jmp(Y,'v6502_next')             #20
              115d 00f5  ld   $f5         5065  ld(-22/2)                       #21
                                          5066
                                          5067  label('v6502_txs')
v6502_txs:    115e 012a  ld   [$2a]       5068  ld([v6502_X])                   #12
              115f 8001  adda $01         5069  adda(1)                         #13 Shift up on import
              1160 fc58  bra  .tsx16      5070  bra('.tsx16')                   #14
              1161 c21c  st   [$1c]       5071  st([v6502_S])                   #15
                                          5072
                                          5073  label('v6502_tay')
v6502_tay:    1162 0118  ld   [$18]       5074  ld([v6502_A])                   #12
              1163 fc50  bra  .tax15      5075  bra('.tax15')                   #13
              1164 c22b  st   [$2b]       5076  st([v6502_Y])                   #14
                                          5077
                                          5078  label('v6502_txa')
v6502_txa:    1165 012a  ld   [$2a]       5079  ld([v6502_X])                   #12
              1166 fc50  bra  .tax15      5080  bra('.tax15')                   #13
              1167 c218  st   [$18]       5081  st([v6502_A])                   #14
                                          5082
                                          5083  label('v6502_tya')
v6502_tya:    1168 012b  ld   [$2b]       5084  ld([v6502_Y])                   #12
              1169 fc50  bra  .tax15      5085  bra('.tax15')                   #13
              116a c218  st   [$18]       5086  st([v6502_A])                   #14
                                          5087
                                          5088  label('v6502_cli')
v6502_cli:    116b 0127  ld   [$27]       5089  ld([v6502_P])                   #12
              116c fc79  bra  .clv15      5090  bra('.clv15')                   #13
              116d 20fb  anda $fb         5091  anda(~v6502_Iflag)              #14
                                          5092
                                          5093  label('v6502_sei')
v6502_sei:    116e 0127  ld   [$27]       5094  ld([v6502_P])                   #12
              116f fc79  bra  .clv15      5095  bra('.clv15')                   #13
              1170 4004  ora  $04         5096  ora(v6502_Iflag)                #14
                                          5097
                                          5098  label('v6502_cld')
v6502_cld:    1171 0127  ld   [$27]       5099  ld([v6502_P])                   #12
              1172 fc79  bra  .clv15      5100  bra('.clv15')                   #13
              1173 20f7  anda $f7         5101  anda(~v6502_Dflag)              #14
                                          5102
                                          5103  label('v6502_sed')
v6502_sed:    1174 0127  ld   [$27]       5104  ld([v6502_P])                   #12
              1175 fc79  bra  .clv15      5105  bra('.clv15')                   #13
                                          5106  label('v6502_clv')
v6502_clv:    1176 4008  ora  $08         5107  ora(v6502_Dflag)                #14,12 Overlap
                                          5108  #
                                          5109  #label('v6502_clv')
                                          5110  #nop()                          #12
              1177 0127  ld   [$27]       5111  ld([v6502_P])                   #13
              1178 207f  anda $7f         5112  anda(~v6502_Vemu)               #14
                                          5113  label('.clv15')
.clv15:       1179 c227  st   [$27]       5114  st([v6502_P])                   #15
              117a 140e  ld   $0e,y       5115  ld(hi('v6502_next'),Y)          #16
              117b 00f6  ld   $f6         5116  ld(-20/2)                       #17
              117c e020  jmp  y,$20       5117  jmp(Y,'v6502_next')             #18
                                          5118  label('v6502_bit')
v6502_bit:    117d 0200  nop              5119  nop()                           #19,12
                                          5120  #
                                          5121  #label('v6502_bit')
                                          5122  #nop()                          #12 Overlap
              117e 1124  ld   [$24],x     5123  ld([v6502_ADL],X)               #13
              117f 1525  ld   [$25],y     5124  ld([v6502_ADH],Y)               #14
              1180 0d00  ld   [y,x]       5125  ld([Y,X])                       #15
              1181 c229  st   [$29]       5126  st([v6502_Qn])                  #16 N flag
              1182 2118  anda [$18]       5127  anda([v6502_A])                 #17 This is a reason we keep N and Z in separate bytes
              1183 c228  st   [$28]       5128  st([v6502_Qz])                  #18 Z flag
              1184 0127  ld   [$27]       5129  ld([v6502_P])                   #19
              1185 207f  anda $7f         5130  anda(~v6502_Vemu)               #20
              1186 c227  st   [$27]       5131  st([v6502_P])                   #21
              1187 0d00  ld   [y,x]       5132  ld([Y,X])                       #22
              1188 8200  adda ac          5133  adda(AC)                        #23
              1189 2080  anda $80         5134  anda(v6502_Vemu)                #24
              118a 4127  ora  [$27]       5135  ora([v6502_P])                  #25
              118b c227  st   [$27]       5136  st([v6502_P])                   #26 Update V
              118c 140e  ld   $0e,y       5137  ld(hi('v6502_next'),Y)          #27
              118d e020  jmp  y,$20       5138  jmp(Y,'v6502_next')             #28
              118e 00f1  ld   $f1         5139  ld(-30/2)                       #29
                                          5140
                                          5141  label('v6502_rts')
v6502_rts:    118f 011c  ld   [$1c]       5142  ld([v6502_S])                   #12
              1190 1200  ld   ac,x        5143  ld(AC,X)                        #13
              1191 8002  adda $02         5144  adda(2)                         #14
              1192 c21c  st   [$1c]       5145  st([v6502_S])                   #15
              1193 1400  ld   $00,y       5146  ld(0,Y)                         #16
              1194 0d00  ld   [y,x]       5147  ld([Y,X])                       #17
              1195 de00  st   [y,x++]     5148  st([Y,Xpp])                     #18 Just X++
              1196 8001  adda $01         5149  adda(1)                         #19
              1197 c21a  st   [$1a]       5150  st([v6502_PCL])                 #20
              1198 f09b  beq  $119b       5151  beq(pc()+3)                     #21
              1199 fc9c  bra  $119c       5152  bra(pc()+3)                     #22
              119a 0000  ld   $00         5153  ld(0)                           #23
              119b 0001  ld   $01         5154  ld(1)                           #23(!)
              119c 8d00  adda [y,x]       5155  adda([Y,X])                     #24
              119d c21b  st   [$1b]       5156  st([v6502_PCH])                 #25
              119e 0200  nop              5157  nop()                           #26
              119f 140e  ld   $0e,y       5158  ld(hi('v6502_next'),Y)          #27
              11a0 e020  jmp  y,$20       5159  jmp(Y,'v6502_next')             #28
              11a1 00f1  ld   $f1         5160  ld(-30/2)                       #29
                                          5161
                                          5162  label('v6502_php')
v6502_php:    11a2 011c  ld   [$1c]       5163  ld([v6502_S])                   #12
              11a3 a001  suba $01         5164  suba(1)                         #13
              11a4 d21c  st   [$1c],x     5165  st([v6502_S],X)                 #14
              11a5 0127  ld   [$27]       5166  ld([v6502_P])                   #15
              11a6 20bd  anda $bd         5167  anda(~v6502_Vflag&~v6502_Zflag) #16 Keep Vemu,B,D,I,C
              11a7 f4aa  bge  $11aa       5168  bpl(pc()+3)                     #17 V to bit 6 and clear N
              11a8 fcaa  bra  $11aa       5169  bra(pc()+2)                     #18
              11a9 60c0  xora $c0         5170  xora(v6502_Vflag^v6502_Vemu)    #19
              11aa c600  st   [x]         5171  st([X])                         #19,20
              11ab 0128  ld   [$28]       5172  ld([v6502_Qz])                  #21 Z flag
              11ac f0af  beq  $11af       5173  beq(pc()+3)                     #22
              11ad fcb0  bra  $11b0       5174  bra(pc()+3)                     #23
              11ae 0000  ld   $00         5175  ld(0)                           #24
              11af 0002  ld   $02         5176  ld(v6502_Zflag)                 #24(!)
              11b0 4500  ora  [x]         5177  ora([X])                        #25
              11b1 c600  st   [x]         5178  st([X])                         #26
              11b2 0129  ld   [$29]       5179  ld([v6502_Qn])                  #27 N flag
              11b3 2080  anda $80         5180  anda(0x80)                      #28
              11b4 4500  ora  [x]         5181  ora([X])                        #29
              11b5 4020  ora  $20         5182  ora(v6502_Uflag)                #30 Unused bit
              11b6 c600  st   [x]         5183  st([X])                         #31
              11b7 0200  nop              5184  nop()                           #32
              11b8 140e  ld   $0e,y       5185  ld(hi('v6502_next'),Y)          #33
              11b9 e020  jmp  y,$20       5186  jmp(Y,'v6502_next')             #34
              11ba 00ee  ld   $ee         5187  ld(-36/2)                       #35
                                          5188
                                          5189  label('v6502_cpx')
v6502_cpx:    11bb fcc0  bra  .cmp14      5190  bra('.cmp14')                   #12
              11bc 012a  ld   [$2a]       5191  ld([v6502_X])                   #13
                                          5192
                                          5193  label('v6502_cpy')
v6502_cpy:    11bd fcc0  bra  .cmp14      5194  bra('.cmp14')                   #12
                                          5195  label('v6502_cmp')
v6502_cmp:    11be 012b  ld   [$2b]       5196  ld([v6502_Y])                   #13,12
                                          5197  #
                                          5198  #label('v6502_cmp')             #12 Overlap
                                          5199  assert v6502_Cflag == 1
              11bf 0118  ld   [$18]       5200  ld([v6502_A])                   #13
                                          5201  label('.cmp14')
.cmp14:       11c0 1525  ld   [$25],y     5202  ld([v6502_ADH],Y)               #14
              11c1 e8c7  blt  .cmp17      5203  bmi('.cmp17')                   #15 Carry?
              11c2 ad00  suba [y,x]       5204  suba([Y,X])                     #16
              11c3 c228  st   [$28]       5205  st([v6502_Qz])                  #17 Z flag
              11c4 c229  st   [$29]       5206  st([v6502_Qn])                  #18 N flag
              11c5 fccb  bra  .cmp21      5207  bra('.cmp21')                   #19
              11c6 4d00  ora  [y,x]       5208  ora([Y,X])                      #20
                                          5209  label('.cmp17')
.cmp17:       11c7 c228  st   [$28]       5210  st([v6502_Qz])                  #17 Z flag
              11c8 c229  st   [$29]       5211  st([v6502_Qn])                  #18 N flag
              11c9 2d00  anda [y,x]       5212  anda([Y,X])                     #19
              11ca 0200  nop              5213  nop()                           #20
                                          5214  label('.cmp21')
.cmp21:       11cb 6080  xora $80         5215  xora(0x80)                      #21
              11cc 3080  anda $80,x       5216  anda(0x80,X)                    #22 Move carry to bit 0
              11cd 0127  ld   [$27]       5217  ld([v6502_P])                   #23 C flag
              11ce 20fe  anda $fe         5218  anda(~1)                        #24
              11cf 4500  ora  [x]         5219  ora([X])                        #25
              11d0 c227  st   [$27]       5220  st([v6502_P])                   #26
              11d1 140e  ld   $0e,y       5221  ld(hi('v6502_next'),Y)          #27
              11d2 e020  jmp  y,$20       5222  jmp(Y,'v6502_next')             #28
              11d3 00f1  ld   $f1         5223  ld(-30/2)                       #29
                                          5224
                                          5225  label('v6502_plp')
                                          5226  assert v6502_Nflag == 128
                                          5227  assert 2*v6502_Vflag == v6502_Vemu
v6502_plp:    11d4 011c  ld   [$1c]       5228  ld([v6502_S])                   #12
              11d5 1200  ld   ac,x        5229  ld(AC,X)                        #13
              11d6 8001  adda $01         5230  adda(1)                         #14
              11d7 c21c  st   [$1c]       5231  st([v6502_S])                   #15
              11d8 0500  ld   [x]         5232  ld([X])                         #16
              11d9 c229  st   [$29]       5233  st([v6502_Qn])                  #17 N flag
              11da 2002  anda $02         5234  anda(v6502_Zflag)               #18
              11db 6002  xora $02         5235  xora(v6502_Zflag)               #19
              11dc c228  st   [$28]       5236  st([v6502_Qz])                  #20 Z flag
              11dd 0500  ld   [x]         5237  ld([X])                         #21
              11de 207f  anda $7f         5238  anda(~v6502_Vemu)               #22 V to bit 7
              11df 8040  adda $40         5239  adda(v6502_Vflag)               #23
              11e0 c227  st   [$27]       5240  st([v6502_P])                   #24 All other flags
              11e1 140e  ld   $0e,y       5241  ld(hi('v6502_next'),Y)          #25
              11e2 e020  jmp  y,$20       5242  jmp(Y,'v6502_next')             #26
              11e3 00f2  ld   $f2         5243  ld(-28/2)                       #27
                                          5244
                                          5245  label('v6502_rti')
v6502_rti:    11e4 011c  ld   [$1c]       5246  ld([v6502_S])                   #12
              11e5 1200  ld   ac,x        5247  ld(AC,X)                        #13
              11e6 8003  adda $03         5248  adda(3)                         #14
              11e7 c21c  st   [$1c]       5249  st([v6502_S])                   #15
              11e8 0500  ld   [x]         5250  ld([X])                         #16
              11e9 c229  st   [$29]       5251  st([v6502_Qn])                  #17 N flag
              11ea 2002  anda $02         5252  anda(v6502_Zflag)               #18
              11eb 6002  xora $02         5253  xora(v6502_Zflag)               #19
              11ec c228  st   [$28]       5254  st([v6502_Qz])                  #20 Z flag
              11ed 1400  ld   $00,y       5255  ld(0,Y)                         #21
              11ee 0d00  ld   [y,x]       5256  ld([Y,X])                       #22
              11ef de00  st   [y,x++]     5257  st([Y,Xpp])                     #23 Just X++
              11f0 207f  anda $7f         5258  anda(~v6502_Vemu)               #24 V to bit 7
              11f1 8040  adda $40         5259  adda(v6502_Vflag)               #25
              11f2 c227  st   [$27]       5260  st([v6502_P])                   #26 All other flags
              11f3 0d00  ld   [y,x]       5261  ld([Y,X])                       #27
              11f4 de00  st   [y,x++]     5262  st([Y,Xpp])                     #28 Just X++
              11f5 c21a  st   [$1a]       5263  st([v6502_PCL])                 #29
              11f6 0d00  ld   [y,x]       5264  ld([Y,X])                       #30
              11f7 c21b  st   [$1b]       5265  st([v6502_PCH])                 #31
              11f8 0200  nop              5266  nop()                           #32
              11f9 140e  ld   $0e,y       5267  ld(hi('v6502_next'),Y)          #33
              11fa e020  jmp  y,$20       5268  jmp(Y,'v6502_next')             #34
              11fb 00ee  ld   $ee         5269  ld(-36/2)                       #35
                                          5270
                                          5271  #-----------------------------------------------------------------------
                                          5272  #       Extended vertical blank logic: interrupts
                                          5273  #-----------------------------------------------------------------------
              11fc 0200  nop              5274  align(0x100)
              11fd 0200  nop
              11fe 0200  nop
              11ff 0200  nop
                                          5275
                                          5276  # Check if an IRQ handler is defined
                                          5277  label('vBlankFirst#78')
vBlankFirst#78:
              1200 09f6  ld   [y,$f6]     5278  ld([Y,vIRQ_v5])                 #78
              1201 49f7  ora  [y,$f7]     5279  ora([Y,vIRQ_v5+1])              #79
                                          5280  bne('vBlankFirst#82')           #80
              1202 ec09  bne  vBlankFirst#82
              1203 0116  ld   [$16]       5281  ld([vPC])                       #81
              1204 0055  ld   $55         5282  runVcpu(186-82-extra,           #82 Application cycles (scan line 0)
              1205 c21e  st   [$1e]
              1206 1502  ld   [$02],y
              1207 e0ff  jmp  y,$ff
              1208 001e  ld   $1e
                                          5283      '---D line 0 timeout but no irq',
                                          5284      returnTo='vBlankFirst#186')
                                          5285
                                          5286  label('vBlankFirst#82')
vBlankFirst#82:
              1209 c230  st   [$30]       5287  st([0x30])                      #82 Save vPC
              120a 0117  ld   [$17]       5288  ld([vPC+1])                     #83
              120b c231  st   [$31]       5289  st([0x31])                      #84
              120c 0118  ld   [$18]       5290  ld([vAC])                       #85 Save vAC
              120d c232  st   [$32]       5291  st([0x32])                      #86
              120e 0119  ld   [$19]       5292  ld([vAC+1])                     #87
              120f c233  st   [$33]       5293  st([0x33])                      #88
              1210 0102  ld   [$02]       5294  ld([vCpuSelect])                #89 Save vCpuSelect for PREFIX
              1211 c234  st   [$34]       5295  st([0x34])                      #90
              1212 09f6  ld   [y,$f6]     5296  ld([Y,vIRQ_v5])                 #91 Set vPC to vIRQ
              1213 a002  suba $02         5297  suba(2)                         #92
              1214 c216  st   [$16]       5298  st([vPC])                       #93
              1215 09f7  ld   [y,$f7]     5299  ld([Y,vIRQ_v5+1])               #94
              1216 c217  st   [$17]       5300  st([vPC+1])                     #95
              1217 0102  ld   [$02]       5301  ld([vCpuSelect])                #96 Handler must save this if needed
              1218 c219  st   [$19]       5302  st([vAC+1])                     #97
              1219 0000  ld   $00         5303  ld(0)                           #98
              121a c218  st   [$18]       5304  st([vAC])                       #99
              121b 0002  ld   $02         5305  ld(hi('ENTER'))                 #100 Set vCpuSelect to ENTER (=regular vCPU)
              121c c202  st   [$02]       5306  st([vCpuSelect])                #101
              121d 0055  ld   $55         5307  runVcpu(186-102-extra,          #102 Application cycles (scan line 0)
              121e c21e  st   [$1e]
              121f 1502  ld   [$02],y
              1220 e0ff  jmp  y,$ff
              1221 0014  ld   $14
                                          5308      '---D line 0 timeout with irq',
                                          5309      returnTo='vBlankFirst#186')
                                          5310
                                          5311  # vIRQ sequence WITH interpreter switch
                                          5312  label('vRTI#18')
vRTI#18:      1222 0500  ld   [x]         5313  ld([X])                         #18
              1223 c202  st   [$02]       5314  st([vCpuSelect])                #19
              1224 0130  ld   [$30]       5315  ld([0x30])                      #20
              1225 c216  st   [$16]       5316  st([vPC])                       #21
              1226 0131  ld   [$31]       5317  ld([0x31])                      #22
              1227 c217  st   [$17]       5318  st([vPC+1])                     #23
              1228 0132  ld   [$32]       5319  ld([0x32])                      #24
              1229 c218  st   [$18]       5320  st([vAC])                       #25
              122a 0133  ld   [$33]       5321  ld([0x33])                      #26
              122b c219  st   [$19]       5322  st([vAC+1])                     #27
              122c 0200  nop              5323  nop()                           #28
              122d 0200  nop              5324  nop()                           #29
              122e 0200  nop              5325  nop()                           #30 #0 This MUST match maxTicks, (ie maxTicks=30)
              122f 1403  ld   $03,y       5326  ld(hi('RESYNC'),Y)              #1
              1230 e00c  jmp  y,$0c       5327  jmp(Y,'RESYNC')                 #2
              1231 0115  ld   [$15]       5328  ld([vTicks])                    #3
                                          5329
                                          5330  # Entered last line of vertical blank (line 40)
                                          5331  label('vBlankLast#34')
                                          5332
                                          5333  #-----------------------------------------------------------------------
                                          5334  #       Extended vertical blank logic: game controller decoding
                                          5335  #-----------------------------------------------------------------------
                                          5336
                                          5337  # Game controller types
                                          5338  # TypeA: Based on 74LS165 shift register (not supported)
                                          5339  # TypeB: Based on CD4021B shift register (standard)
                                          5340  # TypeC: Based on priority encoder
                                          5341  #
                                          5342  # Notes:
                                          5343  # - TypeA was only used during development and first beta test, before ROM v1
                                          5344  # - TypeB appears as type A with negative logic levels
                                          5345  # - TypeB is the game controller type that comes with the original kit and ROM v1
                                          5346  # - TypeB is mimicked by BabelFish / Pluggy McPlugface
                                          5347  # - TypeB requires a prolonged /SER_LATCH, therefore vPulse is 8 scanlines, not 2
                                          5348  # - TypeB and TypeC can be sampled in the same scanline
                                          5349  # - TypeA is 1 scanline shifted as it looks at a different edge (XXX up or down?)
                                          5350  # - TypeC gives incomplete information: lower buttons overshadow higher ones
                                          5351  #
                                          5352  #       TypeC    Alias    Button TypeB
                                          5353  #       00000000  ^@   -> Right  11111110
                                          5354  #       00000001  ^A   -> Left   11111101
                                          5355  #       00000011  ^C   -> Down   11111011
                                          5356  #       00000111  ^G   -> Up     11110111
                                          5357  #       00001111  ^O   -> Start  11101111
                                          5358  #       00011111  ^_   -> Select 11011111
                                          5359  #       00111111  ?    -> B      10111111
                                          5360  #       01111111  DEL  -> A      01111111
                                          5361  #       11111111       -> (None) 11111111
                                          5362  #
                                          5363  #       Conversion formula:
                                          5364  #               f(x) := 254 - x
                                          5365
                                          5366  # Detect controller TypeC codes
vBlankLast#34:
              1232 010f  ld   [$0f]       5367  ld([serialRaw])                 #34 if serialRaw in [0,1,3,7,15,31,63,127,255]
              1233 8001  adda $01         5368  adda(1)                         #35
              1234 210f  anda [$0f]       5369  anda([serialRaw])               #36
              1235 ec46  bne  .buttons#39 5370  bne('.buttons#39')              #37
                                          5371
                                          5372  # TypeC
              1236 010f  ld   [$0f]       5373  ld([serialRaw])                 #38 [TypeC] if serialRaw < serialLast
              1237 8001  adda $01         5374  adda(1)                         #39
              1238 2110  anda [$10]       5375  anda([serialLast])              #40
              1239 ec3d  bne  .buttons#43 5376  bne('.buttons#43')              #41
              123a 00fe  ld   $fe         5377  ld(254)                         #42 then clear the selected bit
              123b 0200  nop              5378  nop()                           #43
              123c fc40  bra  .buttons#46 5379  bra('.buttons#46')              #44
                                          5380  label('.buttons#43')
.buttons#43:  123d a10f  suba [$0f]       5381  suba([serialRaw])               #43,45
              123e 2111  anda [$11]       5382  anda([buttonState])             #44
              123f c211  st   [$11]       5383  st([buttonState])               #45
                                          5384  label('.buttons#46')
.buttons#46:  1240 010f  ld   [$0f]       5385  ld([serialRaw])                 #46 Set the lower bits
              1241 4111  ora  [$11]       5386  ora([buttonState])              #47
                                          5387  label('.buttons#48')
.buttons#48:  1242 c211  st   [$11]       5388  st([buttonState])               #48
              1243 010f  ld   [$0f]       5389  ld([serialRaw])                 #49 Update serialLast for next pass
              1244 e0b3  jmp  y,$b3       5390  jmp(Y,'vBlankLast#52')          #50
              1245 c210  st   [$10]       5391  st([serialLast])                #51
                                          5392
                                          5393  # TypeB
                                          5394  # pChange = pNew & ~pOld
                                          5395  # nChange = nNew | ~nOld {DeMorgan}
                                          5396  label('.buttons#39')
.buttons#39:  1246 00ff  ld   $ff         5397  ld(255)                         #39 [TypeB] Bitwise edge-filter to detect button presses
              1247 6110  xora [$10]       5398  xora([serialLast])              #40
              1248 410f  ora  [$0f]       5399  ora([serialRaw])                #41 Catch button-press events
              1249 2111  anda [$11]       5400  anda([buttonState])             #42 Keep active button presses
              124a 410f  ora  [$0f]       5401  ora([serialRaw])                #43
              124b 0200  nop              5402  nop()                           #44
              124c 0200  nop              5403  nop()                           #45
              124d fc42  bra  .buttons#48 5404  bra('.buttons#48')              #46
              124e 0200  nop              5405  nop()                           #47
                                          5406
                                          5407
                                          5408  #-----------------------------------------------------------------------
                                          5409  #       More SYS functions, (0x1200)
                                          5410  #-----------------------------------------------------------------------
                                          5411
                                          5412  # SYS_Exec_88 implementation
                                          5413  label('sys_Exec')
sys_Exec:     124f d617  st   [$17],y     5414  st([vPC+1],Y)                   #18 Clear vPCH and Y
              1250 011c  ld   [$1c]       5415  ld([vSP])                       #19 Place ROM loader below current stack pointer
              1251 a037  suba $37         5416  suba(53+2)                      #20 (AC -> *+0) One extra word for PUSH
              1252 d21d  st   [$1d],x     5417  st([vTmp],X)                    #21
              1253 80fe  adda $fe         5418  adda(-2)                        #22 (AC -> *-2)
              1254 c216  st   [$16]       5419  st([vPC])                       #23
                                          5420  # Start of manually compiled vCPU section
              1255 dc75  st   $75,[y,x++] 5421  st('PUSH',    [Y,Xpp])          #24 *+0
              1256 dccf  st   $cf,[y,x++] 5422  st('CALL',    [Y,Xpp])          #25 *+26 Fetch first byte
              1257 8023  adda $23         5423  adda(33-(-2))                   #26 (AC -> *+33)
              1258 de00  st   [y,x++]     5424  st(           [Y,Xpp])          #27 *+27
              1259 dc5e  st   $5e,[y,x++] 5425  st('ST',      [Y,Xpp])          #28 *+3 Chunk copy loop
              125a dc27  st   $27,[y,x++] 5426  st(sysArgs+3, [Y,Xpp])          #29 *+4 High-address comes first
              125b dccf  st   $cf,[y,x++] 5427  st('CALL',    [Y,Xpp])          #30 *+5
              125c de00  st   [y,x++]     5428  st(           [Y,Xpp])          #31 *+6
              125d dc5e  st   $5e,[y,x++] 5429  st('ST',      [Y,Xpp])          #32 *+7
              125e dc26  st   $26,[y,x++] 5430  st(sysArgs+2, [Y,Xpp])          #33 *+8 Then the low address
              125f dccf  st   $cf,[y,x++] 5431  st('CALL',    [Y,Xpp])          #34 *+9
              1260 de00  st   [y,x++]     5432  st(           [Y,Xpp])          #35 *+10
              1261 dc5e  st   $5e,[y,x++] 5433  st('ST',      [Y,Xpp])          #36 *+11 Byte copy loop
              1262 dc28  st   $28,[y,x++] 5434  st(sysArgs+4, [Y,Xpp])          #37 *+12 Byte count (0 means 256)
              1263 dccf  st   $cf,[y,x++] 5435  st('CALL',    [Y,Xpp])          #38 *+13
              1264 de00  st   [y,x++]     5436  st(           [Y,Xpp])          #39 *+14
              1265 dcf0  st   $f0,[y,x++] 5437  st('POKE',    [Y,Xpp])          #40 *+15
              1266 dc26  st   $26,[y,x++] 5438  st(sysArgs+2, [Y,Xpp])          #41 *+16
              1267 dc93  st   $93,[y,x++] 5439  st('INC',     [Y,Xpp])          #42 *+17
              1268 dc26  st   $26,[y,x++] 5440  st(sysArgs+2, [Y,Xpp])          #43 *+18
              1269 dc1a  st   $1a,[y,x++] 5441  st('LD',      [Y,Xpp])          #44 *+19
              126a dc28  st   $28,[y,x++] 5442  st(sysArgs+4, [Y,Xpp])          #45 *+20
              126b dce6  st   $e6,[y,x++] 5443  st('SUBI',    [Y,Xpp])          #46 *+21
              126c dc01  st   $01,[y,x++] 5444  st(1,         [Y,Xpp])          #47 *+22
              126d dc35  st   $35,[y,x++] 5445  st('BCC',     [Y,Xpp])          #48 *+23
              126e dc72  st   $72,[y,x++] 5446  st('NE',      [Y,Xpp])          #49 *+24
              126f 80e8  adda $e8         5447  adda(11-2-33)                   #50 (AC -> *+9)
              1270 de00  st   [y,x++]     5448  st(           [Y,Xpp])          #51 *+25
              1271 dccf  st   $cf,[y,x++] 5449  st('CALL',    [Y,Xpp])          #52 *+26 Go to next block
              1272 8018  adda $18         5450  adda(33-9)                      #53 (AC -> *+33)
              1273 de00  st   [y,x++]     5451  st(           [Y,Xpp])          #54 *+27
              1274 dc35  st   $35,[y,x++] 5452  st('BCC',     [Y,Xpp])          #55 *+28
              1275 dc72  st   $72,[y,x++] 5453  st('NE',      [Y,Xpp])          #56 *+29
              1276 80e0  adda $e0         5454  adda(3-2-33)                    #57 (AC -> *+1)
              1277 de00  st   [y,x++]     5455  st(           [Y,Xpp])          #58 *+30
              1278 dc63  st   $63,[y,x++] 5456  st('POP',     [Y,Xpp])          #59 *+31 End
              1279 dcff  st   $ff,[y,x++] 5457  st('RET',     [Y,Xpp])          #60 *+32
                                          5458  # Pointer constant pointing to the routine below (for use by CALL)
              127a 8022  adda $22         5459  adda(35-1)                      #61 (AC -> *+35)
              127b de00  st   [y,x++]     5460  st(           [Y,Xpp])          #62 *+33
              127c dc00  st   $00,[y,x++] 5461  st(0,         [Y,Xpp])          #63 *+34
                                          5462  # Routine to read next byte from ROM and advance read pointer
              127d dc1a  st   $1a,[y,x++] 5463  st('LD',      [Y,Xpp])          #64 *+35 Test for end of ROM table
              127e dc24  st   $24,[y,x++] 5464  st(sysArgs+0, [Y,Xpp])          #65 *+36
              127f dc8c  st   $8c,[y,x++] 5465  st('XORI',    [Y,Xpp])          #66 *+37
              1280 dcfb  st   $fb,[y,x++] 5466  st(251,       [Y,Xpp])          #67 *+38
              1281 dc35  st   $35,[y,x++] 5467  st('BCC',     [Y,Xpp])          #68 *+39
              1282 dc72  st   $72,[y,x++] 5468  st('NE',      [Y,Xpp])          #69 *+40
              1283 8009  adda $09         5469  adda(46-2-35)                   #70 (AC -> *+44)
              1284 de00  st   [y,x++]     5470  st(           [Y,Xpp])          #71 *+41
              1285 dc5e  st   $5e,[y,x++] 5471  st('ST',      [Y,Xpp])          #72 *+42 Wrap to next ROM page
              1286 dc24  st   $24,[y,x++] 5472  st(sysArgs+0, [Y,Xpp])          #73 *+43
              1287 dc93  st   $93,[y,x++] 5473  st('INC',     [Y,Xpp])          #74 *+44
              1288 dc25  st   $25,[y,x++] 5474  st(sysArgs+1, [Y,Xpp])          #75 *+45
              1289 dc21  st   $21,[y,x++] 5475  st('LDW',     [Y,Xpp])          #76 *+46 Read next byte from ROM table
              128a dc24  st   $24,[y,x++] 5476  st(sysArgs+0, [Y,Xpp])          #77 *+47
              128b dc7f  st   $7f,[y,x++] 5477  st('LUP',     [Y,Xpp])          #78 *+48
              128c dc00  st   $00,[y,x++] 5478  st(0,         [Y,Xpp])          #79 *+49
              128d dc93  st   $93,[y,x++] 5479  st('INC',     [Y,Xpp])          #80 *+50 Increment read pointer
              128e dc24  st   $24,[y,x++] 5480  st(sysArgs+0, [Y,Xpp])          #81 *+51
              128f dcff  st   $ff,[y,x++] 5481  st('RET',     [Y,Xpp])          #82 *+52 Return
                                          5482  # Return to interpreter
              1290 1403  ld   $03,y       5483  ld(hi('REENTER'),Y)             #83
              1291 e0cb  jmp  y,$cb       5484  jmp(Y,'REENTER')                #84
              1292 00d4  ld   $d4         5485  ld(-88/2)                       #85
                                          5486
                                          5487  # SYS_VDrawBits_134 implementation
                                          5488  label('sys_VDrawBits')
sys_VDrawBits:
              1293 0000  ld   $00         5489  ld(0)                           #18
                                          5490  label('.sysVdb0')
.sysVdb0:     1294 c21d  st   [$1d]       5491  st([vTmp])                      #19+i*25
              1295 9529  adda [$29],y     5492  adda([sysArgs+5],Y)             #20+i*25 Y=[sysPos+1]+[vTmp]
              1296 0126  ld   [$26]       5493  ld([sysArgs+2])                 #21+i*25 Select color
              1297 e89a  blt  $129a       5494  bmi(pc()+3)                     #22+i*25
              1298 fc9b  bra  $129b       5495  bra(pc()+3)                     #23+i*25
              1299 0124  ld   [$24]       5496  ld([sysArgs+0])                 #24+i*25
              129a 0125  ld   [$25]       5497  ld([sysArgs+1])                 #24+i*25(!)
              129b ce00  st   [y,x]       5498  st([Y,X])                       #25+i*25 Draw pixel
              129c 0126  ld   [$26]       5499  ld([sysArgs+2])                 #26+i*25 Shift byte left
              129d 8200  adda ac          5500  adda(AC)                        #27+i*25
              129e c226  st   [$26]       5501  st([sysArgs+2])                 #28+i*25
              129f 011d  ld   [$1d]       5502  ld([vTmp])                      #29+i*25 Unrolled loop (once)
              12a0 8129  adda [$29]       5503  adda([sysArgs+5])               #31+i*25
              12a1 9401  adda $01,y       5504  adda(1,Y)                       #30+i*25 Y=[sysPos+1]+[vTmp]+1
              12a2 0126  ld   [$26]       5505  ld([sysArgs+2])                 #32+i*25 Select color
              12a3 e8a6  blt  $12a6       5506  bmi(pc()+3)                     #33+i*25
              12a4 fca7  bra  $12a7       5507  bra(pc()+3)                     #34+i*25
              12a5 0124  ld   [$24]       5508  ld([sysArgs+0])                 #35+i*25
              12a6 0125  ld   [$25]       5509  ld([sysArgs+1])                 #35+i*25(!)
              12a7 ce00  st   [y,x]       5510  st([Y,X])                       #36+i*25 Draw pixel
              12a8 0126  ld   [$26]       5511  ld([sysArgs+2])                 #37+i*25 Shift byte left
              12a9 8200  adda ac          5512  adda(AC)                        #38+i*25
              12aa c226  st   [$26]       5513  st([sysArgs+2])                 #39+i*25
              12ab 011d  ld   [$1d]       5514  ld([vTmp])                      #40+i*25 Loop counter
              12ac a006  suba $06         5515  suba(6)                         #41+i*25
              12ad ec94  bne  .sysVdb0    5516  bne('.sysVdb0')                 #42+i*25
              12ae 8008  adda $08         5517  adda(8)                         #43+i*25 Steps of 2
              12af 1403  ld   $03,y       5518  ld(hi('REENTER'),Y)             #119
              12b0 e0cb  jmp  y,$cb       5519  jmp(Y,'REENTER')                #120
              12b1 00c2  ld   $c2         5520  ld(-124/2)                      #121
                                          5521
                                          5522  # SYS_ResetWaveforms_v4_50 implementation
                                          5523  label('sys_ResetWaveforms')
sys_ResetWaveforms:
              12b2 0118  ld   [$18]       5524  ld([vAC+0])                     #18 X=4i
              12b3 8200  adda ac          5525  adda(AC)                        #19
              12b4 9200  adda ac,x        5526  adda(AC,X)                      #20
              12b5 0118  ld   [$18]       5527  ld([vAC+0])                     #21
              12b6 de00  st   [y,x++]     5528  st([Y,Xpp])                     #22 Sawtooth: T[4i+0] = i
              12b7 2020  anda $20         5529  anda(0x20)                      #23 Triangle: T[4i+1] = 2i if i<32 else 127-2i
              12b8 ecbb  bne  $12bb       5530  bne(pc()+3)                     #24
              12b9 0118  ld   [$18]       5531  ld([vAC+0])                     #25
              12ba fcbd  bra  $12bd       5532  bra(pc()+3)                     #26
              12bb 8118  adda [$18]       5533  adda([vAC+0])                   #26,27
              12bc 607f  xora $7f         5534  xora(127)                       #27
              12bd de00  st   [y,x++]     5535  st([Y,Xpp])                     #28
              12be 0118  ld   [$18]       5536  ld([vAC+0])                     #29 Pulse: T[4i+2] = 0 if i<32 else 63
              12bf 2020  anda $20         5537  anda(0x20)                      #30
              12c0 ecc3  bne  $12c3       5538  bne(pc()+3)                     #31
              12c1 fcc4  bra  $12c4       5539  bra(pc()+3)                     #32
              12c2 0000  ld   $00         5540  ld(0)                           #33
              12c3 003f  ld   $3f         5541  ld(63)                          #33(!)
              12c4 de00  st   [y,x++]     5542  st([Y,Xpp])                     #34
              12c5 0118  ld   [$18]       5543  ld([vAC+0])                     #35 Sawtooth: T[4i+3] = i
              12c6 ce00  st   [y,x]       5544  st([Y,X])                       #36
              12c7 8001  adda $01         5545  adda(1)                         #37 i += 1
              12c8 c218  st   [$18]       5546  st([vAC+0])                     #38
              12c9 6040  xora $40         5547  xora(64)                        #39 For 64 iterations
              12ca f0cd  beq  $12cd       5548  beq(pc()+3)                     #40
              12cb fcce  bra  $12ce       5549  bra(pc()+3)                     #41
              12cc 00fe  ld   $fe         5550  ld(-2)                          #42
              12cd 0000  ld   $00         5551  ld(0)                           #42(!)
              12ce 8116  adda [$16]       5552  adda([vPC])                     #43
              12cf c216  st   [$16]       5553  st([vPC])                       #44
              12d0 1403  ld   $03,y       5554  ld(hi('REENTER'),Y)             #45
              12d1 e0cb  jmp  y,$cb       5555  jmp(Y,'REENTER')                #46
              12d2 00e7  ld   $e7         5556  ld(-50/2)                       #47
                                          5557
                                          5558  # SYS_ShuffleNoise_v4_46 implementation
                                          5559  label('sys_ShuffleNoise')
sys_ShuffleNoise:
              12d3 1118  ld   [$18],x     5560  ld([vAC+0],X)                   #18 tmp = T[4j]
              12d4 0d00  ld   [y,x]       5561  ld([Y,X])                       #19
              12d5 c21d  st   [$1d]       5562  st([vTmp])                      #20
              12d6 1119  ld   [$19],x     5563  ld([vAC+1],X)                   #21 T[4j] = T[4i]
              12d7 0d00  ld   [y,x]       5564  ld([Y,X])                       #22
              12d8 1118  ld   [$18],x     5565  ld([vAC+0],X)                   #23
              12d9 ce00  st   [y,x]       5566  st([Y,X])                       #24
              12da 8200  adda ac          5567  adda(AC)                        #25 j += T[4i]
              12db 8200  adda ac          5568  adda(AC,)                       #26
              12dc 8118  adda [$18]       5569  adda([vAC+0])                   #27
              12dd c218  st   [$18]       5570  st([vAC+0])                     #28
              12de 1119  ld   [$19],x     5571  ld([vAC+1],X)                   #29 T[4i] = tmp
              12df 011d  ld   [$1d]       5572  ld([vTmp])                      #30
              12e0 ce00  st   [y,x]       5573  st([Y,X])                       #31
              12e1 0119  ld   [$19]       5574  ld([vAC+1])                     #32 i += 1
              12e2 8004  adda $04         5575  adda(4)                         #33
              12e3 c219  st   [$19]       5576  st([vAC+1])                     #34
              12e4 f0e7  beq  $12e7       5577  beq(pc()+3)                     #35 For 64 iterations
              12e5 fce8  bra  $12e8       5578  bra(pc()+3)                     #36
              12e6 00fe  ld   $fe         5579  ld(-2)                          #37
              12e7 0000  ld   $00         5580  ld(0)                           #37(!)
              12e8 8116  adda [$16]       5581  adda([vPC])                     #38
              12e9 c216  st   [$16]       5582  st([vPC])                       #39
              12ea 1403  ld   $03,y       5583  ld(hi('NEXTY'),Y)               #40
              12eb e000  jmp  y,$00       5584  jmp(Y,'NEXTY')                  #41
              12ec 00ea  ld   $ea         5585  ld(-44/2)                       #42
                                          5586
                                          5587  # SYS_LoadBytes_DEVROM_XXX implementation
                                          5588  label('sys_LoadBytes')
sys_LoadBytes:
              12ed 0030  ld   $30         5589  ld(0x30)                        # Target address
              12ee c225  st   [$25]       5590  st([sysArgs+1])                 #
              12ef 011a  ld   [$1a]       5591  ld([vLR+0])                     # Source address
              12f0 d224  st   [$24],x     5592  st([sysArgs+0],X)               #
              12f1 0d00  ld   [y,x]       5593  ld([Y,X])                       # Byte count
                                          5594  label('.slb1')                  #
.slb1:        12f2 c226  st   [$26]       5595  st([sysArgs+2])                 #
                                          5596
              12f3 0124  ld   [$24]       5597  ld([sysArgs+0])                 # Advance source address
              12f4 8001  adda $01         5598  adda(1)                         #
              12f5 d224  st   [$24],x     5599  st([sysArgs+0],X)               #
                                          5600
              12f6 0d00  ld   [y,x]       5601  ld([Y,X])                       # Copy byte
              12f7 1125  ld   [$25],x     5602  ld([sysArgs+1],X)               #
              12f8 c600  st   [x]         5603  st([X])                         #
                                          5604
              12f9 0125  ld   [$25]       5605  ld([sysArgs+1])                 # Advance target address
              12fa 8001  adda $01         5606  adda(1)                         #
              12fb c225  st   [$25]       5607  st([sysArgs+1])                 #
                                          5608
              12fc 0126  ld   [$26]       5609  ld([sysArgs+2])                 # Decrement byte count and loop
              12fd ecf2  bne  .slb1       5610  bne('.slb1')                    #
              12fe a001  suba $01         5611  suba(1)                         #
                                          5612
                                          5613  # XXX Unfinished
                                          5614
                                          5615  fillers(until=0xff)
              12ff 0200  nop              5616  align(0x100, size=0x100)
                                          5617
                                          5618
                                          5619  #-----------------------------------------------------------------------
                                          5620  #       More SYS functions, (0x1300)
                                          5621  #-----------------------------------------------------------------------
                                          5622
                                          5623  # sys_Multiply_u8, res:u16 = x:u8 * y:u8
                                          5624  # sysArgs0,1=res, sysArgs2=x, sysArgs3=y, sysArgs4=count
                                          5625  label('SYS_Multiply_u8_vX_48')
SYS_Multiply_u8_vX_48:
              1300 0128  ld   [$28]       5626  ld([sysArgs+4])                 #15,
              1301 a001  suba $01         5627  suba(1)                         #16, count--
                                          5628  bge('.sys_multiply_u8_19')      #17,
              1302 f407  bge  .sys_multiply_u8_19
              1303 c228  st   [$28]       5629  st([sysArgs+4])                 #18,
              1304 1403  ld   $03,y       5630  ld(hi('REENTER'),Y)             #19,
              1305 e0cb  jmp  y,$cb       5631  jmp(Y,'REENTER')                #20,
              1306 00f4  ld   $f4         5632  ld(-24/2)                       #21,
                                          5633
                                          5634  label('.sys_multiply_u8_19')
.sys_multiply_u8_19:
              1307 0124  ld   [$24]       5635  ld([sysArgs+0])                 #19,
              1308 3080  anda $80,x       5636  anda(128,X)                     #20,
              1309 8124  adda [$24]       5637  adda([sysArgs+0])               #21,
              130a c224  st   [$24]       5638  st([sysArgs+0])                 #22,
              130b 0500  ld   [x]         5639  ld([X])                         #23,
              130c 8125  adda [$25]       5640  adda([sysArgs+1])               #24,
              130d 8125  adda [$25]       5641  adda([sysArgs+1])               #25,
              130e c225  st   [$25]       5642  st([sysArgs+1])                 #26, result <<1
              130f 0126  ld   [$26]       5643  ld([sysArgs+2])                 #27,
                                          5644  bmi('.sys_multiply_u8_30')      #28, if(x & 0x80)
              1310 e819  blt  .sys_multiply_u8_30
              1311 8126  adda [$26]       5645  adda([sysArgs+2])               #29,
              1312 c226  st   [$26]       5646  st([sysArgs+2])                 #30, x <<= 1
              1313 0116  ld   [$16]       5647  ld([vPC])                       #31,
              1314 a002  suba $02         5648  suba(2)                         #32,
              1315 c216  st   [$16]       5649  st([vPC])                       #33, restart
              1316 1403  ld   $03,y       5650  ld(hi('NEXTY'),Y)               #34,
              1317 e000  jmp  y,$00       5651  jmp(Y,'NEXTY')                  #35,
              1318 00ed  ld   $ed         5652  ld(-38/2)                       #36,
                                          5653
                                          5654  label('.sys_multiply_u8_30')
.sys_multiply_u8_30:
              1319 c226  st   [$26]       5655  st([sysArgs+2])                 #30, x <<= 1
              131a 0124  ld   [$24]       5656  ld([sysArgs+0])                 #31,
              131b 8127  adda [$27]       5657  adda([sysArgs+3])               #32,
              131c c224  st   [$24]       5658  st([sysArgs+0])                 #33, res.lo += y
                                          5659  bmi('.sys_multiply_u8_36')      #34, check carry
              131d e82a  blt  .sys_multiply_u8_36
              131e a127  suba [$27]       5660  suba([sysArgs+3])               #35, initial value of res.lo
              131f 4127  ora  [$27]       5661  ora([sysArgs+3])                #36, carry in bit 7
              1320 3080  anda $80,x       5662  anda(0x80,X)                    #37, move carry to bit 0
              1321 0500  ld   [x]         5663  ld([X])                         #38,
              1322 8125  adda [$25]       5664  adda([sysArgs+1])               #39,
              1323 c225  st   [$25]       5665  st([sysArgs+1])                 #40, res.hi += carry
              1324 0116  ld   [$16]       5666  ld([vPC])                       #41,
              1325 a002  suba $02         5667  suba(2)                         #42,
              1326 c216  st   [$16]       5668  st([vPC])                       #43, restart
              1327 1403  ld   $03,y       5669  ld(hi('NEXTY'),Y)               #44,
              1328 e000  jmp  y,$00       5670  jmp(Y,'NEXTY')                  #45,
              1329 00e8  ld   $e8         5671  ld(-48/2)                       #46,
                                          5672
                                          5673  label('.sys_multiply_u8_36')
.sys_multiply_u8_36:
              132a 2127  anda [$27]       5674  anda([sysArgs+3])               #36, carry in bit 7
              132b 3080  anda $80,x       5675  anda(0x80,X)                    #37, move carry to bit 0
              132c 0500  ld   [x]         5676  ld([X])                         #38,
              132d 8125  adda [$25]       5677  adda([sysArgs+1])               #39,
              132e c225  st   [$25]       5678  st([sysArgs+1])                 #40, res.hi += carry
              132f 0116  ld   [$16]       5679  ld([vPC])                       #41,
              1330 a002  suba $02         5680  suba(2)                         #42,
              1331 c216  st   [$16]       5681  st([vPC])                       #43, restart
              1332 1403  ld   $03,y       5682  ld(hi('NEXTY'),Y)               #44,
              1333 e000  jmp  y,$00       5683  jmp(Y,'NEXTY')                  #45,
              1334 00e8  ld   $e8         5684  ld(-48/2)                       #46,
                                          5685
                                          5686  # leave some soom for updates
              1335 0200  nop              5687  fillers(until=0x40)
              1336 0200  nop
              1337 0200  nop
              * 11 times
                                          5688
                                          5689
                                          5690  # sys_OffsetVTableY, sysArgs0 = scanline:8, sysArgs1 = scanCount:8, sysArgs2,3 = videoTable:16
                                          5691  label('SYS_OffsetVTableY_vX_36')
SYS_OffsetVTableY_vX_36:
              1340 0124  ld   [$24]       5692  ld([sysArgs+0])                 #15, scanline
              1341 1126  ld   [$26],x     5693  ld([sysArgs+2],X)               #16,
              1342 1527  ld   [$27],y     5694  ld([sysArgs+3],Y)               #17,
              1343 ce00  st   [y,x]       5695  st([Y,X])                       #18, [videoTable] = scanline
              1344 8001  adda $01         5696  adda(1)                         #19,
              1345 c224  st   [$24]       5697  st([sysArgs+0])                 #20, scanline++
              1346 0126  ld   [$26]       5698  ld([sysArgs+2])                 #21,
              1347 8002  adda $02         5699  adda(2)                         #22,
              1348 c226  st   [$26]       5700  st([sysArgs+2])                 #23, videoTable += 2
              1349 0125  ld   [$25]       5701  ld([sysArgs+1])                 #24,
              134a a001  suba $01         5702  suba(1)                         #25,
                                          5703  beq('.sys_offsetvty_28')        #26,
              134b f053  beq  .sys_offsetvty_28
              134c c225  st   [$25]       5704  st([sysArgs+1])                 #27, scanCount--
              134d 0116  ld   [$16]       5705  ld([vPC])                       #28,
              134e a002  suba $02         5706  suba(2)                         #29,
              134f c216  st   [$16]       5707  st([vPC])                       #30, restart
              1350 1403  ld   $03,y       5708  ld(hi('REENTER'),Y)             #31,
              1351 e0cb  jmp  y,$cb       5709  jmp(Y,'REENTER')                #32,
              1352 00ee  ld   $ee         5710  ld(-36/2)                       #33,
                                          5711  label('.sys_offsetvty_28')
.sys_offsetvty_28:
              1353 1403  ld   $03,y       5712  ld(hi('NEXTY'),Y)               #28,
              1354 e000  jmp  y,$00       5713  jmp(Y,'NEXTY')                  #29,
              1355 00f0  ld   $f0         5714  ld(-32/2)                       #30,
                                          5715
                                          5716  # leave some soom for updates
              1356 0200  nop              5717  fillers(until=0x60)
              1357 0200  nop
              1358 0200  nop
              * 10 times
                                          5718
                                          5719
                                          5720  # sys_FillByteSeq, sysArgs0,1=dst, sysArg2=start, sysArg3=step, sysArg4=count
                                          5721  label('SYS_FillByteSeq_vX_36')
SYS_FillByteSeq_vX_36:
              1360 1525  ld   [$25],y     5722  ld([sysArgs+1],Y)               #15 dst pointer
              1361 1124  ld   [$24],x     5723  ld([sysArgs+0],X)               #16,
              1362 0124  ld   [$24]       5724  ld([sysArgs+0])                 #17,
              1363 8001  adda $01         5725  adda(1)                         #18,
              1364 c224  st   [$24]       5726  st([sysArgs+0])                 #19, dst++
              1365 0126  ld   [$26]       5727  ld([sysArgs+2])                 #20,
              1366 ce00  st   [y,x]       5728  st([Y,X])                       #21, start
              1367 8127  adda [$27]       5729  adda([sysArgs+3])               #22,
              1368 c226  st   [$26]       5730  st([sysArgs+2])                 #23, start += step
              1369 0128  ld   [$28]       5731  ld([sysArgs+4])                 #24,
              136a a001  suba $01         5732  suba(1)                         #25,
                                          5733  beq('.sys_fillbyteseq_28')      #26,
              136b f073  beq  .sys_fillbyteseq_28
              136c c228  st   [$28]       5734  st([sysArgs+4])                 #27,
              136d 0116  ld   [$16]       5735  ld([vPC])                       #28,
              136e a002  suba $02         5736  suba(2)                         #29,
              136f c216  st   [$16]       5737  st([vPC])                       #30, restart
              1370 1403  ld   $03,y       5738  ld(hi('REENTER'),Y)             #31,
              1371 e0cb  jmp  y,$cb       5739  jmp(Y,'REENTER')                #32,
              1372 00ee  ld   $ee         5740  ld(-36/2)                       #33,
                                          5741  label('.sys_fillbyteseq_28')
.sys_fillbyteseq_28:
              1373 1403  ld   $03,y       5742  ld(hi('NEXTY'),Y)               #28,
              1374 e000  jmp  y,$00       5743  jmp(Y,'NEXTY')                  #29,
              1375 00f0  ld   $f0         5744  ld(-32/2)                       #30,
                                          5745
                                          5746  # leave some soom for updates
              1376 0200  nop              5747  fillers(until=0x80)
              1377 0200  nop
              1378 0200  nop
              * 10 times
                                          5748
                                          5749
                                          5750  # sys_AddInt8Array, sysArgs0,1=src, sysArgs2,3=dst, sysArgs4=index, sysArgs5=count, dst(i) += src(i)
                                          5751  label('SYS_AddInt8Array_vX_40')
SYS_AddInt8Array_vX_40:
              1380 0124  ld   [$24]       5752  ld([sysArgs+0])                 #15,
              1381 9128  adda [$28],x     5753  adda([sysArgs+4],X)             #16,
              1382 1525  ld   [$25],y     5754  ld([sysArgs+1],Y)               #17,
              1383 0d00  ld   [y,x]       5755  ld([Y,X])                       #18,
              1384 c21d  st   [$1d]       5756  st([vTmp])                      #19
              1385 0126  ld   [$26]       5757  ld([sysArgs+2])                 #20,
              1386 9128  adda [$28],x     5758  adda([sysArgs+4],X)             #21,
              1387 1527  ld   [$27],y     5759  ld([sysArgs+3],Y)               #22,
              1388 011d  ld   [$1d]       5760  ld([vTmp])                      #23
              1389 8d00  adda [y,x]       5761  adda([Y,X])                     #24,
              138a ce00  st   [y,x]       5762  st([Y,X])                       #25,
              138b 0129  ld   [$29]       5763  ld([sysArgs+5])                 #26,
              138c a001  suba $01         5764  suba(1)                         #27,
                                          5765  beq('.sys_addint8Array_30')     #28,
              138d f098  beq  .sys_addint8Array_30
              138e c229  st   [$29]       5766  st([sysArgs+5])                 #29,
              138f 0128  ld   [$28]       5767  ld([sysArgs+4])                 #30,
              1390 8001  adda $01         5768  adda(1)                         #31,
              1391 c228  st   [$28]       5769  st([sysArgs+4])                 #32, index++
              1392 0116  ld   [$16]       5770  ld([vPC])                       #33,
              1393 a002  suba $02         5771  suba(2)                         #34,
              1394 c216  st   [$16]       5772  st([vPC])                       #35,
              1395 1403  ld   $03,y       5773  ld(hi('NEXTY'),Y)               #36,
              1396 e000  jmp  y,$00       5774  jmp(Y,'NEXTY')                  #37,
              1397 00ec  ld   $ec         5775  ld(-40/2)                       #38,
                                          5776  label('.sys_addint8Array_30')
.sys_addint8Array_30:
              1398 1403  ld   $03,y       5777  ld(hi('NEXTY'),Y)               #30,
              1399 e000  jmp  y,$00       5778  jmp(Y,'NEXTY')                  #31,
              139a 00ef  ld   $ef         5779  ld(-34/2)                       #32,
                                          5780
                                          5781  # leave some soom for updates
              139b 0200  nop              5782  fillers(until=0xa0)
              139c 0200  nop
              139d 0200  nop
              * 5 times
                                          5783
                                          5784
                                          5785  # sys_ParityFill, sysArgs0,1=borderColour:fillColour, sysArgs2,3=X:Y start address
                                          5786  #                 sysArgs4=countXY, sysArgs6=fill toggle, sysArgs7=replace colour
                                          5787  label('SYS_ParityFill_vX_44')
SYS_ParityFill_vX_44:
              13a0 1527  ld   [$27],y     5788  ld([sysArgs+3],Y)               #15,
              13a1 1126  ld   [$26],x     5789  ld([sysArgs+2],X)               #16,
              13a2 0126  ld   [$26]       5790  ld([sysArgs+2])                 #17,
              13a3 8001  adda $01         5791  adda(1)                         #18,
              13a4 c226  st   [$26]       5792  st([sysArgs+2])                 #19, x++
              13a5 0128  ld   [$28]       5793  ld([sysArgs+4])                 #20,
              13a6 a001  suba $01         5794  suba(1)                         #21, countX--
                                          5795  bge('.sys_parityfill_24')       #22,
              13a7 f4be  bge  .sys_parityfill_24
              13a8 c228  st   [$28]       5796  st([sysArgs+4])                 #23,
              13a9 0127  ld   [$27]       5797  ld([sysArgs+3])                 #24,
              13aa 8001  adda $01         5798  adda(1)                         #25,
              13ab c227  st   [$27]       5799  st([sysArgs+3])                 #26, y++
              13ac 0129  ld   [$29]       5800  ld([sysArgs+5])                 #27,
              13ad a001  suba $01         5801  suba(1)                         #28, countY--
              13ae c229  st   [$29]       5802  st([sysArgs+5])                 #29,
                                          5803  bne('.sys_parityfill_32')       #30,
              13af ecb3  bne  .sys_parityfill_32
              13b0 1403  ld   $03,y       5804  ld(hi('REENTER'),Y)             #31,
              13b1 e0cb  jmp  y,$cb       5805  jmp(Y,'REENTER')                #32,
              13b2 00ee  ld   $ee         5806  ld(-36/2)                       #33,
                                          5807  label('.sys_parityfill_32')
.sys_parityfill_32:
              13b3 0182  ld   [$82]       5808  ld([0x82])                      #32,
              13b4 c226  st   [$26]       5809  st([sysArgs+2])                 #33, restore x
              13b5 0183  ld   [$83]       5810  ld([0x83])                      #34,
              13b6 c228  st   [$28]       5811  st([sysArgs+4])                 #35, restore countX
              13b7 0184  ld   [$84]       5812  ld([0x84])                      #36,
              13b8 c22a  st   [$2a]       5813  st([sysArgs+6])                 #37, restore fill toggle
              13b9 0116  ld   [$16]       5814  ld([vPC])                       #38,
              13ba a002  suba $02         5815  suba(2)                         #39,
              13bb c216  st   [$16]       5816  st([vPC])                       #40, restart
              13bc e000  jmp  y,$00       5817  jmp(Y,'NEXTY')                  #41,
              13bd 00ea  ld   $ea         5818  ld(-44/2)                       #42,
                                          5819
                                          5820  label('.sys_parityfill_24')
.sys_parityfill_24:
              13be 012a  ld   [$2a]       5821  ld([sysArgs+6])                 #24, check fill toggle
                                          5822  bne('.sys_parityfill_27')       #25,
              13bf ecc9  bne  .sys_parityfill_27
              13c0 0d00  ld   [y,x]       5823  ld([Y,X])                       #26, get pixel
              13c1 6124  xora [$24]       5824  xora([sysArgs+0])               #27, check border colour
                                          5825  beq('.sys_parityfill_30')       #28,
              13c2 f0d8  beq  .sys_parityfill_30
              13c3 0116  ld   [$16]       5826  ld([vPC])                       #29,
              13c4 a002  suba $02         5827  suba(2)                         #30,
              13c5 c216  st   [$16]       5828  st([vPC])                       #31, restart
              13c6 1403  ld   $03,y       5829  ld(hi('NEXTY'),Y)               #32,
              13c7 e000  jmp  y,$00       5830  jmp(Y,'NEXTY')                  #33,
              13c8 00ee  ld   $ee         5831  ld(-36/2)                       #34,
                                          5832
                                          5833  label('.sys_parityfill_27')
.sys_parityfill_27:
              13c9 6124  xora [$24]       5834  xora([sysArgs+0])               #27, check border colour
                                          5835  beq('.sys_parityfill_30')       #28,
              13ca f0d8  beq  .sys_parityfill_30
              13cb 0d00  ld   [y,x]       5836  ld([Y,X])                       #29, get pixel
              13cc 612b  xora [$2b]       5837  xora([sysArgs+7])               #30, check replace colour
              13cd ecd0  bne  $13d0       5838  bne(pc()+3)                     #31, ignore replace colour
              13ce fcd1  bra  $13d1       5839  bra(pc()+3)                     #32,
              13cf 0125  ld   [$25]       5840  ld([sysArgs+1])                 #33, fill colour
              13d0 0d00  ld   [y,x]       5841  ld([Y,X])                       #33! get pixel
              13d1 ce00  st   [y,x]       5842  st([Y,X])                       #34, set pixel
              13d2 0116  ld   [$16]       5843  ld([vPC])                       #35,
              13d3 a002  suba $02         5844  suba(2)                         #36,
              13d4 c216  st   [$16]       5845  st([vPC])                       #37, restart
              13d5 1403  ld   $03,y       5846  ld(hi('NEXTY'),Y)               #38,
              13d6 e000  jmp  y,$00       5847  jmp(Y,'NEXTY')                  #39,
              13d7 00eb  ld   $eb         5848  ld(-42/2)                       #40,
                                          5849
                                          5850  label('.sys_parityfill_30')
.sys_parityfill_30:
              13d8 012a  ld   [$2a]       5851  ld([sysArgs+6])                 #30,
              13d9 6001  xora $01         5852  xora(0x01)                      #31,
              13da c22a  st   [$2a]       5853  st([sysArgs+6])                 #32, toggle fill
              13db 0116  ld   [$16]       5854  ld([vPC])                       #33,
              13dc a002  suba $02         5855  suba(2)                         #34,
              13dd c216  st   [$16]       5856  st([vPC])                       #35, restart
              13de 1403  ld   $03,y       5857  ld(hi('NEXTY'),Y)               #36,
              13df e000  jmp  y,$00       5858  jmp(Y,'NEXTY')                  #37,
              13e0 00ec  ld   $ec         5859  ld(-40/2)                       #38,
                                          5860
                                          5861
              13e1 0200  nop              5862  fillers(until=0xff)
              13e2 0200  nop
              13e3 0200  nop
              * 30 times
              13ff 0200  nop              5863  align(0x100, size=0x100)
                                          5864
                                          5865  #-----------------------------------------------------------------------
                                          5866  #       More vCPU instruction implementations, (0x1400)
                                          5867  #-----------------------------------------------------------------------
                                          5868
                                          5869  # JGT implementation
                                          5870  label('jgt#13')
jgt#13:       1400 0119  ld   [$19]       5871  ld([vAC+1])                     #13
              1401 e80a  blt  .jgt#16     5872  blt('.jgt#16')                  #14 if vAC.hi < 0
              1402 4118  ora  [$18]       5873  ora([vAC])                      #15
              1403 ec10  bne  .jgt#18     5874  bne('.jgt#18')                  #16 if (vAC.hi OR vAC.lo) != 0
              1404 0116  ld   [$16]       5875  ld([vPC])                       #17
              1405 8001  adda $01         5876  adda(1)                         #18
              1406 c216  st   [$16]       5877  st([vPC])                       #19
              1407 1403  ld   $03,y       5878  ld(hi('NEXTY'),Y)               #20
              1408 e000  jmp  y,$00       5879  jmp(Y,'NEXTY')                  #21
              1409 00f4  ld   $f4         5880  ld(-24/2)                       #22
                                          5881  label('.jgt#16')
.jgt#16:      140a 0116  ld   [$16]       5882  ld([vPC])                       #16
              140b 8001  adda $01         5883  adda(1)                         #17
              140c c216  st   [$16]       5884  st([vPC])                       #18
              140d 1403  ld   $03,y       5885  ld(hi('REENTER'),Y)             #19
              140e e0cb  jmp  y,$cb       5886  jmp(Y,'REENTER')                #20
              140f 00f4  ld   $f4         5887  ld(-24/2)                       #21
                                          5888  label('.jgt#18')
.jgt#18:      1410 1517  ld   [$17],y     5889  ld([vPC+1],Y)                   #18 vPC.hi
              1411 0d00  ld   [y,x]       5890  ld([Y,X])                       #19 address of branch destination
              1412 c216  st   [$16]       5891  st([vPC])                       #20
              1413 de00  st   [y,x++]     5892  st([Y,Xpp])                     #21
              1414 0d00  ld   [y,x]       5893  ld([Y,X])                       #22 hi address of jump destination
              1415 c217  st   [$17]       5894  st([vPC+1])                     #23
              1416 1403  ld   $03,y       5895  ld(hi('NEXTY'),Y)               #24
              1417 e000  jmp  y,$00       5896  jmp(Y,'NEXTY')                  #25
              1418 00f2  ld   $f2         5897  ld(-28/2)                       #26
                                          5898
                                          5899  # JLE implementation
                                          5900  label('jle#13')
jle#13:       1419 0119  ld   [$19]       5901  ld([vAC+1])                     #13
              141a e827  blt  .jle#16     5902  blt('.jle#16')                  #14 if vAC.hi < 0
              141b 4118  ora  [$18]       5903  ora([vAC])                      #15
              141c ec30  bne  .jle#18     5904  bne('.jle#18')                  #16 if (vAC.hi OR vAC.lo) != 0
              141d 0116  ld   [$16]       5905  ld([vPC])                       #17
              141e 1517  ld   [$17],y     5906  ld([vPC+1],Y)                   #18 vPC.hi
              141f 0d00  ld   [y,x]       5907  ld([Y,X])                       #19 address of branch destination
              1420 c216  st   [$16]       5908  st([vPC])                       #20
              1421 de00  st   [y,x++]     5909  st([Y,Xpp])                     #21
              1422 0d00  ld   [y,x]       5910  ld([Y,X])                       #22 hi address of jump destination
              1423 c217  st   [$17]       5911  st([vPC+1])                     #23
              1424 1403  ld   $03,y       5912  ld(hi('NEXTY'),Y)               #24
              1425 e000  jmp  y,$00       5913  jmp(Y,'NEXTY')                  #25
              1426 00f2  ld   $f2         5914  ld(-28/2)                       #26
                                          5915  label('.jle#16')
.jle#16:      1427 1517  ld   [$17],y     5916  ld([vPC+1],Y)                   #16 vPC.hi
              1428 0d00  ld   [y,x]       5917  ld([Y,X])                       #17 address of branch destination
              1429 c216  st   [$16]       5918  st([vPC])                       #18
              142a de00  st   [y,x++]     5919  st([Y,Xpp])                     #19
              142b 0d00  ld   [y,x]       5920  ld([Y,X])                       #20 hi address of jump destination
              142c c217  st   [$17]       5921  st([vPC+1])                     #21
              142d 1403  ld   $03,y       5922  ld(hi('NEXTY'),Y)               #22
              142e e000  jmp  y,$00       5923  jmp(Y,'NEXTY')                  #23
              142f 00f3  ld   $f3         5924  ld(-26/2)                       #24
                                          5925  label('.jle#18')
.jle#18:      1430 8001  adda $01         5926  adda(1)                         #18
              1431 c216  st   [$16]       5927  st([vPC])                       #19
              1432 1403  ld   $03,y       5928  ld(hi('NEXTY'),Y)               #20
              1433 e000  jmp  y,$00       5929  jmp(Y,'NEXTY')                  #21
              1434 00f4  ld   $f4         5930  ld(-24/2)                       #22
                                          5931
                                          5932  # JGE implementation
                                          5933  label('jge#13')
jge#13:       1435 0119  ld   [$19]       5934  ld([vAC+1])                     #13
              1436 e841  blt  .jge#16     5935  blt('.jge#16')                  #14 if vAC.hi < 0
              1437 0116  ld   [$16]       5936  ld([vPC])                       #15
              1438 1517  ld   [$17],y     5937  ld([vPC+1],Y)                   #16 vPC.hi
              1439 0d00  ld   [y,x]       5938  ld([Y,X])                       #17 address of branch destination
              143a c216  st   [$16]       5939  st([vPC])                       #18
              143b de00  st   [y,x++]     5940  st([Y,Xpp])                     #19
              143c 0d00  ld   [y,x]       5941  ld([Y,X])                       #20 hi address of jump destination
              143d c217  st   [$17]       5942  st([vPC+1])                     #21
              143e 1403  ld   $03,y       5943  ld(hi('NEXTY'),Y)               #22
              143f e000  jmp  y,$00       5944  jmp(Y,'NEXTY')                  #23
              1440 00f3  ld   $f3         5945  ld(-26/2)                       #24
                                          5946  label('.jge#16')
.jge#16:      1441 8001  adda $01         5947  adda(1)                         #16
              1442 c216  st   [$16]       5948  st([vPC])                       #17
              1443 1403  ld   $03,y       5949  ld(hi('NEXTY'),Y)               #18
              1444 e000  jmp  y,$00       5950  jmp(Y,'NEXTY')                  #19
              1445 00f5  ld   $f5         5951  ld(-22/2)                       #20
                                          5952
                                          5953  # PEEKA+ implementation
                                          5954  label('peeka+#13')
peeka+#13:    1446 c21d  st   [$1d]       5955  st([vTmp])                      #13
              1447 1519  ld   [$19],y     5956  ld([vAC+1],Y)                   #14
              1448 0118  ld   [$18]       5957  ld([vAC])                       #15
              1449 1200  ld   ac,x        5958  ld(AC,X)                        #16
              144a 8001  adda $01         5959  adda(1)                         #17
              144b c218  st   [$18]       5960  st([vAC])                       #18
              144c f053  beq  .peeka+#21  5961  beq('.peeka+#21')               #19 if low byte is 0x00
              144d 0d00  ld   [y,x]       5962  ld([Y,X])                       #20 peek [vAC]
              144e 111d  ld   [$1d],x     5963  ld([vTmp],X)                    #21 dst var
              144f c600  st   [x]         5964  st([X])                         #22 dst = peek [vAC]
              1450 1403  ld   $03,y       5965  ld(hi('REENTER'),Y)             #23
              1451 e0cb  jmp  y,$cb       5966  jmp(Y,'REENTER')                #24
              1452 00f2  ld   $f2         5967  ld(-28/2)                       #25
                                          5968  label('.peeka+#21')
.peeka+#21:   1453 111d  ld   [$1d],x     5969  ld([vTmp],X)                    #21 dst var
              1454 c600  st   [x]         5970  st([X])                         #22 dst = peek [vAC]
              1455 0119  ld   [$19]       5971  ld([vAC+1])                     #23
              1456 8001  adda $01         5972  adda(1)                         #24
              1457 c219  st   [$19]       5973  st([vAC+1])                     #25
              1458 1403  ld   $03,y       5974  ld(hi('NEXTY'),Y)               #26
              1459 e000  jmp  y,$00       5975  jmp(Y,'NEXTY')                  #27
              145a 00f1  ld   $f1         5976  ld(-30/2)                       #28
                                          5977
                                          5978  # ADDVW implementation
                                          5979  label('addvw#13')
addvw#13:     145b 1517  ld   [$17],y     5980  ld([vPC+1],Y)                   #13 vPC.hi
              145c c22a  st   [$2a]       5981  st([sysArgs+6])                 #14 src var addr
              145d de00  st   [y,x++]     5982  st([Y,Xpp])                     #15 X++
              145e 00f4  ld   $f4         5983  ld(min(0,maxTicks-54/2))        #16
              145f 8115  adda [$15]       5984  adda([vTicks])                  #17
              1460 e89e  blt  .addvw#20   5985  blt('.addvw#20')                #18 not enough time left, so retry
              1461 0d00  ld   [y,x]       5986  ld([Y,X])                       #19
              1462 c22b  st   [$2b]       5987  st([sysArgs+7])                 #20 dst var addr
              1463 1400  ld   $00,y       5988  ld(0,Y)                         #21
              1464 112a  ld   [$2a],x     5989  ld([sysArgs+6],X)               #22
              1465 0500  ld   [x]         5990  ld([X])                         #23 src low value
              1466 c218  st   [$18]       5991  st([vAC])                       #24
              1467 de00  st   [y,x++]     5992  st([Y,Xpp])                     #25 X++
              1468 0500  ld   [x]         5993  ld([X])                         #26 src hi value
              1469 c219  st   [$19]       5994  st([vAC+1])                     #27
              146a 112b  ld   [$2b],x     5995  ld([sysArgs+7],X)               #28
              146b 0118  ld   [$18]       5996  ld([vAC])                       #29 Low byte
              146c c21d  st   [$1d]       5997  st([vTmp])                      #30
              146d 8500  adda [x]         5998  adda([X])                       #31
              146e c218  st   [$18]       5999  st([vAC])                       #32 vAC.lo = low result
              146f e881  blt  .addvw#35   6000  bmi('.addvw#35')                #33 Now figure out if there was a carry
              1470 0500  ld   [x]         6001  ld([X])                         #34
              1471 de00  st   [y,x++]     6002  st([Y,Xpp])                     #35
              1472 411d  ora  [$1d]       6003  ora([vTmp])                     #36
              1473 e891  blt  .addvw#39   6004  bmi('.addvw#39')                #37 If Carry == 1
              1474 0500  ld   [x]         6005  ld([X])                         #38
              1475 8119  adda [$19]       6006  adda([vAC+1])                   #39
              1476 c219  st   [$19]       6007  st([vAC+1])                     #40 vAC.hi = high result
              1477 c600  st   [x]         6008  st([X])                         #41 dst.hi = high result
              1478 112b  ld   [$2b],x     6009  ld([sysArgs+7],X)               #42
              1479 0118  ld   [$18]       6010  ld([vAC])                       #43
              147a c600  st   [x]         6011  st([X])                         #44 dst.lo = low result
              147b 0116  ld   [$16]       6012  ld([vPC])                       #45
              147c 8001  adda $01         6013  adda(1)                         #46
              147d c216  st   [$16]       6014  st([vPC])                       #47
              147e 1403  ld   $03,y       6015  ld(hi('NEXTY'),Y)               #48
              147f e000  jmp  y,$00       6016  jmp(Y,'NEXTY')                  #49
              1480 00e6  ld   $e6         6017  ld(-52/2)                       #50
                                          6018
                                          6019  label('.addvw#35')
.addvw#35:    1481 de00  st   [y,x++]     6020  st([Y,Xpp])                     #35
              1482 211d  anda [$1d]       6021  anda([vTmp])                    #36
              1483 e891  blt  .addvw#39   6022  bmi('.addvw#39')                #37 If Carry == 1
              1484 0500  ld   [x]         6023  ld([X])                         #38
              1485 8119  adda [$19]       6024  adda([vAC+1])                   #39
              1486 c219  st   [$19]       6025  st([vAC+1])                     #40 vAC.hi = high result
              1487 c600  st   [x]         6026  st([X])                         #41 dst.hi = high result
              1488 112b  ld   [$2b],x     6027  ld([sysArgs+7],X)               #42
              1489 0118  ld   [$18]       6028  ld([vAC])                       #43
              148a c600  st   [x]         6029  st([X])                         #44 dst.lo = low result
              148b 0116  ld   [$16]       6030  ld([vPC])                       #45
              148c 8001  adda $01         6031  adda(1)                         #46
              148d c216  st   [$16]       6032  st([vPC])                       #47
              148e 1403  ld   $03,y       6033  ld(hi('NEXTY'),Y)               #48
              148f e000  jmp  y,$00       6034  jmp(Y,'NEXTY')                  #49
              1490 00e6  ld   $e6         6035  ld(-52/2)                       #50
                                          6036
                                          6037  label('.addvw#39')
.addvw#39:    1491 8001  adda $01         6038  adda(1)                         #39
              1492 8119  adda [$19]       6039  adda([vAC+1])                   #40
              1493 c219  st   [$19]       6040  st([vAC+1])                     #41 vAC.hi = high result
              1494 c600  st   [x]         6041  st([X])                         #42 dst.hi = high result
              1495 112b  ld   [$2b],x     6042  ld([sysArgs+7],X)               #43
              1496 0118  ld   [$18]       6043  ld([vAC])                       #44
              1497 c600  st   [x]         6044  st([X])                         #45 dst.lo = low result
              1498 0116  ld   [$16]       6045  ld([vPC])                       #46
              1499 8001  adda $01         6046  adda(1)                         #47
              149a c216  st   [$16]       6047  st([vPC])                       #48
              149b 1403  ld   $03,y       6048  ld(hi('REENTER'),Y)             #49
              149c e0cb  jmp  y,$cb       6049  jmp(Y,'REENTER')                #50
              149d 00e5  ld   $e5         6050  ld(-54/2)                       #51
                                          6051
                                          6052  label('.addvw#20')
.addvw#20:    149e 0116  ld   [$16]       6053  ld([vPC])                       #20 retry instruction
              149f a002  suba $02         6054  suba(2)                         #21
              14a0 c216  st   [$16]       6055  st([vPC])                       #22
              14a1 1403  ld   $03,y       6056  ld(hi('REENTER'),Y)             #23
              14a2 e0cb  jmp  y,$cb       6057  jmp(Y,'REENTER')                #24
              14a3 00f2  ld   $f2         6058  ld(-28/2)                       #25
                                          6059
                                          6060
                                          6061  # SUBVW implementation
                                          6062  label('subvw#13')
subvw#13:     14a4 1517  ld   [$17],y     6063  ld([vPC+1],Y)                   #13 vPC.hi
              14a5 c22a  st   [$2a]       6064  st([sysArgs+6])                 #14 src var addr
              14a6 de00  st   [y,x++]     6065  st([Y,Xpp])                     #15 X++
              14a7 8001  adda $01         6066  adda(1)                         #16
              14a8 c21d  st   [$1d]       6067  st([vTmp])                      #17 src var high addr
              14a9 00f4  ld   $f4         6068  ld(min(0,maxTicks-54/2))        #18
              14aa 8115  adda [$15]       6069  adda([vTicks])                  #19
              14ab e8df  blt  .subvw#22   6070  blt('.subvw#22')                #20 not enough time left, so retry
              14ac 0d00  ld   [y,x]       6071  ld([Y,X])                       #21
              14ad c22b  st   [$2b]       6072  st([sysArgs+7])                 #22 dst var addr
              14ae 1400  ld   $00,y       6073  ld(0,Y)                         #23
              14af 112b  ld   [$2b],x     6074  ld([sysArgs+7],X)               #24
              14b0 0500  ld   [x]         6075  ld([X])                         #25 dst low value
              14b1 c218  st   [$18]       6076  st([vAC])                       #26
              14b2 de00  st   [y,x++]     6077  st([Y,Xpp])                     #27 X++
              14b3 0500  ld   [x]         6078  ld([X])                         #28 dst hi value
              14b4 c219  st   [$19]       6079  st([vAC+1])                     #29
              14b5 112a  ld   [$2a],x     6080  ld([sysArgs+6],X)               #30
              14b6 0118  ld   [$18]       6081  ld([vAC])                       #31 Low byte
              14b7 e8cc  blt  .subvw#34   6082  bmi('.subvw#34')                #32
              14b8 a500  suba [x]         6083  suba([X])                       #33
              14b9 c218  st   [$18]       6084  st([vAC])                       #34 Store low result
              14ba 4500  ora  [x]         6085  ora([X])                        #35 Carry in bit 7
              14bb 3080  anda $80,x       6086  anda(0x80,X)                    #36 Move carry to bit 0
              14bc 0119  ld   [$19]       6087  ld([vAC+1])                     #37
              14bd a500  suba [x]         6088  suba([X])                       #38
              14be 111d  ld   [$1d],x     6089  ld([vTmp],X)                    #39
              14bf a500  suba [x]         6090  suba([X])                       #40
              14c0 c219  st   [$19]       6091  st([vAC+1])                     #41
              14c1 112b  ld   [$2b],x     6092  ld([sysArgs+7],X)               #42
              14c2 0118  ld   [$18]       6093  ld([vAC])                       #43
              14c3 de00  st   [y,x++]     6094  st([Y,Xpp])                     #44
              14c4 0119  ld   [$19]       6095  ld([vAC+1])                     #45
              14c5 c600  st   [x]         6096  st([X])                         #46
              14c6 0116  ld   [$16]       6097  ld([vPC])                       #47
              14c7 8001  adda $01         6098  adda(1)                         #48
              14c8 c216  st   [$16]       6099  st([vPC])                       #49
              14c9 1403  ld   $03,y       6100  ld(hi('NEXTY'),Y)               #50
              14ca e000  jmp  y,$00       6101  jmp(Y,'NEXTY')                  #51
              14cb 00e5  ld   $e5         6102  ld(-54/2)                       #52
                                          6103
                                          6104  label('.subvw#34')
.subvw#34:    14cc c218  st   [$18]       6105  st([vAC])                       #34 Store low result
              14cd 2500  anda [x]         6106  anda([X])                       #35 Carry in bit 7
              14ce 3080  anda $80,x       6107  anda(0x80,X)                    #36 Move carry to bit 0
              14cf 0119  ld   [$19]       6108  ld([vAC+1])                     #37
              14d0 a500  suba [x]         6109  suba([X])                       #38
              14d1 111d  ld   [$1d],x     6110  ld([vTmp],X)                    #39
              14d2 a500  suba [x]         6111  suba([X])                       #40
              14d3 c219  st   [$19]       6112  st([vAC+1])                     #41
              14d4 112b  ld   [$2b],x     6113  ld([sysArgs+7],X)               #42
              14d5 0118  ld   [$18]       6114  ld([vAC])                       #43
              14d6 de00  st   [y,x++]     6115  st([Y,Xpp])                     #44
              14d7 0119  ld   [$19]       6116  ld([vAC+1])                     #45
              14d8 c600  st   [x]         6117  st([X])                         #46
              14d9 0116  ld   [$16]       6118  ld([vPC])                       #47
              14da 8001  adda $01         6119  adda(1)                         #48
              14db c216  st   [$16]       6120  st([vPC])                       #49
              14dc 1403  ld   $03,y       6121  ld(hi('NEXTY'),Y)               #50
              14dd e000  jmp  y,$00       6122  jmp(Y,'NEXTY')                  #51
              14de 00e5  ld   $e5         6123  ld(-54/2)                       #52
                                          6124
                                          6125  label('.subvw#22')
.subvw#22:    14df 0116  ld   [$16]       6126  ld([vPC])                       #22 retry instruction
              14e0 a002  suba $02         6127  suba(2)                         #23
              14e1 c216  st   [$16]       6128  st([vPC])                       #24
              14e2 1403  ld   $03,y       6129  ld(hi('REENTER'),Y)             #25
              14e3 e0cb  jmp  y,$cb       6130  jmp(Y,'REENTER')                #26
              14e4 00f1  ld   $f1         6131  ld(-30/2)                       #27
                                          6132
                                          6133
                                          6134  # PREFX3 implementation
                                          6135  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2099#p2099
                                          6136  label('prefx3#13')
prefx3#13:    14e5 0116  ld   [$16]       6137  ld([vPC])                       #13
              14e6 8002  adda $02         6138  adda(2)                         #14
              14e7 c216  st   [$16]       6139  st([vPC])                       #15 Advance vPC
              14e8 0021  ld   $21         6140  ld(hi('PREFX3_PAGE'))           #16 ENTER is at $(n-1)ff, where n = instruction page
              14e9 c202  st   [$02]       6141  st([vCpuSelect])                #17
              14ea 9401  adda $01,y       6142  adda(1,Y)                       #18
              14eb e000  jmp  y,$00       6143  jmp(Y,'NEXTY')                  #19
              14ec 00f5  ld   $f5         6144  ld(-22/2)                       #20
                                          6145
                                          6146  # PREFX2 implementation
                                          6147  label('prefx2#13')
prefx2#13:    14ed 0116  ld   [$16]       6148  ld([vPC])                       #13
              14ee 8001  adda $01         6149  adda(1)                         #14
              14ef c216  st   [$16]       6150  st([vPC])                       #15 Advance vPC
              14f0 0022  ld   $22         6151  ld(hi('PREFX2_PAGE'))           #16 ENTER is at $(n-1)ff, where n = instruction page
              14f1 c202  st   [$02]       6152  st([vCpuSelect])                #17
              14f2 9401  adda $01,y       6153  adda(1,Y)                       #18
              14f3 e000  jmp  y,$00       6154  jmp(Y,'NEXTY')                  #19
              14f4 00f5  ld   $f5         6155  ld(-22/2)                       #20
                                          6156
                                          6157  # PREFX1 implementation
                                          6158  label('prefx1#13')
prefx1#13:    14f5 c202  st   [$02]       6159  st([vCpuSelect])                #13
              14f6 9401  adda $01,y       6160  adda(1,Y)                       #14
              14f7 e000  jmp  y,$00       6161  jmp(Y,'NEXTY')                  #15
              14f8 00f7  ld   $f7         6162  ld(-18/2)                       #16
                                          6163
                                          6164
              14f9 0200  nop              6165  fillers(until=0xff)
              14fa 0200  nop
              14fb 0200  nop
              * 6 times
              14ff 0200  nop              6166  align(0x100, size=0x100)
                                          6167
                                          6168  #-----------------------------------------------------------------------
                                          6169  #       More vCPU instruction implementations, (0x1500)
                                          6170  #-----------------------------------------------------------------------
                                          6171
                                          6172  # ADDI implementation
                                          6173  label('addi#13')
addi#13:      1500 8118  adda [$18]       6174  adda([vAC])                     #13
              1501 c218  st   [$18]       6175  st([vAC])                       #14 Store low result
              1502 e80c  blt  .addi#17    6176  bmi('.addi#17')                 #15 Now figure out if there was a carry
              1503 a11d  suba [$1d]       6177  suba([vTmp])                    #16 Gets back the initial value of vAC
              1504 411d  ora  [$1d]       6178  ora([vTmp])                     #17 Carry in bit 7
              1505 3080  anda $80,x       6179  anda(0x80,X)                    #18 Move carry to bit 0
              1506 0500  ld   [x]         6180  ld([X])                         #19
              1507 8119  adda [$19]       6181  adda([vAC+1])                   #20 Add the high bytes with carry
              1508 c219  st   [$19]       6182  st([vAC+1])                     #21 Store high result
              1509 1403  ld   $03,y       6183  ld(hi('NEXTY'),Y)               #22
              150a e000  jmp  y,$00       6184  jmp(Y,'NEXTY')                  #23
              150b 00f3  ld   $f3         6185  ld(-26/2)                       #24
                                          6186  label('.addi#17')
.addi#17:     150c 211d  anda [$1d]       6187  anda([vTmp])                    #17 Carry in bit 7
              150d 3080  anda $80,x       6188  anda(0x80,X)                    #18 Move carry to bit 0
              150e 0500  ld   [x]         6189  ld([X])                         #19
              150f 8119  adda [$19]       6190  adda([vAC+1])                   #20 Add the high bytes with carry
              1510 c219  st   [$19]       6191  st([vAC+1])                     #21 Store high result
              1511 1403  ld   $03,y       6192  ld(hi('NEXTY'),Y)               #22
              1512 e000  jmp  y,$00       6193  jmp(Y,'NEXTY')                  #23
              1513 00f3  ld   $f3         6194  ld(-26/2)                       #24
                                          6195
                                          6196  # SUBI implementation
                                          6197  label('subi#13')
subi#13:      1514 0118  ld   [$18]       6198  ld([vAC])                       #13
              1515 e820  blt  .subi#16    6199  bmi('.subi#16')                 #14
              1516 a11d  suba [$1d]       6200  suba([vTmp])                    #15
              1517 c218  st   [$18]       6201  st([vAC])                       #16 Store low result
              1518 411d  ora  [$1d]       6202  ora([vTmp])                     #17 Carry in bit 7
              1519 3080  anda $80,x       6203  anda(0x80,X)                    #18 Move carry to bit 0
              151a 0119  ld   [$19]       6204  ld([vAC+1])                     #19
              151b a500  suba [x]         6205  suba([X])                       #20
              151c c219  st   [$19]       6206  st([vAC+1])                     #21
              151d 1403  ld   $03,y       6207  ld(hi('NEXTY'),Y)               #22
              151e e000  jmp  y,$00       6208  jmp(Y,'NEXTY')                  #23
              151f 00f3  ld   $f3         6209  ld(-26/2)                       #24
                                          6210  label('.subi#16')
.subi#16:     1520 c218  st   [$18]       6211  st([vAC])                       #16 Store low result
              1521 211d  anda [$1d]       6212  anda([vTmp])                    #17 Carry in bit 7
              1522 3080  anda $80,x       6213  anda(0x80,X)                    #18 Move carry to bit 0
              1523 0119  ld   [$19]       6214  ld([vAC+1])                     #19
              1524 a500  suba [x]         6215  suba([X])                       #20
              1525 c219  st   [$19]       6216  st([vAC+1])                     #21
              1526 1403  ld   $03,y       6217  ld(hi('NEXTY'),Y)               #22
              1527 e000  jmp  y,$00       6218  jmp(Y,'NEXTY')                  #23
              1528 00f3  ld   $f3         6219  ld(-26/2)                       #24
                                          6220
                                          6221  # XORW implementation
                                          6222  label('xorw#13')
xorw#13:      1529 1400  ld   $00,y       6223  ld(0,Y)                         #13
              152a 0500  ld   [x]         6224  ld([X])                         #14
              152b de00  st   [y,x++]     6225  st([Y,Xpp])                     #15
              152c 6118  xora [$18]       6226  xora([vAC])                     #16
              152d c218  st   [$18]       6227  st([vAC])                       #17
              152e 0500  ld   [x]         6228  ld([X])                         #18
              152f 6119  xora [$19]       6229  xora([vAC+1])                   #19
              1530 c219  st   [$19]       6230  st([vAC+1])                     #20
              1531 1403  ld   $03,y       6231  ld(hi('REENTER'),Y)             #21
              1532 e0cb  jmp  y,$cb       6232  jmp(Y,'REENTER')                #22
              1533 00f3  ld   $f3         6233  ld(-26/2)                       #23
                                          6234
                                          6235  # INCW implementation
                                          6236  label('incw#13')
incw#13:      1534 1400  ld   $00,y       6237  ld(0,Y)                         #13
              1535 1200  ld   ac,x        6238  ld(AC,X)                        #14 address of low byte to be added
              1536 0500  ld   [x]         6239  ld([X])                         #15
              1537 8001  adda $01         6240  adda(1)                         #16
              1538 f03d  beq  .incw#19    6241  beq('.incw#19')                 #17 if low byte is 0x00
              1539 de00  st   [y,x++]     6242  st([Y,Xpp])                     #18 inc low byte
              153a 1403  ld   $03,y       6243  ld(hi('REENTER'),Y)             #19
              153b e0cb  jmp  y,$cb       6244  jmp(Y,'REENTER')                #20
              153c 00f4  ld   $f4         6245  ld(-24/2)                       #21
                                          6246  label('.incw#19')
.incw#19:     153d 0500  ld   [x]         6247  ld([X])                         #19
              153e 8001  adda $01         6248  adda(1)                         #20
              153f c600  st   [x]         6249  st([X])                         #21 inc high byte
              1540 1403  ld   $03,y       6250  ld(hi('NEXTY'),Y)               #22
              1541 e000  jmp  y,$00       6251  jmp(Y,'NEXTY')                  #23
              1542 00f3  ld   $f3         6252  ld(-26/2)                       #24
                                          6253
                                          6254  # DECW implementation
                                          6255  label('decw#13')
decw#13:      1543 1400  ld   $00,y       6256  ld(0,Y)                         #13
              1544 1200  ld   ac,x        6257  ld(AC,X)                        #14 address of low byte to be added
              1545 0500  ld   [x]         6258  ld([X])                         #15
              1546 a001  suba $01         6259  suba(1)                         #16
              1547 de00  st   [y,x++]     6260  st([Y,Xpp])                     #17 dec low byte
              1548 60ff  xora $ff         6261  xora(0xff)                      #18 if low byte is 0xff
              1549 f04d  beq  .decw#21    6262  beq('.decw#21')                 #19
              154a 1403  ld   $03,y       6263  ld(hi('NEXTY'),Y)               #20
              154b e000  jmp  y,$00       6264  jmp(Y,'NEXTY')                  #21
              154c 00f4  ld   $f4         6265  ld(-24/2)                       #22
                                          6266  label('.decw#21')
.decw#21:     154d 0500  ld   [x]         6267  ld([X])                         #21
              154e a001  suba $01         6268  suba(1)                         #22
              154f c600  st   [x]         6269  st([X])                         #23 dec high byte
              1550 1403  ld   $03,y       6270  ld(hi('NEXTY'),Y)               #24
              1551 e000  jmp  y,$00       6271  jmp(Y,'NEXTY')                  #25
              1552 00f2  ld   $f2         6272  ld(-28/2)                       #26
                                          6273
                                          6274  # DBNE implementation
                                          6275  label('dbne#13')
dbne#13:      1553 c21d  st   [$1d]       6276  st([vTmp])                      #13 branch offset
              1554 de00  st   [y,x++]     6277  st([Y,Xpp])                     #14 X++, address of counter
              1555 0d00  ld   [y,x]       6278  ld([Y,X])                       #15
              1556 1200  ld   ac,x        6279  ld(AC,X)                        #16 fetch counter
              1557 0500  ld   [x]         6280  ld([X])                         #17
              1558 a001  suba $01         6281  suba(1)                         #18 decrement counter
              1559 f060  beq  .dbne#21    6282  beq('.dbne#21')                 #19 if zero BRA
              155a c600  st   [x]         6283  st([X])                         #20
              155b 011d  ld   [$1d]       6284  ld([vTmp])                      #21
              155c c216  st   [$16]       6285  st([vPC])                       #22 BRA to branch offset
              155d 1403  ld   $03,y       6286  ld(hi('REENTER'),Y)             #23
              155e e0cb  jmp  y,$cb       6287  jmp(Y,'REENTER')                #24
              155f 00f2  ld   $f2         6288  ld(-28/2)                       #25
                                          6289  label('.dbne#21')
.dbne#21:     1560 0116  ld   [$16]       6290  ld([vPC])                       #21
              1561 8001  adda $01         6291  adda(1)                         #22
              1562 c216  st   [$16]       6292  st([vPC])                       #23 advance vPC by 1
              1563 1403  ld   $03,y       6293  ld(hi('NEXTY'),Y)               #24
              1564 e000  jmp  y,$00       6294  jmp(Y,'NEXTY')                  #25
              1565 00f2  ld   $f2         6295  ld(-28/2)                       #26
                                          6296
                                          6297  # TEQ implementation
                                          6298  label('teq#13')
teq#13:       1566 1200  ld   ac,x        6299  ld(AC,X)                        #13 address of var
              1567 0119  ld   [$19]       6300  ld([vAC+1])                     #14
              1568 4118  ora  [$18]       6301  ora([vAC])                      #15
              1569 f070  beq  .teq#18     6302  beq('.teq#18')                  #16 if (vAC.hi OR vAC.lo) == 0
              156a 1400  ld   $00,y       6303  ld(0,Y)                         #17
              156b dc00  st   $00,[y,x++] 6304  st(0,[Y,Xpp])                   #18 var.lo = 0
              156c cc00  st   $00,[y,x]   6305  st(0,[Y,X])                     #19 var.hi = 0
              156d 1403  ld   $03,y       6306  ld(hi('NEXTY'),Y)               #20
              156e e000  jmp  y,$00       6307  jmp(Y,'NEXTY')                  #21
              156f 00f4  ld   $f4         6308  ld(-24/2)                       #22
                                          6309  label('.teq#18')
.teq#18:      1570 dc01  st   $01,[y,x++] 6310  st(1,[Y,Xpp])                   #18 var.lo = 1
              1571 cc00  st   $00,[y,x]   6311  st(0,[Y,X])                     #19 var.hi = 0
              1572 1403  ld   $03,y       6312  ld(hi('NEXTY'),Y)               #20
              1573 e000  jmp  y,$00       6313  jmp(Y,'NEXTY')                  #21
              1574 00f4  ld   $f4         6314  ld(-24/2)                       #22
                                          6315
                                          6316  # TNE implementation
                                          6317  label('tne#13')
tne#13:       1575 1200  ld   ac,x        6318  ld(AC,X)                        #13 address of var
              1576 0119  ld   [$19]       6319  ld([vAC+1])                     #14
              1577 4118  ora  [$18]       6320  ora([vAC])                      #15
              1578 f07f  beq  .tne#18     6321  beq('.tne#18')                  #16 if (vAC.hi OR vAC.lo) == 0
              1579 1400  ld   $00,y       6322  ld(0,Y)                         #17
              157a dc01  st   $01,[y,x++] 6323  st(1,[Y,Xpp])                   #18 var.lo = 1
              157b cc00  st   $00,[y,x]   6324  st(0,[Y,X])                     #19 var.hi = 0
              157c 1403  ld   $03,y       6325  ld(hi('NEXTY'),Y)               #20
              157d e000  jmp  y,$00       6326  jmp(Y,'NEXTY')                  #21
              157e 00f4  ld   $f4         6327  ld(-24/2)                       #22
                                          6328  label('.tne#18')
.tne#18:      157f dc00  st   $00,[y,x++] 6329  st(0,[Y,Xpp])                   #18 var.lo = 0
              1580 cc00  st   $00,[y,x]   6330  st(0,[Y,X])                     #19 var.hi = 0
              1581 1403  ld   $03,y       6331  ld(hi('NEXTY'),Y)               #20
              1582 e000  jmp  y,$00       6332  jmp(Y,'NEXTY')                  #21
              1583 00f4  ld   $f4         6333  ld(-24/2)                       #22
                                          6334
                                          6335  # TGE implementation
                                          6336  label('tge#13')
tge#13:       1584 1200  ld   ac,x        6337  ld(AC,X)                        #13 address of var
              1585 0119  ld   [$19]       6338  ld([vAC+1])                     #14
              1586 e88d  blt  .tge#17     6339  bmi('.tge#17')                  #15 if vAC.hi < 0
              1587 1400  ld   $00,y       6340  ld(0,Y)                         #16
              1588 dc01  st   $01,[y,x++] 6341  st(1,[Y,Xpp])                   #17 var.lo = 1
              1589 cc00  st   $00,[y,x]   6342  st(0,[Y,X])                     #18 var.hi = 0
              158a 1403  ld   $03,y       6343  ld(hi('REENTER'),Y)             #19
              158b e0cb  jmp  y,$cb       6344  jmp(Y,'REENTER')                #20
              158c 00f4  ld   $f4         6345  ld(-24/2)                       #21
                                          6346  label('.tge#17')
.tge#17:      158d dc00  st   $00,[y,x++] 6347  st(0,[Y,Xpp])                   #17 var.lo = 0
              158e cc00  st   $00,[y,x]   6348  st(0,[Y,X])                     #18 var.hi = 0
              158f 1403  ld   $03,y       6349  ld(hi('REENTER'),Y)             #19
              1590 e0cb  jmp  y,$cb       6350  jmp(Y,'REENTER')                #20
              1591 00f4  ld   $f4         6351  ld(-24/2)                       #21
                                          6352
                                          6353  # TLT implementation
                                          6354  label('tlt#13')
tlt#13:       1592 1200  ld   ac,x        6355  ld(AC,X)                        #13 address of var
              1593 0119  ld   [$19]       6356  ld([vAC+1])                     #14
              1594 e89b  blt  .tlt#17     6357  bmi('.tlt#17')                  #15 if vAC.hi < 0
              1595 1400  ld   $00,y       6358  ld(0,Y)                         #16
              1596 dc00  st   $00,[y,x++] 6359  st(0,[Y,Xpp])                   #17 var.lo = 0
              1597 cc00  st   $00,[y,x]   6360  st(0,[Y,X])                     #18 var.hi = 0
              1598 1403  ld   $03,y       6361  ld(hi('REENTER'),Y)             #19
              1599 e0cb  jmp  y,$cb       6362  jmp(Y,'REENTER')                #20
              159a 00f4  ld   $f4         6363  ld(-24/2)                       #21
                                          6364  label('.tlt#17')
.tlt#17:      159b dc01  st   $01,[y,x++] 6365  st(1,[Y,Xpp])                   #17 var.lo = 1
              159c cc00  st   $00,[y,x]   6366  st(0,[Y,X])                     #18 var.hi = 0
              159d 1403  ld   $03,y       6367  ld(hi('REENTER'),Y)             #19
              159e e0cb  jmp  y,$cb       6368  jmp(Y,'REENTER')                #20
              159f 00f4  ld   $f4         6369  ld(-24/2)                       #21
                                          6370
                                          6371  # TGT implementation
                                          6372  label('tgt#13')
tgt#13:       15a0 1400  ld   $00,y       6373  ld(0,Y)                         #13
              15a1 1200  ld   ac,x        6374  ld(AC,X)                        #14 address of var
              15a2 0119  ld   [$19]       6375  ld([vAC+1])                     #15
              15a3 e8ac  blt  .tgt#18     6376  blt('.tgt#18')                  #16 if vAC.hi < 0
              15a4 4118  ora  [$18]       6377  ora([vAC])                      #17
              15a5 ecb1  bne  .tgt#20     6378  bne('.tgt#20')                  #18 if (vAC.hi OR vAC.lo) != 0
              15a6 0200  nop              6379  nop()                           #19
              15a7 dc00  st   $00,[y,x++] 6380  st(0,[Y,Xpp])                   #20 var.lo = 0
              15a8 cc00  st   $00,[y,x]   6381  st(0,[Y,X])                     #21 var.hi = 0
              15a9 1403  ld   $03,y       6382  ld(hi('NEXTY'),Y)               #22
              15aa e000  jmp  y,$00       6383  jmp(Y,'NEXTY')                  #23
              15ab 00f3  ld   $f3         6384  ld(-26/2)                       #24
                                          6385  label('.tgt#18')
.tgt#18:      15ac dc00  st   $00,[y,x++] 6386  st(0,[Y,Xpp])                   #18 var.lo = 0
              15ad cc00  st   $00,[y,x]   6387  st(0,[Y,X])                     #19 var.hi = 0
              15ae 1403  ld   $03,y       6388  ld(hi('NEXTY'),Y)               #20
              15af e000  jmp  y,$00       6389  jmp(Y,'NEXTY')                  #21
              15b0 00f4  ld   $f4         6390  ld(-24/2)                       #22
                                          6391  label('.tgt#20')
.tgt#20:      15b1 dc01  st   $01,[y,x++] 6392  st(1,[Y,Xpp])                   #20 var.lo = 1
              15b2 cc00  st   $00,[y,x]   6393  st(0,[Y,X])                     #21 var.hi = 0
              15b3 1403  ld   $03,y       6394  ld(hi('NEXTY'),Y)               #22
              15b4 e000  jmp  y,$00       6395  jmp(Y,'NEXTY')                  #23
              15b5 00f3  ld   $f3         6396  ld(-26/2)                       #24
                                          6397
                                          6398  # TLE implementation
                                          6399  label('tle#13')
tle#13:       15b6 1400  ld   $00,y       6400  ld(0,Y)                         #13
              15b7 1200  ld   ac,x        6401  ld(AC,X)                        #14 address of var
              15b8 0119  ld   [$19]       6402  ld([vAC+1])                     #15
              15b9 e8c2  blt  .tle#18     6403  blt('.tle#18')                  #16 if vAC.hi < 0
              15ba 4118  ora  [$18]       6404  ora([vAC])                      #17
              15bb ecc7  bne  .tle#20     6405  bne('.tle#20')                  #18 if (vAC.hi OR vAC.lo) != 0
              15bc 0200  nop              6406  nop()                           #19
              15bd dc01  st   $01,[y,x++] 6407  st(1,[Y,Xpp])                   #20 var.lo = 1
              15be cc00  st   $00,[y,x]   6408  st(0,[Y,X])                     #21 var.hi = 0
              15bf 1403  ld   $03,y       6409  ld(hi('NEXTY'),Y)               #22
              15c0 e000  jmp  y,$00       6410  jmp(Y,'NEXTY')                  #23
              15c1 00f3  ld   $f3         6411  ld(-26/2)                       #24
                                          6412  label('.tle#18')
.tle#18:      15c2 dc01  st   $01,[y,x++] 6413  st(1,[Y,Xpp])                   #18 var.lo = 1
              15c3 cc00  st   $00,[y,x]   6414  st(0,[Y,X])                     #19 var.hi = 0
              15c4 1403  ld   $03,y       6415  ld(hi('NEXTY'),Y)               #20
              15c5 e000  jmp  y,$00       6416  jmp(Y,'NEXTY')                  #21
              15c6 00f4  ld   $f4         6417  ld(-24/2)                       #22
                                          6418  label('.tle#20')
.tle#20:      15c7 dc00  st   $00,[y,x++] 6419  st(0,[Y,Xpp])                   #20 var.lo = 0
              15c8 cc00  st   $00,[y,x]   6420  st(0,[Y,X])                     #21 var.hi = 0
              15c9 1403  ld   $03,y       6421  ld(hi('NEXTY'),Y)               #22
              15ca e000  jmp  y,$00       6422  jmp(Y,'NEXTY')                  #23
              15cb 00f3  ld   $f3         6423  ld(-26/2)                       #24
                                          6424
                                          6425
              15cc 0200  nop              6426  fillers(until=0xff)
              15cd 0200  nop
              15ce 0200  nop
              * 51 times
              15ff 0200  nop              6427  align(0x100, size=0x100)
                                          6428
                                          6429  #-----------------------------------------------------------------------
                                          6430  #       More vCPU instruction implementations, (0x1600)
                                          6431  #-----------------------------------------------------------------------
                                          6432
                                          6433  # INC implementation
                                          6434  label('inc#13')
inc#13:       1600 1200  ld   ac,x        6435  ld(AC,X)                        #13
              1601 0500  ld   [x]         6436  ld([X])                         #14
              1602 8001  adda $01         6437  adda(1)                         #15
              1603 c600  st   [x]         6438  st([X])                         #16
              1604 1403  ld   $03,y       6439  ld(hi('REENTER'),Y)             #17
              1605 e0cb  jmp  y,$cb       6440  jmp(Y,'REENTER')                #18
              1606 00f5  ld   $f5         6441  ld(-22/2)                       #19
                                          6442
                                          6443  # DEC implementation
                                          6444  label('dec#13')
dec#13:       1607 1200  ld   ac,x        6445  ld(AC,X)                        #13
              1608 0500  ld   [x]         6446  ld([X])                         #14
              1609 a001  suba $01         6447  suba(1)                         #15
              160a c600  st   [x]         6448  st([X])                         #16
              160b 1403  ld   $03,y       6449  ld(hi('REENTER'),Y)             #17
              160c e0cb  jmp  y,$cb       6450  jmp(Y,'REENTER')                #18
              160d 00f5  ld   $f5         6451  ld(-22/2)                       #19
                                          6452
                                          6453  # LD implementation
                                          6454  label('ld#13')
ld#13:        160e 1200  ld   ac,x        6455  ld(AC,X)                        #13
              160f 0500  ld   [x]         6456  ld([X])                         #14
              1610 c218  st   [$18]       6457  st([vAC])                       #15
              1611 0000  ld   $00         6458  ld(0)                           #16
              1612 c219  st   [$19]       6459  st([vAC+1])                     #17
              1613 1403  ld   $03,y       6460  ld(hi('NEXTY'),Y)               #18
              1614 e000  jmp  y,$00       6461  jmp(Y,'NEXTY')                  #19
              1615 00f5  ld   $f5         6462  ld(-22/2)                       #20
                                          6463
                                          6464  # LDI implementation
                                          6465  label('ldi#13')
ldi#13:       1616 c218  st   [$18]       6466  st([vAC])                       #13
              1617 0000  ld   $00         6467  ld(0)                           #14
              1618 c219  st   [$19]       6468  st([vAC+1])                     #15
              1619 1403  ld   $03,y       6469  ld(hi('NEXTY'),Y)               #16
              161a e000  jmp  y,$00       6470  jmp(Y,'NEXTY')                  #17
              161b 00f6  ld   $f6         6471  ld(-20/2)                       #18
                                          6472
                                          6473  # ST implementation
                                          6474  label('st#13')
st#13:        161c 1200  ld   ac,x        6475  ld(AC,X)                        #13
              161d 0118  ld   [$18]       6476  ld([vAC])                       #14
              161e c600  st   [x]         6477  st([X])                         #15
              161f 1403  ld   $03,y       6478  ld(hi('NEXTY'),Y)               #16
              1620 e000  jmp  y,$00       6479  jmp(Y,'NEXTY')                  #17
              1621 00f6  ld   $f6         6480  ld(-20/2)                       #18
                                          6481
                                          6482  # ORI implementation
                                          6483  label('ori#13')
ori#13:       1622 4118  ora  [$18]       6484  ora([vAC])                      #13
              1623 c218  st   [$18]       6485  st([vAC])                       #14
              1624 1403  ld   $03,y       6486  ld(hi('REENTER'),Y)             #15
              1625 e0cb  jmp  y,$cb       6487  jmp(Y,'REENTER')                #16
              1626 00f6  ld   $f6         6488  ld(-20/2)                       #17
                                          6489
                                          6490  # ALLOC implementation
                                          6491  label('alloc#13')
alloc#13:     1627 811c  adda [$1c]       6492  adda([vSP])                     #13
              1628 c21c  st   [$1c]       6493  st([vSP])                       #14
              1629 1403  ld   $03,y       6494  ld(hi('REENTER'),Y)             #15
              162a e0cb  jmp  y,$cb       6495  jmp(Y,'REENTER')                #16
              162b 00f6  ld   $f6         6496  ld(-20/2)                       #17
                                          6497
                                          6498  # MOV implementation
                                          6499  label('mov#13')
mov#13:       162c 1517  ld   [$17],y     6500  ld([vPC+1],Y)                   #13
              162d c21d  st   [$1d]       6501  st([vTmp])                      #14 save address of dst var
              162e de00  st   [y,x++]     6502  st([Y,Xpp])                     #15 X++
              162f 0d00  ld   [y,x]       6503  ld([Y,X])                       #16 address of src var
              1630 1200  ld   ac,x        6504  ld(AC,X)                        #17
              1631 0500  ld   [x]         6505  ld([X])                         #18 get src
              1632 111d  ld   [$1d],x     6506  ld([vTmp],X)                    #19 address of dst var
              1633 c600  st   [x]         6507  st([X])                         #20 dst = src
              1634 0116  ld   [$16]       6508  ld([vPC])                       #21
              1635 8001  adda $01         6509  adda(1)                         #22
              1636 c216  st   [$16]       6510  st([vPC])                       #23
              1637 1403  ld   $03,y       6511  ld(hi('NEXTY'),Y)               #24
              1638 e000  jmp  y,$00       6512  jmp(Y,'NEXTY')                  #25
              1639 00f2  ld   $f2         6513  ld(-28/2)                       #26
                                          6514
                                          6515  # PEEKA implementation
                                          6516  label('peeka#13')
peeka#13:     163a c21d  st   [$1d]       6517  st([vTmp])                      #13
              163b 1519  ld   [$19],y     6518  ld([vAC+1],Y)                   #14
              163c 1118  ld   [$18],x     6519  ld([vAC],X)                     #15
              163d 0d00  ld   [y,x]       6520  ld([Y,X])                       #16 peek [vAC]
              163e 111d  ld   [$1d],x     6521  ld([vTmp],X)                    #17 dst var
              163f c600  st   [x]         6522  st([X])                         #18 dst = peek [vAC]
              1640 1403  ld   $03,y       6523  ld(hi('REENTER'),Y)             #19
              1641 e0cb  jmp  y,$cb       6524  jmp(Y,'REENTER')                #20
              1642 00f4  ld   $f4         6525  ld(-24/2)                       #21
                                          6526
                                          6527  # DEEKA implementation
                                          6528  label('deeka#13')
deeka#13:     1643 1519  ld   [$19],y     6529  ld([vAC+1],Y)                   #13
              1644 1118  ld   [$18],x     6530  ld([vAC],X)                     #14
              1645 0d00  ld   [y,x]       6531  ld([Y,X])                       #15 peek [vAC]
              1646 de00  st   [y,x++]     6532  st([Y,Xpp])                     #16
              1647 c22a  st   [$2a]       6533  st([sysArgs+6])                 #17
              1648 0d00  ld   [y,x]       6534  ld([Y,X])                       #18 peek [vAC+1]
              1649 c22b  st   [$2b]       6535  st([sysArgs+7])                 #19
              164a 1400  ld   $00,y       6536  ld(0,Y)                         #20
              164b 111d  ld   [$1d],x     6537  ld([vTmp],X)                    #21 dst var
              164c 012a  ld   [$2a]       6538  ld([sysArgs+6])                 #22
              164d de00  st   [y,x++]     6539  st([Y,Xpp])                     #23 [var.lo] = peek [vAC]
              164e 012b  ld   [$2b]       6540  ld([sysArgs+7])                 #24
              164f ce00  st   [y,x]       6541  st([Y,X])                       #25 [var.hi] = peek [vAC+1]
              1650 1403  ld   $03,y       6542  ld(hi('NEXTY'),Y)               #26
              1651 e000  jmp  y,$00       6543  jmp(Y,'NEXTY')                  #27
              1652 00f1  ld   $f1         6544  ld(-30/2)                       #28
                                          6545
                                          6546  # PEEKA implementation
                                          6547  #label('peeka#13')
                                          6548  #ld(0,Y)                         #13
                                          6549  #ld(AC,X)                        #14 address of var
                                          6550  #ld([Y,X])                       #15
                                          6551  #st([vTmp])                      #16 low byte of src pointer
                                          6552  #st([Y,Xpp])                     #17 X++
                                          6553  #ld([Y,X])                       #18
                                          6554  #ld(AC,Y)                        #19 high byte of src pointer
                                          6555  #ld([vTmp],X)                    #20
                                          6556  #ld([Y,X])                       #21 peek src
                                          6557  #ld([vAC],X)                     #22 low byte of dst pointer
                                          6558  #ld([vAC+1],Y)                   #23 high byte of dst pointer
                                          6559  #st([Y,X])                       #24 poke dst
                                          6560  #ld(hi('REENTER'),Y)             #25
                                          6561  #jmp(Y,'REENTER')                #26
                                          6562  #ld(-30/2)                       #27
                                          6563
                                          6564  # SUBBI implementation, var -= imm, does NOT modify var.hi
                                          6565  label('subbi#13')
subbi#13:     1653 1517  ld   [$17],y     6566  ld([vPC+1],Y)                   #13
              1654 c21d  st   [$1d]       6567  st([vTmp])                      #14 immediate value
              1655 de00  st   [y,x++]     6568  st([Y,Xpp])                     #15 X++
              1656 0d00  ld   [y,x]       6569  ld([Y,X])                       #16
              1657 1200  ld   ac,x        6570  ld(AC,X)                        #17 address of var
              1658 0500  ld   [x]         6571  ld([X])                         #18
              1659 a11d  suba [$1d]       6572  suba([vTmp])                    #19
              165a c600  st   [x]         6573  st([X])                         #20
              165b 0116  ld   [$16]       6574  ld([vPC])                       #21
              165c 8001  adda $01         6575  adda(1)                         #22
              165d c216  st   [$16]       6576  st([vPC])                       #23 advance vPC by 1
              165e 1403  ld   $03,y       6577  ld(hi('NEXTY'),Y)               #24
              165f e000  jmp  y,$00       6578  jmp(Y,'NEXTY')                  #25
              1660 00f2  ld   $f2         6579  ld(-28/2)                       #26
                                          6580
                                          6581  # MOVQB implementation
                                          6582  label('movqb#13')
movqb#13:     1661 1517  ld   [$17],y     6583  ld([vPC+1],Y)                   #13 vPC.hi
              1662 c21d  st   [$1d]       6584  st([vTmp])                      #14 immediate value
              1663 de00  st   [y,x++]     6585  st([Y,Xpp])                     #15 X++
              1664 0d00  ld   [y,x]       6586  ld([Y,X])                       #16
              1665 1200  ld   ac,x        6587  ld(AC,X)                        #17 address of var
              1666 011d  ld   [$1d]       6588  ld([vTmp])                      #18
              1667 c600  st   [x]         6589  st([X])                         #19 var.lo = immediate value
              1668 0116  ld   [$16]       6590  ld([vPC])                       #20
              1669 8001  adda $01         6591  adda(1)                         #21
              166a c216  st   [$16]       6592  st([vPC])                       #22 advance vPC by 1
              166b 1403  ld   $03,y       6593  ld(hi('REENTER'),Y)             #23
              166c e0cb  jmp  y,$cb       6594  jmp(Y,'REENTER')                #24
              166d 00f2  ld   $f2         6595  ld(-28/2)                       #25
                                          6596
                                          6597  # MOVQW implementation
                                          6598  label('movqw#13')
movqw#13:     166e c21d  st   [$1d]       6599  st([vTmp])                      #13 immediate value
              166f de00  st   [y,x++]     6600  st([Y,Xpp])                     #14 X++
              1670 0d00  ld   [y,x]       6601  ld([Y,X])                       #15
              1671 1200  ld   ac,x        6602  ld(AC,X)                        #16 address of var
              1672 011d  ld   [$1d]       6603  ld([vTmp])                      #17
              1673 c600  st   [x]         6604  st([X])                         #18 var.lo = immediate value
              1674 1400  ld   $00,y       6605  ld(0,Y)                         #19
              1675 de00  st   [y,x++]     6606  st([Y,Xpp])                     #20 X++
              1676 0000  ld   $00         6607  ld(0)                           #21
              1677 c600  st   [x]         6608  st([X])                         #22 var.hi = 0
              1678 0116  ld   [$16]       6609  ld([vPC])                       #23
              1679 8001  adda $01         6610  adda(1)                         #24
              167a c216  st   [$16]       6611  st([vPC])                       #25 advance vPC by 1
              167b 1403  ld   $03,y       6612  ld(hi('NEXTY'),Y)               #26
              167c e000  jmp  y,$00       6613  jmp(Y,'NEXTY')                  #27
              167d 00f1  ld   $f1         6614  ld(-30/2)                       #28
                                          6615
                                          6616  # LSRB implementation
                                          6617  label('lsrb#13')
lsrb#13:      167e 1200  ld   ac,x        6618  ld(AC,X)                        #13 var
              167f 1405  ld   $05,y       6619  ld(hi('shiftTable'),Y)          #14 logical shift right 1 bit (X >> 1)
              1680 00c8  ld   $c8         6620  ld('.lsrb#24')                  #15 continuation address
              1681 c21d  st   [$1d]       6621  st([vTmp])                      #16
              1682 0500  ld   [x]         6622  ld([X])                         #17 load byte from var
              1683 20fe  anda $fe         6623  anda(0xfe)                      #18
              1684 e200  jmp  y,ac        6624  jmp(Y,AC)                       #19
              1685 fcff  bra  $ff         6625  bra(255)                        #20 bra shiftTable+255
                                          6626  #dummy
                                          6627  # continues in page 0x0600 at label('.lsrb#24') after fetching shifted byte from 0x0500
                                          6628
                                          6629  # PEEKV implementation
                                          6630  label('peekv#13')
peekv#13:     1686 1200  ld   ac,x        6631  ld(AC,X)                        #13
              1687 1400  ld   $00,y       6632  ld(0,Y)                         #14
              1688 0d00  ld   [y,x]       6633  ld([Y,X])                       #15 low byte peek address
              1689 de00  st   [y,x++]     6634  st([Y,Xpp])                     #16 X++
              168a c21d  st   [$1d]       6635  st([vTmp])                      #17
              168b 0d00  ld   [y,x]       6636  ld([Y,X])                       #18 high byte peek address
              168c 1600  ld   ac,y        6637  ld(AC,Y)                        #19
              168d 111d  ld   [$1d],x     6638  ld([vTmp],X)                    #20
              168e 0d00  ld   [y,x]       6639  ld([Y,X])                       #21 peek byte
              168f c218  st   [$18]       6640  st([vAC])                       #22
              1690 0000  ld   $00         6641  ld(0)                           #23
              1691 c219  st   [$19]       6642  st([vAC+1])                     #24
              1692 1403  ld   $03,y       6643  ld(hi('REENTER'),Y)             #25
              1693 e0cb  jmp  y,$cb       6644  jmp(Y,'REENTER')                #26
              1694 00f1  ld   $f1         6645  ld(-30/2)                       #27
                                          6646
                                          6647  # DEEKV implementation
                                          6648  label('deekv#13')
deekv#13:     1695 1200  ld   ac,x        6649  ld(AC,X)                        #13
              1696 1400  ld   $00,y       6650  ld(0,Y)                         #14
              1697 0d00  ld   [y,x]       6651  ld([Y,X])                       #15 low byte deek address
              1698 de00  st   [y,x++]     6652  st([Y,Xpp])                     #16 X++
              1699 c21d  st   [$1d]       6653  st([vTmp])                      #17
              169a 0d00  ld   [y,x]       6654  ld([Y,X])                       #18 high byte deek address
              169b 1600  ld   ac,y        6655  ld(AC,Y)                        #19
              169c 111d  ld   [$1d],x     6656  ld([vTmp],X)                    #20
              169d 0d00  ld   [y,x]       6657  ld([Y,X])                       #21 peek low byte
              169e c218  st   [$18]       6658  st([vAC])                       #22
              169f de00  st   [y,x++]     6659  st([Y,Xpp])                     #23 X++
              16a0 0d00  ld   [y,x]       6660  ld([Y,X])                       #24 peek high byte
              16a1 c219  st   [$19]       6661  st([vAC+1])                     #25
              16a2 1403  ld   $03,y       6662  ld(hi('NEXTY'),Y)               #26
              16a3 e000  jmp  y,$00       6663  jmp(Y,'NEXTY')                  #27
              16a4 00f1  ld   $f1         6664  ld(-30/2)                       #28
                                          6665
                                          6666  # LSLV implementation
                                          6667  label('lslv#13')
lslv#13:      16a5 1400  ld   $00,y       6668  ld(0,Y)                         #13
              16a6 1200  ld   ac,x        6669  ld(AC,X)                        #14 var
              16a7 0500  ld   [x]         6670  ld([X])                         #15
              16a8 f4b2  bge  .lslv#18    6671  bge('.lslv#18')                 #16
              16a9 8500  adda [x]         6672  adda([X])                       #17
              16aa de00  st   [y,x++]     6673  st([Y,Xpp])                     #18 var.lo <<1
              16ab 0500  ld   [x]         6674  ld([X])                         #19
              16ac 8500  adda [x]         6675  adda([X])                       #20
              16ad 4001  ora  $01         6676  ora(1)                          #21
              16ae c600  st   [x]         6677  st([X])                         #22 var.hi <<1 | 1
              16af 1403  ld   $03,y       6678  ld(hi('REENTER'),Y)             #23
              16b0 e0cb  jmp  y,$cb       6679  jmp(Y,'REENTER')                #24
              16b1 00f2  ld   $f2         6680  ld(-28/2)                       #25
                                          6681  label('.lslv#18')
.lslv#18:     16b2 de00  st   [y,x++]     6682  st([Y,Xpp])                     #18
              16b3 0500  ld   [x]         6683  ld([X])                         #19
              16b4 8500  adda [x]         6684  adda([X])                       #20
              16b5 c600  st   [x]         6685  st([X])                         #21
              16b6 1403  ld   $03,y       6686  ld(hi('NEXTY'),Y)               #22
              16b7 e000  jmp  y,$00       6687  jmp(Y,'NEXTY')                  #23
              16b8 00f3  ld   $f3         6688  ld(-26/2)                       #24
                                          6689
                                          6690  # LDW implementation
                                          6691  label('ldw#13')
ldw#13:       16b9 1400  ld   $00,y       6692  ld(0,Y)                         #13
              16ba 1200  ld   ac,x        6693  ld(AC,X)                        #14 Operand
              16bb 0500  ld   [x]         6694  ld([X])                         #15
              16bc c218  st   [$18]       6695  st([vAC])                       #16
              16bd de00  st   [y,x++]     6696  st([Y,Xpp])                     #17 X++
              16be 0500  ld   [x]         6697  ld([X])                         #18
              16bf c219  st   [$19]       6698  st([vAC+1])                     #19
              16c0 1403  ld   $03,y       6699  ld(hi('NEXTY'),Y)               #20
              16c1 e000  jmp  y,$00       6700  jmp(Y,'NEXTY')                  #21
              16c2 00f4  ld   $f4         6701  ld(-24/2)                       #22
                                          6702
                                          6703  # STW implementation
                                          6704  label('stw#13')
stw#13:       16c3 1400  ld   $00,y       6705  ld(0,Y)                         #13
              16c4 1200  ld   ac,x        6706  ld(AC,X)                        #14 Operand
              16c5 0118  ld   [$18]       6707  ld([vAC])                       #15
              16c6 de00  st   [y,x++]     6708  st([Y,Xpp])                     #16
              16c7 0119  ld   [$19]       6709  ld([vAC+1])                     #17
              16c8 c600  st   [x]         6710  st([X])                         #18
              16c9 1403  ld   $03,y       6711  ld(hi('REENTER'),Y)             #19
              16ca e0cb  jmp  y,$cb       6712  jmp(Y,'REENTER')                #20
              16cb 00f4  ld   $f4         6713  ld(-24/2)                       #21
                                          6714
                                          6715  # POKE+ implementation
                                          6716  label('poke+#13')
poke+#13:     16cc 1200  ld   ac,x        6717  ld(AC,X)                        #13 Operand
              16cd 1400  ld   $00,y       6718  ld(0,Y)                         #14
              16ce 0500  ld   [x]         6719  ld([X])                         #15 low byte poke address
              16cf c21d  st   [$1d]       6720  st([vTmp])                      #16
              16d0 8001  adda $01         6721  adda(1)                         #17
              16d1 de00  st   [y,x++]     6722  st([Y,Xpp])                     #18
              16d2 0500  ld   [x]         6723  ld([X])                         #19 high byte poke address
              16d3 1600  ld   ac,y        6724  ld(AC,Y)                        #20
              16d4 111d  ld   [$1d],x     6725  ld([vTmp],X)                    #21
              16d5 0118  ld   [$18]       6726  ld([vAC])                       #22
              16d6 ce00  st   [y,x]       6727  st([Y,X])                       #23
              16d7 1403  ld   $03,y       6728  ld(hi('NEXTY'),Y)               #24
              16d8 e000  jmp  y,$00       6729  jmp(Y,'NEXTY')                  #25
              16d9 00f2  ld   $f2         6730  ld(-28/2)                       #26
                                          6731
                                          6732  # ADDBI implementation, var += imm, does NOT modify var.hi
                                          6733  label('addbi#13')
addbi#13:     16da 1517  ld   [$17],y     6734  ld([vPC+1],Y)                   #13
              16db c21d  st   [$1d]       6735  st([vTmp])                      #14 immediate value
              16dc de00  st   [y,x++]     6736  st([Y,Xpp])                     #15 X++
              16dd 0d00  ld   [y,x]       6737  ld([Y,X])                       #16
              16de 1200  ld   ac,x        6738  ld(AC,X)                        #17 var
              16df 0500  ld   [x]         6739  ld([X])                         #18
              16e0 811d  adda [$1d]       6740  adda([vTmp])                    #19
              16e1 c600  st   [x]         6741  st([X])                         #20
              16e2 0116  ld   [$16]       6742  ld([vPC])                       #21
              16e3 8001  adda $01         6743  adda(1)                         #22
              16e4 c216  st   [$16]       6744  st([vPC])                       #23 advance vPC by 1
              16e5 1403  ld   $03,y       6745  ld(hi('NEXTY'),Y)               #24
              16e6 e000  jmp  y,$00       6746  jmp(Y,'NEXTY')                  #25
              16e7 00f2  ld   $f2         6747  ld(-28/2)                       #26
                                          6748
                                          6749
              16e8 0200  nop              6750  fillers(until=0xff)
              16e9 0200  nop
              16ea 0200  nop
              * 23 times
              16ff 0200  nop              6751  align(0x100, size=0x100)
                                          6752
                                          6753  #-----------------------------------------------------------------------
                                          6754  #       More vCPU instruction implementations, (0x1700)
                                          6755  #-----------------------------------------------------------------------
                                          6756
                                          6757  # -------------------------------------------------------------
                                          6758  # vCPU instructions for comparisons between two 16-bit operands
                                          6759  # -------------------------------------------------------------
                                          6760  #
                                          6761  # vCPU's conditional branching (BCC) always compares vAC against 0,
                                          6762  # treating vAC as a two's complement 16-bit number. When we need to
                                          6763  # compare two arbitrary numnbers we normally first take their difference
                                          6764  # with SUBW.  However, when this difference is too large, the subtraction
                                          6765  # overflows and we get the wrong outcome. To get it right over the
                                          6766  # entire range, an elaborate sequence is needed. TinyBASIC uses this
                                          6767  # blurp for its relational operators. (It compares stack variable $02
                                          6768  # with zero page variable $3a.)
                                          6769  #
                                          6770  #       0461  ee 02            LDLW  $02
                                          6771  #       0463  fc 3a            XORW  $3a
                                          6772  #       0465  35 53 6a         BGE   $046c
                                          6773  #       0468  ee 02            LDLW  $02
                                          6774  #       046a  90 6e            BRA   $0470
                                          6775  #       046c  ee 02            LDLW  $02
                                          6776  #       046e  b8 3a            SUBW  $3a
                                          6777  #       0470  35 56 73         BLE   $0475
                                          6778  #
                                          6779  # The CMPHS and CMPHU instructions were introduced to simplify this.
                                          6780  # They inspect both operands to see if there is an overflow risk. If
                                          6781  # so, they modify vAC such that their difference gets smaller, while
                                          6782  # preserving the relation between the two operands. After that, the
                                          6783  # SUBW instruction can't overflow and we achieve a correct comparison.
                                          6784  # Use CMPHS for signed comparisons and CMPHU for unsigned. With these,
                                          6785  # the sequence above becomes:
                                          6786  #
                                          6787  #       0461  ee 02            LDLW  $02
                                          6788  #       0463  1f 3b            CMPHS $3b        Note: high byte of operand
                                          6789  #       0465  b8 3a            SUBW  $3a
                                          6790  #       0467  35 56 73         BLE   $0475
                                          6791  #
                                          6792  # CMPHS/CMPHU don't make much sense other than in combination with
                                          6793  # SUBW. These modify vACH, if needed, as given in the following table:
                                          6794  #
                                          6795  #       vACH  varH  |     vACH
                                          6796  #       bit7  bit7  | CMPHS  CMPHU
                                          6797  #       ---------------------------
                                          6798  #         0     0   |  vACH   vACH      no change needed
                                          6799  #         0     1   | varH+1 varH-1     narrowing the range
                                          6800  #         1     0   | varH-1 varH+1     narrowing the range
                                          6801  #         1     1   |  vACH   vACH      no change needed
                                          6802  #       ---------------------------
                                          6803
                                          6804  # CMPHS implementation (vCPU instruction)
                                          6805  label('cmphs#13')
cmphs#13:     1700 1200  ld   ac,x        6806  ld(AC,X)                        #13
              1701 0500  ld   [x]         6807  ld([X])                         #14
              1702 6119  xora [$19]       6808  xora([vAC+1])                   #15
              1703 f416  bge  .cmphu#18   6809  bpl('.cmphu#18')                #16 Skip if same sign
              1704 0119  ld   [$19]       6810  ld([vAC+1])                     #17
              1705 e808  blt  $1708       6811  bmi(pc()+3)                     #18
              1706 fc09  bra  .cmphs#21   6812  bra(pc()+3)                     #19
                                          6813  label('.cmphs#20')
.cmphs#20:    1707 0001  ld   $01         6814  ld(+1)                          #20    vAC < variable
              1708 00ff  ld   $ff         6815  ld(-1)                          #20(!) vAC > variable
                                          6816  label('.cmphs#21')
.cmphs#21:    1709 8500  adda [x]         6817  adda([X])                       #21
              170a c219  st   [$19]       6818  st([vAC+1])                     #22
              170b 1403  ld   $03,y       6819  ld(hi('REENTER'),Y)             #23
              170c e0cb  jmp  y,$cb       6820  jmp(Y,'REENTER')                #24
              170d 00f2  ld   $f2         6821  ld(-28/2)                       #25
                                          6822
                                          6823  # CMPHU implementation (vCPU instruction)
                                          6824  label('cmphu#13')
cmphu#13:     170e 1200  ld   ac,x        6825  ld(AC,X)                        #13
              170f 0500  ld   [x]         6826  ld([X])                         #14
              1710 6119  xora [$19]       6827  xora([vAC+1])                   #15
              1711 f416  bge  .cmphu#18   6828  bpl('.cmphu#18')                #16 Skip if same sign
              1712 0119  ld   [$19]       6829  ld([vAC+1])                     #17
              1713 e807  blt  .cmphs#20   6830  bmi('.cmphs#20')                #18
              1714 fc09  bra  .cmphs#21   6831  bra('.cmphs#21')                #19
              1715 00ff  ld   $ff         6832  ld(-1)                          #20    vAC > variable
                                          6833
                                          6834  # No-operation for CMPHS/CMPHU when high bits are equal
                                          6835  label('.cmphu#18')
.cmphu#18:    1716 1403  ld   $03,y       6836  ld(hi('NEXTY'),Y)               #18
              1717 e000  jmp  y,$00       6837  jmp(Y,'NEXTY')                  #19
              1718 00f5  ld   $f5         6838  ld(-22/2)                       #20
                                          6839
                                          6840  # BEQ implementation
                                          6841  label('beq#15')
beq#15:       1719 0119  ld   [$19]       6842  ld([vAC+1])                     #15
              171a 4118  ora  [$18]       6843  ora([vAC])                      #16
              171b f023  beq  .beq#19     6844  beq('.beq#19')                  #17 if (vAC.hi OR vAC.lo) == 0
              171c 0d00  ld   [y,x]       6845  ld([Y,X])                       #18 address of branch destination
              171d 0116  ld   [$16]       6846  ld([vPC])                       #19
              171e 8001  adda $01         6847  adda(1)                         #20
              171f c216  st   [$16]       6848  st([vPC])                       #21
              1720 1403  ld   $03,y       6849  ld(hi('NEXTY'),Y)               #22
              1721 e000  jmp  y,$00       6850  jmp(Y,'NEXTY')                  #23
              1722 00f3  ld   $f3         6851  ld(-26/2)                       #24
                                          6852  label('.beq#19')
.beq#19:      1723 c216  st   [$16]       6853  st([vPC])                       #19
              1724 1403  ld   $03,y       6854  ld(hi('NEXTY'),Y)               #20
              1725 e000  jmp  y,$00       6855  jmp(Y,'NEXTY')                  #21
              1726 00f4  ld   $f4         6856  ld(-24/2)                       #22
                                          6857
                                          6858  # BNE implementation
                                          6859  label('bne#15')
bne#15:       1727 0119  ld   [$19]       6860  ld([vAC+1])                     #15
              1728 4118  ora  [$18]       6861  ora([vAC])                      #16
              1729 ec31  bne  .bne#19     6862  bne('.bne#19')                  #17 if (vAC.hi OR vAC.lo) != 0
              172a 0d00  ld   [y,x]       6863  ld([Y,X])                       #18 address of branch destination
              172b 0116  ld   [$16]       6864  ld([vPC])                       #19
              172c 8001  adda $01         6865  adda(1)                         #20
              172d c216  st   [$16]       6866  st([vPC])                       #21
              172e 1403  ld   $03,y       6867  ld(hi('NEXTY'),Y)               #22
              172f e000  jmp  y,$00       6868  jmp(Y,'NEXTY')                  #23
              1730 00f3  ld   $f3         6869  ld(-26/2)                       #24
                                          6870  label('.bne#19')
.bne#19:      1731 c216  st   [$16]       6871  st([vPC])                       #19
              1732 1403  ld   $03,y       6872  ld(hi('NEXTY'),Y)               #20
              1733 e000  jmp  y,$00       6873  jmp(Y,'NEXTY')                  #21
              1734 00f4  ld   $f4         6874  ld(-24/2)                       #22
                                          6875
                                          6876  # BGT implementation
                                          6877  label('bgt#15')
bgt#15:       1735 0119  ld   [$19]       6878  ld([vAC+1])                     #15
              1736 e83f  blt  .bgt#18     6879  blt('.bgt#18')                  #16 if vAC.hi < 0
              1737 4118  ora  [$18]       6880  ora([vAC])                      #17
              1738 ec45  bne  .bgt#20     6881  bne('.bgt#20')                  #18 if (vAC.hi OR vAC.lo) != 0
              1739 0116  ld   [$16]       6882  ld([vPC])                       #19
              173a 8001  adda $01         6883  adda(1)                         #20
              173b c216  st   [$16]       6884  st([vPC])                       #21
              173c 1403  ld   $03,y       6885  ld(hi('NEXTY'),Y)               #22
              173d e000  jmp  y,$00       6886  jmp(Y,'NEXTY')                  #23
              173e 00f3  ld   $f3         6887  ld(-26/2)                       #24
                                          6888  label('.bgt#18')
.bgt#18:      173f 0116  ld   [$16]       6889  ld([vPC])                       #18
              1740 8001  adda $01         6890  adda(1)                         #19
              1741 c216  st   [$16]       6891  st([vPC])                       #20
              1742 1403  ld   $03,y       6892  ld(hi('REENTER'),Y)             #21
              1743 e0cb  jmp  y,$cb       6893  jmp(Y,'REENTER')                #22
              1744 00f3  ld   $f3         6894  ld(-26/2)                       #23
                                          6895  label('.bgt#20')
.bgt#20:      1745 0d00  ld   [y,x]       6896  ld([Y,X])                       #20 address of branch destination
              1746 c216  st   [$16]       6897  st([vPC])                       #21
              1747 1403  ld   $03,y       6898  ld(hi('NEXTY'),Y)               #22
              1748 e000  jmp  y,$00       6899  jmp(Y,'NEXTY')                  #23
              1749 00f3  ld   $f3         6900  ld(-26/2)                       #24
                                          6901
                                          6902  # BLT implementation
                                          6903  label('blt#15')
blt#15:       174a 0119  ld   [$19]       6904  ld([vAC+1])                     #15
              174b e852  blt  .blt#18     6905  blt('.blt#18')                  #16 if vAC.hi < 0
              174c 0116  ld   [$16]       6906  ld([vPC])                       #17
              174d 8001  adda $01         6907  adda(1)                         #18
              174e c216  st   [$16]       6908  st([vPC])                       #19
              174f 1403  ld   $03,y       6909  ld(hi('NEXTY'),Y)               #20
              1750 e000  jmp  y,$00       6910  jmp(Y,'NEXTY')                  #21
              1751 00f4  ld   $f4         6911  ld(-24/2)                       #22
                                          6912  label('.blt#18')
.blt#18:      1752 0d00  ld   [y,x]       6913  ld([Y,X])                       #18 address of branch destination
              1753 c216  st   [$16]       6914  st([vPC])                       #19
              1754 1403  ld   $03,y       6915  ld(hi('NEXTY'),Y)               #20
              1755 e000  jmp  y,$00       6916  jmp(Y,'NEXTY')                  #21
              1756 00f4  ld   $f4         6917  ld(-24/2)                       #22
                                          6918
                                          6919  # BGE implementation
                                          6920  label('bge#15')
bge#15:       1757 0119  ld   [$19]       6921  ld([vAC+1])                     #15
              1758 e85f  blt  .bge#18     6922  blt('.bge#18')                  #16 if vAC.hi < 0
              1759 0116  ld   [$16]       6923  ld([vPC])                       #17
              175a 0d00  ld   [y,x]       6924  ld([Y,X])                       #18 address of branch destination
              175b c216  st   [$16]       6925  st([vPC])                       #19
              175c 1403  ld   $03,y       6926  ld(hi('NEXTY'),Y)               #20
              175d e000  jmp  y,$00       6927  jmp(Y,'NEXTY')                  #21
              175e 00f4  ld   $f4         6928  ld(-24/2)                       #22
                                          6929  label('.bge#18')
.bge#18:      175f 8001  adda $01         6930  adda(1)                         #18
              1760 c216  st   [$16]       6931  st([vPC])                       #19
              1761 1403  ld   $03,y       6932  ld(hi('NEXTY'),Y)               #20
              1762 e000  jmp  y,$00       6933  jmp(Y,'NEXTY')                  #21
              1763 00f4  ld   $f4         6934  ld(-24/2)                       #22
                                          6935
                                          6936  # BLE implementation
                                          6937  label('ble#15')
ble#15:       1764 0119  ld   [$19]       6938  ld([vAC+1])                     #15
              1765 e86e  blt  .ble#18     6939  blt('.ble#18')                  #16 if vAC.hi < 0
              1766 4118  ora  [$18]       6940  ora([vAC])                      #17
              1767 ec73  bne  .ble#20     6941  bne('.ble#20')                  #18 if (vAC.hi OR vAC.lo) != 0
              1768 0116  ld   [$16]       6942  ld([vPC])                       #19
              1769 0d00  ld   [y,x]       6943  ld([Y,X])                       #20 address of branch destination
              176a c216  st   [$16]       6944  st([vPC])                       #21
              176b 1403  ld   $03,y       6945  ld(hi('NEXTY'),Y)               #22
              176c e000  jmp  y,$00       6946  jmp(Y,'NEXTY')                  #23
              176d 00f3  ld   $f3         6947  ld(-26/2)                       #24
                                          6948  label('.ble#18')
.ble#18:      176e 0d00  ld   [y,x]       6949  ld([Y,X])                       #18 address of branch destination
              176f c216  st   [$16]       6950  st([vPC])                       #19
              1770 1403  ld   $03,y       6951  ld(hi('NEXTY'),Y)               #20
              1771 e000  jmp  y,$00       6952  jmp(Y,'NEXTY')                  #21
              1772 00f4  ld   $f4         6953  ld(-24/2)                       #22
                                          6954  label('.ble#20')
.ble#20:      1773 8001  adda $01         6955  adda(1)                         #20
              1774 c216  st   [$16]       6956  st([vPC])                       #21
              1775 1403  ld   $03,y       6957  ld(hi('NEXTY'),Y)               #22
              1776 e000  jmp  y,$00       6958  jmp(Y,'NEXTY')                  #23
              1777 00f3  ld   $f3         6959  ld(-26/2)                       #24
                                          6960
                                          6961  # ADDBA implementation
                                          6962  label('addba#13')
addba#13:     1778 1200  ld   ac,x        6963  ld(AC,X)                        #13 src var
              1779 0118  ld   [$18]       6964  ld([vAC])                       #14
              177a 8500  adda [x]         6965  adda([X])                       #15
              177b c218  st   [$18]       6966  st([vAC])                       #16 vAC.lo += var.lo
              177c e886  blt  .addba#19   6967  bmi('.addba#19')                #17 Now figure out if there was a carry
              177d a500  suba [x]         6968  suba([X])                       #18 Gets back the initial value of vAC
              177e 4500  ora  [x]         6969  ora([X])                        #19 Carry in bit 7
              177f 3080  anda $80,x       6970  anda(0x80,X)                    #20 Move carry to bit 0
              1780 0500  ld   [x]         6971  ld([X])                         #21
              1781 8119  adda [$19]       6972  adda([vAC+1])                   #22 Add the high byte and carry
              1782 c219  st   [$19]       6973  st([vAC+1])                     #23 Store high result
              1783 1403  ld   $03,y       6974  ld(hi('NEXTY'),Y)               #24
              1784 e000  jmp  y,$00       6975  jmp(Y,'NEXTY')                  #25
              1785 00f2  ld   $f2         6976  ld(-28/2)                       #26
                                          6977  label('.addba#19')
.addba#19:    1786 2500  anda [x]         6978  anda([X])                       #19 Carry in bit 7
              1787 3080  anda $80,x       6979  anda(0x80,X)                    #20 Move carry to bit 0
              1788 0500  ld   [x]         6980  ld([X])                         #21
              1789 8119  adda [$19]       6981  adda([vAC+1])                   #22 Add high byte and carry
              178a c219  st   [$19]       6982  st([vAC+1])                     #23 Store high result
              178b 1403  ld   $03,y       6983  ld(hi('NEXTY'),Y)               #24
              178c e000  jmp  y,$00       6984  jmp(Y,'NEXTY')                  #25
              178d 00f2  ld   $f2         6985  ld(-28/2)                       #26
                                          6986
                                          6987  # SUBBA implementation
                                          6988  label('subba#13')
subba#13:     178e 1200  ld   ac,x        6989  ld(AC,X)                        #13 src var
              178f 0118  ld   [$18]       6990  ld([vAC])                       #14
              1790 e89b  blt  .subba#17   6991  bmi('.subba#17')                 #15
              1791 a500  suba [x]         6992  suba([X])                       #16
              1792 c218  st   [$18]       6993  st([vAC])                       #17 vAC.lo -= var.lo
              1793 4500  ora  [x]         6994  ora([X])                        #18 Borrow in bit 7
              1794 3080  anda $80,x       6995  anda(0x80,X)                    #19 Move borrow to bit 0
              1795 0119  ld   [$19]       6996  ld([vAC+1])                     #20
              1796 a500  suba [x]         6997  suba([X])                       #21 Sub borrow from high byte
              1797 c219  st   [$19]       6998  st([vAC+1])                     #22 Store high result
              1798 1403  ld   $03,y       6999  ld(hi('REENTER'),Y)             #23
              1799 e0cb  jmp  y,$cb       7000  jmp(Y,'REENTER')                #24
              179a 00f2  ld   $f2         7001  ld(-28/2)                       #25
                                          7002  label('.subba#17')
.subba#17:    179b c218  st   [$18]       7003  st([vAC])                       #17
              179c 2500  anda [x]         7004  anda([X])                       #18 Borrow in bit 7
              179d 3080  anda $80,x       7005  anda(0x80,X)                    #19 Move borrow to bit 0
              179e 0119  ld   [$19]       7006  ld([vAC+1])                     #20
              179f a500  suba [x]         7007  suba([X])                       #21 Sub borrow from high byte
              17a0 c219  st   [$19]       7008  st([vAC+1])                     #22 Store high result
              17a1 1403  ld   $03,y       7009  ld(hi('REENTER'),Y)             #23
              17a2 e0cb  jmp  y,$cb       7010  jmp(Y,'REENTER')                #24
              17a3 00f2  ld   $f2         7011  ld(-28/2)                       #25
                                          7012
                                          7013  # ADDB implementation, dst += src, does NOT modify dst.hi
                                          7014  #label('addb#13')
                                          7015  #ld([vPC+1],Y)                   #13
                                          7016  #st([vTmp])                      #14 dst var
                                          7017  #st([Y,Xpp])                     #15 X++
                                          7018  #ld([Y,X])                       #16
                                          7019  #ld(AC,X)                        #17 src var
                                          7020  #ld([X])                         #18
                                          7021  #ld([vTmp],X)                    #19
                                          7022  #adda([X])                       #20
                                          7023  #st([X])                         #21 dst += src
                                          7024  #ld([vPC])                       #22
                                          7025  #adda(1)                         #23
                                          7026  #st([vPC])                       #24 advance vPC by 1
                                          7027  #ld(hi('REENTER'),Y)             #25
                                          7028  #jmp(Y,'REENTER')                #26
                                          7029  #ld(-30/2)                       #27
                                          7030
                                          7031  # ADDBA implementation, vAC.lo = dst + src, does NOT modify vAC.hi
                                          7032  #label('addba#13')
                                          7033  #ld([vPC+1],Y)                   #13
                                          7034  #st([vTmp])                      #14 dst var
                                          7035  #st([Y,Xpp])                     #15 X++
                                          7036  #ld([Y,X])                       #16
                                          7037  #ld(AC,X)                        #17 src var
                                          7038  #ld([X])                         #18
                                          7039  #ld([vTmp],X)                    #19
                                          7040  #adda([X])                       #20
                                          7041  #st([vAC])                       #21 vAC.lo = dst + src
                                          7042  #ld([vPC])                       #22
                                          7043  #adda(1)                         #23
                                          7044  #st([vPC])                       #24 advance vPC by 1
                                          7045  #ld(hi('REENTER'),Y)             #25
                                          7046  #jmp(Y,'REENTER')                #26
                                          7047  #ld(-30/2)                       #27
                                          7048
                                          7049  # POKEA implementation
                                          7050  label('pokea#13')
pokea#13:     17a4 1200  ld   ac,x        7051  ld(AC,X)                        #13
              17a5 0500  ld   [x]         7052  ld([X])                         #14 var.lo
              17a6 1118  ld   [$18],x     7053  ld([vAC],X)                     #15
              17a7 1519  ld   [$19],y     7054  ld([vAC+1],Y)                   #16
              17a8 ce00  st   [y,x]       7055  st([Y,X])                       #17 poke [vAC], var.lo
              17a9 1403  ld   $03,y       7056  ld(hi('NEXTY'),Y)               #18
              17aa e000  jmp  y,$00       7057  jmp(Y,'NEXTY')                  #19
              17ab 00f5  ld   $f5         7058  ld(-22/2)                       #20
                                          7059
                                          7060  # DOKEA implementation
                                          7061  label('dokea#13')
dokea#13:     17ac d21d  st   [$1d],x     7062  st([vTmp],X)                    #13
              17ad 0500  ld   [x]         7063  ld([X])                         #14 var.lo
              17ae 1118  ld   [$18],x     7064  ld([vAC],X)                     #15
              17af 1519  ld   [$19],y     7065  ld([vAC+1],Y)                   #16
              17b0 ce00  st   [y,x]       7066  st([Y,X])                       #17 poke [vAC], var.lo
              17b1 011d  ld   [$1d]       7067  ld([vTmp])                      #18
              17b2 9001  adda $01,x       7068  adda(1,X)                       #19
              17b3 0500  ld   [x]         7069  ld([X])                         #20 var.hi
              17b4 c21d  st   [$1d]       7070  st([vTmp])                      #21
              17b5 0118  ld   [$18]       7071  ld([vAC])                       #22
              17b6 9001  adda $01,x       7072  adda(1,X)                       #23
              17b7 011d  ld   [$1d]       7073  ld([vTmp])                      #24
              17b8 ce00  st   [y,x]       7074  st([Y,X])                       #25 poke [vAC+1], var.hi
              17b9 1403  ld   $03,y       7075  ld(hi('NEXTY'),Y)               #26
              17ba e000  jmp  y,$00       7076  jmp(Y,'NEXTY')                  #27
              17bb 00f1  ld   $f1         7077  ld(-30/2)                       #28
                                          7078
                                          7079  # POKEI implementation
                                          7080  label('pokei#13')
pokei#13:     17bc 1519  ld   [$19],y     7081  ld([vAC+1],Y)                   #13
              17bd 1118  ld   [$18],x     7082  ld([vAC],X)                     #14
              17be de00  st   [y,x++]     7083  st([Y,Xpp])                     #15
              17bf 1403  ld   $03,y       7084  ld(hi('NEXTY'),Y)               #16
              17c0 e000  jmp  y,$00       7085  jmp(Y,'NEXTY')                  #17
              17c1 00f6  ld   $f6         7086  ld(-20/2)                       #18
                                          7087
                                          7088  # DOKEI implementation
                                          7089  label('dokei#13')
dokei#13:     17c2 1517  ld   [$17],y     7090  ld([vPC+1],Y)                   #13
              17c3 c21d  st   [$1d]       7091  st([vTmp])                      #14 imm.hi
              17c4 de00  st   [y,x++]     7092  st([Y,Xpp])                     #15 X++
              17c5 0d00  ld   [y,x]       7093  ld([Y,X])                       #16 imm.lo
              17c6 1519  ld   [$19],y     7094  ld([vAC+1],Y)                   #17
              17c7 1118  ld   [$18],x     7095  ld([vAC],X)                     #18
              17c8 de00  st   [y,x++]     7096  st([Y,Xpp])                     #19
              17c9 011d  ld   [$1d]       7097  ld([vTmp])                      #20
              17ca ce00  st   [y,x]       7098  st([Y,X])                       #21
              17cb 0116  ld   [$16]       7099  ld([vPC])                       #22
              17cc 8001  adda $01         7100  adda(1)                         #23
              17cd c216  st   [$16]       7101  st([vPC])                       #24
              17ce 1403  ld   $03,y       7102  ld(hi('REENTER'),Y)             #25
              17cf e0cb  jmp  y,$cb       7103  jmp(Y,'REENTER')                #26
              17d0 00f1  ld   $f1         7104  ld(-30/2)                       #27
                                          7105
                                          7106  # DEEK+ implementation
                                          7107  label('deek+#13')
deek+#13:     17d1 1200  ld   ac,x        7108  ld(AC,X)                        #13
              17d2 0500  ld   [x]         7109  ld([X])                         #14 low byte deek address
              17d3 c21d  st   [$1d]       7110  st([vTmp])                      #15
              17d4 8002  adda $02         7111  adda(2)                         #16
              17d5 de00  st   [y,x++]     7112  st([Y,Xpp])                     #17
              17d6 0500  ld   [x]         7113  ld([X])                         #18 high byte deek address
              17d7 1600  ld   ac,y        7114  ld(AC,Y)                        #19
              17d8 111d  ld   [$1d],x     7115  ld([vTmp],X)                    #20
              17d9 0d00  ld   [y,x]       7116  ld([Y,X])                       #21
              17da de00  st   [y,x++]     7117  st([Y,Xpp])                     #22 X++
              17db c218  st   [$18]       7118  st([vAC])                       #23
              17dc 0d00  ld   [y,x]       7119  ld([Y,X])                       #24
              17dd c219  st   [$19]       7120  st([vAC+1])                     #25
              17de 1403  ld   $03,y       7121  ld(hi('NEXTY'),Y)               #26
              17df e000  jmp  y,$00       7122  jmp(Y,'NEXTY')                  #27
              17e0 00f1  ld   $f1         7123  ld(-30/2)                       #28
                                          7124
                                          7125
              17e1 0200  nop              7126  fillers(until=0xff)
              17e2 0200  nop
              17e3 0200  nop
              * 30 times
              17ff 0200  nop              7127  align(0x100, size=0x100)
                                          7128
                                          7129  #-----------------------------------------------------------------------
                                          7130  #       More vCPU instruction implementations, (0x1800)
                                          7131  #-----------------------------------------------------------------------
                                          7132
                                          7133  # SYS retry implementation
                                          7134  label('.sys#16')
.sys#16:      1800 0116  ld   [$16]       7135  ld([vPC])                       #16
              1801 a002  suba $02         7136  suba(2)                         #17
              1802 c216  st   [$16]       7137  st([vPC])                       #18
              1803 1403  ld   $03,y       7138  ld(hi('REENTER'),Y)             #19
              1804 e0cb  jmp  y,$cb       7139  jmp(Y,'REENTER')                #20
              1805 00f4  ld   $f4         7140  ld(-24/2)                       #21
                                          7141
                                          7142  # LUP return, no longer part of PEEK
                                          7143  label('lupReturn#19')
lupReturn#19: 1806 0000  ld   $00         7144  ld(0)                           #19
              1807 c219  st   [$19]       7145  st([vAC+1])                     #20
              1808 1403  ld   $03,y       7146  ld(hi('REENTER'),Y)             #21
              1809 e0cb  jmp  y,$cb       7147  jmp(Y,'REENTER')                #22
              180a 00f3  ld   $f3         7148  ld(-26/2)                       #23
                                          7149
                                          7150  # NOTB implementation
                                          7151  label('notb#13')
notb#13:      180b 1200  ld   ac,x        7152  ld(AC,X)                        #13 address of var
              180c 0500  ld   [x]         7153  ld([X])                         #14
              180d 60ff  xora $ff         7154  xora(255)                       #15
              180e c600  st   [x]         7155  st([X])                         #16
              180f 1403  ld   $03,y       7156  ld(hi('REENTER'),Y)             #17
              1810 e0cb  jmp  y,$cb       7157  jmp(Y,'REENTER')                #18
              1811 00f5  ld   $f5         7158  ld(-22/2)                       #19
                                          7159
                                          7160  # DOKE+ implementation
                                          7161  label('doke+#13')
doke+#13:     1812 1200  ld   ac,x        7162  ld(AC,X)                        #13
              1813 1400  ld   $00,y       7163  ld(0,Y)                         #14
              1814 0500  ld   [x]         7164  ld([X])                         #15 low byte poke address
              1815 c21d  st   [$1d]       7165  st([vTmp])                      #16
              1816 8002  adda $02         7166  adda(2)                         #17
              1817 de00  st   [y,x++]     7167  st([Y,Xpp])                     #18
              1818 0500  ld   [x]         7168  ld([X])                         #19 high byte poke address
              1819 1600  ld   ac,y        7169  ld(AC,Y)                        #20
              181a 111d  ld   [$1d],x     7170  ld([vTmp],X)                    #21
              181b 0118  ld   [$18]       7171  ld([vAC])                       #22
              181c de00  st   [y,x++]     7172  st([Y,Xpp])                     #23
              181d 0119  ld   [$19]       7173  ld([vAC+1])                     #24
              181e ce00  st   [y,x]       7174  st([Y,X])                       #25
              181f 1403  ld   $03,y       7175  ld(hi('NEXTY'),Y)               #26
              1820 e000  jmp  y,$00       7176  jmp(Y,'NEXTY')                  #27
              1821 00f1  ld   $f1         7177  ld(-30/2)                       #28
                                          7178
                                          7179  # XORI implementation
                                          7180  label('xori#13')
xori#13:      1822 6118  xora [$18]       7181  xora([vAC])                     #13
              1823 c218  st   [$18]       7182  st([vAC])                       #14
              1824 1403  ld   $03,y       7183  ld(hi('REENTER'),Y)             #15
              1825 e0cb  jmp  y,$cb       7184  jmp(Y,'REENTER')                #16
              1826 00f6  ld   $f6         7185  ld(-20/2)                       #17
                                          7186
                                          7187  # NOP implementation
                                          7188  label('nop#13')
nop#13:       1827 0116  ld   [$16]       7189  ld([vPC])                       #13
              1828 a001  suba $01         7190  suba(1)                         #14
              1829 c216  st   [$16]       7191  st([vPC])                       #15 vPC--
              182a 1403  ld   $03,y       7192  ld(hi('NEXTY'),Y)               #16
              182b e000  jmp  y,$00       7193  jmp(Y,'NEXTY')                  #17
              182c 00f6  ld   $f6         7194  ld(-20/2)                       #18
                                          7195
                                          7196  # BRA implementation
                                          7197  label('bra#13')
bra#13:       182d 1403  ld   $03,y       7198  ld(hi('REENTER'),Y)             #13
              182e e0cb  jmp  y,$cb       7199  jmp(Y,'REENTER')                #14
              182f 00f7  ld   $f7         7200  ld(-18/2)                       #15
                                          7201
                                          7202  # DBGE implementation
                                          7203  label('dbge#13')
dbge#13:      1830 1517  ld   [$17],y     7204  ld([vPC+1],Y)                   #13 vPC.hi
              1831 c21d  st   [$1d]       7205  st([vTmp])                      #14 branch offset
              1832 de00  st   [y,x++]     7206  st([Y,Xpp])                     #15 X++, address of counter
              1833 0d00  ld   [y,x]       7207  ld([Y,X])                       #16
              1834 1200  ld   ac,x        7208  ld(AC,X)                        #17 fetch counter
              1835 0500  ld   [x]         7209  ld([X])                         #18
              1836 a001  suba $01         7210  suba(1)                         #19 decrement counter
              1837 e83e  blt  .dbge#22    7211  blt('.dbge#22')                 #20 if < 0 BRA
              1838 c600  st   [x]         7212  st([X])                         #21
              1839 011d  ld   [$1d]       7213  ld([vTmp])                      #22
              183a c216  st   [$16]       7214  st([vPC])                       #23 BRA to branch offset
              183b 1403  ld   $03,y       7215  ld(hi('NEXTY'),Y)               #24
              183c e000  jmp  y,$00       7216  jmp(Y,'NEXTY')                  #25
              183d 00f2  ld   $f2         7217  ld(-28/2)                       #26
                                          7218  label('.dbge#22')
.dbge#22:     183e 0116  ld   [$16]       7219  ld([vPC])                       #22
              183f 8001  adda $01         7220  adda(1)                         #23
              1840 c216  st   [$16]       7221  st([vPC])                       #24 advance vPC by 1
              1841 1403  ld   $03,y       7222  ld(hi('REENTER'),Y)             #25
              1842 e0cb  jmp  y,$cb       7223  jmp(Y,'REENTER')                #26
              1843 00f1  ld   $f1         7224  ld(-30/2)                       #27
                                          7225
                                          7226  # LDNI implementation
                                          7227  label('ldni#13')
ldni#13:      1844 60ff  xora $ff         7228  xora(255)                       #13
              1845 8001  adda $01         7229  adda(1)                         #14
              1846 c218  st   [$18]       7230  st([vAC])                       #15
              1847 00ff  ld   $ff         7231  ld(255)                         #16
              1848 c219  st   [$19]       7232  st([vAC+1])                     #17
              1849 1403  ld   $03,y       7233  ld(hi('NEXTY'),Y)               #18
              184a e000  jmp  y,$00       7234  jmp(Y,'NEXTY')                  #19
              184b 00f5  ld   $f5         7235  ld(-22/2)                       #20
                                          7236
                                          7237  # ANDBK implementation
                                          7238  label('andbk#13')
andbk#13:     184c 1517  ld   [$17],y     7239  ld([vPC+1],Y)                   #13
              184d c21d  st   [$1d]       7240  st([vTmp])                      #14 immediate value
              184e de00  st   [y,x++]     7241  st([Y,Xpp])                     #15 X++
              184f 0d00  ld   [y,x]       7242  ld([Y,X])                       #16
              1850 1200  ld   ac,x        7243  ld(AC,X)                        #17 address of var
              1851 0500  ld   [x]         7244  ld([X])                         #18
              1852 211d  anda [$1d]       7245  anda([vTmp])                    #19
              1853 c218  st   [$18]       7246  st([vAC])                       #20
              1854 0000  ld   $00         7247  ld(0)                           #21
              1855 c219  st   [$19]       7248  st([vAC+1])                     #22 Store high result
              1856 0116  ld   [$16]       7249  ld([vPC])                       #23
              1857 8001  adda $01         7250  adda(1)                         #24
              1858 c216  st   [$16]       7251  st([vPC])                       #25 advance vPC by 1
              1859 1403  ld   $03,y       7252  ld(hi('NEXTY'),Y)               #26
              185a e000  jmp  y,$00       7253  jmp(Y,'NEXTY')                  #27
              185b 00f1  ld   $f1         7254  ld(-30/2)                       #28
                                          7255
                                          7256  # ORBK implementation
                                          7257  label('orbk#13')
orbk#13:      185c 1517  ld   [$17],y     7258  ld([vPC+1],Y)                   #13
              185d c21d  st   [$1d]       7259  st([vTmp])                      #14 immediate value
              185e de00  st   [y,x++]     7260  st([Y,Xpp])                     #15 X++
              185f 0d00  ld   [y,x]       7261  ld([Y,X])                       #16
              1860 1200  ld   ac,x        7262  ld(AC,X)                        #17 address of var
              1861 0500  ld   [x]         7263  ld([X])                         #18
              1862 411d  ora  [$1d]       7264  ora([vTmp])                     #19
              1863 c218  st   [$18]       7265  st([vAC])                       #20
              1864 0000  ld   $00         7266  ld(0)                           #21
              1865 c219  st   [$19]       7267  st([vAC+1])                     #22 Store high result
              1866 0116  ld   [$16]       7268  ld([vPC])                       #23
              1867 8001  adda $01         7269  adda(1)                         #24
              1868 c216  st   [$16]       7270  st([vPC])                       #25 advance vPC by 1
              1869 1403  ld   $03,y       7271  ld(hi('NEXTY'),Y)               #26
              186a e000  jmp  y,$00       7272  jmp(Y,'NEXTY')                  #27
              186b 00f1  ld   $f1         7273  ld(-30/2)                       #28
                                          7274
                                          7275  # XORBK implementation
                                          7276  label('xorbk#13')
xorbk#13:     186c 1517  ld   [$17],y     7277  ld([vPC+1],Y)                   #13
              186d c21d  st   [$1d]       7278  st([vTmp])                      #14 immediate value
              186e de00  st   [y,x++]     7279  st([Y,Xpp])                     #15 X++
              186f 0d00  ld   [y,x]       7280  ld([Y,X])                       #16
              1870 1200  ld   ac,x        7281  ld(AC,X)                        #17 address of var
              1871 0500  ld   [x]         7282  ld([X])                         #18
              1872 611d  xora [$1d]       7283  xora([vTmp])                    #19
              1873 c218  st   [$18]       7284  st([vAC])                       #20
              1874 0000  ld   $00         7285  ld(0)                           #21
              1875 c219  st   [$19]       7286  st([vAC+1])                     #22 Store high result
              1876 0116  ld   [$16]       7287  ld([vPC])                       #23
              1877 8001  adda $01         7288  adda(1)                         #24
              1878 c216  st   [$16]       7289  st([vPC])                       #25 advance vPC by 1
              1879 1403  ld   $03,y       7290  ld(hi('NEXTY'),Y)               #26
              187a e000  jmp  y,$00       7291  jmp(Y,'NEXTY')                  #27
              187b 00f1  ld   $f1         7292  ld(-30/2)                       #28
                                          7293
                                          7294  # CMPI implementation
                                          7295  label('cmpi#13')
cmpi#13:      187c c21d  st   [$1d]       7296  st([vTmp])                      #13 immediate value
              187d 00fd  ld   $fd         7297  ld(min(0,maxTicks-36/2))        #14
              187e 8115  adda [$15]       7298  adda([vTicks])                  #15
              187f e89c  blt  .cmpi#18    7299  blt('.cmpi#18')                 #16 not enough time left, so retry
              1880 1517  ld   [$17],y     7300  ld([vPC+1],Y)                   #17
              1881 011d  ld   [$1d]       7301  ld([vTmp])                      #18 immediate value
              1882 de00  st   [y,x++]     7302  st([Y,Xpp])                     #19 X++
              1883 0d00  ld   [y,x]       7303  ld([Y,X])                       #20 address of var
              1884 1200  ld   ac,x        7304  ld(AC,X)                        #21
              1885 0500  ld   [x]         7305  ld([X])                         #22 low byte of var
              1886 e892  blt  .cmpi#25    7306  bmi('.cmpi#25')                 #23
              1887 a11d  suba [$1d]       7307  suba([vTmp])                    #24
              1888 c218  st   [$18]       7308  st([vAC])                       #25 store low result
              1889 411d  ora  [$1d]       7309  ora([vTmp])                     #26
              188a 2080  anda $80         7310  anda(0x80)                      #27
              188b c219  st   [$19]       7311  st([vAC+1])                     #28 [vAC.hi] = sign bit, numerical accuracy is not important
              188c 0116  ld   [$16]       7312  ld([vPC])                       #29
              188d 8001  adda $01         7313  adda(1)                         #30
              188e c216  st   [$16]       7314  st([vPC])                       #31 advance vPC by 1
              188f 1403  ld   $03,y       7315  ld(hi('NEXTY'),Y)               #32
              1890 e000  jmp  y,$00       7316  jmp(Y,'NEXTY')                  #33
              1891 00ee  ld   $ee         7317  ld(-36/2)                       #34
                                          7318  label('.cmpi#25')
.cmpi#25:     1892 c218  st   [$18]       7319  st([vAC])                       #25 store low result
              1893 211d  anda [$1d]       7320  anda([vTmp])                    #26
              1894 2080  anda $80         7321  anda(0x80)                      #27
              1895 c219  st   [$19]       7322  st([vAC+1])                     #28 [vAC.hi] = sign bit, numerical accuracy is not important
              1896 0116  ld   [$16]       7323  ld([vPC])                       #29
              1897 8001  adda $01         7324  adda(1)                         #30
              1898 c216  st   [$16]       7325  st([vPC])                       #31 advance vPC by 1
              1899 1403  ld   $03,y       7326  ld(hi('NEXTY'),Y)               #32
              189a e000  jmp  y,$00       7327  jmp(Y,'NEXTY')                  #33
              189b 00ee  ld   $ee         7328  ld(-36/2)                       #34
                                          7329  label('.cmpi#18')
.cmpi#18:     189c 0116  ld   [$16]       7330  ld([vPC])                       #18 retry instruction
              189d a002  suba $02         7331  suba(2)                         #19
              189e c216  st   [$16]       7332  st([vPC])                       #20
              189f 1403  ld   $03,y       7333  ld(hi('REENTER'),Y)             #21
              18a0 e0cb  jmp  y,$cb       7334  jmp(Y,'REENTER')                #22
              18a1 00f3  ld   $f3         7335  ld(-26/2)                       #23
                                          7336
                                          7337  # JEQ implementation
                                          7338  label('jeq#13')
jeq#13:       18a2 1517  ld   [$17],y     7339  ld([vPC+1],Y)                   #13 vPC.hi
              18a3 0119  ld   [$19]       7340  ld([vAC+1])                     #14
              18a4 4118  ora  [$18]       7341  ora([vAC])                      #15
              18a5 f0ad  beq  .jeq#18     7342  beq('.jeq#18')                  #16 if (vAC.hi OR vAC.lo) == 0
              18a6 0d00  ld   [y,x]       7343  ld([Y,X])                       #17 lo address of jump destination
              18a7 0116  ld   [$16]       7344  ld([vPC])                       #18
              18a8 8001  adda $01         7345  adda(1)                         #19
              18a9 c216  st   [$16]       7346  st([vPC])                       #20
              18aa 1403  ld   $03,y       7347  ld(hi('REENTER'),Y)             #21
              18ab e0cb  jmp  y,$cb       7348  jmp(Y,'REENTER')                #22
              18ac 00f3  ld   $f3         7349  ld(-26/2)                       #23
                                          7350  label('.jeq#18')
.jeq#18:      18ad c216  st   [$16]       7351  st([vPC])                       #18
              18ae de00  st   [y,x++]     7352  st([Y,Xpp])                     #19
              18af 0d00  ld   [y,x]       7353  ld([Y,X])                       #20 hi address of jump destination
              18b0 c217  st   [$17]       7354  st([vPC+1])                     #21
              18b1 1403  ld   $03,y       7355  ld(hi('NEXTY'),Y)               #22
              18b2 e000  jmp  y,$00       7356  jmp(Y,'NEXTY')                  #23
              18b3 00f3  ld   $f3         7357  ld(-26/2)                       #24
                                          7358
                                          7359  # JNE implementation
                                          7360  label('jne#13')
jne#13:       18b4 1517  ld   [$17],y     7361  ld([vPC+1],Y)                   #13 vPC.hi
              18b5 0119  ld   [$19]       7362  ld([vAC+1])                     #14
              18b6 4118  ora  [$18]       7363  ora([vAC])                      #15
              18b7 ecbf  bne  .jne#18     7364  bne('.jne#18')                  #16 if (vAC.hi OR vAC.lo) != 0
              18b8 0d00  ld   [y,x]       7365  ld([Y,X])                       #17 address of branch destination
              18b9 0116  ld   [$16]       7366  ld([vPC])                       #18
              18ba 8001  adda $01         7367  adda(1)                         #19
              18bb c216  st   [$16]       7368  st([vPC])                       #20
              18bc 1403  ld   $03,y       7369  ld(hi('REENTER'),Y)             #21
              18bd e0cb  jmp  y,$cb       7370  jmp(Y,'REENTER')                #22
              18be 00f3  ld   $f3         7371  ld(-26/2)                       #23
                                          7372  label('.jne#18')
.jne#18:      18bf c216  st   [$16]       7373  st([vPC])                       #18
              18c0 de00  st   [y,x++]     7374  st([Y,Xpp])                     #19
              18c1 0d00  ld   [y,x]       7375  ld([Y,X])                       #20 hi address of jump destination
              18c2 c217  st   [$17]       7376  st([vPC+1])                     #21
              18c3 1403  ld   $03,y       7377  ld(hi('NEXTY'),Y)               #22
              18c4 e000  jmp  y,$00       7378  jmp(Y,'NEXTY')                  #23
              18c5 00f3  ld   $f3         7379  ld(-26/2)                       #24
                                          7380
                                          7381  # JLT implementation
                                          7382  label('jlt#13')
jlt#13:       18c6 1517  ld   [$17],y     7383  ld([vPC+1],Y)                   #13 vPC.hi
              18c7 0119  ld   [$19]       7384  ld([vAC+1])                     #14
              18c8 e8d0  blt  .jlt#17     7385  blt('.jlt#17')                  #15 if vAC.hi < 0
              18c9 0d00  ld   [y,x]       7386  ld([Y,X])                       #16 address of branch destination
              18ca 0116  ld   [$16]       7387  ld([vPC])                       #17
              18cb 8001  adda $01         7388  adda(1)                         #18
              18cc c216  st   [$16]       7389  st([vPC])                       #19
              18cd 1403  ld   $03,y       7390  ld(hi('NEXTY'),Y)               #20
              18ce e000  jmp  y,$00       7391  jmp(Y,'NEXTY')                  #21
              18cf 00f4  ld   $f4         7392  ld(-24/2)                       #22
                                          7393  label('.jlt#17')
.jlt#17:      18d0 c216  st   [$16]       7394  st([vPC])                       #17
              18d1 de00  st   [y,x++]     7395  st([Y,Xpp])                     #18
              18d2 0d00  ld   [y,x]       7396  ld([Y,X])                       #19 hi address of jump destination
              18d3 c217  st   [$17]       7397  st([vPC+1])                     #20
              18d4 1403  ld   $03,y       7398  ld(hi('REENTER'),Y)             #21
              18d5 e0cb  jmp  y,$cb       7399  jmp(Y,'REENTER')                #22
              18d6 00f3  ld   $f3         7400  ld(-26/2)                       #23
                                          7401
                                          7402  # BBEQ implementation
                                          7403  #label('bbeq#13')
                                          7404  #ld([vPC+1],Y)                   #13 vPC.hi
                                          7405  #st([vTmp])                      #14 branch offset
                                          7406  #st([Y,Xpp])                     #15 X++
                                          7407  #ld([Y,X])                       #16
                                          7408  #ld(AC,X)                        #17
                                          7409  #ld([X])                         #18 low byte of var
                                          7410  #beq('.bbeq#21')                 #19
                                          7411  #ld([vPC])                       #20
                                          7412  #adda(1)                         #21
                                          7413  #st([vPC])                       #22 advance vPC by 1
                                          7414  #ld(hi('REENTER'),Y)             #23
                                          7415  #jmp(Y,'REENTER')                #24
                                          7416  #ld(-28/2)                       #25
                                          7417  #label('.bbeq#21')
                                          7418  #ld([vTmp])                      #21
                                          7419  #st([vPC])                       #22 branch to offset
                                          7420  #ld(hi('REENTER'),Y)             #23
                                          7421  #jmp(Y,'REENTER')                #24
                                          7422  #ld(-28/2)                       #25
                                          7423
                                          7424  # BWEQ implementation
                                          7425  #label('bweq#13')
                                          7426  #ld([vPC+1],Y)                   #13 vPC.hi
                                          7427  #st([vTmp])                      #14 branch offset
                                          7428  #st([Y,Xpp])                     #15 X++
                                          7429  #ld([Y,X])                       #16
                                          7430  #ld(AC,X)                        #17
                                          7431  #ld([X])                         #18 low byte of var
                                          7432  #ld(0,Y)                         #19
                                          7433  #st([Y,Xpp])                     #20 X++
                                          7434  #ora([Y,X])                      #21 or with high byte of var
                                          7435  #beq('.bweq#24')                 #22
                                          7436  #ld([vPC])                       #23
                                          7437  #adda(1)                         #24
                                          7438  #st([vPC])                       #25 advance vPC by 1
                                          7439  #ld(hi('NEXTY'),Y)               #26
                                          7440  #jmp(Y,'NEXTY')                  #27
                                          7441  #ld(-30/2)                       #28
                                          7442  #label('.bweq#24')
                                          7443  #ld([vTmp])                      #24
                                          7444  #st([vPC])                       #25 branch to offset
                                          7445  #ld(hi('NEXTY'),Y)               #26
                                          7446  #jmp(Y,'NEXTY')                  #27
                                          7447  #ld(-30/2)                       #28
                                          7448
                                          7449
              18d7 0200  nop              7450  fillers(until=0xff)
              18d8 0200  nop
              18d9 0200  nop
              * 40 times
              18ff 0200  nop              7451  align(0x100, size=0x100)
                                          7452
                                          7453  #-----------------------------------------------------------------------
                                          7454  #       More sys implementations, (0x1900)
                                          7455  #-----------------------------------------------------------------------
                                          7456  # sys_Multiply_s16, sum:s16 = x:s16 * y:s16
                                          7457  # x:args0:1 y:args2:3 sum:args4:5 mask:args6:7
                                          7458  label('sys_Multiply_s16')
sys_Multiply_s16:
              1900 2126  anda [$26]       7459  anda([sysArgs+2])               #18,
              1901 c218  st   [$18]       7460  st([vAC])                       #19, AC.lo = mask.lo AND y.lo
              1902 012b  ld   [$2b]       7461  ld([sysArgs+7])                 #20, load mask.hio
              1903 2127  anda [$27]       7462  anda([sysArgs+3])               #21,
              1904 c219  st   [$19]       7463  st([vAC+1])                     #22, AC.hi = mask.hi AND y.hi
              1905 4118  ora  [$18]       7464  ora([vAC])                      #23,
                                          7465  beq('.sys_ms16_26')             #24, AC = 0 then skip
              1906 f00e  beq  .sys_ms16_26
              1907 0128  ld   [$28]       7466  ld([sysArgs+4])                 #25, load sum.lo
              1908 8124  adda [$24]       7467  adda([sysArgs+0])               #26, load x.lo
              1909 c228  st   [$28]       7468  st([sysArgs+4])                 #27, sum.lo = sum.lo + x.lo
                                          7469  blt('.sys_ms16_30')             #28, check for carry
              190a e810  blt  .sys_ms16_30
              190b a124  suba [$24]       7470  suba([sysArgs+0])               #29, get original sum.lo back
                                          7471  bra('.sys_ms16_32')             #30,
              190c fc12  bra  .sys_ms16_32
              190d 4124  ora  [$24]       7472  ora([sysArgs+0])                #31, carry in bit 7
                                          7473
                                          7474  label('.sys_ms16_26')
                                          7475  bra('.sys_ms16_28')             #26,
.sys_ms16_26: 190e fc18  bra  .sys_ms16_28
              190f 00e4  ld   $e4         7476  ld(-56/2)                       #27, no accumulate sys ticks
                                          7477
                                          7478  label('.sys_ms16_30')
.sys_ms16_30: 1910 2124  anda [$24]       7479  anda([sysArgs+0])               #30, carry in bit 7
              1911 0200  nop              7480  nop()                           #31,
                                          7481
                                          7482  label('.sys_ms16_32')
.sys_ms16_32: 1912 3080  anda $80,x       7483  anda(0x80,X)                    #32,
              1913 0500  ld   [x]         7484  ld([X])                         #33, move carry to bit 0
              1914 8129  adda [$29]       7485  adda([sysArgs+5])               #34,
              1915 8125  adda [$25]       7486  adda([sysArgs+1])               #35,
              1916 c229  st   [$29]       7487  st([sysArgs+5])                 #36, sum.hi = sum.hi + x.hi
              1917 00df  ld   $df         7488  ld(-66/2)                       #37, accumulate sys ticks
                                          7489
                                          7490  label('.sys_ms16_28')
.sys_ms16_28: 1918 c21d  st   [$1d]       7491  st([vTmp])                      #28,#38,
              1919 0124  ld   [$24]       7492  ld([sysArgs+0])                 #29,#39, AC = x.lo
              191a 3080  anda $80,x       7493  anda(0x80,X)                    #30,#40, X = AC & 0x80
              191b 8124  adda [$24]       7494  adda([sysArgs+0])               #31,#41, AC = x.lo <<1
              191c c224  st   [$24]       7495  st([sysArgs+0])                 #32,#42, x.lo = AC
              191d 0500  ld   [x]         7496  ld([X])                         #33,#43, AC = X >>7
              191e 8125  adda [$25]       7497  adda([sysArgs+1])               #34,#44,
              191f 8125  adda [$25]       7498  adda([sysArgs+1])               #35,#45,
              1920 c225  st   [$25]       7499  st([sysArgs+1])                 #36,#46, x.hi = x.hi <<1 + AC
              1921 012a  ld   [$2a]       7500  ld([sysArgs+6])                 #37,#47, AC = mask.lo
              1922 3080  anda $80,x       7501  anda(0x80,X)                    #38,#48, X = AC & 0x80
              1923 812a  adda [$2a]       7502  adda([sysArgs+6])               #39,#49, AC = mask.lo <<1
              1924 c22a  st   [$2a]       7503  st([sysArgs+6])                 #40,#50, mask.lo = AC
              1925 0500  ld   [x]         7504  ld([X])                         #41,#51, AC = X >>7
              1926 812b  adda [$2b]       7505  adda([sysArgs+7])               #42,#52,
              1927 812b  adda [$2b]       7506  adda([sysArgs+7])               #43,#53,
              1928 c22b  st   [$2b]       7507  st([sysArgs+7])                 #44,#54, mask.hi = mask.hi <<1 + AC
              1929 412a  ora  [$2a]       7508  ora([sysArgs+6])                #45,#55,
                                          7509  beq('.sys_ms16_48')             #46,#56, if mask = 0
              192a f032  beq  .sys_ms16_48
              192b 0128  ld   [$28]       7510  ld([sysArgs+4])                 #47,#57
              192c 0116  ld   [$16]       7511  ld([vPC])                       #48,#58,
              192d a002  suba $02         7512  suba(2)                         #49,#59,
              192e c216  st   [$16]       7513  st([vPC])                       #50,#60, restart SYS function
              192f 1403  ld   $03,y       7514  ld(hi('REENTER'),Y)             #51,#61,
              1930 e0cb  jmp  y,$cb       7515  jmp(Y,'REENTER')                #52,#62,
              1931 011d  ld   [$1d]       7516  ld([vTmp])                      #53,#63,
                                          7517
                                          7518  label('.sys_ms16_48')
.sys_ms16_48: 1932 c218  st   [$18]       7519  st([vAC])                       #48,#58,
              1933 0129  ld   [$29]       7520  ld([sysArgs+5])                 #49,#59,
              1934 c219  st   [$19]       7521  st([vAC+1])                     #50,#60,
              1935 1403  ld   $03,y       7522  ld(hi('REENTER'),Y)             #51,#61,
              1936 e0cb  jmp  y,$cb       7523  jmp(Y,'REENTER')                #52,#62,
              1937 011d  ld   [$1d]       7524  ld([vTmp])                      #53,#63,
                                          7525
                                          7526
                                          7527  #-----------------------------------------------------------------------
                                          7528  # sys_Divide_s16, x:s16 = x:s16 / y:s16, rem:s16 = x:s16 % y:s16
                                          7529  # x:args0:1 y:args2:3 rem:args4:5 mask:args6:7
                                          7530  label('sys_Divide_s16')
sys_Divide_s16:
              1938 3080  anda $80,x       7531  anda(0x80,X)                    #18, X = AC & 0x80
              1939 8128  adda [$28]       7532  adda([sysArgs+4])               #19, AC = rem.lo <<1
              193a c228  st   [$28]       7533  st([sysArgs+4])                 #20, rem.lo = AC
              193b 0500  ld   [x]         7534  ld([X])                         #21, AC = X >>7
              193c 8129  adda [$29]       7535  adda([sysArgs+5])               #22,
              193d 8129  adda [$29]       7536  adda([sysArgs+5])               #23,
              193e c229  st   [$29]       7537  st([sysArgs+5])                 #24, rem.hi = rem.hi <<1 + AC
              193f 0125  ld   [$25]       7538  ld([sysArgs+1])                 #25,
              1940 2080  anda $80         7539  anda(0x80)                      #26, sign of x
                                          7540  beq('.sys_ds16_29')             #27, if x >= 0
              1941 f046  beq  .sys_ds16_29
              1942 0128  ld   [$28]       7541  ld([sysArgs+4])                 #28,
              1943 8001  adda $01         7542  adda(1)                         #29,
                                          7543  bra('.sys_ds16_32')             #30,
              1944 fc49  bra  .sys_ds16_32
              1945 c228  st   [$28]       7544  st([sysArgs+4])                 #31, rem.lo++
                                          7545
                                          7546  label('.sys_ds16_29')
.sys_ds16_29: 1946 0200  nop              7547  nop()                           #29
              1947 0200  nop              7548  nop()                           #30
              1948 0200  nop              7549  nop()                           #31
                                          7550
                                          7551  label('.sys_ds16_32')
.sys_ds16_32: 1949 0124  ld   [$24]       7552  ld([sysArgs+0])                 #32, AC = x.lo
              194a 3080  anda $80,x       7553  anda(0x80,X)                    #33, X = AC & 0x80
              194b 8124  adda [$24]       7554  adda([sysArgs+0])               #34, AC = x.lo <<1
              194c c224  st   [$24]       7555  st([sysArgs+0])                 #35, x.lo = AC
              194d 0500  ld   [x]         7556  ld([X])                         #36, AC = X >>7
              194e 8125  adda [$25]       7557  adda([sysArgs+1])               #37,
              194f 8125  adda [$25]       7558  adda([sysArgs+1])               #38,
              1950 c225  st   [$25]       7559  st([sysArgs+1])                 #39, x.hi = x.hi <<1 + AC
                                          7560
              1951 0128  ld   [$28]       7561  ld([sysArgs+4])                 #40, load rem.lo
                                          7562  blt('.sys_ds16_43')             #41, check for borrow
              1952 e857  blt  .sys_ds16_43
              1953 a126  suba [$26]       7563  suba([sysArgs+2])               #42,
              1954 c218  st   [$18]       7564  st([vAC])                       #43, vAC.lo = rem.lo - y.lo
                                          7565  bra('.sys_ds16_46')             #44,
              1955 fc5a  bra  .sys_ds16_46
              1956 4126  ora  [$26]       7566  ora([sysArgs+2])                #45,
                                          7567
                                          7568  label('.sys_ds16_43')
.sys_ds16_43: 1957 c218  st   [$18]       7569  st([vAC])                       #43,
              1958 2126  anda [$26]       7570  anda([sysArgs+2])               #44,
              1959 0200  nop              7571  nop()                           #45,
                                          7572
                                          7573  label('.sys_ds16_46')
.sys_ds16_46: 195a 3080  anda $80,x       7574  anda(0x80,X)                    #46, move borrow to bit 0
              195b 0129  ld   [$29]       7575  ld([sysArgs+5])                 #47, load rem.hi
              195c a500  suba [x]         7576  suba([X])                       #48,
              195d a127  suba [$27]       7577  suba([sysArgs+3])               #49,
              195e c219  st   [$19]       7578  st([vAC+1])                     #50, vAC.hi = rem.hi - y.hi
                                          7579  blt('.sys_ds16_53')             #51,
              195f e869  blt  .sys_ds16_53
              1960 00dc  ld   $dc         7580  ld(-72/2)                       #52
              1961 0118  ld   [$18]       7581  ld([vAC])                       #53,
              1962 c228  st   [$28]       7582  st([sysArgs+4])                 #54,
              1963 0119  ld   [$19]       7583  ld([vAC+1])                     #55,
              1964 c229  st   [$29]       7584  st([sysArgs+5])                 #56, rem = vAC
              1965 0124  ld   [$24]       7585  ld([sysArgs+0])                 #57,
              1966 8001  adda $01         7586  adda(1)                         #58,
              1967 c224  st   [$24]       7587  st([sysArgs+0])                 #59, x.lo++
              1968 00d8  ld   $d8         7588  ld(-80/2)                       #60,
                                          7589
                                          7590  label('.sys_ds16_53')
.sys_ds16_53: 1969 c21d  st   [$1d]       7591  st([vTmp])                      #53, #61,
              196a 012a  ld   [$2a]       7592  ld([sysArgs+6])                 #54, #62, AC = mask.lo
              196b 3080  anda $80,x       7593  anda(0x80,X)                    #55, #63, X = AC & 0x80
              196c 812a  adda [$2a]       7594  adda([sysArgs+6])               #56, #64, AC = mask.lo <<1
              196d c22a  st   [$2a]       7595  st([sysArgs+6])                 #57, #65, mask.lo = AC
              196e 0500  ld   [x]         7596  ld([X])                         #58, #66, AC = X >>7
              196f 812b  adda [$2b]       7597  adda([sysArgs+7])               #59, #67,
              1970 812b  adda [$2b]       7598  adda([sysArgs+7])               #60, #68,
              1971 c22b  st   [$2b]       7599  st([sysArgs+7])                 #61, #69, mask.hi = mask.hi <<1 + AC
              1972 412a  ora  [$2a]       7600  ora([sysArgs+6])                #62, #70,
                                          7601  bne('.sys_ds16_65')             #63, #71,
              1973 ec7a  bne  .sys_ds16_65
              1974 0116  ld   [$16]       7602  ld([vPC])                       #64, #72,
              1975 0200  nop              7603  nop()                           #65, #73,
              1976 0200  nop              7604  nop()                           #66, #74,
              1977 1403  ld   $03,y       7605  ld(hi('REENTER'),Y)             #67, #75,
              1978 e0cb  jmp  y,$cb       7606  jmp(Y,'REENTER')                #68, #76,
              1979 011d  ld   [$1d]       7607  ld([vTmp])                      #69, #77,
                                          7608
                                          7609  label('.sys_ds16_65')
.sys_ds16_65: 197a a002  suba $02         7610  suba(2)                         #65, #73,
              197b c216  st   [$16]       7611  st([vPC])                       #66, #74, restart SYS function
              197c 1403  ld   $03,y       7612  ld(hi('REENTER'),Y)             #67, #75,
              197d e0cb  jmp  y,$cb       7613  jmp(Y,'REENTER')                #68, #76,
              197e 011d  ld   [$1d]       7614  ld([vTmp])                      #69, #77,
                                          7615
                                          7616
                                          7617  #-----------------------------------------------------------------------
                                          7618  # sys_DrawLine
                                          7619  label('sys_DrawLine')
sys_DrawLine: 197f 1182  ld   [$82],x     7620  ld([0x82],X)                    #18, X = [xy1].lo
              1980 1583  ld   [$83],y     7621  ld([0x83],Y)                    #19, Y = [xy1].hi
              1981 ce00  st   [y,x]       7622  st([Y,X])                       #20, [Y, X] = fgColour
              1982 1184  ld   [$84],x     7623  ld([0x84],X)                    #21, X = [xy2].lo
              1983 1585  ld   [$85],y     7624  ld([0x85],Y)                    #22, Y = [xy2].hi
              1984 ce00  st   [y,x]       7625  st([Y,X])                       #23, [Y, X] = fgColour
                                          7626
              1985 01a0  ld   [$a0]       7627  ld([0xA0])                      #24, num.lo
              1986 819c  adda [$9c]       7628  adda([0x9C])                    #25, sy.lo
              1987 c2a0  st   [$a0]       7629  st([0xA0])                      #26, num.lo = num.lo + sy.lo
                                          7630  blt('.sys_drawl_29')            #27, check for carry
              1988 e88c  blt  .sys_drawl_29
              1989 a19c  suba [$9c]       7631  suba([0x9C])                    #28, get original num.lo back
                                          7632  bra('.sys_drawl_31')            #29,
              198a fc8e  bra  .sys_drawl_31
              198b 419c  ora  [$9c]       7633  ora([0x9C])                     #30, carry in bit 7
                                          7634
                                          7635  label('.sys_drawl_29')
.sys_drawl_29:
              198c 219c  anda [$9c]       7636  anda([0x9C])                    #29, carry in bit 7
              198d 0200  nop              7637  nop()                           #30,
                                          7638
                                          7639  label('.sys_drawl_31')
.sys_drawl_31:
              198e 3080  anda $80,x       7640  anda(0x80,X)                    #31,
              198f 0500  ld   [x]         7641  ld([X])                         #32, move carry to bit 0
              1990 81a1  adda [$a1]       7642  adda([0xA1])                    #33,
              1991 819d  adda [$9d]       7643  adda([0x9D])                    #34,
              1992 c2a1  st   [$a1]       7644  st([0xA1])                      #35, num.hi = num.hi + sy.hi
                                          7645
              1993 01a0  ld   [$a0]       7646  ld([0xA0])                      #36, num.lo
                                          7647  blt('.sys_drawl_39')            #37, check for borrow
              1994 e899  blt  .sys_drawl_39
              1995 a19a  suba [$9a]       7648  suba([0x9A])                    #38, sx.lo
              1996 c218  st   [$18]       7649  st([vAC])                       #39, vAC.lo = num.lo - sx.lo
                                          7650  bra('.sys_drawl_42')            #40,
              1997 fc9c  bra  .sys_drawl_42
              1998 419a  ora  [$9a]       7651  ora([0x9A])                     #41,
                                          7652
                                          7653  label('.sys_drawl_39')
.sys_drawl_39:
              1999 c218  st   [$18]       7654  st([vAC])                       #39,
              199a 219a  anda [$9a]       7655  anda([0x9A])                    #40,
              199b 0200  nop              7656  nop()                           #41,
                                          7657
                                          7658  label('.sys_drawl_42')
.sys_drawl_42:
              199c 3080  anda $80,x       7659  anda(0x80,X)                    #42, move borrow to bit 0
              199d 01a1  ld   [$a1]       7660  ld([0xA1])                      #43, num.hi
              199e a500  suba [x]         7661  suba([X])                       #44,
              199f a19b  suba [$9b]       7662  suba([0x9B])                    #45,
                                          7663  blt('.sys_drawl_48')            #46,
              19a0 e8cf  blt  .sys_drawl_48
              19a1 c219  st   [$19]       7664  st([vAC+1])                     #47, vAC.hi = num.hi - sx.hi
              19a2 0118  ld   [$18]       7665  ld([vAC])                       #48,
              19a3 c2a0  st   [$a0]       7666  st([0xA0])                      #49,
              19a4 0119  ld   [$19]       7667  ld([vAC+1])                     #50,
              19a5 c2a1  st   [$a1]       7668  st([0xA1])                      #51, num = vAC
                                          7669
              19a6 0182  ld   [$82]       7670  ld([0x82])                      #52, xy1.lo
              19a7 8186  adda [$86]       7671  adda([0x86])                    #53, dxy1.lo
              19a8 c282  st   [$82]       7672  st([0x82])                      #54, xy1.lo = xy1.lo + dxy1.lo
                                          7673  blt('.sys_drawl_57')            #55, check for carry
              19a9 e8ad  blt  .sys_drawl_57
              19aa a186  suba [$86]       7674  suba([0x86])                    #56, get original xy1.lo back
                                          7675  bra('.sys_drawl_59')            #57,
              19ab fcaf  bra  .sys_drawl_59
              19ac 4186  ora  [$86]       7676  ora([0x86])                     #58, carry in bit 7
                                          7677
                                          7678  label('.sys_drawl_57')
.sys_drawl_57:
              19ad 2186  anda [$86]       7679  anda([0x86])                    #57, carry in bit 7
              19ae 0200  nop              7680  nop()                           #58,
                                          7681
                                          7682  label('.sys_drawl_59')
.sys_drawl_59:
              19af 3080  anda $80,x       7683  anda(0x80,X)                    #59,
              19b0 0500  ld   [x]         7684  ld([X])                         #60, move carry to bit 0
              19b1 8183  adda [$83]       7685  adda([0x83])                    #61,
              19b2 8187  adda [$87]       7686  adda([0x87])                    #62,
              19b3 c283  st   [$83]       7687  st([0x83])                      #63, xy1.hi = xy1.hi + dxy1.hi
                                          7688
              19b4 0184  ld   [$84]       7689  ld([0x84])                      #64, xy2.lo
                                          7690  blt('.sys_drawl_67')            #65, check for borrow
              19b5 e8ba  blt  .sys_drawl_67
              19b6 a186  suba [$86]       7691  suba([0x86])                    #66, dxy1.lo
              19b7 c284  st   [$84]       7692  st([0x84])                      #67, xy2.lo = xy2.lo - dxy1.lo
                                          7693  bra('.sys_drawl_70')            #68,
              19b8 fcbd  bra  .sys_drawl_70
              19b9 4186  ora  [$86]       7694  ora([0x86])                     #69,
                                          7695
                                          7696  label('.sys_drawl_67')
.sys_drawl_67:
              19ba c284  st   [$84]       7697  st([0x84])                      #67,
              19bb 2186  anda [$86]       7698  anda([0x86])                    #68,
              19bc 0200  nop              7699  nop()                           #69,
                                          7700
                                          7701  label('.sys_drawl_70')
.sys_drawl_70:
              19bd 3080  anda $80,x       7702  anda(0x80,X)                    #70, move borrow to bit 0
              19be 0185  ld   [$85]       7703  ld([0x85])                      #71, xy2.hi
              19bf a500  suba [x]         7704  suba([X])                       #72,
              19c0 a187  suba [$87]       7705  suba([0x87])                    #73,
              19c1 c285  st   [$85]       7706  st([0x85])                      #74, xy2.hi = xy2.hi - dxy1.hi
                                          7707
              19c2 019e  ld   [$9e]       7708  ld([0x9E])                      #75,
              19c3 a001  suba $01         7709  suba(1)                         #76,
                                          7710  bne('.sys_drawl_79')            #77,
              19c4 ecc9  bne  .sys_drawl_79
              19c5 c29e  st   [$9e]       7711  st([0x9E])                      #78, drawLine_count--
              19c6 1403  ld   $03,y       7712  ld(hi('REENTER'),Y)             #79,
              19c7 e0cb  jmp  y,$cb       7713  jmp(Y,'REENTER')                #80,
              19c8 00d6  ld   $d6         7714  ld(-84/2)                       #81,
                                          7715
                                          7716  label('.sys_drawl_79')
.sys_drawl_79:
              19c9 0116  ld   [$16]       7717  ld([vPC])                       #79,
              19ca a002  suba $02         7718  suba(2)                         #80,
              19cb c216  st   [$16]       7719  st([vPC])                       #81, restart
              19cc 1403  ld   $03,y       7720  ld(hi('NEXTY'),Y)               #82,
              19cd e000  jmp  y,$00       7721  jmp(Y,'NEXTY')                  #83,
              19ce 00d5  ld   $d5         7722  ld(-86/2)                       #84,
                                          7723
                                          7724  label('.sys_drawl_48')
.sys_drawl_48:
              19cf 0182  ld   [$82]       7725  ld([0x82])                      #48, xy1.lo
              19d0 8188  adda [$88]       7726  adda([0x88])                    #49, dxy2.lo
              19d1 c282  st   [$82]       7727  st([0x82])                      #50, xy1.lo = xy1.lo + dxy2.lo
                                          7728  blt('.sys_drawl_53')            #51, check for carry
              19d2 e8d6  blt  .sys_drawl_53
              19d3 a188  suba [$88]       7729  suba([0x88])                    #52, get original xy1.lo back
                                          7730  bra('.sys_drawl_55')            #53,
              19d4 fcd8  bra  .sys_drawl_55
              19d5 4188  ora  [$88]       7731  ora([0x88])                     #54, carry in bit 7
                                          7732
                                          7733  label('.sys_drawl_53')
.sys_drawl_53:
              19d6 2188  anda [$88]       7734  anda([0x88])                    #53, carry in bit 7
              19d7 0200  nop              7735  nop()                           #54,
                                          7736
                                          7737  label('.sys_drawl_55')
.sys_drawl_55:
              19d8 3080  anda $80,x       7738  anda(0x80,X)                    #55,
              19d9 0500  ld   [x]         7739  ld([X])                         #56, move carry to bit 0
              19da 8183  adda [$83]       7740  adda([0x83])                    #57,
              19db 8189  adda [$89]       7741  adda([0x89])                    #58,
              19dc c283  st   [$83]       7742  st([0x83])                      #59, xy1.hi = xy1.hi + dxy2.hi
                                          7743
              19dd 0184  ld   [$84]       7744  ld([0x84])                      #60, xy2.lo
                                          7745  blt('.sys_drawl_63')            #61, check for borrow
              19de e8e3  blt  .sys_drawl_63
              19df a188  suba [$88]       7746  suba([0x88])                    #62, dxy2.lo
              19e0 c284  st   [$84]       7747  st([0x84])                      #63, xy2.lo = xy2.lo - dxy2.lo
                                          7748  bra('.sys_drawl_66')            #64,
              19e1 fce6  bra  .sys_drawl_66
              19e2 4188  ora  [$88]       7749  ora([0x88])                     #65,
                                          7750
                                          7751  label('.sys_drawl_63')
.sys_drawl_63:
              19e3 c284  st   [$84]       7752  st([0x84])                      #63,
              19e4 2188  anda [$88]       7753  anda([0x88])                    #64,
              19e5 0200  nop              7754  nop()                           #65,
                                          7755
                                          7756  label('.sys_drawl_66')
.sys_drawl_66:
              19e6 3080  anda $80,x       7757  anda(0x80,X)                    #66, move borrow to bit 0
              19e7 0185  ld   [$85]       7758  ld([0x85])                      #67, xy2.hi
              19e8 a500  suba [x]         7759  suba([X])                       #68,
              19e9 a189  suba [$89]       7760  suba([0x89])                    #69,
              19ea c285  st   [$85]       7761  st([0x85])                      #70, xy2.hi = xy2.hi - dxy2.hi
                                          7762
              19eb 019e  ld   [$9e]       7763  ld([0x9E])                      #71,
              19ec a001  suba $01         7764  suba(1)                         #72,
                                          7765  bne('.sys_drawl_75')            #73,
              19ed ecf2  bne  .sys_drawl_75
              19ee c29e  st   [$9e]       7766  st([0x9E])                      #74, drawLine_count--
              19ef 1403  ld   $03,y       7767  ld(hi('REENTER'),Y)             #75,
              19f0 e0cb  jmp  y,$cb       7768  jmp(Y,'REENTER')                #76,
              19f1 00d8  ld   $d8         7769  ld(-80/2)                       #77,
                                          7770
                                          7771  label('.sys_drawl_75')
.sys_drawl_75:
              19f2 0116  ld   [$16]       7772  ld([vPC])                       #75,
              19f3 a002  suba $02         7773  suba(2)                         #76,
              19f4 c216  st   [$16]       7774  st([vPC])                       #77, restart
              19f5 1403  ld   $03,y       7775  ld(hi('NEXTY'),Y)               #78,
              19f6 e000  jmp  y,$00       7776  jmp(Y,'NEXTY')                  #79,
              19f7 00d7  ld   $d7         7777  ld(-82/2)                       #80,
                                          7778
                                          7779
              19f8 0200  nop              7780  fillers(until=0xff)
              19f9 0200  nop
              19fa 0200  nop
              * 7 times
              19ff 0200  nop              7781  align(0x100, size=0x100)
                                          7782
                                          7783  #-----------------------------------------------------------------------
                                          7784  #       More sys implementations, (0x1A00)
                                          7785  #-----------------------------------------------------------------------
                                          7786
                                          7787  # sys_ReceiveSerial1
                                          7788  # sysArgs[0:1] Current address
                                          7789  # sysArgs[2]   Checksum
                                          7790  # sysArgs[3]   Wait value (videoY)
                                          7791  label('sys_ReceiveSerial1')
sys_ReceiveSerial1:
              1a00 6127  xora [$27]       7792  xora([sysArgs+3])               #18
                                          7793  bne('.sys_receiveserial1#21')   #19 wait for scanline
              1a01 ec0e  bne  .sys_receiveserial1#21
              1a02 1124  ld   [$24],x     7794  ld([sysArgs+0],X)               #20
              1a03 1525  ld   [$25],y     7795  ld([sysArgs+1],Y)               #21
              1a04 0300  ld   in          7796  ld(IN)                          #22
              1a05 ce00  st   [y,x]       7797  st([Y,X])                       #23
              1a06 8126  adda [$26]       7798  adda([sysArgs+2])               #24
              1a07 c226  st   [$26]       7799  st([sysArgs+2])                 #25
              1a08 0124  ld   [$24]       7800  ld([sysArgs+0])                 #26
              1a09 8001  adda $01         7801  adda(1)                         #27
              1a0a c224  st   [$24]       7802  st([sysArgs+0])                 #28
              1a0b 1403  ld   $03,y       7803  ld(hi('REENTER'),Y)             #29
              1a0c e0cb  jmp  y,$cb       7804  jmp(Y,'REENTER')                #30
              1a0d 00ef  ld   $ef         7805  ld(-34/2)                       #31
                                          7806
                                          7807  # Restart the instruction in the next timeslice
                                          7808  label('.sys_receiveserial1#21')
.sys_receiveserial1#21:
              1a0e 0116  ld   [$16]       7809  ld([vPC])                       #21
              1a0f a002  suba $02         7810  suba(2)                         #22
              1a10 c216  st   [$16]       7811  st([vPC])                       #23
              1a11 1403  ld   $03,y       7812  ld(hi('NEXTY'),Y)               #24
              1a12 e000  jmp  y,$00       7813  jmp(Y,'NEXTY')                  #25
              1a13 00f2  ld   $f2         7814  ld(-28/2)                       #26
                                          7815
                                          7816
                                          7817  # sys_WaitVBlank
                                          7818  label('sys_WaitVBlank')
sys_WaitVBlank:
              1a14 60b3  xora $b3         7819  xora(videoYline0)               #18,
                                          7820  beq('.sys_waitvblank_21')       #19,
              1a15 f01c  beq  .sys_waitvblank_21
              1a16 0116  ld   [$16]       7821  ld([vPC])                       #20,
              1a17 a002  suba $02         7822  suba(2)                         #21,
              1a18 c216  st   [$16]       7823  st([vPC])                       #22, restart
              1a19 1403  ld   $03,y       7824  ld(hi('REENTER'),Y)             #23,
              1a1a e0cb  jmp  y,$cb       7825  jmp(Y,'REENTER')                #24,
              1a1b 00f2  ld   $f2         7826  ld(-28/2)                       #25,
                                          7827  label('.sys_waitvblank_21')
.sys_waitvblank_21:
              1a1c 1403  ld   $03,y       7828  ld(hi('REENTER'),Y)             #21,
              1a1d e0cb  jmp  y,$cb       7829  jmp(Y,'REENTER')                #22,
              1a1e 00f2  ld   $f2         7830  ld(-28/2)                       #23,
                                          7831
                                          7832
                                          7833  # sys_SortUint8Array, sysArgs0,1=array, sysArg2=i, sysArg3=j, sysArg4=key, sysArg5=length
                                          7834  label('sys_SortUint8Array')
sys_SortUint8Array:
              1a1f 0127  ld   [$27]       7835  ld([sysArgs+3])                 #18,
                                          7836  ble('.sys_sortuint8array_21')   #19, j == 0
              1a20 f838  ble  .sys_sortuint8array_21
              1a21 0124  ld   [$24]       7837  ld([sysArgs+0])                 #20,
              1a22 8127  adda [$27]       7838  adda([sysArgs+3])               #21,
              1a23 b001  suba $01,x       7839  suba(1,X)                       #22,
              1a24 0d00  ld   [y,x]       7840  ld([Y,X])                       #23,
                                          7841  bmi('.sys_sortuint8array_26')   #24, convert signed < to unsigned <
              1a25 e829  blt  .sys_sortuint8array_26
              1a26 a128  suba [$28]       7842  suba([sysArgs+4])               #25,
                                          7843  bra('.sys_sortuint8array_28')   #26,
              1a27 fc2b  bra  .sys_sortuint8array_28
              1a28 4128  ora  [$28]       7844  ora([sysArgs+4])                #27, borrow
                                          7845  label('.sys_sortuint8array_26')
.sys_sortuint8array_26:
              1a29 2128  anda [$28]       7846  anda([sysArgs+4])               #26, borrow
              1a2a 0200  nop              7847  nop()                           #27,
                                          7848  label('.sys_sortuint8array_28')
.sys_sortuint8array_28:                   7849  bmi('.sys_sortuint8array_30_0') #28, a[j-1] < key
              1a2b e844  blt  .sys_sortuint8array_30_0
              1a2c 0d00  ld   [y,x]       7850  ld([Y,X])                       #29,
              1a2d de00  st   [y,x++]     7851  st([Y,Xpp])                     #30,
              1a2e ce00  st   [y,x]       7852  st([Y,X])                       #31, a[j] = a[j-1]
              1a2f 0127  ld   [$27]       7853  ld([sysArgs+3])                 #32,
              1a30 a001  suba $01         7854  suba(1)                         #33,
              1a31 c227  st   [$27]       7855  st([sysArgs+3])                 #34, j--
              1a32 0116  ld   [$16]       7856  ld([vPC])                       #35,
              1a33 a002  suba $02         7857  suba(2)                         #36,
              1a34 c216  st   [$16]       7858  st([vPC])                       #37, restart
              1a35 1403  ld   $03,y       7859  ld(hi('NEXTY'),Y)               #38,
              1a36 e000  jmp  y,$00       7860  jmp(Y,'NEXTY')                  #39,
              1a37 00eb  ld   $eb         7861  ld(-42/2)                       #40,
                                          7862  label('.sys_sortuint8array_21')
.sys_sortuint8array_21:
              1a38 9127  adda [$27],x     7863  adda([sysArgs+3],X)             #21,
              1a39 0128  ld   [$28]       7864  ld([sysArgs+4])                 #22,
              1a3a ce00  st   [y,x]       7865  st([Y,X])                       #23, a[j] = key
              1a3b 0126  ld   [$26]       7866  ld([sysArgs+2])                 #24,
              1a3c 8001  adda $01         7867  adda(1)                         #25,
              1a3d c226  st   [$26]       7868  st([sysArgs+2])                 #26, i++
              1a3e a129  suba [$29]       7869  suba([sysArgs+5])               #27,
                                          7870  blt('.sys_sortuint8array_30_1') #28, i < length
              1a3f e850  blt  .sys_sortuint8array_30_1
              1a40 0124  ld   [$24]       7871  ld([sysArgs+0])                 #29,
              1a41 1403  ld   $03,y       7872  ld(hi('NEXTY'),Y)               #30,
              1a42 e000  jmp  y,$00       7873  jmp(Y,'NEXTY')                  #31,
              1a43 00ef  ld   $ef         7874  ld(-34/2)                       #32,
                                          7875  label('.sys_sortuint8array_30_0')
.sys_sortuint8array_30_0:
              1a44 de00  st   [y,x++]     7876  st([Y,Xpp])                     #30,
              1a45 0128  ld   [$28]       7877  ld([sysArgs+4])                 #31,
              1a46 ce00  st   [y,x]       7878  st([Y,X])                       #32, a[j] = key
              1a47 0126  ld   [$26]       7879  ld([sysArgs+2])                 #33,
              1a48 8001  adda $01         7880  adda(1)                         #34,
              1a49 c226  st   [$26]       7881  st([sysArgs+2])                 #35, i++
              1a4a a129  suba [$29]       7882  suba([sysArgs+5])               #36,
                                          7883  blt('.sys_sortuint8array_39')   #37, i < length
              1a4b e85b  blt  .sys_sortuint8array_39
              1a4c 0124  ld   [$24]       7884  ld([sysArgs+0])                 #38,
              1a4d 1403  ld   $03,y       7885  ld(hi('REENTER'),Y)             #39,
              1a4e e0cb  jmp  y,$cb       7886  jmp(Y,'REENTER')                #40,
              1a4f 00ea  ld   $ea         7887  ld(-44/2)                       #41,
                                          7888  label('.sys_sortuint8array_30_1')
.sys_sortuint8array_30_1:
              1a50 9126  adda [$26],x     7889  adda([sysArgs+2],X)             #30,
              1a51 0d00  ld   [y,x]       7890  ld([Y,X])                       #31,
              1a52 c228  st   [$28]       7891  st([sysArgs+4])                 #32, key = a[i]
              1a53 0126  ld   [$26]       7892  ld([sysArgs+2])                 #33,
              1a54 c227  st   [$27]       7893  st([sysArgs+3])                 #34, j = i
              1a55 0116  ld   [$16]       7894  ld([vPC])                       #35,
              1a56 a002  suba $02         7895  suba(2)                         #36,
              1a57 c216  st   [$16]       7896  st([vPC])                       #37, restart
              1a58 1403  ld   $03,y       7897  ld(hi('NEXTY'),Y)               #38,
              1a59 e000  jmp  y,$00       7898  jmp(Y,'NEXTY')                  #39,
              1a5a 00eb  ld   $eb         7899  ld(-42/2)                       #40,
                                          7900  label('.sys_sortuint8array_39')
.sys_sortuint8array_39:
              1a5b 9126  adda [$26],x     7901  adda([sysArgs+2],X)             #39,
              1a5c 0d00  ld   [y,x]       7902  ld([Y,X])                       #40,
              1a5d c228  st   [$28]       7903  st([sysArgs+4])                 #41, key = a[i]
              1a5e 0126  ld   [$26]       7904  ld([sysArgs+2])                 #42,
              1a5f c227  st   [$27]       7905  st([sysArgs+3])                 #43, j = i
              1a60 0116  ld   [$16]       7906  ld([vPC])                       #44,
              1a61 a002  suba $02         7907  suba(2)                         #45,
              1a62 c216  st   [$16]       7908  st([vPC])                       #46, restart
              1a63 1403  ld   $03,y       7909  ld(hi('REENTER'),Y)             #47,
              1a64 e0cb  jmp  y,$cb       7910  jmp(Y,'REENTER')                #48,
              1a65 00e6  ld   $e6         7911  ld(-52/2)                       #49,
                                          7912
                                          7913
                                          7914  # sys_SortViaIndices, sysArgs0,1=indices, sysArgs2,3=src, sysArg4,5=dst, sysArg6=dst step, vAC=count
                                          7915  label('sys_SortViaIndices')
sys_SortViaIndices:
              1a66 1124  ld   [$24],x     7916  ld([sysArgs+0],X)               #18,
              1a67 0d00  ld   [y,x]       7917  ld([Y,X])                       #19, [index]
              1a68 1527  ld   [$27],y     7918  ld([sysArgs+3],Y)               #20,
              1a69 9126  adda [$26],x     7919  adda([sysArgs+2],X)             #21, src
              1a6a 0d00  ld   [y,x]       7920  ld([Y,X])                       #22, peek(src + index)
              1a6b 1529  ld   [$29],y     7921  ld([sysArgs+5],Y)               #23,
              1a6c 1128  ld   [$28],x     7922  ld([sysArgs+4],X)               #24, dst
              1a6d ce00  st   [y,x]       7923  st([Y,X])                       #25,
              1a6e 0124  ld   [$24]       7924  ld([sysArgs+0])                 #26,
              1a6f 8001  adda $01         7925  adda(1)                         #27,
              1a70 c224  st   [$24]       7926  st([sysArgs+0])                 #28, indices++
              1a71 0128  ld   [$28]       7927  ld([sysArgs+4])                 #29,
              1a72 812a  adda [$2a]       7928  adda([sysArgs+6])               #30,
              1a73 c228  st   [$28]       7929  st([sysArgs+4])                 #31, dst += step
              1a74 0118  ld   [$18]       7930  ld([vAC])                       #32,
              1a75 a001  suba $01         7931  suba(1)                         #33,
                                          7932  beq('.sys_sortviaindices_36')   #34,
              1a76 f07e  beq  .sys_sortviaindices_36
              1a77 c218  st   [$18]       7933  st([vAC])                       #35, count--
              1a78 0116  ld   [$16]       7934  ld([vPC])                       #36,
              1a79 a002  suba $02         7935  suba(2)                         #37,
              1a7a c216  st   [$16]       7936  st([vPC])                       #38, restart
              1a7b 1403  ld   $03,y       7937  ld(hi('REENTER'),Y)             #39,
              1a7c e0cb  jmp  y,$cb       7938  jmp(Y,'REENTER')                #40,
              1a7d 00ea  ld   $ea         7939  ld(-44/2)                       #41,
                                          7940  label('.sys_sortviaindices_36')
.sys_sortviaindices_36:
              1a7e 1403  ld   $03,y       7941  ld(hi('NEXTY'),Y)               #36,
              1a7f e000  jmp  y,$00       7942  jmp(Y,'NEXTY')                  #37,
              1a80 00ec  ld   $ec         7943  ld(-40/2)                       #38,
                                          7944
                                          7945
              1a81 0200  nop              7946  fillers(until=0xd0)
              1a82 0200  nop
              1a83 0200  nop
              * 79 times
                                          7947
                                          7948  #-----------------------------------------------------------------------
                                          7949  # Extension SYS_Unpack_56
                                          7950  #-----------------------------------------------------------------------
                                          7951
                                          7952  # Unpack 3 bytes into 4 pixels
                                          7953  #
                                          7954  # Variables:
                                          7955  #       sysArgs[0:2]    Packed bytes (in)
                                          7956  #       sysArgs[0:3]    Pixels (out)
                                          7957
                                          7958  label('SYS_Unpack_56')
SYS_Unpack_56:
              1ad0 1407  ld   $07,y       7959  ld(soundTable>>8,Y)             #15
              1ad1 0126  ld   [$26]       7960  ld([sysArgs+2])                 #16 a[2]>>2
              1ad2 5003  ora  $03,x       7961  ora(0x03,X)                     #17
              1ad3 0d00  ld   [y,x]       7962  ld([Y,X])                       #18
              1ad4 c227  st   [$27]       7963  st([sysArgs+3])                 #19 -> Pixel 3
                                          7964
              1ad5 0126  ld   [$26]       7965  ld([sysArgs+2])                 #20 (a[2]&3)<<4
              1ad6 2003  anda $03         7966  anda(0x03)                      #21
              1ad7 8200  adda ac          7967  adda(AC)                        #22
              1ad8 8200  adda ac          7968  adda(AC)                        #23
              1ad9 8200  adda ac          7969  adda(AC)                        #24
              1ada 8200  adda ac          7970  adda(AC)                        #25
              1adb c226  st   [$26]       7971  st([sysArgs+2])                 #26
              1adc 0125  ld   [$25]       7972  ld([sysArgs+1])                 #27 | a[1]>>4
              1add 5003  ora  $03,x       7973  ora(0x03,X)                     #28
              1ade 0d00  ld   [y,x]       7974  ld([Y,X])                       #29
              1adf 5003  ora  $03,x       7975  ora(0x03,X)                     #30
              1ae0 0d00  ld   [y,x]       7976  ld([Y,X])                       #31
              1ae1 4126  ora  [$26]       7977  ora([sysArgs+2])                #32
              1ae2 c226  st   [$26]       7978  st([sysArgs+2])                 #33 -> Pixel 2
                                          7979
              1ae3 0125  ld   [$25]       7980  ld([sysArgs+1])                 #34 (a[1]&15)<<2
              1ae4 200f  anda $0f         7981  anda(0x0f)                      #35
              1ae5 8200  adda ac          7982  adda(AC)                        #36
              1ae6 8200  adda ac          7983  adda(AC)                        #37
              1ae7 c225  st   [$25]       7984  st([sysArgs+1])                 #38
                                          7985
              1ae8 0124  ld   [$24]       7986  ld([sysArgs+0])                 #39 | a[0]>>6
              1ae9 5003  ora  $03,x       7987  ora(0x03,X)                     #40
              1aea 0d00  ld   [y,x]       7988  ld([Y,X])                       #41
              1aeb 5003  ora  $03,x       7989  ora(0x03,X)                     #42
              1aec 0d00  ld   [y,x]       7990  ld([Y,X])                       #43
              1aed 5003  ora  $03,x       7991  ora(0x03,X)                     #44
              1aee 0d00  ld   [y,x]       7992  ld([Y,X])                       #45
              1aef 4125  ora  [$25]       7993  ora([sysArgs+1])                #46
              1af0 c225  st   [$25]       7994  st([sysArgs+1])                 #47 -> Pixel 1
                                          7995
              1af1 0124  ld   [$24]       7996  ld([sysArgs+0])                 #48 a[1]&63
              1af2 203f  anda $3f         7997  anda(0x3f)                      #49
              1af3 c224  st   [$24]       7998  st([sysArgs+0])                 #50 -> Pixel 0
                                          7999
              1af4 1403  ld   $03,y       8000  ld(hi('REENTER'),Y)             #51
              1af5 e0cb  jmp  y,$cb       8001  jmp(Y,'REENTER')                #52
              1af6 00e4  ld   $e4         8002  ld(-56/2)                       #53
                                          8003
                                          8004
              1af7 0200  nop              8005  fillers(until=0xff)
              1af8 0200  nop
              1af9 0200  nop
              * 8 times
              1aff 0200  nop              8006  align(0x100, size=0x100)
                                          8007
                                          8008  #-----------------------------------------------------------------------
                                          8009  #       More sys implementations, (0x1B00)
                                          8010  #-----------------------------------------------------------------------
                                          8011
                                          8012  # sys_MemCopyByte, sysArgs0,1=src, sysArg2,3=dst, sysArg4=src step, sysArg5=dst step, vAC=count
                                          8013  label('sys_MemCopyByte')
sys_MemCopyByte:
              1b00 1124  ld   [$24],x     8014  ld([sysArgs+0],X)               #18,
              1b01 0d00  ld   [y,x]       8015  ld([Y,X])                       #19, [src]
              1b02 1527  ld   [$27],y     8016  ld([sysArgs+3],Y)               #20,
              1b03 1126  ld   [$26],x     8017  ld([sysArgs+2],X)               #21,
              1b04 ce00  st   [y,x]       8018  st([Y,X])                       #22, [dst] = [src]
              1b05 0124  ld   [$24]       8019  ld([sysArgs+0])                 #23,
              1b06 8128  adda [$28]       8020  adda([sysArgs+4])               #24,
              1b07 c224  st   [$24]       8021  st([sysArgs+0])                 #25, src++
              1b08 0126  ld   [$26]       8022  ld([sysArgs+2])                 #26,
              1b09 8129  adda [$29]       8023  adda([sysArgs+5])               #27,
              1b0a c226  st   [$26]       8024  st([sysArgs+2])                 #28, dst++
              1b0b 0118  ld   [$18]       8025  ld([vAC])                       #29,
              1b0c a001  suba $01         8026  suba(1)                         #30,
                                          8027  beq('.sys_memcopybyte_33')      #31,
              1b0d f015  beq  .sys_memcopybyte_33
              1b0e c218  st   [$18]       8028  st([vAC])                       #32, count--
              1b0f 0116  ld   [$16]       8029  ld([vPC])                       #33,
              1b10 a002  suba $02         8030  suba(2)                         #34,
              1b11 c216  st   [$16]       8031  st([vPC])                       #35, restart
              1b12 1403  ld   $03,y       8032  ld(hi('NEXTY'),Y)               #36,
              1b13 e000  jmp  y,$00       8033  jmp(Y,'NEXTY')                  #37,
              1b14 00ec  ld   $ec         8034  ld(-40/2)                       #38,
                                          8035  label('.sys_memcopybyte_33')
.sys_memcopybyte_33:
              1b15 1403  ld   $03,y       8036  ld(hi('REENTER'),Y)             #33,
              1b16 e0cb  jmp  y,$cb       8037  jmp(Y,'REENTER')                #34,
              1b17 00ed  ld   $ed         8038  ld(-38/2)                       #35,
                                          8039
                                          8040
                                          8041  # sys_MemCopyWord, sysArgs0,1=src, sysArg2,3=dst, vAC=count, sysArg4,5=tmp
                                          8042  label('sys_MemCopyWord')
sys_MemCopyWord:
              1b18 1124  ld   [$24],x     8043  ld([sysArgs+0],X)               #18,
              1b19 0d00  ld   [y,x]       8044  ld([Y,X])                       #19, [src + 0]
              1b1a de00  st   [y,x++]     8045  st([Y,Xpp])                     #20
              1b1b c228  st   [$28]       8046  st([sysArgs+4])                 #21,
              1b1c 0d00  ld   [y,x]       8047  ld([Y,X])                       #22, [src + 1]
              1b1d c229  st   [$29]       8048  st([sysArgs+5])                 #23,
              1b1e 1527  ld   [$27],y     8049  ld([sysArgs+3],Y)               #24,
              1b1f 1126  ld   [$26],x     8050  ld([sysArgs+2],X)               #25,
              1b20 0128  ld   [$28]       8051  ld([sysArgs+4])                 #26,
              1b21 de00  st   [y,x++]     8052  st([Y,Xpp])                     #27, [dst + 0] = [src + 0]
              1b22 0129  ld   [$29]       8053  ld([sysArgs+5])                 #28,
              1b23 ce00  st   [y,x]       8054  st([Y,X])                       #29, [dst + 1] = [src + 1]
              1b24 0124  ld   [$24]       8055  ld([sysArgs+0])                 #30,
              1b25 8002  adda $02         8056  adda(2)                         #31,
              1b26 c224  st   [$24]       8057  st([sysArgs+0])                 #32, src += 2
              1b27 0126  ld   [$26]       8058  ld([sysArgs+2])                 #33,
              1b28 8002  adda $02         8059  adda(2)                         #34,
              1b29 c226  st   [$26]       8060  st([sysArgs+2])                 #35, dst += 2
              1b2a 0118  ld   [$18]       8061  ld([vAC])                       #36,
              1b2b a001  suba $01         8062  suba(1)                         #37,
                                          8063  beq('.sys_memcopyword_40')      #38,
              1b2c f034  beq  .sys_memcopyword_40
              1b2d c218  st   [$18]       8064  st([vAC])                       #39, count--
              1b2e 0116  ld   [$16]       8065  ld([vPC])                       #40,
              1b2f a002  suba $02         8066  suba(2)                         #41,
              1b30 c216  st   [$16]       8067  st([vPC])                       #42, restart
              1b31 1403  ld   $03,y       8068  ld(hi('REENTER'),Y)             #43,
              1b32 e0cb  jmp  y,$cb       8069  jmp(Y,'REENTER')                #44,
              1b33 00e8  ld   $e8         8070  ld(-48/2)                       #45,
                                          8071  label('.sys_memcopyword_40')
.sys_memcopyword_40:
              1b34 1403  ld   $03,y       8072  ld(hi('NEXTY'),Y)               #40,
              1b35 e000  jmp  y,$00       8073  jmp(Y,'NEXTY')                  #41,
              1b36 00ea  ld   $ea         8074  ld(-44/2)                       #42,
                                          8075
                                          8076
                                          8077  # sys_MemCopyDWord, sysArgs0,1=src, sysArg2,3=dst, vAC=count, sysArg4,5=tmp, sysArg6,7=tmp
                                          8078  label('sys_MemCopyDWord')
sys_MemCopyDWord:
              1b37 1124  ld   [$24],x     8079  ld([sysArgs+0],X)               #18,
              1b38 0d00  ld   [y,x]       8080  ld([Y,X])                       #19, [src + 0]
              1b39 de00  st   [y,x++]     8081  st([Y,Xpp])                     #20
              1b3a c228  st   [$28]       8082  st([sysArgs+4])                 #21,
              1b3b 0d00  ld   [y,x]       8083  ld([Y,X])                       #22, [src + 1]
              1b3c de00  st   [y,x++]     8084  st([Y,Xpp])                     #23
              1b3d c229  st   [$29]       8085  st([sysArgs+5])                 #24,
              1b3e 0d00  ld   [y,x]       8086  ld([Y,X])                       #25, [src + 2]
              1b3f de00  st   [y,x++]     8087  st([Y,Xpp])                     #26
              1b40 c22a  st   [$2a]       8088  st([sysArgs+6])                 #27,
              1b41 0d00  ld   [y,x]       8089  ld([Y,X])                       #28, [src + 3]
              1b42 c22b  st   [$2b]       8090  st([sysArgs+7])                 #29,
              1b43 1527  ld   [$27],y     8091  ld([sysArgs+3],Y)               #30,
              1b44 1126  ld   [$26],x     8092  ld([sysArgs+2],X)               #31,
              1b45 0128  ld   [$28]       8093  ld([sysArgs+4])                 #32,
              1b46 de00  st   [y,x++]     8094  st([Y,Xpp])                     #33, [dst + 0] = [src + 0]
              1b47 0129  ld   [$29]       8095  ld([sysArgs+5])                 #34,
              1b48 de00  st   [y,x++]     8096  st([Y,Xpp])                     #35, [dst + 1] = [src + 1]
              1b49 012a  ld   [$2a]       8097  ld([sysArgs+6])                 #36,
              1b4a de00  st   [y,x++]     8098  st([Y,Xpp])                     #37, [dst + 2] = [src + 2]
              1b4b 012b  ld   [$2b]       8099  ld([sysArgs+7])                 #38,
              1b4c ce00  st   [y,x]       8100  st([Y,X])                       #39, [dst + 3] = [src + 3]
              1b4d 0124  ld   [$24]       8101  ld([sysArgs+0])                 #40,
              1b4e 8004  adda $04         8102  adda(4)                         #41,
              1b4f c224  st   [$24]       8103  st([sysArgs+0])                 #42, src += 4
              1b50 0126  ld   [$26]       8104  ld([sysArgs+2])                 #43,
              1b51 8004  adda $04         8105  adda(4)                         #44,
              1b52 c226  st   [$26]       8106  st([sysArgs+2])                 #45, dst += 4
              1b53 0118  ld   [$18]       8107  ld([vAC])                       #46,
              1b54 a001  suba $01         8108  suba(1)                         #47,
                                          8109  beq('.sys_memcopydword_50')     #48,
              1b55 f05d  beq  .sys_memcopydword_50
              1b56 c218  st   [$18]       8110  st([vAC])                       #49, count--
              1b57 0116  ld   [$16]       8111  ld([vPC])                       #50,
              1b58 a002  suba $02         8112  suba(2)                         #51,
              1b59 c216  st   [$16]       8113  st([vPC])                       #52, restart
              1b5a 1403  ld   $03,y       8114  ld(hi('REENTER'),Y)             #53,
              1b5b e0cb  jmp  y,$cb       8115  jmp(Y,'REENTER')                #54,
              1b5c 00e3  ld   $e3         8116  ld(-58/2)                       #55,
                                          8117  label('.sys_memcopydword_50')
.sys_memcopydword_50:
              1b5d 1403  ld   $03,y       8118  ld(hi('NEXTY'),Y)               #50,
              1b5e e000  jmp  y,$00       8119  jmp(Y,'NEXTY')                  #51,
              1b5f 00e5  ld   $e5         8120  ld(-54/2)                       #52,
                                          8121
                                          8122
                                          8123  # sys_ReadPixel
                                          8124  label('sys_ReadPixel')
sys_ReadPixel:
              1b60 8119  adda [$19]       8125  adda([vAC+1])                   #18,
              1b61 1200  ld   ac,x        8126  ld(AC,X)                        #19,
              1b62 1401  ld   $01,y       8127  ld(1,Y)                         #20, Y,X = 0x0100 + 2*y, (0 >= y <= 127)
              1b63 0d00  ld   [y,x]       8128  ld([Y,X])                       #21,
              1b64 1600  ld   ac,y        8129  ld(AC,Y)                        #22, Y = [Y,X]
              1b65 1118  ld   [$18],x     8130  ld([vAC],X)                     #23, X = x
              1b66 0d00  ld   [y,x]       8131  ld([Y,X])                       #24,
              1b67 c218  st   [$18]       8132  st([vAC])                       #25, vAC = [Y,X]
              1b68 0000  ld   $00         8133  ld(0)                           #26,
              1b69 c219  st   [$19]       8134  st([vAC+1])                     #27,
              1b6a 1403  ld   $03,y       8135  ld(hi('NEXTY'),Y)               #28,
              1b6b e000  jmp  y,$00       8136  jmp(Y,'NEXTY')                  #29,
              1b6c 00f0  ld   $f0         8137  ld(-32/2)                       #30,
                                          8138
                                          8139
                                          8140  # sys_DrawPixel
                                          8141  label('sys_DrawPixel')
sys_DrawPixel:
              1b6d 8125  adda [$25]       8142  adda([sysArgs+1])               #18,
              1b6e 1200  ld   ac,x        8143  ld(AC,X)                        #19,
              1b6f 1401  ld   $01,y       8144  ld(1,Y)                         #20, Y,X = 0x0100 + 2*y, (0 >= y <= 127)
              1b70 0d00  ld   [y,x]       8145  ld([Y,X])                       #21,
              1b71 1600  ld   ac,y        8146  ld(AC,Y)                        #22, Y = [Y,X]
              1b72 1124  ld   [$24],x     8147  ld([sysArgs+0],X)               #23, X = x
              1b73 0126  ld   [$26]       8148  ld([sysArgs+2])                 #24, colour
              1b74 ce00  st   [y,x]       8149  st([Y,X])                       #25, [Y,X] = colour
              1b75 1403  ld   $03,y       8150  ld(hi('NEXTY'),Y)               #26,
              1b76 e000  jmp  y,$00       8151  jmp(Y,'NEXTY')                  #27,
              1b77 00f1  ld   $f1         8152  ld(-30/2)                       #28,
                                          8153
                                          8154
              1b78 0200  nop              8155  fillers(until=0xff)
              1b79 0200  nop
              1b7a 0200  nop
              * 135 times
              1bff 0200  nop              8156  align(0x100, size=0x100)
                                          8157
                                          8158  #-----------------------------------------------------------------------
                                          8159  #       More sys implementations, (0x1C00)
                                          8160  #-----------------------------------------------------------------------
                                          8161
                                          8162  # sys_SortSprites, sysArgs0,1=_y_array, sysArg2=i, sysArg3=j, sysArg4=key0, sysArg5=length
                                          8163  #                  sysArgs6,7=_is_array, vAC.lo=key1
                                          8164  label('sys_SortSprites')
sys_SortSprites:
              1c00 0127  ld   [$27]       8165  ld([sysArgs+3])                 #18,
                                          8166  ble('.sys_sortsprites_21')      #19, j <= 0
              1c01 f820  ble  .sys_sortsprites_21
              1c02 0124  ld   [$24]       8167  ld([sysArgs+0])                 #20,
              1c03 8127  adda [$27]       8168  adda([sysArgs+3])               #21,
              1c04 b001  suba $01,x       8169  suba(1,X)                       #22,
              1c05 0d00  ld   [y,x]       8170  ld([Y,X])                       #23,
                                          8171  bmi('.sys_sortsprites_26')      #24, convert signed < to unsigned <
              1c06 e80a  blt  .sys_sortsprites_26
              1c07 a128  suba [$28]       8172  suba([sysArgs+4])               #25,
                                          8173  bra('.sys_sortsprites_28')      #26,
              1c08 fc0c  bra  .sys_sortsprites_28
              1c09 4128  ora  [$28]       8174  ora([sysArgs+4])                #27, borrow
                                          8175  label('.sys_sortsprites_26')
.sys_sortsprites_26:
              1c0a 2128  anda [$28]       8176  anda([sysArgs+4])               #26, borrow
              1c0b 0200  nop              8177  nop()                           #27,
                                          8178  label('.sys_sortsprites_28')
.sys_sortsprites_28:                      8179  bmi('.sys_sortsprites_30')      #28, y[j-1] < key
              1c0c e831  blt  .sys_sortsprites_30
              1c0d 0d00  ld   [y,x]       8180  ld([Y,X])                       #29,
              1c0e de00  st   [y,x++]     8181  st([Y,Xpp])                     #30,
              1c0f ce00  st   [y,x]       8182  st([Y,X])                       #31, y[j] = y[j-1]
              1c10 152b  ld   [$2b],y     8183  ld([sysArgs+7],Y)               #32,
              1c11 012a  ld   [$2a]       8184  ld([sysArgs+6])                 #33,
              1c12 8127  adda [$27]       8185  adda([sysArgs+3])               #34,
              1c13 b001  suba $01,x       8186  suba(1,X)                       #35,
              1c14 0d00  ld   [y,x]       8187  ld([Y,X])                       #36,
              1c15 de00  st   [y,x++]     8188  st([Y,Xpp])                     #37,
              1c16 ce00  st   [y,x]       8189  st([Y,X])                       #38, is[j] = is[j-1]
              1c17 0127  ld   [$27]       8190  ld([sysArgs+3])                 #39,
              1c18 a001  suba $01         8191  suba(1)                         #40,
              1c19 c227  st   [$27]       8192  st([sysArgs+3])                 #41, j--
              1c1a 0116  ld   [$16]       8193  ld([vPC])                       #42,
              1c1b a002  suba $02         8194  suba(2)                         #43,
              1c1c c216  st   [$16]       8195  st([vPC])                       #44, restart
              1c1d 1403  ld   $03,y       8196  ld(hi('REENTER'),Y)             #45,
              1c1e e0cb  jmp  y,$cb       8197  jmp(Y,'REENTER')                #46,
              1c1f 00e7  ld   $e7         8198  ld(-50/2)                       #47,
                                          8199  label('.sys_sortsprites_21')
.sys_sortsprites_21:
              1c20 9127  adda [$27],x     8200  adda([sysArgs+3],X)             #21,
              1c21 0128  ld   [$28]       8201  ld([sysArgs+4])                 #22,
              1c22 ce00  st   [y,x]       8202  st([Y,X])                       #23, y[j] = key0
              1c23 152b  ld   [$2b],y     8203  ld([sysArgs+7],Y)               #24,
              1c24 012a  ld   [$2a]       8204  ld([sysArgs+6])                 #25,
              1c25 9127  adda [$27],x     8205  adda([sysArgs+3],X)             #26,
              1c26 0182  ld   [$82]       8206  ld([0x82])                      #27,
              1c27 ce00  st   [y,x]       8207  st([Y,X])                       #28, is[j] = key1
              1c28 0126  ld   [$26]       8208  ld([sysArgs+2])                 #29,
              1c29 8001  adda $01         8209  adda(1)                         #30,
              1c2a c226  st   [$26]       8210  st([sysArgs+2])                 #31, i++
              1c2b a129  suba [$29]       8211  suba([sysArgs+5])               #32,
                                          8212  blt('.sys_sortsprites_35')      #33, i < length
              1c2c e842  blt  .sys_sortsprites_35
              1c2d 1525  ld   [$25],y     8213  ld([sysArgs+1],Y)               #34,
              1c2e 1403  ld   $03,y       8214  ld(hi('REENTER'),Y)             #35,
              1c2f e0cb  jmp  y,$cb       8215  jmp(Y,'REENTER')                #36,
              1c30 00ec  ld   $ec         8216  ld(-40/2)                       #37,
                                          8217  label('.sys_sortsprites_30')
.sys_sortsprites_30:
              1c31 de00  st   [y,x++]     8218  st([Y,Xpp])                     #30,
              1c32 0128  ld   [$28]       8219  ld([sysArgs+4])                 #31,
              1c33 ce00  st   [y,x]       8220  st([Y,X])                       #32, y[j] = key0
              1c34 152b  ld   [$2b],y     8221  ld([sysArgs+7],Y)               #33,
              1c35 012a  ld   [$2a]       8222  ld([sysArgs+6])                 #34,
              1c36 9127  adda [$27],x     8223  adda([sysArgs+3],X)             #35,
              1c37 0182  ld   [$82]       8224  ld([0x82])                      #36,
              1c38 ce00  st   [y,x]       8225  st([Y,X])                       #37, is[j] = key1
              1c39 0126  ld   [$26]       8226  ld([sysArgs+2])                 #38,
              1c3a 8001  adda $01         8227  adda(1)                         #39,
              1c3b c226  st   [$26]       8228  st([sysArgs+2])                 #40, i++
              1c3c a129  suba [$29]       8229  suba([sysArgs+5])               #41,
                                          8230  blt('.sys_sortsprites_44')      #42, i < length
              1c3d e853  blt  .sys_sortsprites_44
              1c3e 1525  ld   [$25],y     8231  ld([sysArgs+1],Y)               #43
              1c3f 1403  ld   $03,y       8232  ld(hi('NEXTY'),Y)               #44,
              1c40 e000  jmp  y,$00       8233  jmp(Y,'NEXTY')                  #45,
              1c41 00e8  ld   $e8         8234  ld(-48/2)                       #46,
                                          8235  label('.sys_sortsprites_35')
.sys_sortsprites_35:
              1c42 0124  ld   [$24]       8236  ld([sysArgs+0])                 #35,
              1c43 9126  adda [$26],x     8237  adda([sysArgs+2],X)             #36,
              1c44 0d00  ld   [y,x]       8238  ld([Y,X])                       #37,
              1c45 c228  st   [$28]       8239  st([sysArgs+4])                 #38, key0 = y[i]
              1c46 152b  ld   [$2b],y     8240  ld([sysArgs+7],Y)               #39,
              1c47 012a  ld   [$2a]       8241  ld([sysArgs+6])                 #40,
              1c48 9126  adda [$26],x     8242  adda([sysArgs+2],X)             #41,
              1c49 0d00  ld   [y,x]       8243  ld([Y,X])                       #42,
              1c4a c282  st   [$82]       8244  st([0x82])                      #43, key1 = is[i]
              1c4b 0126  ld   [$26]       8245  ld([sysArgs+2])                 #44,
              1c4c c227  st   [$27]       8246  st([sysArgs+3])                 #45, j = i
              1c4d 0116  ld   [$16]       8247  ld([vPC])                       #46,
              1c4e a002  suba $02         8248  suba(2)                         #47,
              1c4f c216  st   [$16]       8249  st([vPC])                       #48, restart
              1c50 1403  ld   $03,y       8250  ld(hi('REENTER'),Y)             #49,
              1c51 e0cb  jmp  y,$cb       8251  jmp(Y,'REENTER')                #50,
              1c52 00e5  ld   $e5         8252  ld(-54/2)                       #51,
                                          8253  label('.sys_sortsprites_44')
.sys_sortsprites_44:
              1c53 0124  ld   [$24]       8254  ld([sysArgs+0])                 #44,
              1c54 9126  adda [$26],x     8255  adda([sysArgs+2],X)             #45,
              1c55 0d00  ld   [y,x]       8256  ld([Y,X])                       #46,
              1c56 c228  st   [$28]       8257  st([sysArgs+4])                 #47, key0 = y[i]
              1c57 152b  ld   [$2b],y     8258  ld([sysArgs+7],Y)               #48,
              1c58 012a  ld   [$2a]       8259  ld([sysArgs+6])                 #49,
              1c59 9126  adda [$26],x     8260  adda([sysArgs+2],X)             #50,
              1c5a 0d00  ld   [y,x]       8261  ld([Y,X])                       #51,
              1c5b c282  st   [$82]       8262  st([0x82])                      #52, key1 = is[i]
              1c5c 0126  ld   [$26]       8263  ld([sysArgs+2])                 #53,
              1c5d c227  st   [$27]       8264  st([sysArgs+3])                 #54, j = i
              1c5e 0116  ld   [$16]       8265  ld([vPC])                       #55,
              1c5f a002  suba $02         8266  suba(2)                         #56,
              1c60 c216  st   [$16]       8267  st([vPC])                       #57, restart
              1c61 1403  ld   $03,y       8268  ld(hi('NEXTY'),Y)               #58,
              1c62 e000  jmp  y,$00       8269  jmp(Y,'NEXTY')                  #59,
              1c63 00e1  ld   $e1         8270  ld(-62/2)                       #60,
                                          8271
                                          8272
              1c64 0200  nop              8273  fillers(until=0xff)
              1c65 0200  nop
              1c66 0200  nop
              * 155 times
              1cff 0200  nop              8274  align(0x100, size=0x100)
                                          8275
                                          8276  #-----------------------------------------------------------------------
                                          8277  #       More sys implementations, (0x1D00)
                                          8278  #-----------------------------------------------------------------------
                                          8279
                                          8280  # sys_DrawSprite
                                          8281  label('sys_DrawSprite')
sys_DrawSprite:
              1d00 1583  ld   [$83],y     8282  ld([0x83],Y)                    #18, spriteY
                                          8283
              1d01 0d00  ld   [y,x]       8284  ld([Y,X])                       #19, get back0
              1d02 1587  ld   [$87],y     8285  ld([0x87],Y)                    #20, spriteData
              1d03 caa2  st   [y,$a2]     8286  st([Y,0xA2])                    #21, save back0
              1d04 09a3  ld   [y,$a3]     8287  ld([Y,0xA3])                    #22, load pixel0
              1d05 1583  ld   [$83],y     8288  ld([0x83],Y)                    #23, spriteY
              1d06 ec09  bne  $1d09       8289  bne(pc()+3)                     #24, colourkey
              1d07 fc0a  bra  $1d0a       8290  bra(pc()+3)                     #25,
              1d08 0d00  ld   [y,x]       8291  ld([Y,X])                       #26,
              1d09 0200  nop              8292  nop()                           #26, (!)
              1d0a de00  st   [y,x++]     8293  st([Y,Xpp])                     #27, draw pixel0
                                          8294
              1d0b 0d00  ld   [y,x]       8295  ld([Y,X])                       #28, get back1
              1d0c 1587  ld   [$87],y     8296  ld([0x87],Y)                    #29, spriteData
              1d0d caa4  st   [y,$a4]     8297  st([Y,0xA4])                    #30, save back1
              1d0e 09a5  ld   [y,$a5]     8298  ld([Y,0xA5])                    #31, load pixel1
              1d0f 1583  ld   [$83],y     8299  ld([0x83],Y)                    #32, spriteY
              1d10 ec13  bne  $1d13       8300  bne(pc()+3)                     #33, colourkey
              1d11 fc14  bra  $1d14       8301  bra(pc()+3)                     #34,
              1d12 0d00  ld   [y,x]       8302  ld([Y,X])                       #35,
              1d13 0200  nop              8303  nop()                           #35, (!)
              1d14 de00  st   [y,x++]     8304  st([Y,Xpp])                     #36, draw pixel1
                                          8305
              1d15 0d00  ld   [y,x]       8306  ld([Y,X])                       #37, get back2
              1d16 1587  ld   [$87],y     8307  ld([0x87],Y)                    #38, spriteData
              1d17 caa6  st   [y,$a6]     8308  st([Y,0xA6])                    #39, save back2
              1d18 09a7  ld   [y,$a7]     8309  ld([Y,0xA7])                    #40, load pixel2
              1d19 1583  ld   [$83],y     8310  ld([0x83],Y)                    #41, spriteY
              1d1a ec1d  bne  $1d1d       8311  bne(pc()+3)                     #42, colourkey
              1d1b fc1e  bra  $1d1e       8312  bra(pc()+3)                     #43,
              1d1c 0d00  ld   [y,x]       8313  ld([Y,X])                       #44,
              1d1d 0200  nop              8314  nop()                           #44, (!)
              1d1e de00  st   [y,x++]     8315  st([Y,Xpp])                     #45, draw pixel2
                                          8316
              1d1f 0d00  ld   [y,x]       8317  ld([Y,X])                       #46, get back3
              1d20 1587  ld   [$87],y     8318  ld([0x87],Y)                    #47, spriteData
              1d21 caa8  st   [y,$a8]     8319  st([Y,0xA8])                    #48, save back3
              1d22 09a9  ld   [y,$a9]     8320  ld([Y,0xA9])                    #49, load pixel3
              1d23 1583  ld   [$83],y     8321  ld([0x83],Y)                    #50, spriteY
              1d24 ec27  bne  $1d27       8322  bne(pc()+3)                     #51, colourkey
              1d25 fc28  bra  $1d28       8323  bra(pc()+3)                     #52,
              1d26 0d00  ld   [y,x]       8324  ld([Y,X])                       #53,
              1d27 0200  nop              8325  nop()                           #53, (!)
              1d28 de00  st   [y,x++]     8326  st([Y,Xpp])                     #54, draw pixel3
                                          8327
              1d29 0d00  ld   [y,x]       8328  ld([Y,X])                       #55, get back4
              1d2a 1587  ld   [$87],y     8329  ld([0x87],Y)                    #56, spriteData
              1d2b caaa  st   [y,$aa]     8330  st([Y,0xAA])                    #57, save back4
              1d2c 09ab  ld   [y,$ab]     8331  ld([Y,0xAB])                    #58, load pixel4
              1d2d 1583  ld   [$83],y     8332  ld([0x83],Y)                    #59, spriteY
              1d2e ec31  bne  $1d31       8333  bne(pc()+3)                     #60, colourkey
              1d2f fc32  bra  $1d32       8334  bra(pc()+3)                     #61,
              1d30 0d00  ld   [y,x]       8335  ld([Y,X])                       #62,
              1d31 0200  nop              8336  nop()                           #62, (!)
              1d32 de00  st   [y,x++]     8337  st([Y,Xpp])                     #63, draw pixel4
                                          8338
              1d33 0d00  ld   [y,x]       8339  ld([Y,X])                       #64, get back5
              1d34 1587  ld   [$87],y     8340  ld([0x87],Y)                    #65, spriteData
              1d35 caac  st   [y,$ac]     8341  st([Y,0xAC])                    #66, save back5
              1d36 09ad  ld   [y,$ad]     8342  ld([Y,0xAD])                    #67, load pixel5
              1d37 1583  ld   [$83],y     8343  ld([0x83],Y)                    #68, spriteY
              1d38 ec3b  bne  $1d3b       8344  bne(pc()+3)                     #69, colourkey
              1d39 fc3c  bra  $1d3c       8345  bra(pc()+3)                     #70,
              1d3a 0d00  ld   [y,x]       8346  ld([Y,X])                       #71,
              1d3b 0200  nop              8347  nop()                           #71, (!)
              1d3c de00  st   [y,x++]     8348  st([Y,Xpp])                     #72, draw pixel5
                                          8349
              1d3d 0d00  ld   [y,x]       8350  ld([Y,X])                       #73, get back6
              1d3e 1587  ld   [$87],y     8351  ld([0x87],Y)                    #74, spriteData
              1d3f caae  st   [y,$ae]     8352  st([Y,0xAE])                    #75, save back6
              1d40 09af  ld   [y,$af]     8353  ld([Y,0xAF])                    #76, load pixel6
              1d41 1583  ld   [$83],y     8354  ld([0x83],Y)                    #77, spriteY
              1d42 ec45  bne  $1d45       8355  bne(pc()+3)                     #78, colourkey
              1d43 fc46  bra  $1d46       8356  bra(pc()+3)                     #79,
              1d44 0d00  ld   [y,x]       8357  ld([Y,X])                       #80,
              1d45 0200  nop              8358  nop()                           #80, (!)
              1d46 de00  st   [y,x++]     8359  st([Y,Xpp])                     #81, draw pixel6
                                          8360
              1d47 0d00  ld   [y,x]       8361  ld([Y,X])                       #82, get back7
              1d48 1587  ld   [$87],y     8362  ld([0x87],Y)                    #83, spriteData
              1d49 cab0  st   [y,$b0]     8363  st([Y,0xB0])                    #84, save back7
              1d4a 09b1  ld   [y,$b1]     8364  ld([Y,0xB1])                    #85, load pixel7
              1d4b 1583  ld   [$83],y     8365  ld([0x83],Y)                    #86, spriteY
              1d4c ec4f  bne  $1d4f       8366  bne(pc()+3)                     #87, colourkey
              1d4d fc50  bra  $1d50       8367  bra(pc()+3)                     #88,
              1d4e 0d00  ld   [y,x]       8368  ld([Y,X])                       #89,
              1d4f 0200  nop              8369  nop()                           #89, (!)
              1d50 de00  st   [y,x++]     8370  st([Y,Xpp])                     #90, draw pixel7
                                          8371
              1d51 0d00  ld   [y,x]       8372  ld([Y,X])                       #91, get back8
              1d52 1587  ld   [$87],y     8373  ld([0x87],Y)                    #92, spriteData
              1d53 cab2  st   [y,$b2]     8374  st([Y,0xB2])                    #93, save back8
              1d54 09b3  ld   [y,$b3]     8375  ld([Y,0xB3])                    #94, load pixel8
              1d55 1583  ld   [$83],y     8376  ld([0x83],Y)                    #95, spriteY
              1d56 ec59  bne  $1d59       8377  bne(pc()+3)                     #96, colourkey
              1d57 fc5a  bra  $1d5a       8378  bra(pc()+3)                     #97,
              1d58 0d00  ld   [y,x]       8379  ld([Y,X])                       #98,
              1d59 0200  nop              8380  nop()                           #98, (!)
              1d5a de00  st   [y,x++]     8381  st([Y,Xpp])                     #99, draw pixel8
                                          8382
              1d5b 1587  ld   [$87],y     8383  ld([0x87],Y)                    #100, spriteData
              1d5c 0182  ld   [$82]       8384  ld([0x82])                      #101, spriteX
              1d5d caa0  st   [y,$a0]     8385  st([Y,0xA0])                    #102, spriteOldX
              1d5e 0183  ld   [$83]       8386  ld([0x83])                      #103, spriteY
              1d5f caa1  st   [y,$a1]     8387  st([Y,0xA1])                    #104, spriteOldY
              1d60 0186  ld   [$86]       8388  ld([0x86])                      #105,
              1d61 a001  suba $01         8389  suba(1)                         #106,
                                          8390  beq('.sys_drawsprite_109')      #107,
              1d62 f070  beq  .sys_drawsprite_109
              1d63 c286  st   [$86]       8391  st([0x86])                      #108, scanLines--
              1d64 0183  ld   [$83]       8392  ld([0x83])                      #109, spriteY
              1d65 8001  adda $01         8393  adda(1)                         #110,
              1d66 c283  st   [$83]       8394  st([0x83])                      #111, spriteY++
              1d67 0187  ld   [$87]       8395  ld([0x87])                      #112,
              1d68 8001  adda $01         8396  adda(1)                         #113,
              1d69 c287  st   [$87]       8397  st([0x87])                      #114, spriteData++
              1d6a 0116  ld   [$16]       8398  ld([vPC])                       #115,
              1d6b a002  suba $02         8399  suba(2)                         #116,
              1d6c c216  st   [$16]       8400  st([vPC])                       #117, restart
              1d6d 1403  ld   $03,y       8401  ld(hi('NEXTY'),Y)               #118,
              1d6e e000  jmp  y,$00       8402  jmp(Y,'NEXTY')                  #119,
              1d6f 00c3  ld   $c3         8403  ld(-122/2)                      #120,
                                          8404  label('.sys_drawsprite_109')
.sys_drawsprite_109:
              1d70 019c  ld   [$9c]       8405  ld([0x9C])                      #109,
              1d71 8001  adda $01         8406  adda(1)                         #110,
              1d72 d29c  st   [$9c],x     8407  st([0x9C],X)                    #111, register13++
              1d73 159d  ld   [$9d],y     8408  ld([0x9D],Y)                    #112,
              1d74 0d00  ld   [y,x]       8409  ld([Y,X])                       #113, peek(register13)
              1d75 c282  st   [$82]       8410  st([0x82])                      #114, spriteX
              1d76 019e  ld   [$9e]       8411  ld([0x9E])                      #115,
              1d77 8001  adda $01         8412  adda(1)                         #116,
              1d78 d29e  st   [$9e],x     8413  st([0x9E],X)                    #117, register14++
              1d79 159f  ld   [$9f],y     8414  ld([0x9F],Y)                    #118,
              1d7a 0d00  ld   [y,x]       8415  ld([Y,X])                       #119, peek(register14)
              1d7b c283  st   [$83]       8416  st([0x83])                      #120, spriteY
              1d7c 01a0  ld   [$a0]       8417  ld([0xA0])                      #121,
              1d7d 8001  adda $01         8418  adda(1)                         #122,
              1d7e d2a0  st   [$a0],x     8419  st([0xA0],X)                    #123, register15++
              1d7f 15a1  ld   [$a1],y     8420  ld([0xA1],Y)                    #124,
              1d80 0d00  ld   [y,x]       8421  ld([Y,X])                       #125, peek(register15)
              1d81 c287  st   [$87]       8422  st([0x87])                      #126, spriteData
              1d82 1403  ld   $03,y       8423  ld(hi('REENTER'),Y)             #127,
              1d83 e0cb  jmp  y,$cb       8424  jmp(Y,'REENTER')                #128,
              1d84 00be  ld   $be         8425  ld(-132/2)                      #129,
                                          8426
                                          8427
                                          8428  # sys_DrawVLine, sysArgs0,1=count:colour, sysArgs2,3=X:Y address
                                          8429  label('sys_DrawVLine')
sys_DrawVLine:
              1d85 1126  ld   [$26],x     8430  ld([sysArgs+2],X)               #18,
              1d86 0124  ld   [$24]       8431  ld([sysArgs+0])                 #19,
              1d87 a008  suba $08         8432  suba(8)                         #20,
                                          8433  blt('.sys_drawvline_23')        #21,
              1d88 e8b3  blt  .sys_drawvline_23
              1d89 0124  ld   [$24]       8434  ld([sysArgs+0])                 #22,
              1d8a 0125  ld   [$25]       8435  ld([sysArgs+1])                 #23, 8 pixels
              1d8b ce00  st   [y,x]       8436  st([Y,X])                       #24,
              1d8c 0127  ld   [$27]       8437  ld([sysArgs+3])                 #25,
              1d8d 9401  adda $01,y       8438  adda(1,Y)                       #26,
              1d8e 0125  ld   [$25]       8439  ld([sysArgs+1])                 #27,
              1d8f ce00  st   [y,x]       8440  st([Y,X])                       #28,
              1d90 0127  ld   [$27]       8441  ld([sysArgs+3])                 #29,
              1d91 9402  adda $02,y       8442  adda(2,Y)                       #30,
              1d92 0125  ld   [$25]       8443  ld([sysArgs+1])                 #31,
              1d93 ce00  st   [y,x]       8444  st([Y,X])                       #32,
              1d94 0127  ld   [$27]       8445  ld([sysArgs+3])                 #33,
              1d95 9403  adda $03,y       8446  adda(3,Y)                       #34,
              1d96 0125  ld   [$25]       8447  ld([sysArgs+1])                 #35,
              1d97 ce00  st   [y,x]       8448  st([Y,X])                       #36,
              1d98 0127  ld   [$27]       8449  ld([sysArgs+3])                 #37,
              1d99 9404  adda $04,y       8450  adda(4,Y)                       #38,
              1d9a 0125  ld   [$25]       8451  ld([sysArgs+1])                 #39,
              1d9b ce00  st   [y,x]       8452  st([Y,X])                       #40,
              1d9c 0127  ld   [$27]       8453  ld([sysArgs+3])                 #41,
              1d9d 9405  adda $05,y       8454  adda(5,Y)                       #42,
              1d9e 0125  ld   [$25]       8455  ld([sysArgs+1])                 #43,
              1d9f ce00  st   [y,x]       8456  st([Y,X])                       #44,
              1da0 0127  ld   [$27]       8457  ld([sysArgs+3])                 #45,
              1da1 9406  adda $06,y       8458  adda(6,Y)                       #46,
              1da2 0125  ld   [$25]       8459  ld([sysArgs+1])                 #47,
              1da3 ce00  st   [y,x]       8460  st([Y,X])                       #48,
              1da4 0127  ld   [$27]       8461  ld([sysArgs+3])                 #49,
              1da5 9407  adda $07,y       8462  adda(7,Y)                       #50,
              1da6 8008  adda $08         8463  adda(8)                         #51,
              1da7 c227  st   [$27]       8464  st([sysArgs+3])                 #52,
              1da8 0125  ld   [$25]       8465  ld([sysArgs+1])                 #53,
              1da9 ce00  st   [y,x]       8466  st([Y,X])                       #54,
              1daa 0124  ld   [$24]       8467  ld([sysArgs+0])                 #55,
              1dab a008  suba $08         8468  suba(8)                         #56,
              1dac c224  st   [$24]       8469  st([sysArgs+0])                 #57,
              1dad 0116  ld   [$16]       8470  ld([vPC])                       #58,
              1dae a002  suba $02         8471  suba(2)                         #59,
              1daf c216  st   [$16]       8472  st([vPC])                       #60, restart
              1db0 1403  ld   $03,y       8473  ld(hi('REENTER'),Y)             #61,
              1db1 e0cb  jmp  y,$cb       8474  jmp(Y,'REENTER')                #62,
              1db2 00df  ld   $df         8475  ld(-66/2)                       #63,
                                          8476  label('.sys_drawvline_23')
.sys_drawvline_23:
              1db3 a004  suba $04         8477  suba(4)                         #23,
                                          8478  blt('.sys_drawvline_26')        #24,
              1db4 e8cf  blt  .sys_drawvline_26
              1db5 0124  ld   [$24]       8479  ld([sysArgs+0])                 #25,
              1db6 0125  ld   [$25]       8480  ld([sysArgs+1])                 #26, 4 pixels
              1db7 ce00  st   [y,x]       8481  st([Y,X])                       #27,
              1db8 0127  ld   [$27]       8482  ld([sysArgs+3])                 #28,
              1db9 9401  adda $01,y       8483  adda(1,Y)                       #29,
              1dba 0125  ld   [$25]       8484  ld([sysArgs+1])                 #30,
              1dbb ce00  st   [y,x]       8485  st([Y,X])                       #31,
              1dbc 0127  ld   [$27]       8486  ld([sysArgs+3])                 #32,
              1dbd 9402  adda $02,y       8487  adda(2,Y)                       #33,
              1dbe 0125  ld   [$25]       8488  ld([sysArgs+1])                 #34,
              1dbf ce00  st   [y,x]       8489  st([Y,X])                       #35,
              1dc0 0127  ld   [$27]       8490  ld([sysArgs+3])                 #36,
              1dc1 9403  adda $03,y       8491  adda(3,Y)                       #37,
              1dc2 8004  adda $04         8492  adda(4)                         #38,
              1dc3 c227  st   [$27]       8493  st([sysArgs+3])                 #39,
              1dc4 0125  ld   [$25]       8494  ld([sysArgs+1])                 #40,
              1dc5 ce00  st   [y,x]       8495  st([Y,X])                       #41,
              1dc6 0124  ld   [$24]       8496  ld([sysArgs+0])                 #42,
              1dc7 a004  suba $04         8497  suba(4)                         #43,
              1dc8 c224  st   [$24]       8498  st([sysArgs+0])                 #44,
              1dc9 0116  ld   [$16]       8499  ld([vPC])                       #45,
              1dca a002  suba $02         8500  suba(2)                         #46,
              1dcb c216  st   [$16]       8501  st([vPC])                       #47, restart
              1dcc 1403  ld   $03,y       8502  ld(hi('NEXTY'),Y)               #48,
              1dcd e000  jmp  y,$00       8503  jmp(Y,'NEXTY')                  #49,
              1dce 00e6  ld   $e6         8504  ld(-52/2)                       #50,
                                          8505  label('.sys_drawvline_26')
.sys_drawvline_26:
              1dcf a002  suba $02         8506  suba(2)                         #26,
                                          8507  blt('.sys_drawvline_29')        #27,
              1dd0 e8e3  blt  .sys_drawvline_29
              1dd1 0124  ld   [$24]       8508  ld([sysArgs+0])                 #28,
              1dd2 0125  ld   [$25]       8509  ld([sysArgs+1])                 #29, 2 pixels
              1dd3 ce00  st   [y,x]       8510  st([Y,X])                       #30,
              1dd4 0127  ld   [$27]       8511  ld([sysArgs+3])                 #31,
              1dd5 9401  adda $01,y       8512  adda(1,Y)                       #32,
              1dd6 8002  adda $02         8513  adda(2)                         #33,
              1dd7 c227  st   [$27]       8514  st([sysArgs+3])                 #34,
              1dd8 0125  ld   [$25]       8515  ld([sysArgs+1])                 #35,
              1dd9 ce00  st   [y,x]       8516  st([Y,X])                       #36,
              1dda 0124  ld   [$24]       8517  ld([sysArgs+0])                 #37,
              1ddb a002  suba $02         8518  suba(2)                         #38,
              1ddc c224  st   [$24]       8519  st([sysArgs+0])                 #39,
              1ddd 0116  ld   [$16]       8520  ld([vPC])                       #40,
              1dde a002  suba $02         8521  suba(2)                         #41,
              1ddf c216  st   [$16]       8522  st([vPC])                       #42, restart
              1de0 1403  ld   $03,y       8523  ld(hi('REENTER'),Y)             #43,
              1de1 e0cb  jmp  y,$cb       8524  jmp(Y,'REENTER')                #44,
              1de2 00e8  ld   $e8         8525  ld(-48/2)                       #45,
                                          8526  label('.sys_drawvline_29')
.sys_drawvline_29:
              1de3 a001  suba $01         8527  suba(1)                         #29,
                                          8528  blt('.sys_drawvline_32')        #30,
              1de4 e8f1  blt  .sys_drawvline_32
              1de5 0124  ld   [$24]       8529  ld([sysArgs+0])                 #31,
              1de6 0125  ld   [$25]       8530  ld([sysArgs+1])                 #32, 1 pixel
              1de7 ce00  st   [y,x]       8531  st([Y,X])                       #33,
              1de8 0124  ld   [$24]       8532  ld([sysArgs+0])                 #34,
              1de9 a001  suba $01         8533  suba(1)                         #35,
              1dea c224  st   [$24]       8534  st([sysArgs+0])                 #36,
              1deb 0116  ld   [$16]       8535  ld([vPC])                       #37,
              1dec a002  suba $02         8536  suba(2)                         #38,
              1ded c216  st   [$16]       8537  st([vPC])                       #39, restart
              1dee 1403  ld   $03,y       8538  ld(hi('NEXTY'),Y)               #40,
              1def e000  jmp  y,$00       8539  jmp(Y,'NEXTY')                  #41,
              1df0 00ea  ld   $ea         8540  ld(-44/2)                       #42,
                                          8541  label('.sys_drawvline_32')
.sys_drawvline_32:
              1df1 1403  ld   $03,y       8542  ld(hi('NEXTY'),Y)               #32, done
              1df2 e000  jmp  y,$00       8543  jmp(Y,'NEXTY')                  #33,
              1df3 00ee  ld   $ee         8544  ld(-36/2)                       #34,
                                          8545
                                          8546
              1df4 0200  nop              8547  fillers(until=0xff)
              1df5 0200  nop
              1df6 0200  nop
              * 11 times
              1dff 0200  nop              8548  align(0x100, size=0x100)
                                          8549
                                          8550  #-----------------------------------------------------------------------
                                          8551  #       More sys implementations, (0x1E00)
                                          8552  #-----------------------------------------------------------------------
                                          8553
                                          8554  # sys_SpritePattern, sysArgs0,1=src, sysArgs2=dstY, sysArgs3=height/2, sysArgs4,5=patternLut
                                          8555  label('sys_SpritePattern')
sys_SpritePattern:
              1e00 1525  ld   [$25],y     8556  ld([sysArgs+1],Y)               #18, src.hi
              1e01 0d00  ld   [y,x]       8557  ld([Y,X])                       #19,
              1e02 de00  st   [y,x++]     8558  st([Y,Xpp])                     #20, src.lo++
              1e03 1526  ld   [$26],y     8559  ld([sysArgs+2],Y)               #21,
              1e04 caa3  st   [y,$a3]     8560  st([Y,0xA3])                    #22, pixel0
              1e05 1525  ld   [$25],y     8561  ld([sysArgs+1],Y)               #23, src.hi
              1e06 0d00  ld   [y,x]       8562  ld([Y,X])                       #24,
              1e07 de00  st   [y,x++]     8563  st([Y,Xpp])                     #25, src.lo++
              1e08 1526  ld   [$26],y     8564  ld([sysArgs+2],Y)               #26,
              1e09 caa5  st   [y,$a5]     8565  st([Y,0xA5])                    #27, pixel1
              1e0a 1525  ld   [$25],y     8566  ld([sysArgs+1],Y)               #28, src.hi
              1e0b 0d00  ld   [y,x]       8567  ld([Y,X])                       #29,
              1e0c de00  st   [y,x++]     8568  st([Y,Xpp])                     #30, src.lo++
              1e0d 1526  ld   [$26],y     8569  ld([sysArgs+2],Y)               #31,
              1e0e caa7  st   [y,$a7]     8570  st([Y,0xA7])                    #32, pixel2
              1e0f 1525  ld   [$25],y     8571  ld([sysArgs+1],Y)               #33, src.hi
              1e10 0d00  ld   [y,x]       8572  ld([Y,X])                       #34,
              1e11 de00  st   [y,x++]     8573  st([Y,Xpp])                     #35, src.lo++
              1e12 1526  ld   [$26],y     8574  ld([sysArgs+2],Y)               #36,
              1e13 caa9  st   [y,$a9]     8575  st([Y,0xA9])                    #37, pixel3
              1e14 1525  ld   [$25],y     8576  ld([sysArgs+1],Y)               #38, src.hi
              1e15 0d00  ld   [y,x]       8577  ld([Y,X])                       #39,
              1e16 de00  st   [y,x++]     8578  st([Y,Xpp])                     #40, src.lo++
              1e17 1526  ld   [$26],y     8579  ld([sysArgs+2],Y)               #41,
              1e18 caab  st   [y,$ab]     8580  st([Y,0xAB])                    #42, pixel4
              1e19 1525  ld   [$25],y     8581  ld([sysArgs+1],Y)               #43, src.hi
              1e1a 0d00  ld   [y,x]       8582  ld([Y,X])                       #44,
              1e1b de00  st   [y,x++]     8583  st([Y,Xpp])                     #45, src.lo++
              1e1c 1526  ld   [$26],y     8584  ld([sysArgs+2],Y)               #46,
              1e1d caad  st   [y,$ad]     8585  st([Y,0xAD])                    #47, pixel5
              1e1e 1525  ld   [$25],y     8586  ld([sysArgs+1],Y)               #48, src.hi
              1e1f 0d00  ld   [y,x]       8587  ld([Y,X])                       #49,
              1e20 de00  st   [y,x++]     8588  st([Y,Xpp])                     #50, src.lo++
              1e21 1526  ld   [$26],y     8589  ld([sysArgs+2],Y)               #51,
              1e22 caaf  st   [y,$af]     8590  st([Y,0xAF])                    #52, pixel6
              1e23 1525  ld   [$25],y     8591  ld([sysArgs+1],Y)               #53, src.hi
              1e24 0d00  ld   [y,x]       8592  ld([Y,X])                       #54,
              1e25 de00  st   [y,x++]     8593  st([Y,Xpp])                     #55, src.lo++
              1e26 1526  ld   [$26],y     8594  ld([sysArgs+2],Y)               #56,
              1e27 cab1  st   [y,$b1]     8595  st([Y,0xB1])                    #57, pixel7
              1e28 1525  ld   [$25],y     8596  ld([sysArgs+1],Y)               #58, src.hi
              1e29 0d00  ld   [y,x]       8597  ld([Y,X])                       #59,
              1e2a de00  st   [y,x++]     8598  st([Y,Xpp])                     #60, src.lo++
              1e2b 1526  ld   [$26],y     8599  ld([sysArgs+2],Y)               #61,
              1e2c cab3  st   [y,$b3]     8600  st([Y,0xB3])                    #62, pixel8
              1e2d 0126  ld   [$26]       8601  ld([sysArgs+2])                 #63,
              1e2e 8001  adda $01         8602  adda(1)                         #64,
              1e2f c226  st   [$26]       8603  st([sysArgs+2])                 #65, dstY++
              1e30 1525  ld   [$25],y     8604  ld([sysArgs+1],Y)               #66, src.hi
              1e31 0d00  ld   [y,x]       8605  ld([Y,X])                       #67,
              1e32 de00  st   [y,x++]     8606  st([Y,Xpp])                     #68, src.lo++
              1e33 1526  ld   [$26],y     8607  ld([sysArgs+2],Y)               #69,
              1e34 caa3  st   [y,$a3]     8608  st([Y,0xA3])                    #70, pixel9
              1e35 1525  ld   [$25],y     8609  ld([sysArgs+1],Y)               #71, src.hi
              1e36 0d00  ld   [y,x]       8610  ld([Y,X])                       #72,
              1e37 de00  st   [y,x++]     8611  st([Y,Xpp])                     #73, src.lo++
              1e38 1526  ld   [$26],y     8612  ld([sysArgs+2],Y)               #74,
              1e39 caa5  st   [y,$a5]     8613  st([Y,0xA5])                    #75, pixel10
              1e3a 1525  ld   [$25],y     8614  ld([sysArgs+1],Y)               #76, src.hi
              1e3b 0d00  ld   [y,x]       8615  ld([Y,X])                       #77,
              1e3c de00  st   [y,x++]     8616  st([Y,Xpp])                     #78, src.lo++
              1e3d 1526  ld   [$26],y     8617  ld([sysArgs+2],Y)               #79,
              1e3e caa7  st   [y,$a7]     8618  st([Y,0xA7])                    #80, pixel11
              1e3f 1525  ld   [$25],y     8619  ld([sysArgs+1],Y)               #81, src.hi
              1e40 0d00  ld   [y,x]       8620  ld([Y,X])                       #82,
              1e41 de00  st   [y,x++]     8621  st([Y,Xpp])                     #83, src.lo++
              1e42 1526  ld   [$26],y     8622  ld([sysArgs+2],Y)               #84,
              1e43 caa9  st   [y,$a9]     8623  st([Y,0xA9])                    #85, pixel12
              1e44 1525  ld   [$25],y     8624  ld([sysArgs+1],Y)               #86, src.hi
              1e45 0d00  ld   [y,x]       8625  ld([Y,X])                       #87,
              1e46 de00  st   [y,x++]     8626  st([Y,Xpp])                     #88, src.lo++
              1e47 1526  ld   [$26],y     8627  ld([sysArgs+2],Y)               #89,
              1e48 caab  st   [y,$ab]     8628  st([Y,0xAB])                    #90, pixel13
              1e49 1525  ld   [$25],y     8629  ld([sysArgs+1],Y)               #91, src.hi
              1e4a 0d00  ld   [y,x]       8630  ld([Y,X])                       #92,
              1e4b de00  st   [y,x++]     8631  st([Y,Xpp])                     #93, src.lo++
              1e4c 1526  ld   [$26],y     8632  ld([sysArgs+2],Y)               #94,
              1e4d caad  st   [y,$ad]     8633  st([Y,0xAD])                    #95, pixel14
              1e4e 1525  ld   [$25],y     8634  ld([sysArgs+1],Y)               #96, src.hi
              1e4f 0d00  ld   [y,x]       8635  ld([Y,X])                       #97,
              1e50 de00  st   [y,x++]     8636  st([Y,Xpp])                     #98, src.lo++
              1e51 1526  ld   [$26],y     8637  ld([sysArgs+2],Y)               #99,
              1e52 caaf  st   [y,$af]     8638  st([Y,0xAF])                    #100, pixel15
              1e53 1525  ld   [$25],y     8639  ld([sysArgs+1],Y)               #101, src.hi
              1e54 0d00  ld   [y,x]       8640  ld([Y,X])                       #102,
              1e55 de00  st   [y,x++]     8641  st([Y,Xpp])                     #103, src.lo++
              1e56 1526  ld   [$26],y     8642  ld([sysArgs+2],Y)               #104,
              1e57 cab1  st   [y,$b1]     8643  st([Y,0xB1])                    #105, pixel16
              1e58 1525  ld   [$25],y     8644  ld([sysArgs+1],Y)               #106, src.hi
              1e59 0d00  ld   [y,x]       8645  ld([Y,X])                       #107,
              1e5a de00  st   [y,x++]     8646  st([Y,Xpp])                     #108, src.lo++
              1e5b 1526  ld   [$26],y     8647  ld([sysArgs+2],Y)               #109,
              1e5c cab3  st   [y,$b3]     8648  st([Y,0xB3])                    #110, pixel17
              1e5d 0126  ld   [$26]       8649  ld([sysArgs+2])                 #111,
              1e5e 8001  adda $01         8650  adda(1)                         #112,
              1e5f c226  st   [$26]       8651  st([sysArgs+2])                 #113, dstY++
                                          8652
              1e60 0128  ld   [$28]       8653  ld([sysArgs+4])                 #114,
              1e61 8002  adda $02         8654  adda(2)                         #115,
              1e62 d228  st   [$28],x     8655  st([sysArgs+4],X)               #116, patternLut += 2
              1e63 1529  ld   [$29],y     8656  ld([sysArgs+5],Y)               #117,
              1e64 0d00  ld   [y,x]       8657  ld([Y,X])                       #118,
              1e65 de00  st   [y,x++]     8658  st([Y,Xpp])                     #119,
              1e66 c224  st   [$24]       8659  st([sysArgs+0])                 #120, src.lo
              1e67 0d00  ld   [y,x]       8660  ld([Y,X])                       #121,
              1e68 c225  st   [$25]       8661  st([sysArgs+1])                 #122, src.hi
                                          8662
              1e69 0127  ld   [$27]       8663  ld([sysArgs+3])                 #123,
              1e6a a001  suba $01         8664  suba(1)                         #124,
              1e6b c227  st   [$27]       8665  st([sysArgs+3])                 #125, height/2 --
                                          8666  beq('.sys_spritepattern_128')   #126,
              1e6c f073  beq  .sys_spritepattern_128
              1e6d 0116  ld   [$16]       8667  ld([vPC])                       #127,
              1e6e a002  suba $02         8668  suba(2)                         #128,
              1e6f c216  st   [$16]       8669  st([vPC])                       #129, restart
              1e70 1403  ld   $03,y       8670  ld(hi('NEXTY'),Y)               #130,
              1e71 e000  jmp  y,$00       8671  jmp(Y,'NEXTY')                  #131,
              1e72 00bd  ld   $bd         8672  ld(-134/2)                      #132,
                                          8673
                                          8674  label('.sys_spritepattern_128')
.sys_spritepattern_128:
              1e73 1403  ld   $03,y       8675  ld(hi('NEXTY'),Y)               #128,
              1e74 e000  jmp  y,$00       8676  jmp(Y,'NEXTY')                  #129,
              1e75 00be  ld   $be         8677  ld(-132/2)                      #130,
                                          8678
                                          8679
                                          8680  # sys_DrawBullet
                                          8681  label('sys_DrawBullet')
sys_DrawBullet:
              1e76 1583  ld   [$83],y     8682  ld([0x83],Y)                    #18, bulletY
              1e77 0d00  ld   [y,x]       8683  ld([Y,X])                       #19, AC = screen
              1e78 1587  ld   [$87],y     8684  ld([0x87],Y)                    #20, bulletData
              1e79 69b4  xora [y,$b4]     8685  xora([Y,0xB4])                  #21, AC ^= bullet
              1e7a 1583  ld   [$83],y     8686  ld([0x83],Y)                    #22, bulletY
              1e7b de00  st   [y,x++]     8687  st([Y,Xpp])                     #23, screen = AC
                                          8688
              1e7c 0d00  ld   [y,x]       8689  ld([Y,X])                       #24, AC = screen
              1e7d 1587  ld   [$87],y     8690  ld([0x87],Y)                    #25, bulletData
              1e7e 69b5  xora [y,$b5]     8691  xora([Y,0xB5])                  #26, AC ^= bullet
              1e7f 1583  ld   [$83],y     8692  ld([0x83],Y)                    #27, bulletY
              1e80 de00  st   [y,x++]     8693  st([Y,Xpp])                     #28, screen = AC
                                          8694
              1e81 0d00  ld   [y,x]       8695  ld([Y,X])                       #29, AC = screen
              1e82 1587  ld   [$87],y     8696  ld([0x87],Y)                    #30, bulletData
              1e83 69b6  xora [y,$b6]     8697  xora([Y,0xB6])                  #31, AC ^= bullet
              1e84 1583  ld   [$83],y     8698  ld([0x83],Y)                    #32, bulletY
              1e85 de00  st   [y,x++]     8699  st([Y,Xpp])                     #33, screen = AC
                                          8700
              1e86 0d00  ld   [y,x]       8701  ld([Y,X])                       #34, AC = screen
              1e87 1587  ld   [$87],y     8702  ld([0x87],Y)                    #35, bulletData
              1e88 69b7  xora [y,$b7]     8703  xora([Y,0xB7])                  #36, AC ^= bullet
              1e89 1583  ld   [$83],y     8704  ld([0x83],Y)                    #37, bulletY
              1e8a de00  st   [y,x++]     8705  st([Y,Xpp])                     #38, screen = AC
                                          8706
              1e8b 1182  ld   [$82],x     8707  ld([0x82],X)                    #39, bulletX
              1e8c 0183  ld   [$83]       8708  ld([0x83])                      #40,
              1e8d 8001  adda $01         8709  adda(1)                         #41,
              1e8e d683  st   [$83],y     8710  st([0x83],Y)                    #42, bulletY++
                                          8711
              1e8f 0d00  ld   [y,x]       8712  ld([Y,X])                       #43, AC = screen
              1e90 1587  ld   [$87],y     8713  ld([0x87],Y)                    #44, bulletData
              1e91 69b8  xora [y,$b8]     8714  xora([Y,0xB8])                  #45, AC ^= bullet
              1e92 1583  ld   [$83],y     8715  ld([0x83],Y)                    #46, bulletY
              1e93 de00  st   [y,x++]     8716  st([Y,Xpp])                     #47, screen = AC
                                          8717
              1e94 0d00  ld   [y,x]       8718  ld([Y,X])                       #48, AC = screen
              1e95 1587  ld   [$87],y     8719  ld([0x87],Y)                    #49, bulletData
              1e96 69b9  xora [y,$b9]     8720  xora([Y,0xB9])                  #50, AC ^= bullet
              1e97 1583  ld   [$83],y     8721  ld([0x83],Y)                    #51, bulletY
              1e98 de00  st   [y,x++]     8722  st([Y,Xpp])                     #52, screen = AC
                                          8723
              1e99 0d00  ld   [y,x]       8724  ld([Y,X])                       #53, AC = screen
              1e9a 1587  ld   [$87],y     8725  ld([0x87],Y)                    #54, bulletData
              1e9b 69ba  xora [y,$ba]     8726  xora([Y,0xBA])                  #55, AC ^= bullet
              1e9c 1583  ld   [$83],y     8727  ld([0x83],Y)                    #56, bulletY
              1e9d de00  st   [y,x++]     8728  st([Y,Xpp])                     #57, screen = AC
                                          8729
              1e9e 0d00  ld   [y,x]       8730  ld([Y,X])                       #58, AC = screen
              1e9f 1587  ld   [$87],y     8731  ld([0x87],Y)                    #59, bulletData
              1ea0 69bb  xora [y,$bb]     8732  xora([Y,0xBB])                  #60, AC ^= bullet
              1ea1 1583  ld   [$83],y     8733  ld([0x83],Y)                    #61, bulletY
              1ea2 de00  st   [y,x++]     8734  st([Y,Xpp])                     #62, screen = AC
                                          8735
              1ea3 1182  ld   [$82],x     8736  ld([0x82],X)                    #63, bulletX
              1ea4 0183  ld   [$83]       8737  ld([0x83])                      #64,
              1ea5 8001  adda $01         8738  adda(1)                         #65,
              1ea6 d683  st   [$83],y     8739  st([0x83],Y)                    #66, bulletY++
                                          8740
              1ea7 0d00  ld   [y,x]       8741  ld([Y,X])                       #67, AC = screen
              1ea8 1587  ld   [$87],y     8742  ld([0x87],Y)                    #68, bulletData
              1ea9 69bc  xora [y,$bc]     8743  xora([Y,0xBC])                  #69, AC ^= bullet
              1eaa 1583  ld   [$83],y     8744  ld([0x83],Y)                    #70, bulletY
              1eab de00  st   [y,x++]     8745  st([Y,Xpp])                     #71, screen = AC
                                          8746
              1eac 0d00  ld   [y,x]       8747  ld([Y,X])                       #72, AC = screen
              1ead 1587  ld   [$87],y     8748  ld([0x87],Y)                    #73, bulletData
              1eae 69bd  xora [y,$bd]     8749  xora([Y,0xBD])                  #74, AC ^= bullet
              1eaf 1583  ld   [$83],y     8750  ld([0x83],Y)                    #75, bulletY
              1eb0 de00  st   [y,x++]     8751  st([Y,Xpp])                     #76, screen = AC
                                          8752
              1eb1 0d00  ld   [y,x]       8753  ld([Y,X])                       #77, AC = screen
              1eb2 1587  ld   [$87],y     8754  ld([0x87],Y)                    #78, bulletData
              1eb3 69be  xora [y,$be]     8755  xora([Y,0xBE])                  #79, AC ^= bullet
              1eb4 1583  ld   [$83],y     8756  ld([0x83],Y)                    #80, bulletY
              1eb5 de00  st   [y,x++]     8757  st([Y,Xpp])                     #81, screen = AC
                                          8758
              1eb6 0d00  ld   [y,x]       8759  ld([Y,X])                       #82, AC = screen
              1eb7 1587  ld   [$87],y     8760  ld([0x87],Y)                    #83, bulletData
              1eb8 69bf  xora [y,$bf]     8761  xora([Y,0xBF])                  #84, AC ^= bullet
              1eb9 1583  ld   [$83],y     8762  ld([0x83],Y)                    #85, bulletY
              1eba de00  st   [y,x++]     8763  st([Y,Xpp])                     #86, screen = AC
                                          8764
              1ebb 1182  ld   [$82],x     8765  ld([0x82],X)                    #87, bulletX
              1ebc 0183  ld   [$83]       8766  ld([0x83])                      #88,
              1ebd 8001  adda $01         8767  adda(1)                         #89,
              1ebe d683  st   [$83],y     8768  st([0x83],Y)                    #90, bulletY++
                                          8769
              1ebf 0d00  ld   [y,x]       8770  ld([Y,X])                       #91, AC = screen
              1ec0 1587  ld   [$87],y     8771  ld([0x87],Y)                    #92, bulletData
              1ec1 69c0  xora [y,$c0]     8772  xora([Y,0xC0])                  #93, AC ^= bullet
              1ec2 1583  ld   [$83],y     8773  ld([0x83],Y)                    #94, bulletY
              1ec3 de00  st   [y,x++]     8774  st([Y,Xpp])                     #95, screen = AC
                                          8775
              1ec4 0d00  ld   [y,x]       8776  ld([Y,X])                       #96, AC = screen
              1ec5 1587  ld   [$87],y     8777  ld([0x87],Y)                    #97, bulletData
              1ec6 69c1  xora [y,$c1]     8778  xora([Y,0xC1])                  #98, AC ^= bullet
              1ec7 1583  ld   [$83],y     8779  ld([0x83],Y)                    #99, bulletY
              1ec8 de00  st   [y,x++]     8780  st([Y,Xpp])                     #100, screen = AC
                                          8781
              1ec9 0d00  ld   [y,x]       8782  ld([Y,X])                       #101, AC = screen
              1eca 1587  ld   [$87],y     8783  ld([0x87],Y)                    #102, bulletData
              1ecb 69c2  xora [y,$c2]     8784  xora([Y,0xC2])                  #103, AC ^= bullet
              1ecc 1583  ld   [$83],y     8785  ld([0x83],Y)                    #104, bulletY
              1ecd de00  st   [y,x++]     8786  st([Y,Xpp])                     #105, screen = AC
                                          8787
              1ece 0d00  ld   [y,x]       8788  ld([Y,X])                       #106, AC = screen
              1ecf 1587  ld   [$87],y     8789  ld([0x87],Y)                    #107, bulletData
              1ed0 69c3  xora [y,$c3]     8790  xora([Y,0xC3])                  #108, AC ^= bullet
              1ed1 1583  ld   [$83],y     8791  ld([0x83],Y)                    #109, bulletY
              1ed2 de00  st   [y,x++]     8792  st([Y,Xpp])                     #110, screen = AC
                                          8793
              1ed3 019c  ld   [$9c]       8794  ld([0x9C])                      #111, register13
              1ed4 8001  adda $01         8795  adda(1)                         #112,
              1ed5 d29c  st   [$9c],x     8796  st([0x9C],X)                    #113, register13++
              1ed6 159d  ld   [$9d],y     8797  ld([0x9D],Y)                    #114,
              1ed7 0d00  ld   [y,x]       8798  ld([Y,X])                       #115, peek(register13)
              1ed8 c282  st   [$82]       8799  st([0x82])                      #116, bulletX
                                          8800
              1ed9 019e  ld   [$9e]       8801  ld([0x9E])                      #117,
              1eda 8001  adda $01         8802  adda(1)                         #118,
              1edb d29e  st   [$9e],x     8803  st([0x9E],X)                    #119, register14++
              1edc 159f  ld   [$9f],y     8804  ld([0x9F],Y)                    #120,
              1edd 0d00  ld   [y,x]       8805  ld([Y,X])                       #121, peek(register14)
              1ede c283  st   [$83]       8806  st([0x83])                      #122, bulletY
                                          8807
              1edf 01a0  ld   [$a0]       8808  ld([0xA0])                      #123,
              1ee0 8001  adda $01         8809  adda(1)                         #124,
              1ee1 d2a0  st   [$a0],x     8810  st([0xA0],X)                    #125, register15++
              1ee2 15a1  ld   [$a1],y     8811  ld([0xA1],Y)                    #126,
              1ee3 0d00  ld   [y,x]       8812  ld([Y,X])                       #127, peek(register15)
              1ee4 c287  st   [$87]       8813  st([0x87])                      #128, bulletData
                                          8814
              1ee5 019a  ld   [$9a]       8815  ld([0x9A])                      #129,
              1ee6 a001  suba $01         8816  suba(1)                         #130,
                                          8817  beq('.sys_drawbullet_133')      #131,
              1ee7 f0ef  beq  .sys_drawbullet_133
              1ee8 c29a  st   [$9a]       8818  st([0x9A])                      #132, register12--
              1ee9 1403  ld   $03,y       8819  ld(hi('NEXTY'),Y)               #133,
              1eea 0116  ld   [$16]       8820  ld([vPC])                       #134,
              1eeb a002  suba $02         8821  suba(2)                         #135,
              1eec c216  st   [$16]       8822  st([vPC])                       #136, restart
              1eed e000  jmp  y,$00       8823  jmp(Y,'NEXTY')                  #137,
              1eee 00ba  ld   $ba         8824  ld(-140/2)                      #138,
                                          8825  label('.sys_drawbullet_133')
.sys_drawbullet_133:
              1eef 1403  ld   $03,y       8826  ld(hi('REENTER'),Y)             #133,
              1ef0 e0cb  jmp  y,$cb       8827  jmp(Y,'REENTER')                #134,
              1ef1 00bb  ld   $bb         8828  ld(-138/2)                      #135,
                                          8829
                                          8830
              1ef2 0200  nop              8831  fillers(until=0xff)
              1ef3 0200  nop
              1ef4 0200  nop
              * 13 times
              1eff 0200  nop              8832  align(0x100, size=0x100)
                                          8833
                                          8834  #-----------------------------------------------------------------------
                                          8835  #       More sys implementations, (0x1F00)
                                          8836  #-----------------------------------------------------------------------
                                          8837
                                          8838  # sys_CmpByteBounds, 0xB8,B9=src, 0xBA,BB=vPC_bounds, 0xBC,BD=bounds, 0xBE=index,
                                          8839  #                    0xBF=count, output:vAC.lo=index
                                          8840  label('sys_CmpByteBounds')
sys_CmpByteBounds:
              1f00 a001  suba $01         8841  suba(1)                         #18,
                                          8842  bge('.sys_cmpbytebounds_21')    #19,
              1f01 f406  bge  .sys_cmpbytebounds_21
              1f02 c2bf  st   [$bf]       8843  st([0xBF])                      #20, count--
              1f03 1403  ld   $03,y       8844  ld(hi('REENTER'),Y)             #21,
              1f04 e0cb  jmp  y,$cb       8845  jmp(Y,'REENTER')                #22,
              1f05 00f3  ld   $f3         8846  ld(-26/2)                       #23,
                                          8847  label('.sys_cmpbytebounds_21')
.sys_cmpbytebounds_21:
              1f06 01b8  ld   [$b8]       8848  ld([0xB8])                      #21,
              1f07 91be  adda [$be],x     8849  adda([0xBE],X)                  #22,
              1f08 15b9  ld   [$b9],y     8850  ld([0xB9],Y)                    #23,
              1f09 0d00  ld   [y,x]       8851  ld([Y,X])                       #24,
                                          8852  bmi('.sys_cmpbytebounds_27')    #25,
              1f0a e80e  blt  .sys_cmpbytebounds_27
              1f0b a1bc  suba [$bc]       8853  suba([0xBC])                    #26,
                                          8854  bra('.sys_cmpbytebounds_29')    #27,
              1f0c fc10  bra  .sys_cmpbytebounds_29
              1f0d 41bc  ora  [$bc]       8855  ora([0xBC])                     #28,
                                          8856  label('.sys_cmpbytebounds_27')
.sys_cmpbytebounds_27:
              1f0e 21bc  anda [$bc]       8857  anda([0xBC])                    #27,
              1f0f 0200  nop              8858  nop()                           #28,
                                          8859
                                          8860  label('.sys_cmpbytebounds_29')
.sys_cmpbytebounds_29:                    8861  bpl('.sys_cmpbytebounds_31')    #29,
              1f10 f422  bge  .sys_cmpbytebounds_31
              1f11 0d00  ld   [y,x]       8862  ld([Y,X])                       #30,
              1f12 0116  ld   [$16]       8863  ld([vPC])                       #31, < lbounds
              1f13 c21a  st   [$1a]       8864  st([vLR])                       #32, return to SYS call
              1f14 0117  ld   [$17]       8865  ld([vPC+1])                     #33,
              1f15 c21b  st   [$1b]       8866  st([vLR+1])                     #34,
              1f16 01ba  ld   [$ba]       8867  ld([0xBA])                      #35,
              1f17 a002  suba $02         8868  suba(2)                         #36,
              1f18 c216  st   [$16]       8869  st([vPC])                       #37, NEXT adds 2
              1f19 01bb  ld   [$bb]       8870  ld([0xBB])                      #38,
              1f1a c217  st   [$17]       8871  st([vPC+1])                     #39, bounds call address
              1f1b 01be  ld   [$be]       8872  ld([0xBE])                      #40,
              1f1c c218  st   [$18]       8873  st([vAC])                       #41, vAC.lo = index
              1f1d 8001  adda $01         8874  adda(1)                         #42,
              1f1e c2be  st   [$be]       8875  st([0xBE])                      #43, index++
              1f1f 1403  ld   $03,y       8876  ld(hi('NEXTY'),Y)               #44,
              1f20 e000  jmp  y,$00       8877  jmp(Y,'NEXTY')                  #45,
              1f21 00e8  ld   $e8         8878  ld(-48/2)                       #46,
                                          8879
                                          8880  label('.sys_cmpbytebounds_31')
.sys_cmpbytebounds_31:                    8881  bmi('.sys_cmpbytebounds_33')    #31,
              1f22 e826  blt  .sys_cmpbytebounds_33
              1f23 a1bd  suba [$bd]       8882  suba([0xBD])                    #32,
                                          8883  bra('.sys_cmpbytebounds_35')    #33,
              1f24 fc28  bra  .sys_cmpbytebounds_35
              1f25 41bd  ora  [$bd]       8884  ora([0xBD])                     #34,
                                          8885  label('.sys_cmpbytebounds_33')
.sys_cmpbytebounds_33:
              1f26 21bd  anda [$bd]       8886  anda([0xBD])                    #33,
              1f27 0200  nop              8887  nop()                           #34,
                                          8888  label('.sys_cmpbytebounds_35')
.sys_cmpbytebounds_35:                    8889  bmi('.sys_cmpbytebounds_37')    #35,
              1f28 e839  blt  .sys_cmpbytebounds_37
              1f29 0116  ld   [$16]       8890  ld([vPC])                       #36, >= ubounds
              1f2a c21a  st   [$1a]       8891  st([vLR])                       #37, return to SYS call
              1f2b 0117  ld   [$17]       8892  ld([vPC+1])                     #38,
              1f2c c21b  st   [$1b]       8893  st([vLR+1])                     #39,
              1f2d 01ba  ld   [$ba]       8894  ld([0xBA])                      #40,
              1f2e a002  suba $02         8895  suba(2)                         #41,
              1f2f c216  st   [$16]       8896  st([vPC])                       #42, NEXT adds 2
              1f30 01bb  ld   [$bb]       8897  ld([0xBB])                      #43,
              1f31 c217  st   [$17]       8898  st([vPC+1])                     #44, bounds call address
              1f32 01be  ld   [$be]       8899  ld([0xBE])                      #45,
              1f33 c218  st   [$18]       8900  st([vAC])                       #46, vAC.lo = index
              1f34 8001  adda $01         8901  adda(1)                         #47,
              1f35 c2be  st   [$be]       8902  st([0xBE])                      #48, index++
              1f36 1403  ld   $03,y       8903  ld(hi('REENTER'),Y)             #49,
              1f37 e0cb  jmp  y,$cb       8904  jmp(Y,'REENTER')                #50,
              1f38 00e5  ld   $e5         8905  ld(-54/2)                       #51,
                                          8906
                                          8907  label('.sys_cmpbytebounds_37')
.sys_cmpbytebounds_37:
              1f39 a002  suba $02         8908  suba(2)                         #37,
              1f3a c216  st   [$16]       8909  st([vPC])                       #38, restart
              1f3b 01be  ld   [$be]       8910  ld([0xBE])                      #39,
              1f3c 8001  adda $01         8911  adda(1)                         #40,
              1f3d c2be  st   [$be]       8912  st([0xBE])                      #41, index++
              1f3e 1403  ld   $03,y       8913  ld(hi('NEXTY'),Y)               #42,
              1f3f e000  jmp  y,$00       8914  jmp(Y,'NEXTY')                  #43,
              1f40 00e9  ld   $e9         8915  ld(-46/2)                       #44,
                                          8916
                                          8917
                                          8918  # SYS_Reset_88 imolementation
                                          8919  label('sys_Reset_88')
sys_Reset_88: 1f41 c221  st   [$21]       8920  st([romType])                   #18
              1f42 0000  ld   $00         8921  ld(0)                           #19
              1f43 c21c  st   [$1c]       8922  st([vSP])                       #20 vSP
              1f44 c204  st   [$04]       8923  st([vSPH])                      #21 vSPH
              1f45 1401  ld   $01,y       8924  ld(hi('videoTop_v5'),Y)         #22
              1f46 caf9  st   [y,$f9]     8925  st([Y,lo('videoTop_v5')])       #23 Show all 120 pixel lines
              1f47 caf6  st   [y,$f6]     8926  st([Y,vIRQ_v5])                 #24 Disable vIRQ dispatch
              1f48 caf7  st   [y,$f7]     8927  st([Y,vIRQ_v5+1])               #25
              1f49 c22c  st   [$2c]       8928  st([soundTimer])                #26 soundTimer
                                          8929  assert userCode&255 == 0
              1f4a c21a  st   [$1a]       8930  st([vLR])                       #27 vLR
              1f4b 0002  ld   $02         8931  ld(userCode>>8)                 #28
              1f4c c21b  st   [$1b]       8932  st([vLR+1])                     #29
              1f4d 00f6  ld   $f6         8933  ld('nopixels')                  #30 Video mode 3 (fast)
              1f4e c20a  st   [$0a]       8934  st([videoModeB])                #31
              1f4f c20b  st   [$0b]       8935  st([videoModeC])                #32
              1f50 c20c  st   [$0c]       8936  st([videoModeD])                #33
              1f51 00ad  ld   $ad         8937  ld('SYS_Exec_88')               #34 SYS_Exec_88
              1f52 c222  st   [$22]       8938  st([sysFn])                     #35 High byte (remains) 0
              1f53 00c8  ld   $c8         8939  ld('Reset')                     #36 Reset.gt1 from EPROM
              1f54 c224  st   [$24]       8940  st([sysArgs+0])                 #37
              1f55 00dc  ld   $dc         8941  ld(hi('Reset'))                 #38
              1f56 c225  st   [$25]       8942  st([sysArgs+1])                 #39
              1f57 0116  ld   [$16]       8943  ld([vPC])                       #40 Force second SYS call
              1f58 a002  suba $02         8944  suba(2)                         #41
              1f59 c216  st   [$16]       8945  st([vPC])                       #42
              1f5a 1403  ld   $03,y       8946  ld(hi('REENTER'),Y)             #43
              1f5b e0cb  jmp  y,$cb       8947  jmp(Y,'REENTER')                #44
              1f5c 00e8  ld   $e8         8948  ld(-48/2)                       #45
                                          8949
                                          8950
                                          8951  #-----------------------------------------------------------------------
                                          8952  # sys_Divide_u168, x:u8 = x:u16 / y:u8, rem:u8 = x:u16 % y:u8
                                          8953  # sysArgs0,1=x, sysArgs2=y, sysArgs4=count, output : sysArgs0=res, sysArgs1=rem
                                          8954  label('sys_Divide_u168')
sys_Divide_u168:
              1f5d c229  st   [$29]       8955  st([sysArgs+5])                 #18, save x.hi
              1f5e 0128  ld   [$28]       8956  ld([sysArgs+4])                 #19,
              1f5f a001  suba $01         8957  suba(1)                         #20, count--
                                          8958  bge('.sys_divide_u168_23')      #21,
              1f60 f465  bge  .sys_divide_u168_23
              1f61 c228  st   [$28]       8959  st([sysArgs+4])                 #22,
              1f62 1403  ld   $03,y       8960  ld(hi('REENTER'),Y)             #23,
              1f63 e0cb  jmp  y,$cb       8961  jmp(Y,'REENTER')                #24,
              1f64 00f2  ld   $f2         8962  ld(-28/2)                       #25,
                                          8963
                                          8964  label('.sys_divide_u168_23')
.sys_divide_u168_23:
              1f65 0124  ld   [$24]       8965  ld([sysArgs+0])                 #23,
              1f66 3080  anda $80,x       8966  anda(128,X)                     #24,
              1f67 8124  adda [$24]       8967  adda([sysArgs+0])               #25,
              1f68 c224  st   [$24]       8968  st([sysArgs+0])                 #26,
              1f69 0500  ld   [x]         8969  ld([X])                         #27,
              1f6a 8125  adda [$25]       8970  adda([sysArgs+1])               #28,
              1f6b 8125  adda [$25]       8971  adda([sysArgs+1])               #29,
              1f6c c225  st   [$25]       8972  st([sysArgs+1])                 #30, x <<1
                                          8973  bmi('.sys_divide_u168_33')      #31, unsigned compare
              1f6d e872  blt  .sys_divide_u168_33
              1f6e a126  suba [$26]       8974  suba([sysArgs+2])               #32, x.hi - y
              1f6f c21d  st   [$1d]       8975  st([vTmp])                      #33,
                                          8976  bra('.sys_divide_u168_36')      #34,
              1f70 fc75  bra  .sys_divide_u168_36
              1f71 4126  ora  [$26]       8977  ora([sysArgs+2])                #35,
                                          8978  label('.sys_divide_u168_33')
.sys_divide_u168_33:
              1f72 c21d  st   [$1d]       8979  st([vTmp])                      #33,
              1f73 2126  anda [$26]       8980  anda([sysArgs+2])               #34,
              1f74 0200  nop              8981  nop()                           #35,
                                          8982
                                          8983  label('.sys_divide_u168_36')
.sys_divide_u168_36:                      8984  bmi('.sys_divide_u168_38')      #36,
              1f75 e88b  blt  .sys_divide_u168_38
              1f76 011d  ld   [$1d]       8985  ld([vTmp])                      #37, x.hi >= y
              1f77 c225  st   [$25]       8986  st([sysArgs+1])                 #38, x.hi = (x.hi - y) <<8
              1f78 0124  ld   [$24]       8987  ld([sysArgs+0])                 #39,
              1f79 8001  adda $01         8988  adda(1)                         #40, x.lo++
                                          8989  bne('.sys_divide_u168_43')      #41,
              1f7a ec85  bne  .sys_divide_u168_43
              1f7b c224  st   [$24]       8990  st([sysArgs+0])                 #42,
              1f7c 0125  ld   [$25]       8991  ld([sysArgs+1])                 #43,
              1f7d 8001  adda $01         8992  adda(1)                         #44, x.hi++
              1f7e c225  st   [$25]       8993  st([sysArgs+1])                 #45,
              1f7f 0116  ld   [$16]       8994  ld([vPC])                       #46,
              1f80 a002  suba $02         8995  suba(2)                         #47,
              1f81 c216  st   [$16]       8996  st([vPC])                       #48, restart
              1f82 1403  ld   $03,y       8997  ld(hi('REENTER'),Y)             #49,
              1f83 e0cb  jmp  y,$cb       8998  jmp(Y,'REENTER')                #50,
              1f84 00e5  ld   $e5         8999  ld(-54/2)                       #51,
                                          9000  label('.sys_divide_u168_43')
.sys_divide_u168_43:
              1f85 0116  ld   [$16]       9001  ld([vPC])                       #43,
              1f86 a002  suba $02         9002  suba(2)                         #44,
              1f87 c216  st   [$16]       9003  st([vPC])                       #45, restart
              1f88 1403  ld   $03,y       9004  ld(hi('NEXTY'),Y)               #46,
              1f89 e000  jmp  y,$00       9005  jmp(Y,'NEXTY')                  #47,
              1f8a 00e7  ld   $e7         9006  ld(-50/2)                       #48,
                                          9007
                                          9008  label('.sys_divide_u168_38')
.sys_divide_u168_38:
              1f8b 0129  ld   [$29]       9009  ld([sysArgs+5])                 #38,
                                          9010  bpl('.sys_divide_u168_41')      #39, msb(x.hi) = 0
              1f8c f4a2  bge  .sys_divide_u168_41
              1f8d 011d  ld   [$1d]       9011  ld([vTmp])                      #40, x.hi >= y
              1f8e c225  st   [$25]       9012  st([sysArgs+1])                 #41, x.hi = (x.hi - y) <<8
              1f8f 0124  ld   [$24]       9013  ld([sysArgs+0])                 #42,
              1f90 8001  adda $01         9014  adda(1)                         #43, x.lo++
                                          9015  bne('.sys_divide_u168_46')      #44,
              1f91 ec9c  bne  .sys_divide_u168_46
              1f92 c224  st   [$24]       9016  st([sysArgs+0])                 #45,
              1f93 0125  ld   [$25]       9017  ld([sysArgs+1])                 #46,
              1f94 8001  adda $01         9018  adda(1)                         #47, x.hi++
              1f95 c225  st   [$25]       9019  st([sysArgs+1])                 #48,
              1f96 0116  ld   [$16]       9020  ld([vPC])                       #49,
              1f97 a002  suba $02         9021  suba(2)                         #50,
              1f98 c216  st   [$16]       9022  st([vPC])                       #51, restart
              1f99 1403  ld   $03,y       9023  ld(hi('NEXTY'),Y)               #52,
              1f9a e000  jmp  y,$00       9024  jmp(Y,'NEXTY')                  #53,
              1f9b 00e4  ld   $e4         9025  ld(-56/2)                       #54,
                                          9026  label('.sys_divide_u168_46')
.sys_divide_u168_46:
              1f9c 0116  ld   [$16]       9027  ld([vPC])                       #46,
              1f9d a002  suba $02         9028  suba(2)                         #47,
              1f9e c216  st   [$16]       9029  st([vPC])                       #48, restart
              1f9f 1403  ld   $03,y       9030  ld(hi('REENTER'),Y)             #49,
              1fa0 e0cb  jmp  y,$cb       9031  jmp(Y,'REENTER')                #50,
              1fa1 00e5  ld   $e5         9032  ld(-54/2)                       #51,
                                          9033
                                          9034  label('.sys_divide_u168_41')
.sys_divide_u168_41:
              1fa2 0116  ld   [$16]       9035  ld([vPC])                       #41,
              1fa3 a002  suba $02         9036  suba(2)                         #42,
              1fa4 c216  st   [$16]       9037  st([vPC])                       #43, restart
              1fa5 1403  ld   $03,y       9038  ld(hi('NEXTY'),Y)               #44,
              1fa6 e000  jmp  y,$00       9039  jmp(Y,'NEXTY')                  #45,
              1fa7 00e8  ld   $e8         9040  ld(-48/2)                       #46,
                                          9041
                                          9042
              1fa8 0200  nop              9043  fillers(until=0xc0)
              1fa9 0200  nop
              1faa 0200  nop
              * 24 times
                                          9044
                                          9045  # sys_ConvertVTableX, sysArgs0=dst, sysArgs2=offsetX, sysArgs3=accum, sysArgs4=count
                                          9046  label('SYS_ConvertVTableX_66')
SYS_ConvertVTableX_66:
              1fc0 1401  ld   $01,y       9047  ld(1,Y)                         #15, VTable.hi
              1fc1 1126  ld   [$26],x     9048  ld([sysArgs+2],X)               #16, VTable.lo
              1fc2 0d00  ld   [y,x]       9049  ld([Y,X])                       #17, get VTableX
              1fc3 8127  adda [$27]       9050  adda([sysArgs+3])               #18,
              1fc4 1525  ld   [$25],y     9051  ld([sysArgs+1],Y)               #19, dst.hi
              1fc5 1124  ld   [$24],x     9052  ld([sysArgs+0],X)               #20, dst.lo
              1fc6 ce00  st   [y,x]       9053  st([Y,X])                       #21,
              1fc7 c227  st   [$27]       9054  st([sysArgs+3])                 #22, accum
                                          9055
              1fc8 1401  ld   $01,y       9056  ld(1,Y)                         #23
              1fc9 0124  ld   [$24]       9057  ld([sysArgs+0])                 #24,
              1fca 8001  adda $01         9058  adda(1)                         #25,
              1fcb c224  st   [$24]       9059  st([sysArgs+0])                 #26, dst++
              1fcc 0126  ld   [$26]       9060  ld([sysArgs+2])                 #27,
              1fcd 8002  adda $02         9061  adda(2)                         #28,
              1fce d226  st   [$26],x     9062  st([sysArgs+2],X)               #29, offsetX += 2
              1fcf 0d00  ld   [y,x]       9063  ld([Y,X])                       #30, get video table X
              1fd0 8127  adda [$27]       9064  adda([sysArgs+3])               #31,
              1fd1 1525  ld   [$25],y     9065  ld([sysArgs+1],Y)               #32, dst.hi
              1fd2 1124  ld   [$24],x     9066  ld([sysArgs+0],X)               #33, dst.lo
              1fd3 ce00  st   [y,x]       9067  st([Y,X])                       #34,
              1fd4 c227  st   [$27]       9068  st([sysArgs+3])                 #35, accum
                                          9069
              1fd5 1401  ld   $01,y       9070  ld(1,Y)                         #36
              1fd6 0124  ld   [$24]       9071  ld([sysArgs+0])                 #37,
              1fd7 8001  adda $01         9072  adda(1)                         #38,
              1fd8 c224  st   [$24]       9073  st([sysArgs+0])                 #39, dst++
              1fd9 0126  ld   [$26]       9074  ld([sysArgs+2])                 #40,
              1fda 8002  adda $02         9075  adda(2)                         #41,
              1fdb d226  st   [$26],x     9076  st([sysArgs+2],X)               #42, offsetX += 2
              1fdc 0d00  ld   [y,x]       9077  ld([Y,X])                       #43, get video table X
              1fdd 8127  adda [$27]       9078  adda([sysArgs+3])               #44,
              1fde 1525  ld   [$25],y     9079  ld([sysArgs+1],Y)               #45, dst.hi
              1fdf 1124  ld   [$24],x     9080  ld([sysArgs+0],X)               #46, dst.lo
              1fe0 ce00  st   [y,x]       9081  st([Y,X])                       #47,
              1fe1 c227  st   [$27]       9082  st([sysArgs+3])                 #48, accum
                                          9083
              1fe2 0128  ld   [$28]       9084  ld([sysArgs+4])                 #49,
              1fe3 a001  suba $01         9085  suba(1)                         #50,
              1fe4 c228  st   [$28]       9086  st([sysArgs+4])                 #51, count--
                                          9087  beq('.sys_convertvtablex_54')   #52,
              1fe5 f0f2  beq  .sys_convertvtablex_54
              1fe6 0124  ld   [$24]       9088  ld([sysArgs+0])                 #53,
              1fe7 8001  adda $01         9089  adda(1)                         #54,
              1fe8 c224  st   [$24]       9090  st([sysArgs+0])                 #55, dst++
              1fe9 0126  ld   [$26]       9091  ld([sysArgs+2])                 #56,
              1fea 8002  adda $02         9092  adda(2)                         #57,
              1feb c226  st   [$26]       9093  st([sysArgs+2])                 #58, offsetX += 2
              1fec 0116  ld   [$16]       9094  ld([vPC])                       #59,
              1fed a002  suba $02         9095  suba(2)                         #60,
              1fee c216  st   [$16]       9096  st([vPC])                       #61, restart
              1fef 1403  ld   $03,y       9097  ld(hi('NEXTY'),Y)               #62,
              1ff0 e000  jmp  y,$00       9098  jmp(Y,'NEXTY')                  #63,
              1ff1 00df  ld   $df         9099  ld(-66/2)                       #64,
                                          9100  label('.sys_convertvtablex_54')
.sys_convertvtablex_54:
              1ff2 1403  ld   $03,y       9101  ld(hi('NEXTY'),Y)               #54,
              1ff3 e000  jmp  y,$00       9102  jmp(Y,'NEXTY')                  #55,
              1ff4 00e3  ld   $e3         9103  ld(-58/2)                       #56,
                                          9104
                                          9105
              1ff5 0200  nop              9106  fillers(until=0xff)
              1ff6 0200  nop
              1ff7 0200  nop
              * 10 times
              1fff 0200  nop              9107  align(0x100, size=0x100)
                                          9108
                                          9109  #-----------------------------------------------------------------------
                                          9110  #       More sys implementations, (0x2000)
                                          9111  #-----------------------------------------------------------------------
                                          9112
                                          9113  # SYS_DrawSpriteH_vX_140
                                          9114  label('SYS_DrawSpriteH_vX_140')
SYS_DrawSpriteH_vX_140:
              2000 0186  ld   [$86]       9115  ld([0x86])                      #15, spriteEnable
                                          9116  bmi('.sys_drawspriteh_18')      #16,
              2001 e89b  blt  .sys_drawspriteh_18
              2002 0183  ld   [$83]       9117  ld([0x83])                      #17, spriteY
              2003 8183  adda [$83]       9118  adda([0x83])                    #18, spriteY
              2004 1200  ld   ac,x        9119  ld(AC,X)                        #19,
              2005 1401  ld   $01,y       9120  ld(1,Y)                         #20, 0x0100
              2006 0d00  ld   [y,x]       9121  ld([Y,X])                       #21, VTableY
              2007 c285  st   [$85]       9122  st([0x85])                      #22,
              2008 1525  ld   [$25],y     9123  ld([sysArgs+1],Y)               #23, VTableAbsX.hi
              2009 0124  ld   [$24]       9124  ld([sysArgs+0])                 #24, VTableAbsX.lo
              200a 8183  adda [$83]       9125  adda([0x83])                    #25, spriteY
              200b 1200  ld   ac,x        9126  ld(AC,X)                        #26,
              200c 0182  ld   [$82]       9127  ld([0x82])                      #27, spriteX
              200d 8d00  adda [y,x]       9128  adda([Y,X])                     #28, VTableX offset, (absolute)
              200e d284  st   [$84],x     9129  st([0x84],X)                    #29,
              200f 1585  ld   [$85],y     9130  ld([0x85],Y)                    #30,
                                          9131
              2010 0d00  ld   [y,x]       9132  ld([Y,X])                       #31, get back0
              2011 1587  ld   [$87],y     9133  ld([0x87],Y)                    #32, spriteData
              2012 caa2  st   [y,$a2]     9134  st([Y,0xA2])                    #33, save back0
              2013 09a3  ld   [y,$a3]     9135  ld([Y,0xA3])                    #34, load pixel0
              2014 1585  ld   [$85],y     9136  ld([0x85],Y)                    #35, spriteY
              2015 ec18  bne  $2018       9137  bne(pc()+3)                     #36, colourkey
              2016 fc19  bra  $2019       9138  bra(pc()+3)                     #37,
              2017 0d00  ld   [y,x]       9139  ld([Y,X])                       #38,
              2018 0200  nop              9140  nop()                           #38, (!)
              2019 de00  st   [y,x++]     9141  st([Y,Xpp])                     #39, draw pixel0
                                          9142
              201a 0d00  ld   [y,x]       9143  ld([Y,X])                       #40, get back1
              201b 1587  ld   [$87],y     9144  ld([0x87],Y)                    #41, spriteData
              201c caa4  st   [y,$a4]     9145  st([Y,0xA4])                    #42, save back1
              201d 09a5  ld   [y,$a5]     9146  ld([Y,0xA5])                    #43, load pixel1
              201e 1585  ld   [$85],y     9147  ld([0x85],Y)                    #44, spriteY
              201f ec22  bne  $2022       9148  bne(pc()+3)                     #45, colourkey
              2020 fc23  bra  $2023       9149  bra(pc()+3)                     #46,
              2021 0d00  ld   [y,x]       9150  ld([Y,X])                       #47,
              2022 0200  nop              9151  nop()                           #47, (!)
              2023 de00  st   [y,x++]     9152  st([Y,Xpp])                     #48, draw pixel1
                                          9153
              2024 0d00  ld   [y,x]       9154  ld([Y,X])                       #49, get back2
              2025 1587  ld   [$87],y     9155  ld([0x87],Y)                    #50, spriteData
              2026 caa6  st   [y,$a6]     9156  st([Y,0xA6])                    #51, save back2
              2027 09a7  ld   [y,$a7]     9157  ld([Y,0xA7])                    #52, load pixel2
              2028 1585  ld   [$85],y     9158  ld([0x85],Y)                    #53, spriteY
              2029 ec2c  bne  $202c       9159  bne(pc()+3)                     #54, colourkey
              202a fc2d  bra  $202d       9160  bra(pc()+3)                     #55,
              202b 0d00  ld   [y,x]       9161  ld([Y,X])                       #56,
              202c 0200  nop              9162  nop()                           #56, (!)
              202d de00  st   [y,x++]     9163  st([Y,Xpp])                     #57, draw pixel2
                                          9164
              202e 0d00  ld   [y,x]       9165  ld([Y,X])                       #58, get back3
              202f 1587  ld   [$87],y     9166  ld([0x87],Y)                    #59, spriteData
              2030 caa8  st   [y,$a8]     9167  st([Y,0xA8])                    #60, save back3
              2031 09a9  ld   [y,$a9]     9168  ld([Y,0xA9])                    #61, load pixel3
              2032 1585  ld   [$85],y     9169  ld([0x85],Y)                    #62, spriteY
              2033 ec36  bne  $2036       9170  bne(pc()+3)                     #63, colourkey
              2034 fc37  bra  $2037       9171  bra(pc()+3)                     #64,
              2035 0d00  ld   [y,x]       9172  ld([Y,X])                       #65,
              2036 0200  nop              9173  nop()                           #65, (!)
              2037 de00  st   [y,x++]     9174  st([Y,Xpp])                     #66, draw pixel3
                                          9175
              2038 0d00  ld   [y,x]       9176  ld([Y,X])                       #67, get back4
              2039 1587  ld   [$87],y     9177  ld([0x87],Y)                    #68, spriteData
              203a caaa  st   [y,$aa]     9178  st([Y,0xAA])                    #69, save back4
              203b 09ab  ld   [y,$ab]     9179  ld([Y,0xAB])                    #70, load pixel4
              203c 1585  ld   [$85],y     9180  ld([0x85],Y)                    #71, spriteY
              203d ec40  bne  $2040       9181  bne(pc()+3)                     #72, colourkey
              203e fc41  bra  $2041       9182  bra(pc()+3)                     #73,
              203f 0d00  ld   [y,x]       9183  ld([Y,X])                       #74,
              2040 0200  nop              9184  nop()                           #74, (!)
              2041 de00  st   [y,x++]     9185  st([Y,Xpp])                     #75, draw pixel4
                                          9186
              2042 0d00  ld   [y,x]       9187  ld([Y,X])                       #76, get back5
              2043 1587  ld   [$87],y     9188  ld([0x87],Y)                    #77, spriteData
              2044 caac  st   [y,$ac]     9189  st([Y,0xAC])                    #78, save back5
              2045 09ad  ld   [y,$ad]     9190  ld([Y,0xAD])                    #79, load pixel5
              2046 1585  ld   [$85],y     9191  ld([0x85],Y)                    #80, spriteY
              2047 ec4a  bne  $204a       9192  bne(pc()+3)                     #81, colourkey
              2048 fc4b  bra  $204b       9193  bra(pc()+3)                     #82,
              2049 0d00  ld   [y,x]       9194  ld([Y,X])                       #83,
              204a 0200  nop              9195  nop()                           #83, (!)
              204b de00  st   [y,x++]     9196  st([Y,Xpp])                     #84, draw pixel5
                                          9197
              204c 0d00  ld   [y,x]       9198  ld([Y,X])                       #85, get back6
              204d 1587  ld   [$87],y     9199  ld([0x87],Y)                    #86, spriteData
              204e caae  st   [y,$ae]     9200  st([Y,0xAE])                    #87, save back6
              204f 09af  ld   [y,$af]     9201  ld([Y,0xAF])                    #88, load pixel6
              2050 1585  ld   [$85],y     9202  ld([0x85],Y)                    #89, spriteY
              2051 ec54  bne  $2054       9203  bne(pc()+3)                     #90, colourkey
              2052 fc55  bra  $2055       9204  bra(pc()+3)                     #91,
              2053 0d00  ld   [y,x]       9205  ld([Y,X])                       #92,
              2054 0200  nop              9206  nop()                           #92, (!)
              2055 de00  st   [y,x++]     9207  st([Y,Xpp])                     #93, draw pixel6
                                          9208
              2056 0d00  ld   [y,x]       9209  ld([Y,X])                       #94, get back7
              2057 1587  ld   [$87],y     9210  ld([0x87],Y)                    #95, spriteData
              2058 cab0  st   [y,$b0]     9211  st([Y,0xB0])                    #96, save back7
              2059 09b1  ld   [y,$b1]     9212  ld([Y,0xB1])                    #97, load pixel7
              205a 1585  ld   [$85],y     9213  ld([0x85],Y)                    #98, spriteY
              205b ec5e  bne  $205e       9214  bne(pc()+3)                     #99, colourkey
              205c fc5f  bra  $205f       9215  bra(pc()+3)                     #100,
              205d 0d00  ld   [y,x]       9216  ld([Y,X])                       #101,
              205e 0200  nop              9217  nop()                           #101, (!)
              205f de00  st   [y,x++]     9218  st([Y,Xpp])                     #102, draw pixel7
                                          9219
              2060 0d00  ld   [y,x]       9220  ld([Y,X])                       #103, get back8
              2061 1587  ld   [$87],y     9221  ld([0x87],Y)                    #104, spriteData
              2062 cab2  st   [y,$b2]     9222  st([Y,0xB2])                    #105, save back8
              2063 09b3  ld   [y,$b3]     9223  ld([Y,0xB3])                    #106, load pixel8
              2064 1585  ld   [$85],y     9224  ld([0x85],Y)                    #107, spriteY
              2065 ec68  bne  $2068       9225  bne(pc()+3)                     #108, colourkey
              2066 fc69  bra  $2069       9226  bra(pc()+3)                     #109,
              2067 0d00  ld   [y,x]       9227  ld([Y,X])                       #110,
              2068 0200  nop              9228  nop()                           #110, (!)
              2069 de00  st   [y,x++]     9229  st([Y,Xpp])                     #111, draw pixel8
                                          9230
              206a 1587  ld   [$87],y     9231  ld([0x87],Y)                    #112, spriteData
              206b 0184  ld   [$84]       9232  ld([0x84])                      #113, spriteX
              206c caa0  st   [y,$a0]     9233  st([Y,0xA0])                    #114, spriteOldX
              206d 0185  ld   [$85]       9234  ld([0x85])                      #115, spriteY
              206e caa1  st   [y,$a1]     9235  st([Y,0xA1])                    #116, spriteOldY
              206f 0186  ld   [$86]       9236  ld([0x86])                      #117,
              2070 a001  suba $01         9237  suba(1)                         #118,
              2071 c286  st   [$86]       9238  st([0x86])                      #119, scanLines--
                                          9239  beq('.sys_drawspriteh_122')     #120,
              2072 f07f  beq  .sys_drawspriteh_122
              2073 0183  ld   [$83]       9240  ld([0x83])                      #121, spriteY
              2074 8001  adda $01         9241  adda(1)                         #122,
              2075 c283  st   [$83]       9242  st([0x83])                      #123, spriteY++
              2076 0187  ld   [$87]       9243  ld([0x87])                      #124,
              2077 8001  adda $01         9244  adda(1)                         #125,
              2078 c287  st   [$87]       9245  st([0x87])                      #126, spriteData++
              2079 0116  ld   [$16]       9246  ld([vPC])                       #127,
              207a a002  suba $02         9247  suba(2)                         #128,
              207b c216  st   [$16]       9248  st([vPC])                       #129, restart
              207c 1403  ld   $03,y       9249  ld(hi('NEXTY'),Y)               #130,
              207d e000  jmp  y,$00       9250  jmp(Y,'NEXTY')                  #131,
              207e 00bd  ld   $bd         9251  ld(-134/2)                      #132,
                                          9252
                                          9253  label('.sys_drawspriteh_122')
.sys_drawspriteh_122:
              207f 01a0  ld   [$a0]       9254  ld([0xA0])                      #122,
              2080 8004  adda $04         9255  adda(4)                         #123,
              2081 d2a0  st   [$a0],x     9256  st([0xA0],X)                    #124, register15 += 4
              2082 15a1  ld   [$a1],y     9257  ld([0xA1],Y)                    #125,
              2083 0d00  ld   [y,x]       9258  ld([Y,X])                       #126, peek(register15 + 0)
              2084 c282  st   [$82]       9259  st([0x82])                      #127, spriteX
              2085 de00  st   [y,x++]     9260  st([Y,Xpp])                     #128, X++
              2086 0d00  ld   [y,x]       9261  ld([Y,X])                       #129, peek(register15 + 1)
              2087 c283  st   [$83]       9262  st([0x83])                      #130, spriteY
              2088 de00  st   [y,x++]     9263  st([Y,Xpp])                     #131, X++
              2089 0d00  ld   [y,x]       9264  ld([Y,X])                       #132, peek(register15 + 2)
              208a c286  st   [$86]       9265  st([0x86])                      #133, spriteHeight
              208b de00  st   [y,x++]     9266  st([Y,Xpp])                     #134, X++
              208c 0d00  ld   [y,x]       9267  ld([Y,X])                       #135, peek(register15 + 3)
              208d c287  st   [$87]       9268  st([0x87])                      #136, spriteData
              208e 0188  ld   [$88]       9269  ld([0x88])                      #137,
              208f a001  suba $01         9270  suba(1)                         #138,
              2090 c288  st   [$88]       9271  st([0x88])                      #139, register3--, spriteCount
                                          9272  beq('.sys_drawspriteh_142')     #140,
              2091 f098  beq  .sys_drawspriteh_142
              2092 0116  ld   [$16]       9273  ld([vPC])                       #141,
              2093 a002  suba $02         9274  suba(2)                         #142,
              2094 c216  st   [$16]       9275  st([vPC])                       #143, restart
              2095 1403  ld   $03,y       9276  ld(hi('NEXTY'),Y)               #144,
              2096 e000  jmp  y,$00       9277  jmp(Y,'NEXTY')                  #145,
              2097 00b6  ld   $b6         9278  ld(-148/2)                      #146,
                                          9279  label('.sys_drawspriteh_142')
.sys_drawspriteh_142:
              2098 1403  ld   $03,y       9280  ld(hi('NEXTY'),Y)               #142,
              2099 e000  jmp  y,$00       9281  jmp(Y,'NEXTY')                  #143,
              209a 00b7  ld   $b7         9282  ld(-146/2)                      #144,
                                          9283
                                          9284  label('.sys_drawspriteh_18')
.sys_drawspriteh_18:
              209b 01a0  ld   [$a0]       9285  ld([0xA0])                      #18,
              209c 8004  adda $04         9286  adda(4)                         #19,
              209d d2a0  st   [$a0],x     9287  st([0xA0],X)                    #20, register15 += 4
              209e 15a1  ld   [$a1],y     9288  ld([0xA1],Y)                    #21,
              209f 0d00  ld   [y,x]       9289  ld([Y,X])                       #22, peek(register15 + 0)
              20a0 c282  st   [$82]       9290  st([0x82])                      #23, spriteX
              20a1 de00  st   [y,x++]     9291  st([Y,Xpp])                     #24, X++
              20a2 0d00  ld   [y,x]       9292  ld([Y,X])                       #25, peek(register15 + 1)
              20a3 c283  st   [$83]       9293  st([0x83])                      #26, spriteY
              20a4 de00  st   [y,x++]     9294  st([Y,Xpp])                     #27, X++
              20a5 0d00  ld   [y,x]       9295  ld([Y,X])                       #28, peek(register15 + 2)
              20a6 c286  st   [$86]       9296  st([0x86])                      #29, spriteHeight
              20a7 de00  st   [y,x++]     9297  st([Y,Xpp])                     #30, X++
              20a8 0d00  ld   [y,x]       9298  ld([Y,X])                       #31, peek(register15 + 3)
              20a9 c287  st   [$87]       9299  st([0x87])                      #32, spriteData
              20aa 0188  ld   [$88]       9300  ld([0x88])                      #33,
              20ab a001  suba $01         9301  suba(1)                         #34,
              20ac c288  st   [$88]       9302  st([0x88])                      #35, register3--, spriteCount
                                          9303  beq('.sys_drawspriteh_38')      #36,
              20ad f0b4  beq  .sys_drawspriteh_38
              20ae 0116  ld   [$16]       9304  ld([vPC])                       #37,
              20af a002  suba $02         9305  suba(2)                         #38,
              20b0 c216  st   [$16]       9306  st([vPC])                       #39, restart
              20b1 1403  ld   $03,y       9307  ld(hi('NEXTY'),Y)               #40,
              20b2 e000  jmp  y,$00       9308  jmp(Y,'NEXTY')                  #41,
              20b3 00ea  ld   $ea         9309  ld(-44/2)                       #42,
                                          9310  label('.sys_drawspriteh_38')
.sys_drawspriteh_38:
              20b4 1403  ld   $03,y       9311  ld(hi('NEXTY'),Y)               #38,
              20b5 e000  jmp  y,$00       9312  jmp(Y,'NEXTY')                  #39,
              20b6 00eb  ld   $eb         9313  ld(-42/2)                       #40,
                                          9314
                                          9315
              20b7 0200  nop              9316  fillers(until=0xc0)
              20b8 0200  nop
              20b9 0200  nop
              * 9 times
                                          9317
                                          9318  # SYS_ScrollVTableY_vX_38, sysArgs0=scrollOffset, sysArgs1=scanCount, sysArgs2,3=videoTable
                                          9319  label('SYS_ScrollVTableY_vX_38')
SYS_ScrollVTableY_vX_38:
              20c0 0125  ld   [$25]       9320  ld([sysArgs+1])                 #15,
              20c1 a001  suba $01         9321  suba(1)                         #16,
              20c2 c225  st   [$25]       9322  st([sysArgs+1])                 #17, scanCount--
                                          9323  bge('.sys_scrollvty_20')        #18,
              20c3 f4c8  bge  .sys_scrollvty_20
              20c4 1527  ld   [$27],y     9324  ld([sysArgs+3],Y)               #19, VTable.hi
              20c5 1403  ld   $03,y       9325  ld(hi('NEXTY'),Y)               #20,
              20c6 e000  jmp  y,$00       9326  jmp(Y,'NEXTY')                  #21,
              20c7 00f4  ld   $f4         9327  ld(-24/2)                       #22,
                                          9328  label('.sys_scrollvty_20')
.sys_scrollvty_20:
              20c8 1126  ld   [$26],x     9329  ld([sysArgs+2],X)               #20, VTable.low
              20c9 0d00  ld   [y,x]       9330  ld([Y,X])                       #21, scanline = peek [VTable]
              20ca 8124  adda [$24]       9331  adda([sysArgs+0])               #22, scanline += scrollOffset
              20cb a07f  suba $7f         9332  suba(0x7f)                      #23, scanline -= 0x7f
                                          9333  ble('.sys_scrollvty_26')        #24,
              20cc f8d9  ble  .sys_scrollvty_26
              20cd 807f  adda $7f         9334  adda(0x7F)                      #25, original scanline
              20ce 8088  adda $88         9335  adda(0x88)                      #26, overflow into the range 0x08 to 0x7f
              20cf ce00  st   [y,x]       9336  st([Y,X])                       #27,
              20d0 0126  ld   [$26]       9337  ld([sysArgs+2])                 #28,
              20d1 8002  adda $02         9338  adda(2)                         #29,
              20d2 c226  st   [$26]       9339  st([sysArgs+2])                 #30,
              20d3 0116  ld   [$16]       9340  ld([vPC])                       #31,
              20d4 a002  suba $02         9341  suba(2)                         #32,
              20d5 c216  st   [$16]       9342  st([vPC])                       #33, restart
              20d6 1403  ld   $03,y       9343  ld(hi('NEXTY'),Y)               #34,
              20d7 e000  jmp  y,$00       9344  jmp(Y,'NEXTY')                  #35,
              20d8 00ed  ld   $ed         9345  ld(-38/2)                       #36,
                                          9346
                                          9347  label('.sys_scrollvty_26')
.sys_scrollvty_26:
              20d9 ce00  st   [y,x]       9348  st([Y,X])                       #26,
              20da 0126  ld   [$26]       9349  ld([sysArgs+2])                 #27,
              20db 8002  adda $02         9350  adda(2)                         #28,
              20dc c226  st   [$26]       9351  st([sysArgs+2])                 #29,
              20dd 0116  ld   [$16]       9352  ld([vPC])                       #30,
              20de a002  suba $02         9353  suba(2)                         #31,
              20df c216  st   [$16]       9354  st([vPC])                       #32, restart
              20e0 1403  ld   $03,y       9355  ld(hi('REENTER'),Y)             #33,
              20e1 e0cb  jmp  y,$cb       9356  jmp(Y,'REENTER')                #34,
              20e2 00ed  ld   $ed         9357  ld(-38/2)                       #35,
                                          9358
                                          9359
              20e3 0200  nop              9360  fillers(until=0xff)
              20e4 0200  nop
              20e5 0200  nop
              * 28 times
              20ff 0200  nop              9361  align(0x100, size=0x100)
                                          9362
                                          9363  #-----------------------------------------------------------------------
                                          9364  #       More sys implementations, (0x2100)
                                          9365  #-----------------------------------------------------------------------
                                          9366  # SYS_RestoreSprite_vX_126
                                          9367  label('SYS_RestoreSprite_vX_126')
SYS_RestoreSprite_vX_126:
              2100 0186  ld   [$86]       9368  ld([0x86])                      #15, spriteEnable
                                          9369  bmi('.sys_restoresprite_18')    #16,
              2101 e877  blt  .sys_restoresprite_18
              2102 1587  ld   [$87],y     9370  ld([0x87],Y)                    #17, spriteData
              2103 09a0  ld   [y,$a0]     9371  ld([Y,0xA0])                    #18, spriteOldX
              2104 1200  ld   ac,x        9372  ld(AC,X)                        #19,
              2105 09a1  ld   [y,$a1]     9373  ld([Y,0xA1])                    #20, spriteOldY
              2106 c21d  st   [$1d]       9374  st([vTmp])                      #21,
                                          9375
              2107 09a2  ld   [y,$a2]     9376  ld([Y,0xA2])                    #22, load back0
              2108 151d  ld   [$1d],y     9377  ld([vTmp],Y)                    #23, spriteOldY
              2109 de00  st   [y,x++]     9378  st([Y,Xpp])                     #24, restore back0
                                          9379
              210a 1587  ld   [$87],y     9380  ld([0x87],Y)                    #25, spriteData
              210b 09a4  ld   [y,$a4]     9381  ld([Y,0xA4])                    #26, load back1
              210c 151d  ld   [$1d],y     9382  ld([vTmp],Y)                    #27, spriteOldY
              210d de00  st   [y,x++]     9383  st([Y,Xpp])                     #28, restore back1
                                          9384
              210e 1587  ld   [$87],y     9385  ld([0x87],Y)                    #29, spriteData
              210f 09a6  ld   [y,$a6]     9386  ld([Y,0xA6])                    #30, load back2
              2110 151d  ld   [$1d],y     9387  ld([vTmp],Y)                    #31, spriteOldY
              2111 de00  st   [y,x++]     9388  st([Y,Xpp])                     #32, restore back2
                                          9389
              2112 1587  ld   [$87],y     9390  ld([0x87],Y)                    #33, spriteData
              2113 09a8  ld   [y,$a8]     9391  ld([Y,0xA8])                    #34, load back3
              2114 151d  ld   [$1d],y     9392  ld([vTmp],Y)                    #35, spriteOldY
              2115 de00  st   [y,x++]     9393  st([Y,Xpp])                     #36, restore back3
                                          9394
              2116 1587  ld   [$87],y     9395  ld([0x87],Y)                    #37, spriteData
              2117 09aa  ld   [y,$aa]     9396  ld([Y,0xAA])                    #38, load back4
              2118 151d  ld   [$1d],y     9397  ld([vTmp],Y)                    #39, spriteOldY
              2119 de00  st   [y,x++]     9398  st([Y,Xpp])                     #40, restore back4
                                          9399
              211a 1587  ld   [$87],y     9400  ld([0x87],Y)                    #41, spriteData
              211b 09ac  ld   [y,$ac]     9401  ld([Y,0xAC])                    #42, load back5
              211c 151d  ld   [$1d],y     9402  ld([vTmp],Y)                    #43, spriteOldY
              211d de00  st   [y,x++]     9403  st([Y,Xpp])                     #44, restore back5
                                          9404
              211e 1587  ld   [$87],y     9405  ld([0x87],Y)                    #45, spriteData
              211f 09ae  ld   [y,$ae]     9406  ld([Y,0xAE])                    #46, load back6
              2120 151d  ld   [$1d],y     9407  ld([vTmp],Y)                    #47, spriteOldY
              2121 de00  st   [y,x++]     9408  st([Y,Xpp])                     #48, restore back6
                                          9409
              2122 1587  ld   [$87],y     9410  ld([0x87],Y)                    #49, spriteData
              2123 09b0  ld   [y,$b0]     9411  ld([Y,0xB0])                    #50, load back7
              2124 151d  ld   [$1d],y     9412  ld([vTmp],Y)                    #51, spriteOldY
              2125 de00  st   [y,x++]     9413  st([Y,Xpp])                     #52, restore back7
                                          9414
              2126 1587  ld   [$87],y     9415  ld([0x87],Y)                    #53, spriteData
              2127 09b2  ld   [y,$b2]     9416  ld([Y,0xB2])                    #54, load back8
              2128 151d  ld   [$1d],y     9417  ld([vTmp],Y)                    #55, spriteOldY
              2129 de00  st   [y,x++]     9418  st([Y,Xpp])                     #56, restore back8
                                          9419
              212a 0187  ld   [$87]       9420  ld([0x87])                      #57,
              212b 8001  adda $01         9421  adda(1)                         #58,
              212c d687  st   [$87],y     9422  st([0x87],Y)                    #59, spriteData++
                                          9423
              212d 09a0  ld   [y,$a0]     9424  ld([Y,0xA0])                    #60, spriteOldX
              212e 1200  ld   ac,x        9425  ld(AC,X)                        #61,
              212f 09a1  ld   [y,$a1]     9426  ld([Y,0xA1])                    #62, spriteOldY
              2130 c21d  st   [$1d]       9427  st([vTmp])                      #63,
                                          9428
              2131 09a2  ld   [y,$a2]     9429  ld([Y,0xA2])                    #64, load back0
              2132 151d  ld   [$1d],y     9430  ld([vTmp],Y)                    #65, spriteOldY
              2133 de00  st   [y,x++]     9431  st([Y,Xpp])                     #66, restore back0
                                          9432
              2134 1587  ld   [$87],y     9433  ld([0x87],Y)                    #67, spriteData
              2135 09a4  ld   [y,$a4]     9434  ld([Y,0xA4])                    #68, load back1
              2136 151d  ld   [$1d],y     9435  ld([vTmp],Y)                    #69, spriteOldY
              2137 de00  st   [y,x++]     9436  st([Y,Xpp])                     #70, restore back1
                                          9437
              2138 1587  ld   [$87],y     9438  ld([0x87],Y)                    #71, spriteData
              2139 09a6  ld   [y,$a6]     9439  ld([Y,0xA6])                    #72, load back2
              213a 151d  ld   [$1d],y     9440  ld([vTmp],Y)                    #73, spriteOldY
              213b de00  st   [y,x++]     9441  st([Y,Xpp])                     #74, restore back2
                                          9442
              213c 1587  ld   [$87],y     9443  ld([0x87],Y)                    #75, spriteData
              213d 09a8  ld   [y,$a8]     9444  ld([Y,0xA8])                    #76, load back3
              213e 151d  ld   [$1d],y     9445  ld([vTmp],Y)                    #77, spriteOldY
              213f de00  st   [y,x++]     9446  st([Y,Xpp])                     #78, restore back3
                                          9447
              2140 1587  ld   [$87],y     9448  ld([0x87],Y)                    #79, spriteData
              2141 09aa  ld   [y,$aa]     9449  ld([Y,0xAA])                    #80, load back4
              2142 151d  ld   [$1d],y     9450  ld([vTmp],Y)                    #81, spriteOldY
              2143 de00  st   [y,x++]     9451  st([Y,Xpp])                     #82, restore back4
                                          9452
              2144 1587  ld   [$87],y     9453  ld([0x87],Y)                    #83, spriteData
              2145 09ac  ld   [y,$ac]     9454  ld([Y,0xAC])                    #84, load back5
              2146 151d  ld   [$1d],y     9455  ld([vTmp],Y)                    #85, spriteOldY
              2147 de00  st   [y,x++]     9456  st([Y,Xpp])                     #86, restore back5
                                          9457
              2148 1587  ld   [$87],y     9458  ld([0x87],Y)                    #87, spriteData
              2149 09ae  ld   [y,$ae]     9459  ld([Y,0xAE])                    #88, load back6
              214a 151d  ld   [$1d],y     9460  ld([vTmp],Y)                    #89, spriteOldY
              214b de00  st   [y,x++]     9461  st([Y,Xpp])                     #90, restore back6
                                          9462
              214c 1587  ld   [$87],y     9463  ld([0x87],Y)                    #91, spriteData
              214d 09b0  ld   [y,$b0]     9464  ld([Y,0xB0])                    #92, load back7
              214e 151d  ld   [$1d],y     9465  ld([vTmp],Y)                    #93, spriteOldY
              214f de00  st   [y,x++]     9466  st([Y,Xpp])                     #94, restore back7
                                          9467
              2150 1587  ld   [$87],y     9468  ld([0x87],Y)                    #95, spriteData
              2151 09b2  ld   [y,$b2]     9469  ld([Y,0xB2])                    #96, load back8
              2152 151d  ld   [$1d],y     9470  ld([vTmp],Y)                    #97, spriteOldY
              2153 de00  st   [y,x++]     9471  st([Y,Xpp])                     #98, restore back8
                                          9472
              2154 0186  ld   [$86]       9473  ld([0x86])                      #99,
              2155 a002  suba $02         9474  suba(2)                         #100,
              2156 c286  st   [$86]       9475  st([0x86])                      #101, scanLines -= 2
                                          9476  beq('.sys_restoresprite_104')   #102,
              2157 f061  beq  .sys_restoresprite_104
              2158 0187  ld   [$87]       9477  ld([0x87])                      #103,
              2159 8001  adda $01         9478  adda(1)                         #104,
              215a c287  st   [$87]       9479  st([0x87])                      #105, spriteData++
              215b 0116  ld   [$16]       9480  ld([vPC])                       #106,
              215c a002  suba $02         9481  suba(2)                         #107,
              215d c216  st   [$16]       9482  st([vPC])                       #108, restart
              215e 1403  ld   $03,y       9483  ld(hi('REENTER'),Y)             #109,
              215f e0cb  jmp  y,$cb       9484  jmp(Y,'REENTER')                #110,
              2160 00c7  ld   $c7         9485  ld(-114/2)                      #111,
                                          9486  label('.sys_restoresprite_104')
.sys_restoresprite_104:
              2161 01a0  ld   [$a0]       9487  ld([0xA0])                      #104,
              2162 a004  suba $04         9488  suba(4)                         #105,
              2163 d2a0  st   [$a0],x     9489  st([0xA0],X)                    #106, register15 -= 4
              2164 15a1  ld   [$a1],y     9490  ld([0xA1],Y)                    #107,
              2165 0d00  ld   [y,x]       9491  ld([Y,X])                       #108, peek(register15 + 2)
              2166 c286  st   [$86]       9492  st([0x86])                      #109, spriteHeight
              2167 de00  st   [y,x++]     9493  st([Y,Xpp])                     #110, X++
              2168 0d00  ld   [y,x]       9494  ld([Y,X])                       #111, peek(register15 + 3)
              2169 c287  st   [$87]       9495  st([0x87])                      #112, spriteData
              216a 0188  ld   [$88]       9496  ld([0x88])                      #113,
              216b a001  suba $01         9497  suba(1)                         #114,
              216c c288  st   [$88]       9498  st([0x88])                      #115, numSprites--
                                          9499  beq('.sys_restoresprite_118')   #116,
              216d f074  beq  .sys_restoresprite_118
              216e 0116  ld   [$16]       9500  ld([vPC])                       #117,
              216f a002  suba $02         9501  suba(2)                         #118,
              2170 c216  st   [$16]       9502  st([vPC])                       #119, restart
              2171 1403  ld   $03,y       9503  ld(hi('NEXTY'),Y)               #120,
              2172 e000  jmp  y,$00       9504  jmp(Y,'NEXTY')                  #121,
              2173 00c2  ld   $c2         9505  ld(-124/2)                      #122,
                                          9506  label('.sys_restoresprite_118')
.sys_restoresprite_118:
              2174 1403  ld   $03,y       9507  ld(hi('NEXTY'),Y)               #118,
              2175 e000  jmp  y,$00       9508  jmp(Y,'NEXTY')                  #119,
              2176 00c3  ld   $c3         9509  ld(-122/2)                      #120,
                                          9510
                                          9511  label('.sys_restoresprite_18')
.sys_restoresprite_18:
              2177 01a0  ld   [$a0]       9512  ld([0xA0])                      #18,
              2178 a004  suba $04         9513  suba(4)                         #19,
              2179 d2a0  st   [$a0],x     9514  st([0xA0],X)                    #20, register15 -= 4
              217a 15a1  ld   [$a1],y     9515  ld([0xA1],Y)                    #21,
              217b 0d00  ld   [y,x]       9516  ld([Y,X])                       #22, peek(register15 + 2)
              217c c286  st   [$86]       9517  st([0x86])                      #23, spriteHeight
              217d de00  st   [y,x++]     9518  st([Y,Xpp])                     #24, X++
              217e 0d00  ld   [y,x]       9519  ld([Y,X])                       #25, peek(register15 + 3)
              217f c287  st   [$87]       9520  st([0x87])                      #26, spriteData
              2180 0188  ld   [$88]       9521  ld([0x88])                      #27,
              2181 a001  suba $01         9522  suba(1)                         #28,
              2182 c288  st   [$88]       9523  st([0x88])                      #29, numSprites--
                                          9524  beq('.sys_restoresprite_32')    #30,
              2183 f08a  beq  .sys_restoresprite_32
              2184 0116  ld   [$16]       9525  ld([vPC])                       #31,
              2185 a002  suba $02         9526  suba(2)                         #32,
              2186 c216  st   [$16]       9527  st([vPC])                       #33, restart
              2187 1403  ld   $03,y       9528  ld(hi('NEXTY'),Y)               #34,
              2188 e000  jmp  y,$00       9529  jmp(Y,'NEXTY')                  #35,
              2189 00ed  ld   $ed         9530  ld(-38/2)                       #36,
                                          9531  label('.sys_restoresprite_32')
.sys_restoresprite_32:
              218a 1403  ld   $03,y       9532  ld(hi('NEXTY'),Y)               #32,
              218b e000  jmp  y,$00       9533  jmp(Y,'NEXTY')                  #33,
              218c 00ee  ld   $ee         9534  ld(-36/2)                       #34,
                                          9535
                                          9536
              218d 0200  nop              9537  fillers(until=0xa0)
              218e 0200  nop
              218f 0200  nop
              * 19 times
                                          9538
                                          9539  # SYS_ScrollRectVTableY_vX_44, sysArgs0=scrollOffset, sysArgs1=scanCount, sysArgs2,3=videoTable,
                                          9540  #                              sysArgs4,5=scrollStart,scrollEnd
                                          9541  label('SYS_ScrollRectVTableY_vX_44')
SYS_ScrollRectVTableY_vX_44:
              21a0 0125  ld   [$25]       9542  ld([sysArgs+1])                 #15,
              21a1 a001  suba $01         9543  suba(1)                         #16,
              21a2 c225  st   [$25]       9544  st([sysArgs+1])                 #17, scanCount--
                                          9545  bge('.sys_scrollrectvty_20')    #18,
              21a3 f4a8  bge  .sys_scrollrectvty_20
              21a4 1527  ld   [$27],y     9546  ld([sysArgs+3],Y)               #19, VTable.hi
              21a5 1403  ld   $03,y       9547  ld(hi('NEXTY'),Y)               #20,
              21a6 e000  jmp  y,$00       9548  jmp(Y,'NEXTY')                  #21,
              21a7 00f4  ld   $f4         9549  ld(-24/2)                       #22,
                                          9550  label('.sys_scrollrectvty_20')
.sys_scrollrectvty_20:
              21a8 1126  ld   [$26],x     9551  ld([sysArgs+2],X)               #20, VTable.low
              21a9 0d00  ld   [y,x]       9552  ld([Y,X])                       #21, scanline = peek [VTable]
              21aa 8124  adda [$24]       9553  adda([sysArgs+0])               #22, scanline += scrollOffset
              21ab c21d  st   [$1d]       9554  st([vTmp])                      #23,
              21ac a128  suba [$28]       9555  suba([sysArgs+4])               #24,
                                          9556  bge('.sys_scrollrectvty_27')    #25,
              21ad f4b9  bge  .sys_scrollrectvty_27
              21ae 8129  adda [$29]       9557  adda([sysArgs+5])               #26,
              21af ce00  st   [y,x]       9558  st([Y,X])                       #27,
              21b0 0126  ld   [$26]       9559  ld([sysArgs+2])                 #28,
              21b1 8002  adda $02         9560  adda(2)                         #29,
              21b2 c226  st   [$26]       9561  st([sysArgs+2])                 #30,
              21b3 0116  ld   [$16]       9562  ld([vPC])                       #31,
              21b4 a002  suba $02         9563  suba(2)                         #32,
              21b5 c216  st   [$16]       9564  st([vPC])                       #33, restart
              21b6 1403  ld   $03,y       9565  ld(hi('NEXTY'),Y)               #34,
              21b7 e000  jmp  y,$00       9566  jmp(Y,'NEXTY')                  #35,
              21b8 00ed  ld   $ed         9567  ld(-38/2)                       #36,
                                          9568
                                          9569  label('.sys_scrollrectvty_27')
.sys_scrollrectvty_27:
              21b9 011d  ld   [$1d]       9570  ld([vTmp])                      #27,
              21ba a129  suba [$29]       9571  suba([sysArgs+5])               #28,
                                          9572  blt('.sys_scrollrectvty_31')    #29,
              21bb e8c7  blt  .sys_scrollrectvty_31
              21bc 8128  adda [$28]       9573  adda([sysArgs+4])               #30,
              21bd ce00  st   [y,x]       9574  st([Y,X])                       #31,
              21be 0126  ld   [$26]       9575  ld([sysArgs+2])                 #32,
              21bf 8002  adda $02         9576  adda(2)                         #33,
              21c0 c226  st   [$26]       9577  st([sysArgs+2])                 #34,
              21c1 0116  ld   [$16]       9578  ld([vPC])                       #35,
              21c2 a002  suba $02         9579  suba(2)                         #36,
              21c3 c216  st   [$16]       9580  st([vPC])                       #37, restart
              21c4 1403  ld   $03,y       9581  ld(hi('NEXTY'),Y)               #38,
              21c5 e000  jmp  y,$00       9582  jmp(Y,'NEXTY')                  #39,
              21c6 00eb  ld   $eb         9583  ld(-42/2)                       #40,
                                          9584
                                          9585  label('.sys_scrollrectvty_31')
.sys_scrollrectvty_31:
              21c7 011d  ld   [$1d]       9586  ld([vTmp])                      #31,
              21c8 ce00  st   [y,x]       9587  st([Y,X])                       #32,
              21c9 0126  ld   [$26]       9588  ld([sysArgs+2])                 #33,
              21ca 8002  adda $02         9589  adda(2)                         #34,
              21cb c226  st   [$26]       9590  st([sysArgs+2])                 #35,
              21cc 0116  ld   [$16]       9591  ld([vPC])                       #36,
              21cd a002  suba $02         9592  suba(2)                         #37,
              21ce c216  st   [$16]       9593  st([vPC])                       #38, restart
              21cf 1403  ld   $03,y       9594  ld(hi('REENTER'),Y)             #39,
              21d0 e0cb  jmp  y,$cb       9595  jmp(Y,'REENTER')                #40,
              21d1 00ea  ld   $ea         9596  ld(-44/2)                       #41,
                                          9597
                                          9598
              21d2 0200  nop              9599  fillers(until=0xff)
              21d3 0200  nop
              21d4 0200  nop
              * 45 times
                                          9600
                                          9601  #-----------------------------------------------------------------------
                                          9602  #       PREFX3 instruction page, (0x2200), PREFIX ARG1 OPCODE ARG0
                                          9603  #-----------------------------------------------------------------------
                                          9604  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2099#p2099
                                          9605  #
                                          9606  label('PREFX3_PAGE')
PREFX3_PAGE:  21ff fc03  bra  $2203       9607  bra('.next2')                   #0 Enter at '.next2' (so no startup overhead)
                                          9608  # --- Page boundary ---
                                          9609  align(0x100,size=0x100)
              2200 1517  ld   [$17],y     9610  ld([vPC+1],Y)                   #1
                                          9611
                                          9612  # Fetch next instruction and execute it, but only if there are sufficient
                                          9613  # ticks left for the slowest instruction.
              2201 8115  adda [$15]       9614  adda([vTicks])                  #0 Track elapsed ticks (actually counting down: AC<0)
              2202 e80b  blt  $220b       9615  blt('EXIT')                     #1 Escape near time out
              2203 c215  st   [$15]       9616  st([vTicks])                    #2
              2204 1116  ld   [$16],x     9617  ld([vPC],X)                     #3 PREFIX+ARG1 is 2 bytes, vPC has been incremented by 2
              2205 0200  nop              9618  nop()                           #4
              2206 c002  st   $02,[$02]   9619  st(vCpuSelect,[vCpuSelect])     #5 Reset to default vCPU page
              2207 0d00  ld   [y,x]       9620  ld([Y,X])                       #6 Fetch opcode (actually a branch target)
              2208 de00  st   [y,x++]     9621  st([Y,Xpp])                     #7 Just X++
              2209 fe00  bra  ac          9622  bra(AC)                         #8 Dispatch
              220a 0d00  ld   [y,x]       9623  ld([Y,X])                       #9 Prefetch operand
                                          9624
                                          9625  # Resync with video driver and transfer control
              220b 800f  adda $0f         9626  adda(maxTicks)                  #3
              220c e40c  bgt  $220c       9627  bgt(pc()&255)                   #4 Resync
              220d a001  suba $01         9628  suba(1)                         #5
              220e 1401  ld   $01,y       9629  ld(hi('vBlankStart'),Y)         #6
              220f e11e  jmp  y,[$1e]     9630  jmp(Y,[vReturn])                #7 To video driver
              2210 0000  ld   $00         9631  ld(0)                           #8 AC should be 0 already. Still..
                                          9632  assert vCPU_overhead ==          9
                                          9633
                                          9634  # pc = 0x2211, Opcode = 0x11
                                          9635  # Instruction STB2: Store vAC.lo into 16bit immediate address, 22 + 20 cycles
                                          9636  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2135#p2135
                                          9637  label('STB2')
STB2:         2211 1425  ld   $25,y       9638  ld(hi('stb2#13'),Y)             #10
              2212 e000  jmp  y,$00       9639  jmp(Y,'stb2#13')                #11
              2213 1200  ld   ac,x        9640  ld(AC,X)                        #12
                                          9641
                                          9642  # pc = 0x2214, Opcode = 0x14
                                          9643  # Instruction STW2: Store vAC into 16bit immediate address, 22 + 22 cycles
                                          9644  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2135#p2135
                                          9645  label('STW2')
STW2:         2214 1425  ld   $25,y       9646  ld(hi('stw2#13'),Y)             #10
              2215 e006  jmp  y,$06       9647  jmp(Y,'stw2#13')                #11
              2216 1200  ld   ac,x        9648  ld(AC,X)                        #12
                                          9649
                                          9650  # pc = 0x2217, Opcode = 0x17
                                          9651  # Instruction XCHGB: Exchange two zero byte variables, 22 + 28 cycles
                                          9652  label('XCHGB')
XCHGB:        2217 1425  ld   $25,y       9653  ld(hi('xchgb#13'),Y)            #10
              2218 e00e  jmp  y,$0e       9654  jmp(Y,'xchgb#13')               #11
                                          9655  # dummy                         #12
                                          9656  #
                                          9657  # pc = 0x2219, Opcode = 0x19
                                          9658  # Instruction MOVW: Move 16bits from src zero page var to dst zero page var, 22 + 30 cycles
                                          9659  label('MOVW')
MOVW:         2219 1425  ld   $25,y       9660  ld(hi('movw#13'),Y)             #10
              221a e03f  jmp  y,$3f       9661  jmp(Y,'movw#13')                #11
                                          9662  # dummy                         #12
                                          9663  #
                                          9664  # pc = 0x221b, Opcode = 0x1b
                                          9665  # Instruction ADDWI: vAC += immediate 16bit value, 22 + 28 cycles
                                          9666  label('ADDWI')
ADDWI:        221b 1425  ld   $25,y       9667  ld(hi('addwi#13'),Y)            #10 #12
              221c e04f  jmp  y,$4f       9668  jmp(Y,'addwi#13')               #11
                                          9669  # dummy                         #12
                                          9670  #
                                          9671  # pc = 0x221d, Opcode = 0x1d
                                          9672  # Instruction SUBWI: vAC -= immediate 16bit value, 22 + 28 cycles
                                          9673  label('SUBWI')
SUBWI:        221d 1425  ld   $25,y       9674  ld(hi('subwi#13'),Y)            #10 #12
              221e e06a  jmp  y,$6a       9675  jmp(Y,'subwi#13')               #11
                                          9676  # dummy                         #12
                                          9677  #
                                          9678  # pc = 0x221f, Opcode = 0x1f
                                          9679  # Instruction ANDWI: vAC &= immediate 16bit value, 22 + 22 cycles
                                          9680  label('ANDWI')
ANDWI:        221f 1425  ld   $25,y       9681  ld(hi('andwi#13'),Y)            #10 #12
              2220 e082  jmp  y,$82       9682  jmp(Y,'andwi#13')               #11
                                          9683  # dummy                         #12
                                          9684  #
                                          9685  # pc = 0x2221, Opcode = 0x21
                                          9686  # Instruction ORWI: vAC |= immediate 16bit value, 22 + 22 cycles
                                          9687  label('ORWI')
ORWI:         2221 1425  ld   $25,y       9688  ld(hi('orwi#13'),Y)             #10 #12
              2222 e08a  jmp  y,$8a       9689  jmp(Y,'orwi#13')                #11
                                          9690  # dummy                         #12
                                          9691  #
                                          9692  # pc = 0x2223, Opcode = 0x23
                                          9693  # Instruction XORWI: vAC ^= immediate 16bit value, 22 + 22 cycles
                                          9694  label('XORWI')
XORWI:        2223 1425  ld   $25,y       9695  ld(hi('xorwi#13'),Y)            #10 #12
              2224 e092  jmp  y,$92       9696  jmp(Y,'xorwi#13')               #11
                                          9697  # dummy                         #12
                                          9698  #
                                          9699  # pc = 0x2225, Opcode = 0x25
                                          9700  # Instruction LDPX: Load Pixel, <address var>, <colour var>, 22 + 30 cycles
                                          9701  label('LDPX')
LDPX:         2225 1425  ld   $25,y       9702  ld(hi('ldpx#13'),Y)             #10 #12
              2226 e09a  jmp  y,$9a       9703  jmp(Y,'ldpx#13')                #11
              2227 c21d  st   [$1d]       9704  st([vTmp])                      #12
                                          9705
                                          9706  # pc = 0x2228, Opcode = 0x28
                                          9707  # Instruction STPX: Store Pixel, <address var>, <colour var>, 22 + 30 cycles
                                          9708  label('STPX')
STPX:         2228 1400  ld   $00,y       9709  ld(hi('stpx#13'),Y)             #10
              2229 e061  jmp  y,$61       9710  jmp(Y,'stpx#13')                #11
              222a 1200  ld   ac,x        9711  ld(AC,X)                        #12
                                          9712
                                          9713  # pc = 0x222b, Opcode = 0x2b
                                          9714  # Instruction CONDI: chooses immediate operand based on condition, (vAC == 0), 22 + 26 cycles
                                          9715  label('CONDI')
CONDI:        222b 1425  ld   $25,y       9716  ld(hi('condi#13'),Y)            #10
              222c e0aa  jmp  y,$aa       9717  jmp(Y,'condi#13')               #11
                                          9718  # dummy                         #12
                                          9719  #
                                          9720  # pc = 0x222d, Opcode = 0x2d
                                          9721  # Instruction CONDB: chooses zero page byte var based on condition, (vAC == 0), 22 + 26 cycles
                                          9722  label('CONDB')
CONDB:        222d 1425  ld   $25,y       9723  ld(hi('condb#13'),Y)            #10 #12
              222e e0b7  jmp  y,$b7       9724  jmp(Y,'condb#13')               #11
              222f 1200  ld   ac,x        9725  ld(AC,X)                        #12
                                          9726
                                          9727  # pc = 0x2230, Opcode = 0x30
                                          9728  # Instruction CONDIB: chooses between imm and zero page byte var based on condition, (vAC == 0), 22 + 26 cycles
                                          9729  label('CONDIB')
CONDIB:       2230 1425  ld   $25,y       9730  ld(hi('condib#13'),Y)           #10
              2231 e0c6  jmp  y,$c6       9731  jmp(Y,'condib#13')              #11
              2232 c21d  st   [$1d]       9732  st([vTmp])                      #12
                                          9733
                                          9734  # pc = 0x2233, Opcode = 0x33
                                          9735  # Instruction CONDBI: chooses between zero page byte var and imm based on condition, (vAC == 0), 22 + 26 cycles
                                          9736  label('CONDBI')
CONDBI:       2233 1425  ld   $25,y       9737  ld(hi('condbi#13'),Y)           #10
              2234 e0d3  jmp  y,$d3       9738  jmp(Y,'condbi#13')              #11
                                          9739  # dummy                         #12
                                          9740  #
                                          9741  # pc = 0x2235, Opcode = 0x35
                                          9742  # Instruction XCHGW: Exchange two zero word variables, 22 + 46 cycles, destroys vAC
                                          9743  label('XCHGW')
XCHGW:        2235 1425  ld   $25,y       9744  ld(hi('xchgw#13'),Y)            #10 #12
              2236 e01c  jmp  y,$1c       9745  jmp(Y,'xchgw#13')               #11
              2237 c22a  st   [$2a]       9746  st([sysArgs+6])                 #12 var1
                                          9747
                                          9748  # pc = 0x2238, Opcode = 0x38
                                          9749  # Instruction OSCPX:
                                          9750  label('OSCPX')
OSCPX:        2238 1428  ld   $28,y       9751  ld(hi('oscpx#13'),Y)            #10
              2239 e073  jmp  y,$73       9752  jmp(Y,'oscpx#13')               #11
                                          9753  # dummy                         #12
                                          9754  #
                                          9755  # pc = 0x223a, Opcode = 0x3a
                                          9756  # Instruction SWAPB: Swap two bytes in memory, 22 + 46 cycles
                                          9757  label('SWAPB')
SWAPB:        223a 1429  ld   $29,y       9758  ld(hi('swapb#13'),Y)            #10 #12
              223b e093  jmp  y,$93       9759  jmp(Y,'swapb#13')               #11
              223c 1200  ld   ac,x        9760  ld(AC,X)                        #12 var1
                                          9761  #
                                          9762  # pc = 0x223d, Opcode = 0x3d
                                          9763  # Instruction SWAPW: Swap two words in memory, 22 + 58 cycles
                                          9764  label('SWAPW')
SWAPW:        223d 1429  ld   $29,y       9765  ld(hi('swapw#13'),Y)            #10
              223e e0b8  jmp  y,$b8       9766  jmp(Y,'swapw#13')               #11
              223f 1200  ld   ac,x        9767  ld(AC,X)                        #12 var1
                                          9768
                                          9769  # pc = 0x2240, Opcode = 0x40
                                          9770  # Instruction NEEKA: Peek <n> bytes from [vAC] into [var], 22 + 34*n + 24 cycles
                                          9771  label('NEEKA')
NEEKA:        2240 142a  ld   $2a,y       9772  ld(hi('neeka#13'),Y)            #10
              2241 e06e  jmp  y,$6e       9773  jmp(Y,'neeka#13')               #11
              2242 c22a  st   [$2a]       9774  st([sysArgs+6])                 #12 var
                                          9775
                                          9776  # pc = 0x2243, Opcode = 0x43
                                          9777  # Instruction NOKEA: Poke <n> bytes from [var] into [vAC], 22 + 34*n + 24 cycles
                                          9778  label('NOKEA')
NOKEA:        2243 142a  ld   $2a,y       9779  ld(hi('nokea#13'),Y)            #10
              2244 e08a  jmp  y,$8a       9780  jmp(Y,'nokea#13')               #11
              2245 c22a  st   [$2a]       9781  st([sysArgs+6])                 #12 var
                                          9782
                                          9783  # pc = 0x2246, Opcode = 0x46
                                          9784  # Instruction ADDVL: Add two 32bit zero page vars, dst += src, 22 + 78 cycles
                                          9785  label('ADDVL')
ADDVL:        2246 142b  ld   $2b,y       9786  ld(hi('addvl#13'),Y)            #10
              2247 e02f  jmp  y,$2f       9787  jmp(Y,'addvl#13')               #11
              2248 d22a  st   [$2a],x     9788  st([sysArgs+6],X)               #12 src var
                                          9789
                                          9790  # pc = 0x2249, Opcode = 0x49
                                          9791  # Instruction SUBVL: Subtract two 32bit zero page vars, dst -= src, 22 + 74 cycles
                                          9792  label('SUBVL')
SUBVL:        2249 142b  ld   $2b,y       9793  ld(hi('subvl#13'),Y)            #10
              224a e079  jmp  y,$79       9794  jmp(Y,'subvl#13')               #11
              224b d22a  st   [$2a],x     9795  st([sysArgs+6],X)               #12 src var
                                          9796
                                          9797  # pc = 0x224c, Opcode = 0x4c
                                          9798  # Instruction ANDVL: And two 32bit zero page vars, dst &= src, 22 + 46 cycles
                                          9799  label('ANDVL')
ANDVL:        224c 142b  ld   $2b,y       9800  ld(hi('andvl#13'),Y)            #10
              224d e0c5  jmp  y,$c5       9801  jmp(Y,'andvl#13')               #11
              224e 1200  ld   ac,x        9802  ld(AC,X)                        #12 src var
                                          9803
                                          9804  # pc = 0x224f, Opcode = 0x4f
                                          9805  # Instruction ORVL: Or two 32bit zero page vars, dst |= src, 22 + 46 cycles
                                          9806  label('ORVL')
ORVL:         224f 142c  ld   $2c,y       9807  ld(hi('orvl#13'),Y)             #10
              2250 e000  jmp  y,$00       9808  jmp(Y,'orvl#13')                #11
              2251 1200  ld   ac,x        9809  ld(AC,X)                        #12 src var
                                          9810
                                          9811  # pc = 0x2252, Opcode = 0x52
                                          9812  # Instruction XORVL: Xor two 32bit zero page vars, dst ^= src, 22 + 76 cycles
                                          9813  label('XORVL')
XORVL:        2252 142c  ld   $2c,y       9814  ld(hi('xorvl#13'),Y)            #10
              2253 e024  jmp  y,$24       9815  jmp(Y,'xorvl#13')               #11
              2254 1200  ld   ac,x        9816  ld(AC,X)                        #12 src var
                                          9817
                                          9818  # pc = 0x2255, Opcode = 0x55
                                          9819  # Instruction JEQL: 22 + 40 cycles
                                          9820  label('JEQL')
JEQL:         2255 142d  ld   $2d,y       9821  ld(hi('jeql#13'),Y)             #10
              2256 e000  jmp  y,$00       9822  jmp(Y,'jeql#13')                #11
              2257 c22a  st   [$2a]       9823  st([sysArgs+6])                 #12 jump.hi
                                          9824
                                          9825  # pc = 0x2258, Opcode = 0x58
                                          9826  # Instruction JNEL: 22 + 40 cycles
                                          9827  label('JNEL')
JNEL:         2258 142d  ld   $2d,y       9828  ld(hi('jnel#13'),Y)             #10
              2259 e022  jmp  y,$22       9829  jmp(Y,'jnel#13')                #11
              225a c22a  st   [$2a]       9830  st([sysArgs+6])                 #12 jump.hi
                                          9831
                                          9832  # pc = 0x225B, Opcode = 0x5B
                                          9833  # Instruction JLTL: 22 + 26 cycles
                                          9834  label('JLTL')
JLTL:         225b 142d  ld   $2d,y       9835  ld(hi('jltl#13'),Y)             #10
              225c e044  jmp  y,$44       9836  jmp(Y,'jltl#13')                #11
              225d c22a  st   [$2a]       9837  st([sysArgs+6])                 #12 jump.hi
                                          9838
                                          9839  # pc = 0x225E, Opcode = 0x5E
                                          9840  # Instruction JGTL: 22 + 42 cycles
                                          9841  label('JGTL')
JGTL:         225e 142d  ld   $2d,y       9842  ld(hi('jgtl#13'),Y)             #10
              225f e053  jmp  y,$53       9843  jmp(Y,'jgtl#13')                #11
              2260 c22a  st   [$2a]       9844  st([sysArgs+6])                 #12 jump.hi
                                          9845
                                          9846  # pc = 0x2261, Opcode = 0x61
                                          9847  # Instruction JLEL: 22 + 42 cycles
                                          9848  label('JLEL')
JLEL:         2261 142d  ld   $2d,y       9849  ld(hi('jlel#13'),Y)             #10
              2262 e07a  jmp  y,$7a       9850  jmp(Y,'jlel#13')                #11
              2263 c22a  st   [$2a]       9851  st([sysArgs+6])                 #12 jump.hi
                                          9852
                                          9853  # pc = 0x2264, Opcode = 0x64
                                          9854  # Instruction JGEL: 22 + 26 cycles
                                          9855  label('JGEL')
JGEL:         2264 142d  ld   $2d,y       9856  ld(hi('jgel#13'),Y)             #10
              2265 e0a5  jmp  y,$a5       9857  jmp(Y,'jgel#13')                #11
              2266 c22a  st   [$2a]       9858  st([sysArgs+6])                 #12 jump.hi
                                          9859
                                          9860  # pc = 0x2267, Opcode = 0x67
                                          9861  # Instruction ANDBI: And immediate byte with byte var, result in byte var, 22 + 20 cycles
                                          9862  label('ANDBI')
ANDBI:        2267 142e  ld   $2e,y       9863  ld(hi('andbi#13'),Y)            #10 #12
              2268 e000  jmp  y,$00       9864  jmp(Y,'andbi#13')               #11
              2269 1200  ld   ac,x        9865  ld(AC,X)                        #12 address of var
                                          9866
                                          9867  # pc = 0x226A, Opcode = 0x6A
                                          9868  # Instruction ORBI: OR immediate byte with byte var, result in byte var, 22 + 20 cycles
                                          9869  label('ORBI')
ORBI:         226a 142e  ld   $2e,y       9870  ld(hi('orbi#13'),Y)             #10 #12
              226b e006  jmp  y,$06       9871  jmp(Y,'orbi#13')                #11
              226c 1200  ld   ac,x        9872  ld(AC,X)                        #12 address of var
                                          9873
                                          9874  # pc = 0x226D, Opcode = 0x6D
                                          9875  # Instruction XORBI: var.lo ^= imm, 22 + 20 cycles
                                          9876  label('XORBI')
XORBI:        226d 142e  ld   $2e,y       9877  ld(hi('xorbi#13'),Y)            #10 #12
              226e e00c  jmp  y,$0c       9878  jmp(Y,'xorbi#13')               #11
              226f 1200  ld   ac,x        9879  ld(AC,X)                        #12 address of var
                                          9880
                                          9881
                                          9882  # SYS calls and instruction implementations rely on these
              2270 0200  nop              9883  fillers(until=0xca)
              2271 0200  nop
              2272 0200  nop
              * 90 times
              22ca 00f2  ld   $f2         9884  ld(-28/2)                       #25
              22cb fc01  bra  $2201       9885  bra('NEXT')                     #26 Return from SYS calls
              22cc 1517  ld   [$17],y     9886  ld([vPC+1],Y)                   #27
                                          9887
                                          9888
              22cd 0200  nop              9889  fillers(until=0xff)
              22ce 0200  nop
              22cf 0200  nop
              * 50 times
                                          9890
                                          9891  #-----------------------------------------------------------------------
                                          9892  #       PREFX2 instruction page, (0x2300), PREFIX ARG0 OPCODE
                                          9893  #-----------------------------------------------------------------------
                                          9894  #
                                          9895  label('PREFX2_PAGE')
PREFX2_PAGE:  22ff fc03  bra  $2303       9896  bra('.next2')                   #0 Enter at '.next2' (so no startup overhead)
                                          9897  # --- Page boundary ---
                                          9898  align(0x100,size=0x100)
              2300 1517  ld   [$17],y     9899  ld([vPC+1],Y)                   #1
                                          9900
                                          9901  # Fetch next instruction and execute it, but only if there are sufficient
                                          9902  # ticks left for the slowest instruction.
              2301 8115  adda [$15]       9903  adda([vTicks])                  #0 Track elapsed ticks (actually counting down: AC<0)
              2302 e80b  blt  $230b       9904  blt('EXIT')                     #1 Escape near time out
              2303 c215  st   [$15]       9905  st([vTicks])                    #2
              2304 0116  ld   [$16]       9906  ld([vPC])                       #3 PREFIX+ARG0 is 2 bytes, vPC has been incremented by 1
              2305 9001  adda $01,x       9907  adda(1,X)                       #4 point to opcode
              2306 c002  st   $02,[$02]   9908  st(vCpuSelect,[vCpuSelect])     #5 Reset to default vCPU page
              2307 0d00  ld   [y,x]       9909  ld([Y,X])                       #6 Fetch opcode (actually a branch target)
              2308 de00  st   [y,x++]     9910  st([Y,Xpp])                     #7 Just X++
              2309 fe00  bra  ac          9911  bra(AC)                         #8 Dispatch
              230a 012b  ld   [$2b]       9912  ld([sysArgs+7])                 #9 Operand
                                          9913
                                          9914  # Resync with video driver and transfer control
              230b 800f  adda $0f         9915  adda(maxTicks)                  #3
              230c e40c  bgt  $230c       9916  bgt(pc()&255)                   #4 Resync
              230d a001  suba $01         9917  suba(1)                         #5
              230e 1401  ld   $01,y       9918  ld(hi('vBlankStart'),Y)         #6
              230f e11e  jmp  y,[$1e]     9919  jmp(Y,[vReturn])                #7 To video driver
              2310 0000  ld   $00         9920  ld(0)                           #8 AC should be 0 already. Still..
                                          9921  assert vCPU_overhead ==          9
                                          9922
                                          9923  # pc = 0x2311, Opcode = 0x11
                                          9924  # Instruction LSLN: Logical shift left vAC, (16bit), n times, 22 + 30*n + 20 cycles
                                          9925  label('LSLN')
LSLN:         2311 1426  ld   $26,y       9926  ld(hi('lsln#13'),Y)             #10
              2312 e000  jmp  y,$00       9927  jmp(Y,'lsln#13')                #11
                                          9928  #dummy                          #12 Overlap
                                          9929  #
                                          9930  # pc = 0x2313, Opcode = 0x13
                                          9931  # Instruction SEXT: Sign extend vAC based on a variable mask, 22 + 24 cycles
                                          9932  label('SEXT')
SEXT:         2313 1426  ld   $26,y       9933  ld(hi('sext#13'),Y)             #10 #12
              2314 e032  jmp  y,$32       9934  jmp(Y,'sext#13')                #11
                                          9935  #dummy                          #12 Overlap
                                          9936  #
                                          9937  # pc = 0x2315, Opcode = 0x15
                                          9938  # Instruction NOTW: Boolean invert var, 22 + 26 cycles
                                          9939  label('NOTW')
NOTW:         2315 1426  ld   $26,y       9940  ld(hi('notw#13'),Y)             #10 #12
              2316 e013  jmp  y,$13       9941  jmp(Y,'notw#13')                #11
                                          9942  #dummy                          #12 Overlap
                                          9943  #
                                          9944  # pc = 0x2317, Opcode = 0x17
                                          9945  # Instruction NEGW: Arithmetic negate var, 22 + 28 cycles
                                          9946  label('NEGW')
NEGW:         2317 1426  ld   $26,y       9947  ld(hi('negw#13'),Y)             #10, #12
              2318 e01e  jmp  y,$1e       9948  jmp(Y,'negw#13')                #11
                                          9949  #dummy                          #12 Overlap
                                          9950  #
                                          9951  # pc = 0x2319, Opcode = 0x19
                                          9952  # Instruction ANDBA: vAC &= var.lo, 22 + 22 cycles
                                          9953  label('ANDBA')
ANDBA:        2319 1426  ld   $26,y       9954  ld(hi('andba#13'),Y)            #10 #12
              231a e03f  jmp  y,$3f       9955  jmp(Y,'andba#13')               #11
              231b 1200  ld   ac,x        9956  ld(AC,X)                        #12 var
                                          9957
                                          9958  # pc = 0x231c, Opcode = 0x1c
                                          9959  # Instruction ORBA: vAC |= var.lo, 22 + 20 cycles
                                          9960  label('ORBA')
ORBA:         231c 1426  ld   $26,y       9961  ld(hi('orba#13'),Y)             #10
              231d e047  jmp  y,$47       9962  jmp(Y,'orba#13')                #11
              231e 1200  ld   ac,x        9963  ld(AC,X)                        #12 var
                                          9964
                                          9965  # pc = 0x231f, Opcode = 0x1f
                                          9966  # Instruction XORBA: vAC ^= var.lo, 22 + 20 cycles
                                          9967  label('XORBA')
XORBA:        231f 1426  ld   $26,y       9968  ld(hi('xorba#13'),Y)            #10
              2320 e04d  jmp  y,$4d       9969  jmp(Y,'xorba#13')               #11
              2321 1200  ld   ac,x        9970  ld(AC,X)                        #12 var
                                          9971
                                          9972  # pc = 0x2322, Opcode = 0x22
                                          9973  # Instruction FREQM: [(((chan & 3) + 1) <<8) | 0x00FC] = vAC, chan var = [0..3], 22 + 26 cycles
                                          9974  label('FREQM')
FREQM:        2322 1426  ld   $26,y       9975  ld(hi('freqm#13'),Y)            #10
              2323 e053  jmp  y,$53       9976  jmp(Y,'freqm#13')               #11
                                          9977  #dummy                          #12 Overlap
                                          9978  #
                                          9979  # pc = 0x2324, Opcode = 0x24
                                          9980  # Instruction FREQA: [((((chan - 1) & 3) + 1) <<8) | 0x00FC] = vAC, chan var = [1..4], 22 + 26 cycles
                                          9981  label('FREQA')
FREQA:        2324 1426  ld   $26,y       9982  ld(hi('freqa#13'),Y)            #10 #12
              2325 e05f  jmp  y,$5f       9983  jmp(Y,'freqa#13')               #11
              2326 1200  ld   ac,x        9984  ld(AC,X)                        #12 var
                                          9985
                                          9986  # pc = 0x2327, Opcode = 0x27
                                          9987  # Instruction FREQZ: [(((imm & 3) + 1) <<8) | 0x00FC] = 0, imm = [0..3], 22 + 22 cycles
                                          9988  label('FREQZ')
FREQZ:        2327 1426  ld   $26,y       9989  ld(hi('freqz#13'),Y)            #10
              2328 e06b  jmp  y,$6b       9990  jmp(Y,'freqz#13')               #11
              2329 2003  anda $03         9991  anda(3)                         #12 channel
                                          9992
                                          9993  # pc = 0x232a, Opcode = 0x2a
                                          9994  # Instruction VOLM: [(((chan & 3) + 1) <<8) | 0x00FA] = vAC.low, chan var = [0..3], 22 + 24 cycles
                                          9995  label('VOLM')
VOLM:         232a 1426  ld   $26,y       9996  ld(hi('volm#13'),Y)             #10
              232b e073  jmp  y,$73       9997  jmp(Y,'volm#13')                #11
                                          9998  #dummy                          #12 Overlap
                                          9999  #
                                          10000  # pc = 0x232c, Opcode = 0x2c
                                          10001  # Instruction VOLA: [((((chan - 1) & 3) + 1) <<8) | 0x00FA] = 63 - vAC.low + 64, chan var = [1..4],  22 + 26 cycles
                                          10002  label('VOLA')
VOLA:         232c 1426  ld   $26,y       10003  ld(hi('vola#13'),Y)             #10 #12
              232d e07d  jmp  y,$7d       10004  jmp(Y,'vola#13')                #11
              232e 1200  ld   ac,x        10005  ld(AC,X)                        #12 chan + 1
                                          10006
                                          10007  # pc = 0x232f, Opcode = 0x2f
                                          10008  # Instruction MODA: [((((chan - 1) & 3) + 1) <<8) | 0x00FB] = vAC.low, chan var = [1..4], 22 + 24 cycles
                                          10009  label('MODA')
MODA:         232f 1426  ld   $26,y       10010  ld(hi('moda#13'),Y)             #10
              2330 e089  jmp  y,$89       10011  jmp(Y,'moda#13')                #11
              2331 1200  ld   ac,x        10012  ld(AC,X)                        #12 chan + 1
                                          10013
                                          10014  # pc = 0x2332, Opcode = 0x32
                                          10015  # Instruction MODZ: [(((imm & 3) + 1) <<8) | 0x00FA] = 0x0200, imm = [0..3], 22 + 24 cycles
                                          10016  label('MODZ')
MODZ:         2332 1426  ld   $26,y       10017  ld(hi('modz#13'),Y)             #10
              2333 e093  jmp  y,$93       10018  jmp(Y,'modz#13')                #11
                                          10019  #dummy                          #12 Overlap
                                          10020  #
                                          10021  # pc = 0x2234, Opcode = 0x34
                                          10022  # Instruction SMPCPY:
                                          10023  label('SMPCPY')
SMPCPY:       2334 1426  ld   $26,y       10024  ld(hi('smpcpy#13'),Y)           #10 #12
              2335 e09d  jmp  y,$9d       10025  jmp(Y,'smpcpy#13')              #11
              2336 1200  ld   ac,x        10026  ld(AC,X)                        #12 dst var
                                          10027
                                          10028  # pc = 0x2237, Opcode = 0x37
                                          10029  # Instruction CMPWS:
                                          10030  label('CMPWS')
CMPWS:        2337 1428  ld   $28,y       10031  ld(hi('cmpws#13'),Y)            #10
              2338 e094  jmp  y,$94       10032  jmp(Y,'cmpws#13')               #11
                                          10033  #dummy                          #12 Overlap
                                          10034  #
                                          10035  # pc = 0x2239, Opcode = 0x39
                                          10036  # Instruction CMPWU:
                                          10037  label('CMPWU')
CMPWU:        2339 1428  ld   $28,y       10038  ld(hi('cmpwu#13'),Y)            #10 #12
              233a e0c7  jmp  y,$c7       10039  jmp(Y,'cmpwu#13')               #11
                                          10040  #dummy                          #12 Overlap
                                          10041  #
                                          10042  # pc = 0x223b, Opcode = 0x3b
                                          10043  # Instruction LEEKA:
                                          10044  label('LEEKA')
LEEKA:        233b 1429  ld   $29,y       10045  ld(hi('leeka#13'),Y)            #10 #12
              233c e000  jmp  y,$00       10046  jmp(Y,'leeka#13')               #11
                                          10047  #dummy                          #12 Overlap
                                          10048  #
                                          10049  # pc = 0x223d, Opcode = 0x3d
                                          10050  # Instruction LOKEA:
                                          10051  label('LOKEA')
LOKEA:        233d 1429  ld   $29,y       10052  ld(hi('lokea#13'),Y)            #10 #12
              233e e023  jmp  y,$23       10053  jmp(Y,'lokea#13')               #11
                                          10054  # dummy                         #12
                                          10055  #
                                          10056  # pc = 0x223f, Opcode = 0x3f
                                          10057  # Instruction FEEKA:
                                          10058  label('FEEKA')
FEEKA:        233f 1429  ld   $29,y       10059  ld(hi('feeka#13'),Y)            #10 #12
              2340 e045  jmp  y,$45       10060  jmp(Y,'feeka#13')               #11
              2341 c21d  st   [$1d]       10061  st([vTmp])                      #12 dst var
                                          10062
                                          10063  # pc = 0x2242, Opcode = 0x42
                                          10064  # Instruction FOKEA:
                                          10065  label('FOKEA')
FOKEA:        2342 1429  ld   $29,y       10066  ld(hi('fokea#13'),Y)            #10
              2343 e06c  jmp  y,$6c       10067  jmp(Y,'fokea#13')               #11
                                          10068  # dummy                         #12
                                          10069  #
                                          10070  # pc = 0x2344, Opcode = 0x44
                                          10071  # Instruction MEEKA: Peek 8 bytes from [vAC] to [var], 22 + 64 cycles
                                          10072  label('MEEKA')
MEEKA:        2344 142a  ld   $2a,y       10073  ld(hi('meeka#13'),Y)            #10 #12
              2345 e000  jmp  y,$00       10074  jmp(Y,'meeka#13')               #11
                                          10075  # dummy                         #12
                                          10076  #
                                          10077  # pc = 0x2346, Opcode = 0x46
                                          10078  # Instruction MOKEA: Poke 8 bytes from [var] to [vAC], 22 + 64 cycles
                                          10079  label('MOKEA')
MOKEA:        2346 142a  ld   $2a,y       10080  ld(hi('mokea#13'),Y)            #10 #12
              2347 e037  jmp  y,$37       10081  jmp(Y,'mokea#13')               #11
                                          10082  # dummy                         #12
                                          10083  #
                                          10084  # pc = 0x2348, Opcode = 0x48
                                          10085  # Instruction LSRVL: Logical shift right var long, 22 + 104 cycles
                                          10086  label('LSRVL')
LSRVL:        2348 142c  ld   $2c,y       10087  ld(hi('lsrvl#13'),Y)            #10 #12
              2349 e06b  jmp  y,$6b       10088  jmp(Y,'lsrvl#13')               #11
              234a 1200  ld   ac,x        10089  ld(AC,X)                        #12 var
                                          10090
                                          10091  # pc = 0x234b, Opcode = 0x4b
                                          10092  # Instruction LSLVL: Logical shift left var long, 22 + 56 cycles
                                          10093  label('LSLVL')
LSLVL:        234b 142c  ld   $2c,y       10094  ld(hi('lslvl#13'),Y)            #10 #12
              234c e0b0  jmp  y,$b0       10095  jmp(Y,'lslvl#13')               #11
              234d 1200  ld   ac,x        10096  ld(AC,X)                        #12 var
                                          10097
                                          10098  # pc = 0x234e, Opcode = 0x4e
                                          10099  # Instruction INCL: Increment var long, 22 + 36 cycles
                                          10100  label('INCL')
INCL:         234e 142e  ld   $2e,y       10101  ld(hi('incl#13'),Y)             #10 #12
              234f e012  jmp  y,$12       10102  jmp(Y,'incl#13')                #11
              2350 1200  ld   ac,x        10103  ld(AC,X)                        #12 var
                                          10104
                                          10105  # pc = 0x2351, Opcode = 0x51
                                          10106  # Instruction DECL: Decrement var long, 22 + 40 cycles
                                          10107  label('DECL')
DECL:         2351 142e  ld   $2e,y       10108  ld(hi('decl#13'),Y)             #10 #12
              2352 e036  jmp  y,$36       10109  jmp(Y,'decl#13')                #11
                                          10110  # dummy                         #12
                                          10111  #
                                          10112
                                          10113  # SYS calls and instruction implementations rely on these
              2353 0200  nop              10114  fillers(until=0xca)
              2354 0200  nop
              2355 0200  nop
              * 119 times
              23ca 00f2  ld   $f2         10115  ld(-28/2)                       #25
              23cb fc01  bra  $2301       10116  bra('NEXT')                     #26 Return from SYS calls
              23cc 1517  ld   [$17],y     10117  ld([vPC+1],Y)                   #27
                                          10118
                                          10119
              23cd 0200  nop              10120  fillers(until=0xff)
              23ce 0200  nop
              23cf 0200  nop
              * 50 times
                                          10121
                                          10122  #-----------------------------------------------------------------------
                                          10123  #       PREFX1 instruction page, (0x2400), PREFIX OPCODE
                                          10124  #-----------------------------------------------------------------------
                                          10125  #
                                          10126  label('PREFX1_PAGE')
PREFX1_PAGE:  23ff fc03  bra  $2403       10127  bra('.next2')                   #0 Enter at '.next2' (so no startup overhead)
                                          10128  # --- Page boundary ---
                                          10129  align(0x100,size=0x100)
              2400 1517  ld   [$17],y     10130  ld([vPC+1],Y)                   #1
                                          10131
                                          10132  # Fetch next instruction and execute it, but only if there are sufficient
                                          10133  # ticks left for the slowest instruction.
              2401 8115  adda [$15]       10134  adda([vTicks])                  #0 Track elapsed ticks (actually counting down: AC<0)
              2402 e80b  blt  $240b       10135  blt('EXIT')                     #1 Escape near time out
              2403 c215  st   [$15]       10136  st([vTicks])                    #2
              2404 0116  ld   [$16]       10137  ld([vPC])                       #3 PREFIX is 1 byte, vPC hasn't been incremented
              2405 9001  adda $01,x       10138  adda(1,X)                       #4
              2406 c002  st   $02,[$02]   10139  st(vCpuSelect,[vCpuSelect])     #5 Reset to default vCPU page
              2407 0d00  ld   [y,x]       10140  ld([Y,X])                       #6 Fetch opcode (actually a branch target)
              2408 de00  st   [y,x++]     10141  st([Y,Xpp])                     #7 Just X++
              2409 fe00  bra  ac          10142  bra(AC)                         #8 Dispatch
              240a 0d00  ld   [y,x]       10143  ld([Y,X])                       #9 Prefetch operand
                                          10144
                                          10145  # Resync with video driver and transfer control
              240b 800f  adda $0f         10146  adda(maxTicks)                  #3
              240c e40c  bgt  $240c       10147  bgt(pc()&255)                   #4 Resync
              240d a001  suba $01         10148  suba(1)                         #5
              240e 1401  ld   $01,y       10149  ld(hi('vBlankStart'),Y)         #6
              240f e11e  jmp  y,[$1e]     10150  jmp(Y,[vReturn])                #7 To video driver
              2410 0000  ld   $00         10151  ld(0)                           #8 AC should be 0 already. Still..
                                          10152  assert vCPU_overhead ==          9
                                          10153
                                          10154  # pc = 0x2411, Opcode = 0x11
                                          10155  # Instruction NOTE: vAC = ROM:[NotesTable + vAC.lo*2], 22 + 28 cycles
                                          10156  label('NOTE')
NOTE:         2411 1427  ld   $27,y       10157  ld(hi('note#13'),Y)             #10
              2412 e000  jmp  y,$00       10158  jmp(Y,'note#13')                #11
              2413 0009  ld   $09         10159  ld('.note#28')                  #12 low byte of low note return address
                                          10160
                                          10161  # pc = 0x2414, Opcode = 0x14
                                          10162  # Instruction MIDI: vAC = ROM:[NotesTable + (vAC.lo - 11)*2], 22 + 30 cycles
                                          10163  label('MIDI')
MIDI:         2414 1427  ld   $27,y       10164  ld(hi('midi#13'),Y)             #10
              2415 e019  jmp  y,$19       10165  jmp(Y,'midi#13')                #11
              2416 0023  ld   $23         10166  ld('.midi#29')                  #12 low byte of low midi return address
                                          10167
                                          10168
                                          10169  # SYS calls and instruction implementations rely on these
              2417 0200  nop              10170  fillers(until=0xca)
              2418 0200  nop
              2419 0200  nop
              * 179 times
              24ca 00f2  ld   $f2         10171  ld(-28/2)                       #25
              24cb fc01  bra  $2401       10172  bra('NEXT')                     #26 Return from SYS calls
              24cc 1517  ld   [$17],y     10173  ld([vPC+1],Y)                   #27
                                          10174
                                          10175
              24cd 0200  nop              10176  fillers(until=0xff)
              24ce 0200  nop
              24cf 0200  nop
              * 50 times
              24ff 0200  nop              10177  align(0x100, size=0x100)
                                          10178
                                          10179  #-----------------------------------------------------------------------
                                          10180  #       PREFX3 implementation page, (0x2500)
                                          10181  #-----------------------------------------------------------------------
                                          10182  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2099#p2099
                                          10183  #
                                          10184  # STB2 implementation
                                          10185  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2135#p2135
                                          10186  label('stb2#13')
stb2#13:      2500 152b  ld   [$2b],y     10187  ld([sysArgs+7],Y)               #13 Second operand
              2501 0118  ld   [$18]       10188  ld([vAC])                       #14
              2502 ce00  st   [y,x]       10189  st([Y,X])                       #15
              2503 1403  ld   $03,y       10190  ld(hi('NEXTY'),Y)               #16
              2504 e000  jmp  y,$00       10191  jmp(Y,'NEXTY')                  #17
              2505 00f6  ld   $f6         10192  ld(-20/2)                       #18
                                          10193
                                          10194  # STW2 implementation
                                          10195  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2135#p2135
                                          10196  label('stw2#13')
stw2#13:      2506 152b  ld   [$2b],y     10197  ld([sysArgs+7],Y)               #13 Second operand
              2507 0118  ld   [$18]       10198  ld([vAC])                       #14
              2508 de00  st   [y,x++]     10199  st([Y,Xpp])                     #15
              2509 0119  ld   [$19]       10200  ld([vAC+1])                     #16
              250a ce00  st   [y,x]       10201  st([Y,X])                       #17
              250b 1403  ld   $03,y       10202  ld(hi('NEXTY'),Y)               #18
              250c e000  jmp  y,$00       10203  jmp(Y,'NEXTY')                  #19
              250d 00f5  ld   $f5         10204  ld(-22/2)                       #20
                                          10205
                                          10206  # XCHGB implementation
                                          10207  label('xchgb#13')
xchgb#13:     250e c22a  st   [$2a]       10208  st([sysArgs+6])                 #13 1st var
              250f 112b  ld   [$2b],x     10209  ld([sysArgs+7],X)               #14 2nd var
              2510 0500  ld   [x]         10210  ld([X])                         #15
              2511 c21d  st   [$1d]       10211  st([vTmp])                      #16
              2512 112a  ld   [$2a],x     10212  ld([sysArgs+6],X)               #17
              2513 0500  ld   [x]         10213  ld([X])                         #18
              2514 112b  ld   [$2b],x     10214  ld([sysArgs+7],X)               #19
              2515 c600  st   [x]         10215  st([X])                         #20
              2516 112a  ld   [$2a],x     10216  ld([sysArgs+6],X)               #21
              2517 011d  ld   [$1d]       10217  ld([vTmp])                      #22
              2518 c600  st   [x]         10218  st([X])                         #23
              2519 1403  ld   $03,y       10219  ld(hi('NEXTY'),Y)               #24
              251a e000  jmp  y,$00       10220  jmp(Y,'NEXTY')                  #25
              251b 00f2  ld   $f2         10221  ld(-28/2)                       #26
                                          10222
                                          10223  # XCHGW implementation
                                          10224  label('xchgw#13')
xchgw#13:     251c 00f9  ld   $f9         10225  ld(min(0,maxTicks-44/2))        #13
              251d 8115  adda [$15]       10226  adda([vTicks])                  #14
              251e e83a  blt  .xchgw#17   10227  blt('.xchgw#17')                #15 not enough time left, so retry
              251f 1400  ld   $00,y       10228  ld(0,Y)                         #16 vPC.hi
              2520 112b  ld   [$2b],x     10229  ld([sysArgs+7],X)               #17 var2
              2521 0500  ld   [x]         10230  ld([X])                         #18
              2522 c218  st   [$18]       10231  st([vAC])                       #19 vAC.lo = var2.lo
              2523 de00  st   [y,x++]     10232  st([Y,Xpp])                     #20 X++
              2524 0500  ld   [x]         10233  ld([X])                         #21
              2525 c219  st   [$19]       10234  st([vAC+1])                     #22 vAC.hi = var2.hi
              2526 112a  ld   [$2a],x     10235  ld([sysArgs+6],X)               #23
              2527 0500  ld   [x]         10236  ld([X])                         #24
              2528 112b  ld   [$2b],x     10237  ld([sysArgs+7],X)               #25
              2529 c600  st   [x]         10238  st([X])                         #26 var2.lo = var1.lo
              252a 012a  ld   [$2a]       10239  ld([sysArgs+6])                 #27
              252b 9001  adda $01,x       10240  adda(1,X)                       #28
              252c 0500  ld   [x]         10241  ld([X])                         #29
              252d c21d  st   [$1d]       10242  st([vTmp])                      #30
              252e 012b  ld   [$2b]       10243  ld([sysArgs+7])                 #31
              252f 9001  adda $01,x       10244  adda(1,X)                       #32
              2530 011d  ld   [$1d]       10245  ld([vTmp])                      #33
              2531 c600  st   [x]         10246  st([X])                         #34 var2.hi = var1.hi
              2532 112a  ld   [$2a],x     10247  ld([sysArgs+6],X)               #35
              2533 0118  ld   [$18]       10248  ld([vAC])                       #36
              2534 de00  st   [y,x++]     10249  st([Y,Xpp])                     #37 var1.lo = vAC.lo, X++
              2535 0119  ld   [$19]       10250  ld([vAC+1])                     #38
              2536 c600  st   [x]         10251  st([X])                         #39 var1.hi = vAC.hi
              2537 1403  ld   $03,y       10252  ld(hi('NEXTY'),Y)               #40
              2538 e000  jmp  y,$00       10253  jmp(Y,'NEXTY')                  #41
              2539 00ea  ld   $ea         10254  ld(-44/2)                       #42
                                          10255  label('.xchgw#17')
.xchgw#17:    253a 0021  ld   $21         10256  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              253b c202  st   [$02]       10257  st([vCpuSelect])                #18 restore PREFX3 instruction page
              253c 9401  adda $01,y       10258  adda(1,Y)                       #19 retry instruction
              253d e0cb  jmp  y,$cb       10259  jmp(Y,'REENTER')                #20
              253e 00f4  ld   $f4         10260  ld(-24/2)                       #21
                                          10261
                                          10262  # MOVW implementation
                                          10263  label('movw#13')
movw#13:      253f 1200  ld   ac,x        10264  ld(AC,X)                        #13
              2540 8001  adda $01         10265  adda(1)                         #14
              2541 c21d  st   [$1d]       10266  st([vTmp])                      #15 address of src.hi
              2542 0500  ld   [x]         10267  ld([X])                         #16 src.lo
              2543 112b  ld   [$2b],x     10268  ld([sysArgs+7],X)               #17 address of dst.lo
              2544 c600  st   [x]         10269  st([X])                         #18 dst.lo = src.lo
              2545 111d  ld   [$1d],x     10270  ld([vTmp],X)                    #19
              2546 0500  ld   [x]         10271  ld([X])                         #20 src.hi
              2547 c21d  st   [$1d]       10272  st([vTmp])                      #21
              2548 012b  ld   [$2b]       10273  ld([sysArgs+7])                 #22
              2549 9001  adda $01,x       10274  adda(1,X)                       #23 address of dst.hi
              254a 011d  ld   [$1d]       10275  ld([vTmp])                      #24
              254b c600  st   [x]         10276  st([X])                         #25 dst.hi = src.hi
              254c 1403  ld   $03,y       10277  ld(hi('NEXTY'),Y)               #26
              254d e000  jmp  y,$00       10278  jmp(Y,'NEXTY')                  #27
              254e 00f1  ld   $f1         10279  ld(-30/2)                       #28
                                          10280
                                          10281  # ADDWI implementation
                                          10282  label('addwi#13')
addwi#13:     254f c21d  st   [$1d]       10283  st([vTmp])                      #13 save imm.lo
              2550 8118  adda [$18]       10284  adda([vAC])                     #14
              2551 c218  st   [$18]       10285  st([vAC])                       #15 vAC.lo += imm.lo
              2552 e85c  blt  .addwi#18   10286  bmi('.addwi#18')                #16 overflow
              2553 a11d  suba [$1d]       10287  suba([vTmp])                    #17 restore vAC.lo
              2554 411d  ora  [$1d]       10288  ora([vTmp])                     #18 imm.lo | vAC.lo
              2555 e864  blt  .addwi#21   10289  bmi('.addwi#21')                #19 if carry == 1
              2556 012b  ld   [$2b]       10290  ld([sysArgs+7])                 #20 imm.hi
              2557 8119  adda [$19]       10291  adda([vAC+1])                   #21 carry = 0
              2558 c219  st   [$19]       10292  st([vAC+1])                     #22 vAC.hi += imm.hi
              2559 1403  ld   $03,y       10293  ld(hi('REENTER'),Y)             #23
              255a e0cb  jmp  y,$cb       10294  jmp(Y,'REENTER')                #24
              255b 00f2  ld   $f2         10295  ld(-28/2)                       #25
                                          10296  label('.addwi#18')
.addwi#18:    255c 211d  anda [$1d]       10297  anda([vTmp])                    #18 imm.lo & vAC.lo
              255d e864  blt  .addwi#21   10298  bmi('.addwi#21')                #19 If carry == 1
              255e 012b  ld   [$2b]       10299  ld([sysArgs+7])                 #20 imm.hi
              255f 8119  adda [$19]       10300  adda([vAC+1])                   #21 carry = 0
              2560 c219  st   [$19]       10301  st([vAC+1])                     #22 vAC.hi += imm.hi
              2561 1403  ld   $03,y       10302  ld(hi('REENTER'),Y)             #23
              2562 e0cb  jmp  y,$cb       10303  jmp(Y,'REENTER')                #24
              2563 00f2  ld   $f2         10304  ld(-28/2)                       #25
                                          10305  label('.addwi#21')
.addwi#21:    2564 8001  adda $01         10306  adda(1)                         #21 carry = 1
              2565 8119  adda [$19]       10307  adda([vAC+1])                   #22
              2566 c219  st   [$19]       10308  st([vAC+1])                     #23 vAC.hi = vAC.hi + carry + imm.hi
              2567 1403  ld   $03,y       10309  ld(hi('NEXTY'),Y)               #24
              2568 e000  jmp  y,$00       10310  jmp(Y,'NEXTY')                  #25
              2569 00f2  ld   $f2         10311  ld(-28/2)                       #26
                                          10312
                                          10313  # SUBWI implementation
                                          10314  label('subwi#13')
subwi#13:     256a c21d  st   [$1d]       10315  st([vTmp])                      #13 save imm.lo
              256b 0118  ld   [$18]       10316  ld([vAC])                       #14
              256c e878  blt  .subwi#17   10317  bmi('.subwi#17')                #15 is -ve?
              256d a11d  suba [$1d]       10318  suba([vTmp])                    #16
              256e c218  st   [$18]       10319  st([vAC])                       #17 vAC.lo -= imm.lo
              256f 411d  ora  [$1d]       10320  ora([vTmp])                     #18 borrow in bit 7
              2570 3080  anda $80,x       10321  anda(0x80,X)                    #19 move borrow to bit 0
              2571 0119  ld   [$19]       10322  ld([vAC+1])                     #20
              2572 a500  suba [x]         10323  suba([X])                       #21
              2573 a12b  suba [$2b]       10324  suba([sysArgs+7])               #22
              2574 c219  st   [$19]       10325  st([vAC+1])                     #23 vAC.hi = vAC.hi - borrow - imm.hi
              2575 1403  ld   $03,y       10326  ld(hi('NEXTY'),Y)               #24
              2576 e000  jmp  y,$00       10327  jmp(Y,'NEXTY')                  #25
              2577 00f2  ld   $f2         10328  ld(-28/2)                       #26
                                          10329  label('.subwi#17')
.subwi#17:    2578 c218  st   [$18]       10330  st([vAC])                       #17 vAC.lo -= imm.lo
              2579 211d  anda [$1d]       10331  anda([vTmp])                    #18 borrow in bit 7
              257a 3080  anda $80,x       10332  anda(0x80,X)                    #19 move borrow to bit 0
              257b 0119  ld   [$19]       10333  ld([vAC+1])                     #20
              257c a500  suba [x]         10334  suba([X])                       #21
              257d a12b  suba [$2b]       10335  suba([sysArgs+7])               #22
              257e c219  st   [$19]       10336  st([vAC+1])                     #23 vAC.hi = vAC.hi - borrow - imm.hi
              257f 1403  ld   $03,y       10337  ld(hi('NEXTY'),Y)               #24
              2580 e000  jmp  y,$00       10338  jmp(Y,'NEXTY')                  #25
              2581 00f2  ld   $f2         10339  ld(-28/2)                       #26
                                          10340
                                          10341  # ANDWI implementation
                                          10342  label('andwi#13')
andwi#13:     2582 2118  anda [$18]       10343  anda([vAC])                     #13
              2583 c218  st   [$18]       10344  st([vAC])                       #14 vAC.lo &= imm.lo
              2584 012b  ld   [$2b]       10345  ld([sysArgs+7])                 #15
              2585 2119  anda [$19]       10346  anda([vAC+1])                   #16
              2586 c219  st   [$19]       10347  st([vAC+1])                     #17 vAC.hi &= imm.hi
              2587 1403  ld   $03,y       10348  ld(hi('NEXTY'),Y)               #18
              2588 e000  jmp  y,$00       10349  jmp(Y,'NEXTY')                  #19
              2589 00f5  ld   $f5         10350  ld(-22/2)                       #20
                                          10351
                                          10352  # ORWI implementation
                                          10353  label('orwi#13')
orwi#13:      258a 4118  ora  [$18]       10354  ora([vAC])                      #13
              258b c218  st   [$18]       10355  st([vAC])                       #14 vAC.lo |= imm.lo
              258c 012b  ld   [$2b]       10356  ld([sysArgs+7])                 #15
              258d 4119  ora  [$19]       10357  ora([vAC+1])                    #16
              258e c219  st   [$19]       10358  st([vAC+1])                     #17 vAC.hi |= imm.hi
              258f 1403  ld   $03,y       10359  ld(hi('NEXTY'),Y)               #18
              2590 e000  jmp  y,$00       10360  jmp(Y,'NEXTY')                  #19
              2591 00f5  ld   $f5         10361  ld(-22/2)                       #20
                                          10362
                                          10363  # XORWI implementation
                                          10364  label('xorwi#13')
xorwi#13:     2592 6118  xora [$18]       10365  xora([vAC])                     #13
              2593 c218  st   [$18]       10366  st([vAC])                       #14 vAC.lo ^= imm.lo
              2594 012b  ld   [$2b]       10367  ld([sysArgs+7])                 #15
              2595 6119  xora [$19]       10368  xora([vAC+1])                   #16
              2596 c219  st   [$19]       10369  st([vAC+1])                     #17 vAC.hi ^= imm.hi
              2597 1403  ld   $03,y       10370  ld(hi('NEXTY'),Y)               #18
              2598 e000  jmp  y,$00       10371  jmp(Y,'NEXTY')                  #19
              2599 00f5  ld   $f5         10372  ld(-22/2)                       #20
                                          10373
                                          10374  # LDPX implementation
                                          10375  label('ldpx#13')
ldpx#13:      259a 9001  adda $01,x       10376  adda(1,X)                       #13
              259b 0500  ld   [x]         10377  ld([X])                         #14 y
              259c 8500  adda [x]         10378  adda([X])                       #15 y*2
              259d 1200  ld   ac,x        10379  ld(AC,X)                        #16
              259e 1401  ld   $01,y       10380  ld(1,Y)                         #17 Y,X = 0x0100 + 2*y, (0 >= y <= 127)
              259f 0d00  ld   [y,x]       10381  ld([Y,X])                       #18
              25a0 1600  ld   ac,y        10382  ld(AC,Y)                        #19 Y = [Y,X]
              25a1 111d  ld   [$1d],x     10383  ld([vTmp],X)                    #20
              25a2 0500  ld   [x]         10384  ld([X])                         #21
              25a3 1200  ld   ac,x        10385  ld(AC,X)                        #22 X = x
              25a4 0d00  ld   [y,x]       10386  ld([Y,X])                       #23 colour = [Y,X]
              25a5 112b  ld   [$2b],x     10387  ld([sysArgs+7],X)               #24
              25a6 c600  st   [x]         10388  st([X])                         #25 colour
              25a7 1403  ld   $03,y       10389  ld(hi('NEXTY'),Y)               #26
              25a8 e000  jmp  y,$00       10390  jmp(Y,'NEXTY')                  #27
              25a9 00f1  ld   $f1         10391  ld(-30/2)                       #28
                                          10392
                                          10393  # CONDI implementation
                                          10394  label('condi#13')
condi#13:     25aa c21d  st   [$1d]       10395  st([vTmp])                      #13
              25ab 0118  ld   [$18]       10396  ld([vAC])                       #14
              25ac 4119  ora  [$19]       10397  ora([vAC+1])                    #15
              25ad ecb0  bne  $25b0       10398  bne(pc()+3)                     #16
              25ae fcb1  bra  $25b1       10399  bra(pc()+3)                     #17
              25af 012b  ld   [$2b]       10400  ld([sysArgs+7])                 #18 get result cond == 0
              25b0 011d  ld   [$1d]       10401  ld([vTmp])                      #18 get result cond != 0
              25b1 c218  st   [$18]       10402  st([vAC])                       #19 result.lo
              25b2 0000  ld   $00         10403  ld(0)                           #20
              25b3 c219  st   [$19]       10404  st([vAC+1])                     #21 result.hi = 0
              25b4 1403  ld   $03,y       10405  ld(hi('NEXTY'),Y)               #22
              25b5 e000  jmp  y,$00       10406  jmp(Y,'NEXTY')                  #23
              25b6 00f3  ld   $f3         10407  ld(-26/2)                       #24
                                          10408
                                          10409  # CONDB implementation
                                          10410  label('condb#13')
condb#13:     25b7 0500  ld   [x]         10411  ld([X])                         #13
              25b8 c21d  st   [$1d]       10412  st([vTmp])                      #14
              25b9 112b  ld   [$2b],x     10413  ld([sysArgs+7],X)               #15 get result cond=0
              25ba 0118  ld   [$18]       10414  ld([vAC])                       #16
              25bb 4119  ora  [$19]       10415  ora([vAC+1])                    #17
              25bc ecbf  bne  $25bf       10416  bne(pc()+3)                     #18
              25bd fcc0  bra  $25c0       10417  bra(pc()+3)                     #19
              25be 0500  ld   [x]         10418  ld([X])                         #20 get result cond == 0
              25bf 011d  ld   [$1d]       10419  ld([vTmp])                      #20 get result cond != 0
              25c0 c218  st   [$18]       10420  st([vAC])                       #21 result.lo
              25c1 0000  ld   $00         10421  ld(0)                           #22
              25c2 c219  st   [$19]       10422  st([vAC+1])                     #23 result.hi = 0
              25c3 1403  ld   $03,y       10423  ld(hi('NEXTY'),Y)               #24
              25c4 e000  jmp  y,$00       10424  jmp(Y,'NEXTY')                  #25
              25c5 00f2  ld   $f2         10425  ld(-28/2)                       #26
                                          10426
                                          10427  # CONDIB implementation
                                          10428  label('condib#13')
condib#13:    25c6 112b  ld   [$2b],x     10429  ld([sysArgs+7],X)               #13 get result cond=0
              25c7 0118  ld   [$18]       10430  ld([vAC])                       #14
              25c8 4119  ora  [$19]       10431  ora([vAC+1])                    #15
              25c9 eccc  bne  $25cc       10432  bne(pc()+3)                     #16
              25ca fccd  bra  $25cd       10433  bra(pc()+3)                     #17
              25cb 0500  ld   [x]         10434  ld([X])                         #18 get result cond == 0
              25cc 011d  ld   [$1d]       10435  ld([vTmp])                      #18 get result cond != 0
              25cd c218  st   [$18]       10436  st([vAC])                       #19 result.lo
              25ce 0000  ld   $00         10437  ld(0)                           #20
              25cf c219  st   [$19]       10438  st([vAC+1])                     #21 result.hi = 0
              25d0 1403  ld   $03,y       10439  ld(hi('NEXTY'),Y)               #22
              25d1 e000  jmp  y,$00       10440  jmp(Y,'NEXTY')                  #23
              25d2 00f3  ld   $f3         10441  ld(-26/2)                       #24
                                          10442
                                          10443  # CONDBI implementation
                                          10444  label('condbi#13')
condbi#13:    25d3 1200  ld   ac,x        10445  ld(AC,X)                        #13
              25d4 0118  ld   [$18]       10446  ld([vAC])                       #14
              25d5 4119  ora  [$19]       10447  ora([vAC+1])                    #15
              25d6 ecd9  bne  $25d9       10448  bne(pc()+3)                     #16
              25d7 fcda  bra  $25da       10449  bra(pc()+3)                     #17
              25d8 012b  ld   [$2b]       10450  ld([sysArgs+7])                 #18 get result cond == 0
              25d9 0500  ld   [x]         10451  ld([X])                         #18 get result cond != 0
              25da c218  st   [$18]       10452  st([vAC])                       #19 result.lo
              25db 0000  ld   $00         10453  ld(0)                           #20
              25dc c219  st   [$19]       10454  st([vAC+1])                     #21 result.hi = 0
              25dd 1403  ld   $03,y       10455  ld(hi('NEXTY'),Y)               #22
              25de e000  jmp  y,$00       10456  jmp(Y,'NEXTY')                  #23
              25df 00f3  ld   $f3         10457  ld(-26/2)                       #24
                                          10458
                                          10459
              25e0 0200  nop              10460  fillers(until=0xff)
              25e1 0200  nop
              25e2 0200  nop
              * 31 times
              25ff 0200  nop              10461  align(0x100, size=0x100)
                                          10462
                                          10463  #-----------------------------------------------------------------------
                                          10464  #       PREFX2 implementation page, (0x2600)
                                          10465  #-----------------------------------------------------------------------
                                          10466  #
                                          10467  # LSLN implementation
                                          10468  label('lsln#13')
lsln#13:      2600 a001  suba $01         10469  suba(1)                         #13
              2601 f406  bge  .lsln#16    10470  bge('.lsln#16')                 #14
              2602 c22b  st   [$2b]       10471  st([sysArgs+7])                 #15
              2603 1403  ld   $03,y       10472  ld(hi('NEXTY'),Y)               #16 exit PREFX2 instruction page
              2604 e000  jmp  y,$00       10473  jmp(Y,'NEXTY')                  #17
              2605 00f6  ld   $f6         10474  ld(-20/2)                       #18
                                          10475  label('.lsln#16')
.lsln#16:     2606 0118  ld   [$18]       10476  ld([vAC])                       #16
              2607 3080  anda $80,x       10477  anda(128,X)                     #17
              2608 8118  adda [$18]       10478  adda([vAC])                     #18
              2609 c218  st   [$18]       10479  st([vAC])                       #19
              260a 0500  ld   [x]         10480  ld([X])                         #20
              260b 8119  adda [$19]       10481  adda([vAC+1])                   #21
              260c 8119  adda [$19]       10482  adda([vAC+1])                   #22
              260d c219  st   [$19]       10483  st([vAC+1])                     #23
              260e 0022  ld   $22         10484  ld(hi('PREFX2_PAGE'))           #24 ENTER is at $(n-1)ff, where n = instruction page
              260f c202  st   [$02]       10485  st([vCpuSelect])                #25 restore PREFX2 instruction page
              2610 9401  adda $01,y       10486  adda(1,Y)                       #26 restart instruction
              2611 e000  jmp  y,$00       10487  jmp(Y,'NEXTY')                  #27
              2612 00f1  ld   $f1         10488  ld(-30/2)                       #28
                                          10489
                                          10490  # NOTW implementation
                                          10491  label('notw#13')
notw#13:      2613 112b  ld   [$2b],x     10492  ld([sysArgs+7],X)               #13
              2614 1400  ld   $00,y       10493  ld(0,Y)                         #14
              2615 0500  ld   [x]         10494  ld([X])                         #15
              2616 60ff  xora $ff         10495  xora(255)                       #16
              2617 de00  st   [y,x++]     10496  st([Y,Xpp])                     #17
              2618 0500  ld   [x]         10497  ld([X])                         #18
              2619 60ff  xora $ff         10498  xora(255)                       #19
              261a c600  st   [x]         10499  st([X])                         #20
              261b 1403  ld   $03,y       10500  ld(hi('REENTER'),Y)             #21
              261c e0cb  jmp  y,$cb       10501  jmp(Y,'REENTER')                #22
              261d 00f3  ld   $f3         10502  ld(-26/2)                       #23
                                          10503
                                          10504  # NEGW implementation
                                          10505  label('negw#13')
negw#13:      261e 112b  ld   [$2b],x     10506  ld([sysArgs+7],X)               #13
              261f 1400  ld   $00,y       10507  ld(0,Y)                         #14
              2620 0500  ld   [x]         10508  ld([X])                         #15
              2621 60ff  xora $ff         10509  xora(255)                       #16
              2622 8001  adda $01         10510  adda(1)                         #17
              2623 f02b  beq  .negw#20    10511  beq('.negw#20')                 #18
              2624 de00  st   [y,x++]     10512  st([Y,Xpp])                     #19
              2625 0500  ld   [x]         10513  ld([X])                         #20
              2626 60ff  xora $ff         10514  xora(255)                       #21
              2627 c600  st   [x]         10515  st([X])                         #22
              2628 1403  ld   $03,y       10516  ld(hi('REENTER'),Y)             #23
              2629 e0cb  jmp  y,$cb       10517  jmp(Y,'REENTER')                #24
              262a 00f2  ld   $f2         10518  ld(-28/2)                       #25
                                          10519  label('.negw#20')
.negw#20:     262b 0500  ld   [x]         10520  ld([X])                         #20
              262c 60ff  xora $ff         10521  xora(255)                       #21
              262d 8001  adda $01         10522  adda(1)                         #22
              262e c600  st   [x]         10523  st([X])                         #23
              262f 1403  ld   $03,y       10524  ld(hi('NEXTY'),Y)               #24
              2630 e000  jmp  y,$00       10525  jmp(Y,'NEXTY')                  #25
              2631 00f2  ld   $f2         10526  ld(-28/2)                       #26
                                          10527
                                          10528  # SEXT implementation
                                          10529  label('sext#13')
sext#13:      2632 2119  anda [$19]       10530  anda([vAC+1])                   #13
              2633 ec38  bne  .sext#16    10531  bne('.sext#16')                 #14 check mask
              2634 012b  ld   [$2b]       10532  ld([sysArgs+7])                 #15
              2635 1403  ld   $03,y       10533  ld(hi('NEXTY'),Y)               #16
              2636 e000  jmp  y,$00       10534  jmp(Y,'NEXTY')                  #17
              2637 00f6  ld   $f6         10535  ld(-20/2)                       #18
                                          10536  label('.sext#16')
.sext#16:     2638 60ff  xora $ff         10537  xora(255)                       #16
              2639 8001  adda $01         10538  adda(1)                         #17 mask = (~mask) + 1
              263a 4119  ora  [$19]       10539  ora([vAC+1])                    #18
              263b c219  st   [$19]       10540  st([vAC+1])                     #19 set sign bits
              263c 1403  ld   $03,y       10541  ld(hi('NEXTY'),Y)               #20
              263d e000  jmp  y,$00       10542  jmp(Y,'NEXTY')                  #21
              263e 00f4  ld   $f4         10543  ld(-24/2)                       #22
                                          10544
                                          10545  # ANDBA implementation
                                          10546  label('andba#13')
andba#13:     263f 0118  ld   [$18]       10547  ld([vAC])                       #13
              2640 2500  anda [x]         10548  anda([X])                       #14
              2641 c218  st   [$18]       10549  st([vAC])                       #15 vAC.lo &= var.lo
              2642 0000  ld   $00         10550  ld(0)                           #16
              2643 c219  st   [$19]       10551  st([vAC+1])                     #17 Store high result
              2644 1403  ld   $03,y       10552  ld(hi('NEXTY'),Y)               #18
              2645 e000  jmp  y,$00       10553  jmp(Y,'NEXTY')                  #19
              2646 00f5  ld   $f5         10554  ld(-22/2)                       #20
                                          10555
                                          10556  # ORBA implementation
                                          10557  label('orba#13')
orba#13:      2647 0118  ld   [$18]       10558  ld([vAC])                       #13
              2648 4500  ora  [x]         10559  ora([X])                        #14
              2649 c218  st   [$18]       10560  st([vAC])                       #15 vAC.lo |= var.lo
              264a 1403  ld   $03,y       10561  ld(hi('NEXTY'),Y)               #16
              264b e000  jmp  y,$00       10562  jmp(Y,'NEXTY')                  #17
              264c 00f6  ld   $f6         10563  ld(-20/2)                       #18
                                          10564
                                          10565  # XORBA implementation
                                          10566  label('xorba#13')
xorba#13:     264d 0118  ld   [$18]       10567  ld([vAC])                       #13
              264e 6500  xora [x]         10568  xora([X])                       #14
              264f c218  st   [$18]       10569  st([vAC])                       #15 vAC.lo ^= var.lo
              2650 1403  ld   $03,y       10570  ld(hi('NEXTY'),Y)               #16
              2651 e000  jmp  y,$00       10571  jmp(Y,'NEXTY')                  #17
              2652 00f6  ld   $f6         10572  ld(-20/2)                       #18
                                          10573
                                          10574  # FREQM implementation
                                          10575  label('freqm#13')
freqm#13:     2653 1200  ld   ac,x        10576  ld(AC,X)                        #13 chan var, (operand from PREFX2)
              2654 0500  ld   [x]         10577  ld([X])                         #14
              2655 2003  anda $03         10578  anda(3)                         #15
              2656 9401  adda $01,y       10579  adda(1,Y)                       #16
              2657 10fc  ld   $fc,x       10580  ld(0xFC,X)                      #17
              2658 0118  ld   [$18]       10581  ld([vAC])                       #18
              2659 de00  st   [y,x++]     10582  st([Y,Xpp])                     #19
              265a 0119  ld   [$19]       10583  ld([vAC+1])                     #20
              265b ce00  st   [y,x]       10584  st([Y,X])                       #21
              265c 1403  ld   $03,y       10585  ld(hi('NEXTY'),Y)               #22
              265d e000  jmp  y,$00       10586  jmp(Y,'NEXTY')                  #23
              265e 00f3  ld   $f3         10587  ld(-26/2)                       #24
                                          10588
                                          10589  # FREQA implementation
                                          10590  label('freqa#13')
freqa#13:     265f 0500  ld   [x]         10591  ld([X])                         #13
              2660 a001  suba $01         10592  suba(1)                         #14
              2661 2003  anda $03         10593  anda(3)                         #15
              2662 9401  adda $01,y       10594  adda(1,Y)                       #16
              2663 10fc  ld   $fc,x       10595  ld(0xFC,X)                      #17
              2664 0118  ld   [$18]       10596  ld([vAC])                       #18
              2665 de00  st   [y,x++]     10597  st([Y,Xpp])                     #19
              2666 0119  ld   [$19]       10598  ld([vAC+1])                     #20
              2667 ce00  st   [y,x]       10599  st([Y,X])                       #21
              2668 1403  ld   $03,y       10600  ld(hi('NEXTY'),Y)               #22
              2669 e000  jmp  y,$00       10601  jmp(Y,'NEXTY')                  #23
              266a 00f3  ld   $f3         10602  ld(-26/2)                       #24
                                          10603
                                          10604  # FREQZ implementation
                                          10605  label('freqz#13')
freqz#13:     266b 9401  adda $01,y       10606  adda(1,Y)                       #13
              266c 10fc  ld   $fc,x       10607  ld(0xFC,X)                      #14
              266d 0000  ld   $00         10608  ld(0)                           #15
              266e de00  st   [y,x++]     10609  st([Y,Xpp])                     #16
              266f ce00  st   [y,x]       10610  st([Y,X])                       #17
              2670 1403  ld   $03,y       10611  ld(hi('NEXTY'),Y)               #18
              2671 e000  jmp  y,$00       10612  jmp(Y,'NEXTY')                  #19
              2672 00f5  ld   $f5         10613  ld(-22/2)                       #20
                                          10614
                                          10615  # VOLM implementation
                                          10616  label('volm#13')
volm#13:      2673 1200  ld   ac,x        10617  ld(AC,X)                        #13 chan var, (operand from PREFX2)
              2674 0500  ld   [x]         10618  ld([X])                         #14
              2675 2003  anda $03         10619  anda(3)                         #15
              2676 9401  adda $01,y       10620  adda(1,Y)                       #16
              2677 10fa  ld   $fa,x       10621  ld(0xFA,X)                      #17
              2678 0118  ld   [$18]       10622  ld([vAC])                       #18
              2679 ce00  st   [y,x]       10623  st([Y,X])                       #19
              267a 1403  ld   $03,y       10624  ld(hi('NEXTY'),Y)               #20
              267b e000  jmp  y,$00       10625  jmp(Y,'NEXTY')                  #21
              267c 00f4  ld   $f4         10626  ld(-24/2)                       #22
                                          10627
                                          10628  # VOLA implementation
                                          10629  label('vola#13')
vola#13:      267d 0500  ld   [x]         10630  ld([X])                         #13
              267e a001  suba $01         10631  suba(1)                         #14
              267f 2003  anda $03         10632  anda(3)                         #15
              2680 9401  adda $01,y       10633  adda(1,Y)                       #16
              2681 10fa  ld   $fa,x       10634  ld(0xFA,X)                      #17
              2682 003f  ld   $3f         10635  ld(63)                          #18
              2683 a118  suba [$18]       10636  suba([vAC])                     #19
              2684 8040  adda $40         10637  adda(64)                        #20
              2685 ce00  st   [y,x]       10638  st([Y,X])                       #21
              2686 1403  ld   $03,y       10639  ld(hi('NEXTY'),Y)               #22
              2687 e000  jmp  y,$00       10640  jmp(Y,'NEXTY')                  #23
              2688 00f3  ld   $f3         10641  ld(-26/2)                       #24
                                          10642
                                          10643  # MODA implementation
                                          10644  label('moda#13')
moda#13:      2689 0500  ld   [x]         10645  ld([X])                         #13
              268a a001  suba $01         10646  suba(1)                         #14
              268b 2003  anda $03         10647  anda(3)                         #15
              268c 9401  adda $01,y       10648  adda(1,Y)                       #16
              268d 10fb  ld   $fb,x       10649  ld(0xFB,X)                      #17
              268e 0118  ld   [$18]       10650  ld([vAC])                       #18
              268f ce00  st   [y,x]       10651  st([Y,X])                       #19
              2690 1403  ld   $03,y       10652  ld(hi('NEXTY'),Y)               #20
              2691 e000  jmp  y,$00       10653  jmp(Y,'NEXTY')                  #21
              2692 00f4  ld   $f4         10654  ld(-24/2)                       #22
                                          10655
                                          10656  # MODZ implementation
                                          10657  label('modz#13')
modz#13:      2693 2003  anda $03         10658  anda(3)                         #13
              2694 9401  adda $01,y       10659  adda(1,Y)                       #14
              2695 10fa  ld   $fa,x       10660  ld(0xFA,X)                      #15
              2696 0000  ld   $00         10661  ld(0)                           #16
              2697 de00  st   [y,x++]     10662  st([Y,Xpp])                     #17
              2698 0002  ld   $02         10663  ld(2)                           #18
              2699 ce00  st   [y,x]       10664  st([Y,X])                       #19
              269a 1403  ld   $03,y       10665  ld(hi('NEXTY'),Y)               #20
              269b e000  jmp  y,$00       10666  jmp(Y,'NEXTY')                  #21
              269c 00f4  ld   $f4         10667  ld(-24/2)                       #22
                                          10668
                                          10669
                                          10670  # SMPCPY implementation
                                          10671  label('smpcpy#13')
smpcpy#13:    269d 1400  ld   $00,y       10672  ld(0,Y)                         #13
              269e 00f1  ld   $f1         10673  ld(min(0,maxTicks-60/2))        #14
              269f 8115  adda [$15]       10674  adda([vTicks])                  #15
              26a0 e8d3  blt  .smpcpy#18  10675  blt('.smpcpy#18')               #16 not enough time left, so retry
              26a1 0500  ld   [x]         10676  ld([X])                         #17 dst address = [dst var]
              26a2 de00  st   [y,x++]     10677  st([Y,Xpp])                     #18
              26a3 c2b0  st   [$b0]       10678  st([0xB0])                      #19
              26a4 0500  ld   [x]         10679  ld([X])                         #20
              26a5 c2b1  st   [$b1]       10680  st([0xB1])                      #21
              26a6 1118  ld   [$18],x     10681  ld([vAC],X)                     #22 low byte of src address
              26a7 1519  ld   [$19],y     10682  ld([vAC+1],Y)                   #23 high byte of arc address
              26a8 0d00  ld   [y,x]       10683  ld([Y,X])                       #24
              26a9 c21d  st   [$1d]       10684  st([vTmp])                      #25 packed sample, 4:4
              26aa 1407  ld   $07,y       10685  ld(soundTable>>8,Y)             #26
              26ab 20f0  anda $f0         10686  anda(0xF0)                      #27 high nibble
              26ac 5003  ora  $03,x       10687  ora(0x03,X)                     #28
              26ad 0d00  ld   [y,x]       10688  ld([Y,X])                       #29 high nibble >>2
              26ae 11b0  ld   [$b0],x     10689  ld([0xB0],X)                    #30 low byte dst address
              26af 15b1  ld   [$b1],y     10690  ld([0xB1],Y)                    #31 high byte dst address
              26b0 ce00  st   [y,x]       10691  st([Y,X])                       #32 [0x0702 + i] = 6bit sample
              26b1 01b0  ld   [$b0]       10692  ld([0xB0])                      #33
              26b2 9004  adda $04,x       10693  adda(4,X)                       #34
              26b3 8008  adda $08         10694  adda(8)                         #35
              26b4 c2b0  st   [$b0]       10695  st([0xB0])                      #36
              26b5 011d  ld   [$1d]       10696  ld([vTmp])                      #37 packed sample, 4:4
              26b6 200f  anda $0f         10697  anda(0x0F)                      #38 low nibble
              26b7 8200  adda ac          10698  adda(AC)                        #39
              26b8 8200  adda ac          10699  adda(AC)                        #40 low nibble <<2
              26b9 ce00  st   [y,x]       10700  st([Y,X])                       #41 [0x0706 + i] = 6bit sample
              26ba 112b  ld   [$2b],x     10701  ld([sysArgs+7],X)               #42
              26bb 01b0  ld   [$b0]       10702  ld([0xB0])                      #43
              26bc c600  st   [x]         10703  st([X])                         #44
              26bd a002  suba $02         10704  suba(0x02)                      #45
              26be f0d0  beq  .smpcpy#48  10705  beq('.smpcpy#48')               #46 check for end sample
              26bf 0118  ld   [$18]       10706  ld([vAC])                       #47
              26c0 8001  adda $01         10707  adda(1)                         #48
              26c1 eccb  bne  .smpcpy#51  10708  bne('.smpcpy#51')               #49
              26c2 c218  st   [$18]       10709  st([vAC])                       #50
              26c3 0119  ld   [$19]       10710  ld([vAC+1])                     #51
              26c4 8001  adda $01         10711  adda(1)                         #52
              26c5 c219  st   [$19]       10712  st([vAC+1])                     #53
              26c6 0022  ld   $22         10713  ld(hi('PREFX2_PAGE'))           #54 ENTER is at $(n-1)ff, where n = instruction page
              26c7 c202  st   [$02]       10714  st([vCpuSelect])                #55 restore PREFX2 instruction page
              26c8 9401  adda $01,y       10715  adda(1,Y)                       #56 restart instruction
              26c9 e000  jmp  y,$00       10716  jmp(Y,'NEXTY')                  #57
              26ca 00e2  ld   $e2         10717  ld(-60/2)                       #58
                                          10718
                                          10719  label('.smpcpy#51')
.smpcpy#51:   26cb 0022  ld   $22         10720  ld(hi('PREFX2_PAGE'))           #51 ENTER is at $(n-1)ff, where n = instruction page
              26cc c202  st   [$02]       10721  st([vCpuSelect])                #52 restore PREFX2 instruction page
              26cd 9401  adda $01,y       10722  adda(1,Y)                       #53 restart instruction
              26ce e0cb  jmp  y,$cb       10723  jmp(Y,'REENTER')                #54
              26cf 00e3  ld   $e3         10724  ld(-58/2)                       #55
                                          10725
                                          10726  label('.smpcpy#48')
.smpcpy#48:   26d0 1403  ld   $03,y       10727  ld(hi('NEXTY'),Y)               #48
              26d1 e000  jmp  y,$00       10728  jmp(Y,'NEXTY')                  #49
              26d2 00e6  ld   $e6         10729  ld(-52/2)                       #50
                                          10730
                                          10731  label('.smpcpy#18')
.smpcpy#18:   26d3 0022  ld   $22         10732  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              26d4 c202  st   [$02]       10733  st([vCpuSelect])                #19 restore PREFX2 instruction page
              26d5 9401  adda $01,y       10734  adda(1,Y)                       #20 retry instruction
              26d6 e000  jmp  y,$00       10735  jmp(Y,'NEXTY')                  #21
              26d7 00f4  ld   $f4         10736  ld(-24/2)                       #22
                                          10737
                                          10738
                                          10739  # CMPWS implementation, vAC = vAC CMPWS var
                                          10740  #           LDW   var0
                                          10741  #           XORW  var1
                                          10742  #           BGE   CMPWS_GE
                                          10743  #           LDW   var0
                                          10744  #           BRA   CMPWS_RT
                                          10745  #CMPWS_GE   LDW   var0
                                          10746  #           SUBW  var1
                                          10747  #CMPWS_RT   RET
                                          10748  #label('cmpws#13')
                                          10749  #ld(min(0,maxTicks-38/2))        #13
                                          10750  #adda([vTicks])                  #14
                                          10751  #blt('.cmpws#17')                #15 not enough time left, so retry
                                          10752  #ld(0,Y)                         #16
                                          10753  #ld([X])                         #17
                                          10754  #st([Y,Xpp])                     #18
                                          10755  #st([0xB0])                      #19 cmp var.lo
                                          10756  #ld([X])                         #20
                                          10757  #st([0xB1])                      #21 cmp var.hi
                                          10758  #xora([vAC+1])                   #22
                                          10759  #blt('.cmpws#25')                #23 if < 0
                                          10760  #ld([vAC])                       #24 Low byte
                                          10761  #bmi('.cmpws#27')                #25
                                          10762  #suba([0xB0])                    #26
                                          10763  #st([vAC])                       #27 Store low result
                                          10764  #ora([0xB0])                     #28 Carry in bit 7
                                          10765  #anda(0x80,X)                    #29 Move carry to bit 0
                                          10766  #ld([vAC+1])                     #30
                                          10767  #suba([X])                       #31
                                          10768  #suba([0xB1])                    #32 sub var.hi with carry
                                          10769  #st([vAC+1])                     #33
                                          10770  #ld(hi('NEXTY'),Y)               #34
                                          10771  #jmp(Y,'NEXTY')                  #35
                                          10772  #ld(-38/2)                       #36
                                          10773  #
                                          10774  #label('.cmpws#25')
                                          10775  #ld(hi('REENTER'),Y)             #25
                                          10776  #jmp(Y,'REENTER')                #26
                                          10777  #ld(-30/2)                       #27
                                          10778  #
                                          10779  #label('.cmpws#27')
                                          10780  #st([vAC])                       #27 Store low result
                                          10781  #anda([0xB0])                    #28 Carry in bit 7
                                          10782  #anda(0x80,X)                    #29 Move carry to bit 0
                                          10783  #ld([vAC+1])                     #30
                                          10784  #suba([X])                       #31
                                          10785  #suba([0xB1])                    #32 sub var.hi with carry
                                          10786  #st([vAC+1])                     #33
                                          10787  #ld(hi('NEXTY'),Y)               #34
                                          10788  #jmp(Y,'NEXTY')                  #35
                                          10789  #ld(-38/2)                       #36
                                          10790  #
                                          10791  #label('.cmpws#17')
                                          10792  #ld(hi('PREFX2_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
                                          10793  #st([vCpuSelect])                #18 restore PREFX2 instruction page
                                          10794  #adda(1,Y)                       #19 retry instruction
                                          10795  #jmp(Y,'REENTER')                #20
                                          10796  #ld(-24/2)                       #21
                                          10797
                                          10798
              26d8 0200  nop              10799  fillers(until=0xff)
              26d9 0200  nop
              26da 0200  nop
              * 39 times
              26ff 0200  nop              10800  align(0x100, size=0x100)
                                          10801
                                          10802  #-----------------------------------------------------------------------
                                          10803  #       PREFX1 implementation page, (0x2700)
                                          10804  #-----------------------------------------------------------------------
                                          10805  #
                                          10806  # NOTE implementation: vAC = ROM:[NotesTable + vAC.lo*2], 22 + 30 cycles
                                          10807  label('note#13')
note#13:      2700 c21d  st   [$1d]       10808  st([vTmp])                      #13 low byte of low note return address
              2701 00f8  ld   $f8         10809  ld(min(0,maxTicks-46/2))        #14
              2702 8115  adda [$15]       10810  adda([vTicks])                  #15
              2703 e814  blt  .note#18    10811  blt('.note#18')                 #16 not enough time left, so retry
              2704 1409  ld   $09,y       10812  ld(hi('noteTrampoline'),Y)      #17
              2705 0118  ld   [$18]       10813  ld([vAC])                       #18 vAC.lo = note index
              2706 8200  adda ac          10814  adda(AC)                        #19 vAC.lo*2, (low note byte)
              2707 e0c0  jmp  y,$c0       10815  jmp(Y,'noteTrampoline')         #20
              2708 c219  st   [$19]       10816  st([vAC+1])                     #21 vAC.hi = vAC.lo*2
                                          10817  label('.note#28')
.note#28:     2709 c218  st   [$18]       10818  st([vAC])                       #28 vAC.lo = note.lo
              270a 0010  ld   $10         10819  ld('.note#41')                  #29
              270b c21d  st   [$1d]       10820  st([vTmp])                      #30 low byte of high note return address
              270c 1409  ld   $09,y       10821  ld(hi('noteTrampoline'),Y)      #31
              270d 0119  ld   [$19]       10822  ld([vAC+1])                     #32
              270e e0c0  jmp  y,$c0       10823  jmp(Y,'noteTrampoline')         #33
              270f 8001  adda $01         10824  adda(1)                         #34 vAC.lo*2 + 1, (high note byte)
                                          10825  label('.note#41')
.note#41:     2710 c219  st   [$19]       10826  st([vAC+1])                     #41
              2711 1403  ld   $03,y       10827  ld(hi('NEXTY'),Y)               #42
              2712 e000  jmp  y,$00       10828  jmp(Y,'NEXTY')                  #43
              2713 00e9  ld   $e9         10829  ld(-46/2)                       #44
                                          10830  label('.note#18')
.note#18:     2714 0023  ld   $23         10831  ld(hi('PREFX1_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2715 c202  st   [$02]       10832  st([vCpuSelect])                #19 restore PREFX1 instruction page
              2716 9401  adda $01,y       10833  adda(1,Y)                       #20 retry instruction
              2717 e000  jmp  y,$00       10834  jmp(Y,'NEXTY')                  #21
              2718 00f4  ld   $f4         10835  ld(-24/2)                       #22
                                          10836
                                          10837  # MIDI implementation: vAC = ROM:[NotesTable + (vAC.lo - 11)*2], 22 + 30 cycles
                                          10838  label('midi#13')
midi#13:      2719 c21d  st   [$1d]       10839  st([vTmp])                      #13 low byte of low midi return address
              271a 00f7  ld   $f7         10840  ld(min(0,maxTicks-48/2))        #14
              271b 8115  adda [$15]       10841  adda([vTicks])                  #15
              271c e82e  blt  .midi#18    10842  blt('.midi#18')                 #16 not enough time left, so retry
              271d 1409  ld   $09,y       10843  ld(hi('noteTrampoline'),Y)      #17
              271e 0118  ld   [$18]       10844  ld([vAC])                       #18 vAC.lo = midi index
              271f a00b  suba $0b         10845  suba(11)                        #19 vAC.lo -= 11
              2720 8200  adda ac          10846  adda(AC)                        #20 vAC.lo*2, (low midi byte)
              2721 e0c0  jmp  y,$c0       10847  jmp(Y,'noteTrampoline')         #21
              2722 c219  st   [$19]       10848  st([vAC+1])                     #22 vAC.hi = vAC.lo*2
                                          10849  label('.midi#29')
.midi#29:     2723 c218  st   [$18]       10850  st([vAC])                       #29 vAC.lo = midi.lo
              2724 002a  ld   $2a         10851  ld('.midi#42')                  #30
              2725 c21d  st   [$1d]       10852  st([vTmp])                      #31 low byte of high midi return address
              2726 1409  ld   $09,y       10853  ld(hi('noteTrampoline'),Y)      #32
              2727 0119  ld   [$19]       10854  ld([vAC+1])                     #33
              2728 e0c0  jmp  y,$c0       10855  jmp(Y,'noteTrampoline')         #34
              2729 8001  adda $01         10856  adda(1)                         #35 vAC.lo*2 + 1, (high midi byte)
                                          10857  label('.midi#42')
.midi#42:     272a c219  st   [$19]       10858  st([vAC+1])                     #42
              272b 1403  ld   $03,y       10859  ld(hi('REENTER'),Y)             #43
              272c e0cb  jmp  y,$cb       10860  jmp(Y,'REENTER')                #44
              272d 00e8  ld   $e8         10861  ld(-48/2)                       #45
                                          10862  label('.midi#18')
.midi#18:     272e 0023  ld   $23         10863  ld(hi('PREFX1_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              272f c202  st   [$02]       10864  st([vCpuSelect])                #19 restore PREFX1 instruction page
              2730 9401  adda $01,y       10865  adda(1,Y)                       #20 retry instruction
              2731 e000  jmp  y,$00       10866  jmp(Y,'NEXTY')                  #21
              2732 00f4  ld   $f4         10867  ld(-24/2)                       #22
                                          10868
                                          10869
              2733 0200  nop              10870  fillers(until=0xff)
              2734 0200  nop
              2735 0200  nop
              * 204 times
              27ff 0200  nop              10871  align(0x100, size=0x100)
                                          10872
                                          10873  #-----------------------------------------------------------------------
                                          10874  #       More vCPU instruction implementations, (0x2800)
                                          10875  #-----------------------------------------------------------------------
                                          10876  #
                                          10877  # ADDVI implementation
                                          10878  label('addvi#13')
addvi#13:     2800 1517  ld   [$17],y     10879  ld([vPC+1],Y)                   #13 vPC.hi
              2801 c22a  st   [$2a]       10880  st([sysArgs+6])                 #14 immediate 8bit
              2802 de00  st   [y,x++]     10881  st([Y,Xpp])                     #15 X++
              2803 00f6  ld   $f6         10882  ld(min(0,maxTicks-50/2))        #16
              2804 8115  adda [$15]       10883  adda([vTicks])                  #17
              2805 e833  blt  .addvi#20   10884  blt('.addvi#20')                #18 not enough time left, so retry
              2806 0d00  ld   [y,x]       10885  ld([Y,X])                       #19
              2807 d22b  st   [$2b],x     10886  st([sysArgs+7],X)               #20 dst var addr
              2808 1400  ld   $00,y       10887  ld(0,Y)                         #21
              2809 0500  ld   [x]         10888  ld([X])                         #22 dst low value
              280a c218  st   [$18]       10889  st([vAC])                       #23
              280b de00  st   [y,x++]     10890  st([Y,Xpp])                     #24 X++
              280c 0500  ld   [x]         10891  ld([X])                         #25 dst hi value
              280d c219  st   [$19]       10892  st([vAC+1])                     #26
              280e 012a  ld   [$2a]       10893  ld([sysArgs+6])                 #27
              280f 8118  adda [$18]       10894  adda([vAC])                     #28
              2810 c218  st   [$18]       10895  st([vAC])                       #29 Store low result
              2811 e823  blt  .addvi#32   10896  bmi('.addvi#32')                #30 Now figure out if there was a carry
              2812 a12a  suba [$2a]       10897  suba([sysArgs+6])               #31 Gets back the initial value of vAC
              2813 412a  ora  [$2a]       10898  ora([sysArgs+6])                #32 Carry in bit 7
              2814 3080  anda $80,x       10899  anda(0x80,X)                    #33 Move carry to bit 0
              2815 0500  ld   [x]         10900  ld([X])                         #34
              2816 8119  adda [$19]       10901  adda([vAC+1])                   #35 Add the high bytes with carry
              2817 c219  st   [$19]       10902  st([vAC+1])                     #36 Store high result
              2818 112b  ld   [$2b],x     10903  ld([sysArgs+7],X)               #37
              2819 0118  ld   [$18]       10904  ld([vAC])                       #38
              281a de00  st   [y,x++]     10905  st([Y,Xpp])                     #39
              281b 0119  ld   [$19]       10906  ld([vAC+1])                     #40
              281c c600  st   [x]         10907  st([X])                         #41
              281d 0116  ld   [$16]       10908  ld([vPC])                       #42
              281e 8001  adda $01         10909  adda(1)                         #43
              281f c216  st   [$16]       10910  st([vPC])                       #44
              2820 1403  ld   $03,y       10911  ld(hi('REENTER'),Y)             #45
              2821 e0cb  jmp  y,$cb       10912  jmp(Y,'REENTER')                #46
              2822 00e7  ld   $e7         10913  ld(-50/2)                       #47
                                          10914
                                          10915  label('.addvi#32')
.addvi#32:    2823 212a  anda [$2a]       10916  anda([sysArgs+6])               #32 Carry in bit 7
              2824 3080  anda $80,x       10917  anda(0x80,X)                    #33 Move carry to bit 0
              2825 0500  ld   [x]         10918  ld([X])                         #34
              2826 8119  adda [$19]       10919  adda([vAC+1])                   #35 Add the high bytes with carry
              2827 c219  st   [$19]       10920  st([vAC+1])                     #36 Store high result
              2828 112b  ld   [$2b],x     10921  ld([sysArgs+7],X)               #37
              2829 0118  ld   [$18]       10922  ld([vAC])                       #38
              282a de00  st   [y,x++]     10923  st([Y,Xpp])                     #39
              282b 0119  ld   [$19]       10924  ld([vAC+1])                     #40
              282c c600  st   [x]         10925  st([X])                         #41
              282d 0116  ld   [$16]       10926  ld([vPC])                       #42
              282e 8001  adda $01         10927  adda(1)                         #43
              282f c216  st   [$16]       10928  st([vPC])                       #44
              2830 1403  ld   $03,y       10929  ld(hi('REENTER'),Y)             #45
              2831 e0cb  jmp  y,$cb       10930  jmp(Y,'REENTER')                #46
              2832 00e7  ld   $e7         10931  ld(-50/2)                       #47
                                          10932
                                          10933  label('.addvi#20')
.addvi#20:    2833 0116  ld   [$16]       10934  ld([vPC])                       #20 retry instruction
              2834 a002  suba $02         10935  suba(2)                         #21
              2835 c216  st   [$16]       10936  st([vPC])                       #22
              2836 1403  ld   $03,y       10937  ld(hi('REENTER'),Y)             #23
              2837 e0cb  jmp  y,$cb       10938  jmp(Y,'REENTER')                #24
              2838 00f2  ld   $f2         10939  ld(-28/2)                       #25
                                          10940
                                          10941
                                          10942  # SUBVI implementation
                                          10943  label('subvi#13')
subvi#13:     2839 1517  ld   [$17],y     10944  ld([vPC+1],Y)                   #13 vPC.hi
              283a c22a  st   [$2a]       10945  st([sysArgs+6])                 #14 immediate 8bit
              283b de00  st   [y,x++]     10946  st([Y,Xpp])                     #15 X++
              283c 00f6  ld   $f6         10947  ld(min(0,maxTicks-50/2))        #16
              283d 8115  adda [$15]       10948  adda([vTicks])                  #17
              283e e86d  blt  .subvi#20   10949  blt('.subvi#20')                #18 not enough time left, so retry
              283f 0d00  ld   [y,x]       10950  ld([Y,X])                       #19
              2840 d22b  st   [$2b],x     10951  st([sysArgs+7],X)               #20 dst var addr
              2841 1400  ld   $00,y       10952  ld(0,Y)                         #21
              2842 0500  ld   [x]         10953  ld([X])                         #22 dst low value
              2843 c218  st   [$18]       10954  st([vAC])                       #23
              2844 de00  st   [y,x++]     10955  st([Y,Xpp])                     #24 X++
              2845 0500  ld   [x]         10956  ld([X])                         #25 dst hi value
              2846 c219  st   [$19]       10957  st([vAC+1])                     #26
              2847 112b  ld   [$2b],x     10958  ld([sysArgs+7],X)               #27 dst var addr
              2848 0500  ld   [x]         10959  ld([X])                         #28
              2849 e85c  blt  .subvi#31   10960  bmi('.subvi#31')                #29
              284a a12a  suba [$2a]       10961  suba([sysArgs+6])               #30
              284b c218  st   [$18]       10962  st([vAC])                       #31 store low result
              284c 412a  ora  [$2a]       10963  ora([sysArgs+6])                #32 carry in bit 7
              284d 3080  anda $80,x       10964  anda(0x80,X)                    #33 move carry to bit 0
              284e 0119  ld   [$19]       10965  ld([vAC+1])                     #34
              284f a500  suba [x]         10966  suba([X])                       #35
              2850 c219  st   [$19]       10967  st([vAC+1])                     #36 store high result
              2851 112b  ld   [$2b],x     10968  ld([sysArgs+7],X)               #37
              2852 0118  ld   [$18]       10969  ld([vAC])                       #38
              2853 de00  st   [y,x++]     10970  st([Y,Xpp])                     #39
              2854 0119  ld   [$19]       10971  ld([vAC+1])                     #40
              2855 c600  st   [x]         10972  st([X])                         #41
              2856 0116  ld   [$16]       10973  ld([vPC])                       #42
              2857 8001  adda $01         10974  adda(1)                         #43
              2858 c216  st   [$16]       10975  st([vPC])                       #44
              2859 1403  ld   $03,y       10976  ld(hi('REENTER'),Y)             #45
              285a e0cb  jmp  y,$cb       10977  jmp(Y,'REENTER')                #46
              285b 00e7  ld   $e7         10978  ld(-50/2)                       #47
                                          10979
                                          10980  label('.subvi#31')
.subvi#31:    285c c218  st   [$18]       10981  st([vAC])                       #31 store low result
              285d 212a  anda [$2a]       10982  anda([sysArgs+6])               #32 carry in bit 7
              285e 3080  anda $80,x       10983  anda(0x80,X)                    #33 move carry to bit 0
              285f 0119  ld   [$19]       10984  ld([vAC+1])                     #34
              2860 a500  suba [x]         10985  suba([X])                       #35
              2861 c219  st   [$19]       10986  st([vAC+1])                     #36 store high result
              2862 112b  ld   [$2b],x     10987  ld([sysArgs+7],X)               #37
              2863 0118  ld   [$18]       10988  ld([vAC])                       #38
              2864 de00  st   [y,x++]     10989  st([Y,Xpp])                     #39
              2865 0119  ld   [$19]       10990  ld([vAC+1])                     #40
              2866 c600  st   [x]         10991  st([X])                         #41
              2867 0116  ld   [$16]       10992  ld([vPC])                       #42
              2868 8001  adda $01         10993  adda(1)                         #43
              2869 c216  st   [$16]       10994  st([vPC])                       #44
              286a 1403  ld   $03,y       10995  ld(hi('REENTER'),Y)             #45
              286b e0cb  jmp  y,$cb       10996  jmp(Y,'REENTER')                #46
              286c 00e7  ld   $e7         10997  ld(-50/2)                       #47
                                          10998
                                          10999  label('.subvi#20')
.subvi#20:    286d 0116  ld   [$16]       11000  ld([vPC])                       #20 retry instruction
              286e a002  suba $02         11001  suba(2)                         #21
              286f c216  st   [$16]       11002  st([vPC])                       #22
              2870 1403  ld   $03,y       11003  ld(hi('REENTER'),Y)             #23
              2871 e0cb  jmp  y,$cb       11004  jmp(Y,'REENTER')                #24
              2872 00f2  ld   $f2         11005  ld(-28/2)                       #25
                                          11006
                                          11007
                                          11008  # OSCPX implementation
                                          11009  label('oscpx#13')
oscpx#13:     2873 d22a  st   [$2a],x     11010  st([sysArgs+6],X)               #13 sample address var
              2874 00fa  ld   $fa         11011  ld(min(0,maxTicks-42/2))        #14
              2875 8115  adda [$15]       11012  adda([vTicks])                  #15
              2876 e88f  blt  .oscpx#18   11013  blt('.oscpx#18')                #16 not enough time left, so retry
              2877 0500  ld   [x]         11014  ld([X])                         #17 sample address low byte
              2878 112b  ld   [$2b],x     11015  ld([sysArgs+7],X)               #18 index var
              2879 8500  adda [x]         11016  adda([X])                       #19 sample address low byte + index
              287a c21d  st   [$1d]       11017  st([vTmp])                      #20
              287b 012a  ld   [$2a]       11018  ld([sysArgs+6])                 #21
              287c 9001  adda $01,x       11019  adda(1,X)                       #22
              287d 0500  ld   [x]         11020  ld([X])                         #23
              287e 1600  ld   ac,y        11021  ld(AC,Y)                        #24 sample address high byte
              287f 111d  ld   [$1d],x     11022  ld([vTmp],X)                    #25
              2880 0d00  ld   [y,x]       11023  ld([Y,X])                       #26
              2881 20fc  anda $fc         11024  anda(0xFC)                      #27 6bit sample in upper 8bits
              2882 1407  ld   $07,y       11025  ld(soundTable>>8,Y)             #28
              2883 5003  ora  $03,x       11026  ora(0x03,X)                     #29
              2884 0d00  ld   [y,x]       11027  ld([Y,X])                       #30 6bit sample, (>>2)
              2885 9519  adda [$19],y     11028  adda([vAC+1],Y)                 #31 dest pixel address high byte
              2886 0118  ld   [$18]       11029  ld([vAC])                       #32 dest pixel address low byte
              2887 112b  ld   [$2b],x     11030  ld([sysArgs+7],X)               #33 index
              2888 8500  adda [x]         11031  adda([X])                       #34 sample address low byte + index
              2889 1200  ld   ac,x        11032  ld(AC,X)                        #35
              288a 01a3  ld   [$a3]       11033  ld([0xA3])                      #36 pixel colour
              288b ce00  st   [y,x]       11034  st([Y,X])                       #37
              288c 1403  ld   $03,y       11035  ld(hi('NEXTY'),Y)               #38
              288d e000  jmp  y,$00       11036  jmp(Y,'NEXTY')                  #39
              288e 00eb  ld   $eb         11037  ld(-42/2)                       #40
                                          11038
                                          11039  label('.oscpx#18')
.oscpx#18:    288f 0021  ld   $21         11040  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2890 c202  st   [$02]       11041  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2891 9401  adda $01,y       11042  adda(1,Y)                       #20 retry instruction
              2892 e000  jmp  y,$00       11043  jmp(Y,'NEXTY')                  #21
              2893 00f4  ld   $f4         11044  ld(-24/2)                       #22
                                          11045
                                          11046
                                          11047  # CMPWS implementation, vAC = vAC CMPWS var
                                          11048  #           LDW   var0
                                          11049  #           CMPHS var1.hi
                                          11050  #           SUBW  var1
                                          11051  label('cmpws#13')
cmpws#13:     2894 00e9  ld   $e9         11052  ld(-46/2)                       #13
              2895 c21d  st   [$1d]       11053  st([vTmp])                      #14
              2896 00f8  ld   $f8         11054  ld(min(0,maxTicks-46/2))        #15
              2897 8115  adda [$15]       11055  adda([vTicks])                  #16
              2898 e8c2  blt  .cmpws#19   11056  blt('.cmpws#19')                #17 not enough time left, so retry
              2899 1400  ld   $00,y       11057  ld(0,Y)                         #18
              289a 0500  ld   [x]         11058  ld([X])                         #19
              289b de00  st   [y,x++]     11059  st([Y,Xpp])                     #20
              289c c2b0  st   [$b0]       11060  st([0xB0])                      #21 cmp var.lo
              289d 0500  ld   [x]         11061  ld([X])                         #22
              289e c2b1  st   [$b1]       11062  st([0xB1])                      #23 cmp var.hi
              289f 6119  xora [$19]       11063  xora([vAC+1])                   #24
              28a0 f4b5  bge  .cmpws#27   11064  bpl('.cmpws#27')                #25 skip if same sign
              28a1 0119  ld   [$19]       11065  ld([vAC+1])                     #26
              28a2 e8a5  blt  $28a5       11066  bmi(pc()+3)                     #27
              28a3 fca6  bra  .cmpws#30   11067  bra(pc()+3)                     #28
                                          11068
                                          11069  label('.cmpws#29')
.cmpws#29:    28a4 0001  ld   $01         11070  ld(+1)                          #29    vAC < variable
              28a5 00ff  ld   $ff         11071  ld(-1)                          #29(!) vAC > variable
                                          11072
                                          11073  label('.cmpws#30')
.cmpws#30:    28a6 8500  adda [x]         11074  adda([X])                       #30
              28a7 c219  st   [$19]       11075  st([vAC+1])                     #31
                                          11076
                                          11077  label('.cmpws#32')
.cmpws#32:    28a8 0118  ld   [$18]       11078  ld([vAC])                       #32, #30 Low byte
              28a9 e8b8  blt  .cmpws#35   11079  bmi('.cmpws#35')                #33, #31
              28aa a1b0  suba [$b0]       11080  suba([0xB0])                    #34, #32
              28ab c218  st   [$18]       11081  st([vAC])                       #35, #33 Store low result
              28ac 41b0  ora  [$b0]       11082  ora([0xB0])                     #36, #34 Carry in bit 7
              28ad 3080  anda $80,x       11083  anda(0x80,X)                    #37, #35 Move carry to bit 0
              28ae 0119  ld   [$19]       11084  ld([vAC+1])                     #38, #36
              28af a500  suba [x]         11085  suba([X])                       #39, #37
              28b0 a1b1  suba [$b1]       11086  suba([0xB1])                    #40, #38 sub var.hi with carry
              28b1 c219  st   [$19]       11087  st([vAC+1])                     #41, #39
              28b2 1403  ld   $03,y       11088  ld(hi('NEXTY'),Y)               #42, #40
              28b3 e000  jmp  y,$00       11089  jmp(Y,'NEXTY')                  #43, #41
              28b4 011d  ld   [$1d]       11090  ld([vTmp])                      #44, #42
                                          11091
                                          11092  label('.cmpws#27')
.cmpws#27:    28b5 00ea  ld   $ea         11093  ld(-44/2)                       #27
              28b6 fca8  bra  .cmpws#32   11094  bra('.cmpws#32')                #28
              28b7 c21d  st   [$1d]       11095  st([vTmp])                      #29
                                          11096
                                          11097  label('.cmpws#35')
.cmpws#35:    28b8 c218  st   [$18]       11098  st([vAC])                       #35, #33 Store low result
              28b9 21b0  anda [$b0]       11099  anda([0xB0])                    #36, #34 Carry in bit 7
              28ba 3080  anda $80,x       11100  anda(0x80,X)                    #37, #35 Move carry to bit 0
              28bb 0119  ld   [$19]       11101  ld([vAC+1])                     #38, #36
              28bc a500  suba [x]         11102  suba([X])                       #39, #37
              28bd a1b1  suba [$b1]       11103  suba([0xB1])                    #40, #38 sub var.hi with carry
              28be c219  st   [$19]       11104  st([vAC+1])                     #41, #39
              28bf 1403  ld   $03,y       11105  ld(hi('NEXTY'),Y)               #42, #40
              28c0 e000  jmp  y,$00       11106  jmp(Y,'NEXTY')                  #43, #41
              28c1 011d  ld   [$1d]       11107  ld([vTmp])                      #44, #42
                                          11108
                                          11109  label('.cmpws#19')
.cmpws#19:    28c2 0022  ld   $22         11110  ld(hi('PREFX2_PAGE'))           #19 ENTER is at $(n-1)ff, where n = instruction page
              28c3 c202  st   [$02]       11111  st([vCpuSelect])                #20 restore PREFX2 instruction page
              28c4 9401  adda $01,y       11112  adda(1,Y)                       #21 retry instruction
              28c5 e0cb  jmp  y,$cb       11113  jmp(Y,'REENTER')                #22
              28c6 00f3  ld   $f3         11114  ld(-26/2)                       #23
                                          11115
                                          11116
                                          11117  # CMPWU implementation, vAC = vAC CMPWU var
                                          11118  #           LDW   var0
                                          11119  #           CMPHU var1.hi
                                          11120  #           SUBW  var1
                                          11121  label('cmpwu#13')
cmpwu#13:     28c7 00e9  ld   $e9         11122  ld(-46/2)                       #13
              28c8 c21d  st   [$1d]       11123  st([vTmp])                      #14
              28c9 00f8  ld   $f8         11124  ld(min(0,maxTicks-46/2))        #15
              28ca 8115  adda [$15]       11125  adda([vTicks])                  #16
              28cb e8c2  blt  .cmpws#19   11126  blt('.cmpws#19')                #17 not enough time left, so retry, (use .cmpws#19)
              28cc 1400  ld   $00,y       11127  ld(0,Y)                         #18
              28cd 0500  ld   [x]         11128  ld([X])                         #19
              28ce de00  st   [y,x++]     11129  st([Y,Xpp])                     #20
              28cf c2b0  st   [$b0]       11130  st([0xB0])                      #21 cmp var.lo
              28d0 0500  ld   [x]         11131  ld([X])                         #22
              28d1 c2b1  st   [$b1]       11132  st([0xB1])                      #23 cmp var.hi
              28d2 6119  xora [$19]       11133  xora([vAC+1])                   #24
              28d3 f4b5  bge  .cmpws#27   11134  bpl('.cmpws#27')                #25 skip if same sign, (use .cmpws#27)
              28d4 0119  ld   [$19]       11135  ld([vAC+1])                     #26
              28d5 e8a4  blt  .cmpws#29   11136  bmi('.cmpws#29')                #27 use .cmpws#29
              28d6 fca6  bra  .cmpws#30   11137  bra('.cmpws#30')                #28 use .cmpws#30
              28d7 00ff  ld   $ff         11138  ld(-1)                          #29 vAC > variable
                                          11139
                                          11140
              28d8 0200  nop              11141  fillers(until=0xff)
              28d9 0200  nop
              28da 0200  nop
              * 39 times
              28ff 0200  nop              11142  align(0x100, size=0x100)
                                          11143
                                          11144  #-----------------------------------------------------------------------
                                          11145  #       More vCPU instruction implementations, (0x2900)
                                          11146  #-----------------------------------------------------------------------
                                          11147  #
                                          11148  # LEEKA implementation
                                          11149  label('leeka#13')
leeka#13:     2900 c21d  st   [$1d]       11150  st([vTmp])                      #13
              2901 00f9  ld   $f9         11151  ld(min(0,maxTicks-44/2))        #14
              2902 8115  adda [$15]       11152  adda([vTicks])                  #15
              2903 e81e  blt  .leeka#18   11153  blt('.leeka#18')                #16 not enough time left, so retry
              2904 1519  ld   [$19],y     11154  ld([vAC+1],Y)                   #17
              2905 1118  ld   [$18],x     11155  ld([vAC],X)                     #18
              2906 0d00  ld   [y,x]       11156  ld([Y,X])                       #19 peek [vAC]
              2907 de00  st   [y,x++]     11157  st([Y,Xpp])                     #20
              2908 c2b0  st   [$b0]       11158  st([0xB0])                      #21
              2909 0d00  ld   [y,x]       11159  ld([Y,X])                       #22 peek [vAC+1]
              290a de00  st   [y,x++]     11160  st([Y,Xpp])                     #23
              290b c2b1  st   [$b1]       11161  st([0xB1])                      #24
              290c 0d00  ld   [y,x]       11162  ld([Y,X])                       #25 peek [vAC+2]
              290d de00  st   [y,x++]     11163  st([Y,Xpp])                     #26
              290e c2b2  st   [$b2]       11164  st([0xB2])                      #27
              290f 0d00  ld   [y,x]       11165  ld([Y,X])                       #28 peek [vAC+3]
              2910 c2b3  st   [$b3]       11166  st([0xB3])                      #29
              2911 1400  ld   $00,y       11167  ld(0,Y)                         #30
              2912 111d  ld   [$1d],x     11168  ld([vTmp],X)                    #31 dst var
              2913 01b0  ld   [$b0]       11169  ld([0xB0])                      #32
              2914 de00  st   [y,x++]     11170  st([Y,Xpp])                     #33 [var.0] = peek [vAC]
              2915 01b1  ld   [$b1]       11171  ld([0xB1])                      #34
              2916 de00  st   [y,x++]     11172  st([Y,Xpp])                     #35 [var.1] = peek [vAC+1]
              2917 01b2  ld   [$b2]       11173  ld([0xB2])                      #36
              2918 de00  st   [y,x++]     11174  st([Y,Xpp])                     #37 [var.2] = peek [vAC+2]
              2919 01b3  ld   [$b3]       11175  ld([0xB3])                      #38
              291a ce00  st   [y,x]       11176  st([Y,X])                       #39 [var.3] = peek [vAC+3]
              291b 1403  ld   $03,y       11177  ld(hi('NEXTY'),Y)               #40
              291c e000  jmp  y,$00       11178  jmp(Y,'NEXTY')                  #41
              291d 00ea  ld   $ea         11179  ld(-44/2)                       #42
                                          11180
                                          11181  label('.leeka#18')
.leeka#18:    291e 0022  ld   $22         11182  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              291f c202  st   [$02]       11183  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2920 9401  adda $01,y       11184  adda(1,Y)                       #20 retry instruction
              2921 e000  jmp  y,$00       11185  jmp(Y,'NEXTY')                  #21
              2922 00f4  ld   $f4         11186  ld(-24/2)                       #22
                                          11187
                                          11188
                                          11189  # LOKEA implementation
                                          11190  label('lokea#13')
lokea#13:     2923 1200  ld   ac,x        11191  ld(AC,X)                        #13
              2924 00f9  ld   $f9         11192  ld(min(0,maxTicks-44/2))        #14
              2925 8115  adda [$15]       11193  adda([vTicks])                  #15
              2926 e840  blt  .lokea#18   11194  blt('.lokea#18')                #16 not enough time left, so retry
              2927 1400  ld   $00,y       11195  ld(0,Y)                         #17
              2928 0500  ld   [x]         11196  ld([X])                         #18 var.0
              2929 de00  st   [y,x++]     11197  st([Y,Xpp])                     #19
              292a c2b0  st   [$b0]       11198  st([0xB0])                      #20
              292b 0500  ld   [x]         11199  ld([X])                         #21 var.1
              292c de00  st   [y,x++]     11200  st([Y,Xpp])                     #22
              292d c2b1  st   [$b1]       11201  st([0xB1])                      #23
              292e 0500  ld   [x]         11202  ld([X])                         #24 var.2
              292f de00  st   [y,x++]     11203  st([Y,Xpp])                     #25
              2930 c2b2  st   [$b2]       11204  st([0xB2])                      #26
              2931 0500  ld   [x]         11205  ld([X])                         #27 var.3
              2932 c2b3  st   [$b3]       11206  st([0xB3])                      #28
              2933 1118  ld   [$18],x     11207  ld([vAC],X)                     #29
              2934 1519  ld   [$19],y     11208  ld([vAC+1],Y)                   #30
              2935 01b0  ld   [$b0]       11209  ld([0xB0])                      #31
              2936 de00  st   [y,x++]     11210  st([Y,Xpp])                     #32 poke [vAC], var.0
              2937 01b1  ld   [$b1]       11211  ld([0xB1])                      #33
              2938 de00  st   [y,x++]     11212  st([Y,Xpp])                     #34 poke [vAC], var.1
              2939 01b2  ld   [$b2]       11213  ld([0xB2])                      #35
              293a de00  st   [y,x++]     11214  st([Y,Xpp])                     #36 poke [vAC], var.2
              293b 01b3  ld   [$b3]       11215  ld([0xB3])                      #37
              293c ce00  st   [y,x]       11216  st([Y,X])                       #38 poke [vAC], var.3
              293d 1403  ld   $03,y       11217  ld(hi('REENTER'),Y)             #39
              293e e0cb  jmp  y,$cb       11218  jmp(Y,'REENTER')                #40
              293f 00ea  ld   $ea         11219  ld(-44/2)                       #41
                                          11220
                                          11221  label('.lokea#18')
.lokea#18:    2940 0022  ld   $22         11222  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2941 c202  st   [$02]       11223  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2942 9401  adda $01,y       11224  adda(1,Y)                       #20 retry instruction
              2943 e000  jmp  y,$00       11225  jmp(Y,'NEXTY')                  #21
              2944 00f4  ld   $f4         11226  ld(-24/2)                       #22
                                          11227
                                          11228
                                          11229  # FEEKA implementation
                                          11230  label('feeka#13')
feeka#13:     2945 1519  ld   [$19],y     11231  ld([vAC+1],Y)                   #13
              2946 00f7  ld   $f7         11232  ld(min(0,maxTicks-48/2))        #14
              2947 8115  adda [$15]       11233  adda([vTicks])                  #15
              2948 e867  blt  .feeka#18   11234  blt('.feeka#18')                #16 not enough time left, so retry
              2949 1118  ld   [$18],x     11235  ld([vAC],X)                     #17
              294a 0d00  ld   [y,x]       11236  ld([Y,X])                       #18 peek [vAC]
              294b de00  st   [y,x++]     11237  st([Y,Xpp])                     #19
              294c c2b0  st   [$b0]       11238  st([0xB0])                      #20
              294d 0d00  ld   [y,x]       11239  ld([Y,X])                       #21 peek [vAC+1]
              294e de00  st   [y,x++]     11240  st([Y,Xpp])                     #22
              294f c2b1  st   [$b1]       11241  st([0xB1])                      #23
              2950 0d00  ld   [y,x]       11242  ld([Y,X])                       #24 peek [vAC+2]
              2951 de00  st   [y,x++]     11243  st([Y,Xpp])                     #25
              2952 c2b2  st   [$b2]       11244  st([0xB2])                      #26
              2953 0d00  ld   [y,x]       11245  ld([Y,X])                       #27 peek [vAC+3]
              2954 de00  st   [y,x++]     11246  st([Y,Xpp])                     #28
              2955 c2b3  st   [$b3]       11247  st([0xB3])                      #29
              2956 0d00  ld   [y,x]       11248  ld([Y,X])                       #30 peek [vAC+4]
              2957 c2b4  st   [$b4]       11249  st([0xB4])                      #31
              2958 1400  ld   $00,y       11250  ld(0,Y)                         #32
              2959 111d  ld   [$1d],x     11251  ld([vTmp],X)                    #33 dst var
              295a 01b0  ld   [$b0]       11252  ld([0xB0])                      #34
              295b de00  st   [y,x++]     11253  st([Y,Xpp])                     #35 [var.0] = peek [vAC]
              295c 01b1  ld   [$b1]       11254  ld([0xB1])                      #36
              295d de00  st   [y,x++]     11255  st([Y,Xpp])                     #37 [var.1] = peek [vAC+1]
              295e 01b2  ld   [$b2]       11256  ld([0xB2])                      #38
              295f de00  st   [y,x++]     11257  st([Y,Xpp])                     #39 [var.2] = peek [vAC+2]
              2960 01b3  ld   [$b3]       11258  ld([0xB3])                      #40
              2961 ce00  st   [y,x]       11259  st([Y,X])                       #41 [var.3] = peek [vAC+3]
              2962 01b4  ld   [$b4]       11260  ld([0xB4])                      #42
              2963 ce00  st   [y,x]       11261  st([Y,X])                       #43 [var.4] = peek [vAC+4]
              2964 1403  ld   $03,y       11262  ld(hi('NEXTY'),Y)               #44
              2965 e000  jmp  y,$00       11263  jmp(Y,'NEXTY')                  #45
              2966 00e8  ld   $e8         11264  ld(-48/2)                       #46
                                          11265
                                          11266  label('.feeka#18')
.feeka#18:    2967 0022  ld   $22         11267  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2968 c202  st   [$02]       11268  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2969 9401  adda $01,y       11269  adda(1,Y)                       #20 retry instruction
              296a e000  jmp  y,$00       11270  jmp(Y,'NEXTY')                  #21
              296b 00f4  ld   $f4         11271  ld(-24/2)                       #22
                                          11272
                                          11273
                                          11274  # FOKEA implementation
                                          11275  label('fokea#13')
fokea#13:     296c 1200  ld   ac,x        11276  ld(AC,X)                        #13 var.0
              296d 00f7  ld   $f7         11277  ld(min(0,maxTicks-48/2))        #14
              296e 8115  adda [$15]       11278  adda([vTicks])                  #15
              296f e88e  blt  .fokea#18   11279  blt('.fokea#18')                #16 not enough time left, so retry
              2970 1400  ld   $00,y       11280  ld(0,Y)                         #17
              2971 0500  ld   [x]         11281  ld([X])                         #18 [var.0]
              2972 de00  st   [y,x++]     11282  st([Y,Xpp])                     #19
              2973 c2b0  st   [$b0]       11283  st([0xB0])                      #20
              2974 0500  ld   [x]         11284  ld([X])                         #21 [var.1]
              2975 de00  st   [y,x++]     11285  st([Y,Xpp])                     #22
              2976 c2b1  st   [$b1]       11286  st([0xB1])                      #23
              2977 0500  ld   [x]         11287  ld([X])                         #24 [var.2]
              2978 de00  st   [y,x++]     11288  st([Y,Xpp])                     #25
              2979 c2b2  st   [$b2]       11289  st([0xB2])                      #26
              297a 0500  ld   [x]         11290  ld([X])                         #27 [var.3]
              297b de00  st   [y,x++]     11291  st([Y,Xpp])                     #28
              297c c2b3  st   [$b3]       11292  st([0xB3])                      #29
              297d 0500  ld   [x]         11293  ld([X])                         #30 [var.4]
              297e c2b4  st   [$b4]       11294  st([0xB4])                      #31
              297f 1118  ld   [$18],x     11295  ld([vAC],X)                     #32
              2980 1519  ld   [$19],y     11296  ld([vAC+1],Y)                   #33
              2981 01b0  ld   [$b0]       11297  ld([0xB0])                      #34
              2982 de00  st   [y,x++]     11298  st([Y,Xpp])                     #35 poke [vAC], [var.0]
              2983 01b1  ld   [$b1]       11299  ld([0xB1])                      #36
              2984 de00  st   [y,x++]     11300  st([Y,Xpp])                     #37 poke [vAC], [var.1]
              2985 01b2  ld   [$b2]       11301  ld([0xB2])                      #38
              2986 de00  st   [y,x++]     11302  st([Y,Xpp])                     #39 poke [vAC], [var.2]
              2987 01b3  ld   [$b3]       11303  ld([0xB3])                      #40
              2988 ce00  st   [y,x]       11304  st([Y,X])                       #41 poke [vAC], [var.3]
              2989 01b4  ld   [$b4]       11305  ld([0xB4])                      #42
              298a ce00  st   [y,x]       11306  st([Y,X])                       #43 poke [vAC], [var.4]
              298b 1403  ld   $03,y       11307  ld(hi('NEXTY'),Y)               #44
              298c e000  jmp  y,$00       11308  jmp(Y,'NEXTY')                  #45
              298d 00e8  ld   $e8         11309  ld(-48/2)                       #46
                                          11310
                                          11311  label('.fokea#18')
.fokea#18:    298e 0022  ld   $22         11312  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              298f c202  st   [$02]       11313  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2990 9401  adda $01,y       11314  adda(1,Y)                       #20 retry instruction
              2991 e000  jmp  y,$00       11315  jmp(Y,'NEXTY')                  #21
              2992 00f4  ld   $f4         11316  ld(-24/2)                       #22
                                          11317
                                          11318
                                          11319  # SWAPB implementation
                                          11320  label('swapb#13')
swapb#13:     2993 00f8  ld   $f8         11321  ld(min(0,maxTicks-46/2))        #13
              2994 8115  adda [$15]       11322  adda([vTicks])                  #14
              2995 e8b3  blt  .swapb#17   11323  blt('.swapb#17')                #15 not enough time left, so retry
              2996 1400  ld   $00,y       11324  ld(0,Y)                         #16
              2997 0500  ld   [x]         11325  ld([X])                         #17
              2998 de00  st   [y,x++]     11326  st([Y,Xpp])                     #18
              2999 c2b2  st   [$b2]       11327  st([0xB2])                      #19 var1.lo
              299a 0500  ld   [x]         11328  ld([X])                         #20
              299b c2b3  st   [$b3]       11329  st([0xB3])                      #21 var1.hi
              299c 112b  ld   [$2b],x     11330  ld([sysArgs+7],X)               #22 var0
              299d 0500  ld   [x]         11331  ld([X])                         #23
              299e de00  st   [y,x++]     11332  st([Y,Xpp])                     #24
              299f c2b4  st   [$b4]       11333  st([0xB4])                      #25 var0.lo
              29a0 0500  ld   [x]         11334  ld([X])                         #26
              29a1 c2b5  st   [$b5]       11335  st([0xB5])                      #27 var0.hi
              29a2 11b2  ld   [$b2],x     11336  ld([0xB2],X)                    #28
              29a3 15b3  ld   [$b3],y     11337  ld([0xB3],Y)                    #29
              29a4 0d00  ld   [y,x]       11338  ld([Y,X])                       #30
              29a5 c2b1  st   [$b1]       11339  st([0xB1])                      #31 tmp1 = [var1]
              29a6 11b4  ld   [$b4],x     11340  ld([0xB4],X)                    #32
              29a7 15b5  ld   [$b5],y     11341  ld([0xB5],Y)                    #33
              29a8 0d00  ld   [y,x]       11342  ld([Y,X])                       #34
              29a9 c2b0  st   [$b0]       11343  st([0xB0])                      #35 tmp0 = [var0]
              29aa 01b1  ld   [$b1]       11344  ld([0xB1])                      #36
              29ab ce00  st   [y,x]       11345  st([Y,X])                       #37 [var0] = tmp1
              29ac 11b2  ld   [$b2],x     11346  ld([0xB2],X)                    #38
              29ad 15b3  ld   [$b3],y     11347  ld([0xB3],Y)                    #39
              29ae 01b0  ld   [$b0]       11348  ld([0xB0])                      #40
              29af ce00  st   [y,x]       11349  st([Y,X])                       #41 [var1] = tmp0
              29b0 1403  ld   $03,y       11350  ld(hi('NEXTY'),Y)               #42
              29b1 e000  jmp  y,$00       11351  jmp(Y,'NEXTY')                  #43
              29b2 00e9  ld   $e9         11352  ld(-46/2)                       #44
                                          11353
                                          11354  label('.swapb#17')
.swapb#17:    29b3 0021  ld   $21         11355  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              29b4 c202  st   [$02]       11356  st([vCpuSelect])                #18 restore PREFX3 instruction page
              29b5 9401  adda $01,y       11357  adda(1,Y)                       #19 retry instruction
              29b6 e0cb  jmp  y,$cb       11358  jmp(Y,'REENTER')                #20
              29b7 00f4  ld   $f4         11359  ld(-24/2)                       #21
                                          11360
                                          11361
                                          11362  # SWAPW implementation
                                          11363  label('swapw#13')
swapw#13:     29b8 00f2  ld   $f2         11364  ld(min(0,maxTicks-58/2))        #13
              29b9 8115  adda [$15]       11365  adda([vTicks])                  #14
              29ba e8e4  blt  .swapw#17   11366  blt('.swapw#17')                #15 not enough time left, so retry
              29bb 1400  ld   $00,y       11367  ld(0,Y)                         #16
              29bc 0500  ld   [x]         11368  ld([X])                         #17
              29bd de00  st   [y,x++]     11369  st([Y,Xpp])                     #18
              29be c2b2  st   [$b2]       11370  st([0xB2])                      #19 var1.lo
              29bf 0500  ld   [x]         11371  ld([X])                         #20
              29c0 c2b3  st   [$b3]       11372  st([0xB3])                      #21 var1.hi
              29c1 112b  ld   [$2b],x     11373  ld([sysArgs+7],X)               #22 var0
              29c2 0500  ld   [x]         11374  ld([X])                         #23
              29c3 de00  st   [y,x++]     11375  st([Y,Xpp])                     #24
              29c4 c2b4  st   [$b4]       11376  st([0xB4])                      #25 var0.lo
              29c5 0500  ld   [x]         11377  ld([X])                         #26
              29c6 c2b5  st   [$b5]       11378  st([0xB5])                      #27 var0.hi
              29c7 11b2  ld   [$b2],x     11379  ld([0xB2],X)                    #28
              29c8 15b3  ld   [$b3],y     11380  ld([0xB3],Y)                    #29
              29c9 0d00  ld   [y,x]       11381  ld([Y,X])                       #30
              29ca de00  st   [y,x++]     11382  st([Y,Xpp])                     #31
              29cb c2b0  st   [$b0]       11383  st([0xB0])                      #32 temp.lo = var1.lo
              29cc 0d00  ld   [y,x]       11384  ld([Y,X])                       #33
              29cd c2b1  st   [$b1]       11385  st([0xB1])                      #34 temp.hi = var1.hi
              29ce 11b4  ld   [$b4],x     11386  ld([0xB4],X)                    #35
              29cf 15b5  ld   [$b5],y     11387  ld([0xB5],Y)                    #36
              29d0 0d00  ld   [y,x]       11388  ld([Y,X])                       #37
              29d1 de00  st   [y,x++]     11389  st([Y,Xpp])                     #38
              29d2 c218  st   [$18]       11390  st([vAC])                       #39
              29d3 0d00  ld   [y,x]       11391  ld([Y,X])                       #40
              29d4 c219  st   [$19]       11392  st([vAC+1])                     #41
              29d5 11b2  ld   [$b2],x     11393  ld([0xB2],X)                    #42
              29d6 15b3  ld   [$b3],y     11394  ld([0xB3],Y)                    #43
              29d7 0118  ld   [$18]       11395  ld([vAC])                       #44
              29d8 de00  st   [y,x++]     11396  st([Y,Xpp])                     #45 var1.lo = var0.lo
              29d9 0119  ld   [$19]       11397  ld([vAC+1])                     #46
              29da ce00  st   [y,x]       11398  st([Y,X])                       #47 var1.lo = var0.lo
              29db 11b4  ld   [$b4],x     11399  ld([0xB4],X)                    #48
              29dc 15b5  ld   [$b5],y     11400  ld([0xB5],Y)                    #49
              29dd 01b0  ld   [$b0]       11401  ld([0xB0])                      #50
              29de de00  st   [y,x++]     11402  st([Y,Xpp])                     #51 var0.lo = temp.lo
              29df 01b1  ld   [$b1]       11403  ld([0xB1])                      #52
              29e0 ce00  st   [y,x]       11404  st([Y,X])                       #53 var0.hi = temp.hi
              29e1 1403  ld   $03,y       11405  ld(hi('NEXTY'),Y)               #54
              29e2 e000  jmp  y,$00       11406  jmp(Y,'NEXTY')                  #55
              29e3 00e3  ld   $e3         11407  ld(-58/2)                       #56
                                          11408
                                          11409  label('.swapw#17')
.swapw#17:    29e4 0021  ld   $21         11410  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              29e5 c202  st   [$02]       11411  st([vCpuSelect])                #18 restore PREFX3 instruction page
              29e6 9401  adda $01,y       11412  adda(1,Y)                       #19 retry instruction
              29e7 e0cb  jmp  y,$cb       11413  jmp(Y,'REENTER')                #20
              29e8 00f4  ld   $f4         11414  ld(-24/2)                       #21
                                          11415
                                          11416
              29e9 0200  nop              11417  fillers(until=0xff)
              29ea 0200  nop
              29eb 0200  nop
              * 22 times
              29ff 0200  nop              11418  align(0x100, size=0x100)
                                          11419
                                          11420  #-----------------------------------------------------------------------
                                          11421  #       More vCPU instruction implementations, (0x2A00)
                                          11422  #-----------------------------------------------------------------------
                                          11423  #
                                          11424  # MEEKA implementation
                                          11425  label('meeka#13')
meeka#13:     2a00 c21d  st   [$1d]       11426  st([vTmp])                      #13
              2a01 00ef  ld   $ef         11427  ld(min(0,maxTicks-64/2))        #14
              2a02 8115  adda [$15]       11428  adda([vTicks])                  #15
              2a03 e832  blt  .meeka#18   11429  blt('.meeka#18')                #16 not enough time left, so retry
              2a04 1519  ld   [$19],y     11430  ld([vAC+1],Y)                   #17
              2a05 1118  ld   [$18],x     11431  ld([vAC],X)                     #18
              2a06 0d00  ld   [y,x]       11432  ld([Y,X])                       #19 peek [vAC]
              2a07 de00  st   [y,x++]     11433  st([Y,Xpp])                     #20
              2a08 c2b0  st   [$b0]       11434  st([0xB0])                      #21
              2a09 0d00  ld   [y,x]       11435  ld([Y,X])                       #22 peek [vAC+1]
              2a0a de00  st   [y,x++]     11436  st([Y,Xpp])                     #23
              2a0b c2b1  st   [$b1]       11437  st([0xB1])                      #24
              2a0c 0d00  ld   [y,x]       11438  ld([Y,X])                       #25 peek [vAC+2]
              2a0d de00  st   [y,x++]     11439  st([Y,Xpp])                     #26
              2a0e c2b2  st   [$b2]       11440  st([0xB2])                      #27
              2a0f 0d00  ld   [y,x]       11441  ld([Y,X])                       #28 peek [vAC+3]
              2a10 de00  st   [y,x++]     11442  st([Y,Xpp])                     #29
              2a11 c2b3  st   [$b3]       11443  st([0xB3])                      #30
              2a12 0d00  ld   [y,x]       11444  ld([Y,X])                       #31 peek [vAC+4]
              2a13 de00  st   [y,x++]     11445  st([Y,Xpp])                     #32
              2a14 c2b4  st   [$b4]       11446  st([0xB4])                      #33
              2a15 0d00  ld   [y,x]       11447  ld([Y,X])                       #34 peek [vAC+5]
              2a16 de00  st   [y,x++]     11448  st([Y,Xpp])                     #35
              2a17 c2b5  st   [$b5]       11449  st([0xB5])                      #36
              2a18 0d00  ld   [y,x]       11450  ld([Y,X])                       #37 peek [vAC+6]
              2a19 de00  st   [y,x++]     11451  st([Y,Xpp])                     #38
              2a1a c2b6  st   [$b6]       11452  st([0xB6])                      #39
              2a1b 0d00  ld   [y,x]       11453  ld([Y,X])                       #40 peek [vAC+7]
              2a1c c2b7  st   [$b7]       11454  st([0xB7])                      #41
              2a1d 1400  ld   $00,y       11455  ld(0,Y)                         #42
              2a1e 111d  ld   [$1d],x     11456  ld([vTmp],X)                    #43 dst var
              2a1f 01b0  ld   [$b0]       11457  ld([0xB0])                      #44
              2a20 de00  st   [y,x++]     11458  st([Y,Xpp])                     #45 [var.0] = peek [vAC]
              2a21 01b1  ld   [$b1]       11459  ld([0xB1])                      #46
              2a22 de00  st   [y,x++]     11460  st([Y,Xpp])                     #47 [var.1] = peek [vAC+1]
              2a23 01b2  ld   [$b2]       11461  ld([0xB2])                      #48
              2a24 de00  st   [y,x++]     11462  st([Y,Xpp])                     #49 [var.2] = peek [vAC+2]
              2a25 01b3  ld   [$b3]       11463  ld([0xB3])                      #50
              2a26 de00  st   [y,x++]     11464  st([Y,Xpp])                     #51 [var.3] = peek [vAC+3]
              2a27 01b4  ld   [$b4]       11465  ld([0xB4])                      #52
              2a28 de00  st   [y,x++]     11466  st([Y,Xpp])                     #53 [var.0] = peek [vAC+4]
              2a29 01b5  ld   [$b5]       11467  ld([0xB5])                      #54
              2a2a de00  st   [y,x++]     11468  st([Y,Xpp])                     #55 [var.1] = peek [vAC+5]
              2a2b 01b6  ld   [$b6]       11469  ld([0xB6])                      #56
              2a2c de00  st   [y,x++]     11470  st([Y,Xpp])                     #57 [var.2] = peek [vAC+6]
              2a2d 01b7  ld   [$b7]       11471  ld([0xB7])                      #58
              2a2e ce00  st   [y,x]       11472  st([Y,X])                       #59 [var.3] = peek [vAC+7]
              2a2f 1403  ld   $03,y       11473  ld(hi('NEXTY'),Y)               #60
              2a30 e000  jmp  y,$00       11474  jmp(Y,'NEXTY')                  #61
              2a31 00e0  ld   $e0         11475  ld(-64/2)                       #62
                                          11476
                                          11477  label('.meeka#18')
.meeka#18:    2a32 0022  ld   $22         11478  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2a33 c202  st   [$02]       11479  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2a34 9401  adda $01,y       11480  adda(1,Y)                       #20 retry instruction
              2a35 e000  jmp  y,$00       11481  jmp(Y,'NEXTY')                  #21
              2a36 00f4  ld   $f4         11482  ld(-24/2)                       #22
                                          11483
                                          11484
                                          11485  # MOKEA
                                          11486  label('mokea#13')
mokea#13:     2a37 1200  ld   ac,x        11487  ld(AC,X)                        #13 var
              2a38 00ef  ld   $ef         11488  ld(min(0,maxTicks-64/2))        #14
              2a39 8115  adda [$15]       11489  adda([vTicks])                  #15
              2a3a e869  blt  .mokea#18   11490  blt('.mokea#18')                #16 not enough time left, so retry
              2a3b 1400  ld   $00,y       11491  ld(0,Y)                         #17
              2a3c 0500  ld   [x]         11492  ld([X])                         #18 var.0
              2a3d de00  st   [y,x++]     11493  st([Y,Xpp])                     #19
              2a3e c2b0  st   [$b0]       11494  st([0xB0])                      #20
              2a3f 0500  ld   [x]         11495  ld([X])                         #21 var.1
              2a40 de00  st   [y,x++]     11496  st([Y,Xpp])                     #22
              2a41 c2b1  st   [$b1]       11497  st([0xB1])                      #23
              2a42 0500  ld   [x]         11498  ld([X])                         #24 var.2
              2a43 de00  st   [y,x++]     11499  st([Y,Xpp])                     #25
              2a44 c2b2  st   [$b2]       11500  st([0xB2])                      #26
              2a45 0500  ld   [x]         11501  ld([X])                         #27 var.3
              2a46 de00  st   [y,x++]     11502  st([Y,Xpp])                     #28
              2a47 c2b3  st   [$b3]       11503  st([0xB3])                      #29
              2a48 0500  ld   [x]         11504  ld([X])                         #30 var.4
              2a49 de00  st   [y,x++]     11505  st([Y,Xpp])                     #31
              2a4a c2b4  st   [$b4]       11506  st([0xB4])                      #32
              2a4b 0500  ld   [x]         11507  ld([X])                         #33 var.5
              2a4c de00  st   [y,x++]     11508  st([Y,Xpp])                     #34
              2a4d c2b5  st   [$b5]       11509  st([0xB5])                      #35
              2a4e 0500  ld   [x]         11510  ld([X])                         #36 var.6
              2a4f de00  st   [y,x++]     11511  st([Y,Xpp])                     #37
              2a50 c2b6  st   [$b6]       11512  st([0xB6])                      #38
              2a51 0500  ld   [x]         11513  ld([X])                         #39 var.7
              2a52 de00  st   [y,x++]     11514  st([Y,Xpp])                     #40
              2a53 c2b7  st   [$b7]       11515  st([0xB7])                      #41
              2a54 1118  ld   [$18],x     11516  ld([vAC],X)                     #42
              2a55 1519  ld   [$19],y     11517  ld([vAC+1],Y)                   #43
              2a56 01b0  ld   [$b0]       11518  ld([0xB0])                      #44
              2a57 de00  st   [y,x++]     11519  st([Y,Xpp])                     #45 poke [vAC], var.0
              2a58 01b1  ld   [$b1]       11520  ld([0xB1])                      #46
              2a59 de00  st   [y,x++]     11521  st([Y,Xpp])                     #47 poke [vAC], var.1
              2a5a 01b2  ld   [$b2]       11522  ld([0xB2])                      #48
              2a5b de00  st   [y,x++]     11523  st([Y,Xpp])                     #49 poke [vAC], var.2
              2a5c 01b3  ld   [$b3]       11524  ld([0xB3])                      #50
              2a5d de00  st   [y,x++]     11525  st([Y,Xpp])                     #51 poke [vAC], var.3
              2a5e 01b4  ld   [$b4]       11526  ld([0xB4])                      #52
              2a5f de00  st   [y,x++]     11527  st([Y,Xpp])                     #53 poke [vAC], var.4
              2a60 01b5  ld   [$b5]       11528  ld([0xB5])                      #54
              2a61 de00  st   [y,x++]     11529  st([Y,Xpp])                     #55 poke [vAC], var.5
              2a62 01b6  ld   [$b6]       11530  ld([0xB6])                      #56
              2a63 de00  st   [y,x++]     11531  st([Y,Xpp])                     #57 poke [vAC], var.6
              2a64 01b7  ld   [$b7]       11532  ld([0xB7])                      #58
              2a65 de00  st   [y,x++]     11533  st([Y,Xpp])                     #59 poke [vAC], var.7
              2a66 1403  ld   $03,y       11534  ld(hi('NEXTY'),Y)               #60
              2a67 e000  jmp  y,$00       11535  jmp(Y,'NEXTY')                  #61
              2a68 00e0  ld   $e0         11536  ld(-64/2)                       #62
                                          11537
                                          11538  label('.mokea#18')
.mokea#18:    2a69 0022  ld   $22         11539  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2a6a c202  st   [$02]       11540  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2a6b 9401  adda $01,y       11541  adda(1,Y)                       #20 retry instruction
              2a6c e000  jmp  y,$00       11542  jmp(Y,'NEXTY')                  #21
              2a6d 00f4  ld   $f4         11543  ld(-24/2)                       #22
                                          11544
                                          11545
                                          11546  # NEEKA implementation
                                          11547  label('neeka#13')
neeka#13:     2a6e 00fe  ld   $fe         11548  ld(min(0,maxTicks-34/2))        #13
              2a6f 8115  adda [$15]       11549  adda([vTicks])                  #14
              2a70 e885  blt  .neeka#17   11550  blt('.neeka#17')                #15 not enough time left, so retry
              2a71 012b  ld   [$2b]       11551  ld([sysArgs+7])                 #16 number of bytes to peek
              2a72 a001  suba $01         11552  suba(1)                         #17
              2a73 f478  bge  .neeka#20   11553  bge('.neeka#20')                #18
              2a74 c22b  st   [$2b]       11554  st([sysArgs+7])                 #19
              2a75 1403  ld   $03,y       11555  ld(hi('NEXTY'),Y)               #20 done
              2a76 e000  jmp  y,$00       11556  jmp(Y,'NEXTY')                  #21
              2a77 00f4  ld   $f4         11557  ld(-24/2)                       #22
                                          11558
                                          11559  label('.neeka#20')
.neeka#20:    2a78 1519  ld   [$19],y     11560  ld([vAC+1],Y)                   #20
              2a79 9118  adda [$18],x     11561  adda([vAC],X)                   #21
              2a7a 0d00  ld   [y,x]       11562  ld([Y,X])                       #22 peek [vAC + index]
              2a7b c21d  st   [$1d]       11563  st([vTmp])                      #23
              2a7c 012a  ld   [$2a]       11564  ld([sysArgs+6])                 #24
              2a7d 912b  adda [$2b],x     11565  adda([sysArgs+7],X)             #25 var + index
              2a7e 011d  ld   [$1d]       11566  ld([vTmp])                      #26
              2a7f c600  st   [x]         11567  st([X])                         #27 [var + index] = peek [vAC + index]
              2a80 0021  ld   $21         11568  ld(hi('PREFX3_PAGE'))           #28 ENTER is at $(n-1)ff, where n = instruction page
              2a81 c202  st   [$02]       11569  st([vCpuSelect])                #29 restore PREFX3 instruction page
              2a82 9401  adda $01,y       11570  adda(1,Y)                       #30 restart instruction
              2a83 e000  jmp  y,$00       11571  jmp(Y,'NEXTY')                  #31
              2a84 00ef  ld   $ef         11572  ld(-34/2)                       #32
                                          11573
                                          11574  label('.neeka#17')
.neeka#17:    2a85 0021  ld   $21         11575  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              2a86 c202  st   [$02]       11576  st([vCpuSelect])                #18 restore PREFX3 instruction page
              2a87 9401  adda $01,y       11577  adda(1,Y)                       #19 retry instruction
              2a88 e0cb  jmp  y,$cb       11578  jmp(Y,'REENTER')                #20
              2a89 00f4  ld   $f4         11579  ld(-24/2)                       #21
                                          11580
                                          11581
                                          11582  # NOKEA implementation
                                          11583  label('nokea#13')
nokea#13:     2a8a 00fe  ld   $fe         11584  ld(min(0,maxTicks-34/2))        #13
              2a8b 8115  adda [$15]       11585  adda([vTicks])                  #14
              2a8c e8a1  blt  .nokea#17   11586  blt('.nokea#17')                #15 not enough time left, so retry
              2a8d 012b  ld   [$2b]       11587  ld([sysArgs+7])                 #16 number of bytes to peek
              2a8e a001  suba $01         11588  suba(1)                         #17
              2a8f f494  bge  .nokea#20   11589  bge('.nokea#20')                #18
              2a90 c22b  st   [$2b]       11590  st([sysArgs+7])                 #19
              2a91 1403  ld   $03,y       11591  ld(hi('NEXTY'),Y)               #20 done
              2a92 e000  jmp  y,$00       11592  jmp(Y,'NEXTY')                  #21
              2a93 00f4  ld   $f4         11593  ld(-24/2)                       #22
                                          11594
                                          11595  label('.nokea#20')
.nokea#20:    2a94 912a  adda [$2a],x     11596  adda([sysArgs+6],X)             #20 var + index
              2a95 0500  ld   [x]         11597  ld([X])                         #21
              2a96 c21d  st   [$1d]       11598  st([vTmp])                      #22
              2a97 1519  ld   [$19],y     11599  ld([vAC+1],Y)                   #23
              2a98 012b  ld   [$2b]       11600  ld([sysArgs+7])                 #24
              2a99 9118  adda [$18],x     11601  adda([vAC],X)                   #25 vAC + index
              2a9a 011d  ld   [$1d]       11602  ld([vTmp])                      #26
              2a9b ce00  st   [y,x]       11603  st([Y,X])                       #27 [vAC + index] = peek [var + index]
              2a9c 0021  ld   $21         11604  ld(hi('PREFX3_PAGE'))           #28 ENTER is at $(n-1)ff, where n = instruction page
              2a9d c202  st   [$02]       11605  st([vCpuSelect])                #29 restore PREFX3 instruction page
              2a9e 9401  adda $01,y       11606  adda(1,Y)                       #30 restart instruction
              2a9f e000  jmp  y,$00       11607  jmp(Y,'NEXTY')                  #31
              2aa0 00ef  ld   $ef         11608  ld(-34/2)                       #32
                                          11609
                                          11610  label('.nokea#17')
.nokea#17:    2aa1 0021  ld   $21         11611  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              2aa2 c202  st   [$02]       11612  st([vCpuSelect])                #18 restore PREFX3 instruction page
              2aa3 9401  adda $01,y       11613  adda(1,Y)                       #19 retry instruction
              2aa4 e0cb  jmp  y,$cb       11614  jmp(Y,'REENTER')                #20
              2aa5 00f4  ld   $f4         11615  ld(-24/2)                       #21
                                          11616
                                          11617
                                          11618  # DJNE implementation
                                          11619  label('djne#13')
djne#13:      2aa6 de00  st   [y,x++]     11620  st([Y,Xpp])                     #13 X++
              2aa7 c21d  st   [$1d]       11621  st([vTmp])                      #14 var
              2aa8 00f8  ld   $f8         11622  ld(min(0,maxTicks-46/2))        #15
              2aa9 8115  adda [$15]       11623  adda([vTicks])                  #16
              2aaa e8d3  blt  .djne#19    11624  blt('.djne#19')                 #17 not enough time left, so retry
              2aab 0d00  ld   [y,x]       11625  ld([Y,X])                       #18
              2aac de00  st   [y,x++]     11626  st([Y,Xpp])                     #19 X++
              2aad c22a  st   [$2a]       11627  st([sysArgs+6])                 #20 jump addr.lo
              2aae 0d00  ld   [y,x]       11628  ld([Y,X])                       #21
              2aaf c22b  st   [$2b]       11629  st([sysArgs+7])                 #22 jump addr.hi
              2ab0 1400  ld   $00,y       11630  ld(0,Y)                         #23
              2ab1 111d  ld   [$1d],x     11631  ld([vTmp],X)                    #24
              2ab2 0500  ld   [x]         11632  ld([X])                         #25 count.lo
              2ab3 a001  suba $01         11633  suba(1)                         #26
              2ab4 de00  st   [y,x++]     11634  st([Y,Xpp])                     #27 count.lo-- X++
              2ab5 4500  ora  [x]         11635  ora([X])                        #28 count.lo | count.hi
              2ab6 f0c6  beq  .djne#31    11636  beq('.djne#31')                 #19 count = 0
              2ab7 111d  ld   [$1d],x     11637  ld([vTmp],X)                    #30
              2ab8 0500  ld   [x]         11638  ld([X])                         #31 count.lo
              2ab9 de00  st   [y,x++]     11639  st([Y,Xpp])                     #32 X++
              2aba 60ff  xora $ff         11640  xora(0xFF)                      #33 if low byte is 0xFF
              2abb eccc  bne  .djne#36    11641  bne('.djne#36')                 #34
              2abc 0500  ld   [x]         11642  ld([X])                         #35 count.hi
              2abd a001  suba $01         11643  suba(1)                         #36
              2abe c600  st   [x]         11644  st([X])                         #37
              2abf 012a  ld   [$2a]       11645  ld([sysArgs+6])                 #38 jump
              2ac0 c216  st   [$16]       11646  st([vPC])                       #39
              2ac1 012b  ld   [$2b]       11647  ld([sysArgs+7])                 #40
              2ac2 c217  st   [$17]       11648  st([vPC+1])                     #41
              2ac3 1403  ld   $03,y       11649  ld(hi('NEXTY'),Y)               #42
              2ac4 e000  jmp  y,$00       11650  jmp(Y,'NEXTY')                  #43
              2ac5 00e9  ld   $e9         11651  ld(-46/2)                       #44
                                          11652
                                          11653  label('.djne#31')
.djne#31:     2ac6 0116  ld   [$16]       11654  ld([vPC])                       #31 done
              2ac7 8002  adda $02         11655  adda(2)                         #32
              2ac8 c216  st   [$16]       11656  st([vPC])                       #33
              2ac9 1403  ld   $03,y       11657  ld(hi('NEXTY'),Y)               #34
              2aca e000  jmp  y,$00       11658  jmp(Y,'NEXTY')                  #35
              2acb 00ed  ld   $ed         11659  ld(-38/2)                       #36
                                          11660
                                          11661  label('.djne#36')
.djne#36:     2acc 012a  ld   [$2a]       11662  ld([sysArgs+6])                 #36 jump
              2acd c216  st   [$16]       11663  st([vPC])                       #37
              2ace 012b  ld   [$2b]       11664  ld([sysArgs+7])                 #38
              2acf c217  st   [$17]       11665  st([vPC+1])                     #39
              2ad0 1403  ld   $03,y       11666  ld(hi('NEXTY'),Y)               #40
              2ad1 e000  jmp  y,$00       11667  jmp(Y,'NEXTY')                  #41
              2ad2 00ea  ld   $ea         11668  ld(-44/2)                       #42
                                          11669
                                          11670  label('.djne#19')
.djne#19:     2ad3 0116  ld   [$16]       11671  ld([vPC])                       #19 retry
              2ad4 a002  suba $02         11672  suba(2)                         #20
              2ad5 c216  st   [$16]       11673  st([vPC])                       #21
              2ad6 1403  ld   $03,y       11674  ld(hi('NEXTY'),Y)               #22
              2ad7 e000  jmp  y,$00       11675  jmp(Y,'NEXTY')                  #23
              2ad8 00f3  ld   $f3         11676  ld(-26/2)                       #24
                                          11677
                                          11678
              2ad9 0200  nop              11679  fillers(until=0xff)
              2ada 0200  nop
              2adb 0200  nop
              * 38 times
              2aff 0200  nop              11680  align(0x100, size=0x100)
                                          11681
                                          11682  #-----------------------------------------------------------------------
                                          11683  #       More vCPU instruction implementations, (0x2B00)
                                          11684  #-----------------------------------------------------------------------
                                          11685  #
                                          11686  # DJGE implementation
                                          11687  label('djge#13')
djge#13:      2b00 de00  st   [y,x++]     11688  st([Y,Xpp])                     #13
              2b01 c21d  st   [$1d]       11689  st([vTmp])                      #14 var
              2b02 00fa  ld   $fa         11690  ld(min(0,maxTicks-42/2))        #15
              2b03 8115  adda [$15]       11691  adda([vTicks])                  #16
              2b04 e829  blt  .djge#19    11692  blt('.djge#19')                 #17 not enough time left, so retry
              2b05 0d00  ld   [y,x]       11693  ld([Y,X])                       #18
              2b06 de00  st   [y,x++]     11694  st([Y,Xpp])                     #19
              2b07 c22a  st   [$2a]       11695  st([sysArgs+6])                 #20 jump addr.lo
              2b08 0d00  ld   [y,x]       11696  ld([Y,X])                       #21
              2b09 c22b  st   [$2b]       11697  st([sysArgs+7])                 #22 jump addr.hi
              2b0a 1400  ld   $00,y       11698  ld(0,Y)                         #23
              2b0b 111d  ld   [$1d],x     11699  ld([vTmp],X)                    #24
              2b0c 0500  ld   [x]         11700  ld([X])                         #25 count.lo
              2b0d a001  suba $01         11701  suba(1)                         #26
              2b0e de00  st   [y,x++]     11702  st([Y,Xpp])                     #27 count.lo-- X++
              2b0f 60ff  xora $ff         11703  xora(0xFF)                      #28 if low byte is 0xFF
              2b10 ec1c  bne  .djge#31    11704  bne('.djge#31')                 #29
              2b11 0500  ld   [x]         11705  ld([X])                         #30 count.hi
              2b12 f023  beq  .djge#33    11706  beq('.djge#33')                 #31
              2b13 a001  suba $01         11707  suba(1)                         #32
              2b14 c600  st   [x]         11708  st([X])                         #33
              2b15 012a  ld   [$2a]       11709  ld([sysArgs+6])                 #34 jump
              2b16 c216  st   [$16]       11710  st([vPC])                       #35
              2b17 012b  ld   [$2b]       11711  ld([sysArgs+7])                 #36
              2b18 c217  st   [$17]       11712  st([vPC+1])                     #37
              2b19 1403  ld   $03,y       11713  ld(hi('NEXTY'),Y)               #38
              2b1a e000  jmp  y,$00       11714  jmp(Y,'NEXTY')                  #39
              2b1b 00eb  ld   $eb         11715  ld(-42/2)                       #40
                                          11716
                                          11717  label('.djge#31')
.djge#31:     2b1c 012a  ld   [$2a]       11718  ld([sysArgs+6])                 #31 jump
              2b1d c216  st   [$16]       11719  st([vPC])                       #32
              2b1e 012b  ld   [$2b]       11720  ld([sysArgs+7])                 #33
              2b1f c217  st   [$17]       11721  st([vPC+1])                     #34
              2b20 1403  ld   $03,y       11722  ld(hi('REENTER'),Y)             #35
              2b21 e0cb  jmp  y,$cb       11723  jmp(Y,'REENTER')                #36
              2b22 00ec  ld   $ec         11724  ld(-40/2)                       #37
                                          11725
                                          11726  label('.djge#33')
.djge#33:     2b23 0116  ld   [$16]       11727  ld([vPC])                       #33 done
              2b24 8002  adda $02         11728  adda(2)                         #34
              2b25 c216  st   [$16]       11729  st([vPC])                       #35
              2b26 1403  ld   $03,y       11730  ld(hi('NEXTY'),Y)               #36
              2b27 e000  jmp  y,$00       11731  jmp(Y,'NEXTY')                  #37
              2b28 00ec  ld   $ec         11732  ld(-40/2)                       #38
                                          11733
                                          11734  label('.djge#19')
.djge#19:     2b29 0116  ld   [$16]       11735  ld([vPC])                       #19 retry
              2b2a a002  suba $02         11736  suba(2)                         #20
              2b2b c216  st   [$16]       11737  st([vPC])                       #21
              2b2c 1403  ld   $03,y       11738  ld(hi('NEXTY'),Y)               #22
              2b2d e000  jmp  y,$00       11739  jmp(Y,'NEXTY')                  #23
              2b2e 00f3  ld   $f3         11740  ld(-26/2)                       #24
                                          11741
                                          11742
                                          11743  # ADDVL
                                          11744  label('addvl#13')
addvl#13:     2b2f 0500  ld   [x]         11745  ld([X])                         #13
              2b30 c21d  st   [$1d]       11746  st([vTmp])                      #14 save src.0
              2b31 112b  ld   [$2b],x     11747  ld([sysArgs+7],X)               #15 dst.0
              2b32 00e8  ld   $e8         11748  ld(min(0,maxTicks-78/2))        #16
              2b33 8115  adda [$15]       11749  adda([vTicks])                  #17
              2b34 e874  blt  .addvl#20   11750  blt('.addvl#20')                #18 not enough time left, so retry
              2b35 011d  ld   [$1d]       11751  ld([vTmp])                      #19 src.0
              2b36 8500  adda [x]         11752  adda([X])                       #20
              2b37 c600  st   [x]         11753  st([X])                         #21 dst.0 += src.0
              2b38 e83c  blt  .addvl#24   11754  bmi('.addvl#24')                #22 carry
              2b39 a11d  suba [$1d]       11755  suba([vTmp])                    #23 original dst.0
              2b3a fc3e  bra  .addvl#26   11756  bra('.addvl#26')                #24
              2b3b 411d  ora  [$1d]       11757  ora([vTmp])                     #25 carry in bit 7
                                          11758
                                          11759  label('.addvl#24')
.addvl#24:    2b3c 211d  anda [$1d]       11760  anda([vTmp])                    #24 carry in bit 7
              2b3d 0200  nop              11761  nop()                           #25
                                          11762
                                          11763  label('.addvl#26')
.addvl#26:    2b3e 3080  anda $80,x       11764  anda(0x80,X)                    #26 carry to bit 0
              2b3f 0500  ld   [x]         11765  ld([X])                         #27
              2b40 c21d  st   [$1d]       11766  st([vTmp])                      #28 store carry
              2b41 012a  ld   [$2a]       11767  ld([sysArgs+6])                 #29
              2b42 9001  adda $01,x       11768  adda(1,X)                       #30 src.1
              2b43 011d  ld   [$1d]       11769  ld([vTmp])                      #31
              2b44 8500  adda [x]         11770  adda([X])                       #32
              2b45 c21d  st   [$1d]       11771  st([vTmp])                      #33 src.1 += carry
              2b46 012b  ld   [$2b]       11772  ld([sysArgs+7])                 #34
              2b47 9001  adda $01,x       11773  adda(1,X)                       #35
              2b48 011d  ld   [$1d]       11774  ld([vTmp])                      #36
              2b49 8500  adda [x]         11775  adda([X])                       #37
              2b4a c600  st   [x]         11776  st([X])                         #38 dst.1 += src.1
              2b4b e84f  blt  .addvl#41   11777  bmi('.addvl#41')                #39 carry
              2b4c a11d  suba [$1d]       11778  suba([vTmp])                    #40 original dst.1
              2b4d fc51  bra  .addvl#43   11779  bra('.addvl#43')                #41
              2b4e 411d  ora  [$1d]       11780  ora([vTmp])                     #42 carry in bit 7
                                          11781
                                          11782  label('.addvl#41')
.addvl#41:    2b4f 211d  anda [$1d]       11783  anda([vTmp])                    #41 carry in bit 7
              2b50 0200  nop              11784  nop()                           #42
                                          11785
                                          11786  label('.addvl#43')
.addvl#43:    2b51 3080  anda $80,x       11787  anda(0x80,X)                    #43 carry to bit 0
              2b52 0500  ld   [x]         11788  ld([X])                         #44
              2b53 c21d  st   [$1d]       11789  st([vTmp])                      #45 store carry
              2b54 012a  ld   [$2a]       11790  ld([sysArgs+6])                 #46
              2b55 9002  adda $02,x       11791  adda(2,X)                       #47 src.2
              2b56 011d  ld   [$1d]       11792  ld([vTmp])                      #48
              2b57 8500  adda [x]         11793  adda([X])                       #49
              2b58 c21d  st   [$1d]       11794  st([vTmp])                      #50 src.2 += carry
              2b59 012b  ld   [$2b]       11795  ld([sysArgs+7])                 #51
              2b5a 9002  adda $02,x       11796  adda(2,X)                       #52
              2b5b 011d  ld   [$1d]       11797  ld([vTmp])                      #53
              2b5c 8500  adda [x]         11798  adda([X])                       #54
              2b5d c600  st   [x]         11799  st([X])                         #55 dst.2 += src.2
              2b5e e862  blt  .addvl#58   11800  bmi('.addvl#58')                #56 carry
              2b5f a11d  suba [$1d]       11801  suba([vTmp])                    #57 original dst.2
              2b60 fc64  bra  .addvl#60   11802  bra('.addvl#60')                #58
              2b61 411d  ora  [$1d]       11803  ora([vTmp])                     #59 carry in bit 7
                                          11804
                                          11805  label('.addvl#58')
.addvl#58:    2b62 211d  anda [$1d]       11806  anda([vTmp])                    #58 carry in bit 7
              2b63 0200  nop              11807  nop()                           #59
                                          11808
                                          11809  label('.addvl#60')
.addvl#60:    2b64 3080  anda $80,x       11810  anda(0x80,X)                    #60 carry to bit 0
              2b65 0500  ld   [x]         11811  ld([X])                         #61
              2b66 c21d  st   [$1d]       11812  st([vTmp])                      #62 store carry
              2b67 012a  ld   [$2a]       11813  ld([sysArgs+6])                 #63
              2b68 9003  adda $03,x       11814  adda(3,X)                       #64 src.3
              2b69 011d  ld   [$1d]       11815  ld([vTmp])                      #65
              2b6a 8500  adda [x]         11816  adda([X])                       #66
              2b6b c21d  st   [$1d]       11817  st([vTmp])                      #67 src.3 += carry
              2b6c 012b  ld   [$2b]       11818  ld([sysArgs+7])                 #68
              2b6d 9003  adda $03,x       11819  adda(3,X)                       #69
              2b6e 011d  ld   [$1d]       11820  ld([vTmp])                      #70
              2b6f 8500  adda [x]         11821  adda([X])                       #71
              2b70 c600  st   [x]         11822  st([X])                         #72 dst.3 += src.3
              2b71 1403  ld   $03,y       11823  ld(hi('REENTER'),Y)             #73
              2b72 e0cb  jmp  y,$cb       11824  jmp(Y,'REENTER')                #74
              2b73 00d9  ld   $d9         11825  ld(-78/2)                       #75
                                          11826
                                          11827  label('.addvl#20')
.addvl#20:    2b74 0021  ld   $21         11828  ld(hi('PREFX3_PAGE'))           #20 ENTER is at $(n-1)ff, where n = instruction page
              2b75 c202  st   [$02]       11829  st([vCpuSelect])                #21 restore PREFX3 instruction page
              2b76 9401  adda $01,y       11830  adda(1,Y)                       #22 retry instruction
              2b77 e000  jmp  y,$00       11831  jmp(Y,'NEXTY')                  #23
              2b78 00f3  ld   $f3         11832  ld(-26/2)                       #24
                                          11833
                                          11834
                                          11835  # SUBVL
                                          11836  label('subvl#13')
subvl#13:     2b79 0500  ld   [x]         11837  ld([X])                         #13
              2b7a c21d  st   [$1d]       11838  st([vTmp])                      #14 save src.0
              2b7b 112b  ld   [$2b],x     11839  ld([sysArgs+7],X)               #15 dst.0
              2b7c 00ea  ld   $ea         11840  ld(min(0,maxTicks-74/2))        #16
              2b7d 8115  adda [$15]       11841  adda([vTicks])                  #17
              2b7e e8c0  blt  .subvl#20   11842  blt('.subvl#20')                #18 not enough time left, so retry
              2b7f 0500  ld   [x]         11843  ld([X])                         #19 dst.0
              2b80 e885  blt  .subvl#22   11844  bmi('.subvl#22')                #20
              2b81 a11d  suba [$1d]       11845  suba([vTmp])                    #21
              2b82 c600  st   [x]         11846  st([X])                         #22 dst.0 -= src.0
              2b83 fc88  bra  .subvl#25   11847  bra('.subvl#25')                #23
              2b84 411d  ora  [$1d]       11848  ora([vTmp])                     #24 borrow in bit 7
                                          11849
                                          11850  label('.subvl#22')
.subvl#22:    2b85 c600  st   [x]         11851  st([X])                         #22 dst.0 -= src.0
              2b86 211d  anda [$1d]       11852  anda([vTmp])                    #23 borrow in bit 7
              2b87 0200  nop              11853  nop()                           #24
                                          11854
                                          11855  label('.subvl#25')
.subvl#25:    2b88 3080  anda $80,x       11856  anda(0x80,X)                    #25 borrow to bit 0
              2b89 0500  ld   [x]         11857  ld([X])                         #26
              2b8a c2b0  st   [$b0]       11858  st([0xB0])                      #27 store borrow
              2b8b 012a  ld   [$2a]       11859  ld([sysArgs+6])                 #28
              2b8c 9001  adda $01,x       11860  adda(1,X)                       #29
              2b8d 0500  ld   [x]         11861  ld([X])                         #30
              2b8e c21d  st   [$1d]       11862  st([vTmp])                      #31 src.1
              2b8f 012b  ld   [$2b]       11863  ld([sysArgs+7])                 #32
              2b90 9001  adda $01,x       11864  adda(1,X)                       #33
              2b91 0500  ld   [x]         11865  ld([X])                         #34 dst.1
              2b92 e898  blt  .subvl#37   11866  bmi('.subvl#37')                #35
              2b93 a11d  suba [$1d]       11867  suba([vTmp])                    #36
              2b94 a1b0  suba [$b0]       11868  suba([0xB0])                    #37
              2b95 c600  st   [x]         11869  st([X])                         #38 dst.1 = dst.1 - src.1 - borrow
              2b96 fc9c  bra  .subvl#41   11870  bra('.subvl#41')                #39
              2b97 411d  ora  [$1d]       11871  ora([vTmp])                     #40 borrow in bit 7
                                          11872
                                          11873  label('.subvl#37')
.subvl#37:    2b98 a1b0  suba [$b0]       11874  suba([0xB0])                    #37
              2b99 c600  st   [x]         11875  st([X])                         #38 dst.1 = dst.1 - src.1 - borrow
              2b9a 211d  anda [$1d]       11876  anda([vTmp])                    #39 borrow in bit 7
              2b9b 0200  nop              11877  nop()                           #40
                                          11878
                                          11879  label('.subvl#41')
.subvl#41:    2b9c 3080  anda $80,x       11880  anda(0x80,X)                    #41 borrow to bit 0
              2b9d 0500  ld   [x]         11881  ld([X])                         #42
              2b9e c2b0  st   [$b0]       11882  st([0xB0])                      #43 store borrow
              2b9f 012a  ld   [$2a]       11883  ld([sysArgs+6])                 #44
              2ba0 9002  adda $02,x       11884  adda(2,X)                       #45
              2ba1 0500  ld   [x]         11885  ld([X])                         #46
              2ba2 c21d  st   [$1d]       11886  st([vTmp])                      #47 src.2
              2ba3 012b  ld   [$2b]       11887  ld([sysArgs+7])                 #48
              2ba4 9002  adda $02,x       11888  adda(2,X)                       #49
              2ba5 0500  ld   [x]         11889  ld([X])                         #50 dst.2
              2ba6 e8ac  blt  .subvl#53   11890  bmi('.subvl#53')                #51
              2ba7 a11d  suba [$1d]       11891  suba([vTmp])                    #52
              2ba8 a1b0  suba [$b0]       11892  suba([0xB0])                    #53
              2ba9 c600  st   [x]         11893  st([X])                         #54 dst.2 = dst.2 - src.2 - borrow
              2baa fcb0  bra  .subvl#57   11894  bra('.subvl#57')                #55
              2bab 411d  ora  [$1d]       11895  ora([vTmp])                     #56 borrow in bit 7
                                          11896
                                          11897  label('.subvl#53')
.subvl#53:    2bac a1b0  suba [$b0]       11898  suba([0xB0])                    #53
              2bad c600  st   [x]         11899  st([X])                         #54 dst.2 = dst.2 - src.2 - borrow
              2bae 211d  anda [$1d]       11900  anda([vTmp])                    #55 borrow in bit 7
              2baf 0200  nop              11901  nop()                           #56
                                          11902
                                          11903  label('.subvl#57')
.subvl#57:    2bb0 3080  anda $80,x       11904  anda(0x80,X)                    #57 borrow to bit 0
              2bb1 0500  ld   [x]         11905  ld([X])                         #58
              2bb2 c2b0  st   [$b0]       11906  st([0xB0])                      #59 store borrow
              2bb3 012a  ld   [$2a]       11907  ld([sysArgs+6])                 #60
              2bb4 9003  adda $03,x       11908  adda(3,X)                       #61
              2bb5 0500  ld   [x]         11909  ld([X])                         #62
              2bb6 c21d  st   [$1d]       11910  st([vTmp])                      #63 src.3
              2bb7 012b  ld   [$2b]       11911  ld([sysArgs+7])                 #64
              2bb8 9003  adda $03,x       11912  adda(3,X)                       #65 dst.3
              2bb9 0500  ld   [x]         11913  ld([X])                         #66
              2bba a11d  suba [$1d]       11914  suba([vTmp])                    #67
              2bbb a1b0  suba [$b0]       11915  suba([0xB0])                    #68
              2bbc c600  st   [x]         11916  st([X])                         #69 dst.3 = dst.3 - src.3 - borrow
              2bbd 1403  ld   $03,y       11917  ld(hi('NEXTY'),Y)               #70
              2bbe e000  jmp  y,$00       11918  jmp(Y,'NEXTY')                  #71
              2bbf 00db  ld   $db         11919  ld(-74/2)                       #72
                                          11920
                                          11921  label('.subvl#20')
.subvl#20:    2bc0 0021  ld   $21         11922  ld(hi('PREFX3_PAGE'))           #20 ENTER is at $(n-1)ff, where n = instruction page
              2bc1 c202  st   [$02]       11923  st([vCpuSelect])                #21 restore PREFX3 instruction page
              2bc2 9401  adda $01,y       11924  adda(1,Y)                       #22 retry instruction
              2bc3 e000  jmp  y,$00       11925  jmp(Y,'NEXTY')                  #23
              2bc4 00f3  ld   $f3         11926  ld(-26/2)                       #24
                                          11927
                                          11928
                                          11929  # ANDVL
                                          11930  label('andvl#13')
andvl#13:     2bc5 1400  ld   $00,y       11931  ld(0,Y)                         #13
              2bc6 00f8  ld   $f8         11932  ld(min(0,maxTicks-46/2))        #14
              2bc7 8115  adda [$15]       11933  adda([vTicks])                  #15
              2bc8 e8e4  blt  .andvl#18   11934  blt('.andvl#18')                #16 not enough time left, so retry
              2bc9 0d00  ld   [y,x]       11935  ld([Y,X])                       #17 src.0
              2bca de00  st   [y,x++]     11936  st([Y,Xpp])                     #18
              2bcb c2b0  st   [$b0]       11937  st([0xB0])                      #19
              2bcc 0d00  ld   [y,x]       11938  ld([Y,X])                       #20 src.1
              2bcd de00  st   [y,x++]     11939  st([Y,Xpp])                     #21
              2bce c2b1  st   [$b1]       11940  st([0xB1])                      #22
              2bcf 0d00  ld   [y,x]       11941  ld([Y,X])                       #23 src.2
              2bd0 de00  st   [y,x++]     11942  st([Y,Xpp])                     #24
              2bd1 c2b2  st   [$b2]       11943  st([0xB2])                      #25
              2bd2 0500  ld   [x]         11944  ld([X])                         #26 src.3
              2bd3 c2b3  st   [$b3]       11945  st([0xB3])                      #27
              2bd4 112b  ld   [$2b],x     11946  ld([sysArgs+7],X)               #28
              2bd5 0500  ld   [x]         11947  ld([X])                         #29 dst.0
              2bd6 21b0  anda [$b0]       11948  anda([0xB0])                    #30
              2bd7 de00  st   [y,x++]     11949  st([Y,Xpp])                     #31 dst.0 &= src.0
              2bd8 0500  ld   [x]         11950  ld([X])                         #32 dst.1
              2bd9 21b1  anda [$b1]       11951  anda([0xB1])                    #33
              2bda de00  st   [y,x++]     11952  st([Y,Xpp])                     #34 dst.1 &= src.1
              2bdb 0500  ld   [x]         11953  ld([X])                         #35 dst.2
              2bdc 21b2  anda [$b2]       11954  anda([0xB2])                    #36
              2bdd de00  st   [y,x++]     11955  st([Y,Xpp])                     #37 dst.2 &= src.2
              2bde 0500  ld   [x]         11956  ld([X])                         #38 dst.3
              2bdf 21b3  anda [$b3]       11957  anda([0xB3])                    #39
              2be0 de00  st   [y,x++]     11958  st([Y,Xpp])                     #40 dst.3 &= src.3
              2be1 1403  ld   $03,y       11959  ld(hi('REENTER'),Y)             #41
              2be2 e0cb  jmp  y,$cb       11960  jmp(Y,'REENTER')                #42
              2be3 00e9  ld   $e9         11961  ld(-46/2)                       #43
                                          11962
                                          11963  label('.andvl#18')
.andvl#18:    2be4 0021  ld   $21         11964  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2be5 c202  st   [$02]       11965  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2be6 9401  adda $01,y       11966  adda(1,Y)                       #20 retry instruction
              2be7 e000  jmp  y,$00       11967  jmp(Y,'NEXTY')                  #21
              2be8 00f4  ld   $f4         11968  ld(-24/2)                       #22
                                          11969
                                          11970
              2be9 0200  nop              11971  fillers(until=0xff)
              2bea 0200  nop
              2beb 0200  nop
              * 22 times
              2bff 0200  nop              11972  align(0x100, size=0x100)
                                          11973
                                          11974  #-----------------------------------------------------------------------
                                          11975  #       More vCPU instruction implementations, (0x2C00)
                                          11976  #-----------------------------------------------------------------------
                                          11977  #
                                          11978  # ORVL
                                          11979  label('orvl#13')
orvl#13:      2c00 1400  ld   $00,y       11980  ld(0,Y)                         #13
              2c01 00f8  ld   $f8         11981  ld(min(0,maxTicks-46/2))        #14
              2c02 8115  adda [$15]       11982  adda([vTicks])                  #15
              2c03 e81f  blt  .orvl#18    11983  blt('.orvl#18')                 #16 not enough time left, so retry
              2c04 0d00  ld   [y,x]       11984  ld([Y,X])                       #17 src.0
              2c05 de00  st   [y,x++]     11985  st([Y,Xpp])                     #18
              2c06 c2b0  st   [$b0]       11986  st([0xB0])                      #19
              2c07 0d00  ld   [y,x]       11987  ld([Y,X])                       #20 src.1
              2c08 de00  st   [y,x++]     11988  st([Y,Xpp])                     #21
              2c09 c2b1  st   [$b1]       11989  st([0xB1])                      #22
              2c0a 0d00  ld   [y,x]       11990  ld([Y,X])                       #23 src.2
              2c0b de00  st   [y,x++]     11991  st([Y,Xpp])                     #24
              2c0c c2b2  st   [$b2]       11992  st([0xB2])                      #25
              2c0d 0500  ld   [x]         11993  ld([X])                         #26 src.3
              2c0e c2b3  st   [$b3]       11994  st([0xB3])                      #27
              2c0f 112b  ld   [$2b],x     11995  ld([sysArgs+7],X)               #28
              2c10 0500  ld   [x]         11996  ld([X])                         #29 dst.0
              2c11 41b0  ora  [$b0]       11997  ora([0xB0])                     #30
              2c12 de00  st   [y,x++]     11998  st([Y,Xpp])                     #31 dst.0 |= src.0
              2c13 0500  ld   [x]         11999  ld([X])                         #32 dst.1
              2c14 41b1  ora  [$b1]       12000  ora([0xB1])                     #33
              2c15 de00  st   [y,x++]     12001  st([Y,Xpp])                     #34 dst.1 |= src.1
              2c16 0500  ld   [x]         12002  ld([X])                         #35 dst.2
              2c17 41b2  ora  [$b2]       12003  ora([0xB2])                     #36
              2c18 de00  st   [y,x++]     12004  st([Y,Xpp])                     #37 dst.2 |= src.2
              2c19 0500  ld   [x]         12005  ld([X])                         #38 dst.3
              2c1a 41b3  ora  [$b3]       12006  ora([0xB3])                     #39
              2c1b de00  st   [y,x++]     12007  st([Y,Xpp])                     #40 dst.3 |= src.3
              2c1c 1403  ld   $03,y       12008  ld(hi('REENTER'),Y)             #41
              2c1d e0cb  jmp  y,$cb       12009  jmp(Y,'REENTER')                #42
              2c1e 00e9  ld   $e9         12010  ld(-46/2)                       #43
                                          12011
                                          12012  label('.orvl#18')
.orvl#18:     2c1f 0021  ld   $21         12013  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2c20 c202  st   [$02]       12014  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2c21 9401  adda $01,y       12015  adda(1,Y)                       #20 retry instruction
              2c22 e000  jmp  y,$00       12016  jmp(Y,'NEXTY')                  #21
              2c23 00f4  ld   $f4         12017  ld(-24/2)                       #22
                                          12018
                                          12019
                                          12020  # XORVL
                                          12021  label('xorvl#13')
xorvl#13:     2c24 1400  ld   $00,y       12022  ld(0,Y)                         #13
              2c25 00f8  ld   $f8         12023  ld(min(0,maxTicks-46/2))        #14
              2c26 8115  adda [$15]       12024  adda([vTicks])                  #15
              2c27 e843  blt  .xorvl#18   12025  blt('.xorvl#18')                #16 not enough time left, so retry
              2c28 0d00  ld   [y,x]       12026  ld([Y,X])                       #17 src.0
              2c29 de00  st   [y,x++]     12027  st([Y,Xpp])                     #18
              2c2a c2b0  st   [$b0]       12028  st([0xB0])                      #19
              2c2b 0d00  ld   [y,x]       12029  ld([Y,X])                       #20 src.1
              2c2c de00  st   [y,x++]     12030  st([Y,Xpp])                     #21
              2c2d c2b1  st   [$b1]       12031  st([0xB1])                      #22
              2c2e 0d00  ld   [y,x]       12032  ld([Y,X])                       #23 src.2
              2c2f de00  st   [y,x++]     12033  st([Y,Xpp])                     #24
              2c30 c2b2  st   [$b2]       12034  st([0xB2])                      #25
              2c31 0500  ld   [x]         12035  ld([X])                         #26 src.3
              2c32 c2b3  st   [$b3]       12036  st([0xB3])                      #27
              2c33 112b  ld   [$2b],x     12037  ld([sysArgs+7],X)               #28
              2c34 0500  ld   [x]         12038  ld([X])                         #29 dst.0
              2c35 61b0  xora [$b0]       12039  xora([0xB0])                    #30
              2c36 de00  st   [y,x++]     12040  st([Y,Xpp])                     #31 dst.0 ^= src.0
              2c37 0500  ld   [x]         12041  ld([X])                         #32 dst.1
              2c38 61b1  xora [$b1]       12042  xora([0xB1])                    #33
              2c39 de00  st   [y,x++]     12043  st([Y,Xpp])                     #34 dst.1 ^= src.1
              2c3a 0500  ld   [x]         12044  ld([X])                         #35 dst.2
              2c3b 61b2  xora [$b2]       12045  xora([0xB2])                    #36
              2c3c de00  st   [y,x++]     12046  st([Y,Xpp])                     #37 dst.2 ^= src.2
              2c3d 0500  ld   [x]         12047  ld([X])                         #38 dst.3
              2c3e 61b3  xora [$b3]       12048  xora([0xB3])                    #39
              2c3f de00  st   [y,x++]     12049  st([Y,Xpp])                     #40 dst.3 ^= src.3
              2c40 1403  ld   $03,y       12050  ld(hi('REENTER'),Y)             #41
              2c41 e0cb  jmp  y,$cb       12051  jmp(Y,'REENTER')                #42
              2c42 00e9  ld   $e9         12052  ld(-46/2)                       #43
                                          12053
                                          12054  label('.xorvl#18')
.xorvl#18:    2c43 0021  ld   $21         12055  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2c44 c202  st   [$02]       12056  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2c45 9401  adda $01,y       12057  adda(1,Y)                       #20 retry instruction
              2c46 e000  jmp  y,$00       12058  jmp(Y,'NEXTY')                  #21
              2c47 00f4  ld   $f4         12059  ld(-24/2)                       #22
                                          12060
                                          12061
                                          12062  # LSRV implementation
                                          12063  label('lsrv#13')
lsrv#13:      2c48 d22b  st   [$2b],x     12064  st([sysArgs+7],X)               #13 var
              2c49 00f3  ld   $f3         12065  ld(min(0,maxTicks-56/2))        #14
              2c4a 8115  adda [$15]       12066  adda([vTicks])                  #15
              2c4b e865  blt  .lsrv#18    12067  blt('.lsrv#18')                 #16 not enough time left, so retry
              2c4c 1405  ld   $05,y       12068  ld(hi('shiftTable'),Y)          #17 (ac >> 1) table
              2c4d 00cc  ld   $cc         12069  ld('.lsrv#27')                  #18 continuation address
              2c4e c21d  st   [$1d]       12070  st([vTmp])                      #19
              2c4f 0500  ld   [x]         12071  ld([X])                         #20 load byte from var
              2c50 20fe  anda $fe         12072  anda(0xfe)                      #21
              2c51 e200  jmp  y,ac        12073  jmp(Y,AC)                       #22
              2c52 fcff  bra  $ff         12074  bra(255)                        #23 bra shiftTable+255
                                          12075  # continues in page 0x0600 at label('.lsrv#27') fetching shifted byte from 0x0500
                                          12076
                                          12077  label('.lsrv#30')
.lsrv#30:     2c53 012b  ld   [$2b]       12078  ld([sysArgs+7])                 #30 low byte address
              2c54 8001  adda $01         12079  adda(1)                         #31
              2c55 d22a  st   [$2a],x     12080  st([sysArgs+6],X)               #32 high byte address
              2c56 0500  ld   [x]         12081  ld([X])                         #33 bit 0 of high byte
              2c57 2001  anda $01         12082  anda(1)                         #34
              2c58 807f  adda $7f         12083  adda(127)                       #35
              2c59 2080  anda $80         12084  anda(128)                       #36
              2c5a 112b  ld   [$2b],x     12085  ld([sysArgs+7],X)               #37
              2c5b 4500  ora  [x]         12086  ora([X])                        #38
              2c5c c600  st   [x]         12087  st([X])                         #39 transfer to bit 7 of low byte
              2c5d 1405  ld   $05,y       12088  ld(hi('shiftTable'),Y)          #40 (ac >> 1) table
              2c5e 00cf  ld   $cf         12089  ld('.lsrv#51')                  #41 continuation address
              2c5f c21d  st   [$1d]       12090  st([vTmp])                      #42
              2c60 112a  ld   [$2a],x     12091  ld([sysArgs+6],X)               #43
              2c61 0500  ld   [x]         12092  ld([X])                         #44
              2c62 20fe  anda $fe         12093  anda(0b11111110)                #45
              2c63 e200  jmp  y,ac        12094  jmp(Y,AC)                       #46
              2c64 fcff  bra  $ff         12095  bra(255)                        #47 bra shiftTable+255
                                          12096  # continues in page 0x0600 at label('.lsrv#51') fetching shifted byte from 0x0500
                                          12097
                                          12098  label('.lsrv#18')
.lsrv#18:     2c65 0116  ld   [$16]       12099  ld([vPC])                       #18 retry instruction
              2c66 a002  suba $02         12100  suba(2)                         #19
              2c67 c216  st   [$16]       12101  st([vPC])                       #20
              2c68 1403  ld   $03,y       12102  ld(hi('REENTER'),Y)             #21
              2c69 e0cb  jmp  y,$cb       12103  jmp(Y,'REENTER')                #22
              2c6a 00f3  ld   $f3         12104  ld(-26/2)                       #23
                                          12105
                                          12106
                                          12107  # LSRVL implementation
                                          12108  label('lsrvl#13')
lsrvl#13:     2c6b 1405  ld   $05,y       12109  ld(hi('shiftTable'),Y)          #13 (ac >> 1) table
              2c6c 00db  ld   $db         12110  ld(min(0,maxTicks-104/2))       #14
              2c6d 8115  adda [$15]       12111  adda([vTicks])                  #15
              2c6e e8ab  blt  .lsrvl#18   12112  blt('.lsrvl#18')                #16 not enough time left, so retry
              2c6f 00d3  ld   $d3         12113  ld('.lsrvl#26')                 #17 continuation address
              2c70 c21d  st   [$1d]       12114  st([vTmp])                      #18
              2c71 0500  ld   [x]         12115  ld([X])                         #19 load byte 0 from var
              2c72 20fe  anda $fe         12116  anda(0xfe)                      #20
              2c73 e200  jmp  y,ac        12117  jmp(Y,AC)                       #21
              2c74 fcff  bra  $ff         12118  bra(255)                        #22 bra shiftTable+255
                                          12119  # continues in page 0x0600 at label('.lsrvl#26') fetching shifted byte from 0x0500
                                          12120
                                          12121  label('.lsrvl#29')
.lsrvl#29:    2c75 012b  ld   [$2b]       12122  ld([sysArgs+7])                 #29 byte 0 address
              2c76 8001  adda $01         12123  adda(1)                         #30
              2c77 d2b0  st   [$b0],x     12124  st([0xB0],X)                    #31 byte 1 address
              2c78 8001  adda $01         12125  adda(1)                         #32
              2c79 c2b1  st   [$b1]       12126  st([0xB1])                      #33 byte 2 address
              2c7a 8001  adda $01         12127  adda(1)                         #34
              2c7b c2b2  st   [$b2]       12128  st([0xB2])                      #35 byte 3 address
              2c7c 0500  ld   [x]         12129  ld([X])                         #36 bit 0 of byte 1
              2c7d 2001  anda $01         12130  anda(1)                         #37
              2c7e 807f  adda $7f         12131  adda(127)                       #38
              2c7f 2080  anda $80         12132  anda(128)                       #39
              2c80 112b  ld   [$2b],x     12133  ld([sysArgs+7],X)               #40 byte 0 address
              2c81 4500  ora  [x]         12134  ora([X])                        #41
              2c82 c600  st   [x]         12135  st([X])                         #42 transfer to bit 7 of byte 0
              2c83 1405  ld   $05,y       12136  ld(hi('shiftTable'),Y)          #43 (ac >> 1) table
              2c84 00d6  ld   $d6         12137  ld('.lsrvl#54')                 #44 continuation address
              2c85 c21d  st   [$1d]       12138  st([vTmp])                      #45
              2c86 11b0  ld   [$b0],x     12139  ld([0xB0],X)                    #46 byte 1 address
              2c87 0500  ld   [x]         12140  ld([X])                         #47
              2c88 20fe  anda $fe         12141  anda(0b11111110)                #48
              2c89 e200  jmp  y,ac        12142  jmp(Y,AC)                       #49
              2c8a fcff  bra  $ff         12143  bra(255)                        #50 bra shiftTable+255
                                          12144  # continues in page 0x0600 at label('.lsrvl#54') fetching shifted byte from 0x0500
                                          12145
                                          12146  label('.lsrvl#57')
.lsrvl#57:    2c8b 11b1  ld   [$b1],x     12147  ld([0xB1],X)                    #57 byte 2 address
              2c8c 0500  ld   [x]         12148  ld([X])                         #58 bit 0 of byte 2
              2c8d 2001  anda $01         12149  anda(1)                         #59
              2c8e 807f  adda $7f         12150  adda(127)                       #60
              2c8f 2080  anda $80         12151  anda(128)                       #61
              2c90 11b0  ld   [$b0],x     12152  ld([0xB0],X)                    #62 byte 1 address
              2c91 4500  ora  [x]         12153  ora([X])                        #63
              2c92 c600  st   [x]         12154  st([X])                         #64 transfer to bit 7 of byte 1
              2c93 1405  ld   $05,y       12155  ld(hi('shiftTable'),Y)          #65 (ac >> 1) table
              2c94 00d9  ld   $d9         12156  ld('.lsrvl#76')                 #66 continuation address
              2c95 c21d  st   [$1d]       12157  st([vTmp])                      #67
              2c96 11b1  ld   [$b1],x     12158  ld([0xB1],X)                    #68 byte 2 address
              2c97 0500  ld   [x]         12159  ld([X])                         #69
              2c98 20fe  anda $fe         12160  anda(0b11111110)                #70
              2c99 e200  jmp  y,ac        12161  jmp(Y,AC)                       #71
              2c9a fcff  bra  $ff         12162  bra(255)                        #72 bra shiftTable+255
                                          12163  # continues in page 0x0600 at label('.lsrvl#76') fetching shifted byte from 0x0500
                                          12164
                                          12165  label('.lsrvl#79')
.lsrvl#79:    2c9b 11b2  ld   [$b2],x     12166  ld([0xB2],X)                    #79 byte 3 address
              2c9c 0500  ld   [x]         12167  ld([X])                         #80 bit 0 of byte 3
              2c9d 2001  anda $01         12168  anda(1)                         #81
              2c9e 807f  adda $7f         12169  adda(127)                       #82
              2c9f 2080  anda $80         12170  anda(128)                       #83
              2ca0 11b1  ld   [$b1],x     12171  ld([0xB1],X)                    #84 byte 2 address
              2ca1 4500  ora  [x]         12172  ora([X])                        #85
              2ca2 c600  st   [x]         12173  st([X])                         #86 transfer to bit 7 of byte 2
              2ca3 1405  ld   $05,y       12174  ld(hi('shiftTable'),Y)          #87 (ac >> 1) table
              2ca4 00dc  ld   $dc         12175  ld('.lsrvl#98')                 #88 continuation address
              2ca5 c21d  st   [$1d]       12176  st([vTmp])                      #89
              2ca6 11b2  ld   [$b2],x     12177  ld([0xB2],X)                    #90 byte 3 address
              2ca7 0500  ld   [x]         12178  ld([X])                         #91
              2ca8 20fe  anda $fe         12179  anda(0b11111110)                #92
              2ca9 e200  jmp  y,ac        12180  jmp(Y,AC)                       #93
              2caa fcff  bra  $ff         12181  bra(255)                        #94 bra shiftTable+255
                                          12182  # continues in page 0x0600 at label('.lsrvl#98') fetching shifted byte from 0x0500
                                          12183
                                          12184  label('.lsrvl#18')
.lsrvl#18:    2cab 0022  ld   $22         12185  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2cac c202  st   [$02]       12186  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2cad 9401  adda $01,y       12187  adda(1,Y)                       #20 retry instruction
              2cae e000  jmp  y,$00       12188  jmp(Y,'NEXTY')                  #21
              2caf 00f4  ld   $f4         12189  ld(-24/2)                       #22
                                          12190
                                          12191
                                          12192  # LSLVL implementation
                                          12193  label('lslvl#13')
lslvl#13:     2cb0 1400  ld   $00,y       12194  ld(0,Y)                         #13
              2cb1 00f3  ld   $f3         12195  ld(min(0,maxTicks-56/2))        #14
              2cb2 8115  adda [$15]       12196  adda([vTicks])                  #15
              2cb3 e8de  blt  .lslvl#18   12197  blt('.lslvl#18')                #16 not enough time left, so retry
              2cb4 0500  ld   [x]         12198  ld([X])                         #17
              2cb5 f4b8  bge  $2cb8       12199  bge(pc()+3)                     #18
              2cb6 fcb9  bra  $2cb9       12200  bra(pc()+3)                     #19
              2cb7 0001  ld   $01         12201  ld(1)                           #20
              2cb8 0000  ld   $00         12202  ld(0)                           #20
              2cb9 c2b0  st   [$b0]       12203  st([0xB0])                      #21 (var.0 & 0x80) >>7
              2cba 0500  ld   [x]         12204  ld([X])                         #22
              2cbb 8500  adda [x]         12205  adda([X])                       #23
              2cbc de00  st   [y,x++]     12206  st([Y,Xpp])                     #24 var.0 <<1
              2cbd 0500  ld   [x]         12207  ld([X])                         #25
              2cbe f4c1  bge  $2cc1       12208  bge(pc()+3)                     #26
              2cbf fcc2  bra  $2cc2       12209  bra(pc()+3)                     #27
              2cc0 0001  ld   $01         12210  ld(1)                           #28
              2cc1 0000  ld   $00         12211  ld(0)                           #28
              2cc2 c2b1  st   [$b1]       12212  st([0xB1])                      #29 (var.1 & 0x80) >>7
              2cc3 0500  ld   [x]         12213  ld([X])                         #30
              2cc4 8500  adda [x]         12214  adda([X])                       #31
              2cc5 41b0  ora  [$b0]       12215  ora([0xB0])                     #32
              2cc6 de00  st   [y,x++]     12216  st([Y,Xpp])                     #33 (var.1 <<1) | [0xB0]
              2cc7 0500  ld   [x]         12217  ld([X])                         #34
              2cc8 f4cb  bge  $2ccb       12218  bge(pc()+3)                     #35
              2cc9 fccc  bra  $2ccc       12219  bra(pc()+3)                     #36
              2cca 0001  ld   $01         12220  ld(1)                           #37
              2ccb 0000  ld   $00         12221  ld(0)                           #37
              2ccc c2b0  st   [$b0]       12222  st([0xB0])                      #38 (var.2 & 0x80) >>7
              2ccd 0500  ld   [x]         12223  ld([X])                         #39
              2cce 8500  adda [x]         12224  adda([X])                       #40
              2ccf 41b1  ora  [$b1]       12225  ora([0xB1])                     #41
              2cd0 de00  st   [y,x++]     12226  st([Y,Xpp])                     #42 (var.2 <<1) | [0xB1]
              2cd1 0500  ld   [x]         12227  ld([X])                         #43
              2cd2 f4d5  bge  $2cd5       12228  bge(pc()+3)                     #44
              2cd3 fcd6  bra  $2cd6       12229  bra(pc()+3)                     #45
              2cd4 0001  ld   $01         12230  ld(1)                           #46
              2cd5 0000  ld   $00         12231  ld(0)                           #46
              2cd6 c2b1  st   [$b1]       12232  st([0xB1])                      #47 (var.3 & 0x80) >>7
              2cd7 0500  ld   [x]         12233  ld([X])                         #48
              2cd8 8500  adda [x]         12234  adda([X])                       #49
              2cd9 41b0  ora  [$b0]       12235  ora([0xB0])                     #50
              2cda de00  st   [y,x++]     12236  st([Y,Xpp])                     #51 (var.3 <<1) | [0xB0]
              2cdb 1403  ld   $03,y       12237  ld(hi('NEXTY'),Y)               #52
              2cdc e000  jmp  y,$00       12238  jmp(Y,'NEXTY')                  #53
              2cdd 00e4  ld   $e4         12239  ld(-56/2)                       #54
                                          12240
                                          12241  label('.lslvl#18')
.lslvl#18:    2cde 0022  ld   $22         12242  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2cdf c202  st   [$02]       12243  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2ce0 9401  adda $01,y       12244  adda(1,Y)                       #20 retry instruction
              2ce1 e000  jmp  y,$00       12245  jmp(Y,'NEXTY')                  #21
              2ce2 00f4  ld   $f4         12246  ld(-24/2)                       #22
                                          12247
                                          12248
              2ce3 0200  nop              12249  fillers(until=0xff)
              2ce4 0200  nop
              2ce5 0200  nop
              * 28 times
              2cff 0200  nop              12250  align(0x100, size=0x100)
                                          12251
                                          12252  #-----------------------------------------------------------------------
                                          12253  #       More vCPU instruction implementations, (0x2D00)
                                          12254  #-----------------------------------------------------------------------
                                          12255  #
                                          12256  # JEQL implementation
                                          12257  label('jeql#13')
jeql#13:      2d00 1519  ld   [$19],y     12258  ld([vAC+1],Y)                   #13
              2d01 00fb  ld   $fb         12259  ld(min(0,maxTicks-40/2))        #14
              2d02 8115  adda [$15]       12260  adda([vTicks])                  #15
              2d03 e81d  blt  .jeql#18    12261  blt('.jeql#18')                 #16 not enough time left, so retry
              2d04 1118  ld   [$18],x     12262  ld([vAC],X)                     #17
              2d05 0d00  ld   [y,x]       12263  ld([Y,X])                       #18
              2d06 de00  st   [y,x++]     12264  st([Y,Xpp])                     #19
              2d07 c2b0  st   [$b0]       12265  st([0xB0])                      #20 [vAC].0
              2d08 0d00  ld   [y,x]       12266  ld([Y,X])                       #21
              2d09 de00  st   [y,x++]     12267  st([Y,Xpp])                     #22
              2d0a c2b1  st   [$b1]       12268  st([0xB1])                      #23 [vAC].1
              2d0b 0d00  ld   [y,x]       12269  ld([Y,X])                       #24
              2d0c de00  st   [y,x++]     12270  st([Y,Xpp])                     #25
              2d0d c2b2  st   [$b2]       12271  st([0xB2])                      #26 [vAC].2
              2d0e 0d00  ld   [y,x]       12272  ld([Y,X])                       #27 [vAC].3
              2d0f 41b2  ora  [$b2]       12273  ora([0xB2])                     #28
              2d10 41b1  ora  [$b1]       12274  ora([0xB1])                     #29
              2d11 41b0  ora  [$b0]       12275  ora([0xB0])                     #30
              2d12 ec1a  bne  .jeql#33    12276  bne('.jeql#33')                 #31 if (vAC.3 OR vAC.2 OR vAC.1 OR vAC.0) != 0
              2d13 012b  ld   [$2b]       12277  ld([sysArgs+7])                 #32 address of branch destination
              2d14 c216  st   [$16]       12278  st([vPC])                       #33
              2d15 012a  ld   [$2a]       12279  ld([sysArgs+6])                 #34
              2d16 c217  st   [$17]       12280  st([vPC+1])                     #35
              2d17 1403  ld   $03,y       12281  ld(hi('NEXTY'),Y)               #36
              2d18 e000  jmp  y,$00       12282  jmp(Y,'NEXTY')                  #37
              2d19 00ec  ld   $ec         12283  ld(-40/2)                       #38
                                          12284
                                          12285  label('.jeql#33')
.jeql#33:     2d1a 1403  ld   $03,y       12286  ld(hi('REENTER'),Y)             #33
              2d1b e0cb  jmp  y,$cb       12287  jmp(Y,'REENTER')                #34
              2d1c 00ed  ld   $ed         12288  ld(-38/2)                       #35
                                          12289
                                          12290  label('.jeql#18')
.jeql#18:     2d1d 0021  ld   $21         12291  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2d1e c202  st   [$02]       12292  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2d1f 9401  adda $01,y       12293  adda(1,Y)                       #20 retry instruction
              2d20 e000  jmp  y,$00       12294  jmp(Y,'NEXTY')                  #21
              2d21 00f4  ld   $f4         12295  ld(-24/2)                       #22
                                          12296
                                          12297
                                          12298  # JNEL implementation
                                          12299  label('jnel#13')
jnel#13:      2d22 1519  ld   [$19],y     12300  ld([vAC+1],Y)                   #13
              2d23 00fb  ld   $fb         12301  ld(min(0,maxTicks-40/2))        #14
              2d24 8115  adda [$15]       12302  adda([vTicks])                  #15
              2d25 e83f  blt  .jnel#18    12303  blt('.jnel#18')                 #16 not enough time left, so retry
              2d26 1118  ld   [$18],x     12304  ld([vAC],X)                     #17
              2d27 0d00  ld   [y,x]       12305  ld([Y,X])                       #18
              2d28 de00  st   [y,x++]     12306  st([Y,Xpp])                     #19
              2d29 c2b0  st   [$b0]       12307  st([0xB0])                      #20 [vAC].0
              2d2a 0d00  ld   [y,x]       12308  ld([Y,X])                       #21
              2d2b de00  st   [y,x++]     12309  st([Y,Xpp])                     #22
              2d2c c2b1  st   [$b1]       12310  st([0xB1])                      #23 [vAC].1
              2d2d 0d00  ld   [y,x]       12311  ld([Y,X])                       #24
              2d2e de00  st   [y,x++]     12312  st([Y,Xpp])                     #25
              2d2f c2b2  st   [$b2]       12313  st([0xB2])                      #26 [vAC].2
              2d30 0d00  ld   [y,x]       12314  ld([Y,X])                       #27 [vAC].3
              2d31 41b2  ora  [$b2]       12315  ora([0xB2])                     #28
              2d32 41b1  ora  [$b1]       12316  ora([0xB1])                     #29
              2d33 41b0  ora  [$b0]       12317  ora([0xB0])                     #30
              2d34 f03c  beq  .jnel#33    12318  beq('.jnel#33')                 #31 if (vAC.3 OR vAC.2 OR vAC.1 OR vAC.0) == 0
              2d35 012b  ld   [$2b]       12319  ld([sysArgs+7])                 #32 address of branch destination
              2d36 c216  st   [$16]       12320  st([vPC])                       #33
              2d37 012a  ld   [$2a]       12321  ld([sysArgs+6])                 #34
              2d38 c217  st   [$17]       12322  st([vPC+1])                     #35
              2d39 1403  ld   $03,y       12323  ld(hi('NEXTY'),Y)               #36
              2d3a e000  jmp  y,$00       12324  jmp(Y,'NEXTY')                  #37
              2d3b 00ec  ld   $ec         12325  ld(-40/2)                       #38
                                          12326
                                          12327  label('.jnel#33')
.jnel#33:     2d3c 1403  ld   $03,y       12328  ld(hi('REENTER'),Y)             #33
              2d3d e0cb  jmp  y,$cb       12329  jmp(Y,'REENTER')                #34
              2d3e 00ed  ld   $ed         12330  ld(-38/2)                       #35
                                          12331
                                          12332  label('.jnel#18')
.jnel#18:     2d3f 0021  ld   $21         12333  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2d40 c202  st   [$02]       12334  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2d41 9401  adda $01,y       12335  adda(1,Y)                       #20 retry instruction
              2d42 e000  jmp  y,$00       12336  jmp(Y,'NEXTY')                  #21
              2d43 00f4  ld   $f4         12337  ld(-24/2)                       #22
                                          12338
                                          12339
                                          12340  # JLTL implementation
                                          12341  label('jltl#13')
jltl#13:      2d44 1519  ld   [$19],y     12342  ld([vAC+1],Y)                   #13
              2d45 0118  ld   [$18]       12343  ld([vAC])                       #14
              2d46 9003  adda $03,x       12344  adda(3,X)                       #15
              2d47 0d00  ld   [y,x]       12345  ld([Y,X])                       #16
              2d48 e84d  blt  .jltl#19    12346  blt('.jltl#19')                 #17 if [vAC.3] < 0
              2d49 012b  ld   [$2b]       12347  ld([sysArgs+7])                 #18 address of branch destination
              2d4a 1403  ld   $03,y       12348  ld(hi('REENTER'),Y)             #19
              2d4b e0cb  jmp  y,$cb       12349  jmp(Y,'REENTER')                #20
              2d4c 00f4  ld   $f4         12350  ld(-24/2)                       #21
                                          12351
                                          12352  label('.jltl#19')
.jltl#19:     2d4d c216  st   [$16]       12353  st([vPC])                       #19
              2d4e 012a  ld   [$2a]       12354  ld([sysArgs+6])                 #20
              2d4f c217  st   [$17]       12355  st([vPC+1])                     #21
              2d50 1403  ld   $03,y       12356  ld(hi('NEXTY'),Y)               #22
              2d51 e000  jmp  y,$00       12357  jmp(Y,'NEXTY')                  #23
              2d52 00f3  ld   $f3         12358  ld(-26/2)                       #24
                                          12359
                                          12360
                                          12361  # JGTL implementation
                                          12362  label('jgtl#13')
jgtl#13:      2d53 1519  ld   [$19],y     12363  ld([vAC+1],Y)                   #13
              2d54 00fa  ld   $fa         12364  ld(min(0,maxTicks-42/2))        #14
              2d55 8115  adda [$15]       12365  adda([vTicks])                  #15
              2d56 e875  blt  .jgtl#18    12366  blt('.jgtl#18')                 #16 not enough time left, so retry
              2d57 1118  ld   [$18],x     12367  ld([vAC],X)                     #17
              2d58 0d00  ld   [y,x]       12368  ld([Y,X])                       #18
              2d59 de00  st   [y,x++]     12369  st([Y,Xpp])                     #19
              2d5a c2b0  st   [$b0]       12370  st([0xB0])                      #20 [vAC].0
              2d5b 0d00  ld   [y,x]       12371  ld([Y,X])                       #21
              2d5c de00  st   [y,x++]     12372  st([Y,Xpp])                     #22
              2d5d c2b1  st   [$b1]       12373  st([0xB1])                      #23 [vAC].1
              2d5e 0d00  ld   [y,x]       12374  ld([Y,X])                       #24
              2d5f de00  st   [y,x++]     12375  st([Y,Xpp])                     #25
              2d60 c2b2  st   [$b2]       12376  st([0xB2])                      #26 [vAC].2
              2d61 0d00  ld   [y,x]       12377  ld([Y,X])                       #27
              2d62 c2b3  st   [$b3]       12378  st([0xB3])                      #28 [vAC].3
              2d63 e86c  blt  .jgtl#31    12379  blt('.jgtl#31')                 #29 if [vAC.3] < 0
              2d64 41b2  ora  [$b2]       12380  ora([0xB2])                     #30
              2d65 41b1  ora  [$b1]       12381  ora([0xB1])                     #31
              2d66 41b0  ora  [$b0]       12382  ora([0xB0])                     #32
              2d67 ec6f  bne  .jgtl#35    12383  bne('.jgtl#35')                 #33 if (vAC.3 OR vAC.2 OR vAC.1 OR vAC.0) != 0
              2d68 012b  ld   [$2b]       12384  ld([sysArgs+7])                 #34 address of branch destination
              2d69 1403  ld   $03,y       12385  ld(hi('REENTER'),Y)             #35
              2d6a e0cb  jmp  y,$cb       12386  jmp(Y,'REENTER')                #36
              2d6b 00ec  ld   $ec         12387  ld(-40/2)                       #37
                                          12388
                                          12389  label('.jgtl#31')
.jgtl#31:     2d6c 1403  ld   $03,y       12390  ld(hi('REENTER'),Y)             #31
              2d6d e0cb  jmp  y,$cb       12391  jmp(Y,'REENTER')                #32
              2d6e 00ee  ld   $ee         12392  ld(-36/2)                       #33
                                          12393
                                          12394  label('.jgtl#35')
.jgtl#35:     2d6f c216  st   [$16]       12395  st([vPC])                       #35
              2d70 012a  ld   [$2a]       12396  ld([sysArgs+6])                 #36
              2d71 c217  st   [$17]       12397  st([vPC+1])                     #37
              2d72 1403  ld   $03,y       12398  ld(hi('NEXTY'),Y)               #38
              2d73 e000  jmp  y,$00       12399  jmp(Y,'NEXTY')                  #39
              2d74 00eb  ld   $eb         12400  ld(-42/2)                       #40
                                          12401
                                          12402  label('.jgtl#18')
.jgtl#18:     2d75 0021  ld   $21         12403  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2d76 c202  st   [$02]       12404  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2d77 9401  adda $01,y       12405  adda(1,Y)                       #20 retry instruction
              2d78 e000  jmp  y,$00       12406  jmp(Y,'NEXTY')                  #21
              2d79 00f4  ld   $f4         12407  ld(-24/2)                       #22
                                          12408
                                          12409
                                          12410  # JLEL implementation
                                          12411  label('jlel#13')
jlel#13:      2d7a 1519  ld   [$19],y     12412  ld([vAC+1],Y)                   #13
              2d7b 00fa  ld   $fa         12413  ld(min(0,maxTicks-42/2))        #14
              2d7c 8115  adda [$15]       12414  adda([vTicks])                  #15
              2d7d e8a0  blt  .jlel#18    12415  blt('.jlel#18')                 #16 not enough time left, so retry
              2d7e 1118  ld   [$18],x     12416  ld([vAC],X)                     #17
              2d7f 0d00  ld   [y,x]       12417  ld([Y,X])                       #18
              2d80 de00  st   [y,x++]     12418  st([Y,Xpp])                     #19
              2d81 c2b0  st   [$b0]       12419  st([0xB0])                      #20 [vAC].0
              2d82 0d00  ld   [y,x]       12420  ld([Y,X])                       #21
              2d83 de00  st   [y,x++]     12421  st([Y,Xpp])                     #22
              2d84 c2b1  st   [$b1]       12422  st([0xB1])                      #23 [vAC].1
              2d85 0d00  ld   [y,x]       12423  ld([Y,X])                       #24
              2d86 de00  st   [y,x++]     12424  st([Y,Xpp])                     #25
              2d87 c2b2  st   [$b2]       12425  st([0xB2])                      #26 [vAC].2
              2d88 0d00  ld   [y,x]       12426  ld([Y,X])                       #27
              2d89 c2b3  st   [$b3]       12427  st([0xB3])                      #28 [vAC].3
              2d8a e893  blt  .jlel#31    12428  blt('.jlel#31')                 #29 if [vAC.3] < 0
              2d8b 41b2  ora  [$b2]       12429  ora([0xB2])                     #30
              2d8c 41b1  ora  [$b1]       12430  ora([0xB1])                     #31
              2d8d 41b0  ora  [$b0]       12431  ora([0xB0])                     #32
              2d8e f09a  beq  .jlel#35    12432  beq('.jlel#35')                 #33 if (vAC.3 OR vAC.2 OR vAC.1 OR vAC.0) == 0
              2d8f 012b  ld   [$2b]       12433  ld([sysArgs+7])                 #34 address of branch destination
              2d90 1403  ld   $03,y       12434  ld(hi('REENTER'),Y)             #35
              2d91 e0cb  jmp  y,$cb       12435  jmp(Y,'REENTER')                #36
              2d92 00ec  ld   $ec         12436  ld(-40/2)                       #37
                                          12437
                                          12438  label('.jlel#31')
.jlel#31:     2d93 012b  ld   [$2b]       12439  ld([sysArgs+7])                 #31 address of branch destination
              2d94 c216  st   [$16]       12440  st([vPC])                       #32
              2d95 012a  ld   [$2a]       12441  ld([sysArgs+6])                 #33
              2d96 c217  st   [$17]       12442  st([vPC+1])                     #34
              2d97 1403  ld   $03,y       12443  ld(hi('REENTER'),Y)             #35
              2d98 e0cb  jmp  y,$cb       12444  jmp(Y,'REENTER')                #36
              2d99 00ec  ld   $ec         12445  ld(-40/2)                       #37
                                          12446
                                          12447  label('.jlel#35')
.jlel#35:     2d9a c216  st   [$16]       12448  st([vPC])                       #35
              2d9b 012a  ld   [$2a]       12449  ld([sysArgs+6])                 #36
              2d9c c217  st   [$17]       12450  st([vPC+1])                     #37
              2d9d 1403  ld   $03,y       12451  ld(hi('NEXTY'),Y)               #38
              2d9e e000  jmp  y,$00       12452  jmp(Y,'NEXTY')                  #39
              2d9f 00eb  ld   $eb         12453  ld(-42/2)                       #40
                                          12454
                                          12455  label('.jlel#18')
.jlel#18:     2da0 0021  ld   $21         12456  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2da1 c202  st   [$02]       12457  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2da2 9401  adda $01,y       12458  adda(1,Y)                       #20 retry instruction
              2da3 e000  jmp  y,$00       12459  jmp(Y,'NEXTY')                  #21
              2da4 00f4  ld   $f4         12460  ld(-24/2)                       #22
                                          12461
                                          12462
                                          12463  # JGEL implementation
                                          12464  label('jgel#13')
jgel#13:      2da5 1519  ld   [$19],y     12465  ld([vAC+1],Y)                   #13
              2da6 0118  ld   [$18]       12466  ld([vAC])                       #14
              2da7 9003  adda $03,x       12467  adda(3,X)                       #15
              2da8 0d00  ld   [y,x]       12468  ld([Y,X])                       #16
              2da9 e8b1  blt  .jgel#19    12469  blt('.jgel#19')                 #17 if [vAC.3] < 0
              2daa 012b  ld   [$2b]       12470  ld([sysArgs+7])                 #18 address of branch destination
              2dab c216  st   [$16]       12471  st([vPC])                       #19
              2dac 012a  ld   [$2a]       12472  ld([sysArgs+6])                 #20
              2dad c217  st   [$17]       12473  st([vPC+1])                     #21
              2dae 1403  ld   $03,y       12474  ld(hi('NEXTY'),Y)               #22
              2daf e000  jmp  y,$00       12475  jmp(Y,'NEXTY')                  #23
              2db0 00f3  ld   $f3         12476  ld(-26/2)                       #24
                                          12477
                                          12478  label('.jgel#19')
.jgel#19:     2db1 1403  ld   $03,y       12479  ld(hi('REENTER'),Y)             #19
              2db2 e0cb  jmp  y,$cb       12480  jmp(Y,'REENTER')                #20
              2db3 00f4  ld   $f4         12481  ld(-24/2)                       #21
                                          12482
                                          12483
                                          12484  # LOKEQI implementation
                                          12485  label('lokeqi#13')
lokeqi#13:    2db4 1517  ld   [$17],y     12486  ld([vPC+1],Y)                   #13
              2db5 de00  st   [y,x++]     12487  st([Y,Xpp])                     #14 X++
              2db6 00fe  ld   $fe         12488  ld(min(0,maxTicks-34/2))        #15
              2db7 8115  adda [$15]       12489  adda([vTicks])                  #16
              2db8 e8c8  blt  .lokeqi#19  12490  blt('.lokeqi#19')               #17 not enough time left, so retry
              2db9 0d00  ld   [y,x]       12491  ld([Y,X])                       #18 imm.0
              2dba 1519  ld   [$19],y     12492  ld([vAC+1],Y)                   #19
              2dbb 1118  ld   [$18],x     12493  ld([vAC],X)                     #20
              2dbc de00  st   [y,x++]     12494  st([Y,Xpp])                     #21 [vAC.0] = imm.0, X++
              2dbd 011d  ld   [$1d]       12495  ld([vTmp])                      #22
              2dbe de00  st   [y,x++]     12496  st([Y,Xpp])                     #23 [vAC.1] = imm.1, X++
              2dbf 0000  ld   $00         12497  ld(0)                           #24
              2dc0 de00  st   [y,x++]     12498  st([Y,Xpp])                     #25 [vAC.2] = 0, X++
              2dc1 ce00  st   [y,x]       12499  st([Y,X])                       #26 [vAC.3] = 0
              2dc2 0116  ld   [$16]       12500  ld([vPC])                       #27 fix vPC for 3 byte instruction
              2dc3 8001  adda $01         12501  adda(1)                         #28
              2dc4 c216  st   [$16]       12502  st([vPC])                       #29
              2dc5 1403  ld   $03,y       12503  ld(hi('NEXTY'),Y)               #30
              2dc6 e000  jmp  y,$00       12504  jmp(Y,'NEXTY')                  #31
              2dc7 00ef  ld   $ef         12505  ld(-34/2)                       #32
                                          12506
                                          12507  label('.lokeqi#19')
.lokeqi#19:   2dc8 0116  ld   [$16]       12508  ld([vPC])                       #19 retry
              2dc9 a002  suba $02         12509  suba(2)                         #20
              2dca c216  st   [$16]       12510  st([vPC])                       #21
              2dcb 1403  ld   $03,y       12511  ld(hi('NEXTY'),Y)               #22
              2dcc e000  jmp  y,$00       12512  jmp(Y,'NEXTY')                  #23
              2dcd 00f3  ld   $f3         12513  ld(-26/2)                       #24
                                          12514
                                          12515
                                          12516  # LOKEI implementation
                                          12517  label('lokei#13')
lokei#13:     2dce 1517  ld   [$17],y     12518  ld([vPC+1],Y)                   #13
              2dcf c2b0  st   [$b0]       12519  st([0xB0])                      #14 imm.3
              2dd0 de00  st   [y,x++]     12520  st([Y,Xpp])                     #15 X++
              2dd1 00fa  ld   $fa         12521  ld(min(0,maxTicks-42/2))        #16
              2dd2 8115  adda [$15]       12522  adda([vTicks])                  #17
              2dd3 e8ea  blt  .lokei#20   12523  blt('.lokei#20')                #18 not enough time left, so retry
              2dd4 0d00  ld   [y,x]       12524  ld([Y,X])                       #19
              2dd5 de00  st   [y,x++]     12525  st([Y,Xpp])                     #20 X++
              2dd6 c2b1  st   [$b1]       12526  st([0xB1])                      #21 imm.2
              2dd7 0d00  ld   [y,x]       12527  ld([Y,X])                       #22
              2dd8 de00  st   [y,x++]     12528  st([Y,Xpp])                     #23 X++
              2dd9 c2b2  st   [$b2]       12529  st([0xB2])                      #24 imm.1
              2dda 0d00  ld   [y,x]       12530  ld([Y,X])                       #25 imm.0
              2ddb 1519  ld   [$19],y     12531  ld([vAC+1],Y)                   #26
              2ddc 1118  ld   [$18],x     12532  ld([vAC],X)                     #27
              2ddd de00  st   [y,x++]     12533  st([Y,Xpp])                     #28 [vAC.0] = imm.0, X++
              2dde 01b2  ld   [$b2]       12534  ld([0xB2])                      #29
              2ddf de00  st   [y,x++]     12535  st([Y,Xpp])                     #30 [vAC.1] = imm.1, X++
              2de0 01b1  ld   [$b1]       12536  ld([0xB1])                      #31
              2de1 de00  st   [y,x++]     12537  st([Y,Xpp])                     #32 [vAC.2] = imm.2, X++
              2de2 01b0  ld   [$b0]       12538  ld([0xB0])                      #33
              2de3 ce00  st   [y,x]       12539  st([Y,X])                       #34 [vAC.3] = imm.3
              2de4 0116  ld   [$16]       12540  ld([vPC])                       #35 fix vPC for 5 byte instruction
              2de5 8003  adda $03         12541  adda(3)                         #36
              2de6 c216  st   [$16]       12542  st([vPC])                       #37
              2de7 1403  ld   $03,y       12543  ld(hi('NEXTY'),Y)               #38
              2de8 e000  jmp  y,$00       12544  jmp(Y,'NEXTY')                  #39
              2de9 00eb  ld   $eb         12545  ld(-42/2)                       #40
                                          12546
                                          12547  label('.lokei#20')
.lokei#20:    2dea 0116  ld   [$16]       12548  ld([vPC])                       #20 retry
              2deb a002  suba $02         12549  suba(2)                         #21
              2dec c216  st   [$16]       12550  st([vPC])                       #22
              2ded 1403  ld   $03,y       12551  ld(hi('REENTER'),Y)             #23
              2dee e0cb  jmp  y,$cb       12552  jmp(Y,'REENTER')                #24
              2def 00f2  ld   $f2         12553  ld(-28/2)                       #25
                                          12554
                                          12555
              2df0 0200  nop              12556  fillers(until=0xff)
              2df1 0200  nop
              2df2 0200  nop
              * 15 times
              2dff 0200  nop              12557  align(0x100, size=0x100)
                                          12558
                                          12559  #-----------------------------------------------------------------------
                                          12560  #       More vCPU instruction implementations, (0x2E00)
                                          12561  #-----------------------------------------------------------------------
                                          12562  #
                                          12563  # ANDBI implementation
                                          12564  label('andbi#13')
andbi#13:     2e00 0500  ld   [x]         12565  ld([X])                         #13
              2e01 212b  anda [$2b]       12566  anda([sysArgs+7])               #14 immediate value
              2e02 c600  st   [x]         12567  st([X])                         #15
              2e03 1403  ld   $03,y       12568  ld(hi('NEXTY'),Y)               #16
              2e04 e000  jmp  y,$00       12569  jmp(Y,'NEXTY')                  #17
              2e05 00f6  ld   $f6         12570  ld(-20/2)                       #18
                                          12571
                                          12572  # ORBI implementation
                                          12573  label('orbi#13')
orbi#13:      2e06 0500  ld   [x]         12574  ld([X])                         #13
              2e07 412b  ora  [$2b]       12575  ora([sysArgs+7])                #14 immediate value
              2e08 c600  st   [x]         12576  st([X])                         #15
              2e09 1403  ld   $03,y       12577  ld(hi('NEXTY'),Y)               #16
              2e0a e000  jmp  y,$00       12578  jmp(Y,'NEXTY')                  #17
              2e0b 00f6  ld   $f6         12579  ld(-20/2)                       #18
                                          12580
                                          12581  # XORBI implementation
                                          12582  label('xorbi#13')
xorbi#13:     2e0c 0500  ld   [x]         12583  ld([X])                         #13
              2e0d 612b  xora [$2b]       12584  xora([sysArgs+7])               #14 immediate value
              2e0e c600  st   [x]         12585  st([X])                         #15
              2e0f 1403  ld   $03,y       12586  ld(hi('NEXTY'),Y)               #16
              2e10 e000  jmp  y,$00       12587  jmp(Y,'NEXTY')                  #17
              2e11 00f6  ld   $f6         12588  ld(-20/2)                       #18
                                          12589
                                          12590
                                          12591  # INCL implementation
                                          12592  label('incl#13')
incl#13:      2e12 00fd  ld   $fd         12593  ld(min(0,maxTicks-36/2))        #13
              2e13 8115  adda [$15]       12594  adda([vTicks])                  #14
              2e14 e831  blt  .incl#17    12595  blt('.incl#17')                 #15 not enough time left, so retry
              2e15 1400  ld   $00,y       12596  ld(0,Y)                         #16
              2e16 0500  ld   [x]         12597  ld([X])                         #17
              2e17 8001  adda $01         12598  adda(1)                         #18
              2e18 f01d  beq  .incl#21    12599  beq('.incl#21')                 #19 if 0 byte is 0x00
              2e19 de00  st   [y,x++]     12600  st([Y,Xpp])                     #20 inc 0 byte
              2e1a 1403  ld   $03,y       12601  ld(hi('REENTER'),Y)             #21
              2e1b e0cb  jmp  y,$cb       12602  jmp(Y,'REENTER')                #22
              2e1c 00f3  ld   $f3         12603  ld(-26/2)                       #23
                                          12604
                                          12605  label('.incl#21')
.incl#21:     2e1d 0500  ld   [x]         12606  ld([X])                         #21
              2e1e 8001  adda $01         12607  adda(1)                         #22
              2e1f f024  beq  .incl#25    12608  beq('.incl#25')                 #23 if 1 byte is 0x00
              2e20 de00  st   [y,x++]     12609  st([Y,Xpp])                     #24 inc 1 byte
              2e21 1403  ld   $03,y       12610  ld(hi('REENTER'),Y)             #25
              2e22 e0cb  jmp  y,$cb       12611  jmp(Y,'REENTER')                #26
              2e23 00f1  ld   $f1         12612  ld(-30/2)                       #27
                                          12613
                                          12614  label('.incl#25')
.incl#25:     2e24 0500  ld   [x]         12615  ld([X])                         #25
              2e25 8001  adda $01         12616  adda(1)                         #26
              2e26 f02b  beq  .incl#29    12617  beq('.incl#29')                 #27 if 2 byte is 0x00
              2e27 de00  st   [y,x++]     12618  st([Y,Xpp])                     #28 inc 2 byte
              2e28 1403  ld   $03,y       12619  ld(hi('REENTER'),Y)             #29
              2e29 e0cb  jmp  y,$cb       12620  jmp(Y,'REENTER')                #30
              2e2a 00ef  ld   $ef         12621  ld(-34/2)                       #31
                                          12622
                                          12623  label('.incl#29')
.incl#29:     2e2b 0500  ld   [x]         12624  ld([X])                         #29
              2e2c 8001  adda $01         12625  adda(1)                         #30
              2e2d c600  st   [x]         12626  st([X])                         #31 inc high byte
              2e2e 1403  ld   $03,y       12627  ld(hi('NEXTY'),Y)               #32
              2e2f e000  jmp  y,$00       12628  jmp(Y,'NEXTY')                  #33
              2e30 00ee  ld   $ee         12629  ld(-36/2)                       #34
                                          12630
                                          12631  label('.incl#17')
.incl#17:     2e31 0022  ld   $22         12632  ld(hi('PREFX2_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              2e32 c202  st   [$02]       12633  st([vCpuSelect])                #18 restore PREFX2 instruction page
              2e33 9401  adda $01,y       12634  adda(1,Y)                       #19 retry instruction
              2e34 e0cb  jmp  y,$cb       12635  jmp(Y,'REENTER')                #20
              2e35 00f4  ld   $f4         12636  ld(-24/2)                       #21
                                          12637
                                          12638
                                          12639  # DECL implementation
                                          12640  label('decl#13')
decl#13:      2e36 1200  ld   ac,x        12641  ld(AC,X)                        #13 var
              2e37 00fb  ld   $fb         12642  ld(min(0,maxTicks-40/2))        #14
              2e38 8115  adda [$15]       12643  adda([vTicks])                  #15
              2e39 e859  blt  .decl#18    12644  blt('.decl#18')                 #16 not enough time left, so retry
              2e3a 1400  ld   $00,y       12645  ld(0,Y)                         #17
              2e3b 0500  ld   [x]         12646  ld([X])                         #18
              2e3c a001  suba $01         12647  suba(1)                         #19
              2e3d de00  st   [y,x++]     12648  st([Y,Xpp])                     #20 dec 0 byte
              2e3e 60ff  xora $ff         12649  xora(0xff)                      #21 if 0 byte is 0xff
              2e3f f044  beq  .decl#24    12650  beq('.decl#24')                 #22
              2e40 0500  ld   [x]         12651  ld([X])                         #23
              2e41 1403  ld   $03,y       12652  ld(hi('NEXTY'),Y)               #24
              2e42 e000  jmp  y,$00       12653  jmp(Y,'NEXTY')                  #25
              2e43 00f2  ld   $f2         12654  ld(-28/2)                       #26
                                          12655
                                          12656  label('.decl#24')
.decl#24:     2e44 a001  suba $01         12657  suba(1)                         #24
              2e45 de00  st   [y,x++]     12658  st([Y,Xpp])                     #25 dec 1 byte
              2e46 60ff  xora $ff         12659  xora(0xff)                      #26 if 1 byte is 0xff
              2e47 f04c  beq  .decl#29    12660  beq('.decl#29')                 #27
              2e48 0500  ld   [x]         12661  ld([X])                         #28
              2e49 1403  ld   $03,y       12662  ld(hi('REENTER'),Y)             #29
              2e4a e0cb  jmp  y,$cb       12663  jmp(Y,'REENTER')                #30
              2e4b 00ef  ld   $ef         12664  ld(-34/2)                       #31
                                          12665
                                          12666  label('.decl#29')
.decl#29:     2e4c a001  suba $01         12667  suba(1)                         #29
              2e4d de00  st   [y,x++]     12668  st([Y,Xpp])                     #30 dec 2 byte
              2e4e 60ff  xora $ff         12669  xora(0xff)                      #31 if 2 byte is 0xff
              2e4f f054  beq  .decl#34    12670  beq('.decl#34')                 #32
              2e50 0500  ld   [x]         12671  ld([X])                         #33
              2e51 1403  ld   $03,y       12672  ld(hi('NEXTY'),Y)               #34
              2e52 e000  jmp  y,$00       12673  jmp(Y,'NEXTY')                  #35
              2e53 00ed  ld   $ed         12674  ld(-38/2)                       #36
                                          12675
                                          12676  label('.decl#34')
.decl#34:     2e54 a001  suba $01         12677  suba(1)                         #34
              2e55 c600  st   [x]         12678  st([X])                         #35 dec 3 byte
              2e56 1403  ld   $03,y       12679  ld(hi('NEXTY'),Y)               #36
              2e57 e000  jmp  y,$00       12680  jmp(Y,'NEXTY')                  #37
              2e58 00ec  ld   $ec         12681  ld(-40/2)                       #38
                                          12682
                                          12683  label('.decl#18')
.decl#18:     2e59 0022  ld   $22         12684  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2e5a c202  st   [$02]       12685  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2e5b 9401  adda $01,y       12686  adda(1,Y)                       #20 retry instruction
              2e5c e000  jmp  y,$00       12687  jmp(Y,'NEXTY')                  #21
              2e5d 00f4  ld   $f4         12688  ld(-24/2)                       #22
                                          12689
                                          12690
              2e5e 0200  nop              12691  fillers(until=0xff)
              2e5f 0200  nop
              2e60 0200  nop
              * 161 times
              2eff 0200  nop              12692  align(0x100, size=0x100)
                                          12693
              2f00 0200  nop              12694  fillers(until=0xff)
              2f01 0200  nop
              2f02 0200  nop
              * 255 times
              2fff 0200  nop              12695  align(0x100, size=0x100)
                                          12696
              3000 0200  nop              12697  fillers(until=0xff)
              3001 0200  nop
              3002 0200  nop
              * 255 times
              30ff 0200  nop              12698  align(0x100, size=0x100)
                                          12699
              3100 0200  nop              12700  fillers(until=0xff)
              3101 0200  nop
              3102 0200  nop
              * 255 times
              31ff 0200  nop              12701  align(0x100, size=0x100)
                                          12702
              3200 0200  nop              12703  fillers(until=0xff)
              3201 0200  nop
              3202 0200  nop
              * 255 times
              32ff 0200  nop              12704  align(0x100, size=0x100)
                                          12705
              3300 0200  nop              12706  fillers(until=0xff)
              3301 0200  nop
              3302 0200  nop
              * 255 times
              33ff 0200  nop              12707  align(0x100, size=0x100)
                                          12708
              3400 0200  nop              12709  fillers(until=0xff)
              3401 0200  nop
              3402 0200  nop
              * 255 times
              34ff 0200  nop              12710  align(0x100, size=0x100)
                                          12711
              3500 0200  nop              12712  fillers(until=0xff)
              3501 0200  nop
              3502 0200  nop
              * 255 times
              35ff 0200  nop              12713  align(0x100, size=0x100)
                                          12714
              3600 0200  nop              12715  fillers(until=0xff)
              3601 0200  nop
              3602 0200  nop
              * 255 times
              36ff 0200  nop              12716  align(0x100, size=0x100)
                                          12717
              3700 0200  nop              12718  fillers(until=0xff)
              3701 0200  nop
              3702 0200  nop
              * 255 times
              37ff 0200  nop              12719  align(0x100, size=0x100)
                                          12720
              3800 0200  nop              12721  fillers(until=0xff)
              3801 0200  nop
              3802 0200  nop
              * 255 times
              38ff 0200  nop              12722  align(0x100, size=0x100)
                                          12723
              3900 0200  nop              12724  fillers(until=0xff)
              3901 0200  nop
              3902 0200  nop
              * 255 times
              39ff 0200  nop              12725  align(0x100, size=0x100)
                                          12726
              3a00 0200  nop              12727  fillers(until=0xff)
              3a01 0200  nop
              3a02 0200  nop
              * 255 times
              3aff 0200  nop              12728  align(0x100, size=0x100)
                                          12729
              3b00 0200  nop              12730  fillers(until=0xff)
              3b01 0200  nop
              3b02 0200  nop
              * 255 times
              3bff 0200  nop              12731  align(0x100, size=0x100)
                                          12732
              3c00 0200  nop              12733  fillers(until=0xff)
              3c01 0200  nop
              3c02 0200  nop
              * 255 times
              3cff 0200  nop              12734  align(0x100, size=0x100)
                                          12735
              3d00 0200  nop              12736  fillers(until=0xff)
              3d01 0200  nop
              3d02 0200  nop
              * 255 times
              3dff 0200  nop              12737  align(0x100, size=0x100)
                                          12738
              3e00 0200  nop              12739  fillers(until=0xff)
              3e01 0200  nop
              3e02 0200  nop
              * 255 times
              3eff 0200  nop              12740  align(0x100, size=0x100)
                                          12741
              3f00 0200  nop              12742  fillers(until=0xff)
              3f01 0200  nop
              3f02 0200  nop
              * 255 times
              3fff 0200  nop              12743  align(0x100, size=0x100)
                                          12744
                                          12745  #-----------------------------------------------------------------------
                                          12746  #
                                          12747  #  End of core
                                          12748  #
                                          12749  #-----------------------------------------------------------------------
                                          12750  disableListing()
                                          ;+-----------------------------------+
                                          ;| SYS_Loader_vX.py                  |
                                          ;+-----------------------------------+
SYS_Loader_vX:
SYS_LoaderNextByteIn_32:
              4000 0109  ld   [$09]
              4001 6127  xora [$27]
              4002 ec0f  bne  .sysNbi#19
              4003 1124  ld   [$24],x
              4004 1525  ld   [$25],y
              4005 0300  ld   in
              4006 ce00  st   [y,x]
              4007 8126  adda [$26]
              4008 c226  st   [$26]
              4009 0124  ld   [$24]
              400a 8001  adda $01
              400b c224  st   [$24]
              400c 1403  ld   $03,y
              400d e0cb  jmp  y,$cb
              400e 00f0  ld   $f0
.sysNbi#19:   400f 0116  ld   [$16]
              4010 a002  suba $02
              4011 c216  st   [$16]
              4012 1403  ld   $03,y
              4013 e000  jmp  y,$00
              4014 00f3  ld   $f3
SYS_LoaderProcessInput_64:
              4015 1525  ld   [$25],y
              4016 0126  ld   [$26]
              4017 ec3c  bne  .sysPi#19
              4018 0124  ld   [$24]
              4019 b041  suba $41,x
              401a 0d00  ld   [y,x]
              401b de00  st   [y,x++]     ;Just X++
              401c 604c  xora $4c
              401d ec40  bne  .sysPi#25
              401e 0d00  ld   [y,x]       ;Valid command
              401f de00  st   [y,x++]     ;Just X++
              4020 203f  anda $3f
              4021 c228  st   [$28]
              4022 8d00  adda [y,x]
              4023 8001  adda $01
              4024 20fe  anda $fe
              4025 c21d  st   [$1d]
              4026 0d00  ld   [y,x]
              4027 de00  st   [y,x++]     ;Just X++
              4028 c229  st   [$29]
              4029 0d00  ld   [y,x]
              402a de00  st   [y,x++]     ;Just X++
              402b c22a  st   [$2a]
              402c a001  suba $01
              402d 20fc  anda $fc
              402e 411d  ora  [$1d]
              402f c21d  st   [$1d]
              4030 0128  ld   [$28]
              4031 ec45  bne  .sysPi#45
              4032 0129  ld   [$29]       ;Execute
              4033 c21a  st   [$1a]
              4034 a002  suba $02
              4035 c216  st   [$16]
              4036 012a  ld   [$2a]
              4037 c217  st   [$17]
              4038 c21b  st   [$1b]
              4039 1403  ld   $03,y
              403a e0cb  jmp  y,$cb
              403b 00e4  ld   $e4
.sysPi#19:    403c 0001  ld   $01         ;Wait 6 cycles
              403d ec3d  bne  $403d
              403e a001  suba $01
              403f 0200  nop              ;Invalid checksum
.sysPi#25:    4040 0067  ld   $67         ;Unknown command
              4041 c226  st   [$26]
              4042 1403  ld   $03,y
              4043 e0cb  jmp  y,$cb
              4044 00f0  ld   $f0
.sysPi#45:    4045 011d  ld   [$1d]       ;Loading data
              4046 ec49  bne  $4049
              4047 fc4a  bra  $404a
              4048 00fc  ld   $fc         ;Unsafe
              4049 00ff  ld   $ff         ;Safe
              404a 2121  anda [$21]
              404b c221  st   [$21]
              404c 0124  ld   [$24]
              404d b001  suba $01,x
              404e 0d00  ld   [y,x]
              404f c226  st   [$26]
              4050 1403  ld   $03,y
              4051 e0cb  jmp  y,$cb
              4052 00e2  ld   $e2
SYS_LoaderPayloadCopy_34:
              4053 0128  ld   [$28]
              4054 f061  beq  .sysCc#18
              4055 a001  suba $01
              4056 c228  st   [$28]
              4057 1124  ld   [$24],x
              4058 1525  ld   [$25],y
              4059 0d00  ld   [y,x]
              405a 1129  ld   [$29],x
              405b 152a  ld   [$2a],y
              405c ce00  st   [y,x]
              405d 0129  ld   [$29]
              405e 8001  adda $01
              405f c229  st   [$29]
              4060 fc65  bra  .sysCc#30
.sysCc#18:    4061 1403  ld   $03,y
              4062 0004  ld   $04         ;Wait 11 cycles
              4063 ec63  bne  $4063
              4064 a001  suba $01
.sysCc#30:    4065 e0cb  jmp  y,$cb
              4066 00ef  ld   $ef         ;End of SYS_Loader_vX.py, size 103
                                          ;+-----------------------------------+
                                          ;| SYS_Racer_v1.py                   |
                                          ;+-----------------------------------+
SYS_Racer_v1:
SYS_RacerUpdateVideoX_40:
              4067 1126  ld   [$26],x
              4068 1527  ld   [$27],y
              4069 0d00  ld   [y,x]
              406a c21d  st   [$1d]
              406b a128  suba [$28]
              406c 1124  ld   [$24],x
              406d 1525  ld   [$25],y
              406e ce00  st   [y,x]
              406f 0124  ld   [$24]
              4070 a004  suba $04
              4071 c224  st   [$24]
              4072 011d  ld   [$1d]
              4073 c228  st   [$28]
              4074 0126  ld   [$26]
              4075 8001  adda $01
              4076 c226  st   [$26]
              4077 ec7b  bne  .sysRacer0
              4078 0116  ld   [$16]
              4079 fc7d  bra  .sysRacer1
              407a 0200  nop
.sysRacer0:   407b a002  suba $02
              407c c216  st   [$16]
.sysRacer1:   407d 1403  ld   $03,y
              407e e0cb  jmp  y,$cb
              407f 00ec  ld   $ec
SYS_RacerUpdateVideoY_40:
              4080 0127  ld   [$27]
              4081 2008  anda $08
              4082 ec85  bne  $4085
              4083 fc86  bra  $4086
              4084 0000  ld   $00
              4085 0001  ld   $01
              4086 c21d  st   [$1d]
              4087 1525  ld   [$25],y
              4088 0124  ld   [$24]
              4089 8002  adda $02
              408a d224  st   [$24],x
              408b 60ee  xora $ee
              408c c218  st   [$18]
              408d c219  st   [$19]
              408e 0126  ld   [$26]
              408f 20fe  anda $fe
              4090 811d  adda [$1d]
              4091 ce00  st   [y,x]
              4092 0126  ld   [$26]
              4093 8001  adda $01
              4094 c226  st   [$26]
              4095 1403  ld   $03,y
              4096 e0cb  jmp  y,$cb
              4097 00ec  ld   $ec         ;End of SYS_Racer_v1.py, size 49
                                          ;+-----------------------------------+
                                          ;| Apps/Racer/Horizon-256x16.rgb     |
                                          ;+-----------------------------------+
              4098 dc00  st   $00,[y,x++] ;'\x00'
              4099 dc00  st   $00,[y,x++] ;'\x00'
              409a dc00  st   $00,[y,x++] ;'\x00'
              409b dc00  st   $00,[y,x++] ;'\x00'
              409c dc00  st   $00,[y,x++] ;'\x00'
              409d dc00  st   $00,[y,x++] ;'\x00'
              409e dc00  st   $00,[y,x++] ;'\x00'
              409f dc00  st   $00,[y,x++] ;'\x00'
              40a0 0000  ld   $00
              40a1 c218  st   [$18]
              40a2 0000  ld   $00
              40a3 14df  ld   $df,y
              40a4 e0ac  jmp  y,$ac
              40a5 c219  st   [$19]
zippedRacerHorizon:
              40a6 0041  ld   $41
              40a7 0000  ld   $00
              40a8 00c3  ld   $c3
              40a9 0030  ld   $30
              40aa 000c  ld   $0c
              40ab 00c3  ld   $c3
              40ac 0030  ld   $30
              40ad 000c  ld   $0c
              40ae 00c3  ld   $c3
              40af 0030  ld   $30
              40b0 000c  ld   $0c
              40b1 00c3  ld   $c3
              40b2 0030  ld   $30
              40b3 000c  ld   $0c
              40b4 00c3  ld   $c3
              40b5 0030  ld   $30
              40b6 000c  ld   $0c
              40b7 00c3  ld   $c3
              40b8 0030  ld   $30
              40b9 000c  ld   $0c
              40ba 00c3  ld   $c3
              40bb 0030  ld   $30
              40bc 000c  ld   $0c
              40bd 00c3  ld   $c3
              40be 0000  ld   $00
              40bf 000c  ld   $0c
              40c0 00c3  ld   $c3
              40c1 0030  ld   $30
              40c2 000c  ld   $0c
              40c3 00c3  ld   $c3
              40c4 0030  ld   $30
              40c5 00fc  ld   $fc
              40c6 0002  ld   $02
              40c7 0030  ld   $30
              40c8 000c  ld   $0c
              40c9 00c3  ld   $c3
              40ca 0030  ld   $30
              40cb 000c  ld   $0c
              40cc 00c3  ld   $c3
              40cd 0030  ld   $30
              40ce 000c  ld   $0c
              40cf 00c3  ld   $c3
              40d0 0030  ld   $30
              40d1 000c  ld   $0c
              40d2 00c3  ld   $c3
              40d3 0030  ld   $30
              40d4 000c  ld   $0c
              40d5 00c3  ld   $c3
              40d6 0030  ld   $30
              40d7 000c  ld   $0c
              40d8 00c3  ld   $c3
              40d9 0030  ld   $30
              40da 000c  ld   $0c
              40db 00c3  ld   $c3
              40dc 0030  ld   $30
              40dd 000c  ld   $0c
              40de 00c3  ld   $c3
              40df 0030  ld   $30
              40e0 000c  ld   $0c
              40e1 00c3  ld   $c3
              40e2 0030  ld   $30
              40e3 000c  ld   $0c
              40e4 00c3  ld   $c3
              40e5 0030  ld   $30
              40e6 000c  ld   $0c
              40e7 00c3  ld   $c3
              40e8 0030  ld   $30
              40e9 000c  ld   $0c
              40ea 00c3  ld   $c3
              40eb 0030  ld   $30
              40ec 000c  ld   $0c
              40ed 00c3  ld   $c3
              40ee 0030  ld   $30
              40ef 000c  ld   $0c
              40f0 00c3  ld   $c3
              40f1 0030  ld   $30
              40f2 000c  ld   $0c
              40f3 00c3  ld   $c3
              40f4 0030  ld   $30
              40f5 000c  ld   $0c
              40f6 00c3  ld   $c3
              40f7 0030  ld   $30
              40f8 000c  ld   $0c
              40f9 00c3  ld   $c3
              40fa 0013  ld   $13
              40fb fe00  bra  ac          ;+-----------------------------------+
              40fc fcfd  bra  $40fd       ;|                                   |
              40fd 1418  ld   $18,y       ;| Trampoline for page $4000 lookups |
              40fe e006  jmp  y,$06       ;|                                   |
              40ff c218  st   [$18]       ;+-----------------------------------+
              4100 000c  ld   $0c
              4101 00c3  ld   $c3
              4102 0030  ld   $30
              4103 000c  ld   $0c
              4104 00c3  ld   $c3
              4105 002a  ld   $2a
              4106 000c  ld   $0c
              4107 00c3  ld   $c3
              4108 0030  ld   $30
              4109 000c  ld   $0c
              410a 00c3  ld   $c3
              410b 0030  ld   $30
              410c 000c  ld   $0c
              410d 00c3  ld   $c3
              410e 0030  ld   $30
              410f 000c  ld   $0c
              4110 00c3  ld   $c3
              4111 0030  ld   $30
              4112 000c  ld   $0c
              4113 00c3  ld   $c3
              4114 0030  ld   $30
              4115 000c  ld   $0c
              4116 00c3  ld   $c3
              4117 0030  ld   $30
              4118 000c  ld   $0c
              4119 00c3  ld   $c3
              411a 0030  ld   $30
              411b 000c  ld   $0c
              411c 00c3  ld   $c3
              411d 0030  ld   $30
              411e 000c  ld   $0c
              411f 00c3  ld   $c3
              4120 0030  ld   $30
              4121 000c  ld   $0c
              4122 00c3  ld   $c3
              4123 0030  ld   $30
              4124 000c  ld   $0c
              4125 00c3  ld   $c3
              4126 0030  ld   $30
              4127 000c  ld   $0c
              4128 00c3  ld   $c3
              4129 0030  ld   $30
              412a 000c  ld   $0c
              412b 00ab  ld   $ab
              412c 002a  ld   $2a
              412d 000c  ld   $0c
              412e 00c3  ld   $c3
              412f 0030  ld   $30
              4130 000c  ld   $0c
              4131 00c3  ld   $c3
              4132 0030  ld   $30
              4133 000c  ld   $0c
              4134 00c3  ld   $c3
              4135 0030  ld   $30
              4136 000c  ld   $0c
              4137 00c3  ld   $c3
              4138 0030  ld   $30
              4139 000c  ld   $0c
              413a 00c3  ld   $c3
              413b 00f0  ld   $f0
              413c 000f  ld   $0f
              413d 00c3  ld   $c3
              413e 0030  ld   $30
              413f 000c  ld   $0c
              4140 00c3  ld   $c3
              4141 00f0  ld   $f0
              4142 000f  ld   $0f
              4143 00c3  ld   $c3
              4144 0030  ld   $30
              4145 000c  ld   $0c
              4146 00c3  ld   $c3
              4147 003f  ld   $3f
              4148 000c  ld   $0c
              4149 00c3  ld   $c3
              414a 0030  ld   $30
              414b 000c  ld   $0c
              414c 00c3  ld   $c3
              414d 0030  ld   $30
              414e 000c  ld   $0c
              414f 00c3  ld   $c3
              4150 0030  ld   $30
              4151 000c  ld   $0c
              4152 00c3  ld   $c3
              4153 0030  ld   $30
              4154 000c  ld   $0c
              4155 00c3  ld   $c3
              4156 0030  ld   $30
              4157 000c  ld   $0c
              4158 00c3  ld   $c3
              4159 0030  ld   $30
              415a 000c  ld   $0c
              415b 00c3  ld   $c3
              415c 0030  ld   $30
              415d 000c  ld   $0c
              415e 00c3  ld   $c3
              415f 0015  ld   $15
              4160 000c  ld   $0c
              4161 00c3  ld   $c3
              4162 0030  ld   $30
              4163 000c  ld   $0c
              4164 00c3  ld   $c3
              4165 0030  ld   $30
              4166 000c  ld   $0c
              4167 00c3  ld   $c3
              4168 0030  ld   $30
              4169 001c  ld   $1c
              416a 0004  ld   $04
              416b 006b  ld   $6b
              416c 0000  ld   $00
              416d 00c3  ld   $c3
              416e 0030  ld   $30
              416f 000c  ld   $0c
              4170 00c3  ld   $c3
              4171 0030  ld   $30
              4172 000c  ld   $0c
              4173 00c3  ld   $c3
              4174 0030  ld   $30
              4175 000c  ld   $0c
              4176 00c3  ld   $c3
              4177 0030  ld   $30
              4178 000c  ld   $0c
              4179 00c3  ld   $c3
              417a 0030  ld   $30
              417b 000c  ld   $0c
              417c 00c3  ld   $c3
              417d 0030  ld   $30
              417e 000c  ld   $0c
              417f 00c3  ld   $c3
              4180 0030  ld   $30
              4181 000c  ld   $0c
              4182 00c3  ld   $c3
              4183 003f  ld   $3f
              4184 0000  ld   $00
              4185 00c3  ld   $c3
              4186 0030  ld   $30
              4187 000c  ld   $0c
              4188 00c3  ld   $c3
              4189 00f0  ld   $f0
              418a 000f  ld   $0f
              418b 00c0  ld   $c0
              418c 0030  ld   $30
              418d 000c  ld   $0c
              418e 00c3  ld   $c3
              418f 0030  ld   $30
              4190 000c  ld   $0c
              4191 00c3  ld   $c3
              4192 0030  ld   $30
              4193 000c  ld   $0c
              4194 00c3  ld   $c3
              4195 0030  ld   $30
              4196 000c  ld   $0c
              4197 00c3  ld   $c3
              4198 0030  ld   $30
              4199 000c  ld   $0c
              419a 00c3  ld   $c3
              419b 0030  ld   $30
              419c 000c  ld   $0c
              419d 00c3  ld   $c3
              419e 0030  ld   $30
              419f 000c  ld   $0c
              41a0 00c3  ld   $c3
              41a1 0030  ld   $30
              41a2 000c  ld   $0c
              41a3 00c3  ld   $c3
              41a4 0030  ld   $30
              41a5 000c  ld   $0c
              41a6 00c3  ld   $c3
              41a7 0030  ld   $30
              41a8 000c  ld   $0c
              41a9 00c3  ld   $c3
              41aa 0030  ld   $30
              41ab 000c  ld   $0c
              41ac 00c3  ld   $c3
              41ad 0030  ld   $30
              41ae 000c  ld   $0c
              41af 00c3  ld   $c3
              41b0 0030  ld   $30
              41b1 000c  ld   $0c
              41b2 00c3  ld   $c3
              41b3 0030  ld   $30
              41b4 000c  ld   $0c
              41b5 00c3  ld   $c3
              41b6 0030  ld   $30
              41b7 000c  ld   $0c
              41b8 00c3  ld   $c3
              41b9 0030  ld   $30
              41ba 000c  ld   $0c
              41bb 00c3  ld   $c3
              41bc 0030  ld   $30
              41bd 000c  ld   $0c
              41be 00c3  ld   $c3
              41bf 002a  ld   $2a
              41c0 000c  ld   $0c
              41c1 00c3  ld   $c3
              41c2 0030  ld   $30
              41c3 000c  ld   $0c
              41c4 00ab  ld   $ab
              41c5 002a  ld   $2a
              41c6 000c  ld   $0c
              41c7 00c3  ld   $c3
              41c8 0030  ld   $30
              41c9 000c  ld   $0c
              41ca 00c3  ld   $c3
              41cb 0030  ld   $30
              41cc 000c  ld   $0c
              41cd 00c3  ld   $c3
              41ce 0030  ld   $30
              41cf 000c  ld   $0c
              41d0 00c3  ld   $c3
              41d1 0030  ld   $30
              41d2 000c  ld   $0c
              41d3 00c3  ld   $c3
              41d4 00ff  ld   $ff
              41d5 00fb  ld   $fb
              41d6 00bf  ld   $bf
              41d7 003f  ld   $3f
              41d8 000c  ld   $0c
              41d9 00c3  ld   $c3
              41da 0030  ld   $30
              41db 000c  ld   $0c
              41dc 00c3  ld   $c3
              41dd 0030  ld   $30
              41de 000c  ld   $0c
              41df 00c3  ld   $c3
              41e0 0030  ld   $30
              41e1 000c  ld   $0c
              41e2 00c3  ld   $c3
              41e3 0030  ld   $30
              41e4 000c  ld   $0c
              41e5 00c3  ld   $c3
              41e6 0030  ld   $30
              41e7 000c  ld   $0c
              41e8 00c3  ld   $c3
              41e9 0030  ld   $30
              41ea 00ac  ld   $ac
              41eb 0056  ld   $56
              41ec 0095  ld   $95
              41ed 000a  ld   $0a
              41ee 00c3  ld   $c3
              41ef 0030  ld   $30
              41f0 000c  ld   $0c
              41f1 00c3  ld   $c3
              41f2 0030  ld   $30
              41f3 000c  ld   $0c
              41f4 00c3  ld   $c3
              41f5 0030  ld   $30
              41f6 000c  ld   $0c
              41f7 00c3  ld   $c3
              41f8 0030  ld   $30
              41f9 000c  ld   $0c
              41fa 00c3  ld   $c3
              41fb fe00  bra  ac          ;+-----------------------------------+
              41fc fcfd  bra  $41fd       ;|                                   |
              41fd 1418  ld   $18,y       ;| Trampoline for page $4100 lookups |
              41fe e006  jmp  y,$06       ;|                                   |
              41ff c218  st   [$18]       ;+-----------------------------------+
              4200 00f0  ld   $f0
              4201 00ff  ld   $ff
              4202 00c3  ld   $c3
              4203 0030  ld   $30
              4204 000c  ld   $0c
              4205 00c3  ld   $c3
              4206 00f0  ld   $f0
              4207 00ff  ld   $ff
              4208 00c3  ld   $c3
              4209 0030  ld   $30
              420a 000c  ld   $0c
              420b 00c3  ld   $c3
              420c 00ff  ld   $ff
              420d 000f  ld   $0f
              420e 00c3  ld   $c3
              420f 0030  ld   $30
              4210 000c  ld   $0c
              4211 00c3  ld   $c3
              4212 0030  ld   $30
              4213 000c  ld   $0c
              4214 00c3  ld   $c3
              4215 0030  ld   $30
              4216 000c  ld   $0c
              4217 00c3  ld   $c3
              4218 0030  ld   $30
              4219 000c  ld   $0c
              421a 00c3  ld   $c3
              421b 0030  ld   $30
              421c 000c  ld   $0c
              421d 00c3  ld   $c3
              421e 0030  ld   $30
              421f 000c  ld   $0c
              4220 00c3  ld   $c3
              4221 0030  ld   $30
              4222 000c  ld   $0c
              4223 00c3  ld   $c3
              4224 0015  ld   $15
              4225 000c  ld   $0c
              4226 00c3  ld   $c3
              4227 0030  ld   $30
              4228 000c  ld   $0c
              4229 00c3  ld   $c3
              422a 0030  ld   $30
              422b 000c  ld   $0c
              422c 00c3  ld   $c3
              422d 0030  ld   $30
              422e 001c  ld   $1c
              422f 00ac  ld   $ac
              4230 0056  ld   $56
              4231 0060  ld   $60
              4232 0059  ld   $59
              4233 0030  ld   $30
              4234 000c  ld   $0c
              4235 00c3  ld   $c3
              4236 0070  ld   $70
              4237 0055  ld   $55
              4238 00fd  ld   $fd
              4239 0055  ld   $55
              423a 00f5  ld   $f5
              423b 0057  ld   $57
              423c 00d5  ld   $d5
              423d 005f  ld   $5f
              423e 0055  ld   $55
              423f 007f  ld   $7f
              4240 0055  ld   $55
              4241 00fd  ld   $fd
              4242 0055  ld   $55
              4243 0005  ld   $05
              4244 00c3  ld   $c3
              4245 0030  ld   $30
              4246 000c  ld   $0c
              4247 00c3  ld   $c3
              4248 00f0  ld   $f0
              4249 000b  ld   $0b
              424a 00c0  ld   $c0
              424b 0030  ld   $30
              424c 000c  ld   $0c
              424d 00c3  ld   $c3
              424e 002f  ld   $2f
              424f 0000  ld   $00
              4250 00c3  ld   $c3
              4251 0030  ld   $30
              4252 000c  ld   $0c
              4253 00c3  ld   $c3
              4254 0030  ld   $30
              4255 000c  ld   $0c
              4256 00c3  ld   $c3
              4257 0030  ld   $30
              4258 000c  ld   $0c
              4259 00c3  ld   $c3
              425a 0030  ld   $30
              425b 000c  ld   $0c
              425c 00c3  ld   $c3
              425d 0030  ld   $30
              425e 000c  ld   $0c
              425f 00c3  ld   $c3
              4260 0030  ld   $30
              4261 000c  ld   $0c
              4262 00c3  ld   $c3
              4263 0030  ld   $30
              4264 000c  ld   $0c
              4265 00c3  ld   $c3
              4266 0030  ld   $30
              4267 000c  ld   $0c
              4268 00c3  ld   $c3
              4269 0030  ld   $30
              426a 000c  ld   $0c
              426b 00c3  ld   $c3
              426c 0030  ld   $30
              426d 000c  ld   $0c
              426e 00c3  ld   $c3
              426f 0030  ld   $30
              4270 000c  ld   $0c
              4271 00c3  ld   $c3
              4272 0030  ld   $30
              4273 000c  ld   $0c
              4274 00c3  ld   $c3
              4275 0030  ld   $30
              4276 000c  ld   $0c
              4277 00c3  ld   $c3
              4278 0030  ld   $30
              4279 000c  ld   $0c
              427a 00c3  ld   $c3
              427b 0030  ld   $30
              427c 000c  ld   $0c
              427d 00c3  ld   $c3
              427e 0030  ld   $30
              427f 000c  ld   $0c
              4280 00c3  ld   $c3
              4281 0030  ld   $30
              4282 000c  ld   $0c
              4283 00c3  ld   $c3
              4284 002a  ld   $2a
              4285 000c  ld   $0c
              4286 00c3  ld   $c3
              4287 00b0  ld   $b0
              4288 00aa  ld   $aa
              4289 00aa  ld   $aa
              428a 002a  ld   $2a
              428b 000c  ld   $0c
              428c 00c3  ld   $c3
              428d 0030  ld   $30
              428e 000c  ld   $0c
              428f 00c3  ld   $c3
              4290 0030  ld   $30
              4291 000c  ld   $0c
              4292 00c3  ld   $c3
              4293 0030  ld   $30
              4294 000c  ld   $0c
              4295 00c3  ld   $c3
              4296 0030  ld   $30
              4297 000c  ld   $0c
              4298 00bf  ld   $bf
              4299 0091  ld   $91
              429a 00f4  ld   $f4
              429b 0046  ld   $46
              429c 00d2  ld   $d2
              429d 000b  ld   $0b
              429e 00c3  ld   $c3
              429f 0030  ld   $30
              42a0 000c  ld   $0c
              42a1 00c3  ld   $c3
              42a2 0030  ld   $30
              42a3 000c  ld   $0c
              42a4 00c3  ld   $c3
              42a5 0030  ld   $30
              42a6 000c  ld   $0c
              42a7 00c3  ld   $c3
              42a8 0030  ld   $30
              42a9 000c  ld   $0c
              42aa 00c3  ld   $c3
              42ab 0030  ld   $30
              42ac 00ac  ld   $ac
              42ad 00c2  ld   $c2
              42ae 00b0  ld   $b0
              42af 00aa  ld   $aa
              42b0 00aa  ld   $aa
              42b1 00aa  ld   $aa
              42b2 00aa  ld   $aa
              42b3 00c2  ld   $c2
              42b4 00b0  ld   $b0
              42b5 000a  ld   $0a
              42b6 00c3  ld   $c3
              42b7 0030  ld   $30
              42b8 000c  ld   $0c
              42b9 00c3  ld   $c3
              42ba 0030  ld   $30
              42bb 000c  ld   $0c
              42bc 00c3  ld   $c3
              42bd 0030  ld   $30
              42be 000c  ld   $0c
              42bf 00c3  ld   $c3
              42c0 0030  ld   $30
              42c1 00ac  ld   $ac
              42c2 00fe  ld   $fe
              42c3 00ff  ld   $ff
              42c4 003f  ld   $3f
              42c5 00c0  ld   $c0
              42c6 0030  ld   $30
              42c7 00ac  ld   $ac
              42c8 00fe  ld   $fe
              42c9 00ff  ld   $ff
              42ca 003f  ld   $3f
              42cb 00c0  ld   $c0
              42cc 00b0  ld   $b0
              42cd 00fa  ld   $fa
              42ce 00ff  ld   $ff
              42cf 00ff  ld   $ff
              42d0 0000  ld   $00
              42d1 00c3  ld   $c3
              42d2 0030  ld   $30
              42d3 000c  ld   $0c
              42d4 00c3  ld   $c3
              42d5 0030  ld   $30
              42d6 000c  ld   $0c
              42d7 00c3  ld   $c3
              42d8 0030  ld   $30
              42d9 000c  ld   $0c
              42da 00c3  ld   $c3
              42db 0030  ld   $30
              42dc 000c  ld   $0c
              42dd 00c3  ld   $c3
              42de 0030  ld   $30
              42df 000c  ld   $0c
              42e0 00c3  ld   $c3
              42e1 0030  ld   $30
              42e2 000c  ld   $0c
              42e3 0057  ld   $57
              42e4 0055  ld   $55
              42e5 0005  ld   $05
              42e6 00c3  ld   $c3
              42e7 0030  ld   $30
              42e8 000c  ld   $0c
              42e9 00c3  ld   $c3
              42ea 0030  ld   $30
              42eb 000c  ld   $0c
              42ec 00c3  ld   $c3
              42ed 0096  ld   $96
              42ee 0015  ld   $15
              42ef 0058  ld   $58
              42f0 006b  ld   $6b
              42f1 00b0  ld   $b0
              42f2 00ae  ld   $ae
              42f3 0030  ld   $30
              42f4 000c  ld   $0c
              42f5 00c3  ld   $c3
              42f6 00f0  ld   $f0
              42f7 00ff  ld   $ff
              42f8 00ff  ld   $ff
              42f9 00ff  ld   $ff
              42fa 00ff  ld   $ff
              42fb fe00  bra  ac          ;+-----------------------------------+
              42fc fcfd  bra  $42fd       ;|                                   |
              42fd 1418  ld   $18,y       ;| Trampoline for page $4200 lookups |
              42fe e006  jmp  y,$06       ;|                                   |
              42ff c218  st   [$18]       ;+-----------------------------------+
              4300 00ff  ld   $ff
              4301 00ff  ld   $ff
              4302 00ff  ld   $ff
              * 8 times
              4308 000f  ld   $0f
              4309 00c3  ld   $c3
              430a 0030  ld   $30
              430b 000c  ld   $0c
              430c 00c3  ld   $c3
              430d 0030  ld   $30
              430e 00fc  ld   $fc
              430f 0003  ld   $03
              4310 0030  ld   $30
              4311 000c  ld   $0c
              4312 00ff  ld   $ff
              4313 0000  ld   $00
              4314 000c  ld   $0c
              4315 00c3  ld   $c3
              4316 0030  ld   $30
              4317 000c  ld   $0c
              4318 00c3  ld   $c3
              4319 0030  ld   $30
              431a 00fc  ld   $fc
              431b 00bf  ld   $bf
              431c 0030  ld   $30
              431d 000c  ld   $0c
              431e 00c3  ld   $c3
              431f 0030  ld   $30
              4320 000c  ld   $0c
              4321 00c3  ld   $c3
              4322 0030  ld   $30
              4323 000c  ld   $0c
              4324 00c3  ld   $c3
              4325 0030  ld   $30
              4326 000c  ld   $0c
              4327 00c3  ld   $c3
              4328 0030  ld   $30
              4329 000c  ld   $0c
              432a 00c3  ld   $c3
              432b 0030  ld   $30
              432c 000c  ld   $0c
              432d 00c3  ld   $c3
              432e 0030  ld   $30
              432f 000c  ld   $0c
              4330 00c3  ld   $c3
              4331 0030  ld   $30
              4332 000c  ld   $0c
              4333 00c3  ld   $c3
              4334 0030  ld   $30
              4335 000c  ld   $0c
              4336 00c3  ld   $c3
              4337 0030  ld   $30
              4338 000c  ld   $0c
              4339 00c3  ld   $c3
              433a 0030  ld   $30
              433b 000c  ld   $0c
              433c 00c3  ld   $c3
              433d 0030  ld   $30
              433e 000c  ld   $0c
              433f 00c3  ld   $c3
              4340 0030  ld   $30
              4341 000c  ld   $0c
              4342 00c3  ld   $c3
              4343 0030  ld   $30
              4344 000c  ld   $0c
              4345 00c3  ld   $c3
              4346 00f0  ld   $f0
              4347 00ff  ld   $ff
              4348 00ab  ld   $ab
              4349 00ff  ld   $ff
              434a 000f  ld   $0f
              434b 00c3  ld   $c3
              434c 006a  ld   $6a
              434d 00a5  ld   $a5
              434e 0056  ld   $56
              434f 002a  ld   $2a
              4350 000c  ld   $0c
              4351 00c3  ld   $c3
              4352 0030  ld   $30
              4353 000c  ld   $0c
              4354 00c3  ld   $c3
              4355 0030  ld   $30
              4356 000c  ld   $0c
              4357 00c3  ld   $c3
              4358 0030  ld   $30
              4359 000c  ld   $0c
              435a 00c3  ld   $c3
              435b 0030  ld   $30
              435c 00fc  ld   $fc
              435d 004a  ld   $4a
              435e 0030  ld   $30
              435f 00fc  ld   $fc
              4360 00c2  ld   $c2
              4361 0070  ld   $70
              4362 00f4  ld   $f4
              4363 00c2  ld   $c2
              4364 0030  ld   $30
              4365 000c  ld   $0c
              4366 00c3  ld   $c3
              4367 0030  ld   $30
              4368 000c  ld   $0c
              4369 00c3  ld   $c3
              436a 0030  ld   $30
              436b 000c  ld   $0c
              436c 00c3  ld   $c3
              436d 0030  ld   $30
              436e 000c  ld   $0c
              436f 00c3  ld   $c3
              4370 00f0  ld   $f0
              4371 00af  ld   $af
              4372 00fe  ld   $fe
              4373 00aa  ld   $aa
              4374 00aa  ld   $aa
              4375 00aa  ld   $aa
              * 6 times
              4379 00bf  ld   $bf
              437a 00fa  ld   $fa
              437b 00c3  ld   $c3
              437c 0030  ld   $30
              437d 000c  ld   $0c
              437e 00c3  ld   $c3
              437f 0030  ld   $30
              4380 000c  ld   $0c
              4381 00c3  ld   $c3
              4382 0030  ld   $30
              4383 000c  ld   $0c
              4384 00c3  ld   $c3
              4385 00f0  ld   $f0
              4386 00ff  ld   $ff
              4387 00ff  ld   $ff
              4388 0030  ld   $30
              4389 000c  ld   $0c
              438a 00c3  ld   $c3
              438b 00f0  ld   $f0
              438c 00ff  ld   $ff
              438d 00ff  ld   $ff
              438e 0030  ld   $30
              438f 000c  ld   $0c
              4390 00c3  ld   $c3
              4391 00ff  ld   $ff
              4392 00ff  ld   $ff
              4393 00c3  ld   $c3
              4394 0030  ld   $30
              4395 000c  ld   $0c
              4396 00c3  ld   $c3
              4397 0030  ld   $30
              4398 000c  ld   $0c
              4399 00c3  ld   $c3
              439a 0030  ld   $30
              439b 000c  ld   $0c
              439c 00c3  ld   $c3
              439d 0030  ld   $30
              439e 000c  ld   $0c
              439f 00c3  ld   $c3
              43a0 0030  ld   $30
              43a1 000c  ld   $0c
              43a2 00c3  ld   $c3
              43a3 0030  ld   $30
              43a4 000c  ld   $0c
              43a5 00c3  ld   $c3
              43a6 0030  ld   $30
              43a7 000c  ld   $0c
              43a8 00c3  ld   $c3
              43a9 0015  ld   $15
              43aa 000c  ld   $0c
              43ab 00c3  ld   $c3
              43ac 0030  ld   $30
              43ad 000c  ld   $0c
              43ae 00c3  ld   $c3
              43af 0030  ld   $30
              43b0 000c  ld   $0c
              43b1 00c3  ld   $c3
              43b2 00eb  ld   $eb
              43b3 001a  ld   $1a
              43b4 00ac  ld   $ac
              43b5 0056  ld   $56
              43b6 00b0  ld   $b0
              43b7 00a6  ld   $a6
              43b8 0030  ld   $30
              43b9 000c  ld   $0c
              43ba 00c3  ld   $c3
              43bb 0070  ld   $70
              43bc 0055  ld   $55
              43bd 00fd  ld   $fd
              43be 0055  ld   $55
              43bf 00f5  ld   $f5
              43c0 0057  ld   $57
              43c1 00d5  ld   $d5
              43c2 005f  ld   $5f
              43c3 0055  ld   $55
              43c4 007f  ld   $7f
              43c5 0055  ld   $55
              43c6 00fd  ld   $fd
              43c7 0055  ld   $55
              43c8 0005  ld   $05
              43c9 00c3  ld   $c3
              43ca 0030  ld   $30
              43cb 000c  ld   $0c
              43cc 00c3  ld   $c3
              43cd 0030  ld   $30
              43ce 000c  ld   $0c
              43cf 00bf  ld   $bf
              43d0 0000  ld   $00
              43d1 00fc  ld   $fc
              43d2 0002  ld   $02
              43d3 0030  ld   $30
              43d4 000c  ld   $0c
              43d5 00c3  ld   $c3
              43d6 0030  ld   $30
              43d7 000c  ld   $0c
              43d8 00c3  ld   $c3
              43d9 0030  ld   $30
              43da 006c  ld   $6c
              43db 00fc  ld   $fc
              43dc 0030  ld   $30
              43dd 000c  ld   $0c
              43de 00c3  ld   $c3
              43df 0030  ld   $30
              43e0 000c  ld   $0c
              43e1 00c3  ld   $c3
              43e2 0030  ld   $30
              43e3 000c  ld   $0c
              43e4 00c3  ld   $c3
              43e5 0030  ld   $30
              43e6 000c  ld   $0c
              43e7 00c3  ld   $c3
              43e8 0030  ld   $30
              43e9 000c  ld   $0c
              43ea 00c3  ld   $c3
              43eb 0030  ld   $30
              43ec 000c  ld   $0c
              43ed 00c3  ld   $c3
              43ee 0030  ld   $30
              43ef 000c  ld   $0c
              43f0 00c3  ld   $c3
              43f1 0030  ld   $30
              43f2 000c  ld   $0c
              43f3 00c3  ld   $c3
              43f4 0030  ld   $30
              43f5 000c  ld   $0c
              43f6 00c3  ld   $c3
              43f7 0030  ld   $30
              43f8 000c  ld   $0c
              43f9 00c3  ld   $c3
              43fa 0030  ld   $30
              43fb fe00  bra  ac          ;+-----------------------------------+
              43fc fcfd  bra  $43fd       ;|                                   |
              43fd 1418  ld   $18,y       ;| Trampoline for page $4300 lookups |
              43fe e006  jmp  y,$06       ;|                                   |
              43ff c218  st   [$18]       ;+-----------------------------------+
              4400 000c  ld   $0c
              4401 00c3  ld   $c3
              4402 0030  ld   $30
              4403 000c  ld   $0c
              4404 00c3  ld   $c3
              4405 0030  ld   $30
              4406 000c  ld   $0c
              4407 00c3  ld   $c3
              4408 0030  ld   $30
              4409 000c  ld   $0c
              440a 00c3  ld   $c3
              440b 00f0  ld   $f0
              440c 00af  ld   $af
              440d 00fe  ld   $fe
              440e 00ea  ld   $ea
              440f 000f  ld   $0f
              4410 00ab  ld   $ab
              4411 00aa  ld   $aa
              4412 00aa  ld   $aa
              4413 00aa  ld   $aa
              4414 002a  ld   $2a
              4415 000c  ld   $0c
              4416 00c3  ld   $c3
              4417 0030  ld   $30
              4418 000c  ld   $0c
              4419 00c3  ld   $c3
              441a 0030  ld   $30
              441b 000c  ld   $0c
              441c 00c3  ld   $c3
              441d 0030  ld   $30
              441e 000c  ld   $0c
              441f 00c3  ld   $c3
              4420 00f0  ld   $f0
              4421 001b  ld   $1b
              4422 00bd  ld   $bd
              4423 0030  ld   $30
              4424 00fc  ld   $fc
              4425 00c2  ld   $c2
              4426 00f0  ld   $f0
              4427 002b  ld   $2b
              4428 00bd  ld   $bd
              4429 0030  ld   $30
              442a 000c  ld   $0c
              442b 00c3  ld   $c3
              442c 0030  ld   $30
              442d 000c  ld   $0c
              442e 00c3  ld   $c3
              442f 0030  ld   $30
              4430 000c  ld   $0c
              4431 00c3  ld   $c3
              4432 0030  ld   $30
              4433 000c  ld   $0c
              4434 00c3  ld   $c3
              4435 00f0  ld   $f0
              4436 00af  ld   $af
              4437 00ab  ld   $ab
              4438 0095  ld   $95
              4439 005a  ld   $5a
              443a 0055  ld   $55
              443b 006a  ld   $6a
              443c 00a5  ld   $a5
              443d 0056  ld   $56
              443e 00aa  ld   $aa
              443f 00fe  ld   $fe
              4440 00c3  ld   $c3
              4441 0030  ld   $30
              4442 000c  ld   $0c
              4443 00c3  ld   $c3
              4444 0030  ld   $30
              4445 000c  ld   $0c
              4446 00c3  ld   $c3
              4447 0030  ld   $30
              4448 000c  ld   $0c
              4449 00c3  ld   $c3
              444a 00ff  ld   $ff
              444b 00af  ld   $af
              444c 00fe  ld   $fe
              444d 0030  ld   $30
              444e 000c  ld   $0c
              444f 00c3  ld   $c3
              4450 00ff  ld   $ff
              4451 00af  ld   $af
              4452 00fe  ld   $fe
              4453 0030  ld   $30
              4454 000c  ld   $0c
              4455 00ff  ld   $ff
              4456 00bf  ld   $bf
              4457 00fa  ld   $fa
              4458 00c3  ld   $c3
              4459 0030  ld   $30
              445a 000c  ld   $0c
              445b 00c3  ld   $c3
              445c 0030  ld   $30
              445d 000c  ld   $0c
              445e 00c3  ld   $c3
              445f 0030  ld   $30
              4460 000c  ld   $0c
              4461 00c3  ld   $c3
              4462 0030  ld   $30
              4463 000c  ld   $0c
              4464 00c3  ld   $c3
              4465 0030  ld   $30
              4466 000c  ld   $0c
              4467 00c3  ld   $c3
              4468 0030  ld   $30
              4469 000c  ld   $0c
              446a 00c3  ld   $c3
              446b 0030  ld   $30
              446c 000c  ld   $0c
              446d 00ab  ld   $ab
              446e 0095  ld   $95
              446f 000a  ld   $0a
              4470 00c3  ld   $c3
              4471 0030  ld   $30
              4472 000c  ld   $0c
              4473 00c3  ld   $c3
              4474 0030  ld   $30
              4475 000c  ld   $0c
              4476 00c3  ld   $c3
              4477 00e9  ld   $e9
              4478 001a  ld   $1a
              4479 0058  ld   $58
              447a 0041  ld   $41
              447b 00b0  ld   $b0
              447c 00ae  ld   $ae
              447d 0030  ld   $30
              447e 000c  ld   $0c
              447f 00c3  ld   $c3
              4480 00b0  ld   $b0
              4481 00ae  ld   $ae
              4482 00fe  ld   $fe
              4483 00aa  ld   $aa
              4484 00fe  ld   $fe
              4485 00ab  ld   $ab
              4486 00ea  ld   $ea
              4487 00af  ld   $af
              4488 00ab  ld   $ab
              4489 00bf  ld   $bf
              448a 00aa  ld   $aa
              448b 00ff  ld   $ff
              448c 00aa  ld   $aa
              448d 000e  ld   $0e
              448e 00c3  ld   $c3
              448f 0030  ld   $30
              4490 000c  ld   $0c
              4491 00c3  ld   $c3
              4492 0030  ld   $30
              4493 000c  ld   $0c
              4494 00c3  ld   $c3
              4495 007f  ld   $7f
              4496 0005  ld   $05
              4497 00c0  ld   $c0
              4498 0030  ld   $30
              4499 000c  ld   $0c
              449a 00c3  ld   $c3
              449b 0030  ld   $30
              449c 000c  ld   $0c
              449d 00c3  ld   $c3
              449e 0030  ld   $30
              449f 00bc  ld   $bc
              44a0 00bc  ld   $bc
              44a1 0030  ld   $30
              44a2 000c  ld   $0c
              44a3 00c3  ld   $c3
              44a4 0030  ld   $30
              44a5 000c  ld   $0c
              44a6 00c3  ld   $c3
              44a7 0030  ld   $30
              44a8 000c  ld   $0c
              44a9 00c3  ld   $c3
              44aa 0030  ld   $30
              44ab 000c  ld   $0c
              44ac 00c3  ld   $c3
              44ad 0030  ld   $30
              44ae 000c  ld   $0c
              44af 00c3  ld   $c3
              44b0 0030  ld   $30
              44b1 000c  ld   $0c
              44b2 00c3  ld   $c3
              44b3 0030  ld   $30
              44b4 000c  ld   $0c
              44b5 00c3  ld   $c3
              44b6 0030  ld   $30
              44b7 000c  ld   $0c
              44b8 00c3  ld   $c3
              44b9 0030  ld   $30
              44ba 000c  ld   $0c
              44bb 00c3  ld   $c3
              44bc 0030  ld   $30
              44bd 000c  ld   $0c
              44be 00c3  ld   $c3
              44bf 0030  ld   $30
              44c0 000c  ld   $0c
              44c1 00c3  ld   $c3
              44c2 0030  ld   $30
              44c3 000c  ld   $0c
              44c4 00c3  ld   $c3
              44c5 0030  ld   $30
              44c6 000c  ld   $0c
              44c7 00c3  ld   $c3
              44c8 0030  ld   $30
              44c9 000c  ld   $0c
              44ca 00c3  ld   $c3
              44cb 00b0  ld   $b0
              44cc 00fa  ld   $fa
              44cd 00ab  ld   $ab
              44ce 00bf  ld   $bf
              44cf 000a  ld   $0a
              44d0 00ab  ld   $ab
              44d1 0095  ld   $95
              44d2 005a  ld   $5a
              44d3 00a9  ld   $a9
              44d4 002a  ld   $2a
              44d5 000c  ld   $0c
              44d6 00c3  ld   $c3
              44d7 0012  ld   $12
              44d8 005c  ld   $5c
              44d9 00c2  ld   $c2
              44da 0030  ld   $30
              44db 000c  ld   $0c
              44dc 00c3  ld   $c3
              44dd 0030  ld   $30
              44de 000c  ld   $0c
              44df 00c3  ld   $c3
              44e0 00bf  ld   $bf
              44e1 0004  ld   $04
              44e2 00c3  ld   $c3
              44e3 002f  ld   $2f
              44e4 00fc  ld   $fc
              44e5 00c2  ld   $c2
              44e6 002f  ld   $2f
              44e7 000c  ld   $0c
              44e8 0047  ld   $47
              44e9 003f  ld   $3f
              44ea 000c  ld   $0c
              44eb 00c3  ld   $c3
              44ec 0030  ld   $30
              44ed 000c  ld   $0c
              44ee 00c3  ld   $c3
              44ef 0030  ld   $30
              44f0 000c  ld   $0c
              44f1 00c3  ld   $c3
              44f2 0030  ld   $30
              44f3 000c  ld   $0c
              44f4 00c3  ld   $c3
              44f5 00b0  ld   $b0
              44f6 00aa  ld   $aa
              44f7 00aa  ld   $aa
              44f8 0095  ld   $95
              44f9 005a  ld   $5a
              44fa 00a9  ld   $a9
              44fb fe00  bra  ac          ;+-----------------------------------+
              44fc fcfd  bra  $44fd       ;|                                   |
              44fd 1418  ld   $18,y       ;| Trampoline for page $4400 lookups |
              44fe e006  jmp  y,$06       ;|                                   |
              44ff c218  st   [$18]       ;+-----------------------------------+
              4500 006a  ld   $6a
              4501 00a5  ld   $a5
              4502 0056  ld   $56
              4503 00aa  ld   $aa
              4504 00aa  ld   $aa
              4505 00c2  ld   $c2
              4506 0030  ld   $30
              4507 000c  ld   $0c
              4508 00c3  ld   $c3
              4509 0030  ld   $30
              450a 000c  ld   $0c
              450b 00c3  ld   $c3
              450c 0030  ld   $30
              450d 000c  ld   $0c
              450e 000f  ld   $0f
              450f 003f  ld   $3f
              4510 00ac  ld   $ac
              4511 00fe  ld   $fe
              4512 0030  ld   $30
              4513 000c  ld   $0c
              4514 000f  ld   $0f
              4515 003f  ld   $3f
              4516 00ac  ld   $ac
              4517 00fe  ld   $fe
              4518 0030  ld   $30
              4519 003c  ld   $3c
              451a 00fc  ld   $fc
              451b 00b0  ld   $b0
              451c 00fa  ld   $fa
              451d 00c3  ld   $c3
              451e 0030  ld   $30
              451f 000c  ld   $0c
              4520 00c3  ld   $c3
              4521 0030  ld   $30
              4522 000c  ld   $0c
              4523 00c3  ld   $c3
              4524 0030  ld   $30
              4525 000c  ld   $0c
              4526 00c3  ld   $c3
              4527 0030  ld   $30
              4528 000c  ld   $0c
              4529 00c3  ld   $c3
              452a 0030  ld   $30
              452b 000c  ld   $0c
              452c 00c3  ld   $c3
              452d 0030  ld   $30
              452e 000c  ld   $0c
              452f 00c3  ld   $c3
              4530 0030  ld   $30
              4531 000c  ld   $0c
              4532 00c3  ld   $c3
              4533 0015  ld   $15
              4534 000c  ld   $0c
              4535 00c3  ld   $c3
              4536 0030  ld   $30
              4537 000c  ld   $0c
              4538 00c3  ld   $c3
              4539 0030  ld   $30
              453a 000c  ld   $0c
              453b 00c3  ld   $c3
              453c 00eb  ld   $eb
              453d 001a  ld   $1a
              453e 0004  ld   $04
              453f 0069  ld   $69
              4540 00b0  ld   $b0
              4541 00a6  ld   $a6
              4542 0030  ld   $30
              4543 000c  ld   $0c
              4544 00c3  ld   $c3
              4545 0070  ld   $70
              4546 0055  ld   $55
              4547 00fd  ld   $fd
              4548 0055  ld   $55
              4549 00f5  ld   $f5
              454a 0057  ld   $57
              454b 00d5  ld   $d5
              454c 005f  ld   $5f
              454d 0055  ld   $55
              454e 007f  ld   $7f
              454f 0055  ld   $55
              4550 00fd  ld   $fd
              4551 0055  ld   $55
              4552 0005  ld   $05
              4553 00c3  ld   $c3
              4554 0030  ld   $30
              4555 000c  ld   $0c
              4556 00c3  ld   $c3
              4557 0030  ld   $30
              4558 000c  ld   $0c
              4559 00c3  ld   $c3
              455a 0030  ld   $30
              455b 0050  ld   $50
              455c 00fd  ld   $fd
              455d 0030  ld   $30
              455e 000c  ld   $0c
              455f 00c3  ld   $c3
              4560 0030  ld   $30
              4561 000c  ld   $0c
              4562 00c3  ld   $c3
              4563 0030  ld   $30
              4564 006c  ld   $6c
              4565 00fc  ld   $fc
              4566 0030  ld   $30
              4567 000c  ld   $0c
              4568 00c3  ld   $c3
              4569 0030  ld   $30
              456a 000c  ld   $0c
              456b 00c3  ld   $c3
              456c 0030  ld   $30
              456d 000c  ld   $0c
              456e 00c3  ld   $c3
              456f 0030  ld   $30
              4570 000c  ld   $0c
              4571 00c3  ld   $c3
              4572 0030  ld   $30
              4573 000c  ld   $0c
              4574 00c3  ld   $c3
              4575 0030  ld   $30
              4576 000c  ld   $0c
              4577 00c3  ld   $c3
              4578 0030  ld   $30
              4579 000c  ld   $0c
              457a 00c3  ld   $c3
              457b 0030  ld   $30
              457c 000c  ld   $0c
              457d 00c3  ld   $c3
              457e 0030  ld   $30
              457f 000c  ld   $0c
              4580 00c3  ld   $c3
              4581 0030  ld   $30
              4582 000c  ld   $0c
              4583 00c3  ld   $c3
              4584 0030  ld   $30
              4585 000c  ld   $0c
              4586 00c3  ld   $c3
              4587 0030  ld   $30
              4588 000c  ld   $0c
              4589 00c3  ld   $c3
              458a 0030  ld   $30
              458b 000c  ld   $0c
              458c 00c3  ld   $c3
              458d 0030  ld   $30
              458e 000c  ld   $0c
              458f 00c3  ld   $c3
              4590 0070  ld   $70
              4591 00a5  ld   $a5
              4592 00fe  ld   $fe
              4593 00ea  ld   $ea
              4594 000f  ld   $0f
              4595 00ab  ld   $ab
              4596 006a  ld   $6a
              4597 00a5  ld   $a5
              4598 0056  ld   $56
              4599 002a  ld   $2a
              459a 000c  ld   $0c
              459b 004b  ld   $4b
              459c 0092  ld   $92
              459d 0054  ld   $54
              459e 0096  ld   $96
              459f 0030  ld   $30
              45a0 000c  ld   $0c
              45a1 00c3  ld   $c3
              45a2 0030  ld   $30
              45a3 000c  ld   $0c
              45a4 00c3  ld   $c3
              45a5 006f  ld   $6f
              45a6 0004  ld   $04
              45a7 00c3  ld   $c3
              45a8 00f0  ld   $f0
              45a9 000b  ld   $0b
              45aa 00bf  ld   $bf
              45ab 0030  ld   $30
              45ac 000c  ld   $0c
              45ad 004b  ld   $4b
              45ae 002f  ld   $2f
              45af 000c  ld   $0c
              45b0 00c3  ld   $c3
              45b1 0030  ld   $30
              45b2 000c  ld   $0c
              45b3 00c3  ld   $c3
              45b4 0030  ld   $30
              45b5 00fc  ld   $fc
              45b6 00ff  ld   $ff
              45b7 00ff  ld   $ff
              45b8 00ff  ld   $ff
              45b9 00ff  ld   $ff
              45ba 00aa  ld   $aa
              45bb 0065  ld   $65
              45bc 00a9  ld   $a9
              45bd 00aa  ld   $aa
              45be 00aa  ld   $aa
              45bf 00aa  ld   $aa
              * 7 times
              45c4 0065  ld   $65
              45c5 00a9  ld   $a9
              45c6 00ff  ld   $ff
              45c7 00ff  ld   $ff
              45c8 00ff  ld   $ff
              45c9 00ff  ld   $ff
              45ca 000f  ld   $0f
              45cb 00c3  ld   $c3
              45cc 0030  ld   $30
              45cd 000c  ld   $0c
              45ce 00c3  ld   $c3
              45cf 0030  ld   $30
              45d0 00ac  ld   $ac
              45d1 00fe  ld   $fe
              45d2 0030  ld   $30
              45d3 000c  ld   $0c
              45d4 00c3  ld   $c3
              45d5 0030  ld   $30
              45d6 00ac  ld   $ac
              45d7 00fe  ld   $fe
              45d8 0030  ld   $30
              45d9 000c  ld   $0c
              45da 00c3  ld   $c3
              45db 00b0  ld   $b0
              45dc 00fa  ld   $fa
              45dd 00c3  ld   $c3
              45de 0030  ld   $30
              45df 000c  ld   $0c
              45e0 00c3  ld   $c3
              45e1 0030  ld   $30
              45e2 000c  ld   $0c
              45e3 00c3  ld   $c3
              45e4 0030  ld   $30
              45e5 000c  ld   $0c
              45e6 00c3  ld   $c3
              45e7 0030  ld   $30
              45e8 000c  ld   $0c
              45e9 00c3  ld   $c3
              45ea 0030  ld   $30
              45eb 000c  ld   $0c
              45ec 00c3  ld   $c3
              45ed 0030  ld   $30
              45ee 000c  ld   $0c
              45ef 00c3  ld   $c3
              45f0 0030  ld   $30
              45f1 000c  ld   $0c
              45f2 00c3  ld   $c3
              45f3 0015  ld   $15
              45f4 000c  ld   $0c
              45f5 00c3  ld   $c3
              45f6 0030  ld   $30
              45f7 000c  ld   $0c
              45f8 00c3  ld   $c3
              45f9 0030  ld   $30
              45fa 000c  ld   $0c
              45fb fe00  bra  ac          ;+-----------------------------------+
              45fc fcfd  bra  $45fd       ;|                                   |
              45fd 1418  ld   $18,y       ;| Trampoline for page $4500 lookups |
              45fe e006  jmp  y,$06       ;|                                   |
              45ff c218  st   [$18]       ;+-----------------------------------+
              4600 00c3  ld   $c3
              4601 00e9  ld   $e9
              4602 001a  ld   $1a
              4603 00a4  ld   $a4
              4604 0041  ld   $41
              4605 00b0  ld   $b0
              4606 00ae  ld   $ae
              4607 0030  ld   $30
              4608 000c  ld   $0c
              4609 00c3  ld   $c3
              460a 00b0  ld   $b0
              460b 00aa  ld   $aa
              460c 00ff  ld   $ff
              460d 00ba  ld   $ba
              460e 00fa  ld   $fa
              460f 00ab  ld   $ab
              4610 00fa  ld   $fa
              4611 00af  ld   $af
              4612 00aa  ld   $aa
              4613 00bf  ld   $bf
              4614 00ae  ld   $ae
              4615 00fe  ld   $fe
              4616 00ba  ld   $ba
              4617 000a  ld   $0a
              4618 00c3  ld   $c3
              4619 0030  ld   $30
              461a 000c  ld   $0c
              461b 00c3  ld   $c3
              461c 0030  ld   $30
              461d 000c  ld   $0c
              461e 00c3  ld   $c3
              461f 00c0  ld   $c0
              4620 006b  ld   $6b
              4621 0001  ld   $01
              4622 002f  ld   $2f
              4623 000c  ld   $0c
              4624 00c3  ld   $c3
              4625 0030  ld   $30
              4626 000c  ld   $0c
              4627 00c3  ld   $c3
              4628 0030  ld   $30
              4629 00bc  ld   $bc
              462a 00bc  ld   $bc
              462b 0030  ld   $30
              462c 000c  ld   $0c
              462d 00c3  ld   $c3
              462e 0030  ld   $30
              462f 000c  ld   $0c
              4630 00c3  ld   $c3
              4631 0030  ld   $30
              4632 000c  ld   $0c
              4633 00c3  ld   $c3
              4634 0030  ld   $30
              4635 000c  ld   $0c
              4636 00c3  ld   $c3
              4637 0030  ld   $30
              4638 000c  ld   $0c
              4639 00c3  ld   $c3
              463a 0030  ld   $30
              463b 000c  ld   $0c
              463c 00c3  ld   $c3
              463d 0030  ld   $30
              463e 000c  ld   $0c
              463f 00c3  ld   $c3
              4640 0030  ld   $30
              4641 000c  ld   $0c
              4642 00c3  ld   $c3
              4643 0030  ld   $30
              4644 000c  ld   $0c
              4645 00c3  ld   $c3
              4646 0030  ld   $30
              4647 000c  ld   $0c
              4648 00c3  ld   $c3
              4649 0030  ld   $30
              464a 000c  ld   $0c
              464b 00c3  ld   $c3
              464c 0030  ld   $30
              464d 000c  ld   $0c
              464e 00c3  ld   $c3
              464f 0030  ld   $30
              4650 000c  ld   $0c
              4651 00c3  ld   $c3
              4652 0030  ld   $30
              4653 000c  ld   $0c
              4654 00c3  ld   $c3
              4655 00b0  ld   $b0
              4656 005a  ld   $5a
              4657 00a9  ld   $a9
              4658 00bf  ld   $bf
              4659 000a  ld   $0a
              465a 00ab  ld   $ab
              465b 0095  ld   $95
              465c 005a  ld   $5a
              465d 00a9  ld   $a9
              465e 002a  ld   $2a
              465f 000c  ld   $0c
              4660 004b  ld   $4b
              4661 00a3  ld   $a3
              4662 0094  ld   $94
              4663 0097  ld   $97
              4664 0030  ld   $30
              4665 000c  ld   $0c
              4666 00c3  ld   $c3
              4667 0030  ld   $30
              4668 000c  ld   $0c
              4669 00c3  ld   $c3
              466a 00ff  ld   $ff
              466b 00fb  ld   $fb
              466c 00be  ld   $be
              466d 002f  ld   $2f
              466e 00fc  ld   $fc
              466f 00c3  ld   $c3
              4670 00ef  ld   $ef
              4671 00fb  ld   $fb
              4672 00be  ld   $be
              4673 003f  ld   $3f
              4674 000c  ld   $0c
              4675 00c3  ld   $c3
              4676 0030  ld   $30
              4677 000c  ld   $0c
              4678 00c3  ld   $c3
              4679 0030  ld   $30
              467a 00ac  ld   $ac
              467b 0069  ld   $69
              467c 009a  ld   $9a
              467d 00a6  ld   $a6
              467e 0069  ld   $69
              467f 0096  ld   $96
              4680 00aa  ld   $aa
              4681 001a  ld   $1a
              4682 0096  ld   $96
              4683 0065  ld   $65
              4684 0059  ld   $59
              4685 0096  ld   $96
              4686 0065  ld   $65
              4687 0059  ld   $59
              4688 0086  ld   $86
              4689 00aa  ld   $aa
              468a 005a  ld   $5a
              468b 009a  ld   $9a
              468c 00a6  ld   $a6
              468d 0069  ld   $69
              468e 009a  ld   $9a
              468f 0006  ld   $06
              4690 00c3  ld   $c3
              4691 0030  ld   $30
              4692 000c  ld   $0c
              4693 00c3  ld   $c3
              4694 0030  ld   $30
              4695 00ac  ld   $ac
              4696 00fe  ld   $fe
              4697 0030  ld   $30
              4698 000c  ld   $0c
              4699 00c3  ld   $c3
              469a 0030  ld   $30
              469b 00ac  ld   $ac
              469c 00fe  ld   $fe
              469d 0030  ld   $30
              469e 000c  ld   $0c
              469f 00c3  ld   $c3
              46a0 00b0  ld   $b0
              46a1 00fa  ld   $fa
              46a2 00c3  ld   $c3
              46a3 0030  ld   $30
              46a4 000c  ld   $0c
              46a5 00c3  ld   $c3
              46a6 0030  ld   $30
              46a7 000c  ld   $0c
              46a8 00c3  ld   $c3
              46a9 0030  ld   $30
              46aa 000c  ld   $0c
              46ab 00c3  ld   $c3
              46ac 0030  ld   $30
              46ad 000c  ld   $0c
              46ae 00c3  ld   $c3
              46af 0030  ld   $30
              46b0 00ac  ld   $ac
              46b1 00aa  ld   $aa
              46b2 00ff  ld   $ff
              46b3 00ff  ld   $ff
              46b4 00ff  ld   $ff
              * 5 times
              46b7 00c3  ld   $c3
              46b8 0015  ld   $15
              46b9 000c  ld   $0c
              46ba 00c3  ld   $c3
              46bb 0030  ld   $30
              46bc 000c  ld   $0c
              46bd 00c3  ld   $c3
              46be 0030  ld   $30
              46bf 000c  ld   $0c
              46c0 00c3  ld   $c3
              46c1 00eb  ld   $eb
              46c2 001a  ld   $1a
              46c3 0004  ld   $04
              46c4 0069  ld   $69
              46c5 00b0  ld   $b0
              46c6 00a6  ld   $a6
              46c7 0030  ld   $30
              46c8 000c  ld   $0c
              46c9 00c3  ld   $c3
              46ca 0070  ld   $70
              46cb 0055  ld   $55
              46cc 00fd  ld   $fd
              46cd 0055  ld   $55
              46ce 00f5  ld   $f5
              46cf 0057  ld   $57
              46d0 00d5  ld   $d5
              46d1 005f  ld   $5f
              46d2 0055  ld   $55
              46d3 007f  ld   $7f
              46d4 0055  ld   $55
              46d5 00fd  ld   $fd
              46d6 0055  ld   $55
              46d7 0005  ld   $05
              46d8 00c3  ld   $c3
              46d9 0030  ld   $30
              46da 000c  ld   $0c
              46db 00c3  ld   $c3
              46dc 0030  ld   $30
              46dd 000c  ld   $0c
              46de 0003  ld   $03
              46df 007f  ld   $7f
              46e0 0010  ld   $10
              46e1 0004  ld   $04
              46e2 00c0  ld   $c0
              46e3 000f  ld   $0f
              46e4 00c3  ld   $c3
              46e5 0030  ld   $30
              46e6 000c  ld   $0c
              46e7 00c3  ld   $c3
              46e8 0030  ld   $30
              46e9 006c  ld   $6c
              46ea 00fc  ld   $fc
              46eb 0041  ld   $41
              46ec 0010  ld   $10
              46ed 0004  ld   $04
              46ee 0041  ld   $41
              46ef 0010  ld   $10
              46f0 0004  ld   $04
              46f1 0041  ld   $41
              46f2 0010  ld   $10
              46f3 0004  ld   $04
              46f4 0041  ld   $41
              46f5 0010  ld   $10
              46f6 0004  ld   $04
              46f7 0041  ld   $41
              46f8 0010  ld   $10
              46f9 0004  ld   $04
              46fa 0030  ld   $30
              46fb fe00  bra  ac          ;+-----------------------------------+
              46fc fcfd  bra  $46fd       ;|                                   |
              46fd 1418  ld   $18,y       ;| Trampoline for page $4600 lookups |
              46fe e006  jmp  y,$06       ;|                                   |
              46ff c218  st   [$18]       ;+-----------------------------------+
              4700 000c  ld   $0c
              4701 00c3  ld   $c3
              4702 0030  ld   $30
              4703 000c  ld   $0c
              4704 00c3  ld   $c3
              4705 0030  ld   $30
              4706 000c  ld   $0c
              4707 00c3  ld   $c3
              4708 0030  ld   $30
              4709 000c  ld   $0c
              470a 00c3  ld   $c3
              470b 0030  ld   $30
              470c 000c  ld   $0c
              470d 00c3  ld   $c3
              470e 0030  ld   $30
              470f 000c  ld   $0c
              4710 00c3  ld   $c3
              4711 0030  ld   $30
              4712 000c  ld   $0c
              4713 00c3  ld   $c3
              4714 0030  ld   $30
              4715 000c  ld   $0c
              4716 00c3  ld   $c3
              4717 0030  ld   $30
              4718 000c  ld   $0c
              4719 00c3  ld   $c3
              471a 0070  ld   $70
              471b 00a5  ld   $a5
              471c 00fe  ld   $fe
              471d 00ea  ld   $ea
              471e 000f  ld   $0f
              471f 00ab  ld   $ab
              4720 006a  ld   $6a
              4721 00a5  ld   $a5
              4722 0056  ld   $56
              4723 002a  ld   $2a
              4724 001c  ld   $1c
              4725 0058  ld   $58
              4726 0081  ld   $81
              4727 0015  ld   $15
              4728 0058  ld   $58
              4729 0011  ld   $11
              472a 000c  ld   $0c
              472b 00c3  ld   $c3
              472c 0030  ld   $30
              472d 000c  ld   $0c
              472e 00c3  ld   $c3
              472f 00af  ld   $af
              4730 0004  ld   $04
              4731 00c3  ld   $c3
              4732 00f0  ld   $f0
              4733 000f  ld   $0f
              4734 00ff  ld   $ff
              4735 0030  ld   $30
              4736 000c  ld   $0c
              4737 0047  ld   $47
              4738 002f  ld   $2f
              4739 000c  ld   $0c
              473a 00c3  ld   $c3
              473b 0030  ld   $30
              473c 000c  ld   $0c
              473d 00c3  ld   $c3
              473e 0030  ld   $30
              473f 005c  ld   $5c
              4740 0055  ld   $55
              4741 0055  ld   $55
              4742 0055  ld   $55
              4743 0055  ld   $55
              4744 00d6  ld   $d6
              4745 00fa  ld   $fa
              4746 005a  ld   $5a
              4747 0069  ld   $69
              4748 009a  ld   $9a
              4749 00a6  ld   $a6
              474a 0069  ld   $69
              474b 009a  ld   $9a
              474c 00a6  ld   $a6
              474d 00d6  ld   $d6
              474e 00bb  ld   $bb
              474f 005a  ld   $5a
              4750 0055  ld   $55
              4751 0055  ld   $55
              4752 0055  ld   $55
              4753 0055  ld   $55
              4754 0005  ld   $05
              4755 00c3  ld   $c3
              4756 0030  ld   $30
              4757 000c  ld   $0c
              4758 00c3  ld   $c3
              4759 0030  ld   $30
              475a 00ac  ld   $ac
              475b 00fe  ld   $fe
              475c 0030  ld   $30
              475d 000c  ld   $0c
              475e 00c3  ld   $c3
              475f 0030  ld   $30
              4760 00ac  ld   $ac
              4761 00fe  ld   $fe
              4762 0030  ld   $30
              4763 000c  ld   $0c
              4764 00c3  ld   $c3
              4765 00b0  ld   $b0
              4766 00fa  ld   $fa
              4767 00c3  ld   $c3
              4768 0030  ld   $30
              4769 000c  ld   $0c
              476a 00c3  ld   $c3
              476b 0030  ld   $30
              476c 000c  ld   $0c
              476d 00c3  ld   $c3
              476e 0030  ld   $30
              476f 000c  ld   $0c
              4770 00c3  ld   $c3
              4771 0030  ld   $30
              4772 000c  ld   $0c
              4773 00ab  ld   $ab
              4774 00aa  ld   $aa
              4775 00aa  ld   $aa
              4776 00aa  ld   $aa
              4777 00aa  ld   $aa
              4778 00fa  ld   $fa
              4779 00ff  ld   $ff
              477a 00ff  ld   $ff
              477b 00ff  ld   $ff
              * 5 times
              477e 000f  ld   $0f
              477f 00c3  ld   $c3
              4780 0030  ld   $30
              4781 000c  ld   $0c
              4782 00c3  ld   $c3
              4783 0030  ld   $30
              4784 000c  ld   $0c
              4785 00c3  ld   $c3
              4786 00e9  ld   $e9
              4787 001a  ld   $1a
              4788 00a4  ld   $a4
              4789 0041  ld   $41
              478a 00b0  ld   $b0
              478b 00ae  ld   $ae
              478c 0030  ld   $30
              478d 000c  ld   $0c
              478e 00c3  ld   $c3
              478f 00b0  ld   $b0
              4790 00aa  ld   $aa
              4791 00ff  ld   $ff
              4792 00aa  ld   $aa
              4793 00fe  ld   $fe
              4794 00ab  ld   $ab
              4795 00ea  ld   $ea
              4796 00af  ld   $af
              4797 00ea  ld   $ea
              4798 00bf  ld   $bf
              4799 00aa  ld   $aa
              479a 00ff  ld   $ff
              479b 00aa  ld   $aa
              479c 000e  ld   $0e
              479d 00c3  ld   $c3
              479e 0030  ld   $30
              479f 000c  ld   $0c
              47a0 00c3  ld   $c3
              47a1 0030  ld   $30
              47a2 000c  ld   $0c
              47a3 00bc  ld   $bc
              47a4 0081  ld   $81
              47a5 0065  ld   $65
              47a6 0005  ld   $05
              47a7 0020  ld   $20
              47a8 00f0  ld   $f0
              47a9 00c2  ld   $c2
              47aa 0030  ld   $30
              47ab 000c  ld   $0c
              47ac 00c3  ld   $c3
              47ad 0030  ld   $30
              47ae 00bc  ld   $bc
              47af 00bc  ld   $bc
              47b0 00ff  ld   $ff
              47b1 00fb  ld   $fb
              47b2 00bf  ld   $bf
              47b3 00ff  ld   $ff
              47b4 00fb  ld   $fb
              47b5 00bf  ld   $bf
              47b6 00ff  ld   $ff
              47b7 00fb  ld   $fb
              47b8 00bf  ld   $bf
              47b9 00ff  ld   $ff
              47ba 00fb  ld   $fb
              47bb 00bf  ld   $bf
              47bc 00ff  ld   $ff
              47bd 00fb  ld   $fb
              47be 0007  ld   $07
              47bf 0030  ld   $30
              47c0 000c  ld   $0c
              47c1 00c3  ld   $c3
              47c2 0030  ld   $30
              47c3 000c  ld   $0c
              47c4 00c3  ld   $c3
              47c5 0030  ld   $30
              47c6 000c  ld   $0c
              47c7 00c3  ld   $c3
              47c8 0030  ld   $30
              47c9 000c  ld   $0c
              47ca 00c3  ld   $c3
              47cb 0030  ld   $30
              47cc 000c  ld   $0c
              47cd 00c3  ld   $c3
              47ce 0030  ld   $30
              47cf 000c  ld   $0c
              47d0 00c3  ld   $c3
              47d1 0030  ld   $30
              47d2 000c  ld   $0c
              47d3 00c3  ld   $c3
              47d4 0030  ld   $30
              47d5 000c  ld   $0c
              47d6 00c3  ld   $c3
              47d7 0030  ld   $30
              47d8 000c  ld   $0c
              47d9 00c3  ld   $c3
              47da 00b0  ld   $b0
              47db 005a  ld   $5a
              47dc 00a9  ld   $a9
              47dd 00bf  ld   $bf
              47de 000a  ld   $0a
              47df 00ab  ld   $ab
              47e0 0095  ld   $95
              47e1 005a  ld   $5a
              47e2 00a9  ld   $a9
              47e3 002a  ld   $2a
              47e4 001c  ld   $1c
              47e5 0004  ld   $04
              47e6 0041  ld   $41
              47e7 0010  ld   $10
              47e8 0044  ld   $44
              47e9 0011  ld   $11
              47ea 000c  ld   $0c
              47eb 00c3  ld   $c3
              47ec 0030  ld   $30
              47ed 000c  ld   $0c
              47ee 00c3  ld   $c3
              47ef 007f  ld   $7f
              47f0 0004  ld   $04
              47f1 00c3  ld   $c3
              47f2 00ef  ld   $ef
              47f3 00ff  ld   $ff
              47f4 00fe  ld   $fe
              47f5 003f  ld   $3f
              47f6 000c  ld   $0c
              47f7 004b  ld   $4b
              47f8 003f  ld   $3f
              47f9 000c  ld   $0c
              47fa 00c3  ld   $c3
              47fb fe00  bra  ac          ;+-----------------------------------+
              47fc fcfd  bra  $47fd       ;|                                   |
              47fd 1418  ld   $18,y       ;| Trampoline for page $4700 lookups |
              47fe e006  jmp  y,$06       ;|                                   |
              47ff c218  st   [$18]       ;+-----------------------------------+
              4800 0030  ld   $30
              4801 000c  ld   $0c
              4802 00c3  ld   $c3
              4803 0030  ld   $30
              4804 00ac  ld   $ac
              4805 00aa  ld   $aa
              4806 0095  ld   $95
              4807 00aa  ld   $aa
              4808 0056  ld   $56
              4809 00d6  ld   $d6
              480a 00fa  ld   $fa
              480b 005a  ld   $5a
              480c 006a  ld   $6a
              480d 00a5  ld   $a5
              480e 00aa  ld   $aa
              480f 006a  ld   $6a
              4810 00a5  ld   $a5
              4811 00aa  ld   $aa
              4812 00d6  ld   $d6
              4813 00bb  ld   $bb
              4814 005a  ld   $5a
              4815 0095  ld   $95
              4816 00aa  ld   $aa
              4817 0056  ld   $56
              4818 00aa  ld   $aa
              4819 000a  ld   $0a
              481a 00c3  ld   $c3
              481b 0030  ld   $30
              481c 000c  ld   $0c
              481d 00c3  ld   $c3
              481e 0030  ld   $30
              481f 00ac  ld   $ac
              4820 00fe  ld   $fe
              4821 0030  ld   $30
              4822 000c  ld   $0c
              4823 00c3  ld   $c3
              4824 0030  ld   $30
              4825 00ac  ld   $ac
              4826 00fe  ld   $fe
              4827 0030  ld   $30
              4828 000c  ld   $0c
              4829 00c3  ld   $c3
              482a 00b0  ld   $b0
              482b 00fa  ld   $fa
              482c 00c3  ld   $c3
              482d 0030  ld   $30
              482e 000c  ld   $0c
              482f 00c3  ld   $c3
              4830 0030  ld   $30
              4831 000c  ld   $0c
              4832 00c3  ld   $c3
              4833 0030  ld   $30
              4834 000c  ld   $0c
              4835 00c3  ld   $c3
              4836 0055  ld   $55
              4837 0055  ld   $55
              4838 0055  ld   $55
              * 6 times
              483c 00aa  ld   $aa
              483d 00aa  ld   $aa
              483e 00aa  ld   $aa
              483f 00ea  ld   $ea
              4840 00ff  ld   $ff
              4841 00ff  ld   $ff
              4842 00ff  ld   $ff
              * 5 times
              4845 003f  ld   $3f
              4846 000c  ld   $0c
              4847 00c3  ld   $c3
              4848 0030  ld   $30
              4849 000c  ld   $0c
              484a 00c3  ld   $c3
              484b 00eb  ld   $eb
              484c 001a  ld   $1a
              484d 0004  ld   $04
              484e 0069  ld   $69
              484f 00b0  ld   $b0
              4850 00a6  ld   $a6
              4851 0030  ld   $30
              4852 000c  ld   $0c
              4853 00c3  ld   $c3
              4854 0070  ld   $70
              4855 0055  ld   $55
              4856 00fd  ld   $fd
              4857 0055  ld   $55
              4858 00f5  ld   $f5
              4859 0057  ld   $57
              485a 00d5  ld   $d5
              485b 005f  ld   $5f
              485c 0055  ld   $55
              485d 007f  ld   $7f
              485e 0055  ld   $55
              485f 00fd  ld   $fd
              4860 0055  ld   $55
              4861 0005  ld   $05
              4862 00c3  ld   $c3
              4863 0030  ld   $30
              4864 000c  ld   $0c
              4865 00c3  ld   $c3
              4866 0030  ld   $30
              4867 00f0  ld   $f0
              4868 0083  ld   $83
              4869 0081  ld   $81
              486a 0065  ld   $65
              486b 0005  ld   $05
              486c 0020  ld   $20
              486d 0008  ld   $08
              486e 00fc  ld   $fc
              486f 0030  ld   $30
              4870 000c  ld   $0c
              4871 00c3  ld   $c3
              4872 0030  ld   $30
              4873 006c  ld   $6c
              4874 00fc  ld   $fc
              4875 006f  ld   $6f
              4876 0060  ld   $60
              4877 0004  ld   $04
              4878 0046  ld   $46
              4879 0060  ld   $60
              487a 0004  ld   $04
              487b 0046  ld   $46
              487c 0060  ld   $60
              487d 0004  ld   $04
              487e 00c6  ld   $c6
              487f 006f  ld   $6f
              4880 002c  ld   $2c
              4881 0056  ld   $56
              4882 00f0  ld   $f0
              4883 0006  ld   $06
              4884 0030  ld   $30
              4885 000c  ld   $0c
              4886 00c3  ld   $c3
              4887 0030  ld   $30
              4888 000c  ld   $0c
              4889 00c3  ld   $c3
              488a 0030  ld   $30
              488b 000c  ld   $0c
              488c 00c3  ld   $c3
              488d 0030  ld   $30
              488e 000c  ld   $0c
              488f 00c3  ld   $c3
              4890 0030  ld   $30
              4891 000c  ld   $0c
              4892 00c3  ld   $c3
              4893 0030  ld   $30
              4894 000c  ld   $0c
              4895 00c3  ld   $c3
              4896 0030  ld   $30
              4897 000c  ld   $0c
              4898 00c3  ld   $c3
              4899 0030  ld   $30
              489a 000c  ld   $0c
              489b 00c3  ld   $c3
              489c 0030  ld   $30
              489d 000c  ld   $0c
              489e 00c3  ld   $c3
              489f 0070  ld   $70
              48a0 00a5  ld   $a5
              48a1 00fe  ld   $fe
              48a2 00ea  ld   $ea
              48a3 000f  ld   $0f
              48a4 00ab  ld   $ab
              48a5 006a  ld   $6a
              48a6 00a5  ld   $a5
              48a7 0056  ld   $56
              48a8 002a  ld   $2a
              48a9 001c  ld   $1c
              48aa 0058  ld   $58
              48ab 0081  ld   $81
              48ac 0015  ld   $15
              48ad 0058  ld   $58
              48ae 0011  ld   $11
              48af 000c  ld   $0c
              48b0 00c3  ld   $c3
              48b1 0030  ld   $30
              48b2 000c  ld   $0c
              48b3 00c3  ld   $c3
              48b4 00f0  ld   $f0
              48b5 000b  ld   $0b
              48b6 00bf  ld   $bf
              48b7 003f  ld   $3f
              48b8 00fc  ld   $fc
              48b9 00c2  ld   $c2
              48ba 00ff  ld   $ff
              48bb 000f  ld   $0f
              48bc 00bf  ld   $bf
              48bd 0030  ld   $30
              48be 000c  ld   $0c
              48bf 00c3  ld   $c3
              48c0 0030  ld   $30
              48c1 000c  ld   $0c
              48c2 00c3  ld   $c3
              48c3 0030  ld   $30
              48c4 00ac  ld   $ac
              48c5 0069  ld   $69
              48c6 0055  ld   $55
              48c7 0055  ld   $55
              48c8 0055  ld   $55
              48c9 0096  ld   $96
              48ca 00aa  ld   $aa
              48cb 005a  ld   $5a
              48cc 00aa  ld   $aa
              48cd 006a  ld   $6a
              48ce 00a9  ld   $a9
              48cf 0096  ld   $96
              48d0 00aa  ld   $aa
              48d1 00aa  ld   $aa
              48d2 0096  ld   $96
              48d3 00aa  ld   $aa
              48d4 005a  ld   $5a
              48d5 0055  ld   $55
              48d6 0055  ld   $55
              48d7 0055  ld   $55
              48d8 009a  ld   $9a
              48d9 0006  ld   $06
              48da 00c3  ld   $c3
              48db 0030  ld   $30
              48dc 000c  ld   $0c
              48dd 00c3  ld   $c3
              48de 0030  ld   $30
              48df 00ac  ld   $ac
              48e0 00fe  ld   $fe
              48e1 0030  ld   $30
              48e2 000c  ld   $0c
              48e3 00c3  ld   $c3
              48e4 0030  ld   $30
              48e5 00ac  ld   $ac
              48e6 00fe  ld   $fe
              48e7 0030  ld   $30
              48e8 000c  ld   $0c
              48e9 00c3  ld   $c3
              48ea 00b0  ld   $b0
              48eb 00fa  ld   $fa
              48ec 00c3  ld   $c3
              48ed 0030  ld   $30
              48ee 000c  ld   $0c
              48ef 00c3  ld   $c3
              48f0 0030  ld   $30
              48f1 000c  ld   $0c
              48f2 00c3  ld   $c3
              48f3 0030  ld   $30
              48f4 0000  ld   $00
              48f5 0000  ld   $00
              48f6 0000  ld   $00
              * 5 times
              48f9 0055  ld   $55
              48fa 0055  ld   $55
              48fb fe00  bra  ac          ;+-----------------------------------+
              48fc fcfd  bra  $48fd       ;|                                   |
              48fd 1418  ld   $18,y       ;| Trampoline for page $4800 lookups |
              48fe e006  jmp  y,$06       ;|                                   |
              48ff c218  st   [$18]       ;+-----------------------------------+
              4900 0055  ld   $55
              4901 0055  ld   $55
              4902 00a5  ld   $a5
              4903 00aa  ld   $aa
              4904 00aa  ld   $aa
              4905 00aa  ld   $aa
              4906 00fe  ld   $fe
              4907 00ff  ld   $ff
              4908 00ff  ld   $ff
              4909 00ff  ld   $ff
              * 6 times
              490d 0030  ld   $30
              490e 000c  ld   $0c
              490f 00c3  ld   $c3
              4910 00e9  ld   $e9
              4911 001a  ld   $1a
              4912 00a4  ld   $a4
              4913 0041  ld   $41
              4914 00b0  ld   $b0
              4915 00ae  ld   $ae
              4916 0030  ld   $30
              4917 000c  ld   $0c
              4918 00c3  ld   $c3
              4919 00b0  ld   $b0
              491a 00ae  ld   $ae
              491b 00fe  ld   $fe
              491c 00ba  ld   $ba
              491d 00fa  ld   $fa
              491e 00ab  ld   $ab
              491f 00fa  ld   $fa
              4920 00af  ld   $af
              4921 00aa  ld   $aa
              4922 00bf  ld   $bf
              4923 00ae  ld   $ae
              4924 00fe  ld   $fe
              4925 00aa  ld   $aa
              4926 000e  ld   $0e
              4927 00c3  ld   $c3
              4928 0030  ld   $30
              4929 000c  ld   $0c
              492a 00c3  ld   $c3
              492b 00c0  ld   $c0
              492c 001b  ld   $1b
              492d 0004  ld   $04
              492e 0041  ld   $41
              492f 0010  ld   $10
              4930 0004  ld   $04
              4931 0041  ld   $41
              4932 0000  ld   $00
              4933 0003  ld   $03
              4934 0030  ld   $30
              4935 000c  ld   $0c
              4936 00c3  ld   $c3
              4937 0030  ld   $30
              4938 00bc  ld   $bc
              4939 00bc  ld   $bc
              493a 00bf  ld   $bf
              493b 00f1  ld   $f1
              493c 001a  ld   $1a
              493d 008b  ld   $8b
              493e 00b1  ld   $b1
              493f 0018  ld   $18
              4940 008b  ld   $8b
              4941 00b1  ld   $b1
              4942 0018  ld   $18
              4943 00c1  ld   $c1
              4944 00bb  ld   $bb
              4945 0058  ld   $58
              4946 0046  ld   $46
              4947 00f0  ld   $f0
              4948 0007  ld   $07
              4949 0030  ld   $30
              494a 000c  ld   $0c
              494b 00c3  ld   $c3
              494c 0030  ld   $30
              494d 000c  ld   $0c
              494e 00c3  ld   $c3
              494f 0030  ld   $30
              4950 000c  ld   $0c
              4951 00c3  ld   $c3
              4952 0030  ld   $30
              4953 000c  ld   $0c
              4954 00c3  ld   $c3
              4955 0030  ld   $30
              4956 000c  ld   $0c
              4957 00c3  ld   $c3
              4958 0030  ld   $30
              4959 000c  ld   $0c
              495a 00c3  ld   $c3
              495b 0030  ld   $30
              495c 000c  ld   $0c
              495d 00c3  ld   $c3
              495e 0030  ld   $30
              495f 000c  ld   $0c
              4960 00c3  ld   $c3
              4961 0030  ld   $30
              4962 000c  ld   $0c
              4963 00c3  ld   $c3
              4964 00b0  ld   $b0
              4965 005a  ld   $5a
              4966 00a9  ld   $a9
              4967 00bf  ld   $bf
              4968 000a  ld   $0a
              4969 00ab  ld   $ab
              496a 0095  ld   $95
              496b 005a  ld   $5a
              496c 00a9  ld   $a9
              496d 002a  ld   $2a
              496e 001c  ld   $1c
              496f 0004  ld   $04
              4970 0041  ld   $41
              4971 0010  ld   $10
              4972 0044  ld   $44
              4973 0011  ld   $11
              4974 000c  ld   $0c
              4975 00c3  ld   $c3
              4976 0030  ld   $30
              4977 000c  ld   $0c
              4978 00c3  ld   $c3
              4979 0070  ld   $70
              497a 00f4  ld   $f4
              497b 00fe  ld   $fe
              497c 0030  ld   $30
              497d 00fc  ld   $fc
              497e 00c2  ld   $c2
              497f 00f0  ld   $f0
              4980 00ff  ld   $ff
              4981 004b  ld   $4b
              4982 0030  ld   $30
              4983 000c  ld   $0c
              4984 00c3  ld   $c3
              4985 0030  ld   $30
              4986 000c  ld   $0c
              4987 00c3  ld   $c3
              4988 0030  ld   $30
              4989 00ac  ld   $ac
              498a 0069  ld   $69
              498b 009a  ld   $9a
              498c 00aa  ld   $aa
              498d 006a  ld   $6a
              498e 0016  ld   $16
              498f 00a5  ld   $a5
              4990 005a  ld   $5a
              4991 00aa  ld   $aa
              4992 0061  ld   $61
              4993 00a9  ld   $a9
              4994 0056  ld   $56
              4995 0065  ld   $65
              4996 00a8  ld   $a8
              4997 0056  ld   $56
              4998 0095  ld   $95
              4999 005a  ld   $5a
              499a 009a  ld   $9a
              499b 00aa  ld   $aa
              499c 006a  ld   $6a
              499d 009a  ld   $9a
              499e 0006  ld   $06
              499f 00c3  ld   $c3
              49a0 0030  ld   $30
              49a1 000c  ld   $0c
              49a2 00c3  ld   $c3
              49a3 0030  ld   $30
              49a4 00ac  ld   $ac
              49a5 00fe  ld   $fe
              49a6 0030  ld   $30
              49a7 000c  ld   $0c
              49a8 00c3  ld   $c3
              49a9 0030  ld   $30
              49aa 00ac  ld   $ac
              49ab 00fe  ld   $fe
              49ac 0030  ld   $30
              49ad 000c  ld   $0c
              49ae 00c3  ld   $c3
              49af 00b0  ld   $b0
              49b0 00fa  ld   $fa
              49b1 00c3  ld   $c3
              49b2 0030  ld   $30
              49b3 000c  ld   $0c
              49b4 00c3  ld   $c3
              49b5 0030  ld   $30
              49b6 000c  ld   $0c
              49b7 00c3  ld   $c3
              49b8 0030  ld   $30
              49b9 000c  ld   $0c
              49ba 0003  ld   $03
              49bb 0000  ld   $00
              49bc 0000  ld   $00
              49bd 0000  ld   $00
              * 5 times
              49c0 0054  ld   $54
              49c1 0055  ld   $55
              49c2 0055  ld   $55
              49c3 0055  ld   $55
              49c4 0055  ld   $55
              49c5 00a5  ld   $a5
              49c6 00aa  ld   $aa
              49c7 00aa  ld   $aa
              49c8 00fa  ld   $fa
              49c9 00ff  ld   $ff
              49ca 00ff  ld   $ff
              49cb 000f  ld   $0f
              49cc 00c3  ld   $c3
              49cd 0030  ld   $30
              49ce 000c  ld   $0c
              49cf 00c3  ld   $c3
              49d0 00eb  ld   $eb
              49d1 001a  ld   $1a
              49d2 0004  ld   $04
              49d3 0069  ld   $69
              49d4 00b0  ld   $b0
              49d5 00a6  ld   $a6
              49d6 0030  ld   $30
              49d7 000c  ld   $0c
              49d8 00c3  ld   $c3
              49d9 0070  ld   $70
              49da 0055  ld   $55
              49db 00fd  ld   $fd
              49dc 0055  ld   $55
              49dd 00f5  ld   $f5
              49de 0057  ld   $57
              49df 00d5  ld   $d5
              49e0 005f  ld   $5f
              49e1 0055  ld   $55
              49e2 007f  ld   $7f
              49e3 0055  ld   $55
              49e4 00fd  ld   $fd
              49e5 0055  ld   $55
              49e6 0005  ld   $05
              49e7 00c3  ld   $c3
              49e8 0030  ld   $30
              49e9 000c  ld   $0c
              49ea 00c3  ld   $c3
              49eb 0030  ld   $30
              49ec 000c  ld   $0c
              49ed 0007  ld   $07
              49ee 0096  ld   $96
              49ef 0065  ld   $65
              49f0 0059  ld   $59
              49f1 0001  ld   $01
              49f2 000c  ld   $0c
              49f3 00c3  ld   $c3
              49f4 0030  ld   $30
              49f5 000c  ld   $0c
              49f6 00c3  ld   $c3
              49f7 0030  ld   $30
              49f8 006c  ld   $6c
              49f9 00fc  ld   $fc
              49fa 006f  ld   $6f
              49fb fe00  bra  ac          ;+-----------------------------------+
              49fc fcfd  bra  $49fd       ;|                                   |
              49fd 1418  ld   $18,y       ;| Trampoline for page $4900 lookups |
              49fe e006  jmp  y,$06       ;|                                   |
              49ff c218  st   [$18]       ;+-----------------------------------+
              4a00 0060  ld   $60
              4a01 002c  ld   $2c
              4a02 00c6  ld   $c6
              4a03 0062  ld   $62
              4a04 002c  ld   $2c
              4a05 00c6  ld   $c6
              4a06 0062  ld   $62
              4a07 002c  ld   $2c
              4a08 00c6  ld   $c6
              4a09 006f  ld   $6f
              4a0a 0019  ld   $19
              4a0b 0056  ld   $56
              4a0c 00f0  ld   $f0
              4a0d 0006  ld   $06
              4a0e 0030  ld   $30
              4a0f 000c  ld   $0c
              4a10 00c3  ld   $c3
              4a11 0030  ld   $30
              4a12 000c  ld   $0c
              4a13 00c3  ld   $c3
              4a14 0030  ld   $30
              4a15 000c  ld   $0c
              4a16 00c3  ld   $c3
              4a17 0030  ld   $30
              4a18 000c  ld   $0c
              4a19 00c3  ld   $c3
              4a1a 0030  ld   $30
              4a1b 000c  ld   $0c
              4a1c 00c3  ld   $c3
              4a1d 0030  ld   $30
              4a1e 000c  ld   $0c
              4a1f 00c3  ld   $c3
              4a20 0030  ld   $30
              4a21 000c  ld   $0c
              4a22 00c3  ld   $c3
              4a23 0030  ld   $30
              4a24 000c  ld   $0c
              4a25 00c3  ld   $c3
              4a26 0030  ld   $30
              4a27 000c  ld   $0c
              4a28 00c3  ld   $c3
              4a29 0070  ld   $70
              4a2a 00a5  ld   $a5
              4a2b 00fe  ld   $fe
              4a2c 00ea  ld   $ea
              4a2d 000f  ld   $0f
              4a2e 00ab  ld   $ab
              4a2f 006a  ld   $6a
              4a30 00a5  ld   $a5
              4a31 0056  ld   $56
              4a32 002a  ld   $2a
              4a33 001c  ld   $1c
              4a34 0058  ld   $58
              4a35 0081  ld   $81
              4a36 0015  ld   $15
              4a37 0058  ld   $58
              4a38 0011  ld   $11
              4a39 000c  ld   $0c
              4a3a 00c3  ld   $c3
              4a3b 0030  ld   $30
              4a3c 000c  ld   $0c
              4a3d 00c3  ld   $c3
              4a3e 0030  ld   $30
              4a3f 00fc  ld   $fc
              4a40 00bf  ld   $bf
              4a41 0030  ld   $30
              4a42 00fc  ld   $fc
              4a43 00c2  ld   $c2
              4a44 00f0  ld   $f0
              4a45 00fb  ld   $fb
              4a46 00c3  ld   $c3
              4a47 0030  ld   $30
              4a48 000c  ld   $0c
              4a49 00c3  ld   $c3
              4a4a 0030  ld   $30
              4a4b 000c  ld   $0c
              4a4c 00c3  ld   $c3
              4a4d 0030  ld   $30
              4a4e 005c  ld   $5c
              4a4f 00a9  ld   $a9
              4a50 0069  ld   $69
              4a51 0055  ld   $55
              4a52 0055  ld   $55
              4a53 0029  ld   $29
              4a54 0055  ld   $55
              4a55 0055  ld   $55
              4a56 0055  ld   $55
              4a57 0055  ld   $55
              4a58 0051  ld   $51
              4a59 0054  ld   $54
              4a5a 0055  ld   $55
              4a5b 0055  ld   $55
              4a5c 0014  ld   $14
              4a5d 0090  ld   $90
              4a5e 0052  ld   $52
              4a5f 0055  ld   $55
              4a60 0055  ld   $55
              4a61 0055  ld   $55
              4a62 006a  ld   $6a
              4a63 0005  ld   $05
              4a64 00c3  ld   $c3
              4a65 0030  ld   $30
              4a66 000c  ld   $0c
              4a67 00c3  ld   $c3
              4a68 0030  ld   $30
              4a69 00ac  ld   $ac
              4a6a 00fe  ld   $fe
              4a6b 0030  ld   $30
              4a6c 000c  ld   $0c
              4a6d 00c3  ld   $c3
              4a6e 0030  ld   $30
              4a6f 00ac  ld   $ac
              4a70 00fe  ld   $fe
              4a71 0030  ld   $30
              4a72 000c  ld   $0c
              4a73 00c3  ld   $c3
              4a74 00b0  ld   $b0
              4a75 00fa  ld   $fa
              4a76 00c3  ld   $c3
              4a77 0030  ld   $30
              4a78 000c  ld   $0c
              4a79 00c3  ld   $c3
              4a7a 0030  ld   $30
              4a7b 000c  ld   $0c
              4a7c 00c3  ld   $c3
              4a7d 0030  ld   $30
              4a7e 000c  ld   $0c
              4a7f 00c3  ld   $c3
              4a80 0030  ld   $30
              4a81 0000  ld   $00
              4a82 0000  ld   $00
              4a83 0000  ld   $00
              * 8 times
              4a89 0040  ld   $40
              4a8a 0055  ld   $55
              4a8b 0055  ld   $55
              4a8c 0055  ld   $55
              * 5 times
              4a8f 0030  ld   $30
              4a90 000c  ld   $0c
              4a91 00c3  ld   $c3
              4a92 0030  ld   $30
              4a93 000c  ld   $0c
              4a94 00c3  ld   $c3
              4a95 00e9  ld   $e9
              4a96 001a  ld   $1a
              4a97 00a4  ld   $a4
              4a98 0041  ld   $41
              4a99 00b0  ld   $b0
              4a9a 00ae  ld   $ae
              4a9b 0030  ld   $30
              4a9c 000c  ld   $0c
              4a9d 00c3  ld   $c3
              4a9e 00b0  ld   $b0
              4a9f 004a  ld   $4a
              4aa0 00d3  ld   $d3
              4aa1 0034  ld   $34
              4aa2 004d  ld   $4d
              4aa3 00d3  ld   $d3
              4aa4 0034  ld   $34
              4aa5 004d  ld   $4d
              4aa6 00d3  ld   $d3
              4aa7 0034  ld   $34
              4aa8 004d  ld   $4d
              4aa9 00d3  ld   $d3
              4aaa 00b4  ld   $b4
              4aab 000a  ld   $0a
              4aac 00c3  ld   $c3
              4aad 0030  ld   $30
              4aae 000c  ld   $0c
              4aaf 00c3  ld   $c3
              4ab0 0030  ld   $30
              4ab1 000c  ld   $0c
              4ab2 0007  ld   $07
              4ab3 0096  ld   $96
              4ab4 0045  ld   $45
              4ab5 0058  ld   $58
              4ab6 0001  ld   $01
              4ab7 000c  ld   $0c
              4ab8 00c3  ld   $c3
              4ab9 0030  ld   $30
              4aba 000c  ld   $0c
              4abb 00c3  ld   $c3
              4abc 0030  ld   $30
              4abd 00bc  ld   $bc
              4abe 00bc  ld   $bc
              4abf 00bf  ld   $bf
              4ac0 0011  ld   $11
              4ac1 0018  ld   $18
              4ac2 0081  ld   $81
              4ac3 0011  ld   $11
              4ac4 0018  ld   $18
              4ac5 0081  ld   $81
              4ac6 0011  ld   $11
              4ac7 0018  ld   $18
              4ac8 00c1  ld   $c1
              4ac9 001b  ld   $1b
              4aca 0004  ld   $04
              4acb 0041  ld   $41
              4acc 00f0  ld   $f0
              4acd 0007  ld   $07
              4ace 0030  ld   $30
              4acf 000c  ld   $0c
              4ad0 00c3  ld   $c3
              4ad1 0030  ld   $30
              4ad2 000c  ld   $0c
              4ad3 00fc  ld   $fc
              4ad4 0030  ld   $30
              4ad5 000c  ld   $0c
              4ad6 00ff  ld   $ff
              4ad7 003f  ld   $3f
              4ad8 000c  ld   $0c
              4ad9 00c3  ld   $c3
              4ada 003f  ld   $3f
              4adb 00f0  ld   $f0
              4adc 00c3  ld   $c3
              4add 0030  ld   $30
              4ade 000c  ld   $0c
              4adf 00ff  ld   $ff
              4ae0 00c0  ld   $c0
              4ae1 000f  ld   $0f
              4ae2 00c3  ld   $c3
              4ae3 00ff  ld   $ff
              4ae4 000f  ld   $0f
              4ae5 00c3  ld   $c3
              4ae6 0030  ld   $30
              4ae7 000c  ld   $0c
              4ae8 00c3  ld   $c3
              4ae9 00b0  ld   $b0
              4aea 005a  ld   $5a
              4aeb 00a9  ld   $a9
              4aec 00bf  ld   $bf
              4aed 000a  ld   $0a
              4aee 00ab  ld   $ab
              4aef 0095  ld   $95
              4af0 005a  ld   $5a
              4af1 00a9  ld   $a9
              4af2 002a  ld   $2a
              4af3 001c  ld   $1c
              4af4 0004  ld   $04
              4af5 0041  ld   $41
              4af6 0010  ld   $10
              4af7 0044  ld   $44
              4af8 0011  ld   $11
              4af9 000c  ld   $0c
              4afa 00c3  ld   $c3
              4afb fe00  bra  ac          ;+-----------------------------------+
              4afc fcfd  bra  $4afd       ;|                                   |
              4afd 1418  ld   $18,y       ;| Trampoline for page $4a00 lookups |
              4afe e006  jmp  y,$06       ;|                                   |
              4aff c218  st   [$18]       ;+-----------------------------------+
              4b00 0030  ld   $30
              4b01 000c  ld   $0c
              4b02 00c3  ld   $c3
              4b03 00f0  ld   $f0
              4b04 00ff  ld   $ff
              4b05 004b  ld   $4b
              4b06 00ff  ld   $ff
              4b07 00fb  ld   $fb
              4b08 00bf  ld   $bf
              4b09 00bf  ld   $bf
              4b0a 00f4  ld   $f4
              4b0b 00ff  ld   $ff
              4b0c 0030  ld   $30
              4b0d 000c  ld   $0c
              4b0e 00c3  ld   $c3
              4b0f 0030  ld   $30
              4b10 000c  ld   $0c
              4b11 00c3  ld   $c3
              4b12 0030  ld   $30
              4b13 00ac  ld   $ac
              4b14 00aa  ld   $aa
              4b15 00aa  ld   $aa
              4b16 005a  ld   $5a
              4b17 00a9  ld   $a9
              4b18 00aa  ld   $aa
              4b19 00aa  ld   $aa
              4b1a 00aa  ld   $aa
              * 5 times
              4b1d 006a  ld   $6a
              4b1e 009a  ld   $9a
              4b1f 00aa  ld   $aa
              4b20 00aa  ld   $aa
              4b21 00aa  ld   $aa
              * 5 times
              4b24 006a  ld   $6a
              4b25 00a5  ld   $a5
              4b26 0069  ld   $69
              4b27 009a  ld   $9a
              4b28 0006  ld   $06
              4b29 00c3  ld   $c3
              4b2a 0030  ld   $30
              4b2b 000c  ld   $0c
              4b2c 00c3  ld   $c3
              4b2d 0030  ld   $30
              4b2e 00ac  ld   $ac
              4b2f 00fe  ld   $fe
              4b30 0030  ld   $30
              4b31 000c  ld   $0c
              4b32 00c3  ld   $c3
              4b33 0030  ld   $30
              4b34 00ac  ld   $ac
              4b35 00fe  ld   $fe
              4b36 0030  ld   $30
              4b37 000c  ld   $0c
              4b38 00c3  ld   $c3
              4b39 00b0  ld   $b0
              4b3a 00fa  ld   $fa
              4b3b 00c3  ld   $c3
              4b3c 0030  ld   $30
              4b3d 000c  ld   $0c
              4b3e 00c3  ld   $c3
              4b3f 0030  ld   $30
              4b40 000c  ld   $0c
              4b41 00c3  ld   $c3
              4b42 0030  ld   $30
              4b43 000c  ld   $0c
              4b44 00c3  ld   $c3
              4b45 0030  ld   $30
              4b46 000c  ld   $0c
              4b47 0003  ld   $03
              4b48 0000  ld   $00
              4b49 0000  ld   $00
              4b4a 0000  ld   $00
              * 11 times
              4b53 00c3  ld   $c3
              4b54 0030  ld   $30
              4b55 000c  ld   $0c
              4b56 00c3  ld   $c3
              4b57 0030  ld   $30
              4b58 000c  ld   $0c
              4b59 00c3  ld   $c3
              4b5a 00eb  ld   $eb
              4b5b 001a  ld   $1a
              4b5c 0004  ld   $04
              4b5d 0069  ld   $69
              4b5e 00b0  ld   $b0
              4b5f 00a6  ld   $a6
              4b60 0030  ld   $30
              4b61 000c  ld   $0c
              4b62 00c3  ld   $c3
              4b63 0070  ld   $70
              4b64 0005  ld   $05
              4b65 00c3  ld   $c3
              4b66 00fe  ld   $fe
              4b67 00ef  ld   $ef
              4b68 00ff  ld   $ff
              4b69 00fe  ld   $fe
              4b6a 00ef  ld   $ef
              4b6b 00ff  ld   $ff
              4b6c 00fe  ld   $fe
              4b6d 00ef  ld   $ef
              4b6e 00c3  ld   $c3
              4b6f 0070  ld   $70
              4b70 0005  ld   $05
              4b71 00c3  ld   $c3
              4b72 0030  ld   $30
              4b73 000c  ld   $0c
              4b74 00c3  ld   $c3
              4b75 0030  ld   $30
              4b76 000c  ld   $0c
              4b77 0007  ld   $07
              4b78 0084  ld   $84
              4b79 0065  ld   $65
              4b7a 0059  ld   $59
              4b7b 0001  ld   $01
              4b7c 000c  ld   $0c
              4b7d 00c3  ld   $c3
              4b7e 0030  ld   $30
              4b7f 000c  ld   $0c
              4b80 00c3  ld   $c3
              4b81 0030  ld   $30
              4b82 006c  ld   $6c
              4b83 00fc  ld   $fc
              4b84 00ef  ld   $ef
              4b85 00ff  ld   $ff
              4b86 00fe  ld   $fe
              4b87 00ef  ld   $ef
              4b88 00ff  ld   $ff
              4b89 00fe  ld   $fe
              4b8a 00ef  ld   $ef
              4b8b 00ff  ld   $ff
              4b8c 00fe  ld   $fe
              4b8d 00ef  ld   $ef
              4b8e 00ff  ld   $ff
              4b8f 00fe  ld   $fe
              4b90 00ef  ld   $ef
              4b91 00ff  ld   $ff
              4b92 0006  ld   $06
              4b93 0030  ld   $30
              4b94 000c  ld   $0c
              4b95 00c3  ld   $c3
              4b96 000c  ld   $0c
              4b97 00f3  ld   $f3
              4b98 0003  ld   $03
              4b99 000c  ld   $0c
              4b9a 00c3  ld   $c3
              4b9b 0030  ld   $30
              4b9c 000c  ld   $0c
              4b9d 00c3  ld   $c3
              4b9e 0030  ld   $30
              4b9f 00cc  ld   $cc
              4ba0 00ff  ld   $ff
              4ba1 0033  ld   $33
              4ba2 000c  ld   $0c
              4ba3 00c3  ld   $c3
              4ba4 0000  ld   $00
              4ba5 003f  ld   $3f
              4ba6 00c3  ld   $c3
              4ba7 0030  ld   $30
              4ba8 000c  ld   $0c
              4ba9 00c3  ld   $c3
              4baa 0030  ld   $30
              4bab 000c  ld   $0c
              4bac 000c  ld   $0c
              4bad 00c3  ld   $c3
              4bae 0070  ld   $70
              4baf 00a5  ld   $a5
              4bb0 00fe  ld   $fe
              4bb1 00ea  ld   $ea
              4bb2 000f  ld   $0f
              4bb3 00ab  ld   $ab
              4bb4 006a  ld   $6a
              4bb5 00a5  ld   $a5
              4bb6 0056  ld   $56
              4bb7 002a  ld   $2a
              4bb8 001c  ld   $1c
              4bb9 0058  ld   $58
              4bba 0081  ld   $81
              4bbb 0015  ld   $15
              4bbc 0058  ld   $58
              4bbd 0011  ld   $11
              4bbe 000c  ld   $0c
              4bbf 00c3  ld   $c3
              4bc0 0030  ld   $30
              4bc1 000c  ld   $0c
              4bc2 00c3  ld   $c3
              4bc3 00f0  ld   $f0
              4bc4 000f  ld   $0f
              4bc5 00c3  ld   $c3
              4bc6 0052  ld   $52
              4bc7 0024  ld   $24
              4bc8 0005  ld   $05
              4bc9 0012  ld   $12
              4bca 000c  ld   $0c
              4bcb 00ff  ld   $ff
              4bcc 0030  ld   $30
              4bcd 000c  ld   $0c
              4bce 00c3  ld   $c3
              4bcf 0030  ld   $30
              4bd0 000c  ld   $0c
              4bd1 00c3  ld   $c3
              4bd2 0030  ld   $30
              4bd3 005c  ld   $5c
              4bd4 0055  ld   $55
              4bd5 0055  ld   $55
              4bd6 0055  ld   $55
              4bd7 0055  ld   $55
              4bd8 0015  ld   $15
              4bd9 0055  ld   $55
              4bda 00a9  ld   $a9
              4bdb 0095  ld   $95
              4bdc 00aa  ld   $aa
              4bdd 00aa  ld   $aa
              4bde 00aa  ld   $aa
              4bdf 001a  ld   $1a
              4be0 0054  ld   $54
              4be1 0041  ld   $41
              4be2 0055  ld   $55
              4be3 0055  ld   $55
              4be4 0055  ld   $55
              4be5 0055  ld   $55
              4be6 0005  ld   $05
              4be7 0095  ld   $95
              4be8 000a  ld   $0a
              4be9 00c3  ld   $c3
              4bea 0030  ld   $30
              4beb 00cc  ld   $cc
              4bec 0030  ld   $30
              4bed 008c  ld   $8c
              4bee 00fa  ld   $fa
              4bef 00ff  ld   $ff
              4bf0 003f  ld   $3f
              4bf1 00c3  ld   $c3
              4bf2 0030  ld   $30
              4bf3 008c  ld   $8c
              4bf4 00fa  ld   $fa
              4bf5 00ff  ld   $ff
              4bf6 003f  ld   $3f
              4bf7 00c3  ld   $c3
              4bf8 0030  ld   $30
              4bf9 00ea  ld   $ea
              4bfa 00ff  ld   $ff
              4bfb fe00  bra  ac          ;+-----------------------------------+
              4bfc fcfd  bra  $4bfd       ;|                                   |
              4bfd 1418  ld   $18,y       ;| Trampoline for page $4b00 lookups |
              4bfe e006  jmp  y,$06       ;|                                   |
              4bff c218  st   [$18]       ;+-----------------------------------+
              4c00 00ff  ld   $ff
              4c01 000c  ld   $0c
              4c02 00c3  ld   $c3
              4c03 00c0  ld   $c0
              4c04 0030  ld   $30
              4c05 000c  ld   $0c
              4c06 00c3  ld   $c3
              4c07 0030  ld   $30
              4c08 000c  ld   $0c
              4c09 00c3  ld   $c3
              4c0a 0030  ld   $30
              4c0b 000c  ld   $0c
              4c0c 00c3  ld   $c3
              4c0d 0030  ld   $30
              4c0e 0000  ld   $00
              4c0f 0000  ld   $00
              4c10 0000  ld   $00
              * 8 times
              4c16 0015  ld   $15
              4c17 000c  ld   $0c
              4c18 00c3  ld   $c3
              4c19 0030  ld   $30
              4c1a 000c  ld   $0c
              4c1b 00c3  ld   $c3
              4c1c 0030  ld   $30
              4c1d 000c  ld   $0c
              4c1e 00c3  ld   $c3
              4c1f 00e9  ld   $e9
              4c20 001a  ld   $1a
              4c21 00a4  ld   $a4
              4c22 0041  ld   $41
              4c23 00b0  ld   $b0
              4c24 00ae  ld   $ae
              4c25 0030  ld   $30
              4c26 000c  ld   $0c
              4c27 00c3  ld   $c3
              4c28 0070  ld   $70
              4c29 00f5  ld   $f5
              4c2a 00fb  ld   $fb
              4c2b 00bf  ld   $bf
              4c2c 00af  ld   $af
              4c2d 00aa  ld   $aa
              4c2e 00aa  ld   $aa
              4c2f 00aa  ld   $aa
              * 5 times
              4c32 00fa  ld   $fa
              4c33 00fb  ld   $fb
              4c34 007f  ld   $7f
              4c35 0005  ld   $05
              4c36 00c3  ld   $c3
              4c37 0030  ld   $30
              4c38 000c  ld   $0c
              4c39 00c3  ld   $c3
              4c3a 0030  ld   $30
              4c3b 000c  ld   $0c
              4c3c 0007  ld   $07
              4c3d 0084  ld   $84
              4c3e 0065  ld   $65
              4c3f 0059  ld   $59
              4c40 0001  ld   $01
              4c41 000c  ld   $0c
              4c42 00c3  ld   $c3
              4c43 0030  ld   $30
              4c44 000c  ld   $0c
              4c45 00c3  ld   $c3
              4c46 0030  ld   $30
              4c47 00bc  ld   $bc
              4c48 00bc  ld   $bc
              4c49 0000  ld   $00
              4c4a 0000  ld   $00
              4c4b 0000  ld   $00
              * 13 times
              4c56 00f0  ld   $f0
              4c57 0007  ld   $07
              4c58 0030  ld   $30
              4c59 000c  ld   $0c
              4c5a 0033  ld   $33
              4c5b 0008  ld   $08
              4c5c 0082  ld   $82
              4c5d 0020  ld   $20
              4c5e 0008  ld   $08
              4c5f 0082  ld   $82
              4c60 0020  ld   $20
              4c61 0008  ld   $08
              4c62 0082  ld   $82
              4c63 0020  ld   $20
              4c64 0008  ld   $08
              4c65 0082  ld   $82
              4c66 0020  ld   $20
              4c67 0008  ld   $08
              4c68 0082  ld   $82
              4c69 0020  ld   $20
              4c6a 0008  ld   $08
              4c6b 0082  ld   $82
              4c6c 0020  ld   $20
              4c6d 0008  ld   $08
              4c6e 0082  ld   $82
              4c6f 0020  ld   $20
              4c70 0008  ld   $08
              4c71 0003  ld   $03
              4c72 00c3  ld   $c3
              4c73 00b0  ld   $b0
              4c74 005a  ld   $5a
              4c75 00a9  ld   $a9
              4c76 00bf  ld   $bf
              4c77 000a  ld   $0a
              4c78 00ab  ld   $ab
              4c79 00aa  ld   $aa
              4c7a 00aa  ld   $aa
              4c7b 00aa  ld   $aa
              4c7c 002a  ld   $2a
              4c7d 001c  ld   $1c
              4c7e 0004  ld   $04
              4c7f 0041  ld   $41
              4c80 0010  ld   $10
              4c81 0044  ld   $44
              4c82 0011  ld   $11
              4c83 000c  ld   $0c
              4c84 00c3  ld   $c3
              4c85 0030  ld   $30
              4c86 000c  ld   $0c
              4c87 00ff  ld   $ff
              4c88 00ff  ld   $ff
              4c89 00ff  ld   $ff
              * 11 times
              4c92 000f  ld   $0f
              4c93 00c3  ld   $c3
              4c94 0030  ld   $30
              4c95 000c  ld   $0c
              4c96 00c3  ld   $c3
              4c97 0030  ld   $30
              4c98 005c  ld   $5c
              4c99 0014  ld   $14
              4c9a 0045  ld   $45
              4c9b 0051  ld   $51
              4c9c 0014  ld   $14
              4c9d 0045  ld   $45
              4c9e 0051  ld   $51
              4c9f 0014  ld   $14
              4ca0 0045  ld   $45
              4ca1 0051  ld   $51
              4ca2 0014  ld   $14
              4ca3 0045  ld   $45
              4ca4 0051  ld   $51
              4ca5 0014  ld   $14
              4ca6 0045  ld   $45
              4ca7 0051  ld   $51
              4ca8 0014  ld   $14
              4ca9 0045  ld   $45
              4caa 0051  ld   $51
              4cab 0014  ld   $14
              4cac 0045  ld   $45
              4cad 0001  ld   $01
              4cae 00c3  ld   $c3
              4caf 0030  ld   $30
              4cb0 0083  ld   $83
              4cb1 0020  ld   $20
              4cb2 0008  ld   $08
              4cb3 0082  ld   $82
              4cb4 0020  ld   $20
              4cb5 0008  ld   $08
              4cb6 0082  ld   $82
              4cb7 0020  ld   $20
              4cb8 0008  ld   $08
              4cb9 0082  ld   $82
              4cba 0020  ld   $20
              4cbb 0008  ld   $08
              4cbc 0082  ld   $82
              4cbd 0020  ld   $20
              4cbe 0008  ld   $08
              4cbf 0082  ld   $82
              4cc0 0020  ld   $20
              4cc1 0008  ld   $08
              4cc2 0082  ld   $82
              4cc3 0030  ld   $30
              4cc4 0030  ld   $30
              4cc5 000c  ld   $0c
              4cc6 00c3  ld   $c3
              4cc7 0030  ld   $30
              4cc8 000c  ld   $0c
              4cc9 00c3  ld   $c3
              4cca 0030  ld   $30
              4ccb 000c  ld   $0c
              4ccc 00c3  ld   $c3
              4ccd 0030  ld   $30
              4cce 000c  ld   $0c
              4ccf 0003  ld   $03
              4cd0 0000  ld   $00
              4cd1 0000  ld   $00
              4cd2 0000  ld   $00
              * 5 times
              4cd5 00c3  ld   $c3
              4cd6 0015  ld   $15
              4cd7 000c  ld   $0c
              4cd8 00c3  ld   $c3
              4cd9 0030  ld   $30
              4cda 000c  ld   $0c
              4cdb 00c3  ld   $c3
              4cdc 0030  ld   $30
              4cdd 000c  ld   $0c
              4cde 00c3  ld   $c3
              4cdf 00eb  ld   $eb
              4ce0 001a  ld   $1a
              4ce1 0004  ld   $04         ;End of Apps/Racer/Horizon-256x16.rgb, size 3132
                                          ;+-----------------------------------+
                                          ;| Apps/Racer/Racer_v2.gcl           |
                                          ;+-----------------------------------+
              4ce2 dc7a  st   $7a,[y,x++] ;'z'
              4ce3 dc69  st   $69,[y,x++] ;'i'
              4ce4 dc70  st   $70,[y,x++] ;'p'
              4ce5 dc70  st   $70,[y,x++] ;'p'
              4ce6 dc65  st   $65,[y,x++] ;'e'
              4ce7 dc64  st   $64,[y,x++] ;'d'
              4ce8 dc52  st   $52,[y,x++] ;'R'
              4ce9 dc61  st   $61,[y,x++] ;'a'
              4cea 00a6  ld   $a6
              4ceb c218  st   [$18]
              4cec 0040  ld   $40
              4ced 14df  ld   $df,y
              4cee e0ac  jmp  y,$ac
              4cef c219  st   [$19]
Racer:        4cf0 0002  ld   $02         ;| RAM segment address (high byte first)
              4cf1 0000  ld   $00         ;|
              4cf2 00f7  ld   $f7         ;| Length (1..256)
              4cf3 001a  ld   $1a         ;0200 LD
              4cf4 0021  ld   $21
              4cf5 00e6  ld   $e6         ;0202 SUBI
              4cf6 0020  ld   $20
              4cf7 0035  ld   $35         ;0204 BCC
              4cf8 0053  ld   $53         ;0205 GE
              4cf9 000b  ld   $0b
              4cfa 0021  ld   $21         ;0207 LDW
              4cfb fe00  bra  ac          ;+-----------------------------------+
              4cfc fcfd  bra  $4cfd       ;|                                   |
              4cfd 1418  ld   $18,y       ;| Trampoline for page $4c00 lookups |
              4cfe e006  jmp  y,$06       ;|                                   |
              4cff c218  st   [$18]       ;+-----------------------------------+
              4d00 000e  ld   $0e         ;0207 '_frameCount'
              4d01 00f3  ld   $f3         ;0209 DOKE
              4d02 0017  ld   $17         ;0209 '_vPCH'
              4d03 0090  ld   $90         ;020b BRA
              4d04 0005  ld   $05
              4d05 00cd  ld   $cd         ;020d DEF
              4d06 0057  ld   $57
              4d07 00e6  ld   $e6         ;020f SUBI
              4d08 0052  ld   $52
              4d09 0035  ld   $35         ;0211 BCC
              4d0a 0053  ld   $53         ;0212 GE
              4d0b 001b  ld   $1b
              4d0c 00e3  ld   $e3         ;0214 ADDI
              4d0d 0032  ld   $32
              4d0e 002b  ld   $2b         ;0216 STW
              4d0f 0030  ld   $30         ;0216 'i'
              4d10 0011  ld   $11         ;0218 LDWI
              4d11 0000  ld   $00
              4d12 0007  ld   $07
              4d13 0090  ld   $90         ;021b BRA
              4d14 0020  ld   $20
              4d15 002b  ld   $2b         ;021d STW
              4d16 0030  ld   $30         ;021d 'i'
              4d17 0011  ld   $11         ;021f LDWI
              4d18 0000  ld   $00
              4d19 0008  ld   $08
              4d1a 002b  ld   $2b         ;0222 STW
              4d1b 0032  ld   $32         ;0222 'fontData'
              4d1c 0021  ld   $21         ;0224 LDW
              4d1d 0030  ld   $30         ;0224 'i'
              4d1e 00e9  ld   $e9         ;0226 LSLW
              4d1f 00e9  ld   $e9         ;0227 LSLW
              4d20 0099  ld   $99         ;0228 ADDW
              4d21 0030  ld   $30         ;0228 'i'
              4d22 0099  ld   $99         ;022a ADDW
              4d23 0032  ld   $32         ;022a 'fontData'
              4d24 002b  ld   $2b         ;022c STW
              4d25 0032  ld   $32         ;022c 'fontData'
              4d26 0021  ld   $21         ;022e LDW
              4d27 0034  ld   $34         ;022e 'BgColor'
              4d28 005e  ld   $5e         ;0230 ST
              4d29 0024  ld   $24
              4d2a 0021  ld   $21         ;0232 LDW
              4d2b 0036  ld   $36         ;0232 'Color'
              4d2c 005e  ld   $5e         ;0234 ST
              4d2d 0025  ld   $25
              4d2e 0021  ld   $21         ;0236 LDW
              4d2f 0038  ld   $38         ;0236 'Pos'
              4d30 002b  ld   $2b         ;0238 STW
              4d31 0028  ld   $28
              4d32 0011  ld   $11         ;023a LDWI
              4d33 00e1  ld   $e1
              4d34 0004  ld   $04
              4d35 002b  ld   $2b         ;023d STW
              4d36 0022  ld   $22
              4d37 0059  ld   $59         ;023f LDI
              4d38 00fb  ld   $fb
              4d39 002b  ld   $2b         ;0241 STW
              4d3a 0030  ld   $30         ;0241 'i'
              4d3b 0021  ld   $21         ;0243 LDW
              4d3c 0032  ld   $32         ;0243 'fontData'
              4d3d 007f  ld   $7f         ;0245 LUP
              4d3e 0000  ld   $00
              4d3f 0093  ld   $93         ;0247 INC
              4d40 0032  ld   $32         ;0247 'fontData'
              4d41 005e  ld   $5e         ;0249 ST
              4d42 0026  ld   $26
              4d43 00b4  ld   $b4         ;024b SYS
              4d44 00cc  ld   $cc
              4d45 0093  ld   $93         ;024d INC
              4d46 0028  ld   $28
              4d47 0093  ld   $93         ;024f INC
              4d48 0030  ld   $30         ;024f 'i'
              4d49 0021  ld   $21         ;0251 LDW
              4d4a 0030  ld   $30         ;0251 'i'
              4d4b 0035  ld   $35         ;0253 BCC
              4d4c 0072  ld   $72         ;0254 NE
              4d4d 0041  ld   $41
              4d4e 0021  ld   $21         ;0256 LDW
              4d4f 0038  ld   $38         ;0256 'Pos'
              4d50 00ff  ld   $ff         ;0258 RET
              4d51 002b  ld   $2b         ;0259 STW
              4d52 003a  ld   $3a         ;0259 'QPrintChar'
              4d53 00cd  ld   $cd         ;025b DEF
              4d54 00f0  ld   $f0
              4d55 001a  ld   $1a         ;025d LD
              4d56 000e  ld   $0e
              4d57 00b8  ld   $b8         ;025f SUBW
              4d58 003c  ld   $3c         ;025f 'LastFrame'
              4d59 0082  ld   $82         ;0261 ANDI
              4d5a 00ff  ld   $ff
              4d5b 005e  ld   $5e         ;0263 ST
              4d5c 002b  ld   $2b
              4d5d 0099  ld   $99         ;0265 ADDW
              4d5e 003e  ld   $3e         ;0265 'Time'
              4d5f 0035  ld   $35         ;0267 BCC
              4d60 0053  ld   $53         ;0268 GE
              4d61 006b  ld   $6b
              4d62 0011  ld   $11         ;026a LDWI
              4d63 00ff  ld   $ff
              4d64 007f  ld   $7f
              4d65 002b  ld   $2b         ;026d STW
              4d66 003e  ld   $3e         ;026d 'Time'
              4d67 001a  ld   $1a         ;026f LD
              4d68 000e  ld   $0e
              4d69 002b  ld   $2b         ;0271 STW
              4d6a 003c  ld   $3c         ;0271 'LastFrame'
              4d6b 001a  ld   $1a         ;0273 LD
              4d6c 0041  ld   $41         ;0273 'Speed'+1
              4d6d 0035  ld   $35         ;0275 BCC
              4d6e 0056  ld   $56         ;0276 LE
              4d6f 008a  ld   $8a
              4d70 002b  ld   $2b         ;0278 STW
              4d71 0030  ld   $30         ;0278 'i'
              4d72 0021  ld   $21         ;027a LDW
              4d73 0042  ld   $42         ;027a 'CarX'
              4d74 00b8  ld   $b8         ;027c SUBW
              4d75 0044  ld   $44         ;027c 'DriftX'
              4d76 002b  ld   $2b         ;027e STW
              4d77 0042  ld   $42         ;027e 'CarX'
              4d78 0021  ld   $21         ;0280 LDW
              4d79 0046  ld   $46         ;0280 'HorizonX'
              4d7a 0099  ld   $99         ;0282 ADDW
              4d7b 0048  ld   $48         ;0282 'HorizonDX'
              4d7c 002b  ld   $2b         ;0284 STW
              4d7d 0046  ld   $46         ;0284 'HorizonX'
              4d7e 0021  ld   $21         ;0286 LDW
              4d7f 0030  ld   $30         ;0286 'i'
              4d80 00e6  ld   $e6         ;0288 SUBI
              4d81 0001  ld   $01
              4d82 0090  ld   $90         ;028a BRA
              4d83 0073  ld   $73
              4d84 0059  ld   $59         ;028c LDI
              4d85 0000  ld   $00
              4d86 002b  ld   $2b         ;028e STW
              4d87 004a  ld   $4a         ;028e 'Steer'
              4d88 001a  ld   $1a         ;0290 LD
              4d89 0011  ld   $11
              4d8a 0082  ld   $82         ;0292 ANDI
              4d8b 0001  ld   $01
              4d8c 0035  ld   $35         ;0294 BCC
              4d8d 0072  ld   $72         ;0295 NE
              4d8e 00a0  ld   $a0
              4d8f 0011  ld   $11         ;0297 LDWI
              4d90 0000  ld   $00
              4d91 0002  ld   $02
              4d92 0099  ld   $99         ;029a ADDW
              4d93 0042  ld   $42         ;029a 'CarX'
              4d94 002b  ld   $2b         ;029c STW
              4d95 0042  ld   $42         ;029c 'CarX'
              4d96 0059  ld   $59         ;029e LDI
              4d97 0001  ld   $01
              4d98 002b  ld   $2b         ;02a0 STW
              4d99 004a  ld   $4a         ;02a0 'Steer'
              4d9a 001a  ld   $1a         ;02a2 LD
              4d9b 0011  ld   $11
              4d9c 0082  ld   $82         ;02a4 ANDI
              4d9d 0002  ld   $02
              4d9e 0035  ld   $35         ;02a6 BCC
              4d9f 0072  ld   $72         ;02a7 NE
              4da0 00b3  ld   $b3
              4da1 0011  ld   $11         ;02a9 LDWI
              4da2 0000  ld   $00
              4da3 00fe  ld   $fe
              4da4 0099  ld   $99         ;02ac ADDW
              4da5 0042  ld   $42         ;02ac 'CarX'
              4da6 002b  ld   $2b         ;02ae STW
              4da7 0042  ld   $42         ;02ae 'CarX'
              4da8 0011  ld   $11         ;02b0 LDWI
              4da9 00ff  ld   $ff
              4daa 00ff  ld   $ff
              4dab 002b  ld   $2b         ;02b3 STW
              4dac 004a  ld   $4a         ;02b3 'Steer'
              4dad 001a  ld   $1a         ;02b5 LD
              4dae 0011  ld   $11
              4daf 0082  ld   $82         ;02b7 ANDI
              4db0 0080  ld   $80
              4db1 0035  ld   $35         ;02b9 BCC
              4db2 0072  ld   $72         ;02ba NE
              4db3 00cf  ld   $cf
              4db4 0021  ld   $21         ;02bc LDW
              4db5 0040  ld   $40         ;02bc 'Speed'
              4db6 00e3  ld   $e3         ;02be ADDI
              4db7 0010  ld   $10
              4db8 002b  ld   $2b         ;02c0 STW
              4db9 0040  ld   $40         ;02c0 'Speed'
              4dba 0011  ld   $11         ;02c2 LDWI
              4dbb 00ff  ld   $ff
              4dbc 0005  ld   $05
              4dbd 00b8  ld   $b8         ;02c5 SUBW
              4dbe 0040  ld   $40         ;02c5 'Speed'
              4dbf 0035  ld   $35         ;02c7 BCC
              4dc0 0053  ld   $53         ;02c8 GE
              4dc1 00cd  ld   $cd
              4dc2 0011  ld   $11         ;02ca LDWI
              4dc3 00ff  ld   $ff
              4dc4 0005  ld   $05
              4dc5 002b  ld   $2b         ;02cd STW
              4dc6 0040  ld   $40         ;02cd 'Speed'
              4dc7 0090  ld   $90         ;02cf BRA
              4dc8 00dd  ld   $dd
              4dc9 0011  ld   $11         ;02d1 LDWI
              4dca 00f8  ld   $f8
              4dcb 00fe  ld   $fe
              4dcc 0099  ld   $99         ;02d4 ADDW
              4dcd 0040  ld   $40         ;02d4 'Speed'
              4dce 0035  ld   $35         ;02d6 BCC
              4dcf 0050  ld   $50         ;02d7 LT
              4dd0 00dd  ld   $dd
              4dd1 0021  ld   $21         ;02d9 LDW
              4dd2 0040  ld   $40         ;02d9 'Speed'
              4dd3 00e6  ld   $e6         ;02db SUBI
              4dd4 0008  ld   $08
              4dd5 002b  ld   $2b         ;02dd STW
              4dd6 0040  ld   $40         ;02dd 'Speed'
              4dd7 001a  ld   $1a         ;02df LD
              4dd8 0011  ld   $11
              4dd9 0082  ld   $82         ;02e1 ANDI
              4dda 0040  ld   $40
              4ddb 0035  ld   $35         ;02e3 BCC
              4ddc 0072  ld   $72         ;02e4 NE
              4ddd 00ef  ld   $ef
              4dde 0021  ld   $21         ;02e6 LDW
              4ddf 0040  ld   $40         ;02e6 'Speed'
              4de0 00e6  ld   $e6         ;02e8 SUBI
              4de1 0040  ld   $40
              4de2 0035  ld   $35         ;02ea BCC
              4de3 0053  ld   $53         ;02eb GE
              4de4 00ed  ld   $ed
              4de5 0059  ld   $59         ;02ed LDI
              4de6 0000  ld   $00
              4de7 002b  ld   $2b         ;02ef STW
              4de8 0040  ld   $40         ;02ef 'Speed'
              4de9 00ff  ld   $ff         ;02f1 RET
              4dea 002b  ld   $2b         ;02f2 STW
              4deb 004c  ld   $4c         ;02f2 'ControlRaceCar'
              4dec 0093  ld   $93         ;02f4 INC
              4ded 001b  ld   $1b         ;02f4 '_vLR'+1
              4dee 00ff  ld   $ff         ;02f6 RET
              4def 0003  ld   $03         ;| RAM segment address (high byte first)
              4df0 0000  ld   $00         ;|
              4df1 00e1  ld   $e1         ;| Length (1..256)
              4df2 00cd  ld   $cd         ;0300 DEF
              4df3 0009  ld   $09
              4df4 0047  ld   $47         ;0302 'G'
              4df5 0069  ld   $69         ;0303 'i'
              4df6 0067  ld   $67         ;0304 'g'
              4df7 0061  ld   $61         ;0305 'a'
              4df8 0074  ld   $74         ;0306 't'
              4df9 0072  ld   $72         ;0307 'r'
              4dfa 006f  ld   $6f         ;0308 'o'
              4dfb fe00  bra  ac          ;+-----------------------------------+
              4dfc fcfd  bra  $4dfd       ;|                                   |
              4dfd 1418  ld   $18,y       ;| Trampoline for page $4d00 lookups |
              4dfe e006  jmp  y,$06       ;|                                   |
              4dff c218  st   [$18]       ;+-----------------------------------+
              4e00 006e  ld   $6e         ;0309 'n'
              4e01 0000  ld   $00         ;030a 0
              4e02 002b  ld   $2b         ;030b STW
              4e03 004e  ld   $4e         ;030b 'GigatronText'
              4e04 00cd  ld   $cd         ;030d DEF
              4e05 001d  ld   $1d
              4e06 001a  ld   $1a         ;030f LD
              4e07 000e  ld   $0e
              4e08 0099  ld   $99         ;0311 ADDW
              4e09 0050  ld   $50         ;0311 'Delay'
              4e0a 0082  ld   $82         ;0313 ANDI
              4e0b 00ff  ld   $ff
              4e0c 002b  ld   $2b         ;0315 STW
              4e0d 0052  ld   $52         ;0315 'tmp'
              4e0e 001a  ld   $1a         ;0317 LD
              4e0f 000e  ld   $0e
              4e10 00b8  ld   $b8         ;0319 SUBW
              4e11 0052  ld   $52         ;0319 'tmp'
              4e12 0035  ld   $35         ;031b BCC
              4e13 0072  ld   $72         ;031c NE
              4e14 0015  ld   $15
              4e15 00ff  ld   $ff         ;031e RET
              4e16 002b  ld   $2b         ;031f STW
              4e17 0054  ld   $54         ;031f 'Wait'
              4e18 00cd  ld   $cd         ;0321 DEF
              4e19 00a1  ld   $a1
              4e1a 0021  ld   $21         ;0323 LDW
              4e1b 0056  ld   $56         ;0323 'Video'
              4e1c 00ad  ld   $ad         ;0325 PEEK
              4e1d 0082  ld   $82         ;0326 ANDI
              4e1e 00fe  ld   $fe
              4e1f 005e  ld   $5e         ;0328 ST
              4e20 0059  ld   $59         ;0328 'p'+1
              4e21 0088  ld   $88         ;032a ORI
              4e22 0001  ld   $01
              4e23 005e  ld   $5e         ;032c ST
              4e24 005b  ld   $5b         ;032c 'q'+1
              4e25 0093  ld   $93         ;032e INC
              4e26 0056  ld   $56         ;032e 'Video'
              4e27 0059  ld   $59         ;0330 LDI
              4e28 0000  ld   $00
              4e29 005e  ld   $5e         ;0332 ST
              4e2a 0058  ld   $58         ;0332 'p'
              4e2b 005e  ld   $5e         ;0334 ST
              4e2c 005a  ld   $5a         ;0334 'q'
              4e2d 0021  ld   $21         ;0336 LDW
              4e2e 0058  ld   $58         ;0336 'p'
              4e2f 00ad  ld   $ad         ;0338 PEEK
              4e30 002b  ld   $2b         ;0339 STW
              4e31 0030  ld   $30         ;0339 'i'
              4e32 0021  ld   $21         ;033b LDW
              4e33 005a  ld   $5a         ;033b 'q'
              4e34 00ad  ld   $ad         ;033d PEEK
              4e35 00b8  ld   $b8         ;033e SUBW
              4e36 0030  ld   $30         ;033e 'i'
              4e37 002b  ld   $2b         ;0340 STW
              4e38 0030  ld   $30         ;0340 'i'
              4e39 0021  ld   $21         ;0342 LDW
              4e3a 0058  ld   $58         ;0342 'p'
              4e3b 00ad  ld   $ad         ;0344 PEEK
              4e3c 005e  ld   $5e         ;0345 ST
              4e3d 0058  ld   $58         ;0345 'p'
              4e3e 005e  ld   $5e         ;0347 ST
              4e3f 005a  ld   $5a         ;0347 'q'
              4e40 0059  ld   $59         ;0349 LDI
              4e41 0015  ld   $15
              4e42 00f0  ld   $f0         ;034b POKE
              4e43 0058  ld   $58         ;034b 'p'
              4e44 00f0  ld   $f0         ;034d POKE
              4e45 005a  ld   $5a         ;034d 'q'
              4e46 0093  ld   $93         ;034f INC
              4e47 0058  ld   $58         ;034f 'p'
              4e48 0093  ld   $93         ;0351 INC
              4e49 005a  ld   $5a         ;0351 'q'
              4e4a 0021  ld   $21         ;0353 LDW
              4e4b 0030  ld   $30         ;0353 'i'
              4e4c 00e6  ld   $e6         ;0355 SUBI
              4e4d 0001  ld   $01
              4e4e 002b  ld   $2b         ;0357 STW
              4e4f 0030  ld   $30         ;0357 'i'
              4e50 0035  ld   $35         ;0359 BCC
              4e51 004d  ld   $4d         ;035a GT
              4e52 0047  ld   $47
              4e53 0021  ld   $21         ;035c LDW
              4e54 005c  ld   $5c         ;035c 'Sprite'
              4e55 002b  ld   $2b         ;035e STW
              4e56 005e  ld   $5e         ;035e 's'
              4e57 0059  ld   $59         ;0360 LDI
              4e58 0000  ld   $00
              4e59 005e  ld   $5e         ;0362 ST
              4e5a 0058  ld   $58         ;0362 'p'
              4e5b 0021  ld   $21         ;0364 LDW
              4e5c 0056  ld   $56         ;0364 'Video'
              4e5d 00ad  ld   $ad         ;0366 PEEK
              4e5e 0099  ld   $99         ;0367 ADDW
              4e5f 0060  ld   $60         ;0367 'X'
              4e60 002b  ld   $2b         ;0369 STW
              4e61 0060  ld   $60         ;0369 'X'
              4e62 0021  ld   $21         ;036b LDW
              4e63 005e  ld   $5e         ;036b 's'
              4e64 00ad  ld   $ad         ;036d PEEK
              4e65 0099  ld   $99         ;036e ADDW
              4e66 0060  ld   $60         ;036e 'X'
              4e67 00f0  ld   $f0         ;0370 POKE
              4e68 0058  ld   $58         ;0370 'p'
              4e69 005e  ld   $5e         ;0372 ST
              4e6a 0058  ld   $58         ;0372 'p'
              4e6b 005e  ld   $5e         ;0374 ST
              4e6c 005a  ld   $5a         ;0374 'q'
              4e6d 0093  ld   $93         ;0376 INC
              4e6e 005e  ld   $5e         ;0376 's'
              4e6f 0021  ld   $21         ;0378 LDW
              4e70 0058  ld   $58         ;0378 'p'
              4e71 00ad  ld   $ad         ;037a PEEK
              4e72 008c  ld   $8c         ;037b XORI
              4e73 0015  ld   $15
              4e74 0099  ld   $99         ;037d ADDW
              4e75 0062  ld   $62         ;037d 'Collision'
              4e76 002b  ld   $2b         ;037f STW
              4e77 0062  ld   $62         ;037f 'Collision'
              4e78 0021  ld   $21         ;0381 LDW
              4e79 005e  ld   $5e         ;0381 's'
              4e7a 00ad  ld   $ad         ;0383 PEEK
              4e7b 00f0  ld   $f0         ;0384 POKE
              4e7c 0058  ld   $58         ;0384 'p'
              4e7d 0093  ld   $93         ;0386 INC
              4e7e 0058  ld   $58         ;0386 'p'
              4e7f 00f0  ld   $f0         ;0388 POKE
              4e80 005a  ld   $5a         ;0388 'q'
              4e81 0093  ld   $93         ;038a INC
              4e82 005a  ld   $5a         ;038a 'q'
              4e83 0093  ld   $93         ;038c INC
              4e84 005e  ld   $5e         ;038c 's'
              4e85 0021  ld   $21         ;038e LDW
              4e86 005e  ld   $5e         ;038e 's'
              4e87 00ad  ld   $ad         ;0390 PEEK
              4e88 0035  ld   $35         ;0391 BCC
              4e89 0072  ld   $72         ;0392 NE
              4e8a 0076  ld   $76
              4e8b 0059  ld   $59         ;0394 LDI
              4e8c 0000  ld   $00
              4e8d 005e  ld   $5e         ;0396 ST
              4e8e 005a  ld   $5a         ;0396 'q'
              4e8f 001a  ld   $1a         ;0398 LD
              4e90 0058  ld   $58         ;0398 'p'
              4e91 00f0  ld   $f0         ;039a POKE
              4e92 005a  ld   $5a         ;039a 'q'
              4e93 0021  ld   $21         ;039c LDW
              4e94 0056  ld   $56         ;039c 'Video'
              4e95 00e3  ld   $e3         ;039e ADDI
              4e96 0003  ld   $03
              4e97 002b  ld   $2b         ;03a0 STW
              4e98 0056  ld   $56         ;03a0 'Video'
              4e99 00ff  ld   $ff         ;03a2 RET
              4e9a 002b  ld   $2b         ;03a3 STW
              4e9b 0064  ld   $64         ;03a3 'DrawPixels'
              4e9c 00cd  ld   $cd         ;03a5 DEF
              4e9d 00da  ld   $da
              4e9e 0011  ld   $11         ;03a7 LDWI
              4e9f 00fd  ld   $fd
              4ea0 0001  ld   $01
              4ea1 002b  ld   $2b         ;03aa STW
              4ea2 0058  ld   $58         ;03aa 'p'
              4ea3 0021  ld   $21         ;03ac LDW
              4ea4 0040  ld   $40         ;03ac 'Speed'
              4ea5 0099  ld   $99         ;03ae ADDW
              4ea6 0040  ld   $40         ;03ae 'Speed'
              4ea7 001a  ld   $1a         ;03b0 LD
              4ea8 0019  ld   $19
              4ea9 00f0  ld   $f0         ;03b2 POKE
              4eaa 0058  ld   $58         ;03b2 'p'
              4eab 0093  ld   $93         ;03b4 INC
              4eac 0059  ld   $59         ;03b4 'p'+1
              4ead 00f0  ld   $f0         ;03b6 POKE
              4eae 0058  ld   $58         ;03b6 'p'
              4eaf 0093  ld   $93         ;03b8 INC
              4eb0 0059  ld   $59         ;03b8 'p'+1
              4eb1 00f0  ld   $f0         ;03ba POKE
              4eb2 0058  ld   $58         ;03ba 'p'
              4eb3 0093  ld   $93         ;03bc INC
              4eb4 0059  ld   $59         ;03bc 'p'+1
              4eb5 00f0  ld   $f0         ;03be POKE
              4eb6 0058  ld   $58         ;03be 'p'
              4eb7 0011  ld   $11         ;03c0 LDWI
              4eb8 00fc  ld   $fc
              4eb9 0001  ld   $01
              4eba 002b  ld   $2b         ;03c3 STW
              4ebb 0058  ld   $58         ;03c3 'p'
              4ebc 0021  ld   $21         ;03c5 LDW
              4ebd 0040  ld   $40         ;03c5 'Speed'
              4ebe 0082  ld   $82         ;03c7 ANDI
              4ebf 007f  ld   $7f
              4ec0 00f0  ld   $f0         ;03c9 POKE
              4ec1 0058  ld   $58         ;03c9 'p'
              4ec2 0093  ld   $93         ;03cb INC
              4ec3 0059  ld   $59         ;03cb 'p'+1
              4ec4 00f0  ld   $f0         ;03cd POKE
              4ec5 0058  ld   $58         ;03cd 'p'
              4ec6 0093  ld   $93         ;03cf INC
              4ec7 0059  ld   $59         ;03cf 'p'+1
              4ec8 00f0  ld   $f0         ;03d1 POKE
              4ec9 0058  ld   $58         ;03d1 'p'
              4eca 0093  ld   $93         ;03d3 INC
              4ecb 0059  ld   $59         ;03d3 'p'+1
              4ecc 00f0  ld   $f0         ;03d5 POKE
              4ecd 0058  ld   $58         ;03d5 'p'
              4ece 0059  ld   $59         ;03d7 LDI
              4ecf 000a  ld   $0a
              4ed0 005e  ld   $5e         ;03d9 ST
              4ed1 002c  ld   $2c
              4ed2 00ff  ld   $ff         ;03db RET
              4ed3 002b  ld   $2b         ;03dc STW
              4ed4 0066  ld   $66         ;03dc 'PlayEngineSound'
              4ed5 0093  ld   $93         ;03de INC
              4ed6 001b  ld   $1b         ;03de '_vLR'+1
              4ed7 00ff  ld   $ff         ;03e0 RET
              4ed8 0004  ld   $04         ;| RAM segment address (high byte first)
              4ed9 0000  ld   $00         ;|
              4eda 00ef  ld   $ef         ;| Length (1..256)
              4edb 00cd  ld   $cd         ;0400 DEF
              4edc 003e  ld   $3e
              4edd 0075  ld   $75         ;0402 PUSH
              4ede 0011  ld   $11         ;0403 LDWI
              4edf 0080  ld   $80
              4ee0 0020  ld   $20
              4ee1 002b  ld   $2b         ;0406 STW
              4ee2 0038  ld   $38         ;0406 'Pos'
              4ee3 0011  ld   $11         ;0408 LDWI
              4ee4 0003  ld   $03
              4ee5 000b  ld   $0b
              4ee6 002b  ld   $2b         ;040b STW
              4ee7 0022  ld   $22
              4ee8 0059  ld   $59         ;040d LDI
              4ee9 0000  ld   $00
              4eea 002b  ld   $2b         ;040f STW
              4eeb 0068  ld   $68         ;040f 'Width'
              4eec 0021  ld   $21         ;0411 LDW
              4eed 0068  ld   $68         ;0411 'Width'
              4eee 00e3  ld   $e3         ;0413 ADDI
              4eef 0001  ld   $01
              4ef0 002b  ld   $2b         ;0415 STW
              4ef1 0068  ld   $68         ;0415 'Width'
              4ef2 0059  ld   $59         ;0417 LDI
              4ef3 003f  ld   $3f
              4ef4 002b  ld   $2b         ;0419 STW
              4ef5 006a  ld   $6a         ;0419 'CurbColor'
              4ef6 0059  ld   $59         ;041b LDI
              4ef7 000c  ld   $0c
              4ef8 002b  ld   $2b         ;041d STW
              4ef9 006c  ld   $6c         ;041d 'GrassColor'
              4efa 00cf  ld   $cf         ;041f CALL
              4efb fe00  bra  ac          ;+-----------------------------------+
              4efc fcfd  bra  $4efd       ;|                                   |
              4efd 1418  ld   $18,y       ;| Trampoline for page $4e00 lookups |
              4efe e006  jmp  y,$06       ;|                                   |
              4eff c218  st   [$18]       ;+-----------------------------------+
              4f00 006e  ld   $6e         ;041f 'SetupSegment'
              4f01 0093  ld   $93         ;0421 INC
              4f02 0039  ld   $39         ;0421 'Pos'+1
              4f03 0059  ld   $59         ;0423 LDI
              4f04 0003  ld   $03
              4f05 002b  ld   $2b         ;0425 STW
              4f06 006a  ld   $6a         ;0425 'CurbColor'
              4f07 0059  ld   $59         ;0427 LDI
              4f08 0008  ld   $08
              4f09 002b  ld   $2b         ;0429 STW
              4f0a 006c  ld   $6c         ;0429 'GrassColor'
              4f0b 00cf  ld   $cf         ;042b CALL
              4f0c 006e  ld   $6e         ;042b 'SetupSegment'
              4f0d 0093  ld   $93         ;042d INC
              4f0e 0039  ld   $39         ;042d 'Pos'+1
              4f0f 0021  ld   $21         ;042f LDW
              4f10 0038  ld   $38         ;042f 'Pos'
              4f11 0035  ld   $35         ;0431 BCC
              4f12 0053  ld   $53         ;0432 GE
              4f13 000f  ld   $0f
              4f14 0011  ld   $11         ;0434 LDWI
              4f15 0000  ld   $00
              4f16 0074  ld   $74
              4f17 00f0  ld   $f0         ;0437 1008
              4f18 0018  ld   $18         ;0438 24
              4f19 0093  ld   $93         ;0439 INC
              4f1a 0019  ld   $19
              4f1b 0035  ld   $35         ;043b BCC
              4f1c 004d  ld   $4d         ;043c GT
              4f1d 0035  ld   $35
              4f1e 0063  ld   $63         ;043e POP
              4f1f 00ff  ld   $ff         ;043f RET
              4f20 002b  ld   $2b         ;0440 STW
              4f21 0070  ld   $70         ;0440 'SetupRoad'
              4f22 00cd  ld   $cd         ;0442 DEF
              4f23 0086  ld   $86
              4f24 0021  ld   $21         ;0444 LDW
              4f25 0068  ld   $68         ;0444 'Width'
              4f26 00e9  ld   $e9         ;0446 LSLW
              4f27 005e  ld   $5e         ;0447 ST
              4f28 0024  ld   $24
              4f29 0021  ld   $21         ;0449 LDW
              4f2a 0038  ld   $38         ;0449 'Pos'
              4f2b 00b8  ld   $b8         ;044b SUBW
              4f2c 0068  ld   $68         ;044b 'Width'
              4f2d 002b  ld   $2b         ;044d STW
              4f2e 0058  ld   $58         ;044d 'p'
              4f2f 002b  ld   $2b         ;044f STW
              4f30 0026  ld   $26
              4f31 0059  ld   $59         ;0451 LDI
              4f32 0015  ld   $15
              4f33 005e  ld   $5e         ;0453 ST
              4f34 0025  ld   $25
              4f35 00b4  ld   $b4         ;0455 SYS
              4f36 00f4  ld   $f4
              4f37 0059  ld   $59         ;0457 LDI
              4f38 0080  ld   $80
              4f39 00b8  ld   $b8         ;0459 SUBW
              4f3a 0068  ld   $68         ;0459 'Width'
              4f3b 00e9  ld   $e9         ;045b LSLW
              4f3c 005e  ld   $5e         ;045c ST
              4f3d 0024  ld   $24
              4f3e 0021  ld   $21         ;045e LDW
              4f3f 0038  ld   $38         ;045e 'Pos'
              4f40 0099  ld   $99         ;0460 ADDW
              4f41 0068  ld   $68         ;0460 'Width'
              4f42 002b  ld   $2b         ;0462 STW
              4f43 005a  ld   $5a         ;0462 'q'
              4f44 002b  ld   $2b         ;0464 STW
              4f45 0026  ld   $26
              4f46 0021  ld   $21         ;0466 LDW
              4f47 006c  ld   $6c         ;0466 'GrassColor'
              4f48 005e  ld   $5e         ;0468 ST
              4f49 0025  ld   $25
              4f4a 00b4  ld   $b4         ;046a SYS
              4f4b 00f4  ld   $f4
              4f4c 0021  ld   $21         ;046c LDW
              4f4d 0068  ld   $68         ;046c 'Width'
              4f4e 00e6  ld   $e6         ;046e SUBI
              4f4f 0008  ld   $08
              4f50 0035  ld   $35         ;0470 BCC
              4f51 0056  ld   $56         ;0471 LE
              4f52 0085  ld   $85
              4f53 002b  ld   $2b         ;0473 STW
              4f54 0052  ld   $52         ;0473 'tmp'
              4f55 0021  ld   $21         ;0475 LDW
              4f56 005a  ld   $5a         ;0475 'q'
              4f57 00e6  ld   $e6         ;0477 SUBI
              4f58 0001  ld   $01
              4f59 002b  ld   $2b         ;0479 STW
              4f5a 005a  ld   $5a         ;0479 'q'
              4f5b 0021  ld   $21         ;047b LDW
              4f5c 006a  ld   $6a         ;047b 'CurbColor'
              4f5d 00f0  ld   $f0         ;047d POKE
              4f5e 0058  ld   $58         ;047d 'p'
              4f5f 00f0  ld   $f0         ;047f POKE
              4f60 005a  ld   $5a         ;047f 'q'
              4f61 0093  ld   $93         ;0481 INC
              4f62 0058  ld   $58         ;0481 'p'
              4f63 0021  ld   $21         ;0483 LDW
              4f64 0052  ld   $52         ;0483 'tmp'
              4f65 0090  ld   $90         ;0485 BRA
              4f66 006c  ld   $6c
              4f67 00ff  ld   $ff         ;0487 RET
              4f68 002b  ld   $2b         ;0488 STW
              4f69 006e  ld   $6e         ;0488 'SetupSegment'
              4f6a 00cd  ld   $cd         ;048a DEF
              4f6b 00e8  ld   $e8
              4f6c 0075  ld   $75         ;048c PUSH
              4f6d 0011  ld   $11         ;048d LDWI
              4f6e 000f  ld   $0f
              4f6f 000e  ld   $0e
              4f70 002b  ld   $2b         ;0490 STW
              4f71 0072  ld   $72         ;0490 'Radix'
              4f72 00cf  ld   $cf         ;0492 CALL
              4f73 0074  ld   $74         ;0492 'ExtractDigit'
              4f74 0021  ld   $21         ;0494 LDW
              4f75 0076  ld   $76         ;0494 'Prev3'
              4f76 00fc  ld   $fc         ;0496 XORW
              4f77 0078  ld   $78         ;0496 'Char'
              4f78 0035  ld   $35         ;0498 BCC
              4f79 003f  ld   $3f         ;0499 EQ
              4f7a 00a1  ld   $a1
              4f7b 0021  ld   $21         ;049b LDW
              4f7c 0078  ld   $78         ;049b 'Char'
              4f7d 002b  ld   $2b         ;049d STW
              4f7e 0076  ld   $76         ;049d 'Prev3'
              4f7f 00cf  ld   $cf         ;049f CALL
              4f80 003a  ld   $3a         ;049f 'QPrintChar'
              4f81 0090  ld   $90         ;04a1 BRA
              4f82 00a3  ld   $a3
              4f83 0021  ld   $21         ;04a3 LDW
              4f84 0038  ld   $38         ;04a3 'Pos'
              4f85 00e3  ld   $e3         ;04a5 ADDI
              4f86 000c  ld   $0c
              4f87 002b  ld   $2b         ;04a7 STW
              4f88 0038  ld   $38         ;04a7 'Pos'
              4f89 0011  ld   $11         ;04a9 LDWI
              4f8a 0058  ld   $58
              4f8b 0002  ld   $02
              4f8c 002b  ld   $2b         ;04ac STW
              4f8d 0072  ld   $72         ;04ac 'Radix'
              4f8e 00cf  ld   $cf         ;04ae CALL
              4f8f 0074  ld   $74         ;04ae 'ExtractDigit'
              4f90 0021  ld   $21         ;04b0 LDW
              4f91 007a  ld   $7a         ;04b0 'Prev2'
              4f92 00fc  ld   $fc         ;04b2 XORW
              4f93 0078  ld   $78         ;04b2 'Char'
              4f94 0035  ld   $35         ;04b4 BCC
              4f95 003f  ld   $3f         ;04b5 EQ
              4f96 00bd  ld   $bd
              4f97 0021  ld   $21         ;04b7 LDW
              4f98 0078  ld   $78         ;04b7 'Char'
              4f99 002b  ld   $2b         ;04b9 STW
              4f9a 007a  ld   $7a         ;04b9 'Prev2'
              4f9b 00cf  ld   $cf         ;04bb CALL
              4f9c 003a  ld   $3a         ;04bb 'QPrintChar'
              4f9d 0090  ld   $90         ;04bd BRA
              4f9e 00bf  ld   $bf
              4f9f 0021  ld   $21         ;04bf LDW
              4fa0 0038  ld   $38         ;04bf 'Pos'
              4fa1 00e3  ld   $e3         ;04c1 ADDI
              4fa2 0006  ld   $06
              4fa3 002b  ld   $2b         ;04c3 STW
              4fa4 0038  ld   $38         ;04c3 'Pos'
              4fa5 0059  ld   $59         ;04c5 LDI
              4fa6 003c  ld   $3c
              4fa7 002b  ld   $2b         ;04c7 STW
              4fa8 0072  ld   $72         ;04c7 'Radix'
              4fa9 00cf  ld   $cf         ;04c9 CALL
              4faa 0074  ld   $74         ;04c9 'ExtractDigit'
              4fab 0021  ld   $21         ;04cb LDW
              4fac 007c  ld   $7c         ;04cb 'Prev1'
              4fad 00fc  ld   $fc         ;04cd XORW
              4fae 0078  ld   $78         ;04cd 'Char'
              4faf 0035  ld   $35         ;04cf BCC
              4fb0 003f  ld   $3f         ;04d0 EQ
              4fb1 00d8  ld   $d8
              4fb2 0021  ld   $21         ;04d2 LDW
              4fb3 0078  ld   $78         ;04d2 'Char'
              4fb4 002b  ld   $2b         ;04d4 STW
              4fb5 007c  ld   $7c         ;04d4 'Prev1'
              4fb6 00cf  ld   $cf         ;04d6 CALL
              4fb7 003a  ld   $3a         ;04d6 'QPrintChar'
              4fb8 0090  ld   $90         ;04d8 BRA
              4fb9 00da  ld   $da
              4fba 0021  ld   $21         ;04da LDW
              4fbb 0038  ld   $38         ;04da 'Pos'
              4fbc 00e3  ld   $e3         ;04dc ADDI
              4fbd 000c  ld   $0c
              4fbe 002b  ld   $2b         ;04de STW
              4fbf 0038  ld   $38         ;04de 'Pos'
              4fc0 0059  ld   $59         ;04e0 LDI
              4fc1 0006  ld   $06
              4fc2 002b  ld   $2b         ;04e2 STW
              4fc3 0072  ld   $72         ;04e2 'Radix'
              4fc4 00cf  ld   $cf         ;04e4 CALL
              4fc5 0074  ld   $74         ;04e4 'ExtractDigit'
              4fc6 00cf  ld   $cf         ;04e6 CALL
              4fc7 003a  ld   $3a         ;04e6 'QPrintChar'
              4fc8 0063  ld   $63         ;04e8 POP
              4fc9 00ff  ld   $ff         ;04e9 RET
              4fca 002b  ld   $2b         ;04ea STW
              4fcb 007e  ld   $7e         ;04ea 'PrintTime'
              4fcc 0093  ld   $93         ;04ec INC
              4fcd 001b  ld   $1b         ;04ec '_vLR'+1
              4fce 00ff  ld   $ff         ;04ee RET
              4fcf 0005  ld   $05         ;| RAM segment address (high byte first)
              4fd0 0000  ld   $00         ;|
              4fd1 00e6  ld   $e6         ;| Length (1..256)
              4fd2 00cd  ld   $cd         ;0500 DEF
              4fd3 0017  ld   $17
              4fd4 0059  ld   $59         ;0502 LDI
              4fd5 0030  ld   $30
              4fd6 002b  ld   $2b         ;0504 STW
              4fd7 0078  ld   $78         ;0504 'Char'
              4fd8 0021  ld   $21         ;0506 LDW
              4fd9 0081  ld   $81         ;0506 'Value'
              4fda 00b8  ld   $b8         ;0508 SUBW
              4fdb 0072  ld   $72         ;0508 'Radix'
              4fdc 0035  ld   $35         ;050a BCC
              4fdd 0050  ld   $50         ;050b LT
              4fde 0014  ld   $14
              4fdf 002b  ld   $2b         ;050d STW
              4fe0 0081  ld   $81         ;050d 'Value'
              4fe1 0093  ld   $93         ;050f INC
              4fe2 0078  ld   $78         ;050f 'Char'
              4fe3 00b8  ld   $b8         ;0511 SUBW
              4fe4 0072  ld   $72         ;0511 'Radix'
              4fe5 0035  ld   $35         ;0513 BCC
              4fe6 0053  ld   $53         ;0514 GE
              4fe7 000b  ld   $0b
              4fe8 0021  ld   $21         ;0516 LDW
              4fe9 0078  ld   $78         ;0516 'Char'
              4fea 00ff  ld   $ff         ;0518 RET
              4feb 002b  ld   $2b         ;0519 STW
              4fec 0074  ld   $74         ;0519 'ExtractDigit'
              4fed 00cd  ld   $cd         ;051b DEF
              4fee 0032  ld   $32
              4fef 0075  ld   $75         ;051d PUSH
              4ff0 002b  ld   $2b         ;051e STW
              4ff1 0083  ld   $83         ;051e 'Text'
              4ff2 0021  ld   $21         ;0520 LDW
              4ff3 0083  ld   $83         ;0520 'Text'
              4ff4 00ad  ld   $ad         ;0522 PEEK
              4ff5 002b  ld   $2b         ;0523 STW
              4ff6 0078  ld   $78         ;0523 'Char'
              4ff7 0035  ld   $35         ;0525 BCC
              4ff8 003f  ld   $3f         ;0526 EQ
              4ff9 0030  ld   $30
              4ffa 0093  ld   $93         ;0528 INC
              4ffb fe00  bra  ac          ;+-----------------------------------+
              4ffc fcfd  bra  $4ffd       ;|                                   |
              4ffd 1418  ld   $18,y       ;| Trampoline for page $4f00 lookups |
              4ffe e006  jmp  y,$06       ;|                                   |
              4fff c218  st   [$18]       ;+-----------------------------------+
              5000 0083  ld   $83         ;0528 'Text'
              5001 00cf  ld   $cf         ;052a CALL
              5002 003a  ld   $3a         ;052a 'QPrintChar'
              5003 00e3  ld   $e3         ;052c ADDI
              5004 0006  ld   $06
              5005 002b  ld   $2b         ;052e STW
              5006 0038  ld   $38         ;052e 'Pos'
              5007 0090  ld   $90         ;0530 BRA
              5008 001e  ld   $1e
              5009 0063  ld   $63         ;0532 POP
              500a 00ff  ld   $ff         ;0533 RET
              500b 002b  ld   $2b         ;0534 STW
              500c 0085  ld   $85         ;0534 'PrintText'
              500d 00cd  ld   $cd         ;0536 DEF
              500e 00df  ld   $df
              500f 0011  ld   $11         ;0538 LDWI
              5010 00d0  ld   $d0
              5011 0074  ld   $74
              5012 002b  ld   $2b         ;053b STW
              5013 0058  ld   $58         ;053b 'p'
              5014 0059  ld   $59         ;053d LDI
              5015 0000  ld   $00
              5016 002b  ld   $2b         ;053f STW
              5017 0060  ld   $60         ;053f 'X'
              5018 0021  ld   $21         ;0541 LDW
              5019 0087  ld   $87         ;0541 'DX0'
              501a 002b  ld   $2b         ;0543 STW
              501b 0089  ld   $89         ;0543 'DX'
              501c 0021  ld   $21         ;0545 LDW
              501d 008b  ld   $8b         ;0545 'NextTurn'
              501e 00b8  ld   $b8         ;0547 SUBW
              501f 008d  ld   $8d         ;0547 'Distance'
              5020 002b  ld   $2b         ;0549 STW
              5021 0052  ld   $52         ;0549 'tmp'
              5022 0099  ld   $99         ;054b ADDW
              5023 0052  ld   $52         ;054b 'tmp'
              5024 002b  ld   $2b         ;054d STW
              5025 0052  ld   $52         ;054d 'tmp'
              5026 0011  ld   $11         ;054f LDWI
              5027 0000  ld   $00
              5028 000a  ld   $0a
              5029 0099  ld   $99         ;0552 ADDW
              502a 0052  ld   $52         ;0552 'tmp'
              502b 007f  ld   $7f         ;0554 LUP
              502c 0035  ld   $35
              502d 002b  ld   $2b         ;0556 STW
              502e 0052  ld   $52         ;0556 'tmp'
              502f 0059  ld   $59         ;0558 LDI
              5030 00c5  ld   $c5
              5031 0099  ld   $99         ;055a ADDW
              5032 0052  ld   $52         ;055a 'tmp'
              5033 002b  ld   $2b         ;055c STW
              5034 0030  ld   $30         ;055c 'i'
              5035 001a  ld   $1a         ;055e LD
              5036 0061  ld   $61         ;055e 'X'+1
              5037 00f0  ld   $f0         ;0560 POKE
              5038 0058  ld   $58         ;0560 'p'
              5039 0093  ld   $93         ;0562 INC
              503a 0058  ld   $58         ;0562 'p'
              503b 0021  ld   $21         ;0564 LDW
              503c 0089  ld   $89         ;0564 'DX'
              503d 0099  ld   $99         ;0566 ADDW
              503e 008f  ld   $8f         ;0566 'DDX'
              503f 002b  ld   $2b         ;0568 STW
              5040 0089  ld   $89         ;0568 'DX'
              5041 0099  ld   $99         ;056a ADDW
              5042 0060  ld   $60         ;056a 'X'
              5043 002b  ld   $2b         ;056c STW
              5044 0060  ld   $60         ;056c 'X'
              5045 0093  ld   $93         ;056e INC
              5046 0030  ld   $30         ;056e 'i'
              5047 0021  ld   $21         ;0570 LDW
              5048 0030  ld   $30         ;0570 'i'
              5049 0035  ld   $35         ;0572 BCC
              504a 0072  ld   $72         ;0573 NE
              504b 005c  ld   $5c
              504c 001a  ld   $1a         ;0575 LD
              504d 0061  ld   $61         ;0575 'X'+1
              504e 00f0  ld   $f0         ;0577 POKE
              504f 0058  ld   $58         ;0577 'p'
              5050 0093  ld   $93         ;0579 INC
              5051 0058  ld   $58         ;0579 'p'
              5052 0021  ld   $21         ;057b LDW
              5053 0089  ld   $89         ;057b 'DX'
              5054 0099  ld   $99         ;057d ADDW
              5055 0091  ld   $91         ;057d 'NextDDX'
              5056 002b  ld   $2b         ;057f STW
              5057 0089  ld   $89         ;057f 'DX'
              5058 0099  ld   $99         ;0581 ADDW
              5059 0060  ld   $60         ;0581 'X'
              505a 002b  ld   $2b         ;0583 STW
              505b 0060  ld   $60         ;0583 'X'
              505c 001a  ld   $1a         ;0585 LD
              505d 0058  ld   $58         ;0585 'p'
              505e 0035  ld   $35         ;0587 BCC
              505f 0072  ld   $72         ;0588 NE
              5060 0073  ld   $73
              5061 0011  ld   $11         ;058a LDWI
              5062 00ed  ld   $ed
              5063 0001  ld   $01
              5064 002b  ld   $2b         ;058d STW
              5065 0024  ld   $24
              5066 0011  ld   $11         ;058f LDWI
              5067 00d1  ld   $d1
              5068 0074  ld   $74
              5069 002b  ld   $2b         ;0592 STW
              506a 0026  ld   $26
              506b 00e6  ld   $e6         ;0594 SUBI
              506c 0001  ld   $01
              506d 00ad  ld   $ad         ;0596 PEEK
              506e 002b  ld   $2b         ;0597 STW
              506f 0028  ld   $28
              5070 001a  ld   $1a         ;0599 LD
              5071 0047  ld   $47         ;0599 'HorizonX'+1
              5072 002b  ld   $2b         ;059b STW
              5073 0052  ld   $52         ;059b 'tmp'
              5074 0011  ld   $11         ;059d LDWI
              5075 00d5  ld   $d5
              5076 0074  ld   $74
              5077 00ad  ld   $ad         ;05a0 PEEK
              5078 00e3  ld   $e3         ;05a1 ADDI
              5079 0030  ld   $30
              507a 00b8  ld   $b8         ;05a3 SUBW
              507b 0052  ld   $52         ;05a3 'tmp'
              507c 002b  ld   $2b         ;05a5 STW
              507d 0052  ld   $52         ;05a5 'tmp'
              507e 0011  ld   $11         ;05a7 LDWI
              507f 00d4  ld   $d4
              5080 0074  ld   $74
              5081 00ad  ld   $ad         ;05aa PEEK
              5082 002b  ld   $2b         ;05ab STW
              5083 0087  ld   $87         ;05ab 'DX0'
              5084 0011  ld   $11         ;05ad LDWI
              5085 00ec  ld   $ec
              5086 0074  ld   $74
              5087 00ad  ld   $ad         ;05b0 PEEK
              5088 00b8  ld   $b8         ;05b1 SUBW
              5089 0087  ld   $87         ;05b1 'DX0'
              508a 0082  ld   $82         ;05b3 ANDI
              508b 00ff  ld   $ff
              508c 008c  ld   $8c         ;05b5 XORI
              508d 0080  ld   $80
              508e 00e6  ld   $e6         ;05b7 SUBI
              508f 0080  ld   $80
              5090 002b  ld   $2b         ;05b9 STW
              5091 0087  ld   $87         ;05b9 'DX0'
              5092 0011  ld   $11         ;05bb LDWI
              5093 0011  ld   $11
              5094 0001  ld   $01
              5095 002b  ld   $2b         ;05be STW
              5096 005e  ld   $5e         ;05be 's'
              5097 001a  ld   $1a         ;05c0 LD
              5098 0009  ld   $09
              5099 0082  ld   $82         ;05c2 ANDI
              509a 0001  ld   $01
              509b 0035  ld   $35         ;05c4 BCC
              509c 003f  ld   $3f         ;05c5 EQ
              509d 00be  ld   $be
              509e 001a  ld   $1a         ;05c7 LD
              509f 0047  ld   $47         ;05c7 'HorizonX'+1
              50a0 00f0  ld   $f0         ;05c9 POKE
              50a1 005e  ld   $5e         ;05c9 's'
              50a2 0011  ld   $11         ;05cb LDWI
              50a3 0067  ld   $67
              50a4 0040  ld   $40
              50a5 002b  ld   $2b         ;05ce STW
              50a6 0022  ld   $22
              50a7 00b4  ld   $b4         ;05d0 SYS
              50a8 00fb  ld   $fb
              50a9 0021  ld   $21         ;05d2 LDW
              50aa 0024  ld   $24
              50ab 002b  ld   $2b         ;05d4 STW
              50ac 005e  ld   $5e         ;05d4 's'
              50ad 0021  ld   $21         ;05d6 LDW
              50ae 0028  ld   $28
              50af 002b  ld   $2b         ;05d8 STW
              50b0 0060  ld   $60         ;05d8 'X'
              50b1 0021  ld   $21         ;05da LDW
              50b2 0052  ld   $52         ;05da 'tmp'
              50b3 00b8  ld   $b8         ;05dc SUBW
              50b4 0060  ld   $60         ;05dc 'X'
              50b5 00f0  ld   $f0         ;05de POKE
              50b6 005e  ld   $5e         ;05de 's'
              50b7 00ff  ld   $ff         ;05e0 RET
              50b8 002b  ld   $2b         ;05e1 STW
              50b9 0093  ld   $93         ;05e1 'DrawRoad'
              50ba 0093  ld   $93         ;05e3 INC
              50bb 001b  ld   $1b         ;05e3 '_vLR'+1
              50bc 00ff  ld   $ff         ;05e5 RET
              50bd 0006  ld   $06         ;| RAM segment address (high byte first)
              50be 0000  ld   $00         ;|
              50bf 00df  ld   $df         ;| Length (1..256)
              50c0 00cd  ld   $cd         ;0600 DEF
              50c1 00a7  ld   $a7
              50c2 0075  ld   $75         ;0602 PUSH
              50c3 0059  ld   $59         ;0603 LDI
              50c4 0000  ld   $00
              50c5 002b  ld   $2b         ;0605 STW
              50c6 0062  ld   $62         ;0605 'Collision'
              50c7 002b  ld   $2b         ;0607 STW
              50c8 0076  ld   $76         ;0607 'Prev3'
              50c9 002b  ld   $2b         ;0609 STW
              50ca 007a  ld   $7a         ;0609 'Prev2'
              50cb 002b  ld   $2b         ;060b STW
              50cc 007c  ld   $7c         ;060b 'Prev1'
              50cd 00cf  ld   $cf         ;060d CALL
              50ce 0095  ld   $95         ;060d 'AdvanceCar'
              50cf 0021  ld   $21         ;060f LDW
              50d0 008d  ld   $8d         ;060f 'Distance'
              50d1 0035  ld   $35         ;0611 BCC
              50d2 0053  ld   $53         ;0612 GE
              50d3 002e  ld   $2e
              50d4 0021  ld   $21         ;0614 LDW
              50d5 003e  ld   $3e         ;0614 'Time'
              50d6 00b8  ld   $b8         ;0616 SUBW
              50d7 0097  ld   $97         ;0616 'BestTime'
              50d8 0035  ld   $35         ;0618 BCC
              50d9 0053  ld   $53         ;0619 GE
              50da 001d  ld   $1d
              50db 0021  ld   $21         ;061b LDW
              50dc 003e  ld   $3e         ;061b 'Time'
              50dd 002b  ld   $2b         ;061d STW
              50de 0097  ld   $97         ;061d 'BestTime'
              50df 0059  ld   $59         ;061f LDI
              50e0 000f  ld   $0f
              50e1 00cf  ld   $cf         ;0621 CALL
              50e2 0099  ld   $99         ;0621 'PrintBestTime'
              50e3 0059  ld   $59         ;0623 LDI
              50e4 0000  ld   $00
              50e5 002b  ld   $2b         ;0625 STW
              50e6 003e  ld   $3e         ;0625 'Time'
              50e7 002b  ld   $2b         ;0627 STW
              50e8 009b  ld   $9b         ;0627 'Random'
              50e9 0011  ld   $11         ;0629 LDWI
              50ea 0000  ld   $00
              50eb 0074  ld   $74
              50ec 002b  ld   $2b         ;062c STW
              50ed 008d  ld   $8d         ;062c 'Distance'
              50ee 002b  ld   $2b         ;062e STW
              50ef 008b  ld   $8b         ;062e 'NextTurn'
              50f0 00b8  ld   $b8         ;0630 SUBW
              50f1 008b  ld   $8b         ;0630 'NextTurn'
              50f2 0035  ld   $35         ;0632 BCC
              50f3 0056  ld   $56         ;0633 LE
              50f4 0073  ld   $73
              50f5 0021  ld   $21         ;0635 LDW
              50f6 009b  ld   $9b         ;0635 'Random'
              50f7 0099  ld   $99         ;0637 ADDW
              50f8 008b  ld   $8b         ;0637 'NextTurn'
              50f9 008c  ld   $8c         ;0639 XORI
              50fa 006d  ld   $6d
              50fb fe00  bra  ac          ;+-----------------------------------+
              50fc fcfd  bra  $50fd       ;|                                   |
              50fd 1418  ld   $18,y       ;| Trampoline for page $5000 lookups |
              50fe e006  jmp  y,$06       ;|                                   |
              50ff c218  st   [$18]       ;+-----------------------------------+
              5100 002b  ld   $2b         ;063b STW
              5101 009b  ld   $9b         ;063b 'Random'
              5102 0082  ld   $82         ;063d ANDI
              5103 001f  ld   $1f
              5104 00e3  ld   $e3         ;063f ADDI
              5105 0028  ld   $28
              5106 0099  ld   $99         ;0641 ADDW
              5107 008b  ld   $8b         ;0641 'NextTurn'
              5108 002b  ld   $2b         ;0643 STW
              5109 008b  ld   $8b         ;0643 'NextTurn'
              510a 001a  ld   $1a         ;0645 LD
              510b 009c  ld   $9c         ;0645 'Random'+1
              510c 0082  ld   $82         ;0647 ANDI
              510d 0003  ld   $03
              510e 00e3  ld   $e3         ;0649 ADDI
              510f 0001  ld   $01
              5110 002b  ld   $2b         ;064b STW
              5111 0030  ld   $30         ;064b 'i'
              5112 0099  ld   $99         ;064d ADDW
              5113 0030  ld   $30         ;064d 'i'
              5114 0099  ld   $99         ;064f ADDW
              5115 0030  ld   $30         ;064f 'i'
              5116 00e9  ld   $e9         ;0651 LSLW
              5117 002b  ld   $2b         ;0652 STW
              5118 0030  ld   $30         ;0652 'i'
              5119 0021  ld   $21         ;0654 LDW
              511a 0091  ld   $91         ;0654 'NextDDX'
              511b 002b  ld   $2b         ;0656 STW
              511c 008f  ld   $8f         ;0656 'DDX'
              511d 0035  ld   $35         ;0658 BCC
              511e 0053  ld   $53         ;0659 GE
              511f 005d  ld   $5d
              5120 0099  ld   $99         ;065b ADDW
              5121 0030  ld   $30         ;065b 'i'
              5122 0090  ld   $90         ;065d BRA
              5123 0071  ld   $71
              5124 0035  ld   $35         ;065f BCC
              5125 0056  ld   $56         ;0660 LE
              5126 0064  ld   $64
              5127 00b8  ld   $b8         ;0662 SUBW
              5128 0030  ld   $30         ;0662 'i'
              5129 0090  ld   $90         ;0664 BRA
              512a 0071  ld   $71
              512b 0021  ld   $21         ;0666 LDW
              512c 009b  ld   $9b         ;0666 'Random'
              512d 0035  ld   $35         ;0668 BCC
              512e 0050  ld   $50         ;0669 LT
              512f 006d  ld   $6d
              5130 0021  ld   $21         ;066b LDW
              5131 0030  ld   $30         ;066b 'i'
              5132 0090  ld   $90         ;066d BRA
              5133 0071  ld   $71
              5134 0059  ld   $59         ;066f LDI
              5135 0000  ld   $00
              5136 00b8  ld   $b8         ;0671 SUBW
              5137 0030  ld   $30         ;0671 'i'
              5138 002b  ld   $2b         ;0673 STW
              5139 0091  ld   $91         ;0673 'NextDDX'
              513a 00cf  ld   $cf         ;0675 CALL
              513b 0093  ld   $93         ;0675 'DrawRoad'
              513c 0021  ld   $21         ;0677 LDW
              513d 008f  ld   $8f         ;0677 'DDX'
              513e 00e9  ld   $e9         ;0679 LSLW
              513f 00e9  ld   $e9         ;067a LSLW
              5140 00e9  ld   $e9         ;067b LSLW
              5141 002b  ld   $2b         ;067c STW
              5142 0048  ld   $48         ;067c 'HorizonDX'
              5143 00e9  ld   $e9         ;067e LSLW
              5144 002b  ld   $2b         ;067f STW
              5145 0044  ld   $44         ;067f 'DriftX'
              5146 00cf  ld   $cf         ;0681 CALL
              5147 004c  ld   $4c         ;0681 'ControlRaceCar'
              5148 00cf  ld   $cf         ;0683 CALL
              5149 0066  ld   $66         ;0683 'PlayEngineSound'
              514a 00cf  ld   $cf         ;0685 CALL
              514b 009d  ld   $9d         ;0685 'DrawRaceCar'
              514c 00cf  ld   $cf         ;0687 CALL
              514d 009f  ld   $9f         ;0687 'DrawGrass'
              514e 0011  ld   $11         ;0689 LDWI
              514f 00b5  ld   $b5
              5150 00b9  ld   $b9
              5151 0099  ld   $99         ;068c ADDW
              5152 003e  ld   $3e         ;068c 'Time'
              5153 0035  ld   $35         ;068e BCC
              5154 0056  ld   $56         ;068f LE
              5155 0091  ld   $91
              5156 002b  ld   $2b         ;0691 STW
              5157 0062  ld   $62         ;0691 'Collision'
              5158 0021  ld   $21         ;0693 LDW
              5159 003e  ld   $3e         ;0693 'Time'
              515a 002b  ld   $2b         ;0695 STW
              515b 0081  ld   $81         ;0695 'Value'
              515c 0011  ld   $11         ;0697 LDWI
              515d 0001  ld   $01
              515e 0008  ld   $08
              515f 002b  ld   $2b         ;069a STW
              5160 0038  ld   $38         ;069a 'Pos'
              5161 0059  ld   $59         ;069c LDI
              5162 003f  ld   $3f
              5163 002b  ld   $2b         ;069e STW
              5164 0036  ld   $36         ;069e 'Color'
              5165 00cf  ld   $cf         ;06a0 CALL
              5166 007e  ld   $7e         ;06a0 'PrintTime'
              5167 0021  ld   $21         ;06a2 LDW
              5168 0062  ld   $62         ;06a2 'Collision'
              5169 0035  ld   $35         ;06a4 BCC
              516a 003f  ld   $3f         ;06a5 EQ
              516b 000b  ld   $0b
              516c 0063  ld   $63         ;06a7 POP
              516d 00ff  ld   $ff         ;06a8 RET
              516e 002b  ld   $2b         ;06a9 STW
              516f 00a1  ld   $a1         ;06a9 'PlayGame'
              5170 00cd  ld   $cd         ;06ab DEF
              5171 00b7  ld   $b7
              5172 0002  ld   $02         ;06ad 2
              5173 0040  ld   $40         ;06ae 64
              5174 0040  ld   $40         ;06af 64
              5175 0040  ld   $40         ;06b0 64
              5176 0028  ld   $28         ;06b1 40
              5177 003c  ld   $3c         ;06b2 60
              5178 003c  ld   $3c         ;06b3 60
              5179 0028  ld   $28         ;06b4 40
              517a 0040  ld   $40         ;06b5 64
              517b 0040  ld   $40         ;06b6 64
              517c 0040  ld   $40         ;06b7 64
              517d 0000  ld   $00         ;06b8 0
              517e 002b  ld   $2b         ;06b9 STW
              517f 00a3  ld   $a3         ;06b9 'Car0'
              5180 00cd  ld   $cd         ;06bb DEF
              5181 00c5  ld   $c5
              5182 0003  ld   $03         ;06bd 3
              5183 0028  ld   $28         ;06be 40
              5184 0014  ld   $14         ;06bf 20
              5185 0014  ld   $14         ;06c0 20
              5186 003f  ld   $3f         ;06c1 63
              5187 003f  ld   $3f         ;06c2 63
              5188 0014  ld   $14         ;06c3 20
              5189 0014  ld   $14         ;06c4 20
              518a 0028  ld   $28         ;06c5 40
              518b 0000  ld   $00         ;06c6 0
              518c 002b  ld   $2b         ;06c7 STW
              518d 00a5  ld   $a5         ;06c7 'Car1'
              518e 00cd  ld   $cd         ;06c9 DEF
              518f 00d5  ld   $d5
              5190 0002  ld   $02         ;06cb 2
              5191 0028  ld   $28         ;06cc 40
              5192 0014  ld   $14         ;06cd 20
              5193 0014  ld   $14         ;06ce 20
              5194 0014  ld   $14         ;06cf 20
              5195 0028  ld   $28         ;06d0 40
              5196 0028  ld   $28         ;06d1 40
              5197 0014  ld   $14         ;06d2 20
              5198 0014  ld   $14         ;06d3 20
              5199 0014  ld   $14         ;06d4 20
              519a 0028  ld   $28         ;06d5 40
              519b 0000  ld   $00         ;06d6 0
              519c 002b  ld   $2b         ;06d7 STW
              519d 00a7  ld   $a7         ;06d7 'Car2'
              519e 0011  ld   $11         ;06d9 LDWI
              519f 00a0  ld   $a0
              51a0 0008  ld   $08
              51a1 002b  ld   $2b         ;06dc STW
              51a2 001a  ld   $1a
              51a3 00ff  ld   $ff         ;06de RET
              51a4 0008  ld   $08         ;| RAM segment address (high byte first)
              51a5 00a0  ld   $a0         ;|
              51a6 0052  ld   $52         ;| Length (1..256)
              51a7 00cd  ld   $cd         ;08a0 DEF
              51a8 00b0  ld   $b0
              51a9 0000  ld   $00         ;08a2 0
              51aa 0040  ld   $40         ;08a3 64
              51ab 0040  ld   $40         ;08a4 64
              51ac 0040  ld   $40         ;08a5 64
              51ad 0040  ld   $40         ;08a6 64
              51ae 0028  ld   $28         ;08a7 40
              51af 0014  ld   $14         ;08a8 20
              51b0 0014  ld   $14         ;08a9 20
              51b1 0014  ld   $14         ;08aa 20
              51b2 0014  ld   $14         ;08ab 20
              51b3 0028  ld   $28         ;08ac 40
              51b4 0040  ld   $40         ;08ad 64
              51b5 0040  ld   $40         ;08ae 64
              51b6 0040  ld   $40         ;08af 64
              51b7 0040  ld   $40         ;08b0 64
              51b8 0000  ld   $00         ;08b1 0
              51b9 002b  ld   $2b         ;08b2 STW
              51ba 00a9  ld   $a9         ;08b2 'Car3'
              51bb 00cd  ld   $cd         ;08b4 DEF
              51bc 00c4  ld   $c4
              51bd 0000  ld   $00         ;08b6 0
              51be 0040  ld   $40         ;08b7 64
              51bf 0040  ld   $40         ;08b8 64
              51c0 0040  ld   $40         ;08b9 64
              51c1 0040  ld   $40         ;08ba 64
              51c2 0015  ld   $15         ;08bb 21
              51c3 0015  ld   $15         ;08bc 21
              51c4 0015  ld   $15         ;08bd 21
              51c5 0015  ld   $15         ;08be 21
              51c6 0015  ld   $15         ;08bf 21
              51c7 0015  ld   $15         ;08c0 21
              51c8 0040  ld   $40         ;08c1 64
              51c9 0040  ld   $40         ;08c2 64
              51ca 0040  ld   $40         ;08c3 64
              51cb 0040  ld   $40         ;08c4 64
              51cc 0000  ld   $00         ;08c5 0
              51cd 002b  ld   $2b         ;08c6 STW
              51ce 00ab  ld   $ab         ;08c6 'Car4'
              51cf 00cd  ld   $cd         ;08c8 DEF
              51d0 00eb  ld   $eb
              51d1 0011  ld   $11         ;08ca LDWI
              51d2 002e  ld   $2e
              51d3 0001  ld   $01
              51d4 002b  ld   $2b         ;08cd STW
              51d5 0024  ld   $24
              51d6 0059  ld   $59         ;08cf LDI
              51d7 0020  ld   $20
              51d8 005e  ld   $5e         ;08d1 ST
              51d9 0026  ld   $26
              51da 0011  ld   $11         ;08d3 LDWI
              51db 0000  ld   $00
              51dc 000a  ld   $0a
              51dd 002b  ld   $2b         ;08d6 STW
              51de 005a  ld   $5a         ;08d6 'q'
              51df 0011  ld   $11         ;08d8 LDWI
              51e0 0080  ld   $80
              51e1 0040  ld   $40
              51e2 002b  ld   $2b         ;08db STW
              51e3 0022  ld   $22
              51e4 0021  ld   $21         ;08dd LDW
              51e5 005a  ld   $5a         ;08dd 'q'
              51e6 007f  ld   $7f         ;08df LUP
              51e7 0008  ld   $08
              51e8 0099  ld   $99         ;08e1 ADDW
              51e9 008d  ld   $8d         ;08e1 'Distance'
              51ea 005e  ld   $5e         ;08e3 ST
              51eb 0027  ld   $27
              51ec 00b4  ld   $b4         ;08e5 SYS
              51ed 00fb  ld   $fb
              51ee 0093  ld   $93         ;08e7 INC
              51ef 005a  ld   $5a         ;08e7 'q'
              51f0 0035  ld   $35         ;08e9 BCC
              51f1 0072  ld   $72         ;08ea NE
              51f2 00db  ld   $db
              51f3 00ff  ld   $ff         ;08ec RET
              51f4 002b  ld   $2b         ;08ed STW
              51f5 009f  ld   $9f         ;08ed 'DrawGrass'
              51f6 0093  ld   $93         ;08ef INC
              51f7 001b  ld   $1b         ;08ef '_vLR'+1
              51f8 00ff  ld   $ff         ;08f1 RET
              51f9 0009  ld   $09         ;| RAM segment address (high byte first)
              51fa 00a0  ld   $a0         ;|
              51fb fe00  bra  ac          ;+-----------------------------------+
              51fc fcfd  bra  $51fd       ;|                                   |
              51fd 1418  ld   $18,y       ;| Trampoline for page $5100 lookups |
              51fe e006  jmp  y,$06       ;|                                   |
              51ff c218  st   [$18]       ;+-----------------------------------+
              5200 0038  ld   $38         ;| Length (1..256)
              5201 00cd  ld   $cd         ;09a0 DEF
              5202 00b8  ld   $b8
              5203 0011  ld   $11         ;09a2 LDWI
              5204 00f7  ld   $f7
              5205 000b  ld   $0b
              5206 002b  ld   $2b         ;09a5 STW
              5207 00ad  ld   $ad         ;09a5 'Indicator'
              5208 0011  ld   $11         ;09a7 LDWI
              5209 006b  ld   $6b
              520a 000c  ld   $0c
              520b 002b  ld   $2b         ;09aa STW
              520c 00af  ld   $af         ;09aa 'Tracking'
              520d 0059  ld   $59         ;09ac LDI
              520e 0000  ld   $00
              520f 00f0  ld   $f0         ;09ae POKE
              5210 00af  ld   $af         ;09ae 'Tracking'
              5211 0093  ld   $93         ;09b0 INC
              5212 00af  ld   $af         ;09b0 'Tracking'
              5213 001a  ld   $1a         ;09b2 LD
              5214 00af  ld   $af         ;09b2 'Tracking'
              5215 008c  ld   $8c         ;09b4 XORI
              5216 0076  ld   $76
              5217 0035  ld   $35         ;09b6 BCC
              5218 0072  ld   $72         ;09b7 NE
              5219 00aa  ld   $aa
              521a 00ff  ld   $ff         ;09b9 RET
              521b 002b  ld   $2b         ;09ba STW
              521c 00b1  ld   $b1         ;09ba 'SetupIndicator'
              521d 00cd  ld   $cd         ;09bc DEF
              521e 00d1  ld   $d1
              521f 0059  ld   $59         ;09be LDI
              5220 0000  ld   $00
              5221 00f0  ld   $f0         ;09c0 POKE
              5222 00af  ld   $af         ;09c0 'Tracking'
              5223 001a  ld   $1a         ;09c2 LD
              5224 008e  ld   $8e         ;09c2 'Distance'+1
              5225 0099  ld   $99         ;09c4 ADDW
              5226 00ad  ld   $ad         ;09c4 'Indicator'
              5227 002b  ld   $2b         ;09c6 STW
              5228 00af  ld   $af         ;09c6 'Tracking'
              5229 0059  ld   $59         ;09c8 LDI
              522a 003c  ld   $3c
              522b 00f0  ld   $f0         ;09ca POKE
              522c 00af  ld   $af         ;09ca 'Tracking'
              522d 001a  ld   $1a         ;09cc LD
              522e 0041  ld   $41         ;09cc 'Speed'+1
              522f 0099  ld   $99         ;09ce ADDW
              5230 008d  ld   $8d         ;09ce 'Distance'
              5231 002b  ld   $2b         ;09d0 STW
              5232 008d  ld   $8d         ;09d0 'Distance'
              5233 00ff  ld   $ff         ;09d2 RET
              5234 002b  ld   $2b         ;09d3 STW
              5235 0095  ld   $95         ;09d3 'AdvanceCar'
              5236 0093  ld   $93         ;09d5 INC
              5237 001b  ld   $1b         ;09d5 '_vLR'+1
              5238 00ff  ld   $ff         ;09d7 RET
              5239 000a  ld   $0a         ;| RAM segment address (high byte first)
              523a 00a0  ld   $a0         ;|
              523b 0041  ld   $41         ;| Length (1..256)
              523c 00cd  ld   $cd         ;0aa0 DEF
              523d 00da  ld   $da
              523e 0075  ld   $75         ;0aa2 PUSH
              523f 0011  ld   $11         ;0aa3 LDWI
              5240 00d9  ld   $d9
              5241 0001  ld   $01
              5242 00ad  ld   $ad         ;0aa6 PEEK
              5243 008c  ld   $8c         ;0aa7 XORI
              5244 00ff  ld   $ff
              5245 002b  ld   $2b         ;0aa9 STW
              5246 0060  ld   $60         ;0aa9 'X'
              5247 001a  ld   $1a         ;0aab LD
              5248 0043  ld   $43         ;0aab 'CarX'+1
              5249 0099  ld   $99         ;0aad ADDW
              524a 0060  ld   $60         ;0aad 'X'
              524b 002b  ld   $2b         ;0aaf STW
              524c 0060  ld   $60         ;0aaf 'X'
              524d 0011  ld   $11         ;0ab1 LDWI
              524e 00d8  ld   $d8
              524f 0001  ld   $01
              5250 002b  ld   $2b         ;0ab4 STW
              5251 0056  ld   $56         ;0ab4 'Video'
              5252 0021  ld   $21         ;0ab6 LDW
              5253 00a3  ld   $a3         ;0ab6 'Car0'
              5254 002b  ld   $2b         ;0ab8 STW
              5255 005c  ld   $5c         ;0ab8 'Sprite'
              5256 00cf  ld   $cf         ;0aba CALL
              5257 0064  ld   $64         ;0aba 'DrawPixels'
              5258 0021  ld   $21         ;0abc LDW
              5259 00a5  ld   $a5         ;0abc 'Car1'
              525a 002b  ld   $2b         ;0abe STW
              525b 005c  ld   $5c         ;0abe 'Sprite'
              525c 00cf  ld   $cf         ;0ac0 CALL
              525d 0064  ld   $64         ;0ac0 'DrawPixels'
              525e 0021  ld   $21         ;0ac2 LDW
              525f 0060  ld   $60         ;0ac2 'X'
              5260 00b8  ld   $b8         ;0ac4 SUBW
              5261 004a  ld   $4a         ;0ac4 'Steer'
              5262 002b  ld   $2b         ;0ac6 STW
              5263 0060  ld   $60         ;0ac6 'X'
              5264 0021  ld   $21         ;0ac8 LDW
              5265 00a7  ld   $a7         ;0ac8 'Car2'
              5266 002b  ld   $2b         ;0aca STW
              5267 005c  ld   $5c         ;0aca 'Sprite'
              5268 00cf  ld   $cf         ;0acc CALL
              5269 0064  ld   $64         ;0acc 'DrawPixels'
              526a 0021  ld   $21         ;0ace LDW
              526b 00a9  ld   $a9         ;0ace 'Car3'
              526c 002b  ld   $2b         ;0ad0 STW
              526d 005c  ld   $5c         ;0ad0 'Sprite'
              526e 00cf  ld   $cf         ;0ad2 CALL
              526f 0064  ld   $64         ;0ad2 'DrawPixels'
              5270 0021  ld   $21         ;0ad4 LDW
              5271 00ab  ld   $ab         ;0ad4 'Car4'
              5272 002b  ld   $2b         ;0ad6 STW
              5273 005c  ld   $5c         ;0ad6 'Sprite'
              5274 00cf  ld   $cf         ;0ad8 CALL
              5275 0064  ld   $64         ;0ad8 'DrawPixels'
              5276 0063  ld   $63         ;0ada POP
              5277 00ff  ld   $ff         ;0adb RET
              5278 002b  ld   $2b         ;0adc STW
              5279 009d  ld   $9d         ;0adc 'DrawRaceCar'
              527a 0093  ld   $93         ;0ade INC
              527b 001b  ld   $1b         ;0ade '_vLR'+1
              527c 00ff  ld   $ff         ;0ae0 RET
              527d 000b  ld   $0b         ;| RAM segment address (high byte first)
              527e 00a0  ld   $a0         ;|
              527f 004c  ld   $4c         ;| Length (1..256)
              5280 00cd  ld   $cd         ;0ba0 DEF
              5281 00e5  ld   $e5
              5282 0075  ld   $75         ;0ba2 PUSH
              5283 0059  ld   $59         ;0ba3 LDI
              5284 0030  ld   $30
              5285 002b  ld   $2b         ;0ba5 STW
              5286 0034  ld   $34         ;0ba5 'BgColor'
              5287 0021  ld   $21         ;0ba7 LDW
              5288 0034  ld   $34         ;0ba7 'BgColor'
              5289 005e  ld   $5e         ;0ba9 ST
              528a 0024  ld   $24
              528b 005e  ld   $5e         ;0bab ST
              528c 0025  ld   $25
              528d 0011  ld   $11         ;0bad LDWI
              528e 0000  ld   $00
              528f 0008  ld   $08
              5290 002b  ld   $2b         ;0bb0 STW
              5291 0028  ld   $28
              5292 0011  ld   $11         ;0bb2 LDWI
              5293 00e1  ld   $e1
              5294 0004  ld   $04
              5295 002b  ld   $2b         ;0bb5 STW
              5296 0022  ld   $22
              5297 00b4  ld   $b4         ;0bb7 SYS
              5298 00cc  ld   $cc
              5299 0093  ld   $93         ;0bb9 INC
              529a 0028  ld   $28
              529b 001a  ld   $1a         ;0bbb LD
              529c 0028  ld   $28
              529d 008c  ld   $8c         ;0bbd XORI
              529e 00a0  ld   $a0
              529f 0035  ld   $35         ;0bbf BCC
              52a0 0072  ld   $72         ;0bc0 NE
              52a1 00b5  ld   $b5
              52a2 0059  ld   $59         ;0bc2 LDI
              52a3 003f  ld   $3f
              52a4 002b  ld   $2b         ;0bc4 STW
              52a5 0036  ld   $36         ;0bc4 'Color'
              52a6 0011  ld   $11         ;0bc6 LDWI
              52a7 0007  ld   $07
              52a8 0008  ld   $08
              52a9 002b  ld   $2b         ;0bc9 STW
              52aa 0038  ld   $38         ;0bc9 'Pos'
              52ab 0059  ld   $59         ;0bcb LDI
              52ac 003a  ld   $3a
              52ad 00cf  ld   $cf         ;0bcd CALL
              52ae 003a  ld   $3a         ;0bcd 'QPrintChar'
              52af 00e3  ld   $e3         ;0bcf ADDI
              52b0 0012  ld   $12
              52b1 002b  ld   $2b         ;0bd1 STW
              52b2 0038  ld   $38         ;0bd1 'Pos'
              52b3 0059  ld   $59         ;0bd3 LDI
              52b4 002e  ld   $2e
              52b5 00cf  ld   $cf         ;0bd5 CALL
              52b6 003a  ld   $3a         ;0bd5 'QPrintChar'
              52b7 00e3  ld   $e3         ;0bd7 ADDI
              52b8 001f  ld   $1f
              52b9 002b  ld   $2b         ;0bd9 STW
              52ba 0038  ld   $38         ;0bd9 'Pos'
              52bb 0021  ld   $21         ;0bdb LDW
              52bc 004e  ld   $4e         ;0bdb 'GigatronText'
              52bd 00cf  ld   $cf         ;0bdd CALL
              52be 0085  ld   $85         ;0bdd 'PrintText'
              52bf 0059  ld   $59         ;0bdf LDI
              52c0 003c  ld   $3c
              52c1 002b  ld   $2b         ;0be1 STW
              52c2 0050  ld   $50         ;0be1 'Delay'
              52c3 00cf  ld   $cf         ;0be3 CALL
              52c4 0054  ld   $54         ;0be3 'Wait'
              52c5 0063  ld   $63         ;0be5 POP
              52c6 00ff  ld   $ff         ;0be6 RET
              52c7 002b  ld   $2b         ;0be7 STW
              52c8 00b3  ld   $b3         ;0be7 'Intro'
              52c9 0093  ld   $93         ;0be9 INC
              52ca 001b  ld   $1b         ;0be9 '_vLR'+1
              52cb 00ff  ld   $ff         ;0beb RET
              52cc 000c  ld   $0c         ;| RAM segment address (high byte first)
              52cd 00a0  ld   $a0         ;|
              52ce 0059  ld   $59         ;| Length (1..256)
              52cf 00cd  ld   $cd         ;0ca0 DEF
              52d0 00f2  ld   $f2
              52d1 002b  ld   $2b         ;0ca2 STW
              52d2 0036  ld   $36         ;0ca2 'Color'
              52d3 0021  ld   $21         ;0ca4 LDW
              52d4 0097  ld   $97         ;0ca4 'BestTime'
              52d5 002b  ld   $2b         ;0ca6 STW
              52d6 0081  ld   $81         ;0ca6 'Value'
              52d7 00e3  ld   $e3         ;0ca8 ADDI
              52d8 0001  ld   $01
              52d9 0035  ld   $35         ;0caa BCC
              52da 0053  ld   $53         ;0cab GE
              52db 00ac  ld   $ac
              52dc 00ff  ld   $ff         ;0cad RET
              52dd 0075  ld   $75         ;0cae PUSH
              52de 0011  ld   $11         ;0caf LDWI
              52df 007c  ld   $7c
              52e0 0008  ld   $08
              52e1 002b  ld   $2b         ;0cb2 STW
              52e2 0038  ld   $38         ;0cb2 'Pos'
              52e3 0011  ld   $11         ;0cb4 LDWI
              52e4 000f  ld   $0f
              52e5 000e  ld   $0e
              52e6 002b  ld   $2b         ;0cb7 STW
              52e7 0072  ld   $72         ;0cb7 'Radix'
              52e8 00cf  ld   $cf         ;0cb9 CALL
              52e9 0074  ld   $74         ;0cb9 'ExtractDigit'
              52ea 00cf  ld   $cf         ;0cbb CALL
              52eb 003a  ld   $3a         ;0cbb 'QPrintChar'
              52ec 00e3  ld   $e3         ;0cbd ADDI
              52ed 0006  ld   $06
              52ee 002b  ld   $2b         ;0cbf STW
              52ef 0038  ld   $38         ;0cbf 'Pos'
              52f0 0059  ld   $59         ;0cc1 LDI
              52f1 003a  ld   $3a
              52f2 00cf  ld   $cf         ;0cc3 CALL
              52f3 003a  ld   $3a         ;0cc3 'QPrintChar'
              52f4 00e3  ld   $e3         ;0cc5 ADDI
              52f5 0006  ld   $06
              52f6 002b  ld   $2b         ;0cc7 STW
              52f7 0038  ld   $38         ;0cc7 'Pos'
              52f8 0011  ld   $11         ;0cc9 LDWI
              52f9 0058  ld   $58
              52fa 0002  ld   $02
              52fb fe00  bra  ac          ;+-----------------------------------+
              52fc fcfd  bra  $52fd       ;|                                   |
              52fd 1418  ld   $18,y       ;| Trampoline for page $5200 lookups |
              52fe e006  jmp  y,$06       ;|                                   |
              52ff c218  st   [$18]       ;+-----------------------------------+
              5300 002b  ld   $2b         ;0ccc STW
              5301 0072  ld   $72         ;0ccc 'Radix'
              5302 00cf  ld   $cf         ;0cce CALL
              5303 0074  ld   $74         ;0cce 'ExtractDigit'
              5304 00cf  ld   $cf         ;0cd0 CALL
              5305 003a  ld   $3a         ;0cd0 'QPrintChar'
              5306 00e3  ld   $e3         ;0cd2 ADDI
              5307 0006  ld   $06
              5308 002b  ld   $2b         ;0cd4 STW
              5309 0038  ld   $38         ;0cd4 'Pos'
              530a 0059  ld   $59         ;0cd6 LDI
              530b 003c  ld   $3c
              530c 002b  ld   $2b         ;0cd8 STW
              530d 0072  ld   $72         ;0cd8 'Radix'
              530e 00cf  ld   $cf         ;0cda CALL
              530f 0074  ld   $74         ;0cda 'ExtractDigit'
              5310 00cf  ld   $cf         ;0cdc CALL
              5311 003a  ld   $3a         ;0cdc 'QPrintChar'
              5312 00e3  ld   $e3         ;0cde ADDI
              5313 0006  ld   $06
              5314 002b  ld   $2b         ;0ce0 STW
              5315 0038  ld   $38         ;0ce0 'Pos'
              5316 0059  ld   $59         ;0ce2 LDI
              5317 002e  ld   $2e
              5318 00cf  ld   $cf         ;0ce4 CALL
              5319 003a  ld   $3a         ;0ce4 'QPrintChar'
              531a 00e3  ld   $e3         ;0ce6 ADDI
              531b 0006  ld   $06
              531c 002b  ld   $2b         ;0ce8 STW
              531d 0038  ld   $38         ;0ce8 'Pos'
              531e 0059  ld   $59         ;0cea LDI
              531f 0006  ld   $06
              5320 002b  ld   $2b         ;0cec STW
              5321 0072  ld   $72         ;0cec 'Radix'
              5322 00cf  ld   $cf         ;0cee CALL
              5323 0074  ld   $74         ;0cee 'ExtractDigit'
              5324 00cf  ld   $cf         ;0cf0 CALL
              5325 003a  ld   $3a         ;0cf0 'QPrintChar'
              5326 0063  ld   $63         ;0cf2 POP
              5327 00ff  ld   $ff         ;0cf3 RET
              5328 002b  ld   $2b         ;0cf4 STW
              5329 0099  ld   $99         ;0cf4 'PrintBestTime'
              532a 0093  ld   $93         ;0cf6 INC
              532b 001b  ld   $1b         ;0cf6 '_vLR'+1
              532c 00ff  ld   $ff         ;0cf8 RET
              532d 000d  ld   $0d         ;| RAM segment address (high byte first)
              532e 00a0  ld   $a0         ;|
              532f 0056  ld   $56         ;| Length (1..256)
              5330 00cd  ld   $cd         ;0da0 DEF
              5331 00ef  ld   $ef
              5332 0075  ld   $75         ;0da2 PUSH
              5333 0011  ld   $11         ;0da3 LDWI
              5334 0035  ld   $35
              5335 0014  ld   $14
              5336 002b  ld   $2b         ;0da6 STW
              5337 0038  ld   $38         ;0da6 'Pos'
              5338 00cd  ld   $cd         ;0da8 DEF
              5339 00b2  ld   $b2
              533a 0047  ld   $47         ;0daa 'G'
              533b 0041  ld   $41         ;0dab 'A'
              533c 004d  ld   $4d         ;0dac 'M'
              533d 0045  ld   $45         ;0dad 'E'
              533e 0020  ld   $20         ;0dae ' '
              533f 004f  ld   $4f         ;0daf 'O'
              5340 0056  ld   $56         ;0db0 'V'
              5341 0045  ld   $45         ;0db1 'E'
              5342 0052  ld   $52         ;0db2 'R'
              5343 0000  ld   $00         ;0db3 0
              5344 00cf  ld   $cf         ;0db4 CALL
              5345 0085  ld   $85         ;0db4 'PrintText'
              5346 0011  ld   $11         ;0db6 LDWI
              5347 0011  ld   $11
              5348 0001  ld   $01
              5349 002b  ld   $2b         ;0db9 STW
              534a 005e  ld   $5e         ;0db9 's'
              534b 00e3  ld   $e3         ;0dbb ADDI
              534c 0020  ld   $20
              534d 002b  ld   $2b         ;0dbd STW
              534e 00b5  ld   $b5         ;0dbd 't'
              534f 0059  ld   $59         ;0dbf LDI
              5350 0001  ld   $01
              5351 002b  ld   $2b         ;0dc1 STW
              5352 0050  ld   $50         ;0dc1 'Delay'
              5353 0021  ld   $21         ;0dc3 LDW
              5354 005e  ld   $5e         ;0dc3 's'
              5355 00ad  ld   $ad         ;0dc5 PEEK
              5356 0082  ld   $82         ;0dc6 ANDI
              5357 0080  ld   $80
              5358 0035  ld   $35         ;0dc8 BCC
              5359 0072  ld   $72         ;0dc9 NE
              535a 00cd  ld   $cd
              535b 0059  ld   $59         ;0dcb LDI
              535c 0001  ld   $01
              535d 0090  ld   $90         ;0dcd BRA
              535e 00d0  ld   $d0
              535f 0011  ld   $11         ;0dcf LDWI
              5360 00ff  ld   $ff
              5361 00ff  ld   $ff
              5362 002b  ld   $2b         ;0dd2 STW
              5363 0030  ld   $30         ;0dd2 'i'
              5364 00cf  ld   $cf         ;0dd4 CALL
              5365 0054  ld   $54         ;0dd4 'Wait'
              5366 0021  ld   $21         ;0dd6 LDW
              5367 00b5  ld   $b5         ;0dd6 't'
              5368 00ad  ld   $ad         ;0dd8 PEEK
              5369 00b8  ld   $b8         ;0dd9 SUBW
              536a 0030  ld   $30         ;0dd9 'i'
              536b 00f0  ld   $f0         ;0ddb POKE
              536c 00b5  ld   $b5         ;0ddb 't'
              536d 0021  ld   $21         ;0ddd LDW
              536e 005e  ld   $5e         ;0ddd 's'
              536f 00ad  ld   $ad         ;0ddf PEEK
              5370 0099  ld   $99         ;0de0 ADDW
              5371 0030  ld   $30         ;0de0 'i'
              5372 00f0  ld   $f0         ;0de2 POKE
              5373 005e  ld   $5e         ;0de2 's'
              5374 0082  ld   $82         ;0de4 ANDI
              5375 00ff  ld   $ff
              5376 0035  ld   $35         ;0de6 BCC
              5377 0072  ld   $72         ;0de7 NE
              5378 00d2  ld   $d2
              5379 0059  ld   $59         ;0de9 LDI
              537a 001e  ld   $1e
              537b 002b  ld   $2b         ;0deb STW
              537c 0050  ld   $50         ;0deb 'Delay'
              537d 00cf  ld   $cf         ;0ded CALL
              537e 0054  ld   $54         ;0ded 'Wait'
              537f 0063  ld   $63         ;0def POP
              5380 00ff  ld   $ff         ;0df0 RET
              5381 002b  ld   $2b         ;0df1 STW
              5382 00b7  ld   $b7         ;0df1 'GameOver'
              5383 0093  ld   $93         ;0df3 INC
              5384 001b  ld   $1b         ;0df3 '_vLR'+1
              5385 00ff  ld   $ff         ;0df5 RET
              5386 000e  ld   $0e         ;| RAM segment address (high byte first)
              5387 00a0  ld   $a0         ;|
              5388 005b  ld   $5b         ;| Length (1..256)
              5389 00cd  ld   $cd         ;0ea0 DEF
              538a 00f4  ld   $f4
              538b 0075  ld   $75         ;0ea2 PUSH
              538c 0011  ld   $11         ;0ea3 LDWI
              538d 00a6  ld   $a6
              538e 0040  ld   $40
              538f 002b  ld   $2b         ;0ea6 STW
              5390 0058  ld   $58         ;0ea6 'p'
              5391 0011  ld   $11         ;0ea8 LDWI
              5392 0000  ld   $00
              5393 0010  ld   $10
              5394 002b  ld   $2b         ;0eab STW
              5395 005a  ld   $5a         ;0eab 'q'
              5396 00cd  ld   $cd         ;0ead DEF
              5397 00bf  ld   $bf
              5398 001a  ld   $1a         ;0eaf LD
              5399 0058  ld   $58         ;0eaf 'p'
              539a 008c  ld   $8c         ;0eb1 XORI
              539b 00fa  ld   $fa
              539c 0035  ld   $35         ;0eb3 BCC
              539d 003f  ld   $3f         ;0eb4 EQ
              539e 00b8  ld   $b8
              539f 0059  ld   $59         ;0eb6 LDI
              53a0 0001  ld   $01
              53a1 0090  ld   $90         ;0eb8 BRA
              53a2 00ba  ld   $ba
              53a3 0059  ld   $59         ;0eba LDI
              53a4 0006  ld   $06
              53a5 0099  ld   $99         ;0ebc ADDW
              53a6 0058  ld   $58         ;0ebc 'p'
              53a7 002b  ld   $2b         ;0ebe STW
              53a8 0058  ld   $58         ;0ebe 'p'
              53a9 00ff  ld   $ff         ;0ec0 RET
              53aa 002b  ld   $2b         ;0ec1 STW
              53ab 0052  ld   $52         ;0ec1 'tmp'
              53ac 0021  ld   $21         ;0ec3 LDW
              53ad 0058  ld   $58         ;0ec3 'p'
              53ae 007f  ld   $7f         ;0ec5 LUP
              53af 0000  ld   $00
              53b0 005e  ld   $5e         ;0ec7 ST
              53b1 0024  ld   $24
              53b2 00cf  ld   $cf         ;0ec9 CALL
              53b3 0052  ld   $52         ;0ec9 'tmp'
              53b4 007f  ld   $7f         ;0ecb LUP
              53b5 0000  ld   $00
              53b6 005e  ld   $5e         ;0ecd ST
              53b7 0025  ld   $25
              53b8 00cf  ld   $cf         ;0ecf CALL
              53b9 0052  ld   $52         ;0ecf 'tmp'
              53ba 007f  ld   $7f         ;0ed1 LUP
              53bb 0000  ld   $00
              53bc 005e  ld   $5e         ;0ed3 ST
              53bd 0026  ld   $26
              53be 00cf  ld   $cf         ;0ed5 CALL
              53bf 0052  ld   $52         ;0ed5 'tmp'
              53c0 0011  ld   $11         ;0ed7 LDWI
              53c1 00d0  ld   $d0
              53c2 001a  ld   $1a
              53c3 002b  ld   $2b         ;0eda STW
              53c4 0022  ld   $22
              53c5 00b4  ld   $b4         ;0edc SYS
              53c6 00f3  ld   $f3
              53c7 0021  ld   $21         ;0ede LDW
              53c8 005a  ld   $5a         ;0ede 'q'
              53c9 002b  ld   $2b         ;0ee0 STW
              53ca 0028  ld   $28
              53cb 00e3  ld   $e3         ;0ee2 ADDI
              53cc 0004  ld   $04
              53cd 002b  ld   $2b         ;0ee4 STW
              53ce 005a  ld   $5a         ;0ee4 'q'
              53cf 0011  ld   $11         ;0ee6 LDWI
              53d0 00d4  ld   $d4
              53d1 0004  ld   $04
              53d2 002b  ld   $2b         ;0ee9 STW
              53d3 0022  ld   $22
              53d4 00b4  ld   $b4         ;0eeb SYS
              53d5 0000  ld   $00
              53d6 001a  ld   $1a         ;0eed LD
              53d7 005b  ld   $5b         ;0eed 'q'+1
              53d8 008c  ld   $8c         ;0eef XORI
              53d9 0020  ld   $20
              53da 0035  ld   $35         ;0ef1 BCC
              53db 0072  ld   $72         ;0ef2 NE
              53dc 00c1  ld   $c1
              53dd 0063  ld   $63         ;0ef4 POP
              53de 00ff  ld   $ff         ;0ef5 RET
              53df 002b  ld   $2b         ;0ef6 STW
              53e0 00b9  ld   $b9         ;0ef6 'SetupHorizon'
              53e1 0093  ld   $93         ;0ef8 INC
              53e2 001b  ld   $1b         ;0ef8 '_vLR'+1
              53e3 00ff  ld   $ff         ;0efa RET
              53e4 000f  ld   $0f         ;| RAM segment address (high byte first)
              53e5 00a0  ld   $a0         ;|
              53e6 0054  ld   $54         ;| Length (1..256)
              53e7 00cf  ld   $cf         ;0fa0 CALL
              53e8 00b3  ld   $b3         ;0fa0 'Intro'
              53e9 0011  ld   $11         ;0fa2 LDWI
              53ea 0000  ld   $00
              53eb 0074  ld   $74
              53ec 002b  ld   $2b         ;0fa5 STW
              53ed 008d  ld   $8d         ;0fa5 'Distance'
              53ee 002b  ld   $2b         ;0fa7 STW
              53ef 008b  ld   $8b         ;0fa7 'NextTurn'
              53f0 0011  ld   $11         ;0fa9 LDWI
              53f1 00ff  ld   $ff
              53f2 007f  ld   $7f
              53f3 002b  ld   $2b         ;0fac STW
              53f4 0097  ld   $97         ;0fac 'BestTime'
              53f5 0059  ld   $59         ;0fae LDI
              53f6 0000  ld   $00
              53f7 002b  ld   $2b         ;0fb0 STW
              53f8 003e  ld   $3e         ;0fb0 'Time'
              53f9 002b  ld   $2b         ;0fb2 STW
              53fa 0081  ld   $81         ;0fb2 'Value'
              53fb fe00  bra  ac          ;+-----------------------------------+
              53fc fcfd  bra  $53fd       ;|                                   |
              53fd 1418  ld   $18,y       ;| Trampoline for page $5300 lookups |
              53fe e006  jmp  y,$06       ;|                                   |
              53ff c218  st   [$18]       ;+-----------------------------------+
              5400 002b  ld   $2b         ;0fb4 STW
              5401 0046  ld   $46         ;0fb4 'HorizonX'
              5402 002b  ld   $2b         ;0fb6 STW
              5403 0044  ld   $44         ;0fb6 'DriftX'
              5404 002b  ld   $2b         ;0fb8 STW
              5405 0040  ld   $40         ;0fb8 'Speed'
              5406 002b  ld   $2b         ;0fba STW
              5407 009b  ld   $9b         ;0fba 'Random'
              5408 002b  ld   $2b         ;0fbc STW
              5409 0087  ld   $87         ;0fbc 'DX0'
              540a 002b  ld   $2b         ;0fbe STW
              540b 008f  ld   $8f         ;0fbe 'DDX'
              540c 002b  ld   $2b         ;0fc0 STW
              540d 0091  ld   $91         ;0fc0 'NextDDX'
              540e 00cf  ld   $cf         ;0fc2 CALL
              540f 0093  ld   $93         ;0fc2 'DrawRoad'
              5410 00cf  ld   $cf         ;0fc4 CALL
              5411 009f  ld   $9f         ;0fc4 'DrawGrass'
              5412 00cf  ld   $cf         ;0fc6 CALL
              5413 00b9  ld   $b9         ;0fc6 'SetupHorizon'
              5414 0011  ld   $11         ;0fc8 LDWI
              5415 0035  ld   $35
              5416 0014  ld   $14
              5417 002b  ld   $2b         ;0fcb STW
              5418 0038  ld   $38         ;0fcb 'Pos'
              5419 00cd  ld   $cd         ;0fcd DEF
              541a 00d7  ld   $d7
              541b 0047  ld   $47         ;0fcf 'G'
              541c 0045  ld   $45         ;0fd0 'E'
              541d 0054  ld   $54         ;0fd1 'T'
              541e 0020  ld   $20         ;0fd2 ' '
              541f 0052  ld   $52         ;0fd3 'R'
              5420 0045  ld   $45         ;0fd4 'E'
              5421 0041  ld   $41         ;0fd5 'A'
              5422 0044  ld   $44         ;0fd6 'D'
              5423 0059  ld   $59         ;0fd7 'Y'
              5424 0000  ld   $00         ;0fd8 0
              5425 00cf  ld   $cf         ;0fd9 CALL
              5426 0085  ld   $85         ;0fd9 'PrintText'
              5427 00cf  ld   $cf         ;0fdb CALL
              5428 0070  ld   $70         ;0fdb 'SetupRoad'
              5429 00cf  ld   $cf         ;0fdd CALL
              542a 00b9  ld   $b9         ;0fdd 'SetupHorizon'
              542b 00cf  ld   $cf         ;0fdf CALL
              542c 00b1  ld   $b1         ;0fdf 'SetupIndicator'
              542d 0011  ld   $11         ;0fe1 LDWI
              542e 0000  ld   $00
              542f 0079  ld   $79
              5430 002b  ld   $2b         ;0fe4 STW
              5431 0042  ld   $42         ;0fe4 'CarX'
              5432 001a  ld   $1a         ;0fe6 LD
              5433 000e  ld   $0e
              5434 002b  ld   $2b         ;0fe8 STW
              5435 003c  ld   $3c         ;0fe8 'LastFrame'
              5436 00cf  ld   $cf         ;0fea CALL
              5437 00a1  ld   $a1         ;0fea 'PlayGame'
              5438 00cf  ld   $cf         ;0fec CALL
              5439 00b7  ld   $b7         ;0fec 'GameOver'
              543a 0059  ld   $59         ;0fee LDI
              543b 003f  ld   $3f
              543c 00cf  ld   $cf         ;0ff0 CALL
              543d 0099  ld   $99         ;0ff0 'PrintBestTime'
              543e 0090  ld   $90         ;0ff2 BRA
              543f 00a0  ld   $a0
              5440 0000  ld   $00         ;End of Apps/Racer/Racer_v2.gcl, size 1873
                                          ;+-----------------------------------+
                                          ;| gbas/browser/Browser_SDCard_ROMv5a_v1.gt1 |
                                          ;+-----------------------------------+
              5441 dc52  st   $52,[y,x++] ;'R'
              5442 dc61  st   $61,[y,x++] ;'a'
              5443 dc63  st   $63,[y,x++] ;'c'
              5444 dc65  st   $65,[y,x++] ;'e'
              5445 dc72  st   $72,[y,x++] ;'r'
              5446 dc00  st   $00,[y,x++] ;'\x00'
              5447 dc00  st   $00,[y,x++] ;'\x00'
              5448 dc00  st   $00,[y,x++] ;'\x00'
              5449 00f0  ld   $f0
              544a c218  st   [$18]
              544b 004c  ld   $4c
              544c 14df  ld   $df,y
              544d e0ac  jmp  y,$ac
              544e c219  st   [$19]
SDCard:       544f 0002  ld   $02
              5450 0000  ld   $00
              5451 00f9  ld   $f9
              5452 0059  ld   $59
              5453 0040  ld   $40
              5454 002b  ld   $2b
              5455 0082  ld   $82
              5456 0011  ld   $11
              5457 00cf  ld   $cf
              5458 0063  ld   $63
              5459 00cf  ld   $cf
              545a 0018  ld   $18
              545b 0011  ld   $11
              545c 0020  ld   $20
              545d 000f  ld   $0f
              545e 002b  ld   $2b
              545f 00a2  ld   $a2
              5460 0059  ld   $59
              5461 0002  ld   $02
              5462 002b  ld   $2b
              5463 00aa  ld   $aa
              5464 0059  ld   $59
              5465 0000  ld   $00
              5466 002b  ld   $2b
              5467 00d6  ld   $d6
              5468 002b  ld   $2b
              5469 00a6  ld   $a6
              546a 0085  ld   $85
              546b 00c7  ld   $c7
              546c 0061  ld   $61
              546d 0011  ld   $11
              546e 00fe  ld   $fe
              546f 007c  ld   $7c
              5470 002b  ld   $2b
              5471 0084  ld   $84
              5472 0011  ld   $11
              5473 00a0  ld   $a0
              5474 007d  ld   $7d
              5475 0085  ld   $85
              5476 00d2  ld   $d2
              5477 0061  ld   $61
              5478 0011  ld   $11
              5479 00fe  ld   $fe
              547a 007c  ld   $7c
              547b 002b  ld   $2b
              547c 0084  ld   $84
              547d 0011  ld   $11
              547e 00a0  ld   $a0
              547f 007b  ld   $7b
              5480 0085  ld   $85
              5481 00d2  ld   $d2
              5482 0061  ld   $61
              5483 0011  ld   $11
              5484 00fe  ld   $fe
              5485 007c  ld   $7c
              5486 002b  ld   $2b
              5487 0084  ld   $84
              5488 0011  ld   $11
              5489 00a0  ld   $a0
              548a 007a  ld   $7a
              548b 0085  ld   $85
              548c 00d2  ld   $d2
              548d 0061  ld   $61
              548e 0085  ld   $85
              548f 007b  ld   $7b
              5490 0002  ld   $02
              5491 0085  ld   $85
              5492 00ae  ld   $ae
              5493 000e  ld   $0e
              5494 0085  ld   $85
              5495 00b8  ld   $b8
              5496 000d  ld   $0d
              5497 0085  ld   $85
              5498 00f4  ld   $f4
              5499 000d  ld   $0d
              549a 0085  ld   $85
              549b 0014  ld   $14
              549c 0006  ld   $06
              549d 0085  ld   $85
              549e 00ce  ld   $ce
              549f 000d  ld   $0d
              54a0 0085  ld   $85
              54a1 003d  ld   $3d
              54a2 0003  ld   $03
              54a3 0085  ld   $85
              54a4 008f  ld   $8f
              54a5 0003  ld   $03
              54a6 0021  ld   $21
              54a7 0040  ld   $40
              54a8 0035  ld   $35
              54a9 003f  ld   $3f
              54aa 0049  ld   $49
              54ab 0085  ld   $85
              54ac 00e1  ld   $e1
              54ad 000d  ld   $0d
              54ae 0085  ld   $85
              54af 00e3  ld   $e3
              54b0 0003  ld   $03
              54b1 0059  ld   $59
              54b2 0000  ld   $00
              54b3 002b  ld   $2b
              54b4 004a  ld   $4a
              54b5 0059  ld   $59
              54b6 00ff  ld   $ff
              54b7 002b  ld   $2b
              54b8 004c  ld   $4c
              54b9 0085  ld   $85
              54ba 00b9  ld   $b9
              54bb 0062  ld   $62
              54bc 0085  ld   $85
              54bd 00f6  ld   $f6
              54be 0009  ld   $09
              54bf 0021  ld   $21
              54c0 0046  ld   $46
              54c1 0035  ld   $35
              54c2 003f  ld   $3f
              54c3 0072  ld   $72
              54c4 0090  ld   $90
              54c5 003d  ld   $3d
              54c6 0093  ld   $93
              54c7 004a  ld   $4a
              54c8 0085  ld   $85
              54c9 0067  ld   $67
              54ca 0002  ld   $02
              54cb 00b4  ld   $b4
              54cc 0080  ld   $80
              54cd 0075  ld   $75
              54ce 001a  ld   $1a
              54cf 0021  ld   $21
              54d0 0082  ld   $82
              54d1 00fc  ld   $fc
              54d2 002b  ld   $2b
              54d3 004e  ld   $4e
              54d4 0021  ld   $21
              54d5 004e  ld   $4e
              54d6 008c  ld   $8c
              54d7 0020  ld   $20
              54d8 0035  ld   $35
              54d9 0072  ld   $72
              54da 008f  ld   $8f
              54db 0011  ld   $11
              54dc 003e  ld   $3e
              54dd 00e2  ld   $e2
              54de 002b  ld   $2b
              54df 0030  ld   $30
              54e0 0085  ld   $85
              54e1 0020  ld   $20
              54e2 0003  ld   $03
              54e3 0021  ld   $21
              54e4 004e  ld   $4e
              54e5 008c  ld   $8c
              54e6 0028  ld   $28
              54e7 0035  ld   $35
              54e8 0072  ld   $72
              54e9 009e  ld   $9e
              54ea 0011  ld   $11
              54eb 00a8  ld   $a8
              54ec 00b4  ld   $b4
              54ed 002b  ld   $2b
              54ee 0030  ld   $30
              54ef 0085  ld   $85
              54f0 0020  ld   $20
              54f1 0003  ld   $03
              54f2 0021  ld   $21
              54f3 004e  ld   $4e
              54f4 008c  ld   $8c
              54f5 0038  ld   $38
              54f6 0035  ld   $35
              54f7 0072  ld   $72
              54f8 00ad  ld   $ad
              54f9 0011  ld   $11
              54fa 005a  ld   $5a
              54fb fe00  bra  ac          ;+-----------------------------------+
              54fc fcfd  bra  $54fd       ;|                                   |
              54fd 1418  ld   $18,y       ;| Trampoline for page $5400 lookups |
              54fe e006  jmp  y,$06       ;|                                   |
              54ff c218  st   [$18]       ;+-----------------------------------+
              5500 00ad  ld   $ad
              5501 002b  ld   $2b
              5502 0030  ld   $30
              5503 0085  ld   $85
              5504 0020  ld   $20
              5505 0003  ld   $03
              5506 0021  ld   $21
              5507 004e  ld   $4e
              5508 00e6  ld   $e6
              5509 0040  ld   $40
              550a 0035  ld   $35
              550b 0053  ld   $53
              550c 00b7  ld   $b7
              550d 0085  ld   $85
              550e 0020  ld   $20
              550f 0003  ld   $03
              5510 0021  ld   $21
              5511 0030  ld   $30
              5512 002b  ld   $2b
              5513 0082  ld   $82
              5514 0085  ld   $85
              5515 00a0  ld   $a0
              5516 0064  ld   $64
              5517 002b  ld   $2b
              5518 0030  ld   $30
              5519 0021  ld   $21
              551a 0030  ld   $30
              551b 0035  ld   $35
              551c 0072  ld   $72
              551d 00c8  ld   $c8
              551e 0085  ld   $85
              551f 000d  ld   $0d
              5520 0003  ld   $03
              5521 0011  ld   $11
              5522 00a0  ld   $a0
              5523 007b  ld   $7b
              5524 002b  ld   $2b
              5525 0082  ld   $82
              5526 0059  ld   $59
              5527 0006  ld   $06
              5528 00f0  ld   $f0
              5529 0082  ld   $82
              552a 0059  ld   $59
              552b 0024  ld   $24
              552c 002b  ld   $2b
              552d 0050  ld   $50
              552e 0011  ld   $11
              552f 00a0  ld   $a0
              5530 007b  ld   $7b
              5531 0099  ld   $99
              5532 0050  ld   $50
              5533 00e6  ld   $e6
              5534 0023  ld   $23
              5535 002b  ld   $2b
              5536 00e8  ld   $e8
              5537 0021  ld   $21
              5538 0050  ld   $50
              5539 00ad  ld   $ad
              553a 00f0  ld   $f0
              553b 00e8  ld   $e8
              553c 0093  ld   $93
              553d 0050  ld   $50
              553e 001a  ld   $1a
              553f 0050  ld   $50
              5540 00e6  ld   $e6
              5541 002b  ld   $2b
              5542 0035  ld   $35
              5543 0056  ld   $56
              5544 00d5  ld   $d5
              5545 0011  ld   $11
              5546 00a0  ld   $a0
              5547 007b  ld   $7b
              5548 002b  ld   $2b
              5549 0084  ld   $84
              554a 0011  ld   $11
              554b 00a6  ld   $a6
              554c 007c  ld   $7c
              554d 0085  ld   $85
              554e 0000  ld   $00
              554f 0003  ld   $03
              5550 0003  ld   $03
              5551 0000  ld   $00
              5552 00fa  ld   $fa
              5553 0085  ld   $85
              5554 00c3  ld   $c3
              5555 0066  ld   $66
              5556 0082  ld   $82
              5557 0001  ld   $01
              5558 0035  ld   $35
              5559 0072  ld   $72
              555a 0009  ld   $09
              555b 0085  ld   $85
              555c 000d  ld   $0d
              555d 0003  ld   $03
              555e 0063  ld   $63
              555f 00ff  ld   $ff
              5560 0021  ld   $21
              5561 0030  ld   $30
              5562 0035  ld   $35
              5563 003f  ld   $3f
              5564 0013  ld   $13
              5565 0085  ld   $85
              5566 00b9  ld   $b9
              5567 0002  ld   $02
              5568 0011  ld   $11
              5569 00b1  ld   $b1
              556a 0069  ld   $69
              556b 0085  ld   $85
              556c 00ea  ld   $ea
              556d 0062  ld   $62
              556e 0085  ld   $85
              556f 00a1  ld   $a1
              5570 0068  ld   $68
              5571 00b4  ld   $b4
              5572 0080  ld   $80
              5573 0063  ld   $63
              5574 00ff  ld   $ff
              5575 0075  ld   $75
              5576 0011  ld   $11
              5577 0006  ld   $06
              5578 000b  ld   $0b
              5579 002b  ld   $2b
              557a 0022  ld   $22
              557b 0021  ld   $21
              557c 0032  ld   $32
              557d 002b  ld   $2b
              557e 0024  ld   $24
              557f 0059  ld   $59
              5580 0001  ld   $01
              5581 002b  ld   $2b
              5582 0026  ld   $26
              5583 001a  ld   $1a
              5584 0034  ld   $34
              5585 00e9  ld   $e9
              5586 00e9  ld   $e9
              5587 00e9  ld   $e9
              5588 002b  ld   $2b
              5589 0027  ld   $27
              558a 00b4  ld   $b4
              558b 00e6  ld   $e6
              558c 002b  ld   $2b
              558d 0036  ld   $36
              558e 0063  ld   $63
              558f 00ff  ld   $ff
              5590 0075  ld   $75
              5591 0021  ld   $21
              5592 0070  ld   $70
              5593 002b  ld   $2b
              5594 0022  ld   $22
              5595 0011  ld   $11
              5596 00ae  ld   $ae
              5597 007c  ld   $7c
              5598 002b  ld   $2b
              5599 0024  ld   $24
              559a 0059  ld   $59
              559b 00cf  ld   $cf
              559c 005e  ld   $5e
              559d 0027  ld   $27
              559e 00b4  ld   $b4
              559f 00fe  ld   $fe
              55a0 0011  ld   $11
              55a1 00ae  ld   $ae
              55a2 007c  ld   $7c
              55a3 00ad  ld   $ad
              55a4 008c  ld   $8c
              55a5 00ff  ld   $ff
              55a6 0035  ld   $35
              55a7 003f  ld   $3f
              55a8 0040  ld   $40
              55a9 0059  ld   $59
              55aa 00db  ld   $db
              55ab 005e  ld   $5e
              55ac 0027  ld   $27
              55ad 00b4  ld   $b4
              55ae 00fe  ld   $fe
              55af 0059  ld   $59
              55b0 00eb  ld   $eb
              55b1 005e  ld   $5e
              55b2 0027  ld   $27
              55b3 00b4  ld   $b4
              55b4 00fe  ld   $fe
              55b5 0059  ld   $59
              55b6 00fb  ld   $fb
              55b7 005e  ld   $5e
              55b8 0027  ld   $27
              55b9 00b4  ld   $b4
              55ba 00fe  ld   $fe
              55bb 0059  ld   $59
              55bc 0002  ld   $02
              55bd 005e  ld   $5e
              55be 0027  ld   $27
              55bf 00b4  ld   $b4
              55c0 00fe  ld   $fe
              55c1 001a  ld   $1a
              55c2 0027  ld   $27
              55c3 00e3  ld   $e3
              55c4 0004  ld   $04
              55c5 005e  ld   $5e
              55c6 0027  ld   $27
              55c7 008c  ld   $8c
              55c8 00f2  ld   $f2
              55c9 0035  ld   $35
              55ca 0072  ld   $72
              55cb 006a  ld   $6a
              55cc 0059  ld   $59
              55cd 00b9  ld   $b9
              55ce 005e  ld   $5e
              55cf 0027  ld   $27
              55d0 00b4  ld   $b4
              55d1 00fe  ld   $fe
              55d2 0011  ld   $11
              55d3 00ae  ld   $ae
              55d4 007c  ld   $7c
              55d5 00ad  ld   $ad
              55d6 002b  ld   $2b
              55d7 0040  ld   $40
              55d8 0011  ld   $11
              55d9 00af  ld   $af
              55da 007c  ld   $7c
              55db 00ad  ld   $ad
              55dc 0082  ld   $82
              55dd 003f  ld   $3f
              55de 002b  ld   $2b
              55df 0042  ld   $42
              55e0 0063  ld   $63
              55e1 00ff  ld   $ff
              55e2 0075  ld   $75
              55e3 0059  ld   $59
              55e4 0002  ld   $02
              55e5 002b  ld   $2b
              55e6 0052  ld   $52
              55e7 0021  ld   $21
              55e8 0042  ld   $42
              55e9 0035  ld   $35
              55ea 0072  ld   $72
              55eb 0099  ld   $99
              55ec 0063  ld   $63
              55ed 00ff  ld   $ff
              55ee 0021  ld   $21
              55ef 0038  ld   $38
              55f0 008c  ld   $8c
              55f1 0064  ld   $64
              55f2 0035  ld   $35
              55f3 0072  ld   $72
              55f4 00a2  ld   $a2
              55f5 0063  ld   $63
              55f6 00ff  ld   $ff
              55f7 0059  ld   $59
              55f8 0000  ld   $00
              55f9 002b  ld   $2b
              55fa 0054  ld   $54
              55fb fe00  bra  ac          ;+-----------------------------------+
              55fc fcfd  bra  $55fd       ;|                                   |
              55fd 1418  ld   $18,y       ;| Trampoline for page $5500 lookups |
              55fe e006  jmp  y,$06       ;|                                   |
              55ff c218  st   [$18]       ;+-----------------------------------+
              5600 0011  ld   $11
              5601 00ae  ld   $ae
              5602 007c  ld   $7c
              5603 0099  ld   $99
              5604 0052  ld   $52
              5605 00ad  ld   $ad
              5606 002b  ld   $2b
              5607 0056  ld   $56
              5608 0021  ld   $21
              5609 0038  ld   $38
              560a 002b  ld   $2b
              560b 0096  ld   $96
              560c 0021  ld   $21
              560d 0054  ld   $54
              560e 002b  ld   $2b
              560f 0098  ld   $98
              5610 0011  ld   $11
              5611 0038  ld   $38
              5612 0006  ld   $06
              5613 0085  ld   $85
              5614 00a0  ld   $a0
              5615 0062  ld   $62
              5616 002b  ld   $2b
              5617 00ea  ld   $ea
              5618 0021  ld   $21
              5619 0056  ld   $56
              561a 00f0  ld   $f0
              561b 00ea  ld   $ea
              561c 0093  ld   $93
              561d 0052  ld   $52
              561e 0093  ld   $93
              561f 0054  ld   $54
              5620 0021  ld   $21
              5621 0056  ld   $56
              5622 0035  ld   $35
              5623 0072  ld   $72
              5624 00a6  ld   $a6
              5625 0093  ld   $93
              5626 0038  ld   $38
              5627 0021  ld   $21
              5628 0038  ld   $38
              5629 008c  ld   $8c
              562a 0064  ld   $64
              562b 0035  ld   $35
              562c 0072  ld   $72
              562d 00d6  ld   $d6
              562e 0063  ld   $63
              562f 00ff  ld   $ff
              5630 0021  ld   $21
              5631 0052  ld   $52
              5632 00e6  ld   $e6
              5633 0002  ld   $02
              5634 00fc  ld   $fc
              5635 0042  ld   $42
              5636 0035  ld   $35
              5637 0072  ld   $72
              5638 00a2  ld   $a2
              5639 0063  ld   $63
              563a 00ff  ld   $ff
              563b 0075  ld   $75
              563c 0021  ld   $21
              563d 0038  ld   $38
              563e 00e6  ld   $e6
              563f 000f  ld   $0f
              5640 002b  ld   $2b
              5641 00e8  ld   $e8
              5642 0021  ld   $21
              5643 003a  ld   $3a
              5644 002b  ld   $2b
              5645 0082  ld   $82
              5646 0021  ld   $21
              5647 00e8  ld   $e8
              5648 0085  ld   $85
              5649 00aa  ld   $aa
              564a 0062  ld   $62
              564b 002b  ld   $2b
              564c 0082  ld   $82
              564d 0059  ld   $59
              564e 0000  ld   $00
              564f 0085  ld   $85
              5650 0000  ld   $00
              5651 0004  ld   $04
              5652 0004  ld   $04
              5653 0000  ld   $00
              5654 00f9  ld   $f9
              5655 0085  ld   $85
              5656 00f0  ld   $f0
              5657 0061  ld   $61
              5658 002b  ld   $2b
              5659 0058  ld   $58
              565a 0021  ld   $21
              565b 003a  ld   $3a
              565c 00e3  ld   $e3
              565d 000e  ld   $0e
              565e 002b  ld   $2b
              565f 00e8  ld   $e8
              5660 0021  ld   $21
              5661 0038  ld   $38
              5662 00e6  ld   $e6
              5663 0001  ld   $01
              5664 002b  ld   $2b
              5665 00ea  ld   $ea
              5666 0021  ld   $21
              5667 00e8  ld   $e8
              5668 002b  ld   $2b
              5669 0082  ld   $82
              566a 0021  ld   $21
              566b 00ea  ld   $ea
              566c 0085  ld   $85
              566d 00aa  ld   $aa
              566e 0062  ld   $62
              566f 002b  ld   $2b
              5670 005a  ld   $5a
              5671 0021  ld   $21
              5672 0058  ld   $58
              5673 002b  ld   $2b
              5674 005c  ld   $5c
              5675 0021  ld   $21
              5676 005a  ld   $5a
              5677 002b  ld   $2b
              5678 00c4  ld   $c4
              5679 0059  ld   $59
              567a 0001  ld   $01
              567b 002b  ld   $2b
              567c 00c6  ld   $c6
              567d 0021  ld   $21
              567e 005c  ld   $5c
              567f 002b  ld   $2b
              5680 0096  ld   $96
              5681 0059  ld   $59
              5682 0000  ld   $00
              5683 002b  ld   $2b
              5684 0098  ld   $98
              5685 0011  ld   $11
              5686 0038  ld   $38
              5687 0006  ld   $06
              5688 0085  ld   $85
              5689 00a0  ld   $a0
              568a 0062  ld   $62
              568b 00e3  ld   $e3
              568c 0001  ld   $01
              568d 002b  ld   $2b
              568e 005e  ld   $5e
              568f 0021  ld   $21
              5690 005e  ld   $5e
              5691 00ad  ld   $ad
              5692 002b  ld   $2b
              5693 0060  ld   $60
              5694 0021  ld   $21
              5695 005e  ld   $5e
              5696 00e6  ld   $e6
              5697 0001  ld   $01
              5698 00ad  ld   $ad
              5699 002b  ld   $2b
              569a 0062  ld   $62
              569b 0021  ld   $21
              569c 005c  ld   $5c
              569d 00b8  ld   $b8
              569e 003a  ld   $3a
              569f 00fc  ld   $fc
              56a0 003c  ld   $3c
              56a1 0035  ld   $35
              56a2 0072  ld   $72
              56a3 0068  ld   $68
              56a4 0021  ld   $21
              56a5 0062  ld   $62
              56a6 008c  ld   $8c
              56a7 0001  ld   $01
              56a8 0035  ld   $35
              56a9 0072  ld   $72
              56aa 005c  ld   $5c
              56ab 0011  ld   $11
              56ac 003f  ld   $3f
              56ad 0020  ld   $20
              56ae 002b  ld   $2b
              56af 00a2  ld   $a2
              56b0 0085  ld   $85
              56b1 0063  ld   $63
              56b2 0004  ld   $04
              56b3 0011  ld   $11
              56b4 002a  ld   $2a
              56b5 0020  ld   $20
              56b6 002b  ld   $2b
              56b7 00a2  ld   $a2
              56b8 0021  ld   $21
              56b9 005e  ld   $5e
              56ba 002b  ld   $2b
              56bb 0044  ld   $44
              56bc 0085  ld   $85
              56bd 007e  ld   $7e
              56be 0004  ld   $04
              56bf 0021  ld   $21
              56c0 0062  ld   $62
              56c1 008c  ld   $8c
              56c2 0001  ld   $01
              56c3 0035  ld   $35
              56c4 0072  ld   $72
              56c5 0077  ld   $77
              56c6 0011  ld   $11
              56c7 0020  ld   $20
              56c8 003f  ld   $3f
              56c9 002b  ld   $2b
              56ca 00a2  ld   $a2
              56cb 0085  ld   $85
              56cc 007e  ld   $7e
              56cd 0004  ld   $04
              56ce 0011  ld   $11
              56cf 0020  ld   $20
              56d0 002a  ld   $2a
              56d1 002b  ld   $2b
              56d2 00a2  ld   $a2
              56d3 0059  ld   $59
              56d4 0002  ld   $02
              56d5 005e  ld   $5e
              56d6 00a4  ld   $a4
              56d7 0021  ld   $21
              56d8 005c  ld   $5c
              56d9 00b8  ld   $b8
              56da 003a  ld   $3a
              56db 00e9  ld   $e9
              56dc 00e9  ld   $e9
              56dd 00e9  ld   $e9
              56de 005e  ld   $5e
              56df 00a5  ld   $a5
              56e0 0085  ld   $85
              56e1 00a9  ld   $a9
              56e2 0064  ld   $64
              56e3 0021  ld   $21
              56e4 005e  ld   $5e
              56e5 0085  ld   $85
              56e6 00ea  ld   $ea
              56e7 0062  ld   $62
              56e8 0059  ld   $59
              56e9 000c  ld   $0c
              56ea 00b8  ld   $b8
              56eb 0060  ld   $60
              56ec 0085  ld   $85
              56ed 00b6  ld   $b6
              56ee 0063  ld   $63
              56ef 0021  ld   $21
              56f0 005c  ld   $5c
              56f1 0099  ld   $99
              56f2 00c6  ld   $c6
              56f3 002b  ld   $2b
              56f4 005c  ld   $5c
              56f5 00b8  ld   $b8
              56f6 00c4  ld   $c4
              56f7 0035  ld   $35
              56f8 0056  ld   $56
              56f9 0026  ld   $26
              56fa 0063  ld   $63
              56fb fe00  bra  ac          ;+-----------------------------------+
              56fc fcfd  bra  $56fd       ;|                                   |
              56fd 1418  ld   $18,y       ;| Trampoline for page $5600 lookups |
              56fe e006  jmp  y,$06       ;|                                   |
              56ff c218  st   [$18]       ;+-----------------------------------+
              5700 00ff  ld   $ff
              5701 0075  ld   $75
              5702 0021  ld   $21
              5703 0038  ld   $38
              5704 00e6  ld   $e6
              5705 000f  ld   $0f
              5706 002b  ld   $2b
              5707 00e8  ld   $e8
              5708 0021  ld   $21
              5709 003a  ld   $3a
              570a 002b  ld   $2b
              570b 0082  ld   $82
              570c 0021  ld   $21
              570d 00e8  ld   $e8
              570e 0085  ld   $85
              570f 00aa  ld   $aa
              5710 0062  ld   $62
              5711 002b  ld   $2b
              5712 0082  ld   $82
              5713 0059  ld   $59
              5714 0000  ld   $00
              5715 0085  ld   $85
              5716 00f0  ld   $f0
              5717 0061  ld   $61
              5718 002b  ld   $2b
              5719 0058  ld   $58
              571a 0021  ld   $21
              571b 0058  ld   $58
              571c 0099  ld   $99
              571d 003e  ld   $3e
              571e 002b  ld   $2b
              571f 0064  ld   $64
              5720 0021  ld   $21
              5721 0064  ld   $64
              5722 002b  ld   $2b
              5723 0096  ld   $96
              5724 0059  ld   $59
              5725 0000  ld   $00
              5726 002b  ld   $2b
              5727 0098  ld   $98
              5728 0011  ld   $11
              5729 0038  ld   $38
              572a 0006  ld   $06
              572b 0085  ld   $85
              572c 00a0  ld   $a0
              572d 0062  ld   $62
              572e 00e3  ld   $e3
              572f 0001  ld   $01
              5730 002b  ld   $2b
              5731 0066  ld   $66
              5732 0021  ld   $21
              5733 0066  ld   $66
              5734 00ad  ld   $ad
              5735 002b  ld   $2b
              5736 0068  ld   $68
              5737 0021  ld   $21
              5738 0066  ld   $66
              5739 00e6  ld   $e6
              573a 0001  ld   $01
              573b 00ad  ld   $ad
              573c 002b  ld   $2b
              573d 0062  ld   $62
              573e 0021  ld   $21
              573f 0062  ld   $62
              5740 008c  ld   $8c
              5741 0001  ld   $01
              5742 0035  ld   $35
              5743 0072  ld   $72
              5744 00f1  ld   $f1
              5745 0011  ld   $11
              5746 0020  ld   $20
              5747 003f  ld   $3f
              5748 002b  ld   $2b
              5749 00a2  ld   $a2
              574a 0085  ld   $85
              574b 0002  ld   $02
              574c 0005  ld   $05
              574d 0011  ld   $11
              574e 0020  ld   $20
              574f 002a  ld   $2a
              5750 0085  ld   $85
              5751 0000  ld   $00
              5752 0005  ld   $05
              5753 0005  ld   $05
              5754 0000  ld   $00
              5755 0000  ld   $00
              5756 002b  ld   $2b
              5757 00a2  ld   $a2
              5758 0059  ld   $59
              5759 0002  ld   $02
              575a 005e  ld   $5e
              575b 00a4  ld   $a4
              575c 0021  ld   $21
              575d 0064  ld   $64
              575e 00b8  ld   $b8
              575f 0058  ld   $58
              5760 00e9  ld   $e9
              5761 00e9  ld   $e9
              5762 00e9  ld   $e9
              5763 005e  ld   $5e
              5764 00a5  ld   $a5
              5765 0085  ld   $85
              5766 00a9  ld   $a9
              5767 0064  ld   $64
              5768 0021  ld   $21
              5769 0066  ld   $66
              576a 0085  ld   $85
              576b 00ea  ld   $ea
              576c 0062  ld   $62
              576d 0059  ld   $59
              576e 000c  ld   $0c
              576f 00b8  ld   $b8
              5770 0068  ld   $68
              5771 0085  ld   $85
              5772 00b6  ld   $b6
              5773 0063  ld   $63
              5774 0021  ld   $21
              5775 003c  ld   $3c
              5776 002b  ld   $2b
              5777 003e  ld   $3e
              5778 0021  ld   $21
              5779 0058  ld   $58
              577a 0099  ld   $99
              577b 003c  ld   $3c
              577c 002b  ld   $2b
              577d 006a  ld   $6a
              577e 0021  ld   $21
              577f 006a  ld   $6a
              5780 002b  ld   $2b
              5781 0096  ld   $96
              5782 0059  ld   $59
              5783 0000  ld   $00
              5784 002b  ld   $2b
              5785 0098  ld   $98
              5786 0011  ld   $11
              5787 0038  ld   $38
              5788 0006  ld   $06
              5789 0085  ld   $85
              578a 00a0  ld   $a0
              578b 0062  ld   $62
              578c 00e3  ld   $e3
              578d 0001  ld   $01
              578e 002b  ld   $2b
              578f 006c  ld   $6c
              5790 0021  ld   $21
              5791 006c  ld   $6c
              5792 00ad  ld   $ad
              5793 002b  ld   $2b
              5794 006e  ld   $6e
              5795 0021  ld   $21
              5796 006c  ld   $6c
              5797 00e6  ld   $e6
              5798 0001  ld   $01
              5799 00ad  ld   $ad
              579a 002b  ld   $2b
              579b 0062  ld   $62
              579c 0021  ld   $21
              579d 0062  ld   $62
              579e 008c  ld   $8c
              579f 0001  ld   $01
              57a0 0035  ld   $35
              57a1 0072  ld   $72
              57a2 0053  ld   $53
              57a3 0011  ld   $11
              57a4 003f  ld   $3f
              57a5 0020  ld   $20
              57a6 002b  ld   $2b
              57a7 00a2  ld   $a2
              57a8 0085  ld   $85
              57a9 005a  ld   $5a
              57aa 0005  ld   $05
              57ab 0011  ld   $11
              57ac 002a  ld   $2a
              57ad 0020  ld   $20
              57ae 002b  ld   $2b
              57af 00a2  ld   $a2
              57b0 0059  ld   $59
              57b1 0002  ld   $02
              57b2 005e  ld   $5e
              57b3 00a4  ld   $a4
              57b4 0021  ld   $21
              57b5 006a  ld   $6a
              57b6 00b8  ld   $b8
              57b7 0058  ld   $58
              57b8 00e9  ld   $e9
              57b9 00e9  ld   $e9
              57ba 00e9  ld   $e9
              57bb 005e  ld   $5e
              57bc 00a5  ld   $a5
              57bd 0085  ld   $85
              57be 00a9  ld   $a9
              57bf 0064  ld   $64
              57c0 0021  ld   $21
              57c1 006c  ld   $6c
              57c2 0085  ld   $85
              57c3 00ea  ld   $ea
              57c4 0062  ld   $62
              57c5 0059  ld   $59
              57c6 000c  ld   $0c
              57c7 00b8  ld   $b8
              57c8 006e  ld   $6e
              57c9 0085  ld   $85
              57ca 00b6  ld   $b6
              57cb 0063  ld   $63
              57cc 0021  ld   $21
              57cd 006c  ld   $6c
              57ce 002b  ld   $2b
              57cf 0044  ld   $44
              57d0 0063  ld   $63
              57d1 00ff  ld   $ff
              57d2 0075  ld   $75
              57d3 001a  ld   $1a
              57d4 0021  ld   $21
              57d5 0082  ld   $82
              57d6 00fc  ld   $fc
              57d7 002b  ld   $2b
              57d8 004e  ld   $4e
              57d9 0021  ld   $21
              57da 004e  ld   $4e
              57db 00e6  ld   $e6
              57dc 0040  ld   $40
              57dd 0035  ld   $35
              57de 0056  ld   $56
              57df 008b  ld   $8b
              57e0 0085  ld   $85
              57e1 00c5  ld   $c5
              57e2 0005  ld   $05
              57e3 0011  ld   $11
              57e4 00e9  ld   $e9
              57e5 0002  ld   $02
              57e6 002b  ld   $2b
              57e7 0070  ld   $70
              57e8 0021  ld   $21
              57e9 004e  ld   $4e
              57ea 008c  ld   $8c
              57eb 0020  ld   $20
              57ec 0035  ld   $35
              57ed 0072  ld   $72
              57ee 009c  ld   $9c
              57ef 0011  ld   $11
              57f0 00b1  ld   $b1
              57f1 000b  ld   $0b
              57f2 002b  ld   $2b
              57f3 0070  ld   $70
              57f4 0021  ld   $21
              57f5 004e  ld   $4e
              57f6 008c  ld   $8c
              57f7 0028  ld   $28
              57f8 0035  ld   $35
              57f9 0072  ld   $72
              57fa 00a8  ld   $a8
              57fb fe00  bra  ac          ;+-----------------------------------+
              57fc fcfd  bra  $57fd       ;|                                   |
              57fd 1418  ld   $18,y       ;| Trampoline for page $5700 lookups |
              57fe e006  jmp  y,$06       ;|                                   |
              57ff c218  st   [$18]       ;+-----------------------------------+
              5800 0011  ld   $11
              5801 00df  ld   $df
              5802 000b  ld   $0b
              5803 002b  ld   $2b
              5804 0070  ld   $70
              5805 0021  ld   $21
              5806 004e  ld   $4e
              5807 008c  ld   $8c
              5808 0038  ld   $38
              5809 0035  ld   $35
              580a 0072  ld   $72
              580b 00b4  ld   $b4
              580c 0011  ld   $11
              580d 0031  ld   $31
              580e 008a  ld   $8a
              580f 002b  ld   $2b
              5810 0070  ld   $70
              5811 0021  ld   $21
              5812 004e  ld   $4e
              5813 008c  ld   $8c
              5814 0040  ld   $40
              5815 0035  ld   $35
              5816 0072  ld   $72
              5817 00c0  ld   $c0
              5818 0011  ld   $11
              5819 0007  ld   $07
              581a 0059  ld   $59
              581b 002b  ld   $2b
              581c 0070  ld   $70
              581d 0085  ld   $85
              581e 0012  ld   $12
              581f 0006  ld   $06
              5820 0059  ld   $59
              5821 00a7  ld   $a7
              5822 002b  ld   $2b
              5823 0070  ld   $70
              5824 0021  ld   $21
              5825 004e  ld   $4e
              5826 008c  ld   $8c
              5827 00f0  ld   $f0
              5828 0035  ld   $35
              5829 003f  ld   $3f
              582a 00d1  ld   $d1
              582b 0085  ld   $85
              582c 00db  ld   $db
              582d 0005  ld   $05
              582e 0011  ld   $11
              582f 0000  ld   $00
              5830 0013  ld   $13
              5831 002b  ld   $2b
              5832 0070  ld   $70
              5833 0085  ld   $85
              5834 0012  ld   $12
              5835 0006  ld   $06
              5836 0021  ld   $21
              5837 004e  ld   $4e
              5838 008c  ld   $8c
              5839 00f8  ld   $f8
              583a 0035  ld   $35
              583b 003f  ld   $3f
              583c 00e3  ld   $e3
              583d 0085  ld   $85
              583e 0012  ld   $12
              583f 0006  ld   $06
              5840 0011  ld   $11
              5841 0070  ld   $70
              5842 005a  ld   $5a
              5843 00fc  ld   $fc
              5844 0030  ld   $30
              5845 0035  ld   $35
              5846 0072  ld   $72
              5847 00f0  ld   $f0
              5848 0011  ld   $11
              5849 0007  ld   $07
              584a 0059  ld   $59
              584b 002b  ld   $2b
              584c 0070  ld   $70
              584d 0011  ld   $11
              584e 0072  ld   $72
              584f 005a  ld   $5a
              5850 00fc  ld   $fc
              5851 0030  ld   $30
              5852 0035  ld   $35
              5853 003f  ld   $3f
              5854 00fb  ld   $fb
              5855 0085  ld   $85
              5856 0005  ld   $05
              5857 0006  ld   $06
              5858 0085  ld   $85
              5859 0000  ld   $00
              585a 0006  ld   $06
              585b 0006  ld   $06
              585c 0000  ld   $00
              585d 0037  ld   $37
              585e 0011  ld   $11
              585f 0007  ld   $07
              5860 0059  ld   $59
              5861 002b  ld   $2b
              5862 0070  ld   $70
              5863 0011  ld   $11
              5864 0072  ld   $72
              5865 005c  ld   $5c
              5866 00fc  ld   $fc
              5867 0030  ld   $30
              5868 0035  ld   $35
              5869 0072  ld   $72
              586a 0010  ld   $10
              586b 0011  ld   $11
              586c 0007  ld   $07
              586d 005b  ld   $5b
              586e 002b  ld   $2b
              586f 0070  ld   $70
              5870 0063  ld   $63
              5871 00ff  ld   $ff
              5872 0075  ld   $75
              5873 0011  ld   $11
              5874 00ef  ld   $ef
              5875 007c  ld   $7c
              5876 002b  ld   $2b
              5877 0082  ld   $82
              5878 0059  ld   $59
              5879 0003  ld   $03
              587a 00f0  ld   $f0
              587b 0082  ld   $82
              587c 0011  ld   $11
              587d 00a0  ld   $a0
              587e 007a  ld   $7a
              587f 00ad  ld   $ad
              5880 002b  ld   $2b
              5881 0072  ld   $72
              5882 0021  ld   $21
              5883 0072  ld   $72
              5884 0035  ld   $35
              5885 004d  ld   $4d
              5886 002a  ld   $2a
              5887 0085  ld   $85
              5888 00c3  ld   $c3
              5889 0008  ld   $08
              588a 0059  ld   $59
              588b 0001  ld   $01
              588c 002b  ld   $2b
              588d 005c  ld   $5c
              588e 0021  ld   $21
              588f 0072  ld   $72
              5890 00e3  ld   $e3
              5891 0001  ld   $01
              5892 0085  ld   $85
              5893 00a0  ld   $a0
              5894 0008  ld   $08
              5895 0006  ld   $06
              5896 0038  ld   $38
              5897 00c8  ld   $c8
              5898 00f1  ld   $f1
              5899 0079  ld   $79
              589a 00e2  ld   $e2
              589b 0079  ld   $79
              589c 00d3  ld   $d3
              589d 0079  ld   $79
              589e 00c4  ld   $c4
              589f 0079  ld   $79
              58a0 00b5  ld   $b5
              58a1 0079  ld   $79
              58a2 00a6  ld   $a6
              58a3 0079  ld   $79
              58a4 00f1  ld   $f1
              58a5 0078  ld   $78
              58a6 00e2  ld   $e2
              58a7 0078  ld   $78
              58a8 00d3  ld   $d3
              58a9 0078  ld   $78
              58aa 00c4  ld   $c4
              58ab 0078  ld   $78
              58ac 00b5  ld   $b5
              58ad 0078  ld   $78
              58ae 00a6  ld   $a6
              58af 0078  ld   $78
              58b0 00f1  ld   $f1
              58b1 0077  ld   $77
              58b2 00e2  ld   $e2
              58b3 0077  ld   $77
              58b4 00d3  ld   $d3
              58b5 0077  ld   $77
              58b6 00c4  ld   $c4
              58b7 0077  ld   $77
              58b8 00b5  ld   $b5
              58b9 0077  ld   $77
              58ba 00a6  ld   $a6
              58bb 0077  ld   $77
              58bc 00f1  ld   $f1
              58bd 0076  ld   $76
              58be 00e2  ld   $e2
              58bf 0076  ld   $76
              58c0 00d3  ld   $d3
              58c1 0076  ld   $76
              58c2 00c4  ld   $c4
              58c3 0076  ld   $76
              58c4 00b5  ld   $b5
              58c5 0076  ld   $76
              58c6 00a6  ld   $a6
              58c7 0076  ld   $76
              58c8 00f1  ld   $f1
              58c9 0075  ld   $75
              58ca 00e2  ld   $e2
              58cb 0075  ld   $75
              58cc 00d3  ld   $d3
              58cd 0075  ld   $75
              58ce 00c4  ld   $c4
              58cf 0075  ld   $75
              58d0 00b5  ld   $b5
              58d1 0075  ld   $75
              58d2 00a6  ld   $a6
              58d3 0075  ld   $75
              58d4 00f1  ld   $f1
              58d5 0074  ld   $74
              58d6 00e2  ld   $e2
              58d7 0074  ld   $74
              58d8 00d3  ld   $d3
              58d9 0074  ld   $74
              58da 00c4  ld   $c4
              58db 0074  ld   $74
              58dc 00b5  ld   $b5
              58dd 0074  ld   $74
              58de 00a6  ld   $a6
              58df 0074  ld   $74
              58e0 00f1  ld   $f1
              58e1 0073  ld   $73
              58e2 00e2  ld   $e2
              58e3 0073  ld   $73
              58e4 00d3  ld   $d3
              58e5 0073  ld   $73
              58e6 00c4  ld   $c4
              58e7 0073  ld   $73
              58e8 00b5  ld   $b5
              58e9 0073  ld   $73
              58ea 00a6  ld   $a6
              58eb 0073  ld   $73
              58ec 00f1  ld   $f1
              58ed 0072  ld   $72
              58ee 00e2  ld   $e2
              58ef 0072  ld   $72
              58f0 00d3  ld   $d3
              58f1 0072  ld   $72
              58f2 00c4  ld   $c4
              58f3 0072  ld   $72
              58f4 00b5  ld   $b5
              58f5 0072  ld   $72
              58f6 00a6  ld   $a6
              58f7 0072  ld   $72
              58f8 00f1  ld   $f1
              58f9 0071  ld   $71
              58fa 00e2  ld   $e2
              58fb fe00  bra  ac          ;+-----------------------------------+
              58fc fcfd  bra  $58fd       ;|                                   |
              58fd 1418  ld   $18,y       ;| Trampoline for page $5800 lookups |
              58fe e006  jmp  y,$06       ;|                                   |
              58ff c218  st   [$18]       ;+-----------------------------------+
              5900 0071  ld   $71
              5901 00d3  ld   $d3
              5902 0071  ld   $71
              5903 00c4  ld   $c4
              5904 0071  ld   $71
              5905 00b5  ld   $b5
              5906 0071  ld   $71
              5907 00a6  ld   $a6
              5908 0071  ld   $71
              5909 00f1  ld   $f1
              590a 0070  ld   $70
              590b 00e2  ld   $e2
              590c 0070  ld   $70
              590d 00d3  ld   $d3
              590e 0070  ld   $70
              590f 00c4  ld   $c4
              5910 0070  ld   $70
              5911 00b5  ld   $b5
              5912 0070  ld   $70
              5913 00a6  ld   $a6
              5914 0070  ld   $70
              5915 00f1  ld   $f1
              5916 006f  ld   $6f
              5917 00e2  ld   $e2
              5918 006f  ld   $6f
              5919 00d3  ld   $d3
              591a 006f  ld   $6f
              591b 00c4  ld   $c4
              591c 006f  ld   $6f
              591d 00b5  ld   $b5
              591e 006f  ld   $6f
              591f 00a6  ld   $a6
              5920 006f  ld   $6f
              5921 00f1  ld   $f1
              5922 006e  ld   $6e
              5923 00e2  ld   $e2
              5924 006e  ld   $6e
              5925 00d3  ld   $d3
              5926 006e  ld   $6e
              5927 00c4  ld   $c4
              5928 006e  ld   $6e
              5929 00b5  ld   $b5
              592a 006e  ld   $6e
              592b 00a6  ld   $a6
              592c 006e  ld   $6e
              592d 00f1  ld   $f1
              592e 006d  ld   $6d
              592f 00e2  ld   $e2
              5930 006d  ld   $6d
              5931 00d3  ld   $d3
              5932 006d  ld   $6d
              5933 00c4  ld   $c4
              5934 006d  ld   $6d
              5935 00b5  ld   $b5
              5936 006d  ld   $6d
              5937 00a6  ld   $a6
              5938 006d  ld   $6d
              5939 00f1  ld   $f1
              593a 006c  ld   $6c
              593b 00e2  ld   $e2
              593c 006c  ld   $6c
              593d 00d3  ld   $d3
              593e 006c  ld   $6c
              593f 00c4  ld   $c4
              5940 006c  ld   $6c
              5941 00b5  ld   $b5
              5942 006c  ld   $6c
              5943 00a6  ld   $a6
              5944 006c  ld   $6c
              5945 00f1  ld   $f1
              5946 006b  ld   $6b
              5947 00e2  ld   $e2
              5948 006b  ld   $6b
              5949 00d3  ld   $d3
              594a 006b  ld   $6b
              594b 00c4  ld   $c4
              594c 006b  ld   $6b
              594d 00b5  ld   $b5
              594e 006b  ld   $6b
              594f 00a6  ld   $a6
              5950 006b  ld   $6b
              5951 00f1  ld   $f1
              5952 006a  ld   $6a
              5953 00e2  ld   $e2
              5954 006a  ld   $6a
              5955 00d3  ld   $d3
              5956 006a  ld   $6a
              5957 00c4  ld   $c4
              5958 006a  ld   $6a
              5959 00b5  ld   $b5
              595a 006a  ld   $6a
              595b 00a6  ld   $a6
              595c 006a  ld   $6a
              595d 00f1  ld   $f1
              595e 0069  ld   $69
              595f 00e2  ld   $e2
              5960 0069  ld   $69
              5961 00d3  ld   $d3
              5962 0069  ld   $69
              5963 00c4  ld   $c4
              5964 0069  ld   $69
              5965 0008  ld   $08
              5966 00a0  ld   $a0
              5967 005e  ld   $5e
              5968 002b  ld   $2b
              5969 00c4  ld   $c4
              596a 0059  ld   $59
              596b 0001  ld   $01
              596c 002b  ld   $2b
              596d 00c6  ld   $c6
              596e 0011  ld   $11
              596f 00ef  ld   $ef
              5970 007c  ld   $7c
              5971 0099  ld   $99
              5972 005c  ld   $5c
              5973 002b  ld   $2b
              5974 00e8  ld   $e8
              5975 0011  ld   $11
              5976 00a0  ld   $a0
              5977 007a  ld   $7a
              5978 0099  ld   $99
              5979 005c  ld   $5c
              597a 00ad  ld   $ad
              597b 00f0  ld   $f0
              597c 00e8  ld   $e8
              597d 0021  ld   $21
              597e 005c  ld   $5c
              597f 0099  ld   $99
              5980 00c6  ld   $c6
              5981 002b  ld   $2b
              5982 005c  ld   $5c
              5983 00b8  ld   $b8
              5984 00c4  ld   $c4
              5985 0035  ld   $35
              5986 0056  ld   $56
              5987 00a4  ld   $a4
              5988 0085  ld   $85
              5989 00cc  ld   $cc
              598a 0008  ld   $08
              598b 0011  ld   $11
              598c 00f0  ld   $f0
              598d 007c  ld   $7c
              598e 002b  ld   $2b
              598f 0082  ld   $82
              5990 0059  ld   $59
              5991 0000  ld   $00
              5992 00f0  ld   $f0
              5993 0082  ld   $82
              5994 0059  ld   $59
              5995 0001  ld   $01
              5996 0099  ld   $99
              5997 0072  ld   $72
              5998 00e3  ld   $e3
              5999 0001  ld   $01
              599a 002b  ld   $2b
              599b 0034  ld   $34
              599c 0085  ld   $85
              599d 0022  ld   $22
              599e 0003  ld   $03
              599f 0085  ld   $85
              59a0 00f8  ld   $f8
              59a1 000c  ld   $0c
              59a2 0011  ld   $11
              59a3 00fe  ld   $fe
              59a4 007c  ld   $7c
              59a5 002b  ld   $2b
              59a6 0084  ld   $84
              59a7 0011  ld   $11
              59a8 00a0  ld   $a0
              59a9 007a  ld   $7a
              59aa 0085  ld   $85
              59ab 00d2  ld   $d2
              59ac 0061  ld   $61
              59ad 0063  ld   $63
              59ae 00ff  ld   $ff
              59af 0075  ld   $75
              59b0 0085  ld   $85
              59b1 00b8  ld   $b8
              59b2 000d  ld   $0d
              59b3 0011  ld   $11
              59b4 00ef  ld   $ef
              59b5 007c  ld   $7c
              59b6 002b  ld   $2b
              59b7 0082  ld   $82
              59b8 0059  ld   $59
              59b9 0002  ld   $02
              59ba 00f0  ld   $f0
              59bb 0082  ld   $82
              59bc 0021  ld   $21
              59bd 0044  ld   $44
              59be 002b  ld   $2b
              59bf 0084  ld   $84
              59c0 0011  ld   $11
              59c1 00a0  ld   $a0
              59c2 007d  ld   $7d
              59c3 0085  ld   $85
              59c4 00a0  ld   $a0
              59c5 0009  ld   $09
              59c6 0009  ld   $09
              59c7 00a0  ld   $a0
              59c8 0060  ld   $60
              59c9 0085  ld   $85
              59ca 00d2  ld   $d2
              59cb 0061  ld   $61
              59cc 0011  ld   $11
              59cd 00a0  ld   $a0
              59ce 007d  ld   $7d
              59cf 00ad  ld   $ad
              59d0 002b  ld   $2b
              59d1 0072  ld   $72
              59d2 0059  ld   $59
              59d3 0001  ld   $01
              59d4 002b  ld   $2b
              59d5 005c  ld   $5c
              59d6 0021  ld   $21
              59d7 0072  ld   $72
              59d8 00e3  ld   $e3
              59d9 0001  ld   $01
              59da 002b  ld   $2b
              59db 00c4  ld   $c4
              59dc 0059  ld   $59
              59dd 0001  ld   $01
              59de 002b  ld   $2b
              59df 00c6  ld   $c6
              59e0 0011  ld   $11
              59e1 00ef  ld   $ef
              59e2 007c  ld   $7c
              59e3 0099  ld   $99
              59e4 005c  ld   $5c
              59e5 002b  ld   $2b
              59e6 00e8  ld   $e8
              59e7 0011  ld   $11
              59e8 00a0  ld   $a0
              59e9 007d  ld   $7d
              59ea 0099  ld   $99
              59eb 005c  ld   $5c
              59ec 00ad  ld   $ad
              59ed 00f0  ld   $f0
              59ee 00e8  ld   $e8
              59ef 0021  ld   $21
              59f0 005c  ld   $5c
              59f1 0099  ld   $99
              59f2 00c6  ld   $c6
              59f3 002b  ld   $2b
              59f4 005c  ld   $5c
              59f5 00b8  ld   $b8
              59f6 00c4  ld   $c4
              59f7 0035  ld   $35
              59f8 004d  ld   $4d
              59f9 00d2  ld   $d2
              59fa 0085  ld   $85
              59fb fe00  bra  ac          ;+-----------------------------------+
              59fc fcfd  bra  $59fd       ;|                                   |
              59fd 1418  ld   $18,y       ;| Trampoline for page $5900 lookups |
              59fe e006  jmp  y,$06       ;|                                   |
              59ff c218  st   [$18]       ;+-----------------------------------+
              5a00 00b7  ld   $b7
              5a01 0009  ld   $09
              5a02 0011  ld   $11
              5a03 0020  ld   $20
              5a04 000f  ld   $0f
              5a05 002b  ld   $2b
              5a06 00a2  ld   $a2
              5a07 0085  ld   $85
              5a08 00a3  ld   $a3
              5a09 0066  ld   $66
              5a0a 0085  ld   $85
              5a0b 00cd  ld   $cd
              5a0c 0064  ld   $64
              5a0d 0059  ld   $59
              5a0e 0001  ld   $01
              5a0f 0099  ld   $99
              5a10 0072  ld   $72
              5a11 00e3  ld   $e3
              5a12 0001  ld   $01
              5a13 002b  ld   $2b
              5a14 0034  ld   $34
              5a15 0085  ld   $85
              5a16 0022  ld   $22
              5a17 0003  ld   $03
              5a18 0021  ld   $21
              5a19 0030  ld   $30
              5a1a 002b  ld   $2b
              5a1b 0024  ld   $24
              5a1c 0011  ld   $11
              5a1d 0000  ld   $00
              5a1e 0002  ld   $02
              5a1f 0085  ld   $85
              5a20 00ab  ld   $ab
              5a21 0061  ld   $61
              5a22 0063  ld   $63
              5a23 00ff  ld   $ff
              5a24 0075  ld   $75
              5a25 001a  ld   $1a
              5a26 000f  ld   $0f
              5a27 002b  ld   $2b
              5a28 0074  ld   $74
              5a29 0021  ld   $21
              5a2a 0074  ld   $74
              5a2b 0085  ld   $85
              5a2c 00a0  ld   $a0
              5a2d 000a  ld   $0a
              5a2e 000a  ld   $0a
              5a2f 00a0  ld   $a0
              5a30 0060  ld   $60
              5a31 00fc  ld   $fc
              5a32 004c  ld   $4c
              5a33 0035  ld   $35
              5a34 003f  ld   $3f
              5a35 00b6  ld   $b6
              5a36 0059  ld   $59
              5a37 0000  ld   $00
              5a38 002b  ld   $2b
              5a39 004a  ld   $4a
              5a3a 0021  ld   $21
              5a3b 0074  ld   $74
              5a3c 002b  ld   $2b
              5a3d 004c  ld   $4c
              5a3e 0021  ld   $21
              5a3f 0074  ld   $74
              5a40 002b  ld   $2b
              5a41 0082  ld   $82
              5a42 0059  ld   $59
              5a43 0000  ld   $00
              5a44 002b  ld   $2b
              5a45 0084  ld   $84
              5a46 0085  ld   $85
              5a47 00cd  ld   $cd
              5a48 0065  ld   $65
              5a49 0021  ld   $21
              5a4a 004a  ld   $4a
              5a4b 00e6  ld   $e6
              5a4c 0014  ld   $14
              5a4d 0035  ld   $35
              5a4e 004d  ld   $4d
              5a4f 00c0  ld   $c0
              5a50 0085  ld   $85
              5a51 00dc  ld   $dc
              5a52 000a  ld   $0a
              5a53 0021  ld   $21
              5a54 004a  ld   $4a
              5a55 002b  ld   $2b
              5a56 00a0  ld   $a0
              5a57 0085  ld   $85
              5a58 00bd  ld   $bd
              5a59 0061  ld   $61
              5a5a 0082  ld   $82
              5a5b 0001  ld   $01
              5a5c 0035  ld   $35
              5a5d 0072  ld   $72
              5a5e 00cf  ld   $cf
              5a5f 0085  ld   $85
              5a60 00dc  ld   $dc
              5a61 000a  ld   $0a
              5a62 0021  ld   $21
              5a63 0074  ld   $74
              5a64 002b  ld   $2b
              5a65 0082  ld   $82
              5a66 0059  ld   $59
              5a67 0000  ld   $00
              5a68 002b  ld   $2b
              5a69 0084  ld   $84
              5a6a 0085  ld   $85
              5a6b 00cd  ld   $cd
              5a6c 0065  ld   $65
              5a6d 0063  ld   $63
              5a6e 00ff  ld   $ff
              5a6f 0075  ld   $75
              5a70 0085  ld   $85
              5a71 00ac  ld   $ac
              5a72 000c  ld   $0c
              5a73 0063  ld   $63
              5a74 00ff  ld   $ff
              5a75 0075  ld   $75
              5a76 0085  ld   $85
              5a77 00ac  ld   $ac
              5a78 000c  ld   $0c
              5a79 0063  ld   $63
              5a7a 00ff  ld   $ff
              5a7b 0075  ld   $75
              5a7c 0021  ld   $21
              5a7d 003a  ld   $3a
              5a7e 00e3  ld   $e3
              5a7f 000f  ld   $0f
              5a80 002b  ld   $2b
              5a81 003a  ld   $3a
              5a82 0021  ld   $21
              5a83 0038  ld   $38
              5a84 00e6  ld   $e6
              5a85 000f  ld   $0f
              5a86 002b  ld   $2b
              5a87 00e8  ld   $e8
              5a88 0021  ld   $21
              5a89 003a  ld   $3a
              5a8a 002b  ld   $2b
              5a8b 0082  ld   $82
              5a8c 0021  ld   $21
              5a8d 00e8  ld   $e8
              5a8e 0085  ld   $85
              5a8f 00a0  ld   $a0
              5a90 000b  ld   $0b
              5a91 000b  ld   $0b
              5a92 00a0  ld   $a0
              5a93 0060  ld   $60
              5a94 0085  ld   $85
              5a95 00aa  ld   $aa
              5a96 0062  ld   $62
              5a97 002b  ld   $2b
              5a98 0082  ld   $82
              5a99 0059  ld   $59
              5a9a 0000  ld   $00
              5a9b 0085  ld   $85
              5a9c 00f0  ld   $f0
              5a9d 0061  ld   $61
              5a9e 002b  ld   $2b
              5a9f 003a  ld   $3a
              5aa0 0085  ld   $85
              5aa1 00e3  ld   $e3
              5aa2 0003  ld   $03
              5aa3 0063  ld   $63
              5aa4 00ff  ld   $ff
              5aa5 0075  ld   $75
              5aa6 0021  ld   $21
              5aa7 003a  ld   $3a
              5aa8 00e6  ld   $e6
              5aa9 000f  ld   $0f
              5aaa 002b  ld   $2b
              5aab 003a  ld   $3a
              5aac 0021  ld   $21
              5aad 003a  ld   $3a
              5aae 002b  ld   $2b
              5aaf 0082  ld   $82
              5ab0 0059  ld   $59
              5ab1 0000  ld   $00
              5ab2 0085  ld   $85
              5ab3 00f0  ld   $f0
              5ab4 0061  ld   $61
              5ab5 002b  ld   $2b
              5ab6 003a  ld   $3a
              5ab7 0085  ld   $85
              5ab8 00e3  ld   $e3
              5ab9 0003  ld   $03
              5aba 0063  ld   $63
              5abb 00ff  ld   $ff
              5abc 0075  ld   $75
              5abd 0093  ld   $93
              5abe 003c  ld   $3c
              5abf 0021  ld   $21
              5ac0 0038  ld   $38
              5ac1 00e6  ld   $e6
              5ac2 0001  ld   $01
              5ac3 002b  ld   $2b
              5ac4 0082  ld   $82
              5ac5 0059  ld   $59
              5ac6 000e  ld   $0e
              5ac7 0085  ld   $85
              5ac8 00aa  ld   $aa
              5ac9 0062  ld   $62
              5aca 002b  ld   $2b
              5acb 00ea  ld   $ea
              5acc 0021  ld   $21
              5acd 003c  ld   $3c
              5ace 00b8  ld   $b8
              5acf 00ea  ld   $ea
              5ad0 0035  ld   $35
              5ad1 0056  ld   $56
              5ad2 00e1  ld   $e1
              5ad3 0059  ld   $59
              5ad4 0000  ld   $00
              5ad5 002b  ld   $2b
              5ad6 003c  ld   $3c
              5ad7 0085  ld   $85
              5ad8 00a7  ld   $a7
              5ad9 0004  ld   $04
              5ada 0063  ld   $63
              5adb 00ff  ld   $ff
              5adc 0075  ld   $75
              5add 0021  ld   $21
              5ade 003c  ld   $3c
              5adf 00e6  ld   $e6
              5ae0 0001  ld   $01
              5ae1 002b  ld   $2b
              5ae2 003c  ld   $3c
              5ae3 0021  ld   $21
              5ae4 003c  ld   $3c
              5ae5 0035  ld   $35
              5ae6 0050  ld   $50
              5ae7 00f5  ld   $f5
              5ae8 0085  ld   $85
              5ae9 00a7  ld   $a7
              5aea 000c  ld   $0c
              5aeb 0021  ld   $21
              5aec 0038  ld   $38
              5aed 00e6  ld   $e6
              5aee 0001  ld   $01
              5aef 002b  ld   $2b
              5af0 0082  ld   $82
              5af1 0085  ld   $85
              5af2 00a0  ld   $a0
              5af3 000c  ld   $0c
              5af4 000c  ld   $0c
              5af5 00a0  ld   $a0
              5af6 0060  ld   $60
              5af7 0059  ld   $59
              5af8 000e  ld   $0e
              5af9 0085  ld   $85
              5afa 00aa  ld   $aa
              5afb fe00  bra  ac          ;+-----------------------------------+
              5afc fcfd  bra  $5afd       ;|                                   |
              5afd 1418  ld   $18,y       ;| Trampoline for page $5a00 lookups |
              5afe e006  jmp  y,$06       ;|                                   |
              5aff c218  st   [$18]       ;+-----------------------------------+
              5b00 0062  ld   $62
              5b01 002b  ld   $2b
              5b02 003c  ld   $3c
              5b03 0085  ld   $85
              5b04 00a7  ld   $a7
              5b05 0004  ld   $04
              5b06 0063  ld   $63
              5b07 00ff  ld   $ff
              5b08 0075  ld   $75
              5b09 0021  ld   $21
              5b0a 0044  ld   $44
              5b0b 00e6  ld   $e6
              5b0c 0001  ld   $01
              5b0d 00ad  ld   $ad
              5b0e 002b  ld   $2b
              5b0f 0076  ld   $76
              5b10 0021  ld   $21
              5b11 0076  ld   $76
              5b12 008c  ld   $8c
              5b13 0001  ld   $01
              5b14 0035  ld   $35
              5b15 003f  ld   $3f
              5b16 00bc  ld   $bc
              5b17 0085  ld   $85
              5b18 00c8  ld   $c8
              5b19 000c  ld   $0c
              5b1a 0059  ld   $59
              5b1b 0000  ld   $00
              5b1c 002b  ld   $2b
              5b1d 0046  ld   $46
              5b1e 0085  ld   $85
              5b1f 00e7  ld   $e7
              5b20 0008  ld   $08
              5b21 0085  ld   $85
              5b22 00f6  ld   $f6
              5b23 000c  ld   $0c
              5b24 0021  ld   $21
              5b25 0076  ld   $76
              5b26 008c  ld   $8c
              5b27 0002  ld   $02
              5b28 0035  ld   $35
              5b29 0072  ld   $72
              5b2a 00de  ld   $de
              5b2b 0059  ld   $59
              5b2c 0001  ld   $01
              5b2d 002b  ld   $2b
              5b2e 0046  ld   $46
              5b2f 0021  ld   $21
              5b30 0044  ld   $44
              5b31 002b  ld   $2b
              5b32 0084  ld   $84
              5b33 0011  ld   $11
              5b34 00a0  ld   $a0
              5b35 007a  ld   $7a
              5b36 0085  ld   $85
              5b37 00d2  ld   $d2
              5b38 0061  ld   $61
              5b39 0085  ld   $85
              5b3a 00f6  ld   $f6
              5b3b 000c  ld   $0c
              5b3c 0021  ld   $21
              5b3d 0076  ld   $76
              5b3e 008c  ld   $8c
              5b3f 0003  ld   $03
              5b40 0035  ld   $35
              5b41 0072  ld   $72
              5b42 00f4  ld   $f4
              5b43 0059  ld   $59
              5b44 0002  ld   $02
              5b45 002b  ld   $2b
              5b46 0046  ld   $46
              5b47 0011  ld   $11
              5b48 00fe  ld   $fe
              5b49 007c  ld   $7c
              5b4a 002b  ld   $2b
              5b4b 0084  ld   $84
              5b4c 0011  ld   $11
              5b4d 00a0  ld   $a0
              5b4e 007a  ld   $7a
              5b4f 0085  ld   $85
              5b50 00d2  ld   $d2
              5b51 0061  ld   $61
              5b52 0063  ld   $63
              5b53 00ff  ld   $ff
              5b54 0075  ld   $75
              5b55 0021  ld   $21
              5b56 0070  ld   $70
              5b57 002b  ld   $2b
              5b58 0022  ld   $22
              5b59 0085  ld   $85
              5b5a 00a0  ld   $a0
              5b5b 000d  ld   $0d
              5b5c 000d  ld   $0d
              5b5d 00a0  ld   $a0
              5b5e 005f  ld   $5f
              5b5f 0059  ld   $59
              5b60 0048  ld   $48
              5b61 002b  ld   $2b
              5b62 0024  ld   $24
              5b63 0059  ld   $59
              5b64 00cf  ld   $cf
              5b65 005e  ld   $5e
              5b66 0027  ld   $27
              5b67 00b4  ld   $b4
              5b68 00fe  ld   $fe
              5b69 001a  ld   $1a
              5b6a 0048  ld   $48
              5b6b 0035  ld   $35
              5b6c 0072  ld   $72
              5b6d 009e  ld   $9e
              5b6e 0059  ld   $59
              5b6f 0002  ld   $02
              5b70 002b  ld   $2b
              5b71 0082  ld   $82
              5b72 0085  ld   $85
              5b73 00d9  ld   $d9
              5b74 0062  ld   $62
              5b75 0063  ld   $63
              5b76 00ff  ld   $ff
              5b77 0075  ld   $75
              5b78 0059  ld   $59
              5b79 0001  ld   $01
              5b7a 002b  ld   $2b
              5b7b 0034  ld   $34
              5b7c 0011  ld   $11
              5b7d 00ef  ld   $ef
              5b7e 007c  ld   $7c
              5b7f 002b  ld   $2b
              5b80 0082  ld   $82
              5b81 0059  ld   $59
              5b82 0006  ld   $06
              5b83 00f0  ld   $f0
              5b84 0082  ld   $82
              5b85 0085  ld   $85
              5b86 0022  ld   $22
              5b87 0003  ld   $03
              5b88 0085  ld   $85
              5b89 00b9  ld   $b9
              5b8a 0062  ld   $62
              5b8b 0063  ld   $63
              5b8c 00ff  ld   $ff
              5b8d 0075  ld   $75
              5b8e 0059  ld   $59
              5b8f 0001  ld   $01
              5b90 002b  ld   $2b
              5b91 0034  ld   $34
              5b92 0011  ld   $11
              5b93 00ef  ld   $ef
              5b94 007c  ld   $7c
              5b95 002b  ld   $2b
              5b96 0082  ld   $82
              5b97 0059  ld   $59
              5b98 0001  ld   $01
              5b99 00f0  ld   $f0
              5b9a 0082  ld   $82
              5b9b 0085  ld   $85
              5b9c 0022  ld   $22
              5b9d 0003  ld   $03
              5b9e 0063  ld   $63
              5b9f 00ff  ld   $ff
              5ba0 0075  ld   $75
              5ba1 0059  ld   $59
              5ba2 0001  ld   $01
              5ba3 002b  ld   $2b
              5ba4 0034  ld   $34
              5ba5 0011  ld   $11
              5ba6 00ef  ld   $ef
              5ba7 007c  ld   $7c
              5ba8 002b  ld   $2b
              5ba9 0082  ld   $82
              5baa 0059  ld   $59
              5bab 0004  ld   $04
              5bac 00f0  ld   $f0
              5bad 0082  ld   $82
              5bae 0085  ld   $85
              5baf 0022  ld   $22
              5bb0 0003  ld   $03
              5bb1 0063  ld   $63
              5bb2 00ff  ld   $ff
              5bb3 0075  ld   $75
              5bb4 0059  ld   $59
              5bb5 0001  ld   $01
              5bb6 002b  ld   $2b
              5bb7 0034  ld   $34
              5bb8 0011  ld   $11
              5bb9 00ef  ld   $ef
              5bba 007c  ld   $7c
              5bbb 0085  ld   $85
              5bbc 00a0  ld   $a0
              5bbd 000e  ld   $0e
              5bbe 000e  ld   $0e
              5bbf 00a0  ld   $a0
              5bc0 0034  ld   $34
              5bc1 002b  ld   $2b
              5bc2 0082  ld   $82
              5bc3 0059  ld   $59
              5bc4 0005  ld   $05
              5bc5 00f0  ld   $f0
              5bc6 0082  ld   $82
              5bc7 0085  ld   $85
              5bc8 0022  ld   $22
              5bc9 0003  ld   $03
              5bca 0085  ld   $85
              5bcb 00f8  ld   $f8
              5bcc 000c  ld   $0c
              5bcd 0063  ld   $63
              5bce 00ff  ld   $ff
              5bcf 0075  ld   $75
              5bd0 0059  ld   $59
              5bd1 0034  ld   $34
              5bd2 002b  ld   $2b
              5bd3 009c  ld   $9c
              5bd4 0085  ld   $85
              5bd5 00c9  ld   $c9
              5bd6 0062  ld   $62
              5bd7 0085  ld   $85
              5bd8 007c  ld   $7c
              5bd9 0005  ld   $05
              5bda 0011  ld   $11
              5bdb 00ef  ld   $ef
              5bdc 007c  ld   $7c
              5bdd 002b  ld   $2b
              5bde 0032  ld   $32
              5bdf 0059  ld   $59
              5be0 0002  ld   $02
              5be1 002b  ld   $2b
              5be2 0082  ld   $82
              5be3 0085  ld   $85
              5be4 00b3  ld   $b3
              5be5 0061  ld   $61
              5be6 0011  ld   $11
              5be7 0020  ld   $20
              5be8 003f  ld   $3f
              5be9 002b  ld   $2b
              5bea 00a2  ld   $a2
              5beb 0085  ld   $85
              5bec 00a3  ld   $a3
              5bed 0066  ld   $66
              5bee 0085  ld   $85
              5bef 00cd  ld   $cd
              5bf0 0064  ld   $64
              5bf1 0063  ld   $63
              5bf2 00ff  ld   $ff
              5bf3 00b4  ld   $b4
              5bf4 0080  ld   $80
              5bf5 0061  ld   $61
              5bf6 00ab  ld   $ab
              5bf7 0054  ld   $54
              5bf8 002b  ld   $2b
              5bf9 001a  ld   $1a
              5bfa 0059  ld   $59
              5bfb fe00  bra  ac          ;+-----------------------------------+
              5bfc fcfd  bra  $5bfd       ;|                                   |
              5bfd 1418  ld   $18,y       ;| Trampoline for page $5b00 lookups |
              5bfe e006  jmp  y,$06       ;|                                   |
              5bff c218  st   [$18]       ;+-----------------------------------+
              5c00 00ad  ld   $ad
              5c01 002b  ld   $2b
              5c02 0022  ld   $22
              5c03 00b4  ld   $b4
              5c04 00e2  ld   $e2
              5c05 0011  ld   $11
              5c06 0000  ld   $00
              5c07 000b  ld   $0b
              5c08 002b  ld   $2b
              5c09 0022  ld   $22
              5c0a 0021  ld   $21
              5c0b 0082  ld   $82
              5c0c 00b4  ld   $b4
              5c0d 00e6  ld   $e6
              5c0e 00ff  ld   $ff
              5c0f 0011  ld   $11
              5c10 0000  ld   $00
              5c11 0006  ld   $06
              5c12 002b  ld   $2b
              5c13 0022  ld   $22
              5c14 0021  ld   $21
              5c15 00a0  ld   $a0
              5c16 00b4  ld   $b4
              5c17 00f6  ld   $f6
              5c18 00ff  ld   $ff
              5c19 0059  ld   $59
              5c1a 0002  ld   $02
              5c1b 002b  ld   $2b
              5c1c 00a4  ld   $a4
              5c1d 001a  ld   $1a
              5c1e 00aa  ld   $aa
              5c1f 0082  ld   $82
              5c20 00fb  ld   $fb
              5c21 005e  ld   $5e
              5c22 00aa  ld   $aa
              5c23 00ff  ld   $ff
              5c24 002b  ld   $2b
              5c25 0086  ld   $86
              5c26 0021  ld   $21
              5c27 0084  ld   $84
              5c28 00ad  ld   $ad
              5c29 00f0  ld   $f0
              5c2a 0086  ld   $86
              5c2b 0093  ld   $93
              5c2c 0084  ld   $84
              5c2d 0093  ld   $93
              5c2e 0086  ld   $86
              5c2f 0035  ld   $35
              5c30 0072  ld   $72
              5c31 00d2  ld   $d2
              5c32 00ff  ld   $ff
              5c33 0075  ld   $75
              5c34 0085  ld   $85
              5c35 00c7  ld   $c7
              5c36 0061  ld   $61
              5c37 0011  ld   $11
              5c38 0003  ld   $03
              5c39 000b  ld   $0b
              5c3a 002b  ld   $2b
              5c3b 0022  ld   $22
              5c3c 001a  ld   $1a
              5c3d 00a2  ld   $a2
              5c3e 005e  ld   $5e
              5c3f 0025  ld   $25
              5c40 0063  ld   $63
              5c41 00ff  ld   $ff
              5c42 002b  ld   $2b
              5c43 0084  ld   $84
              5c44 0021  ld   $21
              5c45 0082  ld   $82
              5c46 00b8  ld   $b8
              5c47 0084  ld   $84
              5c48 0035  ld   $35
              5c49 0053  ld   $53
              5c4a 00fa  ld   $fa
              5c4b 0021  ld   $21
              5c4c 0084  ld   $84
              5c4d 00ff  ld   $ff
              5c4e 0021  ld   $21
              5c4f 0082  ld   $82
              5c50 00ff  ld   $ff
              5c51 0062  ld   $62
              5c52 00a0  ld   $a0
              5c53 0025  ld   $25
              5c54 0099  ld   $99
              5c55 0096  ld   $96
              5c56 0099  ld   $99
              5c57 0096  ld   $96
              5c58 00f6  ld   $f6
              5c59 0099  ld   $99
              5c5a 0098  ld   $98
              5c5b 002b  ld   $2b
              5c5c 009e  ld   $9e
              5c5d 00ff  ld   $ff
              5c5e 002b  ld   $2b
              5c5f 0084  ld   $84
              5c60 0021  ld   $21
              5c61 0082  ld   $82
              5c62 00b8  ld   $b8
              5c63 0084  ld   $84
              5c64 0035  ld   $35
              5c65 0056  ld   $56
              5c66 00b4  ld   $b4
              5c67 0021  ld   $21
              5c68 0084  ld   $84
              5c69 00ff  ld   $ff
              5c6a 0021  ld   $21
              5c6b 0082  ld   $82
              5c6c 00ff  ld   $ff
              5c6d 001a  ld   $1a
              5c6e 000e  ld   $0e
              5c6f 00fc  ld   $fc
              5c70 00d6  ld   $d6
              5c71 0035  ld   $35
              5c72 003f  ld   $3f
              5c73 00b7  ld   $b7
              5c74 001a  ld   $1a
              5c75 000e  ld   $0e
              5c76 002b  ld   $2b
              5c77 00d6  ld   $d6
              5c78 00ff  ld   $ff
              5c79 0062  ld   $62
              5c7a 00c9  ld   $c9
              5c7b 0036  ld   $36
              5c7c 0059  ld   $59
              5c7d 0000  ld   $00
              5c7e 00f3  ld   $f3
              5c7f 009c  ld   $9c
              5c80 0093  ld   $93
              5c81 009c  ld   $9c
              5c82 0093  ld   $93
              5c83 009c  ld   $9c
              5c84 001a  ld   $1a
              5c85 009c  ld   $9c
              5c86 008c  ld   $8c
              5c87 0080  ld   $80
              5c88 0035  ld   $35
              5c89 0072  ld   $72
              5c8a 00c7  ld   $c7
              5c8b 00ff  ld   $ff
              5c8c 0075  ld   $75
              5c8d 0021  ld   $21
              5c8e 0082  ld   $82
              5c8f 00e6  ld   $e6
              5c90 0001  ld   $01
              5c91 002b  ld   $2b
              5c92 0082  ld   $82
              5c93 0035  ld   $35
              5c94 0053  ld   $53
              5c95 00e3  ld   $e3
              5c96 0063  ld   $63
              5c97 00ff  ld   $ff
              5c98 0085  ld   $85
              5c99 00b9  ld   $b9
              5c9a 0062  ld   $62
              5c9b 0090  ld   $90
              5c9c 00d8  ld   $d8
              5c9d 0075  ld   $75
              5c9e 002b  ld   $2b
              5c9f 0082  ld   $82
              5ca0 0085  ld   $85
              5ca1 00a0  ld   $a0
              5ca2 0063  ld   $63
              5ca3 0093  ld   $93
              5ca4 0082  ld   $82
              5ca5 0021  ld   $21
              5ca6 0082  ld   $82
              5ca7 00ad  ld   $ad
              5ca8 0035  ld   $35
              5ca9 003f  ld   $3f
              5caa 00fb  ld   $fb
              5cab 0085  ld   $85
              5cac 00b8  ld   $b8
              5cad 0067  ld   $67
              5cae 0090  ld   $90
              5caf 00ee  ld   $ee
              5cb0 0063  ld   $63
              5cb1 00ff  ld   $ff
              5cb2 0063  ld   $63
              5cb3 00a0  ld   $a0
              5cb4 005f  ld   $5f
              5cb5 0011  ld   $11
              5cb6 00e1  ld   $e1
              5cb7 0004  ld   $04
              5cb8 002b  ld   $2b
              5cb9 0022  ld   $22
              5cba 0021  ld   $21
              5cbb 00a2  ld   $a2
              5cbc 002b  ld   $2b
              5cbd 0024  ld   $24
              5cbe 001a  ld   $1a
              5cbf 00a5  ld   $a5
              5cc0 00e9  ld   $e9
              5cc1 0093  ld   $93
              5cc2 0019  ld   $19
              5cc3 00ad  ld   $ad
              5cc4 005e  ld   $5e
              5cc5 0029  ld   $29
              5cc6 001a  ld   $1a
              5cc7 00a4  ld   $a4
              5cc8 005e  ld   $5e
              5cc9 0028  ld   $28
              5cca 00ff  ld   $ff
              5ccb 0075  ld   $75
              5ccc 0035  ld   $35
              5ccd 003f  ld   $3f
              5cce 00cb  ld   $cb
              5ccf 005e  ld   $5e
              5cd0 0084  ld   $84
              5cd1 0085  ld   $85
              5cd2 00a0  ld   $a0
              5cd3 0063  ld   $63
              5cd4 0059  ld   $59
              5cd5 0020  ld   $20
              5cd6 0085  ld   $85
              5cd7 00b8  ld   $b8
              5cd8 0067  ld   $67
              5cd9 001a  ld   $1a
              5cda 0084  ld   $84
              5cdb 00e6  ld   $e6
              5cdc 0001  ld   $01
              5cdd 005e  ld   $5e
              5cde 0084  ld   $84
              5cdf 0035  ld   $35
              5ce0 0072  ld   $72
              5ce1 00bd  ld   $bd
              5ce2 0063  ld   $63
              5ce3 00ff  ld   $ff
              5ce4 001a  ld   $1a
              5ce5 0021  ld   $21
              5ce6 0082  ld   $82
              5ce7 00fc  ld   $fc
              5ce8 002b  ld   $2b
              5ce9 0084  ld   $84
              5cea 00b8  ld   $b8
              5ceb 0082  ld   $82
              5cec 0035  ld   $35
              5ced 003f  ld   $3f
              5cee 00fc  ld   $fc
              5cef 0021  ld   $21
              5cf0 0082  ld   $82
              5cf1 00e6  ld   $e6
              5cf2 0080  ld   $80
              5cf3 0035  ld   $35
              5cf4 0072  ld   $72
              5cf5 00e8  ld   $e8
              5cf6 0021  ld   $21
              5cf7 0084  ld   $84
              5cf8 00b8  ld   $b8
              5cf9 0082  ld   $82
              5cfa 0035  ld   $35
              5cfb fe00  bra  ac          ;+-----------------------------------+
              5cfc fcfd  bra  $5cfd       ;|                                   |
              5cfd 1418  ld   $18,y       ;| Trampoline for page $5c00 lookups |
              5cfe e006  jmp  y,$06       ;|                                   |
              5cff c218  st   [$18]       ;+-----------------------------------+
              5d00 003f  ld   $3f
              5d01 00fc  ld   $fc
              5d02 0090  ld   $90
              5d03 00ef  ld   $ef
              5d04 0021  ld   $21
              5d05 0084  ld   $84
              5d06 00b8  ld   $b8
              5d07 0082  ld   $82
              5d08 0035  ld   $35
              5d09 004d  ld   $4d
              5d0a 00fc  ld   $fc
              5d0b 0011  ld   $11
              5d0c 0050  ld   $50
              5d0d 0044  ld   $44
              5d0e 002b  ld   $2b
              5d0f 0086  ld   $86
              5d10 001a  ld   $1a
              5d11 0088  ld   $88
              5d12 00f0  ld   $f0
              5d13 0086  ld   $86
              5d14 0093  ld   $93
              5d15 0088  ld   $88
              5d16 0090  ld   $90
              5d17 00f4  ld   $f4
              5d18 00ff  ld   $ff
              5d19 0064  ld   $64
              5d1a 00a0  ld   $a0
              5d1b 005f  ld   $5f
              5d1c 0059  ld   $59
              5d1d 00ef  ld   $ef
              5d1e 002b  ld   $2b
              5d1f 0022  ld   $22
              5d20 0021  ld   $21
              5d21 0082  ld   $82
              5d22 00b4  ld   $b4
              5d23 00e6  ld   $e6
              5d24 00ff  ld   $ff
              5d25 001a  ld   $1a
              5d26 00a4  ld   $a4
              5d27 00e6  ld   $e6
              5d28 009a  ld   $9a
              5d29 0035  ld   $35
              5d2a 0056  ld   $56
              5d2b 00b2  ld   $b2
              5d2c 0059  ld   $59
              5d2d 0000  ld   $00
              5d2e 005e  ld   $5e
              5d2f 00a4  ld   $a4
              5d30 001a  ld   $1a
              5d31 00a5  ld   $a5
              5d32 00e6  ld   $e6
              5d33 0070  ld   $70
              5d34 0035  ld   $35
              5d35 0050  ld   $50
              5d36 00c4  ld   $c4
              5d37 0059  ld   $59
              5d38 0070  ld   $70
              5d39 005e  ld   $5e
              5d3a 00a5  ld   $a5
              5d3b 001a  ld   $1a
              5d3c 00aa  ld   $aa
              5d3d 0088  ld   $88
              5d3e 0004  ld   $04
              5d3f 005e  ld   $5e
              5d40 00aa  ld   $aa
              5d41 00ff  ld   $ff
              5d42 001a  ld   $1a
              5d43 00aa  ld   $aa
              5d44 0082  ld   $82
              5d45 00fb  ld   $fb
              5d46 005e  ld   $5e
              5d47 00aa  ld   $aa
              5d48 00ff  ld   $ff
              5d49 0075  ld   $75
              5d4a 0085  ld   $85
              5d4b 00e1  ld   $e1
              5d4c 0061  ld   $61
              5d4d 0059  ld   $59
              5d4e 0008  ld   $08
              5d4f 002b  ld   $2b
              5d50 0094  ld   $94
              5d51 0059  ld   $59
              5d52 00a0  ld   $a0
              5d53 005e  ld   $5e
              5d54 0024  ld   $24
              5d55 0059  ld   $59
              5d56 0000  ld   $00
              5d57 005e  ld   $5e
              5d58 0026  ld   $26
              5d59 001a  ld   $1a
              5d5a 0094  ld   $94
              5d5b 005e  ld   $5e
              5d5c 0027  ld   $27
              5d5d 00b4  ld   $b4
              5d5e 00f3  ld   $f3
              5d5f 0059  ld   $59
              5d60 00a0  ld   $a0
              5d61 005e  ld   $5e
              5d62 0024  ld   $24
              5d63 0059  ld   $59
              5d64 0000  ld   $00
              5d65 005e  ld   $5e
              5d66 0026  ld   $26
              5d67 0011  ld   $11
              5d68 0087  ld   $87
              5d69 0000  ld   $00
              5d6a 00b8  ld   $b8
              5d6b 0094  ld   $94
              5d6c 005e  ld   $5e
              5d6d 0027  ld   $27
              5d6e 00b4  ld   $b4
              5d6f 00f3  ld   $f3
              5d70 0093  ld   $93
              5d71 0094  ld   $94
              5d72 001a  ld   $1a
              5d73 0094  ld   $94
              5d74 00e6  ld   $e6
              5d75 0044  ld   $44
              5d76 0035  ld   $35
              5d77 0050  ld   $50
              5d78 00d3  ld   $d3
              5d79 0063  ld   $63
              5d7a 00ff  ld   $ff
              5d7b 0065  ld   $65
              5d7c 00a1  ld   $a1
              5d7d 005e  ld   $5e
              5d7e 0075  ld   $75
              5d7f 0011  ld   $11
              5d80 0003  ld   $03
              5d81 000b  ld   $0b
              5d82 002b  ld   $2b
              5d83 0022  ld   $22
              5d84 001a  ld   $1a
              5d85 00a2  ld   $a2
              5d86 005e  ld   $5e
              5d87 0025  ld   $25
              5d88 0011  ld   $11
              5d89 0000  ld   $00
              5d8a 0001  ld   $01
              5d8b 00ad  ld   $ad
              5d8c 005e  ld   $5e
              5d8d 0027  ld   $27
              5d8e 0059  ld   $59
              5d8f 0008  ld   $08
              5d90 005e  ld   $5e
              5d91 009e  ld   $9e
              5d92 0059  ld   $59
              5d93 00a0  ld   $a0
              5d94 005e  ld   $5e
              5d95 0024  ld   $24
              5d96 0059  ld   $59
              5d97 0000  ld   $00
              5d98 005e  ld   $5e
              5d99 0026  ld   $26
              5d9a 00b4  ld   $b4
              5d9b 00f3  ld   $f3
              5d9c 0093  ld   $93
              5d9d 0027  ld   $27
              5d9e 001a  ld   $1a
              5d9f 009e  ld   $9e
              5da0 00e6  ld   $e6
              5da1 0001  ld   $01
              5da2 0035  ld   $35
              5da3 0072  ld   $72
              5da4 00b1  ld   $b1
              5da5 0085  ld   $85
              5da6 00a0  ld   $a0
              5da7 0063  ld   $63
              5da8 0063  ld   $63
              5da9 00ff  ld   $ff
              5daa 0075  ld   $75
              5dab 0011  ld   $11
              5dac 00a3  ld   $a3
              5dad 0069  ld   $69
              5dae 002b  ld   $2b
              5daf 0086  ld   $86
              5db0 002b  ld   $2b
              5db1 0092  ld   $92
              5db2 0011  ld   $11
              5db3 00f4  ld   $f4
              5db4 0068  ld   $68
              5db5 002b  ld   $2b
              5db6 0088  ld   $88
              5db7 0021  ld   $21
              5db8 0092  ld   $92
              5db9 00f6  ld   $f6
              5dba 0035  ld   $35
              5dbb 0072  ld   $72
              5dbc 00e7  ld   $e7
              5dbd 0021  ld   $21
              5dbe 0084  ld   $84
              5dbf 0035  ld   $35
              5dc0 003f  ld   $3f
              5dc1 00e5  ld   $e5
              5dc2 00cf  ld   $cf
              5dc3 0084  ld   $84
              5dc4 0063  ld   $63
              5dc5 00ff  ld   $ff
              5dc6 00b8  ld   $b8
              5dc7 0082  ld   $82
              5dc8 0035  ld   $35
              5dc9 003f  ld   $3f
              5dca 00f2  ld   $f2
              5dcb 0093  ld   $93
              5dcc 0092  ld   $92
              5dcd 0093  ld   $93
              5dce 0092  ld   $92
              5dcf 0090  ld   $90
              5dd0 00d8  ld   $d8
              5dd1 0021  ld   $21
              5dd2 0092  ld   $92
              5dd3 00b8  ld   $b8
              5dd4 0086  ld   $86
              5dd5 0099  ld   $99
              5dd6 0088  ld   $88
              5dd7 00f6  ld   $f6
              5dd8 00cf  ld   $cf
              5dd9 0018  ld   $18
              5dda 0063  ld   $63
              5ddb 00ff  ld   $ff
              5ddc 0066  ld   $66
              5ddd 00a3  ld   $a3
              5dde 005c  ld   $5c
              5ddf 0075  ld   $75
              5de0 0059  ld   $59
              5de1 0008  ld   $08
              5de2 002b  ld   $2b
              5de3 0098  ld   $98
              5de4 0011  ld   $11
              5de5 0000  ld   $00
              5de6 0001  ld   $01
              5de7 002b  ld   $2b
              5de8 009a  ld   $9a
              5de9 0021  ld   $21
              5dea 0098  ld   $98
              5deb 00f3  ld   $f3
              5dec 009a  ld   $9a
              5ded 0093  ld   $93
              5dee 009a  ld   $9a
              5def 0093  ld   $93
              5df0 009a  ld   $9a
              5df1 0093  ld   $93
              5df2 0098  ld   $98
              5df3 001a  ld   $1a
              5df4 0098  ld   $98
              5df5 00e6  ld   $e6
              5df6 0080  ld   $80
              5df7 0035  ld   $35
              5df8 0050  ld   $50
              5df9 00ab  ld   $ab
              5dfa 0085  ld   $85
              5dfb fe00  bra  ac          ;+-----------------------------------+
              5dfc fcfd  bra  $5dfd       ;|                                   |
              5dfd 1418  ld   $18,y       ;| Trampoline for page $5d00 lookups |
              5dfe e006  jmp  y,$06       ;|                                   |
              5dff c218  st   [$18]       ;+-----------------------------------+
              5e00 00c7  ld   $c7
              5e01 0061  ld   $61
              5e02 0063  ld   $63
              5e03 00ff  ld   $ff
              5e04 002b  ld   $2b
              5e05 0094  ld   $94
              5e06 0021  ld   $21
              5e07 0084  ld   $84
              5e08 00ad  ld   $ad
              5e09 002b  ld   $2b
              5e0a 0088  ld   $88
              5e0b 0021  ld   $21
              5e0c 0094  ld   $94
              5e0d 00ad  ld   $ad
              5e0e 002b  ld   $2b
              5e0f 009c  ld   $9c
              5e10 0093  ld   $93
              5e11 0084  ld   $84
              5e12 0093  ld   $93
              5e13 0094  ld   $94
              5e14 0021  ld   $21
              5e15 0084  ld   $84
              5e16 00ad  ld   $ad
              5e17 0035  ld   $35
              5e18 003f  ld   $3f
              5e19 00ed  ld   $ed
              5e1a 002b  ld   $2b
              5e1b 0082  ld   $82
              5e1c 0021  ld   $21
              5e1d 0094  ld   $94
              5e1e 00ad  ld   $ad
              5e1f 00b8  ld   $b8
              5e20 0082  ld   $82
              5e21 0035  ld   $35
              5e22 0050  ld   $50
              5e23 00fa  ld   $fa
              5e24 0035  ld   $35
              5e25 004d  ld   $4d
              5e26 00ea  ld   $ea
              5e27 0093  ld   $93
              5e28 0084  ld   $84
              5e29 0093  ld   $93
              5e2a 0094  ld   $94
              5e2b 0090  ld   $90
              5e2c 00d1  ld   $d1
              5e2d 0059  ld   $59
              5e2e 0000  ld   $00
              5e2f 00ff  ld   $ff
              5e30 0021  ld   $21
              5e31 0088  ld   $88
              5e32 00b8  ld   $b8
              5e33 009c  ld   $9c
              5e34 0035  ld   $35
              5e35 0050  ld   $50
              5e36 00ea  ld   $ea
              5e37 0035  ld   $35
              5e38 004d  ld   $4d
              5e39 00fa  ld   $fa
              5e3a 0059  ld   $59
              5e3b 0001  ld   $01
              5e3c 00ff  ld   $ff
              5e3d 0059  ld   $59
              5e3e 0002  ld   $02
              5e3f 00ff  ld   $ff
              5e40 0067  ld   $67
              5e41 00a0  ld   $a0
              5e42 005f  ld   $5f
              5e43 001a  ld   $1a
              5e44 00a4  ld   $a4
              5e45 00e3  ld   $e3
              5e46 0006  ld   $06
              5e47 005e  ld   $5e
              5e48 00a4  ld   $a4
              5e49 00e6  ld   $e6
              5e4a 009a  ld   $9a
              5e4b 0035  ld   $35
              5e4c 0056  ld   $56
              5e4d 00b5  ld   $b5
              5e4e 001a  ld   $1a
              5e4f 00aa  ld   $aa
              5e50 0082  ld   $82
              5e51 0008  ld   $08
              5e52 0035  ld   $35
              5e53 0072  ld   $72
              5e54 00b5  ld   $b5
              5e55 0075  ld   $75
              5e56 0085  ld   $85
              5e57 00a1  ld   $a1
              5e58 0068  ld   $68
              5e59 0063  ld   $63
              5e5a 00ff  ld   $ff
              5e5b 0082  ld   $82
              5e5c 007f  ld   $7f
              5e5d 00e6  ld   $e6
              5e5e 0052  ld   $52
              5e5f 0035  ld   $35
              5e60 0053  ld   $53
              5e61 00c9  ld   $c9
              5e62 00e3  ld   $e3
              5e63 0032  ld   $32
              5e64 0035  ld   $35
              5e65 0050  ld   $50
              5e66 00fc  ld   $fc
              5e67 002b  ld   $2b
              5e68 0092  ld   $92
              5e69 0011  ld   $11
              5e6a 0000  ld   $00
              5e6b 0007  ld   $07
              5e6c 0090  ld   $90
              5e6d 00ce  ld   $ce
              5e6e 002b  ld   $2b
              5e6f 0092  ld   $92
              5e70 0011  ld   $11
              5e71 0000  ld   $00
              5e72 0008  ld   $08
              5e73 002b  ld   $2b
              5e74 0094  ld   $94
              5e75 001a  ld   $1a
              5e76 0092  ld   $92
              5e77 00e9  ld   $e9
              5e78 00e9  ld   $e9
              5e79 0099  ld   $99
              5e7a 0092  ld   $92
              5e7b 0099  ld   $99
              5e7c 0094  ld   $94
              5e7d 002b  ld   $2b
              5e7e 0094  ld   $94
              5e7f 0059  ld   $59
              5e80 0005  ld   $05
              5e81 005e  ld   $5e
              5e82 0096  ld   $96
              5e83 0021  ld   $21
              5e84 0094  ld   $94
              5e85 007f  ld   $7f
              5e86 0000  ld   $00
              5e87 005e  ld   $5e
              5e88 0026  ld   $26
              5e89 00b4  ld   $b4
              5e8a 00cb  ld   $cb
              5e8b 0093  ld   $93
              5e8c 0094  ld   $94
              5e8d 0093  ld   $93
              5e8e 0028  ld   $28
              5e8f 001a  ld   $1a
              5e90 0096  ld   $96
              5e91 00e6  ld   $e6
              5e92 0001  ld   $01
              5e93 0035  ld   $35
              5e94 0072  ld   $72
              5e95 00dc  ld   $dc
              5e96 005e  ld   $5e
              5e97 0026  ld   $26
              5e98 00b4  ld   $b4
              5e99 00cb  ld   $cb
              5e9a 0093  ld   $93
              5e9b 0028  ld   $28
              5e9c 0075  ld   $75
              5e9d 0085  ld   $85
              5e9e 00a0  ld   $a0
              5e9f 0067  ld   $67
              5ea0 0063  ld   $63
              5ea1 00ff  ld   $ff
              5ea2 0068  ld   $68
              5ea3 00a1  ld   $a1
              5ea4 005f  ld   $5f
              5ea5 0059  ld   $59
              5ea6 0002  ld   $02
              5ea7 005e  ld   $5e
              5ea8 00a4  ld   $a4
              5ea9 005e  ld   $5e
              5eaa 0028  ld   $28
              5eab 001a  ld   $1a
              5eac 00aa  ld   $aa
              5ead 0082  ld   $82
              5eae 0002  ld   $02
              5eaf 0035  ld   $35
              5eb0 0072  ld   $72
              5eb1 00ad  ld   $ad
              5eb2 00ff  ld   $ff
              5eb3 0075  ld   $75
              5eb4 001a  ld   $1a
              5eb5 00aa  ld   $aa
              5eb6 0082  ld   $82
              5eb7 0004  ld   $04
              5eb8 0035  ld   $35
              5eb9 0072  ld   $72
              5eba 00c4  ld   $c4
              5ebb 001a  ld   $1a
              5ebc 00a5  ld   $a5
              5ebd 00e3  ld   $e3
              5ebe 0008  ld   $08
              5ebf 005e  ld   $5e
              5ec0 00a5  ld   $a5
              5ec1 00e6  ld   $e6
              5ec2 0078  ld   $78
              5ec3 0035  ld   $35
              5ec4 0050  ld   $50
              5ec5 00ed  ld   $ed
              5ec6 0059  ld   $59
              5ec7 0070  ld   $70
              5ec8 005e  ld   $5e
              5ec9 00a5  ld   $a5
              5eca 0085  ld   $85
              5ecb 00a1  ld   $a1
              5ecc 0065  ld   $65
              5ecd 0011  ld   $11
              5ece 0000  ld   $00
              5ecf 0001  ld   $01
              5ed0 002b  ld   $2b
              5ed1 0098  ld   $98
              5ed2 0021  ld   $21
              5ed3 0098  ld   $98
              5ed4 00ad  ld   $ad
              5ed5 00e3  ld   $e3
              5ed6 0008  ld   $08
              5ed7 00e6  ld   $e6
              5ed8 007f  ld   $7f
              5ed9 0035  ld   $35
              5eda 0056  ld   $56
              5edb 00d8  ld   $d8
              5edc 00e3  ld   $e3
              5edd 0088  ld   $88
              5ede 00e3  ld   $e3
              5edf 007f  ld   $7f
              5ee0 00f0  ld   $f0
              5ee1 0098  ld   $98
              5ee2 0093  ld   $93
              5ee3 0098  ld   $98
              5ee4 0093  ld   $93
              5ee5 0098  ld   $98
              5ee6 001a  ld   $1a
              5ee7 0098  ld   $98
              5ee8 00e6  ld   $e6
              5ee9 00f0  ld   $f0
              5eea 0035  ld   $35
              5eeb 0050  ld   $50
              5eec 00cc  ld   $cc
              5eed 001a  ld   $1a
              5eee 00aa  ld   $aa
              5eef 0088  ld   $88
              5ef0 0004  ld   $04
              5ef1 005e  ld   $5e
              5ef2 00aa  ld   $aa
              5ef3 0085  ld   $85
              5ef4 00a0  ld   $a0
              5ef5 0063  ld   $63
              5ef6 0063  ld   $63
              5ef7 00ff  ld   $ff
              5ef8 00de  ld   $de
              5ef9 000a  ld   $0a
              5efa 00e4  ld   $e4
              5efb fe00  bra  ac          ;+-----------------------------------+
              5efc fcfd  bra  $5efd       ;|                                   |
              5efd 1418  ld   $18,y       ;| Trampoline for page $5e00 lookups |
              5efe e006  jmp  y,$06       ;|                                   |
              5eff c218  st   [$18]       ;+-----------------------------------+
              5f00 000a  ld   $0a
              5f01 00ea  ld   $ea
              5f02 000a  ld   $0a
              5f03 00b1  ld   $b1
              5f04 000b  ld   $0b
              5f05 00c8  ld   $c8
              5f06 000b  ld   $0b
              5f07 00e8  ld   $e8
              5f08 000b  ld   $0b
              5f09 0069  ld   $69
              5f0a 00a3  ld   $a3
              5f0b 0021  ld   $21
              5f0c 007f  ld   $7f
              5f0d 0000  ld   $00
              5f0e 000a  ld   $0a
              5f0f 0000  ld   $00
              5f10 00fe  ld   $fe
              5f11 0000  ld   $00
              5f12 00fd  ld   $fd
              5f13 0000  ld   $00
              5f14 00fb  ld   $fb
              5f15 0000  ld   $00
              5f16 00f7  ld   $f7
              5f17 0000  ld   $00
              5f18 0000  ld   $00
              5f19 0000  ld   $00
              5f1a 0011  ld   $11
              5f1b 004c  ld   $4c
              5f1c 006f  ld   $6f
              5f1d 0061  ld   $61
              5f1e 0064  ld   $64
              5f1f 0065  ld   $65
              5f20 0072  ld   $72
              5f21 0020  ld   $20
              5f22 006e  ld   $6e
              5f23 006f  ld   $6f
              5f24 0074  ld   $74
              5f25 0020  ld   $20
              5f26 0066  ld   $66
              5f27 006f  ld   $6f
              5f28 0075  ld   $75
              5f29 006e  ld   $6e
              5f2a 0064  ld   $64
              5f2b 0021  ld   $21
              5f2c 0000  ld   $00
              5f2d 007a  ld   $7a
              5f2e 00a0  ld   $a0
              5f2f 0002  ld   $02
              5f30 0000  ld   $00
              5f31 0000  ld   $00
              5f32 007b  ld   $7b
              5f33 00a0  ld   $a0
              5f34 0002  ld   $02
              5f35 0000  ld   $00
              5f36 0000  ld   $00
              5f37 007c  ld   $7c
              5f38 00a6  ld   $a6
              5f39 005a  ld   $5a
              5f3a 0006  ld   $06
              5f3b 004c  ld   $4c
              5f3c 006f  ld   $6f
              5f3d 0061  ld   $61
              5f3e 0064  ld   $64
              5f3f 0065  ld   $65
              5f40 0072  ld   $72
              5f41 0000  ld   $00
              5f42 0000  ld   $00
              5f43 0000  ld   $00
              * 83 times
              5f94 007d  ld   $7d
              5f95 00a0  ld   $a0
              5f96 0002  ld   $02
              5f97 0000  ld   $00
              5f98 0000  ld   $00
              5f99 0000  ld   $00
              5f9a 0000  ld   $00         ;End of gbas/browser/Browser_SDCard_ROMv5a_v1.gt1, size 2892
                                          ;+-----------------------------------+
                                          ;| Apps/Mandelbrot/Mandelbrot_v1.gcl |
                                          ;+-----------------------------------+
              5f9b dc53  st   $53,[y,x++] ;'S'
              5f9c dc44  st   $44,[y,x++] ;'D'
              5f9d dc43  st   $43,[y,x++] ;'C'
              5f9e dc61  st   $61,[y,x++] ;'a'
              5f9f dc72  st   $72,[y,x++] ;'r'
              5fa0 dc64  st   $64,[y,x++] ;'d'
              5fa1 dc00  st   $00,[y,x++] ;'\x00'
              5fa2 dc00  st   $00,[y,x++] ;'\x00'
              5fa3 004f  ld   $4f
              5fa4 c218  st   [$18]
              5fa5 0054  ld   $54
              5fa6 14df  ld   $df,y
              5fa7 e0ac  jmp  y,$ac
              5fa8 c219  st   [$19]
Mandelbrot:   5fa9 0002  ld   $02         ;| RAM segment address (high byte first)
              5faa 0000  ld   $00         ;|
              5fab 00ef  ld   $ef         ;| Length (1..256)
              5fac 00cd  ld   $cd         ;0200 DEF
              5fad 00e8  ld   $e8
              5fae 0075  ld   $75         ;0202 PUSH
              5faf 0059  ld   $59         ;0203 LDI
              5fb0 0000  ld   $00
              5fb1 002b  ld   $2b         ;0205 STW
              5fb2 0030  ld   $30         ;0205 'sign'
              5fb3 002b  ld   $2b         ;0207 STW
              5fb4 0032  ld   $32         ;0207 'C'
              5fb5 00b8  ld   $b8         ;0209 SUBW
              5fb6 0034  ld   $34         ;0209 'A'
              5fb7 0035  ld   $35         ;020b BCC
              5fb8 0056  ld   $56         ;020c LE
              5fb9 0012  ld   $12
              5fba 002b  ld   $2b         ;020e STW
              5fbb 0034  ld   $34         ;020e 'A'
              5fbc 0059  ld   $59         ;0210 LDI
              5fbd 0001  ld   $01
              5fbe 002b  ld   $2b         ;0212 STW
              5fbf 0030  ld   $30         ;0212 'sign'
              5fc0 0059  ld   $59         ;0214 LDI
              5fc1 0000  ld   $00
              5fc2 00b8  ld   $b8         ;0216 SUBW
              5fc3 0036  ld   $36         ;0216 'B'
              5fc4 0035  ld   $35         ;0218 BCC
              5fc5 0056  ld   $56         ;0219 LE
              5fc6 0021  ld   $21
              5fc7 002b  ld   $2b         ;021b STW
              5fc8 0036  ld   $36         ;021b 'B'
              5fc9 0021  ld   $21         ;021d LDW
              5fca 0030  ld   $30         ;021d 'sign'
              5fcb 008c  ld   $8c         ;021f XORI
              5fcc 0001  ld   $01
              5fcd 002b  ld   $2b         ;0221 STW
              5fce 0030  ld   $30         ;0221 'sign'
              5fcf 0059  ld   $59         ;0223 LDI
              5fd0 0007  ld   $07
              5fd1 002b  ld   $2b         ;0225 STW
              5fd2 0038  ld   $38         ;0225 'shift'
              5fd3 0011  ld   $11         ;0227 LDWI
              5fd4 0000  ld   $00
              5fd5 0006  ld   $06
              5fd6 002b  ld   $2b         ;022a STW
              5fd7 0022  ld   $22
              5fd8 0011  ld   $11         ;022c LDWI
              5fd9 0000  ld   $00
              5fda 0002  ld   $02
              5fdb 002b  ld   $2b         ;022f STW
              5fdc 003a  ld   $3a         ;022f 'bit'
              5fdd 0011  ld   $11         ;0231 LDWI
              5fde 0000  ld   $00
              5fdf 00c0  ld   $c0
              5fe0 0099  ld   $99         ;0234 ADDW
              5fe1 0032  ld   $32         ;0234 'C'
              5fe2 0035  ld   $35         ;0236 BCC
              5fe3 0053  ld   $53         ;0237 GE
              5fe4 003e  ld   $3e
              5fe5 0021  ld   $21         ;0239 LDW
              5fe6 0032  ld   $32         ;0239 'C'
              5fe7 00e9  ld   $e9         ;023b LSLW
              5fe8 002b  ld   $2b         ;023c STW
              5fe9 0032  ld   $32         ;023c 'C'
              5fea 0090  ld   $90         ;023e BRA
              5feb 004a  ld   $4a
              5fec 0021  ld   $21         ;0240 LDW
              5fed 0036  ld   $36         ;0240 'B'
              5fee 00b4  ld   $b4         ;0242 SYS
              5fef 00f7  ld   $f7
              5ff0 002b  ld   $2b         ;0244 STW
              5ff1 0036  ld   $36         ;0244 'B'
              5ff2 0021  ld   $21         ;0246 LDW
              5ff3 0038  ld   $38         ;0246 'shift'
              5ff4 00e6  ld   $e6         ;0248 SUBI
              5ff5 0001  ld   $01
              5ff6 002b  ld   $2b         ;024a STW
              5ff7 0038  ld   $38         ;024a 'shift'
              5ff8 0021  ld   $21         ;024c LDW
              5ff9 0034  ld   $34         ;024c 'A'
              5ffa 00b8  ld   $b8         ;024e SUBW
              5ffb fe00  bra  ac          ;+-----------------------------------+
              5ffc fcfd  bra  $5ffd       ;|                                   |
              5ffd 1418  ld   $18,y       ;| Trampoline for page $5f00 lookups |
              5ffe e006  jmp  y,$06       ;|                                   |
              5fff c218  st   [$18]       ;+-----------------------------------+
              6000 003a  ld   $3a         ;024e 'bit'
              6001 0035  ld   $35         ;0250 BCC
              6002 0050  ld   $50         ;0251 LT
              6003 0059  ld   $59
              6004 002b  ld   $2b         ;0253 STW
              6005 0034  ld   $34         ;0253 'A'
              6006 0021  ld   $21         ;0255 LDW
              6007 0032  ld   $32         ;0255 'C'
              6008 0099  ld   $99         ;0257 ADDW
              6009 0036  ld   $36         ;0257 'B'
              600a 002b  ld   $2b         ;0259 STW
              600b 0032  ld   $32         ;0259 'C'
              600c 0021  ld   $21         ;025b LDW
              600d 003a  ld   $3a         ;025b 'bit'
              600e 00b4  ld   $b4         ;025d SYS
              600f 00f7  ld   $f7
              6010 0035  ld   $35         ;025f BCC
              6011 0072  ld   $72         ;0260 NE
              6012 002d  ld   $2d
              6013 0021  ld   $21         ;0262 LDW
              6014 0038  ld   $38         ;0262 'shift'
              6015 008c  ld   $8c         ;0264 XORI
              6016 0007  ld   $07
              6017 0035  ld   $35         ;0266 BCC
              6018 0072  ld   $72         ;0267 NE
              6019 0072  ld   $72
              601a 0011  ld   $11         ;0269 LDWI
              601b 00b9  ld   $b9
              601c 0004  ld   $04
              601d 002b  ld   $2b         ;026c STW
              601e 0022  ld   $22
              601f 0021  ld   $21         ;026e LDW
              6020 0032  ld   $32         ;026e 'C'
              6021 00b4  ld   $b4         ;0270 SYS
              6022 0000  ld   $00
              6023 0090  ld   $90         ;0272 BRA
              6024 00d7  ld   $d7
              6025 0021  ld   $21         ;0274 LDW
              6026 0038  ld   $38         ;0274 'shift'
              6027 008c  ld   $8c         ;0276 XORI
              6028 0006  ld   $06
              6029 0035  ld   $35         ;0278 BCC
              602a 0072  ld   $72         ;0279 NE
              602b 0084  ld   $84
              602c 0011  ld   $11         ;027b LDWI
              602d 0087  ld   $87
              602e 0006  ld   $06
              602f 002b  ld   $2b         ;027e STW
              6030 0022  ld   $22
              6031 0021  ld   $21         ;0280 LDW
              6032 0032  ld   $32         ;0280 'C'
              6033 00b4  ld   $b4         ;0282 SYS
              6034 00f7  ld   $f7
              6035 0090  ld   $90         ;0284 BRA
              6036 00d7  ld   $d7
              6037 0021  ld   $21         ;0286 LDW
              6038 0038  ld   $38         ;0286 'shift'
              6039 008c  ld   $8c         ;0288 XORI
              603a 0005  ld   $05
              603b 0035  ld   $35         ;028a BCC
              603c 0072  ld   $72         ;028b NE
              603d 0096  ld   $96
              603e 0011  ld   $11         ;028d LDWI
              603f 006d  ld   $6d
              6040 0006  ld   $06
              6041 002b  ld   $2b         ;0290 STW
              6042 0022  ld   $22
              6043 0021  ld   $21         ;0292 LDW
              6044 0032  ld   $32         ;0292 'C'
              6045 00b4  ld   $b4         ;0294 SYS
              6046 00f6  ld   $f6
              6047 0090  ld   $90         ;0296 BRA
              6048 00d7  ld   $d7
              6049 0021  ld   $21         ;0298 LDW
              604a 0038  ld   $38         ;0298 'shift'
              604b 008c  ld   $8c         ;029a XORI
              604c 0004  ld   $04
              604d 0035  ld   $35         ;029c BCC
              604e 0072  ld   $72         ;029d NE
              604f 00a8  ld   $a8
              6050 0011  ld   $11         ;029f LDWI
              6051 0052  ld   $52
              6052 0006  ld   $06
              6053 002b  ld   $2b         ;02a2 STW
              6054 0022  ld   $22
              6055 0021  ld   $21         ;02a4 LDW
              6056 0032  ld   $32         ;02a4 'C'
              6057 00b4  ld   $b4         ;02a6 SYS
              6058 00f6  ld   $f6
              6059 0090  ld   $90         ;02a8 BRA
              605a 00d7  ld   $d7
              605b 0021  ld   $21         ;02aa LDW
              605c 0038  ld   $38         ;02aa 'shift'
              605d 008c  ld   $8c         ;02ac XORI
              605e 0003  ld   $03
              605f 0035  ld   $35         ;02ae BCC
              6060 0072  ld   $72         ;02af NE
              6061 00ba  ld   $ba
              6062 0011  ld   $11         ;02b1 LDWI
              6063 0036  ld   $36
              6064 0006  ld   $06
              6065 002b  ld   $2b         ;02b4 STW
              6066 0022  ld   $22
              6067 0021  ld   $21         ;02b6 LDW
              6068 0032  ld   $32         ;02b6 'C'
              6069 00b4  ld   $b4         ;02b8 SYS
              606a 00f5  ld   $f5
              606b 0090  ld   $90         ;02ba BRA
              606c 00d7  ld   $d7
              606d 0021  ld   $21         ;02bc LDW
              606e 0038  ld   $38         ;02bc 'shift'
              606f 008c  ld   $8c         ;02be XORI
              6070 0002  ld   $02
              6071 0035  ld   $35         ;02c0 BCC
              6072 0072  ld   $72         ;02c1 NE
              6073 00cc  ld   $cc
              6074 0011  ld   $11         ;02c3 LDWI
              6075 0019  ld   $19
              6076 0006  ld   $06
              6077 002b  ld   $2b         ;02c6 STW
              6078 0022  ld   $22
              6079 0021  ld   $21         ;02c8 LDW
              607a 0032  ld   $32         ;02c8 'C'
              607b 00b4  ld   $b4         ;02ca SYS
              607c 00f5  ld   $f5
              607d 0090  ld   $90         ;02cc BRA
              607e 00d7  ld   $d7
              607f 0021  ld   $21         ;02ce LDW
              6080 0038  ld   $38         ;02ce 'shift'
              6081 008c  ld   $8c         ;02d0 XORI
              6082 0001  ld   $01
              6083 0035  ld   $35         ;02d2 BCC
              6084 0072  ld   $72         ;02d3 NE
              6085 00d7  ld   $d7
              6086 0021  ld   $21         ;02d5 LDW
              6087 0032  ld   $32         ;02d5 'C'
              6088 00b4  ld   $b4         ;02d7 SYS
              6089 00f7  ld   $f7
              608a 002b  ld   $2b         ;02d9 STW
              608b 0032  ld   $32         ;02d9 'C'
              608c 0021  ld   $21         ;02db LDW
              608d 0030  ld   $30         ;02db 'sign'
              608e 0035  ld   $35         ;02dd BCC
              608f 003f  ld   $3f         ;02de EQ
              6090 00e4  ld   $e4
              6091 0059  ld   $59         ;02e0 LDI
              6092 0000  ld   $00
              6093 00b8  ld   $b8         ;02e2 SUBW
              6094 0032  ld   $32         ;02e2 'C'
              6095 0090  ld   $90         ;02e4 BRA
              6096 00e6  ld   $e6
              6097 0021  ld   $21         ;02e6 LDW
              6098 0032  ld   $32         ;02e6 'C'
              6099 0063  ld   $63         ;02e8 POP
              609a 00ff  ld   $ff         ;02e9 RET
              609b 002b  ld   $2b         ;02ea STW
              609c 003c  ld   $3c         ;02ea 'MulShift7'
              609d 0093  ld   $93         ;02ec INC
              609e 001b  ld   $1b
              609f 00ff  ld   $ff         ;02ee RET
              60a0 0003  ld   $03         ;| RAM segment address (high byte first)
              60a1 0000  ld   $00         ;|
              60a2 00eb  ld   $eb         ;| Length (1..256)
              60a3 00cd  ld   $cd         ;0300 DEF
              60a4 00e4  ld   $e4
              60a5 0075  ld   $75         ;0302 PUSH
              60a6 0011  ld   $11         ;0303 LDWI
              60a7 0000  ld   $00
              60a8 0008  ld   $08
              60a9 002b  ld   $2b         ;0306 STW
              60aa 003e  ld   $3e         ;0306 'Pen'
              60ab 0059  ld   $59         ;0308 LDI
              60ac 0078  ld   $78
              60ad 002b  ld   $2b         ;030a STW
              60ae 0040  ld   $40         ;030a 'Height'
              60af 0059  ld   $59         ;030c LDI
              60b0 00a0  ld   $a0
              60b1 002b  ld   $2b         ;030e STW
              60b2 0042  ld   $42         ;030e 'Width'
              60b3 002b  ld   $2b         ;0310 STW
              60b4 0044  ld   $44         ;0310 'len'
              60b5 002b  ld   $2b         ;0312 STW
              60b6 0046  ld   $46         ;0312 'LastPixel'
              60b7 0059  ld   $59         ;0314 LDI
              60b8 0000  ld   $00
              60b9 002b  ld   $2b         ;0316 STW
              60ba 0048  ld   $48         ;0316 'DY'
              60bb 0021  ld   $21         ;0318 LDW
              60bc 004a  ld   $4a         ;0318 'Step'
              60bd 002b  ld   $2b         ;031a STW
              60be 004c  ld   $4c         ;031a 'DX'
              60bf 0059  ld   $59         ;031c LDI
              60c0 003f  ld   $3f
              60c1 00f0  ld   $f0         ;031e POKE
              60c2 003e  ld   $3e         ;031e 'Pen'
              60c3 00cf  ld   $cf         ;0320 CALL
              60c4 004e  ld   $4e         ;0320 'UpdateClock'
              60c5 0021  ld   $21         ;0322 LDW
              60c6 0046  ld   $46         ;0322 'LastPixel'
              60c7 0035  ld   $35         ;0324 BCC
              60c8 0072  ld   $72         ;0325 NE
              60c9 0071  ld   $71
              60ca 0021  ld   $21         ;0327 LDW
              60cb 0050  ld   $50         ;0327 'Y0'
              60cc 002b  ld   $2b         ;0329 STW
              60cd 0034  ld   $34         ;0329 'A'
              60ce 002b  ld   $2b         ;032b STW
              60cf 0036  ld   $36         ;032b 'B'
              60d0 00cf  ld   $cf         ;032d CALL
              60d1 003c  ld   $3c         ;032d 'MulShift7'
              60d2 002b  ld   $2b         ;032f STW
              60d3 0052  ld   $52         ;032f 'YY'
              60d4 0021  ld   $21         ;0331 LDW
              60d5 0054  ld   $54         ;0331 'X0'
              60d6 00e3  ld   $e3         ;0333 ADDI
              60d7 0080  ld   $80
              60d8 002b  ld   $2b         ;0335 STW
              60d9 0034  ld   $34         ;0335 'A'
              60da 002b  ld   $2b         ;0337 STW
              60db 0036  ld   $36         ;0337 'B'
              60dc 00cf  ld   $cf         ;0339 CALL
              60dd 003c  ld   $3c         ;0339 'MulShift7'
              60de 0099  ld   $99         ;033b ADDW
              60df 0052  ld   $52         ;033b 'YY'
              60e0 00e6  ld   $e6         ;033d SUBI
              60e1 0008  ld   $08
              60e2 0035  ld   $35         ;033f BCC
              60e3 0053  ld   $53         ;0340 GE
              60e4 0044  ld   $44
              60e5 0059  ld   $59         ;0342 LDI
              60e6 0000  ld   $00
              60e7 0090  ld   $90         ;0344 BRA
              60e8 006f  ld   $6f
              60e9 0021  ld   $21         ;0346 LDW
              60ea 0054  ld   $54         ;0346 'X0'
              60eb 00e6  ld   $e6         ;0348 SUBI
              60ec 0020  ld   $20
              60ed 002b  ld   $2b         ;034a STW
              60ee 0034  ld   $34         ;034a 'A'
              60ef 002b  ld   $2b         ;034c STW
              60f0 0036  ld   $36         ;034c 'B'
              60f1 00cf  ld   $cf         ;034e CALL
              60f2 003c  ld   $3c         ;034e 'MulShift7'
              60f3 0099  ld   $99         ;0350 ADDW
              60f4 0052  ld   $52         ;0350 'YY'
              60f5 002b  ld   $2b         ;0352 STW
              60f6 0034  ld   $34         ;0352 'A'
              60f7 0099  ld   $99         ;0354 ADDW
              60f8 0054  ld   $54         ;0354 'X0'
              60f9 00e6  ld   $e6         ;0356 SUBI
              60fa 0020  ld   $20
              60fb fe00  bra  ac          ;+-----------------------------------+
              60fc fcfd  bra  $60fd       ;|                                   |
              60fd 1418  ld   $18,y       ;| Trampoline for page $6000 lookups |
              60fe e006  jmp  y,$06       ;|                                   |
              60ff c218  st   [$18]       ;+-----------------------------------+
              6100 002b  ld   $2b         ;0358 STW
              6101 0036  ld   $36         ;0358 'B'
              6102 00cf  ld   $cf         ;035a CALL
              6103 003c  ld   $3c         ;035a 'MulShift7'
              6104 002b  ld   $2b         ;035c STW
              6105 0056  ld   $56         ;035c 'tmp'
              6106 0099  ld   $99         ;035e ADDW
              6107 0056  ld   $56         ;035e 'tmp'
              6108 002b  ld   $2b         ;0360 STW
              6109 0056  ld   $56         ;0360 'tmp'
              610a 0099  ld   $99         ;0362 ADDW
              610b 0056  ld   $56         ;0362 'tmp'
              610c 002b  ld   $2b         ;0364 STW
              610d 0056  ld   $56         ;0364 'tmp'
              610e 00b8  ld   $b8         ;0366 SUBW
              610f 0052  ld   $52         ;0366 'YY'
              6110 0035  ld   $35         ;0368 BCC
              6111 0053  ld   $53         ;0369 GE
              6112 006d  ld   $6d
              6113 0059  ld   $59         ;036b LDI
              6114 0000  ld   $00
              6115 0090  ld   $90         ;036d BRA
              6116 006f  ld   $6f
              6117 00cf  ld   $cf         ;036f CALL
              6118 0058  ld   $58         ;036f 'CalcPixel'
              6119 0090  ld   $90         ;0371 BRA
              611a 0073  ld   $73
              611b 00cf  ld   $cf         ;0373 CALL
              611c 0058  ld   $58         ;0373 'CalcPixel'
              611d 002b  ld   $2b         ;0375 STW
              611e 0046  ld   $46         ;0375 'LastPixel'
              611f 00f0  ld   $f0         ;0377 POKE
              6120 003e  ld   $3e         ;0377 'Pen'
              6121 0021  ld   $21         ;0379 LDW
              6122 0044  ld   $44         ;0379 'len'
              6123 00e6  ld   $e6         ;037b SUBI
              6124 0001  ld   $01
              6125 0035  ld   $35         ;037d BCC
              6126 004d  ld   $4d         ;037e GT
              6127 009f  ld   $9f
              6128 0021  ld   $21         ;0380 LDW
              6129 0048  ld   $48         ;0380 'DY'
              612a 002b  ld   $2b         ;0382 STW
              612b 0056  ld   $56         ;0382 'tmp'
              612c 0021  ld   $21         ;0384 LDW
              612d 004c  ld   $4c         ;0384 'DX'
              612e 002b  ld   $2b         ;0386 STW
              612f 0048  ld   $48         ;0386 'DY'
              6130 0059  ld   $59         ;0388 LDI
              6131 0000  ld   $00
              6132 00b8  ld   $b8         ;038a SUBW
              6133 0056  ld   $56         ;038a 'tmp'
              6134 002b  ld   $2b         ;038c STW
              6135 004c  ld   $4c         ;038c 'DX'
              6136 0021  ld   $21         ;038e LDW
              6137 004c  ld   $4c         ;038e 'DX'
              6138 0035  ld   $35         ;0390 BCC
              6139 003f  ld   $3f         ;0391 EQ
              613a 0099  ld   $99
              613b 0021  ld   $21         ;0393 LDW
              613c 0042  ld   $42         ;0393 'Width'
              613d 00e6  ld   $e6         ;0395 SUBI
              613e 0001  ld   $01
              613f 002b  ld   $2b         ;0397 STW
              6140 0042  ld   $42         ;0397 'Width'
              6141 0090  ld   $90         ;0399 BRA
              6142 009f  ld   $9f
              6143 0021  ld   $21         ;039b LDW
              6144 0040  ld   $40         ;039b 'Height'
              6145 00e6  ld   $e6         ;039d SUBI
              6146 0001  ld   $01
              6147 002b  ld   $2b         ;039f STW
              6148 0040  ld   $40         ;039f 'Height'
              6149 002b  ld   $2b         ;03a1 STW
              614a 0044  ld   $44         ;03a1 'len'
              614b 0035  ld   $35         ;03a3 BCC
              614c 0056  ld   $56         ;03a4 LE
              614d 00e0  ld   $e0
              614e 0021  ld   $21         ;03a6 LDW
              614f 0054  ld   $54         ;03a6 'X0'
              6150 0099  ld   $99         ;03a8 ADDW
              6151 004c  ld   $4c         ;03a8 'DX'
              6152 002b  ld   $2b         ;03aa STW
              6153 0054  ld   $54         ;03aa 'X0'
              6154 0021  ld   $21         ;03ac LDW
              6155 0050  ld   $50         ;03ac 'Y0'
              6156 0099  ld   $99         ;03ae ADDW
              6157 0048  ld   $48         ;03ae 'DY'
              6158 002b  ld   $2b         ;03b0 STW
              6159 0050  ld   $50         ;03b0 'Y0'
              615a 0021  ld   $21         ;03b2 LDW
              615b 004c  ld   $4c         ;03b2 'DX'
              615c 0035  ld   $35         ;03b4 BCC
              615d 0053  ld   $53         ;03b5 GE
              615e 00bb  ld   $bb
              615f 0021  ld   $21         ;03b7 LDW
              6160 003e  ld   $3e         ;03b7 'Pen'
              6161 00e6  ld   $e6         ;03b9 SUBI
              6162 0001  ld   $01
              6163 002b  ld   $2b         ;03bb STW
              6164 003e  ld   $3e         ;03bb 'Pen'
              6165 0021  ld   $21         ;03bd LDW
              6166 004c  ld   $4c         ;03bd 'DX'
              6167 0035  ld   $35         ;03bf BCC
              6168 0056  ld   $56         ;03c0 LE
              6169 00c6  ld   $c6
              616a 0021  ld   $21         ;03c2 LDW
              616b 003e  ld   $3e         ;03c2 'Pen'
              616c 00e3  ld   $e3         ;03c4 ADDI
              616d 0001  ld   $01
              616e 002b  ld   $2b         ;03c6 STW
              616f 003e  ld   $3e         ;03c6 'Pen'
              6170 0021  ld   $21         ;03c8 LDW
              6171 0048  ld   $48         ;03c8 'DY'
              6172 0035  ld   $35         ;03ca BCC
              6173 0053  ld   $53         ;03cb GE
              6174 00d2  ld   $d2
              6175 0011  ld   $11         ;03cd LDWI
              6176 0000  ld   $00
              6177 00ff  ld   $ff
              6178 0099  ld   $99         ;03d0 ADDW
              6179 003e  ld   $3e         ;03d0 'Pen'
              617a 002b  ld   $2b         ;03d2 STW
              617b 003e  ld   $3e         ;03d2 'Pen'
              617c 0021  ld   $21         ;03d4 LDW
              617d 0048  ld   $48         ;03d4 'DY'
              617e 0035  ld   $35         ;03d6 BCC
              617f 0056  ld   $56         ;03d7 LE
              6180 00de  ld   $de
              6181 0011  ld   $11         ;03d9 LDWI
              6182 0000  ld   $00
              6183 0001  ld   $01
              6184 0099  ld   $99         ;03dc ADDW
              6185 003e  ld   $3e         ;03dc 'Pen'
              6186 002b  ld   $2b         ;03de STW
              6187 003e  ld   $3e         ;03de 'Pen'
              6188 0090  ld   $90         ;03e0 BRA
              6189 001a  ld   $1a
              618a 00cf  ld   $cf         ;03e2 CALL
              618b 005a  ld   $5a         ;03e2 'GrayOut'
              618c 0063  ld   $63         ;03e4 POP
              618d 00ff  ld   $ff         ;03e5 RET
              618e 002b  ld   $2b         ;03e6 STW
              618f 005c  ld   $5c         ;03e6 'CalcSet'
              6190 0093  ld   $93         ;03e8 INC
              6191 001b  ld   $1b
              6192 00ff  ld   $ff         ;03ea RET
              6193 0004  ld   $04         ;| RAM segment address (high byte first)
              6194 0000  ld   $00         ;|
              6195 00f0  ld   $f0         ;| Length (1..256)
              6196 00cd  ld   $cd         ;0400 DEF
              6197 00e4  ld   $e4
              6198 0075  ld   $75         ;0402 PUSH
              6199 0011  ld   $11         ;0403 LDWI
              619a 0000  ld   $00
              619b 0008  ld   $08
              619c 002b  ld   $2b         ;0406 STW
              619d 003e  ld   $3e         ;0406 'Pen'
              619e 0059  ld   $59         ;0408 LDI
              619f 0078  ld   $78
              61a0 002b  ld   $2b         ;040a STW
              61a1 0040  ld   $40         ;040a 'Height'
              61a2 0059  ld   $59         ;040c LDI
              61a3 00a0  ld   $a0
              61a4 002b  ld   $2b         ;040e STW
              61a5 0042  ld   $42         ;040e 'Width'
              61a6 002b  ld   $2b         ;0410 STW
              61a7 0044  ld   $44         ;0410 'len'
              61a8 0059  ld   $59         ;0412 LDI
              61a9 0001  ld   $01
              61aa 002b  ld   $2b         ;0414 STW
              61ab 004c  ld   $4c         ;0414 'DX'
              61ac 0059  ld   $59         ;0416 LDI
              61ad 0000  ld   $00
              61ae 002b  ld   $2b         ;0418 STW
              61af 0048  ld   $48         ;0418 'DY'
              61b0 0011  ld   $11         ;041a LDWI
              61b1 0000  ld   $00
              61b2 0006  ld   $06
              61b3 002b  ld   $2b         ;041d STW
              61b4 0022  ld   $22
              61b5 0059  ld   $59         ;041f LDI
              61b6 0000  ld   $00
              61b7 002b  ld   $2b         ;0421 STW
              61b8 005e  ld   $5e         ;0421 'Level'
              61b9 0059  ld   $59         ;0423 LDI
              61ba 0020  ld   $20
              61bb 002b  ld   $2b         ;0425 STW
              61bc 0060  ld   $60         ;0425 'i'
              61bd 0021  ld   $21         ;0427 LDW
              61be 003e  ld   $3e         ;0427 'Pen'
              61bf 00ad  ld   $ad         ;0429 PEEK
              61c0 0082  ld   $82         ;042a ANDI
              61c1 003f  ld   $3f
              61c2 00b8  ld   $b8         ;042c SUBW
              61c3 0060  ld   $60         ;042c 'i'
              61c4 0035  ld   $35         ;042e BCC
              61c5 0050  ld   $50         ;042f LT
              61c6 0042  ld   $42
              61c7 00f0  ld   $f0         ;0431 POKE
              61c8 003e  ld   $3e         ;0431 'Pen'
              61c9 0021  ld   $21         ;0433 LDW
              61ca 0060  ld   $60         ;0433 'i'
              61cb 0082  ld   $82         ;0435 ANDI
              61cc 0015  ld   $15
              61cd 0035  ld   $35         ;0437 BCC
              61ce 003f  ld   $3f         ;0438 EQ
              61cf 003c  ld   $3c
              61d0 0059  ld   $59         ;043a LDI
              61d1 0001  ld   $01
              61d2 0090  ld   $90         ;043c BRA
              61d3 003e  ld   $3e
              61d4 0059  ld   $59         ;043e LDI
              61d5 0002  ld   $02
              61d6 0099  ld   $99         ;0440 ADDW
              61d7 005e  ld   $5e         ;0440 'Level'
              61d8 002b  ld   $2b         ;0442 STW
              61d9 005e  ld   $5e         ;0442 'Level'
              61da 0021  ld   $21         ;0444 LDW
              61db 0060  ld   $60         ;0444 'i'
              61dc 00b4  ld   $b4         ;0446 SYS
              61dd 00f7  ld   $f7
              61de 0035  ld   $35         ;0448 BCC
              61df 004d  ld   $4d         ;0449 GT
              61e0 0023  ld   $23
              61e1 00f0  ld   $f0         ;044b POKE
              61e2 003e  ld   $3e         ;044b 'Pen'
              61e3 0021  ld   $21         ;044d LDW
              61e4 005e  ld   $5e         ;044d 'Level'
              61e5 0035  ld   $35         ;044f BCC
              61e6 003f  ld   $3f         ;0450 EQ
              61e7 0083  ld   $83
              61e8 001a  ld   $1a         ;0452 LD
              61e9 003f  ld   $3f         ;0452 'Pen'+1
              61ea 0082  ld   $82         ;0454 ANDI
              61eb 0001  ld   $01
              61ec 002b  ld   $2b         ;0456 STW
              61ed 0060  ld   $60         ;0456 'i'
              61ee 0099  ld   $99         ;0458 ADDW
              61ef 0060  ld   $60         ;0458 'i'
              61f0 002b  ld   $2b         ;045a STW
              61f1 0060  ld   $60         ;045a 'i'
              61f2 0021  ld   $21         ;045c LDW
              61f3 003e  ld   $3e         ;045c 'Pen'
              61f4 0082  ld   $82         ;045e ANDI
              61f5 0001  ld   $01
              61f6 0099  ld   $99         ;0460 ADDW
              61f7 0060  ld   $60         ;0460 'i'
              61f8 002b  ld   $2b         ;0462 STW
              61f9 0060  ld   $60         ;0462 'i'
              61fa 00cd  ld   $cd         ;0464 DEF
              61fb fe00  bra  ac          ;+-----------------------------------+
              61fc fcfd  bra  $61fd       ;|                                   |
              61fd 1418  ld   $18,y       ;| Trampoline for page $6100 lookups |
              61fe e006  jmp  y,$06       ;|                                   |
              61ff c218  st   [$18]       ;+-----------------------------------+
              6200 0068  ld   $68
              6201 0000  ld   $00
              6202 0002  ld   $02
              6203 0003  ld   $03
              6204 0001  ld   $01
              6205 0099  ld   $99         ;046a ADDW
              6206 0060  ld   $60         ;046a 'i'
              6207 00ad  ld   $ad         ;046c PEEK
              6208 0099  ld   $99         ;046d ADDW
              6209 005e  ld   $5e         ;046d 'Level'
              620a 00e6  ld   $e6         ;046f SUBI
              620b 0001  ld   $01
              620c 002b  ld   $2b         ;0471 STW
              620d 005e  ld   $5e         ;0471 'Level'
              620e 0021  ld   $21         ;0473 LDW
              620f 005e  ld   $5e         ;0473 'Level'
              6210 00e6  ld   $e6         ;0475 SUBI
              6211 0003  ld   $03
              6212 0035  ld   $35         ;0477 BCC
              6213 0050  ld   $50         ;0478 LT
              6214 0083  ld   $83
              6215 002b  ld   $2b         ;047a STW
              6216 005e  ld   $5e         ;047a 'Level'
              6217 0021  ld   $21         ;047c LDW
              6218 003e  ld   $3e         ;047c 'Pen'
              6219 00ad  ld   $ad         ;047e PEEK
              621a 00e3  ld   $e3         ;047f ADDI
              621b 0015  ld   $15
              621c 00f0  ld   $f0         ;0481 POKE
              621d 003e  ld   $3e         ;0481 'Pen'
              621e 0090  ld   $90         ;0483 BRA
              621f 0071  ld   $71
              6220 0021  ld   $21         ;0485 LDW
              6221 0044  ld   $44         ;0485 'len'
              6222 00e6  ld   $e6         ;0487 SUBI
              6223 0001  ld   $01
              6224 0035  ld   $35         ;0489 BCC
              6225 004d  ld   $4d         ;048a GT
              6226 00ab  ld   $ab
              6227 0021  ld   $21         ;048c LDW
              6228 0048  ld   $48         ;048c 'DY'
              6229 002b  ld   $2b         ;048e STW
              622a 0056  ld   $56         ;048e 'tmp'
              622b 0021  ld   $21         ;0490 LDW
              622c 004c  ld   $4c         ;0490 'DX'
              622d 002b  ld   $2b         ;0492 STW
              622e 0048  ld   $48         ;0492 'DY'
              622f 0059  ld   $59         ;0494 LDI
              6230 0000  ld   $00
              6231 00b8  ld   $b8         ;0496 SUBW
              6232 0056  ld   $56         ;0496 'tmp'
              6233 002b  ld   $2b         ;0498 STW
              6234 004c  ld   $4c         ;0498 'DX'
              6235 0021  ld   $21         ;049a LDW
              6236 004c  ld   $4c         ;049a 'DX'
              6237 0035  ld   $35         ;049c BCC
              6238 003f  ld   $3f         ;049d EQ
              6239 00a5  ld   $a5
              623a 0021  ld   $21         ;049f LDW
              623b 0042  ld   $42         ;049f 'Width'
              623c 00e6  ld   $e6         ;04a1 SUBI
              623d 0001  ld   $01
              623e 002b  ld   $2b         ;04a3 STW
              623f 0042  ld   $42         ;04a3 'Width'
              6240 0090  ld   $90         ;04a5 BRA
              6241 00ab  ld   $ab
              6242 0021  ld   $21         ;04a7 LDW
              6243 0040  ld   $40         ;04a7 'Height'
              6244 00e6  ld   $e6         ;04a9 SUBI
              6245 0001  ld   $01
              6246 002b  ld   $2b         ;04ab STW
              6247 0040  ld   $40         ;04ab 'Height'
              6248 002b  ld   $2b         ;04ad STW
              6249 0044  ld   $44         ;04ad 'len'
              624a 0035  ld   $35         ;04af BCC
              624b 0056  ld   $56         ;04b0 LE
              624c 00e2  ld   $e2
              624d 0021  ld   $21         ;04b2 LDW
              624e 004c  ld   $4c         ;04b2 'DX'
              624f 0035  ld   $35         ;04b4 BCC
              6250 0053  ld   $53         ;04b5 GE
              6251 00bb  ld   $bb
              6252 0021  ld   $21         ;04b7 LDW
              6253 003e  ld   $3e         ;04b7 'Pen'
              6254 00e6  ld   $e6         ;04b9 SUBI
              6255 0001  ld   $01
              6256 002b  ld   $2b         ;04bb STW
              6257 003e  ld   $3e         ;04bb 'Pen'
              6258 0021  ld   $21         ;04bd LDW
              6259 004c  ld   $4c         ;04bd 'DX'
              625a 0035  ld   $35         ;04bf BCC
              625b 0056  ld   $56         ;04c0 LE
              625c 00c6  ld   $c6
              625d 0021  ld   $21         ;04c2 LDW
              625e 003e  ld   $3e         ;04c2 'Pen'
              625f 00e3  ld   $e3         ;04c4 ADDI
              6260 0001  ld   $01
              6261 002b  ld   $2b         ;04c6 STW
              6262 003e  ld   $3e         ;04c6 'Pen'
              6263 0021  ld   $21         ;04c8 LDW
              6264 0048  ld   $48         ;04c8 'DY'
              6265 0035  ld   $35         ;04ca BCC
              6266 0053  ld   $53         ;04cb GE
              6267 00d2  ld   $d2
              6268 0011  ld   $11         ;04cd LDWI
              6269 0000  ld   $00
              626a 00ff  ld   $ff
              626b 0099  ld   $99         ;04d0 ADDW
              626c 003e  ld   $3e         ;04d0 'Pen'
              626d 002b  ld   $2b         ;04d2 STW
              626e 003e  ld   $3e         ;04d2 'Pen'
              626f 0021  ld   $21         ;04d4 LDW
              6270 0048  ld   $48         ;04d4 'DY'
              6271 0035  ld   $35         ;04d6 BCC
              6272 0056  ld   $56         ;04d7 LE
              6273 00de  ld   $de
              6274 0011  ld   $11         ;04d9 LDWI
              6275 0000  ld   $00
              6276 0001  ld   $01
              6277 0099  ld   $99         ;04dc ADDW
              6278 003e  ld   $3e         ;04dc 'Pen'
              6279 002b  ld   $2b         ;04de STW
              627a 003e  ld   $3e         ;04de 'Pen'
              627b 00cf  ld   $cf         ;04e0 CALL
              627c 004e  ld   $4e         ;04e0 'UpdateClock'
              627d 0090  ld   $90         ;04e2 BRA
              627e 0018  ld   $18
              627f 0063  ld   $63         ;04e4 POP
              6280 00ff  ld   $ff         ;04e5 RET
              6281 002b  ld   $2b         ;04e6 STW
              6282 005a  ld   $5a         ;04e6 'GrayOut'
              6283 0011  ld   $11         ;04e8 LDWI
              6284 001a  ld   $1a
              6285 0020  ld   $20
              6286 002b  ld   $2b         ;04eb STW
              6287 0062  ld   $62         ;04eb 'Separator'
              6288 0093  ld   $93         ;04ed INC
              6289 001b  ld   $1b
              628a 00ff  ld   $ff         ;04ef RET
              628b 0005  ld   $05         ;| RAM segment address (high byte first)
              628c 0000  ld   $00         ;|
              628d 00f6  ld   $f6         ;| Length (1..256)
              628e 00cd  ld   $cd         ;0500 DEF
              628f 00a4  ld   $a4
              6290 001a  ld   $1a         ;0502 LD
              6291 000e  ld   $0e
              6292 00b8  ld   $b8         ;0504 SUBW
              6293 0064  ld   $64         ;0504 'LastFrame'
              6294 0082  ld   $82         ;0506 ANDI
              6295 00ff  ld   $ff
              6296 002b  ld   $2b         ;0508 STW
              6297 0066  ld   $66         ;0508 'Elapsed'
              6298 00e6  ld   $e6         ;050a SUBI
              6299 003c  ld   $3c
              629a 0035  ld   $35         ;050c BCC
              629b 0053  ld   $53         ;050d GE
              629c 0019  ld   $19
              629d 001a  ld   $1a         ;050f LD
              629e 0011  ld   $11
              629f 0082  ld   $82         ;0511 ANDI
              62a0 0080  ld   $80
              62a1 0035  ld   $35         ;0513 BCC
              62a2 003f  ld   $3f         ;0514 EQ
              62a3 0015  ld   $15
              62a4 00ff  ld   $ff         ;0516 RET
              62a5 0059  ld   $59         ;0517 LDI
              62a6 000f  ld   $0f
              62a7 0090  ld   $90         ;0519 BRA
              62a8 001b  ld   $1b
              62a9 0059  ld   $59         ;051b LDI
              62aa 003f  ld   $3f
              62ab 002b  ld   $2b         ;051d STW
              62ac 0068  ld   $68         ;051d 'Color'
              62ad 0075  ld   $75         ;051f PUSH
              62ae 0021  ld   $21         ;0520 LDW
              62af 006a  ld   $6a         ;0520 'Clock0'
              62b0 0099  ld   $99         ;0522 ADDW
              62b1 0066  ld   $66         ;0522 'Elapsed'
              62b2 002b  ld   $2b         ;0524 STW
              62b3 006a  ld   $6a         ;0524 'Clock0'
              62b4 0021  ld   $21         ;0526 LDW
              62b5 0064  ld   $64         ;0526 'LastFrame'
              62b6 0099  ld   $99         ;0528 ADDW
              62b7 0066  ld   $66         ;0528 'Elapsed'
              62b8 002b  ld   $2b         ;052a STW
              62b9 0064  ld   $64         ;052a 'LastFrame'
              62ba 0011  ld   $11         ;052c LDWI
              62bb 00f1  ld   $f1
              62bc 00f1  ld   $f1
              62bd 0099  ld   $99         ;052f ADDW
              62be 006a  ld   $6a         ;052f 'Clock0'
              62bf 0035  ld   $35         ;0531 BCC
              62c0 0050  ld   $50         ;0532 LT
              62c1 0038  ld   $38
              62c2 002b  ld   $2b         ;0534 STW
              62c3 006a  ld   $6a         ;0534 'Clock0'
              62c4 0059  ld   $59         ;0536 LDI
              62c5 0001  ld   $01
              62c6 00cf  ld   $cf         ;0538 CALL
              62c7 006c  ld   $6c         ;0538 'AddMinutes'
              62c8 001a  ld   $1a         ;053a LD
              62c9 0063  ld   $63         ;053a 'Separator'+1
              62ca 00fc  ld   $fc         ;053c XORW
              62cb 0062  ld   $62         ;053c 'Separator'
              62cc 005e  ld   $5e         ;053e ST
              62cd 0063  ld   $63         ;053e 'Separator'+1
              62ce 001a  ld   $1a         ;0540 LD
              62cf 0011  ld   $11
              62d0 008c  ld   $8c         ;0542 XORI
              62d1 0077  ld   $77
              62d2 0035  ld   $35         ;0544 BCC
              62d3 0072  ld   $72         ;0545 NE
              62d4 004b  ld   $4b
              62d5 002b  ld   $2b         ;0547 STW
              62d6 006a  ld   $6a         ;0547 'Clock0'
              62d7 0059  ld   $59         ;0549 LDI
              62d8 0001  ld   $01
              62d9 0090  ld   $90         ;054b BRA
              62da 0070  ld   $70
              62db 008c  ld   $8c         ;054d XORI
              62dc 000c  ld   $0c
              62dd 0035  ld   $35         ;054f BCC
              62de 0072  ld   $72         ;0550 NE
              62df 0057  ld   $57
              62e0 002b  ld   $2b         ;0552 STW
              62e1 006a  ld   $6a         ;0552 'Clock0'
              62e2 0011  ld   $11         ;0554 LDWI
              62e3 00ff  ld   $ff
              62e4 00ff  ld   $ff
              62e5 0090  ld   $90         ;0557 BRA
              62e6 0070  ld   $70
              62e7 008c  ld   $8c         ;0559 XORI
              62e8 0006  ld   $06
              62e9 0035  ld   $35         ;055b BCC
              62ea 0072  ld   $72         ;055c NE
              62eb 0063  ld   $63
              62ec 002b  ld   $2b         ;055e STW
              62ed 006a  ld   $6a         ;055e 'Clock0'
              62ee 0011  ld   $11         ;0560 LDWI
              62ef 00c4  ld   $c4
              62f0 00ff  ld   $ff
              62f1 0090  ld   $90         ;0563 BRA
              62f2 0070  ld   $70
              62f3 008c  ld   $8c         ;0565 XORI
              62f4 0003  ld   $03
              62f5 0035  ld   $35         ;0567 BCC
              62f6 0072  ld   $72         ;0568 NE
              62f7 006e  ld   $6e
              62f8 002b  ld   $2b         ;056a STW
              62f9 006a  ld   $6a         ;056a 'Clock0'
              62fa 0059  ld   $59         ;056c LDI
              62fb fe00  bra  ac          ;+-----------------------------------+
              62fc fcfd  bra  $62fd       ;|                                   |
              62fd 1418  ld   $18,y       ;| Trampoline for page $6200 lookups |
              62fe e006  jmp  y,$06       ;|                                   |
              62ff c218  st   [$18]       ;+-----------------------------------+
              6300 003c  ld   $3c
              6301 0090  ld   $90         ;056e BRA
              6302 0070  ld   $70
              6303 0059  ld   $59         ;0570 LDI
              6304 0000  ld   $00
              6305 0035  ld   $35         ;0572 BCC
              6306 003f  ld   $3f         ;0573 EQ
              6307 007e  ld   $7e
              6308 00cf  ld   $cf         ;0575 CALL
              6309 006c  ld   $6c         ;0575 'AddMinutes'
              630a 0059  ld   $59         ;0577 LDI
              630b 0000  ld   $00
              630c 002b  ld   $2b         ;0579 STW
              630d 006a  ld   $6a         ;0579 'Clock0'
              630e 0011  ld   $11         ;057b LDWI
              630f 0000  ld   $00
              6310 003a  ld   $3a
              6311 002b  ld   $2b         ;057e STW
              6312 0062  ld   $62         ;057e 'Separator'
              6313 001a  ld   $1a         ;0580 LD
              6314 0011  ld   $11
              6315 0088  ld   $88         ;0582 ORI
              6316 000f  ld   $0f
              6317 005e  ld   $5e         ;0584 ST
              6318 0011  ld   $11
              6319 0011  ld   $11         ;0586 LDWI
              631a 005c  ld   $5c
              631b 0044  ld   $44
              631c 002b  ld   $2b         ;0589 STW
              631d 006e  ld   $6e         ;0589 'Pos'
              631e 0021  ld   $21         ;058b LDW
              631f 0070  ld   $70         ;058b 'Clock1'
              6320 002b  ld   $2b         ;058d STW
              6321 0072  ld   $72         ;058d 'Value'
              6322 0011  ld   $11         ;058f LDWI
              6323 0058  ld   $58
              6324 0002  ld   $02
              6325 00cf  ld   $cf         ;0592 CALL
              6326 0074  ld   $74         ;0592 'NextDigit'
              6327 0059  ld   $59         ;0594 LDI
              6328 003c  ld   $3c
              6329 00cf  ld   $cf         ;0596 CALL
              632a 0074  ld   $74         ;0596 'NextDigit'
              632b 001a  ld   $1a         ;0598 LD
              632c 0063  ld   $63         ;0598 'Separator'+1
              632d 00cf  ld   $cf         ;059a CALL
              632e 0076  ld   $76         ;059a 'PrintChar'
              632f 0059  ld   $59         ;059c LDI
              6330 000a  ld   $0a
              6331 00cf  ld   $cf         ;059e CALL
              6332 0074  ld   $74         ;059e 'NextDigit'
              6333 0059  ld   $59         ;05a0 LDI
              6334 0001  ld   $01
              6335 00cf  ld   $cf         ;05a2 CALL
              6336 0074  ld   $74         ;05a2 'NextDigit'
              6337 0063  ld   $63         ;05a4 POP
              6338 00ff  ld   $ff         ;05a5 RET
              6339 002b  ld   $2b         ;05a6 STW
              633a 004e  ld   $4e         ;05a6 'UpdateClock'
              633b 00cd  ld   $cd         ;05a8 DEF
              633c 00ef  ld   $ef
              633d 00e6  ld   $e6         ;05aa SUBI
              633e 0020  ld   $20
              633f 002b  ld   $2b         ;05ac STW
              6340 0060  ld   $60         ;05ac 'i'
              6341 0011  ld   $11         ;05ae LDWI
              6342 0000  ld   $00
              6343 0007  ld   $07
              6344 002b  ld   $2b         ;05b1 STW
              6345 0078  ld   $78         ;05b1 'fontData'
              6346 0021  ld   $21         ;05b3 LDW
              6347 0060  ld   $60         ;05b3 'i'
              6348 00e9  ld   $e9         ;05b5 LSLW
              6349 00e9  ld   $e9         ;05b6 LSLW
              634a 0099  ld   $99         ;05b7 ADDW
              634b 0060  ld   $60         ;05b7 'i'
              634c 0099  ld   $99         ;05b9 ADDW
              634d 0078  ld   $78         ;05b9 'fontData'
              634e 002b  ld   $2b         ;05bb STW
              634f 0078  ld   $78         ;05bb 'fontData'
              6350 0011  ld   $11         ;05bd LDWI
              6351 0000  ld   $00
              6352 0008  ld   $08
              6353 0099  ld   $99         ;05c0 ADDW
              6354 006e  ld   $6e         ;05c0 'Pos'
              6355 002b  ld   $2b         ;05c2 STW
              6356 007a  ld   $7a         ;05c2 'q'
              6357 0059  ld   $59         ;05c4 LDI
              6358 0000  ld   $00
              6359 005e  ld   $5e         ;05c6 ST
              635a 0024  ld   $24
              635b 0021  ld   $21         ;05c8 LDW
              635c 0068  ld   $68         ;05c8 'Color'
              635d 005e  ld   $5e         ;05ca ST
              635e 0025  ld   $25
              635f 0021  ld   $21         ;05cc LDW
              6360 006e  ld   $6e         ;05cc 'Pos'
              6361 002b  ld   $2b         ;05ce STW
              6362 0028  ld   $28
              6363 00e3  ld   $e3         ;05d0 ADDI
              6364 0006  ld   $06
              6365 002b  ld   $2b         ;05d2 STW
              6366 006e  ld   $6e         ;05d2 'Pos'
              6367 0011  ld   $11         ;05d4 LDWI
              6368 00e1  ld   $e1
              6369 0004  ld   $04
              636a 002b  ld   $2b         ;05d7 STW
              636b 0022  ld   $22
              636c 0059  ld   $59         ;05d9 LDI
              636d 00fb  ld   $fb
              636e 002b  ld   $2b         ;05db STW
              636f 0060  ld   $60         ;05db 'i'
              6370 0021  ld   $21         ;05dd LDW
              6371 0078  ld   $78         ;05dd 'fontData'
              6372 007f  ld   $7f         ;05df LUP
              6373 0000  ld   $00
              6374 0093  ld   $93         ;05e1 INC
              6375 0078  ld   $78         ;05e1 'fontData'
              6376 005e  ld   $5e         ;05e3 ST
              6377 0026  ld   $26
              6378 00b4  ld   $b4         ;05e5 SYS
              6379 00cc  ld   $cc
              637a 0093  ld   $93         ;05e7 INC
              637b 0028  ld   $28
              637c 0093  ld   $93         ;05e9 INC
              637d 0060  ld   $60         ;05e9 'i'
              637e 0021  ld   $21         ;05eb LDW
              637f 0060  ld   $60         ;05eb 'i'
              6380 0035  ld   $35         ;05ed BCC
              6381 0072  ld   $72         ;05ee NE
              6382 00db  ld   $db
              6383 00ff  ld   $ff         ;05f0 RET
              6384 002b  ld   $2b         ;05f1 STW
              6385 0076  ld   $76         ;05f1 'PrintChar'
              6386 0093  ld   $93         ;05f3 INC
              6387 001b  ld   $1b
              6388 00ff  ld   $ff         ;05f5 RET
              6389 0006  ld   $06         ;| RAM segment address (high byte first)
              638a 0000  ld   $00         ;|
              638b 00fe  ld   $fe         ;| Length (1..256)
              638c 00cd  ld   $cd         ;0600 DEF
              638d 001d  ld   $1d
              638e 0075  ld   $75         ;0602 PUSH
              638f 002b  ld   $2b         ;0603 STW
              6390 007c  ld   $7c         ;0603 'Radix'
              6391 0059  ld   $59         ;0605 LDI
              6392 0030  ld   $30
              6393 002b  ld   $2b         ;0607 STW
              6394 007e  ld   $7e         ;0607 'Digit'
              6395 0021  ld   $21         ;0609 LDW
              6396 0072  ld   $72         ;0609 'Value'
              6397 00b8  ld   $b8         ;060b SUBW
              6398 007c  ld   $7c         ;060b 'Radix'
              6399 0035  ld   $35         ;060d BCC
              639a 0050  ld   $50         ;060e LT
              639b 0017  ld   $17
              639c 002b  ld   $2b         ;0610 STW
              639d 0072  ld   $72         ;0610 'Value'
              639e 0093  ld   $93         ;0612 INC
              639f 007e  ld   $7e         ;0612 'Digit'
              63a0 00b8  ld   $b8         ;0614 SUBW
              63a1 007c  ld   $7c         ;0614 'Radix'
              63a2 0035  ld   $35         ;0616 BCC
              63a3 0053  ld   $53         ;0617 GE
              63a4 000e  ld   $0e
              63a5 0021  ld   $21         ;0619 LDW
              63a6 007e  ld   $7e         ;0619 'Digit'
              63a7 00cf  ld   $cf         ;061b CALL
              63a8 0076  ld   $76         ;061b 'PrintChar'
              63a9 0063  ld   $63         ;061d POP
              63aa 00ff  ld   $ff         ;061e RET
              63ab 002b  ld   $2b         ;061f STW
              63ac 0074  ld   $74         ;061f 'NextDigit'
              63ad 00cd  ld   $cd         ;0621 DEF
              63ae 003a  ld   $3a
              63af 0099  ld   $99         ;0623 ADDW
              63b0 0070  ld   $70         ;0623 'Clock1'
              63b1 002b  ld   $2b         ;0625 STW
              63b2 0070  ld   $70         ;0625 'Clock1'
              63b3 0035  ld   $35         ;0627 BCC
              63b4 0053  ld   $53         ;0628 GE
              63b5 002f  ld   $2f
              63b6 0011  ld   $11         ;062a LDWI
              63b7 00a0  ld   $a0
              63b8 0005  ld   $05
              63b9 0099  ld   $99         ;062d ADDW
              63ba 0070  ld   $70         ;062d 'Clock1'
              63bb 002b  ld   $2b         ;062f STW
              63bc 0070  ld   $70         ;062f 'Clock1'
              63bd 0011  ld   $11         ;0631 LDWI
              63be 0060  ld   $60
              63bf 00fa  ld   $fa
              63c0 0099  ld   $99         ;0634 ADDW
              63c1 0070  ld   $70         ;0634 'Clock1'
              63c2 0035  ld   $35         ;0636 BCC
              63c3 0050  ld   $50         ;0637 LT
              63c4 0039  ld   $39
              63c5 002b  ld   $2b         ;0639 STW
              63c6 0070  ld   $70         ;0639 'Clock1'
              63c7 00ff  ld   $ff         ;063b RET
              63c8 002b  ld   $2b         ;063c STW
              63c9 006c  ld   $6c         ;063c 'AddMinutes'
              63ca 00cd  ld   $cd         ;063e DEF
              63cb 008e  ld   $8e
              63cc 0075  ld   $75         ;0640 PUSH
              63cd 0059  ld   $59         ;0641 LDI
              63ce 0000  ld   $00
              63cf 002b  ld   $2b         ;0643 STW
              63d0 0081  ld   $81         ;0643 'X'
              63d1 002b  ld   $2b         ;0645 STW
              63d2 0083  ld   $83         ;0645 'XX'
              63d3 002b  ld   $2b         ;0647 STW
              63d4 0085  ld   $85         ;0647 'Y'
              63d5 002b  ld   $2b         ;0649 STW
              63d6 0052  ld   $52         ;0649 'YY'
              63d7 002b  ld   $2b         ;064b STW
              63d8 0060  ld   $60         ;064b 'i'
              63d9 0021  ld   $21         ;064d LDW
              63da 0060  ld   $60         ;064d 'i'
              63db 00e3  ld   $e3         ;064f ADDI
              63dc 0001  ld   $01
              63dd 002b  ld   $2b         ;0651 STW
              63de 0060  ld   $60         ;0651 'i'
              63df 008c  ld   $8c         ;0653 XORI
              63e0 0040  ld   $40
              63e1 0035  ld   $35         ;0655 BCC
              63e2 003f  ld   $3f         ;0656 EQ
              63e3 008c  ld   $8c
              63e4 0021  ld   $21         ;0658 LDW
              63e5 0081  ld   $81         ;0658 'X'
              63e6 002b  ld   $2b         ;065a STW
              63e7 0034  ld   $34         ;065a 'A'
              63e8 0021  ld   $21         ;065c LDW
              63e9 0085  ld   $85         ;065c 'Y'
              63ea 0099  ld   $99         ;065e ADDW
              63eb 0085  ld   $85         ;065e 'Y'
              63ec 002b  ld   $2b         ;0660 STW
              63ed 0036  ld   $36         ;0660 'B'
              63ee 00cf  ld   $cf         ;0662 CALL
              63ef 003c  ld   $3c         ;0662 'MulShift7'
              63f0 0099  ld   $99         ;0664 ADDW
              63f1 0050  ld   $50         ;0664 'Y0'
              63f2 002b  ld   $2b         ;0666 STW
              63f3 0085  ld   $85         ;0666 'Y'
              63f4 0021  ld   $21         ;0668 LDW
              63f5 0083  ld   $83         ;0668 'XX'
              63f6 00b8  ld   $b8         ;066a SUBW
              63f7 0052  ld   $52         ;066a 'YY'
              63f8 0099  ld   $99         ;066c ADDW
              63f9 0054  ld   $54         ;066c 'X0'
              63fa 002b  ld   $2b         ;066e STW
              63fb fe00  bra  ac          ;+-----------------------------------+
              63fc fcfd  bra  $63fd       ;|                                   |
              63fd 1418  ld   $18,y       ;| Trampoline for page $6300 lookups |
              63fe e006  jmp  y,$06       ;|                                   |
              63ff c218  st   [$18]       ;+-----------------------------------+
              6400 0081  ld   $81         ;066e 'X'
              6401 002b  ld   $2b         ;0670 STW
              6402 0034  ld   $34         ;0670 'A'
              6403 002b  ld   $2b         ;0672 STW
              6404 0036  ld   $36         ;0672 'B'
              6405 00cf  ld   $cf         ;0674 CALL
              6406 003c  ld   $3c         ;0674 'MulShift7'
              6407 002b  ld   $2b         ;0676 STW
              6408 0083  ld   $83         ;0676 'XX'
              6409 0021  ld   $21         ;0678 LDW
              640a 0085  ld   $85         ;0678 'Y'
              640b 002b  ld   $2b         ;067a STW
              640c 0034  ld   $34         ;067a 'A'
              640d 002b  ld   $2b         ;067c STW
              640e 0036  ld   $36         ;067c 'B'
              640f 00cf  ld   $cf         ;067e CALL
              6410 003c  ld   $3c         ;067e 'MulShift7'
              6411 002b  ld   $2b         ;0680 STW
              6412 0052  ld   $52         ;0680 'YY'
              6413 0011  ld   $11         ;0682 LDWI
              6414 0000  ld   $00
              6415 00fe  ld   $fe
              6416 0099  ld   $99         ;0685 ADDW
              6417 0083  ld   $83         ;0685 'XX'
              6418 0099  ld   $99         ;0687 ADDW
              6419 0052  ld   $52         ;0687 'YY'
              641a 0035  ld   $35         ;0689 BCC
              641b 0056  ld   $56         ;068a LE
              641c 004b  ld   $4b
              641d 0021  ld   $21         ;068c LDW
              641e 0060  ld   $60         ;068c 'i'
              641f 0063  ld   $63         ;068e POP
              6420 00ff  ld   $ff         ;068f RET
              6421 002b  ld   $2b         ;0690 STW
              6422 0058  ld   $58         ;0690 'CalcPixel'
              6423 0059  ld   $59         ;0692 LDI
              6424 0000  ld   $00
              6425 002b  ld   $2b         ;0694 STW
              6426 006a  ld   $6a         ;0694 'Clock0'
              6427 002b  ld   $2b         ;0696 STW
              6428 0070  ld   $70         ;0696 'Clock1'
              6429 002b  ld   $2b         ;0698 STW
              642a 007e  ld   $7e         ;0698 'Digit'
              642b 001a  ld   $1a         ;069a LD
              642c 000e  ld   $0e
              642d 002b  ld   $2b         ;069c STW
              642e 0064  ld   $64         ;069c 'LastFrame'
              642f 0011  ld   $11         ;069e LDWI
              6430 004c  ld   $4c
              6431 00ff  ld   $ff
              6432 002b  ld   $2b         ;06a1 STW
              6433 0050  ld   $50         ;06a1 'Y0'
              6434 0011  ld   $11         ;06a3 LDWI
              6435 00c0  ld   $c0
              6436 00fe  ld   $fe
              6437 002b  ld   $2b         ;06a6 STW
              6438 0054  ld   $54         ;06a6 'X0'
              6439 0059  ld   $59         ;06a8 LDI
              643a 0003  ld   $03
              643b 002b  ld   $2b         ;06aa STW
              643c 004a  ld   $4a         ;06aa 'Step'
              643d 00cf  ld   $cf         ;06ac CALL
              643e 005c  ld   $5c         ;06ac 'CalcSet'
              643f 0011  ld   $11         ;06ae LDWI
              6440 006c  ld   $6c
              6441 00ff  ld   $ff
              6442 002b  ld   $2b         ;06b1 STW
              6443 0050  ld   $50         ;06b1 'Y0'
              6444 0011  ld   $11         ;06b3 LDWI
              6445 009e  ld   $9e
              6446 00ff  ld   $ff
              6447 002b  ld   $2b         ;06b6 STW
              6448 0054  ld   $54         ;06b6 'X0'
              6449 0059  ld   $59         ;06b8 LDI
              644a 0001  ld   $01
              644b 002b  ld   $2b         ;06ba STW
              644c 004a  ld   $4a         ;06ba 'Step'
              644d 00cf  ld   $cf         ;06bc CALL
              644e 005c  ld   $5c         ;06bc 'CalcSet'
              644f 0011  ld   $11         ;06be LDWI
              6450 00c4  ld   $c4
              6451 00ff  ld   $ff
              6452 002b  ld   $2b         ;06c1 STW
              6453 0050  ld   $50         ;06c1 'Y0'
              6454 0011  ld   $11         ;06c3 LDWI
              6455 0000  ld   $00
              6456 00ff  ld   $ff
              6457 002b  ld   $2b         ;06c6 STW
              6458 0054  ld   $54         ;06c6 'X0'
              6459 0059  ld   $59         ;06c8 LDI
              645a 0001  ld   $01
              645b 002b  ld   $2b         ;06ca STW
              645c 004a  ld   $4a         ;06ca 'Step'
              645d 00cf  ld   $cf         ;06cc CALL
              645e 005c  ld   $5c         ;06cc 'CalcSet'
              645f 0011  ld   $11         ;06ce LDWI
              6460 00c0  ld   $c0
              6461 00fe  ld   $fe
              6462 002b  ld   $2b         ;06d1 STW
              6463 0050  ld   $50         ;06d1 'Y0'
              6464 0011  ld   $11         ;06d3 LDWI
              6465 0098  ld   $98
              6466 00fe  ld   $fe
              6467 002b  ld   $2b         ;06d6 STW
              6468 0054  ld   $54         ;06d6 'X0'
              6469 0059  ld   $59         ;06d8 LDI
              646a 0009  ld   $09
              646b 002b  ld   $2b         ;06da STW
              646c 004a  ld   $4a         ;06da 'Step'
              646d 00cf  ld   $cf         ;06dc CALL
              646e 005c  ld   $5c         ;06dc 'CalcSet'
              646f 0059  ld   $59         ;06de LDI
              6470 0000  ld   $00
              6471 002b  ld   $2b         ;06e0 STW
              6472 0050  ld   $50         ;06e0 'Y0'
              6473 0011  ld   $11         ;06e2 LDWI
              6474 009c  ld   $9c
              6475 00ff  ld   $ff
              6476 002b  ld   $2b         ;06e5 STW
              6477 0054  ld   $54         ;06e5 'X0'
              6478 0059  ld   $59         ;06e7 LDI
              6479 0001  ld   $01
              647a 002b  ld   $2b         ;06e9 STW
              647b 004a  ld   $4a         ;06e9 'Step'
              647c 00cf  ld   $cf         ;06eb CALL
              647d 005c  ld   $5c         ;06eb 'CalcSet'
              647e 0011  ld   $11         ;06ed LDWI
              647f 00c4  ld   $c4
              6480 00ff  ld   $ff
              6481 002b  ld   $2b         ;06f0 STW
              6482 0050  ld   $50         ;06f0 'Y0'
              6483 0059  ld   $59         ;06f2 LDI
              6484 0000  ld   $00
              6485 002b  ld   $2b         ;06f4 STW
              6486 0054  ld   $54         ;06f4 'X0'
              6487 0059  ld   $59         ;06f6 LDI
              6488 0001  ld   $01
              6489 002b  ld   $2b         ;06f8 STW
              648a 004a  ld   $4a         ;06f8 'Step'
              648b 00cf  ld   $cf         ;06fa CALL
              648c 005c  ld   $5c         ;06fa 'CalcSet'
              648d 0090  ld   $90         ;06fc BRA
              648e 009c  ld   $9c
              648f 0000  ld   $00         ;End of Apps/Mandelbrot/Mandelbrot_v1.gcl, size 1255
                                          ;+-----------------------------------+
                                          ;| Apps/Loader/Loader_v4.gcl         |
                                          ;+-----------------------------------+
              6490 dc4d  st   $4d,[y,x++] ;'M'
              6491 dc61  st   $61,[y,x++] ;'a'
              6492 dc6e  st   $6e,[y,x++] ;'n'
              6493 dc64  st   $64,[y,x++] ;'d'
              6494 dc65  st   $65,[y,x++] ;'e'
              6495 dc6c  st   $6c,[y,x++] ;'l'
              6496 dc62  st   $62,[y,x++] ;'b'
              6497 dc72  st   $72,[y,x++] ;'r'
              6498 00a9  ld   $a9
              6499 c218  st   [$18]
              649a 005f  ld   $5f
              649b 14df  ld   $df,y
              649c e0ac  jmp  y,$ac
              649d c219  st   [$19]
Loader:       649e 0002  ld   $02         ;| RAM segment address (high byte first)
              649f 0000  ld   $00         ;|
              64a0 0095  ld   $95         ;| Length (1..256)
              64a1 00cd  ld   $cd         ;0200 DEF
              64a2 0043  ld   $43
              64a3 00e6  ld   $e6         ;0202 SUBI
              64a4 0052  ld   $52
              64a5 0035  ld   $35         ;0204 BCC
              64a6 0053  ld   $53         ;0205 GE
              64a7 000e  ld   $0e
              64a8 00e3  ld   $e3         ;0207 ADDI
              64a9 0032  ld   $32
              64aa 002b  ld   $2b         ;0209 STW
              64ab 0030  ld   $30         ;0209 'i'
              64ac 0011  ld   $11         ;020b LDWI
              64ad 0000  ld   $00
              64ae 0007  ld   $07
              64af 0090  ld   $90         ;020e BRA
              64b0 0013  ld   $13
              64b1 002b  ld   $2b         ;0210 STW
              64b2 0030  ld   $30         ;0210 'i'
              64b3 0011  ld   $11         ;0212 LDWI
              64b4 0000  ld   $00
              64b5 0008  ld   $08
              64b6 002b  ld   $2b         ;0215 STW
              64b7 0032  ld   $32         ;0215 'j'
              64b8 0021  ld   $21         ;0217 LDW
              64b9 0030  ld   $30         ;0217 'i'
              64ba 00e9  ld   $e9         ;0219 LSLW
              64bb 00e9  ld   $e9         ;021a LSLW
              64bc 0099  ld   $99         ;021b ADDW
              64bd 0030  ld   $30         ;021b 'i'
              64be 0099  ld   $99         ;021d ADDW
              64bf 0032  ld   $32         ;021d 'j'
              64c0 002b  ld   $2b         ;021f STW
              64c1 0032  ld   $32         ;021f 'j'
              64c2 0021  ld   $21         ;0221 LDW
              64c3 0034  ld   $34         ;0221 'Pos'
              64c4 002b  ld   $2b         ;0223 STW
              64c5 0028  ld   $28
              64c6 00e3  ld   $e3         ;0225 ADDI
              64c7 0006  ld   $06
              64c8 002b  ld   $2b         ;0227 STW
              64c9 0034  ld   $34         ;0227 'Pos'
              64ca 0059  ld   $59         ;0229 LDI
              64cb 0005  ld   $05
              64cc 002b  ld   $2b         ;022b STW
              64cd 0030  ld   $30         ;022b 'i'
              64ce 0021  ld   $21         ;022d LDW
              64cf 0032  ld   $32         ;022d 'j'
              64d0 007f  ld   $7f         ;022f LUP
              64d1 0000  ld   $00
              64d2 005e  ld   $5e         ;0231 ST
              64d3 0026  ld   $26
              64d4 00b4  ld   $b4         ;0233 SYS
              64d5 00cc  ld   $cc
              64d6 0093  ld   $93         ;0235 INC
              64d7 0032  ld   $32         ;0235 'j'
              64d8 0093  ld   $93         ;0237 INC
              64d9 0028  ld   $28
              64da 0021  ld   $21         ;0239 LDW
              64db 0030  ld   $30         ;0239 'i'
              64dc 00e6  ld   $e6         ;023b SUBI
              64dd 0001  ld   $01
              64de 0035  ld   $35         ;023d BCC
              64df 004d  ld   $4d         ;023e GT
              64e0 0029  ld   $29
              64e1 005e  ld   $5e         ;0240 ST
              64e2 0026  ld   $26
              64e3 00b4  ld   $b4         ;0242 SYS
              64e4 00cc  ld   $cc
              64e5 00ff  ld   $ff         ;0244 RET
              64e6 002b  ld   $2b         ;0245 STW
              64e7 0036  ld   $36         ;0245 'PrintChar'
              64e8 0011  ld   $11         ;0247 LDWI
              64e9 00e1  ld   $e1
              64ea 0004  ld   $04
              64eb 002b  ld   $2b         ;024a STW
              64ec 0022  ld   $22         ;024a '_sysFn'
              64ed 0011  ld   $11         ;024c LDWI
              64ee 0020  ld   $20
              64ef 000f  ld   $0f
              64f0 002b  ld   $2b         ;024f STW
              64f1 0024  ld   $24         ;024f '_sysArgs0'
              64f2 0011  ld   $11         ;0251 LDWI
              64f3 0006  ld   $06
              64f4 0050  ld   $50
              64f5 002b  ld   $2b         ;0254 STW
              64f6 0034  ld   $34         ;0254 'Pos'
              64f7 00cd  ld   $cd         ;0256 DEF
              64f8 0065  ld   $65
              64f9 0020  ld   $20         ;0258 ' '
              64fa 0052  ld   $52         ;0259 'R'
              64fb fe00  bra  ac          ;+-----------------------------------+
              64fc fcfd  bra  $64fd       ;|                                   |
              64fd 1418  ld   $18,y       ;| Trampoline for page $6400 lookups |
              64fe e006  jmp  y,$06       ;|                                   |
              64ff c218  st   [$18]       ;+-----------------------------------+
              6500 0065  ld   $65         ;025a 'e'
              6501 0061  ld   $61         ;025b 'a'
              6502 0064  ld   $64         ;025c 'd'
              6503 0079  ld   $79         ;025d 'y'
              6504 0020  ld   $20         ;025e ' '
              6505 0074  ld   $74         ;025f 't'
              6506 006f  ld   $6f         ;0260 'o'
              6507 0020  ld   $20         ;0261 ' '
              6508 006c  ld   $6c         ;0262 'l'
              6509 006f  ld   $6f         ;0263 'o'
              650a 0061  ld   $61         ;0264 'a'
              650b 0064  ld   $64         ;0265 'd'
              650c 0000  ld   $00         ;0266 0
              650d 002b  ld   $2b         ;0267 STW
              650e 0038  ld   $38         ;0267 'Text'
              650f 0021  ld   $21         ;0269 LDW
              6510 0038  ld   $38         ;0269 'Text'
              6511 00ad  ld   $ad         ;026b PEEK
              6512 0035  ld   $35         ;026c BCC
              6513 003f  ld   $3f         ;026d EQ
              6514 0073  ld   $73
              6515 0093  ld   $93         ;026f INC
              6516 0038  ld   $38         ;026f 'Text'
              6517 00cf  ld   $cf         ;0271 CALL
              6518 0036  ld   $36         ;0271 'PrintChar'
              6519 0090  ld   $90         ;0273 BRA
              651a 0067  ld   $67
              651b 005e  ld   $5e         ;0275 ST
              651c 0028  ld   $28
              651d 0011  ld   $11         ;0277 LDWI
              651e 000c  ld   $0c
              651f 0059  ld   $59
              6520 002b  ld   $2b         ;027a STW
              6521 003a  ld   $3a         ;027a 'A'
              6522 0011  ld   $11         ;027c LDWI
              6523 000c  ld   $0c
              6524 005b  ld   $5b
              6525 002b  ld   $2b         ;027f STW
              6526 003c  ld   $3c         ;027f 'B'
              6527 0059  ld   $59         ;0281 LDI
              6528 0067  ld   $67
              6529 005e  ld   $5e         ;0283 ST
              652a 0026  ld   $26
              652b 0011  ld   $11         ;0285 LDWI
              652c 0000  ld   $00
              652d 0040  ld   $40
              652e 002b  ld   $2b         ;0288 STW
              652f 003e  ld   $3e         ;0288 'NextByteIn_32'
              6530 0011  ld   $11         ;028a LDWI
              6531 0053  ld   $53
              6532 0040  ld   $40
              6533 002b  ld   $2b         ;028d STW
              6534 0040  ld   $40         ;028d 'PayloadCopy_34'
              6535 0011  ld   $11         ;028f LDWI
              6536 000c  ld   $0c
              6537 005a  ld   $5a
              6538 002b  ld   $2b         ;0292 STW
              6539 001a  ld   $1a         ;0292 '_vLR'
              653a 00ff  ld   $ff         ;0294 RET
              653b 005a  ld   $5a         ;| RAM segment address (high byte first)
              653c 000c  ld   $0c         ;|
              653d 0075  ld   $75         ;| Length (1..256)
              653e 0021  ld   $21         ;5a0c LDW
              653f 003c  ld   $3c         ;5a0c 'B'
              6540 002b  ld   $2b         ;5a0e STW
              6541 0024  ld   $24         ;5a0e '_sysArgs0'
              6542 0059  ld   $59         ;5a10 LDI
              6543 00cf  ld   $cf
              6544 005e  ld   $5e         ;5a12 ST
              6545 0027  ld   $27
              6546 0021  ld   $21         ;5a14 LDW
              6547 003e  ld   $3e         ;5a14 'NextByteIn_32'
              6548 002b  ld   $2b         ;5a16 STW
              6549 0022  ld   $22         ;5a16 '_sysFn'
              654a 00b4  ld   $b4         ;5a18 SYS
              654b 00ff  ld   $ff
              654c 0059  ld   $59         ;5a1a LDI
              654d 00db  ld   $db
              654e 005e  ld   $5e         ;5a1c ST
              654f 0027  ld   $27
              6550 00b4  ld   $b4         ;5a1e SYS
              6551 00ff  ld   $ff
              6552 0059  ld   $59         ;5a20 LDI
              6553 00eb  ld   $eb
              6554 005e  ld   $5e         ;5a22 ST
              6555 0027  ld   $27
              6556 00b4  ld   $b4         ;5a24 SYS
              6557 00ff  ld   $ff
              6558 0059  ld   $59         ;5a26 LDI
              6559 00fb  ld   $fb
              655a 005e  ld   $5e         ;5a28 ST
              655b 0027  ld   $27
              655c 00b4  ld   $b4         ;5a2a SYS
              655d 00ff  ld   $ff
              655e 0021  ld   $21         ;5a2c LDW
              655f 0040  ld   $40         ;5a2c 'PayloadCopy_34'
              6560 002b  ld   $2b         ;5a2e STW
              6561 0022  ld   $22         ;5a2e '_sysFn'
              6562 00b4  ld   $b4         ;5a30 SYS
              6563 00fe  ld   $fe
              6564 0059  ld   $59         ;5a32 LDI
              6565 0002  ld   $02
              6566 005e  ld   $5e         ;5a34 ST
              6567 0027  ld   $27
              6568 0021  ld   $21         ;5a36 LDW
              6569 003e  ld   $3e         ;5a36 'NextByteIn_32'
              656a 002b  ld   $2b         ;5a38 STW
              656b 0022  ld   $22         ;5a38 '_sysFn'
              656c 00b4  ld   $b4         ;5a3a SYS
              656d 00ff  ld   $ff
              656e 0059  ld   $59         ;5a3c LDI
              656f 0006  ld   $06
              6570 005e  ld   $5e         ;5a3e ST
              6571 0027  ld   $27
              6572 0021  ld   $21         ;5a40 LDW
              6573 0040  ld   $40         ;5a40 'PayloadCopy_34'
              6574 002b  ld   $2b         ;5a42 STW
              6575 0022  ld   $22         ;5a42 '_sysFn'
              6576 00b4  ld   $b4         ;5a44 SYS
              6577 00fe  ld   $fe
              6578 0021  ld   $21         ;5a46 LDW
              6579 003e  ld   $3e         ;5a46 'NextByteIn_32'
              657a 002b  ld   $2b         ;5a48 STW
              657b 0022  ld   $22         ;5a48 '_sysFn'
              657c 00b4  ld   $b4         ;5a4a SYS
              657d 00ff  ld   $ff
              657e 001a  ld   $1a         ;5a4c LD
              657f 0027  ld   $27
              6580 00e3  ld   $e3         ;5a4e ADDI
              6581 0004  ld   $04
              6582 005e  ld   $5e         ;5a50 ST
              6583 0027  ld   $27
              6584 008c  ld   $8c         ;5a52 XORI
              6585 00f2  ld   $f2
              6586 0035  ld   $35         ;5a54 BCC
              6587 0072  ld   $72         ;5a55 NE
              6588 003e  ld   $3e
              6589 0059  ld   $59         ;5a57 LDI
              658a 00b9  ld   $b9
              658b 005e  ld   $5e         ;5a59 ST
              658c 0027  ld   $27
              658d 00b4  ld   $b4         ;5a5b SYS
              658e 00ff  ld   $ff
              658f 001a  ld   $1a         ;5a5d LD
              6590 0026  ld   $26
              6591 0035  ld   $35         ;5a5f BCC
              6592 0072  ld   $72         ;5a60 NE
              6593 0064  ld   $64
              6594 0059  ld   $59         ;5a62 LDI
              6595 000c  ld   $0c
              6596 0090  ld   $90         ;5a64 BRA
              6597 0066  ld   $66
              6598 0059  ld   $59         ;5a66 LDI
              6599 0003  ld   $03
              659a 00f0  ld   $f0         ;5a68 POKE
              659b 003a  ld   $3a         ;5a68 'A'
              659c 001a  ld   $1a         ;5a6a LD
              659d 003a  ld   $3a         ;5a6a 'A'
              659e 00e6  ld   $e6         ;5a6c SUBI
              659f 000b  ld   $0b
              65a0 0082  ld   $82         ;5a6e ANDI
              65a1 007f  ld   $7f
              65a2 00e3  ld   $e3         ;5a70 ADDI
              65a3 000c  ld   $0c
              65a4 005e  ld   $5e         ;5a72 ST
              65a5 003a  ld   $3a         ;5a72 'A'
              65a6 0059  ld   $59         ;5a74 LDI
              65a7 003f  ld   $3f
              65a8 00f0  ld   $f0         ;5a76 POKE
              65a9 003a  ld   $3a         ;5a76 'A'
              65aa 0011  ld   $11         ;5a78 LDWI
              65ab 0015  ld   $15
              65ac 0040  ld   $40
              65ad 002b  ld   $2b         ;5a7b STW
              65ae 0022  ld   $22         ;5a7b '_sysFn'
              65af 00b4  ld   $b4         ;5a7d SYS
              65b0 00ef  ld   $ef
              65b1 0090  ld   $90         ;5a7f BRA
              65b2 000a  ld   $0a
              65b3 0000  ld   $00         ;End of Apps/Loader/Loader_v4.gcl, size 278
                                          ;+-----------------------------------+
                                          ;| Apps/Credits/Credits_v3.gcl       |
                                          ;+-----------------------------------+
              65b4 dc4c  st   $4c,[y,x++] ;'L'
              65b5 dc6f  st   $6f,[y,x++] ;'o'
              65b6 dc61  st   $61,[y,x++] ;'a'
              65b7 dc64  st   $64,[y,x++] ;'d'
              65b8 dc65  st   $65,[y,x++] ;'e'
              65b9 dc72  st   $72,[y,x++] ;'r'
              65ba dc00  st   $00,[y,x++] ;'\x00'
              65bb dc00  st   $00,[y,x++] ;'\x00'
              65bc 009e  ld   $9e
              65bd c218  st   [$18]
              65be 0064  ld   $64
              65bf 14df  ld   $df,y
              65c0 e0ac  jmp  y,$ac
              65c1 c219  st   [$19]
Credits:      65c2 0002  ld   $02         ;| RAM segment address (high byte first)
              65c3 0000  ld   $00         ;|
              65c4 00d4  ld   $d4         ;| Length (1..256)
              65c5 00cd  ld   $cd         ;0200 DEF
              65c6 0025  ld   $25
              65c7 0075  ld   $75         ;0202 PUSH
              65c8 0021  ld   $21         ;0203 LDW
              65c9 0030  ld   $30         ;0203 'Text'
              65ca 00ad  ld   $ad         ;0205 PEEK
              65cb 002b  ld   $2b         ;0206 STW
              65cc 0032  ld   $32         ;0206 'Char'
              65cd 0035  ld   $35         ;0208 BCC
              65ce 003f  ld   $3f         ;0209 EQ
              65cf 0023  ld   $23
              65d0 0093  ld   $93         ;020b INC
              65d1 0030  ld   $30         ;020b 'Text'
              65d2 0021  ld   $21         ;020d LDW
              65d3 0032  ld   $32         ;020d 'Char'
              65d4 008c  ld   $8c         ;020f XORI
              65d5 000a  ld   $0a
              65d6 0035  ld   $35         ;0211 BCC
              65d7 0072  ld   $72         ;0212 NE
              65d8 001f  ld   $1f
              65d9 0059  ld   $59         ;0214 LDI
              65da 0002  ld   $02
              65db 005e  ld   $5e         ;0216 ST
              65dc 0034  ld   $34         ;0216 'Pos'
              65dd 0011  ld   $11         ;0218 LDWI
              65de 0000  ld   $00
              65df 0008  ld   $08
              65e0 0099  ld   $99         ;021b ADDW
              65e1 0034  ld   $34         ;021b 'Pos'
              65e2 002b  ld   $2b         ;021d STW
              65e3 0034  ld   $34         ;021d 'Pos'
              65e4 0090  ld   $90         ;021f BRA
              65e5 0021  ld   $21
              65e6 00cf  ld   $cf         ;0221 CALL
              65e7 0036  ld   $36         ;0221 'PrintChar'
              65e8 0090  ld   $90         ;0223 BRA
              65e9 0001  ld   $01
              65ea 0063  ld   $63         ;0225 POP
              65eb 00ff  ld   $ff         ;0226 RET
              65ec 002b  ld   $2b         ;0227 STW
              65ed 0038  ld   $38         ;0227 'PrintText'
              65ee 00cd  ld   $cd         ;0229 DEF
              65ef 00cd  ld   $cd
              65f0 0054  ld   $54         ;022b 'T'
              65f1 0068  ld   $68         ;022c 'h'
              65f2 0069  ld   $69         ;022d 'i'
              65f3 0073  ld   $73         ;022e 's'
              65f4 0020  ld   $20         ;022f ' '
              65f5 0047  ld   $47         ;0230 'G'
              65f6 0069  ld   $69         ;0231 'i'
              65f7 0067  ld   $67         ;0232 'g'
              65f8 0061  ld   $61         ;0233 'a'
              65f9 0074  ld   $74         ;0234 't'
              65fa 0072  ld   $72         ;0235 'r'
              65fb fe00  bra  ac          ;+-----------------------------------+
              65fc fcfd  bra  $65fd       ;|                                   |
              65fd 1418  ld   $18,y       ;| Trampoline for page $6500 lookups |
              65fe e006  jmp  y,$06       ;|                                   |
              65ff c218  st   [$18]       ;+-----------------------------------+
              6600 006f  ld   $6f         ;0236 'o'
              6601 006e  ld   $6e         ;0237 'n'
              6602 0020  ld   $20         ;0238 ' '
              6603 0054  ld   $54         ;0239 'T'
              6604 0054  ld   $54         ;023a 'T'
              6605 004c  ld   $4c         ;023b 'L'
              6606 0020  ld   $20         ;023c ' '
              6607 0063  ld   $63         ;023d 'c'
              6608 006f  ld   $6f         ;023e 'o'
              6609 006d  ld   $6d         ;023f 'm'
              660a 0070  ld   $70         ;0240 'p'
              660b 0075  ld   $75         ;0241 'u'
              660c 0074  ld   $74         ;0242 't'
              660d 0065  ld   $65         ;0243 'e'
              660e 0072  ld   $72         ;0244 'r'
              660f 000a  ld   $0a         ;0245 10
              6610 006b  ld   $6b         ;0246 'k'
              6611 0069  ld   $69         ;0247 'i'
              6612 0074  ld   $74         ;0248 't'
              6613 0020  ld   $20         ;0249 ' '
              6614 0077  ld   $77         ;024a 'w'
              6615 0061  ld   $61         ;024b 'a'
              6616 0073  ld   $73         ;024c 's'
              6617 0020  ld   $20         ;024d ' '
              6618 0062  ld   $62         ;024e 'b'
              6619 0072  ld   $72         ;024f 'r'
              661a 006f  ld   $6f         ;0250 'o'
              661b 0075  ld   $75         ;0251 'u'
              661c 0067  ld   $67         ;0252 'g'
              661d 0068  ld   $68         ;0253 'h'
              661e 0074  ld   $74         ;0254 't'
              661f 0020  ld   $20         ;0255 ' '
              6620 0074  ld   $74         ;0256 't'
              6621 006f  ld   $6f         ;0257 'o'
              6622 0020  ld   $20         ;0258 ' '
              6623 0079  ld   $79         ;0259 'y'
              6624 006f  ld   $6f         ;025a 'o'
              6625 0075  ld   $75         ;025b 'u'
              6626 0020  ld   $20         ;025c ' '
              6627 0062  ld   $62         ;025d 'b'
              6628 0079  ld   $79         ;025e 'y'
              6629 000a  ld   $0a         ;025f 10
              662a 004d  ld   $4d         ;0260 'M'
              662b 0061  ld   $61         ;0261 'a'
              662c 0072  ld   $72         ;0262 'r'
              662d 0063  ld   $63         ;0263 'c'
              662e 0065  ld   $65         ;0264 'e'
              662f 006c  ld   $6c         ;0265 'l'
              6630 0020  ld   $20         ;0266 ' '
              6631 0076  ld   $76         ;0267 'v'
              6632 0061  ld   $61         ;0268 'a'
              6633 006e  ld   $6e         ;0269 'n'
              6634 0020  ld   $20         ;026a ' '
              6635 004b  ld   $4b         ;026b 'K'
              6636 0065  ld   $65         ;026c 'e'
              6637 0072  ld   $72         ;026d 'r'
              6638 0076  ld   $76         ;026e 'v'
              6639 0069  ld   $69         ;026f 'i'
              663a 006e  ld   $6e         ;0270 'n'
              663b 0063  ld   $63         ;0271 'c'
              663c 006b  ld   $6b         ;0272 'k'
              663d 0020  ld   $20         ;0273 ' '
              663e 0061  ld   $61         ;0274 'a'
              663f 006e  ld   $6e         ;0275 'n'
              6640 0064  ld   $64         ;0276 'd'
              6641 000a  ld   $0a         ;0277 10
              6642 0057  ld   $57         ;0278 'W'
              6643 0061  ld   $61         ;0279 'a'
              6644 006c  ld   $6c         ;027a 'l'
              6645 0074  ld   $74         ;027b 't'
              6646 0065  ld   $65         ;027c 'e'
              6647 0072  ld   $72         ;027d 'r'
              6648 0020  ld   $20         ;027e ' '
              6649 0042  ld   $42         ;027f 'B'
              664a 0065  ld   $65         ;0280 'e'
              664b 006c  ld   $6c         ;0281 'l'
              664c 0067  ld   $67         ;0282 'g'
              664d 0065  ld   $65         ;0283 'e'
              664e 0072  ld   $72         ;0284 'r'
              664f 0073  ld   $73         ;0285 's'
              6650 002e  ld   $2e         ;0286 '.'
              6651 000a  ld   $0a         ;0287 10
              6652 000a  ld   $0a         ;0288 10
              6653 0060  ld   $60         ;0289 '`'
              6654 0054  ld   $54         ;028a 'T'
              6655 0065  ld   $65         ;028b 'e'
              6656 0074  ld   $74         ;028c 't'
              6657 0072  ld   $72         ;028d 'r'
              6658 006f  ld   $6f         ;028e 'o'
              6659 006e  ld   $6e         ;028f 'n'
              665a 0069  ld   $69         ;0290 'i'
              665b 0073  ld   $73         ;0291 's'
              665c 0027  ld   $27         ;0292 "'"
              665d 0020  ld   $20         ;0293 ' '
              665e 0069  ld   $69         ;0294 'i'
              665f 0073  ld   $73         ;0295 's'
              6660 0020  ld   $20         ;0296 ' '
              6661 0062  ld   $62         ;0297 'b'
              6662 0079  ld   $79         ;0298 'y'
              6663 0020  ld   $20         ;0299 ' '
              6664 0061  ld   $61         ;029a 'a'
              6665 0074  ld   $74         ;029b 't'
              6666 0036  ld   $36         ;029c '6'
              6667 0037  ld   $37         ;029d '7'
              6668 0020  ld   $20         ;029e ' '
              6669 0061  ld   $61         ;029f 'a'
              666a 006e  ld   $6e         ;02a0 'n'
              666b 0064  ld   $64         ;02a1 'd'
              666c 000a  ld   $0a         ;02a2 10
              666d 0060  ld   $60         ;02a3 '`'
              666e 0042  ld   $42         ;02a4 'B'
              666f 0072  ld   $72         ;02a5 'r'
              6670 0069  ld   $69         ;02a6 'i'
              6671 0063  ld   $63         ;02a7 'c'
              6672 006b  ld   $6b         ;02a8 'k'
              6673 0073  ld   $73         ;02a9 's'
              6674 0027  ld   $27         ;02aa "'"
              6675 0020  ld   $20         ;02ab ' '
              6676 0062  ld   $62         ;02ac 'b'
              6677 0079  ld   $79         ;02ad 'y'
              6678 0020  ld   $20         ;02ae ' '
              6679 0078  ld   $78         ;02af 'x'
              667a 0062  ld   $62         ;02b0 'b'
              667b 0078  ld   $78         ;02b1 'x'
              667c 002e  ld   $2e         ;02b2 '.'
              667d 000a  ld   $0a         ;02b3 10
              667e 000a  ld   $0a         ;02b4 10
              667f 0053  ld   $53         ;02b5 'S'
              6680 0070  ld   $70         ;02b6 'p'
              6681 0065  ld   $65         ;02b7 'e'
              6682 0063  ld   $63         ;02b8 'c'
              6683 0069  ld   $69         ;02b9 'i'
              6684 0061  ld   $61         ;02ba 'a'
              6685 006c  ld   $6c         ;02bb 'l'
              6686 0020  ld   $20         ;02bc ' '
              6687 0074  ld   $74         ;02bd 't'
              6688 0068  ld   $68         ;02be 'h'
              6689 0061  ld   $61         ;02bf 'a'
              668a 006e  ld   $6e         ;02c0 'n'
              668b 006b  ld   $6b         ;02c1 'k'
              668c 0073  ld   $73         ;02c2 's'
              668d 0020  ld   $20         ;02c3 ' '
              668e 006d  ld   $6d         ;02c4 'm'
              668f 0075  ld   $75         ;02c5 'u'
              6690 0073  ld   $73         ;02c6 's'
              6691 0074  ld   $74         ;02c7 't'
              6692 0020  ld   $20         ;02c8 ' '
              6693 0067  ld   $67         ;02c9 'g'
              6694 006f  ld   $6f         ;02ca 'o'
              6695 0020  ld   $20         ;02cb ' '
              6696 0074  ld   $74         ;02cc 't'
              6697 006f  ld   $6f         ;02cd 'o'
              6698 0000  ld   $00         ;02ce 0
              6699 002b  ld   $2b         ;02cf STW
              669a 003a  ld   $3a         ;02cf 'Part1'
              669b 0093  ld   $93         ;02d1 INC
              669c 001b  ld   $1b
              669d 00ff  ld   $ff         ;02d3 RET
              669e 0003  ld   $03         ;| RAM segment address (high byte first)
              669f 0000  ld   $00         ;|
              66a0 00e8  ld   $e8         ;| Length (1..256)
              66a1 00cd  ld   $cd         ;0300 DEF
              66a2 0098  ld   $98
              66a3 000a  ld   $0a         ;0302 10
              66a4 004d  ld   $4d         ;0303 'M'
              66a5 0061  ld   $61         ;0304 'a'
              66a6 0072  ld   $72         ;0305 'r'
              66a7 0063  ld   $63         ;0306 'c'
              66a8 002c  ld   $2c         ;0307 ','
              66a9 0020  ld   $20         ;0308 ' '
              66aa 0050  ld   $50         ;0309 'P'
              66ab 0061  ld   $61         ;030a 'a'
              66ac 0075  ld   $75         ;030b 'u'
              66ad 006c  ld   $6c         ;030c 'l'
              66ae 002c  ld   $2c         ;030d ','
              66af 0020  ld   $20         ;030e ' '
              66b0 0049  ld   $49         ;030f 'I'
              66b1 0076  ld   $76         ;0310 'v'
              66b2 0061  ld   $61         ;0311 'a'
              66b3 006e  ld   $6e         ;0312 'n'
              66b4 0061  ld   $61         ;0313 'a'
              66b5 002c  ld   $2c         ;0314 ','
              66b6 0020  ld   $20         ;0315 ' '
              66b7 004f  ld   $4f         ;0316 'O'
              66b8 0073  ld   $73         ;0317 's'
              66b9 0063  ld   $63         ;0318 'c'
              66ba 0061  ld   $61         ;0319 'a'
              66bb 0072  ld   $72         ;031a 'r'
              66bc 002c  ld   $2c         ;031b ','
              66bd 000a  ld   $0a         ;031c 10
              66be 004d  ld   $4d         ;031d 'M'
              66bf 0061  ld   $61         ;031e 'a'
              66c0 0072  ld   $72         ;031f 'r'
              66c1 0074  ld   $74         ;0320 't'
              66c2 0069  ld   $69         ;0321 'i'
              66c3 006a  ld   $6a         ;0322 'j'
              66c4 006e  ld   $6e         ;0323 'n'
              66c5 002c  ld   $2c         ;0324 ','
              66c6 0020  ld   $20         ;0325 ' '
              66c7 0045  ld   $45         ;0326 'E'
              66c8 0072  ld   $72         ;0327 'r'
              66c9 0069  ld   $69         ;0328 'i'
              66ca 006b  ld   $6b         ;0329 'k'
              66cb 002c  ld   $2c         ;032a ','
              66cc 0020  ld   $20         ;032b ' '
              66cd 0043  ld   $43         ;032c 'C'
              66ce 0068  ld   $68         ;032d 'h'
              66cf 0075  ld   $75         ;032e 'u'
              66d0 0063  ld   $63         ;032f 'c'
              66d1 006b  ld   $6b         ;0330 'k'
              66d2 002c  ld   $2c         ;0331 ','
              66d3 0020  ld   $20         ;0332 ' '
              66d4 0042  ld   $42         ;0333 'B'
              66d5 0065  ld   $65         ;0334 'e'
              66d6 006e  ld   $6e         ;0335 'n'
              66d7 002c  ld   $2c         ;0336 ','
              66d8 000a  ld   $0a         ;0337 10
              66d9 0044  ld   $44         ;0338 'D'
              66da 0069  ld   $69         ;0339 'i'
              66db 0065  ld   $65         ;033a 'e'
              66dc 0074  ld   $74         ;033b 't'
              66dd 0065  ld   $65         ;033c 'e'
              66de 0072  ld   $72         ;033d 'r'
              66df 002c  ld   $2c         ;033e ','
              66e0 0020  ld   $20         ;033f ' '
              66e1 004d  ld   $4d         ;0340 'M'
              66e2 0061  ld   $61         ;0341 'a'
              66e3 0072  ld   $72         ;0342 'r'
              66e4 0074  ld   $74         ;0343 't'
              66e5 0069  ld   $69         ;0344 'i'
              66e6 006e  ld   $6e         ;0345 'n'
              66e7 002c  ld   $2c         ;0346 ','
              66e8 0020  ld   $20         ;0347 ' '
              66e9 0042  ld   $42         ;0348 'B'
              66ea 0072  ld   $72         ;0349 'r'
              66eb 0061  ld   $61         ;034a 'a'
              66ec 0064  ld   $64         ;034b 'd'
              66ed 002c  ld   $2c         ;034c ','
              66ee 0020  ld   $20         ;034d ' '
              66ef 004c  ld   $4c         ;034e 'L'
              66f0 006f  ld   $6f         ;034f 'o'
              66f1 0075  ld   $75         ;0350 'u'
              66f2 002c  ld   $2c         ;0351 ','
              66f3 000a  ld   $0a         ;0352 10
              66f4 0050  ld   $50         ;0353 'P'
              66f5 0068  ld   $68         ;0354 'h'
              66f6 0069  ld   $69         ;0355 'i'
              66f7 006c  ld   $6c         ;0356 'l'
              66f8 002c  ld   $2c         ;0357 ','
              66f9 0020  ld   $20         ;0358 ' '
              66fa 0042  ld   $42         ;0359 'B'
              66fb fe00  bra  ac          ;+-----------------------------------+
              66fc fcfd  bra  $66fd       ;|                                   |
              66fd 1418  ld   $18,y       ;| Trampoline for page $6600 lookups |
              66fe e006  jmp  y,$06       ;|                                   |
              66ff c218  st   [$18]       ;+-----------------------------------+
              6700 0072  ld   $72         ;035a 'r'
              6701 0069  ld   $69         ;035b 'i'
              6702 0061  ld   $61         ;035c 'a'
              6703 006e  ld   $6e         ;035d 'n'
              6704 002c  ld   $2c         ;035e ','
              6705 0020  ld   $20         ;035f ' '
              6706 0044  ld   $44         ;0360 'D'
              6707 0061  ld   $61         ;0361 'a'
              6708 0076  ld   $76         ;0362 'v'
              6709 0069  ld   $69         ;0363 'i'
              670a 0064  ld   $64         ;0364 'd'
              670b 002c  ld   $2c         ;0365 ','
              670c 0020  ld   $20         ;0366 ' '
              670d 0044  ld   $44         ;0367 'D'
              670e 0061  ld   $61         ;0368 'a'
              670f 0076  ld   $76         ;0369 'v'
              6710 0065  ld   $65         ;036a 'e'
              6711 002c  ld   $2c         ;036b ','
              6712 000a  ld   $0a         ;036c 10
              6713 0048  ld   $48         ;036d 'H'
              6714 0047  ld   $47         ;036e 'G'
              6715 0020  ld   $20         ;036f ' '
              6716 0061  ld   $61         ;0370 'a'
              6717 006e  ld   $6e         ;0371 'n'
              6718 0064  ld   $64         ;0372 'd'
              6719 0020  ld   $20         ;0373 ' '
              671a 0061  ld   $61         ;0374 'a'
              671b 006c  ld   $6c         ;0375 'l'
              671c 006c  ld   $6c         ;0376 'l'
              671d 0020  ld   $20         ;0377 ' '
              671e 0066  ld   $66         ;0378 'f'
              671f 0061  ld   $61         ;0379 'a'
              6720 006e  ld   $6e         ;037a 'n'
              6721 0073  ld   $73         ;037b 's'
              6722 0021  ld   $21         ;037c '!'
              6723 000a  ld   $0a         ;037d 10
              6724 0020  ld   $20         ;037e ' '
              6725 0020  ld   $20         ;037f ' '
              6726 0020  ld   $20         ;0380 ' '
              6727 0020  ld   $20         ;0381 ' '
              6728 0020  ld   $20         ;0382 ' '
              6729 0020  ld   $20         ;0383 ' '
              672a 0020  ld   $20         ;0384 ' '
              672b 0020  ld   $20         ;0385 ' '
              672c 0020  ld   $20         ;0386 ' '
              672d 0020  ld   $20         ;0387 ' '
              672e 0020  ld   $20         ;0388 ' '
              672f 004d  ld   $4d         ;0389 'M'
              6730 0061  ld   $61         ;038a 'a'
              6731 0072  ld   $72         ;038b 'r'
              6732 0063  ld   $63         ;038c 'c'
              6733 0065  ld   $65         ;038d 'e'
              6734 006c  ld   $6c         ;038e 'l'
              6735 0020  ld   $20         ;038f ' '
              6736 0026  ld   $26         ;0390 '&'
              6737 0020  ld   $20         ;0391 ' '
              6738 0057  ld   $57         ;0392 'W'
              6739 0061  ld   $61         ;0393 'a'
              673a 006c  ld   $6c         ;0394 'l'
              673b 0074  ld   $74         ;0395 't'
              673c 0065  ld   $65         ;0396 'e'
              673d 0072  ld   $72         ;0397 'r'
              673e 000a  ld   $0a         ;0398 10
              673f 0000  ld   $00         ;0399 0
              6740 002b  ld   $2b         ;039a STW
              6741 003c  ld   $3c         ;039a 'Part2'
              6742 00cd  ld   $cd         ;039c DEF
              6743 00cd  ld   $cd
              6744 0011  ld   $11         ;039e LDWI
              6745 0000  ld   $00
              6746 0008  ld   $08
              6747 002b  ld   $2b         ;03a1 STW
              6748 003e  ld   $3e         ;03a1 'p'
              6749 0011  ld   $11         ;03a3 LDWI
              674a 0001  ld   $01
              674b 0088  ld   $88
              674c 002b  ld   $2b         ;03a6 STW
              674d 0040  ld   $40         ;03a6 'i'
              674e 0059  ld   $59         ;03a8 LDI
              674f 0000  ld   $00
              6750 005e  ld   $5e         ;03aa ST
              6751 0024  ld   $24
              6752 005e  ld   $5e         ;03ac ST
              6753 0025  ld   $25
              6754 0011  ld   $11         ;03ae LDWI
              6755 00e1  ld   $e1
              6756 0004  ld   $04
              6757 002b  ld   $2b         ;03b1 STW
              6758 0022  ld   $22
              6759 0021  ld   $21         ;03b3 LDW
              675a 003e  ld   $3e         ;03b3 'p'
              675b 002b  ld   $2b         ;03b5 STW
              675c 0028  ld   $28
              675d 00b4  ld   $b4         ;03b7 SYS
              675e 00cc  ld   $cc
              675f 0011  ld   $11         ;03b9 LDWI
              6760 0000  ld   $00
              6761 0008  ld   $08
              6762 0099  ld   $99         ;03bc ADDW
              6763 003e  ld   $3e         ;03bc 'p'
              6764 002b  ld   $2b         ;03be STW
              6765 003e  ld   $3e         ;03be 'p'
              6766 0035  ld   $35         ;03c0 BCC
              6767 004d  ld   $4d         ;03c1 GT
              6768 00b3  ld   $b3
              6769 0099  ld   $99         ;03c3 ADDW
              676a 0040  ld   $40         ;03c3 'i'
              676b 002b  ld   $2b         ;03c5 STW
              676c 003e  ld   $3e         ;03c5 'p'
              676d 0082  ld   $82         ;03c7 ANDI
              676e 00ff  ld   $ff
              676f 008c  ld   $8c         ;03c9 XORI
              6770 00a0  ld   $a0
              6771 0035  ld   $35         ;03cb BCC
              6772 0072  ld   $72         ;03cc NE
              6773 00b1  ld   $b1
              6774 00ff  ld   $ff         ;03ce RET
              6775 002b  ld   $2b         ;03cf STW
              6776 0042  ld   $42         ;03cf 'ClearScreen'
              6777 00cd  ld   $cd         ;03d1 DEF
              6778 00e1  ld   $e1
              6779 001a  ld   $1a         ;03d3 LD
              677a 000e  ld   $0e
              677b 0099  ld   $99         ;03d5 ADDW
              677c 0044  ld   $44         ;03d5 'Delay'
              677d 0082  ld   $82         ;03d7 ANDI
              677e 00ff  ld   $ff
              677f 002b  ld   $2b         ;03d9 STW
              6780 0046  ld   $46         ;03d9 'tmp'
              6781 001a  ld   $1a         ;03db LD
              6782 000e  ld   $0e
              6783 00b8  ld   $b8         ;03dd SUBW
              6784 0046  ld   $46         ;03dd 'tmp'
              6785 0035  ld   $35         ;03df BCC
              6786 0072  ld   $72         ;03e0 NE
              6787 00d9  ld   $d9
              6788 00ff  ld   $ff         ;03e2 RET
              6789 002b  ld   $2b         ;03e3 STW
              678a 0048  ld   $48         ;03e3 'Wait'
              678b 0093  ld   $93         ;03e5 INC
              678c 001b  ld   $1b
              678d 00ff  ld   $ff         ;03e7 RET
              678e 0004  ld   $04         ;| RAM segment address (high byte first)
              678f 0000  ld   $00         ;|
              6790 0081  ld   $81         ;| Length (1..256)
              6791 00cd  ld   $cd         ;0400 DEF
              6792 004a  ld   $4a
              6793 0021  ld   $21         ;0402 LDW
              6794 0032  ld   $32         ;0402 'Char'
              6795 00e6  ld   $e6         ;0404 SUBI
              6796 0052  ld   $52
              6797 0035  ld   $35         ;0406 BCC
              6798 0053  ld   $53         ;0407 GE
              6799 0010  ld   $10
              679a 00e3  ld   $e3         ;0409 ADDI
              679b 0032  ld   $32
              679c 002b  ld   $2b         ;040b STW
              679d 0040  ld   $40         ;040b 'i'
              679e 0011  ld   $11         ;040d LDWI
              679f 0000  ld   $00
              67a0 0007  ld   $07
              67a1 0090  ld   $90         ;0410 BRA
              67a2 0015  ld   $15
              67a3 002b  ld   $2b         ;0412 STW
              67a4 0040  ld   $40         ;0412 'i'
              67a5 0011  ld   $11         ;0414 LDWI
              67a6 0000  ld   $00
              67a7 0008  ld   $08
              67a8 002b  ld   $2b         ;0417 STW
              67a9 004a  ld   $4a         ;0417 'fontData'
              67aa 0021  ld   $21         ;0419 LDW
              67ab 0040  ld   $40         ;0419 'i'
              67ac 00e9  ld   $e9         ;041b LSLW
              67ad 00e9  ld   $e9         ;041c LSLW
              67ae 0099  ld   $99         ;041d ADDW
              67af 0040  ld   $40         ;041d 'i'
              67b0 0099  ld   $99         ;041f ADDW
              67b1 004a  ld   $4a         ;041f 'fontData'
              67b2 002b  ld   $2b         ;0421 STW
              67b3 004a  ld   $4a         ;0421 'fontData'
              67b4 0021  ld   $21         ;0423 LDW
              67b5 004c  ld   $4c         ;0423 'Color'
              67b6 005e  ld   $5e         ;0425 ST
              67b7 0025  ld   $25
              67b8 0021  ld   $21         ;0427 LDW
              67b9 0034  ld   $34         ;0427 'Pos'
              67ba 002b  ld   $2b         ;0429 STW
              67bb 0028  ld   $28
              67bc 00e3  ld   $e3         ;042b ADDI
              67bd 0006  ld   $06
              67be 002b  ld   $2b         ;042d STW
              67bf 0034  ld   $34         ;042d 'Pos'
              67c0 0011  ld   $11         ;042f LDWI
              67c1 00e1  ld   $e1
              67c2 0004  ld   $04
              67c3 002b  ld   $2b         ;0432 STW
              67c4 0022  ld   $22
              67c5 0059  ld   $59         ;0434 LDI
              67c6 00fb  ld   $fb
              67c7 002b  ld   $2b         ;0436 STW
              67c8 0040  ld   $40         ;0436 'i'
              67c9 0021  ld   $21         ;0438 LDW
              67ca 004a  ld   $4a         ;0438 'fontData'
              67cb 007f  ld   $7f         ;043a LUP
              67cc 0000  ld   $00
              67cd 0093  ld   $93         ;043c INC
              67ce 004a  ld   $4a         ;043c 'fontData'
              67cf 005e  ld   $5e         ;043e ST
              67d0 0026  ld   $26
              67d1 00b4  ld   $b4         ;0440 SYS
              67d2 00cc  ld   $cc
              67d3 0093  ld   $93         ;0442 INC
              67d4 0028  ld   $28
              67d5 0093  ld   $93         ;0444 INC
              67d6 0040  ld   $40         ;0444 'i'
              67d7 0021  ld   $21         ;0446 LDW
              67d8 0040  ld   $40         ;0446 'i'
              67d9 0035  ld   $35         ;0448 BCC
              67da 0072  ld   $72         ;0449 NE
              67db 0036  ld   $36
              67dc 00ff  ld   $ff         ;044b RET
              67dd 002b  ld   $2b         ;044c STW
              67de 0036  ld   $36         ;044c 'PrintChar'
              67df 0011  ld   $11         ;044e LDWI
              67e0 0002  ld   $02
              67e1 0008  ld   $08
              67e2 002b  ld   $2b         ;0451 STW
              67e3 0034  ld   $34         ;0451 'Pos'
              67e4 00cf  ld   $cf         ;0453 CALL
              67e5 0042  ld   $42         ;0453 'ClearScreen'
              67e6 0059  ld   $59         ;0455 LDI
              67e7 003e  ld   $3e
              67e8 002b  ld   $2b         ;0457 STW
              67e9 004c  ld   $4c         ;0457 'Color'
              67ea 0011  ld   $11         ;0459 LDWI
              67eb 0000  ld   $00
              67ec 0008  ld   $08
              67ed 002b  ld   $2b         ;045c STW
              67ee 0034  ld   $34         ;045c 'Pos'
              67ef 0021  ld   $21         ;045e LDW
              67f0 003a  ld   $3a         ;045e 'Part1'
              67f1 002b  ld   $2b         ;0460 STW
              67f2 0030  ld   $30         ;0460 'Text'
              67f3 00cf  ld   $cf         ;0462 CALL
              67f4 0038  ld   $38         ;0462 'PrintText'
              67f5 0021  ld   $21         ;0464 LDW
              67f6 003c  ld   $3c         ;0464 'Part2'
              67f7 002b  ld   $2b         ;0466 STW
              67f8 0030  ld   $30         ;0466 'Text'
              67f9 00cf  ld   $cf         ;0468 CALL
              67fa 0038  ld   $38         ;0468 'PrintText'
              67fb fe00  bra  ac          ;+-----------------------------------+
              67fc fcfd  bra  $67fd       ;|                                   |
              67fd 1418  ld   $18,y       ;| Trampoline for page $6700 lookups |
              67fe e006  jmp  y,$06       ;|                                   |
              67ff c218  st   [$18]       ;+-----------------------------------+
              6800 0059  ld   $59         ;046a LDI
              6801 00f0  ld   $f0
              6802 002b  ld   $2b         ;046c STW
              6803 0044  ld   $44         ;046c 'Delay'
              6804 00cf  ld   $cf         ;046e CALL
              6805 0048  ld   $48         ;046e 'Wait'
              6806 0021  ld   $21         ;0470 LDW
              6807 004c  ld   $4c         ;0470 'Color'
              6808 008c  ld   $8c         ;0472 XORI
              6809 0008  ld   $08
              680a 0035  ld   $35         ;0474 BCC
              680b 003f  ld   $3f         ;0475 EQ
              680c 007d  ld   $7d
              680d 0021  ld   $21         ;0477 LDW
              680e 004c  ld   $4c         ;0477 'Color'
              680f 00e6  ld   $e6         ;0479 SUBI
              6810 0009  ld   $09
              6811 002b  ld   $2b         ;047b STW
              6812 004c  ld   $4c         ;047b 'Color'
              6813 0090  ld   $90         ;047d BRA
              6814 0057  ld   $57
              6815 0090  ld   $90         ;047f BRA
              6816 0053  ld   $53
              6817 0000  ld   $00         ;End of Apps/Credits/Credits_v3.gcl, size 598
                                          ;+-----------------------------------+
                                          ;| Apps/Snake/Snake_v3.gcl           |
                                          ;+-----------------------------------+
              6818 dc43  st   $43,[y,x++] ;'C'
              6819 dc72  st   $72,[y,x++] ;'r'
              681a dc65  st   $65,[y,x++] ;'e'
              681b dc64  st   $64,[y,x++] ;'d'
              681c dc69  st   $69,[y,x++] ;'i'
              681d dc74  st   $74,[y,x++] ;'t'
              681e dc73  st   $73,[y,x++] ;'s'
              681f dc00  st   $00,[y,x++] ;'\x00'
              6820 00c2  ld   $c2
              6821 c218  st   [$18]
              6822 0065  ld   $65
              6823 14df  ld   $df,y
              6824 e0ac  jmp  y,$ac
              6825 c219  st   [$19]
Snake:        6826 0002  ld   $02         ;| RAM segment address (high byte first)
              6827 0000  ld   $00         ;|
              6828 00e5  ld   $e5         ;| Length (1..256)
              6829 001a  ld   $1a         ;0200 LD
              682a 0021  ld   $21
              682b 00e6  ld   $e6         ;0202 SUBI
              682c 0020  ld   $20
              682d 0035  ld   $35         ;0204 BCC
              682e 0053  ld   $53         ;0205 GE
              682f 000b  ld   $0b
              6830 0021  ld   $21         ;0207 LDW
              6831 000e  ld   $0e         ;0207 '_frameCount'
              6832 00f3  ld   $f3         ;0209 DOKE
              6833 0017  ld   $17         ;0209 '_vPCH'
              6834 0090  ld   $90         ;020b BRA
              6835 0005  ld   $05
              6836 0059  ld   $59         ;020d LDI
              6837 0000  ld   $00
              6838 002b  ld   $2b         ;020f STW
              6839 0030  ld   $30         ;020f 'HighScore'
              683a 00cd  ld   $cd         ;0211 DEF
              683b 005f  ld   $5f
              683c 0021  ld   $21         ;0213 LDW
              683d 0032  ld   $32         ;0213 'Char'
              683e 00e6  ld   $e6         ;0215 SUBI
              683f 0052  ld   $52
              6840 0035  ld   $35         ;0217 BCC
              6841 0053  ld   $53         ;0218 GE
              6842 0021  ld   $21
              6843 00e3  ld   $e3         ;021a ADDI
              6844 0032  ld   $32
              6845 002b  ld   $2b         ;021c STW
              6846 0034  ld   $34         ;021c 'i'
              6847 0011  ld   $11         ;021e LDWI
              6848 0000  ld   $00
              6849 0007  ld   $07
              684a 0090  ld   $90         ;0221 BRA
              684b 0026  ld   $26
              684c 002b  ld   $2b         ;0223 STW
              684d 0034  ld   $34         ;0223 'i'
              684e 0011  ld   $11         ;0225 LDWI
              684f 0000  ld   $00
              6850 0008  ld   $08
              6851 002b  ld   $2b         ;0228 STW
              6852 0036  ld   $36         ;0228 'fontData'
              6853 0021  ld   $21         ;022a LDW
              6854 0034  ld   $34         ;022a 'i'
              6855 00e9  ld   $e9         ;022c LSLW
              6856 00e9  ld   $e9         ;022d LSLW
              6857 0099  ld   $99         ;022e ADDW
              6858 0034  ld   $34         ;022e 'i'
              6859 0099  ld   $99         ;0230 ADDW
              685a 0036  ld   $36         ;0230 'fontData'
              685b 002b  ld   $2b         ;0232 STW
              685c 0036  ld   $36         ;0232 'fontData'
              685d 0021  ld   $21         ;0234 LDW
              685e 0038  ld   $38         ;0234 'BgColor'
              685f 005e  ld   $5e         ;0236 ST
              6860 0024  ld   $24
              6861 0021  ld   $21         ;0238 LDW
              6862 003a  ld   $3a         ;0238 'Color'
              6863 005e  ld   $5e         ;023a ST
              6864 0025  ld   $25
              6865 0021  ld   $21         ;023c LDW
              6866 003c  ld   $3c         ;023c 'Pos'
              6867 002b  ld   $2b         ;023e STW
              6868 0028  ld   $28
              6869 00e3  ld   $e3         ;0240 ADDI
              686a 0006  ld   $06
              686b 002b  ld   $2b         ;0242 STW
              686c 003c  ld   $3c         ;0242 'Pos'
              686d 0011  ld   $11         ;0244 LDWI
              686e 00e1  ld   $e1
              686f 0004  ld   $04
              6870 002b  ld   $2b         ;0247 STW
              6871 0022  ld   $22
              6872 0059  ld   $59         ;0249 LDI
              6873 00fb  ld   $fb
              6874 002b  ld   $2b         ;024b STW
              6875 0034  ld   $34         ;024b 'i'
              6876 0021  ld   $21         ;024d LDW
              6877 0036  ld   $36         ;024d 'fontData'
              6878 007f  ld   $7f         ;024f LUP
              6879 0000  ld   $00
              687a 0093  ld   $93         ;0251 INC
              687b 0036  ld   $36         ;0251 'fontData'
              687c 005e  ld   $5e         ;0253 ST
              687d 0026  ld   $26
              687e 00b4  ld   $b4         ;0255 SYS
              687f 00cc  ld   $cc
              6880 0093  ld   $93         ;0257 INC
              6881 0028  ld   $28
              6882 0093  ld   $93         ;0259 INC
              6883 0034  ld   $34         ;0259 'i'
              6884 0021  ld   $21         ;025b LDW
              6885 0034  ld   $34         ;025b 'i'
              6886 0035  ld   $35         ;025d BCC
              6887 0072  ld   $72         ;025e NE
              6888 004b  ld   $4b
              6889 00ff  ld   $ff         ;0260 RET
              688a 002b  ld   $2b         ;0261 STW
              688b 003e  ld   $3e         ;0261 'PrintChar'
              688c 00cd  ld   $cd         ;0263 DEF
              688d 0076  ld   $76
              688e 0075  ld   $75         ;0265 PUSH
              688f 002b  ld   $2b         ;0266 STW
              6890 0040  ld   $40         ;0266 'Text'
              6891 0021  ld   $21         ;0268 LDW
              6892 0040  ld   $40         ;0268 'Text'
              6893 00ad  ld   $ad         ;026a PEEK
              6894 002b  ld   $2b         ;026b STW
              6895 0032  ld   $32         ;026b 'Char'
              6896 0093  ld   $93         ;026d INC
              6897 0040  ld   $40         ;026d 'Text'
              6898 0035  ld   $35         ;026f BCC
              6899 003f  ld   $3f         ;0270 EQ
              689a 0074  ld   $74
              689b 00cf  ld   $cf         ;0272 CALL
              689c 003e  ld   $3e         ;0272 'PrintChar'
              689d 0090  ld   $90         ;0274 BRA
              689e 0066  ld   $66
              689f 0063  ld   $63         ;0276 POP
              68a0 00ff  ld   $ff         ;0277 RET
              68a1 002b  ld   $2b         ;0278 STW
              68a2 0042  ld   $42         ;0278 'PrintText'
              68a3 00cd  ld   $cd         ;027a DEF
              68a4 0090  ld   $90
              68a5 0035  ld   $35         ;027c BCC
              68a6 0056  ld   $56         ;027d LE
              68a7 008f  ld   $8f
              68a8 002b  ld   $2b         ;027f STW
              68a9 0034  ld   $34         ;027f 'i'
              68aa 0021  ld   $21         ;0281 LDW
              68ab 003a  ld   $3a         ;0281 'Color'
              68ac 00f0  ld   $f0         ;0283 POKE
              68ad 003c  ld   $3c         ;0283 'Pos'
              68ae 0021  ld   $21         ;0285 LDW
              68af 003c  ld   $3c         ;0285 'Pos'
              68b0 0099  ld   $99         ;0287 ADDW
              68b1 0044  ld   $44         ;0287 'Step'
              68b2 002b  ld   $2b         ;0289 STW
              68b3 003c  ld   $3c         ;0289 'Pos'
              68b4 0021  ld   $21         ;028b LDW
              68b5 0034  ld   $34         ;028b 'i'
              68b6 00e6  ld   $e6         ;028d SUBI
              68b7 0001  ld   $01
              68b8 0090  ld   $90         ;028f BRA
              68b9 007a  ld   $7a
              68ba 00ff  ld   $ff         ;0291 RET
              68bb 002b  ld   $2b         ;0292 STW
              68bc 0046  ld   $46         ;0292 'DrawLine'
              68bd 00cd  ld   $cd         ;0294 DEF
              68be 00bc  ld   $bc
              68bf 0075  ld   $75         ;0296 PUSH
              68c0 001a  ld   $1a         ;0297 LD
              68c1 000e  ld   $0e
              68c2 00b8  ld   $b8         ;0299 SUBW
              68c3 0048  ld   $48         ;0299 'TimeOut'
              68c4 0082  ld   $82         ;029b ANDI
              68c5 0080  ld   $80
              68c6 0035  ld   $35         ;029d BCC
              68c7 0072  ld   $72         ;029e NE
              68c8 00a9  ld   $a9
              68c9 0021  ld   $21         ;02a0 LDW
              68ca 004a  ld   $4a         ;02a0 'Timer'
              68cb 0035  ld   $35         ;02a2 BCC
              68cc 0056  ld   $56         ;02a3 LE
              68cd 00a7  ld   $a7
              68ce 00e6  ld   $e6         ;02a5 SUBI
              68cf 0001  ld   $01
              68d0 002b  ld   $2b         ;02a7 STW
              68d1 004a  ld   $4a         ;02a7 'Timer'
              68d2 00cf  ld   $cf         ;02a9 CALL
              68d3 004c  ld   $4c         ;02a9 'DrawTimer'
              68d4 001a  ld   $1a         ;02ab LD
              68d5 0011  ld   $11
              68d6 0082  ld   $82         ;02ad ANDI
              68d7 0080  ld   $80
              68d8 0035  ld   $35         ;02af BCC
              68d9 0072  ld   $72         ;02b0 NE
              68da 00b4  ld   $b4
              68db 00e6  ld   $e6         ;02b2 SUBI
              68dc 0001  ld   $01
              68dd 0090  ld   $90         ;02b4 BRA
              68de 00b6  ld   $b6
              68df 0059  ld   $59         ;02b6 LDI
              68e0 0000  ld   $00
              68e1 0099  ld   $99         ;02b8 ADDW
              68e2 004e  ld   $4e         ;02b8 'Delay'
              68e3 00cf  ld   $cf         ;02ba CALL
              68e4 0050  ld   $50         ;02ba 'Wait'
              68e5 0063  ld   $63         ;02bc POP
              68e6 00ff  ld   $ff         ;02bd RET
              68e7 002b  ld   $2b         ;02be STW
              68e8 0052  ld   $52         ;02be 'TimeStep'
              68e9 00cd  ld   $cd         ;02c0 DEF
              68ea 00de  ld   $de
              68eb 0075  ld   $75         ;02c2 PUSH
              68ec 0011  ld   $11         ;02c3 LDWI
              68ed 0020  ld   $20
              68ee 0008  ld   $08
              68ef 002b  ld   $2b         ;02c6 STW
              68f0 003c  ld   $3c         ;02c6 'Pos'
              68f1 0059  ld   $59         ;02c8 LDI
              68f2 0008  ld   $08
              68f3 002b  ld   $2b         ;02ca STW
              68f4 003a  ld   $3a         ;02ca 'Color'
              68f5 0059  ld   $59         ;02cc LDI
              68f6 0000  ld   $00
              68f7 002b  ld   $2b         ;02ce STW
              68f8 0038  ld   $38         ;02ce 'BgColor'
              68f9 0021  ld   $21         ;02d0 LDW
              68fa 004a  ld   $4a         ;02d0 'Timer'
              68fb fe00  bra  ac          ;+-----------------------------------+
              68fc fcfd  bra  $68fd       ;|                                   |
              68fd 1418  ld   $18,y       ;| Trampoline for page $6800 lookups |
              68fe e006  jmp  y,$06       ;|                                   |
              68ff c218  st   [$18]       ;+-----------------------------------+
              6900 002b  ld   $2b         ;02d2 STW
              6901 0054  ld   $54         ;02d2 'Value'
              6902 00cf  ld   $cf         ;02d4 CALL
              6903 0056  ld   $56         ;02d4 'DrawNumber2'
              6904 0021  ld   $21         ;02d6 LDW
              6905 0048  ld   $48         ;02d6 'TimeOut'
              6906 00e3  ld   $e3         ;02d8 ADDI
              6907 003c  ld   $3c
              6908 0082  ld   $82         ;02da ANDI
              6909 00ff  ld   $ff
              690a 002b  ld   $2b         ;02dc STW
              690b 0048  ld   $48         ;02dc 'TimeOut'
              690c 0063  ld   $63         ;02de POP
              690d 00ff  ld   $ff         ;02df RET
              690e 002b  ld   $2b         ;02e0 STW
              690f 004c  ld   $4c         ;02e0 'DrawTimer'
              6910 0093  ld   $93         ;02e2 INC
              6911 001b  ld   $1b         ;02e2 '_vLR'+1
              6912 00ff  ld   $ff         ;02e4 RET
              6913 0003  ld   $03         ;| RAM segment address (high byte first)
              6914 0000  ld   $00         ;|
              6915 00f7  ld   $f7         ;| Length (1..256)
              6916 00cd  ld   $cd         ;0300 DEF
              6917 000b  ld   $0b
              6918 0075  ld   $75         ;0302 PUSH
              6919 0059  ld   $59         ;0303 LDI
              691a 000f  ld   $0f
              691b 002b  ld   $2b         ;0305 STW
              691c 003a  ld   $3a         ;0305 'Color'
              691d 0021  ld   $21         ;0307 LDW
              691e 0058  ld   $58         ;0307 'Head'
              691f 00cf  ld   $cf         ;0309 CALL
              6920 005a  ld   $5a         ;0309 'DrawBlock'
              6921 0063  ld   $63         ;030b POP
              6922 00ff  ld   $ff         ;030c RET
              6923 002b  ld   $2b         ;030d STW
              6924 005c  ld   $5c         ;030d 'DrawHead'
              6925 00cd  ld   $cd         ;030f DEF
              6926 0043  ld   $43
              6927 0075  ld   $75         ;0311 PUSH
              6928 0011  ld   $11         ;0312 LDWI
              6929 0035  ld   $35
              692a 0044  ld   $44
              692b 002b  ld   $2b         ;0315 STW
              692c 003c  ld   $3c         ;0315 'Pos'
              692d 0059  ld   $59         ;0317 LDI
              692e 0004  ld   $04
              692f 002b  ld   $2b         ;0319 STW
              6930 0038  ld   $38         ;0319 'BgColor'
              6931 00cd  ld   $cd         ;031b DEF
              6932 0025  ld   $25
              6933 0047  ld   $47         ;031d 'G'
              6934 0041  ld   $41         ;031e 'A'
              6935 004d  ld   $4d         ;031f 'M'
              6936 0045  ld   $45         ;0320 'E'
              6937 0020  ld   $20         ;0321 ' '
              6938 004f  ld   $4f         ;0322 'O'
              6939 0056  ld   $56         ;0323 'V'
              693a 0045  ld   $45         ;0324 'E'
              693b 0052  ld   $52         ;0325 'R'
              693c 0000  ld   $00         ;0326 0
              693d 00cf  ld   $cf         ;0327 CALL
              693e 0042  ld   $42         ;0327 'PrintText'
              693f 0021  ld   $21         ;0329 LDW
              6940 005e  ld   $5e         ;0329 'Score'
              6941 00b8  ld   $b8         ;032b SUBW
              6942 0030  ld   $30         ;032b 'HighScore'
              6943 0035  ld   $35         ;032d BCC
              6944 0056  ld   $56         ;032e LE
              6945 003f  ld   $3f
              6946 0021  ld   $21         ;0330 LDW
              6947 0060  ld   $60         ;0330 'Control'
              6948 00fc  ld   $fc         ;0332 XORW
              6949 0062  ld   $62         ;0332 'PlayerControl'
              694a 0035  ld   $35         ;0334 BCC
              694b 0072  ld   $72         ;0335 NE
              694c 003f  ld   $3f
              694d 0021  ld   $21         ;0337 LDW
              694e 005e  ld   $5e         ;0337 'Score'
              694f 002b  ld   $2b         ;0339 STW
              6950 0030  ld   $30         ;0339 'HighScore'
              6951 0059  ld   $59         ;033b LDI
              6952 001e  ld   $1e
              6953 002b  ld   $2b         ;033d STW
              6954 003a  ld   $3a         ;033d 'Color'
              6955 00cf  ld   $cf         ;033f CALL
              6956 0064  ld   $64         ;033f 'DrawHighScore'
              6957 00cf  ld   $cf         ;0341 CALL
              6958 0066  ld   $66         ;0341 'PlayGameOverSound'
              6959 0063  ld   $63         ;0343 POP
              695a 00ff  ld   $ff         ;0344 RET
              695b 002b  ld   $2b         ;0345 STW
              695c 0068  ld   $68         ;0345 'GameOver'
              695d 00cd  ld   $cd         ;0347 DEF
              695e 0059  ld   $59
              695f 002b  ld   $2b         ;0349 STW
              6960 006a  ld   $6a         ;0349 'tmp'
              6961 001a  ld   $1a         ;034b LD
              6962 000e  ld   $0e
              6963 0099  ld   $99         ;034d ADDW
              6964 006a  ld   $6a         ;034d 'tmp'
              6965 0082  ld   $82         ;034f ANDI
              6966 00ff  ld   $ff
              6967 002b  ld   $2b         ;0351 STW
              6968 006a  ld   $6a         ;0351 'tmp'
              6969 001a  ld   $1a         ;0353 LD
              696a 000e  ld   $0e
              696b 00b8  ld   $b8         ;0355 SUBW
              696c 006a  ld   $6a         ;0355 'tmp'
              696d 0035  ld   $35         ;0357 BCC
              696e 0072  ld   $72         ;0358 NE
              696f 0051  ld   $51
              6970 00ff  ld   $ff         ;035a RET
              6971 002b  ld   $2b         ;035b STW
              6972 0050  ld   $50         ;035b 'Wait'
              6973 00cd  ld   $cd         ;035d DEF
              6974 007f  ld   $7f
              6975 0075  ld   $75         ;035f PUSH
              6976 0059  ld   $59         ;0360 LDI
              6977 0008  ld   $08
              6978 002b  ld   $2b         ;0362 STW
              6979 003a  ld   $3a         ;0362 'Color'
              697a 0059  ld   $59         ;0364 LDI
              697b 0000  ld   $00
              697c 002b  ld   $2b         ;0366 STW
              697d 0038  ld   $38         ;0366 'BgColor'
              697e 0011  ld   $11         ;0368 LDWI
              697f 0000  ld   $00
              6980 0008  ld   $08
              6981 00cf  ld   $cf         ;036b CALL
              6982 006c  ld   $6c         ;036b 'ClearScreen'
              6983 0011  ld   $11         ;036d LDWI
              6984 0038  ld   $38
              6985 0008  ld   $08
              6986 002b  ld   $2b         ;0370 STW
              6987 003c  ld   $3c         ;0370 'Pos'
              6988 00cd  ld   $cd         ;0372 DEF
              6989 007b  ld   $7b
              698a 0047  ld   $47         ;0374 'G'
              698b 0069  ld   $69         ;0375 'i'
              698c 0067  ld   $67         ;0376 'g'
              698d 0061  ld   $61         ;0377 'a'
              698e 0074  ld   $74         ;0378 't'
              698f 0072  ld   $72         ;0379 'r'
              6990 006f  ld   $6f         ;037a 'o'
              6991 006e  ld   $6e         ;037b 'n'
              6992 0000  ld   $00         ;037c 0
              6993 00cf  ld   $cf         ;037d CALL
              6994 0042  ld   $42         ;037d 'PrintText'
              6995 0063  ld   $63         ;037f POP
              6996 00ff  ld   $ff         ;0380 RET
              6997 002b  ld   $2b         ;0381 STW
              6998 006e  ld   $6e         ;0381 'Intro'
              6999 00cd  ld   $cd         ;0383 DEF
              699a 00a3  ld   $a3
              699b 002b  ld   $2b         ;0385 STW
              699c 0070  ld   $70         ;0385 'p'
              699d 0011  ld   $11         ;0387 LDWI
              699e 0003  ld   $03
              699f 000b  ld   $0b
              69a0 002b  ld   $2b         ;038a STW
              69a1 0022  ld   $22
              69a2 0021  ld   $21         ;038c LDW
              69a3 0038  ld   $38         ;038c 'BgColor'
              69a4 005e  ld   $5e         ;038e ST
              69a5 0025  ld   $25
              69a6 0021  ld   $21         ;0390 LDW
              69a7 0070  ld   $70         ;0390 'p'
              69a8 002b  ld   $2b         ;0392 STW
              69a9 0026  ld   $26
              69aa 0059  ld   $59         ;0394 LDI
              69ab 00a0  ld   $a0
              69ac 005e  ld   $5e         ;0396 ST
              69ad 0024  ld   $24
              69ae 00b4  ld   $b4         ;0398 SYS
              69af 00f4  ld   $f4
              69b0 0011  ld   $11         ;039a LDWI
              69b1 0000  ld   $00
              69b2 0001  ld   $01
              69b3 0099  ld   $99         ;039d ADDW
              69b4 0070  ld   $70         ;039d 'p'
              69b5 002b  ld   $2b         ;039f STW
              69b6 0070  ld   $70         ;039f 'p'
              69b7 0035  ld   $35         ;03a1 BCC
              69b8 004d  ld   $4d         ;03a2 GT
              69b9 0090  ld   $90
              69ba 00ff  ld   $ff         ;03a4 RET
              69bb 002b  ld   $2b         ;03a5 STW
              69bc 006c  ld   $6c         ;03a5 'ClearScreen'
              69bd 00cd  ld   $cd         ;03a7 DEF
              69be 00c1  ld   $c1
              69bf 0059  ld   $59         ;03a9 LDI
              69c0 0000  ld   $00
              69c1 00b8  ld   $b8         ;03ab SUBW
              69c2 0072  ld   $72         ;03ab 'stepV'
              69c3 002b  ld   $2b         ;03ad STW
              69c4 006a  ld   $6a         ;03ad 'tmp'
              69c5 0021  ld   $21         ;03af LDW
              69c6 0074  ld   $74         ;03af 'stepU'
              69c7 002b  ld   $2b         ;03b1 STW
              69c8 0072  ld   $72         ;03b1 'stepV'
              69c9 0021  ld   $21         ;03b3 LDW
              69ca 006a  ld   $6a         ;03b3 'tmp'
              69cb 002b  ld   $2b         ;03b5 STW
              69cc 0074  ld   $74         ;03b5 'stepU'
              69cd 0021  ld   $21         ;03b7 LDW
              69ce 0076  ld   $76         ;03b7 'Bias'
              69cf 0035  ld   $35         ;03b9 BCC
              69d0 0053  ld   $53         ;03ba GE
              69d1 00bc  ld   $bc
              69d2 0059  ld   $59         ;03bc LDI
              69d3 0000  ld   $00
              69d4 00e3  ld   $e3         ;03be ADDI
              69d5 003c  ld   $3c
              69d6 002b  ld   $2b         ;03c0 STW
              69d7 0076  ld   $76         ;03c0 'Bias'
              69d8 00ff  ld   $ff         ;03c2 RET
              69d9 002b  ld   $2b         ;03c3 STW
              69da 0078  ld   $78         ;03c3 'TurnL'
              69db 00cd  ld   $cd         ;03c5 DEF
              69dc 00df  ld   $df
              69dd 0059  ld   $59         ;03c7 LDI
              69de 0000  ld   $00
              69df 00b8  ld   $b8         ;03c9 SUBW
              69e0 0074  ld   $74         ;03c9 'stepU'
              69e1 002b  ld   $2b         ;03cb STW
              69e2 006a  ld   $6a         ;03cb 'tmp'
              69e3 0021  ld   $21         ;03cd LDW
              69e4 0072  ld   $72         ;03cd 'stepV'
              69e5 002b  ld   $2b         ;03cf STW
              69e6 0074  ld   $74         ;03cf 'stepU'
              69e7 0021  ld   $21         ;03d1 LDW
              69e8 006a  ld   $6a         ;03d1 'tmp'
              69e9 002b  ld   $2b         ;03d3 STW
              69ea 0072  ld   $72         ;03d3 'stepV'
              69eb 0021  ld   $21         ;03d5 LDW
              69ec 0076  ld   $76         ;03d5 'Bias'
              69ed 0035  ld   $35         ;03d7 BCC
              69ee 0056  ld   $56         ;03d8 LE
              69ef 00da  ld   $da
              69f0 0059  ld   $59         ;03da LDI
              69f1 0000  ld   $00
              69f2 00e6  ld   $e6         ;03dc SUBI
              69f3 003c  ld   $3c
              69f4 002b  ld   $2b         ;03de STW
              69f5 0076  ld   $76         ;03de 'Bias'
              69f6 00ff  ld   $ff         ;03e0 RET
              69f7 002b  ld   $2b         ;03e1 STW
              69f8 007a  ld   $7a         ;03e1 'TurnR'
              69f9 00cd  ld   $cd         ;03e3 DEF
              69fa 00f0  ld   $f0
              69fb fe00  bra  ac          ;+-----------------------------------+
              69fc fcfd  bra  $69fd       ;|                                   |
              69fd 1418  ld   $18,y       ;| Trampoline for page $6900 lookups |
              69fe e006  jmp  y,$06       ;|                                   |
              69ff c218  st   [$18]       ;+-----------------------------------+
              6a00 002b  ld   $2b         ;03e5 STW
              6a01 003c  ld   $3c         ;03e5 'Pos'
              6a02 0021  ld   $21         ;03e7 LDW
              6a03 003a  ld   $3a         ;03e7 'Color'
              6a04 005e  ld   $5e         ;03e9 ST
              6a05 0019  ld   $19
              6a06 00f3  ld   $f3         ;03eb DOKE
              6a07 003c  ld   $3c         ;03eb 'Pos'
              6a08 0093  ld   $93         ;03ed INC
              6a09 003d  ld   $3d         ;03ed 'Pos'+1
              6a0a 00f3  ld   $f3         ;03ef DOKE
              6a0b 003c  ld   $3c         ;03ef 'Pos'
              6a0c 00ff  ld   $ff         ;03f1 RET
              6a0d 002b  ld   $2b         ;03f2 STW
              6a0e 005a  ld   $5a         ;03f2 'DrawBlock'
              6a0f 0093  ld   $93         ;03f4 INC
              6a10 001b  ld   $1b         ;03f4 '_vLR'+1
              6a11 00ff  ld   $ff         ;03f6 RET
              6a12 0004  ld   $04         ;| RAM segment address (high byte first)
              6a13 0000  ld   $00         ;|
              6a14 00f9  ld   $f9         ;| Length (1..256)
              6a15 00cd  ld   $cd         ;0400 DEF
              6a16 00ae  ld   $ae
              6a17 0075  ld   $75         ;0402 PUSH
              6a18 00cf  ld   $cf         ;0403 CALL
              6a19 0060  ld   $60         ;0403 'Control'
              6a1a 001a  ld   $1a         ;0405 LD
              6a1b 0075  ld   $75         ;0405 'stepU'+1
              6a1c 0082  ld   $82         ;0407 ANDI
              6a1d 0080  ld   $80
              6a1e 002b  ld   $2b         ;0409 STW
              6a1f 006a  ld   $6a         ;0409 'tmp'
              6a20 0021  ld   $21         ;040b LDW
              6a21 0074  ld   $74         ;040b 'stepU'
              6a22 0082  ld   $82         ;040d ANDI
              6a23 0002  ld   $02
              6a24 0035  ld   $35         ;040f BCC
              6a25 003f  ld   $3f         ;0410 EQ
              6a26 0012  ld   $12
              6a27 0059  ld   $59         ;0412 LDI
              6a28 0040  ld   $40
              6a29 0099  ld   $99         ;0414 ADDW
              6a2a 006a  ld   $6a         ;0414 'tmp'
              6a2b 00e3  ld   $e3         ;0416 ADDI
              6a2c 001b  ld   $1b
              6a2d 002b  ld   $2b         ;0418 STW
              6a2e 003a  ld   $3a         ;0418 'Color'
              6a2f 001a  ld   $1a         ;041a LD
              6a30 0059  ld   $59         ;041a 'Head'+1
              6a31 00fc  ld   $fc         ;041c XORW
              6a32 0058  ld   $58         ;041c 'Head'
              6a33 0082  ld   $82         ;041e ANDI
              6a34 0002  ld   $02
              6a35 0035  ld   $35         ;0420 BCC
              6a36 003f  ld   $3f         ;0421 EQ
              6a37 0023  ld   $23
              6a38 0059  ld   $59         ;0423 LDI
              6a39 0001  ld   $01
              6a3a 00fc  ld   $fc         ;0425 XORW
              6a3b 003a  ld   $3a         ;0425 'Color'
              6a3c 002b  ld   $2b         ;0427 STW
              6a3d 003a  ld   $3a         ;0427 'Color'
              6a3e 0021  ld   $21         ;0429 LDW
              6a3f 0058  ld   $58         ;0429 'Head'
              6a40 00cf  ld   $cf         ;042b CALL
              6a41 005a  ld   $5a         ;042b 'DrawBlock'
              6a42 0021  ld   $21         ;042d LDW
              6a43 0058  ld   $58         ;042d 'Head'
              6a44 0099  ld   $99         ;042f ADDW
              6a45 0074  ld   $74         ;042f 'stepU'
              6a46 002b  ld   $2b         ;0431 STW
              6a47 0058  ld   $58         ;0431 'Head'
              6a48 0021  ld   $21         ;0433 LDW
              6a49 0058  ld   $58         ;0433 'Head'
              6a4a 00ad  ld   $ad         ;0435 PEEK
              6a4b 0082  ld   $82         ;0436 ANDI
              6a4c 0003  ld   $03
              6a4d 0035  ld   $35         ;0438 BCC
              6a4e 003f  ld   $3f         ;0439 EQ
              6a4f 003b  ld   $3b
              6a50 0063  ld   $63         ;043b POP
              6a51 00ff  ld   $ff         ;043c RET
              6a52 0021  ld   $21         ;043d LDW
              6a53 0058  ld   $58         ;043d 'Head'
              6a54 00ad  ld   $ad         ;043f PEEK
              6a55 008c  ld   $8c         ;0440 XORI
              6a56 0018  ld   $18
              6a57 0035  ld   $35         ;0442 BCC
              6a58 0072  ld   $72         ;0443 NE
              6a59 005d  ld   $5d
              6a5a 0059  ld   $59         ;0445 LDI
              6a5b 0040  ld   $40
              6a5c 0099  ld   $99         ;0447 ADDW
              6a5d 004a  ld   $4a         ;0447 'Timer'
              6a5e 00cf  ld   $cf         ;0449 CALL
              6a5f 007c  ld   $7c         ;0449 'SetNote'
              6a60 0059  ld   $59         ;044b LDI
              6a61 0002  ld   $02
              6a62 005e  ld   $5e         ;044d ST
              6a63 002c  ld   $2c
              6a64 0021  ld   $21         ;044f LDW
              6a65 005e  ld   $5e         ;044f 'Score'
              6a66 0099  ld   $99         ;0451 ADDW
              6a67 004a  ld   $4a         ;0451 'Timer'
              6a68 002b  ld   $2b         ;0453 STW
              6a69 005e  ld   $5e         ;0453 'Score'
              6a6a 00cf  ld   $cf         ;0455 CALL
              6a6b 007e  ld   $7e         ;0455 'DrawScore'
              6a6c 0059  ld   $59         ;0457 LDI
              6a6d 0005  ld   $05
              6a6e 00cf  ld   $cf         ;0459 CALL
              6a6f 0081  ld   $81         ;0459 'AddTimer'
              6a70 0093  ld   $93         ;045b INC
              6a71 0083  ld   $83         ;045b 'Grow'
              6a72 0093  ld   $93         ;045d INC
              6a73 0085  ld   $85         ;045d 'Drops'
              6a74 00cf  ld   $cf         ;045f CALL
              6a75 005c  ld   $5c         ;045f 'DrawHead'
              6a76 0021  ld   $21         ;0461 LDW
              6a77 0083  ld   $83         ;0461 'Grow'
              6a78 0035  ld   $35         ;0463 BCC
              6a79 0056  ld   $56         ;0464 LE
              6a7a 006c  ld   $6c
              6a7b 00e6  ld   $e6         ;0466 SUBI
              6a7c 0001  ld   $01
              6a7d 002b  ld   $2b         ;0468 STW
              6a7e 0083  ld   $83         ;0468 'Grow'
              6a7f 00cf  ld   $cf         ;046a CALL
              6a80 0087  ld   $87         ;046a 'AddFood'
              6a81 0090  ld   $90         ;046c BRA
              6a82 00aa  ld   $aa
              6a83 0021  ld   $21         ;046e LDW
              6a84 0089  ld   $89         ;046e 'Tail'
              6a85 00ad  ld   $ad         ;0470 PEEK
              6a86 002b  ld   $2b         ;0471 STW
              6a87 006a  ld   $6a         ;0471 'tmp'
              6a88 0021  ld   $21         ;0473 LDW
              6a89 0085  ld   $85         ;0473 'Drops'
              6a8a 0035  ld   $35         ;0475 BCC
              6a8b 0056  ld   $56         ;0476 LE
              6a8c 007e  ld   $7e
              6a8d 00e6  ld   $e6         ;0478 SUBI
              6a8e 0001  ld   $01
              6a8f 002b  ld   $2b         ;047a STW
              6a90 0085  ld   $85         ;047a 'Drops'
              6a91 0059  ld   $59         ;047c LDI
              6a92 003e  ld   $3e
              6a93 0090  ld   $90         ;047e BRA
              6a94 0080  ld   $80
              6a95 0059  ld   $59         ;0480 LDI
              6a96 0004  ld   $04
              6a97 002b  ld   $2b         ;0482 STW
              6a98 003a  ld   $3a         ;0482 'Color'
              6a99 0021  ld   $21         ;0484 LDW
              6a9a 0089  ld   $89         ;0484 'Tail'
              6a9b 00cf  ld   $cf         ;0486 CALL
              6a9c 005a  ld   $5a         ;0486 'DrawBlock'
              6a9d 0021  ld   $21         ;0488 LDW
              6a9e 006a  ld   $6a         ;0488 'tmp'
              6a9f 0082  ld   $82         ;048a ANDI
              6aa0 0040  ld   $40
              6aa1 0035  ld   $35         ;048c BCC
              6aa2 0072  ld   $72         ;048d NE
              6aa3 0092  ld   $92
              6aa4 0011  ld   $11         ;048f LDWI
              6aa5 0000  ld   $00
              6aa6 0001  ld   $01
              6aa7 0090  ld   $90         ;0492 BRA
              6aa8 0094  ld   $94
              6aa9 0059  ld   $59         ;0494 LDI
              6aaa 0001  ld   $01
              6aab 002b  ld   $2b         ;0496 STW
              6aac 008b  ld   $8b         ;0496 'x'
              6aad 0021  ld   $21         ;0498 LDW
              6aae 006a  ld   $6a         ;0498 'tmp'
              6aaf 0082  ld   $82         ;049a ANDI
              6ab0 0080  ld   $80
              6ab1 0035  ld   $35         ;049c BCC
              6ab2 0072  ld   $72         ;049d NE
              6ab3 00a1  ld   $a1
              6ab4 0021  ld   $21         ;049f LDW
              6ab5 008b  ld   $8b         ;049f 'x'
              6ab6 0090  ld   $90         ;04a1 BRA
              6ab7 00a5  ld   $a5
              6ab8 0059  ld   $59         ;04a3 LDI
              6ab9 0000  ld   $00
              6aba 00b8  ld   $b8         ;04a5 SUBW
              6abb 008b  ld   $8b         ;04a5 'x'
              6abc 00e9  ld   $e9         ;04a7 LSLW
              6abd 0099  ld   $99         ;04a8 ADDW
              6abe 0089  ld   $89         ;04a8 'Tail'
              6abf 002b  ld   $2b         ;04aa STW
              6ac0 0089  ld   $89         ;04aa 'Tail'
              6ac1 00cf  ld   $cf         ;04ac CALL
              6ac2 0052  ld   $52         ;04ac 'TimeStep'
              6ac3 0090  ld   $90         ;04ae BRA
              6ac4 0001  ld   $01
              6ac5 002b  ld   $2b         ;04b0 STW
              6ac6 008d  ld   $8d         ;04b0 'RunGame'
              6ac7 00cd  ld   $cd         ;04b2 DEF
              6ac8 00ee  ld   $ee
              6ac9 0075  ld   $75         ;04b4 PUSH
              6aca 0059  ld   $59         ;04b5 LDI
              6acb 0018  ld   $18
              6acc 002b  ld   $2b         ;04b7 STW
              6acd 003a  ld   $3a         ;04b7 'Color'
              6ace 0011  ld   $11         ;04b9 LDWI
              6acf 00a7  ld   $a7
              6ad0 0004  ld   $04
              6ad1 002b  ld   $2b         ;04bc STW
              6ad2 0022  ld   $22
              6ad3 00b4  ld   $b4         ;04be SYS
              6ad4 00fe  ld   $fe
              6ad5 002b  ld   $2b         ;04c0 STW
              6ad6 003c  ld   $3c         ;04c0 'Pos'
              6ad7 001a  ld   $1a         ;04c2 LD
              6ad8 003c  ld   $3c         ;04c2 'Pos'
              6ad9 00e6  ld   $e6         ;04c4 SUBI
              6ada 0080  ld   $80
              6adb 0035  ld   $35         ;04c6 BCC
              6adc 0053  ld   $53         ;04c7 GE
              6add 00c9  ld   $c9
              6ade 00e3  ld   $e3         ;04c9 ADDI
              6adf 0096  ld   $96
              6ae0 00e3  ld   $e3         ;04cb ADDI
              6ae1 0005  ld   $05
              6ae2 0082  ld   $82         ;04cd ANDI
              6ae3 00fe  ld   $fe
              6ae4 005e  ld   $5e         ;04cf ST
              6ae5 003c  ld   $3c         ;04cf 'Pos'
              6ae6 001a  ld   $1a         ;04d1 LD
              6ae7 003d  ld   $3d         ;04d1 'Pos'+1
              6ae8 0082  ld   $82         ;04d3 ANDI
              6ae9 007f  ld   $7f
              6aea 00e6  ld   $e6         ;04d5 SUBI
              6aeb 0040  ld   $40
              6aec 0035  ld   $35         ;04d7 BCC
              6aed 0053  ld   $53         ;04d8 GE
              6aee 00da  ld   $da
              6aef 00e3  ld   $e3         ;04da ADDI
              6af0 0066  ld   $66
              6af1 00e3  ld   $e3         ;04dc ADDI
              6af2 0015  ld   $15
              6af3 0082  ld   $82         ;04de ANDI
              6af4 00fe  ld   $fe
              6af5 005e  ld   $5e         ;04e0 ST
              6af6 003d  ld   $3d         ;04e0 'Pos'+1
              6af7 0021  ld   $21         ;04e2 LDW
              6af8 003c  ld   $3c         ;04e2 'Pos'
              6af9 00ad  ld   $ad         ;04e4 PEEK
              6afa 008c  ld   $8c         ;04e5 XORI
              6afb fe00  bra  ac          ;+-----------------------------------+
              6afc fcfd  bra  $6afd       ;|                                   |
              6afd 1418  ld   $18,y       ;| Trampoline for page $6a00 lookups |
              6afe e006  jmp  y,$06       ;|                                   |
              6aff c218  st   [$18]       ;+-----------------------------------+
              6b00 0004  ld   $04
              6b01 0035  ld   $35         ;04e7 BCC
              6b02 0072  ld   $72         ;04e8 NE
              6b03 00b7  ld   $b7
              6b04 0021  ld   $21         ;04ea LDW
              6b05 003c  ld   $3c         ;04ea 'Pos'
              6b06 00cf  ld   $cf         ;04ec CALL
              6b07 005a  ld   $5a         ;04ec 'DrawBlock'
              6b08 0063  ld   $63         ;04ee POP
              6b09 00ff  ld   $ff         ;04ef RET
              6b0a 002b  ld   $2b         ;04f0 STW
              6b0b 0087  ld   $87         ;04f0 'AddFood'
              6b0c 0059  ld   $59         ;04f2 LDI
              6b0d 0000  ld   $00
              6b0e 002b  ld   $2b         ;04f4 STW
              6b0f 0076  ld   $76         ;04f4 'Bias'
              6b10 0093  ld   $93         ;04f6 INC
              6b11 001b  ld   $1b         ;04f6 '_vLR'+1
              6b12 00ff  ld   $ff         ;04f8 RET
              6b13 0005  ld   $05         ;| RAM segment address (high byte first)
              6b14 0000  ld   $00         ;|
              6b15 00ed  ld   $ed         ;| Length (1..256)
              6b16 00cd  ld   $cd         ;0500 DEF
              6b17 00e6  ld   $e6
              6b18 0075  ld   $75         ;0502 PUSH
              6b19 001a  ld   $1a         ;0503 LD
              6b1a 0011  ld   $11
              6b1b 0082  ld   $82         ;0505 ANDI
              6b1c 00cf  ld   $cf
              6b1d 008c  ld   $8c         ;0507 XORI
              6b1e 00cf  ld   $cf
              6b1f 0035  ld   $35         ;0509 BCC
              6b20 003f  ld   $3f         ;050a EQ
              6b21 000e  ld   $0e
              6b22 00cf  ld   $cf         ;050c CALL
              6b23 008f  ld   $8f         ;050c 'SetupGame'
              6b24 0063  ld   $63         ;050e POP
              6b25 00ff  ld   $ff         ;050f RET
              6b26 0021  ld   $21         ;0510 LDW
              6b27 0078  ld   $78         ;0510 'TurnL'
              6b28 002b  ld   $2b         ;0512 STW
              6b29 0070  ld   $70         ;0512 'p'
              6b2a 0021  ld   $21         ;0514 LDW
              6b2b 007a  ld   $7a         ;0514 'TurnR'
              6b2c 002b  ld   $2b         ;0516 STW
              6b2d 0091  ld   $91         ;0516 'q'
              6b2e 0021  ld   $21         ;0518 LDW
              6b2f 0058  ld   $58         ;0518 'Head'
              6b30 0099  ld   $99         ;051a ADDW
              6b31 0074  ld   $74         ;051a 'stepU'
              6b32 00ad  ld   $ad         ;051c PEEK
              6b33 008c  ld   $8c         ;051d XORI
              6b34 0004  ld   $04
              6b35 002b  ld   $2b         ;051f STW
              6b36 006a  ld   $6a         ;051f 'tmp'
              6b37 0035  ld   $35         ;0521 BCC
              6b38 003f  ld   $3f         ;0522 EQ
              6b39 002b  ld   $2b
              6b3a 008c  ld   $8c         ;0524 XORI
              6b3b 001c  ld   $1c
              6b3c 0035  ld   $35         ;0526 BCC
              6b3d 0072  ld   $72         ;0527 NE
              6b3e 0029  ld   $29
              6b3f 002b  ld   $2b         ;0529 STW
              6b40 006a  ld   $6a         ;0529 'tmp'
              6b41 0090  ld   $90         ;052b BRA
              6b42 0039  ld   $39
              6b43 0021  ld   $21         ;052d LDW
              6b44 0058  ld   $58         ;052d 'Head'
              6b45 0099  ld   $99         ;052f ADDW
              6b46 0074  ld   $74         ;052f 'stepU'
              6b47 0099  ld   $99         ;0531 ADDW
              6b48 0074  ld   $74         ;0531 'stepU'
              6b49 00ad  ld   $ad         ;0533 PEEK
              6b4a 008c  ld   $8c         ;0534 XORI
              6b4b 003e  ld   $3e
              6b4c 0035  ld   $35         ;0536 BCC
              6b4d 0072  ld   $72         ;0537 NE
              6b4e 0039  ld   $39
              6b4f 0093  ld   $93         ;0539 INC
              6b50 006b  ld   $6b         ;0539 'tmp'+1
              6b51 0021  ld   $21         ;053b LDW
              6b52 0058  ld   $58         ;053b 'Head'
              6b53 00b8  ld   $b8         ;053d SUBW
              6b54 0072  ld   $72         ;053d 'stepV'
              6b55 00ad  ld   $ad         ;053f PEEK
              6b56 008c  ld   $8c         ;0540 XORI
              6b57 0004  ld   $04
              6b58 0035  ld   $35         ;0542 BCC
              6b59 003f  ld   $3f         ;0543 EQ
              6b5a 0054  ld   $54
              6b5b 008c  ld   $8c         ;0545 XORI
              6b5c 001c  ld   $1c
              6b5d 0035  ld   $35         ;0547 BCC
              6b5e 0072  ld   $72         ;0548 NE
              6b5f 004e  ld   $4e
              6b60 002b  ld   $2b         ;054a STW
              6b61 0091  ld   $91         ;054a 'q'
              6b62 0093  ld   $93         ;054c INC
              6b63 006b  ld   $6b         ;054c 'tmp'+1
              6b64 0090  ld   $90         ;054e BRA
              6b65 0052  ld   $52
              6b66 0059  ld   $59         ;0550 LDI
              6b67 0000  ld   $00
              6b68 002b  ld   $2b         ;0552 STW
              6b69 0070  ld   $70         ;0552 'p'
              6b6a 0090  ld   $90         ;0554 BRA
              6b6b 0071  ld   $71
              6b6c 0021  ld   $21         ;0556 LDW
              6b6d 0058  ld   $58         ;0556 'Head'
              6b6e 00b8  ld   $b8         ;0558 SUBW
              6b6f 0072  ld   $72         ;0558 'stepV'
              6b70 00b8  ld   $b8         ;055a SUBW
              6b71 0072  ld   $72         ;055a 'stepV'
              6b72 00ad  ld   $ad         ;055c PEEK
              6b73 008c  ld   $8c         ;055d XORI
              6b74 0004  ld   $04
              6b75 0035  ld   $35         ;055f BCC
              6b76 003f  ld   $3f         ;0560 EQ
              6b77 0071  ld   $71
              6b78 008c  ld   $8c         ;0562 XORI
              6b79 001c  ld   $1c
              6b7a 0035  ld   $35         ;0564 BCC
              6b7b 0072  ld   $72         ;0565 NE
              6b7c 006b  ld   $6b
              6b7d 002b  ld   $2b         ;0567 STW
              6b7e 0091  ld   $91         ;0567 'q'
              6b7f 0093  ld   $93         ;0569 INC
              6b80 006b  ld   $6b         ;0569 'tmp'+1
              6b81 0090  ld   $90         ;056b BRA
              6b82 0071  ld   $71
              6b83 0021  ld   $21         ;056d LDW
              6b84 0076  ld   $76         ;056d 'Bias'
              6b85 00e3  ld   $e3         ;056f ADDI
              6b86 000f  ld   $0f
              6b87 0021  ld   $21         ;0571 LDW
              6b88 0076  ld   $76         ;0571 'Bias'
              6b89 0021  ld   $21         ;0573 LDW
              6b8a 0058  ld   $58         ;0573 'Head'
              6b8b 0099  ld   $99         ;0575 ADDW
              6b8c 0072  ld   $72         ;0575 'stepV'
              6b8d 00ad  ld   $ad         ;0577 PEEK
              6b8e 008c  ld   $8c         ;0578 XORI
              6b8f 0004  ld   $04
              6b90 0035  ld   $35         ;057a BCC
              6b91 003f  ld   $3f         ;057b EQ
              6b92 008c  ld   $8c
              6b93 008c  ld   $8c         ;057d XORI
              6b94 001c  ld   $1c
              6b95 0035  ld   $35         ;057f BCC
              6b96 0072  ld   $72         ;0580 NE
              6b97 0086  ld   $86
              6b98 002b  ld   $2b         ;0582 STW
              6b99 0070  ld   $70         ;0582 'p'
              6b9a 0093  ld   $93         ;0584 INC
              6b9b 006b  ld   $6b         ;0584 'tmp'+1
              6b9c 0090  ld   $90         ;0586 BRA
              6b9d 008a  ld   $8a
              6b9e 0059  ld   $59         ;0588 LDI
              6b9f 0000  ld   $00
              6ba0 002b  ld   $2b         ;058a STW
              6ba1 0091  ld   $91         ;058a 'q'
              6ba2 0090  ld   $90         ;058c BRA
              6ba3 00a9  ld   $a9
              6ba4 0021  ld   $21         ;058e LDW
              6ba5 0058  ld   $58         ;058e 'Head'
              6ba6 0099  ld   $99         ;0590 ADDW
              6ba7 0072  ld   $72         ;0590 'stepV'
              6ba8 0099  ld   $99         ;0592 ADDW
              6ba9 0072  ld   $72         ;0592 'stepV'
              6baa 00ad  ld   $ad         ;0594 PEEK
              6bab 008c  ld   $8c         ;0595 XORI
              6bac 0004  ld   $04
              6bad 0035  ld   $35         ;0597 BCC
              6bae 003f  ld   $3f         ;0598 EQ
              6baf 00a9  ld   $a9
              6bb0 008c  ld   $8c         ;059a XORI
              6bb1 001c  ld   $1c
              6bb2 0035  ld   $35         ;059c BCC
              6bb3 0072  ld   $72         ;059d NE
              6bb4 00a3  ld   $a3
              6bb5 002b  ld   $2b         ;059f STW
              6bb6 0070  ld   $70         ;059f 'p'
              6bb7 0093  ld   $93         ;05a1 INC
              6bb8 006b  ld   $6b         ;05a1 'tmp'+1
              6bb9 0090  ld   $90         ;05a3 BRA
              6bba 00a9  ld   $a9
              6bbb 0021  ld   $21         ;05a5 LDW
              6bbc 0076  ld   $76         ;05a5 'Bias'
              6bbd 00e6  ld   $e6         ;05a7 SUBI
              6bbe 000f  ld   $0f
              6bbf 0021  ld   $21         ;05a9 LDW
              6bc0 0076  ld   $76         ;05a9 'Bias'
              6bc1 0021  ld   $21         ;05ab LDW
              6bc2 006a  ld   $6a         ;05ab 'tmp'
              6bc3 0035  ld   $35         ;05ad BCC
              6bc4 0072  ld   $72         ;05ae NE
              6bc5 00bb  ld   $bb
              6bc6 001a  ld   $1a         ;05b0 LD
              6bc7 0006  ld   $06
              6bc8 00e6  ld   $e6         ;05b2 SUBI
              6bc9 000d  ld   $0d
              6bca 0035  ld   $35         ;05b4 BCC
              6bcb 0053  ld   $53         ;05b5 GE
              6bcc 00b9  ld   $b9
              6bcd 0059  ld   $59         ;05b7 LDI
              6bce 0001  ld   $01
              6bcf 0090  ld   $90         ;05b9 BRA
              6bd0 00bb  ld   $bb
              6bd1 0059  ld   $59         ;05bb LDI
              6bd2 0000  ld   $00
              6bd3 0035  ld   $35         ;05bd BCC
              6bd4 003f  ld   $3f         ;05be EQ
              6bd5 00e4  ld   $e4
              6bd6 0021  ld   $21         ;05c0 LDW
              6bd7 0070  ld   $70         ;05c0 'p'
              6bd8 0035  ld   $35         ;05c2 BCC
              6bd9 0072  ld   $72         ;05c3 NE
              6bda 00c7  ld   $c7
              6bdb 0021  ld   $21         ;05c5 LDW
              6bdc 0091  ld   $91         ;05c5 'q'
              6bdd 0090  ld   $90         ;05c7 BRA
              6bde 00df  ld   $df
              6bdf 0021  ld   $21         ;05c9 LDW
              6be0 0091  ld   $91         ;05c9 'q'
              6be1 0035  ld   $35         ;05cb BCC
              6be2 0072  ld   $72         ;05cc NE
              6be3 00d0  ld   $d0
              6be4 0021  ld   $21         ;05ce LDW
              6be5 0070  ld   $70         ;05ce 'p'
              6be6 0090  ld   $90         ;05d0 BRA
              6be7 00df  ld   $df
              6be8 001a  ld   $1a         ;05d2 LD
              6be9 0006  ld   $06
              6bea 00e6  ld   $e6         ;05d4 SUBI
              6beb 0080  ld   $80
              6bec 0099  ld   $99         ;05d6 ADDW
              6bed 0076  ld   $76         ;05d6 'Bias'
              6bee 0035  ld   $35         ;05d8 BCC
              6bef 0053  ld   $53         ;05d9 GE
              6bf0 00dd  ld   $dd
              6bf1 0021  ld   $21         ;05db LDW
              6bf2 0070  ld   $70         ;05db 'p'
              6bf3 0090  ld   $90         ;05dd BRA
              6bf4 00df  ld   $df
              6bf5 0021  ld   $21         ;05df LDW
              6bf6 0091  ld   $91         ;05df 'q'
              6bf7 0035  ld   $35         ;05e1 BCC
              6bf8 003f  ld   $3f         ;05e2 EQ
              6bf9 00e4  ld   $e4
              6bfa 00cf  ld   $cf         ;05e4 CALL
              6bfb fe00  bra  ac          ;+-----------------------------------+
              6bfc fcfd  bra  $6bfd       ;|                                   |
              6bfd 1418  ld   $18,y       ;| Trampoline for page $6b00 lookups |
              6bfe e006  jmp  y,$06       ;|                                   |
              6bff c218  st   [$18]       ;+-----------------------------------+
              6c00 0018  ld   $18         ;05e4 vAC
              6c01 0063  ld   $63         ;05e6 POP
              6c02 00ff  ld   $ff         ;05e7 RET
              6c03 002b  ld   $2b         ;05e8 STW
              6c04 0093  ld   $93         ;05e8 'AutoControl'
              6c05 0093  ld   $93         ;05ea INC
              6c06 001b  ld   $1b         ;05ea '_vLR'+1
              6c07 00ff  ld   $ff         ;05ec RET
              6c08 0006  ld   $06         ;| RAM segment address (high byte first)
              6c09 0000  ld   $00         ;|
              6c0a 00fa  ld   $fa         ;| Length (1..256)
              6c0b 00cd  ld   $cd         ;0600 DEF
              6c0c 0016  ld   $16
              6c0d 0075  ld   $75         ;0602 PUSH
              6c0e 0099  ld   $99         ;0603 ADDW
              6c0f 004a  ld   $4a         ;0603 'Timer'
              6c10 002b  ld   $2b         ;0605 STW
              6c11 004a  ld   $4a         ;0605 'Timer'
              6c12 00e6  ld   $e6         ;0607 SUBI
              6c13 000f  ld   $0f
              6c14 0035  ld   $35         ;0609 BCC
              6c15 0056  ld   $56         ;060a LE
              6c16 000e  ld   $0e
              6c17 0059  ld   $59         ;060c LDI
              6c18 000f  ld   $0f
              6c19 002b  ld   $2b         ;060e STW
              6c1a 004a  ld   $4a         ;060e 'Timer'
              6c1b 001a  ld   $1a         ;0610 LD
              6c1c 000e  ld   $0e
              6c1d 002b  ld   $2b         ;0612 STW
              6c1e 0048  ld   $48         ;0612 'TimeOut'
              6c1f 00cf  ld   $cf         ;0614 CALL
              6c20 004c  ld   $4c         ;0614 'DrawTimer'
              6c21 0063  ld   $63         ;0616 POP
              6c22 00ff  ld   $ff         ;0617 RET
              6c23 002b  ld   $2b         ;0618 STW
              6c24 0081  ld   $81         ;0618 'AddTimer'
              6c25 00cd  ld   $cd         ;061a DEF
              6c26 00b3  ld   $b3
              6c27 0075  ld   $75         ;061c PUSH
              6c28 0059  ld   $59         ;061d LDI
              6c29 0000  ld   $00
              6c2a 002b  ld   $2b         ;061f STW
              6c2b 005e  ld   $5e         ;061f 'Score'
              6c2c 002b  ld   $2b         ;0621 STW
              6c2d 004a  ld   $4a         ;0621 'Timer'
              6c2e 00cf  ld   $cf         ;0623 CALL
              6c2f 007e  ld   $7e         ;0623 'DrawScore'
              6c30 0059  ld   $59         ;0625 LDI
              6c31 000f  ld   $0f
              6c32 002b  ld   $2b         ;0627 STW
              6c33 004a  ld   $4a         ;0627 'Timer'
              6c34 00cf  ld   $cf         ;0629 CALL
              6c35 004c  ld   $4c         ;0629 'DrawTimer'
              6c36 00cf  ld   $cf         ;062b CALL
              6c37 0064  ld   $64         ;062b 'DrawHighScore'
              6c38 0059  ld   $59         ;062d LDI
              6c39 0004  ld   $04
              6c3a 002b  ld   $2b         ;062f STW
              6c3b 0038  ld   $38         ;062f 'BgColor'
              6c3c 0011  ld   $11         ;0631 LDWI
              6c3d 0000  ld   $00
              6c3e 0010  ld   $10
              6c3f 002b  ld   $2b         ;0634 STW
              6c40 003c  ld   $3c         ;0634 'Pos'
              6c41 00cf  ld   $cf         ;0636 CALL
              6c42 006c  ld   $6c         ;0636 'ClearScreen'
              6c43 0059  ld   $59         ;0638 LDI
              6c44 001a  ld   $1a
              6c45 002b  ld   $2b         ;063a STW
              6c46 003a  ld   $3a         ;063a 'Color'
              6c47 0059  ld   $59         ;063c LDI
              6c48 0001  ld   $01
              6c49 002b  ld   $2b         ;063e STW
              6c4a 0044  ld   $44         ;063e 'Step'
              6c4b 0059  ld   $59         ;0640 LDI
              6c4c 009f  ld   $9f
              6c4d 00cf  ld   $cf         ;0642 CALL
              6c4e 0046  ld   $46         ;0642 'DrawLine'
              6c4f 0011  ld   $11         ;0644 LDWI
              6c50 0000  ld   $00
              6c51 0001  ld   $01
              6c52 002b  ld   $2b         ;0647 STW
              6c53 0044  ld   $44         ;0647 'Step'
              6c54 0059  ld   $59         ;0649 LDI
              6c55 006f  ld   $6f
              6c56 00cf  ld   $cf         ;064b CALL
              6c57 0046  ld   $46         ;064b 'DrawLine'
              6c58 0011  ld   $11         ;064d LDWI
              6c59 00ff  ld   $ff
              6c5a 00ff  ld   $ff
              6c5b 002b  ld   $2b         ;0650 STW
              6c5c 0044  ld   $44         ;0650 'Step'
              6c5d 0059  ld   $59         ;0652 LDI
              6c5e 009f  ld   $9f
              6c5f 00cf  ld   $cf         ;0654 CALL
              6c60 0046  ld   $46         ;0654 'DrawLine'
              6c61 0011  ld   $11         ;0656 LDWI
              6c62 0000  ld   $00
              6c63 00ff  ld   $ff
              6c64 002b  ld   $2b         ;0659 STW
              6c65 0044  ld   $44         ;0659 'Step'
              6c66 0059  ld   $59         ;065b LDI
              6c67 006e  ld   $6e
              6c68 00cf  ld   $cf         ;065d CALL
              6c69 0046  ld   $46         ;065d 'DrawLine'
              6c6a 0059  ld   $59         ;065f LDI
              6c6b 0001  ld   $01
              6c6c 002b  ld   $2b         ;0661 STW
              6c6d 0044  ld   $44         ;0661 'Step'
              6c6e 0059  ld   $59         ;0663 LDI
              6c6f 009e  ld   $9e
              6c70 00cf  ld   $cf         ;0665 CALL
              6c71 0046  ld   $46         ;0665 'DrawLine'
              6c72 0011  ld   $11         ;0667 LDWI
              6c73 0000  ld   $00
              6c74 0001  ld   $01
              6c75 002b  ld   $2b         ;066a STW
              6c76 0044  ld   $44         ;066a 'Step'
              6c77 0059  ld   $59         ;066c LDI
              6c78 006d  ld   $6d
              6c79 00cf  ld   $cf         ;066e CALL
              6c7a 0046  ld   $46         ;066e 'DrawLine'
              6c7b 0011  ld   $11         ;0670 LDWI
              6c7c 00ff  ld   $ff
              6c7d 00ff  ld   $ff
              6c7e 002b  ld   $2b         ;0673 STW
              6c7f 0044  ld   $44         ;0673 'Step'
              6c80 0059  ld   $59         ;0675 LDI
              6c81 009d  ld   $9d
              6c82 00cf  ld   $cf         ;0677 CALL
              6c83 0046  ld   $46         ;0677 'DrawLine'
              6c84 0011  ld   $11         ;0679 LDWI
              6c85 0000  ld   $00
              6c86 00ff  ld   $ff
              6c87 002b  ld   $2b         ;067c STW
              6c88 0044  ld   $44         ;067c 'Step'
              6c89 0059  ld   $59         ;067e LDI
              6c8a 006d  ld   $6d
              6c8b 00cf  ld   $cf         ;0680 CALL
              6c8c 0046  ld   $46         ;0680 'DrawLine'
              6c8d 00cf  ld   $cf         ;0682 CALL
              6c8e 0095  ld   $95         ;0682 'GetReady'
              6c8f 0011  ld   $11         ;0684 LDWI
              6c90 0030  ld   $30
              6c91 0044  ld   $44
              6c92 002b  ld   $2b         ;0687 STW
              6c93 0058  ld   $58         ;0687 'Head'
              6c94 002b  ld   $2b         ;0689 STW
              6c95 0089  ld   $89         ;0689 'Tail'
              6c96 00cf  ld   $cf         ;068b CALL
              6c97 005c  ld   $5c         ;068b 'DrawHead'
              6c98 0059  ld   $59         ;068d LDI
              6c99 0000  ld   $00
              6c9a 002b  ld   $2b         ;068f STW
              6c9b 0083  ld   $83         ;068f 'Grow'
              6c9c 002b  ld   $2b         ;0691 STW
              6c9d 0085  ld   $85         ;0691 'Drops'
              6c9e 002b  ld   $2b         ;0693 STW
              6c9f 004a  ld   $4a         ;0693 'Timer'
              6ca0 0059  ld   $59         ;0695 LDI
              6ca1 000f  ld   $0f
              6ca2 00cf  ld   $cf         ;0697 CALL
              6ca3 0081  ld   $81         ;0697 'AddTimer'
              6ca4 0059  ld   $59         ;0699 LDI
              6ca5 0002  ld   $02
              6ca6 002b  ld   $2b         ;069b STW
              6ca7 0074  ld   $74         ;069b 'stepU'
              6ca8 0011  ld   $11         ;069d LDWI
              6ca9 0000  ld   $00
              6caa 0002  ld   $02
              6cab 002b  ld   $2b         ;06a0 STW
              6cac 0072  ld   $72         ;06a0 'stepV'
              6cad 0059  ld   $59         ;06a2 LDI
              6cae 0019  ld   $19
              6caf 002b  ld   $2b         ;06a4 STW
              6cb0 0034  ld   $34         ;06a4 'i'
              6cb1 00cf  ld   $cf         ;06a6 CALL
              6cb2 0087  ld   $87         ;06a6 'AddFood'
              6cb3 0021  ld   $21         ;06a8 LDW
              6cb4 0034  ld   $34         ;06a8 'i'
              6cb5 00e6  ld   $e6         ;06aa SUBI
              6cb6 0001  ld   $01
              6cb7 0035  ld   $35         ;06ac BCC
              6cb8 004d  ld   $4d         ;06ad GT
              6cb9 00a2  ld   $a2
              6cba 0021  ld   $21         ;06af LDW
              6cbb 0097  ld   $97         ;06af 'LaunchControl'
              6cbc 002b  ld   $2b         ;06b1 STW
              6cbd 0060  ld   $60         ;06b1 'Control'
              6cbe 0063  ld   $63         ;06b3 POP
              6cbf 00ff  ld   $ff         ;06b4 RET
              6cc0 002b  ld   $2b         ;06b5 STW
              6cc1 008f  ld   $8f         ;06b5 'SetupGame'
              6cc2 00cd  ld   $cd         ;06b7 DEF
              6cc3 00f0  ld   $f0
              6cc4 0075  ld   $75         ;06b9 PUSH
              6cc5 0011  ld   $11         ;06ba LDWI
              6cc6 0002  ld   $02
              6cc7 0008  ld   $08
              6cc8 002b  ld   $2b         ;06bd STW
              6cc9 003c  ld   $3c         ;06bd 'Pos'
              6cca 0021  ld   $21         ;06bf LDW
              6ccb 005e  ld   $5e         ;06bf 'Score'
              6ccc 00b8  ld   $b8         ;06c1 SUBW
              6ccd 0030  ld   $30         ;06c1 'HighScore'
              6cce 0035  ld   $35         ;06c3 BCC
              6ccf 0056  ld   $56         ;06c4 LE
              6cd0 00c8  ld   $c8
              6cd1 0059  ld   $59         ;06c6 LDI
              6cd2 001e  ld   $1e
              6cd3 0090  ld   $90         ;06c8 BRA
              6cd4 00ca  ld   $ca
              6cd5 0059  ld   $59         ;06ca LDI
              6cd6 0008  ld   $08
              6cd7 002b  ld   $2b         ;06cc STW
              6cd8 003a  ld   $3a         ;06cc 'Color'
              6cd9 0059  ld   $59         ;06ce LDI
              6cda 0000  ld   $00
              6cdb 002b  ld   $2b         ;06d0 STW
              6cdc 0038  ld   $38         ;06d0 'BgColor'
              6cdd 0021  ld   $21         ;06d2 LDW
              6cde 005e  ld   $5e         ;06d2 'Score'
              6cdf 002b  ld   $2b         ;06d4 STW
              6ce0 0054  ld   $54         ;06d4 'Value'
              6ce1 00cf  ld   $cf         ;06d6 CALL
              6ce2 0099  ld   $99         ;06d6 'DrawNumber4'
              6ce3 0021  ld   $21         ;06d8 LDW
              6ce4 005e  ld   $5e         ;06d8 'Score'
              6ce5 00e6  ld   $e6         ;06da SUBI
              6ce6 0064  ld   $64
              6ce7 0035  ld   $35         ;06dc BCC
              6ce8 0053  ld   $53         ;06dd GE
              6ce9 00e1  ld   $e1
              6cea 0059  ld   $59         ;06df LDI
              6ceb 0004  ld   $04
              6cec 0090  ld   $90         ;06e1 BRA
              6ced 00ec  ld   $ec
              6cee 00e6  ld   $e6         ;06e3 SUBI
              6cef 00c8  ld   $c8
              6cf0 0035  ld   $35         ;06e5 BCC
              6cf1 0053  ld   $53         ;06e6 GE
              6cf2 00ea  ld   $ea
              6cf3 0059  ld   $59         ;06e8 LDI
              6cf4 0003  ld   $03
              6cf5 0090  ld   $90         ;06ea BRA
              6cf6 00ec  ld   $ec
              6cf7 0059  ld   $59         ;06ec LDI
              6cf8 0002  ld   $02
              6cf9 002b  ld   $2b         ;06ee STW
              6cfa 004e  ld   $4e         ;06ee 'Delay'
              6cfb fe00  bra  ac          ;+-----------------------------------+
              6cfc fcfd  bra  $6cfd       ;|                                   |
              6cfd 1418  ld   $18,y       ;| Trampoline for page $6c00 lookups |
              6cfe e006  jmp  y,$06       ;|                                   |
              6cff c218  st   [$18]       ;+-----------------------------------+
              6d00 0063  ld   $63         ;06f0 POP
              6d01 00ff  ld   $ff         ;06f1 RET
              6d02 002b  ld   $2b         ;06f2 STW
              6d03 007e  ld   $7e         ;06f2 'DrawScore'
              6d04 0011  ld   $11         ;06f4 LDWI
              6d05 00a0  ld   $a0
              6d06 0008  ld   $08
              6d07 002b  ld   $2b         ;06f7 STW
              6d08 001a  ld   $1a
              6d09 00ff  ld   $ff         ;06f9 RET
              6d0a 0008  ld   $08         ;| RAM segment address (high byte first)
              6d0b 00a0  ld   $a0         ;|
              6d0c 0056  ld   $56         ;| Length (1..256)
              6d0d 00cd  ld   $cd         ;08a0 DEF
              6d0e 00d4  ld   $d4
              6d0f 0075  ld   $75         ;08a2 PUSH
              6d10 0011  ld   $11         ;08a3 LDWI
              6d11 009c  ld   $9c
              6d12 0044  ld   $44
              6d13 00b8  ld   $b8         ;08a6 SUBW
              6d14 0058  ld   $58         ;08a6 'Head'
              6d15 0035  ld   $35         ;08a8 BCC
              6d16 0072  ld   $72         ;08a9 NE
              6d17 00c3  ld   $c3
              6d18 0059  ld   $59         ;08ab LDI
              6d19 001e  ld   $1e
              6d1a 002b  ld   $2b         ;08ad STW
              6d1b 003a  ld   $3a         ;08ad 'Color'
              6d1c 0011  ld   $11         ;08af LDWI
              6d1d 0002  ld   $02
              6d1e 0008  ld   $08
              6d1f 002b  ld   $2b         ;08b2 STW
              6d20 003c  ld   $3c         ;08b2 'Pos'
              6d21 00cd  ld   $cd         ;08b4 DEF
              6d22 00b9  ld   $b9
              6d23 0041  ld   $41         ;08b6 'A'
              6d24 0055  ld   $55         ;08b7 'U'
              6d25 0054  ld   $54         ;08b8 'T'
              6d26 004f  ld   $4f         ;08b9 'O'
              6d27 0000  ld   $00         ;08ba 0
              6d28 00cf  ld   $cf         ;08bb CALL
              6d29 0042  ld   $42         ;08bb 'PrintText'
              6d2a 0021  ld   $21         ;08bd LDW
              6d2b 0093  ld   $93         ;08bd 'AutoControl'
              6d2c 002b  ld   $2b         ;08bf STW
              6d2d 0060  ld   $60         ;08bf 'Control'
              6d2e 00cf  ld   $cf         ;08c1 CALL
              6d2f 0018  ld   $18         ;08c1 vAC
              6d30 0090  ld   $90         ;08c3 BRA
              6d31 00d2  ld   $d2
              6d32 001a  ld   $1a         ;08c5 LD
              6d33 0011  ld   $11
              6d34 0082  ld   $82         ;08c7 ANDI
              6d35 00cf  ld   $cf
              6d36 008c  ld   $8c         ;08c9 XORI
              6d37 00cf  ld   $cf
              6d38 0035  ld   $35         ;08cb BCC
              6d39 003f  ld   $3f         ;08cc EQ
              6d3a 00d2  ld   $d2
              6d3b 0021  ld   $21         ;08ce LDW
              6d3c 0062  ld   $62         ;08ce 'PlayerControl'
              6d3d 002b  ld   $2b         ;08d0 STW
              6d3e 0060  ld   $60         ;08d0 'Control'
              6d3f 00cf  ld   $cf         ;08d2 CALL
              6d40 0018  ld   $18         ;08d2 vAC
              6d41 0063  ld   $63         ;08d4 POP
              6d42 00ff  ld   $ff         ;08d5 RET
              6d43 002b  ld   $2b         ;08d6 STW
              6d44 0097  ld   $97         ;08d6 'LaunchControl'
              6d45 00cd  ld   $cd         ;08d8 DEF
              6d46 00ef  ld   $ef
              6d47 0075  ld   $75         ;08da PUSH
              6d48 0059  ld   $59         ;08db LDI
              6d49 0020  ld   $20
              6d4a 002b  ld   $2b         ;08dd STW
              6d4b 0032  ld   $32         ;08dd 'Char'
              6d4c 0059  ld   $59         ;08df LDI
              6d4d 000a  ld   $0a
              6d4e 002b  ld   $2b         ;08e1 STW
              6d4f 009b  ld   $9b         ;08e1 'Radix'
              6d50 00cf  ld   $cf         ;08e3 CALL
              6d51 009d  ld   $9d         ;08e3 'DrawNextDigit'
              6d52 0059  ld   $59         ;08e5 LDI
              6d53 0030  ld   $30
              6d54 002b  ld   $2b         ;08e7 STW
              6d55 0032  ld   $32         ;08e7 'Char'
              6d56 0059  ld   $59         ;08e9 LDI
              6d57 0001  ld   $01
              6d58 002b  ld   $2b         ;08eb STW
              6d59 009b  ld   $9b         ;08eb 'Radix'
              6d5a 00cf  ld   $cf         ;08ed CALL
              6d5b 009d  ld   $9d         ;08ed 'DrawNextDigit'
              6d5c 0063  ld   $63         ;08ef POP
              6d5d 00ff  ld   $ff         ;08f0 RET
              6d5e 002b  ld   $2b         ;08f1 STW
              6d5f 0056  ld   $56         ;08f1 'DrawNumber2'
              6d60 0093  ld   $93         ;08f3 INC
              6d61 001b  ld   $1b         ;08f3 '_vLR'+1
              6d62 00ff  ld   $ff         ;08f5 RET
              6d63 0009  ld   $09         ;| RAM segment address (high byte first)
              6d64 00a0  ld   $a0         ;|
              6d65 0056  ld   $56         ;| Length (1..256)
              6d66 00cd  ld   $cd         ;09a0 DEF
              6d67 00c7  ld   $c7
              6d68 0075  ld   $75         ;09a2 PUSH
              6d69 0021  ld   $21         ;09a3 LDW
              6d6a 0054  ld   $54         ;09a3 'Value'
              6d6b 00b8  ld   $b8         ;09a5 SUBW
              6d6c 009b  ld   $9b         ;09a5 'Radix'
              6d6d 0035  ld   $35         ;09a7 BCC
              6d6e 0050  ld   $50         ;09a8 LT
              6d6f 00c3  ld   $c3
              6d70 002b  ld   $2b         ;09aa STW
              6d71 0054  ld   $54         ;09aa 'Value'
              6d72 0059  ld   $59         ;09ac LDI
              6d73 0031  ld   $31
              6d74 002b  ld   $2b         ;09ae STW
              6d75 0032  ld   $32         ;09ae 'Char'
              6d76 0021  ld   $21         ;09b0 LDW
              6d77 0054  ld   $54         ;09b0 'Value'
              6d78 00b8  ld   $b8         ;09b2 SUBW
              6d79 009b  ld   $9b         ;09b2 'Radix'
              6d7a 0035  ld   $35         ;09b4 BCC
              6d7b 0050  ld   $50         ;09b5 LT
              6d7c 00bb  ld   $bb
              6d7d 002b  ld   $2b         ;09b7 STW
              6d7e 0054  ld   $54         ;09b7 'Value'
              6d7f 0093  ld   $93         ;09b9 INC
              6d80 0032  ld   $32         ;09b9 'Char'
              6d81 0090  ld   $90         ;09bb BRA
              6d82 00b0  ld   $b0
              6d83 00cf  ld   $cf         ;09bd CALL
              6d84 003e  ld   $3e         ;09bd 'PrintChar'
              6d85 0059  ld   $59         ;09bf LDI
              6d86 0030  ld   $30
              6d87 002b  ld   $2b         ;09c1 STW
              6d88 0032  ld   $32         ;09c1 'Char'
              6d89 0090  ld   $90         ;09c3 BRA
              6d8a 00c5  ld   $c5
              6d8b 00cf  ld   $cf         ;09c5 CALL
              6d8c 003e  ld   $3e         ;09c5 'PrintChar'
              6d8d 0063  ld   $63         ;09c7 POP
              6d8e 00ff  ld   $ff         ;09c8 RET
              6d8f 002b  ld   $2b         ;09c9 STW
              6d90 009d  ld   $9d         ;09c9 'DrawNextDigit'
              6d91 00cd  ld   $cd         ;09cb DEF
              6d92 00ef  ld   $ef
              6d93 0075  ld   $75         ;09cd PUSH
              6d94 0059  ld   $59         ;09ce LDI
              6d95 0020  ld   $20
              6d96 002b  ld   $2b         ;09d0 STW
              6d97 0032  ld   $32         ;09d0 'Char'
              6d98 0011  ld   $11         ;09d2 LDWI
              6d99 00e8  ld   $e8
              6d9a 0003  ld   $03
              6d9b 002b  ld   $2b         ;09d5 STW
              6d9c 009b  ld   $9b         ;09d5 'Radix'
              6d9d 00cf  ld   $cf         ;09d7 CALL
              6d9e 009d  ld   $9d         ;09d7 'DrawNextDigit'
              6d9f 0059  ld   $59         ;09d9 LDI
              6da0 0064  ld   $64
              6da1 002b  ld   $2b         ;09db STW
              6da2 009b  ld   $9b         ;09db 'Radix'
              6da3 00cf  ld   $cf         ;09dd CALL
              6da4 009d  ld   $9d         ;09dd 'DrawNextDigit'
              6da5 0059  ld   $59         ;09df LDI
              6da6 000a  ld   $0a
              6da7 002b  ld   $2b         ;09e1 STW
              6da8 009b  ld   $9b         ;09e1 'Radix'
              6da9 00cf  ld   $cf         ;09e3 CALL
              6daa 009d  ld   $9d         ;09e3 'DrawNextDigit'
              6dab 0059  ld   $59         ;09e5 LDI
              6dac 0030  ld   $30
              6dad 002b  ld   $2b         ;09e7 STW
              6dae 0032  ld   $32         ;09e7 'Char'
              6daf 0059  ld   $59         ;09e9 LDI
              6db0 0001  ld   $01
              6db1 002b  ld   $2b         ;09eb STW
              6db2 009b  ld   $9b         ;09eb 'Radix'
              6db3 00cf  ld   $cf         ;09ed CALL
              6db4 009d  ld   $9d         ;09ed 'DrawNextDigit'
              6db5 0063  ld   $63         ;09ef POP
              6db6 00ff  ld   $ff         ;09f0 RET
              6db7 002b  ld   $2b         ;09f1 STW
              6db8 0099  ld   $99         ;09f1 'DrawNumber4'
              6db9 0093  ld   $93         ;09f3 INC
              6dba 001b  ld   $1b         ;09f3 '_vLR'+1
              6dbb 00ff  ld   $ff         ;09f5 RET
              6dbc 000a  ld   $0a         ;| RAM segment address (high byte first)
              6dbd 00a0  ld   $a0         ;|
              6dbe 0056  ld   $56         ;| Length (1..256)
              6dbf 00cd  ld   $cd         ;0aa0 DEF
              6dc0 00ba  ld   $ba
              6dc1 0075  ld   $75         ;0aa2 PUSH
              6dc2 0011  ld   $11         ;0aa3 LDWI
              6dc3 0074  ld   $74
              6dc4 0008  ld   $08
              6dc5 002b  ld   $2b         ;0aa6 STW
              6dc6 003c  ld   $3c         ;0aa6 'Pos'
              6dc7 0059  ld   $59         ;0aa8 LDI
              6dc8 0000  ld   $00
              6dc9 002b  ld   $2b         ;0aaa STW
              6dca 0038  ld   $38         ;0aaa 'BgColor'
              6dcb 00cd  ld   $cd         ;0aac DEF
              6dcc 00b0  ld   $b0
              6dcd 0048  ld   $48         ;0aae 'H'
              6dce 0049  ld   $49         ;0aaf 'I'
              6dcf 0020  ld   $20         ;0ab0 ' '
              6dd0 0000  ld   $00         ;0ab1 0
              6dd1 00cf  ld   $cf         ;0ab2 CALL
              6dd2 0042  ld   $42         ;0ab2 'PrintText'
              6dd3 0021  ld   $21         ;0ab4 LDW
              6dd4 0030  ld   $30         ;0ab4 'HighScore'
              6dd5 002b  ld   $2b         ;0ab6 STW
              6dd6 0054  ld   $54         ;0ab6 'Value'
              6dd7 00cf  ld   $cf         ;0ab8 CALL
              6dd8 0099  ld   $99         ;0ab8 'DrawNumber4'
              6dd9 0063  ld   $63         ;0aba POP
              6dda 00ff  ld   $ff         ;0abb RET
              6ddb 002b  ld   $2b         ;0abc STW
              6ddc 0064  ld   $64         ;0abc 'DrawHighScore'
              6ddd 00cd  ld   $cd         ;0abe DEF
              6dde 00ef  ld   $ef
              6ddf 002b  ld   $2b         ;0ac0 STW
              6de0 0034  ld   $34         ;0ac0 'i'
              6de1 0088  ld   $88         ;0ac2 ORI
              6de2 00ff  ld   $ff
              6de3 008c  ld   $8c         ;0ac4 XORI
              6de4 00ff  ld   $ff
              6de5 0088  ld   $88         ;0ac6 ORI
              6de6 00fa  ld   $fa
              6de7 002b  ld   $2b         ;0ac8 STW
              6de8 0070  ld   $70         ;0ac8 'p'
              6de9 001a  ld   $1a         ;0aca LD
              6dea 0034  ld   $34         ;0aca 'i'
              6deb 002b  ld   $2b         ;0acc STW
              6dec 0034  ld   $34         ;0acc 'i'
              6ded 0059  ld   $59         ;0ace LDI
              6dee 0000  ld   $00
              6def 00f0  ld   $f0         ;0ad0 POKE
              6df0 0070  ld   $70         ;0ad0 'p'
              6df1 0093  ld   $93         ;0ad2 INC
              6df2 0070  ld   $70         ;0ad2 'p'
              6df3 0059  ld   $59         ;0ad4 LDI
              6df4 0001  ld   $01
              6df5 00f0  ld   $f0         ;0ad6 POKE
              6df6 0070  ld   $70         ;0ad6 'p'
              6df7 0093  ld   $93         ;0ad8 INC
              6df8 0070  ld   $70         ;0ad8 'p'
              6df9 0011  ld   $11         ;0ada LDWI
              6dfa 0000  ld   $00
              6dfb fe00  bra  ac          ;+-----------------------------------+
              6dfc fcfd  bra  $6dfd       ;|                                   |
              6dfd 1418  ld   $18,y       ;| Trampoline for page $6d00 lookups |
              6dfe e006  jmp  y,$06       ;|                                   |
              6dff c218  st   [$18]       ;+-----------------------------------+
              6e00 0009  ld   $09
              6e01 0099  ld   $99         ;0add ADDW
              6e02 0034  ld   $34         ;0add 'i'
              6e03 007f  ld   $7f         ;0adf LUP
              6e04 0000  ld   $00
              6e05 00f0  ld   $f0         ;0ae1 POKE
              6e06 0070  ld   $70         ;0ae1 'p'
              6e07 0093  ld   $93         ;0ae3 INC
              6e08 0070  ld   $70         ;0ae3 'p'
              6e09 0011  ld   $11         ;0ae5 LDWI
              6e0a 0000  ld   $00
              6e0b 0009  ld   $09
              6e0c 0099  ld   $99         ;0ae8 ADDW
              6e0d 0034  ld   $34         ;0ae8 'i'
              6e0e 007f  ld   $7f         ;0aea LUP
              6e0f 0001  ld   $01
              6e10 00f0  ld   $f0         ;0aec POKE
              6e11 0070  ld   $70         ;0aec 'p'
              6e12 0093  ld   $93         ;0aee INC
              6e13 0070  ld   $70         ;0aee 'p'
              6e14 00ff  ld   $ff         ;0af0 RET
              6e15 002b  ld   $2b         ;0af1 STW
              6e16 009f  ld   $9f         ;0af1 'SetupChannel'
              6e17 0093  ld   $93         ;0af3 INC
              6e18 001b  ld   $1b         ;0af3 '_vLR'+1
              6e19 00ff  ld   $ff         ;0af5 RET
              6e1a 000b  ld   $0b         ;| RAM segment address (high byte first)
              6e1b 00a0  ld   $a0         ;|
              6e1c 004c  ld   $4c         ;| Length (1..256)
              6e1d 00cd  ld   $cd         ;0ba0 DEF
              6e1e 00c2  ld   $c2
              6e1f 0075  ld   $75         ;0ba2 PUSH
              6e20 00e9  ld   $e9         ;0ba3 LSLW
              6e21 002b  ld   $2b         ;0ba4 STW
              6e22 006a  ld   $6a         ;0ba4 'tmp'
              6e23 0011  ld   $11         ;0ba6 LDWI
              6e24 0000  ld   $00
              6e25 0001  ld   $01
              6e26 00fa  ld   $fa         ;0ba9 ORW
              6e27 006a  ld   $6a         ;0ba9 'tmp'
              6e28 00cf  ld   $cf         ;0bab CALL
              6e29 009f  ld   $9f         ;0bab 'SetupChannel'
              6e2a 0011  ld   $11         ;0bad LDWI
              6e2b 0000  ld   $00
              6e2c 0002  ld   $02
              6e2d 00fa  ld   $fa         ;0bb0 ORW
              6e2e 006a  ld   $6a         ;0bb0 'tmp'
              6e2f 00cf  ld   $cf         ;0bb2 CALL
              6e30 009f  ld   $9f         ;0bb2 'SetupChannel'
              6e31 0011  ld   $11         ;0bb4 LDWI
              6e32 0000  ld   $00
              6e33 0003  ld   $03
              6e34 00fa  ld   $fa         ;0bb7 ORW
              6e35 006a  ld   $6a         ;0bb7 'tmp'
              6e36 00cf  ld   $cf         ;0bb9 CALL
              6e37 009f  ld   $9f         ;0bb9 'SetupChannel'
              6e38 0011  ld   $11         ;0bbb LDWI
              6e39 0000  ld   $00
              6e3a 0004  ld   $04
              6e3b 00fa  ld   $fa         ;0bbe ORW
              6e3c 006a  ld   $6a         ;0bbe 'tmp'
              6e3d 00cf  ld   $cf         ;0bc0 CALL
              6e3e 009f  ld   $9f         ;0bc0 'SetupChannel'
              6e3f 0063  ld   $63         ;0bc2 POP
              6e40 00ff  ld   $ff         ;0bc3 RET
              6e41 002b  ld   $2b         ;0bc4 STW
              6e42 007c  ld   $7c         ;0bc4 'SetNote'
              6e43 00cd  ld   $cd         ;0bc6 DEF
              6e44 00e5  ld   $e5
              6e45 0075  ld   $75         ;0bc8 PUSH
              6e46 0059  ld   $59         ;0bc9 LDI
              6e47 0049  ld   $49
              6e48 002b  ld   $2b         ;0bcb STW
              6e49 00a1  ld   $a1         ;0bcb 'j'
              6e4a 0021  ld   $21         ;0bcd LDW
              6e4b 00a1  ld   $a1         ;0bcd 'j'
              6e4c 00cf  ld   $cf         ;0bcf CALL
              6e4d 007c  ld   $7c         ;0bcf 'SetNote'
              6e4e 0059  ld   $59         ;0bd1 LDI
              6e4f 0005  ld   $05
              6e50 005e  ld   $5e         ;0bd3 ST
              6e51 002c  ld   $2c
              6e52 001a  ld   $1a         ;0bd5 LD
              6e53 002c  ld   $2c
              6e54 0035  ld   $35         ;0bd7 BCC
              6e55 0072  ld   $72         ;0bd8 NE
              6e56 00d3  ld   $d3
              6e57 0021  ld   $21         ;0bda LDW
              6e58 00a1  ld   $a1         ;0bda 'j'
              6e59 00e6  ld   $e6         ;0bdc SUBI
              6e5a 0001  ld   $01
              6e5b 002b  ld   $2b         ;0bde STW
              6e5c 00a1  ld   $a1         ;0bde 'j'
              6e5d 008c  ld   $8c         ;0be0 XORI
              6e5e 0030  ld   $30
              6e5f 0035  ld   $35         ;0be2 BCC
              6e60 0072  ld   $72         ;0be3 NE
              6e61 00cb  ld   $cb
              6e62 0063  ld   $63         ;0be5 POP
              6e63 00ff  ld   $ff         ;0be6 RET
              6e64 002b  ld   $2b         ;0be7 STW
              6e65 0066  ld   $66         ;0be7 'PlayGameOverSound'
              6e66 0093  ld   $93         ;0be9 INC
              6e67 001b  ld   $1b         ;0be9 '_vLR'+1
              6e68 00ff  ld   $ff         ;0beb RET
              6e69 000c  ld   $0c         ;| RAM segment address (high byte first)
              6e6a 00a0  ld   $a0         ;|
              6e6b 0045  ld   $45         ;| Length (1..256)
              6e6c 00cd  ld   $cd         ;0ca0 DEF
              6e6d 00de  ld   $de
              6e6e 0075  ld   $75         ;0ca2 PUSH
              6e6f 0011  ld   $11         ;0ca3 LDWI
              6e70 0033  ld   $33
              6e71 0045  ld   $45
              6e72 002b  ld   $2b         ;0ca6 STW
              6e73 0070  ld   $70         ;0ca6 'p'
              6e74 002b  ld   $2b         ;0ca8 STW
              6e75 003c  ld   $3c         ;0ca8 'Pos'
              6e76 0059  ld   $59         ;0caa LDI
              6e77 0018  ld   $18
              6e78 002b  ld   $2b         ;0cac STW
              6e79 003a  ld   $3a         ;0cac 'Color'
              6e7a 0021  ld   $21         ;0cae LDW
              6e7b 00a3  ld   $a3         ;0cae 'Messages'
              6e7c 00cf  ld   $cf         ;0cb0 CALL
              6e7d 0042  ld   $42         ;0cb0 'PrintText'
              6e7e 0059  ld   $59         ;0cb2 LDI
              6e7f 002d  ld   $2d
              6e80 00cf  ld   $cf         ;0cb4 CALL
              6e81 0050  ld   $50         ;0cb4 'Wait'
              6e82 0021  ld   $21         ;0cb6 LDW
              6e83 0070  ld   $70         ;0cb6 'p'
              6e84 002b  ld   $2b         ;0cb8 STW
              6e85 003c  ld   $3c         ;0cb8 'Pos'
              6e86 0059  ld   $59         ;0cba LDI
              6e87 003e  ld   $3e
              6e88 002b  ld   $2b         ;0cbc STW
              6e89 003a  ld   $3a         ;0cbc 'Color'
              6e8a 0021  ld   $21         ;0cbe LDW
              6e8b 0040  ld   $40         ;0cbe 'Text'
              6e8c 00cf  ld   $cf         ;0cc0 CALL
              6e8d 0042  ld   $42         ;0cc0 'PrintText'
              6e8e 0059  ld   $59         ;0cc2 LDI
              6e8f 002d  ld   $2d
              6e90 00cf  ld   $cf         ;0cc4 CALL
              6e91 0050  ld   $50         ;0cc4 'Wait'
              6e92 0021  ld   $21         ;0cc6 LDW
              6e93 0070  ld   $70         ;0cc6 'p'
              6e94 002b  ld   $2b         ;0cc8 STW
              6e95 003c  ld   $3c         ;0cc8 'Pos'
              6e96 0059  ld   $59         ;0cca LDI
              6e97 000f  ld   $0f
              6e98 002b  ld   $2b         ;0ccc STW
              6e99 003a  ld   $3a         ;0ccc 'Color'
              6e9a 0021  ld   $21         ;0cce LDW
              6e9b 0040  ld   $40         ;0cce 'Text'
              6e9c 00cf  ld   $cf         ;0cd0 CALL
              6e9d 0042  ld   $42         ;0cd0 'PrintText'
              6e9e 0059  ld   $59         ;0cd2 LDI
              6e9f 002d  ld   $2d
              6ea0 00cf  ld   $cf         ;0cd4 CALL
              6ea1 0050  ld   $50         ;0cd4 'Wait'
              6ea2 0021  ld   $21         ;0cd6 LDW
              6ea3 0070  ld   $70         ;0cd6 'p'
              6ea4 002b  ld   $2b         ;0cd8 STW
              6ea5 003c  ld   $3c         ;0cd8 'Pos'
              6ea6 0021  ld   $21         ;0cda LDW
              6ea7 0040  ld   $40         ;0cda 'Text'
              6ea8 00cf  ld   $cf         ;0cdc CALL
              6ea9 0042  ld   $42         ;0cdc 'PrintText'
              6eaa 0063  ld   $63         ;0cde POP
              6eab 00ff  ld   $ff         ;0cdf RET
              6eac 002b  ld   $2b         ;0ce0 STW
              6ead 0095  ld   $95         ;0ce0 'GetReady'
              6eae 0093  ld   $93         ;0ce2 INC
              6eaf 001b  ld   $1b         ;0ce2 '_vLR'+1
              6eb0 00ff  ld   $ff         ;0ce4 RET
              6eb1 000d  ld   $0d         ;| RAM segment address (high byte first)
              6eb2 00a0  ld   $a0         ;|
              6eb3 0046  ld   $46         ;| Length (1..256)
              6eb4 00cd  ld   $cd         ;0da0 DEF
              6eb5 00df  ld   $df
              6eb6 0021  ld   $21         ;0da2 LDW
              6eb7 0074  ld   $74         ;0da2 'stepU'
              6eb8 002b  ld   $2b         ;0da4 STW
              6eb9 006a  ld   $6a         ;0da4 'tmp'
              6eba 001a  ld   $1a         ;0da6 LD
              6ebb 0011  ld   $11
              6ebc 008c  ld   $8c         ;0da8 XORI
              6ebd 00fe  ld   $fe
              6ebe 0035  ld   $35         ;0daa BCC
              6ebf 0072  ld   $72         ;0dab NE
              6ec0 00af  ld   $af
              6ec1 0059  ld   $59         ;0dad LDI
              6ec2 0002  ld   $02
              6ec3 002b  ld   $2b         ;0daf STW
              6ec4 006a  ld   $6a         ;0daf 'tmp'
              6ec5 001a  ld   $1a         ;0db1 LD
              6ec6 0011  ld   $11
              6ec7 008c  ld   $8c         ;0db3 XORI
              6ec8 00fd  ld   $fd
              6ec9 0035  ld   $35         ;0db5 BCC
              6eca 0072  ld   $72         ;0db6 NE
              6ecb 00bb  ld   $bb
              6ecc 0011  ld   $11         ;0db8 LDWI
              6ecd 00fe  ld   $fe
              6ece 00ff  ld   $ff
              6ecf 002b  ld   $2b         ;0dbb STW
              6ed0 006a  ld   $6a         ;0dbb 'tmp'
              6ed1 001a  ld   $1a         ;0dbd LD
              6ed2 0011  ld   $11
              6ed3 008c  ld   $8c         ;0dbf XORI
              6ed4 00fb  ld   $fb
              6ed5 0035  ld   $35         ;0dc1 BCC
              6ed6 0072  ld   $72         ;0dc2 NE
              6ed7 00c7  ld   $c7
              6ed8 0011  ld   $11         ;0dc4 LDWI
              6ed9 0000  ld   $00
              6eda 0002  ld   $02
              6edb 002b  ld   $2b         ;0dc7 STW
              6edc 006a  ld   $6a         ;0dc7 'tmp'
              6edd 001a  ld   $1a         ;0dc9 LD
              6ede 0011  ld   $11
              6edf 008c  ld   $8c         ;0dcb XORI
              6ee0 00f7  ld   $f7
              6ee1 0035  ld   $35         ;0dcd BCC
              6ee2 0072  ld   $72         ;0dce NE
              6ee3 00d3  ld   $d3
              6ee4 0011  ld   $11         ;0dd0 LDWI
              6ee5 0000  ld   $00
              6ee6 00fe  ld   $fe
              6ee7 002b  ld   $2b         ;0dd3 STW
              6ee8 006a  ld   $6a         ;0dd3 'tmp'
              6ee9 0021  ld   $21         ;0dd5 LDW
              6eea 006a  ld   $6a         ;0dd5 'tmp'
              6eeb 0099  ld   $99         ;0dd7 ADDW
              6eec 0074  ld   $74         ;0dd7 'stepU'
              6eed 0035  ld   $35         ;0dd9 BCC
              6eee 003f  ld   $3f         ;0dda EQ
              6eef 00de  ld   $de
              6ef0 0021  ld   $21         ;0ddc LDW
              6ef1 006a  ld   $6a         ;0ddc 'tmp'
              6ef2 002b  ld   $2b         ;0dde STW
              6ef3 0074  ld   $74         ;0dde 'stepU'
              6ef4 00ff  ld   $ff         ;0de0 RET
              6ef5 002b  ld   $2b         ;0de1 STW
              6ef6 0062  ld   $62         ;0de1 'PlayerControl'
              6ef7 0093  ld   $93         ;0de3 INC
              6ef8 001b  ld   $1b         ;0de3 '_vLR'+1
              6ef9 00ff  ld   $ff         ;0de5 RET
              6efa 000e  ld   $0e         ;| RAM segment address (high byte first)
              6efb fe00  bra  ac          ;+-----------------------------------+
              6efc fcfd  bra  $6efd       ;|                                   |
              6efd 1418  ld   $18,y       ;| Trampoline for page $6e00 lookups |
              6efe e006  jmp  y,$06       ;|                                   |
              6eff c218  st   [$18]       ;+-----------------------------------+
              6f00 00a0  ld   $a0         ;|
              6f01 004d  ld   $4d         ;| Length (1..256)
              6f02 00cd  ld   $cd         ;0ea0 DEF
              6f03 00cb  ld   $cb
              6f04 0020  ld   $20         ;0ea2 ' '
              6f05 0045  ld   $45         ;0ea3 'E'
              6f06 0041  ld   $41         ;0ea4 'A'
              6f07 0054  ld   $54         ;0ea5 'T'
              6f08 0020  ld   $20         ;0ea6 ' '
              6f09 0046  ld   $46         ;0ea7 'F'
              6f0a 004f  ld   $4f         ;0ea8 'O'
              6f0b 004f  ld   $4f         ;0ea9 'O'
              6f0c 0044  ld   $44         ;0eaa 'D'
              6f0d 0000  ld   $00         ;0eab 0
              6f0e 004e  ld   $4e         ;0eac 'N'
              6f0f 004f  ld   $4f         ;0ead 'O'
              6f10 0054  ld   $54         ;0eae 'T'
              6f11 0020  ld   $20         ;0eaf ' '
              6f12 0050  ld   $50         ;0eb0 'P'
              6f13 004f  ld   $4f         ;0eb1 'O'
              6f14 0049  ld   $49         ;0eb2 'I'
              6f15 0053  ld   $53         ;0eb3 'S'
              6f16 004f  ld   $4f         ;0eb4 'O'
              6f17 004e  ld   $4e         ;0eb5 'N'
              6f18 0000  ld   $00         ;0eb6 0
              6f19 0047  ld   $47         ;0eb7 'G'
              6f1a 0045  ld   $45         ;0eb8 'E'
              6f1b 0054  ld   $54         ;0eb9 'T'
              6f1c 0020  ld   $20         ;0eba ' '
              6f1d 0052  ld   $52         ;0ebb 'R'
              6f1e 0045  ld   $45         ;0ebc 'E'
              6f1f 0041  ld   $41         ;0ebd 'A'
              6f20 0044  ld   $44         ;0ebe 'D'
              6f21 0059  ld   $59         ;0ebf 'Y'
              6f22 0021  ld   $21         ;0ec0 '!'
              6f23 0000  ld   $00         ;0ec1 0
              6f24 0020  ld   $20         ;0ec2 ' '
              6f25 0020  ld   $20         ;0ec3 ' '
              6f26 0020  ld   $20         ;0ec4 ' '
              6f27 0020  ld   $20         ;0ec5 ' '
              6f28 0020  ld   $20         ;0ec6 ' '
              6f29 0020  ld   $20         ;0ec7 ' '
              6f2a 0020  ld   $20         ;0ec8 ' '
              6f2b 0020  ld   $20         ;0ec9 ' '
              6f2c 0020  ld   $20         ;0eca ' '
              6f2d 0020  ld   $20         ;0ecb ' '
              6f2e 0000  ld   $00         ;0ecc 0
              6f2f 002b  ld   $2b         ;0ecd STW
              6f30 00a3  ld   $a3         ;0ecd 'Messages'
              6f31 00cf  ld   $cf         ;0ecf CALL
              6f32 006e  ld   $6e         ;0ecf 'Intro'
              6f33 0059  ld   $59         ;0ed1 LDI
              6f34 0049  ld   $49
              6f35 00cf  ld   $cf         ;0ed3 CALL
              6f36 007c  ld   $7c         ;0ed3 'SetNote'
              6f37 00cf  ld   $cf         ;0ed5 CALL
              6f38 008f  ld   $8f         ;0ed5 'SetupGame'
              6f39 00cf  ld   $cf         ;0ed7 CALL
              6f3a 008d  ld   $8d         ;0ed7 'RunGame'
              6f3b 0059  ld   $59         ;0ed9 LDI
              6f3c 0078  ld   $78
              6f3d 005e  ld   $5e         ;0edb ST
              6f3e 002c  ld   $2c
              6f3f 0059  ld   $59         ;0edd LDI
              6f40 0007  ld   $07
              6f41 002b  ld   $2b         ;0edf STW
              6f42 003a  ld   $3a         ;0edf 'Color'
              6f43 0021  ld   $21         ;0ee1 LDW
              6f44 0058  ld   $58         ;0ee1 'Head'
              6f45 00cf  ld   $cf         ;0ee3 CALL
              6f46 005a  ld   $5a         ;0ee3 'DrawBlock'
              6f47 00cf  ld   $cf         ;0ee5 CALL
              6f48 0068  ld   $68         ;0ee5 'GameOver'
              6f49 0059  ld   $59         ;0ee7 LDI
              6f4a 003c  ld   $3c
              6f4b 00cf  ld   $cf         ;0ee9 CALL
              6f4c 0050  ld   $50         ;0ee9 'Wait'
              6f4d 0090  ld   $90         ;0eeb BRA
              6f4e 00d3  ld   $d3
              6f4f 0000  ld   $00         ;End of Apps/Snake/Snake_v3.gcl, size 1834
                                          ;+-----------------------------------+
                                          ;| Apps/TinyBASIC/TinyBASIC_v4.gcl   |
                                          ;+-----------------------------------+
              6f50 dc53  st   $53,[y,x++] ;'S'
              6f51 dc6e  st   $6e,[y,x++] ;'n'
              6f52 dc61  st   $61,[y,x++] ;'a'
              6f53 dc6b  st   $6b,[y,x++] ;'k'
              6f54 dc65  st   $65,[y,x++] ;'e'
              6f55 dc00  st   $00,[y,x++] ;'\x00'
              6f56 dc00  st   $00,[y,x++] ;'\x00'
              6f57 dc00  st   $00,[y,x++] ;'\x00'
              6f58 0026  ld   $26
              6f59 c218  st   [$18]
              6f5a 0068  ld   $68
              6f5b 14df  ld   $df,y
              6f5c e0ac  jmp  y,$ac
              6f5d c219  st   [$19]
TinyBASIC:    6f5e 0002  ld   $02         ;| RAM segment address (high byte first)
              6f5f 0000  ld   $00         ;|
              6f60 00f8  ld   $f8         ;| Length (1..256)
              6f61 0011  ld   $11         ;0200 LDWI
              6f62 00df  ld   $df
              6f63 0001  ld   $01
              6f64 00f6  ld   $f6         ;0203 DEEK
              6f65 002b  ld   $2b         ;0204 STW
              6f66 0030  ld   $30         ;0204 'Pos'
              6f67 00cd  ld   $cd         ;0206 DEF
              6f68 00c3  ld   $c3
              6f69 0075  ld   $75         ;0208 PUSH
              6f6a 00cf  ld   $cf         ;0209 CALL
              6f6b 0032  ld   $32         ;0209 'Number'
              6f6c 0035  ld   $35         ;020b BCC
              6f6d 0050  ld   $50         ;020c LT
              6f6e 0010  ld   $10
              6f6f 00cf  ld   $cf         ;020e CALL
              6f70 0034  ld   $34         ;020e 'Spaces'
              6f71 0063  ld   $63         ;0210 POP
              6f72 00ff  ld   $ff         ;0211 RET
              6f73 0021  ld   $21         ;0212 LDW
              6f74 0036  ld   $36         ;0212 'Active'
              6f75 00ad  ld   $ad         ;0214 PEEK
              6f76 008c  ld   $8c         ;0215 XORI
              6f77 0024  ld   $24
              6f78 0035  ld   $35         ;0217 BCC
              6f79 0072  ld   $72         ;0218 NE
              6f7a 0021  ld   $21
              6f7b 0011  ld   $11         ;021a LDWI
              6f7c 00ce  ld   $ce
              6f7d 0005  ld   $05
              6f7e 00cf  ld   $cf         ;021d CALL
              6f7f 0018  ld   $18         ;021d vAC
              6f80 00cf  ld   $cf         ;021f CALL
              6f81 0034  ld   $34         ;021f 'Spaces'
              6f82 0063  ld   $63         ;0221 POP
              6f83 00ff  ld   $ff         ;0222 RET
              6f84 00cf  ld   $cf         ;0223 CALL
              6f85 0038  ld   $38         ;0223 'Keyword'
              6f86 0028  ld   $28         ;0225 '('
              6f87 0000  ld   $00         ;0226 0
              6f88 0035  ld   $35         ;0227 BCC
              6f89 003f  ld   $3f         ;0228 EQ
              6f8a 002c  ld   $2c
              6f8b 00cf  ld   $cf         ;022a CALL
              6f8c 003a  ld   $3a         ;022a 'Expression'
              6f8d 0090  ld   $90         ;022c BRA
              6f8e 00b8  ld   $b8
              6f8f 00cf  ld   $cf         ;022e CALL
              6f90 0038  ld   $38         ;022e 'Keyword'
              6f91 0070  ld   $70         ;0230 'p'
              6f92 0065  ld   $65         ;0231 'e'
              6f93 0065  ld   $65         ;0232 'e'
              6f94 006b  ld   $6b         ;0233 'k'
              6f95 0028  ld   $28         ;0234 '('
              6f96 0000  ld   $00         ;0235 0
              6f97 0035  ld   $35         ;0236 BCC
              6f98 003f  ld   $3f         ;0237 EQ
              6f99 003e  ld   $3e
              6f9a 00cf  ld   $cf         ;0239 CALL
              6f9b 003a  ld   $3a         ;0239 'Expression'
              6f9c 00ad  ld   $ad         ;023b PEEK
              6f9d 002b  ld   $2b         ;023c STW
              6f9e 003c  ld   $3c         ;023c 'Value'
              6f9f 0090  ld   $90         ;023e BRA
              6fa0 00b8  ld   $b8
              6fa1 00cf  ld   $cf         ;0240 CALL
              6fa2 0038  ld   $38         ;0240 'Keyword'
              6fa3 0072  ld   $72         ;0242 'r'
              6fa4 006e  ld   $6e         ;0243 'n'
              6fa5 0064  ld   $64         ;0244 'd'
              6fa6 0028  ld   $28         ;0245 '('
              6fa7 0000  ld   $00         ;0246 0
              6fa8 0035  ld   $35         ;0247 BCC
              6fa9 003f  ld   $3f         ;0248 EQ
              6faa 005c  ld   $5c
              6fab 00cf  ld   $cf         ;024a CALL
              6fac 003a  ld   $3a         ;024a 'Expression'
              6fad 0011  ld   $11         ;024c LDWI
              6fae 00a7  ld   $a7
              6faf 0004  ld   $04
              6fb0 002b  ld   $2b         ;024f STW
              6fb1 0022  ld   $22         ;024f '_sysFn'
              6fb2 00b4  ld   $b4         ;0251 SYS
              6fb3 00fe  ld   $fe
              6fb4 0035  ld   $35         ;0253 BCC
              6fb5 0050  ld   $50         ;0254 LT
              6fb6 004f  ld   $4f
              6fb7 00cf  ld   $cf         ;0256 CALL
              6fb8 003e  ld   $3e         ;0256 'Divide'
              6fb9 0021  ld   $21         ;0258 LDW
              6fba 0040  ld   $40         ;0258 'i'
              6fbb 002b  ld   $2b         ;025a STW
              6fbc 003c  ld   $3c         ;025a 'Value'
              6fbd 0090  ld   $90         ;025c BRA
              6fbe 00b8  ld   $b8
              6fbf 00cf  ld   $cf         ;025e CALL
              6fc0 0038  ld   $38         ;025e 'Keyword'
              6fc1 0075  ld   $75         ;0260 'u'
              6fc2 0073  ld   $73         ;0261 's'
              6fc3 0072  ld   $72         ;0262 'r'
              6fc4 0028  ld   $28         ;0263 '('
              6fc5 0000  ld   $00         ;0264 0
              6fc6 0035  ld   $35         ;0265 BCC
              6fc7 003f  ld   $3f         ;0266 EQ
              6fc8 006e  ld   $6e
              6fc9 00cf  ld   $cf         ;0268 CALL
              6fca 003a  ld   $3a         ;0268 'Expression'
              6fcb 00cf  ld   $cf         ;026a CALL
              6fcc 003c  ld   $3c         ;026a 'Value'
              6fcd 002b  ld   $2b         ;026c STW
              6fce 003c  ld   $3c         ;026c 'Value'
              6fcf 0090  ld   $90         ;026e BRA
              6fd0 00b8  ld   $b8
              6fd1 00cf  ld   $cf         ;0270 CALL
              6fd2 0042  ld   $42         ;0270 'Variable'
              6fd3 002b  ld   $2b         ;0272 STW
              6fd4 0044  ld   $44         ;0272 'k'
              6fd5 00cf  ld   $cf         ;0274 CALL
              6fd6 0034  ld   $34         ;0274 'Spaces'
              6fd7 00cf  ld   $cf         ;0276 CALL
              6fd8 0038  ld   $38         ;0276 'Keyword'
              6fd9 0028  ld   $28         ;0278 '('
              6fda 0000  ld   $00         ;0279 0
              6fdb 0035  ld   $35         ;027a BCC
              6fdc 003f  ld   $3f         ;027b EQ
              6fdd 00b1  ld   $b1
              6fde 0075  ld   $75         ;027d PUSH
              6fdf 0021  ld   $21         ;027e LDW
              6fe0 0044  ld   $44         ;027e 'k'
              6fe1 00ec  ld   $ec         ;0280 STLW
              6fe2 0000  ld   $00
              6fe3 00cf  ld   $cf         ;0282 CALL
              6fe4 003a  ld   $3a         ;0282 'Expression'
              6fe5 0035  ld   $35         ;0284 BCC
              6fe6 0053  ld   $53         ;0285 GE
              6fe7 0087  ld   $87
              6fe8 00cf  ld   $cf         ;0287 CALL
              6fe9 0046  ld   $46         ;0287 'ValueError'
              6fea 00ee  ld   $ee         ;0289 LDLW
              6feb 0000  ld   $00
              6fec 002b  ld   $2b         ;028b STW
              6fed 0044  ld   $44         ;028b 'k'
              6fee 0063  ld   $63         ;028d POP
              6fef 001a  ld   $1a         ;028e LD
              6ff0 0045  ld   $45         ;028e 'k'+1
              6ff1 00b8  ld   $b8         ;0290 SUBW
              6ff2 003c  ld   $3c         ;0290 'Value'
              6ff3 00e6  ld   $e6         ;0292 SUBI
              6ff4 0002  ld   $02
              6ff5 005e  ld   $5e         ;0294 ST
              6ff6 0045  ld   $45         ;0294 'k'+1
              6ff7 0021  ld   $21         ;0296 LDW
              6ff8 0048  ld   $48         ;0296 'End'
              6ff9 00fc  ld   $fc         ;0298 XORW
              6ffa 0044  ld   $44         ;0298 'k'
              6ffb fe00  bra  ac          ;+-----------------------------------+
              6ffc fcfd  bra  $6ffd       ;|                                   |
              6ffd 1418  ld   $18,y       ;| Trampoline for page $6f00 lookups |
              6ffe e006  jmp  y,$06       ;|                                   |
              6fff c218  st   [$18]       ;+-----------------------------------+
              7000 0035  ld   $35         ;029a BCC
              7001 0053  ld   $53         ;029b GE
              7002 009f  ld   $9f
              7003 0021  ld   $21         ;029d LDW
              7004 0048  ld   $48         ;029d 'End'
              7005 0090  ld   $90         ;029f BRA
              7006 00a3  ld   $a3
              7007 0021  ld   $21         ;02a1 LDW
              7008 0044  ld   $44         ;02a1 'k'
              7009 00b8  ld   $b8         ;02a3 SUBW
              700a 0048  ld   $48         ;02a3 'End'
              700b 0035  ld   $35         ;02a5 BCC
              700c 0053  ld   $53         ;02a6 GE
              700d 00a8  ld   $a8
              700e 00cf  ld   $cf         ;02a8 CALL
              700f 0046  ld   $46         ;02a8 'ValueError'
              7010 00cf  ld   $cf         ;02aa CALL
              7011 0038  ld   $38         ;02aa 'Keyword'
              7012 0029  ld   $29         ;02ac ')'
              7013 0000  ld   $00         ;02ad 0
              7014 0035  ld   $35         ;02ae BCC
              7015 0072  ld   $72         ;02af NE
              7016 00b1  ld   $b1
              7017 00cf  ld   $cf         ;02b1 CALL
              7018 004a  ld   $4a         ;02b1 'SyntaxError'
              7019 0021  ld   $21         ;02b3 LDW
              701a 0044  ld   $44         ;02b3 'k'
              701b 00f6  ld   $f6         ;02b5 DEEK
              701c 002b  ld   $2b         ;02b6 STW
              701d 003c  ld   $3c         ;02b6 'Value'
              701e 0063  ld   $63         ;02b8 POP
              701f 00ff  ld   $ff         ;02b9 RET
              7020 00cf  ld   $cf         ;02ba CALL
              7021 0038  ld   $38         ;02ba 'Keyword'
              7022 0029  ld   $29         ;02bc ')'
              7023 0000  ld   $00         ;02bd 0
              7024 0035  ld   $35         ;02be BCC
              7025 0072  ld   $72         ;02bf NE
              7026 00c1  ld   $c1
              7027 00cf  ld   $cf         ;02c1 CALL
              7028 004a  ld   $4a         ;02c1 'SyntaxError'
              7029 0063  ld   $63         ;02c3 POP
              702a 00ff  ld   $ff         ;02c4 RET
              702b 002b  ld   $2b         ;02c5 STW
              702c 004c  ld   $4c         ;02c5 'Factor'
              702d 00cd  ld   $cd         ;02c7 DEF
              702e 00d9  ld   $d9
              702f 0021  ld   $21         ;02c9 LDW
              7030 001a  ld   $1a
              7031 002b  ld   $2b         ;02cb STW
              7032 004e  ld   $4e         ;02cb 'tmp'
              7033 0021  ld   $21         ;02cd LDW
              7034 004e  ld   $4e         ;02cd 'tmp'
              7035 00ad  ld   $ad         ;02cf PEEK
              7036 0093  ld   $93         ;02d0 INC
              7037 004e  ld   $4e         ;02d0 'tmp'
              7038 0035  ld   $35         ;02d2 BCC
              7039 003f  ld   $3f         ;02d3 EQ
              703a 00d7  ld   $d7
              703b 00cf  ld   $cf         ;02d5 CALL
              703c 0050  ld   $50         ;02d5 'PrintChar'
              703d 0090  ld   $90         ;02d7 BRA
              703e 00cb  ld   $cb
              703f 00cf  ld   $cf         ;02d9 CALL
              7040 004e  ld   $4e         ;02d9 'tmp'
              7041 002b  ld   $2b         ;02db STW
              7042 0052  ld   $52         ;02db 'PrintS'
              7043 00cd  ld   $cd         ;02dd DEF
              7044 00f1  ld   $f1
              7045 001a  ld   $1a         ;02df LD
              7046 000f  ld   $0f
              7047 008c  ld   $8c         ;02e1 XORI
              7048 0003  ld   $03
              7049 0035  ld   $35         ;02e3 BCC
              704a 0072  ld   $72         ;02e4 NE
              704b 00f0  ld   $f0
              704c 0021  ld   $21         ;02e6 LDW
              704d 0054  ld   $54         ;02e6 'PrintCharScreen'
              704e 002b  ld   $2b         ;02e8 STW
              704f 0050  ld   $50         ;02e8 'PrintChar'
              7050 00cf  ld   $cf         ;02ea CALL
              7051 0056  ld   $56         ;02ea 'Prompt'
              7052 0042  ld   $42         ;02ec 'B'
              7053 0072  ld   $72         ;02ed 'r'
              7054 0065  ld   $65         ;02ee 'e'
              7055 0061  ld   $61         ;02ef 'a'
              7056 006b  ld   $6b         ;02f0 'k'
              7057 0000  ld   $00         ;02f1 0
              7058 00ff  ld   $ff         ;02f2 RET
              7059 002b  ld   $2b         ;02f3 STW
              705a 0058  ld   $58         ;02f3 'TestBreak'
              705b 0093  ld   $93         ;02f5 INC
              705c 001b  ld   $1b
              705d 00ff  ld   $ff         ;02f7 RET
              705e 0003  ld   $03         ;| RAM segment address (high byte first)
              705f 0000  ld   $00         ;|
              7060 00f9  ld   $f9         ;| Length (1..256)
              7061 00cd  ld   $cd         ;0300 DEF
              7062 006e  ld   $6e
              7063 002b  ld   $2b         ;0302 STW
              7064 0044  ld   $44         ;0302 'k'
              7065 00e6  ld   $e6         ;0304 SUBI
              7066 0083  ld   $83
              7067 0035  ld   $35         ;0306 BCC
              7068 004d  ld   $4d         ;0307 GT
              7069 006d  ld   $6d
              706a 001a  ld   $1a         ;0309 LD
              706b 0031  ld   $31         ;0309 'Pos'+1
              706c 00e6  ld   $e6         ;030b SUBI
              706d 0078  ld   $78
              706e 0035  ld   $35         ;030d BCC
              706f 004d  ld   $4d         ;030e GT
              7070 006d  ld   $6d
              7071 001a  ld   $1a         ;0310 LD
              7072 0030  ld   $30         ;0310 'Pos'
              7073 00e6  ld   $e6         ;0312 SUBI
              7074 009a  ld   $9a
              7075 0035  ld   $35         ;0314 BCC
              7076 0056  ld   $56         ;0315 LE
              7077 0019  ld   $19
              7078 0075  ld   $75         ;0317 PUSH
              7079 00cf  ld   $cf         ;0318 CALL
              707a 005a  ld   $5a         ;0318 'Newline'
              707b 0063  ld   $63         ;031a POP
              707c 0021  ld   $21         ;031b LDW
              707d 0044  ld   $44         ;031b 'k'
              707e 00e6  ld   $e6         ;031d SUBI
              707f 0052  ld   $52
              7080 0035  ld   $35         ;031f BCC
              7081 0053  ld   $53         ;0320 GE
              7082 0029  ld   $29
              7083 00e3  ld   $e3         ;0322 ADDI
              7084 0032  ld   $32
              7085 002b  ld   $2b         ;0324 STW
              7086 0040  ld   $40         ;0324 'i'
              7087 0011  ld   $11         ;0326 LDWI
              7088 0000  ld   $00
              7089 0007  ld   $07
              708a 0090  ld   $90         ;0329 BRA
              708b 002e  ld   $2e
              708c 002b  ld   $2b         ;032b STW
              708d 0040  ld   $40         ;032b 'i'
              708e 0011  ld   $11         ;032d LDWI
              708f 0000  ld   $00
              7090 0008  ld   $08
              7091 002b  ld   $2b         ;0330 STW
              7092 0044  ld   $44         ;0330 'k'
              7093 0021  ld   $21         ;0332 LDW
              7094 0040  ld   $40         ;0332 'i'
              7095 0035  ld   $35         ;0334 BCC
              7096 0050  ld   $50         ;0335 LT
              7097 006d  ld   $6d
              7098 00e9  ld   $e9         ;0337 LSLW
              7099 00e9  ld   $e9         ;0338 LSLW
              709a 0099  ld   $99         ;0339 ADDW
              709b 0040  ld   $40         ;0339 'i'
              709c 0099  ld   $99         ;033b ADDW
              709d 0044  ld   $44         ;033b 'k'
              709e 002b  ld   $2b         ;033d STW
              709f 0044  ld   $44         ;033d 'k'
              70a0 0011  ld   $11         ;033f LDWI
              70a1 00e1  ld   $e1
              70a2 0004  ld   $04
              70a3 002b  ld   $2b         ;0342 STW
              70a4 0022  ld   $22         ;0342 '_sysFn'
              70a5 0021  ld   $21         ;0344 LDW
              70a6 002a  ld   $2a         ;0344 '_sysArgs6'
              70a7 002b  ld   $2b         ;0346 STW
              70a8 0024  ld   $24         ;0346 '_sysArgs0'
              70a9 0021  ld   $21         ;0348 LDW
              70aa 0030  ld   $30         ;0348 'Pos'
              70ab 002b  ld   $2b         ;034a STW
              70ac 0028  ld   $28
              70ad 00ec  ld   $ec         ;034c STLW
              70ae 00fe  ld   $fe
              70af 00e3  ld   $e3         ;034e ADDI
              70b0 0006  ld   $06
              70b1 002b  ld   $2b         ;0350 STW
              70b2 0030  ld   $30         ;0350 'Pos'
              70b3 0059  ld   $59         ;0352 LDI
              70b4 0005  ld   $05
              70b5 002b  ld   $2b         ;0354 STW
              70b6 0040  ld   $40         ;0354 'i'
              70b7 0021  ld   $21         ;0356 LDW
              70b8 0044  ld   $44         ;0356 'k'
              70b9 007f  ld   $7f         ;0358 LUP
              70ba 0000  ld   $00
              70bb 005e  ld   $5e         ;035a ST
              70bc 0026  ld   $26
              70bd 00b4  ld   $b4         ;035c SYS
              70be 00cc  ld   $cc
              70bf 0093  ld   $93         ;035e INC
              70c0 0044  ld   $44         ;035e 'k'
              70c1 0093  ld   $93         ;0360 INC
              70c2 0028  ld   $28
              70c3 0021  ld   $21         ;0362 LDW
              70c4 0040  ld   $40         ;0362 'i'
              70c5 00e6  ld   $e6         ;0364 SUBI
              70c6 0001  ld   $01
              70c7 0035  ld   $35         ;0366 BCC
              70c8 004d  ld   $4d         ;0367 GT
              70c9 0052  ld   $52
              70ca 005e  ld   $5e         ;0369 ST
              70cb 0026  ld   $26
              70cc 00b4  ld   $b4         ;036b SYS
              70cd 00cc  ld   $cc
              70ce 00ee  ld   $ee         ;036d LDLW
              70cf 00fe  ld   $fe
              70d0 00ff  ld   $ff         ;036f RET
              70d1 002b  ld   $2b         ;0370 STW
              70d2 0050  ld   $50         ;0370 'PrintChar'
              70d3 002b  ld   $2b         ;0372 STW
              70d4 0054  ld   $54         ;0372 'PrintCharScreen'
              70d5 00cd  ld   $cd         ;0374 DEF
              70d6 00f4  ld   $f4
              70d7 0075  ld   $75         ;0376 PUSH
              70d8 002b  ld   $2b         ;0377 STW
              70d9 004e  ld   $4e         ;0377 'tmp'
              70da 0011  ld   $11         ;0379 LDWI
              70db 0000  ld   $00
              70dc 000b  ld   $0b
              70dd 002b  ld   $2b         ;037c STW
              70de 0022  ld   $22         ;037c '_sysFn'
              70df 001a  ld   $1a         ;037e LD
              70e0 0021  ld   $21
              70e1 00e6  ld   $e6         ;0380 SUBI
              70e2 0038  ld   $38
              70e3 0035  ld   $35         ;0382 BCC
              70e4 0050  ld   $50         ;0383 LT
              70e5 0087  ld   $87
              70e6 00e6  ld   $e6         ;0385 SUBI
              70e7 00ff  ld   $ff
              70e8 00b4  ld   $b4         ;0387 SYS
              70e9 00e7  ld   $e7
              70ea 0011  ld   $11         ;0389 LDWI
              70eb 00a0  ld   $a0
              70ec 001b  ld   $1b
              70ed 002b  ld   $2b         ;038c STW
              70ee 0036  ld   $36         ;038c 'Active'
              70ef 0021  ld   $21         ;038e LDW
              70f0 004e  ld   $4e         ;038e 'tmp'
              70f1 00f3  ld   $f3         ;0390 DOKE
              70f2 0036  ld   $36         ;0390 'Active'
              70f3 0059  ld   $59         ;0392 LDI
              70f4 00a2  ld   $a2
              70f5 005e  ld   $5e         ;0394 ST
              70f6 0036  ld   $36         ;0394 'Active'
              70f7 0059  ld   $59         ;0396 LDI
              70f8 007f  ld   $7f
              70f9 00cf  ld   $cf         ;0398 CALL
              70fa 0050  ld   $50         ;0398 'PrintChar'
              70fb fe00  bra  ac          ;+-----------------------------------+
              70fc fcfd  bra  $70fd       ;|                                   |
              70fd 1418  ld   $18,y       ;| Trampoline for page $7000 lookups |
              70fe e006  jmp  y,$06       ;|                                   |
              70ff c218  st   [$18]       ;+-----------------------------------+
              7100 002b  ld   $2b         ;039a STW
              7101 0030  ld   $30         ;039a 'Pos'
              7102 001a  ld   $1a         ;039c LD
              7103 000f  ld   $0f
              7104 002b  ld   $2b         ;039e STW
              7105 004e  ld   $4e         ;039e 'tmp'
              7106 001a  ld   $1a         ;03a0 LD
              7107 000f  ld   $0f
              7108 00f0  ld   $f0         ;03a2 POKE
              7109 0036  ld   $36         ;03a2 'Active'
              710a 00fc  ld   $fc         ;03a4 XORW
              710b 004e  ld   $4e         ;03a4 'tmp'
              710c 0035  ld   $35         ;03a6 BCC
              710d 0072  ld   $72         ;03a7 NE
              710e 00ac  ld   $ac
              710f 0021  ld   $21         ;03a9 LDW
              7110 0036  ld   $36         ;03a9 'Active'
              7111 00ad  ld   $ad         ;03ab PEEK
              7112 0090  ld   $90         ;03ac BRA
              7113 009c  ld   $9c
              7114 0021  ld   $21         ;03ae LDW
              7115 0036  ld   $36         ;03ae 'Active'
              7116 00ad  ld   $ad         ;03b0 PEEK
              7117 008c  ld   $8c         ;03b1 XORI
              7118 000a  ld   $0a
              7119 0035  ld   $35         ;03b3 BCC
              711a 003f  ld   $3f         ;03b4 EQ
              711b 00ef  ld   $ef
              711c 008c  ld   $8c         ;03b6 XORI
              711d 0075  ld   $75
              711e 0035  ld   $35         ;03b8 BCC
              711f 0072  ld   $72         ;03b9 NE
              7120 00d0  ld   $d0
              7121 0059  ld   $59         ;03bb LDI
              7122 0020  ld   $20
              7123 00cf  ld   $cf         ;03bd CALL
              7124 0050  ld   $50         ;03bd 'PrintChar'
              7125 002b  ld   $2b         ;03bf STW
              7126 0030  ld   $30         ;03bf 'Pos'
              7127 001a  ld   $1a         ;03c1 LD
              7128 0030  ld   $30         ;03c1 'Pos'
              7129 00e6  ld   $e6         ;03c3 SUBI
              712a 0006  ld   $06
              712b 0035  ld   $35         ;03c5 BCC
              712c 0050  ld   $50         ;03c6 LT
              712d 00ce  ld   $ce
              712e 005e  ld   $5e         ;03c8 ST
              712f 0030  ld   $30         ;03c8 'Pos'
              7130 0021  ld   $21         ;03ca LDW
              7131 0036  ld   $36         ;03ca 'Active'
              7132 00e6  ld   $e6         ;03cc SUBI
              7133 0001  ld   $01
              7134 002b  ld   $2b         ;03ce STW
              7135 0036  ld   $36         ;03ce 'Active'
              7136 0090  ld   $90         ;03d0 BRA
              7137 0094  ld   $94
              7138 00e6  ld   $e6         ;03d2 SUBI
              7139 0060  ld   $60
              713a 0035  ld   $35         ;03d4 BCC
              713b 0053  ld   $53         ;03d5 GE
              713c 0094  ld   $94
              713d 001a  ld   $1a         ;03d7 LD
              713e 0030  ld   $30         ;03d7 'Pos'
              713f 00e6  ld   $e6         ;03d9 SUBI
              7140 0096  ld   $96
              7141 0035  ld   $35         ;03db BCC
              7142 0050  ld   $50         ;03dc LT
              7143 00e6  ld   $e6
              7144 0059  ld   $59         ;03de LDI
              7145 00a2  ld   $a2
              7146 005e  ld   $5e         ;03e0 ST
              7147 0036  ld   $36         ;03e0 'Active'
              7148 0059  ld   $59         ;03e2 LDI
              7149 005c  ld   $5c
              714a 00cf  ld   $cf         ;03e4 CALL
              714b 0050  ld   $50         ;03e4 'PrintChar'
              714c 0090  ld   $90         ;03e6 BRA
              714d 0094  ld   $94
              714e 0021  ld   $21         ;03e8 LDW
              714f 0036  ld   $36         ;03e8 'Active'
              7150 00ad  ld   $ad         ;03ea PEEK
              7151 00cf  ld   $cf         ;03eb CALL
              7152 0050  ld   $50         ;03eb 'PrintChar'
              7153 0093  ld   $93         ;03ed INC
              7154 0036  ld   $36         ;03ed 'Active'
              7155 0090  ld   $90         ;03ef BRA
              7156 0094  ld   $94
              7157 0011  ld   $11         ;03f1 LDWI
              7158 00e8  ld   $e8
              7159 0006  ld   $06
              715a 00cf  ld   $cf         ;03f4 CALL
              715b 0018  ld   $18         ;03f4 vAC
              715c 0093  ld   $93         ;03f6 INC
              715d 001b  ld   $1b
              715e 00ff  ld   $ff         ;03f8 RET
              715f 0004  ld   $04         ;| RAM segment address (high byte first)
              7160 0000  ld   $00         ;|
              7161 00f8  ld   $f8         ;| Length (1..256)
              7162 002b  ld   $2b         ;0400 STW
              7163 005c  ld   $5c         ;0400 'GetLine'
              7164 00cd  ld   $cd         ;0402 DEF
              7165 00ef  ld   $ef
              7166 00cf  ld   $cf         ;0404 CALL
              7167 0034  ld   $34         ;0404 'Spaces'
              7168 00cf  ld   $cf         ;0406 CALL
              7169 0038  ld   $38         ;0406 'Keyword'
              716a 0067  ld   $67         ;0408 'g'
              716b 006f  ld   $6f         ;0409 'o'
              716c 0074  ld   $74         ;040a 't'
              716d 006f  ld   $6f         ;040b 'o'
              716e 0000  ld   $00         ;040c 0
              716f 0035  ld   $35         ;040d BCC
              7170 003f  ld   $3f         ;040e EQ
              7171 0012  ld   $12
              7172 00cf  ld   $cf         ;0410 CALL
              7173 003a  ld   $3a         ;0410 'Expression'
              7174 00cf  ld   $cf         ;0412 CALL
              7175 005e  ld   $5e         ;0412 'GotoValue'
              7176 00cf  ld   $cf         ;0414 CALL
              7177 0038  ld   $38         ;0414 'Keyword'
              7178 0067  ld   $67         ;0416 'g'
              7179 006f  ld   $6f         ;0417 'o'
              717a 0073  ld   $73         ;0418 's'
              717b 0075  ld   $75         ;0419 'u'
              717c 0062  ld   $62         ;041a 'b'
              717d 0000  ld   $00         ;041b 0
              717e 0035  ld   $35         ;041c BCC
              717f 003f  ld   $3f         ;041d EQ
              7180 0026  ld   $26
              7181 00cf  ld   $cf         ;041f CALL
              7182 003a  ld   $3a         ;041f 'Expression'
              7183 0075  ld   $75         ;0421 PUSH
              7184 0021  ld   $21         ;0422 LDW
              7185 0036  ld   $36         ;0422 'Active'
              7186 00ec  ld   $ec         ;0424 STLW
              7187 0000  ld   $00
              7188 00cf  ld   $cf         ;0426 CALL
              7189 005e  ld   $5e         ;0426 'GotoValue'
              718a 00cf  ld   $cf         ;0428 CALL
              718b 0038  ld   $38         ;0428 'Keyword'
              718c 0072  ld   $72         ;042a 'r'
              718d 0065  ld   $65         ;042b 'e'
              718e 0074  ld   $74         ;042c 't'
              718f 0075  ld   $75         ;042d 'u'
              7190 0072  ld   $72         ;042e 'r'
              7191 006e  ld   $6e         ;042f 'n'
              7192 0000  ld   $00         ;0430 0
              7193 0035  ld   $35         ;0431 BCC
              7194 003f  ld   $3f         ;0432 EQ
              7195 003f  ld   $3f
              7196 001a  ld   $1a         ;0434 LD
              7197 001c  ld   $1c
              7198 0035  ld   $35         ;0436 BCC
              7199 0072  ld   $72         ;0437 NE
              719a 0039  ld   $39
              719b 00cf  ld   $cf         ;0439 CALL
              719c 0060  ld   $60         ;0439 'StackError'
              719d 00f6  ld   $f6         ;043b DEEK
              719e 002b  ld   $2b         ;043c STW
              719f 0036  ld   $36         ;043c 'Active'
              71a0 0063  ld   $63         ;043e POP
              71a1 00cf  ld   $cf         ;043f CALL
              71a2 0062  ld   $62         ;043f 'EndOfLine'
              71a3 00cf  ld   $cf         ;0441 CALL
              71a4 0038  ld   $38         ;0441 'Keyword'
              71a5 0069  ld   $69         ;0443 'i'
              71a6 0066  ld   $66         ;0444 'f'
              71a7 0000  ld   $00         ;0445 0
              71a8 0035  ld   $35         ;0446 BCC
              71a9 003f  ld   $3f         ;0447 EQ
              71aa 0096  ld   $96
              71ab 00cf  ld   $cf         ;0449 CALL
              71ac 003a  ld   $3a         ;0449 'Expression'
              71ad 00df  ld   $df         ;044b ALLOC
              71ae 00fc  ld   $fc
              71af 00ec  ld   $ec         ;044d STLW
              71b0 0002  ld   $02
              71b1 00cf  ld   $cf         ;044f CALL
              71b2 0064  ld   $64         ;044f 'RelOp'
              71b3 0035  ld   $35         ;0451 BCC
              71b4 0072  ld   $72         ;0452 NE
              71b5 0054  ld   $54
              71b6 00cf  ld   $cf         ;0454 CALL
              71b7 004a  ld   $4a         ;0454 'SyntaxError'
              71b8 00ec  ld   $ec         ;0456 STLW
              71b9 0000  ld   $00
              71ba 00cf  ld   $cf         ;0458 CALL
              71bb 003a  ld   $3a         ;0458 'Expression'
              71bc 00cf  ld   $cf         ;045a CALL
              71bd 0038  ld   $38         ;045a 'Keyword'
              71be 0074  ld   $74         ;045c 't'
              71bf 0068  ld   $68         ;045d 'h'
              71c0 0065  ld   $65         ;045e 'e'
              71c1 006e  ld   $6e         ;045f 'n'
              71c2 0000  ld   $00         ;0460 0
              71c3 00ee  ld   $ee         ;0461 LDLW
              71c4 0002  ld   $02
              71c5 00fc  ld   $fc         ;0463 XORW
              71c6 003c  ld   $3c         ;0463 'Value'
              71c7 0035  ld   $35         ;0465 BCC
              71c8 0053  ld   $53         ;0466 GE
              71c9 006a  ld   $6a
              71ca 00ee  ld   $ee         ;0468 LDLW
              71cb 0002  ld   $02
              71cc 0090  ld   $90         ;046a BRA
              71cd 006e  ld   $6e
              71ce 00ee  ld   $ee         ;046c LDLW
              71cf 0002  ld   $02
              71d0 00b8  ld   $b8         ;046e SUBW
              71d1 003c  ld   $3c         ;046e 'Value'
              71d2 0035  ld   $35         ;0470 BCC
              71d3 0056  ld   $56         ;0471 LE
              71d4 0073  ld   $73
              71d5 0059  ld   $59         ;0473 LDI
              71d6 0004  ld   $04
              71d7 0035  ld   $35         ;0475 BCC
              71d8 0053  ld   $53         ;0476 GE
              71d9 0078  ld   $78
              71da 0059  ld   $59         ;0478 LDI
              71db 0001  ld   $01
              71dc 0035  ld   $35         ;047a BCC
              71dd 0072  ld   $72         ;047b NE
              71de 007d  ld   $7d
              71df 0059  ld   $59         ;047d LDI
              71e0 0002  ld   $02
              71e1 002b  ld   $2b         ;047f STW
              71e2 0040  ld   $40         ;047f 'i'
              71e3 00ee  ld   $ee         ;0481 LDLW
              71e4 0000  ld   $00
              71e5 00f8  ld   $f8         ;0483 ANDW
              71e6 0040  ld   $40         ;0483 'i'
              71e7 00df  ld   $df         ;0485 ALLOC
              71e8 0004  ld   $04
              71e9 0035  ld   $35         ;0487 BCC
              71ea 003f  ld   $3f         ;0488 EQ
              71eb 008a  ld   $8a
              71ec 00cf  ld   $cf         ;048a CALL
              71ed 0066  ld   $66         ;048a 'Statements'
              71ee 0021  ld   $21         ;048c LDW
              71ef 0036  ld   $36         ;048c 'Active'
              71f0 00ad  ld   $ad         ;048e PEEK
              71f1 0035  ld   $35         ;048f BCC
              71f2 003f  ld   $3f         ;0490 EQ
              71f3 0094  ld   $94
              71f4 0093  ld   $93         ;0492 INC
              71f5 0036  ld   $36         ;0492 'Active'
              71f6 0090  ld   $90         ;0494 BRA
              71f7 008a  ld   $8a
              71f8 00cf  ld   $cf         ;0496 CALL
              71f9 0062  ld   $62         ;0496 'EndOfLine'
              71fa 00cf  ld   $cf         ;0498 CALL
              71fb fe00  bra  ac          ;+-----------------------------------+
              71fc fcfd  bra  $71fd       ;|                                   |
              71fd 1418  ld   $18,y       ;| Trampoline for page $7100 lookups |
              71fe e006  jmp  y,$06       ;|                                   |
              71ff c218  st   [$18]       ;+-----------------------------------+
              7200 0038  ld   $38         ;0498 'Keyword'
              7201 0070  ld   $70         ;049a 'p'
              7202 006f  ld   $6f         ;049b 'o'
              7203 006b  ld   $6b         ;049c 'k'
              7204 0065  ld   $65         ;049d 'e'
              7205 0000  ld   $00         ;049e 0
              7206 0035  ld   $35         ;049f BCC
              7207 003f  ld   $3f         ;04a0 EQ
              7208 00b3  ld   $b3
              7209 00cf  ld   $cf         ;04a2 CALL
              720a 003a  ld   $3a         ;04a2 'Expression'
              720b 002b  ld   $2b         ;04a4 STW
              720c 0068  ld   $68         ;04a4 'Address'
              720d 00cf  ld   $cf         ;04a6 CALL
              720e 0038  ld   $38         ;04a6 'Keyword'
              720f 002c  ld   $2c         ;04a8 ','
              7210 0000  ld   $00         ;04a9 0
              7211 0035  ld   $35         ;04aa BCC
              7212 0072  ld   $72         ;04ab NE
              7213 00ad  ld   $ad
              7214 00cf  ld   $cf         ;04ad CALL
              7215 004a  ld   $4a         ;04ad 'SyntaxError'
              7216 00cf  ld   $cf         ;04af CALL
              7217 003a  ld   $3a         ;04af 'Expression'
              7218 00f0  ld   $f0         ;04b1 POKE
              7219 0068  ld   $68         ;04b1 'Address'
              721a 00cf  ld   $cf         ;04b3 CALL
              721b 0062  ld   $62         ;04b3 'EndOfLine'
              721c 00cf  ld   $cf         ;04b5 CALL
              721d 0038  ld   $38         ;04b5 'Keyword'
              721e 0027  ld   $27         ;04b7 "'"
              721f 0000  ld   $00         ;04b8 0
              7220 0035  ld   $35         ;04b9 BCC
              7221 0072  ld   $72         ;04ba NE
              7222 00c0  ld   $c0
              7223 00cf  ld   $cf         ;04bc CALL
              7224 0038  ld   $38         ;04bc 'Keyword'
              7225 0072  ld   $72         ;04be 'r'
              7226 0065  ld   $65         ;04bf 'e'
              7227 006d  ld   $6d         ;04c0 'm'
              7228 0000  ld   $00         ;04c1 0
              7229 0035  ld   $35         ;04c2 BCC
              722a 003f  ld   $3f         ;04c3 EQ
              722b 00cf  ld   $cf
              722c 0021  ld   $21         ;04c5 LDW
              722d 0036  ld   $36         ;04c5 'Active'
              722e 00ad  ld   $ad         ;04c7 PEEK
              722f 0035  ld   $35         ;04c8 BCC
              7230 003f  ld   $3f         ;04c9 EQ
              7231 00cd  ld   $cd
              7232 0093  ld   $93         ;04cb INC
              7233 0036  ld   $36         ;04cb 'Active'
              7234 0090  ld   $90         ;04cd BRA
              7235 00c3  ld   $c3
              7236 00cf  ld   $cf         ;04cf CALL
              7237 0062  ld   $62         ;04cf 'EndOfLine'
              7238 00cf  ld   $cf         ;04d1 CALL
              7239 0038  ld   $38         ;04d1 'Keyword'
              723a 006c  ld   $6c         ;04d3 'l'
              723b 0069  ld   $69         ;04d4 'i'
              723c 006e  ld   $6e         ;04d5 'n'
              723d 0065  ld   $65         ;04d6 'e'
              723e 0000  ld   $00         ;04d7 0
              723f 0035  ld   $35         ;04d8 BCC
              7240 003f  ld   $3f         ;04d9 EQ
              7241 00de  ld   $de
              7242 0011  ld   $11         ;04db LDWI
              7243 00a0  ld   $a0
              7244 0019  ld   $19
              7245 00cf  ld   $cf         ;04de CALL
              7246 0018  ld   $18         ;04de vAC
              7247 00cf  ld   $cf         ;04e0 CALL
              7248 0038  ld   $38         ;04e0 'Keyword'
              7249 0065  ld   $65         ;04e2 'e'
              724a 006e  ld   $6e         ;04e3 'n'
              724b 0064  ld   $64         ;04e4 'd'
              724c 0000  ld   $00         ;04e5 0
              724d 0035  ld   $35         ;04e6 BCC
              724e 003f  ld   $3f         ;04e7 EQ
              724f 00ea  ld   $ea
              7250 00cf  ld   $cf         ;04e9 CALL
              7251 0056  ld   $56         ;04e9 'Prompt'
              7252 0000  ld   $00         ;04eb 0
              7253 0011  ld   $11         ;04ec LDWI
              7254 0000  ld   $00
              7255 0005  ld   $05
              7256 00cf  ld   $cf         ;04ef CALL
              7257 0018  ld   $18         ;04ef vAC
              7258 002b  ld   $2b         ;04f1 STW
              7259 0066  ld   $66         ;04f1 'Statements'
              725a 0093  ld   $93         ;04f3 INC
              725b 001b  ld   $1b
              725c 0093  ld   $93         ;04f5 INC
              725d 001b  ld   $1b
              725e 00ff  ld   $ff         ;04f7 RET
              725f 0005  ld   $05         ;| RAM segment address (high byte first)
              7260 0000  ld   $00         ;|
              7261 0000  ld   $00         ;| Length (1..256)
              7262 00cf  ld   $cf         ;0500 CALL
              7263 0038  ld   $38         ;0500 'Keyword'
              7264 006e  ld   $6e         ;0502 'n'
              7265 0065  ld   $65         ;0503 'e'
              7266 0078  ld   $78         ;0504 'x'
              7267 0074  ld   $74         ;0505 't'
              7268 0000  ld   $00         ;0506 0
              7269 0035  ld   $35         ;0507 BCC
              726a 003f  ld   $3f         ;0508 EQ
              726b 0037  ld   $37
              726c 00cf  ld   $cf         ;050a CALL
              726d 0042  ld   $42         ;050a 'Variable'
              726e 002b  ld   $2b         ;050c STW
              726f 0068  ld   $68         ;050c 'Address'
              7270 0075  ld   $75         ;050e PUSH
              7271 0021  ld   $21         ;050f LDW
              7272 0036  ld   $36         ;050f 'Active'
              7273 00ec  ld   $ec         ;0511 STLW
              7274 0000  ld   $00
              7275 0011  ld   $11         ;0513 LDWI
              7276 0000  ld   $00
              7277 00ff  ld   $ff
              7278 0099  ld   $99         ;0516 ADDW
              7279 0068  ld   $68         ;0516 'Address'
              727a 00f6  ld   $f6         ;0518 DEEK
              727b 0035  ld   $35         ;0519 BCC
              727c 0072  ld   $72         ;051a NE
              727d 001c  ld   $1c
              727e 00cf  ld   $cf         ;051c CALL
              727f 0046  ld   $46         ;051c 'ValueError'
              7280 002b  ld   $2b         ;051e STW
              7281 0036  ld   $36         ;051e 'Active'
              7282 00cf  ld   $cf         ;0520 CALL
              7283 003a  ld   $3a         ;0520 'Expression'
              7284 0021  ld   $21         ;0522 LDW
              7285 0068  ld   $68         ;0522 'Address'
              7286 00f6  ld   $f6         ;0524 DEEK
              7287 00e3  ld   $e3         ;0525 ADDI
              7288 0001  ld   $01
              7289 00f3  ld   $f3         ;0527 DOKE
              728a 0068  ld   $68         ;0527 'Address'
              728b 00b8  ld   $b8         ;0529 SUBW
              728c 003c  ld   $3c         ;0529 'Value'
              728d 0035  ld   $35         ;052b BCC
              728e 0056  ld   $56         ;052c LE
              728f 0032  ld   $32
              7290 00ee  ld   $ee         ;052e LDLW
              7291 0000  ld   $00
              7292 002b  ld   $2b         ;0530 STW
              7293 0036  ld   $36         ;0530 'Active'
              7294 00cf  ld   $cf         ;0532 CALL
              7295 0034  ld   $34         ;0532 'Spaces'
              7296 0063  ld   $63         ;0534 POP
              7297 00cf  ld   $cf         ;0535 CALL
              7298 0058  ld   $58         ;0535 'TestBreak'
              7299 00cf  ld   $cf         ;0537 CALL
              729a 0062  ld   $62         ;0537 'EndOfLine'
              729b 00cf  ld   $cf         ;0539 CALL
              729c 0038  ld   $38         ;0539 'Keyword'
              729d 0066  ld   $66         ;053b 'f'
              729e 006f  ld   $6f         ;053c 'o'
              729f 0072  ld   $72         ;053d 'r'
              72a0 0000  ld   $00         ;053e 0
              72a1 0035  ld   $35         ;053f BCC
              72a2 003f  ld   $3f         ;0540 EQ
              72a3 006c  ld   $6c
              72a4 00cf  ld   $cf         ;0542 CALL
              72a5 0042  ld   $42         ;0542 'Variable'
              72a6 002b  ld   $2b         ;0544 STW
              72a7 0068  ld   $68         ;0544 'Address'
              72a8 00cf  ld   $cf         ;0546 CALL
              72a9 0034  ld   $34         ;0546 'Spaces'
              72aa 00cf  ld   $cf         ;0548 CALL
              72ab 0038  ld   $38         ;0548 'Keyword'
              72ac 003d  ld   $3d         ;054a '='
              72ad 0000  ld   $00         ;054b 0
              72ae 0035  ld   $35         ;054c BCC
              72af 0072  ld   $72         ;054d NE
              72b0 004f  ld   $4f
              72b1 00cf  ld   $cf         ;054f CALL
              72b2 004a  ld   $4a         ;054f 'SyntaxError'
              72b3 00cf  ld   $cf         ;0551 CALL
              72b4 003a  ld   $3a         ;0551 'Expression'
              72b5 00f3  ld   $f3         ;0553 DOKE
              72b6 0068  ld   $68         ;0553 'Address'
              72b7 00cf  ld   $cf         ;0555 CALL
              72b8 0038  ld   $38         ;0555 'Keyword'
              72b9 0074  ld   $74         ;0557 't'
              72ba 006f  ld   $6f         ;0558 'o'
              72bb 0000  ld   $00         ;0559 0
              72bc 0035  ld   $35         ;055a BCC
              72bd 0072  ld   $72         ;055b NE
              72be 005d  ld   $5d
              72bf 00cf  ld   $cf         ;055d CALL
              72c0 004a  ld   $4a         ;055d 'SyntaxError'
              72c1 0011  ld   $11         ;055f LDWI
              72c2 0000  ld   $00
              72c3 00ff  ld   $ff
              72c4 0099  ld   $99         ;0562 ADDW
              72c5 0068  ld   $68         ;0562 'Address'
              72c6 002b  ld   $2b         ;0564 STW
              72c7 006a  ld   $6a         ;0564 'j'
              72c8 0021  ld   $21         ;0566 LDW
              72c9 0036  ld   $36         ;0566 'Active'
              72ca 00f3  ld   $f3         ;0568 DOKE
              72cb 006a  ld   $6a         ;0568 'j'
              72cc 00cf  ld   $cf         ;056a CALL
              72cd 003a  ld   $3a         ;056a 'Expression'
              72ce 00cf  ld   $cf         ;056c CALL
              72cf 0062  ld   $62         ;056c 'EndOfLine'
              72d0 00cf  ld   $cf         ;056e CALL
              72d1 0038  ld   $38         ;056e 'Keyword'
              72d2 0061  ld   $61         ;0570 'a'
              72d3 0074  ld   $74         ;0571 't'
              72d4 0000  ld   $00         ;0572 0
              72d5 0035  ld   $35         ;0573 BCC
              72d6 003f  ld   $3f         ;0574 EQ
              72d7 009a  ld   $9a
              72d8 00cf  ld   $cf         ;0576 CALL
              72d9 003a  ld   $3a         ;0576 'Expression'
              72da 0035  ld   $35         ;0578 BCC
              72db 0053  ld   $53         ;0579 GE
              72dc 007b  ld   $7b
              72dd 00cf  ld   $cf         ;057b CALL
              72de 0046  ld   $46         ;057b 'ValueError'
              72df 005e  ld   $5e         ;057d ST
              72e0 0030  ld   $30         ;057d 'Pos'
              72e1 00cf  ld   $cf         ;057f CALL
              72e2 0038  ld   $38         ;057f 'Keyword'
              72e3 002c  ld   $2c         ;0581 ','
              72e4 0000  ld   $00         ;0582 0
              72e5 0035  ld   $35         ;0583 BCC
              72e6 003f  ld   $3f         ;0584 EQ
              72e7 0098  ld   $98
              72e8 00cf  ld   $cf         ;0586 CALL
              72e9 003a  ld   $3a         ;0586 'Expression'
              72ea 0035  ld   $35         ;0588 BCC
              72eb 0053  ld   $53         ;0589 GE
              72ec 008b  ld   $8b
              72ed 00cf  ld   $cf         ;058b CALL
              72ee 0046  ld   $46         ;058b 'ValueError'
              72ef 00e6  ld   $e6         ;058d SUBI
              72f0 0078  ld   $78
              72f1 0035  ld   $35         ;058f BCC
              72f2 0050  ld   $50         ;0590 LT
              72f3 0092  ld   $92
              72f4 00cf  ld   $cf         ;0592 CALL
              72f5 0046  ld   $46         ;0592 'ValueError'
              72f6 00e3  ld   $e3         ;0594 ADDI
              72f7 00f8  ld   $f8
              72f8 00e9  ld   $e9         ;0596 LSLW
              72f9 00ad  ld   $ad         ;0597 PEEK
              72fa 005e  ld   $5e         ;0598 ST
              72fb fe00  bra  ac          ;+-----------------------------------+
              72fc fcfd  bra  $72fd       ;|                                   |
              72fd 1418  ld   $18,y       ;| Trampoline for page $7200 lookups |
              72fe e006  jmp  y,$06       ;|                                   |
              72ff c218  st   [$18]       ;+-----------------------------------+
              7300 0031  ld   $31         ;0598 'Pos'+1
              7301 00cf  ld   $cf         ;059a CALL
              7302 0062  ld   $62         ;059a 'EndOfLine'
              7303 00cf  ld   $cf         ;059c CALL
              7304 0038  ld   $38         ;059c 'Keyword'
              7305 0070  ld   $70         ;059e 'p'
              7306 0075  ld   $75         ;059f 'u'
              7307 0074  ld   $74         ;05a0 't'
              7308 0000  ld   $00         ;05a1 0
              7309 0035  ld   $35         ;05a2 BCC
              730a 003f  ld   $3f         ;05a3 EQ
              730b 00a9  ld   $a9
              730c 00cf  ld   $cf         ;05a5 CALL
              730d 003a  ld   $3a         ;05a5 'Expression'
              730e 00cf  ld   $cf         ;05a7 CALL
              730f 0050  ld   $50         ;05a7 'PrintChar'
              7310 00cf  ld   $cf         ;05a9 CALL
              7311 0062  ld   $62         ;05a9 'EndOfLine'
              7312 00cf  ld   $cf         ;05ab CALL
              7313 0038  ld   $38         ;05ab 'Keyword'
              7314 006d  ld   $6d         ;05ad 'm'
              7315 006f  ld   $6f         ;05ae 'o'
              7316 0064  ld   $64         ;05af 'd'
              7317 0065  ld   $65         ;05b0 'e'
              7318 0000  ld   $00         ;05b1 0
              7319 0035  ld   $35         ;05b2 BCC
              731a 003f  ld   $3f         ;05b3 EQ
              731b 00c7  ld   $c7
              731c 00cf  ld   $cf         ;05b5 CALL
              731d 003a  ld   $3a         ;05b5 'Expression'
              731e 001a  ld   $1a         ;05b7 LD
              731f 0021  ld   $21
              7320 00e6  ld   $e6         ;05b9 SUBI
              7321 0020  ld   $20
              7322 0035  ld   $35         ;05bb BCC
              7323 0050  ld   $50         ;05bc LT
              7324 00c5  ld   $c5
              7325 0011  ld   $11         ;05be LDWI
              7326 0000  ld   $00
              7327 000b  ld   $0b
              7328 002b  ld   $2b         ;05c1 STW
              7329 0022  ld   $22         ;05c1 '_sysFn'
              732a 0021  ld   $21         ;05c3 LDW
              732b 003c  ld   $3c         ;05c3 'Value'
              732c 00b4  ld   $b4         ;05c5 SYS
              732d 00e7  ld   $e7
              732e 00cf  ld   $cf         ;05c7 CALL
              732f 0062  ld   $62         ;05c7 'EndOfLine'
              7330 0011  ld   $11         ;05c9 LDWI
              7331 00a0  ld   $a0
              7332 0014  ld   $14
              7333 00cf  ld   $cf         ;05cc CALL
              7334 0018  ld   $18         ;05cc vAC
              7335 0059  ld   $59         ;05ce LDI
              7336 0000  ld   $00
              7337 002b  ld   $2b         ;05d0 STW
              7338 003c  ld   $3c         ;05d0 'Value'
              7339 00e9  ld   $e9         ;05d2 LSLW
              733a 00e9  ld   $e9         ;05d3 LSLW
              733b 00e9  ld   $e9         ;05d4 LSLW
              733c 00e9  ld   $e9         ;05d5 LSLW
              733d 002b  ld   $2b         ;05d6 STW
              733e 0040  ld   $40         ;05d6 'i'
              733f 0093  ld   $93         ;05d8 INC
              7340 0036  ld   $36         ;05d8 'Active'
              7341 0021  ld   $21         ;05da LDW
              7342 0036  ld   $36         ;05da 'Active'
              7343 00ad  ld   $ad         ;05dc PEEK
              7344 00e6  ld   $e6         ;05dd SUBI
              7345 0030  ld   $30
              7346 0035  ld   $35         ;05df BCC
              7347 0050  ld   $50         ;05e0 LT
              7348 00fd  ld   $fd
              7349 00e6  ld   $e6         ;05e2 SUBI
              734a 000a  ld   $0a
              734b 0035  ld   $35         ;05e4 BCC
              734c 0053  ld   $53         ;05e5 GE
              734d 00eb  ld   $eb
              734e 00e3  ld   $e3         ;05e7 ADDI
              734f 000a  ld   $0a
              7350 0099  ld   $99         ;05e9 ADDW
              7351 0040  ld   $40         ;05e9 'i'
              7352 0090  ld   $90         ;05eb BRA
              7353 00ce  ld   $ce
              7354 0082  ld   $82         ;05ed ANDI
              7355 00df  ld   $df
              7356 00e6  ld   $e6         ;05ef SUBI
              7357 0007  ld   $07
              7358 0035  ld   $35         ;05f1 BCC
              7359 0050  ld   $50         ;05f2 LT
              735a 00fd  ld   $fd
              735b 00e6  ld   $e6         ;05f4 SUBI
              735c 0006  ld   $06
              735d 0035  ld   $35         ;05f6 BCC
              735e 0053  ld   $53         ;05f7 GE
              735f 00fd  ld   $fd
              7360 00e3  ld   $e3         ;05f9 ADDI
              7361 0010  ld   $10
              7362 0099  ld   $99         ;05fb ADDW
              7363 0040  ld   $40         ;05fb 'i'
              7364 0090  ld   $90         ;05fd BRA
              7365 00ce  ld   $ce
              7366 00ff  ld   $ff         ;05ff RET
              7367 0006  ld   $06         ;| RAM segment address (high byte first)
              7368 0000  ld   $00         ;|
              7369 00fd  ld   $fd         ;| Length (1..256)
              736a 00cd  ld   $cd         ;0600 DEF
              736b 00bb  ld   $bb
              736c 0075  ld   $75         ;0602 PUSH
              736d 00cf  ld   $cf         ;0603 CALL
              736e 0032  ld   $32         ;0603 'Number'
              736f 0035  ld   $35         ;0605 BCC
              7370 0056  ld   $56         ;0606 LE
              7371 00b9  ld   $b9
              7372 0021  ld   $21         ;0608 LDW
              7373 0048  ld   $48         ;0608 'End'
              7374 002b  ld   $2b         ;060a STW
              7375 0040  ld   $40         ;060a 'i'
              7376 002b  ld   $2b         ;060c STW
              7377 006a  ld   $6a         ;060c 'j'
              7378 00fc  ld   $fc         ;060e XORW
              7379 006c  ld   $6c         ;060e 'Begin'
              737a 0035  ld   $35         ;0610 BCC
              737b 003f  ld   $3f         ;0611 EQ
              737c 0016  ld   $16
              737d 0021  ld   $21         ;0613 LDW
              737e 0048  ld   $48         ;0613 'End'
              737f 00cf  ld   $cf         ;0615 CALL
              7380 006e  ld   $6e         ;0615 'PrevBlock'
              7381 00f6  ld   $f6         ;0617 DEEK
              7382 00b8  ld   $b8         ;0618 SUBW
              7383 003c  ld   $3c         ;0618 'Value'
              7384 0035  ld   $35         ;061a BCC
              7385 0050  ld   $50         ;061b LT
              7386 005a  ld   $5a
              7387 0021  ld   $21         ;061d LDW
              7388 006c  ld   $6c         ;061d 'Begin'
              7389 002b  ld   $2b         ;061f STW
              738a 0040  ld   $40         ;061f 'i'
              738b 0021  ld   $21         ;0621 LDW
              738c 0040  ld   $40         ;0621 'i'
              738d 00f6  ld   $f6         ;0623 DEEK
              738e 00b8  ld   $b8         ;0624 SUBW
              738f 003c  ld   $3c         ;0624 'Value'
              7390 0035  ld   $35         ;0626 BCC
              7391 0053  ld   $53         ;0627 GE
              7392 002d  ld   $2d
              7393 0021  ld   $21         ;0629 LDW
              7394 0040  ld   $40         ;0629 'i'
              7395 00cf  ld   $cf         ;062b CALL
              7396 0070  ld   $70         ;062b 'NextBlock'
              7397 0090  ld   $90         ;062d BRA
              7398 001d  ld   $1d
              7399 0035  ld   $35         ;062f BCC
              739a 0056  ld   $56         ;0630 LE
              739b 005a  ld   $5a
              739c 0021  ld   $21         ;0632 LDW
              739d 0000  ld   $00
              739e 00fc  ld   $fc         ;0634 XORW
              739f 0048  ld   $48         ;0634 'End'
              73a0 0035  ld   $35         ;0636 BCC
              73a1 003f  ld   $3f         ;0637 EQ
              73a2 0058  ld   $58
              73a3 0021  ld   $21         ;0639 LDW
              73a4 006a  ld   $6a         ;0639 'j'
              73a5 002b  ld   $2b         ;063b STW
              73a6 0044  ld   $44         ;063b 'k'
              73a7 00cf  ld   $cf         ;063d CALL
              73a8 006e  ld   $6e         ;063d 'PrevBlock'
              73a9 002b  ld   $2b         ;063f STW
              73aa 006a  ld   $6a         ;063f 'j'
              73ab 002b  ld   $2b         ;0641 STW
              73ac 004e  ld   $4e         ;0641 'tmp'
              73ad 0021  ld   $21         ;0643 LDW
              73ae 004e  ld   $4e         ;0643 'tmp'
              73af 00ad  ld   $ad         ;0645 PEEK
              73b0 00f0  ld   $f0         ;0646 POKE
              73b1 0044  ld   $44         ;0646 'k'
              73b2 0093  ld   $93         ;0648 INC
              73b3 004e  ld   $4e         ;0648 'tmp'
              73b4 0093  ld   $93         ;064a INC
              73b5 0044  ld   $44         ;064a 'k'
              73b6 0021  ld   $21         ;064c LDW
              73b7 004e  ld   $4e         ;064c 'tmp'
              73b8 0082  ld   $82         ;064e ANDI
              73b9 001f  ld   $1f
              73ba 0035  ld   $35         ;0650 BCC
              73bb 0072  ld   $72         ;0651 NE
              73bc 0041  ld   $41
              73bd 0021  ld   $21         ;0653 LDW
              73be 006a  ld   $6a         ;0653 'j'
              73bf 00fc  ld   $fc         ;0655 XORW
              73c0 0040  ld   $40         ;0655 'i'
              73c1 0035  ld   $35         ;0657 BCC
              73c2 0072  ld   $72         ;0658 NE
              73c3 0037  ld   $37
              73c4 0059  ld   $59         ;065a LDI
              73c5 0001  ld   $01
              73c6 0035  ld   $35         ;065c BCC
              73c7 003f  ld   $3f         ;065d EQ
              73c8 0070  ld   $70
              73c9 0021  ld   $21         ;065f LDW
              73ca 0000  ld   $00
              73cb 00e6  ld   $e6         ;0661 SUBI
              73cc 0080  ld   $80
              73cd 00e6  ld   $e6         ;0663 SUBI
              73ce 00c0  ld   $c0
              73cf 00fc  ld   $fc         ;0665 XORW
              73d0 0048  ld   $48         ;0665 'End'
              73d1 0035  ld   $35         ;0667 BCC
              73d2 0072  ld   $72         ;0668 NE
              73d3 006a  ld   $6a
              73d4 00cf  ld   $cf         ;066a CALL
              73d5 004a  ld   $4a         ;066a 'SyntaxError'
              73d6 0021  ld   $21         ;066c LDW
              73d7 0048  ld   $48         ;066c 'End'
              73d8 00cf  ld   $cf         ;066e CALL
              73d9 0070  ld   $70         ;066e 'NextBlock'
              73da 002b  ld   $2b         ;0670 STW
              73db 0048  ld   $48         ;0670 'End'
              73dc 0021  ld   $21         ;0672 LDW
              73dd 0036  ld   $36         ;0672 'Active'
              73de 00ad  ld   $ad         ;0674 PEEK
              73df 0035  ld   $35         ;0675 BCC
              73e0 003f  ld   $3f         ;0676 EQ
              73e1 008a  ld   $8a
              73e2 0021  ld   $21         ;0678 LDW
              73e3 003c  ld   $3c         ;0678 'Value'
              73e4 00f3  ld   $f3         ;067a DOKE
              73e5 0040  ld   $40         ;067a 'i'
              73e6 0093  ld   $93         ;067c INC
              73e7 0040  ld   $40         ;067c 'i'
              73e8 0093  ld   $93         ;067e INC
              73e9 0040  ld   $40         ;067e 'i'
              73ea 0021  ld   $21         ;0680 LDW
              73eb 0036  ld   $36         ;0680 'Active'
              73ec 00ad  ld   $ad         ;0682 PEEK
              73ed 0093  ld   $93         ;0683 INC
              73ee 0036  ld   $36         ;0683 'Active'
              73ef 00f0  ld   $f0         ;0685 POKE
              73f0 0040  ld   $40         ;0685 'i'
              73f1 0035  ld   $35         ;0687 BCC
              73f2 0072  ld   $72         ;0688 NE
              73f3 007c  ld   $7c
              73f4 0090  ld   $90         ;068a BRA
              73f5 00b7  ld   $b7
              73f6 0021  ld   $21         ;068c LDW
              73f7 0040  ld   $40         ;068c 'i'
              73f8 002b  ld   $2b         ;068e STW
              73f9 006a  ld   $6a         ;068e 'j'
              73fa 00fc  ld   $fc         ;0690 XORW
              73fb fe00  bra  ac          ;+-----------------------------------+
              73fc fcfd  bra  $73fd       ;|                                   |
              73fd 1418  ld   $18,y       ;| Trampoline for page $7300 lookups |
              73fe e006  jmp  y,$06       ;|                                   |
              73ff c218  st   [$18]       ;+-----------------------------------+
              7400 0048  ld   $48         ;0690 'End'
              7401 0035  ld   $35         ;0692 BCC
              7402 003f  ld   $3f         ;0693 EQ
              7403 00b1  ld   $b1
              7404 0021  ld   $21         ;0695 LDW
              7405 006a  ld   $6a         ;0695 'j'
              7406 00cf  ld   $cf         ;0697 CALL
              7407 0070  ld   $70         ;0697 'NextBlock'
              7408 002b  ld   $2b         ;0699 STW
              7409 006a  ld   $6a         ;0699 'j'
              740a 002b  ld   $2b         ;069b STW
              740b 004e  ld   $4e         ;069b 'tmp'
              740c 0021  ld   $21         ;069d LDW
              740d 004e  ld   $4e         ;069d 'tmp'
              740e 00ad  ld   $ad         ;069f PEEK
              740f 00f0  ld   $f0         ;06a0 POKE
              7410 0040  ld   $40         ;06a0 'i'
              7411 0093  ld   $93         ;06a2 INC
              7412 004e  ld   $4e         ;06a2 'tmp'
              7413 0093  ld   $93         ;06a4 INC
              7414 0040  ld   $40         ;06a4 'i'
              7415 0021  ld   $21         ;06a6 LDW
              7416 004e  ld   $4e         ;06a6 'tmp'
              7417 0082  ld   $82         ;06a8 ANDI
              7418 001f  ld   $1f
              7419 0035  ld   $35         ;06aa BCC
              741a 0072  ld   $72         ;06ab NE
              741b 009b  ld   $9b
              741c 0021  ld   $21         ;06ad LDW
              741d 006a  ld   $6a         ;06ad 'j'
              741e 002b  ld   $2b         ;06af STW
              741f 0040  ld   $40         ;06af 'i'
              7420 0090  ld   $90         ;06b1 BRA
              7421 008e  ld   $8e
              7422 0021  ld   $21         ;06b3 LDW
              7423 0048  ld   $48         ;06b3 'End'
              7424 00cf  ld   $cf         ;06b5 CALL
              7425 006e  ld   $6e         ;06b5 'PrevBlock'
              7426 002b  ld   $2b         ;06b7 STW
              7427 0048  ld   $48         ;06b7 'End'
              7428 0021  ld   $21         ;06b9 LDW
              7429 003c  ld   $3c         ;06b9 'Value'
              742a 0063  ld   $63         ;06bb POP
              742b 00ff  ld   $ff         ;06bc RET
              742c 002b  ld   $2b         ;06bd STW
              742d 0072  ld   $72         ;06bd 'Insert'
              742e 0011  ld   $11         ;06bf LDWI
              742f 003f  ld   $3f
              7430 0035  ld   $35
              7431 002b  ld   $2b         ;06c2 STW
              7432 002a  ld   $2a
              7433 0011  ld   $11         ;06c4 LDWI
              7434 00a0  ld   $a0
              7435 0018  ld   $18
              7436 002b  ld   $2b         ;06c7 STW
              7437 005a  ld   $5a         ;06c7 'Newline'
              7438 00cf  ld   $cf         ;06c9 CALL
              7439 0018  ld   $18         ;06c9 vAC
              743a 00cf  ld   $cf         ;06cb CALL
              743b 0052  ld   $52         ;06cb 'PrintS'
              743c 002a  ld   $2a         ;06cd '*'
              743d 002a  ld   $2a         ;06ce '*'
              743e 002a  ld   $2a         ;06cf '*'
              743f 0020  ld   $20         ;06d0 ' '
              7440 0054  ld   $54         ;06d1 'T'
              7441 0069  ld   $69         ;06d2 'i'
              7442 006e  ld   $6e         ;06d3 'n'
              7443 0079  ld   $79         ;06d4 'y'
              7444 0020  ld   $20         ;06d5 ' '
              7445 0042  ld   $42         ;06d6 'B'
              7446 0041  ld   $41         ;06d7 'A'
              7447 0053  ld   $53         ;06d8 'S'
              7448 0049  ld   $49         ;06d9 'I'
              7449 0043  ld   $43         ;06da 'C'
              744a 0020  ld   $20         ;06db ' '
              744b 0044  ld   $44         ;06dc 'D'
              744c 0045  ld   $45         ;06dd 'E'
              744d 0056  ld   $56         ;06de 'V'
              744e 0000  ld   $00         ;06df 0
              744f 00cf  ld   $cf         ;06e0 CALL
              7450 005a  ld   $5a         ;06e0 'Newline'
              7451 0011  ld   $11         ;06e2 LDWI
              7452 00a0  ld   $a0
              7453 0008  ld   $08
              7454 002b  ld   $2b         ;06e5 STW
              7455 001a  ld   $1a         ;06e5 '_vLR'
              7456 00ff  ld   $ff         ;06e7 RET
              7457 0059  ld   $59         ;06e8 LDI
              7458 0000  ld   $00
              7459 00f0  ld   $f0         ;06ea POKE
              745a 0036  ld   $36         ;06ea 'Active'
              745b 0059  ld   $59         ;06ec LDI
              745c 0020  ld   $20
              745d 00cf  ld   $cf         ;06ee CALL
              745e 0050  ld   $50         ;06ee 'PrintChar'
              745f 00cf  ld   $cf         ;06f0 CALL
              7460 005a  ld   $5a         ;06f0 'Newline'
              7461 0059  ld   $59         ;06f2 LDI
              7462 00a2  ld   $a2
              7463 005e  ld   $5e         ;06f4 ST
              7464 0036  ld   $36         ;06f4 'Active'
              7465 00cf  ld   $cf         ;06f6 CALL
              7466 0034  ld   $34         ;06f6 'Spaces'
              7467 0021  ld   $21         ;06f8 LDW
              7468 0036  ld   $36         ;06f8 'Active'
              7469 00ad  ld   $ad         ;06fa PEEK
              746a 0063  ld   $63         ;06fb POP
              746b 00ff  ld   $ff         ;06fc RET
              746c 0008  ld   $08         ;| RAM segment address (high byte first)
              746d 00a0  ld   $a0         ;|
              746e 005f  ld   $5f         ;| Length (1..256)
              746f 00cd  ld   $cd         ;08a0 DEF
              7470 00b6  ld   $b6
              7471 0088  ld   $88         ;08a2 ORI
              7472 001f  ld   $1f
              7473 00e3  ld   $e3         ;08a4 ADDI
              7474 0001  ld   $01
              7475 002b  ld   $2b         ;08a6 STW
              7476 004e  ld   $4e         ;08a6 'tmp'
              7477 0035  ld   $35         ;08a8 BCC
              7478 0056  ld   $56         ;08a9 LE
              7479 00b3  ld   $b3
              747a 0082  ld   $82         ;08ab ANDI
              747b 00e0  ld   $e0
              747c 0035  ld   $35         ;08ad BCC
              747d 0072  ld   $72         ;08ae NE
              747e 00b3  ld   $b3
              747f 0021  ld   $21         ;08b0 LDW
              7480 004e  ld   $4e         ;08b0 'tmp'
              7481 00e3  ld   $e3         ;08b2 ADDI
              7482 00a0  ld   $a0
              7483 00ff  ld   $ff         ;08b4 RET
              7484 0021  ld   $21         ;08b5 LDW
              7485 004e  ld   $4e         ;08b5 'tmp'
              7486 00ff  ld   $ff         ;08b7 RET
              7487 002b  ld   $2b         ;08b8 STW
              7488 0070  ld   $70         ;08b8 'NextBlock'
              7489 00cd  ld   $cd         ;08ba DEF
              748a 00ce  ld   $ce
              748b 00e6  ld   $e6         ;08bc SUBI
              748c 0020  ld   $20
              748d 002b  ld   $2b         ;08be STW
              748e 004e  ld   $4e         ;08be 'tmp'
              748f 0035  ld   $35         ;08c0 BCC
              7490 0050  ld   $50         ;08c1 LT
              7491 00cb  ld   $cb
              7492 0082  ld   $82         ;08c3 ANDI
              7493 0060  ld   $60
              7494 0035  ld   $35         ;08c5 BCC
              7495 0072  ld   $72         ;08c6 NE
              7496 00cb  ld   $cb
              7497 0021  ld   $21         ;08c8 LDW
              7498 004e  ld   $4e         ;08c8 'tmp'
              7499 00e6  ld   $e6         ;08ca SUBI
              749a 00a0  ld   $a0
              749b 00ff  ld   $ff         ;08cc RET
              749c 0021  ld   $21         ;08cd LDW
              749d 004e  ld   $4e         ;08cd 'tmp'
              749e 00ff  ld   $ff         ;08cf RET
              749f 002b  ld   $2b         ;08d0 STW
              74a0 006e  ld   $6e         ;08d0 'PrevBlock'
              74a1 00cd  ld   $cd         ;08d2 DEF
              74a2 00fa  ld   $fa
              74a3 0021  ld   $21         ;08d4 LDW
              74a4 006c  ld   $6c         ;08d4 'Begin'
              74a5 002b  ld   $2b         ;08d6 STW
              74a6 0040  ld   $40         ;08d6 'i'
              74a7 00fc  ld   $fc         ;08d8 XORW
              74a8 0048  ld   $48         ;08d8 'End'
              74a9 0035  ld   $35         ;08da BCC
              74aa 003f  ld   $3f         ;08db EQ
              74ab 00f3  ld   $f3
              74ac 0021  ld   $21         ;08dd LDW
              74ad 0040  ld   $40         ;08dd 'i'
              74ae 00f6  ld   $f6         ;08df DEEK
              74af 00fc  ld   $fc         ;08e0 XORW
              74b0 003c  ld   $3c         ;08e0 'Value'
              74b1 0035  ld   $35         ;08e2 BCC
              74b2 0072  ld   $72         ;08e3 NE
              74b3 00ed  ld   $ed
              74b4 0021  ld   $21         ;08e5 LDW
              74b5 0040  ld   $40         ;08e5 'i'
              74b6 00e3  ld   $e3         ;08e7 ADDI
              74b7 0002  ld   $02
              74b8 002b  ld   $2b         ;08e9 STW
              74b9 0036  ld   $36         ;08e9 'Active'
              74ba 00cf  ld   $cf         ;08eb CALL
              74bb 0058  ld   $58         ;08eb 'TestBreak'
              74bc 00cf  ld   $cf         ;08ed CALL
              74bd 0066  ld   $66         ;08ed 'Statements'
              74be 0021  ld   $21         ;08ef LDW
              74bf 0040  ld   $40         ;08ef 'i'
              74c0 00cf  ld   $cf         ;08f1 CALL
              74c1 0070  ld   $70         ;08f1 'NextBlock'
              74c2 0090  ld   $90         ;08f3 BRA
              74c3 00d4  ld   $d4
              74c4 00cf  ld   $cf         ;08f5 CALL
              74c5 0056  ld   $56         ;08f5 'Prompt'
              74c6 004c  ld   $4c         ;08f7 'L'
              74c7 0069  ld   $69         ;08f8 'i'
              74c8 006e  ld   $6e         ;08f9 'n'
              74c9 0065  ld   $65         ;08fa 'e'
              74ca 0000  ld   $00         ;08fb 0
              74cb 0093  ld   $93         ;08fc INC
              74cc 001b  ld   $1b
              74cd 00ff  ld   $ff         ;08fe RET
              74ce 0009  ld   $09         ;| RAM segment address (high byte first)
              74cf 00a0  ld   $a0         ;|
              74d0 005e  ld   $5e         ;| Length (1..256)
              74d1 002b  ld   $2b         ;09a0 STW
              74d2 005e  ld   $5e         ;09a0 'GotoValue'
              74d3 00cd  ld   $cd         ;09a2 DEF
              74d4 00de  ld   $de
              74d5 0075  ld   $75         ;09a4 PUSH
              74d6 0035  ld   $35         ;09a5 BCC
              74d7 0053  ld   $53         ;09a6 GE
              74d8 00b0  ld   $b0
              74d9 0059  ld   $59         ;09a8 LDI
              74da 0000  ld   $00
              74db 00b8  ld   $b8         ;09aa SUBW
              74dc 003c  ld   $3c         ;09aa 'Value'
              74dd 002b  ld   $2b         ;09ac STW
              74de 003c  ld   $3c         ;09ac 'Value'
              74df 0059  ld   $59         ;09ae LDI
              74e0 002d  ld   $2d
              74e1 00cf  ld   $cf         ;09b0 CALL
              74e2 0050  ld   $50         ;09b0 'PrintChar'
              74e3 0059  ld   $59         ;09b2 LDI
              74e4 0000  ld   $00
              74e5 002b  ld   $2b         ;09b4 STW
              74e6 0044  ld   $44         ;09b4 'k'
              74e7 0021  ld   $21         ;09b6 LDW
              74e8 003c  ld   $3c         ;09b6 'Value'
              74e9 0035  ld   $35         ;09b8 BCC
              74ea 0053  ld   $53         ;09b9 GE
              74eb 00c4  ld   $c4
              74ec 0011  ld   $11         ;09bb LDWI
              74ed 00d0  ld   $d0
              74ee 008a  ld   $8a
              74ef 0099  ld   $99         ;09be ADDW
              74f0 003c  ld   $3c         ;09be 'Value'
              74f1 002b  ld   $2b         ;09c0 STW
              74f2 003c  ld   $3c         ;09c0 'Value'
              74f3 0059  ld   $59         ;09c2 LDI
              74f4 0003  ld   $03
              74f5 002b  ld   $2b         ;09c4 STW
              74f6 0044  ld   $44         ;09c4 'k'
              74f7 0011  ld   $11         ;09c6 LDWI
              74f8 0010  ld   $10
              74f9 0027  ld   $27
              74fa 00cf  ld   $cf         ;09c9 CALL
              74fb fe00  bra  ac          ;+-----------------------------------+
              74fc fcfd  bra  $74fd       ;|                                   |
              74fd 1418  ld   $18,y       ;| Trampoline for page $7400 lookups |
              74fe e006  jmp  y,$06       ;|                                   |
              74ff c218  st   [$18]       ;+-----------------------------------+
              7500 0074  ld   $74         ;09c9 'PrintDigit'
              7501 0011  ld   $11         ;09cb LDWI
              7502 00e8  ld   $e8
              7503 0003  ld   $03
              7504 00cf  ld   $cf         ;09ce CALL
              7505 0074  ld   $74         ;09ce 'PrintDigit'
              7506 0059  ld   $59         ;09d0 LDI
              7507 0064  ld   $64
              7508 00cf  ld   $cf         ;09d2 CALL
              7509 0074  ld   $74         ;09d2 'PrintDigit'
              750a 0059  ld   $59         ;09d4 LDI
              750b 000a  ld   $0a
              750c 00cf  ld   $cf         ;09d6 CALL
              750d 0074  ld   $74         ;09d6 'PrintDigit'
              750e 0059  ld   $59         ;09d8 LDI
              750f 0030  ld   $30
              7510 0099  ld   $99         ;09da ADDW
              7511 003c  ld   $3c         ;09da 'Value'
              7512 00cf  ld   $cf         ;09dc CALL
              7513 0050  ld   $50         ;09dc 'PrintChar'
              7514 0063  ld   $63         ;09de POP
              7515 00ff  ld   $ff         ;09df RET
              7516 002b  ld   $2b         ;09e0 STW
              7517 0076  ld   $76         ;09e0 'PrintValue'
              7518 00cd  ld   $cd         ;09e2 DEF
              7519 00ea  ld   $ea
              751a 00cf  ld   $cf         ;09e4 CALL
              751b 0056  ld   $56         ;09e4 'Prompt'
              751c 0053  ld   $53         ;09e6 'S'
              751d 0074  ld   $74         ;09e7 't'
              751e 0061  ld   $61         ;09e8 'a'
              751f 0063  ld   $63         ;09e9 'c'
              7520 006b  ld   $6b         ;09ea 'k'
              7521 0000  ld   $00         ;09eb 0
              7522 002b  ld   $2b         ;09ec STW
              7523 0060  ld   $60         ;09ec 'StackError'
              7524 00cd  ld   $cd         ;09ee DEF
              7525 00f7  ld   $f7
              7526 00cf  ld   $cf         ;09f0 CALL
              7527 0056  ld   $56         ;09f0 'Prompt'
              7528 0053  ld   $53         ;09f2 'S'
              7529 0079  ld   $79         ;09f3 'y'
              752a 006e  ld   $6e         ;09f4 'n'
              752b 0074  ld   $74         ;09f5 't'
              752c 0061  ld   $61         ;09f6 'a'
              752d 0078  ld   $78         ;09f7 'x'
              752e 0000  ld   $00         ;09f8 0
              752f 002b  ld   $2b         ;09f9 STW
              7530 004a  ld   $4a         ;09f9 'SyntaxError'
              7531 0093  ld   $93         ;09fb INC
              7532 001b  ld   $1b
              7533 00ff  ld   $ff         ;09fd RET
              7534 000a  ld   $0a         ;| RAM segment address (high byte first)
              7535 00a0  ld   $a0         ;|
              7536 005f  ld   $5f         ;| Length (1..256)
              7537 00cd  ld   $cd         ;0aa0 DEF
              7538 00d2  ld   $d2
              7539 0021  ld   $21         ;0aa2 LDW
              753a 001a  ld   $1a
              753b 002b  ld   $2b         ;0aa4 STW
              753c 004e  ld   $4e         ;0aa4 'tmp'
              753d 0021  ld   $21         ;0aa6 LDW
              753e 0036  ld   $36         ;0aa6 'Active'
              753f 002b  ld   $2b         ;0aa8 STW
              7540 006a  ld   $6a         ;0aa8 'j'
              7541 0021  ld   $21         ;0aaa LDW
              7542 004e  ld   $4e         ;0aaa 'tmp'
              7543 00ad  ld   $ad         ;0aac PEEK
              7544 0093  ld   $93         ;0aad INC
              7545 004e  ld   $4e         ;0aad 'tmp'
              7546 0035  ld   $35         ;0aaf BCC
              7547 003f  ld   $3f         ;0ab0 EQ
              7548 00ce  ld   $ce
              7549 002b  ld   $2b         ;0ab2 STW
              754a 0040  ld   $40         ;0ab2 'i'
              754b 0021  ld   $21         ;0ab4 LDW
              754c 0036  ld   $36         ;0ab4 'Active'
              754d 00ad  ld   $ad         ;0ab6 PEEK
              754e 0088  ld   $88         ;0ab7 ORI
              754f 0020  ld   $20
              7550 00fc  ld   $fc         ;0ab9 XORW
              7551 0040  ld   $40         ;0ab9 'i'
              7552 0035  ld   $35         ;0abb BCC
              7553 0072  ld   $72         ;0abc NE
              7554 00c0  ld   $c0
              7555 0093  ld   $93         ;0abe INC
              7556 0036  ld   $36         ;0abe 'Active'
              7557 0090  ld   $90         ;0ac0 BRA
              7558 00a8  ld   $a8
              7559 0021  ld   $21         ;0ac2 LDW
              755a 006a  ld   $6a         ;0ac2 'j'
              755b 002b  ld   $2b         ;0ac4 STW
              755c 0036  ld   $36         ;0ac4 'Active'
              755d 0021  ld   $21         ;0ac6 LDW
              755e 004e  ld   $4e         ;0ac6 'tmp'
              755f 00ad  ld   $ad         ;0ac8 PEEK
              7560 0093  ld   $93         ;0ac9 INC
              7561 004e  ld   $4e         ;0ac9 'tmp'
              7562 0035  ld   $35         ;0acb BCC
              7563 0072  ld   $72         ;0acc NE
              7564 00c4  ld   $c4
              7565 00cf  ld   $cf         ;0ace CALL
              7566 004e  ld   $4e         ;0ace 'tmp'
              7567 00cf  ld   $cf         ;0ad0 CALL
              7568 0034  ld   $34         ;0ad0 'Spaces'
              7569 00cf  ld   $cf         ;0ad2 CALL
              756a 004e  ld   $4e         ;0ad2 'tmp'
              756b 002b  ld   $2b         ;0ad4 STW
              756c 0038  ld   $38         ;0ad4 'Keyword'
              756d 00cd  ld   $cd         ;0ad6 DEF
              756e 00fa  ld   $fa
              756f 0011  ld   $11         ;0ad8 LDWI
              7570 0000  ld   $00
              7571 0080  ld   $80
              7572 002b  ld   $2b         ;0adb STW
              7573 003c  ld   $3c         ;0adb 'Value'
              7574 00e9  ld   $e9         ;0add LSLW
              7575 00e9  ld   $e9         ;0ade LSLW
              7576 0099  ld   $99         ;0adf ADDW
              7577 003c  ld   $3c         ;0adf 'Value'
              7578 00e9  ld   $e9         ;0ae1 LSLW
              7579 002b  ld   $2b         ;0ae2 STW
              757a 0040  ld   $40         ;0ae2 'i'
              757b 0021  ld   $21         ;0ae4 LDW
              757c 0036  ld   $36         ;0ae4 'Active'
              757d 00ad  ld   $ad         ;0ae6 PEEK
              757e 00e6  ld   $e6         ;0ae7 SUBI
              757f 0030  ld   $30
              7580 0035  ld   $35         ;0ae9 BCC
              7581 0050  ld   $50         ;0aea LT
              7582 00f7  ld   $f7
              7583 00e6  ld   $e6         ;0aec SUBI
              7584 000a  ld   $0a
              7585 0035  ld   $35         ;0aee BCC
              7586 0053  ld   $53         ;0aef GE
              7587 00f7  ld   $f7
              7588 00e3  ld   $e3         ;0af1 ADDI
              7589 000a  ld   $0a
              758a 0099  ld   $99         ;0af3 ADDW
              758b 0040  ld   $40         ;0af3 'i'
              758c 0093  ld   $93         ;0af5 INC
              758d 0036  ld   $36         ;0af5 'Active'
              758e 0090  ld   $90         ;0af7 BRA
              758f 00d9  ld   $d9
              7590 0021  ld   $21         ;0af9 LDW
              7591 003c  ld   $3c         ;0af9 'Value'
              7592 00ff  ld   $ff         ;0afb RET
              7593 0093  ld   $93         ;0afc INC
              7594 001b  ld   $1b
              7595 00ff  ld   $ff         ;0afe RET
              7596 000b  ld   $0b         ;| RAM segment address (high byte first)
              7597 00a0  ld   $a0         ;|
              7598 0060  ld   $60         ;| Length (1..256)
              7599 002b  ld   $2b         ;0ba0 STW
              759a 0032  ld   $32         ;0ba0 'Number'
              759b 00cd  ld   $cd         ;0ba2 DEF
              759c 00d1  ld   $d1
              759d 0021  ld   $21         ;0ba4 LDW
              759e 0036  ld   $36         ;0ba4 'Active'
              759f 00ad  ld   $ad         ;0ba6 PEEK
              75a0 0035  ld   $35         ;0ba7 BCC
              75a1 003f  ld   $3f         ;0ba8 EQ
              75a2 00b3  ld   $b3
              75a3 008c  ld   $8c         ;0baa XORI
              75a4 003a  ld   $3a
              75a5 0035  ld   $35         ;0bac BCC
              75a6 0072  ld   $72         ;0bad NE
              75a7 00b1  ld   $b1
              75a8 0093  ld   $93         ;0baf INC
              75a9 0036  ld   $36         ;0baf 'Active'
              75aa 00cf  ld   $cf         ;0bb1 CALL
              75ab 0066  ld   $66         ;0bb1 'Statements'
              75ac 00cf  ld   $cf         ;0bb3 CALL
              75ad 004a  ld   $4a         ;0bb3 'SyntaxError'
              75ae 0021  ld   $21         ;0bb5 LDW
              75af 0036  ld   $36         ;0bb5 'Active'
              75b0 00cf  ld   $cf         ;0bb7 CALL
              75b1 0070  ld   $70         ;0bb7 'NextBlock'
              75b2 002b  ld   $2b         ;0bb9 STW
              75b3 0036  ld   $36         ;0bb9 'Active'
              75b4 00fc  ld   $fc         ;0bbb XORW
              75b5 0048  ld   $48         ;0bbb 'End'
              75b6 0035  ld   $35         ;0bbd BCC
              75b7 003f  ld   $3f         ;0bbe EQ
              75b8 00ce  ld   $ce
              75b9 0011  ld   $11         ;0bc0 LDWI
              75ba 00c0  ld   $c0
              75bb 001b  ld   $1b
              75bc 00fc  ld   $fc         ;0bc3 XORW
              75bd 0036  ld   $36         ;0bc3 'Active'
              75be 0035  ld   $35         ;0bc5 BCC
              75bf 003f  ld   $3f         ;0bc6 EQ
              75c0 00ce  ld   $ce
              75c1 0021  ld   $21         ;0bc8 LDW
              75c2 0036  ld   $36         ;0bc8 'Active'
              75c3 00e3  ld   $e3         ;0bca ADDI
              75c4 0002  ld   $02
              75c5 002b  ld   $2b         ;0bcc STW
              75c6 0036  ld   $36         ;0bcc 'Active'
              75c7 00cf  ld   $cf         ;0bce CALL
              75c8 0066  ld   $66         ;0bce 'Statements'
              75c9 00cf  ld   $cf         ;0bd0 CALL
              75ca 0056  ld   $56         ;0bd0 'Prompt'
              75cb 0000  ld   $00         ;0bd2 0
              75cc 002b  ld   $2b         ;0bd3 STW
              75cd 0062  ld   $62         ;0bd3 'EndOfLine'
              75ce 00cd  ld   $cd         ;0bd5 DEF
              75cf 00fb  ld   $fb
              75d0 0021  ld   $21         ;0bd7 LDW
              75d1 0000  ld   $00
              75d2 002b  ld   $2b         ;0bd9 STW
              75d3 0040  ld   $40         ;0bd9 'i'
              75d4 0059  ld   $59         ;0bdb LDI
              75d5 0002  ld   $02
              75d6 002b  ld   $2b         ;0bdd STW
              75d7 006a  ld   $6a         ;0bdd 'j'
              75d8 0021  ld   $21         ;0bdf LDW
              75d9 0040  ld   $40         ;0bdf 'i'
              75da 00e6  ld   $e6         ;0be1 SUBI
              75db 0036  ld   $36
              75dc 002b  ld   $2b         ;0be3 STW
              75dd 0040  ld   $40         ;0be3 'i'
              75de 0059  ld   $59         ;0be5 LDI
              75df 0000  ld   $00
              75e0 00f0  ld   $f0         ;0be7 POKE
              75e1 0040  ld   $40         ;0be7 'i'
              75e2 0093  ld   $93         ;0be9 INC
              75e3 0040  ld   $40         ;0be9 'i'
              75e4 001a  ld   $1a         ;0beb LD
              75e5 0040  ld   $40         ;0beb 'i'
              75e6 0035  ld   $35         ;0bed BCC
              75e7 0072  ld   $72         ;0bee NE
              75e8 00e3  ld   $e3
              75e9 0021  ld   $21         ;0bf0 LDW
              75ea 006a  ld   $6a         ;0bf0 'j'
              75eb 00e6  ld   $e6         ;0bf2 SUBI
              75ec 0001  ld   $01
              75ed 0035  ld   $35         ;0bf4 BCC
              75ee 0072  ld   $72         ;0bf5 NE
              75ef 00db  ld   $db
              75f0 0011  ld   $11         ;0bf7 LDWI
              75f1 00c0  ld   $c0
              75f2 001b  ld   $1b
              75f3 002b  ld   $2b         ;0bfa STW
              75f4 006c  ld   $6c         ;0bfa 'Begin'
              75f5 00ff  ld   $ff         ;0bfc RET
              75f6 0093  ld   $93         ;0bfd INC
              75f7 001b  ld   $1b
              75f8 00ff  ld   $ff         ;0bff RET
              75f9 000c  ld   $0c         ;| RAM segment address (high byte first)
              75fa 00a0  ld   $a0         ;|
              75fb fe00  bra  ac          ;+-----------------------------------+
              75fc fcfd  bra  $75fd       ;|                                   |
              75fd 1418  ld   $18,y       ;| Trampoline for page $7500 lookups |
              75fe e006  jmp  y,$06       ;|                                   |
              75ff c218  st   [$18]       ;+-----------------------------------+
              7600 0060  ld   $60         ;| Length (1..256)
              7601 002b  ld   $2b         ;0ca0 STW
              7602 0078  ld   $78         ;0ca0 'Clear'
              7603 00cd  ld   $cd         ;0ca2 DEF
              7604 00ed  ld   $ed
              7605 0075  ld   $75         ;0ca4 PUSH
              7606 001a  ld   $1a         ;0ca5 LD
              7607 001c  ld   $1c
              7608 00e6  ld   $e6         ;0ca7 SUBI
              7609 008d  ld   $8d
              760a 0035  ld   $35         ;0ca9 BCC
              760b 0053  ld   $53         ;0caa GE
              760c 00ac  ld   $ac
              760d 00cf  ld   $cf         ;0cac CALL
              760e 0060  ld   $60         ;0cac 'StackError'
              760f 00cf  ld   $cf         ;0cae CALL
              7610 0038  ld   $38         ;0cae 'Keyword'
              7611 002d  ld   $2d         ;0cb0 '-'
              7612 0000  ld   $00         ;0cb1 0
              7613 0035  ld   $35         ;0cb2 BCC
              7614 003f  ld   $3f         ;0cb3 EQ
              7615 00bb  ld   $bb
              7616 00cf  ld   $cf         ;0cb5 CALL
              7617 007a  ld   $7a         ;0cb5 'Term'
              7618 0059  ld   $59         ;0cb7 LDI
              7619 0000  ld   $00
              761a 00b8  ld   $b8         ;0cb9 SUBW
              761b 003c  ld   $3c         ;0cb9 'Value'
              761c 0090  ld   $90         ;0cbb BRA
              761d 00c1  ld   $c1
              761e 00cf  ld   $cf         ;0cbd CALL
              761f 0038  ld   $38         ;0cbd 'Keyword'
              7620 002b  ld   $2b         ;0cbf '+'
              7621 0000  ld   $00         ;0cc0 0
              7622 00cf  ld   $cf         ;0cc1 CALL
              7623 007a  ld   $7a         ;0cc1 'Term'
              7624 0075  ld   $75         ;0cc3 PUSH
              7625 00ec  ld   $ec         ;0cc4 STLW
              7626 0000  ld   $00
              7627 00cf  ld   $cf         ;0cc6 CALL
              7628 0038  ld   $38         ;0cc6 'Keyword'
              7629 002b  ld   $2b         ;0cc8 '+'
              762a 0000  ld   $00         ;0cc9 0
              762b 0035  ld   $35         ;0cca BCC
              762c 003f  ld   $3f         ;0ccb EQ
              762d 00d5  ld   $d5
              762e 00cf  ld   $cf         ;0ccd CALL
              762f 007a  ld   $7a         ;0ccd 'Term'
              7630 00ee  ld   $ee         ;0ccf LDLW
              7631 0000  ld   $00
              7632 0099  ld   $99         ;0cd1 ADDW
              7633 003c  ld   $3c         ;0cd1 'Value'
              7634 00ec  ld   $ec         ;0cd3 STLW
              7635 0000  ld   $00
              7636 0090  ld   $90         ;0cd5 BRA
              7637 00c4  ld   $c4
              7638 00cf  ld   $cf         ;0cd7 CALL
              7639 0038  ld   $38         ;0cd7 'Keyword'
              763a 002d  ld   $2d         ;0cd9 '-'
              763b 0000  ld   $00         ;0cda 0
              763c 0035  ld   $35         ;0cdb BCC
              763d 003f  ld   $3f         ;0cdc EQ
              763e 00e6  ld   $e6
              763f 00cf  ld   $cf         ;0cde CALL
              7640 007a  ld   $7a         ;0cde 'Term'
              7641 00ee  ld   $ee         ;0ce0 LDLW
              7642 0000  ld   $00
              7643 00b8  ld   $b8         ;0ce2 SUBW
              7644 003c  ld   $3c         ;0ce2 'Value'
              7645 00ec  ld   $ec         ;0ce4 STLW
              7646 0000  ld   $00
              7647 0090  ld   $90         ;0ce6 BRA
              7648 00c4  ld   $c4
              7649 00ee  ld   $ee         ;0ce8 LDLW
              764a 0000  ld   $00
              764b 002b  ld   $2b         ;0cea STW
              764c 003c  ld   $3c         ;0cea 'Value'
              764d 0063  ld   $63         ;0cec POP
              764e 0063  ld   $63         ;0ced POP
              764f 00ff  ld   $ff         ;0cee RET
              7650 002b  ld   $2b         ;0cef STW
              7651 003a  ld   $3a         ;0cef 'Expression'
              7652 00cd  ld   $cd         ;0cf1 DEF
              7653 00f9  ld   $f9
              7654 00cf  ld   $cf         ;0cf3 CALL
              7655 0056  ld   $56         ;0cf3 'Prompt'
              7656 0056  ld   $56         ;0cf5 'V'
              7657 0061  ld   $61         ;0cf6 'a'
              7658 006c  ld   $6c         ;0cf7 'l'
              7659 0075  ld   $75         ;0cf8 'u'
              765a 0065  ld   $65         ;0cf9 'e'
              765b 0000  ld   $00         ;0cfa 0
              765c 002b  ld   $2b         ;0cfb STW
              765d 0046  ld   $46         ;0cfb 'ValueError'
              765e 0093  ld   $93         ;0cfd INC
              765f 001b  ld   $1b
              7660 00ff  ld   $ff         ;0cff RET
              7661 000d  ld   $0d         ;| RAM segment address (high byte first)
              7662 00a0  ld   $a0         ;|
              7663 0060  ld   $60         ;| Length (1..256)
              7664 00cd  ld   $cd         ;0da0 DEF
              7665 00e4  ld   $e4
              7666 0075  ld   $75         ;0da2 PUSH
              7667 00cf  ld   $cf         ;0da3 CALL
              7668 004c  ld   $4c         ;0da3 'Factor'
              7669 0075  ld   $75         ;0da5 PUSH
              766a 0021  ld   $21         ;0da6 LDW
              766b 003c  ld   $3c         ;0da6 'Value'
              766c 00ec  ld   $ec         ;0da8 STLW
              766d 0000  ld   $00
              766e 00cf  ld   $cf         ;0daa CALL
              766f 0038  ld   $38         ;0daa 'Keyword'
              7670 002a  ld   $2a         ;0dac '*'
              7671 0000  ld   $00         ;0dad 0
              7672 0035  ld   $35         ;0dae BCC
              7673 003f  ld   $3f         ;0daf EQ
              7674 00b9  ld   $b9
              7675 00cf  ld   $cf         ;0db1 CALL
              7676 004c  ld   $4c         ;0db1 'Factor'
              7677 00ee  ld   $ee         ;0db3 LDLW
              7678 0000  ld   $00
              7679 00cf  ld   $cf         ;0db5 CALL
              767a 007c  ld   $7c         ;0db5 'Multiply'
              767b 00ec  ld   $ec         ;0db7 STLW
              767c 0000  ld   $00
              767d 0090  ld   $90         ;0db9 BRA
              767e 00a8  ld   $a8
              767f 00cf  ld   $cf         ;0dbb CALL
              7680 0038  ld   $38         ;0dbb 'Keyword'
              7681 002f  ld   $2f         ;0dbd '/'
              7682 0000  ld   $00         ;0dbe 0
              7683 0035  ld   $35         ;0dbf BCC
              7684 003f  ld   $3f         ;0dc0 EQ
              7685 00ca  ld   $ca
              7686 00cf  ld   $cf         ;0dc2 CALL
              7687 004c  ld   $4c         ;0dc2 'Factor'
              7688 00ee  ld   $ee         ;0dc4 LDLW
              7689 0000  ld   $00
              768a 00cf  ld   $cf         ;0dc6 CALL
              768b 003e  ld   $3e         ;0dc6 'Divide'
              768c 00ec  ld   $ec         ;0dc8 STLW
              768d 0000  ld   $00
              768e 0090  ld   $90         ;0dca BRA
              768f 00a8  ld   $a8
              7690 00cf  ld   $cf         ;0dcc CALL
              7691 0038  ld   $38         ;0dcc 'Keyword'
              7692 0025  ld   $25         ;0dce '%'
              7693 0000  ld   $00         ;0dcf 0
              7694 0035  ld   $35         ;0dd0 BCC
              7695 003f  ld   $3f         ;0dd1 EQ
              7696 00dd  ld   $dd
              7697 00cf  ld   $cf         ;0dd3 CALL
              7698 004c  ld   $4c         ;0dd3 'Factor'
              7699 00ee  ld   $ee         ;0dd5 LDLW
              769a 0000  ld   $00
              769b 00cf  ld   $cf         ;0dd7 CALL
              769c 003e  ld   $3e         ;0dd7 'Divide'
              769d 0021  ld   $21         ;0dd9 LDW
              769e 0040  ld   $40         ;0dd9 'i'
              769f 00ec  ld   $ec         ;0ddb STLW
              76a0 0000  ld   $00
              76a1 0090  ld   $90         ;0ddd BRA
              76a2 00a8  ld   $a8
              76a3 00ee  ld   $ee         ;0ddf LDLW
              76a4 0000  ld   $00
              76a5 002b  ld   $2b         ;0de1 STW
              76a6 003c  ld   $3c         ;0de1 'Value'
              76a7 0063  ld   $63         ;0de3 POP
              76a8 0063  ld   $63         ;0de4 POP
              76a9 00ff  ld   $ff         ;0de5 RET
              76aa 002b  ld   $2b         ;0de6 STW
              76ab 007a  ld   $7a         ;0de6 'Term'
              76ac 0093  ld   $93         ;0de8 INC
              76ad 001b  ld   $1b
              76ae 00ff  ld   $ff         ;0dea RET
              76af 00cf  ld   $cf         ;0deb CALL
              76b0 0038  ld   $38         ;0deb 'Keyword'
              76b1 0072  ld   $72         ;0ded 'r'
              76b2 0075  ld   $75         ;0dee 'u'
              76b3 006e  ld   $6e         ;0def 'n'
              76b4 0000  ld   $00         ;0df0 0
              76b5 0035  ld   $35         ;0df1 BCC
              76b6 003f  ld   $3f         ;0df2 EQ
              76b7 00f9  ld   $f9
              76b8 00cf  ld   $cf         ;0df4 CALL
              76b9 0078  ld   $78         ;0df4 'Clear'
              76ba 00f6  ld   $f6         ;0df6 DEEK
              76bb 002b  ld   $2b         ;0df7 STW
              76bc 003c  ld   $3c         ;0df7 'Value'
              76bd 00cf  ld   $cf         ;0df9 CALL
              76be 005e  ld   $5e         ;0df9 'GotoValue'
              76bf 0011  ld   $11         ;0dfb LDWI
              76c0 00a0  ld   $a0
              76c1 0016  ld   $16
              76c2 00cf  ld   $cf         ;0dfe CALL
              76c3 0018  ld   $18         ;0dfe vAC
              76c4 000e  ld   $0e         ;| RAM segment address (high byte first)
              76c5 00a0  ld   $a0         ;|
              76c6 0060  ld   $60         ;| Length (1..256)
              76c7 00cd  ld   $cd         ;0ea0 DEF
              76c8 00fb  ld   $fb
              76c9 002b  ld   $2b         ;0ea2 STW
              76ca 006a  ld   $6a         ;0ea2 'j'
              76cb 00fc  ld   $fc         ;0ea4 XORW
              76cc 003c  ld   $3c         ;0ea4 'Value'
              76cd 002b  ld   $2b         ;0ea6 STW
              76ce 0044  ld   $44         ;0ea6 'k'
              76cf 0021  ld   $21         ;0ea8 LDW
              76d0 006a  ld   $6a         ;0ea8 'j'
              76d1 0035  ld   $35         ;0eaa BCC
              76d2 0053  ld   $53         ;0eab GE
              76d3 00b1  ld   $b1
              76d4 0059  ld   $59         ;0ead LDI
              76d5 0000  ld   $00
              76d6 00b8  ld   $b8         ;0eaf SUBW
              76d7 006a  ld   $6a         ;0eaf 'j'
              76d8 002b  ld   $2b         ;0eb1 STW
              76d9 006a  ld   $6a         ;0eb1 'j'
              76da 0021  ld   $21         ;0eb3 LDW
              76db 003c  ld   $3c         ;0eb3 'Value'
              76dc 0035  ld   $35         ;0eb5 BCC
              76dd 0053  ld   $53         ;0eb6 GE
              76de 00bc  ld   $bc
              76df 0059  ld   $59         ;0eb8 LDI
              76e0 0000  ld   $00
              76e1 00b8  ld   $b8         ;0eba SUBW
              76e2 003c  ld   $3c         ;0eba 'Value'
              76e3 002b  ld   $2b         ;0ebc STW
              76e4 003c  ld   $3c         ;0ebc 'Value'
              76e5 0035  ld   $35         ;0ebe BCC
              76e6 0072  ld   $72         ;0ebf NE
              76e7 00c1  ld   $c1
              76e8 00cf  ld   $cf         ;0ec1 CALL
              76e9 0046  ld   $46         ;0ec1 'ValueError'
              76ea 0059  ld   $59         ;0ec3 LDI
              76eb 0000  ld   $00
              76ec 002b  ld   $2b         ;0ec5 STW
              76ed 0040  ld   $40         ;0ec5 'i'
              76ee 002b  ld   $2b         ;0ec7 STW
              76ef 004e  ld   $4e         ;0ec7 'tmp'
              76f0 0021  ld   $21         ;0ec9 LDW
              76f1 0040  ld   $40         ;0ec9 'i'
              76f2 0099  ld   $99         ;0ecb ADDW
              76f3 0040  ld   $40         ;0ecb 'i'
              76f4 002b  ld   $2b         ;0ecd STW
              76f5 0040  ld   $40         ;0ecd 'i'
              76f6 0021  ld   $21         ;0ecf LDW
              76f7 006a  ld   $6a         ;0ecf 'j'
              76f8 0035  ld   $35         ;0ed1 BCC
              76f9 0053  ld   $53         ;0ed2 GE
              76fa 00d4  ld   $d4
              76fb fe00  bra  ac          ;+-----------------------------------+
              76fc fcfd  bra  $76fd       ;|                                   |
              76fd 1418  ld   $18,y       ;| Trampoline for page $7600 lookups |
              76fe e006  jmp  y,$06       ;|                                   |
              76ff c218  st   [$18]       ;+-----------------------------------+
              7700 0093  ld   $93         ;0ed4 INC
              7701 0040  ld   $40         ;0ed4 'i'
              7702 0021  ld   $21         ;0ed6 LDW
              7703 006a  ld   $6a         ;0ed6 'j'
              7704 0099  ld   $99         ;0ed8 ADDW
              7705 006a  ld   $6a         ;0ed8 'j'
              7706 002b  ld   $2b         ;0eda STW
              7707 006a  ld   $6a         ;0eda 'j'
              7708 0021  ld   $21         ;0edc LDW
              7709 0040  ld   $40         ;0edc 'i'
              770a 00b8  ld   $b8         ;0ede SUBW
              770b 003c  ld   $3c         ;0ede 'Value'
              770c 0035  ld   $35         ;0ee0 BCC
              770d 0050  ld   $50         ;0ee1 LT
              770e 00e5  ld   $e5
              770f 002b  ld   $2b         ;0ee3 STW
              7710 0040  ld   $40         ;0ee3 'i'
              7711 0093  ld   $93         ;0ee5 INC
              7712 006a  ld   $6a         ;0ee5 'j'
              7713 0021  ld   $21         ;0ee7 LDW
              7714 004e  ld   $4e         ;0ee7 'tmp'
              7715 00e3  ld   $e3         ;0ee9 ADDI
              7716 0001  ld   $01
              7717 0082  ld   $82         ;0eeb ANDI
              7718 000f  ld   $0f
              7719 0035  ld   $35         ;0eed BCC
              771a 0072  ld   $72         ;0eee NE
              771b 00c5  ld   $c5
              771c 0021  ld   $21         ;0ef0 LDW
              771d 0044  ld   $44         ;0ef0 'k'
              771e 0035  ld   $35         ;0ef2 BCC
              771f 0053  ld   $53         ;0ef3 GE
              7720 00f8  ld   $f8
              7721 0059  ld   $59         ;0ef5 LDI
              7722 0000  ld   $00
              7723 00b8  ld   $b8         ;0ef7 SUBW
              7724 006a  ld   $6a         ;0ef7 'j'
              7725 00ff  ld   $ff         ;0ef9 RET
              7726 0021  ld   $21         ;0efa LDW
              7727 006a  ld   $6a         ;0efa 'j'
              7728 00ff  ld   $ff         ;0efc RET
              7729 0093  ld   $93         ;0efd INC
              772a 001b  ld   $1b
              772b 00ff  ld   $ff         ;0eff RET
              772c 000f  ld   $0f         ;| RAM segment address (high byte first)
              772d 00a0  ld   $a0         ;|
              772e 005e  ld   $5e         ;| Length (1..256)
              772f 002b  ld   $2b         ;0fa0 STW
              7730 003e  ld   $3e         ;0fa0 'Divide'
              7731 00cd  ld   $cd         ;0fa2 DEF
              7732 00c7  ld   $c7
              7733 002b  ld   $2b         ;0fa4 STW
              7734 004e  ld   $4e         ;0fa4 'tmp'
              7735 0059  ld   $59         ;0fa6 LDI
              7736 0000  ld   $00
              7737 002b  ld   $2b         ;0fa8 STW
              7738 006a  ld   $6a         ;0fa8 'j'
              7739 0059  ld   $59         ;0faa LDI
              773a 0001  ld   $01
              773b 002b  ld   $2b         ;0fac STW
              773c 0040  ld   $40         ;0fac 'i'
              773d 00f8  ld   $f8         ;0fae ANDW
              773e 004e  ld   $4e         ;0fae 'tmp'
              773f 0035  ld   $35         ;0fb0 BCC
              7740 003f  ld   $3f         ;0fb1 EQ
              7741 00b7  ld   $b7
              7742 0021  ld   $21         ;0fb3 LDW
              7743 006a  ld   $6a         ;0fb3 'j'
              7744 0099  ld   $99         ;0fb5 ADDW
              7745 003c  ld   $3c         ;0fb5 'Value'
              7746 002b  ld   $2b         ;0fb7 STW
              7747 006a  ld   $6a         ;0fb7 'j'
              7748 0021  ld   $21         ;0fb9 LDW
              7749 003c  ld   $3c         ;0fb9 'Value'
              774a 0099  ld   $99         ;0fbb ADDW
              774b 003c  ld   $3c         ;0fbb 'Value'
              774c 002b  ld   $2b         ;0fbd STW
              774d 003c  ld   $3c         ;0fbd 'Value'
              774e 0021  ld   $21         ;0fbf LDW
              774f 0040  ld   $40         ;0fbf 'i'
              7750 0099  ld   $99         ;0fc1 ADDW
              7751 0040  ld   $40         ;0fc1 'i'
              7752 0035  ld   $35         ;0fc3 BCC
              7753 0072  ld   $72         ;0fc4 NE
              7754 00aa  ld   $aa
              7755 0021  ld   $21         ;0fc6 LDW
              7756 006a  ld   $6a         ;0fc6 'j'
              7757 00ff  ld   $ff         ;0fc8 RET
              7758 002b  ld   $2b         ;0fc9 STW
              7759 007c  ld   $7c         ;0fc9 'Multiply'
              775a 00cd  ld   $cd         ;0fcb DEF
              775b 00e6  ld   $e6
              775c 0021  ld   $21         ;0fcd LDW
              775d 0000  ld   $00
              775e 002b  ld   $2b         ;0fcf STW
              775f 0040  ld   $40         ;0fcf 'i'
              7760 0021  ld   $21         ;0fd1 LDW
              7761 0036  ld   $36         ;0fd1 'Active'
              7762 00ad  ld   $ad         ;0fd3 PEEK
              7763 0082  ld   $82         ;0fd4 ANDI
              7764 005f  ld   $5f
              7765 00e6  ld   $e6         ;0fd6 SUBI
              7766 0040  ld   $40
              7767 0035  ld   $35         ;0fd8 BCC
              7768 0050  ld   $50         ;0fd9 LT
              7769 00e4  ld   $e4
              776a 00e6  ld   $e6         ;0fdb SUBI
              776b 001b  ld   $1b
              776c 0035  ld   $35         ;0fdd BCC
              776d 0053  ld   $53         ;0fde GE
              776e 00e4  ld   $e4
              776f 0093  ld   $93         ;0fe0 INC
              7770 0036  ld   $36         ;0fe0 'Active'
              7771 00e9  ld   $e9         ;0fe2 LSLW
              7772 0099  ld   $99         ;0fe3 ADDW
              7773 0040  ld   $40         ;0fe3 'i'
              7774 00ff  ld   $ff         ;0fe5 RET
              7775 00cf  ld   $cf         ;0fe6 CALL
              7776 004a  ld   $4a         ;0fe6 'SyntaxError'
              7777 002b  ld   $2b         ;0fe8 STW
              7778 0042  ld   $42         ;0fe8 'Variable'
              7779 00cd  ld   $cd         ;0fea DEF
              777a 00f7  ld   $f7
              777b 0021  ld   $21         ;0fec LDW
              777c 0036  ld   $36         ;0fec 'Active'
              777d 00ad  ld   $ad         ;0fee PEEK
              777e 008c  ld   $8c         ;0fef XORI
              777f 0020  ld   $20
              7780 0035  ld   $35         ;0ff1 BCC
              7781 0072  ld   $72         ;0ff2 NE
              7782 00f6  ld   $f6
              7783 0093  ld   $93         ;0ff4 INC
              7784 0036  ld   $36         ;0ff4 'Active'
              7785 0090  ld   $90         ;0ff6 BRA
              7786 00ea  ld   $ea
              7787 00ff  ld   $ff         ;0ff8 RET
              7788 002b  ld   $2b         ;0ff9 STW
              7789 0034  ld   $34         ;0ff9 'Spaces'
              778a 0093  ld   $93         ;0ffb INC
              778b 001b  ld   $1b
              778c 00ff  ld   $ff         ;0ffd RET
              778d 0010  ld   $10         ;| RAM segment address (high byte first)
              778e 00a0  ld   $a0         ;|
              778f 0060  ld   $60         ;| Length (1..256)
              7790 00cd  ld   $cd         ;10a0 DEF
              7791 00fb  ld   $fb
              7792 0075  ld   $75         ;10a2 PUSH
              7793 0021  ld   $21         ;10a3 LDW
              7794 006c  ld   $6c         ;10a3 'Begin'
              7795 002b  ld   $2b         ;10a5 STW
              7796 006a  ld   $6a         ;10a5 'j'
              7797 00fc  ld   $fc         ;10a7 XORW
              7798 0048  ld   $48         ;10a7 'End'
              7799 0035  ld   $35         ;10a9 BCC
              779a 003f  ld   $3f         ;10aa EQ
              779b 00c9  ld   $c9
              779c 00cf  ld   $cf         ;10ac CALL
              779d 0058  ld   $58         ;10ac 'TestBreak'
              779e 0021  ld   $21         ;10ae LDW
              779f 006a  ld   $6a         ;10ae 'j'
              77a0 00f6  ld   $f6         ;10b0 DEEK
              77a1 002b  ld   $2b         ;10b1 STW
              77a2 003c  ld   $3c         ;10b1 'Value'
              77a3 00cf  ld   $cf         ;10b3 CALL
              77a4 0076  ld   $76         ;10b3 'PrintValue'
              77a5 0093  ld   $93         ;10b5 INC
              77a6 006a  ld   $6a         ;10b5 'j'
              77a7 0093  ld   $93         ;10b7 INC
              77a8 006a  ld   $6a         ;10b7 'j'
              77a9 0021  ld   $21         ;10b9 LDW
              77aa 006a  ld   $6a         ;10b9 'j'
              77ab 00ad  ld   $ad         ;10bb PEEK
              77ac 0035  ld   $35         ;10bc BCC
              77ad 003f  ld   $3f         ;10bd EQ
              77ae 00c1  ld   $c1
              77af 00cf  ld   $cf         ;10bf CALL
              77b0 0050  ld   $50         ;10bf 'PrintChar'
              77b1 0090  ld   $90         ;10c1 BRA
              77b2 00b5  ld   $b5
              77b3 00cf  ld   $cf         ;10c3 CALL
              77b4 005a  ld   $5a         ;10c3 'Newline'
              77b5 0021  ld   $21         ;10c5 LDW
              77b6 006a  ld   $6a         ;10c5 'j'
              77b7 00cf  ld   $cf         ;10c7 CALL
              77b8 0070  ld   $70         ;10c7 'NextBlock'
              77b9 0090  ld   $90         ;10c9 BRA
              77ba 00a3  ld   $a3
              77bb 002b  ld   $2b         ;10cb STW
              77bc 003c  ld   $3c         ;10cb 'Value'
              77bd 0021  ld   $21         ;10cd LDW
              77be 0000  ld   $00
              77bf 00e6  ld   $e6         ;10cf SUBI
              77c0 0080  ld   $80
              77c1 00e6  ld   $e6         ;10d1 SUBI
              77c2 00c0  ld   $c0
              77c3 00fc  ld   $fc         ;10d3 XORW
              77c4 006a  ld   $6a         ;10d3 'j'
              77c5 0035  ld   $35         ;10d5 BCC
              77c6 003f  ld   $3f         ;10d6 EQ
              77c7 00e2  ld   $e2
              77c8 0021  ld   $21         ;10d8 LDW
              77c9 006a  ld   $6a         ;10d8 'j'
              77ca 00cf  ld   $cf         ;10da CALL
              77cb 0070  ld   $70         ;10da 'NextBlock'
              77cc 002b  ld   $2b         ;10dc STW
              77cd 006a  ld   $6a         ;10dc 'j'
              77ce 0021  ld   $21         ;10de LDW
              77cf 003c  ld   $3c         ;10de 'Value'
              77d0 00e3  ld   $e3         ;10e0 ADDI
              77d1 0020  ld   $20
              77d2 0090  ld   $90         ;10e2 BRA
              77d3 00c9  ld   $c9
              77d4 0021  ld   $21         ;10e4 LDW
              77d5 0050  ld   $50         ;10e4 'PrintChar'
              77d6 00fc  ld   $fc         ;10e6 XORW
              77d7 0054  ld   $54         ;10e6 'PrintCharScreen'
              77d8 0035  ld   $35         ;10e8 BCC
              77d9 0072  ld   $72         ;10e9 NE
              77da 00f9  ld   $f9
              77db 00cf  ld   $cf         ;10eb CALL
              77dc 0076  ld   $76         ;10eb 'PrintValue'
              77dd 00cf  ld   $cf         ;10ed CALL
              77de 0052  ld   $52         ;10ed 'PrintS'
              77df 0020  ld   $20         ;10ef ' '
              77e0 0062  ld   $62         ;10f0 'b'
              77e1 0079  ld   $79         ;10f1 'y'
              77e2 0074  ld   $74         ;10f2 't'
              77e3 0065  ld   $65         ;10f3 'e'
              77e4 0073  ld   $73         ;10f4 's'
              77e5 0020  ld   $20         ;10f5 ' '
              77e6 0066  ld   $66         ;10f6 'f'
              77e7 0072  ld   $72         ;10f7 'r'
              77e8 0065  ld   $65         ;10f8 'e'
              77e9 0065  ld   $65         ;10f9 'e'
              77ea 0000  ld   $00         ;10fa 0
              77eb 0063  ld   $63         ;10fb POP
              77ec 00ff  ld   $ff         ;10fc RET
              77ed 0093  ld   $93         ;10fd INC
              77ee 001b  ld   $1b
              77ef 00ff  ld   $ff         ;10ff RET
              77f0 0011  ld   $11         ;| RAM segment address (high byte first)
              77f1 00a0  ld   $a0         ;|
              77f2 0060  ld   $60         ;| Length (1..256)
              77f3 002b  ld   $2b         ;11a0 STW
              77f4 007e  ld   $7e         ;11a0 'List'
              77f5 00cd  ld   $cd         ;11a2 DEF
              77f6 00c1  ld   $c1
              77f7 0075  ld   $75         ;11a4 PUSH
              77f8 002b  ld   $2b         ;11a5 STW
              77f9 0040  ld   $40         ;11a5 'i'
              77fa 0021  ld   $21         ;11a7 LDW
              77fb fe00  bra  ac          ;+-----------------------------------+
              77fc fcfd  bra  $77fd       ;|                                   |
              77fd 1418  ld   $18,y       ;| Trampoline for page $7700 lookups |
              77fe e006  jmp  y,$06       ;|                                   |
              77ff c218  st   [$18]       ;+-----------------------------------+
              7800 003c  ld   $3c         ;11a7 'Value'
              7801 00b8  ld   $b8         ;11a9 SUBW
              7802 0040  ld   $40         ;11a9 'i'
              7803 0035  ld   $35         ;11ab BCC
              7804 0050  ld   $50         ;11ac LT
              7805 00b2  ld   $b2
              7806 002b  ld   $2b         ;11ae STW
              7807 003c  ld   $3c         ;11ae 'Value'
              7808 0093  ld   $93         ;11b0 INC
              7809 0044  ld   $44         ;11b0 'k'
              780a 0090  ld   $90         ;11b2 BRA
              780b 00a7  ld   $a7
              780c 0021  ld   $21         ;11b4 LDW
              780d 0044  ld   $44         ;11b4 'k'
              780e 0035  ld   $35         ;11b6 BCC
              780f 003f  ld   $3f         ;11b7 EQ
              7810 00bf  ld   $bf
              7811 0088  ld   $88         ;11b9 ORI
              7812 0030  ld   $30
              7813 00cf  ld   $cf         ;11bb CALL
              7814 0050  ld   $50         ;11bb 'PrintChar'
              7815 0059  ld   $59         ;11bd LDI
              7816 0030  ld   $30
              7817 002b  ld   $2b         ;11bf STW
              7818 0044  ld   $44         ;11bf 'k'
              7819 0063  ld   $63         ;11c1 POP
              781a 00ff  ld   $ff         ;11c2 RET
              781b 002b  ld   $2b         ;11c3 STW
              781c 0074  ld   $74         ;11c3 'PrintDigit'
              781d 00cd  ld   $cd         ;11c5 DEF
              781e 00f1  ld   $f1
              781f 0075  ld   $75         ;11c7 PUSH
              7820 0059  ld   $59         ;11c8 LDI
              7821 0000  ld   $00
              7822 002b  ld   $2b         ;11ca STW
              7823 0044  ld   $44         ;11ca 'k'
              7824 00cf  ld   $cf         ;11cc CALL
              7825 0038  ld   $38         ;11cc 'Keyword'
              7826 003c  ld   $3c         ;11ce '<'
              7827 0000  ld   $00         ;11cf 0
              7828 0035  ld   $35         ;11d0 BCC
              7829 003f  ld   $3f         ;11d1 EQ
              782a 00d3  ld   $d3
              782b 0093  ld   $93         ;11d3 INC
              782c 0044  ld   $44         ;11d3 'k'
              782d 00cf  ld   $cf         ;11d5 CALL
              782e 0038  ld   $38         ;11d5 'Keyword'
              782f 003e  ld   $3e         ;11d7 '>'
              7830 0000  ld   $00         ;11d8 0
              7831 0035  ld   $35         ;11d9 BCC
              7832 003f  ld   $3f         ;11da EQ
              7833 00e0  ld   $e0
              7834 0021  ld   $21         ;11dc LDW
              7835 0044  ld   $44         ;11dc 'k'
              7836 00e3  ld   $e3         ;11de ADDI
              7837 0004  ld   $04
              7838 002b  ld   $2b         ;11e0 STW
              7839 0044  ld   $44         ;11e0 'k'
              783a 00cf  ld   $cf         ;11e2 CALL
              783b 0038  ld   $38         ;11e2 'Keyword'
              783c 003d  ld   $3d         ;11e4 '='
              783d 0000  ld   $00         ;11e5 0
              783e 0035  ld   $35         ;11e6 BCC
              783f 003f  ld   $3f         ;11e7 EQ
              7840 00ed  ld   $ed
              7841 0021  ld   $21         ;11e9 LDW
              7842 0044  ld   $44         ;11e9 'k'
              7843 00e3  ld   $e3         ;11eb ADDI
              7844 0002  ld   $02
              7845 002b  ld   $2b         ;11ed STW
              7846 0044  ld   $44         ;11ed 'k'
              7847 0021  ld   $21         ;11ef LDW
              7848 0044  ld   $44         ;11ef 'k'
              7849 0063  ld   $63         ;11f1 POP
              784a 00ff  ld   $ff         ;11f2 RET
              784b 002b  ld   $2b         ;11f3 STW
              784c 0064  ld   $64         ;11f3 'RelOp'
              784d 0011  ld   $11         ;11f5 LDWI
              784e 00a0  ld   $a0
              784f 001b  ld   $1b
              7850 00f6  ld   $f6         ;11f8 DEEK
              7851 002b  ld   $2b         ;11f9 STW
              7852 0048  ld   $48         ;11f9 'End'
              7853 00e3  ld   $e3         ;11fb ADDI
              7854 0002  ld   $02
              7855 0093  ld   $93         ;11fd INC
              7856 001b  ld   $1b
              7857 00ff  ld   $ff         ;11ff RET
              7858 0012  ld   $12         ;| RAM segment address (high byte first)
              7859 00a0  ld   $a0         ;|
              785a 005d  ld   $5d         ;| Length (1..256)
              785b 002b  ld   $2b         ;12a0 STW
              785c 0036  ld   $36         ;12a0 'Active'
              785d 00cd  ld   $cd         ;12a2 DEF
              785e 00f7  ld   $f7
              785f 0021  ld   $21         ;12a4 LDW
              7860 001a  ld   $1a
              7861 002b  ld   $2b         ;12a6 STW
              7862 004e  ld   $4e         ;12a6 'tmp'
              7863 001a  ld   $1a         ;12a8 LD
              7864 0030  ld   $30         ;12a8 'Pos'
              7865 00e6  ld   $e6         ;12aa SUBI
              7866 0002  ld   $02
              7867 0035  ld   $35         ;12ac BCC
              7868 0056  ld   $56         ;12ad LE
              7869 00af  ld   $af
              786a 00cf  ld   $cf         ;12af CALL
              786b 005a  ld   $5a         ;12af 'Newline'
              786c 0059  ld   $59         ;12b1 LDI
              786d 0000  ld   $00
              786e 005e  ld   $5e         ;12b3 ST
              786f 001c  ld   $1c
              7870 0021  ld   $21         ;12b5 LDW
              7871 004e  ld   $4e         ;12b5 'tmp'
              7872 00ad  ld   $ad         ;12b7 PEEK
              7873 0035  ld   $35         ;12b8 BCC
              7874 003f  ld   $3f         ;12b9 EQ
              7875 00e3  ld   $e3
              7876 0059  ld   $59         ;12bb LDI
              7877 003f  ld   $3f
              7878 00cf  ld   $cf         ;12bd CALL
              7879 0050  ld   $50         ;12bd 'PrintChar'
              787a 0021  ld   $21         ;12bf LDW
              787b 004e  ld   $4e         ;12bf 'tmp'
              787c 00ad  ld   $ad         ;12c1 PEEK
              787d 0093  ld   $93         ;12c2 INC
              787e 004e  ld   $4e         ;12c2 'tmp'
              787f 0035  ld   $35         ;12c4 BCC
              7880 0072  ld   $72         ;12c5 NE
              7881 00bb  ld   $bb
              7882 00cf  ld   $cf         ;12c7 CALL
              7883 0052  ld   $52         ;12c7 'PrintS'
              7884 0020  ld   $20         ;12c9 ' '
              7885 0065  ld   $65         ;12ca 'e'
              7886 0072  ld   $72         ;12cb 'r'
              7887 0072  ld   $72         ;12cc 'r'
              7888 006f  ld   $6f         ;12cd 'o'
              7889 0072  ld   $72         ;12ce 'r'
              788a 0000  ld   $00         ;12cf 0
              788b 00e6  ld   $e6         ;12d0 SUBI
              788c 0020  ld   $20
              788d 00f8  ld   $f8         ;12d2 ANDW
              788e 0036  ld   $36         ;12d2 'Active'
              788f 00f6  ld   $f6         ;12d4 DEEK
              7890 0035  ld   $35         ;12d5 BCC
              7891 003f  ld   $3f         ;12d6 EQ
              7892 00e1  ld   $e1
              7893 002b  ld   $2b         ;12d8 STW
              7894 003c  ld   $3c         ;12d8 'Value'
              7895 00cf  ld   $cf         ;12da CALL
              7896 0052  ld   $52         ;12da 'PrintS'
              7897 0020  ld   $20         ;12dc ' '
              7898 0069  ld   $69         ;12dd 'i'
              7899 006e  ld   $6e         ;12de 'n'
              789a 0020  ld   $20         ;12df ' '
              789b 0000  ld   $00         ;12e0 0
              789c 00cf  ld   $cf         ;12e1 CALL
              789d 0076  ld   $76         ;12e1 'PrintValue'
              789e 00cf  ld   $cf         ;12e3 CALL
              789f 005a  ld   $5a         ;12e3 'Newline'
              78a0 00cf  ld   $cf         ;12e5 CALL
              78a1 0052  ld   $52         ;12e5 'PrintS'
              78a2 004f  ld   $4f         ;12e7 'O'
              78a3 006b  ld   $6b         ;12e8 'k'
              78a4 0000  ld   $00         ;12e9 0
              78a5 00cf  ld   $cf         ;12ea CALL
              78a6 005a  ld   $5a         ;12ea 'Newline'
              78a7 0059  ld   $59         ;12ec LDI
              78a8 0000  ld   $00
              78a9 00cf  ld   $cf         ;12ee CALL
              78aa 005c  ld   $5c         ;12ee 'GetLine'
              78ab 0035  ld   $35         ;12f0 BCC
              78ac 003f  ld   $3f         ;12f1 EQ
              78ad 00ea  ld   $ea
              78ae 00cf  ld   $cf         ;12f3 CALL
              78af 0072  ld   $72         ;12f3 'Insert'
              78b0 0035  ld   $35         ;12f5 BCC
              78b1 004d  ld   $4d         ;12f6 GT
              78b2 00ea  ld   $ea
              78b3 0011  ld   $11         ;12f8 785
              78b4 002b  ld   $2b         ;12f9 STW
              78b5 0056  ld   $56         ;12f9 'Prompt'
              78b6 00cf  ld   $cf         ;12fb CALL
              78b7 0066  ld   $66         ;12fb 'Statements'
              78b8 0013  ld   $13         ;| RAM segment address (high byte first)
              78b9 00a0  ld   $a0         ;|
              78ba 0059  ld   $59         ;| Length (1..256)
              78bb 0021  ld   $21         ;13a0 LDW
              78bc 0036  ld   $36         ;13a0 'Active'
              78bd 00ad  ld   $ad         ;13a2 PEEK
              78be 0035  ld   $35         ;13a3 BCC
              78bf 003f  ld   $3f         ;13a4 EQ
              78c0 00f3  ld   $f3
              78c1 008c  ld   $8c         ;13a6 XORI
              78c2 003a  ld   $3a
              78c3 0035  ld   $35         ;13a8 BCC
              78c4 003f  ld   $3f         ;13a9 EQ
              78c5 00f3  ld   $f3
              78c6 0021  ld   $21         ;13ab LDW
              78c7 0036  ld   $36         ;13ab 'Active'
              78c8 00ad  ld   $ad         ;13ad PEEK
              78c9 0035  ld   $35         ;13ae BCC
              78ca 003f  ld   $3f         ;13af EQ
              78cb 00f1  ld   $f1
              78cc 008c  ld   $8c         ;13b1 XORI
              78cd 003a  ld   $3a
              78ce 0035  ld   $35         ;13b3 BCC
              78cf 003f  ld   $3f         ;13b4 EQ
              78d0 00f1  ld   $f1
              78d1 008c  ld   $8c         ;13b6 XORI
              78d2 0018  ld   $18
              78d3 0035  ld   $35         ;13b8 BCC
              78d4 0072  ld   $72         ;13b9 NE
              78d5 00ce  ld   $ce
              78d6 0093  ld   $93         ;13bb INC
              78d7 0036  ld   $36         ;13bb 'Active'
              78d8 00cf  ld   $cf         ;13bd CALL
              78d9 0038  ld   $38         ;13bd 'Keyword'
              78da 0022  ld   $22         ;13bf 34
              78db 0000  ld   $00         ;13c0 0
              78dc 0035  ld   $35         ;13c1 BCC
              78dd 0072  ld   $72         ;13c2 NE
              78de 00cc  ld   $cc
              78df 0021  ld   $21         ;13c4 LDW
              78e0 0036  ld   $36         ;13c4 'Active'
              78e1 00ad  ld   $ad         ;13c6 PEEK
              78e2 0035  ld   $35         ;13c7 BCC
              78e3 003f  ld   $3f         ;13c8 EQ
              78e4 00cc  ld   $cc
              78e5 00cf  ld   $cf         ;13ca CALL
              78e6 0050  ld   $50         ;13ca 'PrintChar'
              78e7 0090  ld   $90         ;13cc BRA
              78e8 00b9  ld   $b9
              78e9 0090  ld   $90         ;13ce BRA
              78ea 00d2  ld   $d2
              78eb 00cf  ld   $cf         ;13d0 CALL
              78ec 003a  ld   $3a         ;13d0 'Expression'
              78ed 00cf  ld   $cf         ;13d2 CALL
              78ee 0076  ld   $76         ;13d2 'PrintValue'
              78ef 00cf  ld   $cf         ;13d4 CALL
              78f0 0038  ld   $38         ;13d4 'Keyword'
              78f1 002c  ld   $2c         ;13d6 44
              78f2 0000  ld   $00         ;13d7 0
              78f3 0035  ld   $35         ;13d8 BCC
              78f4 003f  ld   $3f         ;13d9 EQ
              78f5 00e8  ld   $e8
              78f6 0059  ld   $59         ;13db LDI
              78f7 0020  ld   $20
              78f8 00cf  ld   $cf         ;13dd CALL
              78f9 0050  ld   $50         ;13dd 'PrintChar'
              78fa 001a  ld   $1a         ;13df LD
              78fb fe00  bra  ac          ;+-----------------------------------+
              78fc fcfd  bra  $78fd       ;|                                   |
              78fd 1418  ld   $18,y       ;| Trampoline for page $7800 lookups |
              78fe e006  jmp  y,$06       ;|                                   |
              78ff c218  st   [$18]       ;+-----------------------------------+
              7900 0030  ld   $30         ;13df 'Pos'
              7901 00e6  ld   $e6         ;13e1 SUBI
              7902 0002  ld   $02
              7903 0082  ld   $82         ;13e3 ANDI
              7904 0007  ld   $07
              7905 0035  ld   $35         ;13e5 BCC
              7906 0072  ld   $72         ;13e6 NE
              7907 00d9  ld   $d9
              7908 0090  ld   $90         ;13e8 BRA
              7909 00a9  ld   $a9
              790a 00cf  ld   $cf         ;13ea CALL
              790b 0038  ld   $38         ;13ea 'Keyword'
              790c 003b  ld   $3b         ;13ec 59
              790d 0000  ld   $00         ;13ed 0
              790e 0035  ld   $35         ;13ee BCC
              790f 0072  ld   $72         ;13ef NE
              7910 00a9  ld   $a9
              7911 00cf  ld   $cf         ;13f1 CALL
              7912 005a  ld   $5a         ;13f1 'Newline'
              7913 0090  ld   $90         ;13f3 BRA
              7914 00f5  ld   $f5
              7915 00cf  ld   $cf         ;13f5 CALL
              7916 005a  ld   $5a         ;13f5 'Newline'
              7917 00cf  ld   $cf         ;13f7 CALL
              7918 0062  ld   $62         ;13f7 'EndOfLine'
              7919 0014  ld   $14         ;| RAM segment address (high byte first)
              791a 00a0  ld   $a0         ;|
              791b 005f  ld   $5f         ;| Length (1..256)
              791c 00cf  ld   $cf         ;14a0 CALL
              791d 0038  ld   $38         ;14a0 'Keyword'
              791e 003f  ld   $3f         ;14a2 '?'
              791f 0000  ld   $00         ;14a3 0
              7920 0035  ld   $35         ;14a4 BCC
              7921 0072  ld   $72         ;14a5 NE
              7922 00ad  ld   $ad
              7923 00cf  ld   $cf         ;14a7 CALL
              7924 0038  ld   $38         ;14a7 'Keyword'
              7925 0070  ld   $70         ;14a9 'p'
              7926 0072  ld   $72         ;14aa 'r'
              7927 0069  ld   $69         ;14ab 'i'
              7928 006e  ld   $6e         ;14ac 'n'
              7929 0074  ld   $74         ;14ad 't'
              792a 0000  ld   $00         ;14ae 0
              792b 0035  ld   $35         ;14af BCC
              792c 003f  ld   $3f         ;14b0 EQ
              792d 00b5  ld   $b5
              792e 0011  ld   $11         ;14b2 LDWI
              792f 00a0  ld   $a0
              7930 0013  ld   $13
              7931 00cf  ld   $cf         ;14b5 CALL
              7932 0018  ld   $18         ;14b5 vAC
              7933 00cf  ld   $cf         ;14b7 CALL
              7934 0038  ld   $38         ;14b7 'Keyword'
              7935 0069  ld   $69         ;14b9 'i'
              7936 006e  ld   $6e         ;14ba 'n'
              7937 0070  ld   $70         ;14bb 'p'
              7938 0075  ld   $75         ;14bc 'u'
              7939 0074  ld   $74         ;14bd 't'
              793a 0000  ld   $00         ;14be 0
              793b 0035  ld   $35         ;14bf BCC
              793c 003f  ld   $3f         ;14c0 EQ
              793d 00f8  ld   $f8
              793e 0021  ld   $21         ;14c2 LDW
              793f 0036  ld   $36         ;14c2 'Active'
              7940 00ad  ld   $ad         ;14c4 PEEK
              7941 00cf  ld   $cf         ;14c5 CALL
              7942 0050  ld   $50         ;14c5 'PrintChar'
              7943 00cf  ld   $cf         ;14c7 CALL
              7944 0042  ld   $42         ;14c7 'Variable'
              7945 002b  ld   $2b         ;14c9 STW
              7946 0068  ld   $68         ;14c9 'Address'
              7947 00cf  ld   $cf         ;14cb CALL
              7948 0034  ld   $34         ;14cb 'Spaces'
              7949 00df  ld   $df         ;14cd ALLOC
              794a 00fc  ld   $fc
              794b 0021  ld   $21         ;14cf LDW
              794c 0036  ld   $36         ;14cf 'Active'
              794d 00ec  ld   $ec         ;14d1 STLW
              794e 0002  ld   $02
              794f 0088  ld   $88         ;14d3 ORI
              7950 001f  ld   $1f
              7951 00e6  ld   $e6         ;14d5 SUBI
              7952 001f  ld   $1f
              7953 00f6  ld   $f6         ;14d7 DEEK
              7954 00ec  ld   $ec         ;14d8 STLW
              7955 0000  ld   $00
              7956 0059  ld   $59         ;14da LDI
              7957 003f  ld   $3f
              7958 00cf  ld   $cf         ;14dc CALL
              7959 0050  ld   $50         ;14dc 'PrintChar'
              795a 00cf  ld   $cf         ;14de CALL
              795b 005a  ld   $5a         ;14de 'Newline'
              795c 00ee  ld   $ee         ;14e0 LDLW
              795d 0000  ld   $00
              795e 00cf  ld   $cf         ;14e2 CALL
              795f 005c  ld   $5c         ;14e2 'GetLine'
              7960 0035  ld   $35         ;14e4 BCC
              7961 003f  ld   $3f         ;14e5 EQ
              7962 00d8  ld   $d8
              7963 00cf  ld   $cf         ;14e7 CALL
              7964 003a  ld   $3a         ;14e7 'Expression'
              7965 00f3  ld   $f3         ;14e9 DOKE
              7966 0068  ld   $68         ;14e9 'Address'
              7967 00ee  ld   $ee         ;14eb LDLW
              7968 0002  ld   $02
              7969 002b  ld   $2b         ;14ed STW
              796a 0036  ld   $36         ;14ed 'Active'
              796b 00df  ld   $df         ;14ef ALLOC
              796c 0004  ld   $04
              796d 00cf  ld   $cf         ;14f1 CALL
              796e 0038  ld   $38         ;14f1 'Keyword'
              796f 002c  ld   $2c         ;14f3 ','
              7970 0000  ld   $00         ;14f4 0
              7971 0035  ld   $35         ;14f5 BCC
              7972 0072  ld   $72         ;14f6 NE
              7973 00c0  ld   $c0
              7974 00cf  ld   $cf         ;14f8 CALL
              7975 0062  ld   $62         ;14f8 'EndOfLine'
              7976 0011  ld   $11         ;14fa LDWI
              7977 00a0  ld   $a0
              7978 0015  ld   $15
              7979 00cf  ld   $cf         ;14fd CALL
              797a 0018  ld   $18         ;14fd vAC
              797b 0015  ld   $15         ;| RAM segment address (high byte first)
              797c 00a0  ld   $a0         ;|
              797d 0058  ld   $58         ;| Length (1..256)
              797e 00cf  ld   $cf         ;15a0 CALL
              797f 0038  ld   $38         ;15a0 'Keyword'
              7980 0063  ld   $63         ;15a2 'c'
              7981 006c  ld   $6c         ;15a3 'l'
              7982 0073  ld   $73         ;15a4 's'
              7983 0000  ld   $00         ;15a5 0
              7984 0035  ld   $35         ;15a6 BCC
              7985 003f  ld   $3f         ;15a7 EQ
              7986 00cb  ld   $cb
              7987 0011  ld   $11         ;15a9 LDWI
              7988 0000  ld   $00
              7989 0001  ld   $01
              798a 00ad  ld   $ad         ;15ac PEEK
              798b 005e  ld   $5e         ;15ad ST
              798c 0031  ld   $31         ;15ad 'Pos'+1
              798d 0059  ld   $59         ;15af LDI
              798e 000e  ld   $0e
              798f 002b  ld   $2b         ;15b1 STW
              7990 006a  ld   $6a         ;15b1 'j'
              7991 00cf  ld   $cf         ;15b3 CALL
              7992 005a  ld   $5a         ;15b3 'Newline'
              7993 0021  ld   $21         ;15b5 LDW
              7994 006a  ld   $6a         ;15b5 'j'
              7995 00e6  ld   $e6         ;15b7 SUBI
              7996 0001  ld   $01
              7997 0035  ld   $35         ;15b9 BCC
              7998 004d  ld   $4d         ;15ba GT
              7999 00af  ld   $af
              799a 00cf  ld   $cf         ;15bc CALL
              799b 005a  ld   $5a         ;15bc 'Newline'
              799c 0011  ld   $11         ;15be LDWI
              799d 0000  ld   $00
              799e 0001  ld   $01
              799f 00ad  ld   $ad         ;15c1 PEEK
              79a0 008c  ld   $8c         ;15c2 XORI
              79a1 0008  ld   $08
              79a2 0035  ld   $35         ;15c4 BCC
              79a3 0072  ld   $72         ;15c5 NE
              79a4 00ba  ld   $ba
              79a5 0059  ld   $59         ;15c7 LDI
              79a6 0008  ld   $08
              79a7 005e  ld   $5e         ;15c9 ST
              79a8 0031  ld   $31         ;15c9 'Pos'+1
              79a9 00cf  ld   $cf         ;15cb CALL
              79aa 0062  ld   $62         ;15cb 'EndOfLine'
              79ab 00cf  ld   $cf         ;15cd CALL
              79ac 0038  ld   $38         ;15cd 'Keyword'
              79ad 006c  ld   $6c         ;15cf 'l'
              79ae 0069  ld   $69         ;15d0 'i'
              79af 0073  ld   $73         ;15d1 's'
              79b0 0074  ld   $74         ;15d2 't'
              79b1 0000  ld   $00         ;15d3 0
              79b2 0035  ld   $35         ;15d4 BCC
              79b3 003f  ld   $3f         ;15d5 EQ
              79b4 00d9  ld   $d9
              79b5 00cf  ld   $cf         ;15d7 CALL
              79b6 007e  ld   $7e         ;15d7 'List'
              79b7 00cf  ld   $cf         ;15d9 CALL
              79b8 0062  ld   $62         ;15d9 'EndOfLine'
              79b9 00cf  ld   $cf         ;15db CALL
              79ba 0038  ld   $38         ;15db 'Keyword'
              79bb 0073  ld   $73         ;15dd 's'
              79bc 0061  ld   $61         ;15de 'a'
              79bd 0076  ld   $76         ;15df 'v'
              79be 0065  ld   $65         ;15e0 'e'
              79bf 0000  ld   $00         ;15e1 0
              79c0 0035  ld   $35         ;15e2 BCC
              79c1 003f  ld   $3f         ;15e3 EQ
              79c2 00f1  ld   $f1
              79c3 001a  ld   $1a         ;15e5 LD
              79c4 0021  ld   $21
              79c5 00e6  ld   $e6         ;15e7 SUBI
              79c6 0028  ld   $28
              79c7 0035  ld   $35         ;15e9 BCC
              79c8 0053  ld   $53         ;15ea GE
              79c9 00ec  ld   $ec
              79ca 00cf  ld   $cf         ;15ec CALL
              79cb 0046  ld   $46         ;15ec 'ValueError'
              79cc 0011  ld   $11         ;15ee LDWI
              79cd 00a0  ld   $a0
              79ce 0017  ld   $17
              79cf 00cf  ld   $cf         ;15f1 CALL
              79d0 0018  ld   $18         ;15f1 vAC
              79d1 0011  ld   $11         ;15f3 LDWI
              79d2 00eb  ld   $eb
              79d3 000d  ld   $0d
              79d4 00cf  ld   $cf         ;15f6 CALL
              79d5 0018  ld   $18         ;15f6 vAC
              79d6 0016  ld   $16         ;| RAM segment address (high byte first)
              79d7 00a0  ld   $a0         ;|
              79d8 0060  ld   $60         ;| Length (1..256)
              79d9 00cf  ld   $cf         ;16a0 CALL
              79da 0038  ld   $38         ;16a0 'Keyword'
              79db 006e  ld   $6e         ;16a2 'n'
              79dc 0065  ld   $65         ;16a3 'e'
              79dd 0077  ld   $77         ;16a4 'w'
              79de 0000  ld   $00         ;16a5 0
              79df 0035  ld   $35         ;16a6 BCC
              79e0 003f  ld   $3f         ;16a7 EQ
              79e1 00b0  ld   $b0
              79e2 00cf  ld   $cf         ;16a9 CALL
              79e3 0078  ld   $78         ;16a9 'Clear'
              79e4 002b  ld   $2b         ;16ab STW
              79e5 0048  ld   $48         ;16ab 'End'
              79e6 00cf  ld   $cf         ;16ad CALL
              79e7 007e  ld   $7e         ;16ad 'List'
              79e8 00cf  ld   $cf         ;16af CALL
              79e9 0056  ld   $56         ;16af 'Prompt'
              79ea 0000  ld   $00         ;16b1 0
              79eb 00cf  ld   $cf         ;16b2 CALL
              79ec 0038  ld   $38         ;16b2 'Keyword'
              79ed 006c  ld   $6c         ;16b4 'l'
              79ee 0065  ld   $65         ;16b5 'e'
              79ef 0074  ld   $74         ;16b6 't'
              79f0 0000  ld   $00         ;16b7 0
              79f1 00cf  ld   $cf         ;16b8 CALL
              79f2 0042  ld   $42         ;16b8 'Variable'
              79f3 002b  ld   $2b         ;16ba STW
              79f4 0068  ld   $68         ;16ba 'Address'
              79f5 00cf  ld   $cf         ;16bc CALL
              79f6 0034  ld   $34         ;16bc 'Spaces'
              79f7 00cf  ld   $cf         ;16be CALL
              79f8 0038  ld   $38         ;16be 'Keyword'
              79f9 0028  ld   $28         ;16c0 40
              79fa 0000  ld   $00         ;16c1 0
              79fb fe00  bra  ac          ;+-----------------------------------+
              79fc fcfd  bra  $79fd       ;|                                   |
              79fd 1418  ld   $18,y       ;| Trampoline for page $7900 lookups |
              79fe e006  jmp  y,$06       ;|                                   |
              79ff c218  st   [$18]       ;+-----------------------------------+
              7a00 0035  ld   $35         ;16c2 BCC
              7a01 003f  ld   $3f         ;16c3 EQ
              7a02 00ef  ld   $ef
              7a03 00cf  ld   $cf         ;16c5 CALL
              7a04 003a  ld   $3a         ;16c5 'Expression'
              7a05 0035  ld   $35         ;16c7 BCC
              7a06 0053  ld   $53         ;16c8 GE
              7a07 00ca  ld   $ca
              7a08 00cf  ld   $cf         ;16ca CALL
              7a09 0046  ld   $46         ;16ca 'ValueError'
              7a0a 001a  ld   $1a         ;16cc LD
              7a0b 0069  ld   $69         ;16cc 'Address'+1
              7a0c 00b8  ld   $b8         ;16ce SUBW
              7a0d 003c  ld   $3c         ;16ce 'Value'
              7a0e 00e6  ld   $e6         ;16d0 SUBI
              7a0f 0002  ld   $02
              7a10 005e  ld   $5e         ;16d2 ST
              7a11 0069  ld   $69         ;16d2 'Address'+1
              7a12 0021  ld   $21         ;16d4 LDW
              7a13 0048  ld   $48         ;16d4 'End'
              7a14 00fc  ld   $fc         ;16d6 XORW
              7a15 0068  ld   $68         ;16d6 'Address'
              7a16 0035  ld   $35         ;16d8 BCC
              7a17 0053  ld   $53         ;16d9 GE
              7a18 00dd  ld   $dd
              7a19 0021  ld   $21         ;16db LDW
              7a1a 0048  ld   $48         ;16db 'End'
              7a1b 0090  ld   $90         ;16dd BRA
              7a1c 00e1  ld   $e1
              7a1d 0021  ld   $21         ;16df LDW
              7a1e 0068  ld   $68         ;16df 'Address'
              7a1f 00b8  ld   $b8         ;16e1 SUBW
              7a20 0048  ld   $48         ;16e1 'End'
              7a21 0035  ld   $35         ;16e3 BCC
              7a22 0053  ld   $53         ;16e4 GE
              7a23 00e6  ld   $e6
              7a24 00cf  ld   $cf         ;16e6 CALL
              7a25 0046  ld   $46         ;16e6 'ValueError'
              7a26 00cf  ld   $cf         ;16e8 CALL
              7a27 0038  ld   $38         ;16e8 'Keyword'
              7a28 0029  ld   $29         ;16ea 41
              7a29 0000  ld   $00         ;16eb 0
              7a2a 0035  ld   $35         ;16ec BCC
              7a2b 0072  ld   $72         ;16ed NE
              7a2c 00ef  ld   $ef
              7a2d 00cf  ld   $cf         ;16ef CALL
              7a2e 004a  ld   $4a         ;16ef 'SyntaxError'
              7a2f 00cf  ld   $cf         ;16f1 CALL
              7a30 0038  ld   $38         ;16f1 'Keyword'
              7a31 003d  ld   $3d         ;16f3 '='
              7a32 0000  ld   $00         ;16f4 0
              7a33 0035  ld   $35         ;16f5 BCC
              7a34 0072  ld   $72         ;16f6 NE
              7a35 00f8  ld   $f8
              7a36 00cf  ld   $cf         ;16f8 CALL
              7a37 004a  ld   $4a         ;16f8 'SyntaxError'
              7a38 00cf  ld   $cf         ;16fa CALL
              7a39 003a  ld   $3a         ;16fa 'Expression'
              7a3a 00f3  ld   $f3         ;16fc DOKE
              7a3b 0068  ld   $68         ;16fc 'Address'
              7a3c 00cf  ld   $cf         ;16fe CALL
              7a3d 0062  ld   $62         ;16fe 'EndOfLine'
              7a3e 0017  ld   $17         ;| RAM segment address (high byte first)
              7a3f 00a0  ld   $a0         ;|
              7a40 005f  ld   $5f         ;| Length (1..256)
              7a41 0021  ld   $21         ;17a0 LDW
              7a42 0000  ld   $00
              7a43 005e  ld   $5e         ;17a2 ST
              7a44 0027  ld   $27
              7a45 00e6  ld   $e6         ;17a4 SUBI
              7a46 0060  ld   $60
              7a47 002b  ld   $2b         ;17a6 STW
              7a48 0068  ld   $68         ;17a6 'Address'
              7a49 00cd  ld   $cd         ;17a8 DEF
              7a4a 00e8  ld   $e8
              7a4b 0075  ld   $75         ;17aa PUSH
              7a4c 002b  ld   $2b         ;17ab STW
              7a4d 0044  ld   $44         ;17ab 'k'
              7a4e 001a  ld   $1a         ;17ad LD
              7a4f 0027  ld   $27
              7a50 00e3  ld   $e3         ;17af ADDI
              7a51 0008  ld   $08
              7a52 005e  ld   $5e         ;17b1 ST
              7a53 0027  ld   $27
              7a54 001a  ld   $1a         ;17b3 LD
              7a55 0030  ld   $30         ;17b3 'Pos'
              7a56 00e6  ld   $e6         ;17b5 SUBI
              7a57 0006  ld   $06
              7a58 0035  ld   $35         ;17b7 BCC
              7a59 0053  ld   $53         ;17b8 GE
              7a5a 00de  ld   $de
              7a5b 0059  ld   $59         ;17ba LDI
              7a5c 000a  ld   $0a
              7a5d 00f0  ld   $f0         ;17bc POKE
              7a5e 0068  ld   $68         ;17bc 'Address'
              7a5f 0021  ld   $21         ;17be LDW
              7a60 0068  ld   $68         ;17be 'Address'
              7a61 0088  ld   $88         ;17c0 ORI
              7a62 001f  ld   $1f
              7a63 008c  ld   $8c         ;17c2 XORI
              7a64 001f  ld   $1f
              7a65 002b  ld   $2b         ;17c4 STW
              7a66 0068  ld   $68         ;17c4 'Address'
              7a67 002b  ld   $2b         ;17c6 STW
              7a68 0024  ld   $24
              7a69 0059  ld   $59         ;17c8 LDI
              7a6a 0001  ld   $01
              7a6b 005e  ld   $5e         ;17ca ST
              7a6c 0026  ld   $26
              7a6d 0011  ld   $11         ;17cc LDWI
              7a6e 0006  ld   $06
              7a6f 000b  ld   $0b
              7a70 002b  ld   $2b         ;17cf STW
              7a71 0022  ld   $22         ;17cf '_sysFn'
              7a72 00b4  ld   $b4         ;17d1 SYS
              7a73 00e7  ld   $e7
              7a74 0035  ld   $35         ;17d3 BCC
              7a75 003f  ld   $3f         ;17d4 EQ
              7a76 00da  ld   $da
              7a77 0059  ld   $59         ;17d6 LDI
              7a78 0003  ld   $03
              7a79 005e  ld   $5e         ;17d8 ST
              7a7a 000f  ld   $0f
              7a7b 00cf  ld   $cf         ;17da CALL
              7a7c 0058  ld   $58         ;17da 'TestBreak'
              7a7d 0059  ld   $59         ;17dc LDI
              7a7e 0008  ld   $08
              7a7f 005e  ld   $5e         ;17de ST
              7a80 0027  ld   $27
              7a81 0021  ld   $21         ;17e0 LDW
              7a82 0044  ld   $44         ;17e0 'k'
              7a83 00f0  ld   $f0         ;17e2 POKE
              7a84 0068  ld   $68         ;17e2 'Address'
              7a85 0093  ld   $93         ;17e4 INC
              7a86 0068  ld   $68         ;17e4 'Address'
              7a87 00cf  ld   $cf         ;17e6 CALL
              7a88 0054  ld   $54         ;17e6 'PrintCharScreen'
              7a89 0063  ld   $63         ;17e8 POP
              7a8a 00ff  ld   $ff         ;17e9 RET
              7a8b 002b  ld   $2b         ;17ea STW
              7a8c 0050  ld   $50         ;17ea 'PrintChar'
              7a8d 001a  ld   $1a         ;17ec LD
              7a8e 000f  ld   $0f
              7a8f 008c  ld   $8c         ;17ee XORI
              7a90 00ff  ld   $ff
              7a91 0035  ld   $35         ;17f0 BCC
              7a92 0072  ld   $72         ;17f1 NE
              7a93 00ea  ld   $ea
              7a94 00cf  ld   $cf         ;17f3 CALL
              7a95 007e  ld   $7e         ;17f3 'List'
              7a96 0059  ld   $59         ;17f5 LDI
              7a97 0020  ld   $20
              7a98 00cf  ld   $cf         ;17f7 CALL
              7a99 0050  ld   $50         ;17f7 'PrintChar'
              7a9a 0021  ld   $21         ;17f9 LDW
              7a9b 0054  ld   $54         ;17f9 'PrintCharScreen'
              7a9c 002b  ld   $2b         ;17fb STW
              7a9d 0050  ld   $50         ;17fb 'PrintChar'
              7a9e 00cf  ld   $cf         ;17fd CALL
              7a9f 0062  ld   $62         ;17fd 'EndOfLine'
              7aa0 0018  ld   $18         ;| RAM segment address (high byte first)
              7aa1 00a0  ld   $a0         ;|
              7aa2 0060  ld   $60         ;| Length (1..256)
              7aa3 0011  ld   $11         ;18a0 LDWI
              7aa4 00e1  ld   $e1
              7aa5 0004  ld   $04
              7aa6 002b  ld   $2b         ;18a3 STW
              7aa7 0022  ld   $22         ;18a3 '_sysFn'
              7aa8 0059  ld   $59         ;18a5 LDI
              7aa9 0000  ld   $00
              7aaa 005e  ld   $5e         ;18a7 ST
              7aab 0030  ld   $30         ;18a7 'Pos'
              7aac 005e  ld   $5e         ;18a9 ST
              7aad 0026  ld   $26
              7aae 001a  ld   $1a         ;18ab LD
              7aaf 0031  ld   $31         ;18ab 'Pos'+1
              7ab0 00e3  ld   $e3         ;18ad ADDI
              7ab1 000f  ld   $0f
              7ab2 0082  ld   $82         ;18af ANDI
              7ab3 0078  ld   $78
              7ab4 0035  ld   $35         ;18b1 BCC
              7ab5 0072  ld   $72         ;18b2 NE
              7ab6 00b4  ld   $b4
              7ab7 0059  ld   $59         ;18b4 LDI
              7ab8 0008  ld   $08
              7ab9 005e  ld   $5e         ;18b6 ST
              7aba 0031  ld   $31         ;18b6 'Pos'+1
              7abb 0021  ld   $21         ;18b8 LDW
              7abc 002a  ld   $2a
              7abd 002b  ld   $2b         ;18ba STW
              7abe 0024  ld   $24
              7abf 0021  ld   $21         ;18bc LDW
              7ac0 0030  ld   $30         ;18bc 'Pos'
              7ac1 002b  ld   $2b         ;18be STW
              7ac2 0028  ld   $28
              7ac3 00b4  ld   $b4         ;18c0 SYS
              7ac4 00cc  ld   $cc
              7ac5 0093  ld   $93         ;18c2 INC
              7ac6 0028  ld   $28
              7ac7 00b4  ld   $b4         ;18c4 SYS
              7ac8 00cc  ld   $cc
              7ac9 0093  ld   $93         ;18c6 INC
              7aca 0028  ld   $28
              7acb 001a  ld   $1a         ;18c8 LD
              7acc 0028  ld   $28
              7acd 008c  ld   $8c         ;18ca XORI
              7ace 00a0  ld   $a0
              7acf 0035  ld   $35         ;18cc BCC
              7ad0 0072  ld   $72         ;18cd NE
              7ad1 00be  ld   $be
              7ad2 0011  ld   $11         ;18cf LDWI
              7ad3 0000  ld   $00
              7ad4 0001  ld   $01
              7ad5 002b  ld   $2b         ;18d2 STW
              7ad6 0040  ld   $40         ;18d2 'i'
              7ad7 0088  ld   $88         ;18d4 ORI
              7ad8 00ff  ld   $ff
              7ad9 00f6  ld   $f6         ;18d6 DEEK
              7ada 00b8  ld   $b8         ;18d7 SUBW
              7adb 0030  ld   $30         ;18d7 'Pos'
              7adc 001a  ld   $1a         ;18d9 LD
              7add 0019  ld   $19
              7ade 0035  ld   $35         ;18db BCC
              7adf 0072  ld   $72         ;18dc NE
              7ae0 00f9  ld   $f9
              7ae1 0021  ld   $21         ;18de LDW
              7ae2 0040  ld   $40         ;18de 'i'
              7ae3 00e3  ld   $e3         ;18e0 ADDI
              7ae4 0010  ld   $10
              7ae5 002b  ld   $2b         ;18e2 STW
              7ae6 0024  ld   $24         ;18e2 '_sysArgs0'
              7ae7 00ad  ld   $ad         ;18e4 PEEK
              7ae8 005e  ld   $5e         ;18e5 ST
              7ae9 0026  ld   $26
              7aea 0021  ld   $21         ;18e7 LDW
              7aeb 0040  ld   $40         ;18e7 'i'
              7aec 00ad  ld   $ad         ;18e9 PEEK
              7aed 00f0  ld   $f0         ;18ea POKE
              7aee 0024  ld   $24         ;18ea '_sysArgs0'
              7aef 001a  ld   $1a         ;18ec LD
              7af0 0026  ld   $26
              7af1 00f0  ld   $f0         ;18ee POKE
              7af2 0040  ld   $40         ;18ee 'i'
              7af3 0093  ld   $93         ;18f0 INC
              7af4 0040  ld   $40         ;18f0 'i'
              7af5 0093  ld   $93         ;18f2 INC
              7af6 0040  ld   $40         ;18f2 'i'
              7af7 001a  ld   $1a         ;18f4 LD
              7af8 0040  ld   $40         ;18f4 'i'
              7af9 008c  ld   $8c         ;18f6 XORI
              7afa 00e0  ld   $e0
              7afb fe00  bra  ac          ;+-----------------------------------+
              7afc fcfd  bra  $7afd       ;|                                   |
              7afd 1418  ld   $18,y       ;| Trampoline for page $7a00 lookups |
              7afe e006  jmp  y,$06       ;|                                   |
              7aff c218  st   [$18]       ;+-----------------------------------+
              7b00 0035  ld   $35         ;18f8 BCC
              7b01 0072  ld   $72         ;18f9 NE
              7b02 00dc  ld   $dc
              7b03 0093  ld   $93         ;18fb INC
              7b04 0030  ld   $30         ;18fb 'Pos'
              7b05 0093  ld   $93         ;18fd INC
              7b06 0030  ld   $30         ;18fd 'Pos'
              7b07 00ff  ld   $ff         ;18ff RET
              7b08 0019  ld   $19         ;| RAM segment address (high byte first)
              7b09 00a0  ld   $a0         ;|
              7b0a 0060  ld   $60         ;| Length (1..256)
              7b0b 0059  ld   $59         ;19a0 LDI
              7b0c 0001  ld   $01
              7b0d 002b  ld   $2b         ;19a2 STW
              7b0e 0024  ld   $24
              7b0f 0011  ld   $11         ;19a4 LDWI
              7b10 0000  ld   $00
              7b11 0001  ld   $01
              7b12 002b  ld   $2b         ;19a7 STW
              7b13 0026  ld   $26
              7b14 00cf  ld   $cf         ;19a9 CALL
              7b15 003a  ld   $3a         ;19a9 'Expression'
              7b16 0075  ld   $75         ;19ab PUSH
              7b17 00ec  ld   $ec         ;19ac STLW
              7b18 0000  ld   $00
              7b19 00cf  ld   $cf         ;19ae CALL
              7b1a 0038  ld   $38         ;19ae 'Keyword'
              7b1b 002c  ld   $2c         ;19b0 ','
              7b1c 0000  ld   $00         ;19b1 0
              7b1d 0035  ld   $35         ;19b2 BCC
              7b1e 0072  ld   $72         ;19b3 NE
              7b1f 00b5  ld   $b5
              7b20 00cf  ld   $cf         ;19b5 CALL
              7b21 004a  ld   $4a         ;19b5 'SyntaxError'
              7b22 00cf  ld   $cf         ;19b7 CALL
              7b23 003a  ld   $3a         ;19b7 'Expression'
              7b24 002b  ld   $2b         ;19b9 STW
              7b25 006a  ld   $6a         ;19b9 'j'
              7b26 0035  ld   $35         ;19bb BCC
              7b27 0053  ld   $53         ;19bc GE
              7b28 00c8  ld   $c8
              7b29 0059  ld   $59         ;19be LDI
              7b2a 0000  ld   $00
              7b2b 00b8  ld   $b8         ;19c0 952
              7b2c 0026  ld   $26         ;19c1 38
              7b2d 002b  ld   $2b         ;19c2 STW
              7b2e 0026  ld   $26
              7b2f 0059  ld   $59         ;19c4 LDI
              7b30 0000  ld   $00
              7b31 00b8  ld   $b8         ;19c6 SUBW
              7b32 006a  ld   $6a         ;19c6 'j'
              7b33 002b  ld   $2b         ;19c8 STW
              7b34 006a  ld   $6a         ;19c8 'j'
              7b35 00ee  ld   $ee         ;19ca LDLW
              7b36 0000  ld   $00
              7b37 002b  ld   $2b         ;19cc STW
              7b38 0040  ld   $40         ;19cc 'i'
              7b39 0035  ld   $35         ;19ce BCC
              7b3a 0053  ld   $53         ;19cf GE
              7b3b 00db  ld   $db
              7b3c 0059  ld   $59         ;19d1 LDI
              7b3d 0000  ld   $00
              7b3e 00b8  ld   $b8         ;19d3 952
              7b3f 0024  ld   $24         ;19d4 36
              7b40 002b  ld   $2b         ;19d5 STW
              7b41 0024  ld   $24
              7b42 0059  ld   $59         ;19d7 LDI
              7b43 0000  ld   $00
              7b44 00b8  ld   $b8         ;19d9 SUBW
              7b45 0040  ld   $40         ;19d9 'i'
              7b46 002b  ld   $2b         ;19db STW
              7b47 0040  ld   $40         ;19db 'i'
              7b48 00b8  ld   $b8         ;19dd SUBW
              7b49 006a  ld   $6a         ;19dd 'j'
              7b4a 0035  ld   $35         ;19df BCC
              7b4b 0053  ld   $53         ;19e0 GE
              7b4c 00f8  ld   $f8
              7b4d 0021  ld   $21         ;19e2 LDW
              7b4e 0040  ld   $40         ;19e2 'i'
              7b4f 002b  ld   $2b         ;19e4 STW
              7b50 004e  ld   $4e         ;19e4 'tmp'
              7b51 0021  ld   $21         ;19e6 LDW
              7b52 006a  ld   $6a         ;19e6 'j'
              7b53 002b  ld   $2b         ;19e8 STW
              7b54 0040  ld   $40         ;19e8 'i'
              7b55 0021  ld   $21         ;19ea LDW
              7b56 004e  ld   $4e         ;19ea 'tmp'
              7b57 002b  ld   $2b         ;19ec STW
              7b58 006a  ld   $6a         ;19ec 'j'
              7b59 0021  ld   $21         ;19ee LDW
              7b5a 0024  ld   $24
              7b5b 002b  ld   $2b         ;19f0 STW
              7b5c 004e  ld   $4e         ;19f0 'tmp'
              7b5d 0021  ld   $21         ;19f2 LDW
              7b5e 0026  ld   $26
              7b5f 002b  ld   $2b         ;19f4 STW
              7b60 0024  ld   $24
              7b61 0021  ld   $21         ;19f6 LDW
              7b62 004e  ld   $4e         ;19f6 'tmp'
              7b63 002b  ld   $2b         ;19f8 STW
              7b64 0026  ld   $26
              7b65 0063  ld   $63         ;19fa POP
              7b66 0011  ld   $11         ;19fb LDWI
              7b67 00a0  ld   $a0
              7b68 001a  ld   $1a
              7b69 00cf  ld   $cf         ;19fe CALL
              7b6a 0018  ld   $18         ;19fe vAC
              7b6b 001a  ld   $1a         ;| RAM segment address (high byte first)
              7b6c 00a0  ld   $a0         ;|
              7b6d 0060  ld   $60         ;| Length (1..256)
              7b6e 0021  ld   $21         ;1aa0 LDW
              7b6f 003c  ld   $3c         ;1aa0 'Value'
              7b70 0035  ld   $35         ;1aa2 BCC
              7b71 0053  ld   $53         ;1aa3 GE
              7b72 00a8  ld   $a8
              7b73 0011  ld   $11         ;1aa5 LDWI
              7b74 0000  ld   $00
              7b75 0078  ld   $78
              7b76 0090  ld   $90         ;1aa8 BRA
              7b77 00ab  ld   $ab
              7b78 0011  ld   $11         ;1aaa LDWI
              7b79 0000  ld   $00
              7b7a 0088  ld   $88
              7b7b 002b  ld   $2b         ;1aad STW
              7b7c 0028  ld   $28
              7b7d 0021  ld   $21         ;1aaf LDW
              7b7e 0040  ld   $40         ;1aaf 'i'
              7b7f 002b  ld   $2b         ;1ab1 STW
              7b80 004e  ld   $4e         ;1ab1 'tmp'
              7b81 002b  ld   $2b         ;1ab3 STW
              7b82 0044  ld   $44         ;1ab3 'k'
              7b83 001a  ld   $1a         ;1ab5 LD
              7b84 002b  ld   $2b
              7b85 00f0  ld   $f0         ;1ab7 POKE
              7b86 0030  ld   $30         ;1ab7 'Pos'
              7b87 0021  ld   $21         ;1ab9 LDW
              7b88 004e  ld   $4e         ;1ab9 'tmp'
              7b89 00e6  ld   $e6         ;1abb SUBI
              7b8a 0001  ld   $01
              7b8b 002b  ld   $2b         ;1abd STW
              7b8c 004e  ld   $4e         ;1abd 'tmp'
              7b8d 0035  ld   $35         ;1abf BCC
              7b8e 0050  ld   $50         ;1ac0 LT
              7b8f 00fc  ld   $fc
              7b90 0021  ld   $21         ;1ac2 LDW
              7b91 0044  ld   $44         ;1ac2 'k'
              7b92 00b8  ld   $b8         ;1ac4 SUBW
              7b93 006a  ld   $6a         ;1ac4 'j'
              7b94 00b8  ld   $b8         ;1ac6 SUBW
              7b95 006a  ld   $6a         ;1ac6 'j'
              7b96 002b  ld   $2b         ;1ac8 STW
              7b97 0044  ld   $44         ;1ac8 'k'
              7b98 0035  ld   $35         ;1aca BCC
              7b99 0053  ld   $53         ;1acb GE
              7b9a 00d7  ld   $d7
              7b9b 0099  ld   $99         ;1acd ADDW
              7b9c 0040  ld   $40         ;1acd 'i'
              7b9d 0099  ld   $99         ;1acf ADDW
              7b9e 0040  ld   $40         ;1acf 'i'
              7b9f 002b  ld   $2b         ;1ad1 STW
              7ba0 0044  ld   $44         ;1ad1 'k'
              7ba1 0021  ld   $21         ;1ad3 LDW
              7ba2 0026  ld   $26
              7ba3 0099  ld   $99         ;1ad5 ADDW
              7ba4 0030  ld   $30         ;1ad5 'Pos'
              7ba5 002b  ld   $2b         ;1ad7 STW
              7ba6 0030  ld   $30         ;1ad7 'Pos'
              7ba7 0021  ld   $21         ;1ad9 LDW
              7ba8 0024  ld   $24
              7ba9 0099  ld   $99         ;1adb ADDW
              7baa 0030  ld   $30         ;1adb 'Pos'
              7bab 002b  ld   $2b         ;1add STW
              7bac 0030  ld   $30         ;1add 'Pos'
              7bad 001a  ld   $1a         ;1adf LD
              7bae 0030  ld   $30         ;1adf 'Pos'
              7baf 00e6  ld   $e6         ;1ae1 SUBI
              7bb0 00a0  ld   $a0
              7bb1 0035  ld   $35         ;1ae3 BCC
              7bb2 0050  ld   $50         ;1ae4 LT
              7bb3 00ed  ld   $ed
              7bb4 0035  ld   $35         ;1ae6 BCC
              7bb5 0056  ld   $56         ;1ae7 LE
              7bb6 00eb  ld   $eb
              7bb7 0093  ld   $93         ;1ae9 INC
              7bb8 0031  ld   $31         ;1ae9 'Pos'+1
              7bb9 00e3  ld   $e3         ;1aeb ADDI
              7bba 0040  ld   $40
              7bbb 005e  ld   $5e         ;1aed ST
              7bbc 0030  ld   $30         ;1aed 'Pos'
              7bbd 001a  ld   $1a         ;1aef LD
              7bbe 0031  ld   $31         ;1aef 'Pos'+1
              7bbf 0082  ld   $82         ;1af1 ANDI
              7bc0 0078  ld   $78
              7bc1 0035  ld   $35         ;1af3 BCC
              7bc2 0072  ld   $72         ;1af4 NE
              7bc3 00fa  ld   $fa
              7bc4 0021  ld   $21         ;1af6 LDW
              7bc5 0028  ld   $28
              7bc6 0099  ld   $99         ;1af8 ADDW
              7bc7 0030  ld   $30         ;1af8 'Pos'
              7bc8 002b  ld   $2b         ;1afa STW
              7bc9 0030  ld   $30         ;1afa 'Pos'
              7bca 0090  ld   $90         ;1afc BRA
              7bcb 00b3  ld   $b3
              7bcc 00cf  ld   $cf         ;1afe CALL
              7bcd 0062  ld   $62         ;1afe 'EndOfLine'
              7bce 001b  ld   $1b         ;| RAM segment address (high byte first)
              7bcf 00a0  ld   $a0         ;|
              7bd0 0006  ld   $06         ;| Length (1..256)
              7bd1 00a0  ld   $a0         ;1ba0 _Buffer
              7bd2 001b  ld   $1b
              7bd3 004e  ld   $4e         ;1ba2 'N'
              7bd4 0045  ld   $45         ;1ba3 'E'
              7bd5 0057  ld   $57         ;1ba4 'W'
              7bd6 0000  ld   $00         ;1ba5 0
              7bd7 0000  ld   $00         ;End of Apps/TinyBASIC/TinyBASIC_v4.gcl, size 3194
                                          ;+-----------------------------------+
                                          ;| Apps/TicTac/LoadTicTac_v1.gcl     |
                                          ;+-----------------------------------+
              7bd8 dc54  st   $54,[y,x++] ;'T'
              7bd9 dc69  st   $69,[y,x++] ;'i'
              7bda dc6e  st   $6e,[y,x++] ;'n'
              7bdb dc79  st   $79,[y,x++] ;'y'
              7bdc dc42  st   $42,[y,x++] ;'B'
              7bdd dc41  st   $41,[y,x++] ;'A'
              7bde dc53  st   $53,[y,x++] ;'S'
              7bdf dc49  st   $49,[y,x++] ;'I'
              7be0 005e  ld   $5e
              7be1 c218  st   [$18]
              7be2 006f  ld   $6f
              7be3 14df  ld   $df,y
              7be4 e0ac  jmp  y,$ac
              7be5 c219  st   [$19]
TicTac:       7be6 0002  ld   $02         ;| RAM segment address (high byte first)
              7be7 0000  ld   $00         ;|
              7be8 0010  ld   $10         ;| Length (1..256)
              7be9 0059  ld   $59         ;0200 LDI
              7bea 00ad  ld   $ad
              7beb 002b  ld   $2b         ;0202 STW
              7bec 0022  ld   $22         ;0202 '_sysFn'
              7bed 0011  ld   $11         ;0204 LDWI
              7bee 00a0  ld   $a0
              7bef 00ff  ld   $ff
              7bf0 002b  ld   $2b         ;0207 STW
              7bf1 001a  ld   $1a         ;0207 '_vLR'
              7bf2 0011  ld   $11         ;0209 LDWI
              7bf3 005e  ld   $5e
              7bf4 006f  ld   $6f
              7bf5 002b  ld   $2b         ;020c STW
              7bf6 0024  ld   $24         ;020c '_sysArgs0'
              7bf7 00b4  ld   $b4         ;020e SYS
              7bf8 00e3  ld   $e3
              7bf9 00ff  ld   $ff         ;| RAM segment address (high byte first)
              7bfa 00a0  ld   $a0         ;|
              7bfb fe00  bra  ac          ;+-----------------------------------+
              7bfc fcfd  bra  $7bfd       ;|                                   |
              7bfd 1418  ld   $18,y       ;| Trampoline for page $7b00 lookups |
              7bfe e006  jmp  y,$06       ;|                                   |
              7bff c218  st   [$18]       ;+-----------------------------------+
              7c00 000c  ld   $0c         ;| Length (1..256)
              7c01 0011  ld   $11         ;ffa0 LDWI
              7c02 0000  ld   $00
              7c03 0002  ld   $02
              7c04 002b  ld   $2b         ;ffa3 STW
              7c05 001a  ld   $1a         ;ffa3 '_vLR'
              7c06 0011  ld   $11         ;ffa5 LDWI
              7c07 000e  ld   $0e
              7c08 007c  ld   $7c
              7c09 002b  ld   $2b         ;ffa8 STW
              7c0a 0024  ld   $24         ;ffa8 '_sysArgs0'
              7c0b 00b4  ld   $b4         ;ffaa SYS
              7c0c 00e3  ld   $e3
              7c0d 0000  ld   $00         ;End of Apps/TicTac/LoadTicTac_v1.gcl, size 40
                                          ;+-----------------------------------+
                                          ;| Apps/TicTac/TicTac_v2.gtb         |
                                          ;+-----------------------------------+
TicTacGtb:    7c0e 001b  ld   $1b
              7c0f 00c0  ld   $c0
              7c10 0019  ld   $19
              7c11 0064  ld   $64
              7c12 0000  ld   $00
              7c13 0027  ld   $27         ;"'"
              7c14 0054  ld   $54         ;'T'
              7c15 0049  ld   $49         ;'I'
              7c16 0043  ld   $43         ;'C'
              7c17 002d  ld   $2d         ;'-'
              7c18 0054  ld   $54         ;'T'
              7c19 0041  ld   $41         ;'A'
              7c1a 0043  ld   $43         ;'C'
              7c1b 002d  ld   $2d         ;'-'
              7c1c 0054  ld   $54         ;'T'
              7c1d 004f  ld   $4f         ;'O'
              7c1e 0045  ld   $45         ;'E'
              7c1f 002e  ld   $2e         ;'.'
              7c20 0020  ld   $20         ;' '
              7c21 0059  ld   $59         ;'Y'
              7c22 004f  ld   $4f         ;'O'
              7c23 0055  ld   $55         ;'U'
              7c24 0020  ld   $20         ;' '
              7c25 0028  ld   $28         ;'('
              7c26 0058  ld   $58         ;'X'
              7c27 0029  ld   $29         ;')'
              7c28 0020  ld   $20         ;' '
              7c29 0000  ld   $00         ;'\x00'
              7c2a 001b  ld   $1b
              7c2b 00e0  ld   $e0
              7c2c 0015  ld   $15
              7c2d 00d2  ld   $d2
              7c2e 0000  ld   $00
              7c2f 003f  ld   $3f         ;'?'
              7c30 0022  ld   $22         ;'"'
              7c31 0054  ld   $54         ;'T'
              7c32 004f  ld   $4f         ;'O'
              7c33 004d  ld   $4d         ;'M'
              7c34 0020  ld   $20         ;' '
              7c35 0050  ld   $50         ;'P'
              7c36 0049  ld   $49         ;'I'
              7c37 0054  ld   $54         ;'T'
              7c38 0054  ld   $54         ;'T'
              7c39 004d  ld   $4d         ;'M'
              7c3a 0041  ld   $41         ;'A'
              7c3b 004e  ld   $4e         ;'N'
              7c3c 0027  ld   $27         ;"'"
              7c3d 0053  ld   $53         ;'S'
              7c3e 0020  ld   $20         ;' '
              7c3f 0022  ld   $22         ;'"'
              7c40 003b  ld   $3b         ;';'
              7c41 0000  ld   $00         ;'\x00'
              7c42 001c  ld   $1c
              7c43 00a0  ld   $a0
              7c44 0012  ld   $12
              7c45 00d3  ld   $d3
              7c46 0000  ld   $00
              7c47 003f  ld   $3f         ;'?'
              7c48 0022  ld   $22         ;'"'
              7c49 0054  ld   $54         ;'T'
              7c4a 0049  ld   $49         ;'I'
              7c4b 0043  ld   $43         ;'C'
              7c4c 002d  ld   $2d         ;'-'
              7c4d 0054  ld   $54         ;'T'
              7c4e 0041  ld   $41         ;'A'
              7c4f 0043  ld   $43         ;'C'
              7c50 002d  ld   $2d         ;'-'
              7c51 0054  ld   $54         ;'T'
              7c52 004f  ld   $4f         ;'O'
              7c53 0045  ld   $45         ;'E'
              7c54 002e  ld   $2e         ;'.'
              7c55 0022  ld   $22         ;'"'
              7c56 0000  ld   $00         ;'\x00'
              7c57 001c  ld   $1c
              7c58 00c0  ld   $c0
              7c59 0012  ld   $12
              7c5a 00d4  ld   $d4
              7c5b 0000  ld   $00
              7c5c 003f  ld   $3f         ;'?'
              7c5d 0022  ld   $22         ;'"'
              7c5e 0059  ld   $59         ;'Y'
              7c5f 004f  ld   $4f         ;'O'
              7c60 0055  ld   $55         ;'U'
              7c61 0020  ld   $20         ;' '
              7c62 0041  ld   $41         ;'A'
              7c63 0047  ld   $47         ;'G'
              7c64 0041  ld   $41         ;'A'
              7c65 0049  ld   $49         ;'I'
              7c66 004e  ld   $4e         ;'N'
              7c67 0053  ld   $53         ;'S'
              7c68 0054  ld   $54         ;'T'
              7c69 0022  ld   $22         ;'"'
              7c6a 003b  ld   $3b         ;';'
              7c6b 0000  ld   $00         ;'\x00'
              7c6c 001c  ld   $1c
              7c6d 00e0  ld   $e0
              7c6e 0011  ld   $11
              7c6f 00d5  ld   $d5
              7c70 0000  ld   $00
              7c71 003f  ld   $3f         ;'?'
              7c72 0022  ld   $22         ;'"'
              7c73 0020  ld   $20         ;' '
              7c74 0054  ld   $54         ;'T'
              7c75 0049  ld   $49         ;'I'
              7c76 004e  ld   $4e         ;'N'
              7c77 0059  ld   $59         ;'Y'
              7c78 0020  ld   $20         ;' '
              7c79 0042  ld   $42         ;'B'
              7c7a 0041  ld   $41         ;'A'
              7c7b 0053  ld   $53         ;'S'
              7c7c 0049  ld   $49         ;'I'
              7c7d 0043  ld   $43         ;'C'
              7c7e 0022  ld   $22         ;'"'
              7c7f 0000  ld   $00         ;'\x00'
              7c80 001d  ld   $1d
              7c81 00a0  ld   $a0
              7c82 0016  ld   $16
              7c83 00dd  ld   $dd
              7c84 0000  ld   $00
              7c85 003f  ld   $3f         ;'?'
              7c86 0022  ld   $22         ;'"'
              7c87 0059  ld   $59         ;'Y'
              7c88 004f  ld   $4f         ;'O'
              7c89 0055  ld   $55         ;'U'
              7c8a 0020  ld   $20         ;' '
              7c8b 0041  ld   $41         ;'A'
              7c8c 0052  ld   $52         ;'R'
              7c8d 0045  ld   $45         ;'E'
              7c8e 0020  ld   $20         ;' '
              7c8f 0058  ld   $58         ;'X'
              7c90 002e  ld   $2e         ;'.'
              7c91 0020  ld   $20         ;' '
              7c92 0049  ld   $49         ;'I'
              7c93 0020  ld   $20         ;' '
              7c94 0041  ld   $41         ;'A'
              7c95 004d  ld   $4d         ;'M'
              7c96 0022  ld   $22         ;'"'
              7c97 003b  ld   $3b         ;';'
              7c98 0000  ld   $00         ;'\x00'
              7c99 001d  ld   $1d
              7c9a 00c0  ld   $c0
              7c9b 000d  ld   $0d
              7c9c 00de  ld   $de
              7c9d 0000  ld   $00
              7c9e 003f  ld   $3f         ;'?'
              7c9f 0022  ld   $22         ;'"'
              7ca0 0020  ld   $20         ;' '
              7ca1 004f  ld   $4f         ;'O'
              7ca2 002e  ld   $2e         ;'.'
              7ca3 0020  ld   $20         ;' '
              7ca4 0059  ld   $59         ;'Y'
              7ca5 004f  ld   $4f         ;'O'
              7ca6 0055  ld   $55         ;'U'
              7ca7 0022  ld   $22         ;'"'
              7ca8 0000  ld   $00         ;'\x00'
              7ca9 001d  ld   $1d
              7caa 00e0  ld   $e0
              7cab 0010  ld   $10
              7cac 00e7  ld   $e7
              7cad 0000  ld   $00
              7cae 003f  ld   $3f         ;'?'
              7caf 0022  ld   $22         ;'"'
              7cb0 0050  ld   $50         ;'P'
              7cb1 004c  ld   $4c         ;'L'
              7cb2 0041  ld   $41         ;'A'
              7cb3 0059  ld   $59         ;'Y'
              7cb4 0020  ld   $20         ;' '
              7cb5 0059  ld   $59         ;'Y'
              7cb6 004f  ld   $4f         ;'O'
              7cb7 0055  ld   $55         ;'U'
              7cb8 0052  ld   $52         ;'R'
              7cb9 0022  ld   $22         ;'"'
              7cba 003b  ld   $3b         ;';'
              7cbb 0000  ld   $00         ;'\x00'
              7cbc 001e  ld   $1e
              7cbd 00a0  ld   $a0
              7cbe 0015  ld   $15
              7cbf 00e8  ld   $e8
              7cc0 0000  ld   $00
              7cc1 003f  ld   $3f         ;'?'
              7cc2 0022  ld   $22         ;'"'
              7cc3 0020  ld   $20         ;' '
              7cc4 0054  ld   $54         ;'T'
              7cc5 0055  ld   $55         ;'U'
              7cc6 0052  ld   $52         ;'R'
              7cc7 004e  ld   $4e         ;'N'
              7cc8 0020  ld   $20         ;' '
              7cc9 0042  ld   $42         ;'B'
              7cca 0059  ld   $59         ;'Y'
              7ccb 0020  ld   $20         ;' '
              7ccc 0054  ld   $54         ;'T'
              7ccd 0059  ld   $59         ;'Y'
              7cce 0050  ld   $50         ;'P'
              7ccf 0049  ld   $49         ;'I'
              7cd0 004e  ld   $4e         ;'N'
              7cd1 0047  ld   $47         ;'G'
              7cd2 0022  ld   $22         ;'"'
              7cd3 0000  ld   $00         ;'\x00'
              7cd4 001e  ld   $1e
              7cd5 00c0  ld   $c0
              7cd6 0016  ld   $16
              7cd7 00e9  ld   $e9
              7cd8 0000  ld   $00
              7cd9 003f  ld   $3f         ;'?'
              7cda 0022  ld   $22         ;'"'
              7cdb 0054  ld   $54         ;'T'
              7cdc 0048  ld   $48         ;'H'
              7cdd 0045  ld   $45         ;'E'
              7cde 0020  ld   $20         ;' '
              7cdf 004e  ld   $4e         ;'N'
              7ce0 0055  ld   $55         ;'U'
              7ce1 004d  ld   $4d         ;'M'
              7ce2 0042  ld   $42         ;'B'
              7ce3 0045  ld   $45         ;'E'
              7ce4 0052  ld   $52         ;'R'
              7ce5 0020  ld   $20         ;' '
              7ce6 004f  ld   $4f         ;'O'
              7ce7 0046  ld   $46         ;'F'
              7ce8 0020  ld   $20         ;' '
              7ce9 0041  ld   $41         ;'A'
              7cea 0022  ld   $22         ;'"'
              7ceb 003b  ld   $3b         ;';'
              7cec 0000  ld   $00         ;'\x00'
              7ced 001e  ld   $1e
              7cee 00e0  ld   $e0
              7cef 000e  ld   $0e
              7cf0 00ea  ld   $ea
              7cf1 0000  ld   $00
              7cf2 003f  ld   $3f         ;'?'
              7cf3 0022  ld   $22         ;'"'
              7cf4 0020  ld   $20         ;' '
              7cf5 0053  ld   $53         ;'S'
              7cf6 0051  ld   $51         ;'Q'
              7cf7 0055  ld   $55         ;'U'
              7cf8 0041  ld   $41         ;'A'
              7cf9 0052  ld   $52         ;'R'
              7cfa 0045  ld   $45         ;'E'
              7cfb fe00  bra  ac          ;+-----------------------------------+
              7cfc fcfd  bra  $7cfd       ;|                                   |
              7cfd 1418  ld   $18,y       ;| Trampoline for page $7c00 lookups |
              7cfe e006  jmp  y,$06       ;|                                   |
              7cff c218  st   [$18]       ;+-----------------------------------+
              7d00 002e  ld   $2e         ;'.'
              7d01 0022  ld   $22         ;'"'
              7d02 0000  ld   $00         ;'\x00'
              7d03 001f  ld   $1f
              7d04 00a0  ld   $a0
              7d05 0006  ld   $06
              7d06 00f0  ld   $f0
              7d07 0000  ld   $00
              7d08 0041  ld   $41         ;'A'
              7d09 003d  ld   $3d         ;'='
              7d0a 0030  ld   $30         ;'0'
              7d0b 0000  ld   $00         ;'\x00'
              7d0c 001f  ld   $1f
              7d0d 00c0  ld   $c0
              7d0e 0006  ld   $06
              7d0f 00fa  ld   $fa
              7d10 0000  ld   $00
              7d11 0042  ld   $42         ;'B'
              7d12 003d  ld   $3d         ;'='
              7d13 0030  ld   $30         ;'0'
              7d14 0000  ld   $00         ;'\x00'
              7d15 001f  ld   $1f
              7d16 00e0  ld   $e0
              7d17 0006  ld   $06
              7d18 0004  ld   $04
              7d19 0001  ld   $01
              7d1a 0043  ld   $43         ;'C'
              7d1b 003d  ld   $3d         ;'='
              7d1c 0030  ld   $30         ;'0'
              7d1d 0000  ld   $00         ;'\x00'
              7d1e 0020  ld   $20
              7d1f 00a0  ld   $a0
              7d20 0006  ld   $06
              7d21 000e  ld   $0e
              7d22 0001  ld   $01
              7d23 0044  ld   $44         ;'D'
              7d24 003d  ld   $3d         ;'='
              7d25 0030  ld   $30         ;'0'
              7d26 0000  ld   $00         ;'\x00'
              7d27 0020  ld   $20
              7d28 00c0  ld   $c0
              7d29 0006  ld   $06
              7d2a 0018  ld   $18
              7d2b 0001  ld   $01
              7d2c 0045  ld   $45         ;'E'
              7d2d 003d  ld   $3d         ;'='
              7d2e 0030  ld   $30         ;'0'
              7d2f 0000  ld   $00         ;'\x00'
              7d30 0020  ld   $20
              7d31 00e0  ld   $e0
              7d32 0006  ld   $06
              7d33 0022  ld   $22
              7d34 0001  ld   $01
              7d35 0046  ld   $46         ;'F'
              7d36 003d  ld   $3d         ;'='
              7d37 0030  ld   $30         ;'0'
              7d38 0000  ld   $00         ;'\x00'
              7d39 0021  ld   $21
              7d3a 00a0  ld   $a0
              7d3b 0006  ld   $06
              7d3c 00e8  ld   $e8
              7d3d 0003  ld   $03
              7d3e 0046  ld   $46         ;'F'
              7d3f 003d  ld   $3d         ;'='
              7d40 0031  ld   $31         ;'1'
              7d41 0000  ld   $00         ;'\x00'
              7d42 0021  ld   $21
              7d43 00c0  ld   $c0
              7d44 0004  ld   $04
              7d45 00f2  ld   $f2
              7d46 0003  ld   $03
              7d47 003f  ld   $3f         ;'?'
              7d48 0000  ld   $00         ;'\x00'
              7d49 0021  ld   $21
              7d4a 00e0  ld   $e0
              7d4b 000f  ld   $0f
              7d4c 00fc  ld   $fc
              7d4d 0003  ld   $03
              7d4e 003f  ld   $3f         ;'?'
              7d4f 0022  ld   $22         ;'"'
              7d50 004e  ld   $4e         ;'N'
              7d51 0045  ld   $45         ;'E'
              7d52 0057  ld   $57         ;'W'
              7d53 0020  ld   $20         ;' '
              7d54 0047  ld   $47         ;'G'
              7d55 0041  ld   $41         ;'A'
              7d56 004d  ld   $4d         ;'M'
              7d57 0045  ld   $45         ;'E'
              7d58 002e  ld   $2e         ;'.'
              7d59 0022  ld   $22         ;'"'
              7d5a 0000  ld   $00         ;'\x00'
              7d5b 0022  ld   $22
              7d5c 00a0  ld   $a0
              7d5d 0006  ld   $06
              7d5e 004c  ld   $4c
              7d5f 0004  ld   $04
              7d60 0049  ld   $49         ;'I'
              7d61 003d  ld   $3d         ;'='
              7d62 0037  ld   $37         ;'7'
              7d63 0000  ld   $00         ;'\x00'
              7d64 0022  ld   $22
              7d65 00c0  ld   $c0
              7d66 000f  ld   $0f
              7d67 0056  ld   $56
              7d68 0004  ld   $04
              7d69 0041  ld   $41         ;'A'
              7d6a 0028  ld   $28         ;'('
              7d6b 0049  ld   $49         ;'I'
              7d6c 0029  ld   $29         ;')'
              7d6d 003d  ld   $3d         ;'='
              7d6e 0030  ld   $30         ;'0'
              7d6f 003a  ld   $3a         ;':'
              7d70 0049  ld   $49         ;'I'
              7d71 003d  ld   $3d         ;'='
              7d72 0049  ld   $49         ;'I'
              7d73 002b  ld   $2b         ;'+'
              7d74 0031  ld   $31         ;'1'
              7d75 0000  ld   $00         ;'\x00'
              7d76 0022  ld   $22
              7d77 00e0  ld   $e0
              7d78 0011  ld   $11
              7d79 0060  ld   $60
              7d7a 0004  ld   $04
              7d7b 0049  ld   $49         ;'I'
              7d7c 0046  ld   $46         ;'F'
              7d7d 0049  ld   $49         ;'I'
              7d7e 003c  ld   $3c         ;'<'
              7d7f 0031  ld   $31         ;'1'
              7d80 0036  ld   $36         ;'6'
              7d81 0047  ld   $47         ;'G'
              7d82 004f  ld   $4f         ;'O'
              7d83 0054  ld   $54         ;'T'
              7d84 004f  ld   $4f         ;'O'
              7d85 0031  ld   $31         ;'1'
              7d86 0031  ld   $31         ;'1'
              7d87 0031  ld   $31         ;'1'
              7d88 0030  ld   $30         ;'0'
              7d89 0000  ld   $00         ;'\x00'
              7d8a 0023  ld   $23
              7d8b 00a0  ld   $a0
              7d8c 0006  ld   $06
              7d8d 006a  ld   $6a
              7d8e 0004  ld   $04
              7d8f 0055  ld   $55         ;'U'
              7d90 003d  ld   $3d         ;'='
              7d91 0039  ld   $39         ;'9'
              7d92 0000  ld   $00         ;'\x00'
              7d93 0023  ld   $23
              7d94 00c0  ld   $c0
              7d95 0006  ld   $06
              7d96 0074  ld   $74
              7d97 0004  ld   $04
              7d98 005a  ld   $5a         ;'Z'
              7d99 003d  ld   $3d         ;'='
              7d9a 0030  ld   $30         ;'0'
              7d9b 0000  ld   $00         ;'\x00'
              7d9c 0023  ld   $23
              7d9d 00e0  ld   $e0
              7d9e 0010  ld   $10
              7d9f 007f  ld   $7f
              7da0 0004  ld   $04
              7da1 0049  ld   $49         ;'I'
              7da2 0046  ld   $46         ;'F'
              7da3 0046  ld   $46         ;'F'
              7da4 003d  ld   $3d         ;'='
              7da5 0030  ld   $30         ;'0'
              7da6 0047  ld   $47         ;'G'
              7da7 004f  ld   $4f         ;'O'
              7da8 0054  ld   $54         ;'T'
              7da9 004f  ld   $4f         ;'O'
              7daa 0034  ld   $34         ;'4'
              7dab 0030  ld   $30         ;'0'
              7dac 0031  ld   $31         ;'1'
              7dad 0030  ld   $30         ;'0'
              7dae 0000  ld   $00         ;'\x00'
              7daf 0024  ld   $24
              7db0 00a0  ld   $a0
              7db1 000b  ld   $0b
              7db2 0089  ld   $89
              7db3 0004  ld   $04
              7db4 0047  ld   $47         ;'G'
              7db5 004f  ld   $4f         ;'O'
              7db6 0054  ld   $54         ;'T'
              7db7 004f  ld   $4f         ;'O'
              7db8 0032  ld   $32         ;'2'
              7db9 0030  ld   $30         ;'0'
              7dba 0031  ld   $31         ;'1'
              7dbb 0030  ld   $30         ;'0'
              7dbc 0000  ld   $00         ;'\x00'
              7dbd 0024  ld   $24
              7dbe 00c0  ld   $c0
              7dbf 0006  ld   $06
              7dc0 00e6  ld   $e6
              7dc1 0005  ld   $05
              7dc2 005a  ld   $5a         ;'Z'
              7dc3 003d  ld   $3d         ;'='
              7dc4 0031  ld   $31         ;'1'
              7dc5 0000  ld   $00         ;'\x00'
              7dc6 0024  ld   $24
              7dc7 00e0  ld   $e0
              7dc8 0006  ld   $06
              7dc9 00f0  ld   $f0
              7dca 0005  ld   $05
              7dcb 0046  ld   $46         ;'F'
              7dcc 003d  ld   $3d         ;'='
              7dcd 0030  ld   $30         ;'0'
              7dce 0000  ld   $00         ;'\x00'
              7dcf 0025  ld   $25
              7dd0 00a0  ld   $a0
              7dd1 0006  ld   $06
              7dd2 00da  ld   $da
              7dd3 0007  ld   $07
              7dd4 0049  ld   $49         ;'I'
              7dd5 003d  ld   $3d         ;'='
              7dd6 0036  ld   $36         ;'6'
              7dd7 0000  ld   $00         ;'\x00'
              7dd8 0025  ld   $25
              7dd9 00c0  ld   $c0
              7dda 0008  ld   $08
              7ddb 003e  ld   $3e
              7ddc 0008  ld   $08
              7ddd 0049  ld   $49         ;'I'
              7dde 003d  ld   $3d         ;'='
              7ddf 0049  ld   $49         ;'I'
              7de0 002b  ld   $2b         ;'+'
              7de1 0031  ld   $31         ;'1'
              7de2 0000  ld   $00         ;'\x00'
              7de3 0025  ld   $25
              7de4 00e0  ld   $e0
              7de5 0008  ld   $08
              7de6 0048  ld   $48
              7de7 0008  ld   $08
              7de8 003f  ld   $3f         ;'?'
              7de9 0022  ld   $22         ;'"'
              7dea 0020  ld   $20         ;' '
              7deb 0022  ld   $22         ;'"'
              7dec 003b  ld   $3b         ;';'
              7ded 0000  ld   $00         ;'\x00'
              7dee 0026  ld   $26
              7def 00a0  ld   $a0
              7df0 0013  ld   $13
              7df1 0053  ld   $53
              7df2 0008  ld   $08
              7df3 0047  ld   $47         ;'G'
              7df4 004f  ld   $4f         ;'O'
              7df5 0054  ld   $54         ;'T'
              7df6 004f  ld   $4f         ;'O'
              7df7 0041  ld   $41         ;'A'
              7df8 0028  ld   $28         ;'('
              7df9 0049  ld   $49         ;'I'
              7dfa 0029  ld   $29         ;')'
              7dfb fe00  bra  ac          ;+-----------------------------------+
              7dfc fcfd  bra  $7dfd       ;|                                   |
              7dfd 1418  ld   $18,y       ;| Trampoline for page $7d00 lookups |
              7dfe e006  jmp  y,$06       ;|                                   |
              7dff c218  st   [$18]       ;+-----------------------------------+
              7e00 002a  ld   $2a         ;'*'
              7e01 0032  ld   $32         ;'2'
              7e02 0030  ld   $30         ;'0'
              7e03 002b  ld   $2b         ;'+'
              7e04 0032  ld   $32         ;'2'
              7e05 0032  ld   $32         ;'2'
              7e06 0030  ld   $30         ;'0'
              7e07 0030  ld   $30         ;'0'
              7e08 0000  ld   $00         ;'\x00'
              7e09 0026  ld   $26
              7e0a 00c0  ld   $c0
              7e0b 0008  ld   $08
              7e0c 0098  ld   $98
              7e0d 0008  ld   $08
              7e0e 003f  ld   $3f         ;'?'
              7e0f 0049  ld   $49         ;'I'
              7e10 002d  ld   $2d         ;'-'
              7e11 0036  ld   $36         ;'6'
              7e12 003b  ld   $3b         ;';'
              7e13 0000  ld   $00         ;'\x00'
              7e14 0026  ld   $26
              7e15 00e0  ld   $e0
              7e16 000b  ld   $0b
              7e17 00a2  ld   $a2
              7e18 0008  ld   $08
              7e19 0047  ld   $47         ;'G'
              7e1a 004f  ld   $4f         ;'O'
              7e1b 0054  ld   $54         ;'T'
              7e1c 004f  ld   $4f         ;'O'
              7e1d 0032  ld   $32         ;'2'
              7e1e 0033  ld   $33         ;'3'
              7e1f 0030  ld   $30         ;'0'
              7e20 0030  ld   $30         ;'0'
              7e21 0000  ld   $00         ;'\x00'
              7e22 0027  ld   $27
              7e23 00a0  ld   $a0
              7e24 0008  ld   $08
              7e25 00ac  ld   $ac
              7e26 0008  ld   $08
              7e27 003f  ld   $3f         ;'?'
              7e28 0022  ld   $22         ;'"'
              7e29 0058  ld   $58         ;'X'
              7e2a 0022  ld   $22         ;'"'
              7e2b 003b  ld   $3b         ;';'
              7e2c 0000  ld   $00         ;'\x00'
              7e2d 0027  ld   $27
              7e2e 00c0  ld   $c0
              7e2f 000b  ld   $0b
              7e30 00b6  ld   $b6
              7e31 0008  ld   $08
              7e32 0047  ld   $47         ;'G'
              7e33 004f  ld   $4f         ;'O'
              7e34 0054  ld   $54         ;'T'
              7e35 004f  ld   $4f         ;'O'
              7e36 0032  ld   $32         ;'2'
              7e37 0033  ld   $33         ;'3'
              7e38 0030  ld   $30         ;'0'
              7e39 0030  ld   $30         ;'0'
              7e3a 0000  ld   $00         ;'\x00'
              7e3b 0027  ld   $27
              7e3c 00e0  ld   $e0
              7e3d 0008  ld   $08
              7e3e 00d4  ld   $d4
              7e3f 0008  ld   $08
              7e40 003f  ld   $3f         ;'?'
              7e41 0022  ld   $22         ;'"'
              7e42 004f  ld   $4f         ;'O'
              7e43 0022  ld   $22         ;'"'
              7e44 003b  ld   $3b         ;';'
              7e45 0000  ld   $00         ;'\x00'
              7e46 0028  ld   $28
              7e47 00a0  ld   $a0
              7e48 0014  ld   $14
              7e49 00fc  ld   $fc
              7e4a 0008  ld   $08
              7e4b 0049  ld   $49         ;'I'
              7e4c 0046  ld   $46         ;'F'
              7e4d 0049  ld   $49         ;'I'
              7e4e 002f  ld   $2f         ;'/'
              7e4f 0033  ld   $33         ;'3'
              7e50 002a  ld   $2a         ;'*'
              7e51 0033  ld   $33         ;'3'
              7e52 003d  ld   $3d         ;'='
              7e53 0049  ld   $49         ;'I'
              7e54 0047  ld   $47         ;'G'
              7e55 004f  ld   $4f         ;'O'
              7e56 0054  ld   $54         ;'T'
              7e57 004f  ld   $4f         ;'O'
              7e58 0032  ld   $32         ;'2'
              7e59 0034  ld   $34         ;'4'
              7e5a 0030  ld   $30         ;'0'
              7e5b 0030  ld   $30         ;'0'
              7e5c 0000  ld   $00         ;'\x00'
              7e5d 0028  ld   $28
              7e5e 00c0  ld   $c0
              7e5f 0009  ld   $09
              7e60 0006  ld   $06
              7e61 0009  ld   $09
              7e62 003f  ld   $3f         ;'?'
              7e63 0022  ld   $22         ;'"'
              7e64 0020  ld   $20         ;' '
              7e65 007c  ld   $7c         ;'|'
              7e66 0022  ld   $22         ;'"'
              7e67 003b  ld   $3b         ;';'
              7e68 0000  ld   $00         ;'\x00'
              7e69 0028  ld   $28
              7e6a 00e0  ld   $e0
              7e6b 000b  ld   $0b
              7e6c 0010  ld   $10
              7e6d 0009  ld   $09
              7e6e 0047  ld   $47         ;'G'
              7e6f 004f  ld   $4f         ;'O'
              7e70 0054  ld   $54         ;'T'
              7e71 004f  ld   $4f         ;'O'
              7e72 0032  ld   $32         ;'2'
              7e73 0031  ld   $31         ;'1'
              7e74 0031  ld   $31         ;'1'
              7e75 0030  ld   $30         ;'0'
              7e76 0000  ld   $00         ;'\x00'
              7e77 0029  ld   $29
              7e78 00a0  ld   $a0
              7e79 0004  ld   $04
              7e7a 0060  ld   $60
              7e7b 0009  ld   $09
              7e7c 003f  ld   $3f         ;'?'
              7e7d 0000  ld   $00         ;'\x00'
              7e7e 0029  ld   $29
              7e7f 00c0  ld   $c0
              7e80 0011  ld   $11
              7e81 0074  ld   $74
              7e82 0009  ld   $09
              7e83 0049  ld   $49         ;'I'
              7e84 0046  ld   $46         ;'F'
              7e85 0049  ld   $49         ;'I'
              7e86 003d  ld   $3d         ;'='
              7e87 0031  ld   $31         ;'1'
              7e88 0035  ld   $35         ;'5'
              7e89 0047  ld   $47         ;'G'
              7e8a 004f  ld   $4f         ;'O'
              7e8b 0054  ld   $54         ;'T'
              7e8c 004f  ld   $4f         ;'O'
              7e8d 0033  ld   $33         ;'3'
              7e8e 0030  ld   $30         ;'0'
              7e8f 0030  ld   $30         ;'0'
              7e90 0030  ld   $30         ;'0'
              7e91 0000  ld   $00         ;'\x00'
              7e92 0029  ld   $29
              7e93 00e0  ld   $e0
              7e94 0011  ld   $11
              7e95 007e  ld   $7e
              7e96 0009  ld   $09
              7e97 003f  ld   $3f         ;'?'
              7e98 0022  ld   $22         ;'"'
              7e99 002d  ld   $2d         ;'-'
              7e9a 002d  ld   $2d         ;'-'
              7e9b 002d  ld   $2d         ;'-'
              7e9c 002b  ld   $2b         ;'+'
              7e9d 002d  ld   $2d         ;'-'
              7e9e 002d  ld   $2d         ;'-'
              7e9f 002d  ld   $2d         ;'-'
              7ea0 002b  ld   $2b         ;'+'
              7ea1 002d  ld   $2d         ;'-'
              7ea2 002d  ld   $2d         ;'-'
              7ea3 002d  ld   $2d         ;'-'
              7ea4 0022  ld   $22         ;'"'
              7ea5 0000  ld   $00         ;'\x00'
              7ea6 002a  ld   $2a
              7ea7 00a0  ld   $a0
              7ea8 000b  ld   $0b
              7ea9 0088  ld   $88
              7eaa 0009  ld   $09
              7eab 0047  ld   $47         ;'G'
              7eac 004f  ld   $4f         ;'O'
              7ead 0054  ld   $54         ;'T'
              7eae 004f  ld   $4f         ;'O'
              7eaf 0032  ld   $32         ;'2'
              7eb0 0031  ld   $31         ;'1'
              7eb1 0031  ld   $31         ;'1'
              7eb2 0030  ld   $30         ;'0'
              7eb3 0000  ld   $00         ;'\x00'
              7eb4 002a  ld   $2a
              7eb5 00c0  ld   $c0
              7eb6 0010  ld   $10
              7eb7 00b8  ld   $b8
              7eb8 000b  ld   $0b
              7eb9 0049  ld   $49         ;'I'
              7eba 0046  ld   $46         ;'F'
              7ebb 005a  ld   $5a         ;'Z'
              7ebc 003d  ld   $3d         ;'='
              7ebd 0030  ld   $30         ;'0'
              7ebe 0047  ld   $47         ;'G'
              7ebf 004f  ld   $4f         ;'O'
              7ec0 0054  ld   $54         ;'T'
              7ec1 004f  ld   $4f         ;'O'
              7ec2 0033  ld   $33         ;'3'
              7ec3 0031  ld   $31         ;'1'
              7ec4 0030  ld   $30         ;'0'
              7ec5 0030  ld   $30         ;'0'
              7ec6 0000  ld   $00         ;'\x00'
              7ec7 002a  ld   $2a
              7ec8 00e0  ld   $e0
              7ec9 0010  ld   $10
              7eca 00cc  ld   $cc
              7ecb 000b  ld   $0b
              7ecc 0049  ld   $49         ;'I'
              7ecd 0046  ld   $46         ;'F'
              7ece 0046  ld   $46         ;'F'
              7ecf 003d  ld   $3d         ;'='
              7ed0 0031  ld   $31         ;'1'
              7ed1 0047  ld   $47         ;'G'
              7ed2 004f  ld   $4f         ;'O'
              7ed3 0054  ld   $54         ;'T'
              7ed4 004f  ld   $4f         ;'O'
              7ed5 0033  ld   $33         ;'3'
              7ed6 0030  ld   $30         ;'0'
              7ed7 0035  ld   $35         ;'5'
              7ed8 0030  ld   $30         ;'0'
              7ed9 0000  ld   $00         ;'\x00'
              7eda 002b  ld   $2b
              7edb 00a0  ld   $a0
              7edc 000e  ld   $0e
              7edd 00d6  ld   $d6
              7ede 000b  ld   $0b
              7edf 003f  ld   $3f         ;'?'
              7ee0 0022  ld   $22         ;'"'
              7ee1 0059  ld   $59         ;'Y'
              7ee2 004f  ld   $4f         ;'O'
              7ee3 0055  ld   $55         ;'U'
              7ee4 0020  ld   $20         ;' '
              7ee5 0057  ld   $57         ;'W'
              7ee6 0049  ld   $49         ;'I'
              7ee7 004e  ld   $4e         ;'N'
              7ee8 002e  ld   $2e         ;'.'
              7ee9 0022  ld   $22         ;'"'
              7eea 0000  ld   $00         ;'\x00'
              7eeb 002b  ld   $2b
              7eec 00c0  ld   $c0
              7eed 000b  ld   $0b
              7eee 00e0  ld   $e0
              7eef 000b  ld   $0b
              7ef0 0047  ld   $47         ;'G'
              7ef1 004f  ld   $4f         ;'O'
              7ef2 0054  ld   $54         ;'T'
              7ef3 004f  ld   $4f         ;'O'
              7ef4 0031  ld   $31         ;'1'
              7ef5 0030  ld   $30         ;'0'
              7ef6 0031  ld   $31         ;'1'
              7ef7 0030  ld   $30         ;'0'
              7ef8 0000  ld   $00         ;'\x00'
              7ef9 002b  ld   $2b
              7efa 00e0  ld   $e0
              7efb fe00  bra  ac          ;+-----------------------------------+
              7efc fcfd  bra  $7efd       ;|                                   |
              7efd 1418  ld   $18,y       ;| Trampoline for page $7e00 lookups |
              7efe e006  jmp  y,$06       ;|                                   |
              7eff c218  st   [$18]       ;+-----------------------------------+
              7f00 000c  ld   $0c
              7f01 00ea  ld   $ea
              7f02 000b  ld   $0b
              7f03 003f  ld   $3f         ;'?'
              7f04 0022  ld   $22         ;'"'
              7f05 0049  ld   $49         ;'I'
              7f06 0020  ld   $20         ;' '
              7f07 0057  ld   $57         ;'W'
              7f08 0049  ld   $49         ;'I'
              7f09 004e  ld   $4e         ;'N'
              7f0a 002e  ld   $2e         ;'.'
              7f0b 0022  ld   $22         ;'"'
              7f0c 0000  ld   $00         ;'\x00'
              7f0d 002c  ld   $2c
              7f0e 00a0  ld   $a0
              7f0f 000b  ld   $0b
              7f10 00f4  ld   $f4
              7f11 000b  ld   $0b
              7f12 0047  ld   $47         ;'G'
              7f13 004f  ld   $4f         ;'O'
              7f14 0054  ld   $54         ;'T'
              7f15 004f  ld   $4f         ;'O'
              7f16 0031  ld   $31         ;'1'
              7f17 0030  ld   $30         ;'0'
              7f18 0031  ld   $31         ;'1'
              7f19 0030  ld   $30         ;'0'
              7f1a 0000  ld   $00         ;'\x00'
              7f1b 002c  ld   $2c
              7f1c 00c0  ld   $c0
              7f1d 0010  ld   $10
              7f1e 001c  ld   $1c
              7f1f 000c  ld   $0c
              7f20 0049  ld   $49         ;'I'
              7f21 0046  ld   $46         ;'F'
              7f22 0055  ld   $55         ;'U'
              7f23 003e  ld   $3e         ;'>'
              7f24 0030  ld   $30         ;'0'
              7f25 0047  ld   $47         ;'G'
              7f26 004f  ld   $4f         ;'O'
              7f27 0054  ld   $54         ;'T'
              7f28 004f  ld   $4f         ;'O'
              7f29 0033  ld   $33         ;'3'
              7f2a 0032  ld   $32         ;'2'
              7f2b 0031  ld   $31         ;'1'
              7f2c 0030  ld   $30         ;'0'
              7f2d 0000  ld   $00         ;'\x00'
              7f2e 002c  ld   $2c
              7f2f 00e0  ld   $e0
              7f30 0011  ld   $11
              7f31 0026  ld   $26
              7f32 000c  ld   $0c
              7f33 003f  ld   $3f         ;'?'
              7f34 0022  ld   $22         ;'"'
              7f35 0043  ld   $43         ;'C'
              7f36 0041  ld   $41         ;'A'
              7f37 0054  ld   $54         ;'T'
              7f38 0027  ld   $27         ;"'"
              7f39 0053  ld   $53         ;'S'
              7f3a 0020  ld   $20         ;' '
              7f3b 0047  ld   $47         ;'G'
              7f3c 0041  ld   $41         ;'A'
              7f3d 004d  ld   $4d         ;'M'
              7f3e 0045  ld   $45         ;'E'
              7f3f 002e  ld   $2e         ;'.'
              7f40 0022  ld   $22         ;'"'
              7f41 0000  ld   $00         ;'\x00'
              7f42 002d  ld   $2d
              7f43 00a0  ld   $a0
              7f44 0008  ld   $08
              7f45 0030  ld   $30
              7f46 000c  ld   $0c
              7f47 0046  ld   $46         ;'F'
              7f48 003d  ld   $3d         ;'='
              7f49 0031  ld   $31         ;'1'
              7f4a 002d  ld   $2d         ;'-'
              7f4b 0046  ld   $46         ;'F'
              7f4c 0000  ld   $00         ;'\x00'
              7f4d 002d  ld   $2d
              7f4e 00c0  ld   $c0
              7f4f 000b  ld   $0b
              7f50 003a  ld   $3a
              7f51 000c  ld   $0c
              7f52 0047  ld   $47         ;'G'
              7f53 004f  ld   $4f         ;'O'
              7f54 0054  ld   $54         ;'T'
              7f55 004f  ld   $4f         ;'O'
              7f56 0031  ld   $31         ;'1'
              7f57 0030  ld   $30         ;'0'
              7f58 0031  ld   $31         ;'1'
              7f59 0030  ld   $30         ;'0'
              7f5a 0000  ld   $00         ;'\x00'
              7f5b 002d  ld   $2d
              7f5c 00e0  ld   $e0
              7f5d 000f  ld   $0f
              7f5e 008a  ld   $8a
              7f5f 000c  ld   $0c
              7f60 003f  ld   $3f         ;'?'
              7f61 0022  ld   $22         ;'"'
              7f62 0059  ld   $59         ;'Y'
              7f63 004f  ld   $4f         ;'O'
              7f64 0055  ld   $55         ;'U'
              7f65 0052  ld   $52         ;'R'
              7f66 0020  ld   $20         ;' '
              7f67 0050  ld   $50         ;'P'
              7f68 004c  ld   $4c         ;'L'
              7f69 0041  ld   $41         ;'A'
              7f6a 0022  ld   $22         ;'"'
              7f6b 003b  ld   $3b         ;';'
              7f6c 0000  ld   $00         ;'\x00'
              7f6d 002e  ld   $2e
              7f6e 00a0  ld   $a0
              7f6f 000d  ld   $0d
              7f70 0097  ld   $97
              7f71 000c  ld   $0c
              7f72 0049  ld   $49         ;'I'
              7f73 004e  ld   $4e         ;'N'
              7f74 0050  ld   $50         ;'P'
              7f75 0055  ld   $55         ;'U'
              7f76 0054  ld   $54         ;'T'
              7f77 0059  ld   $59         ;'Y'
              7f78 003a  ld   $3a         ;':'
              7f79 0049  ld   $49         ;'I'
              7f7a 003d  ld   $3d         ;'='
              7f7b 0059  ld   $59         ;'Y'
              7f7c 0000  ld   $00         ;'\x00'
              7f7d 002e  ld   $2e
              7f7e 00c0  ld   $c0
              7f7f 0011  ld   $11
              7f80 009f  ld   $9f
              7f81 000c  ld   $0c
              7f82 0049  ld   $49         ;'I'
              7f83 0046  ld   $46         ;'F'
              7f84 0049  ld   $49         ;'I'
              7f85 003c  ld   $3c         ;'<'
              7f86 003d  ld   $3d         ;'='
              7f87 0030  ld   $30         ;'0'
              7f88 0047  ld   $47         ;'G'
              7f89 004f  ld   $4f         ;'O'
              7f8a 0054  ld   $54         ;'T'
              7f8b 004f  ld   $4f         ;'O'
              7f8c 0033  ld   $33         ;'3'
              7f8d 0032  ld   $32         ;'2'
              7f8e 0034  ld   $34         ;'4'
              7f8f 0030  ld   $30         ;'0'
              7f90 0000  ld   $00         ;'\x00'
              7f91 002e  ld   $2e
              7f92 00e0  ld   $e0
              7f93 0011  ld   $11
              7f94 00a0  ld   $a0
              7f95 000c  ld   $0c
              7f96 0049  ld   $49         ;'I'
              7f97 0046  ld   $46         ;'F'
              7f98 0049  ld   $49         ;'I'
              7f99 003c  ld   $3c         ;'<'
              7f9a 0031  ld   $31         ;'1'
              7f9b 0030  ld   $30         ;'0'
              7f9c 0047  ld   $47         ;'G'
              7f9d 004f  ld   $4f         ;'O'
              7f9e 0054  ld   $54         ;'T'
              7f9f 004f  ld   $4f         ;'O'
              7fa0 0033  ld   $33         ;'3'
              7fa1 0032  ld   $32         ;'2'
              7fa2 0037  ld   $37         ;'7'
              7fa3 0030  ld   $30         ;'0'
              7fa4 0000  ld   $00         ;'\x00'
              7fa5 002f  ld   $2f
              7fa6 00a0  ld   $a0
              7fa7 0014  ld   $14
              7fa8 00a8  ld   $a8
              7fa9 000c  ld   $0c
              7faa 003f  ld   $3f         ;'?'
              7fab 0022  ld   $22         ;'"'
              7fac 0050  ld   $50         ;'P'
              7fad 004c  ld   $4c         ;'L'
              7fae 0045  ld   $45         ;'E'
              7faf 0041  ld   $41         ;'A'
              7fb0 0053  ld   $53         ;'S'
              7fb1 0045  ld   $45         ;'E'
              7fb2 0020  ld   $20         ;' '
              7fb3 0054  ld   $54         ;'T'
              7fb4 0059  ld   $59         ;'Y'
              7fb5 0050  ld   $50         ;'P'
              7fb6 0045  ld   $45         ;'E'
              7fb7 0020  ld   $20         ;' '
              7fb8 0041  ld   $41         ;'A'
              7fb9 0022  ld   $22         ;'"'
              7fba 003b  ld   $3b         ;';'
              7fbb 0000  ld   $00         ;'\x00'
              7fbc 002f  ld   $2f
              7fbd 00c0  ld   $c0
              7fbe 000d  ld   $0d
              7fbf 00aa  ld   $aa
              7fc0 000c  ld   $0c
              7fc1 003f  ld   $3f         ;'?'
              7fc2 0022  ld   $22         ;'"'
              7fc3 0020  ld   $20         ;' '
              7fc4 004e  ld   $4e         ;'N'
              7fc5 0055  ld   $55         ;'U'
              7fc6 004d  ld   $4d         ;'M'
              7fc7 0042  ld   $42         ;'B'
              7fc8 0045  ld   $45         ;'E'
              7fc9 0052  ld   $52         ;'R'
              7fca 0022  ld   $22         ;'"'
              7fcb 0000  ld   $00         ;'\x00'
              7fcc 002f  ld   $2f
              7fcd 00e0  ld   $e0
              7fce 0016  ld   $16
              7fcf 00ab  ld   $ab
              7fd0 000c  ld   $0c
              7fd1 003f  ld   $3f         ;'?'
              7fd2 0022  ld   $22         ;'"'
              7fd3 0042  ld   $42         ;'B'
              7fd4 0045  ld   $45         ;'E'
              7fd5 0054  ld   $54         ;'T'
              7fd6 0057  ld   $57         ;'W'
              7fd7 0045  ld   $45         ;'E'
              7fd8 0045  ld   $45         ;'E'
              7fd9 004e  ld   $4e         ;'N'
              7fda 0020  ld   $20         ;' '
              7fdb 0031  ld   $31         ;'1'
              7fdc 0020  ld   $20         ;' '
              7fdd 0041  ld   $41         ;'A'
              7fde 004e  ld   $4e         ;'N'
              7fdf 0044  ld   $44         ;'D'
              7fe0 0020  ld   $20         ;' '
              7fe1 0039  ld   $39         ;'9'
              7fe2 0022  ld   $22         ;'"'
              7fe3 003b  ld   $3b         ;';'
              7fe4 0000  ld   $00         ;'\x00'
              7fe5 0030  ld   $30
              7fe6 00a0  ld   $a0
              7fe7 0010  ld   $10
              7fe8 00b3  ld   $b3
              7fe9 000c  ld   $0c
              7fea 003f  ld   $3f         ;'?'
              7feb 0022  ld   $22         ;'"'
              7fec 0020  ld   $20         ;' '
              7fed 0057  ld   $57         ;'W'
              7fee 0048  ld   $48         ;'H'
              7fef 0045  ld   $45         ;'E'
              7ff0 0052  ld   $52         ;'R'
              7ff1 0045  ld   $45         ;'E'
              7ff2 0020  ld   $20         ;' '
              7ff3 0059  ld   $59         ;'Y'
              7ff4 004f  ld   $4f         ;'O'
              7ff5 0055  ld   $55         ;'U'
              7ff6 0022  ld   $22         ;'"'
              7ff7 0000  ld   $00         ;'\x00'
              7ff8 0030  ld   $30
              7ff9 00c0  ld   $c0
              7ffa 0013  ld   $13
              7ffb fe00  bra  ac          ;+-----------------------------------+
              7ffc fcfd  bra  $7ffd       ;|                                   |
              7ffd 1418  ld   $18,y       ;| Trampoline for page $7f00 lookups |
              7ffe e006  jmp  y,$06       ;|                                   |
              7fff c218  st   [$18]       ;+-----------------------------------+
              8000 00b4  ld   $b4
              8001 000c  ld   $0c
              8002 003f  ld   $3f         ;'?'
              8003 0022  ld   $22         ;'"'
              8004 0057  ld   $57         ;'W'
              8005 0049  ld   $49         ;'I'
              8006 0053  ld   $53         ;'S'
              8007 0048  ld   $48         ;'H'
              8008 0020  ld   $20         ;' '
              8009 0054  ld   $54         ;'T'
              800a 004f  ld   $4f         ;'O'
              800b 0020  ld   $20         ;' '
              800c 0050  ld   $50         ;'P'
              800d 004c  ld   $4c         ;'L'
              800e 0041  ld   $41         ;'A'
              800f 0059  ld   $59         ;'Y'
              8010 0022  ld   $22         ;'"'
              8011 003b  ld   $3b         ;';'
              8012 0000  ld   $00         ;'\x00'
              8013 0030  ld   $30
              8014 00e0  ld   $e0
              8015 000d  ld   $0d
              8016 00b5  ld   $b5
              8017 000c  ld   $0c
              8018 003f  ld   $3f         ;'?'
              8019 0022  ld   $22         ;'"'
              801a 0020  ld   $20         ;' '
              801b 0059  ld   $59         ;'Y'
              801c 004f  ld   $4f         ;'O'
              801d 0055  ld   $55         ;'U'
              801e 0052  ld   $52         ;'R'
              801f 0020  ld   $20         ;' '
              8020 0058  ld   $58         ;'X'
              8021 0022  ld   $22         ;'"'
              8022 0000  ld   $00         ;'\x00'
              8023 0031  ld   $31
              8024 00a0  ld   $a0
              8025 000b  ld   $0b
              8026 00bc  ld   $bc
              8027 000c  ld   $0c
              8028 0047  ld   $47         ;'G'
              8029 004f  ld   $4f         ;'O'
              802a 0054  ld   $54         ;'T'
              802b 004f  ld   $4f         ;'O'
              802c 0033  ld   $33         ;'3'
              802d 0032  ld   $32         ;'2'
              802e 0031  ld   $31         ;'1'
              802f 0030  ld   $30         ;'0'
              8030 0000  ld   $00         ;'\x00'
              8031 0031  ld   $31
              8032 00c0  ld   $c0
              8033 0015  ld   $15
              8034 00c6  ld   $c6
              8035 000c  ld   $0c
              8036 0049  ld   $49         ;'I'
              8037 0046  ld   $46         ;'F'
              8038 0041  ld   $41         ;'A'
              8039 0028  ld   $28         ;'('
              803a 0049  ld   $49         ;'I'
              803b 002b  ld   $2b         ;'+'
              803c 0036  ld   $36         ;'6'
              803d 0029  ld   $29         ;')'
              803e 003d  ld   $3d         ;'='
              803f 0030  ld   $30         ;'0'
              8040 0047  ld   $47         ;'G'
              8041 004f  ld   $4f         ;'O'
              8042 0054  ld   $54         ;'T'
              8043 004f  ld   $4f         ;'O'
              8044 0033  ld   $33         ;'3'
              8045 0033  ld   $33         ;'3'
              8046 0031  ld   $31         ;'1'
              8047 0030  ld   $30         ;'0'
              8048 0000  ld   $00         ;'\x00'
              8049 0031  ld   $31
              804a 00e0  ld   $e0
              804b 0015  ld   $15
              804c 00d1  ld   $d1
              804d 000c  ld   $0c
              804e 003f  ld   $3f         ;'?'
              804f 0022  ld   $22         ;'"'
              8050 0054  ld   $54         ;'T'
              8051 0048  ld   $48         ;'H'
              8052 0041  ld   $41         ;'A'
              8053 0054  ld   $54         ;'T'
              8054 0020  ld   $20         ;' '
              8055 0053  ld   $53         ;'S'
              8056 0051  ld   $51         ;'Q'
              8057 0055  ld   $55         ;'U'
              8058 0041  ld   $41         ;'A'
              8059 0052  ld   $52         ;'R'
              805a 0045  ld   $45         ;'E'
              805b 0020  ld   $20         ;' '
              805c 0049  ld   $49         ;'I'
              805d 0053  ld   $53         ;'S'
              805e 0022  ld   $22         ;'"'
              805f 003b  ld   $3b         ;';'
              8060 0000  ld   $00         ;'\x00'
              8061 0032  ld   $32
              8062 00a0  ld   $a0
              8063 0017  ld   $17
              8064 00d2  ld   $d2
              8065 000c  ld   $0c
              8066 003f  ld   $3f         ;'?'
              8067 0022  ld   $22         ;'"'
              8068 0020  ld   $20         ;' '
              8069 0041  ld   $41         ;'A'
              806a 004c  ld   $4c         ;'L'
              806b 0052  ld   $52         ;'R'
              806c 0045  ld   $45         ;'E'
              806d 0041  ld   $41         ;'A'
              806e 0044  ld   $44         ;'D'
              806f 0059  ld   $59         ;'Y'
              8070 0022  ld   $22         ;'"'
              8071 003a  ld   $3a         ;':'
              8072 003f  ld   $3f         ;'?'
              8073 0022  ld   $22         ;'"'
              8074 0054  ld   $54         ;'T'
              8075 0041  ld   $41         ;'A'
              8076 004b  ld   $4b         ;'K'
              8077 0045  ld   $45         ;'E'
              8078 004e  ld   $4e         ;'N'
              8079 0022  ld   $22         ;'"'
              807a 0000  ld   $00         ;'\x00'
              807b 0032  ld   $32
              807c 00c0  ld   $c0
              807d 000b  ld   $0b
              807e 00da  ld   $da
              807f 000c  ld   $0c
              8080 0047  ld   $47         ;'G'
              8081 004f  ld   $4f         ;'O'
              8082 0054  ld   $54         ;'T'
              8083 004f  ld   $4f         ;'O'
              8084 0033  ld   $33         ;'3'
              8085 0032  ld   $32         ;'2'
              8086 0031  ld   $31         ;'1'
              8087 0030  ld   $30         ;'0'
              8088 0000  ld   $00         ;'\x00'
              8089 0032  ld   $32
              808a 00e0  ld   $e0
              808b 0011  ld   $11
              808c 00ee  ld   $ee
              808d 000c  ld   $0c
              808e 0041  ld   $41         ;'A'
              808f 0028  ld   $28         ;'('
              8090 0049  ld   $49         ;'I'
              8091 002b  ld   $2b         ;'+'
              8092 0036  ld   $36         ;'6'
              8093 0029  ld   $29         ;')'
              8094 003d  ld   $3d         ;'='
              8095 0031  ld   $31         ;'1'
              8096 003a  ld   $3a         ;':'
              8097 0055  ld   $55         ;'U'
              8098 003d  ld   $3d         ;'='
              8099 0055  ld   $55         ;'U'
              809a 002d  ld   $2d         ;'-'
              809b 0031  ld   $31         ;'1'
              809c 0000  ld   $00         ;'\x00'
              809d 0033  ld   $33
              809e 00a0  ld   $a0
              809f 0009  ld   $09
              80a0 00f8  ld   $f8
              80a1 000c  ld   $0c
              80a2 0057  ld   $57         ;'W'
              80a3 003d  ld   $3d         ;'='
              80a4 0036  ld   $36         ;'6'
              80a5 0031  ld   $31         ;'1'
              80a6 0030  ld   $30         ;'0'
              80a7 0030  ld   $30         ;'0'
              80a8 0000  ld   $00         ;'\x00'
              80a9 0033  ld   $33
              80aa 00c0  ld   $c0
              80ab 0009  ld   $09
              80ac 0002  ld   $02
              80ad 000d  ld   $0d
              80ae 0047  ld   $47         ;'G'
              80af 004f  ld   $4f         ;'O'
              80b0 0053  ld   $53         ;'S'
              80b1 0055  ld   $55         ;'U'
              80b2 0042  ld   $42         ;'B'
              80b3 0057  ld   $57         ;'W'
              80b4 0000  ld   $00         ;'\x00'
              80b5 0033  ld   $33
              80b6 00e0  ld   $e0
              80b7 0011  ld   $11
              80b8 000d  ld   $0d
              80b9 000d  ld   $0d
              80ba 0049  ld   $49         ;'I'
              80bb 0046  ld   $46         ;'F'
              80bc 004a  ld   $4a         ;'J'
              80bd 003c  ld   $3c         ;'<'
              80be 003d  ld   $3d         ;'='
              80bf 0030  ld   $30         ;'0'
              80c0 0047  ld   $47         ;'G'
              80c1 004f  ld   $4f         ;'O'
              80c2 0054  ld   $54         ;'T'
              80c3 004f  ld   $4f         ;'O'
              80c4 0033  ld   $33         ;'3'
              80c5 0033  ld   $33         ;'3'
              80c6 0035  ld   $35         ;'5'
              80c7 0030  ld   $30         ;'0'
              80c8 0000  ld   $00         ;'\x00'
              80c9 0034  ld   $34
              80ca 00a0  ld   $a0
              80cb 0014  ld   $14
              80cc 000e  ld   $0e
              80cd 000d  ld   $0d
              80ce 0049  ld   $49         ;'I'
              80cf 0046  ld   $46         ;'F'
              80d0 004c  ld   $4c         ;'L'
              80d1 002a  ld   $2a         ;'*'
              80d2 004d  ld   $4d         ;'M'
              80d3 002a  ld   $2a         ;'*'
              80d4 004e  ld   $4e         ;'N'
              80d5 003d  ld   $3d         ;'='
              80d6 0031  ld   $31         ;'1'
              80d7 0047  ld   $47         ;'G'
              80d8 004f  ld   $4f         ;'O'
              80d9 0054  ld   $54         ;'T'
              80da 004f  ld   $4f         ;'O'
              80db 0031  ld   $31         ;'1'
              80dc 0035  ld   $35         ;'5'
              80dd 0031  ld   $31         ;'1'
              80de 0030  ld   $30         ;'0'
              80df 0000  ld   $00         ;'\x00'
              80e0 0034  ld   $34
              80e1 00c0  ld   $c0
              80e2 000a  ld   $0a
              80e3 0016  ld   $16
              80e4 000d  ld   $0d
              80e5 0057  ld   $57         ;'W'
              80e6 003d  ld   $3d         ;'='
              80e7 0057  ld   $57         ;'W'
              80e8 002b  ld   $2b         ;'+'
              80e9 0031  ld   $31         ;'1'
              80ea 0030  ld   $30         ;'0'
              80eb 0030  ld   $30         ;'0'
              80ec 0000  ld   $00         ;'\x00'
              80ed 0034  ld   $34
              80ee 00e0  ld   $e0
              80ef 0013  ld   $13
              80f0 0020  ld   $20
              80f1 000d  ld   $0d
              80f2 0049  ld   $49         ;'I'
              80f3 0046  ld   $46         ;'F'
              80f4 0057  ld   $57         ;'W'
              80f5 003c  ld   $3c         ;'<'
              80f6 0036  ld   $36         ;'6'
              80f7 0035  ld   $35         ;'5'
              80f8 0030  ld   $30         ;'0'
              80f9 0030  ld   $30         ;'0'
              80fa 0047  ld   $47         ;'G'
              80fb fe00  bra  ac          ;+-----------------------------------+
              80fc fcfd  bra  $80fd       ;|                                   |
              80fd 1418  ld   $18,y       ;| Trampoline for page $8000 lookups |
              80fe e006  jmp  y,$06       ;|                                   |
              80ff c218  st   [$18]       ;+-----------------------------------+
              8100 004f  ld   $4f         ;'O'
              8101 0054  ld   $54         ;'T'
              8102 004f  ld   $4f         ;'O'
              8103 0033  ld   $33         ;'3'
              8104 0033  ld   $33         ;'3'
              8105 0033  ld   $33         ;'3'
              8106 0030  ld   $30         ;'0'
              8107 0000  ld   $00         ;'\x00'
              8108 0035  ld   $35
              8109 00a0  ld   $a0
              810a 0010  ld   $10
              810b 0052  ld   $52
              810c 000d  ld   $0d
              810d 0049  ld   $49         ;'I'
              810e 0046  ld   $46         ;'F'
              810f 0055  ld   $55         ;'U'
              8110 003d  ld   $3d         ;'='
              8111 0030  ld   $30         ;'0'
              8112 0047  ld   $47         ;'G'
              8113 004f  ld   $4f         ;'O'
              8114 0054  ld   $54         ;'T'
              8115 004f  ld   $4f         ;'O'
              8116 0032  ld   $32         ;'2'
              8117 0030  ld   $30         ;'0'
              8118 0031  ld   $31         ;'1'
              8119 0030  ld   $30         ;'0'
              811a 0000  ld   $00         ;'\x00'
              811b 0035  ld   $35
              811c 00c0  ld   $c0
              811d 0006  ld   $06
              811e 00aa  ld   $aa
              811f 000f  ld   $0f
              8120 0049  ld   $49         ;'I'
              8121 003d  ld   $3d         ;'='
              8122 0031  ld   $31         ;'1'
              8123 0000  ld   $00         ;'\x00'
              8124 0035  ld   $35
              8125 00e0  ld   $e0
              8126 0007  ld   $07
              8127 00b4  ld   $b4
              8128 000f  ld   $0f
              8129 0054  ld   $54         ;'T'
              812a 003d  ld   $3d         ;'='
              812b 002d  ld   $2d         ;'-'
              812c 0031  ld   $31         ;'1'
              812d 0000  ld   $00         ;'\x00'
              812e 0036  ld   $36
              812f 00a0  ld   $a0
              8130 0006  ld   $06
              8131 00cc  ld   $cc
              8132 0010  ld   $10
              8133 0053  ld   $53         ;'S'
              8134 003d  ld   $3d         ;'='
              8135 0030  ld   $30         ;'0'
              8136 0000  ld   $00         ;'\x00'
              8137 0036  ld   $36
              8138 00c0  ld   $c0
              8139 0015  ld   $15
              813a 00d7  ld   $d7
              813b 0010  ld   $10
              813c 0049  ld   $49         ;'I'
              813d 0046  ld   $46         ;'F'
              813e 0041  ld   $41         ;'A'
              813f 0028  ld   $28         ;'('
              8140 0049  ld   $49         ;'I'
              8141 002b  ld   $2b         ;'+'
              8142 0036  ld   $36         ;'6'
              8143 0029  ld   $29         ;')'
              8144 003e  ld   $3e         ;'>'
              8145 0030  ld   $30         ;'0'
              8146 0047  ld   $47         ;'G'
              8147 004f  ld   $4f         ;'O'
              8148 0054  ld   $54         ;'T'
              8149 004f  ld   $4f         ;'O'
              814a 0034  ld   $34         ;'4'
              814b 0034  ld   $34         ;'4'
              814c 0038  ld   $38         ;'8'
              814d 0030  ld   $30         ;'0'
              814e 0000  ld   $00         ;'\x00'
              814f 0036  ld   $36
              8150 00e0  ld   $e0
              8151 0009  ld   $09
              8152 00e0  ld   $e0
              8153 0010  ld   $10
              8154 0057  ld   $57         ;'W'
              8155 003d  ld   $3d         ;'='
              8156 0036  ld   $36         ;'6'
              8157 0031  ld   $31         ;'1'
              8158 0030  ld   $30         ;'0'
              8159 0030  ld   $30         ;'0'
              815a 0000  ld   $00         ;'\x00'
              815b 0037  ld   $37
              815c 00a0  ld   $a0
              815d 0009  ld   $09
              815e 00ea  ld   $ea
              815f 0010  ld   $10
              8160 0047  ld   $47         ;'G'
              8161 004f  ld   $4f         ;'O'
              8162 0053  ld   $53         ;'S'
              8163 0055  ld   $55         ;'U'
              8164 0042  ld   $42         ;'B'
              8165 0057  ld   $57         ;'W'
              8166 0000  ld   $00         ;'\x00'
              8167 0037  ld   $37
              8168 00c0  ld   $c0
              8169 0010  ld   $10
              816a 00f4  ld   $f4
              816b 0010  ld   $10
              816c 0049  ld   $49         ;'I'
              816d 0046  ld   $46         ;'F'
              816e 004a  ld   $4a         ;'J'
              816f 003d  ld   $3d         ;'='
              8170 0030  ld   $30         ;'0'
              8171 0047  ld   $47         ;'G'
              8172 004f  ld   $4f         ;'O'
              8173 0054  ld   $54         ;'T'
              8174 004f  ld   $4f         ;'O'
              8175 0034  ld   $34         ;'4'
              8176 0034  ld   $34         ;'4'
              8177 0031  ld   $31         ;'1'
              8178 0030  ld   $30         ;'0'
              8179 0000  ld   $00         ;'\x00'
              817a 0037  ld   $37
              817b 00e0  ld   $e0
              817c 000a  ld   $0a
              817d 00fe  ld   $fe
              817e 0010  ld   $10
              817f 004a  ld   $4a         ;'J'
              8180 003d  ld   $3d         ;'='
              8181 004c  ld   $4c         ;'L'
              8182 002b  ld   $2b         ;'+'
              8183 004d  ld   $4d         ;'M'
              8184 002b  ld   $2b         ;'+'
              8185 004e  ld   $4e         ;'N'
              8186 0000  ld   $00         ;'\x00'
              8187 0038  ld   $38
              8188 00a0  ld   $a0
              8189 0010  ld   $10
              818a 0009  ld   $09
              818b 0011  ld   $11
              818c 0049  ld   $49         ;'I'
              818d 0046  ld   $46         ;'F'
              818e 004a  ld   $4a         ;'J'
              818f 003d  ld   $3d         ;'='
              8190 0034  ld   $34         ;'4'
              8191 0047  ld   $47         ;'G'
              8192 004f  ld   $4f         ;'O'
              8193 0054  ld   $54         ;'T'
              8194 004f  ld   $4f         ;'O'
              8195 0034  ld   $34         ;'4'
              8196 0034  ld   $34         ;'4'
              8197 0031  ld   $31         ;'1'
              8198 0030  ld   $30         ;'0'
              8199 0000  ld   $00         ;'\x00'
              819a 0038  ld   $38
              819b 00c0  ld   $c0
              819c 000e  ld   $0e
              819d 0013  ld   $13
              819e 0011  ld   $11
              819f 0049  ld   $49         ;'I'
              81a0 0046  ld   $46         ;'F'
              81a1 004a  ld   $4a         ;'J'
              81a2 003d  ld   $3d         ;'='
              81a3 0032  ld   $32         ;'2'
              81a4 0053  ld   $53         ;'S'
              81a5 003d  ld   $3d         ;'='
              81a6 0053  ld   $53         ;'S'
              81a7 002b  ld   $2b         ;'+'
              81a8 0032  ld   $32         ;'2'
              81a9 0030  ld   $30         ;'0'
              81aa 0000  ld   $00         ;'\x00'
              81ab 0038  ld   $38
              81ac 00e0  ld   $e0
              81ad 000f  ld   $0f
              81ae 001d  ld   $1d
              81af 0011  ld   $11
              81b0 0049  ld   $49         ;'I'
              81b1 0046  ld   $46         ;'F'
              81b2 004a  ld   $4a         ;'J'
              81b3 003d  ld   $3d         ;'='
              81b4 0036  ld   $36         ;'6'
              81b5 0053  ld   $53         ;'S'
              81b6 003d  ld   $3d         ;'='
              81b7 0053  ld   $53         ;'S'
              81b8 002b  ld   $2b         ;'+'
              81b9 0031  ld   $31         ;'1'
              81ba 0030  ld   $30         ;'0'
              81bb 0030  ld   $30         ;'0'
              81bc 0000  ld   $00         ;'\x00'
              81bd 0039  ld   $39
              81be 00a0  ld   $a0
              81bf 000d  ld   $0d
              81c0 0027  ld   $27
              81c1 0011  ld   $11
              81c2 0049  ld   $49         ;'I'
              81c3 0046  ld   $46         ;'F'
              81c4 004a  ld   $4a         ;'J'
              81c5 003d  ld   $3d         ;'='
              81c6 0030  ld   $30         ;'0'
              81c7 0053  ld   $53         ;'S'
              81c8 003d  ld   $3d         ;'='
              81c9 0053  ld   $53         ;'S'
              81ca 002b  ld   $2b         ;'+'
              81cb 0032  ld   $32         ;'2'
              81cc 0000  ld   $00         ;'\x00'
              81cd 0039  ld   $39
              81ce 00c0  ld   $c0
              81cf 0008  ld   $08
              81d0 0030  ld   $30
              81d1 0011  ld   $11
              81d2 0053  ld   $53         ;'S'
              81d3 003d  ld   $3d         ;'='
              81d4 0053  ld   $53         ;'S'
              81d5 002b  ld   $2b         ;'+'
              81d6 004a  ld   $4a         ;'J'
              81d7 0000  ld   $00         ;'\x00'
              81d8 0039  ld   $39
              81d9 00e0  ld   $e0
              81da 000a  ld   $0a
              81db 003a  ld   $3a
              81dc 0011  ld   $11
              81dd 0057  ld   $57         ;'W'
              81de 003d  ld   $3d         ;'='
              81df 0057  ld   $57         ;'W'
              81e0 002b  ld   $2b         ;'+'
              81e1 0031  ld   $31         ;'1'
              81e2 0030  ld   $30         ;'0'
              81e3 0030  ld   $30         ;'0'
              81e4 0000  ld   $00         ;'\x00'
              81e5 003a  ld   $3a
              81e6 00a0  ld   $a0
              81e7 0013  ld   $13
              81e8 0044  ld   $44
              81e9 0011  ld   $11
              81ea 0049  ld   $49         ;'I'
              81eb 0046  ld   $46         ;'F'
              81ec 0057  ld   $57         ;'W'
              81ed 003c  ld   $3c         ;'<'
              81ee 0036  ld   $36         ;'6'
              81ef 0035  ld   $35         ;'5'
              81f0 0030  ld   $30         ;'0'
              81f1 0030  ld   $30         ;'0'
              81f2 0047  ld   $47         ;'G'
              81f3 004f  ld   $4f         ;'O'
              81f4 0054  ld   $54         ;'T'
              81f5 004f  ld   $4f         ;'O'
              81f6 0034  ld   $34         ;'4'
              81f7 0033  ld   $33         ;'3'
              81f8 0033  ld   $33         ;'3'
              81f9 0030  ld   $30         ;'0'
              81fa 0000  ld   $00         ;'\x00'
              81fb fe00  bra  ac          ;+-----------------------------------+
              81fc fcfd  bra  $81fd       ;|                                   |
              81fd 1418  ld   $18,y       ;| Trampoline for page $8100 lookups |
              81fe e006  jmp  y,$06       ;|                                   |
              81ff c218  st   [$18]       ;+-----------------------------------+
              8200 003a  ld   $3a
              8201 00c0  ld   $c0
              8202 0010  ld   $10
              8203 004f  ld   $4f
              8204 0011  ld   $11
              8205 0049  ld   $49         ;'I'
              8206 0046  ld   $46         ;'F'
              8207 0053  ld   $53         ;'S'
              8208 003c  ld   $3c         ;'<'
              8209 0054  ld   $54         ;'T'
              820a 0047  ld   $47         ;'G'
              820b 004f  ld   $4f         ;'O'
              820c 0054  ld   $54         ;'T'
              820d 004f  ld   $4f         ;'O'
              820e 0034  ld   $34         ;'4'
              820f 0034  ld   $34         ;'4'
              8210 0037  ld   $37         ;'7'
              8211 0030  ld   $30         ;'0'
              8212 0000  ld   $00         ;'\x00'
              8213 003a  ld   $3a
              8214 00e0  ld   $e0
              8215 0006  ld   $06
              8216 0058  ld   $58
              8217 0011  ld   $11
              8218 0054  ld   $54         ;'T'
              8219 003d  ld   $3d         ;'='
              821a 0053  ld   $53         ;'S'
              821b 0000  ld   $00         ;'\x00'
              821c 003b  ld   $3b
              821d 00a0  ld   $a0
              821e 0006  ld   $06
              821f 0062  ld   $62
              8220 0011  ld   $11
              8221 0042  ld   $42         ;'B'
              8222 003d  ld   $3d         ;'='
              8223 0049  ld   $49         ;'I'
              8224 0000  ld   $00         ;'\x00'
              8225 003b  ld   $3b
              8226 00c0  ld   $c0
              8227 0008  ld   $08
              8228 0076  ld   $76
              8229 0011  ld   $11
              822a 003f  ld   $3f         ;'?'
              822b 0022  ld   $22         ;'"'
              822c 002e  ld   $2e         ;'.'
              822d 0022  ld   $22         ;'"'
              822e 003b  ld   $3b         ;';'
              822f 0000  ld   $00         ;'\x00'
              8230 003b  ld   $3b
              8231 00e0  ld   $e0
              8232 0008  ld   $08
              8233 0080  ld   $80
              8234 0011  ld   $11
              8235 0049  ld   $49         ;'I'
              8236 003d  ld   $3d         ;'='
              8237 0049  ld   $49         ;'I'
              8238 002b  ld   $2b         ;'+'
              8239 0031  ld   $31         ;'1'
              823a 0000  ld   $00         ;'\x00'
              823b 003c  ld   $3c
              823c 00a0  ld   $a0
              823d 0011  ld   $11
              823e 008a  ld   $8a
              823f 0011  ld   $11
              8240 0049  ld   $49         ;'I'
              8241 0046  ld   $46         ;'F'
              8242 0049  ld   $49         ;'I'
              8243 003c  ld   $3c         ;'<'
              8244 0031  ld   $31         ;'1'
              8245 0030  ld   $30         ;'0'
              8246 0047  ld   $47         ;'G'
              8247 004f  ld   $4f         ;'O'
              8248 0054  ld   $54         ;'T'
              8249 004f  ld   $4f         ;'O'
              824a 0034  ld   $34         ;'4'
              824b 0033  ld   $33         ;'3'
              824c 0030  ld   $30         ;'0'
              824d 0030  ld   $30         ;'0'
              824e 0000  ld   $00         ;'\x00'
              824f 003c  ld   $3c
              8250 00c0  ld   $c0
              8251 000f  ld   $0f
              8252 0094  ld   $94
              8253 0011  ld   $11
              8254 003f  ld   $3f         ;'?'
              8255 0022  ld   $22         ;'"'
              8256 0049  ld   $49         ;'I'
              8257 0020  ld   $20         ;' '
              8258 0050  ld   $50         ;'P'
              8259 004c  ld   $4c         ;'L'
              825a 0041  ld   $41         ;'A'
              825b 0059  ld   $59         ;'Y'
              825c 0020  ld   $20         ;' '
              825d 0022  ld   $22         ;'"'
              825e 003b  ld   $3b         ;';'
              825f 0042  ld   $42         ;'B'
              8260 0000  ld   $00         ;'\x00'
              8261 003c  ld   $3c
              8262 00e0  ld   $e0
              8263 0004  ld   $04
              8264 009e  ld   $9e
              8265 0011  ld   $11
              8266 003f  ld   $3f         ;'?'
              8267 0000  ld   $00         ;'\x00'
              8268 003d  ld   $3d
              8269 00a0  ld   $a0
              826a 000b  ld   $0b
              826b 00a9  ld   $a9
              826c 0011  ld   $11
              826d 0041  ld   $41         ;'A'
              826e 0028  ld   $28         ;'('
              826f 0042  ld   $42         ;'B'
              8270 002b  ld   $2b         ;'+'
              8271 0036  ld   $36         ;'6'
              8272 0029  ld   $29         ;')'
              8273 003d  ld   $3d         ;'='
              8274 0033  ld   $33         ;'3'
              8275 0000  ld   $00         ;'\x00'
              8276 003d  ld   $3d
              8277 00c0  ld   $c0
              8278 0008  ld   $08
              8279 00b2  ld   $b2
              827a 0011  ld   $11
              827b 0055  ld   $55         ;'U'
              827c 003d  ld   $3d         ;'='
              827d 0055  ld   $55         ;'U'
              827e 002d  ld   $2d         ;'-'
              827f 0031  ld   $31         ;'1'
              8280 0000  ld   $00         ;'\x00'
              8281 003d  ld   $3d
              8282 00e0  ld   $e0
              8283 0012  ld   $12
              8284 00bd  ld   $bd
              8285 0011  ld   $11
              8286 0049  ld   $49         ;'I'
              8287 0046  ld   $46         ;'F'
              8288 0054  ld   $54         ;'T'
              8289 003c  ld   $3c         ;'<'
              828a 0031  ld   $31         ;'1'
              828b 0030  ld   $30         ;'0'
              828c 0030  ld   $30         ;'0'
              828d 0047  ld   $47         ;'G'
              828e 004f  ld   $4f         ;'O'
              828f 0054  ld   $54         ;'T'
              8290 004f  ld   $4f         ;'O'
              8291 0032  ld   $32         ;'2'
              8292 0030  ld   $30         ;'0'
              8293 0031  ld   $31         ;'1'
              8294 0030  ld   $30         ;'0'
              8295 0000  ld   $00         ;'\x00'
              8296 003e  ld   $3e
              8297 00a0  ld   $a0
              8298 0006  ld   $06
              8299 00d0  ld   $d0
              829a 0011  ld   $11
              829b 0046  ld   $46         ;'F'
              829c 003d  ld   $3d         ;'='
              829d 0031  ld   $31         ;'1'
              829e 0000  ld   $00         ;'\x00'
              829f 003e  ld   $3e
              82a0 00c0  ld   $c0
              82a1 0006  ld   $06
              82a2 00da  ld   $da
              82a3 0011  ld   $11
              82a4 005a  ld   $5a         ;'Z'
              82a5 003d  ld   $3d         ;'='
              82a6 0031  ld   $31         ;'1'
              82a7 0000  ld   $00         ;'\x00'
              82a8 003e  ld   $3e
              82a9 00e0  ld   $e0
              82aa 000b  ld   $0b
              82ab 00e4  ld   $e4
              82ac 0011  ld   $11
              82ad 0047  ld   $47         ;'G'
              82ae 004f  ld   $4f         ;'O'
              82af 0054  ld   $54         ;'T'
              82b0 004f  ld   $4f         ;'O'
              82b1 0032  ld   $32         ;'2'
              82b2 0030  ld   $30         ;'0'
              82b3 0031  ld   $31         ;'1'
              82b4 0030  ld   $30         ;'0'
              82b5 0000  ld   $00         ;'\x00'
              82b6 003f  ld   $3f
              82b7 00a0  ld   $a0
              82b8 0010  ld   $10
              82b9 00d4  ld   $d4
              82ba 0017  ld   $17
              82bb 004a  ld   $4a         ;'J'
              82bc 003d  ld   $3d         ;'='
              82bd 0028  ld   $28         ;'('
              82be 0049  ld   $49         ;'I'
              82bf 002d  ld   $2d         ;'-'
              82c0 0031  ld   $31         ;'1'
              82c1 0029  ld   $29         ;')'
              82c2 002f  ld   $2f         ;'/'
              82c3 0033  ld   $33         ;'3'
              82c4 002a  ld   $2a         ;'*'
              82c5 0033  ld   $33         ;'3'
              82c6 002b  ld   $2b         ;'+'
              82c7 0038  ld   $38         ;'8'
              82c8 0000  ld   $00         ;'\x00'
              82c9 003f  ld   $3f
              82ca 00c0  ld   $c0
              82cb 0006  ld   $06
              82cc 00de  ld   $de
              82cd 0017  ld   $17
              82ce 0044  ld   $44         ;'D'
              82cf 003d  ld   $3d         ;'='
              82d0 0031  ld   $31         ;'1'
              82d1 0000  ld   $00         ;'\x00'
              82d2 003f  ld   $3f
              82d3 00e0  ld   $e0
              82d4 000b  ld   $0b
              82d5 00e8  ld   $e8
              82d6 0017  ld   $17
              82d7 0047  ld   $47         ;'G'
              82d8 004f  ld   $4f         ;'O'
              82d9 0054  ld   $54         ;'T'
              82da 004f  ld   $4f         ;'O'
              82db 0036  ld   $36         ;'6'
              82dc 0035  ld   $35         ;'5'
              82dd 0030  ld   $30         ;'0'
              82de 0030  ld   $30         ;'0'
              82df 0000  ld   $00         ;'\x00'
              82e0 0040  ld   $40
              82e1 00a0  ld   $a0
              82e2 0012  ld   $12
              82e3 0038  ld   $38
              82e4 0018  ld   $18
              82e5 004a  ld   $4a         ;'J'
              82e6 003d  ld   $3d         ;'='
              82e7 0049  ld   $49         ;'I'
              82e8 002d  ld   $2d         ;'-'
              82e9 0028  ld   $28         ;'('
              82ea 0049  ld   $49         ;'I'
              82eb 002d  ld   $2d         ;'-'
              82ec 0031  ld   $31         ;'1'
              82ed 0029  ld   $29         ;')'
              82ee 002f  ld   $2f         ;'/'
              82ef 0033  ld   $33         ;'3'
              82f0 002a  ld   $2a         ;'*'
              82f1 0033  ld   $33         ;'3'
              82f2 002b  ld   $2b         ;'+'
              82f3 0039  ld   $39         ;'9'
              82f4 0000  ld   $00         ;'\x00'
              82f5 0040  ld   $40
              82f6 00c0  ld   $c0
              82f7 0006  ld   $06
              82f8 0042  ld   $42
              82f9 0018  ld   $18
              82fa 0044  ld   $44         ;'D'
              82fb fe00  bra  ac          ;+-----------------------------------+
              82fc fcfd  bra  $82fd       ;|                                   |
              82fd 1418  ld   $18,y       ;| Trampoline for page $8200 lookups |
              82fe e006  jmp  y,$06       ;|                                   |
              82ff c218  st   [$18]       ;+-----------------------------------+
              8300 003d  ld   $3d         ;'='
              8301 0033  ld   $33         ;'3'
              8302 0000  ld   $00         ;'\x00'
              8303 0040  ld   $40
              8304 00e0  ld   $e0
              8305 000b  ld   $0b
              8306 004c  ld   $4c
              8307 0018  ld   $18
              8308 0047  ld   $47         ;'G'
              8309 004f  ld   $4f         ;'O'
              830a 0054  ld   $54         ;'T'
              830b 004f  ld   $4f         ;'O'
              830c 0036  ld   $36         ;'6'
              830d 0035  ld   $35         ;'5'
              830e 0030  ld   $30         ;'0'
              830f 0030  ld   $30         ;'0'
              8310 0000  ld   $00         ;'\x00'
              8311 0041  ld   $41
              8312 00a0  ld   $a0
              8313 0013  ld   $13
              8314 009c  ld   $9c
              8315 0018  ld   $18
              8316 0049  ld   $49         ;'I'
              8317 0046  ld   $46         ;'F'
              8318 0049  ld   $49         ;'I'
              8319 0025  ld   $25         ;'%'
              831a 0034  ld   $34         ;'4'
              831b 003c  ld   $3c         ;'<'
              831c 003e  ld   $3e         ;'>'
              831d 0031  ld   $31         ;'1'
              831e 0047  ld   $47         ;'G'
              831f 004f  ld   $4f         ;'O'
              8320 0054  ld   $54         ;'T'
              8321 004f  ld   $4f         ;'O'
              8322 0036  ld   $36         ;'6'
              8323 0034  ld   $34         ;'4'
              8324 0034  ld   $34         ;'4'
              8325 0030  ld   $30         ;'0'
              8326 0000  ld   $00         ;'\x00'
              8327 0041  ld   $41
              8328 00c0  ld   $c0
              8329 0006  ld   $06
              832a 00a6  ld   $a6
              832b 0018  ld   $18
              832c 0044  ld   $44         ;'D'
              832d 003d  ld   $3d         ;'='
              832e 0034  ld   $34         ;'4'
              832f 0000  ld   $00         ;'\x00'
              8330 0041  ld   $41
              8331 00e0  ld   $e0
              8332 0007  ld   $07
              8333 00ba  ld   $ba
              8334 0018  ld   $18
              8335 004a  ld   $4a         ;'J'
              8336 003d  ld   $3d         ;'='
              8337 0031  ld   $31         ;'1'
              8338 0031  ld   $31         ;'1'
              8339 0000  ld   $00         ;'\x00'
              833a 0042  ld   $42
              833b 00a0  ld   $a0
              833c 000b  ld   $0b
              833d 00c4  ld   $c4
              833e 0018  ld   $18
              833f 0047  ld   $47         ;'G'
              8340 004f  ld   $4f         ;'O'
              8341 0054  ld   $54         ;'T'
              8342 004f  ld   $4f         ;'O'
              8343 0036  ld   $36         ;'6'
              8344 0035  ld   $35         ;'5'
              8345 0030  ld   $30         ;'0'
              8346 0030  ld   $30         ;'0'
              8347 0000  ld   $00         ;'\x00'
              8348 0042  ld   $42
              8349 00c0  ld   $c0
              834a 0006  ld   $06
              834b 0000  ld   $00
              834c 0019  ld   $19
              834d 0044  ld   $44         ;'D'
              834e 003d  ld   $3d         ;'='
              834f 0032  ld   $32         ;'2'
              8350 0000  ld   $00         ;'\x00'
              8351 0042  ld   $42
              8352 00e0  ld   $e0
              8353 0011  ld   $11
              8354 000b  ld   $0b
              8355 0019  ld   $19
              8356 0049  ld   $49         ;'I'
              8357 0046  ld   $46         ;'F'
              8358 0049  ld   $49         ;'I'
              8359 003c  ld   $3c         ;'<'
              835a 003d  ld   $3d         ;'='
              835b 0031  ld   $31         ;'1'
              835c 0047  ld   $47         ;'G'
              835d 004f  ld   $4f         ;'O'
              835e 0054  ld   $54         ;'T'
              835f 004f  ld   $4f         ;'O'
              8360 0036  ld   $36         ;'6'
              8361 0034  ld   $34         ;'4'
              8362 0034  ld   $34         ;'4'
              8363 0030  ld   $30         ;'0'
              8364 0000  ld   $00         ;'\x00'
              8365 0043  ld   $43
              8366 00a0  ld   $a0
              8367 0011  ld   $11
              8368 000c  ld   $0c
              8369 0019  ld   $19
              836a 0049  ld   $49         ;'I'
              836b 0046  ld   $46         ;'F'
              836c 0049  ld   $49         ;'I'
              836d 003e  ld   $3e         ;'>'
              836e 003d  ld   $3d         ;'='
              836f 0039  ld   $39         ;'9'
              8370 0047  ld   $47         ;'G'
              8371 004f  ld   $4f         ;'O'
              8372 0054  ld   $54         ;'T'
              8373 004f  ld   $4f         ;'O'
              8374 0036  ld   $36         ;'6'
              8375 0034  ld   $34         ;'4'
              8376 0034  ld   $34         ;'4'
              8377 0030  ld   $30         ;'0'
              8378 0000  ld   $00         ;'\x00'
              8379 0043  ld   $43
              837a 00c0  ld   $c0
              837b 0012  ld   $12
              837c 000d  ld   $0d
              837d 0019  ld   $19
              837e 0049  ld   $49         ;'I'
              837f 0046  ld   $46         ;'F'
              8380 0049  ld   $49         ;'I'
              8381 0025  ld   $25         ;'%'
              8382 0032  ld   $32         ;'2'
              8383 003d  ld   $3d         ;'='
              8384 0031  ld   $31         ;'1'
              8385 0047  ld   $47         ;'G'
              8386 004f  ld   $4f         ;'O'
              8387 0054  ld   $54         ;'T'
              8388 004f  ld   $4f         ;'O'
              8389 0036  ld   $36         ;'6'
              838a 0033  ld   $33         ;'3'
              838b 0033  ld   $33         ;'3'
              838c 0030  ld   $30         ;'0'
              838d 0000  ld   $00         ;'\x00'
              838e 0043  ld   $43
              838f 00e0  ld   $e0
              8390 0006  ld   $06
              8391 0028  ld   $28
              8392 0019  ld   $19
              8393 004a  ld   $4a         ;'J'
              8394 003d  ld   $3d         ;'='
              8395 0030  ld   $30         ;'0'
              8396 0000  ld   $00         ;'\x00'
              8397 0044  ld   $44
              8398 00a0  ld   $a0
              8399 0009  ld   $09
              839a 0032  ld   $32
              839b 0019  ld   $19
              839c 0052  ld   $52         ;'R'
              839d 0045  ld   $45         ;'E'
              839e 0054  ld   $54         ;'T'
              839f 0055  ld   $55         ;'U'
              83a0 0052  ld   $52         ;'R'
              83a1 004e  ld   $4e         ;'N'
              83a2 0000  ld   $00         ;'\x00'
              83a3 0044  ld   $44
              83a4 00c0  ld   $c0
              83a5 000b  ld   $0b
              83a6 0064  ld   $64
              83a7 0019  ld   $19
              83a8 004c  ld   $4c         ;'L'
              83a9 003d  ld   $3d         ;'='
              83aa 0041  ld   $41         ;'A'
              83ab 0028  ld   $28         ;'('
              83ac 004a  ld   $4a         ;'J'
              83ad 002d  ld   $2d         ;'-'
              83ae 0044  ld   $44         ;'D'
              83af 0029  ld   $29         ;')'
              83b0 0000  ld   $00         ;'\x00'
              83b1 0044  ld   $44
              83b2 00e0  ld   $e0
              83b3 0009  ld   $09
              83b4 0066  ld   $66
              83b5 0019  ld   $19
              83b6 004d  ld   $4d         ;'M'
              83b7 003d  ld   $3d         ;'='
              83b8 0041  ld   $41         ;'A'
              83b9 0028  ld   $28         ;'('
              83ba 004a  ld   $4a         ;'J'
              83bb 0029  ld   $29         ;')'
              83bc 0000  ld   $00         ;'\x00'
              83bd 0045  ld   $45
              83be 00a0  ld   $a0
              83bf 000b  ld   $0b
              83c0 006e  ld   $6e
              83c1 0019  ld   $19
              83c2 004e  ld   $4e         ;'N'
              83c3 003d  ld   $3d         ;'='
              83c4 0041  ld   $41         ;'A'
              83c5 0028  ld   $28         ;'('
              83c6 004a  ld   $4a         ;'J'
              83c7 002b  ld   $2b         ;'+'
              83c8 0044  ld   $44         ;'D'
              83c9 0029  ld   $29         ;')'
              83ca 0000  ld   $00         ;'\x00'
              83cb 0045  ld   $45
              83cc 00c0  ld   $c0
              83cd 0009  ld   $09
              83ce 0082  ld   $82
              83cf 0019  ld   $19
              83d0 0052  ld   $52         ;'R'
              83d1 0045  ld   $45         ;'E'
              83d2 0054  ld   $54         ;'T'
              83d3 0055  ld   $55         ;'U'
              83d4 0052  ld   $52         ;'R'
              83d5 004e  ld   $4e         ;'N'
              83d6 0000  ld   $00         ;'\x00'
              83d7 0045  ld   $45
              83d8 00e2  ld   $e2
              83d9 0004  ld   $04
              83da 0052  ld   $52         ;'R'
              83db 0055  ld   $55         ;'U'
              83dc 004e  ld   $4e         ;'N'
              83dd 0000  ld   $00         ;'\x00'
              83de 001b  ld   $1b
              83df 00a0  ld   $a0
              83e0 0002  ld   $02
              83e1 00e0  ld   $e0
              83e2 0045  ld   $45
              83e3 0000  ld   $00
              83e4 0000  ld   $00         ;End of Apps/TicTac/TicTac_v2.gtb, size 2007
                                          ;+-----------------------------------+
                                          ;| Apps/WozMon/WozMon_v2.gcl         |
                                          ;+-----------------------------------+
              83e5 dc54  st   $54,[y,x++] ;'T'
              83e6 dc69  st   $69,[y,x++] ;'i'
              83e7 dc63  st   $63,[y,x++] ;'c'
              83e8 dc54  st   $54,[y,x++] ;'T'
              83e9 dc61  st   $61,[y,x++] ;'a'
              83ea dc63  st   $63,[y,x++] ;'c'
              83eb dc00  st   $00,[y,x++] ;'\x00'
              83ec dc00  st   $00,[y,x++] ;'\x00'
              83ed 00e6  ld   $e6
              83ee c218  st   [$18]
              83ef 007b  ld   $7b
              83f0 14df  ld   $df,y
              83f1 e0ac  jmp  y,$ac
              83f2 c219  st   [$19]
WozMon:       83f3 0002  ld   $02         ;| RAM segment address (high byte first)
              83f4 0000  ld   $00         ;|
              83f5 00e2  ld   $e2         ;| Length (1..256)
              83f6 00cd  ld   $cd         ;0200 DEF
              83f7 000a  ld   $0a
              83f8 002a  ld   $2a
              83f9 002a  ld   $2a
              83fa 0020  ld   $20
              83fb fe00  bra  ac          ;+-----------------------------------+
              83fc fcfd  bra  $83fd       ;|                                   |
              83fd 1418  ld   $18,y       ;| Trampoline for page $8300 lookups |
              83fe e006  jmp  y,$06       ;|                                   |
              83ff c218  st   [$18]       ;+-----------------------------------+
              8400 0057  ld   $57
              8401 006f  ld   $6f
              8402 007a  ld   $7a
              8403 004d  ld   $4d
              8404 006f  ld   $6f
              8405 006e  ld   $6e
              8406 0000  ld   $00
              8407 002b  ld   $2b         ;020c STW
              8408 0030  ld   $30         ;020c 'tmp'
              8409 0011  ld   $11         ;020e LDWI
              840a 00df  ld   $df
              840b 0001  ld   $01
              840c 00f6  ld   $f6         ;0211 DEEK
              840d 002b  ld   $2b         ;0212 STW
              840e 0032  ld   $32         ;0212 'Pos'
              840f 00cd  ld   $cd         ;0214 DEF
              8410 0060  ld   $60
              8411 00e6  ld   $e6         ;0216 SUBI
              8412 0052  ld   $52
              8413 0035  ld   $35         ;0218 BCC
              8414 0053  ld   $53         ;0219 GE
              8415 0022  ld   $22
              8416 00e3  ld   $e3         ;021b ADDI
              8417 0032  ld   $32
              8418 002b  ld   $2b         ;021d STW
              8419 0034  ld   $34         ;021d 'i'
              841a 0011  ld   $11         ;021f LDWI
              841b 0000  ld   $00
              841c 0007  ld   $07
              841d 0090  ld   $90         ;0222 BRA
              841e 0027  ld   $27
              841f 002b  ld   $2b         ;0224 STW
              8420 0034  ld   $34         ;0224 'i'
              8421 0011  ld   $11         ;0226 LDWI
              8422 0000  ld   $00
              8423 0008  ld   $08
              8424 002b  ld   $2b         ;0229 STW
              8425 0036  ld   $36         ;0229 'k'
              8426 0021  ld   $21         ;022b LDW
              8427 0034  ld   $34         ;022b 'i'
              8428 00e9  ld   $e9         ;022d LSLW
              8429 00e9  ld   $e9         ;022e LSLW
              842a 0099  ld   $99         ;022f ADDW
              842b 0034  ld   $34         ;022f 'i'
              842c 0099  ld   $99         ;0231 ADDW
              842d 0036  ld   $36         ;0231 'k'
              842e 002b  ld   $2b         ;0233 STW
              842f 0036  ld   $36         ;0233 'k'
              8430 0011  ld   $11         ;0235 LDWI
              8431 00e1  ld   $e1
              8432 0004  ld   $04
              8433 002b  ld   $2b         ;0238 STW
              8434 0022  ld   $22
              8435 0021  ld   $21         ;023a LDW
              8436 002a  ld   $2a
              8437 002b  ld   $2b         ;023c STW
              8438 0024  ld   $24
              8439 0021  ld   $21         ;023e LDW
              843a 0032  ld   $32         ;023e 'Pos'
              843b 002b  ld   $2b         ;0240 STW
              843c 0028  ld   $28
              843d 00ec  ld   $ec         ;0242 STLW
              843e 00fe  ld   $fe
              843f 00e3  ld   $e3         ;0244 ADDI
              8440 0006  ld   $06
              8441 002b  ld   $2b         ;0246 STW
              8442 0032  ld   $32         ;0246 'Pos'
              8443 0059  ld   $59         ;0248 LDI
              8444 0005  ld   $05
              8445 002b  ld   $2b         ;024a STW
              8446 0034  ld   $34         ;024a 'i'
              8447 0021  ld   $21         ;024c LDW
              8448 0036  ld   $36         ;024c 'k'
              8449 007f  ld   $7f         ;024e LUP
              844a 0000  ld   $00
              844b 005e  ld   $5e         ;0250 ST
              844c 0026  ld   $26
              844d 00b4  ld   $b4         ;0252 SYS
              844e 00cc  ld   $cc
              844f 0093  ld   $93         ;0254 INC
              8450 0036  ld   $36         ;0254 'k'
              8451 0093  ld   $93         ;0256 INC
              8452 0028  ld   $28
              8453 0021  ld   $21         ;0258 LDW
              8454 0034  ld   $34         ;0258 'i'
              8455 00e6  ld   $e6         ;025a SUBI
              8456 0001  ld   $01
              8457 0035  ld   $35         ;025c BCC
              8458 004d  ld   $4d         ;025d GT
              8459 0048  ld   $48
              845a 00ee  ld   $ee         ;025f LDLW
              845b 00fe  ld   $fe
              845c 00ff  ld   $ff         ;0261 RET
              845d 002b  ld   $2b         ;0262 STW
              845e 0038  ld   $38         ;0262 'PrintChar'
              845f 00cd  ld   $cd         ;0264 DEF
              8460 00ad  ld   $ad
              8461 001a  ld   $1a         ;0266 LD
              8462 0032  ld   $32         ;0266 'Pos'
              8463 0035  ld   $35         ;0268 BCC
              8464 003f  ld   $3f         ;0269 EQ
              8465 00ac  ld   $ac
              8466 0011  ld   $11         ;026b LDWI
              8467 00e1  ld   $e1
              8468 0004  ld   $04
              8469 002b  ld   $2b         ;026e STW
              846a 0022  ld   $22
              846b 0011  ld   $11         ;0270 LDWI
              846c 0000  ld   $00
              846d 0008  ld   $08
              846e 005e  ld   $5e         ;0273 ST
              846f 0032  ld   $32         ;0273 'Pos'
              8470 0099  ld   $99         ;0275 ADDW
              8471 0032  ld   $32         ;0275 'Pos'
              8472 0035  ld   $35         ;0277 BCC
              8473 0053  ld   $53         ;0278 GE
              8474 007b  ld   $7b
              8475 0011  ld   $11         ;027a LDWI
              8476 0000  ld   $00
              8477 0008  ld   $08
              8478 002b  ld   $2b         ;027d STW
              8479 0032  ld   $32         ;027d 'Pos'
              847a 002b  ld   $2b         ;027f STW
              847b 0028  ld   $28
              847c 005e  ld   $5e         ;0281 ST
              847d 0026  ld   $26
              847e 00b4  ld   $b4         ;0283 SYS
              847f 00cc  ld   $cc
              8480 0093  ld   $93         ;0285 INC
              8481 0028  ld   $28
              8482 001a  ld   $1a         ;0287 LD
              8483 0028  ld   $28
              8484 008c  ld   $8c         ;0289 XORI
              8485 00a0  ld   $a0
              8486 0035  ld   $35         ;028b BCC
              8487 0072  ld   $72         ;028c NE
              8488 0081  ld   $81
              8489 0011  ld   $11         ;028e LDWI
              848a 00ee  ld   $ee
              848b 0001  ld   $01
              848c 002b  ld   $2b         ;0291 STW
              848d 0034  ld   $34         ;0291 'i'
              848e 0021  ld   $21         ;0293 LDW
              848f 0034  ld   $34         ;0293 'i'
              8490 00ad  ld   $ad         ;0295 PEEK
              8491 00e6  ld   $e6         ;0296 SUBI
              8492 0078  ld   $78
              8493 0035  ld   $35         ;0298 BCC
              8494 0053  ld   $53         ;0299 GE
              8495 009d  ld   $9d
              8496 008c  ld   $8c         ;029b XORI
              8497 0080  ld   $80
              8498 0090  ld   $90         ;029d BRA
              8499 009f  ld   $9f
              849a 008c  ld   $8c         ;029f XORI
              849b 0008  ld   $08
              849c 00f0  ld   $f0         ;02a1 POKE
              849d 0034  ld   $34         ;02a1 'i'
              849e 0021  ld   $21         ;02a3 LDW
              849f 0034  ld   $34         ;02a3 'i'
              84a0 00e6  ld   $e6         ;02a5 SUBI
              84a1 0002  ld   $02
              84a2 002b  ld   $2b         ;02a7 STW
              84a3 0034  ld   $34         ;02a7 'i'
              84a4 008c  ld   $8c         ;02a9 XORI
              84a5 00fe  ld   $fe
              84a6 0035  ld   $35         ;02ab BCC
              84a7 0072  ld   $72         ;02ac NE
              84a8 0091  ld   $91
              84a9 00ff  ld   $ff         ;02ae RET
              84aa 002b  ld   $2b         ;02af STW
              84ab 003a  ld   $3a         ;02af 'CNewline'
              84ac 00cd  ld   $cd         ;02b1 DEF
              84ad 00d9  ld   $d9
              84ae 0075  ld   $75         ;02b3 PUSH
              84af 002b  ld   $2b         ;02b4 STW
              84b0 0030  ld   $30         ;02b4 'tmp'
              84b1 0011  ld   $11         ;02b6 LDWI
              84b2 0052  ld   $52
              84b3 0006  ld   $06
              84b4 002b  ld   $2b         ;02b9 STW
              84b5 0022  ld   $22
              84b6 0021  ld   $21         ;02bb LDW
              84b7 0030  ld   $30         ;02bb 'tmp'
              84b8 00b4  ld   $b4         ;02bd SYS
              84b9 00f6  ld   $f6
              84ba 00e6  ld   $e6         ;02bf SUBI
              84bb 000a  ld   $0a
              84bc 0035  ld   $35         ;02c1 BCC
              84bd 0050  ld   $50         ;02c2 LT
              84be 00c4  ld   $c4
              84bf 00e3  ld   $e3         ;02c4 ADDI
              84c0 0007  ld   $07
              84c1 00e3  ld   $e3         ;02c6 ADDI
              84c2 003a  ld   $3a
              84c3 00cf  ld   $cf         ;02c8 CALL
              84c4 0038  ld   $38         ;02c8 'PrintChar'
              84c5 0021  ld   $21         ;02ca LDW
              84c6 0030  ld   $30         ;02ca 'tmp'
              84c7 0082  ld   $82         ;02cc ANDI
              84c8 000f  ld   $0f
              84c9 00e6  ld   $e6         ;02ce SUBI
              84ca 000a  ld   $0a
              84cb 0035  ld   $35         ;02d0 BCC
              84cc 0050  ld   $50         ;02d1 LT
              84cd 00d3  ld   $d3
              84ce 00e3  ld   $e3         ;02d3 ADDI
              84cf 0007  ld   $07
              84d0 00e3  ld   $e3         ;02d5 ADDI
              84d1 003a  ld   $3a
              84d2 00cf  ld   $cf         ;02d7 CALL
              84d3 0038  ld   $38         ;02d7 'PrintChar'
              84d4 0063  ld   $63         ;02d9 POP
              84d5 00ff  ld   $ff         ;02da RET
              84d6 002b  ld   $2b         ;02db STW
              84d7 003c  ld   $3c         ;02db 'PrintByte'
              84d8 0011  ld   $11         ;02dd LDWI
              84d9 0000  ld   $00
              84da 0003  ld   $03
              84db 00cf  ld   $cf         ;02e0 CALL
              84dc 0018  ld   $18         ;02e0 vAC
              84dd 0003  ld   $03         ;| RAM segment address (high byte first)
              84de 0000  ld   $00         ;|
              84df 00f3  ld   $f3         ;| Length (1..256)
              84e0 00cd  ld   $cd         ;0300 DEF
              84e1 00d3  ld   $d3
              84e2 0075  ld   $75         ;0302 PUSH
              84e3 0059  ld   $59         ;0303 LDI
              84e4 0080  ld   $80
              84e5 002b  ld   $2b         ;0305 STW
              84e6 003e  ld   $3e         ;0305 'Buffer'
              84e7 00cf  ld   $cf         ;0307 CALL
              84e8 003a  ld   $3a         ;0307 'CNewline'
              84e9 0093  ld   $93         ;0309 INC
              84ea 003e  ld   $3e         ;0309 'Buffer'
              84eb 0021  ld   $21         ;030b LDW
              84ec 003e  ld   $3e         ;030b 'Buffer'
              84ed 00ad  ld   $ad         ;030d PEEK
              84ee 0035  ld   $35         ;030e BCC
              84ef 003f  ld   $3f         ;030f EQ
              84f0 00d1  ld   $d1
              84f1 00e6  ld   $e6         ;0311 SUBI
              84f2 002e  ld   $2e
              84f3 0035  ld   $35         ;0313 BCC
              84f4 0050  ld   $50         ;0314 LT
              84f5 0007  ld   $07
              84f6 0035  ld   $35         ;0316 BCC
              84f7 0072  ld   $72         ;0317 NE
              84f8 001d  ld   $1d
              84f9 0059  ld   $59         ;0319 LDI
              84fa 0001  ld   $01
              84fb fe00  bra  ac          ;+-----------------------------------+
              84fc fcfd  bra  $84fd       ;|                                   |
              84fd 1418  ld   $18,y       ;| Trampoline for page $8400 lookups |
              84fe e006  jmp  y,$06       ;|                                   |
              84ff c218  st   [$18]       ;+-----------------------------------+
              8500 002b  ld   $2b         ;031b STW
              8501 0040  ld   $40         ;031b 'Mode'
              8502 0090  ld   $90         ;031d BRA
              8503 0007  ld   $07
              8504 00e6  ld   $e6         ;031f SUBI
              8505 000c  ld   $0c
              8506 0035  ld   $35         ;0321 BCC
              8507 0072  ld   $72         ;0322 NE
              8508 0028  ld   $28
              8509 00e6  ld   $e6         ;0324 SUBI
              850a 0001  ld   $01
              850b 002b  ld   $2b         ;0326 STW
              850c 0040  ld   $40         ;0326 'Mode'
              850d 0090  ld   $90         ;0328 BRA
              850e 0007  ld   $07
              850f 00e6  ld   $e6         ;032a SUBI
              8510 0018  ld   $18
              8511 0035  ld   $35         ;032c BCC
              8512 0072  ld   $72         ;032d NE
              8513 0031  ld   $31
              8514 00cf  ld   $cf         ;032f CALL
              8515 0042  ld   $42         ;032f 'Examine'
              8516 0090  ld   $90         ;0331 BRA
              8517 0007  ld   $07
              8518 0059  ld   $59         ;0333 LDI
              8519 0000  ld   $00
              851a 002b  ld   $2b         ;0335 STW
              851b 0030  ld   $30         ;0335 'tmp'
              851c 002b  ld   $2b         ;0337 STW
              851d 0044  ld   $44         ;0337 'Value'
              851e 00e9  ld   $e9         ;0339 LSLW
              851f 00e9  ld   $e9         ;033a LSLW
              8520 00e9  ld   $e9         ;033b LSLW
              8521 00e9  ld   $e9         ;033c LSLW
              8522 002b  ld   $2b         ;033d STW
              8523 0034  ld   $34         ;033d 'i'
              8524 0021  ld   $21         ;033f LDW
              8525 003e  ld   $3e         ;033f 'Buffer'
              8526 00ad  ld   $ad         ;0341 PEEK
              8527 0093  ld   $93         ;0342 INC
              8528 003e  ld   $3e         ;0342 'Buffer'
              8529 00e6  ld   $e6         ;0344 SUBI
              852a 0030  ld   $30
              852b 0035  ld   $35         ;0346 BCC
              852c 0050  ld   $50         ;0347 LT
              852d 0068  ld   $68
              852e 00e6  ld   $e6         ;0349 SUBI
              852f 000a  ld   $0a
              8530 0035  ld   $35         ;034b BCC
              8531 0053  ld   $53         ;034c GE
              8532 0054  ld   $54
              8533 002b  ld   $2b         ;034e STW
              8534 0030  ld   $30         ;034e 'tmp'
              8535 00e3  ld   $e3         ;0350 ADDI
              8536 000a  ld   $0a
              8537 0099  ld   $99         ;0352 ADDW
              8538 0034  ld   $34         ;0352 'i'
              8539 0090  ld   $90         ;0354 BRA
              853a 0035  ld   $35
              853b 00e6  ld   $e6         ;0356 SUBI
              853c 0006  ld   $06
              853d 0082  ld   $82         ;0358 ANDI
              853e 001f  ld   $1f
              853f 0035  ld   $35         ;035a BCC
              8540 0056  ld   $56         ;035b LE
              8541 0068  ld   $68
              8542 00e6  ld   $e6         ;035d SUBI
              8543 0007  ld   $07
              8544 0035  ld   $35         ;035f BCC
              8545 0053  ld   $53         ;0360 GE
              8546 0068  ld   $68
              8547 002b  ld   $2b         ;0362 STW
              8548 0030  ld   $30         ;0362 'tmp'
              8549 00e3  ld   $e3         ;0364 ADDI
              854a 0010  ld   $10
              854b 0099  ld   $99         ;0366 ADDW
              854c 0034  ld   $34         ;0366 'i'
              854d 0090  ld   $90         ;0368 BRA
              854e 0035  ld   $35
              854f 0021  ld   $21         ;036a LDW
              8550 0030  ld   $30         ;036a 'tmp'
              8551 0035  ld   $35         ;036c BCC
              8552 003f  ld   $3f         ;036d EQ
              8553 00cd  ld   $cd
              8554 0021  ld   $21         ;036f LDW
              8555 003e  ld   $3e         ;036f 'Buffer'
              8556 00e6  ld   $e6         ;0371 SUBI
              8557 0002  ld   $02
              8558 002b  ld   $2b         ;0373 STW
              8559 003e  ld   $3e         ;0373 'Buffer'
              855a 0021  ld   $21         ;0375 LDW
              855b 0040  ld   $40         ;0375 'Mode'
              855c 0035  ld   $35         ;0377 BCC
              855d 0053  ld   $53         ;0378 GE
              855e 0084  ld   $84
              855f 0021  ld   $21         ;037a LDW
              8560 0044  ld   $44         ;037a 'Value'
              8561 00f0  ld   $f0         ;037c POKE
              8562 0046  ld   $46         ;037c 'Store'
              8563 0021  ld   $21         ;037e LDW
              8564 0046  ld   $46         ;037e 'Store'
              8565 00e3  ld   $e3         ;0380 ADDI
              8566 0001  ld   $01
              8567 002b  ld   $2b         ;0382 STW
              8568 0046  ld   $46         ;0382 'Store'
              8569 0090  ld   $90         ;0384 BRA
              856a 0007  ld   $07
              856b 0035  ld   $35         ;0386 BCC
              856c 0072  ld   $72         ;0387 NE
              856d 0091  ld   $91
              856e 00cf  ld   $cf         ;0389 CALL
              856f 003a  ld   $3a         ;0389 'CNewline'
              8570 0021  ld   $21         ;038b LDW
              8571 0044  ld   $44         ;038b 'Value'
              8572 002b  ld   $2b         ;038d STW
              8573 0046  ld   $46         ;038d 'Store'
              8574 00e6  ld   $e6         ;038f SUBI
              8575 0001  ld   $01
              8576 002b  ld   $2b         ;0391 STW
              8577 0042  ld   $42         ;0391 'Examine'
              8578 0021  ld   $21         ;0393 LDW
              8579 0042  ld   $42         ;0393 'Examine'
              857a 00b8  ld   $b8         ;0395 SUBW
              857b 0044  ld   $44         ;0395 'Value'
              857c 0035  ld   $35         ;0397 BCC
              857d 0053  ld   $53         ;0398 GE
              857e 00c7  ld   $c7
              857f 0021  ld   $21         ;039a LDW
              8580 0042  ld   $42         ;039a 'Examine'
              8581 00e3  ld   $e3         ;039c ADDI
              8582 0001  ld   $01
              8583 002b  ld   $2b         ;039e STW
              8584 0042  ld   $42         ;039e 'Examine'
              8585 0082  ld   $82         ;03a0 ANDI
              8586 0007  ld   $07
              8587 0035  ld   $35         ;03a2 BCC
              8588 0072  ld   $72         ;03a3 NE
              8589 00a5  ld   $a5
              858a 00cf  ld   $cf         ;03a5 CALL
              858b 003a  ld   $3a         ;03a5 'CNewline'
              858c 001a  ld   $1a         ;03a7 LD
              858d 0032  ld   $32         ;03a7 'Pos'
              858e 0035  ld   $35         ;03a9 BCC
              858f 0072  ld   $72         ;03aa NE
              8590 00ba  ld   $ba
              8591 0059  ld   $59         ;03ac LDI
              8592 0002  ld   $02
              8593 005e  ld   $5e         ;03ae ST
              8594 0032  ld   $32         ;03ae 'Pos'
              8595 001a  ld   $1a         ;03b0 LD
              8596 0043  ld   $43         ;03b0 'Examine'+1
              8597 00cf  ld   $cf         ;03b2 CALL
              8598 003c  ld   $3c         ;03b2 'PrintByte'
              8599 001a  ld   $1a         ;03b4 LD
              859a 0042  ld   $42         ;03b4 'Examine'
              859b 00cf  ld   $cf         ;03b6 CALL
              859c 003c  ld   $3c         ;03b6 'PrintByte'
              859d 0059  ld   $59         ;03b8 LDI
              859e 003a  ld   $3a
              859f 00cf  ld   $cf         ;03ba CALL
              85a0 0038  ld   $38         ;03ba 'PrintChar'
              85a1 0021  ld   $21         ;03bc LDW
              85a2 0032  ld   $32         ;03bc 'Pos'
              85a3 00e3  ld   $e3         ;03be ADDI
              85a4 0004  ld   $04
              85a5 002b  ld   $2b         ;03c0 STW
              85a6 0032  ld   $32         ;03c0 'Pos'
              85a7 0021  ld   $21         ;03c2 LDW
              85a8 0042  ld   $42         ;03c2 'Examine'
              85a9 00ad  ld   $ad         ;03c4 PEEK
              85aa 00cf  ld   $cf         ;03c5 CALL
              85ab 003c  ld   $3c         ;03c5 'PrintByte'
              85ac 0090  ld   $90         ;03c7 BRA
              85ad 0091  ld   $91
              85ae 0059  ld   $59         ;03c9 LDI
              85af 0000  ld   $00
              85b0 002b  ld   $2b         ;03cb STW
              85b1 0040  ld   $40         ;03cb 'Mode'
              85b2 0090  ld   $90         ;03cd BRA
              85b3 0007  ld   $07
              85b4 0059  ld   $59         ;03cf LDI
              85b5 005c  ld   $5c
              85b6 00cf  ld   $cf         ;03d1 CALL
              85b7 0038  ld   $38         ;03d1 'PrintChar'
              85b8 0063  ld   $63         ;03d3 POP
              85b9 00ff  ld   $ff         ;03d4 RET
              85ba 002b  ld   $2b         ;03d5 STW
              85bb 0048  ld   $48         ;03d5 'ProcessBuffer'
              85bc 0093  ld   $93         ;03d7 INC
              85bd 0032  ld   $32         ;03d7 'Pos'
              85be 0011  ld   $11         ;03d9 LDWI
              85bf 0020  ld   $20
              85c0 000f  ld   $0f
              85c1 002b  ld   $2b         ;03dc STW
              85c2 002a  ld   $2a
              85c3 005e  ld   $5e         ;03de ST
              85c4 0024  ld   $24
              85c5 00cf  ld   $cf         ;03e0 CALL
              85c6 003a  ld   $3a         ;03e0 'CNewline'
              85c7 0059  ld   $59         ;03e2 LDI
              85c8 002a  ld   $2a
              85c9 00cf  ld   $cf         ;03e4 CALL
              85ca 0038  ld   $38         ;03e4 'PrintChar'
              85cb 0021  ld   $21         ;03e6 LDW
              85cc 0030  ld   $30         ;03e6 'tmp'
              85cd 00ad  ld   $ad         ;03e8 PEEK
              85ce 0093  ld   $93         ;03e9 INC
              85cf 0030  ld   $30         ;03e9 'tmp'
              85d0 0035  ld   $35         ;03eb BCC
              85d1 0072  ld   $72         ;03ec NE
              85d2 00e2  ld   $e2
              85d3 0011  ld   $11         ;03ee LDWI
              85d4 0000  ld   $00
              85d5 0004  ld   $04
              85d6 00cf  ld   $cf         ;03f1 CALL
              85d7 0018  ld   $18         ;03f1 vAC
              85d8 0004  ld   $04         ;| RAM segment address (high byte first)
              85d9 0000  ld   $00         ;|
              85da 0072  ld   $72         ;| Length (1..256)
              85db 0059  ld   $59         ;0400 LDI
              85dc 0081  ld   $81
              85dd 002b  ld   $2b         ;0402 STW
              85de 003e  ld   $3e         ;0402 'Buffer'
              85df 00cf  ld   $cf         ;0404 CALL
              85e0 003a  ld   $3a         ;0404 'CNewline'
              85e1 0059  ld   $59         ;0406 LDI
              85e2 007f  ld   $7f
              85e3 005e  ld   $5e         ;0408 ST
              85e4 002b  ld   $2b
              85e5 00cf  ld   $cf         ;040a CALL
              85e6 0038  ld   $38         ;040a 'PrintChar'
              85e7 002b  ld   $2b         ;040c STW
              85e8 0032  ld   $32         ;040c 'Pos'
              85e9 001a  ld   $1a         ;040e LD
              85ea 000f  ld   $0f
              85eb 002b  ld   $2b         ;0410 STW
              85ec 0030  ld   $30         ;0410 'tmp'
              85ed 001a  ld   $1a         ;0412 LD
              85ee 000f  ld   $0f
              85ef 00f0  ld   $f0         ;0414 POKE
              85f0 003e  ld   $3e         ;0414 'Buffer'
              85f1 00fc  ld   $fc         ;0416 XORW
              85f2 0030  ld   $30         ;0416 'tmp'
              85f3 0035  ld   $35         ;0418 BCC
              85f4 0072  ld   $72         ;0419 NE
              85f5 001e  ld   $1e
              85f6 0021  ld   $21         ;041b LDW
              85f7 003e  ld   $3e         ;041b 'Buffer'
              85f8 00ad  ld   $ad         ;041d PEEK
              85f9 0090  ld   $90         ;041e BRA
              85fa 000e  ld   $0e
              85fb fe00  bra  ac          ;+-----------------------------------+
              85fc fcfd  bra  $85fd       ;|                                   |
              85fd 1418  ld   $18,y       ;| Trampoline for page $8500 lookups |
              85fe e006  jmp  y,$06       ;|                                   |
              85ff c218  st   [$18]       ;+-----------------------------------+
              8600 0021  ld   $21         ;0420 LDW
              8601 003e  ld   $3e         ;0420 'Buffer'
              8602 00ad  ld   $ad         ;0422 PEEK
              8603 008c  ld   $8c         ;0423 XORI
              8604 000a  ld   $0a
              8605 0035  ld   $35         ;0425 BCC
              8606 003f  ld   $3f         ;0426 EQ
              8607 0060  ld   $60
              8608 008c  ld   $8c         ;0428 XORI
              8609 0075  ld   $75
              860a 0035  ld   $35         ;042a BCC
              860b 0072  ld   $72         ;042b NE
              860c 0042  ld   $42
              860d 0059  ld   $59         ;042d LDI
              860e 0020  ld   $20
              860f 00cf  ld   $cf         ;042f CALL
              8610 0038  ld   $38         ;042f 'PrintChar'
              8611 002b  ld   $2b         ;0431 STW
              8612 0032  ld   $32         ;0431 'Pos'
              8613 001a  ld   $1a         ;0433 LD
              8614 0032  ld   $32         ;0433 'Pos'
              8615 00e6  ld   $e6         ;0435 SUBI
              8616 0006  ld   $06
              8617 0035  ld   $35         ;0437 BCC
              8618 0050  ld   $50         ;0438 LT
              8619 0040  ld   $40
              861a 005e  ld   $5e         ;043a ST
              861b 0032  ld   $32         ;043a 'Pos'
              861c 0021  ld   $21         ;043c LDW
              861d 003e  ld   $3e         ;043c 'Buffer'
              861e 00e6  ld   $e6         ;043e SUBI
              861f 0001  ld   $01
              8620 002b  ld   $2b         ;0440 STW
              8621 003e  ld   $3e         ;0440 'Buffer'
              8622 0090  ld   $90         ;0442 BRA
              8623 0004  ld   $04
              8624 00e6  ld   $e6         ;0444 SUBI
              8625 0060  ld   $60
              8626 0035  ld   $35         ;0446 BCC
              8627 0053  ld   $53         ;0447 GE
              8628 0004  ld   $04
              8629 001a  ld   $1a         ;0449 LD
              862a 0032  ld   $32         ;0449 'Pos'
              862b 008c  ld   $8c         ;044b XORI
              862c 0096  ld   $96
              862d 0035  ld   $35         ;044d BCC
              862e 0072  ld   $72         ;044e NE
              862f 0057  ld   $57
              8630 0059  ld   $59         ;0450 LDI
              8631 005c  ld   $5c
              8632 00cf  ld   $cf         ;0452 CALL
              8633 0038  ld   $38         ;0452 'PrintChar'
              8634 0011  ld   $11         ;0454 LDWI
              8635 0000  ld   $00
              8636 0004  ld   $04
              8637 00cf  ld   $cf         ;0457 CALL
              8638 0018  ld   $18         ;0457 vAC
              8639 0021  ld   $21         ;0459 LDW
              863a 003e  ld   $3e         ;0459 'Buffer'
              863b 00ad  ld   $ad         ;045b PEEK
              863c 00cf  ld   $cf         ;045c CALL
              863d 0038  ld   $38         ;045c 'PrintChar'
              863e 0093  ld   $93         ;045e INC
              863f 003e  ld   $3e         ;045e 'Buffer'
              8640 0090  ld   $90         ;0460 BRA
              8641 0004  ld   $04
              8642 00f0  ld   $f0         ;0462 POKE
              8643 003e  ld   $3e         ;0462 'Buffer'
              8644 002b  ld   $2b         ;0464 STW
              8645 0040  ld   $40         ;0464 'Mode'
              8646 0059  ld   $59         ;0466 LDI
              8647 0020  ld   $20
              8648 00cf  ld   $cf         ;0468 CALL
              8649 0038  ld   $38         ;0468 'PrintChar'
              864a 0059  ld   $59         ;046a LDI
              864b 000f  ld   $0f
              864c 005e  ld   $5e         ;046c ST
              864d 002b  ld   $2b
              864e 00cf  ld   $cf         ;046e CALL
              864f 0048  ld   $48         ;046e 'ProcessBuffer'
              8650 0090  ld   $90         ;0470 BRA
              8651 00fe  ld   $fe
              8652 0000  ld   $00         ;End of Apps/WozMon/WozMon_v2.gcl, size 608
                                          ;+-----------------------------------+
                                          ;| Apps/Apple-1/Apple-1_v2.gt1       |
                                          ;+-----------------------------------+
              8653 dc57  st   $57,[y,x++] ;'W'
              8654 dc6f  st   $6f,[y,x++] ;'o'
              8655 dc7a  st   $7a,[y,x++] ;'z'
              8656 dc4d  st   $4d,[y,x++] ;'M'
              8657 dc6f  st   $6f,[y,x++] ;'o'
              8658 dc6e  st   $6e,[y,x++] ;'n'
              8659 dc00  st   $00,[y,x++] ;'\x00'
              865a dc00  st   $00,[y,x++] ;'\x00'
              865b 00f3  ld   $f3
              865c c218  st   [$18]
              865d 0083  ld   $83
              865e 14df  ld   $df,y
              865f e0ac  jmp  y,$ac
              8660 c219  st   [$19]
Apple1:       8661 0002  ld   $02
              8662 0000  ld   $00
              8663 0054  ld   $54
              8664 001a  ld   $1a
              8665 0021  ld   $21
              8666 00e6  ld   $e6
              8667 0040  ld   $40
              8668 0035  ld   $35
              8669 0053  ld   $53
              866a 000b  ld   $0b
              866b 0021  ld   $21
              866c 000e  ld   $0e
              866d 00f3  ld   $f3
              866e 0017  ld   $17
              866f 0090  ld   $90
              8670 0005  ld   $05
              8671 0059  ld   $59
              8672 00a0  ld   $a0
              8673 002b  ld   $2b
              8674 0024  ld   $24
              8675 0011  ld   $11
              8676 0060  ld   $60
              8677 007e  ld   $7e
              8678 002b  ld   $2b
              8679 0026  ld   $26
              867a 0011  ld   $11
              867b 0003  ld   $03
              867c 000b  ld   $0b
              867d 002b  ld   $2b
              867e 0022  ld   $22
              867f 00b4  ld   $b4
              8680 00f3  ld   $f3
              8681 0011  ld   $11
              8682 00ee  ld   $ee
              8683 0001  ld   $01
              8684 002b  ld   $2b
              8685 007a  ld   $7a
              8686 0059  ld   $59
              8687 007e  ld   $7e
              8688 00f0  ld   $f0
              8689 007a  ld   $7a
              868a 001a  ld   $1a
              868b 007a  ld   $7a
              868c 00e6  ld   $e6
              868d 0002  ld   $02
              868e 005e  ld   $5e
              868f 007a  ld   $7a
              8690 0035  ld   $35
              8691 0053  ld   $53
              8692 0020  ld   $20
              8693 0011  ld   $11
              8694 0001  ld   $01
              8695 0001  ld   $01
              8696 002b  ld   $2b
              8697 007a  ld   $7a
              8698 0059  ld   $59
              8699 0060  ld   $60
              869a 00f0  ld   $f0
              869b 007a  ld   $7a
              869c 0011  ld   $11
              869d 00ff  ld   $ff
              869e 0010  ld   $10
              869f 002b  ld   $2b
              86a0 007a  ld   $7a
              86a1 0011  ld   $11
              86a2 00f6  ld   $f6
              86a3 0001  ld   $01
              86a4 002b  ld   $2b
              86a5 007c  ld   $7c
              86a6 0011  ld   $11
              86a7 0000  ld   $00
              86a8 005e  ld   $5e
              86a9 00f3  ld   $f3
              86aa 007c  ld   $7c
              86ab 0059  ld   $59
              86ac 00fe  ld   $fe
              86ad 005e  ld   $5e
              86ae 000e  ld   $0e
              86af 0011  ld   $11
              86b0 0000  ld   $00
              86b1 005f  ld   $5f
              86b2 002b  ld   $2b
              86b3 001a  ld   $1a
              86b4 0011  ld   $11
              86b5 00ac  ld   $ac
              86b6 005e  ld   $5e
              86b7 00ff  ld   $ff
              86b8 0003  ld   $03
              86b9 0000  ld   $00
              86ba 00cf  ld   $cf
              86bb 00a2  ld   $a2
              86bc 0024  ld   $24
              86bd 00bd  ld   $bd
              86be 0093  ld   $93
              86bf 0003  ld   $03
              86c0 0020  ld   $20
              86c1 00ef  ld   $ef
              86c2 00ff  ld   $ff
              86c3 00ca  ld   $ca
              86c4 00d0  ld   $d0
              86c5 00f7  ld   $f7
              86c6 0086  ld   $86
              86c7 00e2  ld   $e2
              86c8 00e6  ld   $e6
              86c9 00e3  ld   $e3
              86ca 00d0  ld   $d0
              86cb 0002  ld   $02
              86cc 00e6  ld   $e6
              86cd 00e4  ld   $e4
              86ce 00ad  ld   $ad
              86cf 0011  ld   $11
              86d0 00d0  ld   $d0
              86d1 0010  ld   $10
              86d2 00f5  ld   $f5
              86d3 0020  ld   $20
              86d4 00c6  ld   $c6
              86d5 0003  ld   $03
              86d6 00e6  ld   $e6
              86d7 00e2  ld   $e2
              86d8 00a5  ld   $a5
              86d9 00e2  ld   $e2
              86da 0029  ld   $29
              86db 000f  ld   $0f
              86dc 00c9  ld   $c9
              86dd 000a  ld   $0a
              86de 00b0  ld   $b0
              86df 00f6  ld   $f6
              86e0 0020  ld   $20
              86e1 00c1  ld   $c1
              86e2 0003  ld   $03
              86e3 00a5  ld   $a5
              86e4 00e2  ld   $e2
              86e5 0020  ld   $20
              86e6 00dc  ld   $dc
              86e7 00ff  ld   $ff
              86e8 00a9  ld   $a9
              86e9 00a0  ld   $a0
              86ea 00a8  ld   $a8
              86eb 0020  ld   $20
              86ec 00ef  ld   $ef
              86ed 00ff  ld   $ff
              86ee 00a5  ld   $a5
              86ef 00e3  ld   $e3
              86f0 0085  ld   $85
              86f1 00e5  ld   $e5
              86f2 00a5  ld   $a5
              86f3 00e4  ld   $e4
              86f4 00a2  ld   $a2
              86f5 0005  ld   $05
              86f6 0094  ld   $94
              86f7 00e5  ld   $e5
              86f8 00a0  ld   $a0
              86f9 0003  ld   $03
              86fa 004a  ld   $4a
              86fb fe00  bra  ac          ;+-----------------------------------+
              86fc fcfd  bra  $86fd       ;|                                   |
              86fd 1418  ld   $18,y       ;| Trampoline for page $8600 lookups |
              86fe e006  jmp  y,$06       ;|                                   |
              86ff c218  st   [$18]       ;+-----------------------------------+
              8700 0026  ld   $26
              8701 00e5  ld   $e5
              8702 0036  ld   $36
              8703 00e5  ld   $e5
              8704 0088  ld   $88
              8705 00d0  ld   $d0
              8706 00f8  ld   $f8
              8707 00ca  ld   $ca
              8708 00d0  ld   $d0
              8709 00f1  ld   $f1
              870a 0020  ld   $20
              870b 00c6  ld   $c6
              870c 0003  ld   $03
              870d 0020  ld   $20
              870e 00ef  ld   $ef
              870f 00ff  ld   $ff
              8710 0049  ld   $49
              8711 00b0  ld   $b0
              8712 00c9  ld   $c9
              8713 0008  ld   $08
              8714 00b0  ld   $b0
              8715 00cf  ld   $cf
              8716 0095  ld   $95
              8717 00ef  ld   $ef
              8718 00ca  ld   $ca
              8719 00e0  ld   $e0
              871a 00fb  ld   $fb
              871b 00d0  ld   $d0
              871c 00ed  ld   $ed
              871d 00a0  ld   $a0
              871e 00fb  ld   $fb
              871f 00a9  ld   $a9
              8720 00a0  ld   $a0
              8721 0020  ld   $20
              8722 00ef  ld   $ef
              8723 00ff  ld   $ff
              8724 00b5  ld   $b5
              8725 00f0  ld   $f0
              8726 00d5  ld   $d5
              8727 00eb  ld   $eb
              8728 00d0  ld   $d0
              8729 000d  ld   $0d
              872a 0094  ld   $94
              872b 00eb  ld   $eb
              872c 00a9  ld   $a9
              872d 00ab  ld   $ab
              872e 0095  ld   $95
              872f 00f0  ld   $f0
              8730 00c8  ld   $c8
              8731 00d0  ld   $d0
              8732 00ee  ld   $ee
              8733 00a2  ld   $a2
              8734 002d  ld   $2d
              8735 00d0  ld   $d0
              8736 008b  ld   $8b
              8737 00e8  ld   $e8
              8738 00d0  ld   $d0
              8739 00ea  ld   $ea
              873a 00a0  ld   $a0
              873b 00fb  ld   $fb
              873c 00b6  ld   $b6
              873d 00f0  ld   $f0
              873e 008a  ld   $8a
              873f 00a2  ld   $a2
              8740 00fb  ld   $fb
              8741 00d5  ld   $d5
              8742 00eb  ld   $eb
              8743 00d0  ld   $d0
              8744 0007  ld   $07
              8745 0094  ld   $94
              8746 00eb  ld   $eb
              8747 00a9  ld   $a9
              8748 00ad  ld   $ad
              8749 0020  ld   $20
              874a 00ef  ld   $ef
              874b 00ff  ld   $ff
              874c 00e8  ld   $e8
              874d 00d0  ld   $d0
              874e 00f2  ld   $f2
              874f 00c8  ld   $c8
              8750 00d0  ld   $d0
              8751 00ea  ld   $ea
              8752 00f0  ld   $f0
              8753 0087  ld   $87
              8754 00bf  ld   $bf
              8755 00d9  ld   $d9
              8756 00c4  ld   $c4
              8757 00c1  ld   $c1
              8758 00c5  ld   $c5
              8759 00d2  ld   $d2
              875a 008d  ld   $8d
              875b 008d  ld   $8d
              875c 00b7  ld   $b7
              875d 00ad  ld   $ad
              875e 00b0  ld   $b0
              875f 00a0  ld   $a0
              8760 00cd  ld   $cd
              8761 00cf  ld   $cf
              8762 00d2  ld   $d2
              8763 00c6  ld   $c6
              8764 00a0  ld   $a0
              8765 00d3  ld   $d3
              8766 00d4  ld   $d4
              8767 00c9  ld   $c9
              8768 00c7  ld   $c7
              8769 00c9  ld   $c9
              876a 00c4  ld   $c4
              876b 00a0  ld   $a0
              876c 00c5  ld   $c5
              876d 00d6  ld   $d6
              876e 00c9  ld   $c9
              876f 00c6  ld   $c6
              8770 00a0  ld   $a0
              8771 00d3  ld   $d3
              8772 00d3  ld   $d3
              8773 00c5  ld   $c5
              8774 00d5  ld   $d5
              8775 00c7  ld   $c7
              8776 008d  ld   $8d
              8777 008d  ld   $8d
              8778 00ce  ld   $ce
              8779 00c9  ld   $c9
              877a 00d7  ld   $d7
              877b 00a0  ld   $a0
              877c 00d5  ld   $d5
              877d 00cf  ld   $cf
              877e 00d9  ld   $d9
              877f 00a0  ld   $a0
              8780 00ab  ld   $ab
              8781 00a9  ld   $a9
              8782 008d  ld   $8d
              8783 004c  ld   $4c
              8784 00ef  ld   $ef
              8785 00ff  ld   $ff
              8786 00ad  ld   $ad
              8787 0011  ld   $11
              8788 00d0  ld   $d0
              8789 0010  ld   $10
              878a 00fb  ld   $fb
              878b 00ad  ld   $ad
              878c 0010  ld   $10
              878d 00d0  ld   $d0
              878e 0060  ld   $60
              878f 0004  ld   $04
              8790 0000  ld   $00
              8791 0000  ld   $00
              8792 00d8  ld   $d8
              8793 00a2  ld   $a2
              8794 00ff  ld   $ff
              8795 009a  ld   $9a
              8796 00a9  ld   $a9
              8797 002a  ld   $2a
              8798 0085  ld   $85
              8799 005a  ld   $5a
              879a 0020  ld   $20
              879b 0055  ld   $55
              879c 0005  ld   $05
              879d 00a9  ld   $a9
              879e 008b  ld   $8b
              879f 0085  ld   $85
              87a0 0058  ld   $58
              87a1 00a9  ld   $a9
              87a2 0006  ld   $06
              87a3 0085  ld   $85
              87a4 0059  ld   $59
              87a5 0020  ld   $20
              87a6 00ad  ld   $ad
              87a7 0004  ld   $04
              87a8 0020  ld   $20
              87a9 00cb  ld   $cb
              87aa 0004  ld   $04
              87ab 00d0  ld   $d0
              87ac 000e  ld   $0e
              87ad 00a9  ld   $a9
              87ae 00be  ld   $be
              87af 0085  ld   $85
              87b0 0058  ld   $58
              87b1 00a9  ld   $a9
              87b2 0006  ld   $06
              87b3 0085  ld   $85
              87b4 0059  ld   $59
              87b5 0020  ld   $20
              87b6 00ad  ld   $ad
              87b7 0004  ld   $04
              87b8 0020  ld   $20
              87b9 00e8  ld   $e8
              87ba 0004  ld   $04
              87bb 0020  ld   $20
              87bc 001f  ld   $1f
              87bd 0006  ld   $06
              87be 0020  ld   $20
              87bf 006a  ld   $6a
              87c0 0005  ld   $05
              87c1 0020  ld   $20
              87c2 00e8  ld   $e8
              87c3 0004  ld   $04
              87c4 0020  ld   $20
              87c5 00a8  ld   $a8
              87c6 0004  ld   $04
              87c7 0020  ld   $20
              87c8 0009  ld   $09
              87c9 0005  ld   $05
              87ca 0020  ld   $20
              87cb 0027  ld   $27
              87cc 0005  ld   $05
              87cd 0020  ld   $20
              87ce 00bb  ld   $bb
              87cf 0004  ld   $04
              87d0 00c9  ld   $c9
              87d1 0051  ld   $51
              87d2 00d0  ld   $d0
              87d3 0003  ld   $03
              87d4 004c  ld   $4c
              87d5 009a  ld   $9a
              87d6 0004  ld   $04
              87d7 0020  ld   $20
              87d8 009e  ld   $9e
              87d9 0005  ld   $05
              87da 00a5  ld   $a5
              87db 0051  ld   $51
              87dc 00c9  ld   $c9
              87dd 0010  ld   $10
              87de 00d0  ld   $d0
              87df 000a  ld   $0a
              87e0 00c6  ld   $c6
              87e1 005d  ld   $5d
              87e2 00f0  ld   $f0
              87e3 00b6  ld   $b6
              87e4 0020  ld   $20
              87e5 0038  ld   $38
              87e6 0005  ld   $05
              87e7 004c  ld   $4c
              87e8 003b  ld   $3b
              87e9 0004  ld   $04
              87ea 0020  ld   $20
              87eb 00e8  ld   $e8
              87ec 0004  ld   $04
              87ed 0020  ld   $20
              87ee 00a8  ld   $a8
              87ef 0004  ld   $04
              87f0 0020  ld   $20
              87f1 000c  ld   $0c
              87f2 0006  ld   $06
              87f3 00f0  ld   $f0
              87f4 0003  ld   $03
              87f5 004c  ld   $4c
              87f6 0035  ld   $35
              87f7 0004  ld   $04
              87f8 0020  ld   $20
              87f9 0043  ld   $43
              87fa 0005  ld   $05
              87fb fe00  bra  ac          ;+-----------------------------------+
              87fc fcfd  bra  $87fd       ;|                                   |
              87fd 1418  ld   $18,y       ;| Trampoline for page $8700 lookups |
              87fe e006  jmp  y,$06       ;|                                   |
              87ff c218  st   [$18]       ;+-----------------------------------+
              8800 00a9  ld   $a9
              8801 008e  ld   $8e
              8802 0085  ld   $85
              8803 0058  ld   $58
              8804 00a9  ld   $a9
              8805 0007  ld   $07
              8806 0085  ld   $85
              8807 0059  ld   $59
              8808 0020  ld   $20
              8809 00ad  ld   $ad
              880a 0004  ld   $04
              880b 00a5  ld   $a5
              880c 0055  ld   $55
              880d 0020  ld   $20
              880e 00ef  ld   $ef
              880f 00ff  ld   $ff
              8810 00a9  ld   $a9
              8811 00a3  ld   $a3
              8812 0085  ld   $85
              8813 0058  ld   $58
              8814 00a9  ld   $a9
              8815 0007  ld   $07
              8816 0085  ld   $85
              8817 0059  ld   $59
              8818 0020  ld   $20
              8819 00ad  ld   $ad
              881a 0004  ld   $04
              881b 0020  ld   $20
              881c 0027  ld   $27
              881d 0005  ld   $05
              881e 00a9  ld   $a9
              881f 00bb  ld   $bb
              8820 0085  ld   $85
              8821 0058  ld   $58
              8822 00a9  ld   $a9
              8823 0007  ld   $07
              8824 0085  ld   $85
              8825 0059  ld   $59
              8826 0020  ld   $20
              8827 00ad  ld   $ad
              8828 0004  ld   $04
              8829 0020  ld   $20
              882a 00cb  ld   $cb
              882b 0004  ld   $04
              882c 00d0  ld   $d0
              882d 0003  ld   $03
              882e 004c  ld   $4c
              882f 0029  ld   $29
              8830 0004  ld   $04
              8831 00a9  ld   $a9
              8832 00d0  ld   $d0
              8833 0085  ld   $85
              8834 0058  ld   $58
              8835 00a9  ld   $a9
              8836 0007  ld   $07
              8837 0085  ld   $85
              8838 0059  ld   $59
              8839 0020  ld   $20
              883a 00ad  ld   $ad
              883b 0004  ld   $04
              883c 004c  ld   $4c
              883d 0000  ld   $00
              883e 00c1  ld   $c1
              883f 00a9  ld   $a9
              8840 000d  ld   $0d
              8841 004c  ld   $4c
              8842 00ef  ld   $ef
              8843 00ff  ld   $ff
              8844 00a0  ld   $a0
              8845 0000  ld   $00
              8846 00b1  ld   $b1
              8847 0058  ld   $58
              8848 00f0  ld   $f0
              8849 0007  ld   $07
              884a 0020  ld   $20
              884b 00ef  ld   $ef
              884c 00ff  ld   $ff
              884d 00c8  ld   $c8
              884e 004c  ld   $4c
              884f 00af  ld   $af
              8850 0004  ld   $04
              8851 0060  ld   $60
              8852 0020  ld   $20
              8853 00de  ld   $de
              8854 0004  ld   $04
              8855 00ad  ld   $ad
              8856 0011  ld   $11
              8857 00d0  ld   $d0
              8858 0010  ld   $10
              8859 00f8  ld   $f8
              885a 00ad  ld   $ad
              885b 0010  ld   $10
              885c 00d0  ld   $d0
              885d 0029  ld   $29
              885e 007f  ld   $7f
              885f 004c  ld   $4c
              8860 00ef  ld   $ef
              8861 00ff  ld   $ff
              8862 0020  ld   $20
              8863 00bb  ld   $bb
              8864 0004  ld   $04
              8865 00c9  ld   $c9
              8866 004e  ld   $4e
              8867 00f0  ld   $f0
              8868 000a  ld   $0a
              8869 00c9  ld   $c9
              886a 0059  ld   $59
              886b 00f0  ld   $f0
              886c 0007  ld   $07
              886d 0020  ld   $20
              886e 0038  ld   $38
              886f 0005  ld   $05
              8870 004c  ld   $4c
              8871 00cb  ld   $cb
              8872 0004  ld   $04
              8873 00ba  ld   $ba
              8874 0060  ld   $60
              8875 00a5  ld   $a5
              8876 005a  ld   $5a
              8877 000a  ld   $0a
              8878 0090  ld   $90
              8879 0002  ld   $02
              887a 0049  ld   $49
              887b 00a9  ld   $a9
              887c 0085  ld   $85
              887d 005a  ld   $5a
              887e 0060  ld   $60
              887f 0020  ld   $20
              8880 00a8  ld   $a8
              8881 0004  ld   $04
              8882 0020  ld   $20
              8883 00a8  ld   $a8
              8884 0004  ld   $04
              8885 00a2  ld   $a2
              8886 0000  ld   $00
              8887 00a0  ld   $a0
              8888 0004  ld   $04
              8889 00b5  ld   $b5
              888a 0040  ld   $40
              888b 0020  ld   $20
              888c 00ef  ld   $ef
              888d 00ff  ld   $ff
              888e 0088  ld   $88
              888f 00d0  ld   $d0
              8890 0005  ld   $05
              8891 00a0  ld   $a0
              8892 0004  ld   $04
              8893 0020  ld   $20
              8894 00a8  ld   $a8
              8895 0004  ld   $04
              8896 00e8  ld   $e8
              8897 0005  ld   $05
              8898 0000  ld   $00
              8899 0000  ld   $00
              889a 00e0  ld   $e0
              889b 0010  ld   $10
              889c 00d0  ld   $d0
              889d 00ee  ld   $ee
              889e 00a9  ld   $a9
              889f 0008  ld   $08
              88a0 0085  ld   $85
              88a1 005d  ld   $5d
              88a2 0060  ld   $60
              88a3 00e6  ld   $e6
              88a4 0056  ld   $56
              88a5 00a5  ld   $a5
              88a6 0056  ld   $56
              88a7 0029  ld   $29
              88a8 000f  ld   $0f
              88a9 00c9  ld   $c9
              88aa 000a  ld   $0a
              88ab 00b0  ld   $b0
              88ac 00f6  ld   $f6
              88ad 00a5  ld   $a5
              88ae 0056  ld   $56
              88af 0038  ld   $38
              88b0 00e9  ld   $e9
              88b1 00a0  ld   $a0
              88b2 0090  ld   $90
              88b3 000c  ld   $0c
              88b4 0085  ld   $85
              88b5 0056  ld   $56
              88b6 00e6  ld   $e6
              88b7 0057  ld   $57
              88b8 00a5  ld   $a5
              88b9 0057  ld   $57
              88ba 0029  ld   $29
              88bb 000f  ld   $0f
              88bc 00c9  ld   $c9
              88bd 000a  ld   $0a
              88be 00b0  ld   $b0
              88bf 00f6  ld   $f6
              88c0 0060  ld   $60
              88c1 00a5  ld   $a5
              88c2 0057  ld   $57
              88c3 00f0  ld   $f0
              88c4 0003  ld   $03
              88c5 0020  ld   $20
              88c6 00dc  ld   $dc
              88c7 00ff  ld   $ff
              88c8 00a5  ld   $a5
              88c9 0056  ld   $56
              88ca 0020  ld   $20
              88cb 00dc  ld   $dc
              88cc 00ff  ld   $ff
              88cd 00a9  ld   $a9
              88ce 0020  ld   $20
              88cf 004c  ld   $4c
              88d0 00ef  ld   $ef
              88d1 00ff  ld   $ff
              88d2 00a9  ld   $a9
              88d3 007a  ld   $7a
              88d4 0085  ld   $85
              88d5 0058  ld   $58
              88d6 00a9  ld   $a9
              88d7 0007  ld   $07
              88d8 0085  ld   $85
              88d9 0059  ld   $59
              88da 004c  ld   $4c
              88db 00ad  ld   $ad
              88dc 0004  ld   $04
              88dd 00a5  ld   $a5
              88de 005a  ld   $5a
              88df 0029  ld   $29
              88e0 0038  ld   $38
              88e1 00aa  ld   $aa
              88e2 00bd  ld   $bd
              88e3 0049  ld   $49
              88e4 0006  ld   $06
              88e5 00f0  ld   $f0
              88e6 0007  ld   $07
              88e7 0020  ld   $20
              88e8 00ef  ld   $ef
              88e9 00ff  ld   $ff
              88ea 00e8  ld   $e8
              88eb 004c  ld   $4c
              88ec 0048  ld   $48
              88ed 0005  ld   $05
              88ee 0060  ld   $60
              88ef 00a9  ld   $a9
              88f0 0020  ld   $20
              88f1 0085  ld   $85
              88f2 004f  ld   $4f
              88f3 00a9  ld   $a9
              88f4 000f  ld   $0f
              88f5 0085  ld   $85
              88f6 0052  ld   $52
              88f7 00a2  ld   $a2
              88f8 000f  ld   $0f
              88f9 00a0  ld   $a0
              88fa 004f  ld   $4f
              88fb fe00  bra  ac          ;+-----------------------------------+
              88fc fcfd  bra  $88fd       ;|                                   |
              88fd 1418  ld   $18,y       ;| Trampoline for page $8800 lookups |
              88fe e006  jmp  y,$06       ;|                                   |
              88ff c218  st   [$18]       ;+-----------------------------------+
              8900 0098  ld   $98
              8901 009d  ld   $9d
              8902 003f  ld   $3f
              8903 0000  ld   $00
              8904 0088  ld   $88
              8905 00ca  ld   $ca
              8906 00d0  ld   $d0
              8907 00f8  ld   $f8
              8908 0060  ld   $60
              8909 00a9  ld   $a9
              890a 0000  ld   $00
              890b 0085  ld   $85
              890c 0056  ld   $56
              890d 0085  ld   $85
              890e 0057  ld   $57
              890f 0085  ld   $85
              8910 005c  ld   $5c
              8911 00a6  ld   $a6
              8912 0055  ld   $55
              8913 00bd  ld   $bd
              8914 0013  ld   $13
              8915 0006  ld   $06
              8916 0085  ld   $85
              8917 005b  ld   $5b
              8918 0020  ld   $20
              8919 00de  ld   $de
              891a 0004  ld   $04
              891b 00a5  ld   $a5
              891c 005a  ld   $5a
              891d 0029  ld   $29
              891e 000f  ld   $0f
              891f 0018  ld   $18
              8920 0069  ld   $69
              8921 0041  ld   $41
              8922 00c5  ld   $c5
              8923 005c  ld   $5c
              8924 00f0  ld   $f0
              8925 00f2  ld   $f2
              8926 0020  ld   $20
              8927 009e  ld   $9e
              8928 0005  ld   $05
              8929 00a5  ld   $a5
              892a 0051  ld   $51
              892b 00c9  ld   $c9
              892c 0010  ld   $10
              892d 00f0  ld   $f0
              892e 00e9  ld   $e9
              892f 00a5  ld   $a5
              8930 0050  ld   $50
              8931 0085  ld   $85
              8932 005c  ld   $5c
              8933 00c6  ld   $c6
              8934 005b  ld   $5b
              8935 00d0  ld   $d0
              8936 00e1  ld   $e1
              8937 0020  ld   $20
              8938 000c  ld   $0c
              8939 0006  ld   $06
              893a 00f0  ld   $f0
              893b 00cd  ld   $cd
              893c 0060  ld   $60
              893d 0085  ld   $85
              893e 0050  ld   $50
              893f 00c9  ld   $c9
              8940 0020  ld   $20
              8941 00f0  ld   $f0
              8942 003c  ld   $3c
              8943 00a2  ld   $a2
              8944 0000  ld   $00
              8945 00b5  ld   $b5
              8946 0040  ld   $40
              8947 00c5  ld   $c5
              8948 0050  ld   $50
              8949 00f0  ld   $f0
              894a 0008  ld   $08
              894b 00e8  ld   $e8
              894c 00e0  ld   $e0
              894d 0010  ld   $10
              894e 00d0  ld   $d0
              894f 00f5  ld   $f5
              8950 004c  ld   $4c
              8951 00e0  ld   $e0
              8952 0005  ld   $05
              8953 0086  ld   $86
              8954 0051  ld   $51
              8955 008a  ld   $8a
              8956 0029  ld   $29
              8957 000c  ld   $0c
              8958 0085  ld   $85
              8959 0053  ld   $53
              895a 00a5  ld   $a5
              895b 0052  ld   $52
              895c 0029  ld   $29
              895d 000c  ld   $0c
              895e 00c5  ld   $c5
              895f 0053  ld   $53
              8960 00d0  ld   $d0
              8961 0010  ld   $10
              8962 008a  ld   $8a
              8963 0038  ld   $38
              8964 00e5  ld   $e5
              8965 0052  ld   $52
              8966 0010  ld   $10
              8967 0005  ld   $05
              8968 00a9  ld   $a9
              8969 00ff  ld   $ff
              896a 004c  ld   $4c
              896b 00f2  ld   $f2
              896c 0005  ld   $05
              896d 00a9  ld   $a9
              896e 0001  ld   $01
              896f 004c  ld   $4c
              8970 00f2  ld   $f2
              8971 0005  ld   $05
              8972 008a  ld   $8a
              8973 0029  ld   $29
              8974 0003  ld   $03
              8975 0085  ld   $85
              8976 0053  ld   $53
              8977 00a5  ld   $a5
              8978 0052  ld   $52
              8979 0029  ld   $29
              897a 0003  ld   $03
              897b 00c5  ld   $c5
              897c 0053  ld   $53
              897d 00f0  ld   $f0
              897e 0005  ld   $05
              897f 00a2  ld   $a2
              8980 0010  ld   $10
              8981 0086  ld   $86
              8982 0051  ld   $51
              8983 0060  ld   $60
              8984 008a  ld   $8a
              8985 0038  ld   $38
              8986 00e5  ld   $e5
              8987 0052  ld   $52
              8988 0010  ld   $10
              8989 0005  ld   $05
              898a 00a9  ld   $a9
              898b 00fc  ld   $fc
              898c 004c  ld   $4c
              898d 00f2  ld   $f2
              898e 0005  ld   $05
              898f 00a9  ld   $a9
              8990 0004  ld   $04
              8991 0085  ld   $85
              8992 0054  ld   $54
              8993 00a5  ld   $a5
              8994 0052  ld   $52
              8995 00aa  ld   $aa
              8996 0018  ld   $18
              8997 0065  ld   $65
              8998 0054  ld   $54
              8999 00a8  ld   $a8
              899a 00b9  ld   $b9
              899b 0040  ld   $40
              899c 0000  ld   $00
              899d 0095  ld   $95
              899e 0040  ld   $40
              899f 0006  ld   $06
              89a0 0000  ld   $00
              89a1 0000  ld   $00
              89a2 00a9  ld   $a9
              89a3 0020  ld   $20
              89a4 0099  ld   $99
              89a5 0040  ld   $40
              89a6 0000  ld   $00
              89a7 0084  ld   $84
              89a8 0052  ld   $52
              89a9 00c4  ld   $c4
              89aa 0051  ld   $51
              89ab 00d0  ld   $d0
              89ac 00e9  ld   $e9
              89ad 0060  ld   $60
              89ae 00a2  ld   $a2
              89af 000f  ld   $0f
              89b0 00a9  ld   $a9
              89b1 004f  ld   $4f
              89b2 0085  ld   $85
              89b3 0053  ld   $53
              89b4 00bd  ld   $bd
              89b5 003f  ld   $3f
              89b6 0000  ld   $00
              89b7 00c5  ld   $c5
              89b8 0053  ld   $53
              89b9 00d0  ld   $d0
              89ba 0005  ld   $05
              89bb 00c6  ld   $c6
              89bc 0053  ld   $53
              89bd 00ca  ld   $ca
              89be 00d0  ld   $d0
              89bf 00f4  ld   $f4
              89c0 0060  ld   $60
              89c1 00a9  ld   $a9
              89c2 0060  ld   $60
              89c3 0085  ld   $85
              89c4 0058  ld   $58
              89c5 00a9  ld   $a9
              89c6 0007  ld   $07
              89c7 0085  ld   $85
              89c8 0059  ld   $59
              89c9 0020  ld   $20
              89ca 00ad  ld   $ad
              89cb 0004  ld   $04
              89cc 0020  ld   $20
              89cd 00bb  ld   $bb
              89ce 0004  ld   $04
              89cf 0085  ld   $85
              89d0 0055  ld   $55
              89d1 00c9  ld   $c9
              89d2 0031  ld   $31
              89d3 0010  ld   $10
              89d4 0003  ld   $03
              89d5 004c  ld   $4c
              89d6 003e  ld   $3e
              89d7 0006  ld   $06
              89d8 00a9  ld   $a9
              89d9 0035  ld   $35
              89da 0038  ld   $38
              89db 00e5  ld   $e5
              89dc 0055  ld   $55
              89dd 0030  ld   $30
              89de 0001  ld   $01
              89df 0060  ld   $60
              89e0 0020  ld   $20
              89e1 0038  ld   $38
              89e2 0005  ld   $05
              89e3 004c  ld   $4c
              89e4 002a  ld   $2a
              89e5 0006  ld   $06
              89e6 0003  ld   $03
              89e7 0009  ld   $09
              89e8 0013  ld   $13
              89e9 0023  ld   $23
              89ea 00ff  ld   $ff
              89eb 0048  ld   $48
              89ec 004f  ld   $4f
              89ed 004f  ld   $4f
              89ee 0052  ld   $52
              89ef 0041  ld   $41
              89f0 0059  ld   $59
              89f1 0021  ld   $21
              89f2 0000  ld   $00
              89f3 0048  ld   $48
              89f4 0055  ld   $55
              89f5 005a  ld   $5a
              89f6 005a  ld   $5a
              89f7 0041  ld   $41
              89f8 0048  ld   $48
              89f9 0021  ld   $21
              89fa 0000  ld   $00
              89fb fe00  bra  ac          ;+-----------------------------------+
              89fc fcfd  bra  $89fd       ;|                                   |
              89fd 1418  ld   $18,y       ;| Trampoline for page $8900 lookups |
              89fe e006  jmp  y,$06       ;|                                   |
              89ff c218  st   [$18]       ;+-----------------------------------+
              8a00 0057  ld   $57
              8a01 004f  ld   $4f
              8a02 004f  ld   $4f
              8a03 0048  ld   $48
              8a04 004f  ld   $4f
              8a05 004f  ld   $4f
              8a06 0021  ld   $21
              8a07 0000  ld   $00
              8a08 0059  ld   $59
              8a09 0049  ld   $49
              8a0a 0050  ld   $50
              8a0b 0050  ld   $50
              8a0c 0049  ld   $49
              8a0d 0045  ld   $45
              8a0e 0021  ld   $21
              8a0f 0000  ld   $00
              8a10 0053  ld   $53
              8a11 0057  ld   $57
              8a12 0045  ld   $45
              8a13 0045  ld   $45
              8a14 0054  ld   $54
              8a15 0021  ld   $21
              8a16 0000  ld   $00
              8a17 0000  ld   $00
              8a18 0043  ld   $43
              8a19 004f  ld   $4f
              8a1a 004f  ld   $4f
              8a1b 004c  ld   $4c
              8a1c 0021  ld   $21
              8a1d 0000  ld   $00
              8a1e 0000  ld   $00
              8a1f 0000  ld   $00
              8a20 004e  ld   $4e
              8a21 0049  ld   $49
              8a22 0043  ld   $43
              8a23 0045  ld   $45
              8a24 0021  ld   $21
              8a25 0000  ld   $00
              8a26 0000  ld   $00
              8a27 0000  ld   $00
              8a28 0047  ld   $47
              8a29 0041  ld   $41
              8a2a 0044  ld   $44
              8a2b 005a  ld   $5a
              8a2c 004f  ld   $4f
              8a2d 004f  ld   $4f
              8a2e 004b  ld   $4b
              8a2f 0053  ld   $53
              8a30 0021  ld   $21
              8a31 0000  ld   $00
              8a32 000d  ld   $0d
              8a33 000d  ld   $0d
              8a34 0031  ld   $31
              8a35 0035  ld   $35
              8a36 0020  ld   $20
              8a37 0050  ld   $50
              8a38 0055  ld   $55
              8a39 005a  ld   $5a
              8a3a 005a  ld   $5a
              8a3b 004c  ld   $4c
              8a3c 0045  ld   $45
              8a3d 0020  ld   $20
              8a3e 002d  ld   $2d
              8a3f 0020  ld   $20
              8a40 0042  ld   $42
              8a41 0059  ld   $59
              8a42 0020  ld   $20
              8a43 004a  ld   $4a
              8a44 0045  ld   $45
              8a45 0046  ld   $46
              8a46 0046  ld   $46
              8a47 0020  ld   $20
              8a48 004a  ld   $4a
              8a49 0045  ld   $45
              8a4a 0054  ld   $54
              8a4b 0054  ld   $54
              8a4c 004f  ld   $4f
              8a4d 004e  ld   $4e
              8a4e 000d  ld   $0d
              8a4f 000d  ld   $0d
              8a50 0049  ld   $49
              8a51 004e  ld   $4e
              8a52 0053  ld   $53
              8a53 0054  ld   $54
              8a54 0052  ld   $52
              8a55 0055  ld   $55
              8a56 0043  ld   $43
              8a57 0054  ld   $54
              8a58 0049  ld   $49
              8a59 004f  ld   $4f
              8a5a 004e  ld   $4e
              8a5b 0053  ld   $53
              8a5c 0020  ld   $20
              8a5d 0028  ld   $28
              8a5e 0059  ld   $59
              8a5f 002f  ld   $2f
              8a60 004e  ld   $4e
              8a61 0029  ld   $29
              8a62 003f  ld   $3f
              8a63 0020  ld   $20
              8a64 0000  ld   $00
              8a65 000d  ld   $0d
              8a66 000d  ld   $0d
              8a67 0054  ld   $54
              8a68 0059  ld   $59
              8a69 0050  ld   $50
              8a6a 0045  ld   $45
              8a6b 0020  ld   $20
              8a6c 0041  ld   $41
              8a6d 0020  ld   $20
              8a6e 004c  ld   $4c
              8a6f 0045  ld   $45
              8a70 0054  ld   $54
              8a71 0054  ld   $54
              8a72 0045  ld   $45
              8a73 0052  ld   $52
              8a74 0020  ld   $20
              8a75 004f  ld   $4f
              8a76 004e  ld   $4e
              8a77 0020  ld   $20
              8a78 0054  ld   $54
              8a79 0048  ld   $48
              8a7a 0045  ld   $45
              8a7b 0020  ld   $20
              8a7c 0053  ld   $53
              8a7d 0041  ld   $41
              8a7e 004d  ld   $4d
              8a7f 0045  ld   $45
              8a80 000d  ld   $0d
              8a81 0052  ld   $52
              8a82 004f  ld   $4f
              8a83 0057  ld   $57
              8a84 0020  ld   $20
              8a85 004f  ld   $4f
              8a86 0052  ld   $52
              8a87 0020  ld   $20
              8a88 0043  ld   $43
              8a89 004f  ld   $4f
              8a8a 004c  ld   $4c
              8a8b 0055  ld   $55
              8a8c 004d  ld   $4d
              8a8d 004e  ld   $4e
              8a8e 0020  ld   $20
              8a8f 0041  ld   $41
              8a90 0053  ld   $53
              8a91 0020  ld   $20
              8a92 0054  ld   $54
              8a93 0048  ld   $48
              8a94 0045  ld   $45
              8a95 0020  ld   $20
              8a96 0045  ld   $45
              8a97 004d  ld   $4d
              8a98 0050  ld   $50
              8a99 0054  ld   $54
              8a9a 0059  ld   $59
              8a9b 000d  ld   $0d
              8a9c 0053  ld   $53
              8a9d 0050  ld   $50
              8a9e 0041  ld   $41
              8a9f 0043  ld   $43
              8aa0 0045  ld   $45
              8aa1 0020  ld   $20
              8aa2 0054  ld   $54
              8aa3 004f  ld   $4f
              8aa4 0020  ld   $20
              8aa5 0053  ld   $53
              8aa6 004c  ld   $4c
              8aa7 0007  ld   $07
              8aa8 0000  ld   $00
              8aa9 00d8  ld   $d8
              8aaa 0049  ld   $49
              8aab 0044  ld   $44
              8aac 0045  ld   $45
              8aad 0020  ld   $20
              8aae 0054  ld   $54
              8aaf 0048  ld   $48
              8ab0 0041  ld   $41
              8ab1 0054  ld   $54
              8ab2 0020  ld   $20
              8ab3 004c  ld   $4c
              8ab4 0045  ld   $45
              8ab5 0054  ld   $54
              8ab6 0054  ld   $54
              8ab7 0045  ld   $45
              8ab8 0052  ld   $52
              8ab9 000d  ld   $0d
              8aba 0028  ld   $28
              8abb 0041  ld   $41
              8abc 004e  ld   $4e
              8abd 0044  ld   $44
              8abe 0020  ld   $20
              8abf 0041  ld   $41
              8ac0 004e  ld   $4e
              8ac1 0059  ld   $59
              8ac2 0020  ld   $20
              8ac3 0042  ld   $42
              8ac4 0045  ld   $45
              8ac5 0054  ld   $54
              8ac6 0057  ld   $57
              8ac7 0045  ld   $45
              8ac8 0045  ld   $45
              8ac9 004e  ld   $4e
              8aca 0029  ld   $29
              8acb 0020  ld   $20
              8acc 0054  ld   $54
              8acd 004f  ld   $4f
              8ace 0057  ld   $57
              8acf 0041  ld   $41
              8ad0 0052  ld   $52
              8ad1 0044  ld   $44
              8ad2 0053  ld   $53
              8ad3 000d  ld   $0d
              8ad4 0054  ld   $54
              8ad5 0048  ld   $48
              8ad6 0045  ld   $45
              8ad7 0020  ld   $20
              8ad8 0053  ld   $53
              8ad9 0050  ld   $50
              8ada 0041  ld   $41
              8adb 0043  ld   $43
              8adc 0045  ld   $45
              8add 002e  ld   $2e
              8ade 0020  ld   $20
              8adf 0054  ld   $54
              8ae0 0059  ld   $59
              8ae1 0050  ld   $50
              8ae2 0045  ld   $45
              8ae3 0020  ld   $20
              8ae4 0051  ld   $51
              8ae5 0020  ld   $20
              8ae6 0054  ld   $54
              8ae7 004f  ld   $4f
              8ae8 0020  ld   $20
              8ae9 0051  ld   $51
              8aea 0055  ld   $55
              8aeb 0049  ld   $49
              8aec 0054  ld   $54
              8aed 002e  ld   $2e
              8aee 000d  ld   $0d
              8aef 0054  ld   $54
              8af0 0048  ld   $48
              8af1 0049  ld   $49
              8af2 0053  ld   $53
              8af3 0020  ld   $20
              8af4 0049  ld   $49
              8af5 0053  ld   $53
              8af6 0020  ld   $20
              8af7 0054  ld   $54
              8af8 0048  ld   $48
              8af9 0045  ld   $45
              8afa 0020  ld   $20
              8afb fe00  bra  ac          ;+-----------------------------------+
              8afc fcfd  bra  $8afd       ;|                                   |
              8afd 1418  ld   $18,y       ;| Trampoline for page $8a00 lookups |
              8afe e006  jmp  y,$06       ;|                                   |
              8aff c218  st   [$18]       ;+-----------------------------------+
              8b00 0053  ld   $53
              8b01 004f  ld   $4f
              8b02 004c  ld   $4c
              8b03 0056  ld   $56
              8b04 0045  ld   $45
              8b05 0044  ld   $44
              8b06 0020  ld   $20
              8b07 0050  ld   $50
              8b08 0055  ld   $55
              8b09 005a  ld   $5a
              8b0a 005a  ld   $5a
              8b0b 004c  ld   $4c
              8b0c 0045  ld   $45
              8b0d 003a  ld   $3a
              8b0e 0000  ld   $00
              8b0f 000d  ld   $0d
              8b10 0044  ld   $44
              8b11 0049  ld   $49
              8b12 0046  ld   $46
              8b13 0046  ld   $46
              8b14 0049  ld   $49
              8b15 0043  ld   $43
              8b16 0055  ld   $55
              8b17 004c  ld   $4c
              8b18 0054  ld   $54
              8b19 0059  ld   $59
              8b1a 0020  ld   $20
              8b1b 004c  ld   $4c
              8b1c 0045  ld   $45
              8b1d 0056  ld   $56
              8b1e 0045  ld   $45
              8b1f 004c  ld   $4c
              8b20 0020  ld   $20
              8b21 0028  ld   $28
              8b22 0031  ld   $31
              8b23 002d  ld   $2d
              8b24 0035  ld   $35
              8b25 0029  ld   $29
              8b26 003f  ld   $3f
              8b27 0020  ld   $20
              8b28 0000  ld   $00
              8b29 000d  ld   $0d
              8b2a 0053  ld   $53
              8b2b 004f  ld   $4f
              8b2c 0052  ld   $52
              8b2d 0052  ld   $52
              8b2e 0059  ld   $59
              8b2f 002e  ld   $2e
              8b30 0020  ld   $20
              8b31 0054  ld   $54
              8b32 0052  ld   $52
              8b33 0059  ld   $59
              8b34 0020  ld   $20
              8b35 0041  ld   $41
              8b36 0047  ld   $47
              8b37 0041  ld   $41
              8b38 0049  ld   $49
              8b39 004e  ld   $4e
              8b3a 003a  ld   $3a
              8b3b 0020  ld   $20
              8b3c 0000  ld   $00
              8b3d 0020  ld   $20
              8b3e 0059  ld   $59
              8b3f 004f  ld   $4f
              8b40 0055  ld   $55
              8b41 0020  ld   $20
              8b42 0053  ld   $53
              8b43 004f  ld   $4f
              8b44 004c  ld   $4c
              8b45 0056  ld   $56
              8b46 0045  ld   $45
              8b47 0044  ld   $44
              8b48 000d  ld   $0d
              8b49 0041  ld   $41
              8b4a 0020  ld   $20
              8b4b 004c  ld   $4c
              8b4c 0045  ld   $45
              8b4d 0056  ld   $56
              8b4e 0045  ld   $45
              8b4f 004c  ld   $4c
              8b50 0020  ld   $20
              8b51 0000  ld   $00
              8b52 0020  ld   $20
              8b53 0050  ld   $50
              8b54 0055  ld   $55
              8b55 005a  ld   $5a
              8b56 005a  ld   $5a
              8b57 004c  ld   $4c
              8b58 0045  ld   $45
              8b59 0021  ld   $21
              8b5a 000d  ld   $0d
              8b5b 000d  ld   $0d
              8b5c 0054  ld   $54
              8b5d 004f  ld   $4f
              8b5e 0054  ld   $54
              8b5f 0041  ld   $41
              8b60 004c  ld   $4c
              8b61 0020  ld   $20
              8b62 004d  ld   $4d
              8b63 004f  ld   $4f
              8b64 0056  ld   $56
              8b65 0045  ld   $45
              8b66 0053  ld   $53
              8b67 003a  ld   $3a
              8b68 0020  ld   $20
              8b69 0000  ld   $00
              8b6a 000d  ld   $0d
              8b6b 000d  ld   $0d
              8b6c 0050  ld   $50
              8b6d 004c  ld   $4c
              8b6e 0041  ld   $41
              8b6f 0059  ld   $59
              8b70 0020  ld   $20
              8b71 0041  ld   $41
              8b72 0047  ld   $47
              8b73 0041  ld   $41
              8b74 0049  ld   $49
              8b75 004e  ld   $4e
              8b76 0020  ld   $20
              8b77 0028  ld   $28
              8b78 0059  ld   $59
              8b79 002f  ld   $2f
              8b7a 004e  ld   $4e
              8b7b 0029  ld   $29
              8b7c 003f  ld   $3f
              8b7d 0020  ld   $20
              8b7e 0000  ld   $00
              8b7f 000d  ld   $0d
              8b80 000d  ld   $0d
              8b81 0042  ld   $42
              8b82 0059  ld   $59
              8b83 0045  ld   $45
              8b84 0021  ld   $21
              8b85 000d  ld   $0d
              8b86 0000  ld   $00
              8b87 000b  ld   $0b
              8b88 00e5  ld   $e5
              8b89 001b  ld   $1b
              8b8a 0020  ld   $20
              8b8b 00ef  ld   $ef
              8b8c 00ff  ld   $ff
              8b8d 00e8  ld   $e8
              8b8e 00bd  ld   $bd
              8b8f 00f1  ld   $f1
              8b90 000b  ld   $0b
              8b91 00d0  ld   $d0
              8b92 00f7  ld   $f7
              8b93 004c  ld   $4c
              8b94 009d  ld   $9d
              8b95 000c  ld   $0c
              8b96 000d  ld   $0d
              8b97 0055  ld   $55
              8b98 0053  ld   $53
              8b99 0041  ld   $41
              8b9a 0047  ld   $47
              8b9b 0045  ld   $45
              8b9c 003a  ld   $3a
              8b9d 000d  ld   $0d
              8b9e 0020  ld   $20
              8b9f 0021  ld   $21
              8ba0 0038  ld   $38
              8ba1 0030  ld   $30
              8ba2 0030  ld   $30
              8ba3 003a  ld   $3a
              8ba4 0050  ld   $50
              8ba5 000c  ld   $0c
              8ba6 0000  ld   $00
              8ba7 008a  ld   $8a
              8ba8 0048  ld   $48
              8ba9 0041  ld   $41
              8baa 0020  ld   $20
              8bab 0020  ld   $20
              8bac 0020  ld   $20
              8bad 0020  ld   $20
              8bae 0041  ld   $41
              8baf 0053  ld   $53
              8bb0 0053  ld   $53
              8bb1 0045  ld   $45
              8bb2 004d  ld   $4d
              8bb3 0042  ld   $42
              8bb4 004c  ld   $4c
              8bb5 0045  ld   $45
              8bb6 0020  ld   $20
              8bb7 0031  ld   $31
              8bb8 0053  ld   $53
              8bb9 0054  ld   $54
              8bba 000d  ld   $0d
              8bbb 0020  ld   $20
              8bbc 0021  ld   $21
              8bbd 0020  ld   $20
              8bbe 004c  ld   $4c
              8bbf 0044  ld   $44
              8bc0 0041  ld   $41
              8bc1 0020  ld   $20
              8bc2 0023  ld   $23
              8bc3 0031  ld   $31
              8bc4 0020  ld   $20
              8bc5 0020  ld   $20
              8bc6 0020  ld   $20
              8bc7 0020  ld   $20
              8bc8 0041  ld   $41
              8bc9 0053  ld   $53
              8bca 0053  ld   $53
              8bcb 0045  ld   $45
              8bcc 004d  ld   $4d
              8bcd 0042  ld   $42
              8bce 004c  ld   $4c
              8bcf 0045  ld   $45
              8bd0 0020  ld   $20
              8bd1 004e  ld   $4e
              8bd2 0045  ld   $45
              8bd3 0058  ld   $58
              8bd4 0054  ld   $54
              8bd5 000d  ld   $0d
              8bd6 0020  ld   $20
              8bd7 0021  ld   $21
              8bd8 0038  ld   $38
              8bd9 0030  ld   $30
              8bda 0030  ld   $30
              8bdb 004c  ld   $4c
              8bdc 0020  ld   $20
              8bdd 0020  ld   $20
              8bde 0020  ld   $20
              * 7 times
              8be3 0044  ld   $44
              8be4 0049  ld   $49
              8be5 0053  ld   $53
              8be6 0041  ld   $41
              8be7 0053  ld   $53
              8be8 0053  ld   $53
              8be9 0045  ld   $45
              8bea 004d  ld   $4d
              8beb 0042  ld   $42
              8bec 004c  ld   $4c
              8bed 0045  ld   $45
              8bee 000d  ld   $0d
              8bef 0020  ld   $20
              8bf0 0021  ld   $21
              8bf1 004c  ld   $4c
              8bf2 0020  ld   $20
              8bf3 0020  ld   $20
              8bf4 0020  ld   $20
              * 9 times
              8bfb fe00  bra  ac          ;+-----------------------------------+
              8bfc fcfd  bra  $8bfd       ;|                                   |
              8bfd 1418  ld   $18,y       ;| Trampoline for page $8b00 lookups |
              8bfe e006  jmp  y,$06       ;|                                   |
              8bff c218  st   [$18]       ;+-----------------------------------+
              8c00 0020  ld   $20
              8c01 004e  ld   $4e
              8c02 0045  ld   $45
              8c03 0058  ld   $58
              8c04 0054  ld   $54
              8c05 0020  ld   $20
              8c06 0053  ld   $53
              8c07 0043  ld   $43
              8c08 0052  ld   $52
              8c09 0045  ld   $45
              8c0a 0045  ld   $45
              8c0b 004e  ld   $4e
              8c0c 000d  ld   $0d
              8c0d 0020  ld   $20
              8c0e 0021  ld   $21
              8c0f 0028  ld   $28
              8c10 0052  ld   $52
              8c11 0045  ld   $45
              8c12 0054  ld   $54
              8c13 0055  ld   $55
              8c14 0052  ld   $52
              8c15 004e  ld   $4e
              8c16 0029  ld   $29
              8c17 0020  ld   $20
              8c18 0020  ld   $20
              8c19 0020  ld   $20
              8c1a 0045  ld   $45
              8c1b 0058  ld   $58
              8c1c 0049  ld   $49
              8c1d 0054  ld   $54
              8c1e 000d  ld   $0d
              8c1f 0020  ld   $20
              8c20 0042  ld   $42
              8c21 0045  ld   $45
              8c22 0045  ld   $45
              8c23 0052  ld   $52
              8c24 0020  ld   $20
              8c25 0020  ld   $20
              8c26 0020  ld   $20
              * 8 times
              8c2c 0053  ld   $53
              8c2d 004b  ld   $4b
              8c2e 0049  ld   $49
              8c2f 0050  ld   $50
              8c30 0020  ld   $20
              8c31 0055  ld   $55
              8c32 0053  ld   $53
              8c33 0041  ld   $41
              8c34 0047  ld   $47
              8c35 0045  ld   $45
              8c36 0000  ld   $00
              8c37 000c  ld   $0c
              8c38 008a  ld   $8a
              8c39 0076  ld   $76
              8c3a 00a9  ld   $a9
              8c3b 000c  ld   $0c
              8c3c 0048  ld   $48
              8c3d 0020  ld   $20
              8c3e 00fd  ld   $fd
              8c3f 000d  ld   $0d
              8c40 0020  ld   $20
              8c41 00f1  ld   $f1
              8c42 000e  ld   $0e
              8c43 0085  ld   $85
              8c44 0044  ld   $44
              8c45 0084  ld   $84
              8c46 0045  ld   $45
              8c47 0068  ld   $68
              8c48 0038  ld   $38
              8c49 00e9  ld   $e9
              8c4a 0001  ld   $01
              8c4b 00d0  ld   $d0
              8c4c 00ef  ld   $ef
              8c4d 0020  ld   $20
              8c4e 0095  ld   $95
              8c4f 000e  ld   $0e
              8c50 008a  ld   $8a
              8c51 00d0  ld   $d0
              8c52 0003  ld   $03
              8c53 004c  ld   $4c
              8c54 001f  ld   $1f
              8c55 00ff  ld   $ff
              8c56 00a0  ld   $a0
              8c57 0000  ld   $00
              8c58 0020  ld   $20
              8c59 00c0  ld   $c0
              8c5a 000e  ld   $0e
              8c5b 0048  ld   $48
              8c5c 008a  ld   $8a
              8c5d 00f0  ld   $f0
              8c5e 0007  ld   $07
              8c5f 00b5  ld   $b5
              8c60 0046  ld   $46
              8c61 0095  ld   $95
              8c62 0044  ld   $44
              8c63 00ca  ld   $ca
              8c64 0010  ld   $10
              8c65 00f9  ld   $f9
              8c66 0068  ld   $68
              8c67 00c9  ld   $c9
              8c68 0005  ld   $05
              8c69 00f0  ld   $f0
              8c6a 00cf  ld   $cf
              8c6b 00c9  ld   $c9
              8c6c 0099  ld   $99
              8c6d 00f0  ld   $f0
              8c6e 0004  ld   $04
              8c6f 00c9  ld   $c9
              8c70 0093  ld   $93
              8c71 00d0  ld   $d0
              8c72 0076  ld   $76
              8c73 00a9  ld   $a9
              8c74 0003  ld   $03
              8c75 0085  ld   $85
              8c76 0047  ld   $47
              8c77 0020  ld   $20
              8c78 00b2  ld   $b2
              8c79 000e  ld   $0e
              8c7a 000a  ld   $0a
              8c7b 00e9  ld   $e9
              8c7c 00be  ld   $be
              8c7d 00c5  ld   $c5
              8c7e 00c2  ld   $c2
              8c7f 0090  ld   $90
              8c80 0068  ld   $68
              8c81 000a  ld   $0a
              8c82 000a  ld   $0a
              8c83 00a2  ld   $a2
              8c84 0004  ld   $04
              8c85 000a  ld   $0a
              8c86 0026  ld   $26
              8c87 004a  ld   $4a
              8c88 0026  ld   $26
              8c89 004b  ld   $4b
              8c8a 00ca  ld   $ca
              8c8b 0010  ld   $10
              8c8c 00f8  ld   $f8
              8c8d 00c6  ld   $c6
              8c8e 0047  ld   $47
              8c8f 00f0  ld   $f0
              8c90 00f4  ld   $f4
              8c91 0010  ld   $10
              8c92 00e4  ld   $e4
              8c93 00a2  ld   $a2
              8c94 0005  ld   $05
              8c95 0020  ld   $20
              8c96 00b2  ld   $b2
              8c97 000e  ld   $0e
              8c98 0084  ld   $84
              8c99 003a  ld   $3a
              8c9a 00dd  ld   $dd
              8c9b 0052  ld   $52
              8c9c 000f  ld   $0f
              8c9d 00d0  ld   $d0
              8c9e 0013  ld   $13
              8c9f 0020  ld   $20
              8ca0 00b2  ld   $b2
              8ca1 000e  ld   $0e
              8ca2 00dd  ld   $dd
              8ca3 0058  ld   $58
              8ca4 000f  ld   $0f
              8ca5 00f0  ld   $f0
              8ca6 000d  ld   $0d
              8ca7 00bd  ld   $bd
              8ca8 0058  ld   $58
              8ca9 000f  ld   $0f
              8caa 00f0  ld   $f0
              8cab 0007  ld   $07
              8cac 00c9  ld   $c9
              8cad 00a4  ld   $a4
              8cae 00f0  ld   $f0
              8caf 0003  ld   $03
              8cb0 000d  ld   $0d
              8cb1 0000  ld   $00
              8cb2 0000  ld   $00
              8cb3 00a4  ld   $a4
              8cb4 003a  ld   $3a
              8cb5 0018  ld   $18
              8cb6 0088  ld   $88
              8cb7 0026  ld   $26
              8cb8 004c  ld   $4c
              8cb9 00e0  ld   $e0
              8cba 0003  ld   $03
              8cbb 00d0  ld   $d0
              8cbc 000d  ld   $0d
              8cbd 0020  ld   $20
              8cbe 00c0  ld   $c0
              8cbf 000e  ld   $0e
              8cc0 00a5  ld   $a5
              8cc1 0049  ld   $49
              8cc2 00f0  ld   $f0
              8cc3 0001  ld   $01
              8cc4 00e8  ld   $e8
              8cc5 0086  ld   $86
              8cc6 0038  ld   $38
              8cc7 00a2  ld   $a2
              8cc8 0003  ld   $03
              8cc9 0088  ld   $88
              8cca 0086  ld   $86
              8ccb 0047  ld   $47
              8ccc 00ca  ld   $ca
              8ccd 0010  ld   $10
              8cce 00c9  ld   $c9
              8ccf 00a5  ld   $a5
              8cd0 004c  ld   $4c
              8cd1 000a  ld   $0a
              8cd2 000a  ld   $0a
              8cd3 0005  ld   $05
              8cd4 0038  ld   $38
              8cd5 00c9  ld   $c9
              8cd6 0020  ld   $20
              8cd7 00b0  ld   $b0
              8cd8 0006  ld   $06
              8cd9 00a6  ld   $a6
              8cda 0038  ld   $38
              8cdb 00f0  ld   $f0
              8cdc 0002  ld   $02
              8cdd 0009  ld   $09
              8cde 0080  ld   $80
              8cdf 0085  ld   $85
              8ce0 004c  ld   $4c
              8ce1 0084  ld   $84
              8ce2 003a  ld   $3a
              8ce3 00b9  ld   $b9
              8ce4 0000  ld   $00
              8ce5 0002  ld   $02
              8ce6 00c9  ld   $c9
              8ce7 00bb  ld   $bb
              8ce8 00f0  ld   $f0
              8ce9 0004  ld   $04
              8cea 00c9  ld   $c9
              8ceb 008d  ld   $8d
              8cec 00d0  ld   $d0
              8ced 002c  ld   $2c
              8cee 00a5  ld   $a5
              8cef 0047  ld   $47
              8cf0 0020  ld   $20
              8cf1 00b7  ld   $b7
              8cf2 000d  ld   $0d
              8cf3 00aa  ld   $aa
              8cf4 00bd  ld   $bd
              8cf5 009e  ld   $9e
              8cf6 000f  ld   $0f
              8cf7 00c5  ld   $c5
              8cf8 004a  ld   $4a
              8cf9 00d0  ld   $d0
              8cfa 0013  ld   $13
              8cfb fe00  bra  ac          ;+-----------------------------------+
              8cfc fcfd  bra  $8cfd       ;|                                   |
              8cfd 1418  ld   $18,y       ;| Trampoline for page $8c00 lookups |
              8cfe e006  jmp  y,$06       ;|                                   |
              8cff c218  st   [$18]       ;+-----------------------------------+
              8d00 00bd  ld   $bd
              8d01 005e  ld   $5e
              8d02 000f  ld   $0f
              8d03 00c5  ld   $c5
              8d04 004b  ld   $4b
              8d05 00d0  ld   $d0
              8d06 000c  ld   $0c
              8d07 00a5  ld   $a5
              8d08 004c  ld   $4c
              8d09 00a4  ld   $a4
              8d0a 0040  ld   $40
              8d0b 00c0  ld   $c0
              8d0c 009d  ld   $9d
              8d0d 00f0  ld   $f0
              8d0e 0020  ld   $20
              8d0f 00c5  ld   $c5
              8d10 0040  ld   $40
              8d11 00f0  ld   $f0
              8d12 0037  ld   $37
              8d13 00c6  ld   $c6
              8d14 0047  ld   $47
              8d15 00d0  ld   $d0
              8d16 00dc  ld   $dc
              8d17 00e6  ld   $e6
              8d18 004c  ld   $4c
              8d19 00c6  ld   $c6
              8d1a 0038  ld   $38
              8d1b 00f0  ld   $f0
              8d1c 00d6  ld   $d6
              8d1d 00a4  ld   $a4
              8d1e 003a  ld   $3a
              8d1f 0098  ld   $98
              8d20 00aa  ld   $aa
              8d21 0020  ld   $20
              8d22 00bb  ld   $bb
              8d23 000e  ld   $0e
              8d24 0020  ld   $20
              8d25 0079  ld   $79
              8d26 000e  ld   $0e
              8d27 00a9  ld   $a9
              8d28 00de  ld   $de
              8d29 0020  ld   $20
              8d2a 00ef  ld   $ef
              8d2b 00ff  ld   $ff
              8d2c 004c  ld   $4c
              8d2d 009d  ld   $9d
              8d2e 000c  ld   $0c
              8d2f 00e9  ld   $e9
              8d30 0081  ld   $81
              8d31 004a  ld   $4a
              8d32 00d0  ld   $d0
              8d33 00e9  ld   $e9
              8d34 00a4  ld   $a4
              8d35 0049  ld   $49
              8d36 00a6  ld   $a6
              8d37 0048  ld   $48
              8d38 00d0  ld   $d0
              8d39 0001  ld   $01
              8d3a 0088  ld   $88
              8d3b 00ca  ld   $ca
              8d3c 008a  ld   $8a
              8d3d 0018  ld   $18
              8d3e 00e5  ld   $e5
              8d3f 0044  ld   $44
              8d40 0085  ld   $85
              8d41 0048  ld   $48
              8d42 0010  ld   $10
              8d43 0001  ld   $01
              8d44 00c8  ld   $c8
              8d45 0098  ld   $98
              8d46 00e5  ld   $e5
              8d47 0045  ld   $45
              8d48 00d0  ld   $d0
              8d49 0043  ld   $43
              8d4a 00a4  ld   $a4
              8d4b 0041  ld   $41
              8d4c 00b9  ld   $b9
              8d4d 0047  ld   $47
              8d4e 0000  ld   $00
              8d4f 0091  ld   $91
              8d50 0044  ld   $44
              8d51 0088  ld   $88
              8d52 0010  ld   $10
              8d53 00f8  ld   $f8
              8d54 00a9  ld   $a9
              8d55 0001  ld   $01
              8d56 004c  ld   $4c
              8d57 008c  ld   $8c
              8d58 000c  ld   $0c
              8d59 00a6  ld   $a6
              8d5a 0044  ld   $44
              8d5b 00a4  ld   $a4
              8d5c 0045  ld   $45
              8d5d 0020  ld   $20
              8d5e 00bb  ld   $bb
              8d5f 000e  ld   $0e
              8d60 0020  ld   $20
              8d61 006f  ld   $6f
              8d62 000e  ld   $0e
              8d63 00a0  ld   $a0
              8d64 0000  ld   $00
              8d65 00a9  ld   $a9
              8d66 00ad  ld   $ad
              8d67 0020  ld   $20
              8d68 00ef  ld   $ef
              8d69 00ff  ld   $ff
              8d6a 0020  ld   $20
              8d6b 0077  ld   $77
              8d6c 000e  ld   $0e
              8d6d 00a1  ld   $a1
              8d6e 0044  ld   $44
              8d6f 00a8  ld   $a8
              8d70 004a  ld   $4a
              8d71 0090  ld   $90
              8d72 000b  ld   $0b
              8d73 004a  ld   $4a
              8d74 00b0  ld   $b0
              8d75 0017  ld   $17
              8d76 00c9  ld   $c9
              8d77 0022  ld   $22
              8d78 00f0  ld   $f0
              8d79 0013  ld   $13
              8d7a 0029  ld   $29
              8d7b 0007  ld   $07
              8d7c 0009  ld   $09
              8d7d 0080  ld   $80
              8d7e 004a  ld   $4a
              8d7f 00aa  ld   $aa
              8d80 00bd  ld   $bd
              8d81 0000  ld   $00
              8d82 000f  ld   $0f
              8d83 00b0  ld   $b0
              8d84 0004  ld   $04
              8d85 004a  ld   $4a
              8d86 004a  ld   $4a
              8d87 004a  ld   $4a
              8d88 004a  ld   $4a
              8d89 0029  ld   $29
              8d8a 000f  ld   $0f
              8d8b 00d0  ld   $d0
              8d8c 0004  ld   $04
              8d8d 00a0  ld   $a0
              8d8e 0080  ld   $80
              8d8f 00a9  ld   $a9
              8d90 0000  ld   $00
              8d91 00aa  ld   $aa
              8d92 00bd  ld   $bd
              8d93 0044  ld   $44
              8d94 000f  ld   $0f
              8d95 0085  ld   $85
              8d96 0040  ld   $40
              8d97 0029  ld   $29
              8d98 0003  ld   $03
              8d99 0085  ld   $85
              8d9a 0041  ld   $41
              8d9b 0098  ld   $98
              8d9c 0029  ld   $29
              8d9d 008f  ld   $8f
              8d9e 00aa  ld   $aa
              8d9f 0098  ld   $98
              8da0 00a0  ld   $a0
              8da1 0003  ld   $03
              8da2 00e0  ld   $e0
              8da3 008a  ld   $8a
              8da4 00f0  ld   $f0
              8da5 000b  ld   $0b
              8da6 004a  ld   $4a
              8da7 0090  ld   $90
              8da8 0008  ld   $08
              8da9 004a  ld   $4a
              8daa 004a  ld   $4a
              8dab 0009  ld   $09
              8dac 0020  ld   $20
              8dad 0088  ld   $88
              8dae 00d0  ld   $d0
              8daf 00fa  ld   $fa
              8db0 00c8  ld   $c8
              8db1 0088  ld   $88
              8db2 00d0  ld   $d0
              8db3 00f2  ld   $f2
              8db4 0060  ld   $60
              8db5 0020  ld   $20
              8db6 00a1  ld   $a1
              8db7 000d  ld   $0d
              8db8 000e  ld   $0e
              8db9 0000  ld   $00
              8dba 0000  ld   $00
              8dbb 0048  ld   $48
              8dbc 00b1  ld   $b1
              8dbd 0044  ld   $44
              8dbe 0020  ld   $20
              8dbf 00dc  ld   $dc
              8dc0 00ff  ld   $ff
              8dc1 00a2  ld   $a2
              8dc2 0001  ld   $01
              8dc3 0020  ld   $20
              8dc4 0079  ld   $79
              8dc5 000e  ld   $0e
              8dc6 00c4  ld   $c4
              8dc7 0041  ld   $41
              8dc8 00c8  ld   $c8
              8dc9 0090  ld   $90
              8dca 00f1  ld   $f1
              8dcb 00a2  ld   $a2
              8dcc 0003  ld   $03
              8dcd 00c0  ld   $c0
              8dce 0003  ld   $03
              8dcf 0090  ld   $90
              8dd0 00f2  ld   $f2
              8dd1 0068  ld   $68
              8dd2 00a8  ld   $a8
              8dd3 00b9  ld   $b9
              8dd4 005e  ld   $5e
              8dd5 000f  ld   $0f
              8dd6 0085  ld   $85
              8dd7 0042  ld   $42
              8dd8 00b9  ld   $b9
              8dd9 009e  ld   $9e
              8dda 000f  ld   $0f
              8ddb 0085  ld   $85
              8ddc 0043  ld   $43
              8ddd 00a9  ld   $a9
              8dde 0000  ld   $00
              8ddf 00a0  ld   $a0
              8de0 0005  ld   $05
              8de1 0006  ld   $06
              8de2 0043  ld   $43
              8de3 0026  ld   $26
              8de4 0042  ld   $42
              8de5 002a  ld   $2a
              8de6 0088  ld   $88
              8de7 00d0  ld   $d0
              8de8 00f8  ld   $f8
              8de9 0069  ld   $69
              8dea 00bf  ld   $bf
              8deb 0020  ld   $20
              8dec 00ef  ld   $ef
              8ded 00ff  ld   $ff
              8dee 00ca  ld   $ca
              8def 00d0  ld   $d0
              8df0 00ec  ld   $ec
              8df1 0020  ld   $20
              8df2 0077  ld   $77
              8df3 000e  ld   $0e
              8df4 00a2  ld   $a2
              8df5 0006  ld   $06
              8df6 00e0  ld   $e0
              8df7 0003  ld   $03
              8df8 00d0  ld   $d0
              8df9 0012  ld   $12
              8dfa 00a4  ld   $a4
              8dfb fe00  bra  ac          ;+-----------------------------------+
              8dfc fcfd  bra  $8dfd       ;|                                   |
              8dfd 1418  ld   $18,y       ;| Trampoline for page $8d00 lookups |
              8dfe e006  jmp  y,$06       ;|                                   |
              8dff c218  st   [$18]       ;+-----------------------------------+
              8e00 0041  ld   $41
              8e01 00f0  ld   $f0
              8e02 000e  ld   $0e
              8e03 00a5  ld   $a5
              8e04 0040  ld   $40
              8e05 00c9  ld   $c9
              8e06 00e8  ld   $e8
              8e07 00b1  ld   $b1
              8e08 0044  ld   $44
              8e09 00b0  ld   $b0
              8e0a 001c  ld   $1c
              8e0b 0020  ld   $20
              8e0c 00dc  ld   $dc
              8e0d 00ff  ld   $ff
              8e0e 0088  ld   $88
              8e0f 00d0  ld   $d0
              8e10 00f2  ld   $f2
              8e11 0006  ld   $06
              8e12 0040  ld   $40
              8e13 0090  ld   $90
              8e14 000e  ld   $0e
              8e15 00bd  ld   $bd
              8e16 0051  ld   $51
              8e17 000f  ld   $0f
              8e18 0020  ld   $20
              8e19 00ef  ld   $ef
              8e1a 00ff  ld   $ff
              8e1b 00bd  ld   $bd
              8e1c 0057  ld   $57
              8e1d 000f  ld   $0f
              8e1e 00f0  ld   $f0
              8e1f 0003  ld   $03
              8e20 0020  ld   $20
              8e21 00ef  ld   $ef
              8e22 00ff  ld   $ff
              8e23 00ca  ld   $ca
              8e24 00d0  ld   $d0
              8e25 00d5  ld   $d5
              8e26 0060  ld   $60
              8e27 0020  ld   $20
              8e28 00f4  ld   $f4
              8e29 000e  ld   $0e
              8e2a 00aa  ld   $aa
              8e2b 00e8  ld   $e8
              8e2c 00d0  ld   $d0
              8e2d 0001  ld   $01
              8e2e 00c8  ld   $c8
              8e2f 0098  ld   $98
              8e30 0020  ld   $20
              8e31 00dc  ld   $dc
              8e32 00ff  ld   $ff
              8e33 008a  ld   $8a
              8e34 004c  ld   $4c
              8e35 00dc  ld   $dc
              8e36 00ff  ld   $ff
              8e37 00a2  ld   $a2
              8e38 0001  ld   $01
              8e39 00a9  ld   $a9
              8e3a 00a0  ld   $a0
              8e3b 0020  ld   $20
              8e3c 00ef  ld   $ef
              8e3d 00ff  ld   $ff
              8e3e 00ca  ld   $ca
              8e3f 00d0  ld   $d0
              8e40 00f8  ld   $f8
              8e41 0060  ld   $60
              8e42 00c9  ld   $c9
              8e43 009b  ld   $9b
              8e44 00f0  ld   $f0
              8e45 000a  ld   $0a
              8e46 0020  ld   $20
              8e47 00ef  ld   $ef
              8e48 00ff  ld   $ff
              8e49 00c9  ld   $c9
              8e4a 00df  ld   $df
              8e4b 00f0  ld   $f0
              8e4c 0012  ld   $12
              8e4d 00e8  ld   $e8
              8e4e 0010  ld   $10
              8e4f 0012  ld   $12
              8e50 00a9  ld   $a9
              8e51 00dc  ld   $dc
              8e52 0020  ld   $20
              8e53 00ef  ld   $ef
              8e54 00ff  ld   $ff
              8e55 0020  ld   $20
              8e56 00bb  ld   $bb
              8e57 000e  ld   $0e
              8e58 00a9  ld   $a9
              8e59 00a1  ld   $a1
              8e5a 0020  ld   $20
              8e5b 00ef  ld   $ef
              8e5c 00ff  ld   $ff
              8e5d 00a2  ld   $a2
              8e5e 0001  ld   $01
              8e5f 00ca  ld   $ca
              8e60 0030  ld   $30
              8e61 00f3  ld   $f3
              8e62 002c  ld   $2c
              8e63 0011  ld   $11
              8e64 00d0  ld   $d0
              8e65 0010  ld   $10
              8e66 00fb  ld   $fb
              8e67 00ad  ld   $ad
              8e68 0010  ld   $10
              8e69 00d0  ld   $d0
              8e6a 009d  ld   $9d
              8e6b 0000  ld   $00
              8e6c 0002  ld   $02
              8e6d 00c9  ld   $c9
              8e6e 008d  ld   $8d
              8e6f 00d0  ld   $d0
              8e70 00d1  ld   $d1
              8e71 0060  ld   $60
              8e72 00b9  ld   $b9
              8e73 0000  ld   $00
              8e74 0002  ld   $02
              8e75 00c8  ld   $c8
              8e76 00c9  ld   $c9
              8e77 00a0  ld   $a0
              8e78 00f0  ld   $f0
              8e79 00f8  ld   $f8
              8e7a 0060  ld   $60
              8e7b 00a9  ld   $a9
              8e7c 008d  ld   $8d
              8e7d 004c  ld   $4c
              8e7e 00ef  ld   $ef
              8e7f 00ff  ld   $ff
              8e80 00a2  ld   $a2
              8e81 0000  ld   $00
              8e82 0086  ld   $86
              8e83 0048  ld   $48
              8e84 0086  ld   $86
              8e85 0049  ld   $49
              8e86 00f0  ld   $f0
              8e87 0015  ld   $15
              8e88 00a2  ld   $a2
              8e89 0003  ld   $03
              8e8a 000a  ld   $0a
              8e8b 000a  ld   $0a
              8e8c 000a  ld   $0a
              * 5 times
              8e8f 0026  ld   $26
              8e90 0048  ld   $48
              8e91 0026  ld   $26
              8e92 0049  ld   $49
              8e93 00ca  ld   $ca
              8e94 0010  ld   $10
              8e95 00f8  ld   $f8
              8e96 00b5  ld   $b5
              8e97 0049  ld   $49
              8e98 0095  ld   $95
              8e99 0047  ld   $47
              8e9a 00e8  ld   $e8
              8e9b 00f0  ld   $f0
              8e9c 00f9  ld   $f9
              8e9d 00b9  ld   $b9
              8e9e 0000  ld   $00
              8e9f 0002  ld   $02
              8ea0 00c8  ld   $c8
              8ea1 0049  ld   $49
              8ea2 00b0  ld   $b0
              8ea3 00c9  ld   $c9
              8ea4 000a  ld   $0a
              8ea5 0090  ld   $90
              8ea6 00e1  ld   $e1
              8ea7 0069  ld   $69
              8ea8 0088  ld   $88
              8ea9 00c9  ld   $c9
              8eaa 00fa  ld   $fa
              8eab 00b0  ld   $b0
              8eac 00db  ld   $db
              8ead 0060  ld   $60
              8eae 004c  ld   $4c
              8eaf 00e9  ld   $e9
              8eb0 000b  ld   $0b
              8eb1 00a5  ld   $a5
              8eb2 0041  ld   $41
              8eb3 0038  ld   $38
              8eb4 00a4  ld   $a4
              8eb5 0045  ld   $45
              8eb6 00aa  ld   $aa
              8eb7 0010  ld   $10
              8eb8 0001  ld   $01
              8eb9 0088  ld   $88
              8eba 0065  ld   $65
              8ebb 0044  ld   $44
              8ebc 0090  ld   $90
              8ebd 0001  ld   $01
              8ebe 00c8  ld   $c8
              8ebf 0060  ld   $60
              8ec0 000f  ld   $0f
              8ec1 0000  ld   $00
              8ec2 00de  ld   $de
              8ec3 0040  ld   $40
              8ec4 0002  ld   $02
              8ec5 0045  ld   $45
              8ec6 0003  ld   $03
              8ec7 00d0  ld   $d0
              8ec8 0008  ld   $08
              8ec9 0040  ld   $40
              8eca 0009  ld   $09
              8ecb 0030  ld   $30
              8ecc 0022  ld   $22
              8ecd 0045  ld   $45
              8ece 0033  ld   $33
              8ecf 00d0  ld   $d0
              8ed0 0008  ld   $08
              8ed1 0040  ld   $40
              8ed2 0009  ld   $09
              8ed3 0040  ld   $40
              8ed4 0002  ld   $02
              8ed5 0045  ld   $45
              8ed6 0033  ld   $33
              8ed7 00d0  ld   $d0
              8ed8 0008  ld   $08
              8ed9 0040  ld   $40
              8eda 0009  ld   $09
              8edb 0040  ld   $40
              8edc 0002  ld   $02
              8edd 0045  ld   $45
              8ede 00b3  ld   $b3
              8edf 00d0  ld   $d0
              8ee0 0008  ld   $08
              8ee1 0040  ld   $40
              8ee2 0009  ld   $09
              8ee3 0000  ld   $00
              8ee4 0022  ld   $22
              8ee5 0044  ld   $44
              8ee6 0033  ld   $33
              8ee7 00d0  ld   $d0
              8ee8 008c  ld   $8c
              8ee9 0044  ld   $44
              8eea 0000  ld   $00
              8eeb 0011  ld   $11
              8eec 0022  ld   $22
              8eed 0044  ld   $44
              8eee 0033  ld   $33
              8eef 00d0  ld   $d0
              8ef0 008c  ld   $8c
              8ef1 0044  ld   $44
              8ef2 009a  ld   $9a
              8ef3 0010  ld   $10
              8ef4 0022  ld   $22
              8ef5 0044  ld   $44
              8ef6 0033  ld   $33
              8ef7 00d0  ld   $d0
              8ef8 0008  ld   $08
              8ef9 0040  ld   $40
              8efa 0009  ld   $09
              8efb fe00  bra  ac          ;+-----------------------------------+
              8efc fcfd  bra  $8efd       ;|                                   |
              8efd 1418  ld   $18,y       ;| Trampoline for page $8e00 lookups |
              8efe e006  jmp  y,$06       ;|                                   |
              8eff c218  st   [$18]       ;+-----------------------------------+
              8f00 0010  ld   $10
              8f01 0022  ld   $22
              8f02 0044  ld   $44
              8f03 0033  ld   $33
              8f04 00d0  ld   $d0
              8f05 0008  ld   $08
              8f06 0040  ld   $40
              8f07 0009  ld   $09
              8f08 0062  ld   $62
              8f09 0013  ld   $13
              8f0a 0078  ld   $78
              8f0b 00a9  ld   $a9
              8f0c 0000  ld   $00
              8f0d 0021  ld   $21
              8f0e 0081  ld   $81
              8f0f 0082  ld   $82
              8f10 0000  ld   $00
              8f11 0000  ld   $00
              8f12 0059  ld   $59
              8f13 004d  ld   $4d
              8f14 0091  ld   $91
              8f15 0092  ld   $92
              8f16 0086  ld   $86
              8f17 004a  ld   $4a
              8f18 0085  ld   $85
              8f19 009d  ld   $9d
              8f1a 00ac  ld   $ac
              8f1b 00a9  ld   $a9
              8f1c 00ac  ld   $ac
              8f1d 00a3  ld   $a3
              8f1e 00a8  ld   $a8
              8f1f 00a4  ld   $a4
              8f20 00d9  ld   $d9
              8f21 0000  ld   $00
              8f22 00d8  ld   $d8
              8f23 00a4  ld   $a4
              8f24 00a4  ld   $a4
              8f25 0000  ld   $00
              8f26 001c  ld   $1c
              8f27 008a  ld   $8a
              8f28 001c  ld   $1c
              8f29 0023  ld   $23
              8f2a 005d  ld   $5d
              8f2b 008b  ld   $8b
              8f2c 001b  ld   $1b
              8f2d 00a1  ld   $a1
              8f2e 009d  ld   $9d
              8f2f 008a  ld   $8a
              8f30 001d  ld   $1d
              8f31 0023  ld   $23
              8f32 009d  ld   $9d
              8f33 008b  ld   $8b
              8f34 001d  ld   $1d
              8f35 00a1  ld   $a1
              8f36 0000  ld   $00
              8f37 0029  ld   $29
              8f38 0019  ld   $19
              8f39 00ae  ld   $ae
              8f3a 0069  ld   $69
              8f3b 00a8  ld   $a8
              8f3c 0019  ld   $19
              8f3d 0023  ld   $23
              8f3e 0024  ld   $24
              8f3f 0053  ld   $53
              8f40 001b  ld   $1b
              8f41 0023  ld   $23
              8f42 0024  ld   $24
              8f43 0053  ld   $53
              8f44 0019  ld   $19
              8f45 00a1  ld   $a1
              8f46 0000  ld   $00
              8f47 001a  ld   $1a
              8f48 005b  ld   $5b
              8f49 005b  ld   $5b
              8f4a 00a5  ld   $a5
              8f4b 0069  ld   $69
              8f4c 0024  ld   $24
              8f4d 0024  ld   $24
              8f4e 00ae  ld   $ae
              8f4f 00ae  ld   $ae
              8f50 00a8  ld   $a8
              8f51 00ad  ld   $ad
              8f52 0029  ld   $29
              8f53 0000  ld   $00
              8f54 007c  ld   $7c
              8f55 0000  ld   $00
              8f56 0015  ld   $15
              8f57 009c  ld   $9c
              8f58 006d  ld   $6d
              8f59 009c  ld   $9c
              8f5a 00a5  ld   $a5
              8f5b 0069  ld   $69
              8f5c 0029  ld   $29
              8f5d 0053  ld   $53
              8f5e 0084  ld   $84
              8f5f 0013  ld   $13
              8f60 0034  ld   $34
              8f61 0011  ld   $11
              8f62 00a5  ld   $a5
              8f63 0069  ld   $69
              8f64 0023  ld   $23
              8f65 00a0  ld   $a0
              8f66 00d8  ld   $d8
              8f67 0062  ld   $62
              8f68 005a  ld   $5a
              8f69 0048  ld   $48
              8f6a 0026  ld   $26
              8f6b 0062  ld   $62
              8f6c 0094  ld   $94
              8f6d 0088  ld   $88
              8f6e 0054  ld   $54
              8f6f 0044  ld   $44
              8f70 00c8  ld   $c8
              8f71 0054  ld   $54
              8f72 0068  ld   $68
              8f73 0044  ld   $44
              8f74 00e8  ld   $e8
              8f75 0094  ld   $94
              8f76 0000  ld   $00
              8f77 00b4  ld   $b4
              8f78 0008  ld   $08
              8f79 0084  ld   $84
              8f7a 0074  ld   $74
              8f7b 00b4  ld   $b4
              8f7c 0028  ld   $28
              8f7d 006e  ld   $6e
              8f7e 0074  ld   $74
              8f7f 00f4  ld   $f4
              8f80 00cc  ld   $cc
              8f81 004a  ld   $4a
              8f82 0072  ld   $72
              8f83 00f2  ld   $f2
              8f84 00a4  ld   $a4
              8f85 008a  ld   $8a
              8f86 0000  ld   $00
              8f87 00aa  ld   $aa
              8f88 00a2  ld   $a2
              8f89 00a2  ld   $a2
              8f8a 0074  ld   $74
              8f8b 0074  ld   $74
              8f8c 0074  ld   $74
              8f8d 0072  ld   $72
              8f8e 0044  ld   $44
              8f8f 0068  ld   $68
              8f90 00b2  ld   $b2
              8f91 0032  ld   $32
              8f92 00b2  ld   $b2
              8f93 0000  ld   $00
              8f94 0022  ld   $22
              8f95 0026  ld   $26
              8f96 001a  ld   $1a
              8f97 001a  ld   $1a
              8f98 0026  ld   $26
              8f99 0026  ld   $26
              8f9a 0072  ld   $72
              8f9b 0072  ld   $72
              8f9c 0088  ld   $88
              8f9d 00c8  ld   $c8
              8f9e 00c4  ld   $c4
              8f9f 00ca  ld   $ca
              8fa0 0026  ld   $26
              8fa1 0048  ld   $48
              8fa2 0044  ld   $44
              8fa3 0044  ld   $44
              8fa4 00a2  ld   $a2
              8fa5 00c8  ld   $c8
              8fa6 005e  ld   $5e
              8fa7 0000  ld   $00
              8fa8 00e3  ld   $e3
              8fa9 0075  ld   $75
              8faa 002b  ld   $2b
              8fab 003e  ld   $3e
              8fac 001a  ld   $1a
              8fad 003d  ld   $3d
              8fae 00fc  ld   $fc
              8faf 000f  ld   $0f
              8fb0 0082  ld   $82
              8fb1 00ff  ld   $ff
              8fb2 0035  ld   $35
              8fb3 003f  ld   $3f
              8fb4 003b  ld   $3b
              8fb5 0011  ld   $11
              8fb6 0010  ld   $10
              8fb7 00d0  ld   $d0
              8fb8 002b  ld   $2b
              8fb9 0030  ld   $30
              8fba 001a  ld   $1a
              8fbb 000f  ld   $0f
              8fbc 005e  ld   $5e
              8fbd 003d  ld   $3d
              8fbe 008c  ld   $8c
              8fbf 00ff  ld   $ff
              8fc0 0035  ld   $35
              8fc1 003f  ld   $3f
              8fc2 003b  ld   $3b
              8fc3 008c  ld   $8c
              8fc4 00ff  ld   $ff
              8fc5 00e6  ld   $e6
              8fc6 0060  ld   $60
              8fc7 0035  ld   $35
              8fc8 0050  ld   $50
              8fc9 0021  ld   $21
              8fca 00e6  ld   $e6
              8fcb 0020  ld   $20
              8fcc 00e3  ld   $e3
              8fcd 0060  ld   $60
              8fce 008c  ld   $8c
              8fcf 000a  ld   $0a
              8fd0 0035  ld   $35
              8fd1 0072  ld   $72
              8fd2 002a  ld   $2a
              8fd3 0059  ld   $59
              8fd4 0007  ld   $07
              8fd5 008c  ld   $8c
              8fd6 000a  ld   $0a
              8fd7 008c  ld   $8c
              8fd8 001a  ld   $1a
              8fd9 0035  ld   $35
              8fda 0072  ld   $72
              8fdb 0033  ld   $33
              8fdc 00ec  ld   $ec
              8fdd 0000  ld   $00
              8fde 008c  ld   $8c
              8fdf 001a  ld   $1a
              8fe0 0082  ld   $82
              8fe1 007f  ld   $7f
              8fe2 00e6  ld   $e6
              8fe3 0080  ld   $80
              8fe4 00f3  ld   $f3
              8fe5 0030  ld   $30
              8fe6 0011  ld   $11
              8fe7 0012  ld   $12
              8fe8 00d0  ld   $d0
              8fe9 002b  ld   $2b
              8fea 0030  ld   $30
              8feb 00ad  ld   $ad
              8fec 0035  ld   $35
              8fed 003f  ld   $3f
              8fee 0075  ld   $75
              8fef 005e  ld   $5e
              8ff0 003c  ld   $3c
              8ff1 0088  ld   $88
              8ff2 0080  ld   $80
              8ff3 0085  ld   $85
              8ff4 000f  ld   $0f
              8ff5 005f  ld   $5f
              8ff6 001a  ld   $1a
              8ff7 001c  ld   $1c
              8ff8 00e3  ld   $e3
              8ff9 0002  ld   $02
              8ffa 00f6  ld   $f6
              8ffb fe00  bra  ac          ;+-----------------------------------+
              8ffc fcfd  bra  $8ffd       ;|                                   |
              8ffd 1418  ld   $18,y       ;| Trampoline for page $8f00 lookups |
              8ffe e006  jmp  y,$06       ;|                                   |
              8fff c218  st   [$18]       ;+-----------------------------------+
              9000 00e3  ld   $e3
              9001 0042  ld   $42
              9002 0035  ld   $35
              9003 0072  ld   $72
              9004 005b  ld   $5b
              9005 0021  ld   $21
              9006 007a  ld   $7a
              9007 00e6  ld   $e6
              9008 0002  ld   $02
              9009 002b  ld   $2b
              900a 007a  ld   $7a
              900b 0059  ld   $59
              900c 0000  ld   $00
              900d 00f0  ld   $f0
              900e 0030  ld   $30
              900f 0011  ld   $11
              9010 0010  ld   $10
              9011 00d0  ld   $d0
              9012 002b  ld   $2b
              9013 0030  ld   $30
              9014 00ad  ld   $ad
              9015 0035  ld   $35
              9016 003f  ld   $3f
              9017 006c  ld   $6c
              9018 00fc  ld   $fc
              9019 003c  ld   $3c
              901a 0082  ld   $82
              901b 007f  ld   $7f
              901c 0035  ld   $35
              901d 0072  ld   $72
              901e 0071  ld   $71
              901f 00f3  ld   $f3
              9020 0030  ld   $30
              9021 0059  ld   $59
              9022 001f  ld   $1f
              9023 005e  ld   $5e
              9024 003c  ld   $3c
              9025 001a  ld   $1a
              9026 003c  ld   $3c
              9027 00e6  ld   $e6
              9028 0001  ld   $01
              9029 0035  ld   $35
              902a 0053  ld   $53
              902b 0089  ld   $89
              902c 0059  ld   $59
              902d 00a0  ld   $a0
              902e 0085  ld   $85
              902f 000f  ld   $0f
              9030 005f  ld   $5f
              9031 0021  ld   $21
              9032 007a  ld   $7a
              9033 00e6  ld   $e6
              9034 0006  ld   $06
              9035 002b  ld   $2b
              9036 007a  ld   $7a
              9037 0059  ld   $59
              9038 001e  ld   $1e
              9039 005e  ld   $5e
              903a 003c  ld   $3c
              903b 008c  ld   $8c
              903c 0014  ld   $14
              903d 0035  ld   $35
              903e 0072  ld   $72
              903f 009b  ld   $9b
              9040 0059  ld   $59
              9041 00c0  ld   $c0
              9042 0085  ld   $85
              9043 000f  ld   $0f
              9044 005f  ld   $5f
              9045 0021  ld   $21
              9046 007a  ld   $7a
              9047 00e6  ld   $e6
              9048 0006  ld   $06
              9049 002b  ld   $2b
              904a 007a  ld   $7a
              904b 0011  ld   $11
              904c 0007  ld   $07
              904d 005f  ld   $5f
              904e 002b  ld   $2b
              904f 0030  ld   $30
              9050 0063  ld   $63
              9051 0059  ld   $59
              9052 00ff  ld   $ff
              9053 005e  ld   $5e
              9054 000e  ld   $0e
              9055 0011  ld   $11
              9056 0000  ld   $00
              9057 0004  ld   $04
              9058 007f  ld   $7f
              9059 003e  ld   $3e
              905a 0018  ld   $18
              905b 00a2  ld   $a2
              905c 0000  ld   $00
              905d 00a0  ld   $a0
              905e 000c  ld   $0c
              905f 00b9  ld   $b9
              9060 00ce  ld   $ce
              9061 005e  ld   $5e
              9062 0084  ld   $84
              9063 003a  ld   $3a
              9064 00a0  ld   $a0
              9065 0007  ld   $07
              9066 009d  ld   $9d
              9067 0000  ld   $00
              9068 0001  ld   $01
              9069 0069  ld   $69
              906a 0001  ld   $01
              906b 00e8  ld   $e8
              906c 00e8  ld   $e8
              906d 0088  ld   $88
              906e 00d0  ld   $d0
              906f 00f6  ld   $f6
              9070 00e8  ld   $e8
              9071 00e8  ld   $e8
              9072 00e8  ld   $e8
              9073 00e8  ld   $e8
              9074 00a4  ld   $a4
              9075 003a  ld   $3a
              9076 0088  ld   $88
              9077 0010  ld   $10
              9078 00e6  ld   $e6
              9079 004c  ld   $4c
              907a 0005  ld   $05
              907b 00c1  ld   $c1
              907c 0077  ld   $77
              907d 0070  ld   $70
              907e 0056  ld   $56
              907f 004f  ld   $4f
              9080 0048  ld   $48
              9081 0041  ld   $41
              9082 003a  ld   $3a
              9083 0033  ld   $33
              9084 002c  ld   $2c
              9085 0025  ld   $25
              9086 001e  ld   $1e
              9087 0017  ld   $17
              9088 0010  ld   $10
              9089 00d8  ld   $d8
              908a 0058  ld   $58
              908b 00a2  ld   $a2
              908c 00f7  ld   $f7
              908d 009a  ld   $9a
              908e 004c  ld   $4c
              908f 001a  ld   $1a
              9090 00ff  ld   $ff
              9091 005f  ld   $5f
              9092 0000  ld   $00
              9093 0000  ld   $00
              9094 002b  ld   $2b
              9095 001a  ld   $1a
              9096 0011  ld   $11
              9097 000c  ld   $0c
              9098 000b  ld   $0b
              9099 002b  ld   $2b
              909a 0022  ld   $22
              909b 00b4  ld   $b4
              909c 00e6  ld   $e6
              909d 0011  ld   $11
              909e 00fe  ld   $fe
              909f 00ff  ld   $ff
              90a0 00f6  ld   $f6
              90a1 0090  ld   $90
              90a2 00fe  ld   $fe
              90a3 002b  ld   $2b
              90a4 007c  ld   $7c
              90a5 00df  ld   $df
              90a6 00fa  ld   $fa
              90a7 0021  ld   $21
              90a8 0024  ld   $24
              90a9 00ec  ld   $ec
              90aa 0000  ld   $00
              90ab 0021  ld   $21
              90ac 0026  ld   $26
              90ad 00ec  ld   $ec
              90ae 0002  ld   $02
              90af 0021  ld   $21
              90b0 0028  ld   $28
              90b1 00ec  ld   $ec
              90b2 0004  ld   $04
              90b3 0011  ld   $11
              90b4 00e1  ld   $e1
              90b5 0004  ld   $04
              90b6 002b  ld   $2b
              90b7 0022  ld   $22
              90b8 0011  ld   $11
              90b9 0000  ld   $00
              90ba 003f  ld   $3f
              90bb 002b  ld   $2b
              90bc 0024  ld   $24
              90bd 005e  ld   $5e
              90be 0026  ld   $26
              90bf 0021  ld   $21
              90c0 007c  ld   $7c
              90c1 005e  ld   $5e
              90c2 0027  ld   $27
              90c3 008c  ld   $8c
              90c4 008d  ld   $8d
              90c5 0035  ld   $35
              90c6 003f  ld   $3f
              90c7 003b  ld   $3b
              90c8 001a  ld   $1a
              90c9 007a  ld   $7a
              90ca 00e6  ld   $e6
              90cb 00fb  ld   $fb
              90cc 0035  ld   $35
              90cd 0056  ld   $56
              90ce 003b  ld   $3b
              90cf 0059  ld   $59
              90d0 0000  ld   $00
              90d1 0035  ld   $35
              90d2 0072  ld   $72
              90d3 0096  ld   $96
              90d4 0021  ld   $21
              90d5 007a  ld   $7a
              90d6 002b  ld   $2b
              90d7 0028  ld   $28
              90d8 0082  ld   $82
              90d9 00ff  ld   $ff
              90da 00e6  ld   $e6
              90db 00fb  ld   $fb
              90dc 0035  ld   $35
              90dd 004d  ld   $4d
              90de 004c  ld   $4c
              90df 0011  ld   $11
              90e0 00fb  ld   $fb
              90e1 00ff  ld   $ff
              90e2 00b4  ld   $b4
              90e3 00cb  ld   $cb
              90e4 0093  ld   $93
              90e5 0028  ld   $28
              90e6 00e3  ld   $e3
              90e7 0001  ld   $01
              90e8 0035  ld   $35
              90e9 0050  ld   $50
              90ea 004c  ld   $4c
              90eb 0059  ld   $59
              90ec 0061  ld   $61
              90ed 005e  ld   $5e
              90ee 007a  ld   $7a
              90ef 00e3  ld   $e3
              90f0 009f  ld   $9f
              90f1 002b  ld   $2b
              90f2 007c  ld   $7c
              90f3 00ad  ld   $ad
              90f4 005e  ld   $5e
              90f5 007b  ld   $7b
              90f6 0021  ld   $21
              90f7 007a  ld   $7a
              90f8 00e6  ld   $e6
              90f9 0002  ld   $02
              90fa 002b  ld   $2b
              90fb fe00  bra  ac          ;+-----------------------------------+
              90fc fcfd  bra  $90fd       ;|                                   |
              90fd 1418  ld   $18,y       ;| Trampoline for page $9000 lookups |
              90fe e006  jmp  y,$06       ;|                                   |
              90ff c218  st   [$18]       ;+-----------------------------------+
              9100 0028  ld   $28
              9101 0011  ld   $11
              9102 0000  ld   $00
              9103 0007  ld   $07
              9104 0099  ld   $99
              9105 0028  ld   $28
              9106 00ad  ld   $ad
              9107 0082  ld   $82
              9108 0001  ld   $01
              9109 005e  ld   $5e
              910a 0026  ld   $26
              910b 00b4  ld   $b4
              910c 00cb  ld   $cb
              910d 0093  ld   $93
              910e 0028  ld   $28
              910f 001a  ld   $1a
              9110 0028  ld   $28
              9111 0035  ld   $35
              9112 0072  ld   $72
              9113 0066  ld   $66
              9114 0021  ld   $21
              9115 007c  ld   $7c
              9116 00e3  ld   $e3
              9117 0012  ld   $12
              9118 002b  ld   $2b
              9119 007e  ld   $7e
              911a 00ad  ld   $ad
              911b 005e  ld   $5e
              911c 0026  ld   $26
              911d 0021  ld   $21
              911e 007c  ld   $7c
              911f 00ad  ld   $ad
              9120 00f0  ld   $f0
              9121 007e  ld   $7e
              9122 001a  ld   $1a
              9123 0026  ld   $26
              9124 00f0  ld   $f0
              9125 007c  ld   $7c
              9126 0093  ld   $93
              9127 007c  ld   $7c
              9128 0093  ld   $93
              9129 007c  ld   $7c
              912a 001a  ld   $1a
              912b 007c  ld   $7c
              912c 008c  ld   $8c
              912d 00d8  ld   $d8
              912e 0035  ld   $35
              912f 0072  ld   $72
              9130 0079  ld   $79
              9131 001a  ld   $1a
              9132 0027  ld   $27
              9133 00e6  ld   $e6
              9134 00a0  ld   $a0
              9135 0035  ld   $35
              9136 0050  ld   $50
              9137 00ef  ld   $ef
              9138 00e6  ld   $e6
              9139 0040  ld   $40
              913a 0035  ld   $35
              913b 0050  ld   $50
              913c 00a4  ld   $a4
              913d 00e6  ld   $e6
              913e 0020  ld   $20
              913f 00e3  ld   $e3
              9140 000e  ld   $0e
              9141 0035  ld   $35
              9142 0053  ld   $53
              9143 00b2  ld   $b2
              9144 00e3  ld   $e3
              9145 0032  ld   $32
              9146 002b  ld   $2b
              9147 007c  ld   $7c
              9148 0011  ld   $11
              9149 0000  ld   $00
              914a 0007  ld   $07
              914b 0090  ld   $90
              914c 00b7  ld   $b7
              914d 002b  ld   $2b
              914e 007c  ld   $7c
              914f 0011  ld   $11
              9150 0000  ld   $00
              9151 0008  ld   $08
              9152 002b  ld   $2b
              9153 007e  ld   $7e
              9154 0021  ld   $21
              9155 007c  ld   $7c
              9156 00e9  ld   $e9
              9157 00e9  ld   $e9
              9158 0099  ld   $99
              9159 007c  ld   $7c
              915a 0099  ld   $99
              915b 007e  ld   $7e
              915c 002b  ld   $2b
              915d 007e  ld   $7e
              915e 0021  ld   $21
              915f 007a  ld   $7a
              9160 002b  ld   $2b
              9161 0028  ld   $28
              9162 00e3  ld   $e3
              9163 0006  ld   $06
              9164 002b  ld   $2b
              9165 007a  ld   $7a
              9166 0059  ld   $59
              9167 0005  ld   $05
              9168 002b  ld   $2b
              9169 007c  ld   $7c
              916a 0021  ld   $21
              916b 007e  ld   $7e
              916c 007f  ld   $7f
              916d 0000  ld   $00
              916e 0082  ld   $82
              916f 00fe  ld   $fe
              9170 005e  ld   $5e
              9171 0026  ld   $26
              9172 0011  ld   $11
              9173 0000  ld   $00
              9174 0007  ld   $07
              9175 0099  ld   $99
              9176 0028  ld   $28
              9177 00ad  ld   $ad
              9178 0035  ld   $35
              9179 003f  ld   $3f
              917a 00e2  ld   $e2
              917b 0093  ld   $93
              917c 0026  ld   $26
              917d 00b4  ld   $b4
              917e 00cb  ld   $cb
              917f 0093  ld   $93
              9180 007e  ld   $7e
              9181 0093  ld   $93
              9182 0028  ld   $28
              9183 0021  ld   $21
              9184 007c  ld   $7c
              9185 00e6  ld   $e6
              9186 0001  ld   $01
              9187 0035  ld   $35
              9188 004d  ld   $4d
              9189 00cd  ld   $cd
              918a 00ee  ld   $ee
              918b 0000  ld   $00
              918c 002b  ld   $2b
              918d 0024  ld   $24
              918e 00ee  ld   $ee
              918f 0002  ld   $02
              9190 002b  ld   $2b
              9191 0026  ld   $26
              9192 00ee  ld   $ee
              9193 0004  ld   $04
              9194 002b  ld   $2b
              9195 0028  ld   $28
              9196 00df  ld   $df
              9197 0006  ld   $06
              9198 00ff  ld   $ff
              9199 00c1  ld   $c1
              919a 0000  ld   $00
              919b 0058  ld   $58
              919c 00a9  ld   $a9
              919d 00aa  ld   $aa
              919e 0020  ld   $20
              919f 00ef  ld   $ef
              91a0 00ff  ld   $ff
              91a1 00ae  ld   $ae
              91a2 0000  ld   $00
              91a3 00c2  ld   $c2
              91a4 00bd  ld   $bd
              91a5 0000  ld   $00
              91a6 00c2  ld   $c2
              91a7 0020  ld   $20
              91a8 00ef  ld   $ef
              91a9 00ff  ld   $ff
              91aa 00ca  ld   $ca
              91ab 00d0  ld   $d0
              91ac 00f7  ld   $f7
              91ad 00ae  ld   $ae
              91ae 0025  ld   $25
              91af 00c1  ld   $c1
              91b0 00bd  ld   $bd
              91b1 0025  ld   $25
              91b2 00c1  ld   $c1
              91b3 0020  ld   $20
              91b4 00ef  ld   $ef
              91b5 00ff  ld   $ff
              91b6 00ca  ld   $ca
              91b7 00d0  ld   $d0
              91b8 00f7  ld   $f7
              91b9 002c  ld   $2c
              91ba 0012  ld   $12
              91bb 00d0  ld   $d0
              91bc 0030  ld   $30
              91bd 00fb  ld   $fb
              91be 004c  ld   $4c
              91bf 0000  ld   $00
              91c0 00ff  ld   $ff
              91c1 0032  ld   $32
              91c2 008d  ld   $8d
              91c3 00ce  ld   $ce
              91c4 00cf  ld   $cf
              91c5 00cd  ld   $cd
              91c6 00da  ld   $da
              91c7 00cf  ld   $cf
              91c8 00d7  ld   $d7
              91c9 00a0  ld   $a0
              91ca 00da  ld   $da
              91cb 00ad  ld   $ad
              91cc 00cc  ld   $cc
              91cd 00d4  ld   $d4
              91ce 00c3  ld   $c3
              91cf 008d  ld   $8d
              91d0 00d4  ld   $d4
              91d1 00d2  ld   $d2
              91d2 00c1  ld   $c1
              91d3 00d4  ld   $d4
              91d4 00d3  ld   $d3
              91d5 00a0  ld   $a0
              91d6 00cd  ld   $cd
              91d7 00d2  ld   $d2
              91d8 00c1  ld   $c1
              91d9 00d7  ld   $d7
              91da 00a0  ld   $a0
              91db 00c3  ld   $c3
              91dc 00c9  ld   $c9
              91dd 00d3  ld   $d3
              91de 00c1  ld   $c1
              91df 00c2  ld   $c2
              91e0 00a0  ld   $a0
              91e1 00d2  ld   $d2
              91e2 00b3  ld   $b3
              91e3 00c2  ld   $c2
              91e4 00b2  ld   $b2
              91e5 00c5  ld   $c5
              91e6 008d  ld   $8d
              91e7 00c3  ld   $c3
              91e8 00c9  ld   $c9
              91e9 00d3  ld   $d3
              91ea 00c1  ld   $c1
              91eb 00c2  ld   $c2
              91ec 00a0  ld   $a0
              91ed 00d2  ld   $d2
              91ee 00c5  ld   $c5
              91ef 00c7  ld   $c7
              91f0 00c5  ld   $c5
              91f1 00d4  ld   $d4
              91f2 00ce  ld   $ce
              91f3 00c9  ld   $c9
              91f4 00c2  ld   $c2
              91f5 0000  ld   $00
              91f6 005b  ld   $5b
              91f7 005a  ld   $5a
              91f8 00a0  ld   $a0
              91f9 00d2  ld   $d2
              91fa 00b0  ld   $b0
              91fb fe00  bra  ac          ;+-----------------------------------+
              91fc fcfd  bra  $91fd       ;|                                   |
              91fd 1418  ld   $18,y       ;| Trampoline for page $9100 lookups |
              91fe e006  jmp  y,$06       ;|                                   |
              91ff c218  st   [$18]       ;+-----------------------------------+
              9200 00b0  ld   $b0
              9201 00b0  ld   $b0
              9202 00c5  ld   $c5
              9203 008d  ld   $8d
              9204 00d5  ld   $d5
              9205 00ce  ld   $ce
              9206 00c5  ld   $c5
              9207 00cd  ld   $cd
              9208 00a0  ld   $a0
              9209 00d2  ld   $d2
              920a 00b0  ld   $b0
              920b 00b0  ld   $b0
              920c 00b1  ld   $b1
              920d 00c3  ld   $c3
              920e 008d  ld   $8d
              920f 00d2  ld   $d2
              9210 00c5  ld   $c5
              9211 00cc  ld   $cc
              9212 00c2  ld   $c2
              9213 00cd  ld   $cd
              9214 00c5  ld   $c5
              9215 00d3  ld   $d3
              9216 00d3  ld   $d3
              9217 00c1  ld   $c1
              9218 00ad  ld   $ad
              9219 00c9  ld   $c9
              921a 00ce  ld   $ce
              921b 00c9  ld   $c9
              921c 00cd  ld   $cd
              921d 00a0  ld   $a0
              921e 00a0  ld   $a0
              921f 00d2  ld   $d2
              9220 00c5  ld   $c5
              9221 00c5  ld   $c5
              9222 00c5  ld   $c5
              9223 008d  ld   $8d
              9224 00c5  ld   $c5
              9225 00cc  ld   $cc
              9226 00da  ld   $da
              9227 00da  ld   $da
              9228 00d5  ld   $d5
              9229 00d0  ld   $d0
              922a 00ad  ld   $ad
              922b 00b5  ld   $b5
              922c 00b1  ld   $b1
              922d 00a0  ld   $a0
              922e 00a0  ld   $a0
              922f 00d2  ld   $d2
              9230 00b0  ld   $b0
              9231 00b0  ld   $b0
              9232 00b4  ld   $b4
              9233 008d  ld   $8d
              9234 00c4  ld   $c4
              9235 00ce  ld   $ce
              9236 00c9  ld   $c9
              9237 00cd  ld   $cd
              9238 00d2  ld   $d2
              9239 00c5  ld   $c5
              923a 00d4  ld   $d4
              923b 00d3  ld   $d3
              923c 00c1  ld   $c1
              923d 00cd  ld   $cd
              923e 00a0  ld   $a0
              923f 00a0  ld   $a0
              9240 00d2  ld   $d2
              9241 00b0  ld   $b0
              9242 00b0  ld   $b0
              9243 00b3  ld   $b3
              9244 008d  ld   $8d
              9245 008d  ld   $8d
              9246 00cc  ld   $cc
              9247 00d4  ld   $d4
              9248 00d4  ld   $d4
              9249 00a0  ld   $a0
              924a 00ce  ld   $ce
              924b 00cf  ld   $cf
              924c 00a0  ld   $a0
              924d 00b1  ld   $b1
              924e 00ad  ld   $ad
              924f 00c5  ld   $c5
              9250 00cc  ld   $cc
              9251 00d0  ld   $d0
              9252 00d0  ld   $d0
              9253 00c1  ld   $c1
              9254 008d  ld   $8d
              9255 008d  ld   $8d
              9256 008d  ld   $8d
              9257 00d0  ld   $d0
              9258 0010  ld   $10
              9259 0004  ld   $04
              925a 0000  ld   $00
              925b 0000  ld   $00
              925c 0000  ld   $00
              925d 0000  ld   $00
              925e 00e0  ld   $e0
              925f 0000  ld   $00
              9260 0000  ld   $00
              9261 004c  ld   $4c
              9262 00b0  ld   $b0
              9263 00e2  ld   $e2
              9264 00ad  ld   $ad
              9265 0011  ld   $11
              9266 00d0  ld   $d0
              9267 0010  ld   $10
              9268 00fb  ld   $fb
              9269 00ad  ld   $ad
              926a 0010  ld   $10
              926b 00d0  ld   $d0
              926c 0060  ld   $60
              926d 008a  ld   $8a
              926e 0029  ld   $29
              926f 0020  ld   $20
              9270 00f0  ld   $f0
              9271 0023  ld   $23
              9272 00a9  ld   $a9
              9273 00a0  ld   $a0
              9274 0085  ld   $85
              9275 0044  ld   $44
              9276 004c  ld   $4c
              9277 00c9  ld   $c9
              9278 00e3  ld   $e3
              9279 00a9  ld   $a9
              927a 0020  ld   $20
              927b 00c5  ld   $c5
              927c 0081  ld   $81
              927d 00b0  ld   $b0
              927e 000c  ld   $0c
              927f 00a9  ld   $a9
              9280 008d  ld   $8d
              9281 00a0  ld   $a0
              9282 0007  ld   $07
              9283 0020  ld   $20
              9284 00c9  ld   $c9
              9285 00e3  ld   $e3
              9286 00a9  ld   $a9
              9287 00a0  ld   $a0
              9288 0088  ld   $88
              9289 00d0  ld   $d0
              928a 00f8  ld   $f8
              928b 00a0  ld   $a0
              928c 0000  ld   $00
              928d 00b1  ld   $b1
              928e 0042  ld   $42
              928f 00e6  ld   $e6
              9290 0042  ld   $42
              9291 00d0  ld   $d0
              9292 0002  ld   $02
              9293 00e6  ld   $e6
              9294 0043  ld   $43
              9295 0060  ld   $60
              9296 0020  ld   $20
              9297 0015  ld   $15
              9298 00e7  ld   $e7
              9299 0020  ld   $20
              929a 0076  ld   $76
              929b 00e5  ld   $e5
              929c 00a5  ld   $a5
              929d 0042  ld   $42
              929e 00c5  ld   $c5
              929f 0046  ld   $46
              92a0 00a5  ld   $a5
              92a1 0043  ld   $43
              92a2 00e5  ld   $e5
              92a3 0047  ld   $47
              92a4 00b0  ld   $b0
              92a5 00ef  ld   $ef
              92a6 0020  ld   $20
              92a7 006d  ld   $6d
              92a8 00e0  ld   $e0
              92a9 004c  ld   $4c
              92aa 003b  ld   $3b
              92ab 00e0  ld   $e0
              92ac 00a5  ld   $a5
              92ad 00ca  ld   $ca
              92ae 0085  ld   $85
              92af 0042  ld   $42
              92b0 00a5  ld   $a5
              92b1 00cb  ld   $cb
              92b2 0085  ld   $85
              92b3 0043  ld   $43
              92b4 00a5  ld   $a5
              92b5 004c  ld   $4c
              92b6 0085  ld   $85
              92b7 0046  ld   $46
              92b8 00a5  ld   $a5
              92b9 004d  ld   $4d
              92ba 0085  ld   $85
              92bb 0047  ld   $47
              92bc 00d0  ld   $d0
              92bd 00de  ld   $de
              92be 0020  ld   $20
              92bf 0015  ld   $15
              92c0 00e7  ld   $e7
              92c1 0020  ld   $20
              92c2 006d  ld   $6d
              92c3 00e5  ld   $e5
              92c4 00a5  ld   $a5
              92c5 0044  ld   $44
              92c6 0085  ld   $85
              92c7 0042  ld   $42
              92c8 00a5  ld   $a5
              92c9 0045  ld   $45
              92ca 0085  ld   $85
              92cb 0043  ld   $43
              92cc 00b0  ld   $b0
              92cd 00c7  ld   $c7
              92ce 0086  ld   $86
              92cf 00d8  ld   $d8
              92d0 00a9  ld   $a9
              92d1 00a0  ld   $a0
              92d2 0085  ld   $85
              92d3 0082  ld   $82
              92d4 0020  ld   $20
              92d5 002a  ld   $2a
              92d6 00e0  ld   $e0
              92d7 0098  ld   $98
              92d8 0085  ld   $85
              92d9 0044  ld   $44
              92da 0020  ld   $20
              92db 002a  ld   $2a
              92dc 00e0  ld   $e0
              92dd 00aa  ld   $aa
              92de 0020  ld   $20
              92df 002a  ld   $2a
              92e0 00e0  ld   $e0
              92e1 0020  ld   $20
              92e2 001b  ld   $1b
              92e3 00e5  ld   $e5
              92e4 0020  ld   $20
              92e5 0018  ld   $18
              92e6 00e0  ld   $e0
              92e7 0084  ld   $84
              92e8 0082  ld   $82
              92e9 00aa  ld   $aa
              92ea 0010  ld   $10
              92eb 0018  ld   $18
              92ec 000a  ld   $0a
              92ed 0010  ld   $10
              92ee 00e9  ld   $e9
              92ef 00a5  ld   $a5
              92f0 0044  ld   $44
              92f1 00d0  ld   $d0
              92f2 0003  ld   $03
              92f3 0020  ld   $20
              92f4 0011  ld   $11
              92f5 00e0  ld   $e0
              92f6 008a  ld   $8a
              92f7 0020  ld   $20
              92f8 00c9  ld   $c9
              92f9 00e3  ld   $e3
              92fa 00a9  ld   $a9
              92fb fe00  bra  ac          ;+-----------------------------------+
              92fc fcfd  bra  $92fd       ;|                                   |
              92fd 1418  ld   $18,y       ;| Trampoline for page $9200 lookups |
              92fe e006  jmp  y,$06       ;|                                   |
              92ff c218  st   [$18]       ;+-----------------------------------+
              9300 0025  ld   $25
              9301 0020  ld   $20
              9302 001a  ld   $1a
              9303 00e0  ld   $e0
              9304 00aa  ld   $aa
              9305 0030  ld   $30
              9306 00f5  ld   $f5
              9307 0085  ld   $85
              9308 0044  ld   $44
              9309 00c9  ld   $c9
              930a 0001  ld   $01
              930b 00d0  ld   $d0
              930c 0005  ld   $05
              930d 00a6  ld   $a6
              930e 00d8  ld   $d8
              930f 004c  ld   $4c
              9310 00cd  ld   $cd
              9311 00e3  ld   $e3
              9312 0048  ld   $48
              9313 0084  ld   $84
              9314 00ce  ld   $ce
              9315 00a2  ld   $a2
              9316 00ed  ld   $ed
              9317 0086  ld   $86
              9318 00cf  ld   $cf
              9319 00c9  ld   $c9
              931a 0051  ld   $51
              931b 0090  ld   $90
              931c 0004  ld   $04
              931d 00c6  ld   $c6
              931e 00cf  ld   $cf
              931f 00e9  ld   $e9
              9320 0050  ld   $50
              9321 0048  ld   $48
              9322 00b1  ld   $b1
              9323 00ce  ld   $ce
              9324 00aa  ld   $aa
              9325 0088  ld   $88
              9326 00b1  ld   $b1
              9327 00ce  ld   $ce
              9328 0010  ld   $10
              9329 00fa  ld   $fa
              932a 00e0  ld   $e0
              932b 00c0  ld   $c0
              932c 00b0  ld   $b0
              932d 0004  ld   $04
              932e 00e0  ld   $e0
              932f 0000  ld   $00
              9330 0030  ld   $30
              9331 00f2  ld   $f2
              9332 00aa  ld   $aa
              9333 0068  ld   $68
              9334 00e9  ld   $e9
              9335 0001  ld   $01
              9336 00d0  ld   $d0
              9337 00e9  ld   $e9
              9338 0024  ld   $24
              9339 0044  ld   $44
              933a 0030  ld   $30
              933b 0003  ld   $03
              933c 0020  ld   $20
              933d 00f8  ld   $f8
              933e 00ef  ld   $ef
              933f 00b1  ld   $b1
              9340 00ce  ld   $ce
              9341 0010  ld   $10
              9342 0010  ld   $10
              9343 00aa  ld   $aa
              9344 0029  ld   $29
              9345 003f  ld   $3f
              9346 0085  ld   $85
              9347 0044  ld   $44
              9348 0018  ld   $18
              9349 0069  ld   $69
              934a 00a0  ld   $a0
              934b 0020  ld   $20
              934c 00c9  ld   $c9
              934d 00e3  ld   $e3
              934e 0088  ld   $88
              934f 00e0  ld   $e0
              9350 00c0  ld   $c0
              9351 0090  ld   $90
              9352 00ec  ld   $ec
              9353 0020  ld   $20
              9354 000c  ld   $0c
              9355 00e0  ld   $e0
              9356 0068  ld   $68
              9357 00c9  ld   $c9
              9358 005d  ld   $5d
              9359 00f0  ld   $f0
              935a 00a4  ld   $a4
              935b 00c9  ld   $c9
              935c 0028  ld   $28
              935d 00d0  ld   $d0
              935e 008a  ld   $8a
              935f 00f0  ld   $f0
              9360 009e  ld   $9e
              9361 0020  ld   $20
              9362 0018  ld   $18
              9363 00e1  ld   $e1
              9364 0095  ld   $95
              9365 0050  ld   $50
              9366 00e1  ld   $e1
              9367 0000  ld   $00
              9368 0000  ld   $00
              9369 00d5  ld   $d5
              936a 0088  ld   $88
              936b 0090  ld   $90
              936c 0011  ld   $11
              936d 00a0  ld   $a0
              936e 002b  ld   $2b
              936f 004c  ld   $4c
              9370 00e0  ld   $e0
              9371 00e3  ld   $e3
              9372 0020  ld   $20
              9373 0034  ld   $34
              9374 00ee  ld   $ee
              9375 00d5  ld   $d5
              9376 0050  ld   $50
              9377 0090  ld   $90
              9378 00f4  ld   $f4
              9379 0020  ld   $20
              937a 00e4  ld   $e4
              937b 00ef  ld   $ef
              937c 0095  ld   $95
              937d 0088  ld   $88
              937e 004c  ld   $4c
              937f 0023  ld   $23
              9380 00e8  ld   $e8
              9381 0020  ld   $20
              9382 0034  ld   $34
              9383 00ee  ld   $ee
              9384 00f0  ld   $f0
              9385 00e7  ld   $e7
              9386 0038  ld   $38
              9387 00e9  ld   $e9
              9388 0001  ld   $01
              9389 0060  ld   $60
              938a 0020  ld   $20
              938b 0018  ld   $18
              938c 00e1  ld   $e1
              938d 0095  ld   $95
              938e 0050  ld   $50
              938f 0018  ld   $18
              9390 00f5  ld   $f5
              9391 0088  ld   $88
              9392 004c  ld   $4c
              9393 0002  ld   $02
              9394 00e1  ld   $e1
              9395 00a0  ld   $a0
              9396 0014  ld   $14
              9397 00d0  ld   $d0
              9398 00d6  ld   $d6
              9399 0020  ld   $20
              939a 0018  ld   $18
              939b 00e1  ld   $e1
              939c 00e8  ld   $e8
              939d 00b5  ld   $b5
              939e 0050  ld   $50
              939f 0085  ld   $85
              93a0 00da  ld   $da
              93a1 0065  ld   $65
              93a2 00ce  ld   $ce
              93a3 0048  ld   $48
              93a4 00a8  ld   $a8
              93a5 00b5  ld   $b5
              93a6 0088  ld   $88
              93a7 0085  ld   $85
              93a8 00db  ld   $db
              93a9 0065  ld   $65
              93aa 00cf  ld   $cf
              93ab 0048  ld   $48
              93ac 00c4  ld   $c4
              93ad 00ca  ld   $ca
              93ae 00e5  ld   $e5
              93af 00cb  ld   $cb
              93b0 00b0  ld   $b0
              93b1 00e3  ld   $e3
              93b2 00a5  ld   $a5
              93b3 00da  ld   $da
              93b4 0069  ld   $69
              93b5 00fe  ld   $fe
              93b6 0085  ld   $85
              93b7 00da  ld   $da
              93b8 00a9  ld   $a9
              93b9 00ff  ld   $ff
              93ba 00a8  ld   $a8
              93bb 0065  ld   $65
              93bc 00db  ld   $db
              93bd 0085  ld   $85
              93be 00db  ld   $db
              93bf 00c8  ld   $c8
              93c0 00b1  ld   $b1
              93c1 00da  ld   $da
              93c2 00d9  ld   $d9
              93c3 00cc  ld   $cc
              93c4 0000  ld   $00
              93c5 00d0  ld   $d0
              93c6 000f  ld   $0f
              93c7 0098  ld   $98
              93c8 00f0  ld   $f0
              93c9 00f5  ld   $f5
              93ca 0068  ld   $68
              93cb 0091  ld   $91
              93cc 00da  ld   $da
              93cd 0099  ld   $99
              93ce 00cc  ld   $cc
              93cf 0000  ld   $00
              93d0 0088  ld   $88
              93d1 0010  ld   $10
              93d2 00f7  ld   $f7
              93d3 00e8  ld   $e8
              93d4 0060  ld   $60
              93d5 00ea  ld   $ea
              93d6 00a0  ld   $a0
              93d7 0080  ld   $80
              93d8 00d0  ld   $d0
              93d9 0095  ld   $95
              93da 00a9  ld   $a9
              93db 0000  ld   $00
              93dc 0020  ld   $20
              93dd 000a  ld   $0a
              93de 00e7  ld   $e7
              93df 00a0  ld   $a0
              93e0 0002  ld   $02
              93e1 0094  ld   $94
              93e2 0088  ld   $88
              93e3 0020  ld   $20
              93e4 000a  ld   $0a
              93e5 00e7  ld   $e7
              93e6 00a9  ld   $a9
              93e7 00bf  ld   $bf
              93e8 0020  ld   $20
              93e9 00c9  ld   $c9
              93ea 00e3  ld   $e3
              93eb 00a0  ld   $a0
              93ec 0000  ld   $00
              93ed 0020  ld   $20
              93ee 009e  ld   $9e
              93ef 00e2  ld   $e2
              93f0 0094  ld   $94
              93f1 0088  ld   $88
              93f2 00ea  ld   $ea
              93f3 00ea  ld   $ea
              93f4 00ea  ld   $ea
              93f5 00b5  ld   $b5
              93f6 0051  ld   $51
              93f7 0085  ld   $85
              93f8 00ce  ld   $ce
              93f9 00b5  ld   $b5
              93fa 0089  ld   $89
              93fb fe00  bra  ac          ;+-----------------------------------+
              93fc fcfd  bra  $93fd       ;|                                   |
              93fd 1418  ld   $18,y       ;| Trampoline for page $9300 lookups |
              93fe e006  jmp  y,$06       ;|                                   |
              93ff c218  st   [$18]       ;+-----------------------------------+
              9400 0085  ld   $85
              9401 00cf  ld   $cf
              9402 00e8  ld   $e8
              9403 00e8  ld   $e8
              9404 0020  ld   $20
              9405 00bc  ld   $bc
              9406 00e1  ld   $e1
              9407 00b5  ld   $b5
              9408 004e  ld   $4e
              9409 00d5  ld   $d5
              940a 0086  ld   $86
              940b 00b0  ld   $b0
              940c 0015  ld   $15
              940d 00f6  ld   $f6
              940e 004e  ld   $4e
              940f 00a8  ld   $a8
              9410 00b1  ld   $b1
              9411 00ce  ld   $ce
              9412 00b4  ld   $b4
              9413 0050  ld   $50
              9414 00c4  ld   $c4
              9415 0044  ld   $44
              9416 0090  ld   $90
              9417 0004  ld   $04
              9418 00a0  ld   $a0
              9419 0083  ld   $83
              941a 00d0  ld   $d0
              941b 00c1  ld   $c1
              941c 0091  ld   $91
              941d 00da  ld   $da
              941e 00f6  ld   $f6
              941f 0050  ld   $50
              9420 0090  ld   $90
              9421 00e5  ld   $e5
              9422 00b4  ld   $b4
              9423 0050  ld   $50
              9424 008a  ld   $8a
              9425 0091  ld   $91
              9426 00da  ld   $da
              9427 00e8  ld   $e8
              9428 00e8  ld   $e8
              9429 0060  ld   $60
              942a 00b5  ld   $b5
              942b 0051  ld   $51
              942c 0085  ld   $85
              942d 00da  ld   $da
              942e 0038  ld   $38
              942f 00e9  ld   $e9
              9430 0002  ld   $02
              9431 0085  ld   $85
              9432 0044  ld   $44
              9433 00b5  ld   $b5
              9434 0089  ld   $89
              9435 0085  ld   $85
              9436 00db  ld   $db
              9437 00e9  ld   $e9
              9438 0000  ld   $00
              9439 0085  ld   $85
              943a 0045  ld   $45
              943b 00a0  ld   $a0
              943c 0000  ld   $00
              943d 00b1  ld   $b1
              943e 0044  ld   $44
              943f 0018  ld   $18
              9440 00e5  ld   $e5
              9441 00da  ld   $da
              9442 0085  ld   $85
              9443 0044  ld   $44
              9444 0060  ld   $60
              9445 00b5  ld   $b5
              9446 0053  ld   $53
              9447 0085  ld   $85
              9448 00ce  ld   $ce
              9449 00b5  ld   $b5
              944a 008b  ld   $8b
              944b 0085  ld   $85
              944c 00cf  ld   $cf
              944d 00b5  ld   $b5
              944e 0051  ld   $51
              944f 0085  ld   $85
              9450 00da  ld   $da
              9451 00b5  ld   $b5
              9452 0089  ld   $89
              9453 0085  ld   $85
              9454 00db  ld   $db
              9455 00e8  ld   $e8
              9456 00e8  ld   $e8
              9457 00e8  ld   $e8
              9458 00a0  ld   $a0
              9459 0000  ld   $00
              945a 0094  ld   $94
              945b 0088  ld   $88
              945c 0094  ld   $94
              945d 00a8  ld   $a8
              945e 00c8  ld   $c8
              945f 0094  ld   $94
              9460 0050  ld   $50
              9461 00b5  ld   $b5
              9462 004d  ld   $4d
              9463 00d5  ld   $d5
              9464 0085  ld   $85
              9465 0008  ld   $08
              9466 0048  ld   $48
              9467 00b5  ld   $b5
              9468 004f  ld   $4f
              9469 00d5  ld   $d5
              946a 0087  ld   $87
              946b 0090  ld   $90
              946c 0007  ld   $07
              946d 0068  ld   $68
              946e 00e2  ld   $e2
              946f 0000  ld   $00
              9470 0000  ld   $00
              9471 0028  ld   $28
              9472 00b0  ld   $b0
              9473 0002  ld   $02
              9474 0056  ld   $56
              9475 0050  ld   $50
              9476 0060  ld   $60
              9477 00a8  ld   $a8
              9478 00b1  ld   $b1
              9479 00ce  ld   $ce
              947a 0085  ld   $85
              947b 0044  ld   $44
              947c 0068  ld   $68
              947d 00a8  ld   $a8
              947e 0028  ld   $28
              947f 00b0  ld   $b0
              9480 00f3  ld   $f3
              9481 00b1  ld   $b1
              9482 00da  ld   $da
              9483 00c5  ld   $c5
              9484 0044  ld   $44
              9485 00d0  ld   $d0
              9486 00ed  ld   $ed
              9487 00f6  ld   $f6
              9488 004f  ld   $4f
              9489 00f6  ld   $f6
              948a 004d  ld   $4d
              948b 00b0  ld   $b0
              948c 00d7  ld   $d7
              948d 0020  ld   $20
              948e 00d7  ld   $d7
              948f 00e1  ld   $e1
              9490 004c  ld   $4c
              9491 0036  ld   $36
              9492 00e7  ld   $e7
              9493 0020  ld   $20
              9494 0054  ld   $54
              9495 00e2  ld   $e2
              9496 0006  ld   $06
              9497 00ce  ld   $ce
              9498 0026  ld   $26
              9499 00cf  ld   $cf
              949a 0090  ld   $90
              949b 000d  ld   $0d
              949c 0018  ld   $18
              949d 00a5  ld   $a5
              949e 0046  ld   $46
              949f 0065  ld   $65
              94a0 00da  ld   $da
              94a1 0085  ld   $85
              94a2 0046  ld   $46
              94a3 00a5  ld   $a5
              94a4 0047  ld   $47
              94a5 0065  ld   $65
              94a6 00db  ld   $db
              94a7 0085  ld   $85
              94a8 0047  ld   $47
              94a9 0088  ld   $88
              94aa 00f0  ld   $f0
              94ab 0009  ld   $09
              94ac 0006  ld   $06
              94ad 0046  ld   $46
              94ae 0026  ld   $26
              94af 0047  ld   $47
              94b0 0010  ld   $10
              94b1 00e4  ld   $e4
              94b2 004c  ld   $4c
              94b3 007e  ld   $7e
              94b4 00e7  ld   $e7
              94b5 00a5  ld   $a5
              94b6 0046  ld   $46
              94b7 0020  ld   $20
              94b8 0008  ld   $08
              94b9 00e7  ld   $e7
              94ba 00a5  ld   $a5
              94bb 0047  ld   $47
              94bc 0095  ld   $95
              94bd 00a8  ld   $a8
              94be 0006  ld   $06
              94bf 0045  ld   $45
              94c0 0090  ld   $90
              94c1 0028  ld   $28
              94c2 004c  ld   $4c
              94c3 006f  ld   $6f
              94c4 00e7  ld   $e7
              94c5 00a9  ld   $a9
              94c6 0055  ld   $55
              94c7 0085  ld   $85
              94c8 0045  ld   $45
              94c9 0020  ld   $20
              94ca 005b  ld   $5b
              94cb 00e2  ld   $e2
              94cc 00a5  ld   $a5
              94cd 00ce  ld   $ce
              94ce 0085  ld   $85
              94cf 00da  ld   $da
              94d0 00a5  ld   $a5
              94d1 00cf  ld   $cf
              94d2 0085  ld   $85
              94d3 00db  ld   $db
              94d4 0020  ld   $20
              94d5 0015  ld   $15
              94d6 00e7  ld   $e7
              94d7 0084  ld   $84
              94d8 0046  ld   $46
              94d9 0084  ld   $84
              94da 0047  ld   $47
              94db 00a5  ld   $a5
              94dc 00cf  ld   $cf
              94dd 0010  ld   $10
              94de 0009  ld   $09
              94df 00ca  ld   $ca
              94e0 0006  ld   $06
              94e1 0045  ld   $45
              94e2 0020  ld   $20
              94e3 006f  ld   $6f
              94e4 00e7  ld   $e7
              94e5 0020  ld   $20
              94e6 0015  ld   $15
              94e7 00e7  ld   $e7
              94e8 00a0  ld   $a0
              94e9 0010  ld   $10
              94ea 0060  ld   $60
              94eb 0020  ld   $20
              94ec 006c  ld   $6c
              94ed 00ee  ld   $ee
              94ee 00f0  ld   $f0
              94ef 00c5  ld   $c5
              94f0 00ff  ld   $ff
              94f1 00c9  ld   $c9
              94f2 0084  ld   $84
              94f3 00d0  ld   $d0
              94f4 0002  ld   $02
              94f5 0046  ld   $46
              94f6 0078  ld   $78
              94f7 00c9  ld   $c9
              94f8 00df  ld   $df
              94f9 00f0  ld   $f0
              94fa 0011  ld   $11
              94fb fe00  bra  ac          ;+-----------------------------------+
              94fc fcfd  bra  $94fd       ;|                                   |
              94fd 1418  ld   $18,y       ;| Trampoline for page $9400 lookups |
              94fe e006  jmp  y,$06       ;|                                   |
              94ff c218  st   [$18]       ;+-----------------------------------+
              9500 00c9  ld   $c9
              9501 009b  ld   $9b
              9502 00f0  ld   $f0
              9503 0006  ld   $06
              9504 0099  ld   $99
              9505 0000  ld   $00
              9506 0002  ld   $02
              9507 00c8  ld   $c8
              9508 0010  ld   $10
              9509 000a  ld   $0a
              950a 00a0  ld   $a0
              950b 008b  ld   $8b
              950c 0020  ld   $20
              950d 00c4  ld   $c4
              950e 00e3  ld   $e3
              950f 00a0  ld   $a0
              9510 0001  ld   $01
              9511 0088  ld   $88
              9512 0030  ld   $30
              9513 00f6  ld   $f6
              9514 0020  ld   $20
              9515 0003  ld   $03
              9516 00e0  ld   $e0
              9517 00ea  ld   $ea
              9518 00ea  ld   $ea
              9519 0020  ld   $20
              951a 00c9  ld   $c9
              951b 00e3  ld   $e3
              951c 00c9  ld   $c9
              951d 008d  ld   $8d
              951e 00d0  ld   $d0
              951f 00d6  ld   $d6
              9520 00a9  ld   $a9
              9521 00df  ld   $df
              9522 0099  ld   $99
              9523 0000  ld   $00
              9524 0002  ld   $02
              9525 0060  ld   $60
              9526 0020  ld   $20
              9527 00d3  ld   $d3
              9528 00ef  ld   $ef
              9529 0020  ld   $20
              952a 00cd  ld   $cd
              952b 00e3  ld   $e3
              952c 0046  ld   $46
              952d 00d9  ld   $d9
              952e 00a9  ld   $a9
              952f 00be  ld   $be
              9530 0020  ld   $20
              9531 00c9  ld   $c9
              9532 00e3  ld   $e3
              9533 00a0  ld   $a0
              9534 0000  ld   $00
              9535 0084  ld   $84
              9536 0082  ld   $82
              9537 0024  ld   $24
              9538 0078  ld   $78
              9539 0010  ld   $10
              953a 000c  ld   $0c
              953b 00a6  ld   $a6
              953c 0076  ld   $76
              953d 00a5  ld   $a5
              953e 0077  ld   $77
              953f 0020  ld   $20
              9540 001b  ld   $1b
              9541 00e5  ld   $e5
              9542 00a9  ld   $a9
              9543 00a0  ld   $a0
              9544 0020  ld   $20
              9545 00c9  ld   $c9
              9546 00e3  ld   $e3
              9547 00a2  ld   $a2
              9548 00ff  ld   $ff
              9549 009a  ld   $9a
              954a 0020  ld   $20
              954b 009e  ld   $9e
              954c 00e2  ld   $e2
              954d 0084  ld   $84
              954e 00e9  ld   $e9
              954f 008a  ld   $8a
              9550 0085  ld   $85
              9551 00c8  ld   $c8
              9552 00a2  ld   $a2
              9553 0018  ld   $18
              9554 0020  ld   $20
              9555 0091  ld   $91
              9556 00e4  ld   $e4
              9557 00a5  ld   $a5
              9558 00c8  ld   $c8
              9559 0069  ld   $69
              955a 0000  ld   $00
              955b 0085  ld   $85
              955c 00de  ld   $de
              955d 00a9  ld   $a9
              955e 0000  ld   $00
              955f 00aa  ld   $aa
              9560 0069  ld   $69
              9561 0002  ld   $02
              9562 0085  ld   $85
              9563 00df  ld   $df
              9564 00a1  ld   $a1
              9565 00de  ld   $de
              9566 0029  ld   $29
              9567 00f0  ld   $f0
              9568 00c9  ld   $c9
              9569 00b0  ld   $b0
              956a 00f0  ld   $f0
              956b 0003  ld   $03
              956c 004c  ld   $4c
              956d 0083  ld   $83
              956e 00e8  ld   $e8
              956f 00a0  ld   $a0
              9570 0002  ld   $02
              9571 00b1  ld   $b1
              9572 00de  ld   $de
              9573 0099  ld   $99
              9574 00cd  ld   $cd
              9575 0000  ld   $00
              9576 00e3  ld   $e3
              9577 0000  ld   $00
              9578 0000  ld   $00
              9579 0088  ld   $88
              957a 00d0  ld   $d0
              957b 00f8  ld   $f8
              957c 0020  ld   $20
              957d 008a  ld   $8a
              957e 00e3  ld   $e3
              957f 00a5  ld   $a5
              9580 00e9  ld   $e9
              9581 00e5  ld   $e5
              9582 00c8  ld   $c8
              9583 00c9  ld   $c9
              9584 0004  ld   $04
              9585 00f0  ld   $f0
              9586 00a8  ld   $a8
              9587 0091  ld   $91
              9588 00de  ld   $de
              9589 00a5  ld   $a5
              958a 00ca  ld   $ca
              958b 00f1  ld   $f1
              958c 00de  ld   $de
              958d 0085  ld   $85
              958e 0044  ld   $44
              958f 00a5  ld   $a5
              9590 00cb  ld   $cb
              9591 00e9  ld   $e9
              9592 0000  ld   $00
              9593 0085  ld   $85
              9594 0045  ld   $45
              9595 00a5  ld   $a5
              9596 0044  ld   $44
              9597 00c5  ld   $c5
              9598 00cc  ld   $cc
              9599 00a5  ld   $a5
              959a 0045  ld   $45
              959b 00e5  ld   $e5
              959c 00cd  ld   $cd
              959d 0090  ld   $90
              959e 0045  ld   $45
              959f 00a5  ld   $a5
              95a0 00ca  ld   $ca
              95a1 00f1  ld   $f1
              95a2 00de  ld   $de
              95a3 0085  ld   $85
              95a4 0046  ld   $46
              95a5 00a5  ld   $a5
              95a6 00cb  ld   $cb
              95a7 00e9  ld   $e9
              95a8 0000  ld   $00
              95a9 0085  ld   $85
              95aa 0047  ld   $47
              95ab 00b1  ld   $b1
              95ac 00ca  ld   $ca
              95ad 0091  ld   $91
              95ae 0046  ld   $46
              95af 00e6  ld   $e6
              95b0 00ca  ld   $ca
              95b1 00d0  ld   $d0
              95b2 0002  ld   $02
              95b3 00e6  ld   $e6
              95b4 00cb  ld   $cb
              95b5 00a5  ld   $a5
              95b6 0042  ld   $42
              95b7 00c5  ld   $c5
              95b8 00ca  ld   $ca
              95b9 00a5  ld   $a5
              95ba 0043  ld   $43
              95bb 00e5  ld   $e5
              95bc 00cb  ld   $cb
              95bd 00b0  ld   $b0
              95be 00e0  ld   $e0
              95bf 00b5  ld   $b5
              95c0 0044  ld   $44
              95c1 0095  ld   $95
              95c2 00ca  ld   $ca
              95c3 00ca  ld   $ca
              95c4 0010  ld   $10
              95c5 00f9  ld   $f9
              95c6 00b1  ld   $b1
              95c7 00de  ld   $de
              95c8 00a8  ld   $a8
              95c9 0088  ld   $88
              95ca 00b1  ld   $b1
              95cb 00de  ld   $de
              95cc 0091  ld   $91
              95cd 0046  ld   $46
              95ce 0098  ld   $98
              95cf 00d0  ld   $d0
              95d0 00f8  ld   $f8
              95d1 0024  ld   $24
              95d2 0078  ld   $78
              95d3 0010  ld   $10
              95d4 0009  ld   $09
              95d5 00b5  ld   $b5
              95d6 0077  ld   $77
              95d7 0075  ld   $75
              95d8 0075  ld   $75
              95d9 0095  ld   $95
              95da 0077  ld   $77
              95db 00e8  ld   $e8
              95dc 00f0  ld   $f0
              95dd 00f7  ld   $f7
              95de 0010  ld   $10
              95df 007e  ld   $7e
              95e0 0000  ld   $00
              95e1 0000  ld   $00
              95e2 0000  ld   $00
              95e3 0000  ld   $00
              95e4 00a0  ld   $a0
              95e5 0014  ld   $14
              95e6 00d0  ld   $d0
              95e7 0071  ld   $71
              95e8 0020  ld   $20
              95e9 0015  ld   $15
              95ea 00e7  ld   $e7
              95eb 00a5  ld   $a5
              95ec 0042  ld   $42
              95ed 0085  ld   $85
              95ee 0046  ld   $46
              95ef 00a5  ld   $a5
              95f0 0043  ld   $43
              95f1 0085  ld   $85
              95f2 0047  ld   $47
              95f3 0020  ld   $20
              95f4 0075  ld   $75
              95f5 00e5  ld   $e5
              95f6 00a5  ld   $a5
              95f7 0042  ld   $42
              95f8 0085  ld   $85
              95f9 0044  ld   $44
              95fa 00a5  ld   $a5
              95fb fe00  bra  ac          ;+-----------------------------------+
              95fc fcfd  bra  $95fd       ;|                                   |
              95fd 1418  ld   $18,y       ;| Trampoline for page $9500 lookups |
              95fe e006  jmp  y,$06       ;|                                   |
              95ff c218  st   [$18]       ;+-----------------------------------+
              9600 0043  ld   $43
              9601 0085  ld   $85
              9602 0045  ld   $45
              9603 00d0  ld   $d0
              9604 000e  ld   $0e
              9605 0020  ld   $20
              9606 0015  ld   $15
              9607 00e7  ld   $e7
              9608 0020  ld   $20
              9609 006d  ld   $6d
              960a 00e5  ld   $e5
              960b 00a5  ld   $a5
              960c 0046  ld   $46
              960d 0085  ld   $85
              960e 0042  ld   $42
              960f 00a5  ld   $a5
              9610 0047  ld   $47
              9611 0085  ld   $85
              9612 0043  ld   $43
              9613 00a0  ld   $a0
              9614 0000  ld   $00
              9615 00a5  ld   $a5
              9616 00ca  ld   $ca
              9617 00c5  ld   $c5
              9618 0044  ld   $44
              9619 00a5  ld   $a5
              961a 00cb  ld   $cb
              961b 00e5  ld   $e5
              961c 0045  ld   $45
              961d 00b0  ld   $b0
              961e 0016  ld   $16
              961f 00a5  ld   $a5
              9620 0044  ld   $44
              9621 00d0  ld   $d0
              9622 0002  ld   $02
              9623 00c6  ld   $c6
              9624 0045  ld   $45
              9625 00c6  ld   $c6
              9626 0044  ld   $44
              9627 00a5  ld   $a5
              9628 0046  ld   $46
              9629 00d0  ld   $d0
              962a 0002  ld   $02
              962b 00c6  ld   $c6
              962c 0047  ld   $47
              962d 00c6  ld   $c6
              962e 0046  ld   $46
              962f 00b1  ld   $b1
              9630 0044  ld   $44
              9631 0091  ld   $91
              9632 0046  ld   $46
              9633 0090  ld   $90
              9634 00e0  ld   $e0
              9635 00a5  ld   $a5
              9636 0046  ld   $46
              9637 0085  ld   $85
              9638 00ca  ld   $ca
              9639 00a5  ld   $a5
              963a 0047  ld   $47
              963b 0085  ld   $85
              963c 00cb  ld   $cb
              963d 0060  ld   $60
              963e 0020  ld   $20
              963f 00c9  ld   $c9
              9640 00e3  ld   $e3
              9641 00c8  ld   $c8
              9642 00b9  ld   $b9
              9643 0000  ld   $00
              9644 00eb  ld   $eb
              9645 0030  ld   $30
              9646 00f7  ld   $f7
              9647 00c9  ld   $c9
              9648 008d  ld   $8d
              9649 00d0  ld   $d0
              964a 0006  ld   $06
              964b 00a9  ld   $a9
              964c 0000  ld   $00
              964d 0085  ld   $85
              964e 0081  ld   $81
              964f 00a9  ld   $a9
              9650 008d  ld   $8d
              9651 00e6  ld   $e6
              9652 0081  ld   $81
              9653 004c  ld   $4c
              9654 00ef  ld   $ef
              9655 00ff  ld   $ff
              9656 00ea  ld   $ea
              9657 00ea  ld   $ea
              9658 00ea  ld   $ea
              * 6 times
              965c 00a0  ld   $a0
              965d 0006  ld   $06
              965e 0020  ld   $20
              965f 00d3  ld   $d3
              9660 00ee  ld   $ee
              9661 0024  ld   $24
              9662 00d9  ld   $d9
              9663 0030  ld   $30
              9664 0003  ld   $03
              9665 004c  ld   $4c
              9666 00b6  ld   $b6
              9667 00e2  ld   $e2
              9668 004c  ld   $4c
              9669 009a  ld   $9a
              966a 00eb  ld   $eb
              966b 002a  ld   $2a
              966c 0069  ld   $69
              966d 00a0  ld   $a0
              966e 00dd  ld   $dd
              966f 0000  ld   $00
              9670 0002  ld   $02
              9671 00d0  ld   $d0
              9672 0053  ld   $53
              9673 00b1  ld   $b1
              9674 0086  ld   $86
              9675 000a  ld   $0a
              9676 0030  ld   $30
              9677 0006  ld   $06
              9678 0088  ld   $88
              9679 00b1  ld   $b1
              967a 0086  ld   $86
              967b 0030  ld   $30
              967c 0029  ld   $29
              967d 00c8  ld   $c8
              967e 00e4  ld   $e4
              967f 0000  ld   $00
              9680 0000  ld   $00
              9681 0086  ld   $86
              9682 00c8  ld   $c8
              9683 0098  ld   $98
              9684 0048  ld   $48
              9685 00a2  ld   $a2
              9686 0000  ld   $00
              9687 00a1  ld   $a1
              9688 0086  ld   $86
              9689 00aa  ld   $aa
              968a 004a  ld   $4a
              968b 0049  ld   $49
              968c 0048  ld   $48
              968d 0011  ld   $11
              968e 0086  ld   $86
              968f 00c9  ld   $c9
              9690 00c0  ld   $c0
              9691 0090  ld   $90
              9692 0001  ld   $01
              9693 00e8  ld   $e8
              9694 00c8  ld   $c8
              9695 00d0  ld   $d0
              9696 00f3  ld   $f3
              9697 0068  ld   $68
              9698 00a8  ld   $a8
              9699 008a  ld   $8a
              969a 004c  ld   $4c
              969b 00c0  ld   $c0
              969c 00e4  ld   $e4
              969d 00e6  ld   $e6
              969e 00e9  ld   $e9
              969f 00a6  ld   $a6
              96a0 00e9  ld   $e9
              96a1 00f0  ld   $f0
              96a2 00bc  ld   $bc
              96a3 009d  ld   $9d
              96a4 0000  ld   $00
              96a5 0002  ld   $02
              96a6 0060  ld   $60
              96a7 00a6  ld   $a6
              96a8 00c8  ld   $c8
              96a9 00a9  ld   $a9
              96aa 00a0  ld   $a0
              96ab 00e8  ld   $e8
              96ac 00dd  ld   $dd
              96ad 0000  ld   $00
              96ae 0002  ld   $02
              96af 00b0  ld   $b0
              96b0 00fa  ld   $fa
              96b1 00b1  ld   $b1
              96b2 0086  ld   $86
              96b3 0029  ld   $29
              96b4 003f  ld   $3f
              96b5 004a  ld   $4a
              96b6 00d0  ld   $d0
              96b7 00b6  ld   $b6
              96b8 00bd  ld   $bd
              96b9 0000  ld   $00
              96ba 0002  ld   $02
              96bb 00b0  ld   $b0
              96bc 0006  ld   $06
              96bd 0069  ld   $69
              96be 003f  ld   $3f
              96bf 00c9  ld   $c9
              96c0 001a  ld   $1a
              96c1 0090  ld   $90
              96c2 006f  ld   $6f
              96c3 0069  ld   $69
              96c4 004f  ld   $4f
              96c5 00c9  ld   $c9
              96c6 000a  ld   $0a
              96c7 0090  ld   $90
              96c8 0069  ld   $69
              96c9 00a6  ld   $a6
              96ca 0085  ld   $85
              96cb 00c8  ld   $c8
              96cc 00b1  ld   $b1
              96cd 0086  ld   $86
              96ce 0029  ld   $29
              96cf 00e0  ld   $e0
              96d0 00c9  ld   $c9
              96d1 0020  ld   $20
              96d2 00f0  ld   $f0
              96d3 007a  ld   $7a
              96d4 00b5  ld   $b5
              96d5 00b0  ld   $b0
              96d6 0085  ld   $85
              96d7 00c8  ld   $c8
              96d8 00b5  ld   $b5
              96d9 00d1  ld   $d1
              96da 0085  ld   $85
              96db 00e9  ld   $e9
              96dc 0088  ld   $88
              96dd 00b1  ld   $b1
              96de 0086  ld   $86
              96df 000a  ld   $0a
              96e0 0010  ld   $10
              96e1 00fa  ld   $fa
              96e2 0088  ld   $88
              96e3 00b0  ld   $b0
              96e4 0038  ld   $38
              96e5 000a  ld   $0a
              96e6 0030  ld   $30
              96e7 0035  ld   $35
              96e8 00b4  ld   $b4
              96e9 0058  ld   $58
              96ea 0084  ld   $84
              96eb 0087  ld   $87
              96ec 00b4  ld   $b4
              96ed 0090  ld   $90
              96ee 00e8  ld   $e8
              96ef 0010  ld   $10
              96f0 00da  ld   $da
              96f1 00f0  ld   $f0
              96f2 00b3  ld   $b3
              96f3 00c9  ld   $c9
              96f4 007e  ld   $7e
              96f5 00b0  ld   $b0
              96f6 0022  ld   $22
              96f7 00ca  ld   $ca
              96f8 0010  ld   $10
              96f9 0004  ld   $04
              96fa 00a0  ld   $a0
              96fb fe00  bra  ac          ;+-----------------------------------+
              96fc fcfd  bra  $96fd       ;|                                   |
              96fd 1418  ld   $18,y       ;| Trampoline for page $9600 lookups |
              96fe e006  jmp  y,$06       ;|                                   |
              96ff c218  st   [$18]       ;+-----------------------------------+
              9700 0006  ld   $06
              9701 0010  ld   $10
              9702 0029  ld   $29
              9703 0094  ld   $94
              9704 0090  ld   $90
              9705 00a4  ld   $a4
              9706 0087  ld   $87
              9707 0094  ld   $94
              9708 0058  ld   $58
              9709 00a4  ld   $a4
              970a 00c8  ld   $c8
              970b 0094  ld   $94
              970c 00b0  ld   $b0
              970d 00a4  ld   $a4
              970e 00e9  ld   $e9
              970f 0094  ld   $94
              9710 00d1  ld   $d1
              9711 0029  ld   $29
              9712 001f  ld   $1f
              9713 00a8  ld   $a8
              9714 00b9  ld   $b9
              9715 0020  ld   $20
              9716 00ec  ld   $ec
              9717 000a  ld   $0a
              9718 00a8  ld   $a8
              9719 00a9  ld   $a9
              971a 0076  ld   $76
              971b 002a  ld   $2a
              971c 0085  ld   $85
              971d 0087  ld   $87
              971e 00d0  ld   $d0
              971f 0001  ld   $01
              9720 00c8  ld   $c8
              9721 00c8  ld   $c8
              9722 0086  ld   $86
              9723 0085  ld   $85
              9724 00b1  ld   $b1
              9725 0086  ld   $86
              9726 0030  ld   $30
              9727 0084  ld   $84
              9728 00d0  ld   $d0
              9729 0005  ld   $05
              972a 00a0  ld   $a0
              972b 000e  ld   $0e
              972c 004c  ld   $4c
              972d 00e0  ld   $e0
              972e 00e3  ld   $e3
              972f 00c9  ld   $c9
              9730 0003  ld   $03
              9731 00b0  ld   $b0
              9732 00c3  ld   $c3
              9733 004a  ld   $4a
              9734 00a6  ld   $a6
              9735 00c8  ld   $c8
              9736 00e8  ld   $e8
              9737 00bd  ld   $bd
              9738 0000  ld   $00
              9739 0002  ld   $02
              973a 0090  ld   $90
              973b 0004  ld   $04
              973c 00c9  ld   $c9
              973d 00a2  ld   $a2
              973e 00f0  ld   $f0
              973f 000a  ld   $0a
              9740 00c9  ld   $c9
              9741 00df  ld   $df
              9742 00f0  ld   $f0
              9743 0006  ld   $06
              9744 0086  ld   $86
              9745 00c8  ld   $c8
              9746 0020  ld   $20
              9747 001c  ld   $1c
              9748 00e4  ld   $e4
              9749 00c8  ld   $c8
              974a 0088  ld   $88
              974b 00a6  ld   $a6
              974c 0085  ld   $85
              974d 00b1  ld   $b1
              974e 0086  ld   $86
              974f 0088  ld   $88
              9750 000a  ld   $0a
              9751 0010  ld   $10
              9752 00cf  ld   $cf
              9753 00b4  ld   $b4
              9754 0058  ld   $58
              9755 0084  ld   $84
              9756 0087  ld   $87
              9757 00b4  ld   $b4
              9758 0090  ld   $90
              9759 00e8  ld   $e8
              975a 00b1  ld   $b1
              975b 0086  ld   $86
              975c 0029  ld   $29
              975d 009f  ld   $9f
              975e 00d0  ld   $d0
              975f 00ed  ld   $ed
              9760 0085  ld   $85
              9761 0072  ld   $72
              9762 0085  ld   $85
              9763 0073  ld   $73
              9764 0098  ld   $98
              9765 0048  ld   $48
              9766 0086  ld   $86
              9767 0085  ld   $85
              9768 00b4  ld   $b4
              9769 00d0  ld   $d0
              976a 0084  ld   $84
              976b 00c9  ld   $c9
              976c 0018  ld   $18
              976d 00a9  ld   $a9
              976e 000a  ld   $0a
              976f 0085  ld   $85
              9770 0079  ld   $79
              9771 00a2  ld   $a2
              9772 0000  ld   $00
              9773 00c8  ld   $c8
              9774 00b9  ld   $b9
              9775 0000  ld   $00
              9776 0002  ld   $02
              9777 0029  ld   $29
              9778 000f  ld   $0f
              9779 0065  ld   $65
              977a 0072  ld   $72
              977b 0048  ld   $48
              977c 008a  ld   $8a
              977d 0065  ld   $65
              977e 0073  ld   $73
              977f 0030  ld   $30
              9780 001c  ld   $1c
              9781 00aa  ld   $aa
              9782 0068  ld   $68
              9783 00c6  ld   $c6
              9784 0079  ld   $79
              9785 00d0  ld   $d0
              9786 00e5  ld   $e5
              9787 0000  ld   $00
              9788 0000  ld   $00
              9789 00f2  ld   $f2
              978a 0085  ld   $85
              978b 0072  ld   $72
              978c 0086  ld   $86
              978d 0073  ld   $73
              978e 00c4  ld   $c4
              978f 00e9  ld   $e9
              9790 00d0  ld   $d0
              9791 00de  ld   $de
              9792 00a4  ld   $a4
              9793 00c9  ld   $c9
              9794 00c8  ld   $c8
              9795 0084  ld   $84
              9796 00e9  ld   $e9
              9797 0020  ld   $20
              9798 001c  ld   $1c
              9799 00e4  ld   $e4
              979a 0068  ld   $68
              979b 00a8  ld   $a8
              979c 00a5  ld   $a5
              979d 0073  ld   $73
              979e 00b0  ld   $b0
              979f 00a9  ld   $a9
              97a0 00a0  ld   $a0
              97a1 0000  ld   $00
              97a2 0010  ld   $10
              97a3 008b  ld   $8b
              97a4 0085  ld   $85
              97a5 0073  ld   $73
              97a6 0086  ld   $86
              97a7 0072  ld   $72
              97a8 00a2  ld   $a2
              97a9 0004  ld   $04
              97aa 0086  ld   $86
              97ab 00c9  ld   $c9
              97ac 00a9  ld   $a9
              97ad 00b0  ld   $b0
              97ae 0085  ld   $85
              97af 0079  ld   $79
              97b0 00a5  ld   $a5
              97b1 0072  ld   $72
              97b2 00dd  ld   $dd
              97b3 0063  ld   $63
              97b4 00e5  ld   $e5
              97b5 00a5  ld   $a5
              97b6 0073  ld   $73
              97b7 00fd  ld   $fd
              97b8 0068  ld   $68
              97b9 00e5  ld   $e5
              97ba 0090  ld   $90
              97bb 000d  ld   $0d
              97bc 0085  ld   $85
              97bd 0073  ld   $73
              97be 00a5  ld   $a5
              97bf 0072  ld   $72
              97c0 00fd  ld   $fd
              97c1 0063  ld   $63
              97c2 00e5  ld   $e5
              97c3 0085  ld   $85
              97c4 0072  ld   $72
              97c5 00e6  ld   $e6
              97c6 0079  ld   $79
              97c7 00d0  ld   $d0
              97c8 00e7  ld   $e7
              97c9 00a5  ld   $a5
              97ca 0079  ld   $79
              97cb 00e8  ld   $e8
              97cc 00ca  ld   $ca
              97cd 00f0  ld   $f0
              97ce 000e  ld   $0e
              97cf 00c9  ld   $c9
              97d0 00b0  ld   $b0
              97d1 00f0  ld   $f0
              97d2 0002  ld   $02
              97d3 0085  ld   $85
              97d4 00c9  ld   $c9
              97d5 0024  ld   $24
              97d6 00c9  ld   $c9
              97d7 0030  ld   $30
              97d8 0004  ld   $04
              97d9 00a5  ld   $a5
              97da 0082  ld   $82
              97db 00f0  ld   $f0
              97dc 000b  ld   $0b
              97dd 0020  ld   $20
              97de 00c9  ld   $c9
              97df 00e3  ld   $e3
              97e0 0024  ld   $24
              97e1 0078  ld   $78
              97e2 0010  ld   $10
              97e3 0004  ld   $04
              97e4 0099  ld   $99
              97e5 0000  ld   $00
              97e6 0002  ld   $02
              97e7 00c8  ld   $c8
              97e8 00ca  ld   $ca
              97e9 0010  ld   $10
              97ea 00c1  ld   $c1
              97eb 0060  ld   $60
              97ec 0001  ld   $01
              97ed 000a  ld   $0a
              97ee 0064  ld   $64
              97ef 00e8  ld   $e8
              97f0 0010  ld   $10
              97f1 0000  ld   $00
              97f2 0000  ld   $00
              97f3 0000  ld   $00
              97f4 0003  ld   $03
              97f5 0027  ld   $27
              97f6 00a5  ld   $a5
              97f7 00ca  ld   $ca
              97f8 0085  ld   $85
              97f9 0046  ld   $46
              97fa 00a5  ld   $a5
              97fb fe00  bra  ac          ;+-----------------------------------+
              97fc fcfd  bra  $97fd       ;|                                   |
              97fd 1418  ld   $18,y       ;| Trampoline for page $9700 lookups |
              97fe e006  jmp  y,$06       ;|                                   |
              97ff c218  st   [$18]       ;+-----------------------------------+
              9800 00cb  ld   $cb
              9801 0085  ld   $85
              9802 0047  ld   $47
              9803 00e8  ld   $e8
              9804 00a5  ld   $a5
              9805 0047  ld   $47
              9806 0085  ld   $85
              9807 0045  ld   $45
              9808 00a5  ld   $a5
              9809 0046  ld   $46
              980a 0085  ld   $85
              980b 0044  ld   $44
              980c 00c5  ld   $c5
              980d 004c  ld   $4c
              980e 00a5  ld   $a5
              980f 0045  ld   $45
              9810 00e5  ld   $e5
              9811 004d  ld   $4d
              9812 00b0  ld   $b0
              9813 0026  ld   $26
              9814 00a0  ld   $a0
              9815 0001  ld   $01
              9816 00b1  ld   $b1
              9817 0044  ld   $44
              9818 00e5  ld   $e5
              9819 00ce  ld   $ce
              981a 00c8  ld   $c8
              981b 00b1  ld   $b1
              981c 0044  ld   $44
              981d 00e5  ld   $e5
              981e 00cf  ld   $cf
              981f 00b0  ld   $b0
              9820 0019  ld   $19
              9821 00a0  ld   $a0
              9822 0000  ld   $00
              9823 00a5  ld   $a5
              9824 0046  ld   $46
              9825 0071  ld   $71
              9826 0044  ld   $44
              9827 0085  ld   $85
              9828 0046  ld   $46
              9829 0090  ld   $90
              982a 0003  ld   $03
              982b 00e6  ld   $e6
              982c 0047  ld   $47
              982d 0018  ld   $18
              982e 00c8  ld   $c8
              982f 00a5  ld   $a5
              9830 00ce  ld   $ce
              9831 00f1  ld   $f1
              9832 0044  ld   $44
              9833 00c8  ld   $c8
              9834 00a5  ld   $a5
              9835 00cf  ld   $cf
              9836 00f1  ld   $f1
              9837 0044  ld   $44
              9838 00b0  ld   $b0
              9839 00ca  ld   $ca
              983a 0060  ld   $60
              983b 0046  ld   $46
              983c 0078  ld   $78
              983d 00a5  ld   $a5
              983e 004c  ld   $4c
              983f 0085  ld   $85
              9840 00ca  ld   $ca
              9841 00a5  ld   $a5
              9842 004d  ld   $4d
              9843 0085  ld   $85
              9844 00cb  ld   $cb
              9845 00a5  ld   $a5
              9846 004a  ld   $4a
              9847 0085  ld   $85
              9848 00cc  ld   $cc
              9849 00a5  ld   $a5
              984a 004b  ld   $4b
              984b 0085  ld   $85
              984c 00cd  ld   $cd
              984d 00a9  ld   $a9
              984e 0000  ld   $00
              984f 0085  ld   $85
              9850 0083  ld   $83
              9851 0085  ld   $85
              9852 0084  ld   $84
              9853 0085  ld   $85
              9854 0086  ld   $86
              9855 00a9  ld   $a9
              9856 0000  ld   $00
              9857 0085  ld   $85
              9858 001d  ld   $1d
              9859 0060  ld   $60
              985a 00a5  ld   $a5
              985b 00d0  ld   $d0
              985c 0069  ld   $69
              985d 0005  ld   $05
              985e 0085  ld   $85
              985f 00d2  ld   $d2
              9860 00a5  ld   $a5
              9861 00d1  ld   $d1
              9862 0069  ld   $69
              9863 0000  ld   $00
              9864 0085  ld   $85
              9865 00d3  ld   $d3
              9866 00a5  ld   $a5
              9867 00d2  ld   $d2
              9868 00c5  ld   $c5
              9869 00ca  ld   $ca
              986a 00a5  ld   $a5
              986b 00d3  ld   $d3
              986c 00e5  ld   $e5
              986d 00cb  ld   $cb
              986e 0090  ld   $90
              986f 0003  ld   $03
              9870 004c  ld   $4c
              9871 006b  ld   $6b
              9872 00e3  ld   $e3
              9873 00a5  ld   $a5
              9874 00ce  ld   $ce
              9875 0091  ld   $91
              9876 00d0  ld   $d0
              9877 00a5  ld   $a5
              9878 00cf  ld   $cf
              9879 00c8  ld   $c8
              987a 0091  ld   $91
              987b 00d0  ld   $d0
              987c 00a5  ld   $a5
              987d 00d2  ld   $d2
              987e 00c8  ld   $c8
              987f 0091  ld   $91
              9880 00d0  ld   $d0
              9881 00a5  ld   $a5
              9882 00d3  ld   $d3
              9883 00c8  ld   $c8
              9884 0091  ld   $91
              9885 00d0  ld   $d0
              9886 00a9  ld   $a9
              9887 0000  ld   $00
              9888 00c8  ld   $c8
              9889 0091  ld   $91
              988a 00d0  ld   $d0
              988b 00c8  ld   $c8
              988c 0091  ld   $91
              988d 00d0  ld   $d0
              988e 00e6  ld   $e6
              988f 0000  ld   $00
              9890 0000  ld   $00
              9891 00a5  ld   $a5
              9892 00d2  ld   $d2
              9893 0085  ld   $85
              9894 00cc  ld   $cc
              9895 00a5  ld   $a5
              9896 00d3  ld   $d3
              9897 0085  ld   $85
              9898 00cd  ld   $cd
              9899 00a5  ld   $a5
              989a 00d0  ld   $d0
              989b 0090  ld   $90
              989c 0043  ld   $43
              989d 0085  ld   $85
              989e 00ce  ld   $ce
              989f 0084  ld   $84
              98a0 00cf  ld   $cf
              98a1 0020  ld   $20
              98a2 00ff  ld   $ff
              98a3 00e6  ld   $e6
              98a4 0030  ld   $30
              98a5 000e  ld   $0e
              98a6 00c9  ld   $c9
              98a7 0040  ld   $40
              98a8 00f0  ld   $f0
              98a9 000a  ld   $0a
              98aa 004c  ld   $4c
              98ab 0028  ld   $28
              98ac 00e6  ld   $e6
              98ad 0006  ld   $06
              98ae 00c9  ld   $c9
              98af 0049  ld   $49
              98b0 00d0  ld   $d0
              98b1 0007  ld   $07
              98b2 00a9  ld   $a9
              98b3 0049  ld   $49
              98b4 0085  ld   $85
              98b5 00cf  ld   $cf
              98b6 0020  ld   $20
              98b7 00ff  ld   $ff
              98b8 00e6  ld   $e6
              98b9 00a5  ld   $a5
              98ba 004b  ld   $4b
              98bb 0085  ld   $85
              98bc 00d1  ld   $d1
              98bd 00a5  ld   $a5
              98be 004a  ld   $4a
              98bf 0085  ld   $85
              98c0 00d0  ld   $d0
              98c1 00c5  ld   $c5
              98c2 00cc  ld   $cc
              98c3 00a5  ld   $a5
              98c4 00d1  ld   $d1
              98c5 00e5  ld   $e5
              98c6 00cd  ld   $cd
              98c7 00b0  ld   $b0
              98c8 0094  ld   $94
              98c9 00b1  ld   $b1
              98ca 00d0  ld   $d0
              98cb 00c8  ld   $c8
              98cc 00c5  ld   $c5
              98cd 00ce  ld   $ce
              98ce 00d0  ld   $d0
              98cf 0006  ld   $06
              98d0 00b1  ld   $b1
              98d1 00d0  ld   $d0
              98d2 00c5  ld   $c5
              98d3 00cf  ld   $cf
              98d4 00f0  ld   $f0
              98d5 000e  ld   $0e
              98d6 00c8  ld   $c8
              98d7 00b1  ld   $b1
              98d8 00d0  ld   $d0
              98d9 0048  ld   $48
              98da 00c8  ld   $c8
              98db 00b1  ld   $b1
              98dc 00d0  ld   $d0
              98dd 0085  ld   $85
              98de 00d1  ld   $d1
              98df 0068  ld   $68
              98e0 00a0  ld   $a0
              98e1 0000  ld   $00
              98e2 00f0  ld   $f0
              98e3 00db  ld   $db
              98e4 00a5  ld   $a5
              98e5 00d0  ld   $d0
              98e6 0069  ld   $69
              98e7 0003  ld   $03
              98e8 0020  ld   $20
              98e9 000a  ld   $0a
              98ea 00e7  ld   $e7
              98eb 00a5  ld   $a5
              98ec 00d1  ld   $d1
              98ed 0069  ld   $69
              98ee 0000  ld   $00
              98ef 0095  ld   $95
              98f0 0088  ld   $88
              98f1 00a5  ld   $a5
              98f2 00cf  ld   $cf
              98f3 00c9  ld   $c9
              98f4 0040  ld   $40
              98f5 00d0  ld   $d0
              98f6 001c  ld   $1c
              98f7 0088  ld   $88
              98f8 0098  ld   $98
              98f9 0020  ld   $20
              98fa 000a  ld   $0a
              98fb fe00  bra  ac          ;+-----------------------------------+
              98fc fcfd  bra  $98fd       ;|                                   |
              98fd 1418  ld   $18,y       ;| Trampoline for page $9800 lookups |
              98fe e006  jmp  y,$06       ;|                                   |
              98ff c218  st   [$18]       ;+-----------------------------------+
              9900 00e7  ld   $e7
              9901 0088  ld   $88
              9902 0094  ld   $94
              9903 0088  ld   $88
              9904 00a0  ld   $a0
              9905 0003  ld   $03
              9906 00f6  ld   $f6
              9907 0088  ld   $88
              9908 00c8  ld   $c8
              9909 00b1  ld   $b1
              990a 00d0  ld   $d0
              990b 0030  ld   $30
              990c 00f9  ld   $f9
              990d 0010  ld   $10
              990e 0009  ld   $09
              990f 00a9  ld   $a9
              9910 0000  ld   $00
              9911 0085  ld   $85
              9912 00d4  ld   $d4
              9913 0085  ld   $85
              9914 00d5  ld   $d5
              9915 00a2  ld   $a2
              9916 0018  ld   $18
              9917 0048  ld   $48
              9918 00a0  ld   $a0
              9919 0000  ld   $00
              991a 00b1  ld   $b1
              991b 00de  ld   $de
              991c 0010  ld   $10
              991d 0018  ld   $18
              991e 000a  ld   $0a
              991f 0030  ld   $30
              9920 0081  ld   $81
              9921 0020  ld   $20
              9922 00ff  ld   $ff
              9923 00e6  ld   $e6
              9924 0020  ld   $20
              9925 0008  ld   $08
              9926 00e7  ld   $e7
              9927 0020  ld   $20
              9928 00ff  ld   $ff
              9929 00e6  ld   $e6
              992a 0095  ld   $95
              992b 00a8  ld   $a8
              992c 0024  ld   $24
              992d 00d4  ld   $d4
              992e 0010  ld   $10
              992f 0001  ld   $01
              9930 00ca  ld   $ca
              9931 0020  ld   $20
              9932 00ff  ld   $ff
              9933 00e6  ld   $e6
              9934 00b0  ld   $b0
              9935 00e6  ld   $e6
              9936 00c9  ld   $c9
              9937 0028  ld   $28
              9938 00d0  ld   $d0
              9939 001f  ld   $1f
              993a 00a5  ld   $a5
              993b 00de  ld   $de
              993c 0020  ld   $20
              993d 000a  ld   $0a
              993e 00e7  ld   $e7
              993f 00a5  ld   $a5
              9940 00df  ld   $df
              9941 0095  ld   $95
              9942 0088  ld   $88
              9943 0024  ld   $24
              9944 00d4  ld   $d4
              9945 0030  ld   $30
              9946 000b  ld   $0b
              9947 00a9  ld   $a9
              9948 0001  ld   $01
              9949 0020  ld   $20
              994a 000a  ld   $0a
              994b 00e7  ld   $e7
              994c 00a9  ld   $a9
              994d 0000  ld   $00
              994e 0095  ld   $95
              994f 0088  ld   $88
              9950 00f6  ld   $f6
              9951 0088  ld   $88
              9952 0020  ld   $20
              9953 00ff  ld   $ff
              9954 00e6  ld   $e6
              9955 0030  ld   $30
              9956 00f9  ld   $f9
              9957 00b0  ld   $b0
              9958 00d3  ld   $d3
              9959 0024  ld   $24
              995a 00d4  ld   $d4
              995b 0010  ld   $10
              995c 0006  ld   $06
              995d 00c9  ld   $c9
              995e 0004  ld   $04
              995f 00b0  ld   $b0
              9960 00d0  ld   $d0
              9961 0046  ld   $46
              9962 00d4  ld   $d4
              9963 00a8  ld   $a8
              9964 0085  ld   $85
              9965 00d6  ld   $d6
              9966 00b9  ld   $b9
              9967 0098  ld   $98
              9968 00e9  ld   $e9
              9969 0029  ld   $29
              996a 0055  ld   $55
              996b 000a  ld   $0a
              996c 0085  ld   $85
              996d 00d7  ld   $d7
              996e 0068  ld   $68
              996f 00a8  ld   $a8
              9970 00b9  ld   $b9
              9971 0098  ld   $98
              9972 00e9  ld   $e9
              9973 0029  ld   $29
              9974 00aa  ld   $aa
              9975 00c5  ld   $c5
              9976 00d7  ld   $d7
              9977 00b0  ld   $b0
              9978 0009  ld   $09
              9979 0098  ld   $98
              997a 0048  ld   $48
              997b 0020  ld   $20
              997c 00ff  ld   $ff
              997d 00e6  ld   $e6
              997e 00a5  ld   $a5
              997f 00d6  ld   $d6
              9980 0090  ld   $90
              9981 0095  ld   $95
              9982 00b9  ld   $b9
              9983 0010  ld   $10
              9984 00ea  ld   $ea
              9985 0085  ld   $85
              9986 00ce  ld   $ce
              9987 00b9  ld   $b9
              9988 0088  ld   $88
              9989 00ea  ld   $ea
              998a 0085  ld   $85
              998b 00cf  ld   $cf
              998c 0020  ld   $20
              998d 00fc  ld   $fc
              998e 00e6  ld   $e6
              998f 004c  ld   $4c
              9990 00d8  ld   $d8
              9991 00e6  ld   $e6
              9992 006c  ld   $6c
              9993 00ce  ld   $ce
              9994 0000  ld   $00
              9995 00e6  ld   $e6
              9996 00e7  ld   $e7
              9997 0000  ld   $00
              9998 0000  ld   $00
              9999 00de  ld   $de
              999a 00d0  ld   $d0
              999b 0002  ld   $02
              999c 00e6  ld   $e6
              999d 00df  ld   $df
              999e 00b1  ld   $b1
              999f 00de  ld   $de
              99a0 0060  ld   $60
              99a1 0094  ld   $94
              99a2 0087  ld   $87
              99a3 00ca  ld   $ca
              99a4 0030  ld   $30
              99a5 0003  ld   $03
              99a6 0095  ld   $95
              99a7 0050  ld   $50
              99a8 0060  ld   $60
              99a9 00a0  ld   $a0
              99aa 0066  ld   $66
              99ab 004c  ld   $4c
              99ac 00e0  ld   $e0
              99ad 00e3  ld   $e3
              99ae 00a0  ld   $a0
              99af 0000  ld   $00
              99b0 00b5  ld   $b5
              99b1 0050  ld   $50
              99b2 0085  ld   $85
              99b3 00ce  ld   $ce
              99b4 00b5  ld   $b5
              99b5 00a8  ld   $a8
              99b6 0085  ld   $85
              99b7 00cf  ld   $cf
              99b8 00b5  ld   $b5
              99b9 0088  ld   $88
              99ba 00f0  ld   $f0
              99bb 000e  ld   $0e
              99bc 0085  ld   $85
              99bd 00cf  ld   $cf
              99be 00b1  ld   $b1
              99bf 00ce  ld   $ce
              99c0 0048  ld   $48
              99c1 00c8  ld   $c8
              99c2 00b1  ld   $b1
              99c3 00ce  ld   $ce
              99c4 0085  ld   $85
              99c5 00cf  ld   $cf
              99c6 0068  ld   $68
              99c7 0085  ld   $85
              99c8 00ce  ld   $ce
              99c9 0088  ld   $88
              99ca 00e8  ld   $e8
              99cb 0060  ld   $60
              99cc 0020  ld   $20
              99cd 004a  ld   $4a
              99ce 00e7  ld   $e7
              99cf 0020  ld   $20
              99d0 0015  ld   $15
              99d1 00e7  ld   $e7
              99d2 0098  ld   $98
              99d3 0020  ld   $20
              99d4 0008  ld   $08
              99d5 00e7  ld   $e7
              99d6 0095  ld   $95
              99d7 00a8  ld   $a8
              99d8 00c5  ld   $c5
              99d9 00ce  ld   $ce
              99da 00d0  ld   $d0
              99db 0006  ld   $06
              99dc 00c5  ld   $c5
              99dd 00cf  ld   $cf
              99de 00d0  ld   $d0
              99df 0002  ld   $02
              99e0 00f6  ld   $f6
              99e1 0050  ld   $50
              99e2 0060  ld   $60
              99e3 0020  ld   $20
              99e4 0082  ld   $82
              99e5 00e7  ld   $e7
              99e6 0020  ld   $20
              99e7 0059  ld   $59
              99e8 00e7  ld   $e7
              99e9 0020  ld   $20
              99ea 0015  ld   $15
              99eb 00e7  ld   $e7
              99ec 0024  ld   $24
              99ed 00cf  ld   $cf
              99ee 0030  ld   $30
              99ef 001b  ld   $1b
              99f0 00ca  ld   $ca
              99f1 0060  ld   $60
              99f2 0020  ld   $20
              99f3 0015  ld   $15
              99f4 00e7  ld   $e7
              99f5 00a5  ld   $a5
              99f6 00cf  ld   $cf
              99f7 00d0  ld   $d0
              99f8 0004  ld   $04
              99f9 00a5  ld   $a5
              99fa 00ce  ld   $ce
              99fb fe00  bra  ac          ;+-----------------------------------+
              99fc fcfd  bra  $99fd       ;|                                   |
              99fd 1418  ld   $18,y       ;| Trampoline for page $9900 lookups |
              99fe e006  jmp  y,$06       ;|                                   |
              99ff c218  st   [$18]       ;+-----------------------------------+
              9a00 00f0  ld   $f0
              9a01 00f3  ld   $f3
              9a02 00a9  ld   $a9
              9a03 00ff  ld   $ff
              9a04 0020  ld   $20
              9a05 0008  ld   $08
              9a06 00e7  ld   $e7
              9a07 0095  ld   $95
              9a08 00a8  ld   $a8
              9a09 0024  ld   $24
              9a0a 00cf  ld   $cf
              9a0b 0030  ld   $30
              9a0c 00e9  ld   $e9
              9a0d 0020  ld   $20
              9a0e 0015  ld   $15
              9a0f 00e7  ld   $e7
              9a10 0098  ld   $98
              9a11 0038  ld   $38
              9a12 00e5  ld   $e5
              9a13 00ce  ld   $ce
              9a14 0020  ld   $20
              9a15 0008  ld   $08
              9a16 00e7  ld   $e7
              9a17 0098  ld   $98
              9a18 00e5  ld   $e5
              9a19 00cf  ld   $cf
              9a1a 0050  ld   $50
              9a1b 0023  ld   $23
              9a1c 00a0  ld   $a0
              9a1d 0000  ld   $00
              9a1e 0010  ld   $10
              9a1f 0090  ld   $90
              9a20 0020  ld   $20
              9a21 006f  ld   $6f
              9a22 00e7  ld   $e7
              9a23 0020  ld   $20
              9a24 0015  ld   $15
              9a25 00e7  ld   $e7
              9a26 00a5  ld   $a5
              9a27 00ce  ld   $ce
              9a28 0085  ld   $85
              9a29 00da  ld   $da
              9a2a 00a5  ld   $a5
              9a2b 00cf  ld   $cf
              9a2c 0085  ld   $85
              9a2d 00db  ld   $db
              9a2e 0020  ld   $20
              9a2f 0015  ld   $15
              9a30 00e7  ld   $e7
              9a31 0018  ld   $18
              9a32 00a5  ld   $a5
              9a33 00ce  ld   $ce
              9a34 0065  ld   $65
              9a35 00da  ld   $da
              9a36 0020  ld   $20
              9a37 0008  ld   $08
              9a38 00e7  ld   $e7
              9a39 00a5  ld   $a5
              9a3a 00cf  ld   $cf
              9a3b 0065  ld   $65
              9a3c 00db  ld   $db
              9a3d 0070  ld   $70
              9a3e 00dd  ld   $dd
              9a3f 0095  ld   $95
              9a40 00a8  ld   $a8
              9a41 0060  ld   $60
              9a42 0020  ld   $20
              9a43 0015  ld   $15
              9a44 00e7  ld   $e7
              9a45 00a4  ld   $a4
              9a46 00ce  ld   $ce
              9a47 00f0  ld   $f0
              9a48 0005  ld   $05
              9a49 0088  ld   $88
              9a4a 00a5  ld   $a5
              9a4b 00cf  ld   $cf
              9a4c 00f0  ld   $f0
              9a4d 000c  ld   $0c
              9a4e 0060  ld   $60
              9a4f 00a5  ld   $a5
              9a50 0081  ld   $81
              9a51 0009  ld   $09
              9a52 0007  ld   $07
              9a53 00a8  ld   $a8
              9a54 00c8  ld   $c8
              9a55 00a9  ld   $a9
              9a56 00a0  ld   $a0
              9a57 0020  ld   $20
              9a58 00c9  ld   $c9
              9a59 00e3  ld   $e3
              9a5a 00c4  ld   $c4
              9a5b 0081  ld   $81
              9a5c 00b0  ld   $b0
              9a5d 00f7  ld   $f7
              9a5e 0060  ld   $60
              9a5f 0020  ld   $20
              9a60 00b1  ld   $b1
              9a61 00e7  ld   $e7
              9a62 0020  ld   $20
              9a63 0015  ld   $15
              9a64 00e7  ld   $e7
              9a65 00a5  ld   $a5
              9a66 00cf  ld   $cf
              9a67 0010  ld   $10
              9a68 000a  ld   $0a
              9a69 00a9  ld   $a9
              9a6a 00ad  ld   $ad
              9a6b 0020  ld   $20
              9a6c 00c9  ld   $c9
              9a6d 00e3  ld   $e3
              9a6e 0020  ld   $20
              9a6f 0072  ld   $72
              9a70 00e7  ld   $e7
              9a71 0050  ld   $50
              9a72 00ef  ld   $ef
              9a73 0088  ld   $88
              9a74 0084  ld   $84
              9a75 00d5  ld   $d5
              9a76 0086  ld   $86
              9a77 00cf  ld   $cf
              9a78 00a6  ld   $a6
              9a79 00ce  ld   $ce
              9a7a 0020  ld   $20
              9a7b 001b  ld   $1b
              9a7c 00e5  ld   $e5
              9a7d 00a6  ld   $a6
              9a7e 00cf  ld   $cf
              9a7f 0060  ld   $60
              9a80 0020  ld   $20
              9a81 0015  ld   $15
              9a82 00e7  ld   $e7
              9a83 00a5  ld   $a5
              9a84 00ce  ld   $ce
              9a85 0085  ld   $85
              9a86 0076  ld   $76
              9a87 00a5  ld   $a5
              9a88 00cf  ld   $cf
              9a89 0085  ld   $85
              9a8a 0077  ld   $77
              9a8b 0088  ld   $88
              9a8c 0084  ld   $84
              9a8d 0078  ld   $78
              9a8e 00c8  ld   $c8
              9a8f 00a9  ld   $a9
              9a90 000a  ld   $0a
              9a91 0085  ld   $85
              9a92 0074  ld   $74
              9a93 0084  ld   $84
              9a94 0075  ld   $75
              9a95 0060  ld   $60
              9a96 0020  ld   $20
              9a97 0015  ld   $15
              9a98 00e7  ld   $e7
              9a99 00a5  ld   $a5
              9a9a 00ce  ld   $ce
              9a9b 00a4  ld   $a4
              9a9c 00cf  ld   $cf
              9a9d 0010  ld   $10
              9a9e 00e8  ld   $e8
              9a9f 0000  ld   $00
              9aa0 0000  ld   $00
              9aa1 00f2  ld   $f2
              9aa2 0020  ld   $20
              9aa3 0015  ld   $15
              9aa4 00e7  ld   $e7
              9aa5 00b5  ld   $b5
              9aa6 0050  ld   $50
              9aa7 0085  ld   $85
              9aa8 00da  ld   $da
              9aa9 00b5  ld   $b5
              9aaa 0088  ld   $88
              9aab 0085  ld   $85
              9aac 00db  ld   $db
              9aad 00a5  ld   $a5
              9aae 00ce  ld   $ce
              9aaf 0091  ld   $91
              9ab0 00da  ld   $da
              9ab1 00c8  ld   $c8
              9ab2 00a5  ld   $a5
              9ab3 00cf  ld   $cf
              9ab4 0091  ld   $91
              9ab5 00da  ld   $da
              9ab6 00e8  ld   $e8
              9ab7 0060  ld   $60
              9ab8 0068  ld   $68
              9ab9 0068  ld   $68
              9aba 0024  ld   $24
              9abb 00d5  ld   $d5
              9abc 0010  ld   $10
              9abd 0005  ld   $05
              9abe 0020  ld   $20
              9abf 00cd  ld   $cd
              9ac0 00e3  ld   $e3
              9ac1 0046  ld   $46
              9ac2 00d5  ld   $d5
              9ac3 0060  ld   $60
              9ac4 00a0  ld   $a0
              9ac5 00ff  ld   $ff
              9ac6 0084  ld   $84
              9ac7 00d7  ld   $d7
              9ac8 0060  ld   $60
              9ac9 0020  ld   $20
              9aca 00cd  ld   $cd
              9acb 00ef  ld   $ef
              9acc 00f0  ld   $f0
              9acd 0007  ld   $07
              9ace 00a9  ld   $a9
              9acf 0025  ld   $25
              9ad0 0085  ld   $85
              9ad1 00d6  ld   $d6
              9ad2 0088  ld   $88
              9ad3 0084  ld   $84
              9ad4 00d4  ld   $d4
              9ad5 00e8  ld   $e8
              9ad6 0060  ld   $60
              9ad7 00a5  ld   $a5
              9ad8 00ca  ld   $ca
              9ad9 00a4  ld   $a4
              9ada 00cb  ld   $cb
              9adb 00d0  ld   $d0
              9adc 005a  ld   $5a
              9add 00a0  ld   $a0
              9ade 0041  ld   $41
              9adf 00a5  ld   $a5
              9ae0 0084  ld   $84
              9ae1 00c9  ld   $c9
              9ae2 0008  ld   $08
              9ae3 00b0  ld   $b0
              9ae4 005e  ld   $5e
              9ae5 00a8  ld   $a8
              9ae6 00e6  ld   $e6
              9ae7 0084  ld   $84
              9ae8 00a5  ld   $a5
              9ae9 00de  ld   $de
              9aea 0099  ld   $99
              9aeb 0000  ld   $00
              9aec 0011  ld   $11
              9aed 00a5  ld   $a5
              9aee 00df  ld   $df
              9aef 0099  ld   $99
              9af0 0008  ld   $08
              9af1 0011  ld   $11
              9af2 00a5  ld   $a5
              9af3 00dc  ld   $dc
              9af4 0099  ld   $99
              9af5 0010  ld   $10
              9af6 0011  ld   $11
              9af7 00a5  ld   $a5
              9af8 00dd  ld   $dd
              9af9 0099  ld   $99
              9afa 0018  ld   $18
              9afb fe00  bra  ac          ;+-----------------------------------+
              9afc fcfd  bra  $9afd       ;|                                   |
              9afd 1418  ld   $18,y       ;| Trampoline for page $9a00 lookups |
              9afe e006  jmp  y,$06       ;|                                   |
              9aff c218  st   [$18]       ;+-----------------------------------+
              9b00 0011  ld   $11
              9b01 0020  ld   $20
              9b02 0015  ld   $15
              9b03 00e7  ld   $e7
              9b04 0020  ld   $20
              9b05 006d  ld   $6d
              9b06 00e5  ld   $e5
              9b07 0090  ld   $90
              9b08 0004  ld   $04
              9b09 00a0  ld   $a0
              9b0a 0037  ld   $37
              9b0b 00d0  ld   $d0
              9b0c 003b  ld   $3b
              9b0d 00a5  ld   $a5
              9b0e 0044  ld   $44
              9b0f 00a4  ld   $a4
              9b10 0045  ld   $45
              9b11 0085  ld   $85
              9b12 00dc  ld   $dc
              9b13 0084  ld   $84
              9b14 00dd  ld   $dd
              9b15 002c  ld   $2c
              9b16 0011  ld   $11
              9b17 00d0  ld   $d0
              9b18 0030  ld   $30
              9b19 004f  ld   $4f
              9b1a 0018  ld   $18
              9b1b 0069  ld   $69
              9b1c 0003  ld   $03
              9b1d 0090  ld   $90
              9b1e 0001  ld   $01
              9b1f 00c8  ld   $c8
              9b20 00a2  ld   $a2
              9b21 00ff  ld   $ff
              9b22 0086  ld   $86
              9b23 00d9  ld   $d9
              9b24 009a  ld   $9a
              9b25 0085  ld   $85
              9b26 00de  ld   $de
              9b27 0084  ld   $84
              9b28 00df  ld   $df
              9b29 0020  ld   $20
              9b2a 0079  ld   $79
              9b2b 00e6  ld   $e6
              9b2c 0024  ld   $24
              9b2d 00d9  ld   $d9
              9b2e 0010  ld   $10
              9b2f 0049  ld   $49
              9b30 0018  ld   $18
              9b31 00a0  ld   $a0
              9b32 0000  ld   $00
              9b33 00a5  ld   $a5
              9b34 00dc  ld   $dc
              9b35 0071  ld   $71
              9b36 00dc  ld   $dc
              9b37 00a4  ld   $a4
              9b38 00dd  ld   $dd
              9b39 0090  ld   $90
              9b3a 0001  ld   $01
              9b3b 00c8  ld   $c8
              9b3c 00c5  ld   $c5
              9b3d 004c  ld   $4c
              9b3e 00d0  ld   $d0
              9b3f 00d1  ld   $d1
              9b40 00c4  ld   $c4
              9b41 004d  ld   $4d
              9b42 00d0  ld   $d0
              9b43 00cd  ld   $cd
              9b44 00a0  ld   $a0
              9b45 0034  ld   $34
              9b46 0046  ld   $46
              9b47 00d9  ld   $d9
              9b48 004c  ld   $4c
              9b49 00e0  ld   $e0
              9b4a 00e3  ld   $e3
              9b4b 00a0  ld   $a0
              9b4c 004a  ld   $4a
              9b4d 00a5  ld   $a5
              9b4e 0084  ld   $84
              9b4f 00f0  ld   $f0
              9b50 00f7  ld   $f7
              9b51 00c6  ld   $c6
              9b52 0084  ld   $84
              9b53 00a8  ld   $a8
              9b54 00b9  ld   $b9
              9b55 000f  ld   $0f
              9b56 0011  ld   $11
              9b57 0085  ld   $85
              9b58 00dc  ld   $dc
              9b59 00b9  ld   $b9
              9b5a 0017  ld   $17
              9b5b 0011  ld   $11
              9b5c 0085  ld   $85
              9b5d 00dd  ld   $dd
              9b5e 00be  ld   $be
              9b5f 0087  ld   $87
              9b60 0000  ld   $00
              9b61 00b9  ld   $b9
              9b62 0007  ld   $07
              9b63 0011  ld   $11
              9b64 00a8  ld   $a8
              9b65 008a  ld   $8a
              9b66 004c  ld   $4c
              9b67 007a  ld   $7a
              9b68 00e8  ld   $e8
              9b69 00a0  ld   $a0
              9b6a 0063  ld   $63
              9b6b 0020  ld   $20
              9b6c 00c4  ld   $c4
              9b6d 00e3  ld   $e3
              9b6e 00a0  ld   $a0
              9b6f 0001  ld   $01
              9b70 00b1  ld   $b1
              9b71 00dc  ld   $dc
              9b72 00aa  ld   $aa
              9b73 00c8  ld   $c8
              9b74 00b1  ld   $b1
              9b75 00dc  ld   $dc
              9b76 0020  ld   $20
              9b77 001b  ld   $1b
              9b78 00e5  ld   $e5
              9b79 004c  ld   $4c
              9b7a 00b3  ld   $b3
              9b7b 00e2  ld   $e2
              9b7c 00c6  ld   $c6
              9b7d 0083  ld   $83
              9b7e 00a0  ld   $a0
              9b7f 005b  ld   $5b
              9b80 00a5  ld   $a5
              9b81 0083  ld   $83
              9b82 00f0  ld   $f0
              9b83 00c4  ld   $c4
              9b84 00a8  ld   $a8
              9b85 00b5  ld   $b5
              9b86 0050  ld   $50
              9b87 00d9  ld   $d9
              9b88 00ff  ld   $ff
              9b89 0011  ld   $11
              9b8a 00d0  ld   $d0
              9b8b 00f0  ld   $f0
              9b8c 00b5  ld   $b5
              9b8d 0088  ld   $88
              9b8e 00d9  ld   $d9
              9b8f 0007  ld   $07
              9b90 0012  ld   $12
              9b91 00d0  ld   $d0
              9b92 00e9  ld   $e9
              9b93 00b9  ld   $b9
              9b94 000f  ld   $0f
              9b95 0012  ld   $12
              9b96 0085  ld   $85
              9b97 00da  ld   $da
              9b98 00b9  ld   $b9
              9b99 0017  ld   $17
              9b9a 0012  ld   $12
              9b9b 0085  ld   $85
              9b9c 00db  ld   $db
              9b9d 0020  ld   $20
              9b9e 0015  ld   $15
              9b9f 00e7  ld   $e7
              9ba0 00ca  ld   $ca
              9ba1 0020  ld   $20
              9ba2 0093  ld   $93
              9ba3 00e7  ld   $e7
              9ba4 0020  ld   $20
              9ba5 0001  ld   $01
              9ba6 00e9  ld   $e9
              9ba7 0000  ld   $00
              9ba8 0000  ld   $00
              9ba9 00e8  ld   $e8
              9baa 00ca  ld   $ca
              9bab 00a4  ld   $a4
              9bac 0083  ld   $83
              9bad 00b9  ld   $b9
              9bae 0047  ld   $47
              9baf 0012  ld   $12
              9bb0 0095  ld   $95
              9bb1 00a7  ld   $a7
              9bb2 00b9  ld   $b9
              9bb3 003f  ld   $3f
              9bb4 0012  ld   $12
              9bb5 00a0  ld   $a0
              9bb6 0000  ld   $00
              9bb7 0020  ld   $20
              9bb8 0008  ld   $08
              9bb9 00e7  ld   $e7
              9bba 0020  ld   $20
              9bbb 0082  ld   $82
              9bbc 00e7  ld   $e7
              9bbd 0020  ld   $20
              9bbe 0059  ld   $59
              9bbf 00e7  ld   $e7
              9bc0 0020  ld   $20
              9bc1 0015  ld   $15
              9bc2 00e7  ld   $e7
              9bc3 00a4  ld   $a4
              9bc4 0083  ld   $83
              9bc5 00a5  ld   $a5
              9bc6 00ce  ld   $ce
              9bc7 00f0  ld   $f0
              9bc8 0005  ld   $05
              9bc9 0059  ld   $59
              9bca 0017  ld   $17
              9bcb 0012  ld   $12
              9bcc 0010  ld   $10
              9bcd 0012  ld   $12
              9bce 00b9  ld   $b9
              9bcf 001f  ld   $1f
              9bd0 0012  ld   $12
              9bd1 0085  ld   $85
              9bd2 00dc  ld   $dc
              9bd3 00b9  ld   $b9
              9bd4 0027  ld   $27
              9bd5 0012  ld   $12
              9bd6 0085  ld   $85
              9bd7 00dd  ld   $dd
              9bd8 00be  ld   $be
              9bd9 002f  ld   $2f
              9bda 0012  ld   $12
              9bdb 00b9  ld   $b9
              9bdc 0037  ld   $37
              9bdd 0012  ld   $12
              9bde 00d0  ld   $d0
              9bdf 0087  ld   $87
              9be0 00c6  ld   $c6
              9be1 0083  ld   $83
              9be2 0060  ld   $60
              9be3 00a0  ld   $a0
              9be4 0054  ld   $54
              9be5 00a5  ld   $a5
              9be6 0083  ld   $83
              9be7 00c9  ld   $c9
              9be8 0008  ld   $08
              9be9 00f0  ld   $f0
              9bea 009a  ld   $9a
              9beb 00e6  ld   $e6
              9bec 0083  ld   $83
              9bed 00a8  ld   $a8
              9bee 00b5  ld   $b5
              9bef 0050  ld   $50
              9bf0 0099  ld   $99
              9bf1 0000  ld   $00
              9bf2 0012  ld   $12
              9bf3 00b5  ld   $b5
              9bf4 0088  ld   $88
              9bf5 0099  ld   $99
              9bf6 0008  ld   $08
              9bf7 0012  ld   $12
              9bf8 0060  ld   $60
              9bf9 0020  ld   $20
              9bfa 0015  ld   $15
              9bfb fe00  bra  ac          ;+-----------------------------------+
              9bfc fcfd  bra  $9bfd       ;|                                   |
              9bfd 1418  ld   $18,y       ;| Trampoline for page $9b00 lookups |
              9bfe e006  jmp  y,$06       ;|                                   |
              9bff c218  st   [$18]       ;+-----------------------------------+
              9c00 00e7  ld   $e7
              9c01 00a4  ld   $a4
              9c02 0083  ld   $83
              9c03 00a5  ld   $a5
              9c04 00ce  ld   $ce
              9c05 0099  ld   $99
              9c06 003f  ld   $3f
              9c07 0012  ld   $12
              9c08 00a5  ld   $a5
              9c09 00cf  ld   $cf
              9c0a 0099  ld   $99
              9c0b 0047  ld   $47
              9c0c 0012  ld   $12
              9c0d 00a9  ld   $a9
              9c0e 0001  ld   $01
              9c0f 0099  ld   $99
              9c10 000f  ld   $0f
              9c11 0012  ld   $12
              9c12 00a9  ld   $a9
              9c13 0000  ld   $00
              9c14 0099  ld   $99
              9c15 0017  ld   $17
              9c16 0012  ld   $12
              9c17 00a5  ld   $a5
              9c18 00dc  ld   $dc
              9c19 0099  ld   $99
              9c1a 001f  ld   $1f
              9c1b 0012  ld   $12
              9c1c 00a5  ld   $a5
              9c1d 00dd  ld   $dd
              9c1e 0099  ld   $99
              9c1f 0027  ld   $27
              9c20 0012  ld   $12
              9c21 00a5  ld   $a5
              9c22 00de  ld   $de
              9c23 0099  ld   $99
              9c24 002f  ld   $2f
              9c25 0012  ld   $12
              9c26 00a5  ld   $a5
              9c27 00df  ld   $df
              9c28 0099  ld   $99
              9c29 0037  ld   $37
              9c2a 0012  ld   $12
              9c2b 0060  ld   $60
              9c2c 0020  ld   $20
              9c2d 0015  ld   $15
              9c2e 00e7  ld   $e7
              9c2f 00a4  ld   $a4
              9c30 0083  ld   $83
              9c31 00a5  ld   $a5
              9c32 00ce  ld   $ce
              9c33 0099  ld   $99
              9c34 000f  ld   $0f
              9c35 0012  ld   $12
              9c36 00a5  ld   $a5
              9c37 00cf  ld   $cf
              9c38 004c  ld   $4c
              9c39 0066  ld   $66
              9c3a 00e9  ld   $e9
              9c3b 0000  ld   $00
              9c3c 0000  ld   $00
              9c3d 0000  ld   $00
              * 14 times
              9c49 00ab  ld   $ab
              9c4a 0003  ld   $03
              9c4b 0003  ld   $03
              9c4c 0003  ld   $03
              * 14 times
              9c58 003f  ld   $3f
              9c59 003f  ld   $3f
              9c5a 00c0  ld   $c0
              9c5b 00c0  ld   $c0
              9c5c 003c  ld   $3c
              9c5d 003c  ld   $3c
              9c5e 003c  ld   $3c
              * 7 times
              9c63 0030  ld   $30
              9c64 000f  ld   $0f
              9c65 00c0  ld   $c0
              9c66 00cc  ld   $cc
              9c67 00ff  ld   $ff
              9c68 0055  ld   $55
              9c69 0000  ld   $00
              9c6a 00ab  ld   $ab
              9c6b 00ab  ld   $ab
              9c6c 0003  ld   $03
              9c6d 0003  ld   $03
              9c6e 00ff  ld   $ff
              9c6f 00ff  ld   $ff
              9c70 0055  ld   $55
              9c71 00ff  ld   $ff
              9c72 00ff  ld   $ff
              9c73 0055  ld   $55
              9c74 00cf  ld   $cf
              9c75 00cf  ld   $cf
              9c76 00cf  ld   $cf
              * 5 times
              9c79 00ff  ld   $ff
              9c7a 0055  ld   $55
              9c7b 00c3  ld   $c3
              9c7c 00c3  ld   $c3
              9c7d 00c3  ld   $c3
              9c7e 0055  ld   $55
              9c7f 00f0  ld   $f0
              9c80 00f0  ld   $f0
              9c81 00cf  ld   $cf
              9c82 0056  ld   $56
              9c83 0056  ld   $56
              9c84 0056  ld   $56
              9c85 0055  ld   $55
              9c86 00ff  ld   $ff
              9c87 00ff  ld   $ff
              9c88 0055  ld   $55
              9c89 0003  ld   $03
              9c8a 0003  ld   $03
              9c8b 0003  ld   $03
              * 7 times
              9c90 00ff  ld   $ff
              9c91 00ff  ld   $ff
              9c92 00ff  ld   $ff
              9c93 0003  ld   $03
              9c94 0003  ld   $03
              9c95 0003  ld   $03
              * 16 times
              9ca3 0000  ld   $00
              9ca4 00ab  ld   $ab
              9ca5 0003  ld   $03
              9ca6 0057  ld   $57
              9ca7 0003  ld   $03
              9ca8 0003  ld   $03
              9ca9 0003  ld   $03
              9caa 0003  ld   $03
              9cab 0007  ld   $07
              9cac 0003  ld   $03
              9cad 0003  ld   $03
              9cae 00ea  ld   $ea
              9caf 0000  ld   $00
              9cb0 0000  ld   $00
              9cb1 0003  ld   $03
              9cb2 0003  ld   $03
              9cb3 0003  ld   $03
              * 10 times
              9cbb 00aa  ld   $aa
              9cbc 00ff  ld   $ff
              9cbd 00ff  ld   $ff
              9cbe 00ff  ld   $ff
              * 5 times
              9cc1 0017  ld   $17
              9cc2 00ff  ld   $ff
              9cc3 00ff  ld   $ff
              9cc4 0019  ld   $19
              9cc5 005d  ld   $5d
              9cc6 0035  ld   $35
              9cc7 004b  ld   $4b
              9cc8 00f2  ld   $f2
              9cc9 00ec  ld   $ec
              9cca 0087  ld   $87
              9ccb 006f  ld   $6f
              9ccc 00ad  ld   $ad
              9ccd 00b7  ld   $b7
              9cce 00e2  ld   $e2
              9ccf 00f8  ld   $f8
              9cd0 0054  ld   $54
              9cd1 0080  ld   $80
              9cd2 0096  ld   $96
              9cd3 0085  ld   $85
              9cd4 0082  ld   $82
              9cd5 0022  ld   $22
              9cd6 0010  ld   $10
              9cd7 0033  ld   $33
              9cd8 004a  ld   $4a
              9cd9 0013  ld   $13
              9cda 0006  ld   $06
              9cdb 000b  ld   $0b
              9cdc 004a  ld   $4a
              9cdd 0001  ld   $01
              9cde 0040  ld   $40
              9cdf 0047  ld   $47
              9ce0 007a  ld   $7a
              9ce1 0000  ld   $00
              9ce2 00ff  ld   $ff
              9ce3 0023  ld   $23
              9ce4 0009  ld   $09
              9ce5 005b  ld   $5b
              9ce6 0016  ld   $16
              9ce7 00b6  ld   $b6
              9ce8 00cb  ld   $cb
              9ce9 00ff  ld   $ff
              9cea 00ff  ld   $ff
              9ceb 00fb  ld   $fb
              9cec 00ff  ld   $ff
              9ced 00ff  ld   $ff
              9cee 0024  ld   $24
              9cef 00f6  ld   $f6
              9cf0 004e  ld   $4e
              9cf1 0059  ld   $59
              9cf2 0050  ld   $50
              9cf3 0000  ld   $00
              9cf4 00ff  ld   $ff
              9cf5 0023  ld   $23
              9cf6 00a3  ld   $a3
              9cf7 006f  ld   $6f
              9cf8 0036  ld   $36
              9cf9 0023  ld   $23
              9cfa 00d7  ld   $d7
              9cfb fe00  bra  ac          ;+-----------------------------------+
              9cfc fcfd  bra  $9cfd       ;|                                   |
              9cfd 1418  ld   $18,y       ;| Trampoline for page $9c00 lookups |
              9cfe e006  jmp  y,$06       ;|                                   |
              9cff c218  st   [$18]       ;+-----------------------------------+
              9d00 001c  ld   $1c
              9d01 0022  ld   $22
              9d02 00c2  ld   $c2
              9d03 00ae  ld   $ae
              9d04 00ba  ld   $ba
              9d05 0023  ld   $23
              9d06 00ff  ld   $ff
              9d07 00ff  ld   $ff
              9d08 0021  ld   $21
              9d09 0030  ld   $30
              9d0a 001e  ld   $1e
              9d0b 0003  ld   $03
              9d0c 00c4  ld   $c4
              9d0d 0020  ld   $20
              9d0e 0000  ld   $00
              9d0f 00c1  ld   $c1
              9d10 00ff  ld   $ff
              9d11 00ff  ld   $ff
              9d12 00ff  ld   $ff
              9d13 00a0  ld   $a0
              9d14 0030  ld   $30
              9d15 001e  ld   $1e
              9d16 00a4  ld   $a4
              9d17 00d3  ld   $d3
              9d18 00b6  ld   $b6
              9d19 00bc  ld   $bc
              9d1a 00aa  ld   $aa
              9d1b 003a  ld   $3a
              9d1c 0001  ld   $01
              9d1d 0050  ld   $50
              9d1e 007e  ld   $7e
              9d1f 00d8  ld   $d8
              9d20 00d8  ld   $d8
              9d21 00a5  ld   $a5
              9d22 003c  ld   $3c
              9d23 00ff  ld   $ff
              9d24 0016  ld   $16
              9d25 005b  ld   $5b
              9d26 0028  ld   $28
              9d27 0003  ld   $03
              9d28 00c4  ld   $c4
              9d29 001d  ld   $1d
              9d2a 0000  ld   $00
              9d2b 000c  ld   $0c
              9d2c 004e  ld   $4e
              9d2d 0000  ld   $00
              9d2e 003e  ld   $3e
              9d2f 0000  ld   $00
              9d30 00a6  ld   $a6
              9d31 00b0  ld   $b0
              9d32 0000  ld   $00
              9d33 00bc  ld   $bc
              9d34 00c6  ld   $c6
              9d35 0057  ld   $57
              9d36 008c  ld   $8c
              9d37 0001  ld   $01
              9d38 0027  ld   $27
              9d39 00ff  ld   $ff
              9d3a 00ff  ld   $ff
              9d3b 00ff  ld   $ff
              * 5 times
              9d3e 00e8  ld   $e8
              9d3f 00ff  ld   $ff
              9d40 00ff  ld   $ff
              9d41 00e8  ld   $e8
              9d42 00e0  ld   $e0
              9d43 00e0  ld   $e0
              9d44 00e0  ld   $e0
              9d45 00ef  ld   $ef
              9d46 00ef  ld   $ef
              9d47 00e3  ld   $e3
              9d48 00e3  ld   $e3
              9d49 00e5  ld   $e5
              9d4a 00e5  ld   $e5
              9d4b 00e7  ld   $e7
              9d4c 00e7  ld   $e7
              9d4d 00ee  ld   $ee
              9d4e 00ef  ld   $ef
              9d4f 00ef  ld   $ef
              9d50 00e7  ld   $e7
              9d51 00e7  ld   $e7
              9d52 00e2  ld   $e2
              9d53 00ef  ld   $ef
              9d54 00e7  ld   $e7
              9d55 00e7  ld   $e7
              9d56 00ec  ld   $ec
              9d57 00ec  ld   $ec
              9d58 00ec  ld   $ec
              9d59 00e7  ld   $e7
              9d5a 00ec  ld   $ec
              9d5b 00ec  ld   $ec
              9d5c 00ec  ld   $ec
              9d5d 00e2  ld   $e2
              9d5e 0000  ld   $00
              9d5f 00ff  ld   $ff
              9d60 00e8  ld   $e8
              9d61 00e1  ld   $e1
              9d62 00e8  ld   $e8
              9d63 00e8  ld   $e8
              9d64 00ef  ld   $ef
              9d65 00eb  ld   $eb
              9d66 00ff  ld   $ff
              9d67 00ff  ld   $ff
              9d68 00e0  ld   $e0
              9d69 00ff  ld   $ff
              9d6a 00ff  ld   $ff
              9d6b 00ef  ld   $ef
              9d6c 00ee  ld   $ee
              9d6d 00ef  ld   $ef
              9d6e 00e7  ld   $e7
              9d6f 00e7  ld   $e7
              9d70 0000  ld   $00
              9d71 00ff  ld   $ff
              9d72 00e8  ld   $e8
              9d73 00e7  ld   $e7
              9d74 00e7  ld   $e7
              9d75 00e7  ld   $e7
              9d76 00e8  ld   $e8
              9d77 00e1  ld   $e1
              9d78 00e2  ld   $e2
              9d79 00ee  ld   $ee
              9d7a 00ee  ld   $ee
              9d7b 00ee  ld   $ee
              9d7c 00ee  ld   $ee
              9d7d 00e8  ld   $e8
              9d7e 00ff  ld   $ff
              9d7f 00ff  ld   $ff
              9d80 00e1  ld   $e1
              9d81 00e1  ld   $e1
              9d82 00ef  ld   $ef
              9d83 00ee  ld   $ee
              9d84 00e7  ld   $e7
              9d85 00e8  ld   $e8
              9d86 00ee  ld   $ee
              9d87 00e7  ld   $e7
              9d88 00ff  ld   $ff
              9d89 00ff  ld   $ff
              9d8a 00ff  ld   $ff
              9d8b 00ee  ld   $ee
              9d8c 00e1  ld   $e1
              9d8d 00ef  ld   $ef
              9d8e 00e7  ld   $e7
              9d8f 00e8  ld   $e8
              9d90 00ef  ld   $ef
              9d91 00ef  ld   $ef
              9d92 00eb  ld   $eb
              9d93 00e9  ld   $e9
              9d94 00e8  ld   $e8
              9d95 00e9  ld   $e9
              9d96 00e9  ld   $e9
              9d97 00e8  ld   $e8
              9d98 00e8  ld   $e8
              9d99 00e8  ld   $e8
              9d9a 00e8  ld   $e8
              9d9b 00ff  ld   $ff
              9d9c 00e8  ld   $e8
              9d9d 00e8  ld   $e8
              9d9e 00e8  ld   $e8
              9d9f 00ee  ld   $ee
              9da0 00e7  ld   $e7
              9da1 00e8  ld   $e8
              9da2 00ef  ld   $ef
              9da3 00ef  ld   $ef
              9da4 00ee  ld   $ee
              9da5 00ef  ld   $ef
              9da6 00ee  ld   $ee
              9da7 00ef  ld   $ef
              9da8 00ee  ld   $ee
              9da9 00ee  ld   $ee
              9daa 00ef  ld   $ef
              9dab 00ee  ld   $ee
              9dac 00ee  ld   $ee
              9dad 00ee  ld   $ee
              9dae 00e1  ld   $e1
              9daf 00e8  ld   $e8
              9db0 00e8  ld   $e8
              9db1 00ff  ld   $ff
              9db2 00ff  ld   $ff
              9db3 00ff  ld   $ff
              * 5 times
              9db6 00eb  ld   $eb
              9db7 0000  ld   $00
              9db8 0000  ld   $00
              9db9 00be  ld   $be
              9dba 00b3  ld   $b3
              9dbb 00b2  ld   $b2
              9dbc 00b7  ld   $b7
              9dbd 00b6  ld   $b6
              9dbe 0037  ld   $37
              9dbf 00d4  ld   $d4
              9dc0 00cf  ld   $cf
              9dc1 00cf  ld   $cf
              9dc2 00a0  ld   $a0
              9dc3 00cc  ld   $cc
              9dc4 00cf  ld   $cf
              9dc5 00ce  ld   $ce
              9dc6 0047  ld   $47
              9dc7 00d3  ld   $d3
              9dc8 00d9  ld   $d9
              9dc9 00ce  ld   $ce
              9dca 00d4  ld   $d4
              9dcb 00c1  ld   $c1
              9dcc 0058  ld   $58
              9dcd 00cd  ld   $cd
              9dce 00c5  ld   $c5
              9dcf 00cd  ld   $cd
              9dd0 00a0  ld   $a0
              9dd1 00c6  ld   $c6
              9dd2 00d5  ld   $d5
              9dd3 00cc  ld   $cc
              9dd4 004c  ld   $4c
              9dd5 00d4  ld   $d4
              9dd6 00cf  ld   $cf
              9dd7 00cf  ld   $cf
              9dd8 00a0  ld   $a0
              9dd9 00cd  ld   $cd
              9dda 00c1  ld   $c1
              9ddb 00ce  ld   $ce
              9ddc 00d9  ld   $d9
              9ddd 00a0  ld   $a0
              9dde 00d0  ld   $d0
              9ddf 00c1  ld   $c1
              9de0 00d2  ld   $d2
              9de1 00c5  ld   $c5
              9de2 00ce  ld   $ce
              9de3 0053  ld   $53
              9de4 00d3  ld   $d3
              9de5 00d4  ld   $d4
              9de6 00d2  ld   $d2
              9de7 00c9  ld   $c9
              9de8 00ce  ld   $ce
              9de9 0047  ld   $47
              9dea 00ce  ld   $ce
              9deb 00cf  ld   $cf
              9dec 00a0  ld   $a0
              9ded 00c5  ld   $c5
              9dee 00ce  ld   $ce
              9def 0044  ld   $44
              9df0 00c2  ld   $c2
              9df1 00c1  ld   $c1
              9df2 00c4  ld   $c4
              9df3 00a0  ld   $a0
              9df4 00c2  ld   $c2
              9df5 00d2  ld   $d2
              9df6 00c1  ld   $c1
              9df7 00ce  ld   $ce
              9df8 00c3  ld   $c3
              9df9 0048  ld   $48
              9dfa 00be  ld   $be
              9dfb fe00  bra  ac          ;+-----------------------------------+
              9dfc fcfd  bra  $9dfd       ;|                                   |
              9dfd 1418  ld   $18,y       ;| Trampoline for page $9d00 lookups |
              9dfe e006  jmp  y,$06       ;|                                   |
              9dff c218  st   [$18]       ;+-----------------------------------+
              9e00 00b8  ld   $b8
              9e01 00a0  ld   $a0
              9e02 00c7  ld   $c7
              9e03 00cf  ld   $cf
              9e04 00d3  ld   $d3
              9e05 00d5  ld   $d5
              9e06 00c2  ld   $c2
              9e07 0053  ld   $53
              9e08 00c2  ld   $c2
              9e09 00c1  ld   $c1
              9e0a 00c4  ld   $c4
              9e0b 00a0  ld   $a0
              9e0c 00d2  ld   $d2
              9e0d 00c5  ld   $c5
              9e0e 00d4  ld   $d4
              9e0f 00d5  ld   $d5
              9e10 00d2  ld   $d2
              9e11 004e  ld   $4e
              9e12 00be  ld   $be
              9e13 00b8  ld   $b8
              9e14 00a0  ld   $a0
              9e15 00c6  ld   $c6
              9e16 00cf  ld   $cf
              9e17 00d2  ld   $d2
              9e18 0053  ld   $53
              9e19 00c2  ld   $c2
              9e1a 00c1  ld   $c1
              9e1b 00c4  ld   $c4
              9e1c 00a0  ld   $a0
              9e1d 00ce  ld   $ce
              9e1e 00c5  ld   $c5
              9e1f 00d8  ld   $d8
              9e20 0054  ld   $54
              9e21 00d3  ld   $d3
              9e22 00d4  ld   $d4
              9e23 00cf  ld   $cf
              9e24 00d0  ld   $d0
              9e25 00d0  ld   $d0
              9e26 00c5  ld   $c5
              9e27 00c4  ld   $c4
              9e28 00a0  ld   $a0
              9e29 00c1  ld   $c1
              9e2a 00d4  ld   $d4
              9e2b 0020  ld   $20
              9e2c 00aa  ld   $aa
              9e2d 00aa  ld   $aa
              9e2e 00aa  ld   $aa
              9e2f 0020  ld   $20
              9e30 00a0  ld   $a0
              9e31 00c5  ld   $c5
              9e32 00d2  ld   $d2
              9e33 00d2  ld   $d2
              9e34 000d  ld   $0d
              9e35 00be  ld   $be
              9e36 00b2  ld   $b2
              9e37 00b5  ld   $b5
              9e38 0035  ld   $35
              9e39 00d2  ld   $d2
              9e3a 00c1  ld   $c1
              9e3b 00ce  ld   $ce
              9e3c 00c7  ld   $c7
              9e3d 0045  ld   $45
              9e3e 00c4  ld   $c4
              9e3f 00c9  ld   $c9
              9e40 004d  ld   $4d
              9e41 00d3  ld   $d3
              9e42 00d4  ld   $d4
              9e43 00d2  ld   $d2
              9e44 00a0  ld   $a0
              9e45 00cf  ld   $cf
              9e46 00d6  ld   $d6
              9e47 00c6  ld   $c6
              9e48 004c  ld   $4c
              9e49 00dc  ld   $dc
              9e4a 000d  ld   $0d
              9e4b 00d2  ld   $d2
              9e4c 00c5  ld   $c5
              9e4d 00d4  ld   $d4
              9e4e 00d9  ld   $d9
              9e4f 00d0  ld   $d0
              9e50 00c5  ld   $c5
              9e51 00a0  ld   $a0
              9e52 00cc  ld   $cc
              9e53 00c9  ld   $c9
              9e54 00ce  ld   $ce
              9e55 00c5  ld   $c5
              9e56 008d  ld   $8d
              9e57 003f  ld   $3f
              9e58 0046  ld   $46
              9e59 00d9  ld   $d9
              9e5a 0090  ld   $90
              9e5b 0003  ld   $03
              9e5c 004c  ld   $4c
              9e5d 00c3  ld   $c3
              9e5e 00e8  ld   $e8
              9e5f 00a6  ld   $a6
              9e60 00cf  ld   $cf
              9e61 009a  ld   $9a
              9e62 00a6  ld   $a6
              9e63 00ce  ld   $ce
              9e64 00a0  ld   $a0
              9e65 008d  ld   $8d
              9e66 00d0  ld   $d0
              9e67 0002  ld   $02
              9e68 00a0  ld   $a0
              9e69 0099  ld   $99
              9e6a 0020  ld   $20
              9e6b 00c4  ld   $c4
              9e6c 00e3  ld   $e3
              9e6d 0086  ld   $86
              9e6e 00ce  ld   $ce
              9e6f 00ba  ld   $ba
              9e70 0086  ld   $86
              9e71 00cf  ld   $cf
              9e72 00a0  ld   $a0
              9e73 00fe  ld   $fe
              9e74 0084  ld   $84
              9e75 00d9  ld   $d9
              9e76 00c8  ld   $c8
              9e77 0084  ld   $84
              9e78 00c8  ld   $c8
              9e79 0020  ld   $20
              9e7a 0099  ld   $99
              9e7b 00e2  ld   $e2
              9e7c 0084  ld   $84
              9e7d 00e9  ld   $e9
              9e7e 00a2  ld   $a2
              9e7f 0018  ld   $18
              9e80 00a9  ld   $a9
              9e81 0030  ld   $30
              9e82 0020  ld   $20
              9e83 0091  ld   $91
              9e84 00e4  ld   $e4
              9e85 00e6  ld   $e6
              9e86 00d9  ld   $d9
              9e87 00a6  ld   $a6
              9e88 00ce  ld   $ce
              9e89 00a4  ld   $a4
              9e8a 00c8  ld   $c8
              9e8b 000a  ld   $0a
              9e8c 0085  ld   $85
              9e8d 00ce  ld   $ce
              9e8e 00c8  ld   $c8
              9e8f 00b9  ld   $b9
              9e90 0000  ld   $00
              9e91 0002  ld   $02
              9e92 00c9  ld   $c9
              9e93 0074  ld   $74
              9e94 00f0  ld   $f0
              9e95 00d2  ld   $d2
              9e96 0049  ld   $49
              9e97 00b0  ld   $b0
              9e98 00c9  ld   $c9
              9e99 000a  ld   $0a
              9e9a 00b0  ld   $b0
              9e9b 00f0  ld   $f0
              9e9c 00c8  ld   $c8
              9e9d 00c8  ld   $c8
              9e9e 0084  ld   $84
              9e9f 00c8  ld   $c8
              9ea0 00b9  ld   $b9
              9ea1 0000  ld   $00
              9ea2 0002  ld   $02
              9ea3 0048  ld   $48
              9ea4 00b9  ld   $b9
              9ea5 00ff  ld   $ff
              9ea6 0001  ld   $01
              9ea7 00a0  ld   $a0
              9ea8 0000  ld   $00
              9ea9 0020  ld   $20
              9eaa 0008  ld   $08
              9eab 00e7  ld   $e7
              9eac 0068  ld   $68
              9ead 0095  ld   $95
              9eae 00a8  ld   $a8
              9eaf 00a5  ld   $a5
              9eb0 00ce  ld   $ce
              9eb1 00c9  ld   $c9
              9eb2 00c7  ld   $c7
              9eb3 00d0  ld   $d0
              9eb4 0003  ld   $03
              9eb5 0020  ld   $20
              9eb6 006f  ld   $6f
              9eb7 00e7  ld   $e7
              9eb8 004c  ld   $4c
              9eb9 0001  ld   $01
              9eba 00e8  ld   $e8
              9ebb 00ff  ld   $ff
              9ebc 00ff  ld   $ff
              9ebd 00ff  ld   $ff
              9ebe 00ec  ld   $ec
              9ebf 0000  ld   $00
              9ec0 0000  ld   $00
              9ec1 0050  ld   $50
              9ec2 0020  ld   $20
              9ec3 0013  ld   $13
              9ec4 00ec  ld   $ec
              9ec5 00d0  ld   $d0
              9ec6 0015  ld   $15
              9ec7 0020  ld   $20
              9ec8 000b  ld   $0b
              9ec9 00ec  ld   $ec
              9eca 00d0  ld   $d0
              9ecb 0010  ld   $10
              9ecc 0020  ld   $20
              9ecd 0082  ld   $82
              9ece 00e7  ld   $e7
              9ecf 0020  ld   $20
              9ed0 006f  ld   $6f
              9ed1 00e7  ld   $e7
              9ed2 0050  ld   $50
              9ed3 0003  ld   $03
              9ed4 0020  ld   $20
              9ed5 0082  ld   $82
              9ed6 00e7  ld   $e7
              9ed7 0020  ld   $20
              9ed8 0059  ld   $59
              9ed9 00e7  ld   $e7
              9eda 0056  ld   $56
              9edb 0050  ld   $50
              9edc 004c  ld   $4c
              9edd 0036  ld   $36
              9ede 00e7  ld   $e7
              9edf 00ff  ld   $ff
              9ee0 00ff  ld   $ff
              9ee1 00c1  ld   $c1
              9ee2 00ff  ld   $ff
              9ee3 007f  ld   $7f
              9ee4 00d1  ld   $d1
              9ee5 00cc  ld   $cc
              9ee6 00c7  ld   $c7
              9ee7 00cf  ld   $cf
              9ee8 00ce  ld   $ce
              9ee9 00c5  ld   $c5
              9eea 009a  ld   $9a
              9eeb 0098  ld   $98
              9eec 008b  ld   $8b
              9eed 0096  ld   $96
              9eee 0095  ld   $95
              9eef 0093  ld   $93
              9ef0 00bf  ld   $bf
              9ef1 00b2  ld   $b2
              9ef2 0032  ld   $32
              9ef3 002d  ld   $2d
              9ef4 002b  ld   $2b
              9ef5 00bc  ld   $bc
              9ef6 00b0  ld   $b0
              9ef7 00ac  ld   $ac
              9ef8 00be  ld   $be
              9ef9 0035  ld   $35
              9efa 008e  ld   $8e
              9efb fe00  bra  ac          ;+-----------------------------------+
              9efc fcfd  bra  $9efd       ;|                                   |
              9efd 1418  ld   $18,y       ;| Trampoline for page $9e00 lookups |
              9efe e006  jmp  y,$06       ;|                                   |
              9eff c218  st   [$18]       ;+-----------------------------------+
              9f00 0061  ld   $61
              9f01 00ff  ld   $ff
              9f02 00ff  ld   $ff
              9f03 00ff  ld   $ff
              9f04 00dd  ld   $dd
              9f05 00fb  ld   $fb
              9f06 0020  ld   $20
              9f07 00c9  ld   $c9
              9f08 00ef  ld   $ef
              9f09 0015  ld   $15
              9f0a 004f  ld   $4f
              9f0b 0010  ld   $10
              9f0c 0005  ld   $05
              9f0d 0020  ld   $20
              9f0e 00c9  ld   $c9
              9f0f 00ef  ld   $ef
              9f10 0035  ld   $35
              9f11 004f  ld   $4f
              9f12 0095  ld   $95
              9f13 0050  ld   $50
              9f14 0010  ld   $10
              9f15 00cb  ld   $cb
              9f16 004c  ld   $4c
              9f17 00c9  ld   $c9
              9f18 00ef  ld   $ef
              9f19 0040  ld   $40
              9f1a 0060  ld   $60
              9f1b 008d  ld   $8d
              9f1c 0060  ld   $60
              9f1d 008b  ld   $8b
              9f1e 0000  ld   $00
              9f1f 007e  ld   $7e
              9f20 008c  ld   $8c
              9f21 0033  ld   $33
              9f22 0000  ld   $00
              9f23 0000  ld   $00
              9f24 0060  ld   $60
              9f25 0003  ld   $03
              9f26 00bf  ld   $bf
              9f27 0012  ld   $12
              9f28 0000  ld   $00
              9f29 0040  ld   $40
              9f2a 0089  ld   $89
              9f2b 00c9  ld   $c9
              9f2c 0047  ld   $47
              9f2d 009d  ld   $9d
              9f2e 0017  ld   $17
              9f2f 0068  ld   $68
              9f30 009d  ld   $9d
              9f31 000a  ld   $0a
              9f32 0000  ld   $00
              9f33 0040  ld   $40
              9f34 0060  ld   $60
              9f35 008d  ld   $8d
              9f36 0060  ld   $60
              9f37 008b  ld   $8b
              9f38 0000  ld   $00
              9f39 007e  ld   $7e
              9f3a 008c  ld   $8c
              9f3b 003c  ld   $3c
              9f3c 0000  ld   $00
              9f3d 0000  ld   $00
              9f3e 0060  ld   $60
              9f3f 0003  ld   $03
              9f40 00bf  ld   $bf
              9f41 001b  ld   $1b
              9f42 004b  ld   $4b
              9f43 0067  ld   $67
              9f44 00b4  ld   $b4
              9f45 00a1  ld   $a1
              9f46 0007  ld   $07
              9f47 008c  ld   $8c
              9f48 0007  ld   $07
              9f49 00ae  ld   $ae
              9f4a 00a9  ld   $a9
              9f4b 00ac  ld   $ac
              9f4c 00a8  ld   $a8
              9f4d 0067  ld   $67
              9f4e 008c  ld   $8c
              9f4f 0007  ld   $07
              9f50 00b4  ld   $b4
              9f51 00af  ld   $af
              9f52 00ac  ld   $ac
              9f53 00b0  ld   $b0
              9f54 0067  ld   $67
              9f55 009d  ld   $9d
              9f56 00b2  ld   $b2
              9f57 00af  ld   $af
              9f58 00ac  ld   $ac
              9f59 00af  ld   $af
              9f5a 00a3  ld   $a3
              9f5b 0067  ld   $67
              9f5c 008c  ld   $8c
              9f5d 0007  ld   $07
              9f5e 00a5  ld   $a5
              9f5f 00ab  ld   $ab
              9f60 00af  ld   $af
              9f61 00b0  ld   $b0
              9f62 00f4  ld   $f4
              9f63 00ae  ld   $ae
              9f64 00a9  ld   $a9
              9f65 00b2  ld   $b2
              9f66 00b0  ld   $b0
              9f67 007f  ld   $7f
              9f68 000e  ld   $0e
              9f69 0027  ld   $27
              9f6a 00b4  ld   $b4
              9f6b 00ae  ld   $ae
              9f6c 00a9  ld   $a9
              9f6d 00b2  ld   $b2
              9f6e 00b0  ld   $b0
              9f6f 007f  ld   $7f
              9f70 000e  ld   $0e
              9f71 0028  ld   $28
              9f72 00b4  ld   $b4
              9f73 00ae  ld   $ae
              9f74 00a9  ld   $a9
              9f75 00b2  ld   $b2
              9f76 00b0  ld   $b0
              9f77 0064  ld   $64
              9f78 0007  ld   $07
              9f79 00a6  ld   $a6
              9f7a 00a9  ld   $a9
              9f7b 0067  ld   $67
              9f7c 00af  ld   $af
              9f7d 00b4  ld   $b4
              9f7e 00af  ld   $af
              9f7f 00a7  ld   $a7
              9f80 0078  ld   $78
              9f81 00b4  ld   $b4
              9f82 00a5  ld   $a5
              9f83 00ac  ld   $ac
              9f84 0078  ld   $78
              9f85 007f  ld   $7f
              9f86 0002  ld   $02
              9f87 00ad  ld   $ad
              9f88 00a5  ld   $a5
              9f89 00b2  ld   $b2
              9f8a 0067  ld   $67
              9f8b 00a2  ld   $a2
              9f8c 00b5  ld   $b5
              9f8d 00b3  ld   $b3
              9f8e 00af  ld   $af
              9f8f 00a7  ld   $a7
              9f90 00ee  ld   $ee
              9f91 00b2  ld   $b2
              9f92 00b5  ld   $b5
              9f93 00b4  ld   $b4
              9f94 00a5  ld   $a5
              9f95 00b2  ld   $b2
              9f96 007e  ld   $7e
              9f97 008c  ld   $8c
              9f98 0039  ld   $39
              9f99 00b4  ld   $b4
              9f9a 00b8  ld   $b8
              9f9b 00a5  ld   $a5
              9f9c 00ae  ld   $ae
              9f9d 0067  ld   $67
              9f9e 00b0  ld   $b0
              9f9f 00a5  ld   $a5
              9fa0 00b4  ld   $b4
              9fa1 00b3  ld   $b3
              9fa2 0027  ld   $27
              9fa3 00af  ld   $af
              9fa4 00b4  ld   $b4
              9fa5 0007  ld   $07
              9fa6 009d  ld   $9d
              9fa7 0019  ld   $19
              9fa8 00b2  ld   $b2
              9fa9 00af  ld   $af
              9faa 00a6  ld   $a6
              9fab 007f  ld   $7f
              9fac 0005  ld   $05
              9fad 0037  ld   $37
              9fae 00b4  ld   $b4
              9faf 00b5  ld   $b5
              9fb0 00b0  ld   $b0
              9fb1 00ae  ld   $ae
              9fb2 00a9  ld   $a9
              9fb3 007f  ld   $7f
              9fb4 0005  ld   $05
              9fb5 0028  ld   $28
              9fb6 00b4  ld   $b4
              9fb7 00b5  ld   $b5
              9fb8 00b0  ld   $b0
              9fb9 00ae  ld   $ae
              9fba 00a9  ld   $a9
              9fbb 007f  ld   $7f
              9fbc 0005  ld   $05
              9fbd 002a  ld   $2a
              9fbe 00b4  ld   $b4
              9fbf 00b5  ld   $b5
              9fc0 00b0  ld   $b0
              9fc1 00ae  ld   $ae
              9fc2 00a9  ld   $a9
              9fc3 00e4  ld   $e4
              9fc4 00ae  ld   $ae
              9fc5 00a5  ld   $a5
              9fc6 00ed  ld   $ed
              9fc7 0000  ld   $00
              9fc8 0000  ld   $00
              9fc9 0000  ld   $00
              9fca 00ff  ld   $ff
              9fcb 00ff  ld   $ff
              9fcc 0047  ld   $47
              9fcd 00a2  ld   $a2
              9fce 00a1  ld   $a1
              9fcf 00b4  ld   $b4
              9fd0 007f  ld   $7f
              9fd1 000d  ld   $0d
              9fd2 0030  ld   $30
              9fd3 00ad  ld   $ad
              9fd4 00a9  ld   $a9
              9fd5 00a4  ld   $a4
              9fd6 007f  ld   $7f
              9fd7 000d  ld   $0d
              9fd8 0023  ld   $23
              9fd9 00ad  ld   $ad
              9fda 00a9  ld   $a9
              9fdb 00a4  ld   $a4
              9fdc 0067  ld   $67
              9fdd 00ac  ld   $ac
              9fde 00ac  ld   $ac
              9fdf 00a1  ld   $a1
              9fe0 00a3  ld   $a3
              9fe1 0000  ld   $00
              9fe2 0040  ld   $40
              9fe3 0080  ld   $80
              9fe4 00c0  ld   $c0
              9fe5 00c1  ld   $c1
              9fe6 0080  ld   $80
              9fe7 0000  ld   $00
              9fe8 0047  ld   $47
              9fe9 008c  ld   $8c
              9fea 0068  ld   $68
              9feb 008c  ld   $8c
              9fec 00db  ld   $db
              9fed 0067  ld   $67
              9fee 009b  ld   $9b
              9fef 0068  ld   $68
              9ff0 009b  ld   $9b
              9ff1 0050  ld   $50
              9ff2 008c  ld   $8c
              9ff3 0063  ld   $63
              9ff4 008c  ld   $8c
              9ff5 007f  ld   $7f
              9ff6 0001  ld   $01
              9ff7 0051  ld   $51
              9ff8 0007  ld   $07
              9ff9 0088  ld   $88
              9ffa 0029  ld   $29
              9ffb fe00  bra  ac          ;+-----------------------------------+
              9ffc fcfd  bra  $9ffd       ;|                                   |
              9ffd 1418  ld   $18,y       ;| Trampoline for page $9f00 lookups |
              9ffe e006  jmp  y,$06       ;|                                   |
              9fff c218  st   [$18]       ;+-----------------------------------+
              a000 0084  ld   $84
              a001 0080  ld   $80
              a002 00c4  ld   $c4
              a003 0080  ld   $80
              a004 0057  ld   $57
              a005 0071  ld   $71
              a006 0007  ld   $07
              a007 0088  ld   $88
              a008 0014  ld   $14
              a009 00ed  ld   $ed
              a00a 00a5  ld   $a5
              a00b 00ad  ld   $ad
              a00c 00af  ld   $af
              a00d 00ac  ld   $ac
              a00e 00ed  ld   $ed
              a00f 00a5  ld   $a5
              a010 00ad  ld   $ad
              a011 00a9  ld   $a9
              a012 00a8  ld   $a8
              a013 00f2  ld   $f2
              a014 00af  ld   $af
              a015 00ac  ld   $ac
              a016 00af  ld   $af
              a017 00a3  ld   $a3
              a018 0071  ld   $71
              a019 0008  ld   $08
              a01a 0088  ld   $88
              a01b 00ae  ld   $ae
              a01c 00a5  ld   $a5
              a01d 00ac  ld   $ac
              a01e 0068  ld   $68
              a01f 0083  ld   $83
              a020 0008  ld   $08
              a021 0068  ld   $68
              a022 009d  ld   $9d
              a023 0008  ld   $08
              a024 0071  ld   $71
              a025 0007  ld   $07
              a026 0088  ld   $88
              a027 0060  ld   $60
              a028 0076  ld   $76
              a029 00b4  ld   $b4
              a02a 00af  ld   $af
              a02b 00ae  ld   $ae
              a02c 0076  ld   $76
              a02d 008d  ld   $8d
              a02e 0076  ld   $76
              a02f 008b  ld   $8b
              a030 0051  ld   $51
              a031 0007  ld   $07
              a032 0088  ld   $88
              a033 0019  ld   $19
              a034 00b8  ld   $b8
              a035 00a4  ld   $a4
              a036 00ae  ld   $ae
              a037 00b2  ld   $b2
              a038 00f2  ld   $f2
              a039 00b3  ld   $b3
              a03a 00b5  ld   $b5
              a03b 00f3  ld   $f3
              a03c 00a2  ld   $a2
              a03d 00a1  ld   $a1
              a03e 00ee  ld   $ee
              a03f 00a7  ld   $a7
              a040 00b3  ld   $b3
              a041 00e4  ld   $e4
              a042 00ae  ld   $ae
              a043 00b2  ld   $b2
              a044 00eb  ld   $eb
              a045 00a5  ld   $a5
              a046 00a5  ld   $a5
              a047 00b0  ld   $b0
              a048 0051  ld   $51
              a049 0007  ld   $07
              a04a 0088  ld   $88
              a04b 0039  ld   $39
              a04c 0081  ld   $81
              a04d 00c1  ld   $c1
              a04e 004f  ld   $4f
              a04f 007f  ld   $7f
              a050 000f  ld   $0f
              a051 002f  ld   $2f
              a052 0000  ld   $00
              a053 0051  ld   $51
              a054 0006  ld   $06
              a055 0088  ld   $88
              a056 0029  ld   $29
              a057 00c2  ld   $c2
              a058 000c  ld   $0c
              a059 0082  ld   $82
              a05a 0057  ld   $57
              a05b 008c  ld   $8c
              a05c 006a  ld   $6a
              a05d 008c  ld   $8c
              a05e 0042  ld   $42
              a05f 00ae  ld   $ae
              a060 00a5  ld   $a5
              a061 00a8  ld   $a8
              a062 00b4  ld   $b4
              a063 0060  ld   $60
              a064 00ae  ld   $ae
              a065 00a5  ld   $a5
              a066 00a8  ld   $a8
              a067 00b4  ld   $b4
              a068 004f  ld   $4f
              a069 007e  ld   $7e
              a06a 001e  ld   $1e
              a06b 0035  ld   $35
              a06c 008c  ld   $8c
              a06d 0027  ld   $27
              a06e 0051  ld   $51
              a06f 0007  ld   $07
              a070 0088  ld   $88
              a071 0009  ld   $09
              a072 008b  ld   $8b
              a073 00fe  ld   $fe
              a074 00e4  ld   $e4
              a075 00af  ld   $af
              a076 00ad  ld   $ad
              a077 00f2  ld   $f2
              a078 00af  ld   $af
              a079 00e4  ld   $e4
              a07a 00ae  ld   $ae
              a07b 00a1  ld   $a1
              a07c 00dc  ld   $dc
              a07d 00de  ld   $de
              a07e 009c  ld   $9c
              a07f 00dd  ld   $dd
              a080 009c  ld   $9c
              a081 00de  ld   $de
              a082 00dd  ld   $dd
              a083 009e  ld   $9e
              a084 00c3  ld   $c3
              a085 00dd  ld   $dd
              a086 00cf  ld   $cf
              a087 00ca  ld   $ca
              a088 00cd  ld   $cd
              a089 00cb  ld   $cb
              a08a 0000  ld   $00
              a08b 0047  ld   $47
              a08c 009d  ld   $9d
              a08d 00ad  ld   $ad
              a08e 00a5  ld   $a5
              a08f 00ad  ld   $ad
              a090 00af  ld   $af
              a091 00ac  ld   $ac
              a092 0076  ld   $76
              a093 009d  ld   $9d
              a094 00ad  ld   $ad
              a095 00a5  ld   $a5
              a096 00ad  ld   $ad
              a097 00a9  ld   $a9
              a098 00a8  ld   $a8
              a099 00e6  ld   $e6
              a09a 00a6  ld   $a6
              a09b 00af  ld   $af
              a09c 0060  ld   $60
              a09d 008c  ld   $8c
              a09e 0020  ld   $20
              a09f 00af  ld   $af
              a0a0 00b4  ld   $b4
              a0a1 00b5  ld   $b5
              a0a2 00a1  ld   $a1
              a0a3 00f2  ld   $f2
              a0a4 00ac  ld   $ac
              a0a5 00a3  ld   $a3
              a0a6 00f2  ld   $f2
              a0a7 00a3  ld   $a3
              a0a8 00b3  ld   $b3
              a0a9 0060  ld   $60
              a0aa 008c  ld   $8c
              a0ab 0020  ld   $20
              a0ac 00ac  ld   $ac
              a0ad 00a5  ld   $a5
              a0ae 00a4  ld   $a4
              a0af 00ee  ld   $ee
              a0b0 00b5  ld   $b5
              a0b1 00b2  ld   $b2
              a0b2 0060  ld   $60
              a0b3 00ae  ld   $ae
              a0b4 00b5  ld   $b5
              a0b5 00b2  ld   $b2
              a0b6 00f4  ld   $f4
              a0b7 00b3  ld   $b3
              a0b8 00a9  ld   $a9
              a0b9 00ac  ld   $ac
              a0ba 0060  ld   $60
              a0bb 008c  ld   $8c
              a0bc 0020  ld   $20
              a0bd 00b4  ld   $b4
              a0be 00b3  ld   $b3
              a0bf 00a9  ld   $a9
              a0c0 00ac  ld   $ac
              a0c1 007a  ld   $7a
              a0c2 007e  ld   $7e
              a0c3 009a  ld   $9a
              a0c4 0022  ld   $22
              a0c5 0020  ld   $20
              a0c6 0000  ld   $00
              a0c7 0060  ld   $60
              a0c8 0003  ld   $03
              a0c9 00bf  ld   $bf
              a0ca 0060  ld   $60
              a0cb 0003  ld   $03
              a0cc 00bf  ld   $bf
              a0cd 001f  ld   $1f
              a0ce 00ee  ld   $ee
              a0cf 0000  ld   $00
              a0d0 0000  ld   $00
              a0d1 0020  ld   $20
              a0d2 00b1  ld   $b1
              a0d3 00e7  ld   $e7
              a0d4 00e8  ld   $e8
              a0d5 00e8  ld   $e8
              a0d6 00b5  ld   $b5
              a0d7 004f  ld   $4f
              a0d8 0085  ld   $85
              a0d9 00da  ld   $da
              a0da 00b5  ld   $b5
              a0db 0087  ld   $87
              a0dc 0085  ld   $85
              a0dd 00db  ld   $db
              a0de 00b4  ld   $b4
              a0df 004e  ld   $4e
              a0e0 0098  ld   $98
              a0e1 00d5  ld   $d5
              a0e2 0086  ld   $86
              a0e3 00b0  ld   $b0
              a0e4 0009  ld   $09
              a0e5 00b1  ld   $b1
              a0e6 00da  ld   $da
              a0e7 0020  ld   $20
              a0e8 00c9  ld   $c9
              a0e9 00e3  ld   $e3
              a0ea 00c8  ld   $c8
              a0eb 004c  ld   $4c
              a0ec 000f  ld   $0f
              a0ed 00ee  ld   $ee
              a0ee 00a9  ld   $a9
              a0ef 00ff  ld   $ff
              a0f0 0085  ld   $85
              a0f1 00d5  ld   $d5
              a0f2 0060  ld   $60
              a0f3 00e8  ld   $e8
              a0f4 00a9  ld   $a9
              a0f5 0000  ld   $00
              a0f6 0095  ld   $95
              a0f7 0088  ld   $88
              a0f8 0095  ld   $95
              a0f9 00a8  ld   $a8
              a0fa 00b5  ld   $b5
              a0fb fe00  bra  ac          ;+-----------------------------------+
              a0fc fcfd  bra  $a0fd       ;|                                   |
              a0fd 1418  ld   $18,y       ;| Trampoline for page $a000 lookups |
              a0fe e006  jmp  y,$06       ;|                                   |
              a0ff c218  st   [$18]       ;+-----------------------------------+
              a100 0087  ld   $87
              a101 0038  ld   $38
              a102 00f5  ld   $f5
              a103 004f  ld   $4f
              a104 0095  ld   $95
              a105 0050  ld   $50
              a106 004c  ld   $4c
              a107 0023  ld   $23
              a108 00e8  ld   $e8
              a109 00ff  ld   $ff
              a10a 0020  ld   $20
              a10b 0015  ld   $15
              a10c 00e7  ld   $e7
              a10d 00a5  ld   $a5
              a10e 00cf  ld   $cf
              a10f 00d0  ld   $d0
              a110 0028  ld   $28
              a111 00a5  ld   $a5
              a112 00ce  ld   $ce
              a113 0060  ld   $60
              a114 0020  ld   $20
              a115 0034  ld   $34
              a116 00ee  ld   $ee
              a117 00a4  ld   $a4
              a118 00c8  ld   $c8
              a119 00c9  ld   $c9
              a11a 0030  ld   $30
              a11b 00b0  ld   $b0
              a11c 0021  ld   $21
              a11d 00c0  ld   $c0
              a11e 0028  ld   $28
              a11f 00b0  ld   $b0
              a120 001d  ld   $1d
              a121 0060  ld   $60
              a122 00ea  ld   $ea
              a123 00ea  ld   $ea
              a124 0020  ld   $20
              a125 0034  ld   $34
              a126 00ee  ld   $ee
              a127 0060  ld   $60
              a128 00ea  ld   $ea
              a129 008a  ld   $8a
              a12a 00a2  ld   $a2
              a12b 0001  ld   $01
              a12c 00b4  ld   $b4
              a12d 00ce  ld   $ce
              a12e 0094  ld   $94
              a12f 004c  ld   $4c
              a130 00b4  ld   $b4
              a131 0048  ld   $48
              a132 0094  ld   $94
              a133 00ca  ld   $ca
              a134 00ca  ld   $ca
              a135 00f0  ld   $f0
              a136 00f5  ld   $f5
              a137 00aa  ld   $aa
              a138 0060  ld   $60
              a139 00a0  ld   $a0
              a13a 0077  ld   $77
              a13b 004c  ld   $4c
              a13c 00e0  ld   $e0
              a13d 00e3  ld   $e3
              a13e 00a0  ld   $a0
              a13f 007b  ld   $7b
              a140 00d0  ld   $d0
              a141 00f9  ld   $f9
              a142 0020  ld   $20
              a143 0054  ld   $54
              a144 00e2  ld   $e2
              a145 00a5  ld   $a5
              a146 00da  ld   $da
              a147 00d0  ld   $d0
              a148 0007  ld   $07
              a149 00a5  ld   $a5
              a14a 00db  ld   $db
              a14b 00d0  ld   $d0
              a14c 0003  ld   $03
              a14d 004c  ld   $4c
              a14e 007e  ld   $7e
              a14f 00e7  ld   $e7
              a150 0006  ld   $06
              a151 00ce  ld   $ce
              a152 0026  ld   $26
              a153 00cf  ld   $cf
              a154 0026  ld   $26
              a155 0046  ld   $46
              a156 0026  ld   $26
              a157 0047  ld   $47
              a158 00a5  ld   $a5
              a159 0046  ld   $46
              a15a 00c5  ld   $c5
              a15b 00da  ld   $da
              a15c 00a5  ld   $a5
              a15d 0047  ld   $47
              a15e 00e5  ld   $e5
              a15f 00db  ld   $db
              a160 0090  ld   $90
              a161 000a  ld   $0a
              a162 0085  ld   $85
              a163 0047  ld   $47
              a164 00a5  ld   $a5
              a165 0046  ld   $46
              a166 00e5  ld   $e5
              a167 00da  ld   $da
              a168 0085  ld   $85
              a169 0046  ld   $46
              a16a 00e6  ld   $e6
              a16b 00ce  ld   $ce
              a16c 0088  ld   $88
              a16d 00d0  ld   $d0
              a16e 00e1  ld   $e1
              a16f 0060  ld   $60
              a170 00ff  ld   $ff
              a171 00ff  ld   $ff
              a172 00ff  ld   $ff
              * 6 times
              a176 0020  ld   $20
              a177 0015  ld   $15
              a178 00e7  ld   $e7
              a179 006c  ld   $6c
              a17a 00ce  ld   $ce
              a17b 0000  ld   $00
              a17c 00a5  ld   $a5
              a17d 004c  ld   $4c
              a17e 00d0  ld   $d0
              a17f 0002  ld   $02
              a180 00c6  ld   $c6
              a181 004d  ld   $4d
              a182 00c6  ld   $c6
              a183 004c  ld   $4c
              a184 00a5  ld   $a5
              a185 0048  ld   $48
              a186 00d0  ld   $d0
              a187 0002  ld   $02
              a188 00c6  ld   $c6
              a189 0049  ld   $49
              a18a 00c6  ld   $c6
              a18b 0048  ld   $48
              a18c 00a0  ld   $a0
              a18d 0000  ld   $00
              a18e 00b1  ld   $b1
              a18f 004c  ld   $4c
              a190 0091  ld   $91
              a191 0048  ld   $48
              a192 00a5  ld   $a5
              a193 00ca  ld   $ca
              a194 00c5  ld   $c5
              a195 004c  ld   $4c
              a196 00a5  ld   $a5
              a197 00cb  ld   $cb
              a198 00e5  ld   $e5
              a199 004d  ld   $4d
              a19a 0090  ld   $90
              a19b 00e0  ld   $e0
              a19c 004c  ld   $4c
              a19d 0053  ld   $53
              a19e 00ee  ld   $ee
              a19f 00c9  ld   $c9
              a1a0 0028  ld   $28
              a1a1 00b0  ld   $b0
              a1a2 009b  ld   $9b
              a1a3 00a8  ld   $a8
              a1a4 00a5  ld   $a5
              a1a5 00c8  ld   $c8
              a1a6 0060  ld   $60
              a1a7 00ea  ld   $ea
              a1a8 00ea  ld   $ea
              a1a9 0098  ld   $98
              a1aa 00aa  ld   $aa
              a1ab 00a0  ld   $a0
              a1ac 006e  ld   $6e
              a1ad 0020  ld   $20
              a1ae 00c4  ld   $c4
              a1af 00e3  ld   $e3
              a1b0 008a  ld   $8a
              a1b1 00a8  ld   $a8
              a1b2 0020  ld   $20
              a1b3 00c4  ld   $c4
              a1b4 00e3  ld   $e3
              a1b5 00a0  ld   $a0
              a1b6 0072  ld   $72
              a1b7 004c  ld   $4c
              a1b8 00c4  ld   $c4
              a1b9 00e3  ld   $e3
              a1ba 0020  ld   $20
              a1bb 0015  ld   $15
              a1bc 00e7  ld   $e7
              a1bd 0006  ld   $06
              a1be 00ce  ld   $ce
              a1bf 0026  ld   $26
              a1c0 00cf  ld   $cf
              a1c1 0030  ld   $30
              a1c2 00fa  ld   $fa
              a1c3 00b0  ld   $b0
              a1c4 00dc  ld   $dc
              a1c5 00d0  ld   $d0
              a1c6 0004  ld   $04
              a1c7 00c5  ld   $c5
              a1c8 00ce  ld   $ce
              a1c9 00b0  ld   $b0
              a1ca 00d6  ld   $d6
              a1cb 0060  ld   $60
              a1cc 0020  ld   $20
              a1cd 0015  ld   $15
              a1ce 00e7  ld   $e7
              a1cf 00b1  ld   $b1
              a1d0 00ce  ld   $ce
              a1d1 0094  ld   $94
              a1d2 00a7  ld   $a7
              a1d3 004c  ld   $4c
              a1d4 0008  ld   $08
              a1d5 00e7  ld   $e7
              a1d6 00ef  ld   $ef
              a1d7 0000  ld   $00
              a1d8 0000  ld   $00
              a1d9 0020  ld   $20
              a1da 0034  ld   $34
              a1db 00ee  ld   $ee
              a1dc 00a5  ld   $a5
              a1dd 00ce  ld   $ce
              a1de 0048  ld   $48
              a1df 0020  ld   $20
              a1e0 0015  ld   $15
              a1e1 00e7  ld   $e7
              a1e2 0068  ld   $68
              a1e3 0091  ld   $91
              a1e4 00ce  ld   $ce
              a1e5 0060  ld   $60
              a1e6 00ff  ld   $ff
              a1e7 00ff  ld   $ff
              a1e8 00ff  ld   $ff
              a1e9 0020  ld   $20
              a1ea 006c  ld   $6c
              a1eb 00ee  ld   $ee
              a1ec 00a5  ld   $a5
              a1ed 00ce  ld   $ce
              a1ee 0085  ld   $85
              a1ef 0046  ld   $46
              a1f0 00a5  ld   $a5
              a1f1 00cf  ld   $cf
              a1f2 0085  ld   $85
              a1f3 0047  ld   $47
              a1f4 004c  ld   $4c
              a1f5 0044  ld   $44
              a1f6 00e2  ld   $e2
              a1f7 0020  ld   $20
              a1f8 00e4  ld   $e4
              a1f9 00ee  ld   $ee
              a1fa 004c  ld   $4c
              a1fb fe00  bra  ac          ;+-----------------------------------+
              a1fc fcfd  bra  $a1fd       ;|                                   |
              a1fd 1418  ld   $18,y       ;| Trampoline for page $a100 lookups |
              a1fe e006  jmp  y,$06       ;|                                   |
              a1ff c218  st   [$18]       ;+-----------------------------------+
              a200 0034  ld   $34
              a201 00e1  ld   $e1
              a202 0020  ld   $20
              a203 00e4  ld   $e4
              a204 00ee  ld   $ee
              a205 00b4  ld   $b4
              a206 0088  ld   $88
              a207 00b5  ld   $b5
              a208 0050  ld   $50
              a209 0069  ld   $69
              a20a 00fe  ld   $fe
              a20b 00b0  ld   $b0
              a20c 0001  ld   $01
              a20d 0088  ld   $88
              a20e 0085  ld   $85
              a20f 00da  ld   $da
              a210 0084  ld   $84
              a211 00db  ld   $db
              a212 0018  ld   $18
              a213 0065  ld   $65
              a214 00ce  ld   $ce
              a215 0095  ld   $95
              a216 0050  ld   $50
              a217 0098  ld   $98
              a218 0065  ld   $65
              a219 00cf  ld   $cf
              a21a 0095  ld   $95
              a21b 0088  ld   $88
              a21c 00a0  ld   $a0
              a21d 0000  ld   $00
              a21e 00b5  ld   $b5
              a21f 0050  ld   $50
              a220 00d1  ld   $d1
              a221 00da  ld   $da
              a222 00c8  ld   $c8
              a223 00b5  ld   $b5
              a224 0088  ld   $88
              a225 00f1  ld   $f1
              a226 00da  ld   $da
              a227 00b0  ld   $b0
              a228 0080  ld   $80
              a229 004c  ld   $4c
              a22a 0023  ld   $23
              a22b 00e8  ld   $e8
              a22c 0020  ld   $20
              a22d 0015  ld   $15
              a22e 00e7  ld   $e7
              a22f 00a5  ld   $a5
              a230 004e  ld   $4e
              a231 0020  ld   $20
              a232 0008  ld   $08
              a233 00e7  ld   $e7
              a234 00a5  ld   $a5
              a235 004f  ld   $4f
              a236 00d0  ld   $d0
              a237 0004  ld   $04
              a238 00c5  ld   $c5
              a239 004e  ld   $4e
              a23a 0069  ld   $69
              a23b 0000  ld   $00
              a23c 0029  ld   $29
              a23d 007f  ld   $7f
              a23e 0085  ld   $85
              a23f 004f  ld   $4f
              a240 0095  ld   $95
              a241 00a8  ld   $a8
              a242 00a0  ld   $a0
              a243 0011  ld   $11
              a244 00a5  ld   $a5
              a245 004f  ld   $4f
              a246 000a  ld   $0a
              a247 0018  ld   $18
              a248 0069  ld   $69
              a249 0040  ld   $40
              a24a 000a  ld   $0a
              a24b 0026  ld   $26
              a24c 004e  ld   $4e
              a24d 0026  ld   $26
              a24e 004f  ld   $4f
              a24f 0088  ld   $88
              a250 00d0  ld   $d0
              a251 00f2  ld   $f2
              a252 00a5  ld   $a5
              a253 00ce  ld   $ce
              a254 0020  ld   $20
              a255 0008  ld   $08
              a256 00e7  ld   $e7
              a257 00a5  ld   $a5
              a258 00cf  ld   $cf
              a259 0095  ld   $95
              a25a 00a8  ld   $a8
              a25b 004c  ld   $4c
              a25c 007a  ld   $7a
              a25d 00e2  ld   $e2
              a25e 0020  ld   $20
              a25f 0015  ld   $15
              a260 00e7  ld   $e7
              a261 00a4  ld   $a4
              a262 00ce  ld   $ce
              a263 00c4  ld   $c4
              a264 004c  ld   $4c
              a265 00a5  ld   $a5
              a266 00cf  ld   $cf
              a267 00e5  ld   $e5
              a268 004d  ld   $4d
              a269 0090  ld   $90
              a26a 001f  ld   $1f
              a26b 0084  ld   $84
              a26c 0048  ld   $48
              a26d 00a5  ld   $a5
              a26e 00cf  ld   $cf
              a26f 0085  ld   $85
              a270 0049  ld   $49
              a271 004c  ld   $4c
              a272 00b6  ld   $b6
              a273 00ee  ld   $ee
              a274 0020  ld   $20
              a275 0015  ld   $15
              a276 00e7  ld   $e7
              a277 00a4  ld   $a4
              a278 00ce  ld   $ce
              a279 00c4  ld   $c4
              a27a 00ca  ld   $ca
              a27b 00a5  ld   $a5
              a27c 00cf  ld   $cf
              a27d 00e5  ld   $e5
              a27e 00cb  ld   $cb
              a27f 00b0  ld   $b0
              a280 0009  ld   $09
              a281 0084  ld   $84
              a282 004a  ld   $4a
              a283 00a5  ld   $a5
              a284 00cf  ld   $cf
              a285 0085  ld   $85
              a286 004b  ld   $4b
              a287 004c  ld   $4c
              a288 00b7  ld   $b7
              a289 00e5  ld   $e5
              a28a 004c  ld   $4c
              a28b 00cb  ld   $cb
              a28c 00ee  ld   $ee
              a28d 00ea  ld   $ea
              a28e 00ea  ld   $ea
              a28f 00ea  ld   $ea
              a290 00ea  ld   $ea
              a291 0020  ld   $20
              a292 00c9  ld   $c9
              a293 00ef  ld   $ef
              a294 0020  ld   $20
              a295 0071  ld   $71
              a296 00e1  ld   $e1
              a297 004c  ld   $4c
              a298 00bf  ld   $bf
              a299 00ef  ld   $ef
              a29a 0020  ld   $20
              a29b 0003  ld   $03
              a29c 00ee  ld   $ee
              a29d 00a9  ld   $a9
              a29e 00ff  ld   $ff
              a29f 0085  ld   $85
              a2a0 00c8  ld   $c8
              a2a1 00a9  ld   $a9
              a2a2 0074  ld   $74
              a2a3 008d  ld   $8d
              a2a4 0000  ld   $00
              a2a5 0002  ld   $02
              a2a6 0060  ld   $60
              a2a7 0020  ld   $20
              a2a8 0036  ld   $36
              a2a9 00e7  ld   $e7
              a2aa 00e8  ld   $e8
              a2ab 0020  ld   $20
              a2ac 0036  ld   $36
              a2ad 00e7  ld   $e7
              a2ae 00b5  ld   $b5
              a2af 0050  ld   $50
              a2b0 0060  ld   $60
              a2b1 00a9  ld   $a9
              a2b2 0000  ld   $00
              a2b3 0085  ld   $85
              a2b4 004a  ld   $4a
              a2b5 0085  ld   $85
              a2b6 004c  ld   $4c
              a2b7 00a9  ld   $a9
              a2b8 0008  ld   $08
              a2b9 0085  ld   $85
              a2ba 004b  ld   $4b
              a2bb 00a9  ld   $a9
              a2bc 0010  ld   $10
              a2bd 0085  ld   $85
              a2be 004d  ld   $4d
              a2bf 004c  ld   $4c
              a2c0 00ad  ld   $ad
              a2c1 00e5  ld   $e5
              a2c2 00d5  ld   $d5
              a2c3 0088  ld   $88
              a2c4 00d0  ld   $d0
              a2c5 0001  ld   $01
              a2c6 0018  ld   $18
              a2c7 004c  ld   $4c
              a2c8 0002  ld   $02
              a2c9 00e1  ld   $e1
              a2ca 0020  ld   $20
              a2cb 00b7  ld   $b7
              a2cc 00e5  ld   $e5
              a2cd 004c  ld   $4c
              a2ce 0036  ld   $36
              a2cf 00e8  ld   $e8
              a2d0 0020  ld   $20
              a2d1 00b7  ld   $b7
              a2d2 00e5  ld   $e5
              a2d3 004c  ld   $4c
              a2d4 005b  ld   $5b
              a2d5 00e8  ld   $e8
              a2d6 00e0  ld   $e0
              a2d7 0080  ld   $80
              a2d8 00d0  ld   $d0
              a2d9 0001  ld   $01
              a2da 0088  ld   $88
              a2db 004c  ld   $4c
              a2dc 000c  ld   $0c
              a2dd 00e0  ld   $e0
              a2de 00ff  ld   $ff
              a2df 0000  ld   $00
              a2e0 0000  ld   $00
              a2e1 00d8  ld   $d8
              a2e2 0058  ld   $58
              a2e3 00a0  ld   $a0
              a2e4 007f  ld   $7f
              a2e5 008c  ld   $8c
              a2e6 0012  ld   $12
              a2e7 00d0  ld   $d0
              a2e8 00a9  ld   $a9
              a2e9 00a7  ld   $a7
              a2ea 008d  ld   $8d
              a2eb 0011  ld   $11
              a2ec 00d0  ld   $d0
              a2ed 008d  ld   $8d
              a2ee 0013  ld   $13
              a2ef 00d0  ld   $d0
              a2f0 00c9  ld   $c9
              a2f1 00df  ld   $df
              a2f2 00f0  ld   $f0
              a2f3 0013  ld   $13
              a2f4 00c9  ld   $c9
              a2f5 009b  ld   $9b
              a2f6 00f0  ld   $f0
              a2f7 0003  ld   $03
              a2f8 00c8  ld   $c8
              a2f9 0010  ld   $10
              a2fa 000f  ld   $0f
              a2fb fe00  bra  ac          ;+-----------------------------------+
              a2fc fcfd  bra  $a2fd       ;|                                   |
              a2fd 1418  ld   $18,y       ;| Trampoline for page $a200 lookups |
              a2fe e006  jmp  y,$06       ;|                                   |
              a2ff c218  st   [$18]       ;+-----------------------------------+
              a300 00a9  ld   $a9
              a301 00dc  ld   $dc
              a302 0020  ld   $20
              a303 00ef  ld   $ef
              a304 00ff  ld   $ff
              a305 00a9  ld   $a9
              a306 008d  ld   $8d
              a307 0020  ld   $20
              a308 00ef  ld   $ef
              a309 00ff  ld   $ff
              a30a 00a0  ld   $a0
              a30b 0001  ld   $01
              a30c 0088  ld   $88
              a30d 0030  ld   $30
              a30e 00f6  ld   $f6
              a30f 00ad  ld   $ad
              a310 0011  ld   $11
              a311 00d0  ld   $d0
              a312 0010  ld   $10
              a313 00fb  ld   $fb
              a314 00ad  ld   $ad
              a315 0010  ld   $10
              a316 00d0  ld   $d0
              a317 0099  ld   $99
              a318 0000  ld   $00
              a319 0002  ld   $02
              a31a 0020  ld   $20
              a31b 00ef  ld   $ef
              a31c 00ff  ld   $ff
              a31d 00c9  ld   $c9
              a31e 008d  ld   $8d
              a31f 00d0  ld   $d0
              a320 00d4  ld   $d4
              a321 00a0  ld   $a0
              a322 00ff  ld   $ff
              a323 00a9  ld   $a9
              a324 0000  ld   $00
              a325 00aa  ld   $aa
              a326 000a  ld   $0a
              a327 0085  ld   $85
              a328 003b  ld   $3b
              a329 00c8  ld   $c8
              a32a 00b9  ld   $b9
              a32b 0000  ld   $00
              a32c 0002  ld   $02
              a32d 00c9  ld   $c9
              a32e 008d  ld   $8d
              a32f 00f0  ld   $f0
              a330 00d4  ld   $d4
              a331 00c9  ld   $c9
              a332 00ae  ld   $ae
              a333 0090  ld   $90
              a334 00f4  ld   $f4
              a335 00f0  ld   $f0
              a336 00f0  ld   $f0
              a337 00c9  ld   $c9
              a338 00ba  ld   $ba
              a339 00f0  ld   $f0
              a33a 00eb  ld   $eb
              a33b 00c9  ld   $c9
              a33c 00d2  ld   $d2
              a33d 00f0  ld   $f0
              a33e 003b  ld   $3b
              a33f 0086  ld   $86
              a340 0038  ld   $38
              a341 0086  ld   $86
              a342 0039  ld   $39
              a343 0084  ld   $84
              a344 003a  ld   $3a
              a345 00b9  ld   $b9
              a346 0000  ld   $00
              a347 0002  ld   $02
              a348 0049  ld   $49
              a349 00b0  ld   $b0
              a34a 00c9  ld   $c9
              a34b 000a  ld   $0a
              a34c 0090  ld   $90
              a34d 0006  ld   $06
              a34e 0069  ld   $69
              a34f 0088  ld   $88
              a350 00c9  ld   $c9
              a351 00fa  ld   $fa
              a352 0090  ld   $90
              a353 0011  ld   $11
              a354 000a  ld   $0a
              a355 000a  ld   $0a
              a356 000a  ld   $0a
              a357 000a  ld   $0a
              a358 00a2  ld   $a2
              a359 0004  ld   $04
              a35a 000a  ld   $0a
              a35b 0026  ld   $26
              a35c 0038  ld   $38
              a35d 0026  ld   $26
              a35e 0039  ld   $39
              a35f 00ca  ld   $ca
              a360 00d0  ld   $d0
              a361 00f8  ld   $f8
              a362 00c8  ld   $c8
              a363 00d0  ld   $d0
              a364 00e0  ld   $e0
              a365 00c4  ld   $c4
              a366 003a  ld   $3a
              a367 00f0  ld   $f0
              a368 0097  ld   $97
              a369 0024  ld   $24
              a36a 003b  ld   $3b
              a36b 0050  ld   $50
              a36c 0010  ld   $10
              a36d 00a5  ld   $a5
              a36e 0038  ld   $38
              a36f 0081  ld   $81
              a370 0036  ld   $36
              a371 00e6  ld   $e6
              a372 0036  ld   $36
              a373 00d0  ld   $d0
              a374 00b5  ld   $b5
              a375 00e6  ld   $e6
              a376 0037  ld   $37
              a377 004c  ld   $4c
              a378 0044  ld   $44
              a379 00ff  ld   $ff
              a37a 006c  ld   $6c
              a37b 0034  ld   $34
              a37c 0000  ld   $00
              a37d 0030  ld   $30
              a37e 002b  ld   $2b
              a37f 00a2  ld   $a2
              a380 0002  ld   $02
              a381 00b5  ld   $b5
              a382 0037  ld   $37
              a383 0095  ld   $95
              a384 0035  ld   $35
              a385 0095  ld   $95
              a386 0033  ld   $33
              a387 00ca  ld   $ca
              a388 00d0  ld   $d0
              a389 00f7  ld   $f7
              a38a 00d0  ld   $d0
              a38b 0014  ld   $14
              a38c 00a9  ld   $a9
              a38d 008d  ld   $8d
              a38e 0020  ld   $20
              a38f 00ef  ld   $ef
              a390 00ff  ld   $ff
              a391 00a5  ld   $a5
              a392 0035  ld   $35
              a393 0020  ld   $20
              a394 00dc  ld   $dc
              a395 00ff  ld   $ff
              a396 00a5  ld   $a5
              a397 0034  ld   $34
              a398 0020  ld   $20
              a399 00dc  ld   $dc
              a39a 00ff  ld   $ff
              a39b 00a9  ld   $a9
              a39c 00ba  ld   $ba
              a39d 0020  ld   $20
              a39e 00ef  ld   $ef
              a39f 00ff  ld   $ff
              a3a0 00a9  ld   $a9
              a3a1 00a0  ld   $a0
              a3a2 0020  ld   $20
              a3a3 00ef  ld   $ef
              a3a4 00ff  ld   $ff
              a3a5 00a1  ld   $a1
              a3a6 0034  ld   $34
              a3a7 0020  ld   $20
              a3a8 00dc  ld   $dc
              a3a9 00ff  ld   $ff
              a3aa 0086  ld   $86
              a3ab 003b  ld   $3b
              a3ac 00a5  ld   $a5
              a3ad 0034  ld   $34
              a3ae 00c5  ld   $c5
              a3af 0038  ld   $38
              a3b0 00a5  ld   $a5
              a3b1 0035  ld   $35
              a3b2 00e5  ld   $e5
              a3b3 0039  ld   $39
              a3b4 00b0  ld   $b0
              a3b5 00c1  ld   $c1
              a3b6 00e6  ld   $e6
              a3b7 0034  ld   $34
              a3b8 00d0  ld   $d0
              a3b9 0002  ld   $02
              a3ba 00e6  ld   $e6
              a3bb 0035  ld   $35
              a3bc 00a5  ld   $a5
              a3bd 0034  ld   $34
              a3be 0029  ld   $29
              a3bf 0007  ld   $07
              a3c0 0010  ld   $10
              a3c1 00c8  ld   $c8
              a3c2 0048  ld   $48
              a3c3 004a  ld   $4a
              a3c4 004a  ld   $4a
              a3c5 004a  ld   $4a
              a3c6 004a  ld   $4a
              a3c7 0020  ld   $20
              a3c8 00e5  ld   $e5
              a3c9 00ff  ld   $ff
              a3ca 0068  ld   $68
              a3cb 0029  ld   $29
              a3cc 000f  ld   $0f
              a3cd 0009  ld   $09
              a3ce 00b0  ld   $b0
              a3cf 00c9  ld   $c9
              a3d0 00ba  ld   $ba
              a3d1 0090  ld   $90
              a3d2 0002  ld   $02
              a3d3 0069  ld   $69
              a3d4 0006  ld   $06
              a3d5 008d  ld   $8d
              a3d6 0012  ld   $12
              a3d7 00d0  ld   $d0
              a3d8 002c  ld   $2c
              a3d9 0012  ld   $12
              a3da 00d0  ld   $d0
              a3db 00d0  ld   $d0
              a3dc 00fb  ld   $fb
              a3dd 0060  ld   $60
              a3de 0000  ld   $00
              a3df 0000  ld   $00
              a3e0 0000  ld   $00
              * 5 times
              a3e3 00ff  ld   $ff
              a3e4 00db  ld   $db
              a3e5 005e  ld   $5e
              a3e6 0000  ld   $00
              a3e7 0000  ld   $00         ;End of Apps/Apple-1/Apple-1_v2.gt1, size 7559
                                          ;+-----------------------------------+
                                          ;| Apps/MSBASIC/MSBASIC_v1.gt1       |
                                          ;+-----------------------------------+
              a3e8 dc41  st   $41,[y,x++] ;'A'
              a3e9 dc70  st   $70,[y,x++] ;'p'
              a3ea dc70  st   $70,[y,x++] ;'p'
              a3eb dc6c  st   $6c,[y,x++] ;'l'
              a3ec dc65  st   $65,[y,x++] ;'e'
              a3ed dc31  st   $31,[y,x++] ;'1'
              a3ee dc00  st   $00,[y,x++] ;'\x00'
              a3ef dc00  st   $00,[y,x++] ;'\x00'
              a3f0 0061  ld   $61
              a3f1 c218  st   [$18]
              a3f2 0086  ld   $86
              a3f3 14df  ld   $df,y
              a3f4 e0ac  jmp  y,$ac
              a3f5 c219  st   [$19]
MSBASIC:      a3f6 0002  ld   $02
              a3f7 0000  ld   $00
              a3f8 0012  ld   $12
              a3f9 001a  ld   $1a
              a3fa 0021  ld   $21
              a3fb fe00  bra  ac          ;+-----------------------------------+
              a3fc fcfd  bra  $a3fd       ;|                                   |
              a3fd 1418  ld   $18,y       ;| Trampoline for page $a300 lookups |
              a3fe e006  jmp  y,$06       ;|                                   |
              a3ff c218  st   [$18]       ;+-----------------------------------+
              a400 00e6  ld   $e6
              a401 0038  ld   $38
              a402 0035  ld   $35
              a403 0053  ld   $53
              a404 000b  ld   $0b
              a405 0021  ld   $21
              a406 000e  ld   $0e
              a407 00f3  ld   $f3
              a408 0017  ld   $17
              a409 0090  ld   $90
              a40a 0005  ld   $05
              a40b 0011  ld   $11
              a40c 0000  ld   $00
              a40d 0024  ld   $24
              a40e 00cf  ld   $cf
              a40f 0018  ld   $18
              a410 0002  ld   $02
              a411 0018  ld   $18
              a412 00e8  ld   $e8
              a413 0027  ld   $27
              a414 0009  ld   $09
              a415 003e  ld   $3e
              a416 0008  ld   $08
              a417 0090  ld   $90
              a418 000d  ld   $0d
              a419 00e6  ld   $e6
              a41a 0009  ld   $09
              a41b 0051  ld   $51
              a41c 000c  ld   $0c
              a41d 00c5  ld   $c5
              a41e 0010  ld   $10
              a41f 007f  ld   $7f
              a420 000c  ld   $0c
              a421 0093  ld   $93
              a422 000a  ld   $0a
              a423 0093  ld   $93
              a424 0009  ld   $09
              a425 006b  ld   $6b
              a426 0009  ld   $09
              a427 0016  ld   $16
              a428 000a  ld   $0a
              a429 0016  ld   $16
              a42a 0009  ld   $09
              a42b 0076  ld   $76
              a42c 0009  ld   $09
              a42d 00c0  ld   $c0
              a42e 0009  ld   $09
              a42f 0029  ld   $29
              a430 000a  ld   $0a
              a431 0025  ld   $25
              a432 0009  ld   $09
              a433 0039  ld   $39
              a434 000a  ld   $0a
              a435 0071  ld   $71
              a436 0018  ld   $18
              a437 00ff  ld   $ff
              a438 0031  ld   $31
              a439 00ff  ld   $ff
              a43a 002f  ld   $2f
              a43b 006d  ld   $6d
              a43c 000f  ld   $0f
              a43d 00ee  ld   $ee
              a43e 0013  ld   $13
              a43f 0068  ld   $68
              a440 0018  ld   $18
              a441 0078  ld   $78
              a442 000b  ld   $0b
              a443 0051  ld   $51
              a444 0009  ld   $09
              a445 009b  ld   $9b
              a446 0007  ld   $07
              a447 005d  ld   $5d
              a448 0007  ld   $07
              a449 003f  ld   $3f
              a44a 000c  ld   $0c
              a44b 0041  ld   $41
              a44c 0007  ld   $07
              a44d 00b1  ld   $b1
              a44e 001c  ld   $1c
              a44f 0044  ld   $44
              a450 001d  ld   $1d
              a451 00d0  ld   $d0
              a452 001c  ld   $1c
              a453 0038  ld   $38
              a454 0000  ld   $00
              a455 00b8  ld   $b8
              a456 0013  ld   $13
              a457 00d9  ld   $d9
              a458 0013  ld   $13
              a459 00ca  ld   $ca
              a45a 001f  ld   $1f
              a45b 00eb  ld   $eb
              a45c 0020  ld   $20
              a45d 0062  ld   $62
              a45e 001a  ld   $1a
              a45f 0046  ld   $46
              a460 0020  ld   $20
              a461 0040  ld   $40
              a462 0021  ld   $21
              a463 0047  ld   $47
              a464 0021  ld   $21
              a465 0090  ld   $90
              a466 0021  ld   $21
              a467 00fe  ld   $fe
              a468 0021  ld   $21
              a469 004a  ld   $4a
              a46a 0018  ld   $18
              a46b 00b8  ld   $b8
              a46c 0017  ld   $17
              a46d 00a1  ld   $a1
              a46e 0014  ld   $14
              a46f 00e9  ld   $e9
              a470 0017  ld   $17
              a471 00c7  ld   $c7
              a472 0017  ld   $17
              a473 0028  ld   $28
              a474 0017  ld   $17
              a475 003c  ld   $3c
              a476 0017  ld   $17
              a477 0068  ld   $68
              a478 0017  ld   $17
              a479 0073  ld   $73
              a47a 0017  ld   $17
              a47b 0079  ld   $79
              a47c 00e1  ld   $e1
              a47d 0018  ld   $18
              a47e 0079  ld   $79
              a47f 0097  ld   $97
              a480 0018  ld   $18
              a481 007b  ld   $7b
              a482 00a2  ld   $a2
              a483 001a  ld   $1a
              a484 007b  ld   $7b
              a485 0089  ld   $89
              a486 001b  ld   $1b
              a487 007f  ld   $7f
              a488 00d3  ld   $d3
              a489 001f  ld   $1f
              a48a 0050  ld   $50
              a48b 002d  ld   $2d
              a48c 0010  ld   $10
              a48d 0046  ld   $46
              a48e 002a  ld   $2a
              a48f 0010  ld   $10
              a490 007d  ld   $7d
              a491 000c  ld   $0c
              a492 0020  ld   $20
              a493 005a  ld   $5a
              a494 0039  ld   $39
              a495 000f  ld   $0f
              a496 0064  ld   $64
              a497 005a  ld   $5a
              a498 0010  ld   $10
              a499 0045  ld   $45
              a49a 004e  ld   $4e
              a49b 00c4  ld   $c4
              a49c 0046  ld   $46
              a49d 004f  ld   $4f
              a49e 00d2  ld   $d2
              a49f 004e  ld   $4e
              a4a0 0045  ld   $45
              a4a1 0058  ld   $58
              a4a2 00d4  ld   $d4
              a4a3 0044  ld   $44
              a4a4 0041  ld   $41
              a4a5 0054  ld   $54
              a4a6 00c1  ld   $c1
              a4a7 0049  ld   $49
              a4a8 004e  ld   $4e
              a4a9 0050  ld   $50
              a4aa 0055  ld   $55
              a4ab 00d4  ld   $d4
              a4ac 0044  ld   $44
              a4ad 0049  ld   $49
              a4ae 00cd  ld   $cd
              a4af 0052  ld   $52
              a4b0 0045  ld   $45
              a4b1 0041  ld   $41
              a4b2 00c4  ld   $c4
              a4b3 004c  ld   $4c
              a4b4 0045  ld   $45
              a4b5 00d4  ld   $d4
              a4b6 0047  ld   $47
              a4b7 004f  ld   $4f
              a4b8 0054  ld   $54
              a4b9 00cf  ld   $cf
              a4ba 0052  ld   $52
              a4bb 0055  ld   $55
              a4bc 00ce  ld   $ce
              a4bd 0049  ld   $49
              a4be 00c6  ld   $c6
              a4bf 0052  ld   $52
              a4c0 0045  ld   $45
              a4c1 0053  ld   $53
              a4c2 0054  ld   $54
              a4c3 004f  ld   $4f
              a4c4 0052  ld   $52
              a4c5 00c5  ld   $c5
              a4c6 0047  ld   $47
              a4c7 004f  ld   $4f
              a4c8 0053  ld   $53
              a4c9 0055  ld   $55
              a4ca 00c2  ld   $c2
              a4cb 0052  ld   $52
              a4cc 0045  ld   $45
              a4cd 0054  ld   $54
              a4ce 0055  ld   $55
              a4cf 0052  ld   $52
              a4d0 00ce  ld   $ce
              a4d1 0052  ld   $52
              a4d2 0045  ld   $45
              a4d3 00cd  ld   $cd
              a4d4 0053  ld   $53
              a4d5 0054  ld   $54
              a4d6 004f  ld   $4f
              a4d7 00d0  ld   $d0
              a4d8 004f  ld   $4f
              a4d9 00ce  ld   $ce
              a4da 0057  ld   $57
              a4db 0041  ld   $41
              a4dc 0049  ld   $49
              a4dd 00d4  ld   $d4
              a4de 004c  ld   $4c
              a4df 004f  ld   $4f
              a4e0 0041  ld   $41
              a4e1 00c4  ld   $c4
              a4e2 0053  ld   $53
              a4e3 0041  ld   $41
              a4e4 0056  ld   $56
              a4e5 00c5  ld   $c5
              a4e6 0056  ld   $56
              a4e7 0045  ld   $45
              a4e8 0052  ld   $52
              a4e9 0049  ld   $49
              a4ea 0046  ld   $46
              a4eb 00d9  ld   $d9
              a4ec 0044  ld   $44
              a4ed 0045  ld   $45
              a4ee 00c6  ld   $c6
              a4ef 0050  ld   $50
              a4f0 004f  ld   $4f
              a4f1 004b  ld   $4b
              a4f2 00c5  ld   $c5
              a4f3 0050  ld   $50
              a4f4 0052  ld   $52
              a4f5 0049  ld   $49
              a4f6 004e  ld   $4e
              a4f7 00d4  ld   $d4
              a4f8 0043  ld   $43
              a4f9 004f  ld   $4f
              a4fa 004e  ld   $4e
              a4fb fe00  bra  ac          ;+-----------------------------------+
              a4fc fcfd  bra  $a4fd       ;|                                   |
              a4fd 1418  ld   $18,y       ;| Trampoline for page $a400 lookups |
              a4fe e006  jmp  y,$06       ;|                                   |
              a4ff c218  st   [$18]       ;+-----------------------------------+
              a500 0003  ld   $03
              a501 0000  ld   $00
              a502 0000  ld   $00
              a503 00d4  ld   $d4
              a504 004c  ld   $4c
              a505 0049  ld   $49
              a506 0053  ld   $53
              a507 00d4  ld   $d4
              a508 0043  ld   $43
              a509 004c  ld   $4c
              a50a 00d2  ld   $d2
              a50b 0047  ld   $47
              a50c 0045  ld   $45
              a50d 00d4  ld   $d4
              a50e 004e  ld   $4e
              a50f 0045  ld   $45
              a510 00d7  ld   $d7
              a511 0054  ld   $54
              a512 0041  ld   $41
              a513 0042  ld   $42
              a514 00a8  ld   $a8
              a515 0054  ld   $54
              a516 00cf  ld   $cf
              a517 0046  ld   $46
              a518 00ce  ld   $ce
              a519 0053  ld   $53
              a51a 0050  ld   $50
              a51b 0043  ld   $43
              a51c 00a8  ld   $a8
              a51d 0054  ld   $54
              a51e 0048  ld   $48
              a51f 0045  ld   $45
              a520 00ce  ld   $ce
              a521 004e  ld   $4e
              a522 004f  ld   $4f
              a523 00d4  ld   $d4
              a524 0053  ld   $53
              a525 0054  ld   $54
              a526 0045  ld   $45
              a527 00d0  ld   $d0
              a528 00ab  ld   $ab
              a529 00ad  ld   $ad
              a52a 00aa  ld   $aa
              a52b 00af  ld   $af
              a52c 00de  ld   $de
              a52d 0041  ld   $41
              a52e 004e  ld   $4e
              a52f 00c4  ld   $c4
              a530 004f  ld   $4f
              a531 00d2  ld   $d2
              a532 00be  ld   $be
              a533 00bd  ld   $bd
              a534 00bc  ld   $bc
              a535 0053  ld   $53
              a536 0047  ld   $47
              a537 00ce  ld   $ce
              a538 0049  ld   $49
              a539 004e  ld   $4e
              a53a 00d4  ld   $d4
              a53b 0041  ld   $41
              a53c 0042  ld   $42
              a53d 00d3  ld   $d3
              a53e 0055  ld   $55
              a53f 0053  ld   $53
              a540 00d2  ld   $d2
              a541 0046  ld   $46
              a542 0052  ld   $52
              a543 00c5  ld   $c5
              a544 0050  ld   $50
              a545 004f  ld   $4f
              a546 00d3  ld   $d3
              a547 0053  ld   $53
              a548 0051  ld   $51
              a549 00d2  ld   $d2
              a54a 0052  ld   $52
              a54b 004e  ld   $4e
              a54c 00c4  ld   $c4
              a54d 004c  ld   $4c
              a54e 004f  ld   $4f
              a54f 00c7  ld   $c7
              a550 0045  ld   $45
              a551 0058  ld   $58
              a552 00d0  ld   $d0
              a553 0043  ld   $43
              a554 004f  ld   $4f
              a555 00d3  ld   $d3
              a556 0053  ld   $53
              a557 0049  ld   $49
              a558 00ce  ld   $ce
              a559 0054  ld   $54
              a55a 0041  ld   $41
              a55b 00ce  ld   $ce
              a55c 0041  ld   $41
              a55d 0054  ld   $54
              a55e 00ce  ld   $ce
              a55f 0050  ld   $50
              a560 0045  ld   $45
              a561 0045  ld   $45
              a562 00cb  ld   $cb
              a563 004c  ld   $4c
              a564 0045  ld   $45
              a565 00ce  ld   $ce
              a566 0053  ld   $53
              a567 0054  ld   $54
              a568 0052  ld   $52
              a569 00a4  ld   $a4
              a56a 0056  ld   $56
              a56b 0041  ld   $41
              a56c 00cc  ld   $cc
              a56d 0041  ld   $41
              a56e 0053  ld   $53
              a56f 00c3  ld   $c3
              a570 0043  ld   $43
              a571 0048  ld   $48
              a572 0052  ld   $52
              a573 00a4  ld   $a4
              a574 004c  ld   $4c
              a575 0045  ld   $45
              a576 0046  ld   $46
              a577 0054  ld   $54
              a578 00a4  ld   $a4
              a579 0052  ld   $52
              a57a 0049  ld   $49
              a57b 0047  ld   $47
              a57c 0048  ld   $48
              a57d 0054  ld   $54
              a57e 00a4  ld   $a4
              a57f 004d  ld   $4d
              a580 0049  ld   $49
              a581 0044  ld   $44
              a582 00a4  ld   $a4
              a583 0047  ld   $47
              a584 00cf  ld   $cf
              a585 0000  ld   $00
              a586 004e  ld   $4e
              a587 0045  ld   $45
              a588 0058  ld   $58
              a589 0054  ld   $54
              a58a 0020  ld   $20
              a58b 0057  ld   $57
              a58c 0049  ld   $49
              a58d 0054  ld   $54
              a58e 0048  ld   $48
              a58f 004f  ld   $4f
              a590 0055  ld   $55
              a591 0054  ld   $54
              a592 0020  ld   $20
              a593 0046  ld   $46
              a594 004f  ld   $4f
              a595 00d2  ld   $d2
              a596 0053  ld   $53
              a597 0059  ld   $59
              a598 004e  ld   $4e
              a599 0054  ld   $54
              a59a 0041  ld   $41
              a59b 00d8  ld   $d8
              a59c 0052  ld   $52
              a59d 0045  ld   $45
              a59e 0054  ld   $54
              a59f 0055  ld   $55
              a5a0 0052  ld   $52
              a5a1 004e  ld   $4e
              a5a2 0020  ld   $20
              a5a3 0057  ld   $57
              a5a4 0049  ld   $49
              a5a5 0054  ld   $54
              a5a6 0048  ld   $48
              a5a7 004f  ld   $4f
              a5a8 0055  ld   $55
              a5a9 0054  ld   $54
              a5aa 0020  ld   $20
              a5ab 0047  ld   $47
              a5ac 004f  ld   $4f
              a5ad 0053  ld   $53
              a5ae 0055  ld   $55
              a5af 00c2  ld   $c2
              a5b0 004f  ld   $4f
              a5b1 0055  ld   $55
              a5b2 0054  ld   $54
              a5b3 0020  ld   $20
              a5b4 004f  ld   $4f
              a5b5 0046  ld   $46
              a5b6 0020  ld   $20
              a5b7 0044  ld   $44
              a5b8 0041  ld   $41
              a5b9 0054  ld   $54
              a5ba 00c1  ld   $c1
              a5bb 0049  ld   $49
              a5bc 004c  ld   $4c
              a5bd 004c  ld   $4c
              a5be 0045  ld   $45
              a5bf 0047  ld   $47
              a5c0 0041  ld   $41
              a5c1 004c  ld   $4c
              a5c2 0020  ld   $20
              a5c3 0051  ld   $51
              a5c4 0055  ld   $55
              a5c5 0041  ld   $41
              a5c6 004e  ld   $4e
              a5c7 0054  ld   $54
              a5c8 0049  ld   $49
              a5c9 0054  ld   $54
              a5ca 00d9  ld   $d9
              a5cb 004f  ld   $4f
              a5cc 0056  ld   $56
              a5cd 0045  ld   $45
              a5ce 0052  ld   $52
              a5cf 0046  ld   $46
              a5d0 004c  ld   $4c
              a5d1 004f  ld   $4f
              a5d2 00d7  ld   $d7
              a5d3 004f  ld   $4f
              a5d4 0055  ld   $55
              a5d5 0054  ld   $54
              a5d6 0020  ld   $20
              a5d7 004f  ld   $4f
              a5d8 0046  ld   $46
              a5d9 0020  ld   $20
              a5da 004d  ld   $4d
              a5db 0045  ld   $45
              a5dc 004d  ld   $4d
              a5dd 004f  ld   $4f
              a5de 0052  ld   $52
              a5df 00d9  ld   $d9
              a5e0 0055  ld   $55
              a5e1 004e  ld   $4e
              a5e2 0044  ld   $44
              a5e3 0045  ld   $45
              a5e4 0046  ld   $46
              a5e5 0027  ld   $27
              a5e6 0044  ld   $44
              a5e7 0020  ld   $20
              a5e8 0053  ld   $53
              a5e9 0054  ld   $54
              a5ea 0041  ld   $41
              a5eb 0054  ld   $54
              a5ec 0045  ld   $45
              a5ed 004d  ld   $4d
              a5ee 0045  ld   $45
              a5ef 004e  ld   $4e
              a5f0 00d4  ld   $d4
              a5f1 0042  ld   $42
              a5f2 0041  ld   $41
              a5f3 0044  ld   $44
              a5f4 0020  ld   $20
              a5f5 0053  ld   $53
              a5f6 0055  ld   $55
              a5f7 0042  ld   $42
              a5f8 0053  ld   $53
              a5f9 0043  ld   $43
              a5fa 0052  ld   $52
              a5fb fe00  bra  ac          ;+-----------------------------------+
              a5fc fcfd  bra  $a5fd       ;|                                   |
              a5fd 1418  ld   $18,y       ;| Trampoline for page $a500 lookups |
              a5fe e006  jmp  y,$06       ;|                                   |
              a5ff c218  st   [$18]       ;+-----------------------------------+
              a600 0049  ld   $49
              a601 0050  ld   $50
              a602 00d4  ld   $d4
              a603 0052  ld   $52
              a604 0045  ld   $45
              a605 0044  ld   $44
              a606 0049  ld   $49
              a607 004d  ld   $4d
              a608 0004  ld   $04
              a609 0000  ld   $00
              a60a 0000  ld   $00
              a60b 0027  ld   $27
              a60c 0044  ld   $44
              a60d 0020  ld   $20
              a60e 0041  ld   $41
              a60f 0052  ld   $52
              a610 0052  ld   $52
              a611 0041  ld   $41
              a612 00d9  ld   $d9
              a613 0044  ld   $44
              a614 0049  ld   $49
              a615 0056  ld   $56
              a616 0049  ld   $49
              a617 0053  ld   $53
              a618 0049  ld   $49
              a619 004f  ld   $4f
              a61a 004e  ld   $4e
              a61b 0020  ld   $20
              a61c 0042  ld   $42
              a61d 0059  ld   $59
              a61e 0020  ld   $20
              a61f 005a  ld   $5a
              a620 0045  ld   $45
              a621 0052  ld   $52
              a622 00cf  ld   $cf
              a623 0049  ld   $49
              a624 004c  ld   $4c
              a625 004c  ld   $4c
              a626 0045  ld   $45
              a627 0047  ld   $47
              a628 0041  ld   $41
              a629 004c  ld   $4c
              a62a 0020  ld   $20
              a62b 0044  ld   $44
              a62c 0049  ld   $49
              a62d 0052  ld   $52
              a62e 0045  ld   $45
              a62f 0043  ld   $43
              a630 00d4  ld   $d4
              a631 0054  ld   $54
              a632 0059  ld   $59
              a633 0050  ld   $50
              a634 0045  ld   $45
              a635 0020  ld   $20
              a636 004d  ld   $4d
              a637 0049  ld   $49
              a638 0053  ld   $53
              a639 004d  ld   $4d
              a63a 0041  ld   $41
              a63b 0054  ld   $54
              a63c 0043  ld   $43
              a63d 00c8  ld   $c8
              a63e 0053  ld   $53
              a63f 0054  ld   $54
              a640 0052  ld   $52
              a641 0049  ld   $49
              a642 004e  ld   $4e
              a643 0047  ld   $47
              a644 0020  ld   $20
              a645 0054  ld   $54
              a646 004f  ld   $4f
              a647 004f  ld   $4f
              a648 0020  ld   $20
              a649 004c  ld   $4c
              a64a 004f  ld   $4f
              a64b 004e  ld   $4e
              a64c 00c7  ld   $c7
              a64d 0046  ld   $46
              a64e 004f  ld   $4f
              a64f 0052  ld   $52
              a650 004d  ld   $4d
              a651 0055  ld   $55
              a652 004c  ld   $4c
              a653 0041  ld   $41
              a654 0020  ld   $20
              a655 0054  ld   $54
              a656 004f  ld   $4f
              a657 004f  ld   $4f
              a658 0020  ld   $20
              a659 0043  ld   $43
              a65a 004f  ld   $4f
              a65b 004d  ld   $4d
              a65c 0050  ld   $50
              a65d 004c  ld   $4c
              a65e 0045  ld   $45
              a65f 00d8  ld   $d8
              a660 0043  ld   $43
              a661 0041  ld   $41
              a662 004e  ld   $4e
              a663 0027  ld   $27
              a664 0054  ld   $54
              a665 0020  ld   $20
              a666 0043  ld   $43
              a667 004f  ld   $4f
              a668 004e  ld   $4e
              a669 0054  ld   $54
              a66a 0049  ld   $49
              a66b 004e  ld   $4e
              a66c 0055  ld   $55
              a66d 00c5  ld   $c5
              a66e 0055  ld   $55
              a66f 004e  ld   $4e
              a670 0044  ld   $44
              a671 0045  ld   $45
              a672 0046  ld   $46
              a673 0027  ld   $27
              a674 0044  ld   $44
              a675 0020  ld   $20
              a676 0046  ld   $46
              a677 0055  ld   $55
              a678 004e  ld   $4e
              a679 0043  ld   $43
              a67a 0054  ld   $54
              a67b 0049  ld   $49
              a67c 004f  ld   $4f
              a67d 00ce  ld   $ce
              a67e 0020  ld   $20
              a67f 0000  ld   $00
              a680 002e  ld   $2e
              a681 0038  ld   $38
              a682 004c  ld   $4c
              a683 00cc  ld   $cc
              a684 000f  ld   $0f
              a685 00a0  ld   $a0
              a686 001b  ld   $1b
              a687 0018  ld   $18
              a688 0088  ld   $88
              a689 0069  ld   $69
              a68a 0006  ld   $06
              a68b 0090  ld   $90
              a68c 00fb  ld   $fb
              a68d 0060  ld   $60
              a68e 0020  ld   $20
              a68f 0045  ld   $45
              a690 0052  ld   $52
              a691 0052  ld   $52
              a692 004f  ld   $4f
              a693 0052  ld   $52
              a694 0000  ld   $00
              a695 0020  ld   $20
              a696 0049  ld   $49
              a697 004e  ld   $4e
              a698 0020  ld   $20
              a699 0000  ld   $00
              a69a 000d  ld   $0d
              a69b 000a  ld   $0a
              a69c 0052  ld   $52
              a69d 0045  ld   $45
              a69e 0041  ld   $41
              a69f 0044  ld   $44
              a6a0 0059  ld   $59
              a6a1 002e  ld   $2e
              a6a2 000d  ld   $0d
              a6a3 000a  ld   $0a
              a6a4 0000  ld   $00
              a6a5 000d  ld   $0d
              a6a6 000a  ld   $0a
              a6a7 0042  ld   $42
              a6a8 0052  ld   $52
              a6a9 0045  ld   $45
              a6aa 0041  ld   $41
              a6ab 004b  ld   $4b
              a6ac 0000  ld   $00
              a6ad 00ba  ld   $ba
              a6ae 00e8  ld   $e8
              a6af 00e8  ld   $e8
              a6b0 00e8  ld   $e8
              a6b1 00e8  ld   $e8
              a6b2 00b5  ld   $b5
              a6b3 0001  ld   $01
              a6b4 00c9  ld   $c9
              a6b5 0081  ld   $81
              a6b6 00d0  ld   $d0
              a6b7 001d  ld   $1d
              a6b8 00a5  ld   $a5
              a6b9 007c  ld   $7c
              a6ba 00d0  ld   $d0
              a6bb 0008  ld   $08
              a6bc 00b5  ld   $b5
              a6bd 0002  ld   $02
              a6be 0085  ld   $85
              a6bf 007b  ld   $7b
              a6c0 00b5  ld   $b5
              a6c1 0003  ld   $03
              a6c2 0085  ld   $85
              a6c3 007c  ld   $7c
              a6c4 00d5  ld   $d5
              a6c5 0003  ld   $03
              a6c6 00d0  ld   $d0
              a6c7 0006  ld   $06
              a6c8 00a5  ld   $a5
              a6c9 007b  ld   $7b
              a6ca 00d5  ld   $d5
              a6cb 0002  ld   $02
              a6cc 00f0  ld   $f0
              a6cd 0007  ld   $07
              a6ce 008a  ld   $8a
              a6cf 0018  ld   $18
              a6d0 0069  ld   $69
              a6d1 0012  ld   $12
              a6d2 00aa  ld   $aa
              a6d3 00d0  ld   $d0
              a6d4 00dd  ld   $dd
              a6d5 0060  ld   $60
              a6d6 0020  ld   $20
              a6d7 001b  ld   $1b
              a6d8 0005  ld   $05
              a6d9 0085  ld   $85
              a6da 0063  ld   $63
              a6db 0084  ld   $84
              a6dc 0064  ld   $64
              a6dd 0038  ld   $38
              a6de 00a5  ld   $a5
              a6df 008d  ld   $8d
              a6e0 00e5  ld   $e5
              a6e1 0092  ld   $92
              a6e2 0085  ld   $85
              a6e3 0054  ld   $54
              a6e4 00a8  ld   $a8
              a6e5 00a5  ld   $a5
              a6e6 008e  ld   $8e
              a6e7 00e5  ld   $e5
              a6e8 0093  ld   $93
              a6e9 00aa  ld   $aa
              a6ea 00e8  ld   $e8
              a6eb 0098  ld   $98
              a6ec 00f0  ld   $f0
              a6ed 0023  ld   $23
              a6ee 00a5  ld   $a5
              a6ef 008d  ld   $8d
              a6f0 0038  ld   $38
              a6f1 00e5  ld   $e5
              a6f2 0054  ld   $54
              a6f3 0085  ld   $85
              a6f4 008d  ld   $8d
              a6f5 00b0  ld   $b0
              a6f6 0003  ld   $03
              a6f7 00c6  ld   $c6
              a6f8 008e  ld   $8e
              a6f9 0038  ld   $38
              a6fa 00a5  ld   $a5
              a6fb fe00  bra  ac          ;+-----------------------------------+
              a6fc fcfd  bra  $a6fd       ;|                                   |
              a6fd 1418  ld   $18,y       ;| Trampoline for page $a600 lookups |
              a6fe e006  jmp  y,$06       ;|                                   |
              a6ff c218  st   [$18]       ;+-----------------------------------+
              a700 008b  ld   $8b
              a701 00e5  ld   $e5
              a702 0054  ld   $54
              a703 0085  ld   $85
              a704 008b  ld   $8b
              a705 00b0  ld   $b0
              a706 0008  ld   $08
              a707 00c6  ld   $c6
              a708 008c  ld   $8c
              a709 0090  ld   $90
              a70a 0004  ld   $04
              a70b 00b1  ld   $b1
              a70c 008d  ld   $8d
              a70d 0091  ld   $91
              a70e 008b  ld   $8b
              a70f 0088  ld   $88
              a710 0005  ld   $05
              a711 0000  ld   $00
              a712 0000  ld   $00
              a713 00d0  ld   $d0
              a714 00f9  ld   $f9
              a715 00b1  ld   $b1
              a716 008d  ld   $8d
              a717 0091  ld   $91
              a718 008b  ld   $8b
              a719 00c6  ld   $c6
              a71a 008e  ld   $8e
              a71b 00c6  ld   $c6
              a71c 008c  ld   $8c
              a71d 00ca  ld   $ca
              a71e 00d0  ld   $d0
              a71f 00f2  ld   $f2
              a720 0060  ld   $60
              a721 000a  ld   $0a
              a722 0069  ld   $69
              a723 00b2  ld   $b2
              a724 00b0  ld   $b0
              a725 0035  ld   $35
              a726 0085  ld   $85
              a727 0054  ld   $54
              a728 00ba  ld   $ba
              a729 00e4  ld   $e4
              a72a 0054  ld   $54
              a72b 0090  ld   $90
              a72c 002e  ld   $2e
              a72d 0060  ld   $60
              a72e 00c4  ld   $c4
              a72f 0066  ld   $66
              a730 0090  ld   $90
              a731 0028  ld   $28
              a732 00d0  ld   $d0
              a733 0004  ld   $04
              a734 00c5  ld   $c5
              a735 0065  ld   $65
              a736 0090  ld   $90
              a737 0022  ld   $22
              a738 0048  ld   $48
              a739 00a2  ld   $a2
              a73a 0009  ld   $09
              a73b 0098  ld   $98
              a73c 0048  ld   $48
              a73d 00b5  ld   $b5
              a73e 008a  ld   $8a
              a73f 00ca  ld   $ca
              a740 0010  ld   $10
              a741 00fa  ld   $fa
              a742 0020  ld   $20
              a743 0062  ld   $62
              a744 0015  ld   $15
              a745 00a2  ld   $a2
              a746 00f7  ld   $f7
              a747 0068  ld   $68
              a748 0095  ld   $95
              a749 0094  ld   $94
              a74a 00e8  ld   $e8
              a74b 0030  ld   $30
              a74c 00fa  ld   $fa
              a74d 0068  ld   $68
              a74e 00a8  ld   $a8
              a74f 0068  ld   $68
              a750 00c4  ld   $c4
              a751 0066  ld   $66
              a752 0090  ld   $90
              a753 0006  ld   $06
              a754 00d0  ld   $d0
              a755 0005  ld   $05
              a756 00c5  ld   $c5
              a757 0065  ld   $65
              a758 00b0  ld   $b0
              a759 0001  ld   $01
              a75a 0060  ld   $60
              a75b 00a2  ld   $a2
              a75c 004d  ld   $4d
              a75d 0046  ld   $46
              a75e 0045  ld   $45
              a75f 0020  ld   $20
              a760 00ac  ld   $ac
              a761 000b  ld   $0b
              a762 0020  ld   $20
              a763 000f  ld   $0f
              a764 000c  ld   $0c
              a765 00bd  ld   $bd
              a766 0083  ld   $83
              a767 0003  ld   $03
              a768 0048  ld   $48
              a769 0029  ld   $29
              a76a 007f  ld   $7f
              a76b 0020  ld   $20
              a76c 0011  ld   $11
              a76d 000c  ld   $0c
              a76e 00e8  ld   $e8
              a76f 0068  ld   $68
              a770 0010  ld   $10
              a771 00f3  ld   $f3
              a772 0020  ld   $20
              a773 007a  ld   $7a
              a774 0007  ld   $07
              a775 00a9  ld   $a9
              a776 0083  ld   $83
              a777 00a0  ld   $a0
              a778 0004  ld   $04
              a779 0020  ld   $20
              a77a 00ef  ld   $ef
              a77b 000b  ld   $0b
              a77c 00a4  ld   $a4
              a77d 006c  ld   $6c
              a77e 00c8  ld   $c8
              a77f 00f0  ld   $f0
              a780 0003  ld   $03
              a781 0020  ld   $20
              a782 003a  ld   $3a
              a783 001e  ld   $1e
              a784 0046  ld   $46
              a785 0045  ld   $45
              a786 00a9  ld   $a9
              a787 008f  ld   $8f
              a788 00a0  ld   $a0
              a789 0004  ld   $04
              a78a 0020  ld   $20
              a78b 00ef  ld   $ef
              a78c 000b  ld   $0b
              a78d 0020  ld   $20
              a78e 0057  ld   $57
              a78f 0006  ld   $06
              a790 0086  ld   $86
              a791 00a6  ld   $a6
              a792 0084  ld   $84
              a793 00a7  ld   $a7
              a794 0020  ld   $20
              a795 006b  ld   $6b
              a796 0022  ld   $22
              a797 00aa  ld   $aa
              a798 00f0  ld   $f0
              a799 00f3  ld   $f3
              a79a 00a2  ld   $a2
              a79b 00ff  ld   $ff
              a79c 0086  ld   $86
              a79d 006c  ld   $6c
              a79e 0090  ld   $90
              a79f 0006  ld   $06
              a7a0 0020  ld   $20
              a7a1 007e  ld   $7e
              a7a2 0006  ld   $06
              a7a3 004c  ld   $4c
              a7a4 00de  ld   $de
              a7a5 0008  ld   $08
              a7a6 0020  ld   $20
              a7a7 005a  ld   $5a
              a7a8 000a  ld   $0a
              a7a9 0020  ld   $20
              a7aa 007e  ld   $7e
              a7ab 0006  ld   $06
              a7ac 0084  ld   $84
              a7ad 003d  ld   $3d
              a7ae 0020  ld   $20
              a7af 0013  ld   $13
              a7b0 0007  ld   $07
              a7b1 0090  ld   $90
              a7b2 0044  ld   $44
              a7b3 00a0  ld   $a0
              a7b4 0001  ld   $01
              a7b5 00b1  ld   $b1
              a7b6 0092  ld   $92
              a7b7 0085  ld   $85
              a7b8 0055  ld   $55
              a7b9 00a5  ld   $a5
              a7ba 005f  ld   $5f
              a7bb 0085  ld   $85
              a7bc 0054  ld   $54
              a7bd 00a5  ld   $a5
              a7be 0093  ld   $93
              a7bf 0085  ld   $85
              a7c0 0057  ld   $57
              a7c1 00a5  ld   $a5
              a7c2 0092  ld   $92
              a7c3 0088  ld   $88
              a7c4 00f1  ld   $f1
              a7c5 0092  ld   $92
              a7c6 0018  ld   $18
              a7c7 0065  ld   $65
              a7c8 005f  ld   $5f
              a7c9 0085  ld   $85
              a7ca 005f  ld   $5f
              a7cb 0085  ld   $85
              a7cc 0056  ld   $56
              a7cd 00a5  ld   $a5
              a7ce 0060  ld   $60
              a7cf 0069  ld   $69
              a7d0 00ff  ld   $ff
              a7d1 0085  ld   $85
              a7d2 0060  ld   $60
              a7d3 00e5  ld   $e5
              a7d4 0093  ld   $93
              a7d5 00aa  ld   $aa
              a7d6 0038  ld   $38
              a7d7 00a5  ld   $a5
              a7d8 0092  ld   $92
              a7d9 00e5  ld   $e5
              a7da 005f  ld   $5f
              a7db 00a8  ld   $a8
              a7dc 00b0  ld   $b0
              a7dd 0003  ld   $03
              a7de 00e8  ld   $e8
              a7df 00c6  ld   $c6
              a7e0 0057  ld   $57
              a7e1 0018  ld   $18
              a7e2 0065  ld   $65
              a7e3 0054  ld   $54
              a7e4 0090  ld   $90
              a7e5 0003  ld   $03
              a7e6 00c6  ld   $c6
              a7e7 0055  ld   $55
              a7e8 0018  ld   $18
              a7e9 00b1  ld   $b1
              a7ea 0054  ld   $54
              a7eb 0091  ld   $91
              a7ec 0056  ld   $56
              a7ed 00c8  ld   $c8
              a7ee 00d0  ld   $d0
              a7ef 00f9  ld   $f9
              a7f0 00e6  ld   $e6
              a7f1 0055  ld   $55
              a7f2 00e6  ld   $e6
              a7f3 0057  ld   $57
              a7f4 00ca  ld   $ca
              a7f5 00d0  ld   $d0
              a7f6 00f2  ld   $f2
              a7f7 0020  ld   $20
              a7f8 0059  ld   $59
              a7f9 0007  ld   $07
              a7fa 0020  ld   $20
              a7fb fe00  bra  ac          ;+-----------------------------------+
              a7fc fcfd  bra  $a7fd       ;|                                   |
              a7fd 1418  ld   $18,y       ;| Trampoline for page $a700 lookups |
              a7fe e006  jmp  y,$06       ;|                                   |
              a7ff c218  st   [$18]       ;+-----------------------------------+
              a800 002a  ld   $2a
              a801 0006  ld   $06
              a802 00ad  ld   $ad
              a803 0005  ld   $05
              a804 0024  ld   $24
              a805 00f0  ld   $f0
              a806 008b  ld   $8b
              a807 0018  ld   $18
              a808 00a5  ld   $a5
              a809 005f  ld   $5f
              a80a 0085  ld   $85
              a80b 008d  ld   $8d
              a80c 0065  ld   $65
              a80d 003d  ld   $3d
              a80e 0085  ld   $85
              a80f 008b  ld   $8b
              a810 00a4  ld   $a4
              a811 0060  ld   $60
              a812 0084  ld   $84
              a813 008e  ld   $8e
              a814 0090  ld   $90
              a815 0001  ld   $01
              a816 00c8  ld   $c8
              a817 0084  ld   $84
              a818 0006  ld   $06
              a819 0000  ld   $00
              a81a 0000  ld   $00
              a81b 008c  ld   $8c
              a81c 0020  ld   $20
              a81d 00cb  ld   $cb
              a81e 0004  ld   $04
              a81f 00a5  ld   $a5
              a820 0046  ld   $46
              a821 00a4  ld   $a4
              a822 0047  ld   $47
              a823 008d  ld   $8d
              a824 0003  ld   $03
              a825 0024  ld   $24
              a826 008c  ld   $8c
              a827 0004  ld   $04
              a828 0024  ld   $24
              a829 00a5  ld   $a5
              a82a 0063  ld   $63
              a82b 00a4  ld   $a4
              a82c 0064  ld   $64
              a82d 0085  ld   $85
              a82e 005f  ld   $5f
              a82f 0084  ld   $84
              a830 0060  ld   $60
              a831 00a4  ld   $a4
              a832 003d  ld   $3d
              a833 0088  ld   $88
              a834 00b9  ld   $b9
              a835 0001  ld   $01
              a836 0024  ld   $24
              a837 0091  ld   $91
              a838 0092  ld   $92
              a839 0088  ld   $88
              a83a 0010  ld   $10
              a83b 00f8  ld   $f8
              a83c 0020  ld   $20
              a83d 0059  ld   $59
              a83e 0007  ld   $07
              a83f 0020  ld   $20
              a840 002a  ld   $2a
              a841 0006  ld   $06
              a842 004c  ld   $4c
              a843 007a  ld   $7a
              a844 0005  ld   $05
              a845 00a5  ld   $a5
              a846 005d  ld   $5d
              a847 00a4  ld   $a4
              a848 005e  ld   $5e
              a849 0085  ld   $85
              a84a 0054  ld   $54
              a84b 0084  ld   $84
              a84c 0055  ld   $55
              a84d 0018  ld   $18
              a84e 00a0  ld   $a0
              a84f 0001  ld   $01
              a850 00b1  ld   $b1
              a851 0054  ld   $54
              a852 00f0  ld   $f0
              a853 001d  ld   $1d
              a854 00a0  ld   $a0
              a855 0004  ld   $04
              a856 00c8  ld   $c8
              a857 00b1  ld   $b1
              a858 0054  ld   $54
              a859 00d0  ld   $d0
              a85a 00fb  ld   $fb
              a85b 00c8  ld   $c8
              a85c 0098  ld   $98
              a85d 0065  ld   $65
              a85e 0054  ld   $54
              a85f 00aa  ld   $aa
              a860 00a0  ld   $a0
              a861 0000  ld   $00
              a862 0091  ld   $91
              a863 0054  ld   $54
              a864 00a5  ld   $a5
              a865 0055  ld   $55
              a866 0069  ld   $69
              a867 0000  ld   $00
              a868 00c8  ld   $c8
              a869 0091  ld   $91
              a86a 0054  ld   $54
              a86b 0086  ld   $86
              a86c 0054  ld   $54
              a86d 0085  ld   $85
              a86e 0055  ld   $55
              a86f 0090  ld   $90
              a870 00dd  ld   $dd
              a871 0060  ld   $60
              a872 00a2  ld   $a2
              a873 0000  ld   $00
              a874 0020  ld   $20
              a875 006e  ld   $6e
              a876 0006  ld   $06
              a877 00c9  ld   $c9
              a878 000d  ld   $0d
              a879 00f0  ld   $f0
              a87a 000b  ld   $0b
              a87b 0020  ld   $20
              a87c 0000  ld   $00
              a87d 002f  ld   $2f
              a87e 00f0  ld   $f0
              a87f 00f4  ld   $f4
              a880 009d  ld   $9d
              a881 0005  ld   $05
              a882 0024  ld   $24
              a883 00e8  ld   $e8
              a884 00d0  ld   $d0
              a885 00ee  ld   $ee
              a886 004c  ld   $4c
              a887 00a3  ld   $a3
              a888 000b  ld   $0b
              a889 0020  ld   $20
              a88a 0000  ld   $00
              a88b 002c  ld   $2c
              a88c 00c9  ld   $c9
              a88d 000f  ld   $0f
              a88e 00d0  ld   $d0
              a88f 0008  ld   $08
              a890 0048  ld   $48
              a891 00a5  ld   $a5
              a892 0045  ld   $45
              a893 0049  ld   $49
              a894 00ff  ld   $ff
              a895 0085  ld   $85
              a896 0045  ld   $45
              a897 0068  ld   $68
              a898 0060  ld   $60
              a899 00a6  ld   $a6
              a89a 00a6  ld   $a6
              a89b 00a0  ld   $a0
              a89c 0004  ld   $04
              a89d 0084  ld   $84
              a89e 0041  ld   $41
              a89f 00bd  ld   $bd
              a8a0 0000  ld   $00
              a8a1 0024  ld   $24
              a8a2 0010  ld   $10
              a8a3 0007  ld   $07
              a8a4 00c9  ld   $c9
              a8a5 00ff  ld   $ff
              a8a6 00f0  ld   $f0
              a8a7 003e  ld   $3e
              a8a8 00e8  ld   $e8
              a8a9 00d0  ld   $d0
              a8aa 00f4  ld   $f4
              a8ab 00c9  ld   $c9
              a8ac 0020  ld   $20
              a8ad 00f0  ld   $f0
              a8ae 0037  ld   $37
              a8af 0085  ld   $85
              a8b0 003c  ld   $3c
              a8b1 00c9  ld   $c9
              a8b2 0022  ld   $22
              a8b3 00f0  ld   $f0
              a8b4 0056  ld   $56
              a8b5 0024  ld   $24
              a8b6 0041  ld   $41
              a8b7 0070  ld   $70
              a8b8 002d  ld   $2d
              a8b9 00c9  ld   $c9
              a8ba 003f  ld   $3f
              a8bb 00d0  ld   $d0
              a8bc 0004  ld   $04
              a8bd 00a9  ld   $a9
              a8be 0097  ld   $97
              a8bf 00d0  ld   $d0
              a8c0 0025  ld   $25
              a8c1 00c9  ld   $c9
              a8c2 0030  ld   $30
              a8c3 0090  ld   $90
              a8c4 0004  ld   $04
              a8c5 00c9  ld   $c9
              a8c6 003c  ld   $3c
              a8c7 0090  ld   $90
              a8c8 001d  ld   $1d
              a8c9 0084  ld   $84
              a8ca 00a4  ld   $a4
              a8cb 00a0  ld   $a0
              a8cc 0000  ld   $00
              a8cd 0084  ld   $84
              a8ce 003d  ld   $3d
              a8cf 0088  ld   $88
              a8d0 0086  ld   $86
              a8d1 00a6  ld   $a6
              a8d2 00ca  ld   $ca
              a8d3 00c8  ld   $c8
              a8d4 00e8  ld   $e8
              a8d5 00bd  ld   $bd
              a8d6 0000  ld   $00
              a8d7 0024  ld   $24
              a8d8 0038  ld   $38
              a8d9 00f9  ld   $f9
              a8da 009e  ld   $9e
              a8db 0002  ld   $02
              a8dc 00f0  ld   $f0
              a8dd 00f5  ld   $f5
              a8de 00c9  ld   $c9
              a8df 0080  ld   $80
              a8e0 00d0  ld   $d0
              a8e1 0030  ld   $30
              a8e2 0005  ld   $05
              a8e3 003d  ld   $3d
              a8e4 00a4  ld   $a4
              a8e5 00a4  ld   $a4
              a8e6 00e8  ld   $e8
              a8e7 00c8  ld   $c8
              a8e8 0099  ld   $99
              a8e9 0000  ld   $00
              a8ea 0024  ld   $24
              a8eb 00b9  ld   $b9
              a8ec 0000  ld   $00
              a8ed 0024  ld   $24
              a8ee 00f0  ld   $f0
              a8ef 0036  ld   $36
              a8f0 0038  ld   $38
              a8f1 00e9  ld   $e9
              a8f2 003a  ld   $3a
              a8f3 00f0  ld   $f0
              a8f4 0004  ld   $04
              a8f5 00c9  ld   $c9
              a8f6 0049  ld   $49
              a8f7 00d0  ld   $d0
              a8f8 0002  ld   $02
              a8f9 0085  ld   $85
              a8fa 0041  ld   $41
              a8fb fe00  bra  ac          ;+-----------------------------------+
              a8fc fcfd  bra  $a8fd       ;|                                   |
              a8fd 1418  ld   $18,y       ;| Trampoline for page $a800 lookups |
              a8fe e006  jmp  y,$06       ;|                                   |
              a8ff c218  st   [$18]       ;+-----------------------------------+
              a900 0038  ld   $38
              a901 00e9  ld   $e9
              a902 0054  ld   $54
              a903 00d0  ld   $d0
              a904 009f  ld   $9f
              a905 0085  ld   $85
              a906 003c  ld   $3c
              a907 00bd  ld   $bd
              a908 0000  ld   $00
              a909 0024  ld   $24
              a90a 00f0  ld   $f0
              a90b 00df  ld   $df
              a90c 00c5  ld   $c5
              a90d 003c  ld   $3c
              a90e 00f0  ld   $f0
              a90f 00db  ld   $db
              a910 00c8  ld   $c8
              a911 0099  ld   $99
              a912 0000  ld   $00
              a913 0024  ld   $24
              a914 00e8  ld   $e8
              a915 00d0  ld   $d0
              a916 00f0  ld   $f0
              a917 00a6  ld   $a6
              a918 00a6  ld   $a6
              a919 00e6  ld   $e6
              a91a 003d  ld   $3d
              a91b 00c8  ld   $c8
              a91c 00b9  ld   $b9
              a91d 009d  ld   $9d
              a91e 0002  ld   $02
              a91f 0010  ld   $10
              a920 0007  ld   $07
              a921 0000  ld   $00
              a922 0000  ld   $00
              a923 00fa  ld   $fa
              a924 00b9  ld   $b9
              a925 009e  ld   $9e
              a926 0002  ld   $02
              a927 00d0  ld   $d0
              a928 00b4  ld   $b4
              a929 00bd  ld   $bd
              a92a 0000  ld   $00
              a92b 0024  ld   $24
              a92c 0010  ld   $10
              a92d 00be  ld   $be
              a92e 0099  ld   $99
              a92f 0002  ld   $02
              a930 0024  ld   $24
              a931 00a9  ld   $a9
              a932 0004  ld   $04
              a933 0085  ld   $85
              a934 00a6  ld   $a6
              a935 0060  ld   $60
              a936 00a5  ld   $a5
              a937 005d  ld   $5d
              a938 00a6  ld   $a6
              a939 005e  ld   $5e
              a93a 00a0  ld   $a0
              a93b 0001  ld   $01
              a93c 0085  ld   $85
              a93d 0092  ld   $92
              a93e 0086  ld   $86
              a93f 0093  ld   $93
              a940 00b1  ld   $b1
              a941 0092  ld   $92
              a942 00f0  ld   $f0
              a943 001f  ld   $1f
              a944 00c8  ld   $c8
              a945 00c8  ld   $c8
              a946 00a5  ld   $a5
              a947 0047  ld   $47
              a948 00d1  ld   $d1
              a949 0092  ld   $92
              a94a 0090  ld   $90
              a94b 0018  ld   $18
              a94c 00f0  ld   $f0
              a94d 0003  ld   $03
              a94e 0088  ld   $88
              a94f 00d0  ld   $d0
              a950 0009  ld   $09
              a951 00a5  ld   $a5
              a952 0046  ld   $46
              a953 0088  ld   $88
              a954 00d1  ld   $d1
              a955 0092  ld   $92
              a956 0090  ld   $90
              a957 000c  ld   $0c
              a958 00f0  ld   $f0
              a959 000a  ld   $0a
              a95a 0088  ld   $88
              a95b 00b1  ld   $b1
              a95c 0092  ld   $92
              a95d 00aa  ld   $aa
              a95e 0088  ld   $88
              a95f 00b1  ld   $b1
              a960 0092  ld   $92
              a961 00b0  ld   $b0
              a962 00d7  ld   $d7
              a963 0018  ld   $18
              a964 0060  ld   $60
              a965 00d0  ld   $d0
              a966 00fd  ld   $fd
              a967 00a9  ld   $a9
              a968 0000  ld   $00
              a969 00a8  ld   $a8
              a96a 0091  ld   $91
              a96b 005d  ld   $5d
              a96c 00c8  ld   $c8
              a96d 0091  ld   $91
              a96e 005d  ld   $5d
              a96f 00a5  ld   $a5
              a970 005d  ld   $5d
              a971 0018  ld   $18
              a972 0069  ld   $69
              a973 0002  ld   $02
              a974 0085  ld   $85
              a975 005f  ld   $5f
              a976 00a5  ld   $a5
              a977 005e  ld   $5e
              a978 0069  ld   $69
              a979 0000  ld   $00
              a97a 0085  ld   $85
              a97b 0060  ld   $60
              a97c 0020  ld   $20
              a97d 008e  ld   $8e
              a97e 0007  ld   $07
              a97f 00a9  ld   $a9
              a980 0000  ld   $00
              a981 00d0  ld   $d0
              a982 002d  ld   $2d
              a983 00a5  ld   $a5
              a984 0069  ld   $69
              a985 00a4  ld   $a4
              a986 006a  ld   $6a
              a987 0085  ld   $85
              a988 0065  ld   $65
              a989 0084  ld   $84
              a98a 0066  ld   $66
              a98b 0020  ld   $20
              a98c 0000  ld   $00
              a98d 002e  ld   $2e
              a98e 00a5  ld   $a5
              a98f 005f  ld   $5f
              a990 00a4  ld   $a4
              a991 0060  ld   $60
              a992 0085  ld   $85
              a993 0061  ld   $61
              a994 0084  ld   $84
              a995 0062  ld   $62
              a996 0085  ld   $85
              a997 0063  ld   $63
              a998 0084  ld   $84
              a999 0064  ld   $64
              a99a 0020  ld   $20
              a99b 0017  ld   $17
              a99c 0009  ld   $09
              a99d 00a2  ld   $a2
              a99e 004b  ld   $4b
              a99f 0086  ld   $86
              a9a0 0048  ld   $48
              a9a1 0068  ld   $68
              a9a2 00a8  ld   $a8
              a9a3 0068  ld   $68
              a9a4 00a2  ld   $a2
              a9a5 00ff  ld   $ff
              a9a6 009a  ld   $9a
              a9a7 0048  ld   $48
              a9a8 0098  ld   $98
              a9a9 0048  ld   $48
              a9aa 00a9  ld   $a9
              a9ab 0000  ld   $00
              a9ac 0085  ld   $85
              a9ad 0070  ld   $70
              a9ae 0085  ld   $85
              a9af 0042  ld   $42
              a9b0 0060  ld   $60
              a9b1 0018  ld   $18
              a9b2 00a5  ld   $a5
              a9b3 005d  ld   $5d
              a9b4 0069  ld   $69
              a9b5 00ff  ld   $ff
              a9b6 0085  ld   $85
              a9b7 00a6  ld   $a6
              a9b8 00a5  ld   $a5
              a9b9 005e  ld   $5e
              a9ba 0069  ld   $69
              a9bb 00ff  ld   $ff
              a9bc 0085  ld   $85
              a9bd 00a7  ld   $a7
              a9be 0060  ld   $60
              a9bf 0090  ld   $90
              a9c0 0006  ld   $06
              a9c1 00f0  ld   $f0
              a9c2 0004  ld   $04
              a9c3 00c9  ld   $c9
              a9c4 00a5  ld   $a5
              a9c5 00d0  ld   $d0
              a9c6 00e9  ld   $e9
              a9c7 0020  ld   $20
              a9c8 005a  ld   $5a
              a9c9 000a  ld   $0a
              a9ca 0020  ld   $20
              a9cb 0013  ld   $13
              a9cc 0007  ld   $07
              a9cd 0020  ld   $20
              a9ce 0071  ld   $71
              a9cf 0022  ld   $22
              a9d0 00f0  ld   $f0
              a9d1 000c  ld   $0c
              a9d2 00c9  ld   $c9
              a9d3 00a5  ld   $a5
              a9d4 00d0  ld   $d0
              a9d5 008e  ld   $8e
              a9d6 0020  ld   $20
              a9d7 006b  ld   $6b
              a9d8 0022  ld   $22
              a9d9 0020  ld   $20
              a9da 005a  ld   $5a
              a9db 000a  ld   $0a
              a9dc 00d0  ld   $d0
              a9dd 0086  ld   $86
              a9de 0068  ld   $68
              a9df 0068  ld   $68
              a9e0 00a5  ld   $a5
              a9e1 0046  ld   $46
              a9e2 0005  ld   $05
              a9e3 0047  ld   $47
              a9e4 00d0  ld   $d0
              a9e5 0006  ld   $06
              a9e6 00a9  ld   $a9
              a9e7 00ff  ld   $ff
              a9e8 0085  ld   $85
              a9e9 0046  ld   $46
              a9ea 0085  ld   $85
              a9eb 0047  ld   $47
              a9ec 00a0  ld   $a0
              a9ed 0001  ld   $01
              a9ee 0084  ld   $84
              a9ef 0041  ld   $41
              a9f0 00b1  ld   $b1
              a9f1 0092  ld   $92
              a9f2 00f0  ld   $f0
              a9f3 0043  ld   $43
              a9f4 0020  ld   $20
              a9f5 0000  ld   $00
              a9f6 002d  ld   $2d
              a9f7 0020  ld   $20
              a9f8 00ac  ld   $ac
              a9f9 000b  ld   $0b
              a9fa 00c8  ld   $c8
              a9fb fe00  bra  ac          ;+-----------------------------------+
              a9fc fcfd  bra  $a9fd       ;|                                   |
              a9fd 1418  ld   $18,y       ;| Trampoline for page $a900 lookups |
              a9fe e006  jmp  y,$06       ;|                                   |
              a9ff c218  st   [$18]       ;+-----------------------------------+
              aa00 00b1  ld   $b1
              aa01 0092  ld   $92
              aa02 00aa  ld   $aa
              aa03 00c8  ld   $c8
              aa04 00b1  ld   $b1
              aa05 0092  ld   $92
              aa06 00c5  ld   $c5
              aa07 0047  ld   $47
              aa08 00d0  ld   $d0
              aa09 0004  ld   $04
              aa0a 00e4  ld   $e4
              aa0b 0046  ld   $46
              aa0c 00f0  ld   $f0
              aa0d 0002  ld   $02
              aa0e 00b0  ld   $b0
              aa0f 002c  ld   $2c
              aa10 0084  ld   $84
              aa11 007b  ld   $7b
              aa12 0020  ld   $20
              aa13 0045  ld   $45
              aa14 001e  ld   $1e
              aa15 00a9  ld   $a9
              aa16 0020  ld   $20
              aa17 00a4  ld   $a4
              aa18 007b  ld   $7b
              aa19 0029  ld   $29
              aa1a 007f  ld   $7f
              aa1b 0020  ld   $20
              aa1c 0011  ld   $11
              aa1d 000c  ld   $0c
              aa1e 00c9  ld   $c9
              aa1f 0022  ld   $22
              aa20 00d0  ld   $d0
              aa21 0006  ld   $06
              aa22 00a5  ld   $a5
              aa23 0041  ld   $41
              aa24 0049  ld   $49
              aa25 00ff  ld   $ff
              aa26 0085  ld   $85
              aa27 0041  ld   $41
              aa28 0008  ld   $08
              aa29 0000  ld   $00
              aa2a 0000  ld   $00
              aa2b 00c8  ld   $c8
              aa2c 00f0  ld   $f0
              aa2d 0011  ld   $11
              aa2e 00b1  ld   $b1
              aa2f 0092  ld   $92
              aa30 00d0  ld   $d0
              aa31 0010  ld   $10
              aa32 00a8  ld   $a8
              aa33 00b1  ld   $b1
              aa34 0092  ld   $92
              aa35 00aa  ld   $aa
              aa36 00c8  ld   $c8
              aa37 00b1  ld   $b1
              aa38 0092  ld   $92
              aa39 0086  ld   $86
              aa3a 0092  ld   $92
              aa3b 0085  ld   $85
              aa3c 0093  ld   $93
              aa3d 00d0  ld   $d0
              aa3e 00b5  ld   $b5
              aa3f 004c  ld   $4c
              aa40 0071  ld   $71
              aa41 0005  ld   $05
              aa42 0010  ld   $10
              aa43 00da  ld   $da
              aa44 00c9  ld   $c9
              aa45 00ff  ld   $ff
              aa46 00f0  ld   $f0
              aa47 00d6  ld   $d6
              aa48 0024  ld   $24
              aa49 0041  ld   $41
              aa4a 0030  ld   $30
              aa4b 00d2  ld   $d2
              aa4c 0038  ld   $38
              aa4d 00e9  ld   $e9
              aa4e 007f  ld   $7f
              aa4f 00aa  ld   $aa
              aa50 0084  ld   $84
              aa51 007b  ld   $7b
              aa52 00a0  ld   $a0
              aa53 00ff  ld   $ff
              aa54 00ca  ld   $ca
              aa55 00f0  ld   $f0
              aa56 0008  ld   $08
              aa57 00c8  ld   $c8
              aa58 00b9  ld   $b9
              aa59 009e  ld   $9e
              aa5a 0002  ld   $02
              aa5b 0010  ld   $10
              aa5c 00fa  ld   $fa
              aa5d 0030  ld   $30
              aa5e 00f5  ld   $f5
              aa5f 00c8  ld   $c8
              aa60 00b9  ld   $b9
              aa61 009e  ld   $9e
              aa62 0002  ld   $02
              aa63 0030  ld   $30
              aa64 00b5  ld   $b5
              aa65 0020  ld   $20
              aa66 0011  ld   $11
              aa67 000c  ld   $0c
              aa68 00d0  ld   $d0
              aa69 00f5  ld   $f5
              aa6a 00a9  ld   $a9
              aa6b 0080  ld   $80
              aa6c 0085  ld   $85
              aa6d 0042  ld   $42
              aa6e 0020  ld   $20
              aa6f 0094  ld   $94
              aa70 000a  ld   $0a
              aa71 0020  ld   $20
              aa72 00a2  ld   $a2
              aa73 0004  ld   $04
              aa74 00d0  ld   $d0
              aa75 0005  ld   $05
              aa76 008a  ld   $8a
              aa77 0069  ld   $69
              aa78 000f  ld   $0f
              aa79 00aa  ld   $aa
              aa7a 009a  ld   $9a
              aa7b 0068  ld   $68
              aa7c 0068  ld   $68
              aa7d 00a9  ld   $a9
              aa7e 0009  ld   $09
              aa7f 0020  ld   $20
              aa80 000e  ld   $0e
              aa81 0005  ld   $05
              aa82 0020  ld   $20
              aa83 00f5  ld   $f5
              aa84 0009  ld   $09
              aa85 0018  ld   $18
              aa86 0098  ld   $98
              aa87 0065  ld   $65
              aa88 00a6  ld   $a6
              aa89 0048  ld   $48
              aa8a 00a5  ld   $a5
              aa8b 00a7  ld   $a7
              aa8c 0069  ld   $69
              aa8d 0000  ld   $00
              aa8e 0048  ld   $48
              aa8f 00a5  ld   $a5
              aa90 006c  ld   $6c
              aa91 0048  ld   $48
              aa92 00a5  ld   $a5
              aa93 006b  ld   $6b
              aa94 0048  ld   $48
              aa95 00a9  ld   $a9
              aa96 009e  ld   $9e
              aa97 0020  ld   $20
              aa98 0065  ld   $65
              aa99 000f  ld   $0f
              aa9a 0020  ld   $20
              aa9b 00f9  ld   $f9
              aa9c 000d  ld   $0d
              aa9d 0020  ld   $20
              aa9e 00f6  ld   $f6
              aa9f 000d  ld   $0d
              aaa0 00a5  ld   $a5
              aaa1 0099  ld   $99
              aaa2 0009  ld   $09
              aaa3 007f  ld   $7f
              aaa4 0025  ld   $25
              aaa5 0095  ld   $95
              aaa6 0085  ld   $85
              aaa7 0095  ld   $95
              aaa8 00a9  ld   $a9
              aaa9 0088  ld   $88
              aaaa 00a0  ld   $a0
              aaab 0008  ld   $08
              aaac 0085  ld   $85
              aaad 0054  ld   $54
              aaae 0084  ld   $84
              aaaf 0055  ld   $55
              aab0 004c  ld   $4c
              aab1 00af  ld   $af
              aab2 000e  ld   $0e
              aab3 00a9  ld   $a9
              aab4 0034  ld   $34
              aab5 00a0  ld   $a0
              aab6 001a  ld   $1a
              aab7 0020  ld   $20
              aab8 001a  ld   $1a
              aab9 001c  ld   $1c
              aaba 0020  ld   $20
              aabb 0071  ld   $71
              aabc 0022  ld   $22
              aabd 00c9  ld   $c9
              aabe 00a3  ld   $a3
              aabf 00d0  ld   $d0
              aac0 0006  ld   $06
              aac1 0020  ld   $20
              aac2 006b  ld   $6b
              aac3 0022  ld   $22
              aac4 0020  ld   $20
              aac5 00f6  ld   $f6
              aac6 000d  ld   $0d
              aac7 0020  ld   $20
              aac8 00a3  ld   $a3
              aac9 001c  ld   $1c
              aaca 0020  ld   $20
              aacb 00a4  ld   $a4
              aacc 000e  ld   $0e
              aacd 00a5  ld   $a5
              aace 007c  ld   $7c
              aacf 0048  ld   $48
              aad0 00a5  ld   $a5
              aad1 007b  ld   $7b
              aad2 0048  ld   $48
              aad3 00a9  ld   $a9
              aad4 0081  ld   $81
              aad5 0048  ld   $48
              aad6 0020  ld   $20
              aad7 0000  ld   $00
              aad8 002d  ld   $2d
              aad9 00a5  ld   $a5
              aada 00a6  ld   $a6
              aadb 00a4  ld   $a4
              aadc 00a7  ld   $a7
              aadd 00c0  ld   $c0
              aade 0024  ld   $24
              aadf 00ea  ld   $ea
              aae0 00f0  ld   $f0
              aae1 0004  ld   $04
              aae2 0085  ld   $85
              aae3 006f  ld   $6f
              aae4 0084  ld   $84
              aae5 0070  ld   $70
              aae6 00a0  ld   $a0
              aae7 0000  ld   $00
              aae8 00b1  ld   $b1
              aae9 00a6  ld   $a6
              aaea 00d0  ld   $d0
              aaeb 0040  ld   $40
              aaec 00a0  ld   $a0
              aaed 0002  ld   $02
              aaee 00b1  ld   $b1
              aaef 00a6  ld   $a6
              aaf0 0018  ld   $18
              aaf1 00d0  ld   $d0
              aaf2 0003  ld   $03
              aaf3 004c  ld   $4c
              aaf4 0042  ld   $42
              aaf5 0009  ld   $09
              aaf6 00c8  ld   $c8
              aaf7 00b1  ld   $b1
              aaf8 00a6  ld   $a6
              aaf9 0085  ld   $85
              aafa 006b  ld   $6b
              aafb fe00  bra  ac          ;+-----------------------------------+
              aafc fcfd  bra  $aafd       ;|                                   |
              aafd 1418  ld   $18,y       ;| Trampoline for page $aa00 lookups |
              aafe e006  jmp  y,$06       ;|                                   |
              aaff c218  st   [$18]       ;+-----------------------------------+
              ab00 00c8  ld   $c8
              ab01 00b1  ld   $b1
              ab02 00a6  ld   $a6
              ab03 0085  ld   $85
              ab04 006c  ld   $6c
              ab05 0098  ld   $98
              ab06 0065  ld   $65
              ab07 00a6  ld   $a6
              ab08 0085  ld   $85
              ab09 00a6  ld   $a6
              ab0a 0090  ld   $90
              ab0b 0002  ld   $02
              ab0c 00e6  ld   $e6
              ab0d 00a7  ld   $a7
              ab0e 0020  ld   $20
              ab0f 006b  ld   $6b
              ab10 0022  ld   $22
              ab11 0020  ld   $20
              ab12 00e7  ld   $e7
              ab13 0008  ld   $08
              ab14 004c  ld   $4c
              ab15 00ab  ld   $ab
              ab16 0008  ld   $08
              ab17 00f0  ld   $f0
              ab18 003c  ld   $3c
              ab19 00e9  ld   $e9
              ab1a 0080  ld   $80
              ab1b 0090  ld   $90
              ab1c 0011  ld   $11
              ab1d 00c9  ld   $c9
              ab1e 001d  ld   $1d
              ab1f 00b0  ld   $b0
              ab20 0017  ld   $17
              ab21 000a  ld   $0a
              ab22 00a8  ld   $a8
              ab23 00b9  ld   $b9
              ab24 0019  ld   $19
              ab25 0002  ld   $02
              ab26 0048  ld   $48
              ab27 00b9  ld   $b9
              ab28 0018  ld   $18
              ab29 0002  ld   $02
              ab2a 0048  ld   $48
              ab2b 004c  ld   $4c
              ab2c 006b  ld   $6b
              ab2d 0022  ld   $22
              ab2e 004c  ld   $4c
              ab2f 0094  ld   $94
              ab30 0009  ld   $09
              ab31 0000  ld   $00
              ab32 0000  ld   $00
              ab33 000a  ld   $0a
              ab34 00c9  ld   $c9
              ab35 003a  ld   $3a
              ab36 00f0  ld   $f0
              ab37 00d9  ld   $d9
              ab38 004c  ld   $4c
              ab39 006e  ld   $6e
              ab3a 000f  ld   $0f
              ab3b 00c9  ld   $c9
              ab3c 0045  ld   $45
              ab3d 00d0  ld   $d0
              ab3e 00f9  ld   $f9
              ab3f 0020  ld   $20
              ab40 006b  ld   $6b
              ab41 0022  ld   $22
              ab42 00a9  ld   $a9
              ab43 009e  ld   $9e
              ab44 0020  ld   $20
              ab45 0065  ld   $65
              ab46 000f  ld   $0f
              ab47 004c  ld   $4c
              ab48 0094  ld   $94
              ab49 0009  ld   $09
              ab4a 0038  ld   $38
              ab4b 00a5  ld   $a5
              ab4c 005d  ld   $5d
              ab4d 00e9  ld   $e9
              ab4e 0001  ld   $01
              ab4f 00a4  ld   $a4
              ab50 005e  ld   $5e
              ab51 00b0  ld   $b0
              ab52 0001  ld   $01
              ab53 0088  ld   $88
              ab54 0085  ld   $85
              ab55 0073  ld   $73
              ab56 0084  ld   $84
              ab57 0074  ld   $74
              ab58 0060  ld   $60
              ab59 00b0  ld   $b0
              ab5a 0001  ld   $01
              ab5b 0018  ld   $18
              ab5c 00d0  ld   $d0
              ab5d 0040  ld   $40
              ab5e 00a5  ld   $a5
              ab5f 00a6  ld   $a6
              ab60 00a4  ld   $a4
              ab61 00a7  ld   $a7
              ab62 00a6  ld   $a6
              ab63 006c  ld   $6c
              ab64 00e8  ld   $e8
              ab65 00f0  ld   $f0
              ab66 000c  ld   $0c
              ab67 0085  ld   $85
              ab68 006f  ld   $6f
              ab69 0084  ld   $84
              ab6a 0070  ld   $70
              ab6b 00a5  ld   $a5
              ab6c 006b  ld   $6b
              ab6d 00a4  ld   $a4
              ab6e 006c  ld   $6c
              ab6f 0085  ld   $85
              ab70 006d  ld   $6d
              ab71 0084  ld   $84
              ab72 006e  ld   $6e
              ab73 0068  ld   $68
              ab74 0068  ld   $68
              ab75 00a9  ld   $a9
              ab76 009a  ld   $9a
              ab77 00a0  ld   $a0
              ab78 0004  ld   $04
              ab79 00a2  ld   $a2
              ab7a 0000  ld   $00
              ab7b 0086  ld   $86
              ab7c 0045  ld   $45
              ab7d 0090  ld   $90
              ab7e 0003  ld   $03
              ab7f 004c  ld   $4c
              ab80 0066  ld   $66
              ab81 0005  ld   $05
              ab82 004c  ld   $4c
              ab83 0071  ld   $71
              ab84 0005  ld   $05
              ab85 00d0  ld   $d0
              ab86 0017  ld   $17
              ab87 00a2  ld   $a2
              ab88 00d2  ld   $d2
              ab89 00a4  ld   $a4
              ab8a 0070  ld   $70
              ab8b 00d0  ld   $d0
              ab8c 0003  ld   $03
              ab8d 004c  ld   $4c
              ab8e 004a  ld   $4a
              ab8f 0005  ld   $05
              ab90 00a5  ld   $a5
              ab91 006f  ld   $6f
              ab92 0085  ld   $85
              ab93 00a6  ld   $a6
              ab94 0084  ld   $84
              ab95 00a7  ld   $a7
              ab96 00a5  ld   $a5
              ab97 006d  ld   $6d
              ab98 00a4  ld   $a4
              ab99 006e  ld   $6e
              ab9a 0085  ld   $85
              ab9b 006b  ld   $6b
              ab9c 0084  ld   $84
              ab9d 006c  ld   $6c
              ab9e 0060  ld   $60
              ab9f 00d0  ld   $d0
              aba0 0003  ld   $03
              aba1 004c  ld   $4c
              aba2 0059  ld   $59
              aba3 0007  ld   $07
              aba4 0020  ld   $20
              aba5 0060  ld   $60
              aba6 0007  ld   $07
              aba7 004c  ld   $4c
              aba8 008b  ld   $8b
              aba9 0009  ld   $09
              abaa 00a9  ld   $a9
              abab 0003  ld   $03
              abac 0020  ld   $20
              abad 000e  ld   $0e
              abae 0005  ld   $05
              abaf 00a5  ld   $a5
              abb0 00a7  ld   $a7
              abb1 0048  ld   $48
              abb2 00a5  ld   $a5
              abb3 00a6  ld   $a6
              abb4 0048  ld   $48
              abb5 00a5  ld   $a5
              abb6 006c  ld   $6c
              abb7 0048  ld   $48
              abb8 00a5  ld   $a5
              abb9 006b  ld   $6b
              abba 0048  ld   $48
              abbb 00a9  ld   $a9
              abbc 008c  ld   $8c
              abbd 0048  ld   $48
              abbe 0020  ld   $20
              abbf 0071  ld   $71
              abc0 0022  ld   $22
              abc1 0020  ld   $20
              abc2 0094  ld   $94
              abc3 0009  ld   $09
              abc4 004c  ld   $4c
              abc5 00ab  ld   $ab
              abc6 0008  ld   $08
              abc7 0020  ld   $20
              abc8 005a  ld   $5a
              abc9 000a  ld   $0a
              abca 0020  ld   $20
              abcb 00f8  ld   $f8
              abcc 0009  ld   $09
              abcd 00a5  ld   $a5
              abce 006c  ld   $6c
              abcf 00c5  ld   $c5
              abd0 0047  ld   $47
              abd1 00b0  ld   $b0
              abd2 000b  ld   $0b
              abd3 0098  ld   $98
              abd4 0038  ld   $38
              abd5 0065  ld   $65
              abd6 00a6  ld   $a6
              abd7 00a6  ld   $a6
              abd8 00a7  ld   $a7
              abd9 0090  ld   $90
              abda 0007  ld   $07
              abdb 00e8  ld   $e8
              abdc 00b0  ld   $b0
              abdd 0004  ld   $04
              abde 00a5  ld   $a5
              abdf 005d  ld   $5d
              abe0 00a6  ld   $a6
              abe1 005e  ld   $5e
              abe2 0020  ld   $20
              abe3 0017  ld   $17
              abe4 0007  ld   $07
              abe5 0090  ld   $90
              abe6 001e  ld   $1e
              abe7 00a5  ld   $a5
              abe8 0092  ld   $92
              abe9 00e9  ld   $e9
              abea 0001  ld   $01
              abeb 0085  ld   $85
              abec 00a6  ld   $a6
              abed 00a5  ld   $a5
              abee 0093  ld   $93
              abef 00e9  ld   $e9
              abf0 0000  ld   $00
              abf1 0085  ld   $85
              abf2 00a7  ld   $a7
              abf3 0060  ld   $60
              abf4 00d0  ld   $d0
              abf5 00fd  ld   $fd
              abf6 00a9  ld   $a9
              abf7 00ff  ld   $ff
              abf8 0085  ld   $85
              abf9 007c  ld   $7c
              abfa 0020  ld   $20
              abfb fe00  bra  ac          ;+-----------------------------------+
              abfc fcfd  bra  $abfd       ;|                                   |
              abfd 1418  ld   $18,y       ;| Trampoline for page $ab00 lookups |
              abfe e006  jmp  y,$06       ;|                                   |
              abff c218  st   [$18]       ;+-----------------------------------+
              ac00 00a2  ld   $a2
              ac01 0004  ld   $04
              ac02 009a  ld   $9a
              ac03 00c9  ld   $c9
              ac04 008c  ld   $8c
              ac05 00f0  ld   $f0
              ac06 000b  ld   $0b
              ac07 00a2  ld   $a2
              ac08 0016  ld   $16
              ac09 002c  ld   $2c
              ac0a 00a2  ld   $a2
              ac0b 005a  ld   $5a
              ac0c 004c  ld   $4c
              ac0d 004a  ld   $4a
              ac0e 0005  ld   $05
              ac0f 004c  ld   $4c
              ac10 006e  ld   $6e
              ac11 000f  ld   $0f
              ac12 0068  ld   $68
              ac13 0068  ld   $68
              ac14 0085  ld   $85
              ac15 006b  ld   $6b
              ac16 0068  ld   $68
              ac17 0085  ld   $85
              ac18 006c  ld   $6c
              ac19 0068  ld   $68
              ac1a 0085  ld   $85
              ac1b 00a6  ld   $a6
              ac1c 0068  ld   $68
              ac1d 0085  ld   $85
              ac1e 00a7  ld   $a7
              ac1f 0020  ld   $20
              ac20 00f5  ld   $f5
              ac21 0009  ld   $09
              ac22 0098  ld   $98
              ac23 0018  ld   $18
              ac24 0065  ld   $65
              ac25 00a6  ld   $a6
              ac26 0085  ld   $85
              ac27 00a6  ld   $a6
              ac28 0090  ld   $90
              ac29 0002  ld   $02
              ac2a 00e6  ld   $e6
              ac2b 00a7  ld   $a7
              ac2c 0060  ld   $60
              ac2d 00a2  ld   $a2
              ac2e 003a  ld   $3a
              ac2f 002c  ld   $2c
              ac30 00a2  ld   $a2
              ac31 0000  ld   $00
              ac32 0086  ld   $86
              ac33 003b  ld   $3b
              ac34 00a0  ld   $a0
              ac35 0000  ld   $00
              ac36 0084  ld   $84
              ac37 003c  ld   $3c
              ac38 000a  ld   $0a
              ac39 0000  ld   $00
              ac3a 0000  ld   $00
              ac3b 00a5  ld   $a5
              ac3c 003c  ld   $3c
              ac3d 00a6  ld   $a6
              ac3e 003b  ld   $3b
              ac3f 0085  ld   $85
              ac40 003b  ld   $3b
              ac41 0086  ld   $86
              ac42 003c  ld   $3c
              ac43 00b1  ld   $b1
              ac44 00a6  ld   $a6
              ac45 00f0  ld   $f0
              ac46 00e8  ld   $e8
              ac47 00c5  ld   $c5
              ac48 003c  ld   $3c
              ac49 00f0  ld   $f0
              ac4a 00e4  ld   $e4
              ac4b 00c8  ld   $c8
              ac4c 00c9  ld   $c9
              ac4d 0022  ld   $22
              ac4e 00d0  ld   $d0
              ac4f 00f3  ld   $f3
              ac50 00f0  ld   $f0
              ac51 00e9  ld   $e9
              ac52 0020  ld   $20
              ac53 000a  ld   $0a
              ac54 000e  ld   $0e
              ac55 0020  ld   $20
              ac56 0071  ld   $71
              ac57 0022  ld   $22
              ac58 00c9  ld   $c9
              ac59 0088  ld   $88
              ac5a 00f0  ld   $f0
              ac5b 0005  ld   $05
              ac5c 00a9  ld   $a9
              ac5d 00a1  ld   $a1
              ac5e 0020  ld   $20
              ac5f 0065  ld   $65
              ac60 000f  ld   $0f
              ac61 00a5  ld   $a5
              ac62 0094  ld   $94
              ac63 00d0  ld   $d0
              ac64 0005  ld   $05
              ac65 0020  ld   $20
              ac66 00f8  ld   $f8
              ac67 0009  ld   $09
              ac68 00f0  ld   $f0
              ac69 00bb  ld   $bb
              ac6a 0020  ld   $20
              ac6b 0071  ld   $71
              ac6c 0022  ld   $22
              ac6d 00b0  ld   $b0
              ac6e 0003  ld   $03
              ac6f 004c  ld   $4c
              ac70 0094  ld   $94
              ac71 0009  ld   $09
              ac72 004c  ld   $4c
              ac73 00e7  ld   $e7
              ac74 0008  ld   $08
              ac75 0020  ld   $20
              ac76 00da  ld   $da
              ac77 0017  ld   $17
              ac78 0048  ld   $48
              ac79 00c9  ld   $c9
              ac7a 008c  ld   $8c
              ac7b 00f0  ld   $f0
              ac7c 0004  ld   $04
              ac7d 00c9  ld   $c9
              ac7e 0088  ld   $88
              ac7f 00d0  ld   $d0
              ac80 0091  ld   $91
              ac81 00c6  ld   $c6
              ac82 0098  ld   $98
              ac83 00d0  ld   $d0
              ac84 0004  ld   $04
              ac85 0068  ld   $68
              ac86 004c  ld   $4c
              ac87 00e9  ld   $e9
              ac88 0008  ld   $08
              ac89 0020  ld   $20
              ac8a 006b  ld   $6b
              ac8b 0022  ld   $22
              ac8c 0020  ld   $20
              ac8d 005a  ld   $5a
              ac8e 000a  ld   $0a
              ac8f 00c9  ld   $c9
              ac90 002c  ld   $2c
              ac91 00f0  ld   $f0
              ac92 00ee  ld   $ee
              ac93 0068  ld   $68
              ac94 0060  ld   $60
              ac95 00a2  ld   $a2
              ac96 0000  ld   $00
              ac97 0086  ld   $86
              ac98 0046  ld   $46
              ac99 0086  ld   $86
              ac9a 0047  ld   $47
              ac9b 00b0  ld   $b0
              ac9c 00f7  ld   $f7
              ac9d 00e9  ld   $e9
              ac9e 002f  ld   $2f
              ac9f 0085  ld   $85
              aca0 003b  ld   $3b
              aca1 00a5  ld   $a5
              aca2 0047  ld   $47
              aca3 0085  ld   $85
              aca4 0054  ld   $54
              aca5 00c9  ld   $c9
              aca6 0019  ld   $19
              aca7 00b0  ld   $b0
              aca8 00d4  ld   $d4
              aca9 00a5  ld   $a5
              acaa 0046  ld   $46
              acab 000a  ld   $0a
              acac 0026  ld   $26
              acad 0054  ld   $54
              acae 000a  ld   $0a
              acaf 0026  ld   $26
              acb0 0054  ld   $54
              acb1 0065  ld   $65
              acb2 0046  ld   $46
              acb3 0085  ld   $85
              acb4 0046  ld   $46
              acb5 00a5  ld   $a5
              acb6 0054  ld   $54
              acb7 0065  ld   $65
              acb8 0047  ld   $47
              acb9 0085  ld   $85
              acba 0047  ld   $47
              acbb 0006  ld   $06
              acbc 0046  ld   $46
              acbd 0026  ld   $26
              acbe 0047  ld   $47
              acbf 00a5  ld   $a5
              acc0 0046  ld   $46
              acc1 0065  ld   $65
              acc2 003b  ld   $3b
              acc3 0085  ld   $85
              acc4 0046  ld   $46
              acc5 0090  ld   $90
              acc6 0002  ld   $02
              acc7 00e6  ld   $e6
              acc8 0047  ld   $47
              acc9 0020  ld   $20
              acca 006b  ld   $6b
              accb 0022  ld   $22
              accc 004c  ld   $4c
              accd 0060  ld   $60
              acce 000a  ld   $0a
              accf 0020  ld   $20
              acd0 00d0  ld   $d0
              acd1 0010  ld   $10
              acd2 0085  ld   $85
              acd3 007b  ld   $7b
              acd4 0084  ld   $84
              acd5 007c  ld   $7c
              acd6 00a9  ld   $a9
              acd7 00ac  ld   $ac
              acd8 0020  ld   $20
              acd9 0065  ld   $65
              acda 000f  ld   $0f
              acdb 00a5  ld   $a5
              acdc 0040  ld   $40
              acdd 0048  ld   $48
              acde 00a5  ld   $a5
              acdf 003f  ld   $3f
              ace0 0048  ld   $48
              ace1 0020  ld   $20
              ace2 000a  ld   $0a
              ace3 000e  ld   $0e
              ace4 0068  ld   $68
              ace5 002a  ld   $2a
              ace6 0020  ld   $20
              ace7 00fc  ld   $fc
              ace8 000d  ld   $0d
              ace9 00d0  ld   $d0
              acea 0018  ld   $18
              aceb 0068  ld   $68
              acec 0010  ld   $10
              aced 0012  ld   $12
              acee 0020  ld   $20
              acef 0093  ld   $93
              acf0 001c  ld   $1c
              acf1 0020  ld   $20
              acf2 00fd  ld   $fd
              acf3 0011  ld   $11
              acf4 00a0  ld   $a0
              acf5 0000  ld   $00
              acf6 00a5  ld   $a5
              acf7 0097  ld   $97
              acf8 0091  ld   $91
              acf9 007b  ld   $7b
              acfa 00c8  ld   $c8
              acfb fe00  bra  ac          ;+-----------------------------------+
              acfc fcfd  bra  $acfd       ;|                                   |
              acfd 1418  ld   $18,y       ;| Trampoline for page $ac00 lookups |
              acfe e006  jmp  y,$06       ;|                                   |
              acff c218  st   [$18]       ;+-----------------------------------+
              ad00 00a5  ld   $a5
              ad01 0098  ld   $98
              ad02 0091  ld   $91
              ad03 007b  ld   $7b
              ad04 0060  ld   $60
              ad05 004c  ld   $4c
              ad06 0048  ld   $48
              ad07 001c  ld   $1c
              ad08 0068  ld   $68
              ad09 00a4  ld   $a4
              ad0a 007c  ld   $7c
              ad0b 00c0  ld   $c0
              ad0c 001f  ld   $1f
              ad0d 00d0  ld   $d0
              ad0e 0050  ld   $50
              ad0f 0020  ld   $20
              ad10 00e2  ld   $e2
              ad11 0016  ld   $16
              ad12 00c9  ld   $c9
              ad13 0006  ld   $06
              ad14 00d0  ld   $d0
              ad15 0041  ld   $41
              ad16 00a0  ld   $a0
              ad17 0000  ld   $00
              ad18 0084  ld   $84
              ad19 0094  ld   $94
              ad1a 0084  ld   $84
              ad1b 0099  ld   $99
              ad1c 0084  ld   $84
              ad1d 00a4  ld   $a4
              ad1e 0020  ld   $20
              ad1f 0010  ld   $10
              ad20 000b  ld   $0b
              ad21 0020  ld   $20
              ad22 005a  ld   $5a
              ad23 001b  ld   $1b
              ad24 00e6  ld   $e6
              ad25 00a4  ld   $a4
              ad26 00a4  ld   $a4
              ad27 00a4  ld   $a4
              ad28 0020  ld   $20
              ad29 0010  ld   $10
              ad2a 000b  ld   $0b
              ad2b 0020  ld   $20
              ad2c 0084  ld   $84
              ad2d 001c  ld   $1c
              ad2e 00aa  ld   $aa
              ad2f 00f0  ld   $f0
              ad30 0005  ld   $05
              ad31 00e8  ld   $e8
              ad32 008a  ld   $8a
              ad33 0020  ld   $20
              ad34 0065  ld   $65
              ad35 001b  ld   $1b
              ad36 00a4  ld   $a4
              ad37 00a4  ld   $a4
              ad38 00c8  ld   $c8
              ad39 00c0  ld   $c0
              ad3a 0006  ld   $06
              ad3b 00d0  ld   $d0
              ad3c 00df  ld   $df
              ad3d 0020  ld   $20
              ad3e 005a  ld   $5a
              ad3f 001b  ld   $1b
              ad40 000b  ld   $0b
              ad41 0000  ld   $00
              ad42 0000  ld   $00
              ad43 0020  ld   $20
              ad44 0013  ld   $13
              ad45 001d  ld   $1d
              ad46 00a2  ld   $a2
              ad47 0002  ld   $02
              ad48 0078  ld   $78
              ad49 00b5  ld   $b5
              ad4a 0096  ld   $96
              ad4b 009d  ld   $9d
              ad4c 0000  ld   $00
              ad4d 0002  ld   $02
              ad4e 00ca  ld   $ca
              ad4f 0010  ld   $10
              ad50 00f8  ld   $f8
              ad51 0058  ld   $58
              ad52 0060  ld   $60
              ad53 00b1  ld   $b1
              ad54 0054  ld   $54
              ad55 0020  ld   $20
              ad56 007d  ld   $7d
              ad57 0022  ld   $22
              ad58 0090  ld   $90
              ad59 0003  ld   $03
              ad5a 004c  ld   $4c
              ad5b 0082  ld   $82
              ad5c 0012  ld   $12
              ad5d 00e9  ld   $e9
              ad5e 002f  ld   $2f
              ad5f 004c  ld   $4c
              ad60 00f6  ld   $f6
              ad61 001d  ld   $1d
              ad62 00a0  ld   $a0
              ad63 0002  ld   $02
              ad64 00b1  ld   $b1
              ad65 0097  ld   $97
              ad66 00c5  ld   $c5
              ad67 0066  ld   $66
              ad68 0090  ld   $90
              ad69 0017  ld   $17
              ad6a 00d0  ld   $d0
              ad6b 0007  ld   $07
              ad6c 0088  ld   $88
              ad6d 00b1  ld   $b1
              ad6e 0097  ld   $97
              ad6f 00c5  ld   $c5
              ad70 0065  ld   $65
              ad71 0090  ld   $90
              ad72 000e  ld   $0e
              ad73 00a4  ld   $a4
              ad74 0098  ld   $98
              ad75 00c4  ld   $c4
              ad76 0060  ld   $60
              ad77 0090  ld   $90
              ad78 0008  ld   $08
              ad79 00d0  ld   $d0
              ad7a 000d  ld   $0d
              ad7b 00a5  ld   $a5
              ad7c 0097  ld   $97
              ad7d 00c5  ld   $c5
              ad7e 005f  ld   $5f
              ad7f 00b0  ld   $b0
              ad80 0007  ld   $07
              ad81 00a5  ld   $a5
              ad82 0097  ld   $97
              ad83 00a4  ld   $a4
              ad84 0098  ld   $98
              ad85 004c  ld   $4c
              ad86 005b  ld   $5b
              ad87 000b  ld   $0b
              ad88 00a0  ld   $a0
              ad89 0000  ld   $00
              ad8a 00b1  ld   $b1
              ad8b 0097  ld   $97
              ad8c 0020  ld   $20
              ad8d 00b1  ld   $b1
              ad8e 0014  ld   $14
              ad8f 00a5  ld   $a5
              ad90 0083  ld   $83
              ad91 00a4  ld   $a4
              ad92 0084  ld   $84
              ad93 0085  ld   $85
              ad94 00a2  ld   $a2
              ad95 0084  ld   $84
              ad96 00a3  ld   $a3
              ad97 0020  ld   $20
              ad98 00b6  ld   $b6
              ad99 0016  ld   $16
              ad9a 00a9  ld   $a9
              ad9b 0094  ld   $94
              ad9c 00a0  ld   $a0
              ad9d 0000  ld   $00
              ad9e 0085  ld   $85
              ad9f 0083  ld   $83
              ada0 0084  ld   $84
              ada1 0084  ld   $84
              ada2 0020  ld   $20
              ada3 0017  ld   $17
              ada4 0017  ld   $17
              ada5 00a0  ld   $a0
              ada6 0000  ld   $00
              ada7 00b1  ld   $b1
              ada8 0083  ld   $83
              ada9 0091  ld   $91
              adaa 007b  ld   $7b
              adab 00c8  ld   $c8
              adac 00b1  ld   $b1
              adad 0083  ld   $83
              adae 0091  ld   $91
              adaf 007b  ld   $7b
              adb0 00c8  ld   $c8
              adb1 00b1  ld   $b1
              adb2 0083  ld   $83
              adb3 0091  ld   $91
              adb4 007b  ld   $7b
              adb5 0060  ld   $60
              adb6 0020  ld   $20
              adb7 00f2  ld   $f2
              adb8 000b  ld   $0b
              adb9 0020  ld   $20
              adba 0071  ld   $71
              adbb 0022  ld   $22
              adbc 00f0  ld   $f0
              adbd 0031  ld   $31
              adbe 00f0  ld   $f0
              adbf 003b  ld   $3b
              adc0 00c9  ld   $c9
              adc1 009d  ld   $9d
              adc2 00f0  ld   $f0
              adc3 0049  ld   $49
              adc4 00c9  ld   $c9
              adc5 00a0  ld   $a0
              adc6 0018  ld   $18
              adc7 00f0  ld   $f0
              adc8 0044  ld   $44
              adc9 00c9  ld   $c9
              adca 002c  ld   $2c
              adcb 00f0  ld   $f0
              adcc 002f  ld   $2f
              adcd 00c9  ld   $c9
              adce 003b  ld   $3b
              adcf 00f0  ld   $f0
              add0 0056  ld   $56
              add1 0020  ld   $20
              add2 000a  ld   $0a
              add3 000e  ld   $0e
              add4 0024  ld   $24
              add5 003f  ld   $3f
              add6 0030  ld   $30
              add7 00de  ld   $de
              add8 0020  ld   $20
              add9 0055  ld   $55
              adda 001e  ld   $1e
              addb 0020  ld   $20
              addc 00c3  ld   $c3
              addd 0014  ld   $14
              adde 0020  ld   $20
              addf 00f2  ld   $f2
              ade0 000b  ld   $0b
              ade1 0020  ld   $20
              ade2 000c  ld   $0c
              ade3 000c  ld   $0c
              ade4 00d0  ld   $d0
              ade5 00d3  ld   $d3
              ade6 00a9  ld   $a9
              ade7 0000  ld   $00
              ade8 009d  ld   $9d
              ade9 0005  ld   $05
              adea 0024  ld   $24
              adeb 00a2  ld   $a2
              adec 0004  ld   $04
              aded 00a0  ld   $a0
              adee 0024  ld   $24
              adef 00a9  ld   $a9
              adf0 000d  ld   $0d
              adf1 0020  ld   $20
              adf2 0011  ld   $11
              adf3 000c  ld   $0c
              adf4 00a9  ld   $a9
              adf5 000a  ld   $0a
              adf6 0020  ld   $20
              adf7 0011  ld   $11
              adf8 000c  ld   $0c
              adf9 0049  ld   $49
              adfa 00ff  ld   $ff
              adfb fe00  bra  ac          ;+-----------------------------------+
              adfc fcfd  bra  $adfd       ;|                                   |
              adfd 1418  ld   $18,y       ;| Trampoline for page $ad00 lookups |
              adfe e006  jmp  y,$06       ;|                                   |
              adff c218  st   [$18]       ;+-----------------------------------+
              ae00 0060  ld   $60
              ae01 00a5  ld   $a5
              ae02 0030  ld   $30
              ae03 0020  ld   $20
              ae04 007a  ld   $7a
              ae05 0004  ld   $04
              ae06 0098  ld   $98
              ae07 0038  ld   $38
              ae08 00e9  ld   $e9
              ae09 000a  ld   $0a
              ae0a 00b0  ld   $b0
              ae0b 00fc  ld   $fc
              ae0c 0049  ld   $49
              ae0d 00ff  ld   $ff
              ae0e 0069  ld   $69
              ae0f 0001  ld   $01
              ae10 00d0  ld   $d0
              ae11 0015  ld   $15
              ae12 0008  ld   $08
              ae13 0020  ld   $20
              ae14 00d7  ld   $d7
              ae15 0017  ld   $17
              ae16 00c9  ld   $c9
              ae17 0029  ld   $29
              ae18 00d0  ld   $d0
              ae19 005b  ld   $5b
              ae1a 0028  ld   $28
              ae1b 0090  ld   $90
              ae1c 000b  ld   $0b
              ae1d 00a5  ld   $a5
              ae1e 0030  ld   $30
              ae1f 0020  ld   $20
              ae20 007a  ld   $7a
              ae21 0004  ld   $04
              ae22 008a  ld   $8a
              ae23 00e5  ld   $e5
              ae24 002b  ld   $2b
              ae25 0090  ld   $90
              ae26 0005  ld   $05
              ae27 00aa  ld   $aa
              ae28 00e8  ld   $e8
              ae29 00ca  ld   $ca
              ae2a 00d0  ld   $d0
              ae2b 0006  ld   $06
              ae2c 0020  ld   $20
              ae2d 006b  ld   $6b
              ae2e 0022  ld   $22
              ae2f 004c  ld   $4c
              ae30 007b  ld   $7b
              ae31 000b  ld   $0b
              ae32 0020  ld   $20
              ae33 000c  ld   $0c
              ae34 000c  ld   $0c
              ae35 00d0  ld   $d0
              ae36 00f2  ld   $f2
              ae37 0020  ld   $20
              ae38 00c3  ld   $c3
              ae39 0014  ld   $14
              ae3a 0020  ld   $20
              ae3b 00e2  ld   $e2
              ae3c 0016  ld   $16
              ae3d 00aa  ld   $aa
              ae3e 00a0  ld   $a0
              ae3f 0000  ld   $00
              ae40 00e8  ld   $e8
              ae41 00ca  ld   $ca
              ae42 00f0  ld   $f0
              ae43 00bc  ld   $bc
              ae44 00b1  ld   $b1
              ae45 0054  ld   $54
              ae46 0020  ld   $20
              ae47 0011  ld   $11
              ae48 000c  ld   $0c
              ae49 0000  ld   $00
              ae4a 0000  ld   $00
              ae4b 000c  ld   $0c
              ae4c 00c8  ld   $c8
              ae4d 00c9  ld   $c9
              ae4e 000d  ld   $0d
              ae4f 00d0  ld   $d0
              ae50 00f3  ld   $f3
              ae51 0020  ld   $20
              ae52 00b6  ld   $b6
              ae53 000b  ld   $0b
              ae54 004c  ld   $4c
              ae55 00f9  ld   $f9
              ae56 000b  ld   $0b
              ae57 00a9  ld   $a9
              ae58 0020  ld   $20
              ae59 002c  ld   $2c
              ae5a 00a9  ld   $a9
              ae5b 003f  ld   $3f
              ae5c 0024  ld   $24
              ae5d 0045  ld   $45
              ae5e 0030  ld   $30
              ae5f 0003  ld   $03
              ae60 0020  ld   $20
              ae61 0000  ld   $00
              ae62 002b  ld   $2b
              ae63 0029  ld   $29
              ae64 00ff  ld   $ff
              ae65 0060  ld   $60
              ae66 00a5  ld   $a5
              ae67 0043  ld   $43
              ae68 00f0  ld   $f0
              ae69 0011  ld   $11
              ae6a 0030  ld   $30
              ae6b 0004  ld   $04
              ae6c 00a0  ld   $a0
              ae6d 00ff  ld   $ff
              ae6e 00d0  ld   $d0
              ae6f 0004  ld   $04
              ae70 00a5  ld   $a5
              ae71 0071  ld   $71
              ae72 00a4  ld   $a4
              ae73 0072  ld   $72
              ae74 0085  ld   $85
              ae75 006b  ld   $6b
              ae76 0084  ld   $84
              ae77 006c  ld   $6c
              ae78 004c  ld   $4c
              ae79 006e  ld   $6e
              ae7a 000f  ld   $0f
              ae7b 00a9  ld   $a9
              ae7c 007e  ld   $7e
              ae7d 00a0  ld   $a0
              ae7e 000d  ld   $0d
              ae7f 0020  ld   $20
              ae80 00ef  ld   $ef
              ae81 000b  ld   $0b
              ae82 00a5  ld   $a5
              ae83 006f  ld   $6f
              ae84 00a4  ld   $a4
              ae85 0070  ld   $70
              ae86 0085  ld   $85
              ae87 00a6  ld   $a6
              ae88 0084  ld   $84
              ae89 00a7  ld   $a7
              ae8a 0060  ld   $60
              ae8b 0020  ld   $20
              ae8c 00e2  ld   $e2
              ae8d 0013  ld   $13
              ae8e 00a2  ld   $a2
              ae8f 0006  ld   $06
              ae90 00a0  ld   $a0
              ae91 0024  ld   $24
              ae92 00a9  ld   $a9
              ae93 0000  ld   $00
              ae94 008d  ld   $8d
              ae95 0006  ld   $06
              ae96 0024  ld   $24
              ae97 00a9  ld   $a9
              ae98 0040  ld   $40
              ae99 0020  ld   $20
              ae9a 0089  ld   $89
              ae9b 000c  ld   $0c
              ae9c 0060  ld   $60
              ae9d 0046  ld   $46
              ae9e 0045  ld   $45
              ae9f 00c9  ld   $c9
              aea0 0022  ld   $22
              aea1 00d0  ld   $d0
              aea2 000b  ld   $0b
              aea3 0020  ld   $20
              aea4 0023  ld   $23
              aea5 000f  ld   $0f
              aea6 00a9  ld   $a9
              aea7 003b  ld   $3b
              aea8 0020  ld   $20
              aea9 0065  ld   $65
              aeaa 000f  ld   $0f
              aeab 0020  ld   $20
              aeac 00f2  ld   $f2
              aead 000b  ld   $0b
              aeae 0020  ld   $20
              aeaf 00e2  ld   $e2
              aeb0 0013  ld   $13
              aeb1 00a9  ld   $a9
              aeb2 002c  ld   $2c
              aeb3 008d  ld   $8d
              aeb4 0004  ld   $04
              aeb5 0024  ld   $24
              aeb6 0020  ld   $20
              aeb7 0077  ld   $77
              aeb8 000c  ld   $0c
              aeb9 00ad  ld   $ad
              aeba 0005  ld   $05
              aebb 0024  ld   $24
              aebc 00d0  ld   $d0
              aebd 0014  ld   $14
              aebe 0018  ld   $18
              aebf 004c  ld   $4c
              aec0 0038  ld   $38
              aec1 0009  ld   $09
              aec2 0020  ld   $20
              aec3 000f  ld   $0f
              aec4 000c  ld   $0c
              aec5 0020  ld   $20
              aec6 000c  ld   $0c
              aec7 000c  ld   $0c
              aec8 004c  ld   $4c
              aec9 0057  ld   $57
              aeca 0006  ld   $06
              aecb 00a6  ld   $a6
              aecc 0073  ld   $73
              aecd 00a4  ld   $a4
              aece 0074  ld   $74
              aecf 00a9  ld   $a9
              aed0 0098  ld   $98
              aed1 002c  ld   $2c
              aed2 00a9  ld   $a9
              aed3 0000  ld   $00
              aed4 0085  ld   $85
              aed5 0043  ld   $43
              aed6 0086  ld   $86
              aed7 0075  ld   $75
              aed8 0084  ld   $84
              aed9 0076  ld   $76
              aeda 0020  ld   $20
              aedb 00d0  ld   $d0
              aedc 0010  ld   $10
              aedd 0085  ld   $85
              aede 007b  ld   $7b
              aedf 0084  ld   $84
              aee0 007c  ld   $7c
              aee1 00a5  ld   $a5
              aee2 00a6  ld   $a6
              aee3 00a4  ld   $a4
              aee4 00a7  ld   $a7
              aee5 0085  ld   $85
              aee6 007d  ld   $7d
              aee7 0084  ld   $84
              aee8 007e  ld   $7e
              aee9 00a6  ld   $a6
              aeea 0075  ld   $75
              aeeb 00a4  ld   $a4
              aeec 0076  ld   $76
              aeed 0086  ld   $86
              aeee 00a6  ld   $a6
              aeef 0084  ld   $84
              aef0 00a7  ld   $a7
              aef1 0020  ld   $20
              aef2 0071  ld   $71
              aef3 0022  ld   $22
              aef4 00d0  ld   $d0
              aef5 001c  ld   $1c
              aef6 0024  ld   $24
              aef7 0043  ld   $43
              aef8 0050  ld   $50
              aef9 000c  ld   $0c
              aefa 0020  ld   $20
              aefb fe00  bra  ac          ;+-----------------------------------+
              aefc fcfd  bra  $aefd       ;|                                   |
              aefd 1418  ld   $18,y       ;| Trampoline for page $ae00 lookups |
              aefe e006  jmp  y,$06       ;|                                   |
              aeff c218  st   [$18]       ;+-----------------------------------+
              af00 0000  ld   $00
              af01 002c  ld   $2c
              af02 008d  ld   $8d
              af03 0005  ld   $05
              af04 0024  ld   $24
              af05 00a2  ld   $a2
              af06 0004  ld   $04
              af07 00a0  ld   $a0
              af08 0024  ld   $24
              af09 00d0  ld   $d0
              af0a 0008  ld   $08
              af0b 0030  ld   $30
              af0c 0071  ld   $71
              af0d 0020  ld   $20
              af0e 000f  ld   $0f
              af0f 000c  ld   $0c
              af10 0020  ld   $20
              af11 0077  ld   $77
              af12 000c  ld   $0c
              af13 0086  ld   $86
              af14 00a6  ld   $a6
              af15 0084  ld   $84
              af16 00a7  ld   $a7
              af17 0020  ld   $20
              af18 006b  ld   $6b
              af19 0022  ld   $22
              af1a 0024  ld   $24
              af1b 003f  ld   $3f
              af1c 0010  ld   $10
              af1d 0031  ld   $31
              af1e 0024  ld   $24
              af1f 0043  ld   $43
              af20 0050  ld   $50
              af21 0009  ld   $09
              af22 00e8  ld   $e8
              af23 0086  ld   $86
              af24 00a6  ld   $a6
              af25 00a9  ld   $a9
              af26 0000  ld   $00
              af27 0085  ld   $85
              af28 003b  ld   $3b
              af29 00f0  ld   $f0
              af2a 000c  ld   $0c
              af2b 0085  ld   $85
              af2c 003b  ld   $3b
              af2d 00c9  ld   $c9
              af2e 0022  ld   $22
              af2f 00f0  ld   $f0
              af30 0007  ld   $07
              af31 00a9  ld   $a9
              af32 003a  ld   $3a
              af33 0085  ld   $85
              af34 003b  ld   $3b
              af35 00a9  ld   $a9
              af36 002c  ld   $2c
              af37 0018  ld   $18
              af38 0085  ld   $85
              af39 003c  ld   $3c
              af3a 00a5  ld   $a5
              af3b 00a6  ld   $a6
              af3c 00a4  ld   $a4
              af3d 00a7  ld   $a7
              af3e 0069  ld   $69
              af3f 0000  ld   $00
              af40 0090  ld   $90
              af41 0001  ld   $01
              af42 00c8  ld   $c8
              af43 0020  ld   $20
              af44 00c9  ld   $c9
              af45 0014  ld   $14
              af46 0020  ld   $20
              af47 001f  ld   $1f
              af48 0018  ld   $18
              af49 0020  ld   $20
              af4a 00c9  ld   $c9
              af4b 000a  ld   $0a
              af4c 004c  ld   $4c
              af4d 0007  ld   $07
              af4e 000d  ld   $0d
              af4f 0020  ld   $20
              af50 000d  ld   $0d
              af51 0000  ld   $00
              af52 0000  ld   $00
              af53 006b  ld   $6b
              af54 001d  ld   $1d
              af55 00a5  ld   $a5
              af56 0040  ld   $40
              af57 0020  ld   $20
              af58 00b1  ld   $b1
              af59 000a  ld   $0a
              af5a 0020  ld   $20
              af5b 0071  ld   $71
              af5c 0022  ld   $22
              af5d 00f0  ld   $f0
              af5e 0007  ld   $07
              af5f 00c9  ld   $c9
              af60 002c  ld   $2c
              af61 00f0  ld   $f0
              af62 0003  ld   $03
              af63 004c  ld   $4c
              af64 001b  ld   $1b
              af65 000c  ld   $0c
              af66 00a5  ld   $a5
              af67 00a6  ld   $a6
              af68 00a4  ld   $a4
              af69 00a7  ld   $a7
              af6a 0085  ld   $85
              af6b 0075  ld   $75
              af6c 0084  ld   $84
              af6d 0076  ld   $76
              af6e 00a5  ld   $a5
              af6f 007d  ld   $7d
              af70 00a4  ld   $a4
              af71 007e  ld   $7e
              af72 0085  ld   $85
              af73 00a6  ld   $a6
              af74 0084  ld   $84
              af75 00a7  ld   $a7
              af76 0020  ld   $20
              af77 0071  ld   $71
              af78 0022  ld   $22
              af79 00f0  ld   $f0
              af7a 002c  ld   $2c
              af7b 0020  ld   $20
              af7c 0063  ld   $63
              af7d 000f  ld   $0f
              af7e 004c  ld   $4c
              af7f 008f  ld   $8f
              af80 000c  ld   $0c
              af81 0020  ld   $20
              af82 00f5  ld   $f5
              af83 0009  ld   $09
              af84 00c8  ld   $c8
              af85 00aa  ld   $aa
              af86 00d0  ld   $d0
              af87 0012  ld   $12
              af88 00a2  ld   $a2
              af89 002a  ld   $2a
              af8a 00c8  ld   $c8
              af8b 00b1  ld   $b1
              af8c 00a6  ld   $a6
              af8d 00f0  ld   $f0
              af8e 0069  ld   $69
              af8f 00c8  ld   $c8
              af90 00b1  ld   $b1
              af91 00a6  ld   $a6
              af92 0085  ld   $85
              af93 0071  ld   $71
              af94 00c8  ld   $c8
              af95 00b1  ld   $b1
              af96 00a6  ld   $a6
              af97 00c8  ld   $c8
              af98 0085  ld   $85
              af99 0072  ld   $72
              af9a 00b1  ld   $b1
              af9b 00a6  ld   $a6
              af9c 00aa  ld   $aa
              af9d 0020  ld   $20
              af9e 00ea  ld   $ea
              af9f 0009  ld   $09
              afa0 00e0  ld   $e0
              afa1 0083  ld   $83
              afa2 00d0  ld   $d0
              afa3 00dd  ld   $dd
              afa4 004c  ld   $4c
              afa5 00c7  ld   $c7
              afa6 000c  ld   $0c
              afa7 00a5  ld   $a5
              afa8 0075  ld   $75
              afa9 00a4  ld   $a4
              afaa 0076  ld   $76
              afab 00a6  ld   $a6
              afac 0043  ld   $43
              afad 0010  ld   $10
              afae 0003  ld   $03
              afaf 004c  ld   $4c
              afb0 0021  ld   $21
              afb1 0009  ld   $09
              afb2 00a0  ld   $a0
              afb3 0000  ld   $00
              afb4 00b1  ld   $b1
              afb5 0075  ld   $75
              afb6 00f0  ld   $f0
              afb7 0007  ld   $07
              afb8 00a9  ld   $a9
              afb9 006d  ld   $6d
              afba 00a0  ld   $a0
              afbb 000d  ld   $0d
              afbc 004c  ld   $4c
              afbd 00ef  ld   $ef
              afbe 000b  ld   $0b
              afbf 0060  ld   $60
              afc0 003f  ld   $3f
              afc1 0045  ld   $45
              afc2 0058  ld   $58
              afc3 0054  ld   $54
              afc4 0052  ld   $52
              afc5 0041  ld   $41
              afc6 0020  ld   $20
              afc7 0049  ld   $49
              afc8 0047  ld   $47
              afc9 004e  ld   $4e
              afca 004f  ld   $4f
              afcb 0052  ld   $52
              afcc 0045  ld   $45
              afcd 0044  ld   $44
              afce 000d  ld   $0d
              afcf 000a  ld   $0a
              afd0 0000  ld   $00
              afd1 003f  ld   $3f
              afd2 0052  ld   $52
              afd3 0045  ld   $45
              afd4 0044  ld   $44
              afd5 004f  ld   $4f
              afd6 0020  ld   $20
              afd7 0046  ld   $46
              afd8 0052  ld   $52
              afd9 004f  ld   $4f
              afda 004d  ld   $4d
              afdb 0020  ld   $20
              afdc 0053  ld   $53
              afdd 0054  ld   $54
              afde 0041  ld   $41
              afdf 0052  ld   $52
              afe0 0054  ld   $54
              afe1 000d  ld   $0d
              afe2 000a  ld   $0a
              afe3 0000  ld   $00
              afe4 00d0  ld   $d0
              afe5 0004  ld   $04
              afe6 00a0  ld   $a0
              afe7 0000  ld   $00
              afe8 00f0  ld   $f0
              afe9 0003  ld   $03
              afea 0020  ld   $20
              afeb 00d0  ld   $d0
              afec 0010  ld   $10
              afed 0085  ld   $85
              afee 007b  ld   $7b
              afef 0084  ld   $84
              aff0 007c  ld   $7c
              aff1 0020  ld   $20
              aff2 00a2  ld   $a2
              aff3 0004  ld   $04
              aff4 00f0  ld   $f0
              aff5 0004  ld   $04
              aff6 00a2  ld   $a2
              aff7 0000  ld   $00
              aff8 00f0  ld   $f0
              aff9 0060  ld   $60
              affa 009a  ld   $9a
              affb fe00  bra  ac          ;+-----------------------------------+
              affc fcfd  bra  $affd       ;|                                   |
              affd 1418  ld   $18,y       ;| Trampoline for page $af00 lookups |
              affe e006  jmp  y,$06       ;|                                   |
              afff c218  st   [$18]       ;+-----------------------------------+
              b000 008a  ld   $8a
              b001 0018  ld   $18
              b002 0069  ld   $69
              b003 0004  ld   $04
              b004 0048  ld   $48
              b005 0069  ld   $69
              b006 0006  ld   $06
              b007 0085  ld   $85
              b008 0056  ld   $56
              b009 0068  ld   $68
              b00a 00a0  ld   $a0
              b00b 0000  ld   $00
              b00c 0020  ld   $20
              b00d 001a  ld   $1a
              b00e 001c  ld   $1c
              b00f 00ba  ld   $ba
              b010 00b5  ld   $b5
              b011 0009  ld   $09
              b012 0085  ld   $85
              b013 0099  ld   $99
              b014 00a5  ld   $a5
              b015 007b  ld   $7b
              b016 00a4  ld   $a4
              b017 007c  ld   $7c
              b018 0020  ld   $20
              b019 00df  ld   $df
              b01a 0018  ld   $18
              b01b 0020  ld   $20
              b01c 0048  ld   $48
              b01d 001c  ld   $1c
              b01e 00a0  ld   $a0
              b01f 0000  ld   $00
              b020 0020  ld   $20
              b021 00d5  ld   $d5
              b022 001c  ld   $1c
              b023 00ba  ld   $ba
              b024 0038  ld   $38
              b025 00f5  ld   $f5
              b026 0009  ld   $09
              b027 00f0  ld   $f0
              b028 0013  ld   $13
              b029 00b5  ld   $b5
              b02a 000f  ld   $0f
              b02b 0085  ld   $85
              b02c 006b  ld   $6b
              b02d 00b5  ld   $b5
              b02e 0010  ld   $10
              b02f 0085  ld   $85
              b030 006c  ld   $6c
              b031 00b5  ld   $b5
              b032 0012  ld   $12
              b033 0085  ld   $85
              b034 00a6  ld   $a6
              b035 00b5  ld   $b5
              b036 0011  ld   $11
              b037 0085  ld   $85
              b038 00a7  ld   $a7
              b039 004c  ld   $4c
              b03a 00ab  ld   $ab
              b03b 0008  ld   $08
              b03c 008a  ld   $8a
              b03d 0069  ld   $69
              b03e 0011  ld   $11
              b03f 00aa  ld   $aa
              b040 009a  ld   $9a
              b041 0020  ld   $20
              b042 0071  ld   $71
              b043 0022  ld   $22
              b044 00c9  ld   $c9
              b045 002c  ld   $2c
              b046 00d0  ld   $d0
              b047 00f1  ld   $f1
              b048 0020  ld   $20
              b049 006b  ld   $6b
              b04a 0022  ld   $22
              b04b 0020  ld   $20
              b04c 0097  ld   $97
              b04d 000d  ld   $0d
              b04e 0020  ld   $20
              b04f 000a  ld   $0a
              b050 000e  ld   $0e
              b051 0018  ld   $18
              b052 0024  ld   $24
              b053 0038  ld   $38
              b054 0024  ld   $24
              b055 003f  ld   $3f
              b056 0030  ld   $30
              b057 0003  ld   $03
              b058 000e  ld   $0e
              b059 0000  ld   $00
              b05a 0000  ld   $00
              b05b 00b0  ld   $b0
              b05c 0003  ld   $03
              b05d 0060  ld   $60
              b05e 00b0  ld   $b0
              b05f 00fd  ld   $fd
              b060 00a2  ld   $a2
              b061 00a3  ld   $a3
              b062 004c  ld   $4c
              b063 004a  ld   $4a
              b064 0005  ld   $05
              b065 00a6  ld   $a6
              b066 00a6  ld   $a6
              b067 00d0  ld   $d0
              b068 0002  ld   $02
              b069 00c6  ld   $c6
              b06a 00a7  ld   $a7
              b06b 00c6  ld   $c6
              b06c 00a6  ld   $a6
              b06d 00a2  ld   $a2
              b06e 0000  ld   $00
              b06f 0024  ld   $24
              b070 0048  ld   $48
              b071 008a  ld   $8a
              b072 0048  ld   $48
              b073 00a9  ld   $a9
              b074 0001  ld   $01
              b075 0020  ld   $20
              b076 000e  ld   $0e
              b077 0005  ld   $05
              b078 0020  ld   $20
              b079 00ef  ld   $ef
              b07a 000e  ld   $0e
              b07b 00a9  ld   $a9
              b07c 0000  ld   $00
              b07d 0085  ld   $85
              b07e 007f  ld   $7f
              b07f 0020  ld   $20
              b080 0071  ld   $71
              b081 0022  ld   $22
              b082 0038  ld   $38
              b083 00e9  ld   $e9
              b084 00ab  ld   $ab
              b085 0090  ld   $90
              b086 0017  ld   $17
              b087 00c9  ld   $c9
              b088 0003  ld   $03
              b089 00b0  ld   $b0
              b08a 0013  ld   $13
              b08b 00c9  ld   $c9
              b08c 0001  ld   $01
              b08d 002a  ld   $2a
              b08e 0049  ld   $49
              b08f 0001  ld   $01
              b090 0045  ld   $45
              b091 007f  ld   $7f
              b092 00c5  ld   $c5
              b093 007f  ld   $7f
              b094 0090  ld   $90
              b095 0061  ld   $61
              b096 0085  ld   $85
              b097 007f  ld   $7f
              b098 0020  ld   $20
              b099 006b  ld   $6b
              b09a 0022  ld   $22
              b09b 004c  ld   $4c
              b09c 0027  ld   $27
              b09d 000e  ld   $0e
              b09e 00a6  ld   $a6
              b09f 007f  ld   $7f
              b0a0 00d0  ld   $d0
              b0a1 002c  ld   $2c
              b0a2 00b0  ld   $b0
              b0a3 007b  ld   $7b
              b0a4 0069  ld   $69
              b0a5 0007  ld   $07
              b0a6 0090  ld   $90
              b0a7 0077  ld   $77
              b0a8 0065  ld   $65
              b0a9 003f  ld   $3f
              b0aa 00d0  ld   $d0
              b0ab 0003  ld   $03
              b0ac 004c  ld   $4c
              b0ad 0079  ld   $79
              b0ae 0016  ld   $16
              b0af 0069  ld   $69
              b0b0 00ff  ld   $ff
              b0b1 0085  ld   $85
              b0b2 0054  ld   $54
              b0b3 000a  ld   $0a
              b0b4 0065  ld   $65
              b0b5 0054  ld   $54
              b0b6 00a8  ld   $a8
              b0b7 0068  ld   $68
              b0b8 00d9  ld   $d9
              b0b9 0080  ld   $80
              b0ba 0002  ld   $02
              b0bb 00b0  ld   $b0
              b0bc 0067  ld   $67
              b0bd 0020  ld   $20
              b0be 00f9  ld   $f9
              b0bf 000d  ld   $0d
              b0c0 0048  ld   $48
              b0c1 0020  ld   $20
              b0c2 008c  ld   $8c
              b0c3 000e  ld   $0e
              b0c4 0068  ld   $68
              b0c5 00a4  ld   $a4
              b0c6 007d  ld   $7d
              b0c7 0010  ld   $10
              b0c8 0017  ld   $17
              b0c9 00aa  ld   $aa
              b0ca 00f0  ld   $f0
              b0cb 0056  ld   $56
              b0cc 00d0  ld   $d0
              b0cd 005f  ld   $5f
              b0ce 0046  ld   $46
              b0cf 003f  ld   $3f
              b0d0 008a  ld   $8a
              b0d1 002a  ld   $2a
              b0d2 00a6  ld   $a6
              b0d3 00a6  ld   $a6
              b0d4 00d0  ld   $d0
              b0d5 0002  ld   $02
              b0d6 00c6  ld   $c6
              b0d7 00a7  ld   $a7
              b0d8 00c6  ld   $c6
              b0d9 00a6  ld   $a6
              b0da 00a0  ld   $a0
              b0db 001b  ld   $1b
              b0dc 0085  ld   $85
              b0dd 007f  ld   $7f
              b0de 00d0  ld   $d0
              b0df 00d7  ld   $d7
              b0e0 00d9  ld   $d9
              b0e1 0080  ld   $80
              b0e2 0002  ld   $02
              b0e3 00b0  ld   $b0
              b0e4 0048  ld   $48
              b0e5 0090  ld   $90
              b0e6 00d9  ld   $d9
              b0e7 00b9  ld   $b9
              b0e8 0082  ld   $82
              b0e9 0002  ld   $02
              b0ea 0048  ld   $48
              b0eb 00b9  ld   $b9
              b0ec 0081  ld   $81
              b0ed 0002  ld   $02
              b0ee 0048  ld   $48
              b0ef 0020  ld   $20
              b0f0 009f  ld   $9f
              b0f1 000e  ld   $0e
              b0f2 00a5  ld   $a5
              b0f3 007f  ld   $7f
              b0f4 004c  ld   $4c
              b0f5 0015  ld   $15
              b0f6 000e  ld   $0e
              b0f7 004c  ld   $4c
              b0f8 006e  ld   $6e
              b0f9 000f  ld   $0f
              b0fa 00a5  ld   $a5
              b0fb fe00  bra  ac          ;+-----------------------------------+
              b0fc fcfd  bra  $b0fd       ;|                                   |
              b0fd 1418  ld   $18,y       ;| Trampoline for page $b000 lookups |
              b0fe e006  jmp  y,$06       ;|                                   |
              b0ff c218  st   [$18]       ;+-----------------------------------+
              b100 0099  ld   $99
              b101 00be  ld   $be
              b102 0080  ld   $80
              b103 0002  ld   $02
              b104 00a8  ld   $a8
              b105 0068  ld   $68
              b106 0085  ld   $85
              b107 0054  ld   $54
              b108 00e6  ld   $e6
              b109 0054  ld   $54
              b10a 0068  ld   $68
              b10b 0085  ld   $85
              b10c 0055  ld   $55
              b10d 0098  ld   $98
              b10e 0048  ld   $48
              b10f 0020  ld   $20
              b110 0093  ld   $93
              b111 001c  ld   $1c
              b112 00a5  ld   $a5
              b113 0098  ld   $98
              b114 0048  ld   $48
              b115 00a5  ld   $a5
              b116 0097  ld   $97
              b117 0048  ld   $48
              b118 00a5  ld   $a5
              b119 0096  ld   $96
              b11a 0048  ld   $48
              b11b 00a5  ld   $a5
              b11c 0095  ld   $95
              b11d 0048  ld   $48
              b11e 00a5  ld   $a5
              b11f 0094  ld   $94
              b120 0048  ld   $48
              b121 006c  ld   $6c
              b122 0054  ld   $54
              b123 0000  ld   $00
              b124 00a0  ld   $a0
              b125 00ff  ld   $ff
              b126 0068  ld   $68
              b127 00f0  ld   $f0
              b128 0023  ld   $23
              b129 00c9  ld   $c9
              b12a 0064  ld   $64
              b12b 00f0  ld   $f0
              b12c 0003  ld   $03
              b12d 0020  ld   $20
              b12e 00f9  ld   $f9
              b12f 000d  ld   $0d
              b130 0084  ld   $84
              b131 007d  ld   $7d
              b132 0068  ld   $68
              b133 004a  ld   $4a
              b134 0085  ld   $85
              b135 0044  ld   $44
              b136 0068  ld   $68
              b137 0085  ld   $85
              b138 009c  ld   $9c
              b139 0068  ld   $68
              b13a 0085  ld   $85
              b13b 009d  ld   $9d
              b13c 0068  ld   $68
              b13d 0085  ld   $85
              b13e 009e  ld   $9e
              b13f 0068  ld   $68
              b140 0085  ld   $85
              b141 009f  ld   $9f
              b142 0068  ld   $68
              b143 0085  ld   $85
              b144 00a0  ld   $a0
              b145 0068  ld   $68
              b146 0085  ld   $85
              b147 00a1  ld   $a1
              b148 0045  ld   $45
              b149 0099  ld   $99
              b14a 0085  ld   $85
              b14b 00a2  ld   $a2
              b14c 00a5  ld   $a5
              b14d 0094  ld   $94
              b14e 0060  ld   $60
              b14f 00a9  ld   $a9
              b150 0000  ld   $00
              b151 0085  ld   $85
              b152 003f  ld   $3f
              b153 0020  ld   $20
              b154 006b  ld   $6b
              b155 0022  ld   $22
              b156 00b0  ld   $b0
              b157 0003  ld   $03
              b158 004c  ld   $4c
              b159 006b  ld   $6b
              b15a 001d  ld   $1d
              b15b 0020  ld   $20
              b15c 005a  ld   $5a
              b15d 0011  ld   $11
              b15e 00b0  ld   $b0
              b15f 007a  ld   $7a
              b160 000f  ld   $0f
              b161 0000  ld   $00
              b162 0000  ld   $00
              b163 00c9  ld   $c9
              b164 00ff  ld   $ff
              b165 00d0  ld   $d0
              b166 000f  ld   $0f
              b167 00a9  ld   $a9
              b168 000e  ld   $0e
              b169 00a0  ld   $a0
              b16a 000f  ld   $0f
              b16b 0020  ld   $20
              b16c 001a  ld   $1a
              b16d 001c  ld   $1c
              b16e 004c  ld   $4c
              b16f 006b  ld   $6b
              b170 0022  ld   $22
              b171 0082  ld   $82
              b172 0049  ld   $49
              b173 000f  ld   $0f
              b174 00da  ld   $da
              b175 00a1  ld   $a1
              b176 00c9  ld   $c9
              b177 002e  ld   $2e
              b178 00f0  ld   $f0
              b179 00e1  ld   $e1
              b17a 00c9  ld   $c9
              b17b 00a5  ld   $a5
              b17c 00f0  ld   $f0
              b17d 0058  ld   $58
              b17e 00c9  ld   $c9
              b17f 00a4  ld   $a4
              b180 00f0  ld   $f0
              b181 00d4  ld   $d4
              b182 00c9  ld   $c9
              b183 0022  ld   $22
              b184 00d0  ld   $d0
              b185 000f  ld   $0f
              b186 00a5  ld   $a5
              b187 00a6  ld   $a6
              b188 00a4  ld   $a4
              b189 00a7  ld   $a7
              b18a 0069  ld   $69
              b18b 0000  ld   $00
              b18c 0090  ld   $90
              b18d 0001  ld   $01
              b18e 00c8  ld   $c8
              b18f 0020  ld   $20
              b190 00c3  ld   $c3
              b191 0014  ld   $14
              b192 004c  ld   $4c
              b193 001f  ld   $1f
              b194 0018  ld   $18
              b195 00c9  ld   $c9
              b196 00a2  ld   $a2
              b197 00d0  ld   $d0
              b198 0013  ld   $13
              b199 00a0  ld   $a0
              b19a 0018  ld   $18
              b19b 00d0  ld   $d0
              b19c 003b  ld   $3b
              b19d 0020  ld   $20
              b19e 00fd  ld   $fd
              b19f 0011  ld   $11
              b1a0 00a5  ld   $a5
              b1a1 0098  ld   $98
              b1a2 0049  ld   $49
              b1a3 00ff  ld   $ff
              b1a4 00a8  ld   $a8
              b1a5 00a5  ld   $a5
              b1a6 0097  ld   $97
              b1a7 0049  ld   $49
              b1a8 00ff  ld   $ff
              b1a9 004c  ld   $4c
              b1aa 00cc  ld   $cc
              b1ab 0013  ld   $13
              b1ac 00c9  ld   $c9
              b1ad 009f  ld   $9f
              b1ae 00d0  ld   $d0
              b1af 0003  ld   $03
              b1b0 004c  ld   $4c
              b1b1 0030  ld   $30
              b1b2 0014  ld   $14
              b1b3 00c9  ld   $c9
              b1b4 00ae  ld   $ae
              b1b5 0090  ld   $90
              b1b6 0003  ld   $03
              b1b7 004c  ld   $4c
              b1b8 00ec  ld   $ec
              b1b9 000f  ld   $0f
              b1ba 0020  ld   $20
              b1bb 0060  ld   $60
              b1bc 000f  ld   $0f
              b1bd 0020  ld   $20
              b1be 000a  ld   $0a
              b1bf 000e  ld   $0e
              b1c0 00a9  ld   $a9
              b1c1 0029  ld   $29
              b1c2 002c  ld   $2c
              b1c3 00a9  ld   $a9
              b1c4 0028  ld   $28
              b1c5 002c  ld   $2c
              b1c6 00a9  ld   $a9
              b1c7 002c  ld   $2c
              b1c8 00a0  ld   $a0
              b1c9 0000  ld   $00
              b1ca 00d1  ld   $d1
              b1cb 00a6  ld   $a6
              b1cc 00d0  ld   $d0
              b1cd 0003  ld   $03
              b1ce 004c  ld   $4c
              b1cf 006b  ld   $6b
              b1d0 0022  ld   $22
              b1d1 00a2  ld   $a2
              b1d2 0010  ld   $10
              b1d3 004c  ld   $4c
              b1d4 004a  ld   $4a
              b1d5 0005  ld   $05
              b1d6 00a0  ld   $a0
              b1d7 0015  ld   $15
              b1d8 0068  ld   $68
              b1d9 0068  ld   $68
              b1da 004c  ld   $4c
              b1db 0066  ld   $66
              b1dc 000e  ld   $0e
              b1dd 0020  ld   $20
              b1de 00d0  ld   $d0
              b1df 0010  ld   $10
              b1e0 0085  ld   $85
              b1e1 0097  ld   $97
              b1e2 0084  ld   $84
              b1e3 0098  ld   $98
              b1e4 00a5  ld   $a5
              b1e5 0077  ld   $77
              b1e6 00a4  ld   $a4
              b1e7 0078  ld   $78
              b1e8 00a6  ld   $a6
              b1e9 003f  ld   $3f
              b1ea 00f0  ld   $f0
              b1eb 0021  ld   $21
              b1ec 00a2  ld   $a2
              b1ed 0000  ld   $00
              b1ee 0086  ld   $86
              b1ef 00a3  ld   $a3
              b1f0 00c9  ld   $c9
              b1f1 0054  ld   $54
              b1f2 00d0  ld   $d0
              b1f3 0018  ld   $18
              b1f4 00c0  ld   $c0
              b1f5 00c9  ld   $c9
              b1f6 00d0  ld   $d0
              b1f7 0014  ld   $14
              b1f8 0020  ld   $20
              b1f9 0073  ld   $73
              b1fa 0004  ld   $04
              b1fb fe00  bra  ac          ;+-----------------------------------+
              b1fc fcfd  bra  $b1fd       ;|                                   |
              b1fd 1418  ld   $18,y       ;| Trampoline for page $b100 lookups |
              b1fe e006  jmp  y,$06       ;|                                   |
              b1ff c218  st   [$18]       ;+-----------------------------------+
              b200 0084  ld   $84
              b201 0091  ld   $91
              b202 0088  ld   $88
              b203 0084  ld   $84
              b204 00a4  ld   $a4
              b205 00a0  ld   $a0
              b206 0006  ld   $06
              b207 0084  ld   $84
              b208 0090  ld   $90
              b209 00a0  ld   $a0
              b20a 0024  ld   $24
              b20b 0020  ld   $20
              b20c 00e0  ld   $e0
              b20d 001e  ld   $1e
              b20e 004c  ld   $4c
              b20f 00ab  ld   $ab
              b210 0014  ld   $14
              b211 0060  ld   $60
              b212 00a6  ld   $a6
              b213 0040  ld   $40
              b214 0010  ld   $10
              b215 000d  ld   $0d
              b216 00a0  ld   $a0
              b217 0000  ld   $00
              b218 00b1  ld   $b1
              b219 0097  ld   $97
              b21a 00aa  ld   $aa
              b21b 00c8  ld   $c8
              b21c 00b1  ld   $b1
              b21d 0097  ld   $97
              b21e 00a8  ld   $a8
              b21f 008a  ld   $8a
              b220 004c  ld   $4c
              b221 00cc  ld   $cc
              b222 0013  ld   $13
              b223 00c9  ld   $c9
              b224 0054  ld   $54
              b225 00d0  ld   $d0
              b226 0019  ld   $19
              b227 00c0  ld   $c0
              b228 0049  ld   $49
              b229 00d0  ld   $d0
              b22a 0022  ld   $22
              b22b 0020  ld   $20
              b22c 0073  ld   $73
              b22d 0004  ld   $04
              b22e 0098  ld   $98
              b22f 00a2  ld   $a2
              b230 00a0  ld   $a0
              b231 004c  ld   $4c
              b232 00c7  ld   $c7
              b233 001c  ld   $1c
              b234 00a9  ld   $a9
              b235 00fe  ld   $fe
              b236 00a0  ld   $a0
              b237 0001  ld   $01
              b238 0078  ld   $78
              b239 0020  ld   $20
              b23a 001a  ld   $1a
              b23b 001c  ld   $1c
              b23c 0058  ld   $58
              b23d 0084  ld   $84
              b23e 0095  ld   $95
              b23f 0060  ld   $60
              b240 00c9  ld   $c9
              b241 0053  ld   $53
              b242 00d0  ld   $d0
              b243 0009  ld   $09
              b244 00c0  ld   $c0
              b245 0054  ld   $54
              b246 00d0  ld   $d0
              b247 0005  ld   $05
              b248 00a5  ld   $a5
              b249 0019  ld   $19
              b24a 004c  ld   $4c
              b24b 00b4  ld   $b4
              b24c 001c  ld   $1c
              b24d 00a5  ld   $a5
              b24e 0097  ld   $97
              b24f 00a4  ld   $a4
              b250 0098  ld   $98
              b251 004c  ld   $4c
              b252 001a  ld   $1a
              b253 001c  ld   $1c
              b254 000a  ld   $0a
              b255 0048  ld   $48
              b256 00aa  ld   $aa
              b257 0020  ld   $20
              b258 006b  ld   $6b
              b259 0022  ld   $22
              b25a 00e0  ld   $e0
              b25b 0083  ld   $83
              b25c 0090  ld   $90
              b25d 0020  ld   $20
              b25e 0020  ld   $20
              b25f 0060  ld   $60
              b260 000f  ld   $0f
              b261 0020  ld   $20
              b262 000a  ld   $0a
              b263 000e  ld   $0e
              b264 0020  ld   $20
              b265 0063  ld   $63
              b266 000f  ld   $0f
              b267 0020  ld   $20
              b268 0010  ld   $10
              b269 0000  ld   $00
              b26a 0000  ld   $00
              b26b 00fb  ld   $fb
              b26c 000d  ld   $0d
              b26d 0068  ld   $68
              b26e 00aa  ld   $aa
              b26f 00a5  ld   $a5
              b270 0098  ld   $98
              b271 0048  ld   $48
              b272 00a5  ld   $a5
              b273 0097  ld   $97
              b274 0048  ld   $48
              b275 008a  ld   $8a
              b276 0048  ld   $48
              b277 0020  ld   $20
              b278 00da  ld   $da
              b279 0017  ld   $17
              b27a 0068  ld   $68
              b27b 00a8  ld   $a8
              b27c 008a  ld   $8a
              b27d 0048  ld   $48
              b27e 004c  ld   $4c
              b27f 001b  ld   $1b
              b280 0010  ld   $10
              b281 0020  ld   $20
              b282 0057  ld   $57
              b283 000f  ld   $0f
              b284 0068  ld   $68
              b285 00a8  ld   $a8
              b286 00b9  ld   $b9
              b287 00f6  ld   $f6
              b288 0001  ld   $01
              b289 0085  ld   $85
              b28a 0088  ld   $88
              b28b 00b9  ld   $b9
              b28c 00f7  ld   $f7
              b28d 0001  ld   $01
              b28e 0085  ld   $85
              b28f 0089  ld   $89
              b290 0020  ld   $20
              b291 0087  ld   $87
              b292 0000  ld   $00
              b293 004c  ld   $4c
              b294 00f9  ld   $f9
              b295 000d  ld   $0d
              b296 00a0  ld   $a0
              b297 00ff  ld   $ff
              b298 002c  ld   $2c
              b299 00a0  ld   $a0
              b29a 0000  ld   $00
              b29b 0084  ld   $84
              b29c 003d  ld   $3d
              b29d 0020  ld   $20
              b29e 00fd  ld   $fd
              b29f 0011  ld   $11
              b2a0 00a5  ld   $a5
              b2a1 0097  ld   $97
              b2a2 0045  ld   $45
              b2a3 003d  ld   $3d
              b2a4 0085  ld   $85
              b2a5 003b  ld   $3b
              b2a6 00a5  ld   $a5
              b2a7 0098  ld   $98
              b2a8 0045  ld   $45
              b2a9 003d  ld   $3d
              b2aa 0085  ld   $85
              b2ab 003c  ld   $3c
              b2ac 0020  ld   $20
              b2ad 0074  ld   $74
              b2ae 001c  ld   $1c
              b2af 0020  ld   $20
              b2b0 00fd  ld   $fd
              b2b1 0011  ld   $11
              b2b2 00a5  ld   $a5
              b2b3 0098  ld   $98
              b2b4 0045  ld   $45
              b2b5 003d  ld   $3d
              b2b6 0025  ld   $25
              b2b7 003c  ld   $3c
              b2b8 0045  ld   $45
              b2b9 003d  ld   $3d
              b2ba 00a8  ld   $a8
              b2bb 00a5  ld   $a5
              b2bc 0097  ld   $97
              b2bd 0045  ld   $45
              b2be 003d  ld   $3d
              b2bf 0025  ld   $25
              b2c0 003b  ld   $3b
              b2c1 0045  ld   $45
              b2c2 003d  ld   $3d
              b2c3 004c  ld   $4c
              b2c4 00cc  ld   $cc
              b2c5 0013  ld   $13
              b2c6 0020  ld   $20
              b2c7 00fc  ld   $fc
              b2c8 000d  ld   $0d
              b2c9 00b0  ld   $b0
              b2ca 0013  ld   $13
              b2cb 00a5  ld   $a5
              b2cc 00a1  ld   $a1
              b2cd 0009  ld   $09
              b2ce 007f  ld   $7f
              b2cf 0025  ld   $25
              b2d0 009d  ld   $9d
              b2d1 0085  ld   $85
              b2d2 009d  ld   $9d
              b2d3 00a9  ld   $a9
              b2d4 009c  ld   $9c
              b2d5 00a0  ld   $a0
              b2d6 0000  ld   $00
              b2d7 0020  ld   $20
              b2d8 00d3  ld   $d3
              b2d9 001c  ld   $1c
              b2da 00aa  ld   $aa
              b2db 004c  ld   $4c
              b2dc 00a6  ld   $a6
              b2dd 0010  ld   $10
              b2de 00a9  ld   $a9
              b2df 0000  ld   $00
              b2e0 0085  ld   $85
              b2e1 003f  ld   $3f
              b2e2 00c6  ld   $c6
              b2e3 007f  ld   $7f
              b2e4 0020  ld   $20
              b2e5 00e2  ld   $e2
              b2e6 0016  ld   $16
              b2e7 0085  ld   $85
              b2e8 0094  ld   $94
              b2e9 0086  ld   $86
              b2ea 0095  ld   $95
              b2eb 0084  ld   $84
              b2ec 0096  ld   $96
              b2ed 00a5  ld   $a5
              b2ee 009f  ld   $9f
              b2ef 00a4  ld   $a4
              b2f0 00a0  ld   $a0
              b2f1 0020  ld   $20
              b2f2 00e6  ld   $e6
              b2f3 0016  ld   $16
              b2f4 0086  ld   $86
              b2f5 009f  ld   $9f
              b2f6 0084  ld   $84
              b2f7 00a0  ld   $a0
              b2f8 00aa  ld   $aa
              b2f9 0038  ld   $38
              b2fa 00e5  ld   $e5
              b2fb fe00  bra  ac          ;+-----------------------------------+
              b2fc fcfd  bra  $b2fd       ;|                                   |
              b2fd 1418  ld   $18,y       ;| Trampoline for page $b200 lookups |
              b2fe e006  jmp  y,$06       ;|                                   |
              b2ff c218  st   [$18]       ;+-----------------------------------+
              b300 0094  ld   $94
              b301 00f0  ld   $f0
              b302 0008  ld   $08
              b303 00a9  ld   $a9
              b304 0001  ld   $01
              b305 0090  ld   $90
              b306 0004  ld   $04
              b307 00a6  ld   $a6
              b308 0094  ld   $94
              b309 00a9  ld   $a9
              b30a 00ff  ld   $ff
              b30b 0085  ld   $85
              b30c 0099  ld   $99
              b30d 00a0  ld   $a0
              b30e 00ff  ld   $ff
              b30f 00e8  ld   $e8
              b310 00c8  ld   $c8
              b311 00ca  ld   $ca
              b312 00d0  ld   $d0
              b313 0007  ld   $07
              b314 00a6  ld   $a6
              b315 0099  ld   $99
              b316 0030  ld   $30
              b317 000f  ld   $0f
              b318 0018  ld   $18
              b319 0090  ld   $90
              b31a 000c  ld   $0c
              b31b 00b1  ld   $b1
              b31c 009f  ld   $9f
              b31d 00d1  ld   $d1
              b31e 0095  ld   $95
              b31f 00f0  ld   $f0
              b320 00ef  ld   $ef
              b321 00a2  ld   $a2
              b322 00ff  ld   $ff
              b323 00b0  ld   $b0
              b324 0002  ld   $02
              b325 00a2  ld   $a2
              b326 0001  ld   $01
              b327 00e8  ld   $e8
              b328 008a  ld   $8a
              b329 002a  ld   $2a
              b32a 0025  ld   $25
              b32b 0044  ld   $44
              b32c 00f0  ld   $f0
              b32d 0002  ld   $02
              b32e 00a9  ld   $a9
              b32f 00ff  ld   $ff
              b330 004c  ld   $4c
              b331 00b4  ld   $b4
              b332 001c  ld   $1c
              b333 0020  ld   $20
              b334 0063  ld   $63
              b335 000f  ld   $0f
              b336 00aa  ld   $aa
              b337 0020  ld   $20
              b338 00d5  ld   $d5
              b339 0010  ld   $10
              b33a 0020  ld   $20
              b33b 0071  ld   $71
              b33c 0022  ld   $22
              b33d 00d0  ld   $d0
              b33e 00f4  ld   $f4
              b33f 0060  ld   $60
              b340 00a2  ld   $a2
              b341 0000  ld   $00
              b342 0020  ld   $20
              b343 0071  ld   $71
              b344 0022  ld   $22
              b345 0086  ld   $86
              b346 003e  ld   $3e
              b347 0085  ld   $85
              b348 0077  ld   $77
              b349 0020  ld   $20
              b34a 0071  ld   $71
              b34b 0022  ld   $22
              b34c 0020  ld   $20
              b34d 005a  ld   $5a
              b34e 0011  ld   $11
              b34f 00b0  ld   $b0
              b350 0003  ld   $03
              b351 004c  ld   $4c
              b352 006e  ld   $6e
              b353 000f  ld   $0f
              b354 00a2  ld   $a2
              b355 0000  ld   $00
              b356 0086  ld   $86
              b357 003f  ld   $3f
              b358 0086  ld   $86
              b359 0040  ld   $40
              b35a 0020  ld   $20
              b35b 006b  ld   $6b
              b35c 0022  ld   $22
              b35d 0090  ld   $90
              b35e 0005  ld   $05
              b35f 0020  ld   $20
              b360 005a  ld   $5a
              b361 0011  ld   $11
              b362 0090  ld   $90
              b363 000b  ld   $0b
              b364 00aa  ld   $aa
              b365 0020  ld   $20
              b366 006b  ld   $6b
              b367 0022  ld   $22
              b368 0090  ld   $90
              b369 00fb  ld   $fb
              b36a 0020  ld   $20
              b36b 005a  ld   $5a
              b36c 0011  ld   $11
              b36d 00b0  ld   $b0
              b36e 00f6  ld   $f6
              b36f 00c9  ld   $c9
              b370 0011  ld   $11
              b371 0000  ld   $00
              b372 0000  ld   $00
              b373 0024  ld   $24
              b374 00d0  ld   $d0
              b375 0006  ld   $06
              b376 00a9  ld   $a9
              b377 00ff  ld   $ff
              b378 0085  ld   $85
              b379 003f  ld   $3f
              b37a 00d0  ld   $d0
              b37b 0010  ld   $10
              b37c 00c9  ld   $c9
              b37d 0025  ld   $25
              b37e 00d0  ld   $d0
              b37f 0013  ld   $13
              b380 00a5  ld   $a5
              b381 0042  ld   $42
              b382 00d0  ld   $d0
              b383 00d0  ld   $d0
              b384 00a9  ld   $a9
              b385 0080  ld   $80
              b386 0085  ld   $85
              b387 0040  ld   $40
              b388 0005  ld   $05
              b389 0077  ld   $77
              b38a 0085  ld   $85
              b38b 0077  ld   $77
              b38c 008a  ld   $8a
              b38d 0009  ld   $09
              b38e 0080  ld   $80
              b38f 00aa  ld   $aa
              b390 0020  ld   $20
              b391 006b  ld   $6b
              b392 0022  ld   $22
              b393 0086  ld   $86
              b394 0078  ld   $78
              b395 0038  ld   $38
              b396 0005  ld   $05
              b397 0042  ld   $42
              b398 00e9  ld   $e9
              b399 0028  ld   $28
              b39a 00d0  ld   $d0
              b39b 0003  ld   $03
              b39c 004c  ld   $4c
              b39d 000f  ld   $0f
              b39e 0012  ld   $12
              b39f 00a9  ld   $a9
              b3a0 0000  ld   $00
              b3a1 0085  ld   $85
              b3a2 0042  ld   $42
              b3a3 00a5  ld   $a5
              b3a4 005f  ld   $5f
              b3a5 00a6  ld   $a6
              b3a6 0060  ld   $60
              b3a7 00a0  ld   $a0
              b3a8 0000  ld   $00
              b3a9 0086  ld   $86
              b3aa 0093  ld   $93
              b3ab 0085  ld   $85
              b3ac 0092  ld   $92
              b3ad 00e4  ld   $e4
              b3ae 0062  ld   $62
              b3af 00d0  ld   $d0
              b3b0 0004  ld   $04
              b3b1 00c5  ld   $c5
              b3b2 0061  ld   $61
              b3b3 00f0  ld   $f0
              b3b4 0022  ld   $22
              b3b5 00a5  ld   $a5
              b3b6 0077  ld   $77
              b3b7 00d1  ld   $d1
              b3b8 0092  ld   $92
              b3b9 00d0  ld   $d0
              b3ba 0008  ld   $08
              b3bb 00a5  ld   $a5
              b3bc 0078  ld   $78
              b3bd 00c8  ld   $c8
              b3be 00d1  ld   $d1
              b3bf 0092  ld   $92
              b3c0 00f0  ld   $f0
              b3c1 007d  ld   $7d
              b3c2 0088  ld   $88
              b3c3 0018  ld   $18
              b3c4 00a5  ld   $a5
              b3c5 0092  ld   $92
              b3c6 0069  ld   $69
              b3c7 0007  ld   $07
              b3c8 0090  ld   $90
              b3c9 00e1  ld   $e1
              b3ca 00e8  ld   $e8
              b3cb 00d0  ld   $d0
              b3cc 00dc  ld   $dc
              b3cd 00c9  ld   $c9
              b3ce 0041  ld   $41
              b3cf 0090  ld   $90
              b3d0 0005  ld   $05
              b3d1 00e9  ld   $e9
              b3d2 005b  ld   $5b
              b3d3 0038  ld   $38
              b3d4 00e9  ld   $e9
              b3d5 00a5  ld   $a5
              b3d6 0060  ld   $60
              b3d7 0068  ld   $68
              b3d8 0048  ld   $48
              b3d9 00c9  ld   $c9
              b3da 007c  ld   $7c
              b3db 00d0  ld   $d0
              b3dc 0005  ld   $05
              b3dd 00a9  ld   $a9
              b3de 008b  ld   $8b
              b3df 00a0  ld   $a0
              b3e0 001f  ld   $1f
              b3e1 0060  ld   $60
              b3e2 00a5  ld   $a5
              b3e3 0077  ld   $77
              b3e4 00a4  ld   $a4
              b3e5 0078  ld   $78
              b3e6 00c9  ld   $c9
              b3e7 0054  ld   $54
              b3e8 00d0  ld   $d0
              b3e9 000b  ld   $0b
              b3ea 00c0  ld   $c0
              b3eb 00c9  ld   $c9
              b3ec 00f0  ld   $f0
              b3ed 00ef  ld   $ef
              b3ee 00c0  ld   $c0
              b3ef 0049  ld   $49
              b3f0 00d0  ld   $d0
              b3f1 0003  ld   $03
              b3f2 004c  ld   $4c
              b3f3 006e  ld   $6e
              b3f4 000f  ld   $0f
              b3f5 00c9  ld   $c9
              b3f6 0053  ld   $53
              b3f7 00d0  ld   $d0
              b3f8 0004  ld   $04
              b3f9 00c0  ld   $c0
              b3fa 0054  ld   $54
              b3fb fe00  bra  ac          ;+-----------------------------------+
              b3fc fcfd  bra  $b3fd       ;|                                   |
              b3fd 1418  ld   $18,y       ;| Trampoline for page $b300 lookups |
              b3fe e006  jmp  y,$06       ;|                                   |
              b3ff c218  st   [$18]       ;+-----------------------------------+
              b400 00f0  ld   $f0
              b401 00f5  ld   $f5
              b402 00a5  ld   $a5
              b403 0061  ld   $61
              b404 00a4  ld   $a4
              b405 0062  ld   $62
              b406 0085  ld   $85
              b407 0092  ld   $92
              b408 0084  ld   $84
              b409 0093  ld   $93
              b40a 00a5  ld   $a5
              b40b 0063  ld   $63
              b40c 00a4  ld   $a4
              b40d 0064  ld   $64
              b40e 0085  ld   $85
              b40f 008d  ld   $8d
              b410 0084  ld   $84
              b411 008e  ld   $8e
              b412 0018  ld   $18
              b413 0069  ld   $69
              b414 0007  ld   $07
              b415 0090  ld   $90
              b416 0001  ld   $01
              b417 00c8  ld   $c8
              b418 0085  ld   $85
              b419 008b  ld   $8b
              b41a 0084  ld   $84
              b41b 008c  ld   $8c
              b41c 0020  ld   $20
              b41d 00cb  ld   $cb
              b41e 0004  ld   $04
              b41f 00a5  ld   $a5
              b420 008b  ld   $8b
              b421 00a4  ld   $a4
              b422 008c  ld   $8c
              b423 00c8  ld   $c8
              b424 0085  ld   $85
              b425 0061  ld   $61
              b426 0084  ld   $84
              b427 0062  ld   $62
              b428 00a0  ld   $a0
              b429 0000  ld   $00
              b42a 00a5  ld   $a5
              b42b 0077  ld   $77
              b42c 0091  ld   $91
              b42d 0092  ld   $92
              b42e 00c8  ld   $c8
              b42f 00a5  ld   $a5
              b430 0078  ld   $78
              b431 0091  ld   $91
              b432 0092  ld   $92
              b433 00a9  ld   $a9
              b434 0000  ld   $00
              b435 00c8  ld   $c8
              b436 0091  ld   $91
              b437 0092  ld   $92
              b438 00c8  ld   $c8
              b439 0091  ld   $91
              b43a 0092  ld   $92
              b43b 00c8  ld   $c8
              b43c 0091  ld   $91
              b43d 0092  ld   $92
              b43e 00c8  ld   $c8
              b43f 0091  ld   $91
              b440 0092  ld   $92
              b441 00c8  ld   $c8
              b442 0091  ld   $91
              b443 0092  ld   $92
              b444 00a5  ld   $a5
              b445 0092  ld   $92
              b446 0018  ld   $18
              b447 0069  ld   $69
              b448 0002  ld   $02
              b449 00a4  ld   $a4
              b44a 0093  ld   $93
              b44b 0090  ld   $90
              b44c 0001  ld   $01
              b44d 00c8  ld   $c8
              b44e 0085  ld   $85
              b44f 0079  ld   $79
              b450 0084  ld   $84
              b451 007a  ld   $7a
              b452 0060  ld   $60
              b453 00a5  ld   $a5
              b454 003d  ld   $3d
              b455 000a  ld   $0a
              b456 0069  ld   $69
              b457 0005  ld   $05
              b458 0065  ld   $65
              b459 0092  ld   $92
              b45a 00a4  ld   $a4
              b45b 0093  ld   $93
              b45c 0090  ld   $90
              b45d 0001  ld   $01
              b45e 00c8  ld   $c8
              b45f 0085  ld   $85
              b460 008b  ld   $8b
              b461 0084  ld   $84
              b462 008c  ld   $8c
              b463 0060  ld   $60
              b464 0090  ld   $90
              b465 0080  ld   $80
              b466 0000  ld   $00
              b467 0000  ld   $00
              b468 0020  ld   $20
              b469 006b  ld   $6b
              b46a 0022  ld   $22
              b46b 0020  ld   $20
              b46c 000a  ld   $0a
              b46d 000e  ld   $0e
              b46e 0020  ld   $20
              b46f 00f9  ld   $f9
              b470 000d  ld   $0d
              b471 00a5  ld   $a5
              b472 0099  ld   $99
              b473 0030  ld   $30
              b474 000d  ld   $0d
              b475 00a5  ld   $a5
              b476 0094  ld   $94
              b477 00c9  ld   $c9
              b478 0012  ld   $12
              b479 0000  ld   $00
              b47a 0000  ld   $00
              b47b 0090  ld   $90
              b47c 0090  ld   $90
              b47d 0009  ld   $09
              b47e 00a9  ld   $a9
              b47f 00ec  ld   $ec
              b480 00a0  ld   $a0
              b481 0011  ld   $11
              b482 0020  ld   $20
              b483 00d3  ld   $d3
              b484 001c  ld   $1c
              b485 00d0  ld   $d0
              b486 0076  ld   $76
              b487 004c  ld   $4c
              b488 0013  ld   $13
              b489 001d  ld   $1d
              b48a 00a5  ld   $a5
              b48b 003e  ld   $3e
              b48c 0005  ld   $05
              b48d 0040  ld   $40
              b48e 0048  ld   $48
              b48f 00a5  ld   $a5
              b490 003f  ld   $3f
              b491 0048  ld   $48
              b492 00a0  ld   $a0
              b493 0000  ld   $00
              b494 0098  ld   $98
              b495 0048  ld   $48
              b496 00a5  ld   $a5
              b497 0078  ld   $78
              b498 0048  ld   $48
              b499 00a5  ld   $a5
              b49a 0077  ld   $77
              b49b 0048  ld   $48
              b49c 0020  ld   $20
              b49d 00f0  ld   $f0
              b49e 0011  ld   $11
              b49f 0068  ld   $68
              b4a0 0085  ld   $85
              b4a1 0077  ld   $77
              b4a2 0068  ld   $68
              b4a3 0085  ld   $85
              b4a4 0078  ld   $78
              b4a5 0068  ld   $68
              b4a6 00a8  ld   $a8
              b4a7 00ba  ld   $ba
              b4a8 00b5  ld   $b5
              b4a9 0002  ld   $02
              b4aa 0048  ld   $48
              b4ab 00b5  ld   $b5
              b4ac 0001  ld   $01
              b4ad 0048  ld   $48
              b4ae 00a5  ld   $a5
              b4af 0097  ld   $97
              b4b0 0095  ld   $95
              b4b1 0002  ld   $02
              b4b2 00a5  ld   $a5
              b4b3 0098  ld   $98
              b4b4 0095  ld   $95
              b4b5 0001  ld   $01
              b4b6 00c8  ld   $c8
              b4b7 0020  ld   $20
              b4b8 0071  ld   $71
              b4b9 0022  ld   $22
              b4ba 00c9  ld   $c9
              b4bb 002c  ld   $2c
              b4bc 00f0  ld   $f0
              b4bd 00d6  ld   $d6
              b4be 0084  ld   $84
              b4bf 003d  ld   $3d
              b4c0 0020  ld   $20
              b4c1 005d  ld   $5d
              b4c2 000f  ld   $0f
              b4c3 0068  ld   $68
              b4c4 0085  ld   $85
              b4c5 003f  ld   $3f
              b4c6 0068  ld   $68
              b4c7 0085  ld   $85
              b4c8 0040  ld   $40
              b4c9 0029  ld   $29
              b4ca 007f  ld   $7f
              b4cb 0085  ld   $85
              b4cc 003e  ld   $3e
              b4cd 00a6  ld   $a6
              b4ce 0061  ld   $61
              b4cf 00a5  ld   $a5
              b4d0 0062  ld   $62
              b4d1 0086  ld   $86
              b4d2 0092  ld   $92
              b4d3 0085  ld   $85
              b4d4 0093  ld   $93
              b4d5 00c5  ld   $c5
              b4d6 0064  ld   $64
              b4d7 00d0  ld   $d0
              b4d8 0004  ld   $04
              b4d9 00e4  ld   $e4
              b4da 0063  ld   $63
              b4db 00f0  ld   $f0
              b4dc 0039  ld   $39
              b4dd 00a0  ld   $a0
              b4de 0000  ld   $00
              b4df 00b1  ld   $b1
              b4e0 0092  ld   $92
              b4e1 00c8  ld   $c8
              b4e2 00c5  ld   $c5
              b4e3 0077  ld   $77
              b4e4 00d0  ld   $d0
              b4e5 0006  ld   $06
              b4e6 00a5  ld   $a5
              b4e7 0078  ld   $78
              b4e8 00d1  ld   $d1
              b4e9 0092  ld   $92
              b4ea 00f0  ld   $f0
              b4eb 0016  ld   $16
              b4ec 00c8  ld   $c8
              b4ed 00b1  ld   $b1
              b4ee 0092  ld   $92
              b4ef 0018  ld   $18
              b4f0 0065  ld   $65
              b4f1 0092  ld   $92
              b4f2 00aa  ld   $aa
              b4f3 00c8  ld   $c8
              b4f4 00b1  ld   $b1
              b4f5 0092  ld   $92
              b4f6 0065  ld   $65
              b4f7 0093  ld   $93
              b4f8 0090  ld   $90
              b4f9 00d7  ld   $d7
              b4fa 00a2  ld   $a2
              b4fb fe00  bra  ac          ;+-----------------------------------+
              b4fc fcfd  bra  $b4fd       ;|                                   |
              b4fd 1418  ld   $18,y       ;| Trampoline for page $b400 lookups |
              b4fe e006  jmp  y,$06       ;|                                   |
              b4ff c218  st   [$18]       ;+-----------------------------------+
              b500 006b  ld   $6b
              b501 002c  ld   $2c
              b502 00a2  ld   $a2
              b503 0035  ld   $35
              b504 004c  ld   $4c
              b505 004a  ld   $4a
              b506 0005  ld   $05
              b507 00a2  ld   $a2
              b508 0078  ld   $78
              b509 00a5  ld   $a5
              b50a 003e  ld   $3e
              b50b 00d0  ld   $d0
              b50c 00f7  ld   $f7
              b50d 0020  ld   $20
              b50e 00db  ld   $db
              b50f 0011  ld   $11
              b510 00a5  ld   $a5
              b511 003d  ld   $3d
              b512 00a0  ld   $a0
              b513 0004  ld   $04
              b514 00d1  ld   $d1
              b515 0092  ld   $92
              b516 00d0  ld   $d0
              b517 00e7  ld   $e7
              b518 004c  ld   $4c
              b519 0025  ld   $25
              b51a 0013  ld   $13
              b51b 0020  ld   $20
              b51c 00db  ld   $db
              b51d 0011  ld   $11
              b51e 0020  ld   $20
              b51f 001b  ld   $1b
              b520 0005  ld   $05
              b521 00a9  ld   $a9
              b522 0000  ld   $00
              b523 00a8  ld   $a8
              b524 0085  ld   $85
              b525 00a5  ld   $a5
              b526 00a2  ld   $a2
              b527 0005  ld   $05
              b528 00a5  ld   $a5
              b529 0077  ld   $77
              b52a 0091  ld   $91
              b52b 0092  ld   $92
              b52c 0010  ld   $10
              b52d 0001  ld   $01
              b52e 00ca  ld   $ca
              b52f 00c8  ld   $c8
              b530 00a5  ld   $a5
              b531 0078  ld   $78
              b532 0091  ld   $91
              b533 0092  ld   $92
              b534 0010  ld   $10
              b535 0002  ld   $02
              b536 00ca  ld   $ca
              b537 00ca  ld   $ca
              b538 0086  ld   $86
              b539 00a4  ld   $a4
              b53a 00a5  ld   $a5
              b53b 003d  ld   $3d
              b53c 00c8  ld   $c8
              b53d 00c8  ld   $c8
              b53e 00c8  ld   $c8
              b53f 0091  ld   $91
              b540 0092  ld   $92
              b541 00a2  ld   $a2
              b542 000b  ld   $0b
              b543 00a9  ld   $a9
              b544 0000  ld   $00
              b545 0024  ld   $24
              b546 003e  ld   $3e
              b547 0050  ld   $50
              b548 0008  ld   $08
              b549 0068  ld   $68
              b54a 0018  ld   $18
              b54b 0069  ld   $69
              b54c 0001  ld   $01
              b54d 00aa  ld   $aa
              b54e 0068  ld   $68
              b54f 0069  ld   $69
              b550 0000  ld   $00
              b551 00c8  ld   $c8
              b552 0091  ld   $91
              b553 0092  ld   $92
              b554 00c8  ld   $c8
              b555 008a  ld   $8a
              b556 0091  ld   $91
              b557 0092  ld   $92
              b558 0020  ld   $20
              b559 0087  ld   $87
              b55a 0013  ld   $13
              b55b 0086  ld   $86
              b55c 00a4  ld   $a4
              b55d 0085  ld   $85
              b55e 00a5  ld   $a5
              b55f 00a4  ld   $a4
              b560 0054  ld   $54
              b561 00c6  ld   $c6
              b562 003d  ld   $3d
              b563 00d0  ld   $d0
              b564 00dc  ld   $dc
              b565 0065  ld   $65
              b566 008c  ld   $8c
              b567 00b0  ld   $b0
              b568 005d  ld   $5d
              b569 0085  ld   $85
              b56a 008c  ld   $8c
              b56b 00a8  ld   $a8
              b56c 008a  ld   $8a
              b56d 0065  ld   $65
              b56e 008b  ld   $8b
              b56f 0090  ld   $90
              b570 0003  ld   $03
              b571 00c8  ld   $c8
              b572 00f0  ld   $f0
              b573 0052  ld   $52
              b574 0020  ld   $20
              b575 001b  ld   $1b
              b576 0005  ld   $05
              b577 0085  ld   $85
              b578 0063  ld   $63
              b579 0084  ld   $84
              b57a 0064  ld   $64
              b57b 00a9  ld   $a9
              b57c 0000  ld   $00
              b57d 00e6  ld   $e6
              b57e 00a5  ld   $a5
              b57f 00a4  ld   $a4
              b580 0013  ld   $13
              b581 0000  ld   $00
              b582 0000  ld   $00
              b583 00a4  ld   $a4
              b584 00f0  ld   $f0
              b585 0005  ld   $05
              b586 0088  ld   $88
              b587 0091  ld   $91
              b588 008b  ld   $8b
              b589 00d0  ld   $d0
              b58a 00fb  ld   $fb
              b58b 00c6  ld   $c6
              b58c 008c  ld   $8c
              b58d 00c6  ld   $c6
              b58e 00a5  ld   $a5
              b58f 00d0  ld   $d0
              b590 00f5  ld   $f5
              b591 00e6  ld   $e6
              b592 008c  ld   $8c
              b593 0038  ld   $38
              b594 00a5  ld   $a5
              b595 0063  ld   $63
              b596 00e5  ld   $e5
              b597 0092  ld   $92
              b598 00a0  ld   $a0
              b599 0002  ld   $02
              b59a 0091  ld   $91
              b59b 0092  ld   $92
              b59c 00a5  ld   $a5
              b59d 0064  ld   $64
              b59e 00c8  ld   $c8
              b59f 00e5  ld   $e5
              b5a0 0093  ld   $93
              b5a1 0091  ld   $91
              b5a2 0092  ld   $92
              b5a3 00a5  ld   $a5
              b5a4 003e  ld   $3e
              b5a5 00d0  ld   $d0
              b5a6 0062  ld   $62
              b5a7 00c8  ld   $c8
              b5a8 00b1  ld   $b1
              b5a9 0092  ld   $92
              b5aa 0085  ld   $85
              b5ab 003d  ld   $3d
              b5ac 00a9  ld   $a9
              b5ad 0000  ld   $00
              b5ae 0085  ld   $85
              b5af 00a4  ld   $a4
              b5b0 0085  ld   $85
              b5b1 00a5  ld   $a5
              b5b2 00c8  ld   $c8
              b5b3 0068  ld   $68
              b5b4 00aa  ld   $aa
              b5b5 0085  ld   $85
              b5b6 0097  ld   $97
              b5b7 0068  ld   $68
              b5b8 0085  ld   $85
              b5b9 0098  ld   $98
              b5ba 00d1  ld   $d1
              b5bb 0092  ld   $92
              b5bc 0090  ld   $90
              b5bd 000e  ld   $0e
              b5be 00d0  ld   $d0
              b5bf 0006  ld   $06
              b5c0 00c8  ld   $c8
              b5c1 008a  ld   $8a
              b5c2 00d1  ld   $d1
              b5c3 0092  ld   $92
              b5c4 0090  ld   $90
              b5c5 0007  ld   $07
              b5c6 004c  ld   $4c
              b5c7 007f  ld   $7f
              b5c8 0012  ld   $12
              b5c9 004c  ld   $4c
              b5ca 0048  ld   $48
              b5cb 0005  ld   $05
              b5cc 00c8  ld   $c8
              b5cd 00a5  ld   $a5
              b5ce 00a5  ld   $a5
              b5cf 0005  ld   $05
              b5d0 00a4  ld   $a4
              b5d1 0018  ld   $18
              b5d2 00f0  ld   $f0
              b5d3 000a  ld   $0a
              b5d4 0020  ld   $20
              b5d5 0087  ld   $87
              b5d6 0013  ld   $13
              b5d7 008a  ld   $8a
              b5d8 0065  ld   $65
              b5d9 0097  ld   $97
              b5da 00aa  ld   $aa
              b5db 0098  ld   $98
              b5dc 00a4  ld   $a4
              b5dd 0054  ld   $54
              b5de 0065  ld   $65
              b5df 0098  ld   $98
              b5e0 0086  ld   $86
              b5e1 00a4  ld   $a4
              b5e2 00c6  ld   $c6
              b5e3 003d  ld   $3d
              b5e4 00d0  ld   $d0
              b5e5 00ca  ld   $ca
              b5e6 0085  ld   $85
              b5e7 00a5  ld   $a5
              b5e8 00a2  ld   $a2
              b5e9 0005  ld   $05
              b5ea 00a5  ld   $a5
              b5eb 0077  ld   $77
              b5ec 0010  ld   $10
              b5ed 0001  ld   $01
              b5ee 00ca  ld   $ca
              b5ef 00a5  ld   $a5
              b5f0 0078  ld   $78
              b5f1 0010  ld   $10
              b5f2 0002  ld   $02
              b5f3 00ca  ld   $ca
              b5f4 00ca  ld   $ca
              b5f5 0086  ld   $86
              b5f6 005a  ld   $5a
              b5f7 00a9  ld   $a9
              b5f8 0000  ld   $00
              b5f9 0020  ld   $20
              b5fa 0090  ld   $90
              b5fb fe00  bra  ac          ;+-----------------------------------+
              b5fc fcfd  bra  $b5fd       ;|                                   |
              b5fd 1418  ld   $18,y       ;| Trampoline for page $b500 lookups |
              b5fe e006  jmp  y,$06       ;|                                   |
              b5ff c218  st   [$18]       ;+-----------------------------------+
              b600 0013  ld   $13
              b601 008a  ld   $8a
              b602 0065  ld   $65
              b603 008b  ld   $8b
              b604 0085  ld   $85
              b605 0079  ld   $79
              b606 0098  ld   $98
              b607 0065  ld   $65
              b608 008c  ld   $8c
              b609 0085  ld   $85
              b60a 007a  ld   $7a
              b60b 00a8  ld   $a8
              b60c 00a5  ld   $a5
              b60d 0079  ld   $79
              b60e 0060  ld   $60
              b60f 0084  ld   $84
              b610 0054  ld   $54
              b611 00b1  ld   $b1
              b612 0092  ld   $92
              b613 0085  ld   $85
              b614 005a  ld   $5a
              b615 0088  ld   $88
              b616 00b1  ld   $b1
              b617 0092  ld   $92
              b618 0085  ld   $85
              b619 005b  ld   $5b
              b61a 00a9  ld   $a9
              b61b 0010  ld   $10
              b61c 0085  ld   $85
              b61d 0090  ld   $90
              b61e 00a2  ld   $a2
              b61f 0000  ld   $00
              b620 00a0  ld   $a0
              b621 0000  ld   $00
              b622 008a  ld   $8a
              b623 000a  ld   $0a
              b624 00aa  ld   $aa
              b625 0098  ld   $98
              b626 002a  ld   $2a
              b627 00a8  ld   $a8
              b628 00b0  ld   $b0
              b629 00a4  ld   $a4
              b62a 0006  ld   $06
              b62b 00a4  ld   $a4
              b62c 0026  ld   $26
              b62d 00a5  ld   $a5
              b62e 0090  ld   $90
              b62f 000b  ld   $0b
              b630 0018  ld   $18
              b631 008a  ld   $8a
              b632 0065  ld   $65
              b633 005a  ld   $5a
              b634 00aa  ld   $aa
              b635 0098  ld   $98
              b636 0065  ld   $65
              b637 005b  ld   $5b
              b638 00a8  ld   $a8
              b639 00b0  ld   $b0
              b63a 0093  ld   $93
              b63b 00c6  ld   $c6
              b63c 0090  ld   $90
              b63d 00d0  ld   $d0
              b63e 00e3  ld   $e3
              b63f 0060  ld   $60
              b640 00a5  ld   $a5
              b641 003f  ld   $3f
              b642 00f0  ld   $f0
              b643 0003  ld   $03
              b644 0020  ld   $20
              b645 00e2  ld   $e2
              b646 0016  ld   $16
              b647 0020  ld   $20
              b648 0062  ld   $62
              b649 0015  ld   $15
              b64a 0038  ld   $38
              b64b 00a5  ld   $a5
              b64c 0065  ld   $65
              b64d 00e5  ld   $e5
              b64e 0063  ld   $63
              b64f 00a8  ld   $a8
              b650 00a5  ld   $a5
              b651 0066  ld   $66
              b652 00e5  ld   $e5
              b653 0064  ld   $64
              b654 00a2  ld   $a2
              b655 0000  ld   $00
              b656 0086  ld   $86
              b657 003f  ld   $3f
              b658 0085  ld   $85
              b659 0095  ld   $95
              b65a 0084  ld   $84
              b65b 0096  ld   $96
              b65c 00a2  ld   $a2
              b65d 0090  ld   $90
              b65e 004c  ld   $4c
              b65f 00bc  ld   $bc
              b660 001c  ld   $1c
              b661 00a5  ld   $a5
              b662 0030  ld   $30
              b663 0020  ld   $20
              b664 007a  ld   $7a
              b665 0004  ld   $04
              b666 00a9  ld   $a9
              b667 0000  ld   $00
              b668 00f0  ld   $f0
              b669 00ea  ld   $ea
              b66a 00a6  ld   $a6
              b66b 006c  ld   $6c
              b66c 00e8  ld   $e8
              b66d 00d0  ld   $d0
              b66e 009f  ld   $9f
              b66f 00a2  ld   $a2
              b670 0095  ld   $95
              b671 002c  ld   $2c
              b672 00a2  ld   $a2
              b673 00e0  ld   $e0
              b674 004c  ld   $4c
              b675 004a  ld   $4a
              b676 0005  ld   $05
              b677 0020  ld   $20
              b678 001d  ld   $1d
              b679 0014  ld   $14
              b67a 0020  ld   $20
              b67b 00e2  ld   $e2
              b67c 0013  ld   $13
              b67d 0020  ld   $20
              b67e 0060  ld   $60
              b67f 000f  ld   $0f
              b680 00a9  ld   $a9
              b681 0080  ld   $80
              b682 0085  ld   $85
              b683 0042  ld   $42
              b684 0020  ld   $20
              b685 00d0  ld   $d0
              b686 0010  ld   $10
              b687 0020  ld   $20
              b688 0014  ld   $14
              b689 0000  ld   $00
              b68a 0000  ld   $00
              b68b 00f9  ld   $f9
              b68c 000d  ld   $0d
              b68d 0020  ld   $20
              b68e 005d  ld   $5d
              b68f 000f  ld   $0f
              b690 00a9  ld   $a9
              b691 00ac  ld   $ac
              b692 0020  ld   $20
              b693 0065  ld   $65
              b694 000f  ld   $0f
              b695 0048  ld   $48
              b696 00a5  ld   $a5
              b697 007a  ld   $7a
              b698 0048  ld   $48
              b699 00a5  ld   $a5
              b69a 0079  ld   $79
              b69b 0048  ld   $48
              b69c 00a5  ld   $a5
              b69d 00a7  ld   $a7
              b69e 0048  ld   $48
              b69f 00a5  ld   $a5
              b6a0 00a6  ld   $a6
              b6a1 0048  ld   $48
              b6a2 0020  ld   $20
              b6a3 00e7  ld   $e7
              b6a4 0009  ld   $09
              b6a5 004c  ld   $4c
              b6a6 008b  ld   $8b
              b6a7 0014  ld   $14
              b6a8 00a9  ld   $a9
              b6a9 009f  ld   $9f
              b6aa 0020  ld   $20
              b6ab 0065  ld   $65
              b6ac 000f  ld   $0f
              b6ad 0009  ld   $09
              b6ae 0080  ld   $80
              b6af 0085  ld   $85
              b6b0 0042  ld   $42
              b6b1 0020  ld   $20
              b6b2 00d7  ld   $d7
              b6b3 0010  ld   $10
              b6b4 0085  ld   $85
              b6b5 0081  ld   $81
              b6b6 0084  ld   $84
              b6b7 0082  ld   $82
              b6b8 004c  ld   $4c
              b6b9 00f9  ld   $f9
              b6ba 000d  ld   $0d
              b6bb 0020  ld   $20
              b6bc 001d  ld   $1d
              b6bd 0014  ld   $14
              b6be 00a5  ld   $a5
              b6bf 0082  ld   $82
              b6c0 0048  ld   $48
              b6c1 00a5  ld   $a5
              b6c2 0081  ld   $81
              b6c3 0048  ld   $48
              b6c4 0020  ld   $20
              b6c5 0057  ld   $57
              b6c6 000f  ld   $0f
              b6c7 0020  ld   $20
              b6c8 00f9  ld   $f9
              b6c9 000d  ld   $0d
              b6ca 0068  ld   $68
              b6cb 0085  ld   $85
              b6cc 0081  ld   $81
              b6cd 0068  ld   $68
              b6ce 0085  ld   $85
              b6cf 0082  ld   $82
              b6d0 00a0  ld   $a0
              b6d1 0002  ld   $02
              b6d2 00b1  ld   $b1
              b6d3 0081  ld   $81
              b6d4 0085  ld   $85
              b6d5 0079  ld   $79
              b6d6 00aa  ld   $aa
              b6d7 00c8  ld   $c8
              b6d8 00b1  ld   $b1
              b6d9 0081  ld   $81
              b6da 00f0  ld   $f0
              b6db 0099  ld   $99
              b6dc 0085  ld   $85
              b6dd 007a  ld   $7a
              b6de 00c8  ld   $c8
              b6df 00b1  ld   $b1
              b6e0 0079  ld   $79
              b6e1 0048  ld   $48
              b6e2 0088  ld   $88
              b6e3 0010  ld   $10
              b6e4 00fa  ld   $fa
              b6e5 00a4  ld   $a4
              b6e6 007a  ld   $7a
              b6e7 0020  ld   $20
              b6e8 004c  ld   $4c
              b6e9 001c  ld   $1c
              b6ea 00a5  ld   $a5
              b6eb 00a7  ld   $a7
              b6ec 0048  ld   $48
              b6ed 00a5  ld   $a5
              b6ee 00a6  ld   $a6
              b6ef 0048  ld   $48
              b6f0 00b1  ld   $b1
              b6f1 0081  ld   $81
              b6f2 0085  ld   $85
              b6f3 00a6  ld   $a6
              b6f4 00c8  ld   $c8
              b6f5 00b1  ld   $b1
              b6f6 0081  ld   $81
              b6f7 0085  ld   $85
              b6f8 00a7  ld   $a7
              b6f9 00a5  ld   $a5
              b6fa 007a  ld   $7a
              b6fb fe00  bra  ac          ;+-----------------------------------+
              b6fc fcfd  bra  $b6fd       ;|                                   |
              b6fd 1418  ld   $18,y       ;| Trampoline for page $b600 lookups |
              b6fe e006  jmp  y,$06       ;|                                   |
              b6ff c218  st   [$18]       ;+-----------------------------------+
              b700 0048  ld   $48
              b701 00a5  ld   $a5
              b702 0079  ld   $79
              b703 0048  ld   $48
              b704 0020  ld   $20
              b705 00f6  ld   $f6
              b706 000d  ld   $0d
              b707 0068  ld   $68
              b708 0085  ld   $85
              b709 0081  ld   $81
              b70a 0068  ld   $68
              b70b 0085  ld   $85
              b70c 0082  ld   $82
              b70d 0020  ld   $20
              b70e 0071  ld   $71
              b70f 0022  ld   $22
              b710 00f0  ld   $f0
              b711 0003  ld   $03
              b712 004c  ld   $4c
              b713 006e  ld   $6e
              b714 000f  ld   $0f
              b715 0068  ld   $68
              b716 0085  ld   $85
              b717 00a6  ld   $a6
              b718 0068  ld   $68
              b719 0085  ld   $85
              b71a 00a7  ld   $a7
              b71b 00a0  ld   $a0
              b71c 0000  ld   $00
              b71d 0068  ld   $68
              b71e 0091  ld   $91
              b71f 0081  ld   $81
              b720 0068  ld   $68
              b721 00c8  ld   $c8
              b722 0091  ld   $91
              b723 0081  ld   $81
              b724 0068  ld   $68
              b725 00c8  ld   $c8
              b726 0091  ld   $91
              b727 0081  ld   $81
              b728 0068  ld   $68
              b729 00c8  ld   $c8
              b72a 0091  ld   $91
              b72b 0081  ld   $81
              b72c 0068  ld   $68
              b72d 00c8  ld   $c8
              b72e 0091  ld   $91
              b72f 0081  ld   $81
              b730 0060  ld   $60
              b731 0020  ld   $20
              b732 00f9  ld   $f9
              b733 000d  ld   $0d
              b734 00a0  ld   $a0
              b735 0000  ld   $00
              b736 0020  ld   $20
              b737 0057  ld   $57
              b738 001e  ld   $1e
              b739 0068  ld   $68
              b73a 0068  ld   $68
              b73b 00a9  ld   $a9
              b73c 0004  ld   $04
              b73d 00a0  ld   $a0
              b73e 0002  ld   $02
              b73f 00d0  ld   $d0
              b740 0012  ld   $12
              b741 00a6  ld   $a6
              b742 0097  ld   $97
              b743 00a4  ld   $a4
              b744 0098  ld   $98
              b745 0086  ld   $86
              b746 0083  ld   $83
              b747 0084  ld   $84
              b748 0084  ld   $84
              b749 0020  ld   $20
              b74a 0030  ld   $30
              b74b 0015  ld   $15
              b74c 0086  ld   $86
              b74d 0095  ld   $95
              b74e 0084  ld   $84
              b74f 0096  ld   $96
              b750 0085  ld   $85
              b751 0094  ld   $94
              b752 0060  ld   $60
              b753 00a2  ld   $a2
              b754 0022  ld   $22
              b755 0086  ld   $86
              b756 003b  ld   $3b
              b757 0086  ld   $86
              b758 003c  ld   $3c
              b759 0085  ld   $85
              b75a 00a2  ld   $a2
              b75b 0084  ld   $84
              b75c 00a3  ld   $a3
              b75d 0085  ld   $85
              b75e 0095  ld   $95
              b75f 0084  ld   $84
              b760 0096  ld   $96
              b761 00a0  ld   $a0
              b762 00ff  ld   $ff
              b763 00c8  ld   $c8
              b764 00b1  ld   $b1
              b765 00a2  ld   $a2
              b766 00f0  ld   $f0
              b767 000c  ld   $0c
              b768 00c5  ld   $c5
              b769 003b  ld   $3b
              b76a 00f0  ld   $f0
              b76b 0004  ld   $04
              b76c 00c5  ld   $c5
              b76d 003c  ld   $3c
              b76e 00d0  ld   $d0
              b76f 00f3  ld   $f3
              b770 00c9  ld   $c9
              b771 0022  ld   $22
              b772 00f0  ld   $f0
              b773 0001  ld   $01
              b774 0018  ld   $18
              b775 0084  ld   $84
              b776 0094  ld   $94
              b777 0098  ld   $98
              b778 0065  ld   $65
              b779 00a2  ld   $a2
              b77a 0085  ld   $85
              b77b 00a4  ld   $a4
              b77c 00a6  ld   $a6
              b77d 00a3  ld   $a3
              b77e 0090  ld   $90
              b77f 0001  ld   $01
              b780 00e8  ld   $e8
              b781 0086  ld   $86
              b782 00a5  ld   $a5
              b783 00a5  ld   $a5
              b784 00a3  ld   $a3
              b785 00f0  ld   $f0
              b786 0004  ld   $04
              b787 00c9  ld   $c9
              b788 0024  ld   $24
              b789 00d0  ld   $d0
              b78a 000b  ld   $0b
              b78b 0098  ld   $98
              b78c 0020  ld   $20
              b78d 00b1  ld   $b1
              b78e 0014  ld   $14
              b78f 00a6  ld   $a6
              b790 0015  ld   $15
              b791 0000  ld   $00
              b792 0000  ld   $00
              b793 00a2  ld   $a2
              b794 00a4  ld   $a4
              b795 00a3  ld   $a3
              b796 0020  ld   $20
              b797 00c4  ld   $c4
              b798 0016  ld   $16
              b799 00a6  ld   $a6
              b79a 0048  ld   $48
              b79b 00e0  ld   $e0
              b79c 0054  ld   $54
              b79d 00d0  ld   $d0
              b79e 0005  ld   $05
              b79f 00a2  ld   $a2
              b7a0 00bf  ld   $bf
              b7a1 004c  ld   $4c
              b7a2 004a  ld   $4a
              b7a3 0005  ld   $05
              b7a4 00a5  ld   $a5
              b7a5 0094  ld   $94
              b7a6 0095  ld   $95
              b7a7 0000  ld   $00
              b7a8 00a5  ld   $a5
              b7a9 0095  ld   $95
              b7aa 0095  ld   $95
              b7ab 0001  ld   $01
              b7ac 00a5  ld   $a5
              b7ad 0096  ld   $96
              b7ae 0095  ld   $95
              b7af 0002  ld   $02
              b7b0 00a0  ld   $a0
              b7b1 0000  ld   $00
              b7b2 0086  ld   $86
              b7b3 0097  ld   $97
              b7b4 0084  ld   $84
              b7b5 0098  ld   $98
              b7b6 0084  ld   $84
              b7b7 00a3  ld   $a3
              b7b8 0088  ld   $88
              b7b9 0084  ld   $84
              b7ba 003f  ld   $3f
              b7bb 0086  ld   $86
              b7bc 0049  ld   $49
              b7bd 00e8  ld   $e8
              b7be 00e8  ld   $e8
              b7bf 00e8  ld   $e8
              b7c0 0086  ld   $86
              b7c1 0048  ld   $48
              b7c2 0060  ld   $60
              b7c3 0046  ld   $46
              b7c4 0041  ld   $41
              b7c5 0048  ld   $48
              b7c6 0049  ld   $49
              b7c7 00ff  ld   $ff
              b7c8 0038  ld   $38
              b7c9 0065  ld   $65
              b7ca 0065  ld   $65
              b7cb 00a4  ld   $a4
              b7cc 0066  ld   $66
              b7cd 00b0  ld   $b0
              b7ce 0001  ld   $01
              b7cf 0088  ld   $88
              b7d0 00c4  ld   $c4
              b7d1 0064  ld   $64
              b7d2 0090  ld   $90
              b7d3 0011  ld   $11
              b7d4 00d0  ld   $d0
              b7d5 0004  ld   $04
              b7d6 00c5  ld   $c5
              b7d7 0063  ld   $63
              b7d8 0090  ld   $90
              b7d9 000b  ld   $0b
              b7da 0085  ld   $85
              b7db 0065  ld   $65
              b7dc 0084  ld   $84
              b7dd 0066  ld   $66
              b7de 0085  ld   $85
              b7df 0067  ld   $67
              b7e0 0084  ld   $84
              b7e1 0068  ld   $68
              b7e2 00aa  ld   $aa
              b7e3 0068  ld   $68
              b7e4 0060  ld   $60
              b7e5 00a2  ld   $a2
              b7e6 004d  ld   $4d
              b7e7 00a5  ld   $a5
              b7e8 0041  ld   $41
              b7e9 0030  ld   $30
              b7ea 00b6  ld   $b6
              b7eb 0020  ld   $20
              b7ec 0062  ld   $62
              b7ed 0015  ld   $15
              b7ee 00a9  ld   $a9
              b7ef 0080  ld   $80
              b7f0 0085  ld   $85
              b7f1 0041  ld   $41
              b7f2 0068  ld   $68
              b7f3 00d0  ld   $d0
              b7f4 00d0  ld   $d0
              b7f5 00a6  ld   $a6
              b7f6 0069  ld   $69
              b7f7 00a5  ld   $a5
              b7f8 006a  ld   $6a
              b7f9 0086  ld   $86
              b7fa 0065  ld   $65
              b7fb fe00  bra  ac          ;+-----------------------------------+
              b7fc fcfd  bra  $b7fd       ;|                                   |
              b7fd 1418  ld   $18,y       ;| Trampoline for page $b700 lookups |
              b7fe e006  jmp  y,$06       ;|                                   |
              b7ff c218  st   [$18]       ;+-----------------------------------+
              b800 0085  ld   $85
              b801 0066  ld   $66
              b802 00a0  ld   $a0
              b803 0000  ld   $00
              b804 0084  ld   $84
              b805 0082  ld   $82
              b806 0084  ld   $84
              b807 0081  ld   $81
              b808 00a5  ld   $a5
              b809 0063  ld   $63
              b80a 00a6  ld   $a6
              b80b 0064  ld   $64
              b80c 0085  ld   $85
              b80d 0092  ld   $92
              b80e 0086  ld   $86
              b80f 0093  ld   $93
              b810 00a9  ld   $a9
              b811 004b  ld   $4b
              b812 00a2  ld   $a2
              b813 0000  ld   $00
              b814 0085  ld   $85
              b815 0054  ld   $54
              b816 0086  ld   $86
              b817 0055  ld   $55
              b818 00c5  ld   $c5
              b819 0048  ld   $48
              b81a 00f0  ld   $f0
              b81b 0005  ld   $05
              b81c 0020  ld   $20
              b81d 0003  ld   $03
              b81e 0016  ld   $16
              b81f 00f0  ld   $f0
              b820 00f7  ld   $f7
              b821 00a9  ld   $a9
              b822 0007  ld   $07
              b823 0085  ld   $85
              b824 0086  ld   $86
              b825 00a5  ld   $a5
              b826 005f  ld   $5f
              b827 00a6  ld   $a6
              b828 0060  ld   $60
              b829 0085  ld   $85
              b82a 0054  ld   $54
              b82b 0086  ld   $86
              b82c 0055  ld   $55
              b82d 00e4  ld   $e4
              b82e 0062  ld   $62
              b82f 00d0  ld   $d0
              b830 0004  ld   $04
              b831 00c5  ld   $c5
              b832 0061  ld   $61
              b833 00f0  ld   $f0
              b834 0005  ld   $05
              b835 0020  ld   $20
              b836 00f9  ld   $f9
              b837 0015  ld   $15
              b838 00f0  ld   $f0
              b839 00f3  ld   $f3
              b83a 0085  ld   $85
              b83b 008b  ld   $8b
              b83c 0086  ld   $86
              b83d 008c  ld   $8c
              b83e 00a9  ld   $a9
              b83f 0003  ld   $03
              b840 0085  ld   $85
              b841 0086  ld   $86
              b842 00a5  ld   $a5
              b843 008b  ld   $8b
              b844 00a6  ld   $a6
              b845 008c  ld   $8c
              b846 00e4  ld   $e4
              b847 0064  ld   $64
              b848 00d0  ld   $d0
              b849 0007  ld   $07
              b84a 00c5  ld   $c5
              b84b 0063  ld   $63
              b84c 00d0  ld   $d0
              b84d 0003  ld   $03
              b84e 004c  ld   $4c
              b84f 0042  ld   $42
              b850 0016  ld   $16
              b851 0085  ld   $85
              b852 0054  ld   $54
              b853 0086  ld   $86
              b854 0055  ld   $55
              b855 00a0  ld   $a0
              b856 0000  ld   $00
              b857 00b1  ld   $b1
              b858 0054  ld   $54
              b859 00aa  ld   $aa
              b85a 00c8  ld   $c8
              b85b 00b1  ld   $b1
              b85c 0054  ld   $54
              b85d 0008  ld   $08
              b85e 00c8  ld   $c8
              b85f 00b1  ld   $b1
              b860 0054  ld   $54
              b861 0065  ld   $65
              b862 008b  ld   $8b
              b863 0085  ld   $85
              b864 008b  ld   $8b
              b865 00c8  ld   $c8
              b866 00b1  ld   $b1
              b867 0054  ld   $54
              b868 0065  ld   $65
              b869 008c  ld   $8c
              b86a 0085  ld   $85
              b86b 008c  ld   $8c
              b86c 0028  ld   $28
              b86d 0010  ld   $10
              b86e 00d3  ld   $d3
              b86f 008a  ld   $8a
              b870 0030  ld   $30
              b871 00d0  ld   $d0
              b872 00c8  ld   $c8
              b873 00b1  ld   $b1
              b874 0054  ld   $54
              b875 00a0  ld   $a0
              b876 0000  ld   $00
              b877 000a  ld   $0a
              b878 0069  ld   $69
              b879 0005  ld   $05
              b87a 0065  ld   $65
              b87b 0054  ld   $54
              b87c 0085  ld   $85
              b87d 0054  ld   $54
              b87e 0090  ld   $90
              b87f 0002  ld   $02
              b880 00e6  ld   $e6
              b881 0055  ld   $55
              b882 00a6  ld   $a6
              b883 0055  ld   $55
              b884 00e4  ld   $e4
              b885 008c  ld   $8c
              b886 00d0  ld   $d0
              b887 0004  ld   $04
              b888 00c5  ld   $c5
              b889 008b  ld   $8b
              b88a 00f0  ld   $f0
              b88b 00ba  ld   $ba
              b88c 0020  ld   $20
              b88d 0003  ld   $03
              b88e 0016  ld   $16
              b88f 00f0  ld   $f0
              b890 00f3  ld   $f3
              b891 00b1  ld   $b1
              b892 0054  ld   $54
              b893 0030  ld   $30
              b894 0035  ld   $35
              b895 00c8  ld   $c8
              b896 00b1  ld   $b1
              b897 0054  ld   $54
              b898 0016  ld   $16
              b899 0000  ld   $00
              b89a 0000  ld   $00
              b89b 0010  ld   $10
              b89c 0030  ld   $30
              b89d 00c8  ld   $c8
              b89e 00b1  ld   $b1
              b89f 0054  ld   $54
              b8a0 00f0  ld   $f0
              b8a1 002b  ld   $2b
              b8a2 00c8  ld   $c8
              b8a3 00b1  ld   $b1
              b8a4 0054  ld   $54
              b8a5 00aa  ld   $aa
              b8a6 00c8  ld   $c8
              b8a7 00b1  ld   $b1
              b8a8 0054  ld   $54
              b8a9 00c5  ld   $c5
              b8aa 0066  ld   $66
              b8ab 0090  ld   $90
              b8ac 0006  ld   $06
              b8ad 00d0  ld   $d0
              b8ae 001e  ld   $1e
              b8af 00e4  ld   $e4
              b8b0 0065  ld   $65
              b8b1 00b0  ld   $b0
              b8b2 001a  ld   $1a
              b8b3 00c5  ld   $c5
              b8b4 0093  ld   $93
              b8b5 0090  ld   $90
              b8b6 0016  ld   $16
              b8b7 00d0  ld   $d0
              b8b8 0004  ld   $04
              b8b9 00e4  ld   $e4
              b8ba 0092  ld   $92
              b8bb 0090  ld   $90
              b8bc 0010  ld   $10
              b8bd 0086  ld   $86
              b8be 0092  ld   $92
              b8bf 0085  ld   $85
              b8c0 0093  ld   $93
              b8c1 00a5  ld   $a5
              b8c2 0054  ld   $54
              b8c3 00a6  ld   $a6
              b8c4 0055  ld   $55
              b8c5 0085  ld   $85
              b8c6 0081  ld   $81
              b8c7 0086  ld   $86
              b8c8 0082  ld   $82
              b8c9 00a5  ld   $a5
              b8ca 0086  ld   $86
              b8cb 0085  ld   $85
              b8cc 0088  ld   $88
              b8cd 00a5  ld   $a5
              b8ce 0086  ld   $86
              b8cf 0018  ld   $18
              b8d0 0065  ld   $65
              b8d1 0054  ld   $54
              b8d2 0085  ld   $85
              b8d3 0054  ld   $54
              b8d4 0090  ld   $90
              b8d5 0002  ld   $02
              b8d6 00e6  ld   $e6
              b8d7 0055  ld   $55
              b8d8 00a6  ld   $a6
              b8d9 0055  ld   $55
              b8da 00a0  ld   $a0
              b8db 0000  ld   $00
              b8dc 0060  ld   $60
              b8dd 00a5  ld   $a5
              b8de 0082  ld   $82
              b8df 0005  ld   $05
              b8e0 0081  ld   $81
              b8e1 00f0  ld   $f0
              b8e2 00f5  ld   $f5
              b8e3 00a5  ld   $a5
              b8e4 0088  ld   $88
              b8e5 0029  ld   $29
              b8e6 0004  ld   $04
              b8e7 004a  ld   $4a
              b8e8 00a8  ld   $a8
              b8e9 0085  ld   $85
              b8ea 0088  ld   $88
              b8eb 00b1  ld   $b1
              b8ec 0081  ld   $81
              b8ed 0065  ld   $65
              b8ee 0092  ld   $92
              b8ef 0085  ld   $85
              b8f0 008d  ld   $8d
              b8f1 00a5  ld   $a5
              b8f2 0093  ld   $93
              b8f3 0069  ld   $69
              b8f4 0000  ld   $00
              b8f5 0085  ld   $85
              b8f6 008e  ld   $8e
              b8f7 00a5  ld   $a5
              b8f8 0065  ld   $65
              b8f9 00a6  ld   $a6
              b8fa 0066  ld   $66
              b8fb fe00  bra  ac          ;+-----------------------------------+
              b8fc fcfd  bra  $b8fd       ;|                                   |
              b8fd 1418  ld   $18,y       ;| Trampoline for page $b800 lookups |
              b8fe e006  jmp  y,$06       ;|                                   |
              b8ff c218  st   [$18]       ;+-----------------------------------+
              b900 0085  ld   $85
              b901 008b  ld   $8b
              b902 0086  ld   $86
              b903 008c  ld   $8c
              b904 0020  ld   $20
              b905 00d2  ld   $d2
              b906 0004  ld   $04
              b907 00a4  ld   $a4
              b908 0088  ld   $88
              b909 00c8  ld   $c8
              b90a 00a5  ld   $a5
              b90b 008b  ld   $8b
              b90c 0091  ld   $91
              b90d 0081  ld   $81
              b90e 00aa  ld   $aa
              b90f 00e6  ld   $e6
              b910 008c  ld   $8c
              b911 00a5  ld   $a5
              b912 008c  ld   $8c
              b913 00c8  ld   $c8
              b914 0091  ld   $91
              b915 0081  ld   $81
              b916 004c  ld   $4c
              b917 0066  ld   $66
              b918 0015  ld   $15
              b919 00a5  ld   $a5
              b91a 0098  ld   $98
              b91b 0048  ld   $48
              b91c 00a5  ld   $a5
              b91d 0097  ld   $97
              b91e 0048  ld   $48
              b91f 0020  ld   $20
              b920 00ef  ld   $ef
              b921 000e  ld   $0e
              b922 0020  ld   $20
              b923 00fb  ld   $fb
              b924 000d  ld   $0d
              b925 0068  ld   $68
              b926 0085  ld   $85
              b927 00a2  ld   $a2
              b928 0068  ld   $68
              b929 0085  ld   $85
              b92a 00a3  ld   $a3
              b92b 00a0  ld   $a0
              b92c 0000  ld   $00
              b92d 00b1  ld   $b1
              b92e 00a2  ld   $a2
              b92f 0018  ld   $18
              b930 0071  ld   $71
              b931 0097  ld   $97
              b932 0090  ld   $90
              b933 0005  ld   $05
              b934 00a2  ld   $a2
              b935 00b0  ld   $b0
              b936 004c  ld   $4c
              b937 004a  ld   $4a
              b938 0005  ld   $05
              b939 0020  ld   $20
              b93a 00b1  ld   $b1
              b93b 0014  ld   $14
              b93c 0020  ld   $20
              b93d 00b6  ld   $b6
              b93e 0016  ld   $16
              b93f 00a5  ld   $a5
              b940 0083  ld   $83
              b941 00a4  ld   $a4
              b942 0084  ld   $84
              b943 0020  ld   $20
              b944 00e6  ld   $e6
              b945 0016  ld   $16
              b946 0020  ld   $20
              b947 00c8  ld   $c8
              b948 0016  ld   $16
              b949 00a5  ld   $a5
              b94a 00a2  ld   $a2
              b94b 00a4  ld   $a4
              b94c 00a3  ld   $a3
              b94d 0020  ld   $20
              b94e 00e6  ld   $e6
              b94f 0016  ld   $16
              b950 0020  ld   $20
              b951 0006  ld   $06
              b952 0015  ld   $15
              b953 004c  ld   $4c
              b954 0024  ld   $24
              b955 000e  ld   $0e
              b956 00a0  ld   $a0
              b957 0000  ld   $00
              b958 00b1  ld   $b1
              b959 00a2  ld   $a2
              b95a 0048  ld   $48
              b95b 00c8  ld   $c8
              b95c 00b1  ld   $b1
              b95d 00a2  ld   $a2
              b95e 00aa  ld   $aa
              b95f 00c8  ld   $c8
              b960 00b1  ld   $b1
              b961 00a2  ld   $a2
              b962 00a8  ld   $a8
              b963 0068  ld   $68
              b964 0086  ld   $86
              b965 0054  ld   $54
              b966 0084  ld   $84
              b967 0055  ld   $55
              b968 00a8  ld   $a8
              b969 00f0  ld   $f0
              b96a 000a  ld   $0a
              b96b 0048  ld   $48
              b96c 0088  ld   $88
              b96d 00b1  ld   $b1
              b96e 0054  ld   $54
              b96f 0091  ld   $91
              b970 0067  ld   $67
              b971 0098  ld   $98
              b972 00d0  ld   $d0
              b973 00f8  ld   $f8
              b974 0068  ld   $68
              b975 0018  ld   $18
              b976 0065  ld   $65
              b977 0067  ld   $67
              b978 0085  ld   $85
              b979 0067  ld   $67
              b97a 0090  ld   $90
              b97b 0002  ld   $02
              b97c 00e6  ld   $e6
              b97d 0068  ld   $68
              b97e 0060  ld   $60
              b97f 0020  ld   $20
              b980 00fb  ld   $fb
              b981 000d  ld   $0d
              b982 00a5  ld   $a5
              b983 0097  ld   $97
              b984 00a4  ld   $a4
              b985 0098  ld   $98
              b986 0085  ld   $85
              b987 0054  ld   $54
              b988 0084  ld   $84
              b989 0055  ld   $55
              b98a 0020  ld   $20
              b98b 0017  ld   $17
              b98c 0017  ld   $17
              b98d 0008  ld   $08
              b98e 00a0  ld   $a0
              b98f 0000  ld   $00
              b990 00b1  ld   $b1
              b991 0054  ld   $54
              b992 0048  ld   $48
              b993 00c8  ld   $c8
              b994 00b1  ld   $b1
              b995 0054  ld   $54
              b996 00aa  ld   $aa
              b997 00c8  ld   $c8
              b998 00b1  ld   $b1
              b999 0054  ld   $54
              b99a 00a8  ld   $a8
              b99b 0068  ld   $68
              b99c 0028  ld   $28
              b99d 00d0  ld   $d0
              b99e 0013  ld   $13
              b99f 00c4  ld   $c4
              b9a0 0017  ld   $17
              b9a1 0000  ld   $00
              b9a2 0000  ld   $00
              b9a3 0066  ld   $66
              b9a4 00d0  ld   $d0
              b9a5 000f  ld   $0f
              b9a6 00e4  ld   $e4
              b9a7 0065  ld   $65
              b9a8 00d0  ld   $d0
              b9a9 000b  ld   $0b
              b9aa 0048  ld   $48
              b9ab 0018  ld   $18
              b9ac 0065  ld   $65
              b9ad 0065  ld   $65
              b9ae 0085  ld   $85
              b9af 0065  ld   $65
              b9b0 0090  ld   $90
              b9b1 0002  ld   $02
              b9b2 00e6  ld   $e6
              b9b3 0066  ld   $66
              b9b4 0068  ld   $68
              b9b5 0086  ld   $86
              b9b6 0054  ld   $54
              b9b7 0084  ld   $84
              b9b8 0055  ld   $55
              b9b9 0060  ld   $60
              b9ba 00c4  ld   $c4
              b9bb 004a  ld   $4a
              b9bc 00d0  ld   $d0
              b9bd 000c  ld   $0c
              b9be 00c5  ld   $c5
              b9bf 0049  ld   $49
              b9c0 00d0  ld   $d0
              b9c1 0008  ld   $08
              b9c2 0085  ld   $85
              b9c3 0048  ld   $48
              b9c4 00e9  ld   $e9
              b9c5 0003  ld   $03
              b9c6 0085  ld   $85
              b9c7 0049  ld   $49
              b9c8 00a0  ld   $a0
              b9c9 0000  ld   $00
              b9ca 0060  ld   $60
              b9cb 0020  ld   $20
              b9cc 00dd  ld   $dd
              b9cd 0017  ld   $17
              b9ce 008a  ld   $8a
              b9cf 0048  ld   $48
              b9d0 00a9  ld   $a9
              b9d1 0001  ld   $01
              b9d2 0020  ld   $20
              b9d3 00b9  ld   $b9
              b9d4 0014  ld   $14
              b9d5 0068  ld   $68
              b9d6 00a0  ld   $a0
              b9d7 0000  ld   $00
              b9d8 0091  ld   $91
              b9d9 0095  ld   $95
              b9da 0068  ld   $68
              b9db 0068  ld   $68
              b9dc 004c  ld   $4c
              b9dd 0006  ld   $06
              b9de 0015  ld   $15
              b9df 0020  ld   $20
              b9e0 009d  ld   $9d
              b9e1 0017  ld   $17
              b9e2 00d1  ld   $d1
              b9e3 0083  ld   $83
              b9e4 0098  ld   $98
              b9e5 0090  ld   $90
              b9e6 0004  ld   $04
              b9e7 00b1  ld   $b1
              b9e8 0083  ld   $83
              b9e9 00aa  ld   $aa
              b9ea 0098  ld   $98
              b9eb 0048  ld   $48
              b9ec 008a  ld   $8a
              b9ed 0048  ld   $48
              b9ee 0020  ld   $20
              b9ef 00b9  ld   $b9
              b9f0 0014  ld   $14
              b9f1 00a5  ld   $a5
              b9f2 0083  ld   $83
              b9f3 00a4  ld   $a4
              b9f4 0084  ld   $84
              b9f5 0020  ld   $20
              b9f6 00e6  ld   $e6
              b9f7 0016  ld   $16
              b9f8 0068  ld   $68
              b9f9 00a8  ld   $a8
              b9fa 0068  ld   $68
              b9fb fe00  bra  ac          ;+-----------------------------------+
              b9fc fcfd  bra  $b9fd       ;|                                   |
              b9fd 1418  ld   $18,y       ;| Trampoline for page $b900 lookups |
              b9fe e006  jmp  y,$06       ;|                                   |
              b9ff c218  st   [$18]       ;+-----------------------------------+
              ba00 0018  ld   $18
              ba01 0065  ld   $65
              ba02 0054  ld   $54
              ba03 0085  ld   $85
              ba04 0054  ld   $54
              ba05 0090  ld   $90
              ba06 0002  ld   $02
              ba07 00e6  ld   $e6
              ba08 0055  ld   $55
              ba09 0098  ld   $98
              ba0a 0020  ld   $20
              ba0b 00c8  ld   $c8
              ba0c 0016  ld   $16
              ba0d 004c  ld   $4c
              ba0e 0006  ld   $06
              ba0f 0015  ld   $15
              ba10 0020  ld   $20
              ba11 009d  ld   $9d
              ba12 0017  ld   $17
              ba13 0018  ld   $18
              ba14 00f1  ld   $f1
              ba15 0083  ld   $83
              ba16 0049  ld   $49
              ba17 00ff  ld   $ff
              ba18 004c  ld   $4c
              ba19 0042  ld   $42
              ba1a 0017  ld   $17
              ba1b 00a9  ld   $a9
              ba1c 00ff  ld   $ff
              ba1d 0085  ld   $85
              ba1e 0098  ld   $98
              ba1f 0020  ld   $20
              ba20 0071  ld   $71
              ba21 0022  ld   $22
              ba22 00c9  ld   $c9
              ba23 0029  ld   $29
              ba24 00f0  ld   $f0
              ba25 0006  ld   $06
              ba26 0020  ld   $20
              ba27 0063  ld   $63
              ba28 000f  ld   $0f
              ba29 0020  ld   $20
              ba2a 00da  ld   $da
              ba2b 0017  ld   $17
              ba2c 0020  ld   $20
              ba2d 009d  ld   $9d
              ba2e 0017  ld   $17
              ba2f 00f0  ld   $f0
              ba30 004b  ld   $4b
              ba31 00ca  ld   $ca
              ba32 008a  ld   $8a
              ba33 0048  ld   $48
              ba34 0018  ld   $18
              ba35 00a2  ld   $a2
              ba36 0000  ld   $00
              ba37 00f1  ld   $f1
              ba38 0083  ld   $83
              ba39 00b0  ld   $b0
              ba3a 00b6  ld   $b6
              ba3b 0049  ld   $49
              ba3c 00ff  ld   $ff
              ba3d 00c5  ld   $c5
              ba3e 0098  ld   $98
              ba3f 0090  ld   $90
              ba40 00b1  ld   $b1
              ba41 00a5  ld   $a5
              ba42 0098  ld   $98
              ba43 00b0  ld   $b0
              ba44 00ad  ld   $ad
              ba45 0020  ld   $20
              ba46 005d  ld   $5d
              ba47 000f  ld   $0f
              ba48 0068  ld   $68
              ba49 00a8  ld   $a8
              ba4a 0068  ld   $68
              ba4b 0085  ld   $85
              ba4c 0088  ld   $88
              ba4d 0068  ld   $68
              ba4e 0068  ld   $68
              ba4f 0068  ld   $68
              ba50 00aa  ld   $aa
              ba51 0068  ld   $68
              ba52 0085  ld   $85
              ba53 0083  ld   $83
              ba54 0068  ld   $68
              ba55 0085  ld   $85
              ba56 0084  ld   $84
              ba57 00a5  ld   $a5
              ba58 0088  ld   $88
              ba59 0048  ld   $48
              ba5a 0098  ld   $98
              ba5b 0048  ld   $48
              ba5c 00a0  ld   $a0
              ba5d 0000  ld   $00
              ba5e 008a  ld   $8a
              ba5f 0060  ld   $60
              ba60 0020  ld   $20
              ba61 00be  ld   $be
              ba62 0017  ld   $17
              ba63 004c  ld   $4c
              ba64 00de  ld   $de
              ba65 0013  ld   $13
              ba66 0020  ld   $20
              ba67 00df  ld   $df
              ba68 0016  ld   $16
              ba69 00a2  ld   $a2
              ba6a 0000  ld   $00
              ba6b 0086  ld   $86
              ba6c 003f  ld   $3f
              ba6d 00a8  ld   $a8
              ba6e 0060  ld   $60
              ba6f 0020  ld   $20
              ba70 00be  ld   $be
              ba71 0017  ld   $17
              ba72 00f0  ld   $f0
              ba73 0008  ld   $08
              ba74 00a0  ld   $a0
              ba75 0000  ld   $00
              ba76 00b1  ld   $b1
              ba77 0054  ld   $54
              ba78 00a8  ld   $a8
              ba79 004c  ld   $4c
              ba7a 00de  ld   $de
              ba7b 0013  ld   $13
              ba7c 004c  ld   $4c
              ba7d 0082  ld   $82
              ba7e 0012  ld   $12
              ba7f 0020  ld   $20
              ba80 006b  ld   $6b
              ba81 0022  ld   $22
              ba82 0020  ld   $20
              ba83 00f6  ld   $f6
              ba84 000d  ld   $0d
              ba85 0020  ld   $20
              ba86 00f6  ld   $f6
              ba87 0011  ld   $11
              ba88 00a6  ld   $a6
              ba89 0097  ld   $97
              ba8a 00d0  ld   $d0
              ba8b 00f0  ld   $f0
              ba8c 00a6  ld   $a6
              ba8d 0098  ld   $98
              ba8e 004c  ld   $4c
              ba8f 0071  ld   $71
              ba90 0022  ld   $22
              ba91 0020  ld   $20
              ba92 00be  ld   $be
              ba93 0017  ld   $17
              ba94 00d0  ld   $d0
              ba95 0003  ld   $03
              ba96 004c  ld   $4c
              ba97 006f  ld   $6f
              ba98 0019  ld   $19
              ba99 00a6  ld   $a6
              ba9a 00a6  ld   $a6
              ba9b 00a4  ld   $a4
              ba9c 00a7  ld   $a7
              ba9d 0086  ld   $86
              ba9e 00a4  ld   $a4
              ba9f 0084  ld   $84
              baa0 00a5  ld   $a5
              baa1 00a6  ld   $a6
              baa2 0054  ld   $54
              baa3 0086  ld   $86
              baa4 00a6  ld   $a6
              baa5 0018  ld   $18
              baa6 0065  ld   $65
              baa7 0054  ld   $54
              baa8 0018  ld   $18
              baa9 0000  ld   $00
              baaa 0000  ld   $00
              baab 0085  ld   $85
              baac 0056  ld   $56
              baad 00a6  ld   $a6
              baae 0055  ld   $55
              baaf 0086  ld   $86
              bab0 00a7  ld   $a7
              bab1 0090  ld   $90
              bab2 0001  ld   $01
              bab3 00e8  ld   $e8
              bab4 0086  ld   $86
              bab5 0057  ld   $57
              bab6 00a0  ld   $a0
              bab7 0000  ld   $00
              bab8 00b1  ld   $b1
              bab9 0056  ld   $56
              baba 0048  ld   $48
              babb 00a9  ld   $a9
              babc 0000  ld   $00
              babd 0091  ld   $91
              babe 0056  ld   $56
              babf 0020  ld   $20
              bac0 0071  ld   $71
              bac1 0022  ld   $22
              bac2 0020  ld   $20
              bac3 006b  ld   $6b
              bac4 001d  ld   $1d
              bac5 0068  ld   $68
              bac6 00a0  ld   $a0
              bac7 0000  ld   $00
              bac8 0091  ld   $91
              bac9 0056  ld   $56
              baca 00a6  ld   $a6
              bacb 00a4  ld   $a4
              bacc 00a4  ld   $a4
              bacd 00a5  ld   $a5
              bace 0086  ld   $86
              bacf 00a6  ld   $a6
              bad0 0084  ld   $84
              bad1 00a7  ld   $a7
              bad2 0060  ld   $60
              bad3 0020  ld   $20
              bad4 00f6  ld   $f6
              bad5 000d  ld   $0d
              bad6 0020  ld   $20
              bad7 0034  ld   $34
              bad8 0018  ld   $18
              bad9 0020  ld   $20
              bada 0063  ld   $63
              badb 000f  ld   $0f
              badc 004c  ld   $4c
              badd 00da  ld   $da
              bade 0017  ld   $17
              badf 00a5  ld   $a5
              bae0 0099  ld   $99
              bae1 0030  ld   $30
              bae2 009c  ld   $9c
              bae3 00a5  ld   $a5
              bae4 0094  ld   $94
              bae5 00c9  ld   $c9
              bae6 0091  ld   $91
              bae7 00b0  ld   $b0
              bae8 0096  ld   $96
              bae9 0020  ld   $20
              baea 0013  ld   $13
              baeb 001d  ld   $1d
              baec 00a5  ld   $a5
              baed 0097  ld   $97
              baee 00a4  ld   $a4
              baef 0098  ld   $98
              baf0 0084  ld   $84
              baf1 0046  ld   $46
              baf2 0085  ld   $85
              baf3 0047  ld   $47
              baf4 0060  ld   $60
              baf5 00a5  ld   $a5
              baf6 0047  ld   $47
              baf7 0048  ld   $48
              baf8 00a5  ld   $a5
              baf9 0046  ld   $46
              bafa 0048  ld   $48
              bafb fe00  bra  ac          ;+-----------------------------------+
              bafc fcfd  bra  $bafd       ;|                                   |
              bafd 1418  ld   $18,y       ;| Trampoline for page $ba00 lookups |
              bafe e006  jmp  y,$06       ;|                                   |
              baff c218  st   [$18]       ;+-----------------------------------+
              bb00 0020  ld   $20
              bb01 0034  ld   $34
              bb02 0018  ld   $18
              bb03 00a0  ld   $a0
              bb04 0000  ld   $00
              bb05 00ea  ld   $ea
              bb06 00ea  ld   $ea
              bb07 00ea  ld   $ea
              * 8 times
              bb0d 00b1  ld   $b1
              bb0e 0046  ld   $46
              bb0f 00a8  ld   $a8
              bb10 0068  ld   $68
              bb11 0085  ld   $85
              bb12 0046  ld   $46
              bb13 0068  ld   $68
              bb14 0085  ld   $85
              bb15 0047  ld   $47
              bb16 004c  ld   $4c
              bb17 00de  ld   $de
              bb18 0013  ld   $13
              bb19 0020  ld   $20
              bb1a 0028  ld   $28
              bb1b 0018  ld   $18
              bb1c 008a  ld   $8a
              bb1d 00a0  ld   $a0
              bb1e 0000  ld   $00
              bb1f 0091  ld   $91
              bb20 0046  ld   $46
              bb21 0060  ld   $60
              bb22 0020  ld   $20
              bb23 0028  ld   $28
              bb24 0018  ld   $18
              bb25 0086  ld   $86
              bb26 007b  ld   $7b
              bb27 00a2  ld   $a2
              bb28 0000  ld   $00
              bb29 0020  ld   $20
              bb2a 0071  ld   $71
              bb2b 0022  ld   $22
              bb2c 00f0  ld   $f0
              bb2d 0029  ld   $29
              bb2e 0020  ld   $20
              bb2f 002e  ld   $2e
              bb30 0018  ld   $18
              bb31 0086  ld   $86
              bb32 007c  ld   $7c
              bb33 00a0  ld   $a0
              bb34 0000  ld   $00
              bb35 00b1  ld   $b1
              bb36 0046  ld   $46
              bb37 0045  ld   $45
              bb38 007c  ld   $7c
              bb39 0025  ld   $25
              bb3a 007b  ld   $7b
              bb3b 00f0  ld   $f0
              bb3c 00f8  ld   $f8
              bb3d 0060  ld   $60
              bb3e 00a9  ld   $a9
              bb3f 0089  ld   $89
              bb40 00a0  ld   $a0
              bb41 001f  ld   $1f
              bb42 004c  ld   $4c
              bb43 00df  ld   $df
              bb44 0018  ld   $18
              bb45 0020  ld   $20
              bb46 0004  ld   $04
              bb47 001b  ld   $1b
              bb48 00a5  ld   $a5
              bb49 0099  ld   $99
              bb4a 0049  ld   $49
              bb4b 00ff  ld   $ff
              bb4c 0085  ld   $85
              bb4d 0099  ld   $99
              bb4e 0045  ld   $45
              bb4f 00a1  ld   $a1
              bb50 0085  ld   $85
              bb51 00a2  ld   $a2
              bb52 00a5  ld   $a5
              bb53 0094  ld   $94
              bb54 004c  ld   $4c
              bb55 00e2  ld   $e2
              bb56 0018  ld   $18
              bb57 00a5  ld   $a5
              bb58 0046  ld   $46
              bb59 0049  ld   $49
              bb5a 00e8  ld   $e8
              bb5b 00d0  ld   $d0
              bb5c 0008  ld   $08
              bb5d 00a2  ld   $a2
              bb5e 0014  ld   $14
              bb5f 0045  ld   $45
              bb60 0047  ld   $47
              bb61 0049  ld   $49
              bb62 001c  ld   $1c
              bb63 00f0  ld   $f0
              bb64 000e  ld   $0e
              bb65 00a5  ld   $a5
              bb66 0046  ld   $46
              bb67 00c9  ld   $c9
              bb68 0066  ld   $66
              bb69 00d0  ld   $d0
              bb6a 00c6  ld   $c6
              bb6b 00a5  ld   $a5
              bb6c 0047  ld   $47
              bb6d 00e9  ld   $e9
              bb6e 0019  ld   $19
              bb6f 00d0  ld   $d0
              bb70 00c0  ld   $c0
              bb71 00a2  ld   $a2
              bb72 000a  ld   $0a
              bb73 00bd  ld   $bd
              bb74 00e9  ld   $e9
              bb75 0021  ld   $21
              bb76 0029  ld   $29
              bb77 003f  ld   $3f
              bb78 0049  ld   $49
              bb79 0020  ld   $20
              bb7a 0018  ld   $18
              bb7b 0069  ld   $69
              bb7c 0020  ld   $20
              bb7d 0020  ld   $20
              bb7e 0000  ld   $00
              bb7f 002b  ld   $2b
              bb80 00ca  ld   $ca
              bb81 0049  ld   $49
              bb82 0021  ld   $21
              bb83 00d0  ld   $d0
              bb84 00ee  ld   $ee
              bb85 00c6  ld   $c6
              bb86 007b  ld   $7b
              bb87 00d0  ld   $d0
              bb88 00e8  ld   $e8
              bb89 0060  ld   $60
              bb8a 0020  ld   $20
              bb8b 0011  ld   $11
              bb8c 001a  ld   $1a
              bb8d 0090  ld   $90
              bb8e 003c  ld   $3c
              bb8f 0020  ld   $20
              bb90 0004  ld   $04
              bb91 001b  ld   $1b
              bb92 00d0  ld   $d0
              bb93 0003  ld   $03
              bb94 004c  ld   $4c
              bb95 0074  ld   $74
              bb96 001c  ld   $1c
              bb97 00a6  ld   $a6
              bb98 00a3  ld   $a3
              bb99 0086  ld   $86
              bb9a 0089  ld   $89
              bb9b 00a2  ld   $a2
              bb9c 009c  ld   $9c
              bb9d 00a5  ld   $a5
              bb9e 009c  ld   $9c
              bb9f 00a8  ld   $a8
              bba0 00f0  ld   $f0
              bba1 009b  ld   $9b
              bba2 0038  ld   $38
              bba3 00e5  ld   $e5
              bba4 0094  ld   $94
              bba5 00f0  ld   $f0
              bba6 0024  ld   $24
              bba7 0090  ld   $90
              bba8 0012  ld   $12
              bba9 0084  ld   $84
              bbaa 0094  ld   $94
              bbab 00a4  ld   $a4
              bbac 00a1  ld   $a1
              bbad 0084  ld   $84
              bbae 0099  ld   $99
              bbaf 0049  ld   $49
              bbb0 0019  ld   $19
              bbb1 0000  ld   $00
              bbb2 0000  ld   $00
              bbb3 00ff  ld   $ff
              bbb4 0069  ld   $69
              bbb5 0000  ld   $00
              bbb6 00a0  ld   $a0
              bbb7 0000  ld   $00
              bbb8 0084  ld   $84
              bbb9 0089  ld   $89
              bbba 00a2  ld   $a2
              bbbb 0094  ld   $94
              bbbc 00d0  ld   $d0
              bbbd 0004  ld   $04
              bbbe 00a0  ld   $a0
              bbbf 0000  ld   $00
              bbc0 0084  ld   $84
              bbc1 00a3  ld   $a3
              bbc2 00c9  ld   $c9
              bbc3 00f9  ld   $f9
              bbc4 0030  ld   $30
              bbc5 00c7  ld   $c7
              bbc6 00a8  ld   $a8
              bbc7 00a5  ld   $a5
              bbc8 00a3  ld   $a3
              bbc9 0056  ld   $56
              bbca 0001  ld   $01
              bbcb 0020  ld   $20
              bbcc 0028  ld   $28
              bbcd 001a  ld   $1a
              bbce 0024  ld   $24
              bbcf 00a2  ld   $a2
              bbd0 0010  ld   $10
              bbd1 0057  ld   $57
              bbd2 00a0  ld   $a0
              bbd3 0094  ld   $94
              bbd4 00e0  ld   $e0
              bbd5 009c  ld   $9c
              bbd6 00f0  ld   $f0
              bbd7 0002  ld   $02
              bbd8 00a0  ld   $a0
              bbd9 009c  ld   $9c
              bbda 0038  ld   $38
              bbdb 0049  ld   $49
              bbdc 00ff  ld   $ff
              bbdd 0065  ld   $65
              bbde 0089  ld   $89
              bbdf 0085  ld   $85
              bbe0 00a3  ld   $a3
              bbe1 00b9  ld   $b9
              bbe2 0004  ld   $04
              bbe3 0000  ld   $00
              bbe4 00f5  ld   $f5
              bbe5 0004  ld   $04
              bbe6 0085  ld   $85
              bbe7 0098  ld   $98
              bbe8 00b9  ld   $b9
              bbe9 0003  ld   $03
              bbea 0000  ld   $00
              bbeb 00f5  ld   $f5
              bbec 0003  ld   $03
              bbed 0085  ld   $85
              bbee 0097  ld   $97
              bbef 00b9  ld   $b9
              bbf0 0002  ld   $02
              bbf1 0000  ld   $00
              bbf2 00f5  ld   $f5
              bbf3 0002  ld   $02
              bbf4 0085  ld   $85
              bbf5 0096  ld   $96
              bbf6 00b9  ld   $b9
              bbf7 0001  ld   $01
              bbf8 0000  ld   $00
              bbf9 00f5  ld   $f5
              bbfa 0001  ld   $01
              bbfb fe00  bra  ac          ;+-----------------------------------+
              bbfc fcfd  bra  $bbfd       ;|                                   |
              bbfd 1418  ld   $18,y       ;| Trampoline for page $bb00 lookups |
              bbfe e006  jmp  y,$06       ;|                                   |
              bbff c218  st   [$18]       ;+-----------------------------------+
              bc00 0085  ld   $85
              bc01 0095  ld   $95
              bc02 00b0  ld   $b0
              bc03 0003  ld   $03
              bc04 0020  ld   $20
              bc05 00bf  ld   $bf
              bc06 0019  ld   $19
              bc07 00a0  ld   $a0
              bc08 0000  ld   $00
              bc09 0098  ld   $98
              bc0a 0018  ld   $18
              bc0b 00a6  ld   $a6
              bc0c 0095  ld   $95
              bc0d 00d0  ld   $d0
              bc0e 004a  ld   $4a
              bc0f 00a6  ld   $a6
              bc10 0096  ld   $96
              bc11 0086  ld   $86
              bc12 0095  ld   $95
              bc13 00a6  ld   $a6
              bc14 0097  ld   $97
              bc15 0086  ld   $86
              bc16 0096  ld   $96
              bc17 00a6  ld   $a6
              bc18 0098  ld   $98
              bc19 0086  ld   $86
              bc1a 0097  ld   $97
              bc1b 00a6  ld   $a6
              bc1c 00a3  ld   $a3
              bc1d 0086  ld   $86
              bc1e 0098  ld   $98
              bc1f 0084  ld   $84
              bc20 00a3  ld   $a3
              bc21 0069  ld   $69
              bc22 0008  ld   $08
              bc23 00c9  ld   $c9
              bc24 0020  ld   $20
              bc25 00d0  ld   $d0
              bc26 00e4  ld   $e4
              bc27 00a9  ld   $a9
              bc28 0000  ld   $00
              bc29 0085  ld   $85
              bc2a 0094  ld   $94
              bc2b 0085  ld   $85
              bc2c 0099  ld   $99
              bc2d 0060  ld   $60
              bc2e 0065  ld   $65
              bc2f 0089  ld   $89
              bc30 0085  ld   $85
              bc31 00a3  ld   $a3
              bc32 00a5  ld   $a5
              bc33 0098  ld   $98
              bc34 0065  ld   $65
              bc35 00a0  ld   $a0
              bc36 0085  ld   $85
              bc37 0098  ld   $98
              bc38 00a5  ld   $a5
              bc39 0097  ld   $97
              bc3a 0065  ld   $65
              bc3b 009f  ld   $9f
              bc3c 0085  ld   $85
              bc3d 0097  ld   $97
              bc3e 00a5  ld   $a5
              bc3f 0096  ld   $96
              bc40 0065  ld   $65
              bc41 009e  ld   $9e
              bc42 0085  ld   $85
              bc43 0096  ld   $96
              bc44 00a5  ld   $a5
              bc45 0095  ld   $95
              bc46 0065  ld   $65
              bc47 009d  ld   $9d
              bc48 0085  ld   $85
              bc49 0095  ld   $95
              bc4a 004c  ld   $4c
              bc4b 00ae  ld   $ae
              bc4c 0019  ld   $19
              bc4d 0069  ld   $69
              bc4e 0001  ld   $01
              bc4f 0006  ld   $06
              bc50 00a3  ld   $a3
              bc51 0026  ld   $26
              bc52 0098  ld   $98
              bc53 0026  ld   $26
              bc54 0097  ld   $97
              bc55 0026  ld   $26
              bc56 0096  ld   $96
              bc57 0026  ld   $26
              bc58 0095  ld   $95
              bc59 0010  ld   $10
              bc5a 00f2  ld   $f2
              bc5b 0038  ld   $38
              bc5c 00e5  ld   $e5
              bc5d 0094  ld   $94
              bc5e 00b0  ld   $b0
              bc5f 00c7  ld   $c7
              bc60 0049  ld   $49
              bc61 00ff  ld   $ff
              bc62 0069  ld   $69
              bc63 0001  ld   $01
              bc64 0085  ld   $85
              bc65 0094  ld   $94
              bc66 0090  ld   $90
              bc67 000e  ld   $0e
              bc68 00e6  ld   $e6
              bc69 0094  ld   $94
              bc6a 00f0  ld   $f0
              bc6b 0042  ld   $42
              bc6c 0066  ld   $66
              bc6d 0095  ld   $95
              bc6e 0066  ld   $66
              bc6f 0096  ld   $96
              bc70 0066  ld   $66
              bc71 0097  ld   $97
              bc72 0066  ld   $66
              bc73 0098  ld   $98
              bc74 0066  ld   $66
              bc75 00a3  ld   $a3
              bc76 0060  ld   $60
              bc77 00a5  ld   $a5
              bc78 0099  ld   $99
              bc79 0049  ld   $49
              bc7a 00ff  ld   $ff
              bc7b 0085  ld   $85
              bc7c 0099  ld   $99
              bc7d 00a5  ld   $a5
              bc7e 0095  ld   $95
              bc7f 0049  ld   $49
              bc80 00ff  ld   $ff
              bc81 0085  ld   $85
              bc82 0095  ld   $95
              bc83 00a5  ld   $a5
              bc84 0096  ld   $96
              bc85 0049  ld   $49
              bc86 00ff  ld   $ff
              bc87 0085  ld   $85
              bc88 0096  ld   $96
              bc89 00a5  ld   $a5
              bc8a 0097  ld   $97
              bc8b 0049  ld   $49
              bc8c 00ff  ld   $ff
              bc8d 0085  ld   $85
              bc8e 0097  ld   $97
              bc8f 00a5  ld   $a5
              bc90 0098  ld   $98
              bc91 0049  ld   $49
              bc92 00ff  ld   $ff
              bc93 0085  ld   $85
              bc94 0098  ld   $98
              bc95 00a5  ld   $a5
              bc96 00a3  ld   $a3
              bc97 0049  ld   $49
              bc98 00ff  ld   $ff
              bc99 0085  ld   $85
              bc9a 00a3  ld   $a3
              bc9b 00e6  ld   $e6
              bc9c 00a3  ld   $a3
              bc9d 00d0  ld   $d0
              bc9e 000e  ld   $0e
              bc9f 00e6  ld   $e6
              bca0 0098  ld   $98
              bca1 00d0  ld   $d0
              bca2 000a  ld   $0a
              bca3 00e6  ld   $e6
              bca4 0097  ld   $97
              bca5 00d0  ld   $d0
              bca6 0006  ld   $06
              bca7 00e6  ld   $e6
              bca8 0096  ld   $96
              bca9 00d0  ld   $d0
              bcaa 0002  ld   $02
              bcab 00e6  ld   $e6
              bcac 0095  ld   $95
              bcad 0060  ld   $60
              bcae 00a2  ld   $a2
              bcaf 0045  ld   $45
              bcb0 004c  ld   $4c
              bcb1 004a  ld   $4a
              bcb2 0005  ld   $05
              bcb3 00a2  ld   $a2
              bcb4 0057  ld   $57
              bcb5 00b4  ld   $b4
              bcb6 0004  ld   $04
              bcb7 0084  ld   $84
              bcb8 001a  ld   $1a
              bcb9 0000  ld   $00
              bcba 0000  ld   $00
              bcbb 00a3  ld   $a3
              bcbc 00b4  ld   $b4
              bcbd 0003  ld   $03
              bcbe 0094  ld   $94
              bcbf 0004  ld   $04
              bcc0 00b4  ld   $b4
              bcc1 0002  ld   $02
              bcc2 0094  ld   $94
              bcc3 0003  ld   $03
              bcc4 00b4  ld   $b4
              bcc5 0001  ld   $01
              bcc6 0094  ld   $94
              bcc7 0002  ld   $02
              bcc8 00a4  ld   $a4
              bcc9 009b  ld   $9b
              bcca 0094  ld   $94
              bccb 0001  ld   $01
              bccc 0069  ld   $69
              bccd 0008  ld   $08
              bcce 0030  ld   $30
              bccf 00e8  ld   $e8
              bcd0 00f0  ld   $f0
              bcd1 00e6  ld   $e6
              bcd2 00e9  ld   $e9
              bcd3 0008  ld   $08
              bcd4 00a8  ld   $a8
              bcd5 00a5  ld   $a5
              bcd6 00a3  ld   $a3
              bcd7 00b0  ld   $b0
              bcd8 0014  ld   $14
              bcd9 0016  ld   $16
              bcda 0001  ld   $01
              bcdb 0090  ld   $90
              bcdc 0002  ld   $02
              bcdd 00f6  ld   $f6
              bcde 0001  ld   $01
              bcdf 0076  ld   $76
              bce0 0001  ld   $01
              bce1 0076  ld   $76
              bce2 0001  ld   $01
              bce3 0076  ld   $76
              bce4 0002  ld   $02
              bce5 0076  ld   $76
              bce6 0003  ld   $03
              bce7 0076  ld   $76
              bce8 0004  ld   $04
              bce9 006a  ld   $6a
              bcea 00c8  ld   $c8
              bceb 00d0  ld   $d0
              bcec 00ec  ld   $ec
              bced 0018  ld   $18
              bcee 0060  ld   $60
              bcef 0081  ld   $81
              bcf0 0000  ld   $00
              bcf1 0000  ld   $00
              bcf2 0000  ld   $00
              bcf3 0000  ld   $00
              bcf4 0003  ld   $03
              bcf5 007f  ld   $7f
              bcf6 005e  ld   $5e
              bcf7 0056  ld   $56
              bcf8 00cb  ld   $cb
              bcf9 0079  ld   $79
              bcfa 0080  ld   $80
              bcfb fe00  bra  ac          ;+-----------------------------------+
              bcfc fcfd  bra  $bcfd       ;|                                   |
              bcfd 1418  ld   $18,y       ;| Trampoline for page $bc00 lookups |
              bcfe e006  jmp  y,$06       ;|                                   |
              bcff c218  st   [$18]       ;+-----------------------------------+
              bd00 0013  ld   $13
              bd01 009b  ld   $9b
              bd02 000b  ld   $0b
              bd03 0064  ld   $64
              bd04 0080  ld   $80
              bd05 0076  ld   $76
              bd06 0038  ld   $38
              bd07 0093  ld   $93
              bd08 0016  ld   $16
              bd09 0082  ld   $82
              bd0a 0038  ld   $38
              bd0b 00aa  ld   $aa
              bd0c 003b  ld   $3b
              bd0d 0020  ld   $20
              bd0e 0080  ld   $80
              bd0f 0035  ld   $35
              bd10 0004  ld   $04
              bd11 00f3  ld   $f3
              bd12 0034  ld   $34
              bd13 0081  ld   $81
              bd14 0035  ld   $35
              bd15 0004  ld   $04
              bd16 00f3  ld   $f3
              bd17 0034  ld   $34
              bd18 0080  ld   $80
              bd19 0080  ld   $80
              bd1a 0000  ld   $00
              bd1b 0000  ld   $00
              bd1c 0000  ld   $00
              bd1d 0080  ld   $80
              bd1e 0031  ld   $31
              bd1f 0072  ld   $72
              bd20 0017  ld   $17
              bd21 00f8  ld   $f8
              bd22 0020  ld   $20
              bd23 00a3  ld   $a3
              bd24 001c  ld   $1c
              bd25 00f0  ld   $f0
              bd26 0002  ld   $02
              bd27 0010  ld   $10
              bd28 0003  ld   $03
              bd29 004c  ld   $4c
              bd2a 0082  ld   $82
              bd2b 0012  ld   $12
              bd2c 00a5  ld   $a5
              bd2d 0094  ld   $94
              bd2e 00e9  ld   $e9
              bd2f 007f  ld   $7f
              bd30 0048  ld   $48
              bd31 00a9  ld   $a9
              bd32 0080  ld   $80
              bd33 0085  ld   $85
              bd34 0094  ld   $94
              bd35 00a9  ld   $a9
              bd36 004e  ld   $4e
              bd37 00a0  ld   $a0
              bd38 001a  ld   $1a
              bd39 0020  ld   $20
              bd3a 00df  ld   $df
              bd3b 0018  ld   $18
              bd3c 00a9  ld   $a9
              bd3d 0053  ld   $53
              bd3e 00a0  ld   $a0
              bd3f 001a  ld   $1a
              bd40 0020  ld   $20
              bd41 0087  ld   $87
              bd42 001b  ld   $1b
              bd43 00a9  ld   $a9
              bd44 0034  ld   $34
              bd45 00a0  ld   $a0
              bd46 001a  ld   $1a
              bd47 0020  ld   $20
              bd48 0095  ld   $95
              bd49 0018  ld   $18
              bd4a 00a9  ld   $a9
              bd4b 0039  ld   $39
              bd4c 00a0  ld   $a0
              bd4d 001a  ld   $1a
              bd4e 0020  ld   $20
              bd4f 0099  ld   $99
              bd50 0020  ld   $20
              bd51 00a9  ld   $a9
              bd52 0058  ld   $58
              bd53 00a0  ld   $a0
              bd54 001a  ld   $1a
              bd55 0020  ld   $20
              bd56 00df  ld   $df
              bd57 0018  ld   $18
              bd58 0068  ld   $68
              bd59 0020  ld   $20
              bd5a 00f6  ld   $f6
              bd5b 001d  ld   $1d
              bd5c 00a9  ld   $a9
              bd5d 005d  ld   $5d
              bd5e 00a0  ld   $a0
              bd5f 001a  ld   $1a
              bd60 0020  ld   $20
              bd61 0004  ld   $04
              bd62 001b  ld   $1b
              bd63 00d0  ld   $d0
              bd64 0003  ld   $03
              bd65 004c  ld   $4c
              bd66 0003  ld   $03
              bd67 001b  ld   $1b
              bd68 0020  ld   $20
              bd69 002f  ld   $2f
              bd6a 001b  ld   $1b
              bd6b 00a9  ld   $a9
              bd6c 0000  ld   $00
              bd6d 0085  ld   $85
              bd6e 0058  ld   $58
              bd6f 0085  ld   $85
              bd70 0059  ld   $59
              bd71 0085  ld   $85
              bd72 005a  ld   $5a
              bd73 0085  ld   $85
              bd74 005b  ld   $5b
              bd75 00a5  ld   $a5
              bd76 00a3  ld   $a3
              bd77 0020  ld   $20
              bd78 00d1  ld   $d1
              bd79 001a  ld   $1a
              bd7a 00a5  ld   $a5
              bd7b 0098  ld   $98
              bd7c 0020  ld   $20
              bd7d 00d1  ld   $d1
              bd7e 001a  ld   $1a
              bd7f 00a5  ld   $a5
              bd80 0097  ld   $97
              bd81 0020  ld   $20
              bd82 00d1  ld   $d1
              bd83 001a  ld   $1a
              bd84 00a5  ld   $a5
              bd85 0096  ld   $96
              bd86 0020  ld   $20
              bd87 00d1  ld   $d1
              bd88 001a  ld   $1a
              bd89 00a5  ld   $a5
              bd8a 0095  ld   $95
              bd8b 0020  ld   $20
              bd8c 00d6  ld   $d6
              bd8d 001a  ld   $1a
              bd8e 004c  ld   $4c
              bd8f 0007  ld   $07
              bd90 001c  ld   $1c
              bd91 00d0  ld   $d0
              bd92 0003  ld   $03
              bd93 004c  ld   $4c
              bd94 00fb  ld   $fb
              bd95 0019  ld   $19
              bd96 004a  ld   $4a
              bd97 0009  ld   $09
              bd98 0080  ld   $80
              bd99 00a8  ld   $a8
              bd9a 0090  ld   $90
              bd9b 0019  ld   $19
              bd9c 0018  ld   $18
              bd9d 00a5  ld   $a5
              bd9e 005b  ld   $5b
              bd9f 0065  ld   $65
              bda0 00a0  ld   $a0
              bda1 0085  ld   $85
              bda2 005b  ld   $5b
              bda3 00a5  ld   $a5
              bda4 005a  ld   $5a
              bda5 0065  ld   $65
              bda6 009f  ld   $9f
              bda7 0085  ld   $85
              bda8 005a  ld   $5a
              bda9 00a5  ld   $a5
              bdaa 0059  ld   $59
              bdab 0065  ld   $65
              bdac 009e  ld   $9e
              bdad 0085  ld   $85
              bdae 0059  ld   $59
              bdaf 00a5  ld   $a5
              bdb0 0058  ld   $58
              bdb1 0065  ld   $65
              bdb2 009d  ld   $9d
              bdb3 0085  ld   $85
              bdb4 0058  ld   $58
              bdb5 0066  ld   $66
              bdb6 0058  ld   $58
              bdb7 0066  ld   $66
              bdb8 0059  ld   $59
              bdb9 0066  ld   $66
              bdba 005a  ld   $5a
              bdbb 0066  ld   $66
              bdbc 005b  ld   $5b
              bdbd 0066  ld   $66
              bdbe 00a3  ld   $a3
              bdbf 0098  ld   $98
              bdc0 001b  ld   $1b
              bdc1 0000  ld   $00
              bdc2 0000  ld   $00
              bdc3 004a  ld   $4a
              bdc4 00d0  ld   $d0
              bdc5 00d6  ld   $d6
              bdc6 0060  ld   $60
              bdc7 0085  ld   $85
              bdc8 0054  ld   $54
              bdc9 0084  ld   $84
              bdca 0055  ld   $55
              bdcb 00a0  ld   $a0
              bdcc 0004  ld   $04
              bdcd 00b1  ld   $b1
              bdce 0054  ld   $54
              bdcf 0085  ld   $85
              bdd0 00a0  ld   $a0
              bdd1 0088  ld   $88
              bdd2 00b1  ld   $b1
              bdd3 0054  ld   $54
              bdd4 0085  ld   $85
              bdd5 009f  ld   $9f
              bdd6 0088  ld   $88
              bdd7 00b1  ld   $b1
              bdd8 0054  ld   $54
              bdd9 0085  ld   $85
              bdda 009e  ld   $9e
              bddb 0088  ld   $88
              bddc 00b1  ld   $b1
              bddd 0054  ld   $54
              bdde 0085  ld   $85
              bddf 00a1  ld   $a1
              bde0 0045  ld   $45
              bde1 0099  ld   $99
              bde2 0085  ld   $85
              bde3 00a2  ld   $a2
              bde4 00a5  ld   $a5
              bde5 00a1  ld   $a1
              bde6 0009  ld   $09
              bde7 0080  ld   $80
              bde8 0085  ld   $85
              bde9 009d  ld   $9d
              bdea 0088  ld   $88
              bdeb 00b1  ld   $b1
              bdec 0054  ld   $54
              bded 0085  ld   $85
              bdee 009c  ld   $9c
              bdef 00a5  ld   $a5
              bdf0 0094  ld   $94
              bdf1 0060  ld   $60
              bdf2 00a5  ld   $a5
              bdf3 009c  ld   $9c
              bdf4 00f0  ld   $f0
              bdf5 001f  ld   $1f
              bdf6 0018  ld   $18
              bdf7 0065  ld   $65
              bdf8 0094  ld   $94
              bdf9 0090  ld   $90
              bdfa 0004  ld   $04
              bdfb fe00  bra  ac          ;+-----------------------------------+
              bdfc fcfd  bra  $bdfd       ;|                                   |
              bdfd 1418  ld   $18,y       ;| Trampoline for page $bd00 lookups |
              bdfe e006  jmp  y,$06       ;|                                   |
              bdff c218  st   [$18]       ;+-----------------------------------+
              be00 0030  ld   $30
              be01 001d  ld   $1d
              be02 0018  ld   $18
              be03 002c  ld   $2c
              be04 0010  ld   $10
              be05 0014  ld   $14
              be06 0069  ld   $69
              be07 0080  ld   $80
              be08 0085  ld   $85
              be09 0094  ld   $94
              be0a 00d0  ld   $d0
              be0b 0003  ld   $03
              be0c 004c  ld   $4c
              be0d 0073  ld   $73
              be0e 0019  ld   $19
              be0f 00a5  ld   $a5
              be10 00a2  ld   $a2
              be11 0085  ld   $85
              be12 0099  ld   $99
              be13 0060  ld   $60
              be14 00a5  ld   $a5
              be15 0099  ld   $99
              be16 0049  ld   $49
              be17 00ff  ld   $ff
              be18 0030  ld   $30
              be19 0005  ld   $05
              be1a 0068  ld   $68
              be1b 0068  ld   $68
              be1c 004c  ld   $4c
              be1d 006f  ld   $6f
              be1e 0019  ld   $19
              be1f 004c  ld   $4c
              be20 00f6  ld   $f6
              be21 0019  ld   $19
              be22 0020  ld   $20
              be23 0084  ld   $84
              be24 001c  ld   $1c
              be25 00aa  ld   $aa
              be26 00f0  ld   $f0
              be27 0010  ld   $10
              be28 0018  ld   $18
              be29 0069  ld   $69
              be2a 0002  ld   $02
              be2b 00b0  ld   $b0
              be2c 00f2  ld   $f2
              be2d 00a2  ld   $a2
              be2e 0000  ld   $00
              be2f 0086  ld   $86
              be30 00a2  ld   $a2
              be31 0020  ld   $20
              be32 00ef  ld   $ef
              be33 0018  ld   $18
              be34 00e6  ld   $e6
              be35 0094  ld   $94
              be36 00f0  ld   $f0
              be37 00e7  ld   $e7
              be38 0060  ld   $60
              be39 0084  ld   $84
              be3a 0020  ld   $20
              be3b 0000  ld   $00
              be3c 0000  ld   $00
              be3d 0000  ld   $00
              be3e 0020  ld   $20
              be3f 0084  ld   $84
              be40 001c  ld   $1c
              be41 00a9  ld   $a9
              be42 0071  ld   $71
              be43 00a0  ld   $a0
              be44 001b  ld   $1b
              be45 00a2  ld   $a2
              be46 0000  ld   $00
              be47 0086  ld   $86
              be48 00a2  ld   $a2
              be49 0020  ld   $20
              be4a 001a  ld   $1a
              be4b 001c  ld   $1c
              be4c 004c  ld   $4c
              be4d 008a  ld   $8a
              be4e 001b  ld   $1b
              be4f 0020  ld   $20
              be50 0004  ld   $04
              be51 001b  ld   $1b
              be52 00f0  ld   $f0
              be53 0076  ld   $76
              be54 0020  ld   $20
              be55 0093  ld   $93
              be56 001c  ld   $1c
              be57 00a9  ld   $a9
              be58 0000  ld   $00
              be59 0038  ld   $38
              be5a 00e5  ld   $e5
              be5b 0094  ld   $94
              be5c 0085  ld   $85
              be5d 0094  ld   $94
              be5e 0020  ld   $20
              be5f 002f  ld   $2f
              be60 001b  ld   $1b
              be61 00e6  ld   $e6
              be62 0094  ld   $94
              be63 00f0  ld   $f0
              be64 00ba  ld   $ba
              be65 00a2  ld   $a2
              be66 00fc  ld   $fc
              be67 00a9  ld   $a9
              be68 0001  ld   $01
              be69 00a4  ld   $a4
              be6a 009d  ld   $9d
              be6b 00c4  ld   $c4
              be6c 0095  ld   $95
              be6d 00d0  ld   $d0
              be6e 0010  ld   $10
              be6f 00a4  ld   $a4
              be70 009e  ld   $9e
              be71 00c4  ld   $c4
              be72 0096  ld   $96
              be73 00d0  ld   $d0
              be74 000a  ld   $0a
              be75 00a4  ld   $a4
              be76 009f  ld   $9f
              be77 00c4  ld   $c4
              be78 0097  ld   $97
              be79 00d0  ld   $d0
              be7a 0004  ld   $04
              be7b 00a4  ld   $a4
              be7c 00a0  ld   $a0
              be7d 00c4  ld   $c4
              be7e 0098  ld   $98
              be7f 0008  ld   $08
              be80 002a  ld   $2a
              be81 0090  ld   $90
              be82 0009  ld   $09
              be83 00e8  ld   $e8
              be84 0095  ld   $95
              be85 005b  ld   $5b
              be86 00f0  ld   $f0
              be87 0032  ld   $32
              be88 0010  ld   $10
              be89 0034  ld   $34
              be8a 00a9  ld   $a9
              be8b 0001  ld   $01
              be8c 0028  ld   $28
              be8d 00b0  ld   $b0
              be8e 000e  ld   $0e
              be8f 0006  ld   $06
              be90 00a0  ld   $a0
              be91 0026  ld   $26
              be92 009f  ld   $9f
              be93 0026  ld   $26
              be94 009e  ld   $9e
              be95 0026  ld   $26
              be96 009d  ld   $9d
              be97 00b0  ld   $b0
              be98 00e6  ld   $e6
              be99 0030  ld   $30
              be9a 00ce  ld   $ce
              be9b 0010  ld   $10
              be9c 00e2  ld   $e2
              be9d 00a8  ld   $a8
              be9e 00a5  ld   $a5
              be9f 00a0  ld   $a0
              bea0 00e5  ld   $e5
              bea1 0098  ld   $98
              bea2 0085  ld   $85
              bea3 00a0  ld   $a0
              bea4 00a5  ld   $a5
              bea5 009f  ld   $9f
              bea6 00e5  ld   $e5
              bea7 0097  ld   $97
              bea8 0085  ld   $85
              bea9 009f  ld   $9f
              beaa 00a5  ld   $a5
              beab 009e  ld   $9e
              beac 00e5  ld   $e5
              bead 0096  ld   $96
              beae 0085  ld   $85
              beaf 009e  ld   $9e
              beb0 00a5  ld   $a5
              beb1 009d  ld   $9d
              beb2 00e5  ld   $e5
              beb3 0095  ld   $95
              beb4 0085  ld   $85
              beb5 009d  ld   $9d
              beb6 0098  ld   $98
              beb7 004c  ld   $4c
              beb8 00c7  ld   $c7
              beb9 001b  ld   $1b
              beba 00a9  ld   $a9
              bebb 0040  ld   $40
              bebc 00d0  ld   $d0
              bebd 00ce  ld   $ce
              bebe 000a  ld   $0a
              bebf 000a  ld   $0a
              bec0 000a  ld   $0a
              * 6 times
              bec4 0085  ld   $85
              bec5 00a3  ld   $a3
              bec6 0028  ld   $28
              bec7 004c  ld   $4c
              bec8 001c  ld   $1c
              bec9 0000  ld   $00
              beca 0000  ld   $00
              becb 0007  ld   $07
              becc 001c  ld   $1c
              becd 00a2  ld   $a2
              bece 0085  ld   $85
              becf 004c  ld   $4c
              bed0 004a  ld   $4a
              bed1 0005  ld   $05
              bed2 00a5  ld   $a5
              bed3 0058  ld   $58
              bed4 0085  ld   $85
              bed5 0095  ld   $95
              bed6 00a5  ld   $a5
              bed7 0059  ld   $59
              bed8 0085  ld   $85
              bed9 0096  ld   $96
              beda 00a5  ld   $a5
              bedb 005a  ld   $5a
              bedc 0085  ld   $85
              bedd 0097  ld   $97
              bede 00a5  ld   $a5
              bedf 005b  ld   $5b
              bee0 0085  ld   $85
              bee1 0098  ld   $98
              bee2 004c  ld   $4c
              bee3 004f  ld   $4f
              bee4 0019  ld   $19
              bee5 0085  ld   $85
              bee6 0054  ld   $54
              bee7 0084  ld   $84
              bee8 0055  ld   $55
              bee9 00a0  ld   $a0
              beea 0004  ld   $04
              beeb 00b1  ld   $b1
              beec 0054  ld   $54
              beed 0085  ld   $85
              beee 0098  ld   $98
              beef 0088  ld   $88
              bef0 00b1  ld   $b1
              bef1 0054  ld   $54
              bef2 0085  ld   $85
              bef3 0097  ld   $97
              bef4 0088  ld   $88
              bef5 00b1  ld   $b1
              bef6 0054  ld   $54
              bef7 0085  ld   $85
              bef8 0096  ld   $96
              bef9 0088  ld   $88
              befa 00b1  ld   $b1
              befb fe00  bra  ac          ;+-----------------------------------+
              befc fcfd  bra  $befd       ;|                                   |
              befd 1418  ld   $18,y       ;| Trampoline for page $be00 lookups |
              befe e006  jmp  y,$06       ;|                                   |
              beff c218  st   [$18]       ;+-----------------------------------+
              bf00 0054  ld   $54
              bf01 0085  ld   $85
              bf02 0099  ld   $99
              bf03 0009  ld   $09
              bf04 0080  ld   $80
              bf05 0085  ld   $85
              bf06 0095  ld   $95
              bf07 0088  ld   $88
              bf08 00b1  ld   $b1
              bf09 0054  ld   $54
              bf0a 0085  ld   $85
              bf0b 0094  ld   $94
              bf0c 0084  ld   $84
              bf0d 00a3  ld   $a3
              bf0e 0060  ld   $60
              bf0f 00a2  ld   $a2
              bf10 008f  ld   $8f
              bf11 002c  ld   $2c
              bf12 00a2  ld   $a2
              bf13 008a  ld   $8a
              bf14 00a0  ld   $a0
              bf15 0000  ld   $00
              bf16 00f0  ld   $f0
              bf17 0004  ld   $04
              bf18 00a6  ld   $a6
              bf19 007b  ld   $7b
              bf1a 00a4  ld   $a4
              bf1b 007c  ld   $7c
              bf1c 0020  ld   $20
              bf1d 0093  ld   $93
              bf1e 001c  ld   $1c
              bf1f 0086  ld   $86
              bf20 0054  ld   $54
              bf21 0084  ld   $84
              bf22 0055  ld   $55
              bf23 00a0  ld   $a0
              bf24 0004  ld   $04
              bf25 00a5  ld   $a5
              bf26 0098  ld   $98
              bf27 0091  ld   $91
              bf28 0054  ld   $54
              bf29 0088  ld   $88
              bf2a 00a5  ld   $a5
              bf2b 0097  ld   $97
              bf2c 0091  ld   $91
              bf2d 0054  ld   $54
              bf2e 0088  ld   $88
              bf2f 00a5  ld   $a5
              bf30 0096  ld   $96
              bf31 0091  ld   $91
              bf32 0054  ld   $54
              bf33 0088  ld   $88
              bf34 00a5  ld   $a5
              bf35 0099  ld   $99
              bf36 0009  ld   $09
              bf37 007f  ld   $7f
              bf38 0025  ld   $25
              bf39 0095  ld   $95
              bf3a 0091  ld   $91
              bf3b 0054  ld   $54
              bf3c 0088  ld   $88
              bf3d 00a5  ld   $a5
              bf3e 0094  ld   $94
              bf3f 0091  ld   $91
              bf40 0054  ld   $54
              bf41 0084  ld   $84
              bf42 00a3  ld   $a3
              bf43 0060  ld   $60
              bf44 00a5  ld   $a5
              bf45 00a1  ld   $a1
              bf46 0085  ld   $85
              bf47 0099  ld   $99
              bf48 00a2  ld   $a2
              bf49 0005  ld   $05
              bf4a 00b5  ld   $b5
              bf4b 009b  ld   $9b
              bf4c 0095  ld   $95
              bf4d 0093  ld   $93
              bf4e 00ca  ld   $ca
              bf4f 00d0  ld   $d0
              bf50 00f9  ld   $f9
              bf51 0086  ld   $86
              bf52 00a3  ld   $a3
              bf53 0060  ld   $60
              bf54 0020  ld   $20
              bf55 0093  ld   $93
              bf56 001c  ld   $1c
              bf57 00a2  ld   $a2
              bf58 0006  ld   $06
              bf59 00b5  ld   $b5
              bf5a 0093  ld   $93
              bf5b 0095  ld   $95
              bf5c 009b  ld   $9b
              bf5d 00ca  ld   $ca
              bf5e 00d0  ld   $d0
              bf5f 00f9  ld   $f9
              bf60 0086  ld   $86
              bf61 00a3  ld   $a3
              bf62 0060  ld   $60
              bf63 00a5  ld   $a5
              bf64 0094  ld   $94
              bf65 00f0  ld   $f0
              bf66 00fb  ld   $fb
              bf67 0006  ld   $06
              bf68 00a3  ld   $a3
              bf69 0090  ld   $90
              bf6a 00f7  ld   $f7
              bf6b 0020  ld   $20
              bf6c 00e7  ld   $e7
              bf6d 0019  ld   $19
              bf6e 00d0  ld   $d0
              bf6f 00f2  ld   $f2
              bf70 004c  ld   $4c
              bf71 00b0  ld   $b0
              bf72 0019  ld   $19
              bf73 00a5  ld   $a5
              bf74 0094  ld   $94
              bf75 00f0  ld   $f0
              bf76 0009  ld   $09
              bf77 00a5  ld   $a5
              bf78 0099  ld   $99
              bf79 002a  ld   $2a
              bf7a 00a9  ld   $a9
              bf7b 00ff  ld   $ff
              bf7c 00b0  ld   $b0
              bf7d 0002  ld   $02
              bf7e 00a9  ld   $a9
              bf7f 0001  ld   $01
              bf80 0060  ld   $60
              bf81 0020  ld   $20
              bf82 00a3  ld   $a3
              bf83 001c  ld   $1c
              bf84 0085  ld   $85
              bf85 0095  ld   $95
              bf86 00a9  ld   $a9
              bf87 0000  ld   $00
              bf88 0085  ld   $85
              bf89 0096  ld   $96
              bf8a 00a2  ld   $a2
              bf8b 0088  ld   $88
              bf8c 00a5  ld   $a5
              bf8d 0095  ld   $95
              bf8e 0049  ld   $49
              bf8f 00ff  ld   $ff
              bf90 002a  ld   $2a
              bf91 00a9  ld   $a9
              bf92 0000  ld   $00
              bf93 0085  ld   $85
              bf94 0098  ld   $98
              bf95 0085  ld   $85
              bf96 0097  ld   $97
              bf97 0086  ld   $86
              bf98 0094  ld   $94
              bf99 0085  ld   $85
              bf9a 00a3  ld   $a3
              bf9b 0085  ld   $85
              bf9c 0099  ld   $99
              bf9d 004c  ld   $4c
              bf9e 004a  ld   $4a
              bf9f 0019  ld   $19
              bfa0 0046  ld   $46
              bfa1 0099  ld   $99
              bfa2 0060  ld   $60
              bfa3 0085  ld   $85
              bfa4 0056  ld   $56
              bfa5 0084  ld   $84
              bfa6 0057  ld   $57
              bfa7 00a0  ld   $a0
              bfa8 0000  ld   $00
              bfa9 00b1  ld   $b1
              bfaa 0056  ld   $56
              bfab 00c8  ld   $c8
              bfac 00aa  ld   $aa
              bfad 00f0  ld   $f0
              bfae 00c4  ld   $c4
              bfaf 00b1  ld   $b1
              bfb0 0056  ld   $56
              bfb1 0045  ld   $45
              bfb2 0099  ld   $99
              bfb3 0030  ld   $30
              bfb4 00c2  ld   $c2
              bfb5 00e4  ld   $e4
              bfb6 0094  ld   $94
              bfb7 00d0  ld   $d0
              bfb8 0021  ld   $21
              bfb9 00b1  ld   $b1
              bfba 0056  ld   $56
              bfbb 0009  ld   $09
              bfbc 0080  ld   $80
              bfbd 00c5  ld   $c5
              bfbe 0095  ld   $95
              bfbf 00d0  ld   $d0
              bfc0 0019  ld   $19
              bfc1 00c8  ld   $c8
              bfc2 00b1  ld   $b1
              bfc3 0056  ld   $56
              bfc4 00c5  ld   $c5
              bfc5 0096  ld   $96
              bfc6 00d0  ld   $d0
              bfc7 0012  ld   $12
              bfc8 00c8  ld   $c8
              bfc9 00b1  ld   $b1
              bfca 0056  ld   $56
              bfcb 00c5  ld   $c5
              bfcc 0097  ld   $97
              bfcd 00d0  ld   $d0
              bfce 000b  ld   $0b
              bfcf 00c8  ld   $c8
              bfd0 001d  ld   $1d
              bfd1 0000  ld   $00
              bfd2 0000  ld   $00
              bfd3 00a9  ld   $a9
              bfd4 007f  ld   $7f
              bfd5 00c5  ld   $c5
              bfd6 00a3  ld   $a3
              bfd7 00b1  ld   $b1
              bfd8 0056  ld   $56
              bfd9 00e5  ld   $e5
              bfda 0098  ld   $98
              bfdb 00f0  ld   $f0
              bfdc 0028  ld   $28
              bfdd 00a5  ld   $a5
              bfde 0099  ld   $99
              bfdf 0090  ld   $90
              bfe0 0002  ld   $02
              bfe1 0049  ld   $49
              bfe2 00ff  ld   $ff
              bfe3 004c  ld   $4c
              bfe4 00a9  ld   $a9
              bfe5 001c  ld   $1c
              bfe6 00a5  ld   $a5
              bfe7 0094  ld   $94
              bfe8 00f0  ld   $f0
              bfe9 004a  ld   $4a
              bfea 0038  ld   $38
              bfeb 00e9  ld   $e9
              bfec 00a0  ld   $a0
              bfed 0024  ld   $24
              bfee 0099  ld   $99
              bfef 0010  ld   $10
              bff0 0009  ld   $09
              bff1 00aa  ld   $aa
              bff2 00a9  ld   $a9
              bff3 00ff  ld   $ff
              bff4 0085  ld   $85
              bff5 009b  ld   $9b
              bff6 0020  ld   $20
              bff7 00c5  ld   $c5
              bff8 0019  ld   $19
              bff9 008a  ld   $8a
              bffa 00a2  ld   $a2
              bffb fe00  bra  ac          ;+-----------------------------------+
              bffc fcfd  bra  $bffd       ;|                                   |
              bffd 1418  ld   $18,y       ;| Trampoline for page $bf00 lookups |
              bffe e006  jmp  y,$06       ;|                                   |
              bfff c218  st   [$18]       ;+-----------------------------------+
              c000 0094  ld   $94
              c001 00c9  ld   $c9
              c002 00f9  ld   $f9
              c003 0010  ld   $10
              c004 0006  ld   $06
              c005 0020  ld   $20
              c006 0011  ld   $11
              c007 001a  ld   $1a
              c008 0084  ld   $84
              c009 009b  ld   $9b
              c00a 0060  ld   $60
              c00b 00a8  ld   $a8
              c00c 00a5  ld   $a5
              c00d 0099  ld   $99
              c00e 0029  ld   $29
              c00f 0080  ld   $80
              c010 0046  ld   $46
              c011 0095  ld   $95
              c012 0005  ld   $05
              c013 0095  ld   $95
              c014 0085  ld   $85
              c015 0095  ld   $95
              c016 0020  ld   $20
              c017 0028  ld   $28
              c018 001a  ld   $1a
              c019 0084  ld   $84
              c01a 009b  ld   $9b
              c01b 0060  ld   $60
              c01c 00a5  ld   $a5
              c01d 0094  ld   $94
              c01e 00c9  ld   $c9
              c01f 00a0  ld   $a0
              c020 00b0  ld   $b0
              c021 0020  ld   $20
              c022 0020  ld   $20
              c023 0013  ld   $13
              c024 001d  ld   $1d
              c025 0084  ld   $84
              c026 00a3  ld   $a3
              c027 00a5  ld   $a5
              c028 0099  ld   $99
              c029 0084  ld   $84
              c02a 0099  ld   $99
              c02b 0049  ld   $49
              c02c 0080  ld   $80
              c02d 002a  ld   $2a
              c02e 00a9  ld   $a9
              c02f 00a0  ld   $a0
              c030 0085  ld   $85
              c031 0094  ld   $94
              c032 00a5  ld   $a5
              c033 0098  ld   $98
              c034 0085  ld   $85
              c035 003b  ld   $3b
              c036 004c  ld   $4c
              c037 004a  ld   $4a
              c038 0019  ld   $19
              c039 0085  ld   $85
              c03a 0095  ld   $95
              c03b 0085  ld   $85
              c03c 0096  ld   $96
              c03d 0085  ld   $85
              c03e 0097  ld   $97
              c03f 0085  ld   $85
              c040 0098  ld   $98
              c041 00a8  ld   $a8
              c042 0060  ld   $60
              c043 00a0  ld   $a0
              c044 0000  ld   $00
              c045 00a2  ld   $a2
              c046 000a  ld   $0a
              c047 0094  ld   $94
              c048 0090  ld   $90
              c049 00ca  ld   $ca
              c04a 0010  ld   $10
              c04b 00fb  ld   $fb
              c04c 0090  ld   $90
              c04d 000f  ld   $0f
              c04e 00c9  ld   $c9
              c04f 002d  ld   $2d
              c050 00d0  ld   $d0
              c051 0004  ld   $04
              c052 0086  ld   $86
              c053 009a  ld   $9a
              c054 00f0  ld   $f0
              c055 0004  ld   $04
              c056 00c9  ld   $c9
              c057 002b  ld   $2b
              c058 00d0  ld   $d0
              c059 0005  ld   $05
              c05a 0020  ld   $20
              c05b 006b  ld   $6b
              c05c 0022  ld   $22
              c05d 0090  ld   $90
              c05e 005b  ld   $5b
              c05f 00c9  ld   $c9
              c060 002e  ld   $2e
              c061 00f0  ld   $f0
              c062 002e  ld   $2e
              c063 00c9  ld   $c9
              c064 0045  ld   $45
              c065 00d0  ld   $d0
              c066 0030  ld   $30
              c067 0020  ld   $20
              c068 006b  ld   $6b
              c069 0022  ld   $22
              c06a 0090  ld   $90
              c06b 0017  ld   $17
              c06c 00c9  ld   $c9
              c06d 00a5  ld   $a5
              c06e 00f0  ld   $f0
              c06f 000e  ld   $0e
              c070 00c9  ld   $c9
              c071 002d  ld   $2d
              c072 00f0  ld   $f0
              c073 000a  ld   $0a
              c074 00c9  ld   $c9
              c075 00a4  ld   $a4
              c076 00f0  ld   $f0
              c077 0008  ld   $08
              c078 00c9  ld   $c9
              c079 002b  ld   $2b
              c07a 00f0  ld   $f0
              c07b 0004  ld   $04
              c07c 00d0  ld   $d0
              c07d 0007  ld   $07
              c07e 0066  ld   $66
              c07f 0093  ld   $93
              c080 0020  ld   $20
              c081 006b  ld   $6b
              c082 0022  ld   $22
              c083 0090  ld   $90
              c084 005c  ld   $5c
              c085 0024  ld   $24
              c086 0093  ld   $93
              c087 0010  ld   $10
              c088 000e  ld   $0e
              c089 00a9  ld   $a9
              c08a 0000  ld   $00
              c08b 0038  ld   $38
              c08c 00e5  ld   $e5
              c08d 0091  ld   $91
              c08e 004c  ld   $4c
              c08f 00c1  ld   $c1
              c090 001d  ld   $1d
              c091 0066  ld   $66
              c092 0092  ld   $92
              c093 0024  ld   $24
              c094 0092  ld   $92
              c095 0050  ld   $50
              c096 00c3  ld   $c3
              c097 00a5  ld   $a5
              c098 0091  ld   $91
              c099 0038  ld   $38
              c09a 00e5  ld   $e5
              c09b 0090  ld   $90
              c09c 0085  ld   $85
              c09d 0091  ld   $91
              c09e 00f0  ld   $f0
              c09f 0012  ld   $12
              c0a0 0010  ld   $10
              c0a1 0009  ld   $09
              c0a2 0020  ld   $20
              c0a3 0076  ld   $76
              c0a4 001b  ld   $1b
              c0a5 00e6  ld   $e6
              c0a6 0091  ld   $91
              c0a7 00d0  ld   $d0
              c0a8 00f9  ld   $f9
              c0a9 00f0  ld   $f0
              c0aa 0007  ld   $07
              c0ab 0020  ld   $20
              c0ac 005a  ld   $5a
              c0ad 001b  ld   $1b
              c0ae 00c6  ld   $c6
              c0af 0091  ld   $91
              c0b0 00d0  ld   $d0
              c0b1 00f9  ld   $f9
              c0b2 00a5  ld   $a5
              c0b3 009a  ld   $9a
              c0b4 0030  ld   $30
              c0b5 0001  ld   $01
              c0b6 0060  ld   $60
              c0b7 004c  ld   $4c
              c0b8 000d  ld   $0d
              c0b9 0020  ld   $20
              c0ba 0048  ld   $48
              c0bb 0024  ld   $24
              c0bc 0092  ld   $92
              c0bd 0010  ld   $10
              c0be 0002  ld   $02
              c0bf 00e6  ld   $e6
              c0c0 0090  ld   $90
              c0c1 0020  ld   $20
              c0c2 005a  ld   $5a
              c0c3 001b  ld   $1b
              c0c4 0068  ld   $68
              c0c5 0038  ld   $38
              c0c6 00e9  ld   $e9
              c0c7 0030  ld   $30
              c0c8 0020  ld   $20
              c0c9 00f6  ld   $f6
              c0ca 001d  ld   $1d
              c0cb 004c  ld   $4c
              c0cc 0082  ld   $82
              c0cd 001d  ld   $1d
              c0ce 0048  ld   $48
              c0cf 0020  ld   $20
              c0d0 0084  ld   $84
              c0d1 001c  ld   $1c
              c0d2 0068  ld   $68
              c0d3 0020  ld   $20
              c0d4 00b4  ld   $b4
              c0d5 001c  ld   $1c
              c0d6 00a5  ld   $a5
              c0d7 00a1  ld   $a1
              c0d8 001e  ld   $1e
              c0d9 0000  ld   $00
              c0da 0000  ld   $00
              c0db 0045  ld   $45
              c0dc 0099  ld   $99
              c0dd 0085  ld   $85
              c0de 00a2  ld   $a2
              c0df 00a6  ld   $a6
              c0e0 0094  ld   $94
              c0e1 004c  ld   $4c
              c0e2 00e2  ld   $e2
              c0e3 0018  ld   $18
              c0e4 00a5  ld   $a5
              c0e5 0091  ld   $91
              c0e6 00c9  ld   $c9
              c0e7 000a  ld   $0a
              c0e8 0090  ld   $90
              c0e9 0009  ld   $09
              c0ea 00a9  ld   $a9
              c0eb 0064  ld   $64
              c0ec 0024  ld   $24
              c0ed 0093  ld   $93
              c0ee 0030  ld   $30
              c0ef 0011  ld   $11
              c0f0 004c  ld   $4c
              c0f1 00f6  ld   $f6
              c0f2 0019  ld   $19
              c0f3 000a  ld   $0a
              c0f4 000a  ld   $0a
              c0f5 0018  ld   $18
              c0f6 0065  ld   $65
              c0f7 0091  ld   $91
              c0f8 000a  ld   $0a
              c0f9 0018  ld   $18
              c0fa 00a0  ld   $a0
              c0fb fe00  bra  ac          ;+-----------------------------------+
              c0fc fcfd  bra  $c0fd       ;|                                   |
              c0fd 1418  ld   $18,y       ;| Trampoline for page $c000 lookups |
              c0fe e006  jmp  y,$06       ;|                                   |
              c0ff c218  st   [$18]       ;+-----------------------------------+
              c100 0000  ld   $00
              c101 0071  ld   $71
              c102 00a6  ld   $a6
              c103 0038  ld   $38
              c104 00e9  ld   $e9
              c105 0030  ld   $30
              c106 0085  ld   $85
              c107 0091  ld   $91
              c108 004c  ld   $4c
              c109 00a8  ld   $a8
              c10a 001d  ld   $1d
              c10b 009b  ld   $9b
              c10c 003e  ld   $3e
              c10d 00bc  ld   $bc
              c10e 001f  ld   $1f
              c10f 00fd  ld   $fd
              c110 009e  ld   $9e
              c111 006e  ld   $6e
              c112 006b  ld   $6b
              c113 0027  ld   $27
              c114 00fd  ld   $fd
              c115 009e  ld   $9e
              c116 006e  ld   $6e
              c117 006b  ld   $6b
              c118 0028  ld   $28
              c119 0000  ld   $00
              c11a 00a9  ld   $a9
              c11b 008a  ld   $8a
              c11c 00a0  ld   $a0
              c11d 0004  ld   $04
              c11e 0020  ld   $20
              c11f 0052  ld   $52
              c120 001e  ld   $1e
              c121 00a5  ld   $a5
              c122 006c  ld   $6c
              c123 00a6  ld   $a6
              c124 006b  ld   $6b
              c125 0085  ld   $85
              c126 0095  ld   $95
              c127 0086  ld   $86
              c128 0096  ld   $96
              c129 00a2  ld   $a2
              c12a 0090  ld   $90
              c12b 0038  ld   $38
              c12c 0020  ld   $20
              c12d 00c1  ld   $c1
              c12e 001c  ld   $1c
              c12f 0020  ld   $20
              c130 0055  ld   $55
              c131 001e  ld   $1e
              c132 004c  ld   $4c
              c133 00ef  ld   $ef
              c134 000b  ld   $0b
              c135 00a0  ld   $a0
              c136 0001  ld   $01
              c137 00a9  ld   $a9
              c138 0020  ld   $20
              c139 0024  ld   $24
              c13a 0099  ld   $99
              c13b 0010  ld   $10
              c13c 0002  ld   $02
              c13d 00a9  ld   $a9
              c13e 002d  ld   $2d
              c13f 0099  ld   $99
              c140 0004  ld   $04
              c141 0002  ld   $02
              c142 0085  ld   $85
              c143 0099  ld   $99
              c144 0084  ld   $84
              c145 00a4  ld   $a4
              c146 00c8  ld   $c8
              c147 00a9  ld   $a9
              c148 0030  ld   $30
              c149 00a6  ld   $a6
              c14a 0094  ld   $94
              c14b 00d0  ld   $d0
              c14c 0003  ld   $03
              c14d 004c  ld   $4c
              c14e 007c  ld   $7c
              c14f 001f  ld   $1f
              c150 00a9  ld   $a9
              c151 0000  ld   $00
              c152 00e0  ld   $e0
              c153 0080  ld   $80
              c154 00f0  ld   $f0
              c155 0002  ld   $02
              c156 00b0  ld   $b0
              c157 0009  ld   $09
              c158 00a9  ld   $a9
              c159 0035  ld   $35
              c15a 00a0  ld   $a0
              c15b 001e  ld   $1e
              c15c 0020  ld   $20
              c15d 00a0  ld   $a0
              c15e 001a  ld   $1a
              c15f 00a9  ld   $a9
              c160 00f7  ld   $f7
              c161 0085  ld   $85
              c162 0090  ld   $90
              c163 00a9  ld   $a9
              c164 0030  ld   $30
              c165 00a0  ld   $a0
              c166 001e  ld   $1e
              c167 0020  ld   $20
              c168 00d3  ld   $d3
              c169 001c  ld   $1c
              c16a 00f0  ld   $f0
              c16b 001e  ld   $1e
              c16c 0010  ld   $10
              c16d 0012  ld   $12
              c16e 00a9  ld   $a9
              c16f 002b  ld   $2b
              c170 00a0  ld   $a0
              c171 001e  ld   $1e
              c172 0020  ld   $20
              c173 00d3  ld   $d3
              c174 001c  ld   $1c
              c175 00f0  ld   $f0
              c176 0002  ld   $02
              c177 0010  ld   $10
              c178 000e  ld   $0e
              c179 0020  ld   $20
              c17a 005a  ld   $5a
              c17b 001b  ld   $1b
              c17c 00c6  ld   $c6
              c17d 0090  ld   $90
              c17e 00d0  ld   $d0
              c17f 00ee  ld   $ee
              c180 0020  ld   $20
              c181 0076  ld   $76
              c182 001b  ld   $1b
              c183 00e6  ld   $e6
              c184 0090  ld   $90
              c185 00d0  ld   $d0
              c186 00dc  ld   $dc
              c187 0020  ld   $20
              c188 008e  ld   $8e
              c189 0018  ld   $18
              c18a 0020  ld   $20
              c18b 0013  ld   $13
              c18c 001d  ld   $1d
              c18d 00a2  ld   $a2
              c18e 0001  ld   $01
              c18f 00a5  ld   $a5
              c190 0090  ld   $90
              c191 0018  ld   $18
              c192 0069  ld   $69
              c193 000a  ld   $0a
              c194 0030  ld   $30
              c195 0009  ld   $09
              c196 00c9  ld   $c9
              c197 000b  ld   $0b
              c198 00b0  ld   $b0
              c199 0006  ld   $06
              c19a 0069  ld   $69
              c19b 00ff  ld   $ff
              c19c 00aa  ld   $aa
              c19d 00a9  ld   $a9
              c19e 0002  ld   $02
              c19f 0038  ld   $38
              c1a0 00e9  ld   $e9
              c1a1 0002  ld   $02
              c1a2 0085  ld   $85
              c1a3 0091  ld   $91
              c1a4 0086  ld   $86
              c1a5 0090  ld   $90
              c1a6 008a  ld   $8a
              c1a7 00f0  ld   $f0
              c1a8 0002  ld   $02
              c1a9 0010  ld   $10
              c1aa 0013  ld   $13
              c1ab 00a4  ld   $a4
              c1ac 00a4  ld   $a4
              c1ad 00a9  ld   $a9
              c1ae 002e  ld   $2e
              c1af 00c8  ld   $c8
              c1b0 0099  ld   $99
              c1b1 0004  ld   $04
              c1b2 0002  ld   $02
              c1b3 008a  ld   $8a
              c1b4 00f0  ld   $f0
              c1b5 0006  ld   $06
              c1b6 00a9  ld   $a9
              c1b7 0030  ld   $30
              c1b8 00c8  ld   $c8
              c1b9 0099  ld   $99
              c1ba 0004  ld   $04
              c1bb 0002  ld   $02
              c1bc 0084  ld   $84
              c1bd 00a4  ld   $a4
              c1be 00a0  ld   $a0
              c1bf 0000  ld   $00
              c1c0 00a2  ld   $a2
              c1c1 0080  ld   $80
              c1c2 00a5  ld   $a5
              c1c3 0098  ld   $98
              c1c4 0018  ld   $18
              c1c5 0079  ld   $79
              c1c6 0091  ld   $91
              c1c7 001f  ld   $1f
              c1c8 0085  ld   $85
              c1c9 0098  ld   $98
              c1ca 00a5  ld   $a5
              c1cb 0097  ld   $97
              c1cc 0079  ld   $79
              c1cd 0090  ld   $90
              c1ce 001f  ld   $1f
              c1cf 0085  ld   $85
              c1d0 0097  ld   $97
              c1d1 00a5  ld   $a5
              c1d2 0096  ld   $96
              c1d3 0079  ld   $79
              c1d4 008f  ld   $8f
              c1d5 001f  ld   $1f
              c1d6 0085  ld   $85
              c1d7 0096  ld   $96
              c1d8 00a5  ld   $a5
              c1d9 0095  ld   $95
              c1da 0079  ld   $79
              c1db 008e  ld   $8e
              c1dc 001f  ld   $1f
              c1dd 0085  ld   $85
              c1de 0095  ld   $95
              c1df 00e8  ld   $e8
              c1e0 001f  ld   $1f
              c1e1 0000  ld   $00
              c1e2 0000  ld   $00
              c1e3 00b0  ld   $b0
              c1e4 0004  ld   $04
              c1e5 0010  ld   $10
              c1e6 00de  ld   $de
              c1e7 0030  ld   $30
              c1e8 0002  ld   $02
              c1e9 0030  ld   $30
              c1ea 00da  ld   $da
              c1eb 008a  ld   $8a
              c1ec 0090  ld   $90
              c1ed 0004  ld   $04
              c1ee 0049  ld   $49
              c1ef 00ff  ld   $ff
              c1f0 0069  ld   $69
              c1f1 000a  ld   $0a
              c1f2 0069  ld   $69
              c1f3 002f  ld   $2f
              c1f4 00c8  ld   $c8
              c1f5 00c8  ld   $c8
              c1f6 00c8  ld   $c8
              c1f7 00c8  ld   $c8
              c1f8 0084  ld   $84
              c1f9 0079  ld   $79
              c1fa 00a4  ld   $a4
              c1fb fe00  bra  ac          ;+-----------------------------------+
              c1fc fcfd  bra  $c1fd       ;|                                   |
              c1fd 1418  ld   $18,y       ;| Trampoline for page $c100 lookups |
              c1fe e006  jmp  y,$06       ;|                                   |
              c1ff c218  st   [$18]       ;+-----------------------------------+
              c200 00a4  ld   $a4
              c201 00c8  ld   $c8
              c202 00aa  ld   $aa
              c203 0029  ld   $29
              c204 007f  ld   $7f
              c205 0099  ld   $99
              c206 0004  ld   $04
              c207 0002  ld   $02
              c208 00c6  ld   $c6
              c209 0090  ld   $90
              c20a 00d0  ld   $d0
              c20b 0006  ld   $06
              c20c 00a9  ld   $a9
              c20d 002e  ld   $2e
              c20e 00c8  ld   $c8
              c20f 0099  ld   $99
              c210 0004  ld   $04
              c211 0002  ld   $02
              c212 0084  ld   $84
              c213 00a4  ld   $a4
              c214 00a4  ld   $a4
              c215 0079  ld   $79
              c216 008a  ld   $8a
              c217 0049  ld   $49
              c218 00ff  ld   $ff
              c219 0029  ld   $29
              c21a 0080  ld   $80
              c21b 00aa  ld   $aa
              c21c 00c0  ld   $c0
              c21d 0024  ld   $24
              c21e 00f0  ld   $f0
              c21f 0004  ld   $04
              c220 00c0  ld   $c0
              c221 003c  ld   $3c
              c222 00d0  ld   $d0
              c223 00a6  ld   $a6
              c224 00a4  ld   $a4
              c225 00a4  ld   $a4
              c226 00b9  ld   $b9
              c227 0004  ld   $04
              c228 0002  ld   $02
              c229 0088  ld   $88
              c22a 00c9  ld   $c9
              c22b 0030  ld   $30
              c22c 00f0  ld   $f0
              c22d 00f8  ld   $f8
              c22e 00c9  ld   $c9
              c22f 002e  ld   $2e
              c230 00f0  ld   $f0
              c231 0001  ld   $01
              c232 00c8  ld   $c8
              c233 00a9  ld   $a9
              c234 002b  ld   $2b
              c235 00a6  ld   $a6
              c236 0091  ld   $91
              c237 00f0  ld   $f0
              c238 002e  ld   $2e
              c239 0010  ld   $10
              c23a 0008  ld   $08
              c23b 00a9  ld   $a9
              c23c 0000  ld   $00
              c23d 0038  ld   $38
              c23e 00e5  ld   $e5
              c23f 0091  ld   $91
              c240 00aa  ld   $aa
              c241 00a9  ld   $a9
              c242 002d  ld   $2d
              c243 0099  ld   $99
              c244 0006  ld   $06
              c245 0002  ld   $02
              c246 00a9  ld   $a9
              c247 0045  ld   $45
              c248 0099  ld   $99
              c249 0005  ld   $05
              c24a 0002  ld   $02
              c24b 008a  ld   $8a
              c24c 00a2  ld   $a2
              c24d 002f  ld   $2f
              c24e 0038  ld   $38
              c24f 00e8  ld   $e8
              c250 00e9  ld   $e9
              c251 000a  ld   $0a
              c252 00b0  ld   $b0
              c253 00fb  ld   $fb
              c254 0069  ld   $69
              c255 003a  ld   $3a
              c256 0099  ld   $99
              c257 0008  ld   $08
              c258 0002  ld   $02
              c259 008a  ld   $8a
              c25a 0099  ld   $99
              c25b 0007  ld   $07
              c25c 0002  ld   $02
              c25d 00a9  ld   $a9
              c25e 0000  ld   $00
              c25f 0099  ld   $99
              c260 0009  ld   $09
              c261 0002  ld   $02
              c262 00f0  ld   $f0
              c263 0008  ld   $08
              c264 0099  ld   $99
              c265 0004  ld   $04
              c266 0002  ld   $02
              c267 00a9  ld   $a9
              c268 0000  ld   $00
              c269 0099  ld   $99
              c26a 0005  ld   $05
              c26b 0002  ld   $02
              c26c 00a9  ld   $a9
              c26d 0005  ld   $05
              c26e 00a0  ld   $a0
              c26f 0002  ld   $02
              c270 0060  ld   $60
              c271 0080  ld   $80
              c272 0000  ld   $00
              c273 0000  ld   $00
              c274 0000  ld   $00
              c275 0000  ld   $00
              c276 00fa  ld   $fa
              c277 000a  ld   $0a
              c278 001f  ld   $1f
              c279 0000  ld   $00
              c27a 0000  ld   $00
              c27b 0098  ld   $98
              c27c 0096  ld   $96
              c27d 0080  ld   $80
              c27e 00ff  ld   $ff
              c27f 00f0  ld   $f0
              c280 00bd  ld   $bd
              c281 00c0  ld   $c0
              c282 0000  ld   $00
              c283 0001  ld   $01
              c284 0086  ld   $86
              c285 00a0  ld   $a0
              c286 00ff  ld   $ff
              c287 00ff  ld   $ff
              c288 00d8  ld   $d8
              c289 00f0  ld   $f0
              c28a 0000  ld   $00
              c28b 0000  ld   $00
              c28c 0003  ld   $03
              c28d 00e8  ld   $e8
              c28e 00ff  ld   $ff
              c28f 00ff  ld   $ff
              c290 00ff  ld   $ff
              c291 009c  ld   $9c
              c292 0000  ld   $00
              c293 0000  ld   $00
              c294 0000  ld   $00
              c295 000a  ld   $0a
              c296 00ff  ld   $ff
              c297 00ff  ld   $ff
              c298 00ff  ld   $ff
              * 5 times
              c29b 00df  ld   $df
              c29c 000a  ld   $0a
              c29d 0080  ld   $80
              c29e 0000  ld   $00
              c29f 0003  ld   $03
              c2a0 004b  ld   $4b
              c2a1 00c0  ld   $c0
              c2a2 00ff  ld   $ff
              c2a3 00ff  ld   $ff
              c2a4 0073  ld   $73
              c2a5 0060  ld   $60
              c2a6 0000  ld   $00
              c2a7 0000  ld   $00
              c2a8 000e  ld   $0e
              c2a9 0010  ld   $10
              c2aa 00ff  ld   $ff
              c2ab 00ff  ld   $ff
              c2ac 00fd  ld   $fd
              c2ad 00a8  ld   $a8
              c2ae 0000  ld   $00
              c2af 0000  ld   $00
              c2b0 0000  ld   $00
              c2b1 003c  ld   $3c
              c2b2 0020  ld   $20
              c2b3 0084  ld   $84
              c2b4 001c  ld   $1c
              c2b5 00a9  ld   $a9
              c2b6 0089  ld   $89
              c2b7 00a0  ld   $a0
              c2b8 001f  ld   $1f
              c2b9 0020  ld   $20
              c2ba 001a  ld   $1a
              c2bb 001c  ld   $1c
              c2bc 00f0  ld   $f0
              c2bd 0070  ld   $70
              c2be 00a5  ld   $a5
              c2bf 009c  ld   $9c
              c2c0 00d0  ld   $d0
              c2c1 0003  ld   $03
              c2c2 004c  ld   $4c
              c2c3 0071  ld   $71
              c2c4 0019  ld   $19
              c2c5 00a2  ld   $a2
              c2c6 0081  ld   $81
              c2c7 00a0  ld   $a0
              c2c8 0000  ld   $00
              c2c9 0020  ld   $20
              c2ca 004c  ld   $4c
              c2cb 001c  ld   $1c
              c2cc 00a5  ld   $a5
              c2cd 00a1  ld   $a1
              c2ce 0010  ld   $10
              c2cf 000f  ld   $0f
              c2d0 0020  ld   $20
              c2d1 0044  ld   $44
              c2d2 001d  ld   $1d
              c2d3 00a9  ld   $a9
              c2d4 0081  ld   $81
              c2d5 00a0  ld   $a0
              c2d6 0000  ld   $00
              c2d7 0020  ld   $20
              c2d8 00d3  ld   $d3
              c2d9 001c  ld   $1c
              c2da 00d0  ld   $d0
              c2db 0003  ld   $03
              c2dc 0098  ld   $98
              c2dd 00a4  ld   $a4
              c2de 003b  ld   $3b
              c2df 0020  ld   $20
              c2e0 0076  ld   $76
              c2e1 001c  ld   $1c
              c2e2 0098  ld   $98
              c2e3 0048  ld   $48
              c2e4 0020  ld   $20
              c2e5 0062  ld   $62
              c2e6 001a  ld   $1a
              c2e7 00a9  ld   $a9
              c2e8 0020  ld   $20
              c2e9 0000  ld   $00
              c2ea 0000  ld   $00
              c2eb 0081  ld   $81
              c2ec 00a0  ld   $a0
              c2ed 0000  ld   $00
              c2ee 0020  ld   $20
              c2ef 00a0  ld   $a0
              c2f0 001a  ld   $1a
              c2f1 0020  ld   $20
              c2f2 0046  ld   $46
              c2f3 0020  ld   $20
              c2f4 0068  ld   $68
              c2f5 004a  ld   $4a
              c2f6 0090  ld   $90
              c2f7 000a  ld   $0a
              c2f8 00a5  ld   $a5
              c2f9 0094  ld   $94
              c2fa 00f0  ld   $f0
              c2fb fe00  bra  ac          ;+-----------------------------------+
              c2fc fcfd  bra  $c2fd       ;|                                   |
              c2fd 1418  ld   $18,y       ;| Trampoline for page $c200 lookups |
              c2fe e006  jmp  y,$06       ;|                                   |
              c2ff c218  st   [$18]       ;+-----------------------------------+
              c300 0006  ld   $06
              c301 00a5  ld   $a5
              c302 0099  ld   $99
              c303 0049  ld   $49
              c304 00ff  ld   $ff
              c305 0085  ld   $85
              c306 0099  ld   $99
              c307 0060  ld   $60
              c308 0081  ld   $81
              c309 0038  ld   $38
              c30a 00aa  ld   $aa
              c30b 003b  ld   $3b
              c30c 0029  ld   $29
              c30d 0007  ld   $07
              c30e 0071  ld   $71
              c30f 0034  ld   $34
              c310 0058  ld   $58
              c311 003e  ld   $3e
              c312 0056  ld   $56
              c313 0074  ld   $74
              c314 0016  ld   $16
              c315 007e  ld   $7e
              c316 00b3  ld   $b3
              c317 001b  ld   $1b
              c318 0077  ld   $77
              c319 002f  ld   $2f
              c31a 00ee  ld   $ee
              c31b 00e3  ld   $e3
              c31c 0085  ld   $85
              c31d 007a  ld   $7a
              c31e 001d  ld   $1d
              c31f 0084  ld   $84
              c320 001c  ld   $1c
              c321 002a  ld   $2a
              c322 007c  ld   $7c
              c323 0063  ld   $63
              c324 0059  ld   $59
              c325 0058  ld   $58
              c326 000a  ld   $0a
              c327 007e  ld   $7e
              c328 0075  ld   $75
              c329 00fd  ld   $fd
              c32a 00e7  ld   $e7
              c32b 00c6  ld   $c6
              c32c 0080  ld   $80
              c32d 0031  ld   $31
              c32e 0072  ld   $72
              c32f 0018  ld   $18
              c330 0010  ld   $10
              c331 0081  ld   $81
              c332 0000  ld   $00
              c333 0000  ld   $00
              c334 0000  ld   $00
              c335 0000  ld   $00
              c336 00a9  ld   $a9
              c337 0018  ld   $18
              c338 00a0  ld   $a0
              c339 0020  ld   $20
              c33a 0020  ld   $20
              c33b 00a0  ld   $a0
              c33c 001a  ld   $1a
              c33d 00a5  ld   $a5
              c33e 00a3  ld   $a3
              c33f 0069  ld   $69
              c340 0050  ld   $50
              c341 0090  ld   $90
              c342 0003  ld   $03
              c343 0020  ld   $20
              c344 009b  ld   $9b
              c345 001c  ld   $1c
              c346 0085  ld   $85
              c347 0089  ld   $89
              c348 0020  ld   $20
              c349 0087  ld   $87
              c34a 001c  ld   $1c
              c34b 00a5  ld   $a5
              c34c 0094  ld   $94
              c34d 00c9  ld   $c9
              c34e 0088  ld   $88
              c34f 0090  ld   $90
              c350 0003  ld   $03
              c351 0020  ld   $20
              c352 004c  ld   $4c
              c353 001b  ld   $1b
              c354 0020  ld   $20
              c355 0044  ld   $44
              c356 001d  ld   $1d
              c357 00a5  ld   $a5
              c358 003b  ld   $3b
              c359 0018  ld   $18
              c35a 0069  ld   $69
              c35b 0081  ld   $81
              c35c 00f0  ld   $f0
              c35d 00f3  ld   $f3
              c35e 0038  ld   $38
              c35f 00e9  ld   $e9
              c360 0001  ld   $01
              c361 0048  ld   $48
              c362 00a2  ld   $a2
              c363 0005  ld   $05
              c364 00b5  ld   $b5
              c365 009c  ld   $9c
              c366 00b4  ld   $b4
              c367 0094  ld   $94
              c368 0095  ld   $95
              c369 0094  ld   $94
              c36a 0094  ld   $94
              c36b 009c  ld   $9c
              c36c 00ca  ld   $ca
              c36d 0010  ld   $10
              c36e 00f5  ld   $f5
              c36f 00a5  ld   $a5
              c370 0089  ld   $89
              c371 0085  ld   $85
              c372 00a3  ld   $a3
              c373 0020  ld   $20
              c374 0098  ld   $98
              c375 0018  ld   $18
              c376 0020  ld   $20
              c377 000d  ld   $0d
              c378 0020  ld   $20
              c379 00a9  ld   $a9
              c37a 001d  ld   $1d
              c37b 00a0  ld   $a0
              c37c 0020  ld   $20
              c37d 0020  ld   $20
              c37e 00af  ld   $af
              c37f 0020  ld   $20
              c380 00a9  ld   $a9
              c381 0000  ld   $00
              c382 0085  ld   $85
              c383 00a2  ld   $a2
              c384 0068  ld   $68
              c385 0020  ld   $20
              c386 0031  ld   $31
              c387 001b  ld   $1b
              c388 0060  ld   $60
              c389 0085  ld   $85
              c38a 00a4  ld   $a4
              c38b 0084  ld   $84
              c38c 00a5  ld   $a5
              c38d 0020  ld   $20
              c38e 0042  ld   $42
              c38f 001c  ld   $1c
              c390 00a9  ld   $a9
              c391 008a  ld   $8a
              c392 0020  ld   $20
              c393 00a0  ld   $a0
              c394 001a  ld   $1a
              c395 0020  ld   $20
              c396 00b3  ld   $b3
              c397 0020  ld   $20
              c398 00a9  ld   $a9
              c399 008a  ld   $8a
              c39a 00a0  ld   $a0
              c39b 0000  ld   $00
              c39c 004c  ld   $4c
              c39d 00a0  ld   $a0
              c39e 001a  ld   $1a
              c39f 0085  ld   $85
              c3a0 00a4  ld   $a4
              c3a1 0084  ld   $84
              c3a2 00a5  ld   $a5
              c3a3 0020  ld   $20
              c3a4 003f  ld   $3f
              c3a5 001c  ld   $1c
              c3a6 00b1  ld   $b1
              c3a7 00a4  ld   $a4
              c3a8 0085  ld   $85
              c3a9 009a  ld   $9a
              c3aa 00a4  ld   $a4
              c3ab 00a4  ld   $a4
              c3ac 00c8  ld   $c8
              c3ad 0098  ld   $98
              c3ae 00d0  ld   $d0
              c3af 0002  ld   $02
              c3b0 00e6  ld   $e6
              c3b1 00a5  ld   $a5
              c3b2 0085  ld   $85
              c3b3 00a4  ld   $a4
              c3b4 00a4  ld   $a4
              c3b5 00a5  ld   $a5
              c3b6 0020  ld   $20
              c3b7 00a0  ld   $a0
              c3b8 001a  ld   $1a
              c3b9 00a5  ld   $a5
              c3ba 00a4  ld   $a4
              c3bb 00a4  ld   $a4
              c3bc 00a5  ld   $a5
              c3bd 0018  ld   $18
              c3be 0069  ld   $69
              c3bf 0005  ld   $05
              c3c0 0090  ld   $90
              c3c1 0001  ld   $01
              c3c2 00c8  ld   $c8
              c3c3 0085  ld   $85
              c3c4 00a4  ld   $a4
              c3c5 0084  ld   $84
              c3c6 00a5  ld   $a5
              c3c7 0020  ld   $20
              c3c8 00df  ld   $df
              c3c9 0018  ld   $18
              c3ca 00a9  ld   $a9
              c3cb 008f  ld   $8f
              c3cc 00a0  ld   $a0
              c3cd 0000  ld   $00
              c3ce 00c6  ld   $c6
              c3cf 009a  ld   $9a
              c3d0 00d0  ld   $d0
              c3d1 00e4  ld   $e4
              c3d2 0060  ld   $60
              c3d3 0098  ld   $98
              c3d4 0035  ld   $35
              c3d5 0044  ld   $44
              c3d6 007a  ld   $7a
              c3d7 0068  ld   $68
              c3d8 0028  ld   $28
              c3d9 00b1  ld   $b1
              c3da 0046  ld   $46
              c3db 0020  ld   $20
              c3dc 00a3  ld   $a3
              c3dd 001c  ld   $1c
              c3de 0030  ld   $30
              c3df 002a  ld   $2a
              c3e0 00d0  ld   $d0
              c3e1 0013  ld   $13
              c3e2 00a5  ld   $a5
              c3e3 0006  ld   $06
              c3e4 0085  ld   $85
              c3e5 0095  ld   $95
              c3e6 00a5  ld   $a5
              c3e7 000a  ld   $0a
              c3e8 0085  ld   $85
              c3e9 0096  ld   $96
              c3ea 00a5  ld   $a5
              c3eb 0007  ld   $07
              c3ec 0085  ld   $85
              c3ed 0097  ld   $97
              c3ee 00a5  ld   $a5
              c3ef 000b  ld   $0b
              c3f0 0021  ld   $21
              c3f1 0000  ld   $00
              c3f2 0000  ld   $00
              c3f3 0085  ld   $85
              c3f4 0098  ld   $98
              c3f5 004c  ld   $4c
              c3f6 002a  ld   $2a
              c3f7 0021  ld   $21
              c3f8 00a9  ld   $a9
              c3f9 0088  ld   $88
              c3fa 00a0  ld   $a0
              c3fb fe00  bra  ac          ;+-----------------------------------+
              c3fc fcfd  bra  $c3fd       ;|                                   |
              c3fd 1418  ld   $18,y       ;| Trampoline for page $c300 lookups |
              c3fe e006  jmp  y,$06       ;|                                   |
              c3ff c218  st   [$18]       ;+-----------------------------------+
              c400 0022  ld   $22
              c401 0020  ld   $20
              c402 001a  ld   $1a
              c403 001c  ld   $1c
              c404 00a9  ld   $a9
              c405 00e3  ld   $e3
              c406 00a0  ld   $a0
              c407 0020  ld   $20
              c408 0020  ld   $20
              c409 00a0  ld   $a0
              c40a 001a  ld   $1a
              c40b 00a9  ld   $a9
              c40c 00e7  ld   $e7
              c40d 00a0  ld   $a0
              c40e 0020  ld   $20
              c40f 0020  ld   $20
              c410 00df  ld   $df
              c411 0018  ld   $18
              c412 00a6  ld   $a6
              c413 0098  ld   $98
              c414 00a5  ld   $a5
              c415 0095  ld   $95
              c416 0085  ld   $85
              c417 0098  ld   $98
              c418 0086  ld   $86
              c419 0095  ld   $95
              c41a 00a6  ld   $a6
              c41b 0096  ld   $96
              c41c 00a5  ld   $a5
              c41d 0097  ld   $97
              c41e 0085  ld   $85
              c41f 0096  ld   $96
              c420 0086  ld   $86
              c421 0097  ld   $97
              c422 00a9  ld   $a9
              c423 0000  ld   $00
              c424 0085  ld   $85
              c425 0099  ld   $99
              c426 00a5  ld   $a5
              c427 0094  ld   $94
              c428 0085  ld   $85
              c429 00a3  ld   $a3
              c42a 00a9  ld   $a9
              c42b 0080  ld   $80
              c42c 0085  ld   $85
              c42d 0094  ld   $94
              c42e 0020  ld   $20
              c42f 004f  ld   $4f
              c430 0019  ld   $19
              c431 00a2  ld   $a2
              c432 0088  ld   $88
              c433 00a0  ld   $a0
              c434 0022  ld   $22
              c435 004c  ld   $4c
              c436 004c  ld   $4c
              c437 001c  ld   $1c
              c438 00a9  ld   $a9
              c439 00bc  ld   $bc
              c43a 00a0  ld   $a0
              c43b 0021  ld   $21
              c43c 0020  ld   $20
              c43d 00df  ld   $df
              c43e 0018  ld   $18
              c43f 0020  ld   $20
              c440 0084  ld   $84
              c441 001c  ld   $1c
              c442 00a9  ld   $a9
              c443 00c1  ld   $c1
              c444 00a0  ld   $a0
              c445 0021  ld   $21
              c446 00a6  ld   $a6
              c447 00a1  ld   $a1
              c448 0020  ld   $20
              c449 007f  ld   $7f
              c44a 001b  ld   $1b
              c44b 0020  ld   $20
              c44c 0084  ld   $84
              c44d 001c  ld   $1c
              c44e 0020  ld   $20
              c44f 0044  ld   $44
              c450 001d  ld   $1d
              c451 00a9  ld   $a9
              c452 0000  ld   $00
              c453 0085  ld   $85
              c454 00a2  ld   $a2
              c455 0020  ld   $20
              c456 0098  ld   $98
              c457 0018  ld   $18
              c458 00a9  ld   $a9
              c459 00c6  ld   $c6
              c45a 00a0  ld   $a0
              c45b 0021  ld   $21
              c45c 0020  ld   $20
              c45d 0095  ld   $95
              c45e 0018  ld   $18
              c45f 00a5  ld   $a5
              c460 0099  ld   $99
              c461 0048  ld   $48
              c462 0010  ld   $10
              c463 000d  ld   $0d
              c464 0020  ld   $20
              c465 008e  ld   $8e
              c466 0018  ld   $18
              c467 00a5  ld   $a5
              c468 0099  ld   $99
              c469 0030  ld   $30
              c46a 0009  ld   $09
              c46b 00a5  ld   $a5
              c46c 0044  ld   $44
              c46d 0049  ld   $49
              c46e 00ff  ld   $ff
              c46f 0085  ld   $85
              c470 0044  ld   $44
              c471 0020  ld   $20
              c472 000d  ld   $0d
              c473 0020  ld   $20
              c474 00a9  ld   $a9
              c475 00c6  ld   $c6
              c476 00a0  ld   $a0
              c477 0021  ld   $21
              c478 0020  ld   $20
              c479 00df  ld   $df
              c47a 0018  ld   $18
              c47b 0068  ld   $68
              c47c 0010  ld   $10
              c47d 0003  ld   $03
              c47e 0020  ld   $20
              c47f 000d  ld   $0d
              c480 0020  ld   $20
              c481 00a9  ld   $a9
              c482 00cb  ld   $cb
              c483 00a0  ld   $a0
              c484 0021  ld   $21
              c485 004c  ld   $4c
              c486 0099  ld   $99
              c487 0020  ld   $20
              c488 0020  ld   $20
              c489 0042  ld   $42
              c48a 001c  ld   $1c
              c48b 00a9  ld   $a9
              c48c 0000  ld   $00
              c48d 0085  ld   $85
              c48e 0044  ld   $44
              c48f 0020  ld   $20
              c490 0047  ld   $47
              c491 0021  ld   $21
              c492 00a2  ld   $a2
              c493 0081  ld   $81
              c494 00a0  ld   $a0
              c495 0000  ld   $00
              c496 0020  ld   $20
              c497 003d  ld   $3d
              c498 0021  ld   $21
              c499 00a9  ld   $a9
              c49a 008a  ld   $8a
              c49b 00a0  ld   $a0
              c49c 0000  ld   $00
              c49d 0020  ld   $20
              c49e 001a  ld   $1a
              c49f 001c  ld   $1c
              c4a0 00a9  ld   $a9
              c4a1 0000  ld   $00
              c4a2 0085  ld   $85
              c4a3 0099  ld   $99
              c4a4 00a5  ld   $a5
              c4a5 0044  ld   $44
              c4a6 0020  ld   $20
              c4a7 00b8  ld   $b8
              c4a8 0021  ld   $21
              c4a9 00a9  ld   $a9
              c4aa 0081  ld   $81
              c4ab 00a0  ld   $a0
              c4ac 0000  ld   $00
              c4ad 004c  ld   $4c
              c4ae 0087  ld   $87
              c4af 001b  ld   $1b
              c4b0 0048  ld   $48
              c4b1 004c  ld   $4c
              c4b2 0079  ld   $79
              c4b3 0021  ld   $21
              c4b4 0081  ld   $81
              c4b5 0049  ld   $49
              c4b6 000f  ld   $0f
              c4b7 00da  ld   $da
              c4b8 00a2  ld   $a2
              c4b9 0083  ld   $83
              c4ba 0049  ld   $49
              c4bb 000f  ld   $0f
              c4bc 00da  ld   $da
              c4bd 00a2  ld   $a2
              c4be 007f  ld   $7f
              c4bf 0000  ld   $00
              c4c0 0000  ld   $00
              c4c1 0000  ld   $00
              c4c2 0000  ld   $00
              c4c3 0005  ld   $05
              c4c4 0084  ld   $84
              c4c5 00e6  ld   $e6
              c4c6 001a  ld   $1a
              c4c7 002d  ld   $2d
              c4c8 001b  ld   $1b
              c4c9 0086  ld   $86
              c4ca 0028  ld   $28
              c4cb 0007  ld   $07
              c4cc 00fb  ld   $fb
              c4cd 00f8  ld   $f8
              c4ce 0087  ld   $87
              c4cf 0099  ld   $99
              c4d0 0068  ld   $68
              c4d1 0089  ld   $89
              c4d2 0001  ld   $01
              c4d3 0087  ld   $87
              c4d4 0023  ld   $23
              c4d5 0035  ld   $35
              c4d6 00df  ld   $df
              c4d7 00e1  ld   $e1
              c4d8 0086  ld   $86
              c4d9 00a5  ld   $a5
              c4da 005d  ld   $5d
              c4db 00e7  ld   $e7
              c4dc 0028  ld   $28
              c4dd 0083  ld   $83
              c4de 0049  ld   $49
              c4df 000f  ld   $0f
              c4e0 00da  ld   $da
              c4e1 00a2  ld   $a2
              c4e2 00a1  ld   $a1
              c4e3 0054  ld   $54
              c4e4 0046  ld   $46
              c4e5 008f  ld   $8f
              c4e6 0013  ld   $13
              c4e7 008f  ld   $8f
              c4e8 0052  ld   $52
              c4e9 0043  ld   $43
              c4ea 0089  ld   $89
              c4eb 00cd  ld   $cd
              c4ec 00e1  ld   $e1
              c4ed 004e  ld   $4e
              c4ee 008f  ld   $8f
              c4ef 0092  ld   $92
              c4f0 0014  ld   $14
              c4f1 00ad  ld   $ad
              c4f2 0081  ld   $81
              c4f3 0047  ld   $47
              c4f4 0089  ld   $89
              c4f5 00c7  ld   $c7
              c4f6 00a5  ld   $a5
              c4f7 0099  ld   $99
              c4f8 0022  ld   $22
              c4f9 0000  ld   $00
              c4fa 0000  ld   $00
              c4fb fe00  bra  ac          ;+-----------------------------------+
              c4fc fcfd  bra  $c4fd       ;|                                   |
              c4fd 1418  ld   $18,y       ;| Trampoline for page $c400 lookups |
              c4fe e006  jmp  y,$06       ;|                                   |
              c4ff c218  st   [$18]       ;+-----------------------------------+
              c500 0048  ld   $48
              c501 0010  ld   $10
              c502 0003  ld   $03
              c503 0020  ld   $20
              c504 000d  ld   $0d
              c505 0020  ld   $20
              c506 00a5  ld   $a5
              c507 0094  ld   $94
              c508 0048  ld   $48
              c509 00c9  ld   $c9
              c50a 0081  ld   $81
              c50b 0090  ld   $90
              c50c 0007  ld   $07
              c50d 00a9  ld   $a9
              c50e 0034  ld   $34
              c50f 00a0  ld   $a0
              c510 001a  ld   $1a
              c511 0020  ld   $20
              c512 0087  ld   $87
              c513 001b  ld   $1b
              c514 00a9  ld   $a9
              c515 002e  ld   $2e
              c516 00a0  ld   $a0
              c517 0022  ld   $22
              c518 0020  ld   $20
              c519 0099  ld   $99
              c51a 0020  ld   $20
              c51b 0068  ld   $68
              c51c 00c9  ld   $c9
              c51d 0081  ld   $81
              c51e 0090  ld   $90
              c51f 0007  ld   $07
              c520 00a9  ld   $a9
              c521 00bc  ld   $bc
              c522 00a0  ld   $a0
              c523 0021  ld   $21
              c524 0020  ld   $20
              c525 0095  ld   $95
              c526 0018  ld   $18
              c527 0068  ld   $68
              c528 0010  ld   $10
              c529 0003  ld   $03
              c52a 004c  ld   $4c
              c52b 000d  ld   $0d
              c52c 0020  ld   $20
              c52d 0060  ld   $60
              c52e 000b  ld   $0b
              c52f 0076  ld   $76
              c530 00b3  ld   $b3
              c531 0083  ld   $83
              c532 00bd  ld   $bd
              c533 00d3  ld   $d3
              c534 0079  ld   $79
              c535 001e  ld   $1e
              c536 00f4  ld   $f4
              c537 00a6  ld   $a6
              c538 00f5  ld   $f5
              c539 007b  ld   $7b
              c53a 0083  ld   $83
              c53b 00fc  ld   $fc
              c53c 00b0  ld   $b0
              c53d 0010  ld   $10
              c53e 007c  ld   $7c
              c53f 000c  ld   $0c
              c540 001f  ld   $1f
              c541 0067  ld   $67
              c542 00ca  ld   $ca
              c543 007c  ld   $7c
              c544 00de  ld   $de
              c545 0053  ld   $53
              c546 00cb  ld   $cb
              c547 00c1  ld   $c1
              c548 007d  ld   $7d
              c549 0014  ld   $14
              c54a 0064  ld   $64
              c54b 0070  ld   $70
              c54c 004c  ld   $4c
              c54d 007d  ld   $7d
              c54e 00b7  ld   $b7
              c54f 00ea  ld   $ea
              c550 0051  ld   $51
              c551 007a  ld   $7a
              c552 007d  ld   $7d
              c553 0063  ld   $63
              c554 0030  ld   $30
              c555 0088  ld   $88
              c556 007e  ld   $7e
              c557 007e  ld   $7e
              c558 0092  ld   $92
              c559 0044  ld   $44
              c55a 0099  ld   $99
              c55b 003a  ld   $3a
              c55c 007e  ld   $7e
              c55d 004c  ld   $4c
              c55e 00cc  ld   $cc
              c55f 0091  ld   $91
              c560 00c7  ld   $c7
              c561 007f  ld   $7f
              c562 00aa  ld   $aa
              c563 00aa  ld   $aa
              c564 00aa  ld   $aa
              c565 0013  ld   $13
              c566 0081  ld   $81
              c567 0000  ld   $00
              c568 0000  ld   $00
              c569 0000  ld   $00
              c56a 0000  ld   $00
              c56b 00e6  ld   $e6
              c56c 00a6  ld   $a6
              c56d 00d0  ld   $d0
              c56e 0002  ld   $02
              c56f 00e6  ld   $e6
              c570 00a7  ld   $a7
              c571 0084  ld   $84
              c572 0019  ld   $19
              c573 00a0  ld   $a0
              c574 0000  ld   $00
              c575 00b1  ld   $b1
              c576 00a6  ld   $a6
              c577 00a4  ld   $a4
              c578 0019  ld   $19
              c579 00c9  ld   $c9
              c57a 003a  ld   $3a
              c57b 00b0  ld   $b0
              c57c 000a  ld   $0a
              c57d 00c9  ld   $c9
              c57e 0020  ld   $20
              c57f 00f0  ld   $f0
              c580 00ea  ld   $ea
              c581 0038  ld   $38
              c582 00e9  ld   $e9
              c583 0030  ld   $30
              c584 0038  ld   $38
              c585 00e9  ld   $e9
              c586 00d0  ld   $d0
              c587 0060  ld   $60
              c588 0080  ld   $80
              c589 004f  ld   $4f
              c58a 00c7  ld   $c7
              c58b 0052  ld   $52
              c58c 0058  ld   $58
              c58d 00a2  ld   $a2
              c58e 00fb  ld   $fb
              c58f 009a  ld   $9a
              c590 00a9  ld   $a9
              c591 004c  ld   $4c
              c592 0085  ld   $85
              c593 0087  ld   $87
              c594 0085  ld   $85
              c595 0038  ld   $38
              c596 00a9  ld   $a9
              c597 0082  ld   $82
              c598 00a0  ld   $a0
              c599 0012  ld   $12
              c59a 0085  ld   $85
              c59b 0039  ld   $39
              c59c 0084  ld   $84
              c59d 003a  ld   $3a
              c59e 00a9  ld   $a9
              c59f 0028  ld   $28
              c5a0 0085  ld   $85
              c5a1 0019  ld   $19
              c5a2 00a9  ld   $a9
              c5a3 001e  ld   $1e
              c5a4 0085  ld   $85
              c5a5 0019  ld   $19
              c5a6 00a2  ld   $a2
              c5a7 0000  ld   $00
              c5a8 00a9  ld   $a9
              c5a9 0003  ld   $03
              c5aa 0085  ld   $85
              c5ab 0086  ld   $86
              c5ac 008a  ld   $8a
              c5ad 0085  ld   $85
              c5ae 009b  ld   $9b
              c5af 0085  ld   $85
              c5b0 0019  ld   $19
              c5b1 0085  ld   $85
              c5b2 004a  ld   $4a
              c5b3 0048  ld   $48
              c5b4 0085  ld   $85
              c5b5 0045  ld   $45
              c5b6 00e8  ld   $e8
              c5b7 008e  ld   $8e
              c5b8 0002  ld   $02
              c5b9 0024  ld   $24
              c5ba 008e  ld   $8e
              c5bb 0001  ld   $01
              c5bc 0024  ld   $24
              c5bd 00a2  ld   $a2
              c5be 004b  ld   $4b
              c5bf 0086  ld   $86
              c5c0 0048  ld   $48
              c5c1 00a0  ld   $a0
              c5c2 0071  ld   $71
              c5c3 0085  ld   $85
              c5c4 005d  ld   $5d
              c5c5 0084  ld   $84
              c5c6 005e  ld   $5e
              c5c7 0085  ld   $85
              c5c8 0046  ld   $46
              c5c9 0084  ld   $84
              c5ca 0047  ld   $47
              c5cb 00a8  ld   $a8
              c5cc 00e6  ld   $e6
              c5cd 0046  ld   $46
              c5ce 00d0  ld   $d0
              c5cf 0004  ld   $04
              c5d0 00e6  ld   $e6
              c5d1 0047  ld   $47
              c5d2 0030  ld   $30
              c5d3 000f  ld   $0f
              c5d4 00a9  ld   $a9
              c5d5 0055  ld   $55
              c5d6 0091  ld   $91
              c5d7 0046  ld   $46
              c5d8 00d1  ld   $d1
              c5d9 0046  ld   $46
              c5da 00d0  ld   $d0
              c5db 0007  ld   $07
              c5dc 000a  ld   $0a
              c5dd 0091  ld   $91
              c5de 0046  ld   $46
              c5df 00d1  ld   $d1
              c5e0 0046  ld   $46
              c5e1 00f0  ld   $f0
              c5e2 00e9  ld   $e9
              c5e3 00a5  ld   $a5
              c5e4 0001  ld   $01
              c5e5 00c9  ld   $c9
              c5e6 0001  ld   $01
              c5e7 00e9  ld   $e9
              c5e8 0000  ld   $00
              c5e9 0085  ld   $85
              c5ea 0047  ld   $47
              c5eb 00a5  ld   $a5
              c5ec 0046  ld   $46
              c5ed 00a4  ld   $a4
              c5ee 0047  ld   $47
              c5ef 0085  ld   $85
              c5f0 0069  ld   $69
              c5f1 0084  ld   $84
              c5f2 006a  ld   $6a
              c5f3 0085  ld   $85
              c5f4 0065  ld   $65
              c5f5 0084  ld   $84
              c5f6 0066  ld   $66
              c5f7 00a2  ld   $a2
              c5f8 0000  ld   $00
              c5f9 00a0  ld   $a0
              c5fa 0071  ld   $71
              c5fb fe00  bra  ac          ;+-----------------------------------+
              c5fc fcfd  bra  $c5fd       ;|                                   |
              c5fd 1418  ld   $18,y       ;| Trampoline for page $c500 lookups |
              c5fe e006  jmp  y,$06       ;|                                   |
              c5ff c218  st   [$18]       ;+-----------------------------------+
              c600 0086  ld   $86
              c601 005d  ld   $5d
              c602 0084  ld   $84
              c603 005e  ld   $5e
              c604 00a0  ld   $a0
              c605 0023  ld   $23
              c606 0000  ld   $00
              c607 004e  ld   $4e
              c608 0000  ld   $00
              c609 0098  ld   $98
              c60a 0091  ld   $91
              c60b 005d  ld   $5d
              c60c 00e6  ld   $e6
              c60d 005d  ld   $5d
              c60e 00a5  ld   $a5
              c60f 005d  ld   $5d
              c610 00a4  ld   $a4
              c611 005e  ld   $5e
              c612 0020  ld   $20
              c613 001b  ld   $1b
              c614 0005  ld   $05
              c615 00a9  ld   $a9
              c616 003b  ld   $3b
              c617 00a0  ld   $a0
              c618 0023  ld   $23
              c619 0020  ld   $20
              c61a 00ef  ld   $ef
              c61b 000b  ld   $0b
              c61c 00a5  ld   $a5
              c61d 0069  ld   $69
              c61e 0038  ld   $38
              c61f 00e5  ld   $e5
              c620 005d  ld   $5d
              c621 00aa  ld   $aa
              c622 00a5  ld   $a5
              c623 006a  ld   $6a
              c624 00e5  ld   $e5
              c625 005e  ld   $5e
              c626 0020  ld   $20
              c627 0045  ld   $45
              c628 001e  ld   $1e
              c629 00a9  ld   $a9
              c62a 002e  ld   $2e
              c62b 00a0  ld   $a0
              c62c 0023  ld   $23
              c62d 0020  ld   $20
              c62e 00ef  ld   $ef
              c62f 000b  ld   $0b
              c630 0020  ld   $20
              c631 0044  ld   $44
              c632 0007  ld   $07
              c633 004c  ld   $4c
              c634 0071  ld   $71
              c635 0005  ld   $05
              c636 0020  ld   $20
              c637 0042  ld   $42
              c638 0059  ld   $59
              c639 0054  ld   $54
              c63a 0045  ld   $45
              c63b 0053  ld   $53
              c63c 0020  ld   $20
              c63d 0046  ld   $46
              c63e 0052  ld   $52
              c63f 0045  ld   $45
              c640 0045  ld   $45
              c641 000d  ld   $0d
              c642 0000  ld   $00
              c643 0023  ld   $23
              c644 0023  ld   $23
              c645 0023  ld   $23
              c646 0020  ld   $20
              c647 004d  ld   $4d
              c648 0053  ld   $53
              c649 0020  ld   $20
              c64a 0042  ld   $42
              c64b 0041  ld   $41
              c64c 0053  ld   $53
              c64d 0049  ld   $49
              c64e 0043  ld   $43
              c64f 0020  ld   $20
              c650 0023  ld   $23
              c651 0023  ld   $23
              c652 0023  ld   $23
              c653 000d  ld   $0d
              c654 000d  ld   $0d
              c655 0000  ld   $00
              c656 0024  ld   $24
              c657 0000  ld   $00
              c658 0038  ld   $38
              c659 0011  ld   $11
              c65a 0000  ld   $00
              c65b 000b  ld   $0b
              c65c 002b  ld   $2b
              c65d 0022  ld   $22
              c65e 0059  ld   $59
              c65f 0003  ld   $03
              c660 00b4  ld   $b4
              c661 00e6  ld   $e6
              c662 0011  ld   $11
              c663 0000  ld   $00
              c664 0002  ld   $02
              c665 002b  ld   $2b
              c666 0030  ld   $30
              c667 0059  ld   $59
              c668 0000  ld   $00
              c669 00f3  ld   $f3
              c66a 0030  ld   $30
              c66b 0093  ld   $93
              c66c 0030  ld   $30
              c66d 0093  ld   $93
              c66e 0030  ld   $30
              c66f 00f3  ld   $f3
              c670 0030  ld   $30
              c671 0011  ld   $11
              c672 0000  ld   $00
              c673 0001  ld   $01
              c674 002b  ld   $2b
              c675 0030  ld   $30
              c676 0011  ld   $11
              c677 0000  ld   $00
              c678 0027  ld   $27
              c679 002b  ld   $2b
              c67a 0032  ld   $32
              c67b 0011  ld   $11
              c67c 0000  ld   $00
              c67d 00a0  ld   $a0
              c67e 002b  ld   $2b
              c67f 0024  ld   $24
              c680 0011  ld   $11
              c681 0060  ld   $60
              c682 0070  ld   $70
              c683 002b  ld   $2b
              c684 0026  ld   $26
              c685 0011  ld   $11
              c686 0003  ld   $03
              c687 000b  ld   $0b
              c688 002b  ld   $2b
              c689 0022  ld   $22
              c68a 00b4  ld   $b4
              c68b 00f3  ld   $f3
              c68c 0011  ld   $11
              c68d 0000  ld   $00
              c68e 0025  ld   $25
              c68f 00cf  ld   $cf
              c690 0018  ld   $18
              c691 0025  ld   $25
              c692 0000  ld   $00
              c693 0054  ld   $54
              c694 0011  ld   $11
              c695 0000  ld   $00
              c696 0001  ld   $01
              c697 002b  ld   $2b
              c698 0030  ld   $30
              c699 0011  ld   $11
              c69a 00e0  ld   $e0
              c69b 0001  ld   $01
              c69c 002b  ld   $2b
              c69d 0034  ld   $34
              c69e 0059  ld   $59
              c69f 0023  ld   $23
              c6a0 002b  ld   $2b
              c6a1 0036  ld   $36
              c6a2 0021  ld   $21
              c6a3 0034  ld   $34
              c6a4 0035  ld   $35
              c6a5 0050  ld   $50
              c6a6 001b  ld   $1b
              c6a7 0021  ld   $21
              c6a8 0036  ld   $36
              c6a9 00f0  ld   $f0
              c6aa 0030  ld   $30
              c6ab 0093  ld   $93
              c6ac 0036  ld   $36
              c6ad 0021  ld   $21
              c6ae 0034  ld   $34
              c6af 0090  ld   $90
              c6b0 0023  ld   $23
              c6b1 0059  ld   $59
              c6b2 0070  ld   $70
              c6b3 00f0  ld   $f0
              c6b4 0030  ld   $30
              c6b5 0021  ld   $21
              c6b6 0034  ld   $34
              c6b7 00e3  ld   $e3
              c6b8 0010  ld   $10
              c6b9 00e9  ld   $e9
              c6ba 002b  ld   $2b
              c6bb 0034  ld   $34
              c6bc 0093  ld   $93
              c6bd 0030  ld   $30
              c6be 0093  ld   $93
              c6bf 0030  ld   $30
              c6c0 001a  ld   $1a
              c6c1 0030  ld   $30
              c6c2 008c  ld   $8c
              c6c3 00f0  ld   $f0
              c6c4 0035  ld   $35
              c6c5 0072  ld   $72
              c6c6 000c  ld   $0c
              c6c7 0011  ld   $11
              c6c8 0001  ld   $01
              c6c9 0001  ld   $01
              c6ca 002b  ld   $2b
              c6cb 0030  ld   $30
              c6cc 0059  ld   $59
              c6cd 0060  ld   $60
              c6ce 00f0  ld   $f0
              c6cf 0030  ld   $30
              c6d0 0059  ld   $59
              c6d1 0006  ld   $06
              c6d2 005e  ld   $5e
              c6d3 002a  ld   $2a
              c6d4 0059  ld   $59
              c6d5 000d  ld   $0d
              c6d6 00cf  ld   $cf
              c6d7 0032  ld   $32
              c6d8 001a  ld   $1a
              c6d9 002a  ld   $2a
              c6da 00e6  ld   $e6
              c6db 0001  ld   $01
              c6dc 0035  ld   $35
              c6dd 004d  ld   $4d
              c6de 003c  ld   $3c
              c6df 0011  ld   $11
              c6e0 0000  ld   $00
              c6e1 0026  ld   $26
              c6e2 002b  ld   $2b
              c6e3 001a  ld   $1a
              c6e4 0011  ld   $11
              c6e5 008d  ld   $8d
              c6e6 0022  ld   $22
              c6e7 00ff  ld   $ff
              c6e8 0026  ld   $26
              c6e9 0000  ld   $00
              c6ea 0047  ld   $47
              c6eb 002b  ld   $2b
              c6ec 001a  ld   $1a
              c6ed 0011  ld   $11
              c6ee 000c  ld   $0c
              c6ef 000b  ld   $0b
              c6f0 002b  ld   $2b
              c6f1 0022  ld   $22
              c6f2 00b4  ld   $b4
              c6f3 00e6  ld   $e6
              c6f4 0075  ld   $75
              c6f5 00cf  ld   $cf
              c6f6 0032  ld   $32
              c6f7 0063  ld   $63
              c6f8 0090  ld   $90
              c6f9 0000  ld   $00
              c6fa 0011  ld   $11
              c6fb fe00  bra  ac          ;+-----------------------------------+
              c6fc fcfd  bra  $c6fd       ;|                                   |
              c6fd 1418  ld   $18,y       ;| Trampoline for page $c600 lookups |
              c6fe e006  jmp  y,$06       ;|                                   |
              c6ff c218  st   [$18]       ;+-----------------------------------+
              c700 00e1  ld   $e1
              c701 0004  ld   $04
              c702 002b  ld   $2b
              c703 0022  ld   $22
              c704 0011  ld   $11
              c705 0000  ld   $00
              c706 000b  ld   $0b
              c707 002b  ld   $2b
              c708 0024  ld   $24
              c709 0021  ld   $21
              c70a 0030  ld   $30
              c70b 002b  ld   $2b
              c70c 0028  ld   $28
              c70d 00e3  ld   $e3
              c70e 0006  ld   $06
              c70f 002b  ld   $2b
              c710 0030  ld   $30
              c711 0059  ld   $59
              c712 0005  ld   $05
              c713 002b  ld   $2b
              c714 0034  ld   $34
              c715 0021  ld   $21
              c716 0036  ld   $36
              c717 007f  ld   $7f
              c718 0000  ld   $00
              c719 0082  ld   $82
              c71a 00fe  ld   $fe
              c71b 005e  ld   $5e
              c71c 0026  ld   $26
              c71d 0011  ld   $11
              c71e 0000  ld   $00
              c71f 0007  ld   $07
              c720 0099  ld   $99
              c721 0028  ld   $28
              c722 00ad  ld   $ad
              c723 0035  ld   $35
              c724 003f  ld   $3f
              c725 0036  ld   $36
              c726 0093  ld   $93
              c727 0026  ld   $26
              c728 00b4  ld   $b4
              c729 00cb  ld   $cb
              c72a 0093  ld   $93
              c72b 0036  ld   $36
              c72c 0093  ld   $93
              c72d 0028  ld   $28
              c72e 0021  ld   $21
              c72f 0034  ld   $34
              c730 00e6  ld   $e6
              c731 0001  ld   $01
              c732 0035  ld   $35
              c733 004d  ld   $4d
              c734 0021  ld   $21
              c735 0063  ld   $63
              c736 00ff  ld   $ff
              c737 0027  ld   $27
              c738 0000  ld   $00
              c739 0059  ld   $59
              c73a 0075  ld   $75
              c73b 00e6  ld   $e6
              c73c 00ff  ld   $ff
              c73d 0035  ld   $35
              c73e 003f  ld   $3f
              c73f 0041  ld   $41
              c740 00e3  ld   $e3
              c741 00df  ld   $df
              c742 0035  ld   $35
              c743 0053  ld   $53
              c744 001a  ld   $1a
              c745 002b  ld   $2b
              c746 0024  ld   $24
              c747 0011  ld   $11
              c748 0000  ld   $00
              c749 0029  ld   $29
              c74a 00cf  ld   $cf
              c74b 0018  ld   $18
              c74c 0035  ld   $35
              c74d 0072  ld   $72
              c74e 0015  ld   $15
              c74f 0063  ld   $63
              c750 00ff  ld   $ff
              c751 0011  ld   $11
              c752 009b  ld   $9b
              c753 0007  ld   $07
              c754 0090  ld   $90
              c755 003f  ld   $3f
              c756 00e6  ld   $e6
              c757 005f  ld   $5f
              c758 0035  ld   $35
              c759 0056  ld   $56
              c75a 0022  ld   $22
              c75b 0011  ld   $11
              c75c 00c0  ld   $c0
              c75d 00ff  ld   $ff
              c75e 00e3  ld   $e3
              c75f 002d  ld   $2d
              c760 0035  ld   $35
              c761 0053  ld   $53
              c762 0030  ld   $30
              c763 00e3  ld   $e3
              c764 0032  ld   $32
              c765 002b  ld   $2b
              c766 0034  ld   $34
              c767 0011  ld   $11
              c768 0000  ld   $00
              c769 0007  ld   $07
              c76a 0090  ld   $90
              c76b 0035  ld   $35
              c76c 002b  ld   $2b
              c76d 0034  ld   $34
              c76e 0011  ld   $11
              c76f 0000  ld   $00
              c770 0008  ld   $08
              c771 002b  ld   $2b
              c772 0036  ld   $36
              c773 0021  ld   $21
              c774 0034  ld   $34
              c775 00e9  ld   $e9
              c776 00e9  ld   $e9
              c777 0099  ld   $99
              c778 0034  ld   $34
              c779 0099  ld   $99
              c77a 0036  ld   $36
              c77b 0090  ld   $90
              c77c 0044  ld   $44
              c77d 0011  ld   $11
              c77e 000c  ld   $0c
              c77f 0008  ld   $08
              c780 002b  ld   $2b
              c781 0036  ld   $36
              c782 001a  ld   $1a
              c783 0030  ld   $30
              c784 00e6  ld   $e6
              c785 00fb  ld   $fb
              c786 0035  ld   $35
              c787 0056  ld   $56
              c788 0052  ld   $52
              c789 0011  ld   $11
              c78a 0000  ld   $00
              c78b 0028  ld   $28
              c78c 00cf  ld   $cf
              c78d 0018  ld   $18
              c78e 0011  ld   $11
              c78f 000f  ld   $0f
              c790 0026  ld   $26
              c791 00cf  ld   $cf
              c792 0018  ld   $18
              c793 0028  ld   $28
              c794 0000  ld   $00
              c795 004c  ld   $4c
              c796 0011  ld   $11
              c797 00e1  ld   $e1
              c798 0004  ld   $04
              c799 002b  ld   $2b
              c79a 0022  ld   $22
              c79b 0011  ld   $11
              c79c 0000  ld   $00
              c79d 000b  ld   $0b
              c79e 002b  ld   $2b
              c79f 0024  ld   $24
              c7a0 0059  ld   $59
              c7a1 0062  ld   $62
              c7a2 005e  ld   $5e
              c7a3 0030  ld   $30
              c7a4 00e3  ld   $e3
              c7a5 009e  ld   $9e
              c7a6 002b  ld   $2b
              c7a7 0034  ld   $34
              c7a8 00ad  ld   $ad
              c7a9 005e  ld   $5e
              c7aa 0031  ld   $31
              c7ab 0021  ld   $21
              c7ac 0030  ld   $30
              c7ad 00e6  ld   $e6
              c7ae 0002  ld   $02
              c7af 002b  ld   $2b
              c7b0 0028  ld   $28
              c7b1 0011  ld   $11
              c7b2 0000  ld   $00
              c7b3 0007  ld   $07
              c7b4 0099  ld   $99
              c7b5 0028  ld   $28
              c7b6 00ad  ld   $ad
              c7b7 0082  ld   $82
              c7b8 0001  ld   $01
              c7b9 005e  ld   $5e
              c7ba 0026  ld   $26
              c7bb 00b4  ld   $b4
              c7bc 00cb  ld   $cb
              c7bd 0093  ld   $93
              c7be 0028  ld   $28
              c7bf 001a  ld   $1a
              c7c0 0028  ld   $28
              c7c1 0035  ld   $35
              c7c2 0072  ld   $72
              c7c3 0019  ld   $19
              c7c4 0021  ld   $21
              c7c5 0034  ld   $34
              c7c6 00e3  ld   $e3
              c7c7 0016  ld   $16
              c7c8 002b  ld   $2b
              c7c9 0028  ld   $28
              c7ca 00ad  ld   $ad
              c7cb 005e  ld   $5e
              c7cc 0026  ld   $26
              c7cd 0021  ld   $21
              c7ce 0034  ld   $34
              c7cf 00ad  ld   $ad
              c7d0 00f0  ld   $f0
              c7d1 0028  ld   $28
              c7d2 001a  ld   $1a
              c7d3 0026  ld   $26
              c7d4 00f0  ld   $f0
              c7d5 0034  ld   $34
              c7d6 0093  ld   $93
              c7d7 0034  ld   $34
              c7d8 0093  ld   $93
              c7d9 0034  ld   $34
              c7da 001a  ld   $1a
              c7db 0034  ld   $34
              c7dc 008c  ld   $8c
              c7dd 00da  ld   $da
              c7de 0035  ld   $35
              c7df 0072  ld   $72
              c7e0 002c  ld   $2c
              c7e1 00ff  ld   $ff
              c7e2 0029  ld   $29
              c7e3 0000  ld   $00
              c7e4 001f  ld   $1f
              c7e5 0021  ld   $21
              c7e6 0024  ld   $24
              c7e7 00e3  ld   $e3
              c7e8 0013  ld   $13
              c7e9 0035  ld   $35
              c7ea 0072  ld   $72
              c7eb 000d  ld   $0d
              c7ec 0075  ld   $75
              c7ed 0011  ld   $11
              c7ee 0000  ld   $00
              c7ef 0028  ld   $28
              c7f0 00cf  ld   $cf
              c7f1 0018  ld   $18
              c7f2 0063  ld   $63
              c7f3 00ff  ld   $ff
              c7f4 00e3  ld   $e3
              c7f5 0003  ld   $03
              c7f6 0035  ld   $35
              c7f7 003f  ld   $3f
              c7f8 001c  ld   $1c
              c7f9 00e3  ld   $e3
              c7fa 0003  ld   $03
              c7fb fe00  bra  ac          ;+-----------------------------------+
              c7fc fcfd  bra  $c7fd       ;|                                   |
              c7fd 1418  ld   $18,y       ;| Trampoline for page $c700 lookups |
              c7fe e006  jmp  y,$06       ;|                                   |
              c7ff c218  st   [$18]       ;+-----------------------------------+
              c800 0035  ld   $35
              c801 0072  ld   $72
              c802 001c  ld   $1c
              c803 0059  ld   $59
              c804 0006  ld   $06
              c805 005e  ld   $5e
              c806 002c  ld   $2c
              c807 0063  ld   $63
              c808 00ff  ld   $ff
              c809 002a  ld   $2a
              c80a 0000  ld   $00
              c80b 003e  ld   $3e
              c80c 00a5  ld   $a5
              c80d 000f  ld   $0f
              c80e 0085  ld   $85
              c80f 003e  ld   $3e
              c810 00a5  ld   $a5
              c811 000f  ld   $0f
              c812 00c5  ld   $c5
              c813 003e  ld   $3e
              c814 00d0  ld   $d0
              c815 001b  ld   $1b
              c816 00a5  ld   $a5
              c817 000e  ld   $0e
              c818 0029  ld   $29
              c819 000f  ld   $0f
              c81a 00d0  ld   $d0
              c81b 00f4  ld   $f4
              c81c 00a5  ld   $a5
              c81d 000e  ld   $0e
              c81e 0029  ld   $29
              c81f 0010  ld   $10
              c820 00d0  ld   $d0
              c821 0003  ld   $03
              c822 00a9  ld   $a9
              c823 0020  ld   $20
              c824 002c  ld   $2c
              c825 00a9  ld   $a9
              c826 007f  ld   $7f
              c827 0000  ld   $00
              c828 0020  ld   $20
              c829 0032  ld   $32
              c82a 002a  ld   $2a
              c82b 0020  ld   $20
              c82c 0000  ld   $00
              c82d 002e  ld   $2e
              c82e 004c  ld   $4c
              c82f 0004  ld   $04
              c830 002a  ld   $2a
              c831 00c9  ld   $c9
              c832 00ff  ld   $ff
              c833 00f0  ld   $f0
              c834 00d9  ld   $d9
              c835 0048  ld   $48
              c836 00a9  ld   $a9
              c837 0020  ld   $20
              c838 0000  ld   $00
              c839 0020  ld   $20
              c83a 0032  ld   $32
              c83b 002a  ld   $2a
              c83c 0068  ld   $68
              c83d 0060  ld   $60
              c83e 00a5  ld   $a5
              c83f 0030  ld   $30
              c840 0038  ld   $38
              c841 00e9  ld   $e9
              c842 0006  ld   $06
              c843 00c9  ld   $c9
              c844 0060  ld   $60
              c845 0090  ld   $90
              c846 0002  ld   $02
              c847 0085  ld   $85
              c848 0030  ld   $30
              c849 0060  ld   $60
              c84a 002b  ld   $2b
              c84b 0000  ld   $00
              c84c 0013  ld   $13
              c84d 0085  ld   $85
              c84e 0043  ld   $43
              c84f 0048  ld   $48
              c850 0008  ld   $08
              c851 008a  ld   $8a
              c852 0048  ld   $48
              c853 0098  ld   $98
              c854 0048  ld   $48
              c855 00a5  ld   $a5
              c856 0043  ld   $43
              c857 0000  ld   $00
              c858 0068  ld   $68
              c859 00a8  ld   $a8
              c85a 0068  ld   $68
              c85b 00aa  ld   $aa
              c85c 0028  ld   $28
              c85d 0068  ld   $68
              c85e 0018  ld   $18
              c85f 0060  ld   $60
              c860 002c  ld   $2c
              c861 0000  ld   $00
              c862 0041  ld   $41
              c863 0024  ld   $24
              c864 0043  ld   $43
              c865 0050  ld   $50
              c866 0018  ld   $18
              c867 00a5  ld   $a5
              c868 000f  ld   $0f
              c869 00c9  ld   $c9
              c86a 00ff  ld   $ff
              c86b 0069  ld   $69
              c86c 0000  ld   $00
              c86d 00c9  ld   $c9
              c86e 0060  ld   $60
              c86f 00d0  ld   $d0
              c870 0002  ld   $02
              c871 00a9  ld   $a9
              c872 001f  ld   $1f
              c873 0090  ld   $90
              c874 0002  ld   $02
              c875 00e9  ld   $e9
              c876 0020  ld   $20
              c877 00c9  ld   $c9
              c878 000a  ld   $0a
              c879 00d0  ld   $d0
              c87a 0002  ld   $02
              c87b 00a9  ld   $a9
              c87c 000d  ld   $0d
              c87d 0018  ld   $18
              c87e 0060  ld   $60
              c87f 008a  ld   $8a
              c880 0048  ld   $48
              c881 0098  ld   $98
              c882 0048  ld   $48
              c883 0020  ld   $20
              c884 0000  ld   $00
              c885 002a  ld   $2a
              c886 0020  ld   $20
              c887 000a  ld   $0a
              c888 002c  ld   $2c
              c889 00c9  ld   $c9
              c88a 0007  ld   $07
              c88b 00d0  ld   $d0
              c88c 0004  ld   $04
              c88d 0000  ld   $00
              c88e 004c  ld   $4c
              c88f 0020  ld   $20
              c890 002c  ld   $2c
              c891 00c9  ld   $c9
              c892 000d  ld   $0d
              c893 0090  ld   $90
              c894 00ee  ld   $ee
              c895 00f0  ld   $f0
              c896 0003  ld   $03
              c897 0048  ld   $48
              c898 0000  ld   $00
              c899 0068  ld   $68
              c89a 0085  ld   $85
              c89b 003e  ld   $3e
              c89c 0068  ld   $68
              c89d 00a8  ld   $a8
              c89e 0068  ld   $68
              c89f 00aa  ld   $aa
              c8a0 00a5  ld   $a5
              c8a1 003e  ld   $3e
              c8a2 0018  ld   $18
              c8a3 0060  ld   $60
              c8a4 002d  ld   $2d
              c8a5 0000  ld   $00
              c8a6 0018  ld   $18
              c8a7 00a5  ld   $a5
              c8a8 000f  ld   $0f
              c8a9 00c9  ld   $c9
              c8aa 0003  ld   $03
              c8ab 00d0  ld   $d0
              c8ac 0003  ld   $03
              c8ad 004c  ld   $4c
              c8ae 0026  ld   $26
              c8af 0009  ld   $09
              c8b0 00a5  ld   $a5
              c8b1 000e  ld   $0e
              c8b2 00cd  ld   $cd
              c8b3 0003  ld   $03
              c8b4 0002  ld   $02
              c8b5 0010  ld   $10
              c8b6 0007  ld   $07
              c8b7 0084  ld   $84
              c8b8 003e  ld   $3e
              c8b9 0020  ld   $20
              c8ba 0000  ld   $00
              c8bb 002e  ld   $2e
              c8bc 00a4  ld   $a4
              c8bd 003e  ld   $3e
              c8be 0060  ld   $60
              c8bf 002e  ld   $2e
              c8c0 0000  ld   $00
              c8c1 0036  ld   $36
              c8c2 00a5  ld   $a5
              c8c3 000e  ld   $0e
              c8c4 00a8  ld   $a8
              c8c5 0038  ld   $38
              c8c6 00ed  ld   $ed
              c8c7 0003  ld   $03
              c8c8 0002  ld   $02
              c8c9 008c  ld   $8c
              c8ca 0003  ld   $03
              c8cb 0002  ld   $02
              c8cc 0018  ld   $18
              c8cd 006d  ld   $6d
              c8ce 0002  ld   $02
              c8cf 0002  ld   $02
              c8d0 008d  ld   $8d
              c8d1 0002  ld   $02
              c8d2 0002  ld   $02
              c8d3 00a9  ld   $a9
              c8d4 0000  ld   $00
              c8d5 006d  ld   $6d
              c8d6 0001  ld   $01
              c8d7 0002  ld   $02
              c8d8 008d  ld   $8d
              c8d9 0001  ld   $01
              c8da 0002  ld   $02
              c8db 00a9  ld   $a9
              c8dc 0000  ld   $00
              c8dd 006d  ld   $6d
              c8de 0000  ld   $00
              c8df 0002  ld   $02
              c8e0 008d  ld   $8d
              c8e1 0000  ld   $00
              c8e2 0002  ld   $02
              c8e3 00ad  ld   $ad
              c8e4 0001  ld   $01
              c8e5 0002  ld   $02
              c8e6 00c9  ld   $c9
              c8e7 001a  ld   $1a
              c8e8 00ad  ld   $ad
              c8e9 0000  ld   $00
              c8ea 0002  ld   $02
              c8eb 00e9  ld   $e9
              c8ec 004f  ld   $4f
              c8ed 0090  ld   $90
              c8ee 0008  ld   $08
              c8ef 00a9  ld   $a9
              c8f0 0000  ld   $00
              c8f1 008d  ld   $8d
              c8f2 0000  ld   $00
              c8f3 0002  ld   $02
              c8f4 008d  ld   $8d
              c8f5 0001  ld   $01
              c8f6 0002  ld   $02
              c8f7 0060  ld   $60
              c8f8 002f  ld   $2f
              c8f9 0000  ld   $00
              c8fa 002a  ld   $2a
              c8fb fe00  bra  ac          ;+-----------------------------------+
              c8fc fcfd  bra  $c8fd       ;|                                   |
              c8fd 1418  ld   $18,y       ;| Trampoline for page $c800 lookups |
              c8fe e006  jmp  y,$06       ;|                                   |
              c8ff c218  st   [$18]       ;+-----------------------------------+
              c900 00c9  ld   $c9
              c901 005f  ld   $5f
              c902 00f0  ld   $f0
              c903 0005  ld   $05
              c904 00e0  ld   $e0
              c905 005a  ld   $5a
              c906 00b0  ld   $b0
              c907 0011  ld   $11
              c908 0060  ld   $60
              c909 008a  ld   $8a
              c90a 0048  ld   $48
              c90b 0020  ld   $20
              c90c 0032  ld   $32
              c90d 002a  ld   $2a
              c90e 00a9  ld   $a9
              c90f 0020  ld   $20
              c910 0000  ld   $00
              c911 0020  ld   $20
              c912 0032  ld   $32
              c913 002a  ld   $2a
              c914 0068  ld   $68
              c915 00aa  ld   $aa
              c916 00f0  ld   $f0
              c917 0008  ld   $08
              c918 00ca  ld   $ca
              c919 0020  ld   $20
              c91a 0032  ld   $32
              c91b 002a  ld   $2a
              c91c 0090  ld   $90
              c91d 0003  ld   $03
              c91e 00a9  ld   $a9
              c91f 0000  ld   $00
              c920 0060  ld   $60
              c921 00a9  ld   $a9
              c922 003f  ld   $3f
              c923 0000  ld   $00
              c924 00a9  ld   $a9
              c925 000d  ld   $0d
              c926 0000  ld   $00
              c927 00a2  ld   $a2
              c928 0000  ld   $00
              c929 0060  ld   $60
              c92a 0030  ld   $30
              c92b 0000  ld   $00
              c92c 0050  ld   $50
              c92d 0008  ld   $08
              c92e 0048  ld   $48
              c92f 00a0  ld   $a0
              c930 0000  ld   $00
              c931 00b9  ld   $b9
              c932 002a  ld   $2a
              c933 0030  ld   $30
              c934 00c8  ld   $c8
              c935 0020  ld   $20
              c936 0000  ld   $00
              c937 002b  ld   $2b
              c938 00d0  ld   $d0
              c939 00f7  ld   $f7
              c93a 00a9  ld   $a9
              c93b 0005  ld   $05
              c93c 00a0  ld   $a0
              c93d 0024  ld   $24
              c93e 0085  ld   $85
              c93f 0034  ld   $34
              c940 0084  ld   $84
              c941 0035  ld   $35
              c942 00a9  ld   $a9
              c943 0000  ld   $00
              c944 0085  ld   $85
              c945 0036  ld   $36
              c946 00a9  ld   $a9
              c947 000a  ld   $0a
              c948 0085  ld   $85
              c949 0037  ld   $37
              c94a 00a9  ld   $a9
              c94b 00fe  ld   $fe
              c94c 00a0  ld   $a0
              c94d 0030  ld   $30
              c94e 0085  ld   $85
              c94f 0016  ld   $16
              c950 0084  ld   $84
              c951 0017  ld   $17
              c952 0068  ld   $68
              c953 0028  ld   $28
              c954 004c  ld   $4c
              c955 009c  ld   $9c
              c956 0007  ld   $07
              c957 000d  ld   $0d
              c958 0053  ld   $53
              c959 0045  ld   $45
              c95a 004e  ld   $4e
              c95b 0044  ld   $44
              c95c 0049  ld   $49
              c95d 004e  ld   $4e
              c95e 0047  ld   $47
              c95f 0020  ld   $20
              c960 0054  ld   $54
              c961 004f  ld   $4f
              c962 0020  ld   $20
              c963 0042  ld   $42
              c964 0041  ld   $41
              c965 0042  ld   $42
              c966 0045  ld   $45
              c967 004c  ld   $4c
              c968 0046  ld   $46
              c969 0049  ld   $49
              c96a 0053  ld   $53
              c96b 0048  ld   $48
              c96c 000d  ld   $0d
              c96d 0000  ld   $00
              c96e 0021  ld   $21
              c96f 0034  ld   $34
              c970 00ad  ld   $ad
              c971 00cf  ld   $cf
              c972 0032  ld   $32
              c973 0011  ld   $11
              c974 0000  ld   $00
              c975 0026  ld   $26
              c976 002b  ld   $2b
              c977 001a  ld   $1a
              c978 00ee  ld   $ee
              c979 0000  ld   $00
              c97a 00df  ld   $df
              c97b 0002  ld   $02
              c97c 00ff  ld   $ff
              c97d 0031  ld   $31
              c97e 0000  ld   $00
              c97f 005a  ld   $5a
              c980 00ee  ld   $ee
              c981 0003  ld   $03
              c982 00f0  ld   $f0
              c983 0034  ld   $34
              c984 001a  ld   $1a
              c985 0037  ld   $37
              c986 008c  ld   $8c
              c987 000a  ld   $0a
              c988 0035  ld   $35
              c989 0072  ld   $72
              c98a 0017  ld   $17
              c98b 0021  ld   $21
              c98c 0034  ld   $34
              c98d 00ad  ld   $ad
              c98e 00e6  ld   $e6
              c98f 0020  ld   $20
              c990 0035  ld   $35
              c991 0056  ld   $56
              c992 0017  ld   $17
              c993 0075  ld   $75
              c994 0011  ld   $11
              c995 0041  ld   $41
              c996 0030  ld   $30
              c997 00cf  ld   $cf
              c998 0018  ld   $18
              c999 001a  ld   $1a
              c99a 0036  ld   $36
              c99b 00e3  ld   $e3
              c99c 0008  ld   $08
              c99d 005e  ld   $5e
              c99e 0036  ld   $36
              c99f 0021  ld   $21
              c9a0 0034  ld   $34
              c9a1 00ad  ld   $ad
              c9a2 005e  ld   $5e
              c9a3 0037  ld   $37
              c9a4 0093  ld   $93
              c9a5 0034  ld   $34
              c9a6 008c  ld   $8c
              c9a7 000a  ld   $0a
              c9a8 0035  ld   $35
              c9a9 003f  ld   $3f
              c9aa 002b  ld   $2b
              c9ab 001a  ld   $1a
              c9ac 0036  ld   $36
              c9ad 0035  ld   $35
              c9ae 0072  ld   $72
              c9af 004f  ld   $4f
              c9b0 0011  ld   $11
              c9b1 0005  ld   $05
              c9b2 0024  ld   $24
              c9b3 002b  ld   $2b
              c9b4 0034  ld   $34
              c9b5 002b  ld   $2b
              c9b6 0024  ld   $24
              c9b7 0059  ld   $59
              c9b8 0001  ld   $01
              c9b9 005e  ld   $5e
              c9ba 0026  ld   $26
              c9bb 001a  ld   $1a
              c9bc 0036  ld   $36
              c9bd 005e  ld   $5e
              c9be 0027  ld   $27
              c9bf 0011  ld   $11
              c9c0 0006  ld   $06
              c9c1 000b  ld   $0b
              c9c2 002b  ld   $2b
              c9c3 0022  ld   $22
              c9c4 00b4  ld   $b4
              c9c5 00e6  ld   $e6
              c9c6 0035  ld   $35
              c9c7 003f  ld   $3f
              c9c8 004b  ld   $4b
              c9c9 0059  ld   $59
              c9ca 0003  ld   $03
              c9cb 005e  ld   $5e
              c9cc 000f  ld   $0f
              c9cd 0059  ld   $59
              c9ce 0000  ld   $00
              c9cf 005e  ld   $5e
              c9d0 0036  ld   $36
              c9d1 0011  ld   $11
              c9d2 000c  ld   $0c
              c9d3 000b  ld   $0b
              c9d4 002b  ld   $2b
              c9d5 0022  ld   $22
              c9d6 00b4  ld   $b4
              c9d7 00e6  ld   $e6
              c9d8 0090  ld   $90
              c9d9 00fe  ld   $fe
              c9da 0032  ld   $32
              c9db 0000  ld   $00
              c9dc 0025  ld   $25
              c9dd 00a0  ld   $a0
              c9de 0000  ld   $00
              c9df 00b9  ld   $b9
              c9e0 000e  ld   $0e
              c9e1 0032  ld   $32
              c9e2 00c8  ld   $c8
              c9e3 0020  ld   $20
              c9e4 0000  ld   $00
              c9e5 002b  ld   $2b
              c9e6 00d0  ld   $d0
              c9e7 00f7  ld   $f7
              c9e8 004c  ld   $4c
              c9e9 0026  ld   $26
              c9ea 0009  ld   $09
              c9eb 000d  ld   $0d
              c9ec 0055  ld   $55
              c9ed 0053  ld   $53
              c9ee 0045  ld   $45
              c9ef 0020  ld   $20
              c9f0 0042  ld   $42
              c9f1 0041  ld   $41
              c9f2 0042  ld   $42
              c9f3 0045  ld   $45
              c9f4 004c  ld   $4c
              c9f5 0046  ld   $46
              c9f6 0049  ld   $49
              c9f7 0053  ld   $53
              c9f8 0048  ld   $48
              c9f9 0020  ld   $20
              c9fa 0054  ld   $54
              c9fb fe00  bra  ac          ;+-----------------------------------+
              c9fc fcfd  bra  $c9fd       ;|                                   |
              c9fd 1418  ld   $18,y       ;| Trampoline for page $c900 lookups |
              c9fe e006  jmp  y,$06       ;|                                   |
              c9ff c218  st   [$18]       ;+-----------------------------------+
              ca00 004f  ld   $4f
              ca01 0020  ld   $20
              ca02 004c  ld   $4c
              ca03 004f  ld   $4f
              ca04 0041  ld   $41
              ca05 0044  ld   $44
              ca06 0000  ld   $00
              ca07 0000  ld   $00
              ca08 0000  ld   $00         ;End of Apps/MSBASIC/MSBASIC_v1.gt1, size 9747
                                          ;+-----------------------------------+
                                          ;| Apps/Horizon/Horizon_at67_v1.gt1  |
                                          ;+-----------------------------------+
              ca09 dc4d  st   $4d,[y,x++] ;'M'
              ca0a dc53  st   $53,[y,x++] ;'S'
              ca0b dc42  st   $42,[y,x++] ;'B'
              ca0c dc41  st   $41,[y,x++] ;'A'
              ca0d dc53  st   $53,[y,x++] ;'S'
              ca0e dc49  st   $49,[y,x++] ;'I'
              ca0f dc43  st   $43,[y,x++] ;'C'
              ca10 dc00  st   $00,[y,x++] ;'\x00'
              ca11 00f6  ld   $f6
              ca12 c218  st   [$18]
              ca13 00a3  ld   $a3
              ca14 14df  ld   $df,y
              ca15 e0ac  jmp  y,$ac
              ca16 c219  st   [$19]
Egg:          ca17 0002  ld   $02
              ca18 0000  ld   $00
              ca19 00c0  ld   $c0
              ca1a 0011  ld   $11
              ca1b 00b4  ld   $b4
              ca1c 0026  ld   $26
              ca1d 002b  ld   $2b
              ca1e 00dc  ld   $dc
              ca1f 0011  ld   $11
              ca20 00bd  ld   $bd
              ca21 0026  ld   $26
              ca22 002b  ld   $2b
              ca23 00d0  ld   $d0
              ca24 0011  ld   $11
              ca25 00c6  ld   $c6
              ca26 0026  ld   $26
              ca27 002b  ld   $2b
              ca28 00d2  ld   $d2
              ca29 0011  ld   $11
              ca2a 00cf  ld   $cf
              ca2b 0026  ld   $26
              ca2c 002b  ld   $2b
              ca2d 00d4  ld   $d4
              ca2e 0011  ld   $11
              ca2f 00d8  ld   $d8
              ca30 0026  ld   $26
              ca31 002b  ld   $2b
              ca32 00d6  ld   $d6
              ca33 0011  ld   $11
              ca34 00e1  ld   $e1
              ca35 0026  ld   $26
              ca36 002b  ld   $2b
              ca37 00d8  ld   $d8
              ca38 0011  ld   $11
              ca39 00ea  ld   $ea
              ca3a 0026  ld   $26
              ca3b 002b  ld   $2b
              ca3c 00da  ld   $da
              ca3d 0011  ld   $11
              ca3e 0020  ld   $20
              ca3f 000f  ld   $0f
              ca40 002b  ld   $2b
              ca41 00a2  ld   $a2
              ca42 0011  ld   $11
              ca43 0001  ld   $01
              ca44 0000  ld   $00
              ca45 002b  ld   $2b
              ca46 00ac  ld   $ac
              ca47 0011  ld   $11
              ca48 0000  ld   $00
              ca49 00ff  ld   $ff
              ca4a 002b  ld   $2b
              ca4b 00ae  ld   $ae
              ca4c 0011  ld   $11
              ca4d 0000  ld   $00
              ca4e 0000  ld   $00
              ca4f 002b  ld   $2b
              ca50 00a6  ld   $a6
              ca51 0059  ld   $59
              ca52 0000  ld   $00
              ca53 005e  ld   $5e
              ca54 002c  ld   $2c
              ca55 0011  ld   $11
              ca56 00a0  ld   $a0
              ca57 0025  ld   $25
              ca58 00cf  ld   $cf
              ca59 0018  ld   $18
              ca5a 0011  ld   $11
              ca5b 00c3  ld   $c3
              ca5c 0025  ld   $25
              ca5d 00cf  ld   $cf
              ca5e 0018  ld   $18
              ca5f 0059  ld   $59
              ca60 0000  ld   $00
              ca61 002b  ld   $2b
              ca62 0030  ld   $30
              ca63 002b  ld   $2b
              ca64 0032  ld   $32
              ca65 002b  ld   $2b
              ca66 0034  ld   $34
              ca67 002b  ld   $2b
              ca68 0036  ld   $36
              ca69 002b  ld   $2b
              ca6a 0038  ld   $38
              ca6b 002b  ld   $2b
              ca6c 003a  ld   $3a
              ca6d 002b  ld   $2b
              ca6e 003c  ld   $3c
              ca6f 0059  ld   $59
              ca70 003f  ld   $3f
              ca71 002b  ld   $2b
              ca72 003e  ld   $3e
              ca73 0059  ld   $59
              ca74 0003  ld   $03
              ca75 002b  ld   $2b
              ca76 0040  ld   $40
              ca77 0059  ld   $59
              ca78 0020  ld   $20
              ca79 002b  ld   $2b
              ca7a 0042  ld   $42
              ca7b 0011  ld   $11
              ca7c 00a0  ld   $a0
              ca7d 0026  ld   $26
              ca7e 002b  ld   $2b
              ca7f 0084  ld   $84
              ca80 0059  ld   $59
              ca81 003f  ld   $3f
              ca82 00f3  ld   $f3
              ca83 0084  ld   $84
              ca84 0011  ld   $11
              ca85 00a2  ld   $a2
              ca86 0026  ld   $26
              ca87 002b  ld   $2b
              ca88 0084  ld   $84
              ca89 0059  ld   $59
              ca8a 002a  ld   $2a
              ca8b 00f3  ld   $f3
              ca8c 0084  ld   $84
              ca8d 0011  ld   $11
              ca8e 00a4  ld   $a4
              ca8f 0026  ld   $26
              ca90 002b  ld   $2b
              ca91 0084  ld   $84
              ca92 0059  ld   $59
              ca93 0015  ld   $15
              ca94 00f3  ld   $f3
              ca95 0084  ld   $84
              ca96 0011  ld   $11
              ca97 00a6  ld   $a6
              ca98 0026  ld   $26
              ca99 002b  ld   $2b
              ca9a 0084  ld   $84
              ca9b 0059  ld   $59
              ca9c 0000  ld   $00
              ca9d 00f3  ld   $f3
              ca9e 0084  ld   $84
              ca9f 0011  ld   $11
              caa0 00aa  ld   $aa
              caa1 0026  ld   $26
              caa2 002b  ld   $2b
              caa3 0084  ld   $84
              caa4 0059  ld   $59
              caa5 0003  ld   $03
              caa6 00f3  ld   $f3
              caa7 0084  ld   $84
              caa8 0011  ld   $11
              caa9 00ac  ld   $ac
              caaa 0026  ld   $26
              caab 002b  ld   $2b
              caac 0084  ld   $84
              caad 0059  ld   $59
              caae 0002  ld   $02
              caaf 00f3  ld   $f3
              cab0 0084  ld   $84
              cab1 0011  ld   $11
              cab2 00ae  ld   $ae
              cab3 0026  ld   $26
              cab4 002b  ld   $2b
              cab5 0084  ld   $84
              cab6 0059  ld   $59
              cab7 0001  ld   $01
              cab8 00f3  ld   $f3
              cab9 0084  ld   $84
              caba 0011  ld   $11
              cabb 00b0  ld   $b0
              cabc 0026  ld   $26
              cabd 002b  ld   $2b
              cabe 0084  ld   $84
              cabf 0059  ld   $59
              cac0 0000  ld   $00
              cac1 00f3  ld   $f3
              cac2 0084  ld   $84
              cac3 0059  ld   $59
              cac4 0000  ld   $00
              cac5 002b  ld   $2b
              cac6 0044  ld   $44
              cac7 002b  ld   $2b
              cac8 0046  ld   $46
              cac9 0059  ld   $59
              caca 0036  ld   $36
              cacb 002b  ld   $2b
              cacc 0048  ld   $48
              cacd 0059  ld   $59
              cace 0077  ld   $77
              cacf 002b  ld   $2b
              cad0 0030  ld   $30
              cad1 0021  ld   $21
              cad2 0042  ld   $42
              cad3 002b  ld   $2b
              cad4 00b0  ld   $b0
              cad5 0011  ld   $11
              cad6 00ff  ld   $ff
              cad7 00ff  ld   $ff
              cad8 002b  ld   $2b
              cad9 00b2  ld   $b2
              cada 0002  ld   $02
              cadb 00c0  ld   $c0
              cadc 0037  ld   $37
              cadd 0011  ld   $11
              cade 00a0  ld   $a0
              cadf 0026  ld   $26
              cae0 0099  ld   $99
              cae1 0046  ld   $46
              cae2 0099  ld   $99
              cae3 0046  ld   $46
              cae4 00f6  ld   $f6
              cae5 002b  ld   $2b
              cae6 003e  ld   $3e
              cae7 0011  ld   $11
              cae8 00aa  ld   $aa
              cae9 0026  ld   $26
              caea 0099  ld   $99
              caeb 0046  ld   $46
              caec 0099  ld   $99
              caed 0046  ld   $46
              caee 00f6  ld   $f6
              caef 002b  ld   $2b
              caf0 0040  ld   $40
              caf1 0021  ld   $21
              caf2 0044  ld   $44
              caf3 00e3  ld   $e3
              caf4 0001  ld   $01
              caf5 002b  ld   $2b
              caf6 0044  ld   $44
              caf7 0021  ld   $21
              caf8 0044  ld   $44
              caf9 00b8  ld   $b8
              cafa 0048  ld   $48
              cafb fe00  bra  ac          ;+-----------------------------------+
              cafc fcfd  bra  $cafd       ;|                                   |
              cafd 1418  ld   $18,y       ;| Trampoline for page $ca00 lookups |
              cafe e006  jmp  y,$06       ;|                                   |
              caff c218  st   [$18]       ;+-----------------------------------+
              cb00 0035  ld   $35
              cb01 003f  ld   $3f
              cb02 00e4  ld   $e4
              cb03 0011  ld   $11
              cb04 000d  ld   $0d
              cb05 0003  ld   $03
              cb06 00cf  ld   $cf
              cb07 0018  ld   $18
              cb08 0021  ld   $21
              cb09 0046  ld   $46
              cb0a 00e3  ld   $e3
              cb0b 0001  ld   $01
              cb0c 002b  ld   $2b
              cb0d 0046  ld   $46
              cb0e 0059  ld   $59
              cb0f 0000  ld   $00
              cb10 002b  ld   $2b
              cb11 0044  ld   $44
              cb12 002b  ld   $2b
              cb13 00de  ld   $de
              cb14 0011  ld   $11
              cb15 0000  ld   $00
              cb16 0003  ld   $03
              cb17 00cf  ld   $cf
              cb18 0018  ld   $18
              cb19 0003  ld   $03
              cb1a 0000  ld   $00
              cb1b 000d  ld   $0d
              cb1c 0021  ld   $21
              cb1d 00de  ld   $de
              cb1e 0021  ld   $21
              cb1f 0048  ld   $48
              cb20 002b  ld   $2b
              cb21 0098  ld   $98
              cb22 0011  ld   $11
              cb23 00f3  ld   $f3
              cb24 0026  ld   $26
              cb25 00cf  ld   $cf
              cb26 0018  ld   $18
              cb27 002b  ld   $2b
              cb28 0048  ld   $48
              cb29 0003  ld   $03
              cb2a 000d  ld   $0d
              cb2b 002c  ld   $2c
              cb2c 0021  ld   $21
              cb2d 0030  ld   $30
              cb2e 002b  ld   $2b
              cb2f 003c  ld   $3c
              cb30 0011  ld   $11
              cb31 00a7  ld   $a7
              cb32 0004  ld   $04
              cb33 00cf  ld   $cf
              cb34 0018  ld   $18
              cb35 0021  ld   $21
              cb36 0030  ld   $30
              cb37 00b8  ld   $b8
              cb38 0042  ld   $42
              cb39 00e3  ld   $e3
              cb3a 0028  ld   $28
              cb3b 002b  ld   $2b
              cb3c 00c0  ld   $c0
              cb3d 0011  ld   $11
              cb3e 0090  ld   $90
              cb3f 0001  ld   $01
              cb40 002b  ld   $2b
              cb41 0082  ld   $82
              cb42 0021  ld   $21
              cb43 00c0  ld   $c0
              cb44 002b  ld   $2b
              cb45 0084  ld   $84
              cb46 0011  ld   $11
              cb47 00a0  ld   $a0
              cb48 0024  ld   $24
              cb49 00cf  ld   $cf
              cb4a 0018  ld   $18
              cb4b 0082  ld   $82
              cb4c 0001  ld   $01
              cb4d 0035  ld   $35
              cb4e 0072  ld   $72
              cb4f 0037  ld   $37
              cb50 0021  ld   $21
              cb51 003e  ld   $3e
              cb52 00fc  ld   $fc
              cb53 0040  ld   $40
              cb54 002b  ld   $2b
              cb55 0036  ld   $36
              cb56 0090  ld   $90
              cb57 003b  ld   $3b
              cb58 0003  ld   $03
              cb59 0039  ld   $39
              cb5a 0004  ld   $04
              cb5b 0059  ld   $59
              cb5c 0000  ld   $00
              cb5d 002b  ld   $2b
              cb5e 0036  ld   $36
              cb5f 0003  ld   $03
              cb60 003d  ld   $3d
              cb61 0029  ld   $29
              cb62 0059  ld   $59
              cb63 0050  ld   $50
              cb64 002b  ld   $2b
              cb65 0082  ld   $82
              cb66 0021  ld   $21
              cb67 003a  ld   $3a
              cb68 002b  ld   $2b
              cb69 0084  ld   $84
              cb6a 0011  ld   $11
              cb6b 00a0  ld   $a0
              cb6c 0024  ld   $24
              cb6d 00cf  ld   $cf
              cb6e 0018  ld   $18
              cb6f 0021  ld   $21
              cb70 0092  ld   $92
              cb71 002b  ld   $2b
              cb72 0034  ld   $34
              cb73 0021  ld   $21
              cb74 0030  ld   $30
              cb75 00e3  ld   $e3
              cb76 0008  ld   $08
              cb77 002b  ld   $2b
              cb78 00c0  ld   $c0
              cb79 001a  ld   $1a
              cb7a 00c0  ld   $c0
              cb7b 005e  ld   $5e
              cb7c 0039  ld   $39
              cb7d 0059  ld   $59
              cb7e 0000  ld   $00
              cb7f 002b  ld   $2b
              cb80 0032  ld   $32
              cb81 0021  ld   $21
              cb82 003a  ld   $3a
              cb83 00e3  ld   $e3
              cb84 009f  ld   $9f
              cb85 002b  ld   $2b
              cb86 00b4  ld   $b4
              cb87 0059  ld   $59
              cb88 0001  ld   $01
              cb89 002b  ld   $2b
              cb8a 00b6  ld   $b6
              cb8b 0003  ld   $03
              cb8c 0066  ld   $66
              cb8d 000d  ld   $0d
              cb8e 0021  ld   $21
              cb8f 0034  ld   $34
              cb90 0035  ld   $35
              cb91 0072  ld   $72
              cb92 0071  ld   $71
              cb93 0021  ld   $21
              cb94 003a  ld   $3a
              cb95 00e6  ld   $e6
              cb96 0001  ld   $01
              cb97 002b  ld   $2b
              cb98 0034  ld   $34
              cb99 0090  ld   $90
              cb9a 0077  ld   $77
              cb9b 0003  ld   $03
              cb9c 0073  ld   $73
              cb9d 0006  ld   $06
              cb9e 0021  ld   $21
              cb9f 0034  ld   $34
              cba0 00e6  ld   $e6
              cba1 0001  ld   $01
              cba2 002b  ld   $2b
              cba3 0034  ld   $34
              cba4 0003  ld   $03
              cba5 0079  ld   $79
              cba6 0011  ld   $11
              cba7 0021  ld   $21
              cba8 0034  ld   $34
              cba9 0099  ld   $99
              cbaa 0034  ld   $34
              cbab 00b8  ld   $b8
              cbac 003a  ld   $3a
              cbad 0035  ld   $35
              cbae 0050  ld   $50
              cbaf 0088  ld   $88
              cbb0 0021  ld   $21
              cbb1 003e  ld   $3e
              cbb2 00fc  ld   $fc
              cbb3 0036  ld   $36
              cbb4 002b  ld   $2b
              cbb5 004a  ld   $4a
              cbb6 0090  ld   $90
              cbb7 008e  ld   $8e
              cbb8 0003  ld   $03
              cbb9 008a  ld   $8a
              cbba 0006  ld   $06
              cbbb 0021  ld   $21
              cbbc 0040  ld   $40
              cbbd 00fc  ld   $fc
              cbbe 0036  ld   $36
              cbbf 002b  ld   $2b
              cbc0 004a  ld   $4a
              cbc1 0003  ld   $03
              cbc2 0090  ld   $90
              cbc3 004a  ld   $4a
              cbc4 0021  ld   $21
              cbc5 0038  ld   $38
              cbc6 0099  ld   $99
              cbc7 0032  ld   $32
              cbc8 002b  ld   $2b
              cbc9 00c0  ld   $c0
              cbca 0021  ld   $21
              cbcb 004a  ld   $4a
              cbcc 00f0  ld   $f0
              cbcd 00c0  ld   $c0
              cbce 0021  ld   $21
              cbcf 0032  ld   $32
              cbd0 0099  ld   $99
              cbd1 00b6  ld   $b6
              cbd2 002b  ld   $2b
              cbd3 0032  ld   $32
              cbd4 00b8  ld   $b8
              cbd5 00b4  ld   $b4
              cbd6 0035  ld   $35
              cbd7 004d  ld   $4d
              cbd8 00a8  ld   $a8
              cbd9 0011  ld   $11
              cbda 0066  ld   $66
              cbdb 0003  ld   $03
              cbdc 00cf  ld   $cf
              cbdd 0018  ld   $18
              cbde 0021  ld   $21
              cbdf 0030  ld   $30
              cbe0 0099  ld   $99
              cbe1 0030  ld   $30
              cbe2 002b  ld   $2b
              cbe3 00c0  ld   $c0
              cbe4 0011  ld   $11
              cbe5 00f9  ld   $f9
              cbe6 0001  ld   $01
              cbe7 002b  ld   $2b
              cbe8 0082  ld   $82
              cbe9 0021  ld   $21
              cbea 00c0  ld   $c0
              cbeb 00f0  ld   $f0
              cbec 0082  ld   $82
              cbed 0021  ld   $21
              cbee 0030  ld   $30
              cbef 0099  ld   $99
              cbf0 00b2  ld   $b2
              cbf1 002b  ld   $2b
              cbf2 0030  ld   $30
              cbf3 00b8  ld   $b8
              cbf4 00b0  ld   $b0
              cbf5 0035  ld   $35
              cbf6 0050  ld   $50
              cbf7 00c7  ld   $c7
              cbf8 0011  ld   $11
              cbf9 00c0  ld   $c0
              cbfa 0002  ld   $02
              cbfb fe00  bra  ac          ;+-----------------------------------+
              cbfc fcfd  bra  $cbfd       ;|                                   |
              cbfd 1418  ld   $18,y       ;| Trampoline for page $cb00 lookups |
              cbfe e006  jmp  y,$06       ;|                                   |
              cbff c218  st   [$18]       ;+-----------------------------------+
              cc00 00cf  ld   $cf
              cc01 0018  ld   $18
              cc02 0011  ld   $11
              cc03 00f9  ld   $f9
              cc04 0001  ld   $01
              cc05 002b  ld   $2b
              cc06 0082  ld   $82
              cc07 0059  ld   $59
              cc08 0000  ld   $00
              cc09 00f0  ld   $f0
              cc0a 0082  ld   $82
              cc0b 0059  ld   $59
              cc0c 0000  ld   $00
              cc0d 002b  ld   $2b
              cc0e 0032  ld   $32
              cc0f 0059  ld   $59
              cc10 0008  ld   $08
              cc11 002b  ld   $2b
              cc12 004c  ld   $4c
              cc13 0003  ld   $03
              cc14 00da  ld   $da
              cc15 001f  ld   $1f
              cc16 0021  ld   $21
              cc17 0032  ld   $32
              cc18 0082  ld   $82
              cc19 00ff  ld   $ff
              cc1a 002b  ld   $2b
              cc1b 0034  ld   $34
              cc1c 0059  ld   $59
              cc1d 0000  ld   $00
              cc1e 002b  ld   $2b
              cc1f 0036  ld   $36
              cc20 0011  ld   $11
              cc21 00f0  ld   $f0
              cc22 0001  ld   $01
              cc23 002b  ld   $2b
              cc24 004e  ld   $4e
              cc25 0021  ld   $21
              cc26 0042  ld   $42
              cc27 002b  ld   $2b
              cc28 003c  ld   $3c
              cc29 0011  ld   $11
              cc2a 00a7  ld   $a7
              cc2b 0004  ld   $04
              cc2c 00cf  ld   $cf
              cc2d 0018  ld   $18
              cc2e 002b  ld   $2b
              cc2f 00de  ld   $de
              cc30 0011  ld   $11
              cc31 0000  ld   $00
              cc32 0004  ld   $04
              cc33 00cf  ld   $cf
              cc34 0018  ld   $18
              cc35 0004  ld   $04
              cc36 0000  ld   $00
              cc37 000e  ld   $0e
              cc38 0021  ld   $21
              cc39 00de  ld   $de
              cc3a 0059  ld   $59
              cc3b 0000  ld   $00
              cc3c 002b  ld   $2b
              cc3d 0030  ld   $30
              cc3e 0021  ld   $21
              cc3f 003a  ld   $3a
              cc40 002b  ld   $2b
              cc41 00b0  ld   $b0
              cc42 0059  ld   $59
              cc43 0001  ld   $01
              cc44 002b  ld   $2b
              cc45 00b2  ld   $b2
              cc46 0004  ld   $04
              cc47 000e  ld   $0e
              cc48 002e  ld   $2e
              cc49 0021  ld   $21
              cc4a 0036  ld   $36
              cc4b 0099  ld   $99
              cc4c 0034  ld   $34
              cc4d 002b  ld   $2b
              cc4e 0036  ld   $36
              cc4f 0021  ld   $21
              cc50 0030  ld   $30
              cc51 0099  ld   $99
              cc52 00b2  ld   $b2
              cc53 002b  ld   $2b
              cc54 0030  ld   $30
              cc55 00b8  ld   $b8
              cc56 00b0  ld   $b0
              cc57 0035  ld   $35
              cc58 004d  ld   $4d
              cc59 0022  ld   $22
              cc5a 0011  ld   $11
              cc5b 000e  ld   $0e
              cc5c 0004  ld   $04
              cc5d 00cf  ld   $cf
              cc5e 0018  ld   $18
              cc5f 0021  ld   $21
              cc60 0034  ld   $34
              cc61 0099  ld   $99
              cc62 0034  ld   $34
              cc63 002b  ld   $2b
              cc64 0034  ld   $34
              cc65 0011  ld   $11
              cc66 0001  ld   $01
              cc67 0001  ld   $01
              cc68 0099  ld   $99
              cc69 0042  ld   $42
              cc6a 0099  ld   $99
              cc6b 0042  ld   $42
              cc6c 002b  ld   $2b
              cc6d 004a  ld   $4a
              cc6e 0059  ld   $59
              cc6f 0001  ld   $01
              cc70 002b  ld   $2b
              cc71 0082  ld   $82
              cc72 0011  ld   $11
              cc73 00a0  ld   $a0
              cc74 0023  ld   $23
              cc75 00cf  ld   $cf
              cc76 0018  ld   $18
              cc77 0004  ld   $04
              cc78 003c  ld   $3c
              cc79 0035  ld   $35
              cc7a 001a  ld   $1a
              cc7b 0037  ld   $37
              cc7c 00f0  ld   $f0
              cc7d 004a  ld   $4a
              cc7e 0021  ld   $21
              cc7f 0036  ld   $36
              cc80 0082  ld   $82
              cc81 00ff  ld   $ff
              cc82 0099  ld   $99
              cc83 0034  ld   $34
              cc84 002b  ld   $2b
              cc85 0036  ld   $36
              cc86 0021  ld   $21
              cc87 004a  ld   $4a
              cc88 00e3  ld   $e3
              cc89 0004  ld   $04
              cc8a 002b  ld   $2b
              cc8b 004a  ld   $4a
              cc8c 00b8  ld   $b8
              cc8d 004e  ld   $4e
              cc8e 0035  ld   $35
              cc8f 0053  ld   $53
              cc90 0056  ld   $56
              cc91 0011  ld   $11
              cc92 003c  ld   $3c
              cc93 0004  ld   $04
              cc94 00cf  ld   $cf
              cc95 0018  ld   $18
              cc96 0059  ld   $59
              cc97 0011  ld   $11
              cc98 00ad  ld   $ad
              cc99 002b  ld   $2b
              cc9a 0082  ld   $82
              cc9b 0059  ld   $59
              cc9c 0000  ld   $00
              cc9d 002b  ld   $2b
              cc9e 0084  ld   $84
              cc9f 0011  ld   $11
              cca0 00bb  ld   $bb
              cca1 0023  ld   $23
              cca2 00cf  ld   $cf
              cca3 0018  ld   $18
              cca4 0021  ld   $21
              cca5 0032  ld   $32
              cca6 0099  ld   $99
              cca7 004c  ld   $4c
              cca8 002b  ld   $2b
              cca9 0032  ld   $32
              ccaa 0011  ld   $11
              ccab 00da  ld   $da
              ccac 0003  ld   $03
              ccad 00cf  ld   $cf
              ccae 0018  ld   $18
              ccaf 0004  ld   $04
              ccb0 0071  ld   $71
              ccb1 0010  ld   $10
              ccb2 0075  ld   $75
              ccb3 0021  ld   $21
              ccb4 004c  ld   $4c
              ccb5 00e3  ld   $e3
              ccb6 0001  ld   $01
              ccb7 002b  ld   $2b
              ccb8 004c  ld   $4c
              ccb9 00e6  ld   $e6
              ccba 0020  ld   $20
              ccbb 0035  ld   $35
              ccbc 0056  ld   $56
              ccbd 007f  ld   $7f
              ccbe 0059  ld   $59
              ccbf 0020  ld   $20
              ccc0 002b  ld   $2b
              ccc1 004c  ld   $4c
              ccc2 0004  ld   $04
              ccc3 0081  ld   $81
              ccc4 0002  ld   $02
              ccc5 0063  ld   $63
              ccc6 00ff  ld   $ff
              ccc7 0004  ld   $04
              ccc8 0083  ld   $83
              ccc9 0014  ld   $14
              ccca 0075  ld   $75
              cccb 0021  ld   $21
              cccc 004c  ld   $4c
              cccd 00e6  ld   $e6
              ccce 0001  ld   $01
              cccf 002b  ld   $2b
              ccd0 004c  ld   $4c
              ccd1 0011  ld   $11
              ccd2 00e0  ld   $e0
              ccd3 00ff  ld   $ff
              ccd4 00b8  ld   $b8
              ccd5 004c  ld   $4c
              ccd6 0035  ld   $35
              ccd7 0050  ld   $50
              ccd8 0095  ld   $95
              ccd9 0011  ld   $11
              ccda 00e0  ld   $e0
              ccdb 00ff  ld   $ff
              ccdc 002b  ld   $2b
              ccdd 004c  ld   $4c
              ccde 0004  ld   $04
              ccdf 0097  ld   $97
              cce0 0002  ld   $02
              cce1 0063  ld   $63
              cce2 00ff  ld   $ff
              cce3 0004  ld   $04
              cce4 0099  ld   $99
              cce5 0007  ld   $07
              cce6 0075  ld   $75
              cce7 0059  ld   $59
              cce8 0000  ld   $00
              cce9 002b  ld   $2b
              ccea 004c  ld   $4c
              cceb 0063  ld   $63
              ccec 00ff  ld   $ff
              cced 0004  ld   $04
              ccee 00a0  ld   $a0
              ccef 0007  ld   $07
              ccf0 0075  ld   $75
              ccf1 0059  ld   $59
              ccf2 0000  ld   $00
              ccf3 002b  ld   $2b
              ccf4 004c  ld   $4c
              ccf5 0063  ld   $63
              ccf6 00ff  ld   $ff
              ccf7 0004  ld   $04
              ccf8 00a7  ld   $a7
              ccf9 0017  ld   $17
              ccfa 0075  ld   $75
              ccfb fe00  bra  ac          ;+-----------------------------------+
              ccfc fcfd  bra  $ccfd       ;|                                   |
              ccfd 1418  ld   $18,y       ;| Trampoline for page $cc00 lookups |
              ccfe e006  jmp  y,$06       ;|                                   |
              ccff c218  st   [$18]       ;+-----------------------------------+
              cd00 0011  ld   $11
              cd01 00e9  ld   $e9
              cd02 00ff  ld   $ff
              cd03 0099  ld   $99
              cd04 003c  ld   $3c
              cd05 002b  ld   $2b
              cd06 003a  ld   $3a
              cd07 0021  ld   $21
              cd08 003a  ld   $3a
              cd09 00e3  ld   $e3
              cd0a 0001  ld   $01
              cd0b 002b  ld   $2b
              cd0c 00c0  ld   $c0
              cd0d 0011  ld   $11
              cd0e 00fe  ld   $fe
              cd0f 00ff  ld   $ff
              cd10 00f8  ld   $f8
              cd11 00c0  ld   $c0
              cd12 002b  ld   $2b
              cd13 003a  ld   $3a
              cd14 0063  ld   $63
              cd15 00ff  ld   $ff
              cd16 0004  ld   $04
              cd17 00be  ld   $be
              cd18 0002  ld   $02
              cd19 0090  ld   $90
              cd1a 00bc  ld   $bc
              cd1b 0022  ld   $22
              cd1c 00a0  ld   $a0
              cd1d 0008  ld   $08
              cd1e 0071  ld   $71
              cd1f 0004  ld   $04
              cd20 0083  ld   $83
              cd21 0004  ld   $04
              cd22 0099  ld   $99
              cd23 0004  ld   $04
              cd24 00a0  ld   $a0
              cd25 0004  ld   $04
              cd26 0022  ld   $22
              cd27 00a8  ld   $a8
              cd28 001f  ld   $1f
              cd29 0075  ld   $75
              cd2a 0059  ld   $59
              cd2b 0008  ld   $08
              cd2c 002b  ld   $2b
              cd2d 0098  ld   $98
              cd2e 0011  ld   $11
              cd2f 0000  ld   $00
              cd30 0001  ld   $01
              cd31 002b  ld   $2b
              cd32 009a  ld   $9a
              cd33 00cf  ld   $cf
              cd34 00dc  ld   $dc
              cd35 0021  ld   $21
              cd36 0098  ld   $98
              cd37 00f3  ld   $f3
              cd38 009a  ld   $9a
              cd39 0093  ld   $93
              cd3a 009a  ld   $9a
              cd3b 0093  ld   $93
              cd3c 009a  ld   $9a
              cd3d 0093  ld   $93
              cd3e 0098  ld   $98
              cd3f 001a  ld   $1a
              cd40 0098  ld   $98
              cd41 00e6  ld   $e6
              cd42 0080  ld   $80
              cd43 0035  ld   $35
              cd44 0050  ld   $50
              cd45 00b0  ld   $b0
              cd46 0063  ld   $63
              cd47 00ff  ld   $ff
              cd48 0023  ld   $23
              cd49 00a0  ld   $a0
              cd4a 001b  ld   $1b
              cd4b 0021  ld   $21
              cd4c 0082  ld   $82
              cd4d 00e6  ld   $e6
              cd4e 0001  ld   $01
              cd4f 002b  ld   $2b
              cd50 0082  ld   $82
              cd51 0035  ld   $35
              cd52 0053  ld   $53
              cd53 00a8  ld   $a8
              cd54 00ff  ld   $ff
              cd55 001a  ld   $1a
              cd56 000e  ld   $0e
              cd57 00b8  ld   $b8
              cd58 00aa  ld   $aa
              cd59 0035  ld   $35
              cd5a 003f  ld   $3f
              cd5b 00a8  ld   $a8
              cd5c 001a  ld   $1a
              cd5d 000e  ld   $0e
              cd5e 002b  ld   $2b
              cd5f 00aa  ld   $aa
              cd60 0075  ld   $75
              cd61 00cf  ld   $cf
              cd62 00dc  ld   $dc
              cd63 0063  ld   $63
              cd64 0090  ld   $90
              cd65 009e  ld   $9e
              cd66 0023  ld   $23
              cd67 00bb  ld   $bb
              cd68 003a  ld   $3a
              cd69 0075  ld   $75
              cd6a 0011  ld   $11
              cd6b 00f5  ld   $f5
              cd6c 0023  ld   $23
              cd6d 002b  ld   $2b
              cd6e 0086  ld   $86
              cd6f 002b  ld   $2b
              cd70 0092  ld   $92
              cd71 0011  ld   $11
              cd72 00a0  ld   $a0
              cd73 0022  ld   $22
              cd74 002b  ld   $2b
              cd75 0088  ld   $88
              cd76 0021  ld   $21
              cd77 0092  ld   $92
              cd78 00f6  ld   $f6
              cd79 002b  ld   $2b
              cd7a 0094  ld   $94
              cd7b 001a  ld   $1a
              cd7c 0095  ld   $95
              cd7d 0082  ld   $82
              cd7e 0080  ld   $80
              cd7f 0035  ld   $35
              cd80 003f  ld   $3f
              cd81 00db  ld   $db
              cd82 0021  ld   $21
              cd83 0084  ld   $84
              cd84 0035  ld   $35
              cd85 003f  ld   $3f
              cd86 00d9  ld   $d9
              cd87 00cf  ld   $cf
              cd88 0084  ld   $84
              cd89 0063  ld   $63
              cd8a 00ff  ld   $ff
              cd8b 0021  ld   $21
              cd8c 0094  ld   $94
              cd8d 00b8  ld   $b8
              cd8e 0082  ld   $82
              cd8f 0035  ld   $35
              cd90 003f  ld   $3f
              cd91 00e8  ld   $e8
              cd92 0093  ld   $93
              cd93 0092  ld   $92
              cd94 0093  ld   $93
              cd95 0092  ld   $92
              cd96 0090  ld   $90
              cd97 00c6  ld   $c6
              cd98 0021  ld   $21
              cd99 0092  ld   $92
              cd9a 00b8  ld   $b8
              cd9b 0086  ld   $86
              cd9c 0099  ld   $99
              cd9d 0088  ld   $88
              cd9e 00f6  ld   $f6
              cd9f 00cf  ld   $cf
              cda0 0018  ld   $18
              cda1 0063  ld   $63
              cda2 00ff  ld   $ff
              cda3 0023  ld   $23
              cda4 00f5  ld   $f5
              cda5 000a  ld   $0a
              cda6 00fe  ld   $fe
              cda7 0000  ld   $00
              cda8 00fd  ld   $fd
              cda9 0000  ld   $00
              cdaa 00bf  ld   $bf
              cdab 0000  ld   $00
              cdac 007f  ld   $7f
              cdad 0000  ld   $00
              cdae 00ff  ld   $ff
              cdaf 00ff  ld   $ff
              cdb0 0024  ld   $24
              cdb1 00a0  ld   $a0
              cdb2 005a  ld   $5a
              cdb3 0021  ld   $21
              cdb4 0082  ld   $82
              cdb5 00fc  ld   $fc
              cdb6 0084  ld   $84
              cdb7 002b  ld   $2b
              cdb8 0094  ld   $94
              cdb9 0021  ld   $21
              cdba 0082  ld   $82
              cdbb 0035  ld   $35
              cdbc 0053  ld   $53
              cdbd 00af  ld   $af
              cdbe 0059  ld   $59
              cdbf 0000  ld   $00
              cdc0 00b8  ld   $b8
              cdc1 0082  ld   $82
              cdc2 002b  ld   $2b
              cdc3 0082  ld   $82
              cdc4 0021  ld   $21
              cdc5 0084  ld   $84
              cdc6 0035  ld   $35
              cdc7 0053  ld   $53
              cdc8 00ba  ld   $ba
              cdc9 0059  ld   $59
              cdca 0000  ld   $00
              cdcb 00b8  ld   $b8
              cdcc 0084  ld   $84
              cdcd 002b  ld   $2b
              cdce 0084  ld   $84
              cdcf 0059  ld   $59
              cdd0 0000  ld   $00
              cdd1 002b  ld   $2b
              cdd2 0092  ld   $92
              cdd3 002b  ld   $2b
              cdd4 0096  ld   $96
              cdd5 0021  ld   $21
              cdd6 0092  ld   $92
              cdd7 0099  ld   $99
              cdd8 0092  ld   $92
              cdd9 002b  ld   $2b
              cdda 0092  ld   $92
              cddb 0021  ld   $21
              cddc 0082  ld   $82
              cddd 0035  ld   $35
              cdde 0053  ld   $53
              cddf 00cd  ld   $cd
              cde0 0093  ld   $93
              cde1 0092  ld   $92
              cde2 0021  ld   $21
              cde3 0082  ld   $82
              cde4 0099  ld   $99
              cde5 0082  ld   $82
              cde6 002b  ld   $2b
              cde7 0082  ld   $82
              cde8 0021  ld   $21
              cde9 0092  ld   $92
              cdea 00b8  ld   $b8
              cdeb 0084  ld   $84
              cdec 0035  ld   $35
              cded 0050  ld   $50
              cdee 00de  ld   $de
              cdef 002b  ld   $2b
              cdf0 0092  ld   $92
              cdf1 0093  ld   $93
              cdf2 0082  ld   $82
              cdf3 0075  ld   $75
              cdf4 00cf  ld   $cf
              cdf5 00dc  ld   $dc
              cdf6 0063  ld   $63
              cdf7 0021  ld   $21
              cdf8 0096  ld   $96
              cdf9 00e3  ld   $e3
              cdfa 0001  ld   $01
              cdfb fe00  bra  ac          ;+-----------------------------------+
              cdfc fcfd  bra  $cdfd       ;|                                   |
              cdfd 1418  ld   $18,y       ;| Trampoline for page $cd00 lookups |
              cdfe e006  jmp  y,$06       ;|                                   |
              cdff c218  st   [$18]       ;+-----------------------------------+
              ce00 0082  ld   $82
              ce01 000f  ld   $0f
              ce02 0035  ld   $35
              ce03 0072  ld   $72
              ce04 00be  ld   $be
              ce05 0021  ld   $21
              ce06 0094  ld   $94
              ce07 0035  ld   $35
              ce08 0053  ld   $53
              ce09 00f5  ld   $f5
              ce0a 0059  ld   $59
              ce0b 0000  ld   $00
              ce0c 00b8  ld   $b8
              ce0d 0082  ld   $82
              ce0e 00ff  ld   $ff
              ce0f 0021  ld   $21
              ce10 0082  ld   $82
              ce11 00ff  ld   $ff
              ce12 0025  ld   $25
              ce13 00a0  ld   $a0
              ce14 0023  ld   $23
              ce15 0075  ld   $75
              ce16 0011  ld   $11
              ce17 00a8  ld   $a8
              ce18 0022  ld   $22
              ce19 00cf  ld   $cf
              ce1a 0018  ld   $18
              ce1b 0011  ld   $11
              ce1c 0002  ld   $02
              ce1d 0000  ld   $00
              ce1e 002b  ld   $2b
              ce1f 00a4  ld   $a4
              ce20 0011  ld   $11
              ce21 00ff  ld   $ff
              ce22 007f  ld   $7f
              ce23 00f8  ld   $f8
              ce24 00ac  ld   $ac
              ce25 002b  ld   $2b
              ce26 00ac  ld   $ac
              ce27 001a  ld   $1a
              ce28 00a2  ld   $a2
              ce29 005e  ld   $5e
              ce2a 0024  ld   $24
              ce2b 005e  ld   $5e
              ce2c 0025  ld   $25
              ce2d 005e  ld   $5e
              ce2e 0026  ld   $26
              ce2f 005e  ld   $5e
              ce30 0027  ld   $27
              ce31 0011  ld   $11
              ce32 00d4  ld   $d4
              ce33 0004  ld   $04
              ce34 002b  ld   $2b
              ce35 0022  ld   $22
              ce36 0063  ld   $63
              ce37 00ff  ld   $ff
              ce38 0025  ld   $25
              ce39 00c3  ld   $c3
              ce3a 003a  ld   $3a
              ce3b 0075  ld   $75
              ce3c 0011  ld   $11
              ce3d 00a0  ld   $a0
              ce3e 0025  ld   $25
              ce3f 00cf  ld   $cf
              ce40 0018  ld   $18
              ce41 0011  ld   $11
              ce42 0000  ld   $00
              ce43 0008  ld   $08
              ce44 002b  ld   $2b
              ce45 0028  ld   $28
              ce46 001a  ld   $1a
              ce47 0029  ld   $29
              ce48 005e  ld   $5e
              ce49 0094  ld   $94
              ce4a 00cf  ld   $cf
              ce4b 00dc  ld   $dc
              ce4c 001a  ld   $1a
              ce4d 0094  ld   $94
              ce4e 005e  ld   $5e
              ce4f 0029  ld   $29
              ce50 00b4  ld   $b4
              ce51 00ff  ld   $ff
              ce52 0011  ld   $11
              ce53 0087  ld   $87
              ce54 0000  ld   $00
              ce55 00b8  ld   $b8
              ce56 0094  ld   $94
              ce57 005e  ld   $5e
              ce58 0029  ld   $29
              ce59 00b4  ld   $b4
              ce5a 00ff  ld   $ff
              ce5b 001a  ld   $1a
              ce5c 0028  ld   $28
              ce5d 00e3  ld   $e3
              ce5e 0004  ld   $04
              ce5f 005e  ld   $5e
              ce60 0028  ld   $28
              ce61 00e6  ld   $e6
              ce62 00a0  ld   $a0
              ce63 0035  ld   $35
              ce64 0050  ld   $50
              ce65 00d0  ld   $d0
              ce66 0059  ld   $59
              ce67 0000  ld   $00
              ce68 005e  ld   $5e
              ce69 0028  ld   $28
              ce6a 0093  ld   $93
              ce6b 0094  ld   $94
              ce6c 001a  ld   $1a
              ce6d 0094  ld   $94
              ce6e 00e6  ld   $e6
              ce6f 0044  ld   $44
              ce70 0035  ld   $35
              ce71 0050  ld   $50
              ce72 00d0  ld   $d0
              ce73 0063  ld   $63
              ce74 00ff  ld   $ff
              ce75 0026  ld   $26
              ce76 00a0  ld   $a0
              ce77 000a  ld   $0a
              ce78 0000  ld   $00
              ce79 0000  ld   $00
              ce7a 0000  ld   $00
              * 10 times
              ce82 0026  ld   $26
              ce83 00aa  ld   $aa
              ce84 000a  ld   $0a
              ce85 0000  ld   $00
              ce86 0000  ld   $00
              ce87 0000  ld   $00
              * 10 times
              ce8f 0026  ld   $26
              ce90 00b4  ld   $b4
              ce91 0009  ld   $09
              ce92 0075  ld   $75
              ce93 0011  ld   $11
              ce94 00bc  ld   $bc
              ce95 0026  ld   $26
              ce96 00cf  ld   $cf
              ce97 0018  ld   $18
              ce98 0063  ld   $63
              ce99 00ff  ld   $ff
              ce9a 00ff  ld   $ff
              ce9b 0026  ld   $26
              ce9c 00bd  ld   $bd
              ce9d 0009  ld   $09
              ce9e 0035  ld   $35
              ce9f 003f  ld   $3f
              cea0 00c1  ld   $c1
              cea1 0059  ld   $59
              cea2 0000  ld   $00
              cea3 00ff  ld   $ff
              cea4 0059  ld   $59
              cea5 0001  ld   $01
              cea6 00ff  ld   $ff
              cea7 0026  ld   $26
              cea8 00c6  ld   $c6
              cea9 0009  ld   $09
              ceaa 0035  ld   $35
              ceab 0072  ld   $72
              ceac 00ca  ld   $ca
              cead 0059  ld   $59
              ceae 0000  ld   $00
              ceaf 00ff  ld   $ff
              ceb0 0059  ld   $59
              ceb1 0001  ld   $01
              ceb2 00ff  ld   $ff
              ceb3 0026  ld   $26
              ceb4 00cf  ld   $cf
              ceb5 0009  ld   $09
              ceb6 0035  ld   $35
              ceb7 0056  ld   $56
              ceb8 00d3  ld   $d3
              ceb9 0059  ld   $59
              ceba 0000  ld   $00
              cebb 00ff  ld   $ff
              cebc 0059  ld   $59
              cebd 0001  ld   $01
              cebe 00ff  ld   $ff
              cebf 0026  ld   $26
              cec0 00d8  ld   $d8
              cec1 0009  ld   $09
              cec2 0035  ld   $35
              cec3 0053  ld   $53
              cec4 00dc  ld   $dc
              cec5 0059  ld   $59
              cec6 0000  ld   $00
              cec7 00ff  ld   $ff
              cec8 0059  ld   $59
              cec9 0001  ld   $01
              ceca 00ff  ld   $ff
              cecb 0026  ld   $26
              cecc 00e1  ld   $e1
              cecd 0009  ld   $09
              cece 0035  ld   $35
              cecf 0050  ld   $50
              ced0 00e5  ld   $e5
              ced1 0059  ld   $59
              ced2 0000  ld   $00
              ced3 00ff  ld   $ff
              ced4 0059  ld   $59
              ced5 0001  ld   $01
              ced6 00ff  ld   $ff
              ced7 0026  ld   $26
              ced8 00ea  ld   $ea
              ced9 0009  ld   $09
              ceda 0035  ld   $35
              cedb 004d  ld   $4d
              cedc 00ee  ld   $ee
              cedd 0059  ld   $59
              cede 0000  ld   $00
              cedf 00ff  ld   $ff
              cee0 0059  ld   $59
              cee1 0001  ld   $01
              cee2 00ff  ld   $ff
              cee3 0026  ld   $26
              cee4 00f3  ld   $f3
              cee5 000a  ld   $0a
              cee6 0011  ld   $11
              cee7 0000  ld   $00
              cee8 0006  ld   $06
              cee9 002b  ld   $2b
              ceea 0022  ld   $22
              ceeb 0021  ld   $21
              ceec 0098  ld   $98
              ceed 00b4  ld   $b4
              ceee 00f6  ld   $f6
              ceef 00ff  ld   $ff
              cef0 0000  ld   $00
              cef1 0000  ld   $00         ;End of Apps/Horizon/Horizon_at67_v1.gt1, size 1243
                                          ;+-----------------------------------+
                                          ;| Apps/CardTest/CardBoot.gcl        |
                                          ;+-----------------------------------+
              cef2 0200  nop              ;9 fillers
              cef3 0200  nop
              cef4 0200  nop
              * 9 times
              cefb fe00  bra  ac          ;+-----------------------------------+
              cefc fcfd  bra  $cefd       ;|                                   |
              cefd 1418  ld   $18,y       ;| Trampoline for page $ce00 lookups |
              cefe e006  jmp  y,$06       ;|                                   |
              ceff c218  st   [$18]       ;+-----------------------------------+
              cf00 dc45  st   $45,[y,x++] ;'E'
              cf01 dc67  st   $67,[y,x++] ;'g'
              cf02 dc67  st   $67,[y,x++] ;'g'
              cf03 dc00  st   $00,[y,x++] ;'\x00'
              cf04 dc00  st   $00,[y,x++] ;'\x00'
              cf05 dc00  st   $00,[y,x++] ;'\x00'
              cf06 dc00  st   $00,[y,x++] ;'\x00'
              cf07 dc00  st   $00,[y,x++] ;'\x00'
              cf08 0017  ld   $17
              cf09 c218  st   [$18]
              cf0a 00ca  ld   $ca
              cf0b 14df  ld   $df,y
              cf0c e0ac  jmp  y,$ac
              cf0d c219  st   [$19]
Boot:         cf0e 0002  ld   $02         ;| RAM segment address (high byte first)
              cf0f 0000  ld   $00         ;|
              cf10 0018  ld   $18         ;| Length (1..256)
              cf11 001a  ld   $1a         ;0200 LD
              cf12 0021  ld   $21
              cf13 00e6  ld   $e6         ;0202 SUBI
              cf14 0040  ld   $40
              cf15 0035  ld   $35         ;0204 BCC
              cf16 0053  ld   $53         ;0205 GE
              cf17 000b  ld   $0b
              cf18 0021  ld   $21         ;0207 LDW
              cf19 000e  ld   $0e         ;0207 '_frameCount'
              cf1a 00f3  ld   $f3         ;0209 DOKE
              cf1b 0017  ld   $17         ;0209 '_vPCH'
              cf1c 0090  ld   $90         ;020b BRA
              cf1d 0005  ld   $05
              cf1e 0011  ld   $11         ;020d LDWI
              cf1f 0000  ld   $00
              cf20 0005  ld   $05
              cf21 002b  ld   $2b         ;0210 STW
              cf22 0030  ld   $30         ;0210 'Address'
              cf23 0011  ld   $11         ;0212 LDWI
              cf24 00a0  ld   $a0
              cf25 0058  ld   $58
              cf26 002b  ld   $2b         ;0215 STW
              cf27 001a  ld   $1a         ;0215 '_vLR'
              cf28 00ff  ld   $ff         ;0217 RET
              cf29 0058  ld   $58         ;| RAM segment address (high byte first)
              cf2a 00a0  ld   $a0         ;|
              cf2b 0038  ld   $38         ;| Length (1..256)
              cf2c 00cd  ld   $cd         ;58a0 DEF
              cf2d 00d1  ld   $d1
              cf2e 0075  ld   $75         ;58a2 PUSH
              cf2f 00cd  ld   $cd         ;58a3 DEF
              cf30 00aa  ld   $aa
              cf31 0043  ld   $43         ;58a5 'C'
              cf32 004d  ld   $4d         ;58a6 'M'
              cf33 0044  ld   $44         ;58a7 'D'
              cf34 0030  ld   $30         ;58a8 '0'
              cf35 0020  ld   $20         ;58a9 ' '
              cf36 0020  ld   $20         ;58aa ' '
              cf37 0000  ld   $00         ;58ab 0
              cf38 00cf  ld   $cf         ;58ac CALL
              cf39 0032  ld   $32         ;58ac 'PrintText'
              cf3a 0059  ld   $59         ;58ae LDI
              cf3b 0000  ld   $00
              cf3c 002b  ld   $2b         ;58b0 STW
              cf3d 0034  ld   $34         ;58b0 'CardType'
              cf3e 0059  ld   $59         ;58b2 LDI
              cf3f 000a  ld   $0a
              cf40 002b  ld   $2b         ;58b4 STW
              cf41 0036  ld   $36         ;58b4 'i'
              cf42 00cf  ld   $cf         ;58b6 CALL
              cf43 0038  ld   $38         ;58b6 'SendOnesToCard'
              cf44 0021  ld   $21         ;58b8 LDW
              cf45 0036  ld   $36         ;58b8 'i'
              cf46 00e6  ld   $e6         ;58ba SUBI
              cf47 0001  ld   $01
              cf48 0035  ld   $35         ;58bc BCC
              cf49 004d  ld   $4d         ;58bd GT
              cf4a 00b2  ld   $b2
              cf4b 00cf  ld   $cf         ;58bf CALL
              cf4c 003a  ld   $3a         ;58bf 'EnableCard'
              cf4d 00cd  ld   $cd         ;58c1 DEF
              cf4e 00c7  ld   $c7
              cf4f 0040  ld   $40         ;58c3 64
              cf50 0000  ld   $00         ;58c4 0
              cf51 0000  ld   $00         ;58c5 0
              cf52 0000  ld   $00         ;58c6 0
              cf53 0000  ld   $00         ;58c7 0
              cf54 0095  ld   $95         ;58c8 149
              cf55 00cf  ld   $cf         ;58c9 CALL
              cf56 003c  ld   $3c         ;58c9 'SendCommandToCard'
              cf57 00cf  ld   $cf         ;58cb CALL
              cf58 003e  ld   $3e         ;58cb 'WaitForCardReply'
              cf59 008c  ld   $8c         ;58cd XORI
              cf5a 0001  ld   $01
              cf5b 00cf  ld   $cf         ;58cf CALL
              cf5c 0040  ld   $40         ;58cf 'PrintResult'
              cf5d 0063  ld   $63         ;58d1 POP
              cf5e 00ff  ld   $ff         ;58d2 RET
              cf5f 002b  ld   $2b         ;58d3 STW
              cf60 0042  ld   $42         ;58d3 'CMD0'
              cf61 0093  ld   $93         ;58d5 INC
              cf62 001b  ld   $1b         ;58d5 '_vLR'+1
              cf63 00ff  ld   $ff         ;58d7 RET
              cf64 0059  ld   $59         ;| RAM segment address (high byte first)
              cf65 00a0  ld   $a0         ;|
              cf66 004c  ld   $4c         ;| Length (1..256)
              cf67 00cd  ld   $cd         ;59a0 DEF
              cf68 00e5  ld   $e5
              cf69 0075  ld   $75         ;59a2 PUSH
              cf6a 00cd  ld   $cd         ;59a3 DEF
              cf6b 00aa  ld   $aa
              cf6c 0043  ld   $43         ;59a5 'C'
              cf6d 004d  ld   $4d         ;59a6 'M'
              cf6e 0044  ld   $44         ;59a7 'D'
              cf6f 0038  ld   $38         ;59a8 '8'
              cf70 0020  ld   $20         ;59a9 ' '
              cf71 0020  ld   $20         ;59aa ' '
              cf72 0000  ld   $00         ;59ab 0
              cf73 00cf  ld   $cf         ;59ac CALL
              cf74 0032  ld   $32         ;59ac 'PrintText'
              cf75 00cf  ld   $cf         ;59ae CALL
              cf76 003a  ld   $3a         ;59ae 'EnableCard'
              cf77 00cd  ld   $cd         ;59b0 DEF
              cf78 00b6  ld   $b6
              cf79 0048  ld   $48         ;59b2 72
              cf7a 0000  ld   $00         ;59b3 0
              cf7b 0000  ld   $00         ;59b4 0
              cf7c 0001  ld   $01         ;59b5 1
              cf7d 00aa  ld   $aa         ;59b6 170
              cf7e 0087  ld   $87         ;59b7 135
              cf7f 00cf  ld   $cf         ;59b8 CALL
              cf80 003c  ld   $3c         ;59b8 'SendCommandToCard'
              cf81 00cf  ld   $cf         ;59ba CALL
              cf82 003e  ld   $3e         ;59ba 'WaitForCardReply'
              cf83 008c  ld   $8c         ;59bc XORI
              cf84 00ff  ld   $ff
              cf85 0035  ld   $35         ;59be BCC
              cf86 003f  ld   $3f         ;59bf EQ
              cf87 00dd  ld   $dd
              cf88 0021  ld   $21         ;59c1 LDW
              cf89 0044  ld   $44         ;59c1 'CardReply'
              cf8a 0082  ld   $82         ;59c3 ANDI
              cf8b 0004  ld   $04
              cf8c 0035  ld   $35         ;59c5 BCC
              cf8d 003f  ld   $3f         ;59c6 EQ
              cf8e 00cc  ld   $cc
              cf8f 0059  ld   $59         ;59c8 LDI
              cf90 0001  ld   $01
              cf91 002b  ld   $2b         ;59ca STW
              cf92 0034  ld   $34         ;59ca 'CardType'
              cf93 0090  ld   $90         ;59cc BRA
              cf94 00dd  ld   $dd
              cf95 00cf  ld   $cf         ;59ce CALL
              cf96 0038  ld   $38         ;59ce 'SendOnesToCard'
              cf97 00cf  ld   $cf         ;59d0 CALL
              cf98 0038  ld   $38         ;59d0 'SendOnesToCard'
              cf99 00cf  ld   $cf         ;59d2 CALL
              cf9a 0038  ld   $38         ;59d2 'SendOnesToCard'
              cf9b 00cf  ld   $cf         ;59d4 CALL
              cf9c 0038  ld   $38         ;59d4 'SendOnesToCard'
              cf9d 008c  ld   $8c         ;59d6 XORI
              cf9e 00aa  ld   $aa
              cf9f 0035  ld   $35         ;59d8 BCC
              cfa0 0072  ld   $72         ;59d9 NE
              cfa1 00dd  ld   $dd
              cfa2 0059  ld   $59         ;59db LDI
              cfa3 0002  ld   $02
              cfa4 002b  ld   $2b         ;59dd STW
              cfa5 0034  ld   $34         ;59dd 'CardType'
              cfa6 0021  ld   $21         ;59df LDW
              cfa7 0044  ld   $44         ;59df 'CardReply'
              cfa8 0082  ld   $82         ;59e1 ANDI
              cfa9 00fa  ld   $fa
              cfaa 00cf  ld   $cf         ;59e3 CALL
              cfab 0040  ld   $40         ;59e3 'PrintResult'
              cfac 0063  ld   $63         ;59e5 POP
              cfad 00ff  ld   $ff         ;59e6 RET
              cfae 002b  ld   $2b         ;59e7 STW
              cfaf 0046  ld   $46         ;59e7 'CMD8'
              cfb0 0093  ld   $93         ;59e9 INC
              cfb1 001b  ld   $1b         ;59e9 '_vLR'+1
              cfb2 00ff  ld   $ff         ;59eb RET
              cfb3 005a  ld   $5a         ;| RAM segment address (high byte first)
              cfb4 00a0  ld   $a0         ;|
              cfb5 005c  ld   $5c         ;| Length (1..256)
              cfb6 00cd  ld   $cd         ;5aa0 DEF
              cfb7 00d3  ld   $d3
              cfb8 0075  ld   $75         ;5aa2 PUSH
              cfb9 00cd  ld   $cd         ;5aa3 DEF
              cfba 00aa  ld   $aa
              cfbb 0043  ld   $43         ;5aa5 'C'
              cfbc 004d  ld   $4d         ;5aa6 'M'
              cfbd 0044  ld   $44         ;5aa7 'D'
              cfbe 0035  ld   $35         ;5aa8 '5'
              cfbf 0038  ld   $38         ;5aa9 '8'
              cfc0 0020  ld   $20         ;5aaa ' '
              cfc1 0000  ld   $00         ;5aab 0
              cfc2 00cf  ld   $cf         ;5aac CALL
              cfc3 0032  ld   $32         ;5aac 'PrintText'
              cfc4 00cf  ld   $cf         ;5aae CALL
              cfc5 003a  ld   $3a         ;5aae 'EnableCard'
              cfc6 00cd  ld   $cd         ;5ab0 DEF
              cfc7 00b6  ld   $b6
              cfc8 007a  ld   $7a         ;5ab2 122
              cfc9 0000  ld   $00         ;5ab3 0
              cfca 0000  ld   $00         ;5ab4 0
              cfcb 0000  ld   $00         ;5ab5 0
              cfcc 0000  ld   $00         ;5ab6 0
              cfcd 0000  ld   $00         ;5ab7 0
              cfce 00cf  ld   $cf         ;5ab8 CALL
              cfcf 003c  ld   $3c         ;5ab8 'SendCommandToCard'
              cfd0 00cf  ld   $cf         ;5aba CALL
              cfd1 003e  ld   $3e         ;5aba 'WaitForCardReply'
              cfd2 00cf  ld   $cf         ;5abc CALL
              cfd3 0038  ld   $38         ;5abc 'SendOnesToCard'
              cfd4 00cf  ld   $cf         ;5abe CALL
              cfd5 0038  ld   $38         ;5abe 'SendOnesToCard'
              cfd6 00cf  ld   $cf         ;5ac0 CALL
              cfd7 0038  ld   $38         ;5ac0 'SendOnesToCard'
              cfd8 0082  ld   $82         ;5ac2 ANDI
              cfd9 00c0  ld   $c0
              cfda 008c  ld   $8c         ;5ac4 XORI
              cfdb 00c0  ld   $c0
              cfdc 0035  ld   $35         ;5ac6 BCC
              cfdd 0072  ld   $72         ;5ac7 NE
              cfde 00cb  ld   $cb
              cfdf 0059  ld   $59         ;5ac9 LDI
              cfe0 0004  ld   $04
              cfe1 002b  ld   $2b         ;5acb STW
              cfe2 0034  ld   $34         ;5acb 'CardType'
              cfe3 0021  ld   $21         ;5acd LDW
              cfe4 0044  ld   $44         ;5acd 'CardReply'
              cfe5 0082  ld   $82         ;5acf ANDI
              cfe6 00fe  ld   $fe
              cfe7 00cf  ld   $cf         ;5ad1 CALL
              cfe8 0040  ld   $40         ;5ad1 'PrintResult'
              cfe9 0063  ld   $63         ;5ad3 POP
              cfea 00ff  ld   $ff         ;5ad4 RET
              cfeb 002b  ld   $2b         ;5ad5 STW
              cfec 0048  ld   $48         ;5ad5 'CMD58'
              cfed 00cd  ld   $cd         ;5ad7 DEF
              cfee 00f5  ld   $f5
              cfef 0075  ld   $75         ;5ad9 PUSH
              cff0 00cd  ld   $cd         ;5ada DEF
              cff1 00e1  ld   $e1
              cff2 0043  ld   $43         ;5adc 'C'
              cff3 004d  ld   $4d         ;5add 'M'
              cff4 0044  ld   $44         ;5ade 'D'
              cff5 0035  ld   $35         ;5adf '5'
              cff6 0035  ld   $35         ;5ae0 '5'
              cff7 0020  ld   $20         ;5ae1 ' '
              cff8 0000  ld   $00         ;5ae2 0
              cff9 00cf  ld   $cf         ;5ae3 CALL
              cffa 0032  ld   $32         ;5ae3 'PrintText'
              cffb fe00  bra  ac          ;+-----------------------------------+
              cffc fcfd  bra  $cffd       ;|                                   |
              cffd 1418  ld   $18,y       ;| Trampoline for page $cf00 lookups |
              cffe e006  jmp  y,$06       ;|                                   |
              cfff c218  st   [$18]       ;+-----------------------------------+
              d000 00cd  ld   $cd         ;5ae5 DEF
              d001 00eb  ld   $eb
              d002 0077  ld   $77         ;5ae7 119
              d003 0000  ld   $00         ;5ae8 0
              d004 0000  ld   $00         ;5ae9 0
              d005 0000  ld   $00         ;5aea 0
              d006 0000  ld   $00         ;5aeb 0
              d007 0000  ld   $00         ;5aec 0
              d008 00cf  ld   $cf         ;5aed CALL
              d009 003c  ld   $3c         ;5aed 'SendCommandToCard'
              d00a 00cf  ld   $cf         ;5aef CALL
              d00b 003e  ld   $3e         ;5aef 'WaitForCardReply'
              d00c 0082  ld   $82         ;5af1 ANDI
              d00d 00fe  ld   $fe
              d00e 00cf  ld   $cf         ;5af3 CALL
              d00f 0040  ld   $40         ;5af3 'PrintResult'
              d010 0063  ld   $63         ;5af5 POP
              d011 00ff  ld   $ff         ;5af6 RET
              d012 002b  ld   $2b         ;5af7 STW
              d013 004a  ld   $4a         ;5af7 'CMD55'
              d014 0093  ld   $93         ;5af9 INC
              d015 001b  ld   $1b         ;5af9 '_vLR'+1
              d016 00ff  ld   $ff         ;5afb RET
              d017 005b  ld   $5b         ;| RAM segment address (high byte first)
              d018 00a0  ld   $a0         ;|
              d019 0058  ld   $58         ;| Length (1..256)
              d01a 00cd  ld   $cd         ;5ba0 DEF
              d01b 00cf  ld   $cf
              d01c 0075  ld   $75         ;5ba2 PUSH
              d01d 00cd  ld   $cd         ;5ba3 DEF
              d01e 00aa  ld   $aa
              d01f 0041  ld   $41         ;5ba5 'A'
              d020 0043  ld   $43         ;5ba6 'C'
              d021 004d  ld   $4d         ;5ba7 'M'
              d022 0044  ld   $44         ;5ba8 'D'
              d023 0034  ld   $34         ;5ba9 '4'
              d024 0031  ld   $31         ;5baa '1'
              d025 0000  ld   $00         ;5bab 0
              d026 00cf  ld   $cf         ;5bac CALL
              d027 0032  ld   $32         ;5bac 'PrintText'
              d028 0021  ld   $21         ;5bae LDW
              d029 0034  ld   $34         ;5bae 'CardType'
              d02a 008c  ld   $8c         ;5bb0 XORI
              d02b 0001  ld   $01
              d02c 0035  ld   $35         ;5bb2 BCC
              d02d 0072  ld   $72         ;5bb3 NE
              d02e 00bd  ld   $bd
              d02f 00cd  ld   $cd         ;5bb5 DEF
              d030 00bb  ld   $bb
              d031 0069  ld   $69         ;5bb7 105
              d032 0000  ld   $00         ;5bb8 0
              d033 0000  ld   $00         ;5bb9 0
              d034 0000  ld   $00         ;5bba 0
              d035 0000  ld   $00         ;5bbb 0
              d036 0000  ld   $00         ;5bbc 0
              d037 0090  ld   $90         ;5bbd BRA
              d038 00c5  ld   $c5
              d039 00cd  ld   $cd         ;5bbf DEF
              d03a 00c5  ld   $c5
              d03b 0069  ld   $69         ;5bc1 105
              d03c 0040  ld   $40         ;5bc2 64
              d03d 0000  ld   $00         ;5bc3 0
              d03e 0000  ld   $00         ;5bc4 0
              d03f 0000  ld   $00         ;5bc5 0
              d040 0000  ld   $00         ;5bc6 0
              d041 00cf  ld   $cf         ;5bc7 CALL
              d042 003c  ld   $3c         ;5bc7 'SendCommandToCard'
              d043 00cf  ld   $cf         ;5bc9 CALL
              d044 003e  ld   $3e         ;5bc9 'WaitForCardReply'
              d045 0082  ld   $82         ;5bcb ANDI
              d046 00fe  ld   $fe
              d047 00cf  ld   $cf         ;5bcd CALL
              d048 0040  ld   $40         ;5bcd 'PrintResult'
              d049 0063  ld   $63         ;5bcf POP
              d04a 00ff  ld   $ff         ;5bd0 RET
              d04b 002b  ld   $2b         ;5bd1 STW
              d04c 004c  ld   $4c         ;5bd1 'ACMD41'
              d04d 00cd  ld   $cd         ;5bd3 DEF
              d04e 00f1  ld   $f1
              d04f 0075  ld   $75         ;5bd5 PUSH
              d050 00cd  ld   $cd         ;5bd6 DEF
              d051 00dd  ld   $dd
              d052 0043  ld   $43         ;5bd8 'C'
              d053 004d  ld   $4d         ;5bd9 'M'
              d054 0044  ld   $44         ;5bda 'D'
              d055 0031  ld   $31         ;5bdb '1'
              d056 0036  ld   $36         ;5bdc '6'
              d057 0020  ld   $20         ;5bdd ' '
              d058 0000  ld   $00         ;5bde 0
              d059 00cf  ld   $cf         ;5bdf CALL
              d05a 0032  ld   $32         ;5bdf 'PrintText'
              d05b 00cd  ld   $cd         ;5be1 DEF
              d05c 00e7  ld   $e7
              d05d 0050  ld   $50         ;5be3 80
              d05e 0000  ld   $00         ;5be4 0
              d05f 0000  ld   $00         ;5be5 0
              d060 0002  ld   $02         ;5be6 2
              d061 0000  ld   $00         ;5be7 0
              d062 0000  ld   $00         ;5be8 0
              d063 00cf  ld   $cf         ;5be9 CALL
              d064 003c  ld   $3c         ;5be9 'SendCommandToCard'
              d065 00cf  ld   $cf         ;5beb CALL
              d066 003e  ld   $3e         ;5beb 'WaitForCardReply'
              d067 0082  ld   $82         ;5bed ANDI
              d068 00fe  ld   $fe
              d069 00cf  ld   $cf         ;5bef CALL
              d06a 0040  ld   $40         ;5bef 'PrintResult'
              d06b 0063  ld   $63         ;5bf1 POP
              d06c 00ff  ld   $ff         ;5bf2 RET
              d06d 002b  ld   $2b         ;5bf3 STW
              d06e 004e  ld   $4e         ;5bf3 'CMD16'
              d06f 0093  ld   $93         ;5bf5 INC
              d070 001b  ld   $1b         ;5bf5 '_vLR'+1
              d071 00ff  ld   $ff         ;5bf7 RET
              d072 005c  ld   $5c         ;| RAM segment address (high byte first)
              d073 00a0  ld   $a0         ;|
              d074 0040  ld   $40         ;| Length (1..256)
              d075 00cd  ld   $cd         ;5ca0 DEF
              d076 00d9  ld   $d9
              d077 0075  ld   $75         ;5ca2 PUSH
              d078 00cd  ld   $cd         ;5ca3 DEF
              d079 00a9  ld   $a9
              d07a 0051  ld   $51         ;5ca5 81
              d07b 0000  ld   $00         ;5ca6 0
              d07c 0000  ld   $00         ;5ca7 0
              d07d 0000  ld   $00         ;5ca8 0
              d07e 0000  ld   $00         ;5ca9 0
              d07f 0000  ld   $00         ;5caa 0
              d080 002b  ld   $2b         ;5cab STW
              d081 0050  ld   $50         ;5cab 'p'
              d082 002b  ld   $2b         ;5cad STW
              d083 0052  ld   $52         ;5cad 'q'
              d084 001a  ld   $1a         ;5caf LD
              d085 0055  ld   $55         ;5caf 'SectorH'+1
              d086 0093  ld   $93         ;5cb1 INC
              d087 0052  ld   $52         ;5cb1 'q'
              d088 00f0  ld   $f0         ;5cb3 POKE
              d089 0052  ld   $52         ;5cb3 'q'
              d08a 001a  ld   $1a         ;5cb5 LD
              d08b 0054  ld   $54         ;5cb5 'SectorH'
              d08c 0093  ld   $93         ;5cb7 INC
              d08d 0052  ld   $52         ;5cb7 'q'
              d08e 00f0  ld   $f0         ;5cb9 POKE
              d08f 0052  ld   $52         ;5cb9 'q'
              d090 001a  ld   $1a         ;5cbb LD
              d091 0057  ld   $57         ;5cbb 'SectorL'+1
              d092 0093  ld   $93         ;5cbd INC
              d093 0052  ld   $52         ;5cbd 'q'
              d094 00f0  ld   $f0         ;5cbf POKE
              d095 0052  ld   $52         ;5cbf 'q'
              d096 001a  ld   $1a         ;5cc1 LD
              d097 0056  ld   $56         ;5cc1 'SectorL'
              d098 0093  ld   $93         ;5cc3 INC
              d099 0052  ld   $52         ;5cc3 'q'
              d09a 00f0  ld   $f0         ;5cc5 POKE
              d09b 0052  ld   $52         ;5cc5 'q'
              d09c 0021  ld   $21         ;5cc7 LDW
              d09d 0050  ld   $50         ;5cc7 'p'
              d09e 00cf  ld   $cf         ;5cc9 CALL
              d09f 003c  ld   $3c         ;5cc9 'SendCommandToCard'
              d0a0 00cf  ld   $cf         ;5ccb CALL
              d0a1 003e  ld   $3e         ;5ccb 'WaitForCardReply'
              d0a2 0082  ld   $82         ;5ccd ANDI
              d0a3 00fe  ld   $fe
              d0a4 0035  ld   $35         ;5ccf BCC
              d0a5 0072  ld   $72         ;5cd0 NE
              d0a6 00d7  ld   $d7
              d0a7 00cf  ld   $cf         ;5cd2 CALL
              d0a8 0038  ld   $38         ;5cd2 'SendOnesToCard'
              d0a9 008c  ld   $8c         ;5cd4 XORI
              d0aa 00ff  ld   $ff
              d0ab 0035  ld   $35         ;5cd6 BCC
              d0ac 003f  ld   $3f         ;5cd7 EQ
              d0ad 00d0  ld   $d0
              d0ae 0063  ld   $63         ;5cd9 POP
              d0af 00ff  ld   $ff         ;5cda RET
              d0b0 002b  ld   $2b         ;5cdb STW
              d0b1 0058  ld   $58         ;5cdb 'CMD17'
              d0b2 0093  ld   $93         ;5cdd INC
              d0b3 001b  ld   $1b         ;5cdd '_vLR'+1
              d0b4 00ff  ld   $ff         ;5cdf RET
              d0b5 005d  ld   $5d         ;| RAM segment address (high byte first)
              d0b6 00a0  ld   $a0         ;|
              d0b7 003b  ld   $3b         ;| Length (1..256)
              d0b8 00cd  ld   $cd         ;5da0 DEF
              d0b9 00ab  ld   $ab
              d0ba 0011  ld   $11         ;5da2 LDWI
              d0bb 0009  ld   $09
              d0bc 000b  ld   $0b
              d0bd 002b  ld   $2b         ;5da5 STW
              d0be 0022  ld   $22         ;5da5 '_sysFn'
              d0bf 0011  ld   $11         ;5da7 LDWI
              d0c0 0078  ld   $78
              d0c1 0080  ld   $80
              d0c2 00b4  ld   $b4         ;5daa SYS
              d0c3 00fb  ld   $fb
              d0c4 00ff  ld   $ff         ;5dac RET
              d0c5 002b  ld   $2b         ;5dad STW
              d0c6 003a  ld   $3a         ;5dad 'EnableCard'
              d0c7 00cd  ld   $cd         ;5daf DEF
              d0c8 00ba  ld   $ba
              d0c9 0011  ld   $11         ;5db1 LDWI
              d0ca 0009  ld   $09
              d0cb 000b  ld   $0b
              d0cc 002b  ld   $2b         ;5db4 STW
              d0cd 0022  ld   $22         ;5db4 '_sysFn'
              d0ce 0011  ld   $11         ;5db6 LDWI
              d0cf 007c  ld   $7c
              d0d0 0080  ld   $80
              d0d1 00b4  ld   $b4         ;5db9 SYS
              d0d2 00fb  ld   $fb
              d0d3 00ff  ld   $ff         ;5dbb RET
              d0d4 002b  ld   $2b         ;5dbc STW
              d0d5 005a  ld   $5a         ;5dbc 'DisableCard'
              d0d6 00cd  ld   $cd         ;5dbe DEF
              d0d7 00d4  ld   $d4
              d0d8 0059  ld   $59         ;5dc0 LDI
              d0d9 00ff  ld   $ff
              d0da 005e  ld   $5e         ;5dc2 ST
              d0db 002a  ld   $2a
              d0dc 0059  ld   $59         ;5dc4 LDI
              d0dd 002a  ld   $2a
              d0de 002b  ld   $2b         ;5dc6 STW
              d0df 0024  ld   $24         ;5dc6 '_sysArgs0'
              d0e0 00e3  ld   $e3         ;5dc8 ADDI
              d0e1 0001  ld   $01
              d0e2 002b  ld   $2b         ;5dca STW
              d0e3 0026  ld   $26         ;5dca '_sysArgs2'
              d0e4 0011  ld   $11         ;5dcc LDWI
              d0e5 0015  ld   $15
              d0e6 000b  ld   $0b
              d0e7 002b  ld   $2b         ;5dcf STW
              d0e8 0022  ld   $22         ;5dcf '_sysFn'
              d0e9 00b4  ld   $b4         ;5dd1 SYS
              d0ea 00cc  ld   $cc
              d0eb 001a  ld   $1a         ;5dd3 LD
              d0ec 002a  ld   $2a
              d0ed 00ff  ld   $ff         ;5dd5 RET
              d0ee 002b  ld   $2b         ;5dd6 STW
              d0ef 0038  ld   $38         ;5dd6 'SendOnesToCard'
              d0f0 0093  ld   $93         ;5dd8 INC
              d0f1 001b  ld   $1b         ;5dd8 '_vLR'+1
              d0f2 00ff  ld   $ff         ;5dda RET
              d0f3 005e  ld   $5e         ;| RAM segment address (high byte first)
              d0f4 00a0  ld   $a0         ;|
              d0f5 002b  ld   $2b         ;| Length (1..256)
              d0f6 00cd  ld   $cd         ;5ea0 DEF
              d0f7 00c4  ld   $c4
              d0f8 00fc  ld   $fc         ;5ea2 1020
              d0f9 005d  ld   $5d         ;5ea3 >Checksum
              d0fa 005e  ld   $5e         ;5ea4 ST
              d0fb fe00  bra  ac          ;+-----------------------------------+
              d0fc fcfd  bra  $d0fd       ;|                                   |
              d0fd 1418  ld   $18,y       ;| Trampoline for page $d000 lookups |
              d0fe e006  jmp  y,$06       ;|                                   |
              d0ff c218  st   [$18]       ;+-----------------------------------+
              d100 005d  ld   $5d         ;5ea4 'Checksum'+1
              d101 0059  ld   $59         ;5ea6 LDI
              d102 0008  ld   $08
              d103 002b  ld   $2b         ;5ea8 STW
              d104 0036  ld   $36         ;5ea8 'i'
              d105 0021  ld   $21         ;5eaa LDW
              d106 005c  ld   $5c         ;5eaa 'Checksum'
              d107 0035  ld   $35         ;5eac BCC
              d108 0053  ld   $53         ;5ead GE
              d109 00b8  ld   $b8
              d10a 0099  ld   $99         ;5eaf ADDW
              d10b 005c  ld   $5c         ;5eaf 'Checksum'
              d10c 002b  ld   $2b         ;5eb1 STW
              d10d 005c  ld   $5c         ;5eb1 'Checksum'
              d10e 0011  ld   $11         ;5eb3 LDWI
              d10f 0021  ld   $21
              d110 0010  ld   $10
              d111 00fc  ld   $fc         ;5eb6 XORW
              d112 005c  ld   $5c         ;5eb6 'Checksum'
              d113 0090  ld   $90         ;5eb8 BRA
              d114 00ba  ld   $ba
              d115 0099  ld   $99         ;5eba ADDW
              d116 005c  ld   $5c         ;5eba 'Checksum'
              d117 002b  ld   $2b         ;5ebc STW
              d118 005c  ld   $5c         ;5ebc 'Checksum'
              d119 0021  ld   $21         ;5ebe LDW
              d11a 0036  ld   $36         ;5ebe 'i'
              d11b 00e6  ld   $e6         ;5ec0 SUBI
              d11c 0001  ld   $01
              d11d 0035  ld   $35         ;5ec2 BCC
              d11e 004d  ld   $4d         ;5ec3 GT
              d11f 00a6  ld   $a6
              d120 00ff  ld   $ff         ;5ec5 RET
              d121 002b  ld   $2b         ;5ec6 STW
              d122 005e  ld   $5e         ;5ec6 'UpdateCrc16'
              d123 0093  ld   $93         ;5ec8 INC
              d124 001b  ld   $1b         ;5ec8 '_vLR'+1
              d125 00ff  ld   $ff         ;5eca RET
              d126 005f  ld   $5f         ;| RAM segment address (high byte first)
              d127 00a0  ld   $a0         ;|
              d128 005e  ld   $5e         ;| Length (1..256)
              d129 00cd  ld   $cd         ;5fa0 DEF
              d12a 00d6  ld   $d6
              d12b 0075  ld   $75         ;5fa2 PUSH
              d12c 002b  ld   $2b         ;5fa3 STW
              d12d 0050  ld   $50         ;5fa3 'p'
              d12e 0021  ld   $21         ;5fa5 LDW
              d12f 0060  ld   $60         ;5fa5 'Buffer'
              d130 002b  ld   $2b         ;5fa7 STW
              d131 0052  ld   $52         ;5fa7 'q'
              d132 0059  ld   $59         ;5fa9 LDI
              d133 00ff  ld   $ff
              d134 00f0  ld   $f0         ;5fab POKE
              d135 0052  ld   $52         ;5fab 'q'
              d136 0093  ld   $93         ;5fad INC
              d137 0052  ld   $52         ;5fad 'q'
              d138 00f0  ld   $f0         ;5faf POKE
              d139 0052  ld   $52         ;5faf 'q'
              d13a 0093  ld   $93         ;5fb1 INC
              d13b 0052  ld   $52         ;5fb1 'q'
              d13c 0059  ld   $59         ;5fb3 LDI
              d13d 0006  ld   $06
              d13e 002b  ld   $2b         ;5fb5 STW
              d13f 0036  ld   $36         ;5fb5 'i'
              d140 0021  ld   $21         ;5fb7 LDW
              d141 0050  ld   $50         ;5fb7 'p'
              d142 00ad  ld   $ad         ;5fb9 PEEK
              d143 0093  ld   $93         ;5fba INC
              d144 0050  ld   $50         ;5fba 'p'
              d145 00f0  ld   $f0         ;5fbc POKE
              d146 0052  ld   $52         ;5fbc 'q'
              d147 0093  ld   $93         ;5fbe INC
              d148 0052  ld   $52         ;5fbe 'q'
              d149 0021  ld   $21         ;5fc0 LDW
              d14a 0036  ld   $36         ;5fc0 'i'
              d14b 00e6  ld   $e6         ;5fc2 SUBI
              d14c 0001  ld   $01
              d14d 0035  ld   $35         ;5fc4 BCC
              d14e 004d  ld   $4d         ;5fc5 GT
              d14f 00b3  ld   $b3
              d150 0021  ld   $21         ;5fc7 LDW
              d151 0060  ld   $60         ;5fc7 'Buffer'
              d152 002b  ld   $2b         ;5fc9 STW
              d153 0024  ld   $24         ;5fc9 '_sysArgs0'
              d154 00e3  ld   $e3         ;5fcb ADDI
              d155 0008  ld   $08
              d156 002b  ld   $2b         ;5fcd STW
              d157 0026  ld   $26         ;5fcd '_sysArgs2'
              d158 0011  ld   $11         ;5fcf LDWI
              d159 0015  ld   $15
              d15a 000b  ld   $0b
              d15b 002b  ld   $2b         ;5fd2 STW
              d15c 0022  ld   $22         ;5fd2 '_sysFn'
              d15d 00b4  ld   $b4         ;5fd4 SYS
              d15e 00cc  ld   $cc
              d15f 0063  ld   $63         ;5fd6 POP
              d160 00ff  ld   $ff         ;5fd7 RET
              d161 002b  ld   $2b         ;5fd8 STW
              d162 003c  ld   $3c         ;5fd8 'SendCommandToCard'
              d163 00cd  ld   $cd         ;5fda DEF
              d164 00f7  ld   $f7
              d165 0075  ld   $75         ;5fdc PUSH
              d166 0059  ld   $59         ;5fdd LDI
              d167 0008  ld   $08
              d168 002b  ld   $2b         ;5fdf STW
              d169 0036  ld   $36         ;5fdf 'i'
              d16a 00cf  ld   $cf         ;5fe1 CALL
              d16b 0038  ld   $38         ;5fe1 'SendOnesToCard'
              d16c 0082  ld   $82         ;5fe3 ANDI
              d16d 0080  ld   $80
              d16e 0035  ld   $35         ;5fe5 BCC
              d16f 003f  ld   $3f         ;5fe6 EQ
              d170 00ed  ld   $ed
              d171 0021  ld   $21         ;5fe8 LDW
              d172 0036  ld   $36         ;5fe8 'i'
              d173 00e6  ld   $e6         ;5fea SUBI
              d174 0001  ld   $01
              d175 0035  ld   $35         ;5fec BCC
              d176 004d  ld   $4d         ;5fed GT
              d177 00dd  ld   $dd
              d178 001a  ld   $1a         ;5fef LD
              d179 002a  ld   $2a
              d17a 002b  ld   $2b         ;5ff1 STW
              d17b 0044  ld   $44         ;5ff1 'CardReply'
              d17c 00cf  ld   $cf         ;5ff3 CALL
              d17d 0062  ld   $62         ;5ff3 'PrintByte'
              d17e 0021  ld   $21         ;5ff5 LDW
              d17f 0044  ld   $44         ;5ff5 'CardReply'
              d180 0063  ld   $63         ;5ff7 POP
              d181 00ff  ld   $ff         ;5ff8 RET
              d182 002b  ld   $2b         ;5ff9 STW
              d183 003e  ld   $3e         ;5ff9 'WaitForCardReply'
              d184 0093  ld   $93         ;5ffb INC
              d185 001b  ld   $1b         ;5ffb '_vLR'+1
              d186 00ff  ld   $ff         ;5ffd RET
              d187 0060  ld   $60         ;| RAM segment address (high byte first)
              d188 00a0  ld   $a0         ;|
              d189 005c  ld   $5c         ;| Length (1..256)
              d18a 00cd  ld   $cd         ;60a0 DEF
              d18b 00d0  ld   $d0
              d18c 0075  ld   $75         ;60a2 PUSH
              d18d 00cf  ld   $cf         ;60a3 CALL
              d18e 0042  ld   $42         ;60a3 'CMD0'
              d18f 0035  ld   $35         ;60a5 BCC
              d190 003f  ld   $3f         ;60a6 EQ
              d191 00af  ld   $af
              d192 00cf  ld   $cf         ;60a8 CALL
              d193 005a  ld   $5a         ;60a8 'DisableCard'
              d194 001a  ld   $1a         ;60aa LD
              d195 000e  ld   $0e
              d196 00e6  ld   $e6         ;60ac SUBI
              d197 003c  ld   $3c
              d198 0035  ld   $35         ;60ae BCC
              d199 0050  ld   $50         ;60af LT
              d19a 00a1  ld   $a1
              d19b 00cf  ld   $cf         ;60b1 CALL
              d19c 0046  ld   $46         ;60b1 'CMD8'
              d19d 00cf  ld   $cf         ;60b3 CALL
              d19e 004a  ld   $4a         ;60b3 'CMD55'
              d19f 00cf  ld   $cf         ;60b5 CALL
              d1a0 004c  ld   $4c         ;60b5 'ACMD41'
              d1a1 0021  ld   $21         ;60b7 LDW
              d1a2 0044  ld   $44         ;60b7 'CardReply'
              d1a3 0035  ld   $35         ;60b9 BCC
              d1a4 003f  ld   $3f         ;60ba EQ
              d1a5 00c1  ld   $c1
              d1a6 001a  ld   $1a         ;60bc LD
              d1a7 000e  ld   $0e
              d1a8 00e6  ld   $e6         ;60be SUBI
              d1a9 0078  ld   $78
              d1aa 0035  ld   $35         ;60c0 BCC
              d1ab 0050  ld   $50         ;60c1 LT
              d1ac 00b1  ld   $b1
              d1ad 0021  ld   $21         ;60c3 LDW
              d1ae 0034  ld   $34         ;60c3 'CardType'
              d1af 008c  ld   $8c         ;60c5 XORI
              d1b0 0002  ld   $02
              d1b1 0035  ld   $35         ;60c7 BCC
              d1b2 0072  ld   $72         ;60c8 NE
              d1b3 00ca  ld   $ca
              d1b4 00cf  ld   $cf         ;60ca CALL
              d1b5 0048  ld   $48         ;60ca 'CMD58'
              d1b6 00cf  ld   $cf         ;60cc CALL
              d1b7 004e  ld   $4e         ;60cc 'CMD16'
              d1b8 00cf  ld   $cf         ;60ce CALL
              d1b9 005a  ld   $5a         ;60ce 'DisableCard'
              d1ba 0063  ld   $63         ;60d0 POP
              d1bb 00ff  ld   $ff         ;60d1 RET
              d1bc 002b  ld   $2b         ;60d2 STW
              d1bd 0064  ld   $64         ;60d2 'InitCard'
              d1be 00cd  ld   $cd         ;60d4 DEF
              d1bf 00f5  ld   $f5
              d1c0 0075  ld   $75         ;60d6 PUSH
              d1c1 00cf  ld   $cf         ;60d7 CALL
              d1c2 0066  ld   $66         ;60d7 'ReadSector'
              d1c3 00cd  ld   $cd         ;60d9 DEF
              d1c4 00e1  ld   $e1
              d1c5 0056  ld   $56         ;60db 'V'
              d1c6 006f  ld   $6f         ;60dc 'o'
              d1c7 006c  ld   $6c         ;60dd 'l'
              d1c8 002e  ld   $2e         ;60de '.'
              d1c9 0049  ld   $49         ;60df 'I'
              d1ca 0044  ld   $44         ;60e0 'D'
              d1cb 0020  ld   $20         ;60e1 ' '
              d1cc 0000  ld   $00         ;60e2 0
              d1cd 00cf  ld   $cf         ;60e3 CALL
              d1ce 0032  ld   $32         ;60e3 'PrintText'
              d1cf 0059  ld   $59         ;60e5 LDI
              d1d0 000b  ld   $0b
              d1d1 0099  ld   $99         ;60e7 ADDW
              d1d2 0030  ld   $30         ;60e7 'Address'
              d1d3 00f6  ld   $f6         ;60e9 DEEK
              d1d4 002b  ld   $2b         ;60ea STW
              d1d5 0068  ld   $68         ;60ea 'k'
              d1d6 00cf  ld   $cf         ;60ec CALL
              d1d7 006a  ld   $6a         ;60ec 'PrintWord'
              d1d8 0011  ld   $11         ;60ee LDWI
              d1d9 0000  ld   $00
              d1da 0002  ld   $02
              d1db 00fc  ld   $fc         ;60f1 XORW
              d1dc 0068  ld   $68         ;60f1 'k'
              d1dd 00cf  ld   $cf         ;60f3 CALL
              d1de 0040  ld   $40         ;60f3 'PrintResult'
              d1df 0063  ld   $63         ;60f5 POP
              d1e0 00ff  ld   $ff         ;60f6 RET
              d1e1 002b  ld   $2b         ;60f7 STW
              d1e2 006c  ld   $6c         ;60f7 'ReadVolumeId'
              d1e3 0093  ld   $93         ;60f9 INC
              d1e4 001b  ld   $1b         ;60f9 '_vLR'+1
              d1e5 00ff  ld   $ff         ;60fb RET
              d1e6 0061  ld   $61         ;| RAM segment address (high byte first)
              d1e7 00a0  ld   $a0         ;|
              d1e8 004e  ld   $4e         ;| Length (1..256)
              d1e9 00cd  ld   $cd         ;61a0 DEF
              d1ea 00e7  ld   $e7
              d1eb 0075  ld   $75         ;61a2 PUSH
              d1ec 0059  ld   $59         ;61a3 LDI
              d1ed 0000  ld   $00
              d1ee 002b  ld   $2b         ;61a5 STW
              d1ef 0056  ld   $56         ;61a5 'SectorL'
              d1f0 002b  ld   $2b         ;61a7 STW
              d1f1 0054  ld   $54         ;61a7 'SectorH'
              d1f2 00cf  ld   $cf         ;61a9 CALL
              d1f3 0066  ld   $66         ;61a9 'ReadSector'
              d1f4 00cd  ld   $cd         ;61ab DEF
              d1f5 00b0  ld   $b0
              d1f6 004d  ld   $4d         ;61ad 'M'
              d1f7 0042  ld   $42         ;61ae 'B'
              d1f8 0052  ld   $52         ;61af 'R'
              d1f9 0020  ld   $20         ;61b0 ' '
              d1fa 0000  ld   $00         ;61b1 0
              d1fb fe00  bra  ac          ;+-----------------------------------+
              d1fc fcfd  bra  $d1fd       ;|                                   |
              d1fd 1418  ld   $18,y       ;| Trampoline for page $d100 lookups |
              d1fe e006  jmp  y,$06       ;|                                   |
              d1ff c218  st   [$18]       ;+-----------------------------------+
              d200 00cf  ld   $cf         ;61b2 CALL
              d201 0032  ld   $32         ;61b2 'PrintText'
              d202 0011  ld   $11         ;61b4 LDWI
              d203 00fe  ld   $fe
              d204 0001  ld   $01
              d205 0099  ld   $99         ;61b7 ADDW
              d206 0030  ld   $30         ;61b7 'Address'
              d207 00f6  ld   $f6         ;61b9 DEEK
              d208 002b  ld   $2b         ;61ba STW
              d209 0068  ld   $68         ;61ba 'k'
              d20a 0011  ld   $11         ;61bc LDWI
              d20b 0055  ld   $55
              d20c 00aa  ld   $aa
              d20d 00fc  ld   $fc         ;61bf XORW
              d20e 0068  ld   $68         ;61bf 'k'
              d20f 0035  ld   $35         ;61c1 BCC
              d210 0072  ld   $72         ;61c2 NE
              d211 00e5  ld   $e5
              d212 0011  ld   $11         ;61c4 LDWI
              d213 00c6  ld   $c6
              d214 0001  ld   $01
              d215 0099  ld   $99         ;61c7 ADDW
              d216 0030  ld   $30         ;61c7 'Address'
              d217 00f6  ld   $f6         ;61c9 DEEK
              d218 002b  ld   $2b         ;61ca STW
              d219 0056  ld   $56         ;61ca 'SectorL'
              d21a 0011  ld   $11         ;61cc LDWI
              d21b 00c8  ld   $c8
              d21c 0001  ld   $01
              d21d 0099  ld   $99         ;61cf ADDW
              d21e 0030  ld   $30         ;61cf 'Address'
              d21f 00f6  ld   $f6         ;61d1 DEEK
              d220 002b  ld   $2b         ;61d2 STW
              d221 0054  ld   $54         ;61d2 'SectorH'
              d222 0011  ld   $11         ;61d4 LDWI
              d223 00c2  ld   $c2
              d224 0001  ld   $01
              d225 0099  ld   $99         ;61d7 ADDW
              d226 0030  ld   $30         ;61d7 'Address'
              d227 00ad  ld   $ad         ;61d9 PEEK
              d228 002b  ld   $2b         ;61da STW
              d229 0068  ld   $68         ;61da 'k'
              d22a 00cf  ld   $cf         ;61dc CALL
              d22b 0062  ld   $62         ;61dc 'PrintByte'
              d22c 0059  ld   $59         ;61de LDI
              d22d 000b  ld   $0b
              d22e 00fc  ld   $fc         ;61e0 XORW
              d22f 0068  ld   $68         ;61e0 'k'
              d230 0035  ld   $35         ;61e2 BCC
              d231 003f  ld   $3f         ;61e3 EQ
              d232 00e5  ld   $e5
              d233 008c  ld   $8c         ;61e5 XORI
              d234 0007  ld   $07
              d235 0063  ld   $63         ;61e7 POP
              d236 00ff  ld   $ff         ;61e8 RET
              d237 002b  ld   $2b         ;61e9 STW
              d238 006e  ld   $6e         ;61e9 'ReadMBR'
              d239 0093  ld   $93         ;61eb INC
              d23a 001b  ld   $1b         ;61eb '_vLR'+1
              d23b 00ff  ld   $ff         ;61ed RET
              d23c 0062  ld   $62         ;| RAM segment address (high byte first)
              d23d 00a0  ld   $a0         ;|
              d23e 005f  ld   $5f         ;| Length (1..256)
              d23f 00cd  ld   $cd         ;62a0 DEF
              d240 00fa  ld   $fa
              d241 0075  ld   $75         ;62a2 PUSH
              d242 0059  ld   $59         ;62a3 LDI
              d243 000d  ld   $0d
              d244 0099  ld   $99         ;62a5 ADDW
              d245 0030  ld   $30         ;62a5 'Address'
              d246 00ad  ld   $ad         ;62a7 PEEK
              d247 002b  ld   $2b         ;62a8 STW
              d248 0070  ld   $70         ;62a8 'ClusterSize'
              d249 0021  ld   $21         ;62aa LDW
              d24a 0056  ld   $56         ;62aa 'SectorL'
              d24b 002b  ld   $2b         ;62ac STW
              d24c 0072  ld   $72         ;62ac 'ValueL'
              d24d 0021  ld   $21         ;62ae LDW
              d24e 0054  ld   $54         ;62ae 'SectorH'
              d24f 002b  ld   $2b         ;62b0 STW
              d250 0074  ld   $74         ;62b0 'ValueH'
              d251 0059  ld   $59         ;62b2 LDI
              d252 000e  ld   $0e
              d253 0099  ld   $99         ;62b4 ADDW
              d254 0030  ld   $30         ;62b4 'Address'
              d255 00f6  ld   $f6         ;62b6 DEEK
              d256 002b  ld   $2b         ;62b7 STW
              d257 0076  ld   $76         ;62b7 'OffsetL'
              d258 0059  ld   $59         ;62b9 LDI
              d259 0000  ld   $00
              d25a 002b  ld   $2b         ;62bb STW
              d25b 0078  ld   $78         ;62bb 'OffsetH'
              d25c 00cf  ld   $cf         ;62bd CALL
              d25d 007a  ld   $7a         ;62bd 'AddOffset'
              d25e 002b  ld   $2b         ;62bf STW
              d25f 007c  ld   $7c         ;62bf 'FatBaseL'
              d260 0021  ld   $21         ;62c1 LDW
              d261 0074  ld   $74         ;62c1 'ValueH'
              d262 002b  ld   $2b         ;62c3 STW
              d263 007e  ld   $7e         ;62c3 'FatBaseH'
              d264 0059  ld   $59         ;62c5 LDI
              d265 0024  ld   $24
              d266 0099  ld   $99         ;62c7 ADDW
              d267 0030  ld   $30         ;62c7 'Address'
              d268 00f6  ld   $f6         ;62c9 DEEK
              d269 002b  ld   $2b         ;62ca STW
              d26a 0076  ld   $76         ;62ca 'OffsetL'
              d26b 0059  ld   $59         ;62cc LDI
              d26c 0026  ld   $26
              d26d 0099  ld   $99         ;62ce ADDW
              d26e 0030  ld   $30         ;62ce 'Address'
              d26f 00f6  ld   $f6         ;62d0 DEEK
              d270 002b  ld   $2b         ;62d1 STW
              d271 0078  ld   $78         ;62d1 'OffsetH'
              d272 00cf  ld   $cf         ;62d3 CALL
              d273 007a  ld   $7a         ;62d3 'AddOffset'
              d274 00cf  ld   $cf         ;62d5 CALL
              d275 007a  ld   $7a         ;62d5 'AddOffset'
              d276 0059  ld   $59         ;62d7 LDI
              d277 0000  ld   $00
              d278 00b8  ld   $b8         ;62d9 SUBW
              d279 0070  ld   $70         ;62d9 'ClusterSize'
              d27a 00b8  ld   $b8         ;62db SUBW
              d27b 0070  ld   $70         ;62db 'ClusterSize'
              d27c 002b  ld   $2b         ;62dd STW
              d27d 0076  ld   $76         ;62dd 'OffsetL'
              d27e 0011  ld   $11         ;62df LDWI
              d27f 00ff  ld   $ff
              d280 00ff  ld   $ff
              d281 002b  ld   $2b         ;62e2 STW
              d282 0078  ld   $78         ;62e2 'OffsetH'
              d283 00cf  ld   $cf         ;62e4 CALL
              d284 007a  ld   $7a         ;62e4 'AddOffset'
              d285 002b  ld   $2b         ;62e6 STW
              d286 0081  ld   $81         ;62e6 'ClusterBaseL'
              d287 0021  ld   $21         ;62e8 LDW
              d288 0074  ld   $74         ;62e8 'ValueH'
              d289 002b  ld   $2b         ;62ea STW
              d28a 0083  ld   $83         ;62ea 'ClusterBaseH'
              d28b 0059  ld   $59         ;62ec LDI
              d28c 002c  ld   $2c
              d28d 0099  ld   $99         ;62ee ADDW
              d28e 0030  ld   $30         ;62ee 'Address'
              d28f 00f6  ld   $f6         ;62f0 DEEK
              d290 002b  ld   $2b         ;62f1 STW
              d291 0085  ld   $85         ;62f1 'CurrentDirL'
              d292 0059  ld   $59         ;62f3 LDI
              d293 002e  ld   $2e
              d294 0099  ld   $99         ;62f5 ADDW
              d295 0030  ld   $30         ;62f5 'Address'
              d296 00f6  ld   $f6         ;62f7 DEEK
              d297 002b  ld   $2b         ;62f8 STW
              d298 0087  ld   $87         ;62f8 'CurrentDirH'
              d299 0063  ld   $63         ;62fa POP
              d29a 00ff  ld   $ff         ;62fb RET
              d29b 0093  ld   $93         ;62fc INC
              d29c 001b  ld   $1b         ;62fc '_vLR'+1
              d29d 00ff  ld   $ff         ;62fe RET
              d29e 0063  ld   $63         ;| RAM segment address (high byte first)
              d29f 00a0  ld   $a0         ;|
              d2a0 0052  ld   $52         ;| Length (1..256)
              d2a1 002b  ld   $2b         ;63a0 STW
              d2a2 0089  ld   $89         ;63a0 'InitFat32'
              d2a3 00cd  ld   $cd         ;63a2 DEF
              d2a4 00b6  ld   $b6
              d2a5 0075  ld   $75         ;63a4 PUSH
              d2a6 00cf  ld   $cf         ;63a5 CALL
              d2a7 003a  ld   $3a         ;63a5 'EnableCard'
              d2a8 0021  ld   $21         ;63a7 LDW
              d2a9 0034  ld   $34         ;63a7 'CardType'
              d2aa 00e6  ld   $e6         ;63a9 SUBI
              d2ab 0002  ld   $02
              d2ac 0035  ld   $35         ;63ab BCC
              d2ad 0053  ld   $53         ;63ac GE
              d2ae 00ae  ld   $ae
              d2af 00cf  ld   $cf         ;63ae CALL
              d2b0 008b  ld   $8b         ;63ae 'SectorToByte'
              d2b1 00cf  ld   $cf         ;63b0 CALL
              d2b2 0058  ld   $58         ;63b0 'CMD17'
              d2b3 0059  ld   $59         ;63b2 LDI
              d2b4 0000  ld   $00
              d2b5 002b  ld   $2b         ;63b4 STW
              d2b6 005c  ld   $5c         ;63b4 'Checksum'
              d2b7 0063  ld   $63         ;63b6 POP
              d2b8 00ff  ld   $ff         ;63b7 RET
              d2b9 002b  ld   $2b         ;63b8 STW
              d2ba 008d  ld   $8d         ;63b8 'OpenSector'
              d2bb 00cd  ld   $cd         ;63ba DEF
              d2bc 00eb  ld   $eb
              d2bd 0075  ld   $75         ;63bc PUSH
              d2be 00cf  ld   $cf         ;63bd CALL
              d2bf 008d  ld   $8d         ;63bd 'OpenSector'
              d2c0 0021  ld   $21         ;63bf LDW
              d2c1 0030  ld   $30         ;63bf 'Address'
              d2c2 002b  ld   $2b         ;63c1 STW
              d2c3 0052  ld   $52         ;63c1 'q'
              d2c4 0059  ld   $59         ;63c3 LDI
              d2c5 0000  ld   $00
              d2c6 002b  ld   $2b         ;63c5 STW
              d2c7 005c  ld   $5c         ;63c5 'Checksum'
              d2c8 0011  ld   $11         ;63c7 LDWI
              d2c9 0000  ld   $00
              d2ca 0002  ld   $02
              d2cb 002b  ld   $2b         ;63ca STW
              d2cc 0068  ld   $68         ;63ca 'k'
              d2cd 00cf  ld   $cf         ;63cc CALL
              d2ce 0038  ld   $38         ;63cc 'SendOnesToCard'
              d2cf 00f0  ld   $f0         ;63ce POKE
              d2d0 0052  ld   $52         ;63ce 'q'
              d2d1 00cf  ld   $cf         ;63d0 CALL
              d2d2 005e  ld   $5e         ;63d0 'UpdateCrc16'
              d2d3 0021  ld   $21         ;63d2 LDW
              d2d4 0052  ld   $52         ;63d2 'q'
              d2d5 00e3  ld   $e3         ;63d4 ADDI
              d2d6 0001  ld   $01
              d2d7 002b  ld   $2b         ;63d6 STW
              d2d8 0052  ld   $52         ;63d6 'q'
              d2d9 0021  ld   $21         ;63d8 LDW
              d2da 0068  ld   $68         ;63d8 'k'
              d2db 00e6  ld   $e6         ;63da SUBI
              d2dc 0001  ld   $01
              d2dd 0035  ld   $35         ;63dc BCC
              d2de 004d  ld   $4d         ;63dd GT
              d2df 00c8  ld   $c8
              d2e0 00cf  ld   $cf         ;63df CALL
              d2e1 0038  ld   $38         ;63df 'SendOnesToCard'
              d2e2 00cf  ld   $cf         ;63e1 CALL
              d2e3 005e  ld   $5e         ;63e1 'UpdateCrc16'
              d2e4 00cf  ld   $cf         ;63e3 CALL
              d2e5 0038  ld   $38         ;63e3 'SendOnesToCard'
              d2e6 00cf  ld   $cf         ;63e5 CALL
              d2e7 005e  ld   $5e         ;63e5 'UpdateCrc16'
              d2e8 00cf  ld   $cf         ;63e7 CALL
              d2e9 005a  ld   $5a         ;63e7 'DisableCard'
              d2ea 0021  ld   $21         ;63e9 LDW
              d2eb 005c  ld   $5c         ;63e9 'Checksum'
              d2ec 0063  ld   $63         ;63eb POP
              d2ed 00ff  ld   $ff         ;63ec RET
              d2ee 002b  ld   $2b         ;63ed STW
              d2ef 0066  ld   $66         ;63ed 'ReadSector'
              d2f0 0093  ld   $93         ;63ef INC
              d2f1 001b  ld   $1b         ;63ef '_vLR'+1
              d2f2 00ff  ld   $ff         ;63f1 RET
              d2f3 0064  ld   $64         ;| RAM segment address (high byte first)
              d2f4 00a0  ld   $a0         ;|
              d2f5 0052  ld   $52         ;| Length (1..256)
              d2f6 00cd  ld   $cd         ;64a0 DEF
              d2f7 00d6  ld   $d6
              d2f8 0075  ld   $75         ;64a2 PUSH
              d2f9 0021  ld   $21         ;64a3 LDW
              d2fa 008f  ld   $8f         ;64a3 'FilePosL'
              d2fb fe00  bra  ac          ;+-----------------------------------+
              d2fc fcfd  bra  $d2fd       ;|                                   |
              d2fd 1418  ld   $18,y       ;| Trampoline for page $d200 lookups |
              d2fe e006  jmp  y,$06       ;|                                   |
              d2ff c218  st   [$18]       ;+-----------------------------------+
              d300 00fc  ld   $fc         ;64a5 XORW
              d301 0091  ld   $91         ;64a5 'FileSizeL'
              d302 0035  ld   $35         ;64a7 BCC
              d303 0072  ld   $72         ;64a8 NE
              d304 00ac  ld   $ac
              d305 0021  ld   $21         ;64aa LDW
              d306 0093  ld   $93         ;64aa 'FilePosH'
              d307 00fc  ld   $fc         ;64ac XORW
              d308 0095  ld   $95         ;64ac 'FileSizeH'
              d309 0035  ld   $35         ;64ae BCC
              d30a 003f  ld   $3f         ;64af EQ
              d30b 00d2  ld   $d2
              d30c 0011  ld   $11         ;64b1 LDWI
              d30d 00ff  ld   $ff
              d30e 0001  ld   $01
              d30f 00f8  ld   $f8         ;64b4 ANDW
              d310 008f  ld   $8f         ;64b4 'FilePosL'
              d311 0035  ld   $35         ;64b6 BCC
              d312 0072  ld   $72         ;64b7 NE
              d313 00bf  ld   $bf
              d314 00cf  ld   $cf         ;64b9 CALL
              d315 0038  ld   $38         ;64b9 'SendOnesToCard'
              d316 00cf  ld   $cf         ;64bb CALL
              d317 0038  ld   $38         ;64bb 'SendOnesToCard'
              d318 00cf  ld   $cf         ;64bd CALL
              d319 008d  ld   $8d         ;64bd 'OpenSector'
              d31a 00cf  ld   $cf         ;64bf CALL
              d31b 0097  ld   $97         ;64bf 'NextSector'
              d31c 0021  ld   $21         ;64c1 LDW
              d31d 008f  ld   $8f         ;64c1 'FilePosL'
              d31e 00e3  ld   $e3         ;64c3 ADDI
              d31f 0001  ld   $01
              d320 002b  ld   $2b         ;64c5 STW
              d321 008f  ld   $8f         ;64c5 'FilePosL'
              d322 0035  ld   $35         ;64c7 BCC
              d323 0072  ld   $72         ;64c8 NE
              d324 00ce  ld   $ce
              d325 0021  ld   $21         ;64ca LDW
              d326 0093  ld   $93         ;64ca 'FilePosH'
              d327 00e3  ld   $e3         ;64cc ADDI
              d328 0001  ld   $01
              d329 002b  ld   $2b         ;64ce STW
              d32a 0093  ld   $93         ;64ce 'FilePosH'
              d32b 00cf  ld   $cf         ;64d0 CALL
              d32c 0038  ld   $38         ;64d0 'SendOnesToCard'
              d32d 0090  ld   $90         ;64d2 BRA
              d32e 00d4  ld   $d4
              d32f 00e6  ld   $e6         ;64d4 SUBI
              d330 0001  ld   $01
              d331 0063  ld   $63         ;64d6 POP
              d332 00ff  ld   $ff         ;64d7 RET
              d333 002b  ld   $2b         ;64d8 STW
              d334 0099  ld   $99         ;64d8 'LoadByte'
              d335 00cd  ld   $cd         ;64da DEF
              d336 00eb  ld   $eb
              d337 0075  ld   $75         ;64dc PUSH
              d338 0021  ld   $21         ;64dd LDW
              d339 0085  ld   $85         ;64dd 'CurrentDirL'
              d33a 002b  ld   $2b         ;64df STW
              d33b 0072  ld   $72         ;64df 'ValueL'
              d33c 0021  ld   $21         ;64e1 LDW
              d33d 0087  ld   $87         ;64e1 'CurrentDirH'
              d33e 002b  ld   $2b         ;64e3 STW
              d33f 0074  ld   $74         ;64e3 'ValueH'
              d340 00cf  ld   $cf         ;64e5 CALL
              d341 009b  ld   $9b         ;64e5 'ClusterToSector'
              d342 00cf  ld   $cf         ;64e7 CALL
              d343 0066  ld   $66         ;64e7 'ReadSector'
              d344 0093  ld   $93         ;64e9 INC
              d345 0056  ld   $56         ;64e9 'SectorL'
              d346 0063  ld   $63         ;64eb POP
              d347 00ff  ld   $ff         ;64ec RET
              d348 002b  ld   $2b         ;64ed STW
              d349 009d  ld   $9d         ;64ed 'ReadDirectory'
              d34a 0093  ld   $93         ;64ef INC
              d34b 001b  ld   $1b         ;64ef '_vLR'+1
              d34c 00ff  ld   $ff         ;64f1 RET
              d34d 0065  ld   $65         ;| RAM segment address (high byte first)
              d34e 00a0  ld   $a0         ;|
              d34f 0060  ld   $60         ;| Length (1..256)
              d350 00cd  ld   $cd         ;65a0 DEF
              d351 00c9  ld   $c9
              d352 0075  ld   $75         ;65a2 PUSH
              d353 0059  ld   $59         ;65a3 LDI
              d354 0000  ld   $00
              d355 002b  ld   $2b         ;65a5 STW
              d356 008f  ld   $8f         ;65a5 'FilePosL'
              d357 002b  ld   $2b         ;65a7 STW
              d358 0093  ld   $93         ;65a7 'FilePosH'
              d359 0021  ld   $21         ;65a9 LDW
              d35a 0050  ld   $50         ;65a9 'p'
              d35b 00e3  ld   $e3         ;65ab ADDI
              d35c 001c  ld   $1c
              d35d 00f6  ld   $f6         ;65ad DEEK
              d35e 002b  ld   $2b         ;65ae STW
              d35f 0091  ld   $91         ;65ae 'FileSizeL'
              d360 0021  ld   $21         ;65b0 LDW
              d361 0050  ld   $50         ;65b0 'p'
              d362 00e3  ld   $e3         ;65b2 ADDI
              d363 001e  ld   $1e
              d364 00f6  ld   $f6         ;65b4 DEEK
              d365 002b  ld   $2b         ;65b5 STW
              d366 0095  ld   $95         ;65b5 'FileSizeH'
              d367 0021  ld   $21         ;65b7 LDW
              d368 0050  ld   $50         ;65b7 'p'
              d369 00e3  ld   $e3         ;65b9 ADDI
              d36a 001a  ld   $1a
              d36b 00f6  ld   $f6         ;65bb DEEK
              d36c 002b  ld   $2b         ;65bc STW
              d36d 0072  ld   $72         ;65bc 'ValueL'
              d36e 0021  ld   $21         ;65be LDW
              d36f 0050  ld   $50         ;65be 'p'
              d370 00e3  ld   $e3         ;65c0 ADDI
              d371 0014  ld   $14
              d372 00f6  ld   $f6         ;65c2 DEEK
              d373 002b  ld   $2b         ;65c3 STW
              d374 0074  ld   $74         ;65c3 'ValueH'
              d375 00cf  ld   $cf         ;65c5 CALL
              d376 009f  ld   $9f         ;65c5 'ReadClusterChain'
              d377 00cf  ld   $cf         ;65c7 CALL
              d378 009b  ld   $9b         ;65c7 'ClusterToSector'
              d379 0063  ld   $63         ;65c9 POP
              d37a 00ff  ld   $ff         ;65ca RET
              d37b 002b  ld   $2b         ;65cb STW
              d37c 00a1  ld   $a1         ;65cb 'OpenFile'
              d37d 00cd  ld   $cd         ;65cd DEF
              d37e 00f9  ld   $f9
              d37f 0075  ld   $75         ;65cf PUSH
              d380 001a  ld   $1a         ;65d0 LD
              d381 0075  ld   $75         ;65d0 'ValueH'+1
              d382 0082  ld   $82         ;65d2 ANDI
              d383 000f  ld   $0f
              d384 005e  ld   $5e         ;65d4 ST
              d385 0075  ld   $75         ;65d4 'ValueH'+1
              d386 0059  ld   $59         ;65d6 LDI
              d387 0001  ld   $01
              d388 002b  ld   $2b         ;65d8 STW
              d389 0068  ld   $68         ;65d8 'k'
              d38a 00b8  ld   $b8         ;65da SUBW
              d38b 0070  ld   $70         ;65da 'ClusterSize'
              d38c 0035  ld   $35         ;65dc BCC
              d38d 0053  ld   $53         ;65dd GE
              d38e 00e5  ld   $e5
              d38f 00cf  ld   $cf         ;65df CALL
              d390 00a3  ld   $a3         ;65df 'ShiftLeft'
              d391 0021  ld   $21         ;65e1 LDW
              d392 0068  ld   $68         ;65e1 'k'
              d393 0099  ld   $99         ;65e3 ADDW
              d394 0068  ld   $68         ;65e3 'k'
              d395 0090  ld   $90         ;65e5 BRA
              d396 00d6  ld   $d6
              d397 0021  ld   $21         ;65e7 LDW
              d398 0081  ld   $81         ;65e7 'ClusterBaseL'
              d399 002b  ld   $2b         ;65e9 STW
              d39a 0076  ld   $76         ;65e9 'OffsetL'
              d39b 0021  ld   $21         ;65eb LDW
              d39c 0083  ld   $83         ;65eb 'ClusterBaseH'
              d39d 002b  ld   $2b         ;65ed STW
              d39e 0078  ld   $78         ;65ed 'OffsetH'
              d39f 00cf  ld   $cf         ;65ef CALL
              d3a0 007a  ld   $7a         ;65ef 'AddOffset'
              d3a1 0021  ld   $21         ;65f1 LDW
              d3a2 0072  ld   $72         ;65f1 'ValueL'
              d3a3 002b  ld   $2b         ;65f3 STW
              d3a4 0056  ld   $56         ;65f3 'SectorL'
              d3a5 0021  ld   $21         ;65f5 LDW
              d3a6 0074  ld   $74         ;65f5 'ValueH'
              d3a7 002b  ld   $2b         ;65f7 STW
              d3a8 0054  ld   $54         ;65f7 'SectorH'
              d3a9 0063  ld   $63         ;65f9 POP
              d3aa 00ff  ld   $ff         ;65fa RET
              d3ab 002b  ld   $2b         ;65fb STW
              d3ac 009b  ld   $9b         ;65fb 'ClusterToSector'
              d3ad 0093  ld   $93         ;65fd INC
              d3ae 001b  ld   $1b         ;65fd '_vLR'+1
              d3af 00ff  ld   $ff         ;65ff RET
              d3b0 0066  ld   $66         ;| RAM segment address (high byte first)
              d3b1 00a0  ld   $a0         ;|
              d3b2 005f  ld   $5f         ;| Length (1..256)
              d3b3 00cd  ld   $cd         ;66a0 DEF
              d3b4 00bd  ld   $bd
              d3b5 0075  ld   $75         ;66a2 PUSH
              d3b6 0059  ld   $59         ;66a3 LDI
              d3b7 0000  ld   $00
              d3b8 005e  ld   $5e         ;66a5 ST
              d3b9 0076  ld   $76         ;66a5 'OffsetL'
              d3ba 001a  ld   $1a         ;66a7 LD
              d3bb 0072  ld   $72         ;66a7 'ValueL'
              d3bc 005e  ld   $5e         ;66a9 ST
              d3bd 0077  ld   $77         ;66a9 'OffsetL'+1
              d3be 001a  ld   $1a         ;66ab LD
              d3bf 0073  ld   $73         ;66ab 'ValueL'+1
              d3c0 005e  ld   $5e         ;66ad ST
              d3c1 0078  ld   $78         ;66ad 'OffsetH'
              d3c2 001a  ld   $1a         ;66af LD
              d3c3 0074  ld   $74         ;66af 'ValueH'
              d3c4 005e  ld   $5e         ;66b1 ST
              d3c5 0079  ld   $79         ;66b1 'OffsetH'+1
              d3c6 0021  ld   $21         ;66b3 LDW
              d3c7 0076  ld   $76         ;66b3 'OffsetL'
              d3c8 002b  ld   $2b         ;66b5 STW
              d3c9 0072  ld   $72         ;66b5 'ValueL'
              d3ca 0021  ld   $21         ;66b7 LDW
              d3cb 0078  ld   $78         ;66b7 'OffsetH'
              d3cc 002b  ld   $2b         ;66b9 STW
              d3cd 0074  ld   $74         ;66b9 'ValueH'
              d3ce 00cf  ld   $cf         ;66bb CALL
              d3cf 007a  ld   $7a         ;66bb 'AddOffset'
              d3d0 0063  ld   $63         ;66bd POP
              d3d1 00ff  ld   $ff         ;66be RET
              d3d2 002b  ld   $2b         ;66bf STW
              d3d3 008b  ld   $8b         ;66bf 'SectorToByte'
              d3d4 00cd  ld   $cd         ;66c1 DEF
              d3d5 00d0  ld   $d0
              d3d6 0075  ld   $75         ;66c3 PUSH
              d3d7 0021  ld   $21         ;66c4 LDW
              d3d8 0072  ld   $72         ;66c4 'ValueL'
              d3d9 002b  ld   $2b         ;66c6 STW
              d3da 0076  ld   $76         ;66c6 'OffsetL'
              d3db 0021  ld   $21         ;66c8 LDW
              d3dc 0074  ld   $74         ;66c8 'ValueH'
              d3dd 002b  ld   $2b         ;66ca STW
              d3de 0078  ld   $78         ;66ca 'OffsetH'
              d3df 00cf  ld   $cf         ;66cc CALL
              d3e0 007a  ld   $7a         ;66cc 'AddOffset'
              d3e1 0021  ld   $21         ;66ce LDW
              d3e2 0078  ld   $78         ;66ce 'OffsetH'
              d3e3 0063  ld   $63         ;66d0 POP
              d3e4 00ff  ld   $ff         ;66d1 RET
              d3e5 002b  ld   $2b         ;66d2 STW
              d3e6 00a3  ld   $a3         ;66d2 'ShiftLeft'
              d3e7 00cd  ld   $cd         ;66d4 DEF
              d3e8 00fa  ld   $fa
              d3e9 0021  ld   $21         ;66d6 LDW
              d3ea 0072  ld   $72         ;66d6 'ValueL'
              d3eb 00fc  ld   $fc         ;66d8 XORW
              d3ec 0076  ld   $76         ;66d8 'OffsetL'
              d3ed 0035  ld   $35         ;66da BCC
              d3ee 0053  ld   $53         ;66db GE
              d3ef 00df  ld   $df
              d3f0 0021  ld   $21         ;66dd LDW
              d3f1 0072  ld   $72         ;66dd 'ValueL'
              d3f2 0090  ld   $90         ;66df BRA
              d3f3 00e2  ld   $e2
              d3f4 0011  ld   $11         ;66e1 LDWI
              d3f5 0000  ld   $00
              d3f6 0080  ld   $80
              d3f7 0099  ld   $99         ;66e4 ADDW
              d3f8 0076  ld   $76         ;66e4 'OffsetL'
              d3f9 0035  ld   $35         ;66e6 BCC
              d3fa 0050  ld   $50         ;66e7 LT
              d3fb fe00  bra  ac          ;+-----------------------------------+
              d3fc fcfd  bra  $d3fd       ;|                                   |
              d3fd 1418  ld   $18,y       ;| Trampoline for page $d300 lookups |
              d3fe e006  jmp  y,$06       ;|                                   |
              d3ff c218  st   [$18]       ;+-----------------------------------+
              d400 00ed  ld   $ed
              d401 0021  ld   $21         ;66e9 LDW
              d402 0074  ld   $74         ;66e9 'ValueH'
              d403 00e3  ld   $e3         ;66eb ADDI
              d404 0001  ld   $01
              d405 002b  ld   $2b         ;66ed STW
              d406 0074  ld   $74         ;66ed 'ValueH'
              d407 0021  ld   $21         ;66ef LDW
              d408 0074  ld   $74         ;66ef 'ValueH'
              d409 0099  ld   $99         ;66f1 ADDW
              d40a 0078  ld   $78         ;66f1 'OffsetH'
              d40b 002b  ld   $2b         ;66f3 STW
              d40c 0074  ld   $74         ;66f3 'ValueH'
              d40d 0021  ld   $21         ;66f5 LDW
              d40e 0072  ld   $72         ;66f5 'ValueL'
              d40f 0099  ld   $99         ;66f7 ADDW
              d410 0076  ld   $76         ;66f7 'OffsetL'
              d411 002b  ld   $2b         ;66f9 STW
              d412 0072  ld   $72         ;66f9 'ValueL'
              d413 00ff  ld   $ff         ;66fb RET
              d414 0093  ld   $93         ;66fc INC
              d415 001b  ld   $1b         ;66fc '_vLR'+1
              d416 00ff  ld   $ff         ;66fe RET
              d417 0067  ld   $67         ;| RAM segment address (high byte first)
              d418 00a0  ld   $a0         ;|
              d419 0042  ld   $42         ;| Length (1..256)
              d41a 002b  ld   $2b         ;67a0 STW
              d41b 007a  ld   $7a         ;67a0 'AddOffset'
              d41c 00cd  ld   $cd         ;67a2 DEF
              d41d 00b9  ld   $b9
              d41e 0075  ld   $75         ;67a4 PUSH
              d41f 00e6  ld   $e6         ;67a5 SUBI
              d420 0020  ld   $20
              d421 0035  ld   $35         ;67a7 BCC
              d422 0053  ld   $53         ;67a8 GE
              d423 00ac  ld   $ac
              d424 0059  ld   $59         ;67aa LDI
              d425 007f  ld   $7f
              d426 0090  ld   $90         ;67ac BRA
              d427 00b3  ld   $b3
              d428 00e6  ld   $e6         ;67ae SUBI
              d429 0060  ld   $60
              d42a 0035  ld   $35         ;67b0 BCC
              d42b 0050  ld   $50         ;67b1 LT
              d42c 00b3  ld   $b3
              d42d 0059  ld   $59         ;67b3 LDI
              d42e 007f  ld   $7f
              d42f 0082  ld   $82         ;67b5 ANDI
              d430 007f  ld   $7f
              d431 00cf  ld   $cf         ;67b7 CALL
              d432 00a5  ld   $a5         ;67b7 'PrintChar'
              d433 0063  ld   $63         ;67b9 POP
              d434 00ff  ld   $ff         ;67ba RET
              d435 002b  ld   $2b         ;67bb STW
              d436 00a7  ld   $a7         ;67bb 'SafePrintChar'
              d437 00cd  ld   $cd         ;67bd DEF
              d438 00ca  ld   $ca
              d439 0075  ld   $75         ;67bf PUSH
              d43a 0021  ld   $21         ;67c0 LDW
              d43b 0074  ld   $74         ;67c0 'ValueH'
              d43c 00cf  ld   $cf         ;67c2 CALL
              d43d 006a  ld   $6a         ;67c2 'PrintWord'
              d43e 0021  ld   $21         ;67c4 LDW
              d43f 0072  ld   $72         ;67c4 'ValueL'
              d440 00cf  ld   $cf         ;67c6 CALL
              d441 006a  ld   $6a         ;67c6 'PrintWord'
              d442 00cf  ld   $cf         ;67c8 CALL
              d443 00a9  ld   $a9         ;67c8 'Newline'
              d444 0063  ld   $63         ;67ca POP
              d445 00ff  ld   $ff         ;67cb RET
              d446 002b  ld   $2b         ;67cc STW
              d447 00ab  ld   $ab         ;67cc 'PrintValue'
              d448 00cd  ld   $cd         ;67ce DEF
              d449 00db  ld   $db
              d44a 0075  ld   $75         ;67d0 PUSH
              d44b 002b  ld   $2b         ;67d1 STW
              d44c 0068  ld   $68         ;67d1 'k'
              d44d 001a  ld   $1a         ;67d3 LD
              d44e 0069  ld   $69         ;67d3 'k'+1
              d44f 00cf  ld   $cf         ;67d5 CALL
              d450 0062  ld   $62         ;67d5 'PrintByte'
              d451 001a  ld   $1a         ;67d7 LD
              d452 0068  ld   $68         ;67d7 'k'
              d453 00cf  ld   $cf         ;67d9 CALL
              d454 0062  ld   $62         ;67d9 'PrintByte'
              d455 0063  ld   $63         ;67db POP
              d456 00ff  ld   $ff         ;67dc RET
              d457 002b  ld   $2b         ;67dd STW
              d458 006a  ld   $6a         ;67dd 'PrintWord'
              d459 0093  ld   $93         ;67df INC
              d45a 001b  ld   $1b         ;67df '_vLR'+1
              d45b 00ff  ld   $ff         ;67e1 RET
              d45c 0068  ld   $68         ;| RAM segment address (high byte first)
              d45d 00a0  ld   $a0         ;|
              d45e 0056  ld   $56         ;| Length (1..256)
              d45f 00cd  ld   $cd         ;68a0 DEF
              d460 00b5  ld   $b5
              d461 0075  ld   $75         ;68a2 PUSH
              d462 00df  ld   $df         ;68a3 ALLOC
              d463 00fe  ld   $fe
              d464 00ec  ld   $ec         ;68a5 STLW
              d465 0000  ld   $00
              d466 00e9  ld   $e9         ;68a7 LSLW
              d467 00e9  ld   $e9         ;68a8 LSLW
              d468 00e9  ld   $e9         ;68a9 LSLW
              d469 00e9  ld   $e9         ;68aa LSLW
              d46a 001a  ld   $1a         ;68ab LD
              d46b 0019  ld   $19
              d46c 00cf  ld   $cf         ;68ad CALL
              d46d 00ad  ld   $ad         ;68ad 'PrintHexDigit'
              d46e 00ee  ld   $ee         ;68af LDLW
              d46f 0000  ld   $00
              d470 00df  ld   $df         ;68b1 ALLOC
              d471 0002  ld   $02
              d472 00cf  ld   $cf         ;68b3 CALL
              d473 00ad  ld   $ad         ;68b3 'PrintHexDigit'
              d474 0063  ld   $63         ;68b5 POP
              d475 00ff  ld   $ff         ;68b6 RET
              d476 002b  ld   $2b         ;68b7 STW
              d477 0062  ld   $62         ;68b7 'PrintByte'
              d478 00cd  ld   $cd         ;68b9 DEF
              d479 00d9  ld   $d9
              d47a 0075  ld   $75         ;68bb PUSH
              d47b 002b  ld   $2b         ;68bc STW
              d47c 0068  ld   $68         ;68bc 'k'
              d47d 0035  ld   $35         ;68be BCC
              d47e 0072  ld   $72         ;68bf NE
              d47f 00c8  ld   $c8
              d480 00cd  ld   $cd         ;68c1 DEF
              d481 00c6  ld   $c6
              d482 0020  ld   $20         ;68c3 ' '
              d483 004f  ld   $4f         ;68c4 'O'
              d484 004b  ld   $4b         ;68c5 'K'
              d485 000a  ld   $0a         ;68c6 10
              d486 0000  ld   $00         ;68c7 0
              d487 0090  ld   $90         ;68c8 BRA
              d488 00d3  ld   $d3
              d489 00cd  ld   $cd         ;68ca DEF
              d48a 00d3  ld   $d3
              d48b 0020  ld   $20         ;68cc ' '
              d48c 0046  ld   $46         ;68cd 'F'
              d48d 0041  ld   $41         ;68ce 'A'
              d48e 0049  ld   $49         ;68cf 'I'
              d48f 004c  ld   $4c         ;68d0 'L'
              d490 0045  ld   $45         ;68d1 'E'
              d491 0044  ld   $44         ;68d2 'D'
              d492 000a  ld   $0a         ;68d3 10
              d493 0000  ld   $00         ;68d4 0
              d494 00cf  ld   $cf         ;68d5 CALL
              d495 0032  ld   $32         ;68d5 'PrintText'
              d496 0021  ld   $21         ;68d7 LDW
              d497 0068  ld   $68         ;68d7 'k'
              d498 0063  ld   $63         ;68d9 POP
              d499 00ff  ld   $ff         ;68da RET
              d49a 002b  ld   $2b         ;68db STW
              d49b 0040  ld   $40         ;68db 'PrintResult'
              d49c 00cd  ld   $cd         ;68dd DEF
              d49d 00ef  ld   $ef
              d49e 0075  ld   $75         ;68df PUSH
              d49f 0082  ld   $82         ;68e0 ANDI
              d4a0 000f  ld   $0f
              d4a1 00e6  ld   $e6         ;68e2 SUBI
              d4a2 000a  ld   $0a
              d4a3 0035  ld   $35         ;68e4 BCC
              d4a4 0053  ld   $53         ;68e5 GE
              d4a5 00e9  ld   $e9
              d4a6 00e3  ld   $e3         ;68e7 ADDI
              d4a7 003a  ld   $3a
              d4a8 0090  ld   $90         ;68e9 BRA
              d4a9 00eb  ld   $eb
              d4aa 00e3  ld   $e3         ;68eb ADDI
              d4ab 0041  ld   $41
              d4ac 00cf  ld   $cf         ;68ed CALL
              d4ad 00a5  ld   $a5         ;68ed 'PrintChar'
              d4ae 0063  ld   $63         ;68ef POP
              d4af 00ff  ld   $ff         ;68f0 RET
              d4b0 002b  ld   $2b         ;68f1 STW
              d4b1 00ad  ld   $ad         ;68f1 'PrintHexDigit'
              d4b2 0093  ld   $93         ;68f3 INC
              d4b3 001b  ld   $1b         ;68f3 '_vLR'+1
              d4b4 00ff  ld   $ff         ;68f5 RET
              d4b5 0069  ld   $69         ;| RAM segment address (high byte first)
              d4b6 00a0  ld   $a0         ;|
              d4b7 004e  ld   $4e         ;| Length (1..256)
              d4b8 00cd  ld   $cd         ;69a0 DEF
              d4b9 00bc  ld   $bc
              d4ba 0075  ld   $75         ;69a2 PUSH
              d4bb 002b  ld   $2b         ;69a3 STW
              d4bc 0052  ld   $52         ;69a3 'q'
              d4bd 0021  ld   $21         ;69a5 LDW
              d4be 0052  ld   $52         ;69a5 'q'
              d4bf 00ad  ld   $ad         ;69a7 PEEK
              d4c0 0035  ld   $35         ;69a8 BCC
              d4c1 003f  ld   $3f         ;69a9 EQ
              d4c2 00ba  ld   $ba
              d4c3 008c  ld   $8c         ;69ab XORI
              d4c4 000a  ld   $0a
              d4c5 0035  ld   $35         ;69ad BCC
              d4c6 003f  ld   $3f         ;69ae EQ
              d4c7 00b4  ld   $b4
              d4c8 008c  ld   $8c         ;69b0 XORI
              d4c9 000a  ld   $0a
              d4ca 00cf  ld   $cf         ;69b2 CALL
              d4cb 00a5  ld   $a5         ;69b2 'PrintChar'
              d4cc 0090  ld   $90         ;69b4 BRA
              d4cd 00b6  ld   $b6
              d4ce 00cf  ld   $cf         ;69b6 CALL
              d4cf 00a9  ld   $a9         ;69b6 'Newline'
              d4d0 0093  ld   $93         ;69b8 INC
              d4d1 0052  ld   $52         ;69b8 'q'
              d4d2 0090  ld   $90         ;69ba BRA
              d4d3 00a3  ld   $a3
              d4d4 0063  ld   $63         ;69bc POP
              d4d5 00ff  ld   $ff         ;69bd RET
              d4d6 002b  ld   $2b         ;69be STW
              d4d7 0032  ld   $32         ;69be 'PrintText'
              d4d8 00cd  ld   $cd         ;69c0 DEF
              d4d9 00e7  ld   $e7
              d4da 0075  ld   $75         ;69c2 PUSH
              d4db 00cd  ld   $cd         ;69c3 DEF
              d4dc 00cb  ld   $cb
              d4dd 0056  ld   $56         ;69c5 'V'
              d4de 006f  ld   $6f         ;69c6 'o'
              d4df 006c  ld   $6c         ;69c7 'l'
              d4e0 0075  ld   $75         ;69c8 'u'
              d4e1 006d  ld   $6d         ;69c9 'm'
              d4e2 0065  ld   $65         ;69ca 'e'
              d4e3 0020  ld   $20         ;69cb ' '
              d4e4 0000  ld   $00         ;69cc 0
              d4e5 00cf  ld   $cf         ;69cd CALL
              d4e6 0032  ld   $32         ;69cd 'PrintText'
              d4e7 0021  ld   $21         ;69cf LDW
              d4e8 0050  ld   $50         ;69cf 'p'
              d4e9 002b  ld   $2b         ;69d1 STW
              d4ea 0052  ld   $52         ;69d1 'q'
              d4eb 0059  ld   $59         ;69d3 LDI
              d4ec 000b  ld   $0b
              d4ed 002b  ld   $2b         ;69d5 STW
              d4ee 0068  ld   $68         ;69d5 'k'
              d4ef 0021  ld   $21         ;69d7 LDW
              d4f0 0052  ld   $52         ;69d7 'q'
              d4f1 00ad  ld   $ad         ;69d9 PEEK
              d4f2 0093  ld   $93         ;69da INC
              d4f3 0052  ld   $52         ;69da 'q'
              d4f4 00cf  ld   $cf         ;69dc CALL
              d4f5 00a7  ld   $a7         ;69dc 'SafePrintChar'
              d4f6 0021  ld   $21         ;69de LDW
              d4f7 0068  ld   $68         ;69de 'k'
              d4f8 00e6  ld   $e6         ;69e0 SUBI
              d4f9 0001  ld   $01
              d4fa 0035  ld   $35         ;69e2 BCC
              d4fb fe00  bra  ac          ;+-----------------------------------+
              d4fc fcfd  bra  $d4fd       ;|                                   |
              d4fd 1418  ld   $18,y       ;| Trampoline for page $d400 lookups |
              d4fe e006  jmp  y,$06       ;|                                   |
              d4ff c218  st   [$18]       ;+-----------------------------------+
              d500 004d  ld   $4d         ;69e3 GT
              d501 00d3  ld   $d3
              d502 00cf  ld   $cf         ;69e5 CALL
              d503 00a9  ld   $a9         ;69e5 'Newline'
              d504 0063  ld   $63         ;69e7 POP
              d505 00ff  ld   $ff         ;69e8 RET
              d506 002b  ld   $2b         ;69e9 STW
              d507 00af  ld   $af         ;69e9 'PrintVolumeLabel'
              d508 0093  ld   $93         ;69eb INC
              d509 001b  ld   $1b         ;69eb '_vLR'+1
              d50a 00ff  ld   $ff         ;69ed RET
              d50b 006a  ld   $6a         ;| RAM segment address (high byte first)
              d50c 00a0  ld   $a0         ;|
              d50d 004f  ld   $4f         ;| Length (1..256)
              d50e 00cd  ld   $cd         ;6aa0 DEF
              d50f 00b3  ld   $b3
              d510 0075  ld   $75         ;6aa2 PUSH
              d511 002b  ld   $2b         ;6aa3 STW
              d512 00b1  ld   $b1         ;6aa3 'Number'
              d513 0059  ld   $59         ;6aa5 LDI
              d514 0030  ld   $30
              d515 002b  ld   $2b         ;6aa7 STW
              d516 0068  ld   $68         ;6aa7 'k'
              d517 0059  ld   $59         ;6aa9 LDI
              d518 000a  ld   $0a
              d519 00cf  ld   $cf         ;6aab CALL
              d51a 00b3  ld   $b3         ;6aab 'PrintDigit'
              d51b 0021  ld   $21         ;6aad LDW
              d51c 00b1  ld   $b1         ;6aad 'Number'
              d51d 00e3  ld   $e3         ;6aaf ADDI
              d51e 0030  ld   $30
              d51f 00cf  ld   $cf         ;6ab1 CALL
              d520 00a5  ld   $a5         ;6ab1 'PrintChar'
              d521 0063  ld   $63         ;6ab3 POP
              d522 00ff  ld   $ff         ;6ab4 RET
              d523 002b  ld   $2b         ;6ab5 STW
              d524 00b5  ld   $b5         ;6ab5 'PrintTwoDecimals'
              d525 00cd  ld   $cd         ;6ab7 DEF
              d526 00e8  ld   $e8
              d527 0075  ld   $75         ;6ab9 PUSH
              d528 0011  ld   $11         ;6aba LDWI
              d529 0000  ld   $00
              d52a 0006  ld   $06
              d52b 002b  ld   $2b         ;6abd STW
              d52c 0022  ld   $22         ;6abd '_sysFn'
              d52d 0021  ld   $21         ;6abf LDW
              d52e 0050  ld   $50         ;6abf 'p'
              d52f 00e3  ld   $e3         ;6ac1 ADDI
              d530 0011  ld   $11
              d531 00ad  ld   $ad         ;6ac3 PEEK
              d532 00b4  ld   $b4         ;6ac4 SYS
              d533 00f7  ld   $f7
              d534 00e6  ld   $e6         ;6ac6 SUBI
              d535 0014  ld   $14
              d536 0035  ld   $35         ;6ac8 BCC
              d537 0053  ld   $53         ;6ac9 GE
              d538 00cb  ld   $cb
              d539 00e3  ld   $e3         ;6acb ADDI
              d53a 0064  ld   $64
              d53b 00cf  ld   $cf         ;6acd CALL
              d53c 00b5  ld   $b5         ;6acd 'PrintTwoDecimals'
              d53d 0011  ld   $11         ;6acf LDWI
              d53e 006d  ld   $6d
              d53f 0006  ld   $06
              d540 002b  ld   $2b         ;6ad2 STW
              d541 0022  ld   $22         ;6ad2 '_sysFn'
              d542 0021  ld   $21         ;6ad4 LDW
              d543 0050  ld   $50         ;6ad4 'p'
              d544 00e3  ld   $e3         ;6ad6 ADDI
              d545 0010  ld   $10
              d546 00f6  ld   $f6         ;6ad8 DEEK
              d547 00b4  ld   $b4         ;6ad9 SYS
              d548 00f6  ld   $f6
              d549 0082  ld   $82         ;6adb ANDI
              d54a 000f  ld   $0f
              d54b 00cf  ld   $cf         ;6add CALL
              d54c 00b5  ld   $b5         ;6add 'PrintTwoDecimals'
              d54d 0021  ld   $21         ;6adf LDW
              d54e 0050  ld   $50         ;6adf 'p'
              d54f 00e3  ld   $e3         ;6ae1 ADDI
              d550 0010  ld   $10
              d551 00ad  ld   $ad         ;6ae3 PEEK
              d552 0082  ld   $82         ;6ae4 ANDI
              d553 001f  ld   $1f
              d554 00cf  ld   $cf         ;6ae6 CALL
              d555 00b5  ld   $b5         ;6ae6 'PrintTwoDecimals'
              d556 0063  ld   $63         ;6ae8 POP
              d557 00ff  ld   $ff         ;6ae9 RET
              d558 002b  ld   $2b         ;6aea STW
              d559 00b7  ld   $b7         ;6aea 'PrintDate'
              d55a 0093  ld   $93         ;6aec INC
              d55b 001b  ld   $1b         ;6aec '_vLR'+1
              d55c 00ff  ld   $ff         ;6aee RET
              d55d 006b  ld   $6b         ;| RAM segment address (high byte first)
              d55e 00a0  ld   $a0         ;|
              d55f 0053  ld   $53         ;| Length (1..256)
              d560 00cd  ld   $cd         ;6ba0 DEF
              d561 00b7  ld   $b7
              d562 0075  ld   $75         ;6ba2 PUSH
              d563 00cf  ld   $cf         ;6ba3 CALL
              d564 00b7  ld   $b7         ;6ba3 'PrintDate'
              d565 0059  ld   $59         ;6ba5 LDI
              d566 0004  ld   $04
              d567 0099  ld   $99         ;6ba7 ADDW
              d568 00b9  ld   $b9         ;6ba7 'Pos'
              d569 002b  ld   $2b         ;6ba9 STW
              d56a 00b9  ld   $b9         ;6ba9 'Pos'
              d56b 00cf  ld   $cf         ;6bab CALL
              d56c 00bb  ld   $bb         ;6bab 'PrintSize'
              d56d 0059  ld   $59         ;6bad LDI
              d56e 0004  ld   $04
              d56f 0099  ld   $99         ;6baf ADDW
              d570 00b9  ld   $b9         ;6baf 'Pos'
              d571 002b  ld   $2b         ;6bb1 STW
              d572 00b9  ld   $b9         ;6bb1 'Pos'
              d573 00cf  ld   $cf         ;6bb3 CALL
              d574 00bd  ld   $bd         ;6bb3 'PrintName'
              d575 00cf  ld   $cf         ;6bb5 CALL
              d576 00a9  ld   $a9         ;6bb5 'Newline'
              d577 0063  ld   $63         ;6bb7 POP
              d578 00ff  ld   $ff         ;6bb8 RET
              d579 002b  ld   $2b         ;6bb9 STW
              d57a 00bf  ld   $bf         ;6bb9 'PrintDirEntry'
              d57b 00cd  ld   $cd         ;6bbb DEF
              d57c 00ec  ld   $ec
              d57d 0075  ld   $75         ;6bbd PUSH
              d57e 0021  ld   $21         ;6bbe LDW
              d57f 0050  ld   $50         ;6bbe 'p'
              d580 002b  ld   $2b         ;6bc0 STW
              d581 0052  ld   $52         ;6bc0 'q'
              d582 0059  ld   $59         ;6bc2 LDI
              d583 000b  ld   $0b
              d584 002b  ld   $2b         ;6bc4 STW
              d585 0068  ld   $68         ;6bc4 'k'
              d586 008c  ld   $8c         ;6bc6 XORI
              d587 0003  ld   $03
              d588 0035  ld   $35         ;6bc8 BCC
              d589 0072  ld   $72         ;6bc9 NE
              d58a 00d5  ld   $d5
              d58b 0021  ld   $21         ;6bcb LDW
              d58c 0052  ld   $52         ;6bcb 'q'
              d58d 00ad  ld   $ad         ;6bcd PEEK
              d58e 008c  ld   $8c         ;6bce XORI
              d58f 0020  ld   $20
              d590 0035  ld   $35         ;6bd0 BCC
              d591 003f  ld   $3f         ;6bd1 EQ
              d592 00d5  ld   $d5
              d593 0059  ld   $59         ;6bd3 LDI
              d594 002e  ld   $2e
              d595 00cf  ld   $cf         ;6bd5 CALL
              d596 00a5  ld   $a5         ;6bd5 'PrintChar'
              d597 0021  ld   $21         ;6bd7 LDW
              d598 0052  ld   $52         ;6bd7 'q'
              d599 00ad  ld   $ad         ;6bd9 PEEK
              d59a 0093  ld   $93         ;6bda INC
              d59b 0052  ld   $52         ;6bda 'q'
              d59c 008c  ld   $8c         ;6bdc XORI
              d59d 0020  ld   $20
              d59e 0035  ld   $35         ;6bde BCC
              d59f 003f  ld   $3f         ;6bdf EQ
              d5a0 00e3  ld   $e3
              d5a1 008c  ld   $8c         ;6be1 XORI
              d5a2 0020  ld   $20
              d5a3 00cf  ld   $cf         ;6be3 CALL
              d5a4 00a7  ld   $a7         ;6be3 'SafePrintChar'
              d5a5 0021  ld   $21         ;6be5 LDW
              d5a6 0068  ld   $68         ;6be5 'k'
              d5a7 00e6  ld   $e6         ;6be7 SUBI
              d5a8 0001  ld   $01
              d5a9 0035  ld   $35         ;6be9 BCC
              d5aa 004d  ld   $4d         ;6bea GT
              d5ab 00c2  ld   $c2
              d5ac 0063  ld   $63         ;6bec POP
              d5ad 00ff  ld   $ff         ;6bed RET
              d5ae 002b  ld   $2b         ;6bee STW
              d5af 00bd  ld   $bd         ;6bee 'PrintName'
              d5b0 0093  ld   $93         ;6bf0 INC
              d5b1 001b  ld   $1b         ;6bf0 '_vLR'+1
              d5b2 00ff  ld   $ff         ;6bf2 RET
              d5b3 006c  ld   $6c         ;| RAM segment address (high byte first)
              d5b4 00a0  ld   $a0         ;|
              d5b5 002c  ld   $2c         ;| Length (1..256)
              d5b6 00cd  ld   $cd         ;6ca0 DEF
              d5b7 00c5  ld   $c5
              d5b8 0075  ld   $75         ;6ca2 PUSH
              d5b9 002b  ld   $2b         ;6ca3 STW
              d5ba 0036  ld   $36         ;6ca3 'i'
              d5bb 0021  ld   $21         ;6ca5 LDW
              d5bc 00b1  ld   $b1         ;6ca5 'Number'
              d5bd 00b8  ld   $b8         ;6ca7 SUBW
              d5be 0036  ld   $36         ;6ca7 'i'
              d5bf 0035  ld   $35         ;6ca9 BCC
              d5c0 0050  ld   $50         ;6caa LT
              d5c1 00b0  ld   $b0
              d5c2 002b  ld   $2b         ;6cac STW
              d5c3 00b1  ld   $b1         ;6cac 'Number'
              d5c4 0093  ld   $93         ;6cae INC
              d5c5 0068  ld   $68         ;6cae 'k'
              d5c6 0090  ld   $90         ;6cb0 BRA
              d5c7 00a5  ld   $a5
              d5c8 0021  ld   $21         ;6cb2 LDW
              d5c9 0068  ld   $68         ;6cb2 'k'
              d5ca 0035  ld   $35         ;6cb4 BCC
              d5cb 0072  ld   $72         ;6cb5 NE
              d5cc 00bb  ld   $bb
              d5cd 0059  ld   $59         ;6cb7 LDI
              d5ce 0020  ld   $20
              d5cf 00cf  ld   $cf         ;6cb9 CALL
              d5d0 00a5  ld   $a5         ;6cb9 'PrintChar'
              d5d1 0090  ld   $90         ;6cbb BRA
              d5d2 00c3  ld   $c3
              d5d3 0088  ld   $88         ;6cbd ORI
              d5d4 0030  ld   $30
              d5d5 00cf  ld   $cf         ;6cbf CALL
              d5d6 00a5  ld   $a5         ;6cbf 'PrintChar'
              d5d7 0059  ld   $59         ;6cc1 LDI
              d5d8 0030  ld   $30
              d5d9 002b  ld   $2b         ;6cc3 STW
              d5da 0068  ld   $68         ;6cc3 'k'
              d5db 0063  ld   $63         ;6cc5 POP
              d5dc 00ff  ld   $ff         ;6cc6 RET
              d5dd 002b  ld   $2b         ;6cc7 STW
              d5de 00b3  ld   $b3         ;6cc7 'PrintDigit'
              d5df 0093  ld   $93         ;6cc9 INC
              d5e0 001b  ld   $1b         ;6cc9 '_vLR'+1
              d5e1 00ff  ld   $ff         ;6ccb RET
              d5e2 006d  ld   $6d         ;| RAM segment address (high byte first)
              d5e3 00a0  ld   $a0         ;|
              d5e4 004e  ld   $4e         ;| Length (1..256)
              d5e5 00cd  ld   $cd         ;6da0 DEF
              d5e6 00e7  ld   $e7
              d5e7 0011  ld   $11         ;6da2 LDWI
              d5e8 0020  ld   $20
              d5e9 003f  ld   $3f
              d5ea 002b  ld   $2b         ;6da5 STW
              d5eb 0024  ld   $24         ;6da5 '_sysArgs0'
              d5ec 0059  ld   $59         ;6da7 LDI
              d5ed 0000  ld   $00
              d5ee 005e  ld   $5e         ;6da9 ST
              d5ef 00b9  ld   $b9         ;6da9 'Pos'
              d5f0 0011  ld   $11         ;6dab LDWI
              d5f1 0020  ld   $20
              d5f2 0001  ld   $01
              d5f3 00ad  ld   $ad         ;6dae PEEK
              d5f4 005e  ld   $5e         ;6daf ST
              d5f5 00ba  ld   $ba         ;6daf 'Pos'+1
              d5f6 0021  ld   $21         ;6db1 LDW
              d5f7 00b9  ld   $b9         ;6db1 'Pos'
              d5f8 002b  ld   $2b         ;6db3 STW
              d5f9 0028  ld   $28         ;6db3 '_sysArgs4'
              d5fa 005e  ld   $5e         ;6db5 ST
              d5fb fe00  bra  ac          ;+-----------------------------------+
              d5fc fcfd  bra  $d5fd       ;|                                   |
              d5fd 1418  ld   $18,y       ;| Trampoline for page $d500 lookups |
              d5fe e006  jmp  y,$06       ;|                                   |
              d5ff c218  st   [$18]       ;+-----------------------------------+
              d600 0026  ld   $26
              d601 0011  ld   $11         ;6db7 LDWI
              d602 00e1  ld   $e1
              d603 0004  ld   $04
              d604 002b  ld   $2b         ;6dba STW
              d605 0022  ld   $22         ;6dba '_sysFn'
              d606 00b4  ld   $b4         ;6dbc SYS
              d607 00cc  ld   $cc
              d608 0093  ld   $93         ;6dbe INC
              d609 0028  ld   $28         ;6dbe '_sysArgs4'
              d60a 001a  ld   $1a         ;6dc0 LD
              d60b 0028  ld   $28
              d60c 008c  ld   $8c         ;6dc2 XORI
              d60d 00a0  ld   $a0
              d60e 0035  ld   $35         ;6dc4 BCC
              d60f 0072  ld   $72         ;6dc5 NE
              d610 00b5  ld   $b5
              d611 0059  ld   $59         ;6dc7 LDI
              d612 0001  ld   $01
              d613 005e  ld   $5e         ;6dc9 ST
              d614 0037  ld   $37         ;6dc9 'i'+1
              d615 0059  ld   $59         ;6dcb LDI
              d616 00d0  ld   $d0
              d617 00e3  ld   $e3         ;6dcd ADDI
              d618 001e  ld   $1e
              d619 005e  ld   $5e         ;6dcf ST
              d61a 0036  ld   $36         ;6dcf 'i'
              d61b 0021  ld   $21         ;6dd1 LDW
              d61c 0036  ld   $36         ;6dd1 'i'
              d61d 00ad  ld   $ad         ;6dd3 PEEK
              d61e 00e6  ld   $e6         ;6dd4 SUBI
              d61f 0078  ld   $78
              d620 0035  ld   $35         ;6dd6 BCC
              d621 0053  ld   $53         ;6dd7 GE
              d622 00db  ld   $db
              d623 00e3  ld   $e3         ;6dd9 ADDI
              d624 0080  ld   $80
              d625 0090  ld   $90         ;6ddb BRA
              d626 00dd  ld   $dd
              d627 00e3  ld   $e3         ;6ddd ADDI
              d628 0018  ld   $18
              d629 00f0  ld   $f0         ;6ddf POKE
              d62a 0036  ld   $36         ;6ddf 'i'
              d62b 001a  ld   $1a         ;6de1 LD
              d62c 0036  ld   $36         ;6de1 'i'
              d62d 00e6  ld   $e6         ;6de3 SUBI
              d62e 0020  ld   $20
              d62f 0035  ld   $35         ;6de5 BCC
              d630 004d  ld   $4d         ;6de6 GT
              d631 00cb  ld   $cb
              d632 00ff  ld   $ff         ;6de8 RET
              d633 002b  ld   $2b         ;6de9 STW
              d634 00a9  ld   $a9         ;6de9 'Newline'
              d635 0093  ld   $93         ;6deb INC
              d636 001b  ld   $1b         ;6deb '_vLR'+1
              d637 00ff  ld   $ff         ;6ded RET
              d638 006e  ld   $6e         ;| RAM segment address (high byte first)
              d639 00a0  ld   $a0         ;|
              d63a 0050  ld   $50         ;| Length (1..256)
              d63b 00cd  ld   $cd         ;6ea0 DEF
              d63c 00e9  ld   $e9
              d63d 00e6  ld   $e6         ;6ea2 SUBI
              d63e 0052  ld   $52
              d63f 0035  ld   $35         ;6ea4 BCC
              d640 0053  ld   $53         ;6ea5 GE
              d641 00ae  ld   $ae
              d642 00e3  ld   $e3         ;6ea7 ADDI
              d643 0032  ld   $32
              d644 002b  ld   $2b         ;6ea9 STW
              d645 0036  ld   $36         ;6ea9 'i'
              d646 0011  ld   $11         ;6eab LDWI
              d647 0000  ld   $00
              d648 0007  ld   $07
              d649 0090  ld   $90         ;6eae BRA
              d64a 00b3  ld   $b3
              d64b 002b  ld   $2b         ;6eb0 STW
              d64c 0036  ld   $36         ;6eb0 'i'
              d64d 0011  ld   $11         ;6eb2 LDWI
              d64e 0000  ld   $00
              d64f 0008  ld   $08
              d650 002b  ld   $2b         ;6eb5 STW
              d651 00c1  ld   $c1         ;6eb5 'j'
              d652 0021  ld   $21         ;6eb7 LDW
              d653 0036  ld   $36         ;6eb7 'i'
              d654 00e9  ld   $e9         ;6eb9 LSLW
              d655 00e9  ld   $e9         ;6eba LSLW
              d656 0099  ld   $99         ;6ebb ADDW
              d657 0036  ld   $36         ;6ebb 'i'
              d658 0099  ld   $99         ;6ebd ADDW
              d659 00c1  ld   $c1         ;6ebd 'j'
              d65a 002b  ld   $2b         ;6ebf STW
              d65b 00c1  ld   $c1         ;6ebf 'j'
              d65c 0011  ld   $11         ;6ec1 LDWI
              d65d 0020  ld   $20
              d65e 003f  ld   $3f
              d65f 002b  ld   $2b         ;6ec4 STW
              d660 0024  ld   $24         ;6ec4 '_sysArgs0'
              d661 0021  ld   $21         ;6ec6 LDW
              d662 00b9  ld   $b9         ;6ec6 'Pos'
              d663 002b  ld   $2b         ;6ec8 STW
              d664 0028  ld   $28         ;6ec8 '_sysArgs4'
              d665 00e3  ld   $e3         ;6eca ADDI
              d666 0006  ld   $06
              d667 002b  ld   $2b         ;6ecc STW
              d668 00b9  ld   $b9         ;6ecc 'Pos'
              d669 0011  ld   $11         ;6ece LDWI
              d66a 00e1  ld   $e1
              d66b 0004  ld   $04
              d66c 002b  ld   $2b         ;6ed1 STW
              d66d 0022  ld   $22         ;6ed1 '_sysFn'
              d66e 0059  ld   $59         ;6ed3 LDI
              d66f 0005  ld   $05
              d670 002b  ld   $2b         ;6ed5 STW
              d671 0036  ld   $36         ;6ed5 'i'
              d672 0021  ld   $21         ;6ed7 LDW
              d673 00c1  ld   $c1         ;6ed7 'j'
              d674 007f  ld   $7f         ;6ed9 LUP
              d675 0000  ld   $00
              d676 005e  ld   $5e         ;6edb ST
              d677 0026  ld   $26
              d678 00b4  ld   $b4         ;6edd SYS
              d679 00cc  ld   $cc
              d67a 0093  ld   $93         ;6edf INC
              d67b 00c1  ld   $c1         ;6edf 'j'
              d67c 0093  ld   $93         ;6ee1 INC
              d67d 0028  ld   $28         ;6ee1 '_sysArgs4'
              d67e 0021  ld   $21         ;6ee3 LDW
              d67f 0036  ld   $36         ;6ee3 'i'
              d680 00e6  ld   $e6         ;6ee5 SUBI
              d681 0001  ld   $01
              d682 0035  ld   $35         ;6ee7 BCC
              d683 004d  ld   $4d         ;6ee8 GT
              d684 00d3  ld   $d3
              d685 00ff  ld   $ff         ;6eea RET
              d686 002b  ld   $2b         ;6eeb STW
              d687 00a5  ld   $a5         ;6eeb 'PrintChar'
              d688 0093  ld   $93         ;6eed INC
              d689 001b  ld   $1b         ;6eed '_vLR'+1
              d68a 00ff  ld   $ff         ;6eef RET
              d68b 006f  ld   $6f         ;| RAM segment address (high byte first)
              d68c 00a0  ld   $a0         ;|
              d68d 0058  ld   $58         ;| Length (1..256)
              d68e 00cd  ld   $cd         ;6fa0 DEF
              d68f 00f1  ld   $f1
              d690 0075  ld   $75         ;6fa2 PUSH
              d691 0021  ld   $21         ;6fa3 LDW
              d692 0030  ld   $30         ;6fa3 'Address'
              d693 002b  ld   $2b         ;6fa5 STW
              d694 0050  ld   $50         ;6fa5 'p'
              d695 0011  ld   $11         ;6fa7 LDWI
              d696 0000  ld   $00
              d697 0002  ld   $02
              d698 0099  ld   $99         ;6faa ADDW
              d699 0030  ld   $30         ;6faa 'Address'
              d69a 00b8  ld   $b8         ;6fac SUBW
              d69b 0050  ld   $50         ;6fac 'p'
              d69c 0035  ld   $35         ;6fae BCC
              d69d 004d  ld   $4d         ;6faf GT
              d69e 00b7  ld   $b7
              d69f 00cf  ld   $cf         ;6fb1 CALL
              d6a0 0066  ld   $66         ;6fb1 'ReadSector'
              d6a1 0093  ld   $93         ;6fb3 INC
              d6a2 0056  ld   $56         ;6fb3 'SectorL'
              d6a3 0021  ld   $21         ;6fb5 LDW
              d6a4 0030  ld   $30         ;6fb5 'Address'
              d6a5 0090  ld   $90         ;6fb7 BRA
              d6a6 00a3  ld   $a3
              d6a7 0021  ld   $21         ;6fb9 LDW
              d6a8 0050  ld   $50         ;6fb9 'p'
              d6a9 00ad  ld   $ad         ;6fbb PEEK
              d6aa 0035  ld   $35         ;6fbc BCC
              d6ab 003f  ld   $3f         ;6fbd EQ
              d6ac 00ef  ld   $ef
              d6ad 008c  ld   $8c         ;6fbf XORI
              d6ae 00e5  ld   $e5
              d6af 0035  ld   $35         ;6fc1 BCC
              d6b0 003f  ld   $3f         ;6fc2 EQ
              d6b1 00e9  ld   $e9
              d6b2 0021  ld   $21         ;6fc4 LDW
              d6b3 0050  ld   $50         ;6fc4 'p'
              d6b4 00e3  ld   $e3         ;6fc6 ADDI
              d6b5 000b  ld   $0b
              d6b6 00ad  ld   $ad         ;6fc8 PEEK
              d6b7 002b  ld   $2b         ;6fc9 STW
              d6b8 0068  ld   $68         ;6fc9 'k'
              d6b9 008c  ld   $8c         ;6fcb XORI
              d6ba 000f  ld   $0f
              d6bb 0035  ld   $35         ;6fcd BCC
              d6bc 003f  ld   $3f         ;6fce EQ
              d6bd 00e9  ld   $e9
              d6be 0082  ld   $82         ;6fd0 ANDI
              d6bf 0002  ld   $02
              d6c0 0035  ld   $35         ;6fd2 BCC
              d6c1 003f  ld   $3f         ;6fd3 EQ
              d6c2 00e9  ld   $e9
              d6c3 0021  ld   $21         ;6fd5 LDW
              d6c4 0068  ld   $68         ;6fd5 'k'
              d6c5 0082  ld   $82         ;6fd7 ANDI
              d6c6 0008  ld   $08
              d6c7 0035  ld   $35         ;6fd9 BCC
              d6c8 003f  ld   $3f         ;6fda EQ
              d6c9 00de  ld   $de
              d6ca 00cf  ld   $cf         ;6fdc CALL
              d6cb 00af  ld   $af         ;6fdc 'PrintVolumeLabel'
              d6cc 0090  ld   $90         ;6fde BRA
              d6cd 00e9  ld   $e9
              d6ce 00cf  ld   $cf         ;6fe0 CALL
              d6cf 00bf  ld   $bf         ;6fe0 'PrintDirEntry'
              d6d0 00cf  ld   $cf         ;6fe2 CALL
              d6d1 00c3  ld   $c3         ;6fe2 'IsBootGt1'
              d6d2 0035  ld   $35         ;6fe4 BCC
              d6d3 0072  ld   $72         ;6fe5 NE
              d6d4 00e9  ld   $e9
              d6d5 00cf  ld   $cf         ;6fe7 CALL
              d6d6 00c5  ld   $c5         ;6fe7 'LoadGt1'
              d6d7 00cf  ld   $cf         ;6fe9 CALL
              d6d8 00c7  ld   $c7         ;6fe9 'Execute'
              d6d9 0021  ld   $21         ;6feb LDW
              d6da 0050  ld   $50         ;6feb 'p'
              d6db 00e3  ld   $e3         ;6fed ADDI
              d6dc 0020  ld   $20
              d6dd 0090  ld   $90         ;6fef BRA
              d6de 00a3  ld   $a3
              d6df 0063  ld   $63         ;6ff1 POP
              d6e0 00ff  ld   $ff         ;6ff2 RET
              d6e1 002b  ld   $2b         ;6ff3 STW
              d6e2 00c9  ld   $c9         ;6ff3 'PrintDirectory'
              d6e3 0093  ld   $93         ;6ff5 INC
              d6e4 001b  ld   $1b         ;6ff5 '_vLR'+1
              d6e5 00ff  ld   $ff         ;6ff7 RET
              d6e6 0070  ld   $70         ;| RAM segment address (high byte first)
              d6e7 00a0  ld   $a0         ;|
              d6e8 005e  ld   $5e         ;| Length (1..256)
              d6e9 00cd  ld   $cd         ;70a0 DEF
              d6ea 00f7  ld   $f7
              d6eb 0075  ld   $75         ;70a2 PUSH
              d6ec 0021  ld   $21         ;70a3 LDW
              d6ed 0050  ld   $50         ;70a3 'p'
              d6ee 00e3  ld   $e3         ;70a5 ADDI
              d6ef 000b  ld   $0b
              d6f0 00ad  ld   $ad         ;70a7 PEEK
              d6f1 0082  ld   $82         ;70a8 ANDI
              d6f2 0010  ld   $10
              d6f3 0035  ld   $35         ;70aa BCC
              d6f4 003f  ld   $3f         ;70ab EQ
              d6f5 00b7  ld   $b7
              d6f6 00cd  ld   $cd         ;70ad DEF
              d6f7 00b5  ld   $b5
              d6f8 0020  ld   $20         ;70af ' '
              d6f9 0020  ld   $20         ;70b0 ' '
              d6fa 003c  ld   $3c         ;70b1 '<'
              d6fb fe00  bra  ac          ;+-----------------------------------+
              d6fc fcfd  bra  $d6fd       ;|                                   |
              d6fd 1418  ld   $18,y       ;| Trampoline for page $d600 lookups |
              d6fe e006  jmp  y,$06       ;|                                   |
              d6ff c218  st   [$18]       ;+-----------------------------------+
              d700 0044  ld   $44         ;70b2 'D'
              d701 0049  ld   $49         ;70b3 'I'
              d702 0052  ld   $52         ;70b4 'R'
              d703 003e  ld   $3e         ;70b5 '>'
              d704 0000  ld   $00         ;70b6 0
              d705 0090  ld   $90         ;70b7 BRA
              d706 00f3  ld   $f3
              d707 0021  ld   $21         ;70b9 LDW
              d708 0050  ld   $50         ;70b9 'p'
              d709 00e3  ld   $e3         ;70bb ADDI
              d70a 001c  ld   $1c
              d70b 00f6  ld   $f6         ;70bd DEEK
              d70c 002b  ld   $2b         ;70be STW
              d70d 0072  ld   $72         ;70be 'ValueL'
              d70e 0021  ld   $21         ;70c0 LDW
              d70f 0050  ld   $50         ;70c0 'p'
              d710 00e3  ld   $e3         ;70c2 ADDI
              d711 001e  ld   $1e
              d712 00f6  ld   $f6         ;70c4 DEEK
              d713 002b  ld   $2b         ;70c5 STW
              d714 0074  ld   $74         ;70c5 'ValueH'
              d715 00cf  ld   $cf         ;70c7 CALL
              d716 00cb  ld   $cb         ;70c7 'ValueToDecimal'
              d717 0059  ld   $59         ;70c9 LDI
              d718 0000  ld   $00
              d719 002b  ld   $2b         ;70cb STW
              d71a 00c1  ld   $c1         ;70cb 'j'
              d71b 0059  ld   $59         ;70cd LDI
              d71c 0008  ld   $08
              d71d 002b  ld   $2b         ;70cf STW
              d71e 0036  ld   $36         ;70cf 'i'
              d71f 0021  ld   $21         ;70d1 LDW
              d720 0052  ld   $52         ;70d1 'q'
              d721 00ad  ld   $ad         ;70d3 PEEK
              d722 008c  ld   $8c         ;70d4 XORI
              d723 0030  ld   $30
              d724 0035  ld   $35         ;70d6 BCC
              d725 0072  ld   $72         ;70d7 NE
              d726 00ef  ld   $ef
              d727 0021  ld   $21         ;70d9 LDW
              d728 0036  ld   $36         ;70d9 'i'
              d729 00e6  ld   $e6         ;70db SUBI
              d72a 0006  ld   $06
              d72b 0035  ld   $35         ;70dd BCC
              d72c 0053  ld   $53         ;70de GE
              d72d 00e4  ld   $e4
              d72e 0059  ld   $59         ;70e0 LDI
              d72f 0020  ld   $20
              d730 00f0  ld   $f0         ;70e2 POKE
              d731 0052  ld   $52         ;70e2 'q'
              d732 0090  ld   $90         ;70e4 BRA
              d733 00e6  ld   $e6
              d734 0093  ld   $93         ;70e6 INC
              d735 00c1  ld   $c1         ;70e6 'j'
              d736 0093  ld   $93         ;70e8 INC
              d737 0052  ld   $52         ;70e8 'q'
              d738 0021  ld   $21         ;70ea LDW
              d739 0036  ld   $36         ;70ea 'i'
              d73a 00e6  ld   $e6         ;70ec SUBI
              d73b 0001  ld   $01
              d73c 0035  ld   $35         ;70ee BCC
              d73d 0053  ld   $53         ;70ef GE
              d73e 00cd  ld   $cd
              d73f 0021  ld   $21         ;70f1 LDW
              d740 0060  ld   $60         ;70f1 'Buffer'
              d741 0099  ld   $99         ;70f3 ADDW
              d742 00c1  ld   $c1         ;70f3 'j'
              d743 00cf  ld   $cf         ;70f5 CALL
              d744 0032  ld   $32         ;70f5 'PrintText'
              d745 0063  ld   $63         ;70f7 POP
              d746 00ff  ld   $ff         ;70f8 RET
              d747 002b  ld   $2b         ;70f9 STW
              d748 00bb  ld   $bb         ;70f9 'PrintSize'
              d749 0093  ld   $93         ;70fb INC
              d74a 001b  ld   $1b         ;70fb '_vLR'+1
              d74b 00ff  ld   $ff         ;70fd RET
              d74c 0071  ld   $71         ;| RAM segment address (high byte first)
              d74d 00a0  ld   $a0         ;|
              d74e 005f  ld   $5f         ;| Length (1..256)
              d74f 00cd  ld   $cd         ;71a0 DEF
              d750 00fa  ld   $fa
              d751 0075  ld   $75         ;71a2 PUSH
              d752 0059  ld   $59         ;71a3 LDI
              d753 0009  ld   $09
              d754 002b  ld   $2b         ;71a5 STW
              d755 0036  ld   $36         ;71a5 'i'
              d756 0021  ld   $21         ;71a7 LDW
              d757 0060  ld   $60         ;71a7 'Buffer'
              d758 0099  ld   $99         ;71a9 ADDW
              d759 0036  ld   $36         ;71a9 'i'
              d75a 002b  ld   $2b         ;71ab STW
              d75b 0052  ld   $52         ;71ab 'q'
              d75c 0059  ld   $59         ;71ad LDI
              d75d 0030  ld   $30
              d75e 00f0  ld   $f0         ;71af POKE
              d75f 0052  ld   $52         ;71af 'q'
              d760 0021  ld   $21         ;71b1 LDW
              d761 0036  ld   $36         ;71b1 'i'
              d762 00e6  ld   $e6         ;71b3 SUBI
              d763 0001  ld   $01
              d764 0035  ld   $35         ;71b5 BCC
              d765 0053  ld   $53         ;71b6 GE
              d766 00a3  ld   $a3
              d767 0059  ld   $59         ;71b8 LDI
              d768 001f  ld   $1f
              d769 002b  ld   $2b         ;71ba STW
              d76a 00c1  ld   $c1         ;71ba 'j'
              d76b 00cf  ld   $cf         ;71bc CALL
              d76c 00a3  ld   $a3         ;71bc 'ShiftLeft'
              d76d 0035  ld   $35         ;71be BCC
              d76e 0050  ld   $50         ;71bf LT
              d76f 00c3  ld   $c3
              d770 0059  ld   $59         ;71c1 LDI
              d771 006a  ld   $6a
              d772 0090  ld   $90         ;71c3 BRA
              d773 00c5  ld   $c5
              d774 0059  ld   $59         ;71c5 LDI
              d775 0069  ld   $69
              d776 002b  ld   $2b         ;71c7 STW
              d777 0068  ld   $68         ;71c7 'k'
              d778 0059  ld   $59         ;71c9 LDI
              d779 0009  ld   $09
              d77a 002b  ld   $2b         ;71cb STW
              d77b 0036  ld   $36         ;71cb 'i'
              d77c 0021  ld   $21         ;71cd LDW
              d77d 0060  ld   $60         ;71cd 'Buffer'
              d77e 0099  ld   $99         ;71cf ADDW
              d77f 0036  ld   $36         ;71cf 'i'
              d780 002b  ld   $2b         ;71d1 STW
              d781 0052  ld   $52         ;71d1 'q'
              d782 0021  ld   $21         ;71d3 LDW
              d783 0052  ld   $52         ;71d3 'q'
              d784 00ad  ld   $ad         ;71d5 PEEK
              d785 00e9  ld   $e9         ;71d6 LSLW
              d786 00b8  ld   $b8         ;71d7 SUBW
              d787 0068  ld   $68         ;71d7 'k'
              d788 0035  ld   $35         ;71d9 BCC
              d789 0053  ld   $53         ;71da GE
              d78a 00e2  ld   $e2
              d78b 00e3  ld   $e3         ;71dc ADDI
              d78c 003a  ld   $3a
              d78d 00f0  ld   $f0         ;71de POKE
              d78e 0052  ld   $52         ;71de 'q'
              d78f 0059  ld   $59         ;71e0 LDI
              d790 006a  ld   $6a
              d791 0090  ld   $90         ;71e2 BRA
              d792 00e8  ld   $e8
              d793 00e3  ld   $e3         ;71e4 ADDI
              d794 0030  ld   $30
              d795 00f0  ld   $f0         ;71e6 POKE
              d796 0052  ld   $52         ;71e6 'q'
              d797 0059  ld   $59         ;71e8 LDI
              d798 0069  ld   $69
              d799 002b  ld   $2b         ;71ea STW
              d79a 0068  ld   $68         ;71ea 'k'
              d79b 0021  ld   $21         ;71ec LDW
              d79c 0036  ld   $36         ;71ec 'i'
              d79d 00e6  ld   $e6         ;71ee SUBI
              d79e 0001  ld   $01
              d79f 0035  ld   $35         ;71f0 BCC
              d7a0 0053  ld   $53         ;71f1 GE
              d7a1 00c9  ld   $c9
              d7a2 0021  ld   $21         ;71f3 LDW
              d7a3 00c1  ld   $c1         ;71f3 'j'
              d7a4 00e6  ld   $e6         ;71f5 SUBI
              d7a5 0001  ld   $01
              d7a6 0035  ld   $35         ;71f7 BCC
              d7a7 0053  ld   $53         ;71f8 GE
              d7a8 00b8  ld   $b8
              d7a9 0063  ld   $63         ;71fa POP
              d7aa 00ff  ld   $ff         ;71fb RET
              d7ab 0093  ld   $93         ;71fc INC
              d7ac 001b  ld   $1b         ;71fc '_vLR'+1
              d7ad 00ff  ld   $ff         ;71fe RET
              d7ae 0072  ld   $72         ;| RAM segment address (high byte first)
              d7af 00a0  ld   $a0         ;|
              d7b0 0014  ld   $14         ;| Length (1..256)
              d7b1 002b  ld   $2b         ;72a0 STW
              d7b2 00cb  ld   $cb         ;72a0 'ValueToDecimal'
              d7b3 00cd  ld   $cd         ;72a2 DEF
              d7b4 00ad  ld   $ad
              d7b5 002d  ld   $2d         ;72a4 '-'
              d7b6 002d  ld   $2d         ;72a5 '-'
              d7b7 002d  ld   $2d         ;72a6 '-'
              d7b8 002d  ld   $2d         ;72a7 '-'
              d7b9 002d  ld   $2d         ;72a8 '-'
              d7ba 002d  ld   $2d         ;72a9 '-'
              d7bb 002d  ld   $2d         ;72aa '-'
              d7bc 002d  ld   $2d         ;72ab '-'
              d7bd 002d  ld   $2d         ;72ac '-'
              d7be 002d  ld   $2d         ;72ad '-'
              d7bf 0000  ld   $00         ;72ae 0
              d7c0 002b  ld   $2b         ;72af STW
              d7c1 0060  ld   $60         ;72af 'Buffer'
              d7c2 0093  ld   $93         ;72b1 INC
              d7c3 001b  ld   $1b         ;72b1 '_vLR'+1
              d7c4 00ff  ld   $ff         ;72b3 RET
              d7c5 0073  ld   $73         ;| RAM segment address (high byte first)
              d7c6 00a0  ld   $a0         ;|
              d7c7 005a  ld   $5a         ;| Length (1..256)
              d7c8 00cd  ld   $cd         ;73a0 DEF
              d7c9 00f3  ld   $f3
              d7ca 0075  ld   $75         ;73a2 PUSH
              d7cb 00cd  ld   $cd         ;73a3 DEF
              d7cc 00ac  ld   $ac
              d7cd 004c  ld   $4c         ;73a5 'L'
              d7ce 006f  ld   $6f         ;73a6 'o'
              d7cf 0061  ld   $61         ;73a7 'a'
              d7d0 0064  ld   $64         ;73a8 'd'
              d7d1 0069  ld   $69         ;73a9 'i'
              d7d2 006e  ld   $6e         ;73aa 'n'
              d7d3 0067  ld   $67         ;73ab 'g'
              d7d4 0020  ld   $20         ;73ac ' '
              d7d5 0000  ld   $00         ;73ad 0
              d7d6 00cf  ld   $cf         ;73ae CALL
              d7d7 0032  ld   $32         ;73ae 'PrintText'
              d7d8 00cf  ld   $cf         ;73b0 CALL
              d7d9 00bd  ld   $bd         ;73b0 'PrintName'
              d7da 00cf  ld   $cf         ;73b2 CALL
              d7db 00a1  ld   $a1         ;73b2 'OpenFile'
              d7dc 00cf  ld   $cf         ;73b4 CALL
              d7dd 0099  ld   $99         ;73b4 'LoadByte'
              d7de 005e  ld   $5e         ;73b6 ST
              d7df 0031  ld   $31         ;73b6 'Address'+1
              d7e0 00cf  ld   $cf         ;73b8 CALL
              d7e1 0099  ld   $99         ;73b8 'LoadByte'
              d7e2 005e  ld   $5e         ;73ba ST
              d7e3 0030  ld   $30         ;73ba 'Address'
              d7e4 00cf  ld   $cf         ;73bc CALL
              d7e5 0099  ld   $99         ;73bc 'LoadByte'
              d7e6 005e  ld   $5e         ;73be ST
              d7e7 0029  ld   $29
              d7e8 00cf  ld   $cf         ;73c0 CALL
              d7e9 0099  ld   $99         ;73c0 'LoadByte'
              d7ea 00f0  ld   $f0         ;73c2 POKE
              d7eb 0030  ld   $30         ;73c2 'Address'
              d7ec 0093  ld   $93         ;73c4 INC
              d7ed 0030  ld   $30         ;73c4 'Address'
              d7ee 001a  ld   $1a         ;73c6 LD
              d7ef 0029  ld   $29
              d7f0 00e6  ld   $e6         ;73c8 SUBI
              d7f1 0001  ld   $01
              d7f2 0035  ld   $35         ;73ca BCC
              d7f3 0072  ld   $72         ;73cb NE
              d7f4 00bc  ld   $bc
              d7f5 00cf  ld   $cf         ;73cd CALL
              d7f6 0099  ld   $99         ;73cd 'LoadByte'
              d7f7 0035  ld   $35         ;73cf BCC
              d7f8 0072  ld   $72         ;73d0 NE
              d7f9 00b4  ld   $b4
              d7fa 00cf  ld   $cf         ;73d2 CALL
              d7fb fe00  bra  ac          ;+-----------------------------------+
              d7fc fcfd  bra  $d7fd       ;|                                   |
              d7fd 1418  ld   $18,y       ;| Trampoline for page $d700 lookups |
              d7fe e006  jmp  y,$06       ;|                                   |
              d7ff c218  st   [$18]       ;+-----------------------------------+
              d800 0099  ld   $99         ;73d2 'LoadByte'
              d801 005e  ld   $5e         ;73d4 ST
              d802 0031  ld   $31         ;73d4 'Address'+1
              d803 00cf  ld   $cf         ;73d6 CALL
              d804 0099  ld   $99         ;73d6 'LoadByte'
              d805 005e  ld   $5e         ;73d8 ST
              d806 0030  ld   $30         ;73d8 'Address'
              d807 00cf  ld   $cf         ;73da CALL
              d808 0099  ld   $99         ;73da 'LoadByte'
              d809 0035  ld   $35         ;73dc BCC
              d80a 0050  ld   $50         ;73dd LT
              d80b 00e1  ld   $e1
              d80c 0059  ld   $59         ;73df LDI
              d80d 0000  ld   $00
              d80e 002b  ld   $2b         ;73e1 STW
              d80f 0030  ld   $30         ;73e1 'Address'
              d810 0011  ld   $11         ;73e3 LDWI
              d811 0000  ld   $00
              d812 0002  ld   $02
              d813 002b  ld   $2b         ;73e6 STW
              d814 0036  ld   $36         ;73e6 'i'
              d815 00cf  ld   $cf         ;73e8 CALL
              d816 0038  ld   $38         ;73e8 'SendOnesToCard'
              d817 0021  ld   $21         ;73ea LDW
              d818 0036  ld   $36         ;73ea 'i'
              d819 00e6  ld   $e6         ;73ec SUBI
              d81a 0001  ld   $01
              d81b 0035  ld   $35         ;73ee BCC
              d81c 004d  ld   $4d         ;73ef GT
              d81d 00e4  ld   $e4
              d81e 00cf  ld   $cf         ;73f1 CALL
              d81f 005a  ld   $5a         ;73f1 'DisableCard'
              d820 0063  ld   $63         ;73f3 POP
              d821 00ff  ld   $ff         ;73f4 RET
              d822 002b  ld   $2b         ;73f5 STW
              d823 00c5  ld   $c5         ;73f5 'LoadGt1'
              d824 0093  ld   $93         ;73f7 INC
              d825 001b  ld   $1b         ;73f7 '_vLR'+1
              d826 00ff  ld   $ff         ;73f9 RET
              d827 0074  ld   $74         ;| RAM segment address (high byte first)
              d828 00a0  ld   $a0         ;|
              d829 0050  ld   $50         ;| Length (1..256)
              d82a 00cd  ld   $cd         ;74a0 DEF
              d82b 00c9  ld   $c9
              d82c 00cd  ld   $cd         ;74a2 DEF
              d82d 00ae  ld   $ae
              d82e 0053  ld   $53         ;74a4 'S'
              d82f 0059  ld   $59         ;74a5 'Y'
              d830 0053  ld   $53         ;74a6 'S'
              d831 0054  ld   $54         ;74a7 'T'
              d832 0045  ld   $45         ;74a8 'E'
              d833 004d  ld   $4d         ;74a9 'M'
              d834 0020  ld   $20         ;74aa ' '
              d835 0020  ld   $20         ;74ab ' '
              d836 0047  ld   $47         ;74ac 'G'
              d837 0054  ld   $54         ;74ad 'T'
              d838 0031  ld   $31         ;74ae '1'
              d839 0000  ld   $00         ;74af 0
              d83a 002b  ld   $2b         ;74b0 STW
              d83b 0052  ld   $52         ;74b0 'q'
              d83c 0021  ld   $21         ;74b2 LDW
              d83d 0050  ld   $50         ;74b2 'p'
              d83e 002b  ld   $2b         ;74b4 STW
              d83f 0036  ld   $36         ;74b4 'i'
              d840 0021  ld   $21         ;74b6 LDW
              d841 0052  ld   $52         ;74b6 'q'
              d842 00ad  ld   $ad         ;74b8 PEEK
              d843 0093  ld   $93         ;74b9 INC
              d844 0052  ld   $52         ;74b9 'q'
              d845 0035  ld   $35         ;74bb BCC
              d846 003f  ld   $3f         ;74bc EQ
              d847 00c8  ld   $c8
              d848 002b  ld   $2b         ;74be STW
              d849 00c1  ld   $c1         ;74be 'j'
              d84a 0021  ld   $21         ;74c0 LDW
              d84b 0036  ld   $36         ;74c0 'i'
              d84c 00ad  ld   $ad         ;74c2 PEEK
              d84d 0093  ld   $93         ;74c3 INC
              d84e 0036  ld   $36         ;74c3 'i'
              d84f 00fc  ld   $fc         ;74c5 XORW
              d850 00c1  ld   $c1         ;74c5 'j'
              d851 0035  ld   $35         ;74c7 BCC
              d852 003f  ld   $3f         ;74c8 EQ
              d853 00b4  ld   $b4
              d854 00ff  ld   $ff         ;74ca RET
              d855 002b  ld   $2b         ;74cb STW
              d856 00c3  ld   $c3         ;74cb 'IsBootGt1'
              d857 00cd  ld   $cd         ;74cd DEF
              d858 00e9  ld   $e9
              d859 0059  ld   $59         ;74cf LDI
              d85a 0078  ld   $78
              d85b 002b  ld   $2b         ;74d1 STW
              d85c 0036  ld   $36         ;74d1 'i'
              d85d 0099  ld   $99         ;74d3 ADDW
              d85e 0036  ld   $36         ;74d3 'i'
              d85f 00e3  ld   $e3         ;74d5 ADDI
              d860 00fe  ld   $fe
              d861 002b  ld   $2b         ;74d7 STW
              d862 0050  ld   $50         ;74d7 'p'
              d863 0021  ld   $21         ;74d9 LDW
              d864 0036  ld   $36         ;74d9 'i'
              d865 00e3  ld   $e3         ;74db ADDI
              d866 0007  ld   $07
              d867 00f0  ld   $f0         ;74dd POKE
              d868 0050  ld   $50         ;74dd 'p'
              d869 00e6  ld   $e6         ;74df SUBI
              d86a 0008  ld   $08
              d86b 0035  ld   $35         ;74e1 BCC
              d86c 004d  ld   $4d         ;74e2 GT
              d86d 00cf  ld   $cf
              d86e 0021  ld   $21         ;74e4 LDW
              d86f 0030  ld   $30         ;74e4 'Address'
              d870 0035  ld   $35         ;74e6 BCC
              d871 003f  ld   $3f         ;74e7 EQ
              d872 00e4  ld   $e4
              d873 00cf  ld   $cf         ;74e9 CALL
              d874 0018  ld   $18         ;74e9 vAC
              d875 002b  ld   $2b         ;74eb STW
              d876 00c7  ld   $c7         ;74eb 'Execute'
              d877 0093  ld   $93         ;74ed INC
              d878 001b  ld   $1b         ;74ed '_vLR'+1
              d879 00ff  ld   $ff         ;74ef RET
              d87a 0075  ld   $75         ;| RAM segment address (high byte first)
              d87b 00a0  ld   $a0         ;|
              d87c 0026  ld   $26         ;| Length (1..256)
              d87d 00cd  ld   $cd         ;75a0 DEF
              d87e 00bf  ld   $bf
              d87f 0075  ld   $75         ;75a2 PUSH
              d880 0093  ld   $93         ;75a3 INC
              d881 0056  ld   $56         ;75a3 'SectorL'
              d882 0011  ld   $11         ;75a5 LDWI
              d883 00ff  ld   $ff
              d884 001f  ld   $1f
              d885 00f8  ld   $f8         ;75a8 ANDW
              d886 0091  ld   $91         ;75a8 'FileSizeL'
              d887 0035  ld   $35         ;75aa BCC
              d888 0072  ld   $72         ;75ab NE
              d889 00bd  ld   $bd
              d88a 0021  ld   $21         ;75ad LDW
              d88b 00cd  ld   $cd         ;75ad 'List'
              d88c 00e3  ld   $e3         ;75af ADDI
              d88d 0004  ld   $04
              d88e 002b  ld   $2b         ;75b1 STW
              d88f 00cd  ld   $cd         ;75b1 'List'
              d890 00f6  ld   $f6         ;75b3 DEEK
              d891 002b  ld   $2b         ;75b4 STW
              d892 0072  ld   $72         ;75b4 'ValueL'
              d893 0021  ld   $21         ;75b6 LDW
              d894 00cd  ld   $cd         ;75b6 'List'
              d895 00e3  ld   $e3         ;75b8 ADDI
              d896 0002  ld   $02
              d897 00f6  ld   $f6         ;75ba DEEK
              d898 002b  ld   $2b         ;75bb STW
              d899 0074  ld   $74         ;75bb 'ValueH'
              d89a 00cf  ld   $cf         ;75bd CALL
              d89b 009b  ld   $9b         ;75bd 'ClusterToSector'
              d89c 0063  ld   $63         ;75bf POP
              d89d 00ff  ld   $ff         ;75c0 RET
              d89e 002b  ld   $2b         ;75c1 STW
              d89f 0097  ld   $97         ;75c1 'NextSector'
              d8a0 0093  ld   $93         ;75c3 INC
              d8a1 001b  ld   $1b         ;75c3 '_vLR'+1
              d8a2 00ff  ld   $ff         ;75c5 RET
              d8a3 0076  ld   $76         ;| RAM segment address (high byte first)
              d8a4 00a0  ld   $a0         ;|
              d8a5 004b  ld   $4b         ;| Length (1..256)
              d8a6 00cd  ld   $cd         ;76a0 DEF
              d8a7 00e4  ld   $e4
              d8a8 0075  ld   $75         ;76a2 PUSH
              d8a9 0011  ld   $11         ;76a3 LDWI
              d8aa 00a0  ld   $a0
              d8ab 007f  ld   $7f
              d8ac 002b  ld   $2b         ;76a6 STW
              d8ad 00cd  ld   $cd         ;76a6 'List'
              d8ae 00cf  ld   $cf         ;76a8 CALL
              d8af 00a9  ld   $a9         ;76a8 'Newline'
              d8b0 00cf  ld   $cf         ;76aa CALL
              d8b1 00ab  ld   $ab         ;76aa 'PrintValue'
              d8b2 0021  ld   $21         ;76ac LDW
              d8b3 0072  ld   $72         ;76ac 'ValueL'
              d8b4 00f3  ld   $f3         ;76ae DOKE
              d8b5 00cd  ld   $cd         ;76ae 'List'
              d8b6 0093  ld   $93         ;76b0 INC
              d8b7 00cd  ld   $cd         ;76b0 'List'
              d8b8 0093  ld   $93         ;76b2 INC
              d8b9 00cd  ld   $cd         ;76b2 'List'
              d8ba 0021  ld   $21         ;76b4 LDW
              d8bb 0074  ld   $74         ;76b4 'ValueH'
              d8bc 00f3  ld   $f3         ;76b6 DOKE
              d8bd 00cd  ld   $cd         ;76b6 'List'
              d8be 0093  ld   $93         ;76b8 INC
              d8bf 00cd  ld   $cd         ;76b8 'List'
              d8c0 0093  ld   $93         ;76ba INC
              d8c1 00cd  ld   $cd         ;76ba 'List'
              d8c2 0011  ld   $11         ;76bc LDWI
              d8c3 0000  ld   $00
              d8c4 00f0  ld   $f0
              d8c5 00fa  ld   $fa         ;76bf ORW
              d8c6 0074  ld   $74         ;76bf 'ValueH'
              d8c7 00e3  ld   $e3         ;76c1 ADDI
              d8c8 0001  ld   $01
              d8c9 0035  ld   $35         ;76c3 BCC
              d8ca 0072  ld   $72         ;76c4 NE
              d8cb 00ca  ld   $ca
              d8cc 0059  ld   $59         ;76c6 LDI
              d8cd 0007  ld   $07
              d8ce 00fa  ld   $fa         ;76c8 ORW
              d8cf 0072  ld   $72         ;76c8 'ValueL'
              d8d0 00e3  ld   $e3         ;76ca ADDI
              d8d1 0001  ld   $01
              d8d2 0035  ld   $35         ;76cc BCC
              d8d3 003f  ld   $3f         ;76cd EQ
              d8d4 00d3  ld   $d3
              d8d5 00cf  ld   $cf         ;76cf CALL
              d8d6 00cf  ld   $cf         ;76cf 'NextCluster'
              d8d7 00cf  ld   $cf         ;76d1 CALL
              d8d8 00ab  ld   $ab         ;76d1 'PrintValue'
              d8d9 0090  ld   $90         ;76d3 BRA
              d8da 00aa  ld   $aa
              d8db 0011  ld   $11         ;76d5 LDWI
              d8dc 00a0  ld   $a0
              d8dd 007f  ld   $7f
              d8de 002b  ld   $2b         ;76d8 STW
              d8df 00cd  ld   $cd         ;76d8 'List'
              d8e0 00f6  ld   $f6         ;76da DEEK
              d8e1 002b  ld   $2b         ;76db STW
              d8e2 0072  ld   $72         ;76db 'ValueL'
              d8e3 0021  ld   $21         ;76dd LDW
              d8e4 00cd  ld   $cd         ;76dd 'List'
              d8e5 00e3  ld   $e3         ;76df ADDI
              d8e6 0002  ld   $02
              d8e7 00f6  ld   $f6         ;76e1 DEEK
              d8e8 002b  ld   $2b         ;76e2 STW
              d8e9 0074  ld   $74         ;76e2 'ValueH'
              d8ea 0063  ld   $63         ;76e4 POP
              d8eb 00ff  ld   $ff         ;76e5 RET
              d8ec 002b  ld   $2b         ;76e6 STW
              d8ed 009f  ld   $9f         ;76e6 'ReadClusterChain'
              d8ee 0093  ld   $93         ;76e8 INC
              d8ef 001b  ld   $1b         ;76e8 '_vLR'+1
              d8f0 00ff  ld   $ff         ;76ea RET
              d8f1 0077  ld   $77         ;| RAM segment address (high byte first)
              d8f2 00a0  ld   $a0         ;|
              d8f3 005b  ld   $5b         ;| Length (1..256)
              d8f4 00cd  ld   $cd         ;77a0 DEF
              d8f5 00f4  ld   $f4
              d8f6 0075  ld   $75         ;77a2 PUSH
              d8f7 001a  ld   $1a         ;77a3 LD
              d8f8 0073  ld   $73         ;77a3 'ValueL'+1
              d8f9 005e  ld   $5e         ;77a5 ST
              d8fa 0076  ld   $76         ;77a5 'OffsetL'
              d8fb fe00  bra  ac          ;+-----------------------------------+
              d8fc fcfd  bra  $d8fd       ;|                                   |
              d8fd 1418  ld   $18,y       ;| Trampoline for page $d800 lookups |
              d8fe e006  jmp  y,$06       ;|                                   |
              d8ff c218  st   [$18]       ;+-----------------------------------+
              d900 001a  ld   $1a         ;77a7 LD
              d901 0074  ld   $74         ;77a7 'ValueH'
              d902 005e  ld   $5e         ;77a9 ST
              d903 0077  ld   $77         ;77a9 'OffsetL'+1
              d904 001a  ld   $1a         ;77ab LD
              d905 0075  ld   $75         ;77ab 'ValueH'+1
              d906 002b  ld   $2b         ;77ad STW
              d907 0078  ld   $78         ;77ad 'OffsetH'
              d908 001a  ld   $1a         ;77af LD
              d909 0072  ld   $72         ;77af 'ValueL'
              d90a 002b  ld   $2b         ;77b1 STW
              d90b 00d1  ld   $d1         ;77b1 'm'
              d90c 0082  ld   $82         ;77b3 ANDI
              d90d 0080  ld   $80
              d90e 00ad  ld   $ad         ;77b5 PEEK
              d90f 002b  ld   $2b         ;77b6 STW
              d910 0072  ld   $72         ;77b6 'ValueL'
              d911 0059  ld   $59         ;77b8 LDI
              d912 0000  ld   $00
              d913 002b  ld   $2b         ;77ba STW
              d914 0074  ld   $74         ;77ba 'ValueH'
              d915 00cf  ld   $cf         ;77bc CALL
              d916 007a  ld   $7a         ;77bc 'AddOffset'
              d917 00cf  ld   $cf         ;77be CALL
              d918 007a  ld   $7a         ;77be 'AddOffset'
              d919 0021  ld   $21         ;77c0 LDW
              d91a 007c  ld   $7c         ;77c0 'FatBaseL'
              d91b 002b  ld   $2b         ;77c2 STW
              d91c 0076  ld   $76         ;77c2 'OffsetL'
              d91d 0021  ld   $21         ;77c4 LDW
              d91e 007e  ld   $7e         ;77c4 'FatBaseH'
              d91f 002b  ld   $2b         ;77c6 STW
              d920 0078  ld   $78         ;77c6 'OffsetH'
              d921 00cf  ld   $cf         ;77c8 CALL
              d922 007a  ld   $7a         ;77c8 'AddOffset'
              d923 00fc  ld   $fc         ;77ca XORW
              d924 0056  ld   $56         ;77ca 'SectorL'
              d925 0035  ld   $35         ;77cc BCC
              d926 0072  ld   $72         ;77cd NE
              d927 00d1  ld   $d1
              d928 0021  ld   $21         ;77cf LDW
              d929 0074  ld   $74         ;77cf 'ValueH'
              d92a 00fc  ld   $fc         ;77d1 XORW
              d92b 0054  ld   $54         ;77d1 'SectorH'
              d92c 0035  ld   $35         ;77d3 BCC
              d92d 003f  ld   $3f         ;77d4 EQ
              d92e 00de  ld   $de
              d92f 0021  ld   $21         ;77d6 LDW
              d930 0072  ld   $72         ;77d6 'ValueL'
              d931 002b  ld   $2b         ;77d8 STW
              d932 0056  ld   $56         ;77d8 'SectorL'
              d933 0021  ld   $21         ;77da LDW
              d934 0074  ld   $74         ;77da 'ValueH'
              d935 002b  ld   $2b         ;77dc STW
              d936 0054  ld   $54         ;77dc 'SectorH'
              d937 00cf  ld   $cf         ;77de CALL
              d938 0066  ld   $66         ;77de 'ReadSector'
              d939 0021  ld   $21         ;77e0 LDW
              d93a 00d1  ld   $d1         ;77e0 'm'
              d93b 0082  ld   $82         ;77e2 ANDI
              d93c 007f  ld   $7f
              d93d 00e9  ld   $e9         ;77e4 LSLW
              d93e 00e9  ld   $e9         ;77e5 LSLW
              d93f 0099  ld   $99         ;77e6 ADDW
              d940 0030  ld   $30         ;77e6 'Address'
              d941 002b  ld   $2b         ;77e8 STW
              d942 00d1  ld   $d1         ;77e8 'm'
              d943 00f6  ld   $f6         ;77ea DEEK
              d944 002b  ld   $2b         ;77eb STW
              d945 0072  ld   $72         ;77eb 'ValueL'
              d946 0021  ld   $21         ;77ed LDW
              d947 00d1  ld   $d1         ;77ed 'm'
              d948 00e3  ld   $e3         ;77ef ADDI
              d949 0002  ld   $02
              d94a 00f6  ld   $f6         ;77f1 DEEK
              d94b 002b  ld   $2b         ;77f2 STW
              d94c 0074  ld   $74         ;77f2 'ValueH'
              d94d 0063  ld   $63         ;77f4 POP
              d94e 00ff  ld   $ff         ;77f5 RET
              d94f 002b  ld   $2b         ;77f6 STW
              d950 00cf  ld   $cf         ;77f6 'NextCluster'
              d951 0093  ld   $93         ;77f8 INC
              d952 001b  ld   $1b         ;77f8 '_vLR'+1
              d953 00ff  ld   $ff         ;77fa RET
              d954 0078  ld   $78         ;| RAM segment address (high byte first)
              d955 00a0  ld   $a0         ;|
              d956 0044  ld   $44         ;| Length (1..256)
              d957 00cd  ld   $cd         ;78a0 DEF
              d958 00b2  ld   $b2
              d959 000a  ld   $0a         ;78a2 10
              d95a 002a  ld   $2a         ;78a3 '*'
              d95b 002a  ld   $2a         ;78a4 '*'
              d95c 002a  ld   $2a         ;78a5 '*'
              d95d 0020  ld   $20         ;78a6 ' '
              d95e 004d  ld   $4d         ;78a7 'M'
              d95f 0065  ld   $65         ;78a8 'e'
              d960 006d  ld   $6d         ;78a9 'm'
              d961 006f  ld   $6f         ;78aa 'o'
              d962 0072  ld   $72         ;78ab 'r'
              d963 0079  ld   $79         ;78ac 'y'
              d964 0020  ld   $20         ;78ad ' '
              d965 0063  ld   $63         ;78ae 'c'
              d966 0061  ld   $61         ;78af 'a'
              d967 0072  ld   $72         ;78b0 'r'
              d968 0064  ld   $64         ;78b1 'd'
              d969 000a  ld   $0a         ;78b2 10
              d96a 0000  ld   $00         ;78b3 0
              d96b 00cf  ld   $cf         ;78b4 CALL
              d96c 0032  ld   $32         ;78b4 'PrintText'
              d96d 0059  ld   $59         ;78b6 LDI
              d96e 0000  ld   $00
              d96f 005e  ld   $5e         ;78b8 ST
              d970 000e  ld   $0e
              d971 00cf  ld   $cf         ;78ba CALL
              d972 0064  ld   $64         ;78ba 'InitCard'
              d973 00cd  ld   $cd         ;78bc DEF
              d974 00c6  ld   $c6
              d975 0043  ld   $43         ;78be 'C'
              d976 0061  ld   $61         ;78bf 'a'
              d977 0072  ld   $72         ;78c0 'r'
              d978 0064  ld   $64         ;78c1 'd'
              d979 0054  ld   $54         ;78c2 'T'
              d97a 0079  ld   $79         ;78c3 'y'
              d97b 0070  ld   $70         ;78c4 'p'
              d97c 0065  ld   $65         ;78c5 'e'
              d97d 0020  ld   $20         ;78c6 ' '
              d97e 0000  ld   $00         ;78c7 0
              d97f 00cf  ld   $cf         ;78c8 CALL
              d980 0032  ld   $32         ;78c8 'PrintText'
              d981 0021  ld   $21         ;78ca LDW
              d982 0034  ld   $34         ;78ca 'CardType'
              d983 00cf  ld   $cf         ;78cc CALL
              d984 0062  ld   $62         ;78cc 'PrintByte'
              d985 00cf  ld   $cf         ;78ce CALL
              d986 00a9  ld   $a9         ;78ce 'Newline'
              d987 00cf  ld   $cf         ;78d0 CALL
              d988 006e  ld   $6e         ;78d0 'ReadMBR'
              d989 00cf  ld   $cf         ;78d2 CALL
              d98a 0040  ld   $40         ;78d2 'PrintResult'
              d98b 0035  ld   $35         ;78d4 BCC
              d98c 0072  ld   $72         ;78d5 NE
              d98d 00d7  ld   $d7
              d98e 00cf  ld   $cf         ;78d7 CALL
              d98f 006c  ld   $6c         ;78d7 'ReadVolumeId'
              d990 00cf  ld   $cf         ;78d9 CALL
              d991 0089  ld   $89         ;78d9 'InitFat32'
              d992 00cf  ld   $cf         ;78db CALL
              d993 009d  ld   $9d         ;78db 'ReadDirectory'
              d994 0035  ld   $35         ;78dd BCC
              d995 0072  ld   $72         ;78de NE
              d996 00e0  ld   $e0
              d997 00cf  ld   $cf         ;78e0 CALL
              d998 00c9  ld   $c9         ;78e0 'PrintDirectory'
              d999 00b4  ld   $b4
              d99a 0080  ld   $80
              d99b 0000  ld   $00         ;End of Apps/CardTest/CardBoot.gcl, size 2702
                                          ;+-----------------------------------+
                                          ;| Apps/MainMenu/MainMenu_vX0.gcl    |
                                          ;+-----------------------------------+
              d99c dc42  st   $42,[y,x++] ;'B'
              d99d dc6f  st   $6f,[y,x++] ;'o'
              d99e dc6f  st   $6f,[y,x++] ;'o'
              d99f dc74  st   $74,[y,x++] ;'t'
              d9a0 dc00  st   $00,[y,x++] ;'\x00'
              d9a1 dc00  st   $00,[y,x++] ;'\x00'
              d9a2 dc00  st   $00,[y,x++] ;'\x00'
              d9a3 dc00  st   $00,[y,x++] ;'\x00'
              d9a4 000e  ld   $0e
              d9a5 c218  st   [$18]
              d9a6 00cf  ld   $cf
              d9a7 14df  ld   $df,y
              d9a8 e0ac  jmp  y,$ac
              d9a9 c219  st   [$19]
Main:         d9aa 0002  ld   $02         ;| RAM segment address (high byte first)
              d9ab 0000  ld   $00         ;|
              d9ac 00dd  ld   $dd         ;| Length (1..256)
              d9ad 0021  ld   $21         ;0200 LDW
              d9ae 0011  ld   $11
              d9af 0035  ld   $35         ;0202 BCC
              d9b0 0056  ld   $56         ;0203 LE
              d9b1 000f  ld   $0f
              d9b2 0082  ld   $82         ;0205 ANDI
              d9b3 0010  ld   $10
              d9b4 0035  ld   $35         ;0207 BCC
              d9b5 0072  ld   $72         ;0208 NE
              d9b6 000f  ld   $0f
              d9b7 0011  ld   $11         ;020a LDWI
              d9b8 0017  ld   $17
              d9b9 00ca  ld   $ca
              d9ba 002b  ld   $2b         ;020d STW
              d9bb 0024  ld   $24         ;020d '_sysArgs0'
              d9bc 00b4  ld   $b4         ;020f SYS
              d9bd 00e3  ld   $e3
              d9be 00cd  ld   $cd         ;0211 DEF
              d9bf 005f  ld   $5f
              d9c0 0021  ld   $21         ;0213 LDW
              d9c1 0030  ld   $30         ;0213 'Char'
              d9c2 00e6  ld   $e6         ;0215 SUBI
              d9c3 0052  ld   $52
              d9c4 0035  ld   $35         ;0217 BCC
              d9c5 0053  ld   $53         ;0218 GE
              d9c6 0021  ld   $21
              d9c7 00e3  ld   $e3         ;021a ADDI
              d9c8 0032  ld   $32
              d9c9 002b  ld   $2b         ;021c STW
              d9ca 0032  ld   $32         ;021c 'i'
              d9cb 0011  ld   $11         ;021e LDWI
              d9cc 0000  ld   $00
              d9cd 0007  ld   $07
              d9ce 0090  ld   $90         ;0221 BRA
              d9cf 0026  ld   $26
              d9d0 002b  ld   $2b         ;0223 STW
              d9d1 0032  ld   $32         ;0223 'i'
              d9d2 0011  ld   $11         ;0225 LDWI
              d9d3 0000  ld   $00
              d9d4 0008  ld   $08
              d9d5 002b  ld   $2b         ;0228 STW
              d9d6 0034  ld   $34         ;0228 'fontData'
              d9d7 0021  ld   $21         ;022a LDW
              d9d8 0032  ld   $32         ;022a 'i'
              d9d9 00e9  ld   $e9         ;022c LSLW
              d9da 00e9  ld   $e9         ;022d LSLW
              d9db 0099  ld   $99         ;022e ADDW
              d9dc 0032  ld   $32         ;022e 'i'
              d9dd 0099  ld   $99         ;0230 ADDW
              d9de 0034  ld   $34         ;0230 'fontData'
              d9df 002b  ld   $2b         ;0232 STW
              d9e0 0034  ld   $34         ;0232 'fontData'
              d9e1 0059  ld   $59         ;0234 LDI
              d9e2 0020  ld   $20
              d9e3 005e  ld   $5e         ;0236 ST
              d9e4 0024  ld   $24
              d9e5 0021  ld   $21         ;0238 LDW
              d9e6 0036  ld   $36         ;0238 'Color'
              d9e7 005e  ld   $5e         ;023a ST
              d9e8 0025  ld   $25
              d9e9 0021  ld   $21         ;023c LDW
              d9ea 0038  ld   $38         ;023c 'Pos'
              d9eb 002b  ld   $2b         ;023e STW
              d9ec 0028  ld   $28
              d9ed 00e3  ld   $e3         ;0240 ADDI
              d9ee 0006  ld   $06
              d9ef 002b  ld   $2b         ;0242 STW
              d9f0 0038  ld   $38         ;0242 'Pos'
              d9f1 0011  ld   $11         ;0244 LDWI
              d9f2 00e1  ld   $e1
              d9f3 0004  ld   $04
              d9f4 002b  ld   $2b         ;0247 STW
              d9f5 0022  ld   $22
              d9f6 0059  ld   $59         ;0249 LDI
              d9f7 00fb  ld   $fb
              d9f8 002b  ld   $2b         ;024b STW
              d9f9 0032  ld   $32         ;024b 'i'
              d9fa 0021  ld   $21         ;024d LDW
              d9fb fe00  bra  ac          ;+-----------------------------------+
              d9fc fcfd  bra  $d9fd       ;|                                   |
              d9fd 1418  ld   $18,y       ;| Trampoline for page $d900 lookups |
              d9fe e006  jmp  y,$06       ;|                                   |
              d9ff c218  st   [$18]       ;+-----------------------------------+
              da00 0034  ld   $34         ;024d 'fontData'
              da01 007f  ld   $7f         ;024f LUP
              da02 0000  ld   $00
              da03 0093  ld   $93         ;0251 INC
              da04 0034  ld   $34         ;0251 'fontData'
              da05 005e  ld   $5e         ;0253 ST
              da06 0026  ld   $26
              da07 00b4  ld   $b4         ;0255 SYS
              da08 00cc  ld   $cc
              da09 0093  ld   $93         ;0257 INC
              da0a 0028  ld   $28
              da0b 0093  ld   $93         ;0259 INC
              da0c 0032  ld   $32         ;0259 'i'
              da0d 0021  ld   $21         ;025b LDW
              da0e 0032  ld   $32         ;025b 'i'
              da0f 0035  ld   $35         ;025d BCC
              da10 0072  ld   $72         ;025e NE
              da11 004b  ld   $4b
              da12 00ff  ld   $ff         ;0260 RET
              da13 002b  ld   $2b         ;0261 STW
              da14 003a  ld   $3a         ;0261 'PrintChar'
              da15 00cd  ld   $cd         ;0263 DEF
              da16 008c  ld   $8c
              da17 0075  ld   $75         ;0265 PUSH
              da18 002b  ld   $2b         ;0266 STW
              da19 003c  ld   $3c         ;0266 'Text'
              da1a 0021  ld   $21         ;0268 LDW
              da1b 003c  ld   $3c         ;0268 'Text'
              da1c 00ad  ld   $ad         ;026a PEEK
              da1d 0035  ld   $35         ;026b BCC
              da1e 003f  ld   $3f         ;026c EQ
              da1f 008a  ld   $8a
              da20 002b  ld   $2b         ;026e STW
              da21 0030  ld   $30         ;026e 'Char'
              da22 0093  ld   $93         ;0270 INC
              da23 003c  ld   $3c         ;0270 'Text'
              da24 008c  ld   $8c         ;0272 XORI
              da25 0009  ld   $09
              da26 0035  ld   $35         ;0274 BCC
              da27 0072  ld   $72         ;0275 NE
              da28 007d  ld   $7d
              da29 0021  ld   $21         ;0277 LDW
              da2a 0038  ld   $38         ;0277 'Pos'
              da2b 00e3  ld   $e3         ;0279 ADDI
              da2c 0012  ld   $12
              da2d 002b  ld   $2b         ;027b STW
              da2e 0038  ld   $38         ;027b 'Pos'
              da2f 0090  ld   $90         ;027d BRA
              da30 0066  ld   $66
              da31 008c  ld   $8c         ;027f XORI
              da32 0003  ld   $03
              da33 0035  ld   $35         ;0281 BCC
              da34 0072  ld   $72         ;0282 NE
              da35 0086  ld   $86
              da36 00cf  ld   $cf         ;0284 CALL
              da37 003e  ld   $3e         ;0284 'Newline'
              da38 0090  ld   $90         ;0286 BRA
              da39 0066  ld   $66
              da3a 00cf  ld   $cf         ;0288 CALL
              da3b 003a  ld   $3a         ;0288 'PrintChar'
              da3c 0090  ld   $90         ;028a BRA
              da3d 0066  ld   $66
              da3e 0063  ld   $63         ;028c POP
              da3f 00ff  ld   $ff         ;028d RET
              da40 002b  ld   $2b         ;028e STW
              da41 0040  ld   $40         ;028e 'PrintText'
              da42 00cd  ld   $cd         ;0290 DEF
              da43 00a6  ld   $a6
              da44 0075  ld   $75         ;0292 PUSH
              da45 0059  ld   $59         ;0293 LDI
              da46 002d  ld   $2d
              da47 002b  ld   $2b         ;0295 STW
              da48 0030  ld   $30         ;0295 'Char'
              da49 0059  ld   $59         ;0297 LDI
              da4a 001a  ld   $1a
              da4b 002b  ld   $2b         ;0299 STW
              da4c 0042  ld   $42         ;0299 'j'
              da4d 00cf  ld   $cf         ;029b CALL
              da4e 003a  ld   $3a         ;029b 'PrintChar'
              da4f 0021  ld   $21         ;029d LDW
              da50 0042  ld   $42         ;029d 'j'
              da51 00e6  ld   $e6         ;029f SUBI
              da52 0001  ld   $01
              da53 0035  ld   $35         ;02a1 BCC
              da54 004d  ld   $4d         ;02a2 GT
              da55 0097  ld   $97
              da56 00cf  ld   $cf         ;02a4 CALL
              da57 003e  ld   $3e         ;02a4 'Newline'
              da58 0063  ld   $63         ;02a6 POP
              da59 00ff  ld   $ff         ;02a7 RET
              da5a 002b  ld   $2b         ;02a8 STW
              da5b 0044  ld   $44         ;02a8 'PrintDivider'
              da5c 00cd  ld   $cd         ;02aa DEF
              da5d 00d6  ld   $d6
              da5e 0075  ld   $75         ;02ac PUSH
              da5f 0021  ld   $21         ;02ad LDW
              da60 0046  ld   $46         ;02ad 'MenuItem'
              da61 00e6  ld   $e6         ;02af SUBI
              da62 0005  ld   $05
              da63 0035  ld   $35         ;02b1 BCC
              da64 0053  ld   $53         ;02b2 GE
              da65 00b7  ld   $b7
              da66 0011  ld   $11         ;02b4 LDWI
              da67 000b  ld   $0b
              da68 0020  ld   $20
              da69 0090  ld   $90         ;02b7 BRA
              da6a 00ba  ld   $ba
              da6b 0011  ld   $11         ;02b9 LDWI
              da6c 0059  ld   $59
              da6d 00f8  ld   $f8
              da6e 002b  ld   $2b         ;02bc STW
              da6f 0038  ld   $38         ;02bc 'Pos'
              da70 0021  ld   $21         ;02be LDW
              da71 0046  ld   $46         ;02be 'MenuItem'
              da72 002b  ld   $2b         ;02c0 STW
              da73 0042  ld   $42         ;02c0 'j'
              da74 0011  ld   $11         ;02c2 LDWI
              da75 0000  ld   $00
              da76 0008  ld   $08
              da77 0099  ld   $99         ;02c5 ADDW
              da78 0038  ld   $38         ;02c5 'Pos'
              da79 002b  ld   $2b         ;02c7 STW
              da7a 0038  ld   $38         ;02c7 'Pos'
              da7b 0021  ld   $21         ;02c9 LDW
              da7c 0042  ld   $42         ;02c9 'j'
              da7d 00e6  ld   $e6         ;02cb SUBI
              da7e 0001  ld   $01
              da7f 0035  ld   $35         ;02cd BCC
              da80 0053  ld   $53         ;02ce GE
              da81 00be  ld   $be
              da82 0059  ld   $59         ;02d0 LDI
              da83 0082  ld   $82
              da84 002b  ld   $2b         ;02d2 STW
              da85 0030  ld   $30         ;02d2 'Char'
              da86 00cf  ld   $cf         ;02d4 CALL
              da87 003a  ld   $3a         ;02d4 'PrintChar'
              da88 0063  ld   $63         ;02d6 POP
              da89 00ff  ld   $ff         ;02d7 RET
              da8a 002b  ld   $2b         ;02d8 STW
              da8b 0048  ld   $48         ;02d8 'PrintArrow'
              da8c 0093  ld   $93         ;02da INC
              da8d 001b  ld   $1b         ;02da '_vLR'+1
              da8e 00ff  ld   $ff         ;02dc RET
              da8f 0003  ld   $03         ;| RAM segment address (high byte first)
              da90 0000  ld   $00         ;|
              da91 00a0  ld   $a0         ;| Length (1..256)
              da92 00cd  ld   $cd         ;0300 DEF
              da93 0099  ld   $99
              da94 0075  ld   $75         ;0302 PUSH
              da95 001a  ld   $1a         ;0303 LD
              da96 000e  ld   $0e
              da97 002b  ld   $2b         ;0305 STW
              da98 0036  ld   $36         ;0305 'Color'
              da99 00cf  ld   $cf         ;0307 CALL
              da9a 0048  ld   $48         ;0307 'PrintArrow'
              da9b 001a  ld   $1a         ;0309 LD
              da9c 0011  ld   $11
              da9d 008c  ld   $8c         ;030b XORI
              da9e 00fe  ld   $fe
              da9f 0035  ld   $35         ;030d BCC
              daa0 0072  ld   $72         ;030e NE
              daa1 001f  ld   $1f
              daa2 00cf  ld   $cf         ;0310 CALL
              daa3 004a  ld   $4a         ;0310 'WipeOutArrow'
              daa4 0021  ld   $21         ;0312 LDW
              daa5 0046  ld   $46         ;0312 'MenuItem'
              daa6 00e6  ld   $e6         ;0314 SUBI
              daa7 0004  ld   $04
              daa8 0035  ld   $35         ;0316 BCC
              daa9 004d  ld   $4d         ;0317 GT
              daaa 001b  ld   $1b
              daab 00e3  ld   $e3         ;0319 ADDI
              daac 0009  ld   $09
              daad 002b  ld   $2b         ;031b STW
              daae 0046  ld   $46         ;031b 'MenuItem'
              daaf 0059  ld   $59         ;031d LDI
              dab0 00ef  ld   $ef
              dab1 005e  ld   $5e         ;031f ST
              dab2 0011  ld   $11
              dab3 001a  ld   $1a         ;0321 LD
              dab4 0011  ld   $11
              dab5 008c  ld   $8c         ;0323 XORI
              dab6 00fd  ld   $fd
              dab7 0035  ld   $35         ;0325 BCC
              dab8 0072  ld   $72         ;0326 NE
              dab9 0035  ld   $35
              daba 00cf  ld   $cf         ;0328 CALL
              dabb 004a  ld   $4a         ;0328 'WipeOutArrow'
              dabc 0021  ld   $21         ;032a LDW
              dabd 0046  ld   $46         ;032a 'MenuItem'
              dabe 00e6  ld   $e6         ;032c SUBI
              dabf 0005  ld   $05
              dac0 0035  ld   $35         ;032e BCC
              dac1 0050  ld   $50         ;032f LT
              dac2 0031  ld   $31
              dac3 002b  ld   $2b         ;0331 STW
              dac4 0046  ld   $46         ;0331 'MenuItem'
              dac5 0059  ld   $59         ;0333 LDI
              dac6 00ef  ld   $ef
              dac7 005e  ld   $5e         ;0335 ST
              dac8 0011  ld   $11
              dac9 001a  ld   $1a         ;0337 LD
              daca 0011  ld   $11
              dacb 008c  ld   $8c         ;0339 XORI
              dacc 00fb  ld   $fb
              dacd 0035  ld   $35         ;033b BCC
              dace 0072  ld   $72         ;033c NE
              dacf 0050  ld   $50
              dad0 00cf  ld   $cf         ;033e CALL
              dad1 004a  ld   $4a         ;033e 'WipeOutArrow'
              dad2 0021  ld   $21         ;0340 LDW
              dad3 0046  ld   $46         ;0340 'MenuItem'
              dad4 00e6  ld   $e6         ;0342 SUBI
              dad5 0004  ld   $04
              dad6 0035  ld   $35         ;0344 BCC
              dad7 003f  ld   $3f         ;0345 EQ
              dad8 004c  ld   $4c
              dad9 00e6  ld   $e6         ;0347 SUBI
              dada 0005  ld   $05
              dadb 0035  ld   $35         ;0349 BCC
              dadc 003f  ld   $3f         ;034a EQ
              dadd 004c  ld   $4c
              dade 0093  ld   $93         ;034c INC
              dadf 0046  ld   $46         ;034c 'MenuItem'
              dae0 0059  ld   $59         ;034e LDI
              dae1 00ef  ld   $ef
              dae2 005e  ld   $5e         ;0350 ST
              dae3 0011  ld   $11
              dae4 001a  ld   $1a         ;0352 LD
              dae5 0011  ld   $11
              dae6 008c  ld   $8c         ;0354 XORI
              dae7 00f7  ld   $f7
              dae8 0035  ld   $35         ;0356 BCC
              dae9 0072  ld   $72         ;0357 NE
              daea 006d  ld   $6d
              daeb 00cf  ld   $cf         ;0359 CALL
              daec 004a  ld   $4a         ;0359 'WipeOutArrow'
              daed 0021  ld   $21         ;035b LDW
              daee 0046  ld   $46         ;035b 'MenuItem'
              daef 0035  ld   $35         ;035d BCC
              daf0 003f  ld   $3f         ;035e EQ
              daf1 0069  ld   $69
              daf2 00e6  ld   $e6         ;0360 SUBI
              daf3 0005  ld   $05
              daf4 0035  ld   $35         ;0362 BCC
              daf5 003f  ld   $3f         ;0363 EQ
              daf6 0069  ld   $69
              daf7 0021  ld   $21         ;0365 LDW
              daf8 0046  ld   $46         ;0365 'MenuItem'
              daf9 00e6  ld   $e6         ;0367 SUBI
              dafa 0001  ld   $01
              dafb fe00  bra  ac          ;+-----------------------------------+
              dafc fcfd  bra  $dafd       ;|                                   |
              dafd 1418  ld   $18,y       ;| Trampoline for page $da00 lookups |
              dafe e006  jmp  y,$06       ;|                                   |
              daff c218  st   [$18]       ;+-----------------------------------+
              db00 002b  ld   $2b         ;0369 STW
              db01 0046  ld   $46         ;0369 'MenuItem'
              db02 0059  ld   $59         ;036b LDI
              db03 00ef  ld   $ef
              db04 005e  ld   $5e         ;036d ST
              db05 0011  ld   $11
              db06 001a  ld   $1a         ;036f LD
              db07 0011  ld   $11
              db08 0082  ld   $82         ;0371 ANDI
              db09 0080  ld   $80
              db0a 0035  ld   $35         ;0373 BCC
              db0b 0072  ld   $72         ;0374 NE
              db0c 0001  ld   $01
              db0d 0059  ld   $59         ;0376 LDI
              db0e 002a  ld   $2a
              db0f 002b  ld   $2b         ;0378 STW
              db10 0036  ld   $36         ;0378 'Color'
              db11 00cf  ld   $cf         ;037a CALL
              db12 0048  ld   $48         ;037a 'PrintArrow'
              db13 00cd  ld   $cd         ;037c DEF
              db14 0090  ld   $90
              db15 004f  ld   $4f
              db16 0054  ld   $54
              db17 00f0  ld   $f0
              db18 004c  ld   $4c
              db19 00a9  ld   $a9
              db1a 005f  ld   $5f
              db1b 00c2  ld   $c2
              db1c 0065  ld   $65
              db1d 009e  ld   $9e
              db1e 0064  ld   $64
              db1f 0026  ld   $26
              db20 0068  ld   $68
              db21 00e6  ld   $e6
              db22 007b  ld   $7b
              db23 005e  ld   $5e
              db24 006f  ld   $6f
              db25 00f6  ld   $f6
              db26 00a3  ld   $a3
              db27 0061  ld   $61
              db28 0086  ld   $86
              db29 0099  ld   $99         ;0392 ADDW
              db2a 0046  ld   $46         ;0392 'MenuItem'
              db2b 0099  ld   $99         ;0394 ADDW
              db2c 0046  ld   $46         ;0394 'MenuItem'
              db2d 00f6  ld   $f6         ;0396 DEEK
              db2e 002b  ld   $2b         ;0397 STW
              db2f 004c  ld   $4c         ;0397 'Program'
              db30 0063  ld   $63         ;0399 POP
              db31 00ff  ld   $ff         ;039a RET
              db32 002b  ld   $2b         ;039b STW
              db33 004e  ld   $4e         ;039b 'SelectMenu'
              db34 0093  ld   $93         ;039d INC
              db35 001b  ld   $1b         ;039d '_vLR'+1
              db36 00ff  ld   $ff         ;039f RET
              db37 0004  ld   $04         ;| RAM segment address (high byte first)
              db38 0000  ld   $00         ;|
              db39 00c0  ld   $c0         ;| Length (1..256)
              db3a 00cd  ld   $cd         ;0400 DEF
              db3b 000b  ld   $0b
              db3c 001a  ld   $1a         ;0402 LD
              db3d 0039  ld   $39         ;0402 'Pos'+1
              db3e 00e3  ld   $e3         ;0404 ADDI
              db3f 0008  ld   $08
              db40 005e  ld   $5e         ;0406 ST
              db41 0039  ld   $39         ;0406 'Pos'+1
              db42 0059  ld   $59         ;0408 LDI
              db43 0002  ld   $02
              db44 005e  ld   $5e         ;040a ST
              db45 0038  ld   $38         ;040a 'Pos'
              db46 00ff  ld   $ff         ;040c RET
              db47 002b  ld   $2b         ;040d STW
              db48 003e  ld   $3e         ;040d 'Newline'
              db49 00cd  ld   $cd         ;040f DEF
              db4a 006b  ld   $6b
              db4b 0009  ld   $09         ;0411 9
              db4c 0053  ld   $53         ;0412 'S'
              db4d 0044  ld   $44         ;0413 'D'
              db4e 0043  ld   $43         ;0414 'C'
              db4f 0061  ld   $61         ;0415 'a'
              db50 0072  ld   $72         ;0416 'r'
              db51 0064  ld   $64         ;0417 'd'
              db52 0009  ld   $09         ;0418 9
              db53 0020  ld   $20         ;0419 ' '
              db54 0009  ld   $09         ;041a 9
              db55 0053  ld   $53         ;041b 'S'
              db56 006e  ld   $6e         ;041c 'n'
              db57 0061  ld   $61         ;041d 'a'
              db58 006b  ld   $6b         ;041e 'k'
              db59 0065  ld   $65         ;041f 'e'
              db5a 000a  ld   $0a         ;0420 10
              db5b 0009  ld   $09         ;0421 9
              db5c 0052  ld   $52         ;0422 'R'
              db5d 0061  ld   $61         ;0423 'a'
              db5e 0063  ld   $63         ;0424 'c'
              db5f 0065  ld   $65         ;0425 'e'
              db60 0072  ld   $72         ;0426 'r'
              db61 0009  ld   $09         ;0427 9
              db62 0020  ld   $20         ;0428 ' '
              db63 0020  ld   $20         ;0429 ' '
              db64 0009  ld   $09         ;042a 9
              db65 0054  ld   $54         ;042b 'T'
              db66 0069  ld   $69         ;042c 'i'
              db67 0063  ld   $63         ;042d 'c'
              db68 0054  ld   $54         ;042e 'T'
              db69 0061  ld   $61         ;042f 'a'
              db6a 0063  ld   $63         ;0430 'c'
              db6b 0054  ld   $54         ;0431 'T'
              db6c 006f  ld   $6f         ;0432 'o'
              db6d 0065  ld   $65         ;0433 'e'
              db6e 000a  ld   $0a         ;0434 10
              db6f 0009  ld   $09         ;0435 9
              db70 004d  ld   $4d         ;0436 'M'
              db71 0061  ld   $61         ;0437 'a'
              db72 006e  ld   $6e         ;0438 'n'
              db73 0064  ld   $64         ;0439 'd'
              db74 0065  ld   $65         ;043a 'e'
              db75 006c  ld   $6c         ;043b 'l'
              db76 0062  ld   $62         ;043c 'b'
              db77 0072  ld   $72         ;043d 'r'
              db78 006f  ld   $6f         ;043e 'o'
              db79 0074  ld   $74         ;043f 't'
              db7a 0009  ld   $09         ;0440 9
              db7b 0042  ld   $42         ;0441 'B'
              db7c 0041  ld   $41         ;0442 'A'
              db7d 0053  ld   $53         ;0443 'S'
              db7e 0049  ld   $49         ;0444 'I'
              db7f 0043  ld   $43         ;0445 'C'
              db80 000a  ld   $0a         ;0446 10
              db81 0009  ld   $09         ;0447 9
              db82 0043  ld   $43         ;0448 'C'
              db83 0072  ld   $72         ;0449 'r'
              db84 0065  ld   $65         ;044a 'e'
              db85 0064  ld   $64         ;044b 'd'
              db86 0069  ld   $69         ;044c 'i'
              db87 0074  ld   $74         ;044d 't'
              db88 0073  ld   $73         ;044e 's'
              db89 0009  ld   $09         ;044f 9
              db8a 0009  ld   $09         ;0450 9
              db8b 004d  ld   $4d         ;0451 'M'
              db8c 0053  ld   $53         ;0452 'S'
              db8d 0020  ld   $20         ;0453 ' '
              db8e 0042  ld   $42         ;0454 'B'
              db8f 0041  ld   $41         ;0455 'A'
              db90 0053  ld   $53         ;0456 'S'
              db91 0049  ld   $49         ;0457 'I'
              db92 0043  ld   $43         ;0458 'C'
              db93 000a  ld   $0a         ;0459 10
              db94 0009  ld   $09         ;045a 9
              db95 004c  ld   $4c         ;045b 'L'
              db96 006f  ld   $6f         ;045c 'o'
              db97 0061  ld   $61         ;045d 'a'
              db98 0064  ld   $64         ;045e 'd'
              db99 0065  ld   $65         ;045f 'e'
              db9a 0072  ld   $72         ;0460 'r'
              db9b 0009  ld   $09         ;0461 9
              db9c 0020  ld   $20         ;0462 ' '
              db9d 0009  ld   $09         ;0463 9
              db9e 0041  ld   $41         ;0464 'A'
              db9f 0070  ld   $70         ;0465 'p'
              dba0 0070  ld   $70         ;0466 'p'
              dba1 006c  ld   $6c         ;0467 'l'
              dba2 0065  ld   $65         ;0468 'e'
              dba3 002d  ld   $2d         ;0469 '-'
              dba4 0031  ld   $31         ;046a '1'
              dba5 000a  ld   $0a         ;046b 10
              dba6 0000  ld   $00         ;046c 0
              dba7 002b  ld   $2b         ;046d STW
              dba8 0050  ld   $50         ;046d 'MainMenu'
              dba9 00cd  ld   $cd         ;046f DEF
              dbaa 00b9  ld   $b9
              dbab 0055  ld   $55         ;0471 'U'
              dbac 0073  ld   $73         ;0472 's'
              dbad 0065  ld   $65         ;0473 'e'
              dbae 0020  ld   $20         ;0474 ' '
              dbaf 005b  ld   $5b         ;0475 91
              dbb0 0041  ld   $41         ;0476 'A'
              dbb1 0072  ld   $72         ;0477 'r'
              dbb2 0072  ld   $72         ;0478 'r'
              dbb3 006f  ld   $6f         ;0479 'o'
              dbb4 0077  ld   $77         ;047a 'w'
              dbb5 0073  ld   $73         ;047b 's'
              dbb6 005d  ld   $5d         ;047c 93
              dbb7 0020  ld   $20         ;047d ' '
              dbb8 0074  ld   $74         ;047e 't'
              dbb9 006f  ld   $6f         ;047f 'o'
              dbba 0020  ld   $20         ;0480 ' '
              dbbb 0073  ld   $73         ;0481 's'
              dbbc 0065  ld   $65         ;0482 'e'
              dbbd 006c  ld   $6c         ;0483 'l'
              dbbe 0065  ld   $65         ;0484 'e'
              dbbf 0063  ld   $63         ;0485 'c'
              dbc0 0074  ld   $74         ;0486 't'
              dbc1 000a  ld   $0a         ;0487 10
              dbc2 0050  ld   $50         ;0488 'P'
              dbc3 0072  ld   $72         ;0489 'r'
              dbc4 0065  ld   $65         ;048a 'e'
              dbc5 0073  ld   $73         ;048b 's'
              dbc6 0073  ld   $73         ;048c 's'
              dbc7 0020  ld   $20         ;048d ' '
              dbc8 005b  ld   $5b         ;048e 91
              dbc9 0041  ld   $41         ;048f 'A'
              dbca 005d  ld   $5d         ;0490 93
              dbcb 0020  ld   $20         ;0491 ' '
              dbcc 0074  ld   $74         ;0492 't'
              dbcd 006f  ld   $6f         ;0493 'o'
              dbce 0020  ld   $20         ;0494 ' '
              dbcf 0073  ld   $73         ;0495 's'
              dbd0 0074  ld   $74         ;0496 't'
              dbd1 0061  ld   $61         ;0497 'a'
              dbd2 0072  ld   $72         ;0498 'r'
              dbd3 0074  ld   $74         ;0499 't'
              dbd4 0020  ld   $20         ;049a ' '
              dbd5 0070  ld   $70         ;049b 'p'
              dbd6 0072  ld   $72         ;049c 'r'
              dbd7 006f  ld   $6f         ;049d 'o'
              dbd8 0067  ld   $67         ;049e 'g'
              dbd9 0072  ld   $72         ;049f 'r'
              dbda 0061  ld   $61         ;04a0 'a'
              dbdb 006d  ld   $6d         ;04a1 'm'
              dbdc 000a  ld   $0a         ;04a2 10
              dbdd 000a  ld   $0a         ;04a3 10
              dbde 0048  ld   $48         ;04a4 'H'
              dbdf 006f  ld   $6f         ;04a5 'o'
              dbe0 006c  ld   $6c         ;04a6 'l'
              dbe1 0064  ld   $64         ;04a7 'd'
              dbe2 0020  ld   $20         ;04a8 ' '
              dbe3 005b  ld   $5b         ;04a9 91
              dbe4 0053  ld   $53         ;04aa 'S'
              dbe5 0074  ld   $74         ;04ab 't'
              dbe6 0061  ld   $61         ;04ac 'a'
              dbe7 0072  ld   $72         ;04ad 'r'
              dbe8 0074  ld   $74         ;04ae 't'
              dbe9 005d  ld   $5d         ;04af 93
              dbea 0020  ld   $20         ;04b0 ' '
              dbeb 0066  ld   $66         ;04b1 'f'
              dbec 006f  ld   $6f         ;04b2 'o'
              dbed 0072  ld   $72         ;04b3 'r'
              dbee 0020  ld   $20         ;04b4 ' '
              dbef 0072  ld   $72         ;04b5 'r'
              dbf0 0065  ld   $65         ;04b6 'e'
              dbf1 0073  ld   $73         ;04b7 's'
              dbf2 0065  ld   $65         ;04b8 'e'
              dbf3 0074  ld   $74         ;04b9 't'
              dbf4 0000  ld   $00         ;04ba 0
              dbf5 002b  ld   $2b         ;04bb STW
              dbf6 0052  ld   $52         ;04bb 'HelpText'
              dbf7 0093  ld   $93         ;04bd INC
              dbf8 001b  ld   $1b         ;04bd '_vLR'+1
              dbf9 00ff  ld   $ff         ;04bf RET
              dbfa 0005  ld   $05         ;| RAM segment address (high byte first)
              dbfb fe00  bra  ac          ;+-----------------------------------+
              dbfc fcfd  bra  $dbfd       ;|                                   |
              dbfd 1418  ld   $18,y       ;| Trampoline for page $db00 lookups |
              dbfe e006  jmp  y,$06       ;|                                   |
              dbff c218  st   [$18]       ;+-----------------------------------+
              dc00 0000  ld   $00         ;|
              dc01 00b7  ld   $b7         ;| Length (1..256)
              dc02 00cd  ld   $cd         ;0500 DEF
              dc03 0011  ld   $11
              dc04 0075  ld   $75         ;0502 PUSH
              dc05 0021  ld   $21         ;0503 LDW
              dc06 0038  ld   $38         ;0503 'Pos'
              dc07 00e6  ld   $e6         ;0505 SUBI
              dc08 000c  ld   $0c
              dc09 002b  ld   $2b         ;0507 STW
              dc0a 0038  ld   $38         ;0507 'Pos'
              dc0b 0059  ld   $59         ;0509 LDI
              dc0c 0020  ld   $20
              dc0d 002b  ld   $2b         ;050b STW
              dc0e 0030  ld   $30         ;050b 'Char'
              dc0f 00cf  ld   $cf         ;050d CALL
              dc10 003a  ld   $3a         ;050d 'PrintChar'
              dc11 00cf  ld   $cf         ;050f CALL
              dc12 003a  ld   $3a         ;050f 'PrintChar'
              dc13 0063  ld   $63         ;0511 POP
              dc14 00ff  ld   $ff         ;0512 RET
              dc15 002b  ld   $2b         ;0513 STW
              dc16 004a  ld   $4a         ;0513 'WipeOutArrow'
              dc17 00cd  ld   $cd         ;0515 DEF
              dc18 0030  ld   $30
              dc19 0075  ld   $75         ;0517 PUSH
              dc1a 0059  ld   $59         ;0518 LDI
              dc1b 002a  ld   $2a
              dc1c 002b  ld   $2b         ;051a STW
              dc1d 0036  ld   $36         ;051a 'Color'
              dc1e 00cf  ld   $cf         ;051c CALL
              dc1f 0044  ld   $44         ;051c 'PrintDivider'
              dc20 0059  ld   $59         ;051e LDI
              dc21 000f  ld   $0f
              dc22 002b  ld   $2b         ;0520 STW
              dc23 0036  ld   $36         ;0520 'Color'
              dc24 0021  ld   $21         ;0522 LDW
              dc25 0050  ld   $50         ;0522 'MainMenu'
              dc26 00cf  ld   $cf         ;0524 CALL
              dc27 0040  ld   $40         ;0524 'PrintText'
              dc28 0059  ld   $59         ;0526 LDI
              dc29 002a  ld   $2a
              dc2a 002b  ld   $2b         ;0528 STW
              dc2b 0036  ld   $36         ;0528 'Color'
              dc2c 00cf  ld   $cf         ;052a CALL
              dc2d 0044  ld   $44         ;052a 'PrintDivider'
              dc2e 0021  ld   $21         ;052c LDW
              dc2f 0052  ld   $52         ;052c 'HelpText'
              dc30 00cf  ld   $cf         ;052e CALL
              dc31 0040  ld   $40         ;052e 'PrintText'
              dc32 0063  ld   $63         ;0530 POP
              dc33 00ff  ld   $ff         ;0531 RET
              dc34 002b  ld   $2b         ;0532 STW
              dc35 0054  ld   $54         ;0532 'PrintMenu'
              dc36 001a  ld   $1a         ;0534 LD
              dc37 0021  ld   $21
              dc38 0088  ld   $88         ;0536 ORI
              dc39 0003  ld   $03
              dc3a 005e  ld   $5e         ;0538 ST
              dc3b 0021  ld   $21
              dc3c 0059  ld   $59         ;053a LDI
              dc3d 005a  ld   $5a
              dc3e 005e  ld   $5e         ;053c ST
              dc3f 002c  ld   $2c
              dc40 0011  ld   $11         ;053e LDWI
              dc41 0002  ld   $02
              dc42 0020  ld   $20
              dc43 002b  ld   $2b         ;0541 STW
              dc44 0038  ld   $38         ;0541 'Pos'
              dc45 00cf  ld   $cf         ;0543 CALL
              dc46 0054  ld   $54         ;0543 'PrintMenu'
              dc47 0059  ld   $59         ;0545 LDI
              dc48 0000  ld   $00
              dc49 002b  ld   $2b         ;0547 STW
              dc4a 0046  ld   $46         ;0547 'MenuItem'
              dc4b 00cf  ld   $cf         ;0549 CALL
              dc4c 004e  ld   $4e         ;0549 'SelectMenu'
              dc4d 0011  ld   $11         ;054b LDWI
              dc4e 0000  ld   $00
              dc4f 0008  ld   $08
              dc50 002b  ld   $2b         ;054e STW
              dc51 0028  ld   $28         ;054e '_sysArgs4'
              dc52 0011  ld   $11         ;0550 LDWI
              dc53 0001  ld   $01
              dc54 0088  ld   $88
              dc55 002b  ld   $2b         ;0553 STW
              dc56 0032  ld   $32         ;0553 'i'
              dc57 0011  ld   $11         ;0555 LDWI
              dc58 0080  ld   $80
              dc59 00ff  ld   $ff
              dc5a 002b  ld   $2b         ;0558 STW
              dc5b 0042  ld   $42         ;0558 'j'
              dc5c 0021  ld   $21         ;055a LDW
              dc5d 0038  ld   $38         ;055a 'Pos'
              dc5e 00e3  ld   $e3         ;055c ADDI
              dc5f 0030  ld   $30
              dc60 00f8  ld   $f8         ;055e ANDW
              dc61 0042  ld   $42         ;055e 'j'
              dc62 002b  ld   $2b         ;0560 STW
              dc63 0056  ld   $56         ;0560 'q'
              dc64 0011  ld   $11         ;0562 LDWI
              dc65 00e1  ld   $e1
              dc66 0004  ld   $04
              dc67 002b  ld   $2b         ;0565 STW
              dc68 0022  ld   $22         ;0565 '_sysFn'
              dc69 0059  ld   $59         ;0567 LDI
              dc6a 0020  ld   $20
              dc6b 005e  ld   $5e         ;0569 ST
              dc6c 0024  ld   $24
              dc6d 005e  ld   $5e         ;056b ST
              dc6e 0025  ld   $25
              dc6f 0021  ld   $21         ;056d LDW
              dc70 0028  ld   $28         ;056d '_sysArgs4'
              dc71 00e3  ld   $e3         ;056f ADDI
              dc72 0030  ld   $30
              dc73 00f8  ld   $f8         ;0571 ANDW
              dc74 0042  ld   $42         ;0571 'j'
              dc75 00fc  ld   $fc         ;0573 XORW
              dc76 0056  ld   $56         ;0573 'q'
              dc77 0035  ld   $35         ;0575 BCC
              dc78 003f  ld   $3f         ;0576 EQ
              dc79 007f  ld   $7f
              dc7a 001a  ld   $1a         ;0578 LD
              dc7b 0059  ld   $59         ;0578 'p'+1
              dc7c 008c  ld   $8c         ;057a XORI
              dc7d 0078  ld   $78
              dc7e 0035  ld   $35         ;057c BCC
              dc7f 003f  ld   $3f         ;057d EQ
              dc80 007f  ld   $7f
              dc81 00b4  ld   $b4         ;057f SYS
              dc82 00cc  ld   $cc
              dc83 0011  ld   $11         ;0581 LDWI
              dc84 0000  ld   $00
              dc85 0008  ld   $08
              dc86 0099  ld   $99         ;0584 921
              dc87 0028  ld   $28         ;0585 40
              dc88 002b  ld   $2b         ;0586 STW
              dc89 0028  ld   $28
              dc8a 0035  ld   $35         ;0588 BCC
              dc8b 004d  ld   $4d         ;0589 GT
              dc8c 006d  ld   $6d
              dc8d 0099  ld   $99         ;058b ADDW
              dc8e 0032  ld   $32         ;058b 'i'
              dc8f 002b  ld   $2b         ;058d STW
              dc90 0028  ld   $28
              dc91 0082  ld   $82         ;058f ANDI
              dc92 00ff  ld   $ff
              dc93 008c  ld   $8c         ;0591 XORI
              dc94 00a0  ld   $a0
              dc95 0035  ld   $35         ;0593 BCC
              dc96 0072  ld   $72         ;0594 NE
              dc97 006b  ld   $6b
              dc98 0059  ld   $59         ;0596 LDI
              dc99 00ad  ld   $ad
              dc9a 002b  ld   $2b         ;0598 STW
              dc9b 0022  ld   $22         ;0598 '_sysFn'
              dc9c 0021  ld   $21         ;059a LDW
              dc9d 004c  ld   $4c         ;059a 'Program'
              dc9e 002b  ld   $2b         ;059c STW
              dc9f 0024  ld   $24         ;059c '_sysArgs0'
              dca0 0011  ld   $11         ;059e LDWI
              dca1 0000  ld   $00
              dca2 0002  ld   $02
              dca3 002b  ld   $2b         ;05a1 STW
              dca4 001a  ld   $1a         ;05a1 '_vLR'
              dca5 0021  ld   $21         ;05a3 LDW
              dca6 0046  ld   $46         ;05a3 'MenuItem'
              dca7 00e6  ld   $e6         ;05a5 SUBI
              dca8 0008  ld   $08
              dca9 0035  ld   $35         ;05a7 BCC
              dcaa 003f  ld   $3f         ;05a8 EQ
              dcab 00aa  ld   $aa
              dcac 00e6  ld   $e6         ;05aa SUBI
              dcad 0001  ld   $01
              dcae 0035  ld   $35         ;05ac BCC
              dcaf 0072  ld   $72         ;05ad NE
              dcb0 00b3  ld   $b3
              dcb1 001a  ld   $1a         ;05af LD
              dcb2 0021  ld   $21
              dcb3 0082  ld   $82         ;05b1 ANDI
              dcb4 00f8  ld   $f8
              dcb5 005e  ld   $5e         ;05b3 ST
              dcb6 0021  ld   $21
              dcb7 00b4  ld   $b4         ;05b5 SYS
              dcb8 00e3  ld   $e3
              dcb9 0000  ld   $00         ;End of Apps/MainMenu/MainMenu_vX0.gcl, size 784
                                          ;+-----------------------------------+
                                          ;| Core/Reset_vX0.gcl                |
                                          ;+-----------------------------------+
              dcba dc4d  st   $4d,[y,x++] ;'M'
              dcbb dc61  st   $61,[y,x++] ;'a'
              dcbc dc69  st   $69,[y,x++] ;'i'
              dcbd dc6e  st   $6e,[y,x++] ;'n'
              dcbe dc00  st   $00,[y,x++] ;'\x00'
              dcbf dc00  st   $00,[y,x++] ;'\x00'
              dcc0 dc00  st   $00,[y,x++] ;'\x00'
              dcc1 dc00  st   $00,[y,x++] ;'\x00'
              dcc2 00aa  ld   $aa
              dcc3 c218  st   [$18]
              dcc4 00d9  ld   $d9
              dcc5 14df  ld   $df,y
              dcc6 e0ac  jmp  y,$ac
              dcc7 c219  st   [$19]
Reset:        dcc8 0002  ld   $02         ;| RAM segment address (high byte first)
              dcc9 0000  ld   $00         ;|
              dcca 00f3  ld   $f3         ;| Length (1..256)
              dccb 0011  ld   $11         ;0200 LDWI
              dccc 00f8  ld   $f8
              dccd 0001  ld   $01
              dcce 002b  ld   $2b         ;0203 STW
              dccf 0030  ld   $30         ;0203 'CtrlBits'
              dcd0 00cd  ld   $cd         ;0205 DEF
              dcd1 0075  ld   $75
              dcd2 0075  ld   $75         ;0207 PUSH
              dcd3 001a  ld   $1a         ;0208 LD
              dcd4 0001  ld   $01
              dcd5 00e6  ld   $e6         ;020a SUBI
              dcd6 0001  ld   $01
              dcd7 0082  ld   $82         ;020c ANDI
              dcd8 00ff  ld   $ff
              dcd9 00e3  ld   $e3         ;020e ADDI
              dcda 0001  ld   $01
              dcdb 002b  ld   $2b         ;0210 STW
              dcdc 0032  ld   $32         ;0210 'i'
              dcdd 0011  ld   $11         ;0212 LDWI
              dcde 0009  ld   $09
              dcdf 000b  ld   $0b
              dce0 002b  ld   $2b         ;0215 STW
              dce1 0022  ld   $22         ;0215 '_sysFn'
              dce2 0059  ld   $59         ;0217 LDI
              dce3 00aa  ld   $aa
              dce4 005e  ld   $5e         ;0219 ST
              dce5 007c  ld   $7c
              dce6 0059  ld   $59         ;021b LDI
              dce7 007c  ld   $7c
              dce8 00b4  ld   $b4         ;021d SYS
              dce9 00fb  ld   $fb
              dcea 001a  ld   $1a         ;021f LD
              dceb 007c  ld   $7c
              dcec 008c  ld   $8c         ;0221 XORI
              dced 00aa  ld   $aa
              dcee 0035  ld   $35         ;0223 BCC
              dcef 003f  ld   $3f         ;0224 EQ
              dcf0 002a  ld   $2a
              dcf1 0059  ld   $59         ;0226 LDI
              dcf2 0000  ld   $00
              dcf3 00f0  ld   $f0         ;0228 POKE
              dcf4 0030  ld   $30         ;0228 'CtrlBits'
              dcf5 0090  ld   $90         ;022a BRA
              dcf6 0054  ld   $54
              dcf7 0011  ld   $11         ;022c LDWI
              dcf8 0024  ld   $24
              dcf9 0080  ld   $80
              dcfa 002b  ld   $2b         ;022f STW
              dcfb fe00  bra  ac          ;+-----------------------------------+
              dcfc fcfd  bra  $dcfd       ;|                                   |
              dcfd 1418  ld   $18,y       ;| Trampoline for page $dc00 lookups |
              dcfe e006  jmp  y,$06       ;|                                   |
              dcff c218  st   [$18]       ;+-----------------------------------+
              dd00 0034  ld   $34         ;022f 'q'
              dd01 0059  ld   $59         ;0231 LDI
              dd02 00bc  ld   $bc
              dd03 00b4  ld   $b4         ;0233 SYS
              dd04 00fb  ld   $fb
              dd05 0021  ld   $21         ;0235 LDW
              dd06 0034  ld   $34         ;0235 'q'
              dd07 00ad  ld   $ad         ;0237 PEEK
              dd08 008c  ld   $8c         ;0238 XORI
              dd09 00ff  ld   $ff
              dd0a 00f0  ld   $f0         ;023a POKE
              dd0b 0034  ld   $34         ;023a 'q'
              dd0c 002b  ld   $2b         ;023c STW
              dd0d 0024  ld   $24         ;023c '_sysArgs0'
              dd0e 008c  ld   $8c         ;023e XORI
              dd0f 00ff  ld   $ff
              dd10 00f0  ld   $f0         ;0240 POKE
              dd11 0034  ld   $34         ;0240 'q'
              dd12 00fc  ld   $fc         ;0242 XORW
              dd13 0024  ld   $24         ;0242 '_sysArgs0'
              dd14 0035  ld   $35         ;0244 BCC
              dd15 003f  ld   $3f         ;0245 EQ
              dd16 004f  ld   $4f
              dd17 0059  ld   $59         ;0247 LDI
              dd18 0031  ld   $31
              dd19 002b  ld   $2b         ;0249 STW
              dd1a 0036  ld   $36         ;0249 'Char'
              dd1b 00cf  ld   $cf         ;024b CALL
              dd1c 0038  ld   $38         ;024b 'PrintChar'
              dd1d 0059  ld   $59         ;024d LDI
              dd1e 0070  ld   $70
              dd1f 002b  ld   $2b         ;024f STW
              dd20 0032  ld   $32         ;024f 'i'
              dd21 0011  ld   $11         ;0251 LDWI
              dd22 007c  ld   $7c
              dd23 0080  ld   $80
              dd24 00b4  ld   $b4         ;0254 SYS
              dd25 00fb  ld   $fb
              dd26 0011  ld   $11         ;0256 LDWI
              dd27 002f  ld   $2f
              dd28 002f  ld   $2f
              dd29 002b  ld   $2b         ;0259 STW
              dd2a 0036  ld   $36         ;0259 'Char'
              dd2b 0021  ld   $21         ;025b LDW
              dd2c 0032  ld   $32         ;025b 'i'
              dd2d 0093  ld   $93         ;025d INC
              dd2e 0036  ld   $36         ;025d 'Char'
              dd2f 00e6  ld   $e6         ;025f SUBI
              dd30 0028  ld   $28
              dd31 0035  ld   $35         ;0261 BCC
              dd32 0053  ld   $53         ;0262 GE
              dd33 005b  ld   $5b
              dd34 00e3  ld   $e3         ;0264 ADDI
              dd35 0028  ld   $28
              dd36 0093  ld   $93         ;0266 INC
              dd37 0037  ld   $37         ;0266 'Char'+1
              dd38 00e6  ld   $e6         ;0268 SUBI
              dd39 0004  ld   $04
              dd3a 0035  ld   $35         ;026a BCC
              dd3b 0053  ld   $53         ;026b GE
              dd3c 0064  ld   $64
              dd3d 00cf  ld   $cf         ;026d CALL
              dd3e 0038  ld   $38         ;026d 'PrintChar'
              dd3f 001a  ld   $1a         ;026f LD
              dd40 0037  ld   $37         ;026f 'Char'+1
              dd41 002b  ld   $2b         ;0271 STW
              dd42 0036  ld   $36         ;0271 'Char'
              dd43 00cf  ld   $cf         ;0273 CALL
              dd44 0038  ld   $38         ;0273 'PrintChar'
              dd45 0063  ld   $63         ;0275 POP
              dd46 00ff  ld   $ff         ;0276 RET
              dd47 002b  ld   $2b         ;0277 STW
              dd48 003a  ld   $3a         ;0277 'CheckMemory'
              dd49 00cd  ld   $cd         ;0279 DEF
              dd4a 009d  ld   $9d
              dd4b 0075  ld   $75         ;027b PUSH
              dd4c 002b  ld   $2b         ;027c STW
              dd4d 003c  ld   $3c         ;027c 'Text'
              dd4e 0021  ld   $21         ;027e LDW
              dd4f 003c  ld   $3c         ;027e 'Text'
              dd50 00ad  ld   $ad         ;0280 PEEK
              dd51 0035  ld   $35         ;0281 BCC
              dd52 003f  ld   $3f         ;0282 EQ
              dd53 009b  ld   $9b
              dd54 002b  ld   $2b         ;0284 STW
              dd55 0036  ld   $36         ;0284 'Char'
              dd56 008c  ld   $8c         ;0286 XORI
              dd57 000a  ld   $0a
              dd58 0035  ld   $35         ;0288 BCC
              dd59 003f  ld   $3f         ;0289 EQ
              dd5a 008d  ld   $8d
              dd5b 00cf  ld   $cf         ;028b CALL
              dd5c 0038  ld   $38         ;028b 'PrintChar'
              dd5d 0090  ld   $90         ;028d BRA
              dd5e 0097  ld   $97
              dd5f 0059  ld   $59         ;028f LDI
              dd60 0002  ld   $02
              dd61 005e  ld   $5e         ;0291 ST
              dd62 003e  ld   $3e         ;0291 'Pos'
              dd63 001a  ld   $1a         ;0293 LD
              dd64 003f  ld   $3f         ;0293 'Pos'+1
              dd65 00e3  ld   $e3         ;0295 ADDI
              dd66 0008  ld   $08
              dd67 005e  ld   $5e         ;0297 ST
              dd68 003f  ld   $3f         ;0297 'Pos'+1
              dd69 0093  ld   $93         ;0299 INC
              dd6a 003c  ld   $3c         ;0299 'Text'
              dd6b 0090  ld   $90         ;029b BRA
              dd6c 007c  ld   $7c
              dd6d 0063  ld   $63         ;029d POP
              dd6e 00ff  ld   $ff         ;029e RET
              dd6f 002b  ld   $2b         ;029f STW
              dd70 0040  ld   $40         ;029f 'PrintS'
              dd71 00cd  ld   $cd         ;02a1 DEF
              dd72 00ec  ld   $ec
              dd73 001a  ld   $1a         ;02a3 LD
              dd74 0036  ld   $36         ;02a3 'Char'
              dd75 00e6  ld   $e6         ;02a5 SUBI
              dd76 0052  ld   $52
              dd77 0035  ld   $35         ;02a7 BCC
              dd78 0053  ld   $53         ;02a8 GE
              dd79 00b1  ld   $b1
              dd7a 00e3  ld   $e3         ;02aa ADDI
              dd7b 0032  ld   $32
              dd7c 002b  ld   $2b         ;02ac STW
              dd7d 0032  ld   $32         ;02ac 'i'
              dd7e 0011  ld   $11         ;02ae LDWI
              dd7f 0000  ld   $00
              dd80 0007  ld   $07
              dd81 0090  ld   $90         ;02b1 BRA
              dd82 00b6  ld   $b6
              dd83 002b  ld   $2b         ;02b3 STW
              dd84 0032  ld   $32         ;02b3 'i'
              dd85 0011  ld   $11         ;02b5 LDWI
              dd86 0000  ld   $00
              dd87 0008  ld   $08
              dd88 002b  ld   $2b         ;02b8 STW
              dd89 0042  ld   $42         ;02b8 'j'
              dd8a 0021  ld   $21         ;02ba LDW
              dd8b 0032  ld   $32         ;02ba 'i'
              dd8c 00e9  ld   $e9         ;02bc LSLW
              dd8d 00e9  ld   $e9         ;02bd LSLW
              dd8e 0099  ld   $99         ;02be ADDW
              dd8f 0032  ld   $32         ;02be 'i'
              dd90 0099  ld   $99         ;02c0 ADDW
              dd91 0042  ld   $42         ;02c0 'j'
              dd92 002b  ld   $2b         ;02c2 STW
              dd93 0042  ld   $42         ;02c2 'j'
              dd94 0011  ld   $11         ;02c4 LDWI
              dd95 00e1  ld   $e1
              dd96 0004  ld   $04
              dd97 002b  ld   $2b         ;02c7 STW
              dd98 0022  ld   $22         ;02c7 '_sysFn'
              dd99 0011  ld   $11         ;02c9 LDWI
              dd9a 0020  ld   $20
              dd9b 003f  ld   $3f
              dd9c 002b  ld   $2b         ;02cc STW
              dd9d 0024  ld   $24
              dd9e 0021  ld   $21         ;02ce LDW
              dd9f 003e  ld   $3e         ;02ce 'Pos'
              dda0 002b  ld   $2b         ;02d0 STW
              dda1 0028  ld   $28
              dda2 00e3  ld   $e3         ;02d2 ADDI
              dda3 0006  ld   $06
              dda4 002b  ld   $2b         ;02d4 STW
              dda5 003e  ld   $3e         ;02d4 'Pos'
              dda6 0059  ld   $59         ;02d6 LDI
              dda7 0005  ld   $05
              dda8 002b  ld   $2b         ;02d8 STW
              dda9 0032  ld   $32         ;02d8 'i'
              ddaa 0021  ld   $21         ;02da LDW
              ddab 0042  ld   $42         ;02da 'j'
              ddac 007f  ld   $7f         ;02dc LUP
              ddad 0000  ld   $00
              ddae 005e  ld   $5e         ;02de ST
              ddaf 0026  ld   $26
              ddb0 00b4  ld   $b4         ;02e0 SYS
              ddb1 00cc  ld   $cc
              ddb2 0093  ld   $93         ;02e2 INC
              ddb3 0042  ld   $42         ;02e2 'j'
              ddb4 0093  ld   $93         ;02e4 INC
              ddb5 0028  ld   $28
              ddb6 0021  ld   $21         ;02e6 LDW
              ddb7 0032  ld   $32         ;02e6 'i'
              ddb8 00e6  ld   $e6         ;02e8 SUBI
              ddb9 0001  ld   $01
              ddba 0035  ld   $35         ;02ea BCC
              ddbb 004d  ld   $4d         ;02eb GT
              ddbc 00d6  ld   $d6
              ddbd 00ff  ld   $ff         ;02ed RET
              ddbe 002b  ld   $2b         ;02ee STW
              ddbf 0038  ld   $38         ;02ee 'PrintChar'
              ddc0 0093  ld   $93         ;02f0 INC
              ddc1 001b  ld   $1b
              ddc2 00ff  ld   $ff         ;02f2 RET
              ddc3 0003  ld   $03         ;| RAM segment address (high byte first)
              ddc4 0000  ld   $00         ;|
              ddc5 00ea  ld   $ea         ;| Length (1..256)
              ddc6 00cd  ld   $cd         ;0300 DEF
              ddc7 0037  ld   $37
              ddc8 002b  ld   $2b         ;0302 STW
              ddc9 0032  ld   $32         ;0302 'i'
              ddca 0088  ld   $88         ;0304 ORI
              ddcb 00ff  ld   $ff
              ddcc 008c  ld   $8c         ;0306 XORI
              ddcd 00ff  ld   $ff
              ddce 0088  ld   $88         ;0308 ORI
              ddcf 00fa  ld   $fa
              ddd0 002b  ld   $2b         ;030a STW
              ddd1 0044  ld   $44         ;030a 'p'
              ddd2 001a  ld   $1a         ;030c LD
              ddd3 0032  ld   $32         ;030c 'i'
              ddd4 002b  ld   $2b         ;030e STW
              ddd5 0032  ld   $32         ;030e 'i'
              ddd6 0059  ld   $59         ;0310 LDI
              ddd7 0000  ld   $00
              ddd8 00f0  ld   $f0         ;0312 POKE
              ddd9 0044  ld   $44         ;0312 'p'
              ddda 0093  ld   $93         ;0314 INC
              dddb 0044  ld   $44         ;0314 'p'
              dddc 0059  ld   $59         ;0316 LDI
              dddd 0003  ld   $03
              ddde 00f0  ld   $f0         ;0318 POKE
              dddf 0044  ld   $44         ;0318 'p'
              dde0 0093  ld   $93         ;031a INC
              dde1 0044  ld   $44         ;031a 'p'
              dde2 0011  ld   $11         ;031c LDWI
              dde3 0000  ld   $00
              dde4 0009  ld   $09
              dde5 0099  ld   $99         ;031f ADDW
              dde6 0032  ld   $32         ;031f 'i'
              dde7 007f  ld   $7f         ;0321 LUP
              dde8 0000  ld   $00
              dde9 00f0  ld   $f0         ;0323 POKE
              ddea 0044  ld   $44         ;0323 'p'
              ddeb 0093  ld   $93         ;0325 INC
              ddec 0044  ld   $44         ;0325 'p'
              dded 0011  ld   $11         ;0327 LDWI
              ddee 0000  ld   $00
              ddef 0009  ld   $09
              ddf0 0099  ld   $99         ;032a ADDW
              ddf1 0032  ld   $32         ;032a 'i'
              ddf2 007f  ld   $7f         ;032c LUP
              ddf3 0001  ld   $01
              ddf4 00f0  ld   $f0         ;032e POKE
              ddf5 0044  ld   $44         ;032e 'p'
              ddf6 0093  ld   $93         ;0330 INC
              ddf7 0044  ld   $44         ;0330 'p'
              ddf8 00f0  ld   $f0         ;0332 POKE
              ddf9 0044  ld   $44         ;0332 'p'
              ddfa 0093  ld   $93         ;0334 INC
              ddfb fe00  bra  ac          ;+-----------------------------------+
              ddfc fcfd  bra  $ddfd       ;|                                   |
              ddfd 1418  ld   $18,y       ;| Trampoline for page $dd00 lookups |
              ddfe e006  jmp  y,$06       ;|                                   |
              ddff c218  st   [$18]       ;+-----------------------------------+
              de00 0044  ld   $44         ;0334 'p'
              de01 00f0  ld   $f0         ;0336 POKE
              de02 0044  ld   $44         ;0336 'p'
              de03 00ff  ld   $ff         ;0338 RET
              de04 002b  ld   $2b         ;0339 STW
              de05 0046  ld   $46         ;0339 'SetupChannel'
              de06 00cd  ld   $cd         ;033b DEF
              de07 00c9  ld   $c9
              de08 0075  ld   $75         ;033d PUSH
              de09 0059  ld   $59         ;033e LDI
              de0a 0010  ld   $10
              de0b 002b  ld   $2b         ;0340 STW
              de0c 0042  ld   $42         ;0340 'j'
              de0d 0059  ld   $59         ;0342 LDI
              de0e 000a  ld   $0a
              de0f 002b  ld   $2b         ;0344 STW
              de10 0032  ld   $32         ;0344 'i'
              de11 00cf  ld   $cf         ;0346 CALL
              de12 0048  ld   $48         ;0346 'SendOnesToCard'
              de13 0021  ld   $21         ;0348 LDW
              de14 0032  ld   $32         ;0348 'i'
              de15 00e6  ld   $e6         ;034a SUBI
              de16 0001  ld   $01
              de17 0035  ld   $35         ;034c BCC
              de18 004d  ld   $4d         ;034d GT
              de19 0042  ld   $42
              de1a 0011  ld   $11         ;034f LDWI
              de1b 0009  ld   $09
              de1c 000b  ld   $0b
              de1d 002b  ld   $2b         ;0352 STW
              de1e 0022  ld   $22         ;0352 '_sysFn'
              de1f 0011  ld   $11         ;0354 LDWI
              de20 0078  ld   $78
              de21 0080  ld   $80
              de22 00b4  ld   $b4         ;0357 SYS
              de23 00fb  ld   $fb
              de24 00cd  ld   $cd         ;0359 DEF
              de25 0061  ld   $61
              de26 00ff  ld   $ff         ;035b 255
              de27 00ff  ld   $ff         ;035c 255
              de28 0040  ld   $40         ;035d 64
              de29 0000  ld   $00         ;035e 0
              de2a 0000  ld   $00         ;035f 0
              de2b 0000  ld   $00         ;0360 0
              de2c 0000  ld   $00         ;0361 0
              de2d 0095  ld   $95         ;0362 149
              de2e 002b  ld   $2b         ;0363 STW
              de2f 0044  ld   $44         ;0363 'p'
              de30 0059  ld   $59         ;0365 LDI
              de31 0081  ld   $81
              de32 002b  ld   $2b         ;0367 STW
              de33 0034  ld   $34         ;0367 'q'
              de34 0059  ld   $59         ;0369 LDI
              de35 0008  ld   $08
              de36 002b  ld   $2b         ;036b STW
              de37 0032  ld   $32         ;036b 'i'
              de38 0021  ld   $21         ;036d LDW
              de39 0044  ld   $44         ;036d 'p'
              de3a 00ad  ld   $ad         ;036f PEEK
              de3b 0093  ld   $93         ;0370 INC
              de3c 0044  ld   $44         ;0370 'p'
              de3d 00f0  ld   $f0         ;0372 POKE
              de3e 0034  ld   $34         ;0372 'q'
              de3f 0093  ld   $93         ;0374 INC
              de40 0034  ld   $34         ;0374 'q'
              de41 0021  ld   $21         ;0376 LDW
              de42 0032  ld   $32         ;0376 'i'
              de43 00e6  ld   $e6         ;0378 SUBI
              de44 0001  ld   $01
              de45 0035  ld   $35         ;037a BCC
              de46 004d  ld   $4d         ;037b GT
              de47 0069  ld   $69
              de48 0059  ld   $59         ;037d LDI
              de49 0081  ld   $81
              de4a 002b  ld   $2b         ;037f STW
              de4b 0024  ld   $24         ;037f '_sysArgs0'
              de4c 00e3  ld   $e3         ;0381 ADDI
              de4d 0008  ld   $08
              de4e 002b  ld   $2b         ;0383 STW
              de4f 0026  ld   $26         ;0383 '_sysArgs2'
              de50 0011  ld   $11         ;0385 LDWI
              de51 0015  ld   $15
              de52 000b  ld   $0b
              de53 002b  ld   $2b         ;0388 STW
              de54 0022  ld   $22         ;0388 '_sysFn'
              de55 00b4  ld   $b4         ;038a SYS
              de56 00cc  ld   $cc
              de57 0059  ld   $59         ;038c LDI
              de58 0010  ld   $10
              de59 002b  ld   $2b         ;038e STW
              de5a 0032  ld   $32         ;038e 'i'
              de5b 00cf  ld   $cf         ;0390 CALL
              de5c 0048  ld   $48         ;0390 'SendOnesToCard'
              de5d 0082  ld   $82         ;0392 ANDI
              de5e 0080  ld   $80
              de5f 0035  ld   $35         ;0394 BCC
              de60 003f  ld   $3f         ;0395 EQ
              de61 009c  ld   $9c
              de62 0021  ld   $21         ;0397 LDW
              de63 0032  ld   $32         ;0397 'i'
              de64 00e6  ld   $e6         ;0399 SUBI
              de65 0001  ld   $01
              de66 0035  ld   $35         ;039b BCC
              de67 004d  ld   $4d         ;039c GT
              de68 008c  ld   $8c
              de69 0011  ld   $11         ;039e LDWI
              de6a 0009  ld   $09
              de6b 000b  ld   $0b
              de6c 002b  ld   $2b         ;03a1 STW
              de6d 0022  ld   $22         ;03a1 '_sysFn'
              de6e 0011  ld   $11         ;03a3 LDWI
              de6f 007c  ld   $7c
              de70 0080  ld   $80
              de71 00b4  ld   $b4         ;03a6 SYS
              de72 00fb  ld   $fb
              de73 001a  ld   $1a         ;03a8 LD
              de74 002a  ld   $2a
              de75 0035  ld   $35         ;03aa BCC
              de76 003f  ld   $3f         ;03ab EQ
              de77 00c7  ld   $c7
              de78 008c  ld   $8c         ;03ad XORI
              de79 0001  ld   $01
              de7a 0035  ld   $35         ;03af BCC
              de7b 0072  ld   $72         ;03b0 NE
              de7c 00c0  ld   $c0
              de7d 0011  ld   $11         ;03b2 LDWI
              de7e 000e  ld   $0e
              de7f 00cf  ld   $cf
              de80 002b  ld   $2b         ;03b5 STW
              de81 0024  ld   $24         ;03b5 '_sysArgs0'
              de82 0011  ld   $11         ;03b7 LDWI
              de83 0000  ld   $00
              de84 0002  ld   $02
              de85 002b  ld   $2b         ;03ba STW
              de86 001a  ld   $1a         ;03ba '_vLR'
              de87 0059  ld   $59         ;03bc LDI
              de88 00ad  ld   $ad
              de89 002b  ld   $2b         ;03be STW
              de8a 0022  ld   $22         ;03be '_sysFn'
              de8b 00b4  ld   $b4         ;03c0 SYS
              de8c 00e3  ld   $e3
              de8d 0021  ld   $21         ;03c2 LDW
              de8e 0042  ld   $42         ;03c2 'j'
              de8f 00e6  ld   $e6         ;03c4 SUBI
              de90 0001  ld   $01
              de91 0035  ld   $35         ;03c6 BCC
              de92 004d  ld   $4d         ;03c7 GT
              de93 003e  ld   $3e
              de94 0063  ld   $63         ;03c9 POP
              de95 00ff  ld   $ff         ;03ca RET
              de96 002b  ld   $2b         ;03cb STW
              de97 004a  ld   $4a         ;03cb 'CheckCard'
              de98 00cd  ld   $cd         ;03cd DEF
              de99 00e3  ld   $e3
              de9a 0059  ld   $59         ;03cf LDI
              de9b 00ff  ld   $ff
              de9c 005e  ld   $5e         ;03d1 ST
              de9d 002a  ld   $2a
              de9e 0059  ld   $59         ;03d3 LDI
              de9f 002a  ld   $2a
              dea0 002b  ld   $2b         ;03d5 STW
              dea1 0024  ld   $24         ;03d5 '_sysArgs0'
              dea2 00e3  ld   $e3         ;03d7 ADDI
              dea3 0001  ld   $01
              dea4 002b  ld   $2b         ;03d9 STW
              dea5 0026  ld   $26         ;03d9 '_sysArgs2'
              dea6 0011  ld   $11         ;03db LDWI
              dea7 0015  ld   $15
              dea8 000b  ld   $0b
              dea9 002b  ld   $2b         ;03de STW
              deaa 0022  ld   $22         ;03de '_sysFn'
              deab 00b4  ld   $b4         ;03e0 SYS
              deac 00cc  ld   $cc
              dead 001a  ld   $1a         ;03e2 LD
              deae 002a  ld   $2a
              deaf 00ff  ld   $ff         ;03e4 RET
              deb0 002b  ld   $2b         ;03e5 STW
              deb1 0048  ld   $48         ;03e5 'SendOnesToCard'
              deb2 0093  ld   $93         ;03e7 INC
              deb3 001b  ld   $1b
              deb4 00ff  ld   $ff         ;03e9 RET
              deb5 0004  ld   $04         ;| RAM segment address (high byte first)
              deb6 0000  ld   $00         ;|
              deb7 00d5  ld   $d5         ;| Length (1..256)
              deb8 0011  ld   $11         ;0400 LDWI
              deb9 000f  ld   $0f
              deba 000b  ld   $0b
              debb 002b  ld   $2b         ;0403 STW
              debc 0022  ld   $22
              debd 0059  ld   $59         ;0405 LDI
              debe 0000  ld   $00
              debf 00b4  ld   $b4         ;0407 SYS
              dec0 00f6  ld   $f6
              dec1 0011  ld   $11         ;0409 LDWI
              dec2 0012  ld   $12
              dec3 000b  ld   $0b
              dec4 002b  ld   $2b         ;040c STW
              dec5 0022  ld   $22
              dec6 0059  ld   $59         ;040e LDI
              dec7 0000  ld   $00
              dec8 00b4  ld   $b4         ;0410 SYS
              dec9 00f8  ld   $f8
              deca 00b4  ld   $b4         ;0412 SYS
              decb 00f8  ld   $f8
              decc 00b4  ld   $b4         ;0414 SYS
              decd 00f8  ld   $f8
              dece 00b4  ld   $b4         ;0416 SYS
              decf 00f8  ld   $f8
              ded0 0011  ld   $11         ;0418 LDWI
              ded1 0058  ld   $58
              ded2 0001  ld   $01
              ded3 00cf  ld   $cf         ;041b CALL
              ded4 0046  ld   $46         ;041b 'SetupChannel'
              ded5 0011  ld   $11         ;041d LDWI
              ded6 0070  ld   $70
              ded7 0002  ld   $02
              ded8 00cf  ld   $cf         ;0420 CALL
              ded9 0046  ld   $46         ;0420 'SetupChannel'
              deda 0011  ld   $11         ;0422 LDWI
              dedb 0078  ld   $78
              dedc 0003  ld   $03
              dedd 00cf  ld   $cf         ;0425 CALL
              dede 0046  ld   $46         ;0425 'SetupChannel'
              dedf 0011  ld   $11         ;0427 LDWI
              dee0 007e  ld   $7e
              dee1 0004  ld   $04
              dee2 00cf  ld   $cf         ;042a CALL
              dee3 0046  ld   $46         ;042a 'SetupChannel'
              dee4 0011  ld   $11         ;042c LDWI
              dee5 0000  ld   $00
              dee6 0001  ld   $01
              dee7 002b  ld   $2b         ;042f STW
              dee8 0044  ld   $44         ;042f 'p'
              dee9 0011  ld   $11         ;0431 LDWI
              deea 0000  ld   $00
              deeb 0008  ld   $08
              deec 002b  ld   $2b         ;0434 STW
              deed 0034  ld   $34         ;0434 'q'
              deee 001a  ld   $1a         ;0436 LD
              deef 0035  ld   $35         ;0436 'q'+1
              def0 00f0  ld   $f0         ;0438 POKE
              def1 0044  ld   $44         ;0438 'p'
              def2 0093  ld   $93         ;043a INC
              def3 0044  ld   $44         ;043a 'p'
              def4 0059  ld   $59         ;043c LDI
              def5 0000  ld   $00
              def6 00f0  ld   $f0         ;043e POKE
              def7 0044  ld   $44         ;043e 'p'
              def8 0093  ld   $93         ;0440 INC
              def9 0044  ld   $44         ;0440 'p'
              defa 0093  ld   $93         ;0442 INC
              defb fe00  bra  ac          ;+-----------------------------------+
              defc fcfd  bra  $defd       ;|                                   |
              defd 1418  ld   $18,y       ;| Trampoline for page $de00 lookups |
              defe e006  jmp  y,$06       ;|                                   |
              deff c218  st   [$18]       ;+-----------------------------------+
              df00 0035  ld   $35         ;0442 'q'+1
              df01 0021  ld   $21         ;0444 LDW
              df02 0034  ld   $34         ;0444 'q'
              df03 0035  ld   $35         ;0446 BCC
              df04 004d  ld   $4d         ;0447 GT
              df05 0034  ld   $34
              df06 0011  ld   $11         ;0449 LDWI
              df07 0003  ld   $03
              df08 000b  ld   $0b
              df09 002b  ld   $2b         ;044c STW
              df0a 0022  ld   $22         ;044c '_sysFn'
              df0b 0059  ld   $59         ;044e LDI
              df0c 0020  ld   $20
              df0d 005e  ld   $5e         ;0450 ST
              df0e 0025  ld   $25
              df0f 0011  ld   $11         ;0452 LDWI
              df10 0000  ld   $00
              df11 0008  ld   $08
              df12 002b  ld   $2b         ;0455 STW
              df13 0044  ld   $44         ;0455 'p'
              df14 002b  ld   $2b         ;0457 STW
              df15 0026  ld   $26         ;0457 '_sysArgs2'
              df16 0059  ld   $59         ;0459 LDI
              df17 00a0  ld   $a0
              df18 005e  ld   $5e         ;045b ST
              df19 0024  ld   $24
              df1a 00b4  ld   $b4         ;045d SYS
              df1b 00f4  ld   $f4
              df1c 0011  ld   $11         ;045f LDWI
              df1d 0000  ld   $00
              df1e 0001  ld   $01
              df1f 0099  ld   $99         ;0462 ADDW
              df20 0044  ld   $44         ;0462 'p'
              df21 0035  ld   $35         ;0464 BCC
              df22 004d  ld   $4d         ;0465 GT
              df23 0053  ld   $53
              df24 001a  ld   $1a         ;0467 LD
              df25 002e  ld   $2e
              df26 0082  ld   $82         ;0469 ANDI
              df27 0080  ld   $80
              df28 0035  ld   $35         ;046b BCC
              df29 0072  ld   $72         ;046c NE
              df2a 0070  ld   $70
              df2b 005e  ld   $5e         ;046e ST
              df2c 002e  ld   $2e
              df2d 005e  ld   $5e         ;0470 ST
              df2e 002d  ld   $2d
              df2f 0059  ld   $59         ;0472 LDI
              df30 0009  ld   $09
              df31 005e  ld   $5e         ;0474 ST
              df32 002f  ld   $2f
              df33 0011  ld   $11         ;0476 LDWI
              df34 0014  ld   $14
              df35 0008  ld   $08
              df36 002b  ld   $2b         ;0479 STW
              df37 003e  ld   $3e         ;0479 'Pos'
              df38 00cd  ld   $cd         ;047b DEF
              df39 0089  ld   $89
              df3a 002a  ld   $2a         ;047d '*'
              df3b 002a  ld   $2a         ;047e '*'
              df3c 002a  ld   $2a         ;047f '*'
              df3d 0020  ld   $20         ;0480 ' '
              df3e 0047  ld   $47         ;0481 'G'
              df3f 0069  ld   $69         ;0482 'i'
              df40 0067  ld   $67         ;0483 'g'
              df41 0061  ld   $61         ;0484 'a'
              df42 0074  ld   $74         ;0485 't'
              df43 0072  ld   $72         ;0486 'r'
              df44 006f  ld   $6f         ;0487 'o'
              df45 006e  ld   $6e         ;0488 'n'
              df46 0020  ld   $20         ;0489 ' '
              df47 0000  ld   $00         ;048a 0
              df48 00cf  ld   $cf         ;048b CALL
              df49 0040  ld   $40         ;048b 'PrintS'
              df4a 00cf  ld   $cf         ;048d CALL
              df4b 003a  ld   $3a         ;048d 'CheckMemory'
              df4c 00cd  ld   $cd         ;048f DEF
              df4d 00b0  ld   $b0
              df4e 004b  ld   $4b         ;0491 'K'
              df4f 0020  ld   $20         ;0492 ' '
              df50 002a  ld   $2a         ;0493 '*'
              df51 002a  ld   $2a         ;0494 '*'
              df52 002a  ld   $2a         ;0495 '*'
              df53 0020  ld   $20         ;0496 ' '
              df54 000a  ld   $0a         ;0497 10
              df55 0020  ld   $20         ;0498 ' '
              df56 0054  ld   $54         ;0499 'T'
              df57 0054  ld   $54         ;049a 'T'
              df58 004c  ld   $4c         ;049b 'L'
              df59 0020  ld   $20         ;049c ' '
              df5a 006d  ld   $6d         ;049d 'm'
              df5b 0069  ld   $69         ;049e 'i'
              df5c 0063  ld   $63         ;049f 'c'
              df5d 0072  ld   $72         ;04a0 'r'
              df5e 006f  ld   $6f         ;04a1 'o'
              df5f 0063  ld   $63         ;04a2 'c'
              df60 006f  ld   $6f         ;04a3 'o'
              df61 006d  ld   $6d         ;04a4 'm'
              df62 0070  ld   $70         ;04a5 'p'
              df63 0075  ld   $75         ;04a6 'u'
              df64 0074  ld   $74         ;04a7 't'
              df65 0065  ld   $65         ;04a8 'e'
              df66 0072  ld   $72         ;04a9 'r'
              df67 0020  ld   $20         ;04aa ' '
              df68 0052  ld   $52         ;04ab 'R'
              df69 004f  ld   $4f         ;04ac 'O'
              df6a 004d  ld   $4d         ;04ad 'M'
              df6b 0076  ld   $76         ;04ae 'v'
              df6c 0058  ld   $58         ;04af 'X'
              df6d 0030  ld   $30         ;04b0 '0'
              df6e 0000  ld   $00         ;04b1 0
              df6f 00cf  ld   $cf         ;04b2 CALL
              df70 0040  ld   $40         ;04b2 'PrintS'
              df71 0011  ld   $11         ;04b4 LDWI
              df72 0000  ld   $00
              df73 000b  ld   $0b
              df74 002b  ld   $2b         ;04b7 STW
              df75 0022  ld   $22         ;04b7 '_sysFn'
              df76 0059  ld   $59         ;04b9 LDI
              df77 0001  ld   $01
              df78 00b4  ld   $b4         ;04bb SYS
              df79 00e7  ld   $e7
              df7a 0021  ld   $21         ;04bd LDW
              df7b 0030  ld   $30         ;04bd 'CtrlBits'
              df7c 00ad  ld   $ad         ;04bf PEEK
              df7d 0035  ld   $35         ;04c0 BCC
              df7e 003f  ld   $3f         ;04c1 EQ
              df7f 00c3  ld   $c3
              df80 00cf  ld   $cf         ;04c3 CALL
              df81 004a  ld   $4a         ;04c3 'CheckCard'
              df82 0011  ld   $11         ;04c5 LDWI
              df83 00aa  ld   $aa
              df84 00d9  ld   $d9
              df85 002b  ld   $2b         ;04c8 STW
              df86 0024  ld   $24         ;04c8 '_sysArgs0'
              df87 0011  ld   $11         ;04ca LDWI
              df88 0000  ld   $00
              df89 0002  ld   $02
              df8a 002b  ld   $2b         ;04cd STW
              df8b 001a  ld   $1a         ;04cd '_vLR'
              df8c 0059  ld   $59         ;04cf LDI
              df8d 00ad  ld   $ad
              df8e 002b  ld   $2b         ;04d1 STW
              df8f 0022  ld   $22         ;04d1 '_sysFn'
              df90 00b4  ld   $b4         ;04d3 SYS
              df91 00e3  ld   $e3
              df92 0000  ld   $00         ;End of Core/Reset_vX0.gcl, size 715
sys_ReadRomDir:
              df93 f099  beq  .sysDir#20
              df94 1024  ld   $24,x
              df95 1600  ld   ac,y
              df96 0118  ld   [$18]
              df97 a00e  suba $0e
              df98 e200  jmp  y,ac
.sysDir#20:   df99 1400  ld   $00,y
              df9a 009e  ld   $9e
              df9b 14df  ld   $df,y
              df9c e200  jmp  y,ac
              df9d 1400  ld   $00,y
.sysDir#25:   df9e dc52  st   $52,[y,x++] ;'R'
              df9f dc65  st   $65,[y,x++] ;'e'
              dfa0 dc73  st   $73,[y,x++] ;'s'
              dfa1 dc65  st   $65,[y,x++] ;'e'
              dfa2 dc74  st   $74,[y,x++] ;'t'
              dfa3 dc00  st   $00,[y,x++] ;'\x00'
              dfa4 dc00  st   $00,[y,x++] ;'\x00'
              dfa5 dc00  st   $00,[y,x++] ;'\x00'
              dfa6 00c8  ld   $c8
              dfa7 c218  st   [$18]
              dfa8 00dc  ld   $dc
              dfa9 14df  ld   $df,y
              dfaa e0ac  jmp  y,$ac
              dfab c219  st   [$19]
.sysDir#39:   dfac 1403  ld   $03,y
              dfad e0cb  jmp  y,$cb
              dfae 00ea  ld   $ea
              dfaf 0200  nop              ;76 fillers
              dfb0 0200  nop
              dfb1 0200  nop
              * 76 times
              dffb fe00  bra  ac          ;+-----------------------------------+
              dffc fcfd  bra  $dffd       ;|                                   |
              dffd 1418  ld   $18,y       ;| Trampoline for page $df00 lookups |
              dffe e006  jmp  y,$06       ;|                                   |
              dfff c218  st   [$18]       ;+-----------------------------------+
              e000
