* source: Core/ROMvX0.asm.py
                                          163   enableListing()
                                          164   #-----------------------------------------------------------------------
                                          165   #
                                          166   #  Start of core
                                          167   #
                                          168   #-----------------------------------------------------------------------
                                          169
                                          170   # Pre-loading the formal interface as a way to get warnings when
                                          171   # accidentally redefined with a different value
                                          172   loadBindings('ROMvX0_interface.json')
                                          173   loadBindings('Core/interface-dev.json') # Provisional values for DEVROM
                                          174
                                          175   # Gigatron clock
                                          176   cpuClock = 6.250e+06
                                          177
                                          178   # Output pin assignment for VGA
                                          179   R, G, B, hSync, vSync = 1, 4, 16, 64, 128
                                          180   syncBits = hSync+vSync # Both pulses negative
                                          181
                                          182   # When the XOUT register is in the circuit, the rising edge triggers its update.
                                          183   # The loop can therefore not be agnostic to the horizontal pulse polarity.
                                          184   assert syncBits & hSync != 0
                                          185
                                          186   # VGA 640x480 defaults (to be adjusted below!)
                                          187   vFront = 10     # Vertical front porch
                                          188   vPulse = 2      # Vertical sync pulse
                                          189   vBack  = 33     # Vertical back porch
                                          190   vgaLines = vFront + vPulse + vBack + 480
                                          191   vgaClock = 25.175e+06
                                          192
                                          193   # Video adjustments for Gigatron
                                          194   # 1. Our clock is (slightly) slower than 1/4th VGA clock. Not all monitors will
                                          195   #    accept the decreased frame rate, so we restore the frame rate to above
                                          196   #    minimum 59.94 Hz by cutting some lines from the vertical front porch.
                                          197   vFrontAdjust = vgaLines - int(4 * cpuClock / vgaClock * vgaLines)
                                          198   vFront -= vFrontAdjust
                                          199   # 2. Extend vertical sync pulse so we can feed the game controller the same
                                          200   #    signal. This is needed for controllers based on the 4021 instead of 74165
                                          201   vPulseExtension = max(0, 8-vPulse)
                                          202   vPulse += vPulseExtension
                                          203   # 3. Borrow these lines from the back porch so the refresh rate remains
                                          204   #    unaffected
                                          205   vBack -= vPulseExtension
                                          206
                                          207   # Start value of vertical blank counter
                                          208   videoYline0 = 1-2*(vFront+vPulse+vBack-2)
                                          209
                                          210   # Mismatch between video lines and sound channels
                                          211   soundDiscontinuity = (vFront+vPulse+vBack) % 4
                                          212
                                          213   # QQVGA resolution
                                          214   qqVgaWidth      = 160
                                          215   qqVgaHeight     = 120
                                          216
                                          217   # Game controller bits (actual controllers in kit have negative output)
                                          218   # +----------------------------------------+
                                          219   # |       Up                        B*     |
                                          220   # |  Left    Right               B     A*  |
                                          221   # |      Down      Select Start     A      |
                                          222   # +----------------------------------------+ *=Auto fire
                                          223   buttonRight     = 1
                                          224   buttonLeft      = 2
                                          225   buttonDown      = 4
                                          226   buttonUp        = 8
                                          227   buttonStart     = 16
                                          228   buttonSelect    = 32
                                          229   buttonB         = 64
                                          230   buttonA         = 128
                                          231
                                          232   #-----------------------------------------------------------------------
                                          233   #
                                          234   #  RAM page 0: zero-page variables
                                          235   #
                                          236   #-----------------------------------------------------------------------
                                          237
                                          238   # Memory size in pages from auto-detect
                                          239   memSize         = zpByte()
                                          240
                                          241   # Active interpreter page, swapped with channel, so that we can do a one
                                          242   # instruction vCpuSelect reset, i.e. st(vCpuSelect,[vCpuSelect])
                                          243   vCpuSelect      = zpByte()
                                          244
                                          245   # Next sound sample being synthesized
                                          246   sample          = zpByte()
                                          247   # To save one instruction in the critical inner loop, `sample' is always
                                          248   # reset with its own address instead of, for example, the value 0. Compare:
                                          249   # 1 instruction reset
                                          250   #       st sample,[sample]
                                          251   # 2 instruction reset:
                                          252   #       ld 0
                                          253   #       st [sample]
                                          254   # The difference is not audible. This is fine when the reset/address
                                          255   # value is low and doesn't overflow with 4 channels added to it.
                                          256   # There is an alternative, but it requires pull-down diodes on the data bus:
                                          257   #       st [sample],[sample]
                                          258   assert 4*63 + sample < 256
                                          259   # We pin this reset/address value to 3, so `sample' swings from 3 to 255
                                          260   assert sample == 3
                                          261
                                          262   # Former bootCount and bootCheck (<= ROMv3)
                                          263   vSPH             = zpByte()
                                          264   #zpReserved      = zpByte() # Recycled and still unused. Candidate future uses:
                                          265                              # - Video driver high address (for alternative video modes)
                                          266                              # - v6502: ADH offset ("MMU")
                                          267                              # - v8080: ???
                                          268
                                          269   # The current channel number for sound generation. Advanced every scan line
                                          270   # and independent of the vertical refresh to maintain constant oscillation.
                                          271   channel         = zpByte()
                                          272
                                          273   # Entropy harvested from SRAM startup and controller input
                                          274   entropy         = zpByte(3)
                                          275
                                          276   # Visible video
                                          277   videoY          = zpByte() # Counts up from 0 to 238 in steps of 2
                                          278                              # Counts up (and is odd) during vertical blank
                                          279   videoModeB      = zpByte() # Handler for every 2nd line (pixel burst or vCPU)
                                          280   videoModeC      = zpByte() # Handler for every 3rd line (pixel burst or vCPU)
                                          281   videoModeD      = zpByte() # Handler for every 4th line (pixel burst or vCPU)
                                          282
                                          283   nextVideo       = zpByte() # Jump offset to scan line handler (videoA, B, C...)
                                          284   videoPulse      = nextVideo # Used for pulse width modulation
                                          285
                                          286   # Frame counter is good enough as system clock
                                          287   frameCount      = zpByte(1)
                                          288
                                          289   # Serial input (game controller)
                                          290   serialRaw       = zpByte() # New raw serial read
                                          291   serialLast      = zpByte() # Previous serial read
                                          292   buttonState     = zpByte() # Clearable button state
                                          293   resetTimer      = zpByte() # After 2 seconds of holding 'Start', do a soft reset
                                          294                              # XXX move to page 1 to free up space
                                          295
                                          296   # Extended output (blinkenlights in bit 0:3 and audio in bit 4:7). This
                                          297   # value must be present in AC during a rising hSync edge. It then gets
                                          298   # copied to the XOUT register by the hardware. The XOUT register is only
                                          299   # accessible in this indirect manner because it isn't part of the core
                                          300   # CPU architecture.
                                          301   xout            = zpByte()
                                          302   xoutMask        = zpByte() # The blinkenlights and sound on/off state
                                          303
                                          304   # vCPU interpreter
                                          305   vTicks          = zpByte()  # Interpreter ticks are units of 2 clocks
                                          306   vPC             = zpByte(2) # Interpreter program counter, points into RAM
                                          307   vAC             = zpByte(2) # Interpreter accumulator, 16-bits
                                          308   vLR             = zpByte(2) # Return address, for returning after CALL
                                          309   vSP             = zpByte(1) # Stack pointer
                                          310   vTmp            = zpByte()
                                          311   vReturn         = zpByte()  # Return into video loop (in page of vBlankStart)
                                          312
                                          313   # Scratch
                                          314   frameX          = zpByte() # Starting byte within page
                                          315   frameY          = zpByte() # Page of current pixel line (updated by videoA)
                                          316
                                          317   # Vertical blank (reuse some variables used in the visible part)
                                          318   videoSync0      = frameX   # Vertical sync type on current line (0xc0 or 0x40)
                                          319   videoSync1      = frameY   # Same during horizontal pulse (0x80 or 0x00)
                                          320
                                          321   # Versioning for GT1 compatibility
                                          322   # Please refer to Docs/GT1-files.txt for interpreting this variable
                                          323   romType         = zpByte(1)
                                          324
                                          325   # The low 3 bits are repurposed to select the actively updated sound channels.
                                          326   # Valid bit combinations are:
                                          327   #  xxxxx011     Default after reset: 4 channels (page 1,2,3,4)
                                          328   #  xxxxx001     2 channels at double update rate (page 1,2)
                                          329   #  xxxxx000     1 channel at quadruple update rate (page 1)
                                          330   # The main application for this is to free up the high bytes of page 2,3,4.
                                          331   channelMask = symbol('channelMask_v4')
                                          332   assert romType == channelMask
                                          333
                                          334   # SYS function arguments and results/scratch
                                          335   sysFn           = zpByte(2)
                                          336   sysArgs         = zpByte(8)
                                          337
                                          338   # Play sound if non-zero, count down and stop sound when zero
                                          339   soundTimer      = zpByte()
                                          340
                                          341   # Fow now the LED state machine itself is hard-coded in the program ROM
                                          342   ledTimer        = zpByte() # Number of ticks until next LED change
                                          343   ledState_v2     = zpByte() # Current LED state
                                          344   ledTempo        = zpByte() # Next value for ledTimer after LED state change
                                          345
                                          346   # All bytes above userVars, except 0x80, are potentially usable by user code
                                          347   # that refrains from using ROM facilities introduced since ROMv5a.
                                          348   userVars        = zpByte(0)
                                          349
                                          350   # [0x30-0x35]
                                          351   # Saved vCPU context during vIRQ (since ROMv5a)
                                          352   # Code that uses vCPU interrupts should not use these locations.
                                          353   # area register save area
                                          354   vIrqSave        = zpByte(6)
                                          355   userVars1       = zpByte(0)
                                          356
                                          357   # [0x80]
                                          358   # Constant 0x01.
                                          359   zpReset(0x80)
                                          360   oneConst        = zpByte(1)
                                          361   userVars2       = zpByte(0)
                                          362
                                          363   # [0x82-0xB7]
                                          364   # Scratch for certain ops and sys calls introduced in ROMvX0.
                                          365   # Pending more specific information to be inserted here.
                                          366   zpReset(0x82)
                                          367   vX0Scratch      = zpByte(0xB8-0x82)
                                          368
                                          369   # [0xB8-0xBF]
                                          370   # State for ROMvX0 SYS calls with vCPU callbacks.
                                          371   # Pending more specific information to be inserted here.
                                          372   vX0State        = zpByte(0xC0-0xB8)
                                          373
                                          374   # [0xC0-0xCF]
                                          375   # Fixed locations for ROMvX0 opcodes that operate on long and floats.
                                          376   # Pending more specific information to be inserted here.
                                          377   vFAC_reserved   = zpByte(4)     # reserved for float accumulator
                                          378   vLAC            = zpByte(4)     # long accumulator/continued float accumulator
                                          379   vTmpL           = zpByte(4)     # long scratch register
                                          380   vDST            = zpByte(2)     # destination address for copy opcodes.
                                          381   vTmpW           = zpByte(2)     # word scratch register
                                          382
                                          383
                                          384
                                          385   #-----------------------------------------------------------------------
                                          386   #
                                          387   #  RAM page 1: video line table
                                          388   #
                                          389   #-----------------------------------------------------------------------
                                          390
                                          391   # Byte 0-239 define the video lines
                                          392   videoTable      = 0x0100 # Indirection table: Y[0] dX[0]  ..., Y[119] dX[119]
                                          393
                                          394   vReset          = 0x01f0
                                          395   vIRQ_v5         = 0x01f6
                                          396   ctrlBits        = 0x01f8
                                          397   videoTop_v5     = 0x01f9 # Number of skip lines
                                          398
                                          399   # Highest bytes are for sound channel variables
                                          400   wavA = 250      # Waveform modulation with `adda'
                                          401   wavX = 251      # Waveform modulation with `xora'
                                          402   keyL = 252      # Frequency low 7 bits (bit7 == 0)
                                          403   keyH = 253      # Frequency high 8 bits
                                          404   oscL = 254      # Phase low 7 bits
                                          405   oscH = 255      # Phase high 8 bits
                                          406
                                          407   #-----------------------------------------------------------------------
                                          408   #  Memory layout
                                          409   #-----------------------------------------------------------------------
                                          410
                                          411   userCode = 0x0200       # Application vCPU code
                                          412   soundTable = 0x0700     # Wave form tables (doubles as right-shift-2 table)
                                          413   screenMemory = 0x0800   # Default start of screen memory: 0x0800 to 0x7fff
                                          414
                                          415   #-----------------------------------------------------------------------
                                          416   #  Application definitions
                                          417   #-----------------------------------------------------------------------
                                          418
                                          419   maxTicks = 30//2                 # Duration of vCPU's slowest virtual opcode (ticks)
                                          420   minTicks = 14//2                 # vcPU's fastest instruction
                                          421   v6502_maxTicks = 38//2           # Max duration of v6502 processing phase (ticks)
                                          422
                                          423   runVcpu_overhead = 5            # Caller overhead (cycles)
                                          424   vCPU_overhead = 9               # Callee overhead of jumping in and out (cycles)
                                          425   v6502_overhead = 11             # Callee overhead for v6502 (cycles)
                                          426
                                          427   v6502_adjust = (v6502_maxTicks - maxTicks) + (v6502_overhead - vCPU_overhead)//2
                                          428   assert v6502_adjust >= 0        # v6502's overhead is a bit more than vCPU
                                          429
                                          430   def runVcpu(n, ref=None, returnTo=None):
                                          431     """Macro to run interpreter for exactly n cycles. Returns 0 in AC.
                                          432
                                          433     - `n' is the number of available Gigatron cycles including overhead.
                                          434       This is converted into interpreter ticks and takes into account
                                          435       the vCPU calling overheads. A `nop' is inserted when necessary
                                          436       for alignment between cycles and ticks.
                                          437     - `returnTo' is where program flow continues after return. If not set
                                          438        explicitely, it will be the first instruction behind the expansion.
                                          439     - If another interpreter than vCPU is active (v6502...), that one
                                          440       must adjust for the timing differences, because runVcpu wouldn't know."""
                                          441
                                          442     overhead = runVcpu_overhead + vCPU_overhead
                                          443     if returnTo == 0x100:         # Special case for videoZ
                                          444       overhead -= 2
                                          445
                                          446     if n is None:
                                          447       # (Clumsily) create a maximum time slice, corresponding to a vTicks
                                          448       # value of 127 (giving 282 cycles). A higher value doesn't work because
                                          449       # then SYS functions that just need 28 cycles (0 excess) won't start.
                                          450       n = (127 + maxTicks) * 2 + overhead
                                          451
                                          452     n -= overhead
                                          453     assert n > 0
                                          454
                                          455     if n % 2 == 1:
                                          456       nop()                       # Tick alignment
                                          457       n -= 1
                                          458     assert n % 2 == 0
                                          459
                                          460     print('runVcpu at $%04x net cycles %3s info %s' % (pc(), n, ref))
                                          461
                                          462     if returnTo != 0x100:
                                          463       if returnTo is None:
                                          464         returnTo = pc() + 5       # Next instruction
                                          465       ld(lo(returnTo))            #0
                                          466       st([vReturn])               #1
                                          467
                                          468     n //= 2
                                          469     n -= maxTicks                 # First instruction always runs
                                          470     assert n < 128
                                          471     assert n >= v6502_adjust
                                          472
                                          473     ld([vCpuSelect],Y)            #2
                                          474     jmp(Y,'ENTER')                #3
                                          475     ld(n)                         #4
                                          476   assert runVcpu_overhead ==       5
                                          477
                                          478   #-----------------------------------------------------------------------
                                          479   #       v6502 definitions
                                          480   #-----------------------------------------------------------------------
                                          481
                                          482   # Registers are zero page variables
                                          483   v6502_PC        = vLR           # Program Counter
                                          484   v6502_PCL       = vLR+0         # Program Counter Low
                                          485   v6502_PCH       = vLR+1         # Program Counter High
                                          486   v6502_S         = vSP           # Stack Pointer (kept as "S+1")
                                          487   v6502_A         = vAC+0         # Accumulator
                                          488   v6502_BI        = vAC+1         # B Input Register (used by SBC)
                                          489   v6502_ADL       = sysArgs+0     # Low Address Register
                                          490   v6502_ADH       = sysArgs+1     # High Address Register
                                          491   v6502_IR        = sysArgs+2     # Instruction Register
                                          492   v6502_P         = sysArgs+3     # Processor Status Register (V flag in bit 7)
                                          493   v6502_Qz        = sysArgs+4     # Quick Status Register for Z flag
                                          494   v6502_Qn        = sysArgs+5     # Quick Status Register for N flag
                                          495   v6502_X         = sysArgs+6     # Index Register X
                                          496   v6502_Y         = sysArgs+7     # Index Register Y
                                          497   v6502_Tmp       = vTmp          # Scratch (may be clobbered outside v6502)
                                          498
                                          499   # MOS 6502 definitions for P register
                                          500   v6502_Cflag = 1                 # Carry Flag (unsigned overflow)
                                          501   v6502_Zflag = 2                 # Zero Flag (all bits zero)
                                          502   v6502_Iflag = 4                 # Interrupt Enable Flag (1=Disable)
                                          503   v6502_Dflag = 8                 # Decimal Enable Flag (aka BCD mode, 1=Enable)
                                          504   v6502_Bflag = 16                # Break (or PHP) Instruction Flag
                                          505   v6502_Uflag = 32                # Unused (always 1)
                                          506   v6502_Vflag = 64                # Overflow Flag (signed overflow)
                                          507   v6502_Nflag = 128               # Negative Flag (bit 7 of result)
                                          508
                                          509   # In emulation it is much faster to keep the V flag in bit 7
                                          510   # This can be corrected when importing/exporting with PHP, PLP, etc
                                          511   v6502_Vemu = 128
                                          512
                                          513   # On overflow:
                                          514   #       """Overflow is set if two inputs with the same sign produce
                                          515   #          a result with a different sign. Otherwise it is clear."""
                                          516   # Formula (without carry/borrow in!):
                                          517   #       (A ^ (A+B)) & (B ^ (A+B)) & 0x80
                                          518   # References:
                                          519   #       http://www.righto.com/2012/12/the-6502-overflow-flag-explained.html
                                          520   #       http://6502.org/tutorials/vflag.html
                                          521
                                          522   # Memory layout
                                          523   v6502_Stack     = 0x0000        # 0x0100 is already used in the Gigatron
                                          524   #v6502_NMI      = 0xfffa
                                          525   #v6502_RESET    = 0xfffc
                                          526   #v6502_IRQ      = 0xfffe
                                          527
                                          528   #-----------------------------------------------------------------------
                                          529   #
                                          530   #  $0000 ROM page 0: Boot
                                          531   #
                                          532   #-----------------------------------------------------------------------
                                          533
                                          534   align(0x100, size=0x80)
                                          535
                                          536   # Give a first sign of life that can be checked with a voltmeter
              address
              |    encoding
              |    |     instruction
              |    |     |    operands
              |    |     |    |
              V    V     V    V
              0000 0000  ld   $00         537   ld(0b0000)                      # LEDs |OOOO|
              0001 1880  ld   $80,out     538   ld(syncBits^hSync,OUT)          # Prepare XOUT update, hSync goes down, RGB to black
              0002 18c0  ld   $c0,out     539   ld(syncBits,OUT)                # hSync goes up, updating XOUT
                                          540
                                          541   # Setup I/O and RAM expander
              0003 c17f  ctrl $7f         542   ctrl(0b01111111)                # Expansion board: (1) reset signal.
              0004 c17c  ctrl $7c         543   ctrl(0b01111100)                # (2) disable SPI slaves, enable RAM bank 1
                                          544   #      ^^^^^^^^
                                          545   #      |||||||`-- SCLK
                                          546   #      ||||||`--- Not connected
                                          547   #      |||||`---- /SS0
                                          548   #      ||||`----- /SS1
                                          549   #      |||`------ /SS2
                                          550   #      ||`------- /SS3
                                          551   #      |`-------- B0
                                          552   #      `--------- B1
                                          553   # bit15 --------- MOSI = 0
                                          554
                                          555   # Simple RAM test and size check by writing to [1<<n] and see if [0] changes or not.
              0005 0001  ld   $01         556   ld(1)                           # Quick RAM test and count
                                          557   label('.countMem0')
.countMem0:   0006 d601  st   [$01],y     558   st([memSize],Y)                 # Store in RAM and load AC in Y
              0007 00ff  ld   $ff         559   ld(255)
              0008 6900  xora [y,$00]     560   xora([Y,0])                     # Invert value from memory
              0009 ca00  st   [y,$00]     561   st([Y,0])                       # Test RAM by writing the new value
              000a c200  st   [$00]       562   st([0])                         # Copy result in [0]
              000b 6900  xora [y,$00]     563   xora([Y,0])                     # Read back and compare if written ok
              000c ec0c  bne  $000c       564   bne(pc())                       # Loop forever on RAM failure here
              000d 00ff  ld   $ff         565   ld(255)
              000e 6900  xora [y,$00]     566   xora([Y,0])                     # Invert memory value again
              000f ca00  st   [y,$00]     567   st([Y,0])                       # To restore original value
              0010 6100  xora [$00]       568   xora([0])                       # Compare with inverted copy
              0011 f015  beq  .countMem1  569   beq('.countMem1')               # If equal, we wrapped around
              0012 0101  ld   [$01]       570   ld([memSize])
              0013 fc06  bra  .countMem0  571   bra('.countMem0')               # Loop to test next address line
              0014 8200  adda ac          572   adda(AC)                        # Executes in the branch delay slot!
                                          573   label('.countMem1')
                                          574
                                          575   # Momentarily wait to allow for debouncing of the reset switch by spinning
                                          576   # roughly 2^15 times at 2 clocks per loop: 6.5ms@10MHz to 10ms@6.3MHz
                                          577   # Real-world switches normally bounce shorter than that.
                                          578   # "[...] 16 switches exhibited an average 1557 usec of bouncing, with,
                                          579   #  as I said, a max of 6200 usec" (From: http://www.ganssle.com/debouncing.htm)
                                          580   # Relevant for the breadboard version, as the kit doesn't have a reset switch.
                                          581
.countMem1:   0015 00ff  ld   $ff         582   ld(255)                         # Debounce reset button
                                          583   label('.debounce')
.debounce:    0016 c200  st   [$00]       584   st([0])
              0017 ec17  bne  $0017       585   bne(pc())
              0018 a001  suba $01         586   suba(1)                         # Branch delay slot
              0019 0100  ld   [$00]       587   ld([0])
              001a ec16  bne  .debounce   588   bne('.debounce')
              001b a001  suba $01         589   suba(1)                         # Branch delay slot
                                          590
                                          591   # Update LEDs (memory is present and counted, reset is stable)
              001c 0001  ld   $01         592   ld(0b0001)                      # LEDs |*OOO|
              001d 1880  ld   $80,out     593   ld(syncBits^hSync,OUT)
              001e 18c0  ld   $c0,out     594   ld(syncBits,OUT)
                                          595
                                          596   # Scan the entire RAM space to collect entropy for a random number generator.
                                          597   # The 16-bit address space is scanned, even if less RAM was detected.
              001f 0000  ld   $00         598   ld(0)                           # Collect entropy from RAM
              0020 d218  st   [$18],x     599   st([vAC+0],X)
              0021 d619  st   [$19],y     600   st([vAC+1],Y)
                                          601   label('.initEnt0')
.initEnt0:    0022 0106  ld   [$06]       602   ld([entropy+0])
              0023 f426  bge  .initEnt1   603   bpl('.initEnt1')
              0024 8d00  adda [y,x]       604   adda([Y,X])
              0025 60bf  xora $bf         605   xora(191)
                                          606   label('.initEnt1')
.initEnt1:    0026 c206  st   [$06]       607   st([entropy+0])
              0027 0107  ld   [$07]       608   ld([entropy+1])
              0028 f42b  bge  .initEnt2   609   bpl('.initEnt2')
              0029 8106  adda [$06]       610   adda([entropy+0])
              002a 60c1  xora $c1         611   xora(193)
                                          612   label('.initEnt2')
.initEnt2:    002b c207  st   [$07]       613   st([entropy+1])
              002c 8108  adda [$08]       614   adda([entropy+2])
              002d c208  st   [$08]       615   st([entropy+2])
              002e 0118  ld   [$18]       616   ld([vAC+0])
              002f 8001  adda $01         617   adda(1)
              0030 ec22  bne  .initEnt0   618   bne('.initEnt0')
              0031 d218  st   [$18],x     619   st([vAC+0],X)
              0032 0119  ld   [$19]       620   ld([vAC+1])
              0033 8001  adda $01         621   adda(1)
              0034 ec22  bne  .initEnt0   622   bne('.initEnt0')
              0035 d619  st   [$19],y     623   st([vAC+1],Y)
                                          624
                                          625   # Update LEDs
              0036 0003  ld   $03         626   ld(0b0011)                      # LEDs |**OO|
              0037 1880  ld   $80,out     627   ld(syncBits^hSync,OUT)
              0038 18c0  ld   $c0,out     628   ld(syncBits,OUT)
                                          629
                                          630   # vCPU reset handler
              0039 00ee  ld   $ee         631   ld((vReset&255)-2)              # Setup vCPU reset handler
              003a c216  st   [$16]       632   st([vPC])
              003b 9002  adda $02,x       633   adda(2,X)
              003c 0001  ld   $01         634   ld(vReset>>8)
              003d d617  st   [$17],y     635   st([vPC+1],Y)
              003e dc59  st   $59,[y,x++] 636   st('LDI',             [Y,Xpp])
              003f dc5f  st   $5f,[y,x++] 637   st('SYS_Reset_88',    [Y,Xpp])
              0040 dc2b  st   $2b,[y,x++] 638   st('STW',             [Y,Xpp])
              0041 dc22  st   $22,[y,x++] 639   st(sysFn,             [Y,Xpp])
              0042 dcb4  st   $b4,[y,x++] 640   st('SYS',             [Y,Xpp])  # SYS -> SYS_Reset_88 -> SYS_Exec_88
              0043 dce3  st   $e3,[y,x++] 641   st(256-88//2+maxTicks,[Y,Xpp])
              0044 dc00  st   $00,[y,x++] 642   st(0,                 [Y,Xpp])  # vIRQ_v5: Disable interrupts
              0045 dc00  st   $00,[y,x++] 643   st(0,                 [Y,Xpp])  # vIRQ_v5
              0046 dcfc  st   $fc,[y,x++] 644   st(0b11111100,        [Y,Xpp])  # Control register
              0047 dc00  st   $00,[y,x++] 645   st(0,                 [Y,Xpp])  # videoTop
                                          646
              0048 0002  ld   $02         647   ld(hi('ENTER'))                 # Active interpreter (vCPU,v6502) = vCPU
              0049 c202  st   [$02]       648   st([vCpuSelect])
                                          649
              004a 00ff  ld   $ff         650   ld(255)                         # Setup serial input
              004b c20e  st   [$0e]       651   st([frameCount])
              004c c20f  st   [$0f]       652   st([serialRaw])
              004d c210  st   [$10]       653   st([serialLast])
              004e c211  st   [$11]       654   st([buttonState])
              004f c212  st   [$12]       655   st([resetTimer])                # resetTimer<0 when entering Main.gcl
                                          656
              0050 0007  ld   $07         657   ld(0b0111)                      # LEDs |***O|
              0051 1880  ld   $80,out     658   ld(syncBits^hSync,OUT)
              0052 18c0  ld   $c0,out     659   ld(syncBits,OUT)
                                          660
              0053 0000  ld   $00         661   ld(0)
              0054 c200  st   [$00]       662   st([0])                         # Carry lookup ([0x80] in 1st line of vBlank)
              0055 c205  st   [$05]       663   st([channel])
              0056 c22c  st   [$2c]       664   st([soundTimer])
                                          665
              0057 000f  ld   $0f         666   ld(0b1111)                      # LEDs |****|
              0058 1880  ld   $80,out     667   ld(syncBits^hSync,OUT)
              0059 18c0  ld   $c0,out     668   ld(syncBits,OUT)
              005a c213  st   [$13]       669   st([xout])                      # Setup for control by video loop
              005b c214  st   [$14]       670   st([xoutMask])
                                          671
              005c 1401  ld   $01,y       672   ld(hi('startVideo'),Y)          # Enter video loop at vertical blank
              005d e003  jmp  y,$03       673   jmp(Y,'startVideo')
              005e c22e  st   [$2e]       674   st([ledState_v2])               # Setting to 1..126 means "stopped"
                                          675
                                          676   #-----------------------------------------------------------------------
                                          677   # Extension SYS_Reset_88: Soft reset
                                          678   #-----------------------------------------------------------------------
                                          679
                                          680   # SYS_Reset_88 initiates an immediate Gigatron reset from within the vCPU.
                                          681   # The reset sequence itself is mostly implemented in GCL by Reset.gcl,
                                          682   # which must first be loaded into RAM. But as that takes more than 1 scanline,
                                          683   # some vCPU bootstrapping code gets loaded with SYS_Exec_88.
                                          684   # !!! This function was REMOVED from interface.json
                                          685   # !!! Better use vReset as generic entry point for soft reset
                                          686
                                          687   # ROM type (see also Docs/GT1-files.txt)
                                          688   romTypeValue = symbol('romTypeValue_ROMvX0')
                                          689
                                          690   label('SYS_Reset_88')
                                          691   assert pc()>>8 == 0
                                          692   assert (romTypeValue & 7) == 0
SYS_Reset_88: 005f 141f  ld   $1f,y       693   ld(hi('sys_Reset_88'),Y)        #15
              0060 e041  jmp  y,$41       694   jmp(Y,'sys_Reset_88')           #16
              0061 0080  ld   $80         695   ld(romTypeValue)                #17 Set ROM type/version and clear channel mask
                                          696
                                          697
                                          698   # STPX implementation
                                          699   label('stpx#13')
stpx#13:      0062 0500  ld   [x]         700   ld([X])                         #13,
              0063 c21d  st   [$1d]       701   st([vTmp])                      #14,
              0064 de00  st   [y,x++]     702   st([Y,Xpp])                     #15, relies on being in page 0!
              0065 0500  ld   [x]         703   ld([X])                         #16, y
              0066 8500  adda [x]         704   adda([X])                       #17, y*2
              0067 1200  ld   ac,x        705   ld(AC,X)                        #18,
              0068 1401  ld   $01,y       706   ld(1,Y)                         #19, Y,X = 0x0100 + 2*y, (0 >= y <= 127)
              0069 0d00  ld   [y,x]       707   ld([Y,X])                       #20,
              006a 1600  ld   ac,y        708   ld(AC,Y)                        #21, Y = [Y,X]
              006b 112b  ld   [$2b],x     709   ld([sysArgs+7],X)               #22,
              006c 0500  ld   [x]         710   ld([X])                         #23, colour
              006d 111d  ld   [$1d],x     711   ld([vTmp],X)                    #24,
              006e ce00  st   [y,x]       712   st([Y,X])                       #25, [Y,X] = colour
              006f 1403  ld   $03,y       713   ld(hi('NEXTY'),Y)               #26,
              0070 e000  jmp  y,$00       714   jmp(Y,'NEXTY')                  #27,
              0071 00f1  ld   $f1         715   ld(-30/2)                       #28,
                                          716
                                          717
              0072 0200  nop              718   align(0x80, size=0x80)
              0073 0200  nop
              0074 0200  nop
              * 14 times
                                          719   assert pc() == 0x80
                                          720
                                          721
                                          722   # ADDW moved to page0 to free up room for more instruction slots in page3
                                          723   # This implemetation of ADDW relies on Y=0 and hence cannot be dispatched from any other page
                                          724   label('addw#13')
addw#13:      0080 0118  ld   [$18]       725   ld([vAC])                       #13 Low byte
              0081 c21d  st   [$1d]       726   st([vTmp])                      #14 Store low result
              0082 8500  adda [x]         727   adda([X])                       #15
              0083 c218  st   [$18]       728   st([vAC])                       #16
              0084 e88f  blt  .addw#19    729   bmi('.addw#19')                 #17 Now figure out if there was a carry
              0085 0500  ld   [x]         730   ld([X])                         #18
              0086 de00  st   [y,x++]     731   st([Y,Xpp])                     #29
              0087 411d  ora  [$1d]       732   ora([vTmp])                     #20
              0088 e898  blt  .addw#23    733   bmi('.addw#23')                 #21 If Carry == 1
              0089 0500  ld   [x]         734   ld([X])                         #22
              008a 8119  adda [$19]       735   adda([vAC+1])                   #23
              008b c219  st   [$19]       736   st([vAC+1])                     #24 Store high result
              008c 1403  ld   $03,y       737   ld(hi('REENTER'),Y)             #25
              008d e0cb  jmp  y,$cb       738   jmp(Y,'REENTER')                #26
              008e 00f1  ld   $f1         739   ld(-30/2)                       #27
                                          740   label('.addw#19')
.addw#19:     008f de00  st   [y,x++]     741   st([Y,Xpp])                     #19
              0090 211d  anda [$1d]       742   anda([vTmp])                    #20
              0091 e898  blt  .addw#23    743   bmi('.addw#23')                 #21 If Carry == 1
              0092 0500  ld   [x]         744   ld([X])                         #22
              0093 8119  adda [$19]       745   adda([vAC+1])                   #23
              0094 c219  st   [$19]       746   st([vAC+1])                     #24 Store high result
              0095 1403  ld   $03,y       747   ld(hi('REENTER'),Y)             #25
              0096 e0cb  jmp  y,$cb       748   jmp(Y,'REENTER')                #26
              0097 00f1  ld   $f1         749   ld(-30/2)                       #27
                                          750   label('.addw#23')
.addw#23:     0098 8001  adda $01         751   adda(1)                         #23
              0099 8119  adda [$19]       752   adda([vAC+1])                   #24
              009a c219  st   [$19]       753   st([vAC+1])                     #25 Store high result
              009b 1403  ld   $03,y       754   ld(hi('NEXTY'),Y)               #26
              009c e000  jmp  y,$00       755   jmp(Y,'NEXTY')                  #27
              009d 00f1  ld   $f1         756   ld(-30/2)                       #28
                                          757
                                          758
                                          759   #-----------------------------------------------------------------------
                                          760   # Placeholders for future SYS functions. This works as a kind of jump
                                          761   # table. The indirection allows SYS implementations to be moved around
                                          762   # between ROM versions, at the expense of 2 clock cycles (or 1). When
                                          763   # the function is not present it just acts as a NOP. Of course, when a
                                          764   # SYS function must be patched or extended it needs to have budget for
                                          765   # that in its declared maximum cycle count.
                                          766   #
                                          767   # Technically the same goal can be achieved by starting each function
                                          768   # with 2 nop's, or by overdeclaring their duration in the first place
                                          769   # (a bit is still wise to do). But this can result in fragmentation
                                          770   # of future ROM images. The indirection avoids that.
                                          771   #
                                          772   # An added advantage of having these in ROM page 0 is that it saves one
                                          773   # byte when setting sysFn: LDI+STW (4 bytes) instead of LDWI+STW (5 bytes)
                                          774   #-----------------------------------------------------------------------
                                          775
                                          776   label('SYS_Multiply_s16_vX_66')
SYS_Multiply_s16_vX_66:
              009e 1419  ld   $19,y       777   ld(hi('sys_Multiply_s16'),Y)    #15 slot 0x9e
              009f e000  jmp  y,$00       778   jmp(Y,'sys_Multiply_s16')       #16
              00a0 012a  ld   [$2a]       779   ld([sysArgs+6])                 #17 load mask.lo
                                          780
                                          781   label('SYS_Divide_s16_vX_80')
SYS_Divide_s16_vX_80:
              00a1 1419  ld   $19,y       782   ld(hi('sys_Divide_s16'),Y)      #15 slot 0xa1
              00a2 e038  jmp  y,$38       783   jmp(Y,'sys_Divide_s16')         #16
              00a3 0128  ld   [$28]       784   ld([sysArgs+4])                 #17
                                          785
                                          786   label('SYS_DrawLine_vX_86')
SYS_DrawLine_vX_86:
              00a4 1419  ld   $19,y       787   ld(hi('sys_DrawLine'),Y)        #15 slot 0xa4
              00a5 e07f  jmp  y,$7f       788   jmp(Y,'sys_DrawLine')           #16
              00a6 01a3  ld   [$a3]       789   ld([0xA3])                      #17 fgcolour
                                          790
              00a7 1403  ld   $03,y       791   ld(hi('REENTER'),Y)             #15 slot 0xa7
              00a8 e0cb  jmp  y,$cb       792   jmp(Y,'REENTER')                #16
              00a9 00f6  ld   $f6         793   ld(-20/2)                       #17
                                          794
                                          795   label('SYS_WaitVBlank_vX_28')
SYS_WaitVBlank_vX_28:
              00aa 141a  ld   $1a,y       796   ld(hi('sys_WaitVBlank'),Y)      #15 slot 0xaa
              00ab e000  jmp  y,$00       797   jmp(Y,'sys_WaitVBlank')         #16
              00ac 0109  ld   [$09]       798   ld([videoY])                    #17 scanline Y
                                          799
                                          800   #-----------------------------------------------------------------------
                                          801   # Extension SYS_Exec_88: Load code from ROM into memory and execute it
                                          802   #-----------------------------------------------------------------------
                                          803   #
                                          804   # This loads the vCPU code with consideration of the current vSP
                                          805   # Used during reset, but also for switching between applications or for
                                          806   # loading data from ROM from within an application (overlays).
                                          807   #
                                          808   # ROM stream format is [<addrH> <addrL> <n&255> n*<byte>]* 0
                                          809   # on top of lookup tables.
                                          810   #
                                          811   # Variables:
                                          812   #       sysArgs[0:1]    ROM pointer (in)
                                          813   #       sysArgs[2:3]    RAM pointer (changed)
                                          814   #       sysArgs[4]      State counter (changed)
                                          815   #       vLR             vCPU continues here (in)
                                          816
                                          817   label('SYS_Exec_88')
SYS_Exec_88:  00ad 1412  ld   $12,y       818   ld(hi('sys_Exec'),Y)            #15 slot 0xad
              00ae e04f  jmp  y,$4f       819   jmp(Y,'sys_Exec')               #16
              00af 0000  ld   $00         820   ld(0)                           #17 Address of loader on zero page
                                          821
              00b0 1403  ld   $03,y       822   ld(hi('REENTER'),Y)             #15 slot 0xb0
              00b1 e0cb  jmp  y,$cb       823   jmp(Y,'REENTER')                #16
              00b2 00f6  ld   $f6         824   ld(-20/2)                       #17
                                          825
              00b3 1403  ld   $03,y       826   ld(hi('REENTER'),Y)             #15 slot 0xb3
              00b4 e0cb  jmp  y,$cb       827   jmp(Y,'REENTER')                #16
              00b5 00f6  ld   $f6         828   ld(-20/2)                       #17
                                          829
                                          830   label('SYS_SpritePattern_vX_134')
SYS_SpritePattern_vX_134:
              00b6 141e  ld   $1e,y       831   ld(hi('sys_SpritePattern'),Y)   #15 slot 0xb6
              00b7 e000  jmp  y,$00       832   jmp(Y,'sys_SpritePattern')      #16
              00b8 1124  ld   [$24],x     833   ld([sysArgs+0],X)               #17 src.lo
                                          834
                                          835   label('SYS_SortUint8Array_vX_52')
SYS_SortUint8Array_vX_52:
              00b9 141a  ld   $1a,y       836   ld(hi('sys_SortUint8Array'),Y)  #15 slot 0xb9
              00ba e00b  jmp  y,$0b       837   jmp(Y,'sys_SortUint8Array')     #16
              00bb 1525  ld   [$25],y     838   ld([sysArgs+1],Y)               #17 array pointer is in sysArgs0
                                          839
                                          840   label('SYS_SortSprites_vX_62')
SYS_SortSprites_vX_62:
              00bc 141c  ld   $1c,y       841   ld(hi('sys_SortSprites'),Y)     #15 slot 0xbc
              00bd e000  jmp  y,$00       842   jmp(Y,'sys_SortSprites')        #16
              00be 1525  ld   [$25],y     843   ld([sysArgs+1],Y)               #17 array pointer is in sysArgs0
                                          844
                                          845   label('SYS_SortViaIndices_vX_44')
SYS_SortViaIndices_vX_44:
              00bf 141a  ld   $1a,y       846   ld(hi('sys_SortViaIndices'),Y)  #15 slot 0xbf
              00c0 e052  jmp  y,$52       847   jmp(Y,'sys_SortViaIndices')     #16
              00c1 1525  ld   [$25],y     848   ld([sysArgs+1],Y)               #17 src pointer
                                          849
                                          850   label('SYS_MemCopyByte_vX_40')
SYS_MemCopyByte_vX_40:
              00c2 141b  ld   $1b,y       851   ld(hi('sys_MemCopyByte'),Y)     #15 slot 0xc2
              00c3 e000  jmp  y,$00       852   jmp(Y,'sys_MemCopyByte')        #16
              00c4 1525  ld   [$25],y     853   ld([sysArgs+1],Y)               #17 src pointer
                                          854
                                          855   label('SYS_MemCopyWord_vX_48')
SYS_MemCopyWord_vX_48:
              00c5 141b  ld   $1b,y       856   ld(hi('sys_MemCopyWord'),Y)     #15 slot 0xc5
              00c6 e018  jmp  y,$18       857   jmp(Y,'sys_MemCopyWord')        #16
              00c7 1525  ld   [$25],y     858   ld([sysArgs+1],Y)               #17 src pointer
                                          859
                                          860   label('SYS_MemCopyDWord_vX_58')
SYS_MemCopyDWord_vX_58:
              00c8 141b  ld   $1b,y       861   ld(hi('sys_MemCopyDWord'),Y)    #15 slot 0xc8
              00c9 e037  jmp  y,$37       862   jmp(Y,'sys_MemCopyDWord')       #16
              00ca 1525  ld   [$25],y     863   ld([sysArgs+1],Y)               #17 src pointer
                                          864
                                          865   label('SYS_DrawVLine_vX_66')
SYS_DrawVLine_vX_66:
              00cb 141d  ld   $1d,y       866   ld(hi('sys_DrawVLine'),Y)       #15 slot 0xcb
              00cc e085  jmp  y,$85       867   jmp(Y,'sys_DrawVLine')          #16
              00cd 1527  ld   [$27],y     868   ld([sysArgs+3],Y)               #17
                                          869
                                          870   label('SYS_DrawSprite_vX_132')
SYS_DrawSprite_vX_132:
              00ce 141d  ld   $1d,y       871   ld(hi('sys_DrawSprite'),Y)      #15 slot 0xce
              00cf e000  jmp  y,$00       872   jmp(Y,'sys_DrawSprite')         #16
              00d0 1182  ld   [$82],x     873   ld([0x82],X)                    #17 spriteX
                                          874
                                          875   label('SYS_DrawBullet_vX_140')
SYS_DrawBullet_vX_140:
              00d1 141e  ld   $1e,y       876   ld(hi('sys_DrawBullet'),Y)      #15 slot 0xd1
              00d2 e076  jmp  y,$76       877   jmp(Y,'sys_DrawBullet')         #16
              00d3 1182  ld   [$82],x     878   ld([0x82],X)                    #17, bulletX
                                          879
                                          880   label('SYS_CmpByteBounds_vX_54')
SYS_CmpByteBounds_vX_54:
              00d4 141f  ld   $1f,y       881   ld(hi('sys_CmpByteBounds'),Y)   #15 slot 0xd4
              00d5 e000  jmp  y,$00       882   jmp(Y,'sys_CmpByteBounds')      #16
              00d6 01bf  ld   [$bf]       883   ld([0xBF])                      #17 count
                                          884
                                          885   label('SYS_Divide_u168_vX_56')
SYS_Divide_u168_vX_56:
              00d7 141f  ld   $1f,y       886   ld(hi('sys_Divide_u168'),Y)     #15 slot 0xd7
              00d8 e05f  jmp  y,$5f       887   jmp(Y,'sys_Divide_u168')        #16
              00d9 0125  ld   [$25]       888   ld([sysArgs+1])                 #17
                                          889
                                          890   label('SYS_ReadPixel_vX_32')
SYS_ReadPixel_vX_32:
              00da 141b  ld   $1b,y       891   ld(hi('sys_ReadPixel'),Y)       #15 slot 0xda
              00db e060  jmp  y,$60       892   jmp(Y,'sys_ReadPixel')          #16
              00dc 0119  ld   [$19]       893   ld([vAC+1])                     #17 y
                                          894
                                          895   label('SYS_DrawPixel_vX_30')
SYS_DrawPixel_vX_30:
              00dd 141b  ld   $1b,y       896   ld(hi('sys_DrawPixel'),Y)       #15 slot 0xdd
              00de e06d  jmp  y,$6d       897   jmp(Y,'sys_DrawPixel')          #16
              00df 0125  ld   [$25]       898   ld([sysArgs+1])                 #17 y
                                          899
              00e0 1403  ld   $03,y       900   ld(hi('REENTER'),Y)             #15 slot 0xe0
              00e1 e0cb  jmp  y,$cb       901   jmp(Y,'REENTER')                #16
              00e2 00f6  ld   $f6         902   ld(-20/2)                       #17
                                          903
                                          904   #-----------------------------------------------------------------------
                                          905   # Extension SYS_ScanMemoryExt_vX_50
                                          906   #-----------------------------------------------------------------------
                                          907
                                          908   # SYS function for searching a byte in a 0 to 256 bytes string located
                                          909   # in a different bank. Doesn't cross page boundaries. Returns a
                                          910   # pointer to the target if found or zero. Temporarily deselects SPI
                                          911   # devices.
                                          912   #
                                          913   # sysArgs[0:1]            Start address
                                          914   # sysArgs[2], sysArgs[3]  Bytes to locate in the string
                                          915   # vACL                    Length of the string (0 means 256)
                                          916   # vACH                    Bit 6 and 7 contain the bank number
                                          917
                                          918   label('SYS_ScanMemoryExt_vX_50')
SYS_ScanMemoryExt_vX_50:
              00e3 1430  ld   $30,y       919   ld(hi('sys_ScanMemoryExt'),Y)   #15 slot 0xe3
              00e4 e027  jmp  y,$27       920   jmp(Y,'sys_ScanMemoryExt')      #16
              00e5 0119  ld   [$19]       921   ld([vAC+1])                     #17
                                          922
                                          923
                                          924   #-----------------------------------------------------------------------
                                          925   # Extension SYS_ScanMemory_vX_50
                                          926   #-----------------------------------------------------------------------
                                          927
                                          928   # SYS function for searching a byte in a 0 to 256 bytes string.
                                          929   # Returns a pointer to the target if found or zero.  Doesn't cross
                                          930   # page boundaries.
                                          931
                                          932   #
                                          933   # sysArgs[0:1]            Start address
                                          934   # sysArgs[2], sysArgs[3]  Bytes to locate in the string
                                          935   # vACL                    Length of the string (0 means 256)
                                          936
                                          937   label('SYS_ScanMemory_vX_50')
SYS_ScanMemory_vX_50:
              00e6 1430  ld   $30,y       938   ld(hi('sys_ScanMemory'),Y)      #15 slot 0xe6
              00e7 e000  jmp  y,$00       939   jmp(Y,'sys_ScanMemory')         #16
              00e8 1525  ld   [$25],y     940   ld([sysArgs+1],Y)               #17
                                          941
                                          942   #-----------------------------------------------------------------------
                                          943   # Extension SYS_CopyMemory_vX_80
                                          944   #-----------------------------------------------------------------------
                                          945
                                          946   # SYS function for copying 1..256 bytes
                                          947   #
                                          948   # sysArgs[0:1]    Destination address
                                          949   # sysArgs[2:3]    Source address
                                          950   # vAC[0]          Count (0 means 256)
                                          951   #
                                          952   # Doesn't cross page boundaries.
                                          953   # Overwrites sysArgs[4:7] and vLR.
                                          954
                                          955   label('SYS_CopyMemory_vX_80')
SYS_CopyMemory_vX_80:
              00e9 142f  ld   $2f,y       956   ld(hi('sys_CopyMemory'),Y)       # 15 slot 0xe9
              00ea e000  jmp  y,$00       957   jmp(Y, 'sys_CopyMemory')         # 16
              00eb 0118  ld   [$18]       958   ld([vAC])                        # 17
                                          959
                                          960   #-----------------------------------------------------------------------
                                          961   # Extension SYS_CopyMemoryExt_vX_100
                                          962   #-----------------------------------------------------------------------
                                          963
                                          964   # SYS function for copying 1..256 bytes across banks
                                          965   #
                                          966   # sysArgs[0:1]  Destination address
                                          967   # sysArgs[2:3]  Source address
                                          968   # vAC[0]        Count (0 means 256)
                                          969   # vAC[1]        Bits 7 and 6 contain the destination bank number,
                                          970   #               and bits 5 and 4 the source bank number.
                                          971   #
                                          972   # Doesn't cross page boundaries.
                                          973   # Overwrites sysArgs[4:7], vLR, and vTmp.
                                          974   # Temporarily deselect all SPI devices.
                                          975   # Should not call without expansion board
                                          976
                                          977   label('SYS_CopyMemoryExt_vX_100')
SYS_CopyMemoryExt_vX_100:
              00ec 142f  ld   $2f,y       978   ld(hi('sys_CopyMemoryExt'),Y)    # 15 slot 0xec
              00ed e078  jmp  y,$78       979   jmp(Y, 'sys_CopyMemoryExt')      # 16
              00ee 0119  ld   [$19]       980   ld([vAC+1])                      # 17
                                          981
                                          982   #-----------------------------------------------------------------------
                                          983   # Extension SYS_ReadRomDir_v5_80
                                          984   #-----------------------------------------------------------------------
                                          985
                                          986   # Get next entry from ROM file system. Use vAC=0 to get the first entry.
                                          987
                                          988   # Variables:
                                          989   #       vAC             Start address of current entry (inout)
                                          990   #       sysArgs[0:7]    File name, padded with zeroes (out)
                                          991
                                          992   label('SYS_ReadRomDir_v5_80')
SYS_ReadRomDir_v5_80:
              00ef 14dd  ld   $dd,y       993   ld(hi('sys_ReadRomDir'),Y)      #15
              00f0 e056  jmp  y,$56       994   jmp(Y,'sys_ReadRomDir')         #16
              00f1 0119  ld   [$19]       995   ld([vAC+1])                     #17
                                          996
              00f2 0200  nop              997   fillers(until=symbol('SYS_Out_22') & 255)
              00f3 0200  nop
                                          998
                                          999   #-----------------------------------------------------------------------
                                          1000  # Extension SYS_Out_22
                                          1001  #-----------------------------------------------------------------------
                                          1002
                                          1003  # Send byte to output port
                                          1004  #
                                          1005  # Variables:
                                          1006  #       vAC
                                          1007
                                          1008  label('SYS_Out_22')
SYS_Out_22:   00f4 1924  ld   [$24],out   1009  ld([sysArgs+0],OUT)             #15
              00f5 0200  nop              1010  nop()                           #16
              00f6 1403  ld   $03,y       1011  ld(hi('REENTER'),Y)             #17
              00f7 e0cb  jmp  y,$cb       1012  jmp(Y,'REENTER')                #18
              00f8 00f5  ld   $f5         1013  ld(-22/2)                       #19
                                          1014
                                          1015  #-----------------------------------------------------------------------
                                          1016  # Extension SYS_In_24
                                          1017  #-----------------------------------------------------------------------
                                          1018
                                          1019  # Read a byte from the input port
                                          1020  #
                                          1021  # Variables:
                                          1022  #       vAC
                                          1023
                                          1024  label('SYS_In_24')
SYS_In_24:    00f9 c318  st   in,[$18]    1025  st(IN, [vAC])                   #15
              00fa 0000  ld   $00         1026  ld(0)                           #16
              00fb c219  st   [$19]       1027  st([vAC+1])                     #17
              00fc 0200  nop              1028  nop()                           #18
              00fd 1403  ld   $03,y       1029  ld(hi('REENTER'),Y)             #19
              00fe e0cb  jmp  y,$cb       1030  jmp(Y,'REENTER')                #20
              00ff 00f4  ld   $f4         1031  ld(-24/2)                       #21
                                          1032
                                          1033  assert pc()&255 == 0
                                          1034
                                          1035  #-----------------------------------------------------------------------
                                          1036  #
                                          1037  #  $0100 ROM page 1: Video loop vertical blank
                                          1038  #
                                          1039  #-----------------------------------------------------------------------
                                          1040  align(0x100, size=0x100)
                                          1041
                                          1042  # Video off mode (also no sound, serial, timer, blinkenlights, ...).
                                          1043  # For benchmarking purposes. This still has the overhead for the vTicks
                                          1044  # administration, time slice granularity etc.
                                          1045  label('videoZ')
                                          1046  videoZ = pc()
videoZ:       0100 1502  ld   [$02],y     1047  runVcpu(None, '---- novideo', returnTo=videoZ)
              0101 e0ff  jmp  y,$ff
              0102 007f  ld   $7f
                                          1048
                                          1049  label('startVideo')             # (Re)start of video signal from idle state
startVideo:   0103 00c0  ld   $c0         1050  ld(syncBits)
                                          1051
                                          1052  # Start of vertical blank interval
                                          1053  label('vBlankStart')
vBlankStart:  0104 c21f  st   [$1f]       1054  st([videoSync0])                #32 Start of vertical blank interval
              0105 0080  ld   $80         1055  ld(syncBits^hSync)              #33
              0106 c220  st   [$20]       1056  st([videoSync1])                #34
                                          1057
                                          1058  # Reset line counter before vCPU can see it
              0107 00b3  ld   $b3         1059  ld(videoYline0)                 #35
              0108 c209  st   [$09]       1060  st([videoY])                    #36
                                          1061
                                          1062  # Update frame count and [0x80] (4 cycles)
              0109 0001  ld   $01         1063  ld(1)                           #37 Reinitialize carry lookup, for robustness
              010a c280  st   [$80]       1064  st([0x80])                      #38
              010b 810e  adda [$0e]       1065  adda([frameCount])              #39 Frame counter
              010c c20e  st   [$0e]       1066  st([frameCount])                #40
                                          1067
                                          1068  # Mix entropy (11 cycles)
              010d 6107  xora [$07]       1069  xora([entropy+1])               #41 Mix entropy
              010e 610f  xora [$0f]       1070  xora([serialRaw])               #42 Mix in serial input
              010f 8106  adda [$06]       1071  adda([entropy+0])               #43
              0110 c206  st   [$06]       1072  st([entropy+0])                 #44
              0111 8108  adda [$08]       1073  adda([entropy+2])               #45 Some hidden state
              0112 c208  st   [$08]       1074  st([entropy+2])                 #46
              0113 e816  blt  $0116       1075  bmi(pc()+3)                     #47
              0114 fc17  bra  $0117       1076  bra(pc()+3)                     #48
              0115 6053  xora $53         1077  xora(64+16+2+1)                 #49
              0116 606c  xora $6c         1078  xora(64+32+8+4)                 #49(!)
              0117 8107  adda [$07]       1079  adda([entropy+1])               #50
              0118 c207  st   [$07]       1080  st([entropy+1])                 #51
                                          1081
                                          1082  # LED sequencer (18 cycles)
              0119 012d  ld   [$2d]       1083  ld([ledTimer])                  #52 Blinkenlight sequencer
              011a f01d  beq  $011d       1084  beq(pc()+3)                     #53
              011b fc1e  bra  $011e       1085  bra(pc()+3)                     #54
              011c a001  suba $01         1086  suba(1)                         #55
              011d 012f  ld   [$2f]       1087  ld([ledTempo])                  #55(!)
              011e c22d  st   [$2d]       1088  st([ledTimer])                  #56
              011f f022  beq  $0122       1089  beq(pc()+3)                     #57
              0120 fc23  bra  $0123       1090  bra(pc()+3)                     #58
              0121 0000  ld   $00         1091  ld(0)                           #59 Don't advance state
              0122 0001  ld   $01         1092  ld(1)                           #59(!) Advance state when timer passes through 0
              0123 812e  adda [$2e]       1093  adda([ledState_v2])             #60
              0124 ec27  bne  $0127       1094  bne(pc()+3)                     #61
              0125 fc28  bra  $0128       1095  bra(pc()+3)                     #62
              0126 00e8  ld   $e8         1096  ld(-24)                         #63 State 0 becomes -24, start of sequence
              0127 e42c  bgt  .leds#65    1097  bgt('.leds#65')                 #63(!) Catch the stopped state (>0)
              0128 c22e  st   [$2e]       1098  st([ledState_v2])               #64
              0129 8048  adda $48         1099  adda('.leds#69')                #65
              012a fe00  bra  ac          1100  bra(AC)                         #66 Jump to lookup table
              012b fc48  bra  .leds#69    1101  bra('.leds#69')                 #67 Single-instruction subroutine
                                          1102
                                          1103  label('.leds#65')
.leds#65:     012c 000f  ld   $0f         1104  ld(0x0f)                        #65 Maintain stopped state
              012d c22e  st   [$2e]       1105  st([ledState_v2])               #66
              012e fc48  bra  .leds#69    1106  bra('.leds#69')                 #67
              012f 2114  anda [$14]       1107  anda([xoutMask])                #68 Always clear sound bits (this is why AC=0x0f)
                                          1108
              0130 000f  ld   $0f         1109  ld(0b1111)                      #68 LEDs |****| offset -24 Low 4 bits are the LED output
              0131 0007  ld   $07         1110  ld(0b0111)                      #68 LEDs |***O|
              0132 0003  ld   $03         1111  ld(0b0011)                      #68 LEDs |**OO|
              0133 0001  ld   $01         1112  ld(0b0001)                      #68 LEDs |*OOO|
              0134 0002  ld   $02         1113  ld(0b0010)                      #68 LEDs |O*OO|
              0135 0004  ld   $04         1114  ld(0b0100)                      #68 LEDs |OO*O|
              0136 0008  ld   $08         1115  ld(0b1000)                      #68 LEDs |OOO*|
              0137 0004  ld   $04         1116  ld(0b0100)                      #68 LEDs |OO*O|
              0138 0002  ld   $02         1117  ld(0b0010)                      #68 LEDs |O*OO|
              0139 0001  ld   $01         1118  ld(0b0001)                      #68 LEDs |*OOO|
              013a 0003  ld   $03         1119  ld(0b0011)                      #68 LEDs |**OO|
              013b 0007  ld   $07         1120  ld(0b0111)                      #68 LEDs |***O|
              013c 000f  ld   $0f         1121  ld(0b1111)                      #68 LEDs |****|
              013d 000e  ld   $0e         1122  ld(0b1110)                      #68 LEDs |O***|
              013e 000c  ld   $0c         1123  ld(0b1100)                      #68 LEDs |OO**|
              013f 0008  ld   $08         1124  ld(0b1000)                      #68 LEDs |OOO*|
              0140 0004  ld   $04         1125  ld(0b0100)                      #68 LEDs |OO*O|
              0141 0002  ld   $02         1126  ld(0b0010)                      #68 LEDs |O*OO|
              0142 0001  ld   $01         1127  ld(0b0001)                      #68 LEDs |*OOO|
              0143 0002  ld   $02         1128  ld(0b0010)                      #68 LEDs |O*OO|
              0144 0004  ld   $04         1129  ld(0b0100)                      #68 LEDs |OO*O|
              0145 0008  ld   $08         1130  ld(0b1000)                      #68 LEDs |OOO*|
              0146 000c  ld   $0c         1131  ld(0b1100)                      #68 LEDs |OO**|
              0147 000e  ld   $0e         1132  ld(0b1110)                      #68 LEDs |O***| offset -1
                                          1133  label('.leds#69')
.leds#69:     0148 c214  st   [$14]       1134  st([xoutMask])                  #69 Sound bits will be re-enabled below
              0149 0010  ld   $10         1135  ld(vPulse*2)                    #70 vPulse default length when not modulated
              014a c20d  st   [$0d]       1136  st([videoPulse])                #71
                                          1137
                                          1138  # When the total number of scan lines per frame is not an exact multiple of the
                                          1139  # (4) channels, there will be an audible discontinuity if no measure is taken.
                                          1140  # This static noise can be suppressed by swallowing the first `lines mod 4'
                                          1141  # partial samples after transitioning into vertical blank. This is easiest if
                                          1142  # the modulo is 0 (do nothing), 1 (reset sample when entering the last visible
                                          1143  # scan line), or 2 (reset sample while in the first blank scan line). For the
                                          1144  # last case there is no solution yet: give a warning.
                                          1145  extra = 0
                                          1146  if soundDiscontinuity == 2:
                                          1147    st(sample, [sample])          # Sound continuity
                                          1148    extra += 1
                                          1149  if soundDiscontinuity > 2:
                                          1150    highlight('Warning: sound discontinuity not suppressed')
                                          1151
                                          1152  # vCPU interrupt
              014b 010e  ld   [$0e]       1153  ld([frameCount])                #72
                                          1154  beq('vBlankFirst#75')           #73
              014c f052  beq  vBlankFirst#75
                                          1155
              014d 0055  ld   $55         1156  runVcpu(186-74-extra,           #74 Application cycles (scan line 0)
              014e c21e  st   [$1e]
              014f 1502  ld   [$02],y
              0150 e0ff  jmp  y,$ff
              0151 0022  ld   $22
                                          1157      '---D line 0 no timeout',
                                          1158      returnTo='vBlankFirst#186')
                                          1159
                                          1160  label('vBlankFirst#75')
vBlankFirst#75:
              0152 1412  ld   $12,y       1161  ld(hi('vBlankFirst#78'),Y)      #75
              0153 e000  jmp  y,$00       1162  jmp(Y,'vBlankFirst#78')         #76
              0154 1401  ld   $01,y       1163  ld(hi(vIRQ_v5),Y)               #77
                                          1164  label('vBlankFirst#186')
                                          1165
                                          1166  # Mitigation for rogue channelMask (3 cycles)
vBlankFirst#186:
              0155 0121  ld   [$21]       1167  ld([channelMask])               #186 Normalize channelMask, for robustness
              0156 20fb  anda $fb         1168  anda(0b11111011)                #187
              0157 c221  st   [$21]       1169  st([channelMask])               #188
                                          1170
                                          1171  # Sound on/off (6 cycles)
              0158 012c  ld   [$2c]       1172  ld([soundTimer])                #189 Sound on/off
              0159 ec5c  bne  $015c       1173  bne(pc()+3)                     #190
              015a fc5d  bra  $015d       1174  bra(pc()+3)                     #191
              015b 0000  ld   $00         1175  ld(0)                           #192 Keeps sound unchanged (should be off here)
              015c 00f0  ld   $f0         1176  ld(0xf0)                        #192(!) Turns sound back on
              015d 4114  ora  [$14]       1177  ora([xoutMask])                 #193
              015e c214  st   [$14]       1178  st([xoutMask])                  #194
                                          1179
                                          1180  # Sound timer count down (5 cycles)
              015f 012c  ld   [$2c]       1181  ld([soundTimer])                #195 Sound timer
              0160 f063  beq  $0163       1182  beq(pc()+3)                     #196
              0161 fc64  bra  $0164       1183  bra(pc()+3)                     #197
              0162 a001  suba $01         1184  suba(1)                         #198
              0163 0000  ld   $00         1185  ld(0)                           #198
              0164 c22c  st   [$2c]       1186  st([soundTimer])                #199
                                          1187
              0165 191f  ld   [$1f],out   1188  ld([videoSync0],OUT)            #0 <New scan line start>
                                          1189  label('sound1')
sound1:       0166 0105  ld   [$05]       1190  ld([channel])                   #1 Advance to next sound channel
              0167 2121  anda [$21]       1191  anda([channelMask])             #2
              0168 8001  adda $01         1192  adda(1)                         #3
              0169 1920  ld   [$20],out   1193  ld([videoSync1],OUT)            #4 Start horizontal pulse
              016a d605  st   [$05],y     1194  st([channel],Y)                 #5
              016b 007f  ld   $7f         1195  ld(0x7f)                        #6 Update sound channel
              016c 29fe  anda [y,$fe]     1196  anda([Y,oscL])                  #7
              016d 89fc  adda [y,$fc]     1197  adda([Y,keyL])                  #8
              016e cafe  st   [y,$fe]     1198  st([Y,oscL])                    #9
              016f 3080  anda $80,x       1199  anda(0x80,X)                    #10
              0170 0500  ld   [x]         1200  ld([X])                         #11
              0171 89ff  adda [y,$ff]     1201  adda([Y,oscH])                  #12
              0172 89fd  adda [y,$fd]     1202  adda([Y,keyH])                  #13
              0173 caff  st   [y,$ff]     1203  st([Y,oscH])                    #14
              0174 20fc  anda $fc         1204  anda(0xfc)                      #15
              0175 69fb  xora [y,$fb]     1205  xora([Y,wavX])                  #16
              0176 1200  ld   ac,x        1206  ld(AC,X)                        #17
              0177 09fa  ld   [y,$fa]     1207  ld([Y,wavA])                    #18
              0178 1407  ld   $07,y       1208  ld(soundTable>>8,Y)             #19
              0179 8d00  adda [y,x]       1209  adda([Y,X])                     #20
              017a e87d  blt  $017d       1210  bmi(pc()+3)                     #21
              017b fc7e  bra  $017e       1211  bra(pc()+3)                     #22
              017c 203f  anda $3f         1212  anda(63)                        #23
              017d 003f  ld   $3f         1213  ld(63)                          #23(!)
              017e 8103  adda [$03]       1214  adda([sample])                  #24
              017f c203  st   [$03]       1215  st([sample])                    #25
                                          1216
              0180 0113  ld   [$13]       1217  ld([xout])                      #26 Gets copied to XOUT
              0181 1412  ld   $12,y       1218  ld(hi('vBlankLast#34'),Y)       #27 Prepare jumping out of page in last line
              0182 191f  ld   [$1f],out   1219  ld([videoSync0],OUT)            #28 End horizontal pulse
                                          1220
                                          1221  # Count through the vertical blank interval until its last scan line
              0183 0109  ld   [$09]       1222  ld([videoY])                    #29
                                          1223  bpl('.vBlankLast#32')           #30
              0184 f4b1  bge  .vBlankLast#32
              0185 8002  adda $02         1224  adda(2)                         #31
              0186 c209  st   [$09]       1225  st([videoY])                    #32
                                          1226
                                          1227  # Determine if we're in the vertical sync pulse
              0187 a0bd  suba $bd         1228  suba(1-2*(vBack+vPulse-1))      #33 Prepare sync values
              0188 ec8d  bne  .prepSync36 1229  bne('.prepSync36')              #34 Tests for start of vPulse
              0189 a10d  suba [$0d]       1230  suba([videoPulse])              #35
              018a 0040  ld   $40         1231  ld(syncBits^vSync)              #36 Entering vertical sync pulse
              018b fc92  bra  .prepSync39 1232  bra('.prepSync39')              #37
              018c c21f  st   [$1f]       1233  st([videoSync0])                #38
                                          1234  label('.prepSync36')
.prepSync36:  018d ec91  bne  .prepSync38 1235  bne('.prepSync38')              #36 Tests for end of vPulse
              018e 00c0  ld   $c0         1236  ld(syncBits)                    #37
              018f fc93  bra  .prepSync40 1237  bra('.prepSync40')              #38 Entering vertical back porch
              0190 c21f  st   [$1f]       1238  st([videoSync0])                #39
                                          1239  label('.prepSync38')
.prepSync38:  0191 011f  ld   [$1f]       1240  ld([videoSync0])                #38 Load current value
                                          1241  label('.prepSync39')
.prepSync39:  0192 0200  nop              1242  nop()                           #39
                                          1243  label('.prepSync40')
.prepSync40:  0193 6040  xora $40         1244  xora(hSync)                     #40 Precompute, as during the pulse there is no time
              0194 c220  st   [$20]       1245  st([videoSync1])                #41
                                          1246
                                          1247  # Capture the serial input before the '595 shifts it out
              0195 0109  ld   [$09]       1248  ld([videoY])                    #42 Capture serial input
              0196 60cf  xora $cf         1249  xora(1-2*(vBack-1-1))           #43 Exactly when the 74HC595 has captured all 8 controller bits
              0197 ec9a  bne  $019a       1250  bne(pc()+3)                     #44
              0198 fc9b  bra  $019b       1251  bra(pc()+3)                     #45
              0199 c30f  st   in,[$0f]    1252  st(IN, [serialRaw])             #46
              019a c000  st   $00,[$00]   1253  st(0,[0])                       #46(!) Reinitialize carry lookup, for robustness
                                          1254
                                          1255  # Update [xout] with the next sound sample every 4 scan lines.
                                          1256  # Keep doing this on 'videoC equivalent' scan lines in vertical blank.
              019b 0109  ld   [$09]       1257  ld([videoY])                    #47
              019c 2006  anda $06         1258  anda(6)                         #48
                                          1259  beq('vBlankSample')             #49
              019d f0a6  beq  vBlankSample
              019e 0103  ld   [$03]       1260  ld([sample])                    #50
                                          1261
                                          1262  label('vBlankNormal')
vBlankNormal: 019f 00a4  ld   $a4         1263  runVcpu(199-51, 'AB-D line 1-36')#51 Application cycles (vBlank scan lines without sound sample update)
              01a0 c21e  st   [$1e]
              01a1 1502  ld   [$02],y
              01a2 e0ff  jmp  y,$ff
              01a3 0034  ld   $34
              01a4 fc66  bra  sound1      1264  bra('sound1')                   #199
              01a5 191f  ld   [$1f],out   1265  ld([videoSync0],OUT)            #0 <New scan line start>
                                          1266
                                          1267  label('vBlankSample')
vBlankSample: 01a6 400f  ora  $0f         1268  ora(0x0f)                       #51 New sound sample is ready
              01a7 2114  anda [$14]       1269  anda([xoutMask])                #52
              01a8 c213  st   [$13]       1270  st([xout])                      #53
              01a9 c003  st   $03,[$03]   1271  st(sample, [sample])            #54 Reset for next sample
                                          1272
              01aa 00af  ld   $af         1273  runVcpu(199-55, '--C- line 3-39')#55 Application cycles (vBlank scan lines with sound sample update)
              01ab c21e  st   [$1e]
              01ac 1502  ld   [$02],y
              01ad e0ff  jmp  y,$ff
              01ae 0032  ld   $32
              01af fc66  bra  sound1      1274  bra('sound1')                   #199
              01b0 191f  ld   [$1f],out   1275  ld([videoSync0],OUT)            #0 <New scan line start>
                                          1276
                                          1277  #-----------------------------------------------------------------------
                                          1278
                                          1279  label('.vBlankLast#32')
.vBlankLast#32:
              01b1 e032  jmp  y,$32       1280  jmp(Y,'vBlankLast#34')          #32 Jump out of page for space reasons
                                          1281  #assert hi(controllerType) == hi(pc()) # Assume these share the high address
              01b2 1401  ld   $01,y       1282  ld(hi(pc()),Y)                  #33
                                          1283
                                          1284  label('vBlankLast#52')
                                          1285
                                          1286  # Respond to reset button (14 cycles)
                                          1287  # - ResetTimer decrements as long as just [Start] is pressed down
                                          1288  # - Reaching 0 (normal) or 128 (extended) triggers the soft reset sequence
                                          1289  # - Initial value is 128 (or 255 at boot), first decrement, then check
                                          1290  # - This starts vReset -> SYS_Reset_88 -> SYS_Exec_88 -> Reset.gcl -> Main.gcl
                                          1291  # - Main.gcl then recognizes extended presses if resetTimer is 0..127 ("paasei")
                                          1292  # - This requires a full cycle (4s) in the warm boot scenario
                                          1293  # - Or a half cycle (2s) when pressing [Select] down during hard reset
                                          1294  # - This furthermore requires >=1 frame (and <=128) to have passed between
                                          1295  #   reaching 128 and getting through Reset and the start of Main, while [Start]
                                          1296  #   was still pressed so the count reaches <128. Two reasonable expectations.
                                          1297  # - The unintended power-up scenarios of ROMv1 (pulling SER_DATA low, or
                                          1298  #   pressing [Select] together with another button) now don't trigger anymore.
                                          1299
vBlankLast#52:
              01b3 0111  ld   [$11]       1300  ld([buttonState])               #52 Check [Start] for soft reset
              01b4 60ef  xora $ef         1301  xora(~buttonStart)              #53
              01b5 ecbe  bne  .restart#56 1302  bne('.restart#56')              #54
              01b6 0112  ld   [$12]       1303  ld([resetTimer])                #55 As long as button pressed
              01b7 a001  suba $01         1304  suba(1)                         #56 ... count down the timer
              01b8 c212  st   [$12]       1305  st([resetTimer])                #57
              01b9 207f  anda $7f         1306  anda(127)                       #58
              01ba f0c6  beq  .restart#61 1307  beq('.restart#61')              #59 Reset at 0 (normal 2s) or 128 (extended 4s)
              01bb 00ee  ld   $ee         1308  ld((vReset&255)-2)              #60 Start force reset when hitting 0
              01bc fcc5  bra  .restart#63 1309  bra('.restart#63')              #61 ... otherwise do nothing yet
              01bd fcc4  bra  .restart#64 1310  bra('.restart#64')              #62
                                          1311  label('.restart#56')
.restart#56:  01be 0001  ld   $01         1312  wait(62-56)                     #56
              01bf ecbf  bne  $01bf
              01c0 a001  suba $01
              01c1 0200  nop
              01c2 0080  ld   $80         1313  ld(128)                         #62 Not pressed, reset the timer
              01c3 c212  st   [$12]       1314  st([resetTimer])                #63
                                          1315  label('.restart#64')
.restart#64:  01c4 fccb  bra  .restart#66 1316  bra('.restart#66')              #64
                                          1317  label('.restart#63')
.restart#63:  01c5 0200  nop              1318  nop()                           #63,65
                                          1319  label('.restart#61')
.restart#61:  01c6 c216  st   [$16]       1320  st([vPC])                       #61 Point vPC at vReset
              01c7 0001  ld   $01         1321  ld(vReset>>8)                   #62
              01c8 c217  st   [$17]       1322  st([vPC+1])                     #63
              01c9 0002  ld   $02         1323  ld(hi('ENTER'))                 #64 Set active interpreter to vCPU
              01ca c202  st   [$02]       1324  st([vCpuSelect])                #65
                                          1325  label('.restart#66')
                                          1326
                                          1327  # Switch video mode when (only) select is pressed (16 cycles)
                                          1328  # XXX We could make this a vCPU interrupt
.restart#66:  01cb 0111  ld   [$11]       1329  ld([buttonState])               #66 Check [Select] to switch modes
              01cc 60df  xora $df         1330  xora(~buttonSelect)             #67 Only trigger when just [Select] is pressed
              01cd ece2  bne  .select#70  1331  bne('.select#70')               #68
              01ce 010b  ld   [$0b]       1332  ld([videoModeC])                #69
              01cf e8d5  blt  .select#72  1333  bmi('.select#72')               #70 Branch when line C is off
              01d0 010a  ld   [$0a]       1334  ld([videoModeB])                #71 Rotate: Off->D->B->C
              01d1 c20b  st   [$0b]       1335  st([videoModeC])                #72
              01d2 010c  ld   [$0c]       1336  ld([videoModeD])                #73
              01d3 c20a  st   [$0a]       1337  st([videoModeB])                #74
              01d4 fcda  bra  .select#77  1338  bra('.select#77')               #75
                                          1339  label('.select#72')
.select#72:   01d5 00f6  ld   $f6         1340  ld('nopixels')                  #72,76
              01d6 000a  ld   $0a         1341  ld('pixels')                    #73 Reset: On->D->B->C
              01d7 c20b  st   [$0b]       1342  st([videoModeC])                #74
              01d8 c20a  st   [$0a]       1343  st([videoModeB])                #75
              01d9 0200  nop              1344  nop()                           #76
                                          1345  label('.select#77')
.select#77:   01da c20c  st   [$0c]       1346  st([videoModeD])                #77
              01db 0035  ld   $35         1347  wait(188-78)                    #78 Don't waste code space expanding runVcpu here
              01dc ecdc  bne  $01dc
              01dd a001  suba $01
              01de 0200  nop
                                          1348  # AC==255 now
              01df c211  st   [$11]       1349  st([buttonState])               #188
                                          1350  bra('vBlankEnd#191')            #189
              01e0 fcea  bra  vBlankEnd#191
              01e1 0000  ld   $00         1351  ld(0)                           #190
                                          1352  label('.select#70')
                                          1353
                                          1354  # Mitigation of runaway channel variable
.select#70:   01e2 0105  ld   [$05]       1355  ld([channel])                   #70 Normalize channel, for robustness
              01e3 2003  anda $03         1356  anda(0b00000011)                #71
              01e4 c205  st   [$05]       1357  st([channel])                   #72 Stop wild channel updates
                                          1358
              01e5 00ea  ld   $ea         1359  runVcpu(191-73, '---D line 40') #73 Application cycles (scan line 40)
              01e6 c21e  st   [$1e]
              01e7 1502  ld   [$02],y
              01e8 e0ff  jmp  y,$ff
              01e9 0025  ld   $25
                                          1360
                                          1361  # AC==0 now
                                          1362  label('vBlankEnd#191')
vBlankEnd#191:
              01ea 1401  ld   $01,y       1363  ld(videoTop_v5>>8,Y)            #191
              01eb 09f9  ld   [y,$f9]     1364  ld([Y,videoTop_v5])             #192
              01ec c209  st   [$09]       1365  st([videoY])                    #193
              01ed c21f  st   [$1f]       1366  st([frameX])                    #194
              01ee ecf1  bne  $01f1       1367  bne(pc()+3)                     #195
              01ef fcf2  bra  $01f2       1368  bra(pc()+3)                     #196
              01f0 0001  ld   $01         1369  ld('videoA')                    #197
              01f1 00ec  ld   $ec         1370  ld('videoF')                    #197(!)
              01f2 c20d  st   [$0d]       1371  st([nextVideo])                 #198
              01f3 0105  ld   [$05]       1372  ld([channel])                   #199 Advance to next sound channel
              01f4 2121  anda [$21]       1373  anda([channelMask])             #0 <New scan line start>
              01f5 8001  adda $01         1374  adda(1)                         #1
              01f6 1402  ld   $02,y       1375  ld(hi('sound2'),Y)              #2
              01f7 e0b1  jmp  y,$b1       1376  jmp(Y,'sound2')                 #3
              01f8 1880  ld   $80,out     1377  ld(syncBits^hSync,OUT)          #4 Start horizontal pulse
                                          1378
              01f9 0200  nop              1379  fillers(until=0xff)
              01fa 0200  nop
              01fb 0200  nop
              * 6 times
                                          1380
                                          1381  #-----------------------------------------------------------------------
                                          1382  # Return point for vCPU slices during visible screen area
                                          1383  #-----------------------------------------------------------------------
                                          1384
                                          1385  assert pc() == 0x1ff            # Enables runVcpu() to re-enter into the next page
              01ff fcae  bra  sound3      1386  bra('sound3')                   #200,0 <New scan line start>
                                          1387
                                          1388  #-----------------------------------------------------------------------
                                          1389  #
                                          1390  #  $0200 ROM page 2: Video loop visible scanlines
                                          1391  #
                                          1392  #-----------------------------------------------------------------------
                                          1393  align(0x100, size=0x100)
              0200 0105  ld   [$05]       1394  ld([channel])                   #1 Advance to next sound channel
                                          1395
                                          1396  # Back porch A: first of 4 repeated scan lines
                                          1397  # - Fetch next Yi and store it for retrieval in the next scan lines
                                          1398  # - Calculate Xi from dXi, but there is no cycle time left to store it as well
                                          1399  label('videoA')
videoA:       0201 00ca  ld   $ca         1400  ld('videoB')                    #29 1st scanline of 4 (always visible)
              0202 c20d  st   [$0d]       1401  st([nextVideo])                 #30
              0203 1401  ld   $01,y       1402  ld(videoTable>>8,Y)             #31
              0204 1109  ld   [$09],x     1403  ld([videoY],X)                  #32
              0205 0d00  ld   [y,x]       1404  ld([Y,X])                       #33
              0206 de00  st   [y,x++]     1405  st([Y,Xpp])                     #34 Just X++
              0207 c220  st   [$20]       1406  st([frameY])                    #35
              0208 0d00  ld   [y,x]       1407  ld([Y,X])                       #36
              0209 911f  adda [$1f],x     1408  adda([frameX],X)                #37
                                          1409  label('pixels')
pixels:       020a 1520  ld   [$20],y     1410  ld([frameY],Y)                  #38
              020b 00c0  ld   $c0         1411  ld(syncBits)                    #39
                                          1412
                                          1413  # Stream 160 pixels from memory location <Yi,Xi> onwards
                                          1414  # Superimpose the sync signal bits to be robust against misprogramming
                                          1415  for i in range(qqVgaWidth):
              020c 5d00  ora  [y,x++],out 1416    ora([Y,Xpp],OUT)              #40-199 Pixel burst
              020d 5d00  ora  [y,x++],out
              020e 5d00  ora  [y,x++],out
              * 160 times
              02ac 18c0  ld   $c0,out     1417  ld(syncBits,OUT)                #0 <New scan line start> Back to black
                                          1418
                                          1419  # Front porch
              02ad 0105  ld   [$05]       1420  ld([channel])                   #1 Advance to next sound channel
                                          1421  label('sound3')                 # Return from vCPU interpreter
sound3:       02ae 2121  anda [$21]       1422  anda([channelMask])             #2
              02af 8001  adda $01         1423  adda(1)                         #3
              02b0 1880  ld   $80,out     1424  ld(syncBits^hSync,OUT)          #4 Start horizontal pulse
                                          1425
                                          1426  # Horizontal sync and sound channel update for scanlines outside vBlank
                                          1427  label('sound2')
sound2:       02b1 d605  st   [$05],y     1428  st([channel],Y)                 #5
              02b2 007f  ld   $7f         1429  ld(0x7f)                        #6
              02b3 29fe  anda [y,$fe]     1430  anda([Y,oscL])                  #7
              02b4 89fc  adda [y,$fc]     1431  adda([Y,keyL])                  #8
              02b5 cafe  st   [y,$fe]     1432  st([Y,oscL])                    #9
              02b6 3080  anda $80,x       1433  anda(0x80,X)                    #10
              02b7 0500  ld   [x]         1434  ld([X])                         #11
              02b8 89ff  adda [y,$ff]     1435  adda([Y,oscH])                  #12
              02b9 89fd  adda [y,$fd]     1436  adda([Y,keyH])                  #13
              02ba caff  st   [y,$ff]     1437  st([Y,oscH] )                   #14
              02bb 20fc  anda $fc         1438  anda(0xfc)                      #15
              02bc 69fb  xora [y,$fb]     1439  xora([Y,wavX])                  #16
              02bd 1200  ld   ac,x        1440  ld(AC,X)                        #17
              02be 09fa  ld   [y,$fa]     1441  ld([Y,wavA])                    #18
              02bf 1407  ld   $07,y       1442  ld(soundTable>>8,Y)             #19
              02c0 8d00  adda [y,x]       1443  adda([Y,X])                     #20
              02c1 e8c4  blt  $02c4       1444  bmi(pc()+3)                     #21
              02c2 fcc5  bra  $02c5       1445  bra(pc()+3)                     #22
              02c3 203f  anda $3f         1446  anda(63)                        #23
              02c4 003f  ld   $3f         1447  ld(63)                          #23(!)
              02c5 8103  adda [$03]       1448  adda([sample])                  #24
              02c6 c203  st   [$03]       1449  st([sample])                    #25
                                          1450
              02c7 0113  ld   [$13]       1451  ld([xout])                      #26 Gets copied to XOUT
              02c8 fd0d  bra  [$0d]       1452  bra([nextVideo])                #27
              02c9 18c0  ld   $c0,out     1453  ld(syncBits,OUT)                #28 End horizontal pulse
                                          1454
                                          1455  # Back porch B: second of 4 repeated scan lines
                                          1456  # - Recompute Xi from dXi and store for retrieval in the next scan lines
                                          1457  label('videoB')
videoB:       02ca 00d3  ld   $d3         1458  ld('videoC')                    #29 2nd scanline of 4
              02cb c20d  st   [$0d]       1459  st([nextVideo])                 #30
              02cc 1401  ld   $01,y       1460  ld(videoTable>>8,Y)             #31
              02cd 0109  ld   [$09]       1461  ld([videoY])                    #32
              02ce 9001  adda $01,x       1462  adda(1,X)                       #33
              02cf 011f  ld   [$1f]       1463  ld([frameX])                    #34
              02d0 8d00  adda [y,x]       1464  adda([Y,X])                     #35
              02d1 fd0a  bra  [$0a]       1465  bra([videoModeB])               #36
              02d2 d21f  st   [$1f],x     1466  st([frameX],X)                  #37 Store in RAM and X
                                          1467
                                          1468  # Back porch C: third of 4 repeated scan lines
                                          1469  # - Nothing new to for video do as Yi and Xi are known,
                                          1470  # - This is the time to emit and reset the next sound sample
                                          1471  label('videoC')
videoC:       02d3 00dc  ld   $dc         1472  ld('videoD')                    #29 3rd scanline of 4
              02d4 c20d  st   [$0d]       1473  st([nextVideo])                 #30
              02d5 0103  ld   [$03]       1474  ld([sample])                    #31 New sound sample is ready (didn't fit in the audio loop)
              02d6 400f  ora  $0f         1475  ora(0x0f)                       #32
              02d7 2114  anda [$14]       1476  anda([xoutMask])                #33
              02d8 c213  st   [$13]       1477  st([xout])                      #34 Update [xout] with new sample (4 channels just updated)
              02d9 c003  st   $03,[$03]   1478  st(sample, [sample])            #35 Reset for next sample
              02da fd0b  bra  [$0b]       1479  bra([videoModeC])               #36
              02db 111f  ld   [$1f],x     1480  ld([frameX],X)                  #37
                                          1481
                                          1482  # Back porch D: last of 4 repeated scan lines
                                          1483  # - Calculate the next frame index
                                          1484  # - Decide if this is the last line or not
                                          1485  label('videoD')                 # Default video mode
videoD:       02dc 111f  ld   [$1f],x     1486  ld([frameX], X)                 #29 4th scanline of 4
              02dd 0109  ld   [$09]       1487  ld([videoY])                    #30
              02de a0ee  suba $ee         1488  suba((120-1)*2)                 #31
                                          1489  beq('.lastpixels#34')           #32
              02df f0e5  beq  .lastpixels#34
              02e0 80f0  adda $f0         1490  adda(120*2)                     #33 More pixel lines to go
              02e1 c209  st   [$09]       1491  st([videoY])                    #34
              02e2 0001  ld   $01         1492  ld('videoA')                    #35
              02e3 fd0c  bra  [$0c]       1493  bra([videoModeD])               #36
              02e4 c20d  st   [$0d]       1494  st([nextVideo])                 #37
                                          1495
                                          1496  label('.lastpixels#34')
                                          1497  if soundDiscontinuity == 1:
.lastpixels#34:
              02e5 c003  st   $03,[$03]   1498    st(sample, [sample])          #34 Sound continuity
                                          1499  else:
                                          1500    nop()                         #34
              02e6 00e9  ld   $e9         1501  ld('videoE')                    #35 No more pixel lines to go
              02e7 fd0c  bra  [$0c]       1502  bra([videoModeD])               #36
              02e8 c20d  st   [$0d]       1503  st([nextVideo])                 #37
                                          1504
                                          1505  # Back porch "E": after the last line
                                          1506  # - Go back and and enter vertical blank (program page 2)
                                          1507  label('videoE') # Exit visible area
videoE:       02e9 1401  ld   $01,y       1508  ld(hi('vBlankStart'),Y)         #29 Return to vertical blank interval
              02ea e004  jmp  y,$04       1509  jmp(Y,'vBlankStart')            #30
              02eb 00c0  ld   $c0         1510  ld(syncBits)                    #31
                                          1511
                                          1512  # Video mode that blacks out one or more pixel lines from the top of screen.
                                          1513  # This yields some speed, but also frees up screen memory for other purposes.
                                          1514  # Note: Sound output becomes choppier the more pixel lines are skipped
                                          1515  # Note: The vertical blank driver leaves 0x80 behind in [videoSync1]
                                          1516  label('videoF')
videoF:       02ec 0120  ld   [$20]       1517  ld([videoSync1])                #29 Completely black pixel line
              02ed 8080  adda $80         1518  adda(0x80)                      #30
              02ee d220  st   [$20],x     1519  st([videoSync1],X)              #31
              02ef 011f  ld   [$1f]       1520  ld([frameX])                    #32
              02f0 a500  suba [x]         1521  suba([X])                       #33 Decrements every two VGA scanlines
              02f1 f0f4  beq  .videoF#36  1522  beq('.videoF#36')               #34
              02f2 c21f  st   [$1f]       1523  st([frameX])                    #35
              02f3 fcf6  bra  nopixels    1524  bra('nopixels')                 #36
                                          1525  label('.videoF#36')
.videoF#36:   02f4 0001  ld   $01         1526  ld('videoA')                    #36,37 Transfer to visible screen area
              02f5 c20d  st   [$0d]       1527  st([nextVideo])                 #37
                                          1528  #
                                          1529  # Alternative for pixel burst: faster application mode
                                          1530  label('nopixels')
nopixels:     02f6 00ff  ld   $ff         1531  runVcpu(200-38, 'ABCD line 40-520',
              02f7 c21e  st   [$1e]
              02f8 1502  ld   [$02],y
              02f9 e0ff  jmp  y,$ff
              02fa 003b  ld   $3b
                                          1532    returnTo=0x1ff)               #38 Application interpreter (black scanlines)
                                          1533
                                          1534  #-----------------------------------------------------------------------
                                          1535  #
                                          1536  #  $0300 ROM page 3: Application interpreter primary page
                                          1537  #
                                          1538  #-----------------------------------------------------------------------
                                          1539
                                          1540  # Enter the timing-aware application interpreter (aka virtual CPU, vCPU)
                                          1541  #
                                          1542  # This routine will execute as many as possible instructions in the
                                          1543  # allotted time. When time runs out, it synchronizes such that the total
                                          1544  # duration matches the caller's request. Durations are counted in `ticks',
                                          1545  # which are multiples of 2 clock cycles.
                                          1546  #
                                          1547  # Synopsis: Use the runVcpu() macro as entry point
                                          1548
                                          1549  # We let 'ENTER' begin one word before the page boundary, for a bit extra
                                          1550  # precious space in the packed interpreter code page. Although ENTER's
                                          1551  # first instruction is bra() which normally doesn't cross page boundaries,
                                          1552  # in this case it will still jump into the right space, because branches
                                          1553  # from $xxFF land in the next page anyway.
                                          1554  while pc()&255 < 255:
              02fb 0200  nop              1555    nop()
              02fc 0200  nop
              02fd 0200  nop
              02fe 0200  nop
                                          1556  label('ENTER')
ENTER:        02ff fc03  bra  .next2      1557  bra('.next2')                   #0 Enter at '.next2' (so no startup overhead)
                                          1558  # --- Page boundary ---
                                          1559  align(0x100,size=0x100)
                                          1560  label('NEXTY')                  # Alternative for REENTER
NEXTY:        0300 1517  ld   [$17],y     1561  ld([vPC+1],Y)                   #1
                                          1562
                                          1563  # Fetch next instruction and execute it, but only if there are sufficient
                                          1564  # ticks left for the slowest instruction.
                                          1565  label('NEXT')
NEXT:         0301 8115  adda [$15]       1566  adda([vTicks])                  #0 Track elapsed ticks (actually counting down: AC<0)
              0302 e80b  blt  EXIT        1567  blt('EXIT')                     #1 Escape near time out
                                          1568  label('.next2')
.next2:       0303 c215  st   [$15]       1569  st([vTicks])                    #2
              0304 0116  ld   [$16]       1570  ld([vPC])                       #3 Advance vPC
              0305 8002  adda $02         1571  adda(2)                         #4
                                          1572  label('.next3')
.next3:       0306 d216  st   [$16],x     1573  st([vPC],X)                     #5
              0307 0d00  ld   [y,x]       1574  ld([Y,X])                       #6 Fetch opcode (actually a branch target)
              0308 de00  st   [y,x++]     1575  st([Y,Xpp])                     #7 Just X++
              0309 fe00  bra  ac          1576  bra(AC)                         #8 Dispatch
              030a 0d00  ld   [y,x]       1577  ld([Y,X])                       #9 Prefetch operand
                                          1578
                                          1579  # Resync with video driver and transfer control
                                          1580  label('EXIT')
EXIT:         030b 800f  adda $0f         1581  adda(maxTicks)                  #3
                                          1582  label('RESYNC')
RESYNC:       030c e40c  bgt  RESYNC      1583  bgt(pc()&255)                   #4 Resync
              030d a001  suba $01         1584  suba(1)                         #5
              030e 1401  ld   $01,y       1585  ld(hi('vBlankStart'),Y)         #6
              030f e11e  jmp  y,[$1e]     1586  jmp(Y,[vReturn])                #7 To video driver
              0310 0000  ld   $00         1587  ld(0)                           #8 AC should be 0 already. Still..
                                          1588  assert vCPU_overhead ==          9
                                          1589
                                          1590  # pc = 0x0311, Opcode = 0x11
                                          1591  # Instruction LDWI: Load immediate word constant (vAC=D), 24 cycles
                                          1592  label('LDWI')
LDWI:         0311 140b  ld   $0b,y       1593  ld(hi('ldwi#13'),Y)             #10
              0312 e0b0  jmp  y,$b0       1594  jmp(Y,'ldwi#13')                #11
              0313 1517  ld   [$17],y     1595  ld([vPC+1],Y)                   #12
                                          1596
                                          1597  # pc = 0x0314, Opcode = 0x14
                                          1598  # Instruction DEC: Decrement byte var ([D]--), 22 cycles
                                          1599  label('DEC')
DEC:          0314 1416  ld   $16,y       1600  ld(hi('dec#13'),Y)              #10
              0315 e007  jmp  y,$07       1601  jmp(Y,'dec#13')                 #11
                                          1602  # dummy                         #12 Overlap
                                          1603  #
                                          1604  # pc = 0x0316, Opcode = 0x16
                                          1605  # Instruction MOVQB: Load a byte var with a small constant 0..255, 28 cycles
                                          1606  label('MOVQB')
MOVQB:        0316 1416  ld   $16,y       1607  ld(hi('movqb#13'),Y)            #10 #12
              0317 e061  jmp  y,$61       1608  jmp(Y,'movqb#13')               #11
                                          1609  # dummy                         #12 Overlap
                                          1610  #
                                          1611  # pc = 0x0318, Opcode = 0x18
                                          1612  # Instruction LSRB: Logical shift right on a byte var, 28 cycles
                                          1613  label('LSRB')
LSRB:         0318 1416  ld   $16,y       1614  ld(hi('lsrb#13'),Y)             #10 #12
              0319 e07e  jmp  y,$7e       1615  jmp(Y,'lsrb#13')                #11
                                          1616  # dummy                         #12 Overlap
                                          1617  #
                                          1618  # pc = 0x031a, Opcode = 0x1a
                                          1619  # Instruction LD: Load byte from zero page (vAC=[D]), 22 cycles
                                          1620  label('LD')
LD:           031a 1416  ld   $16,y       1621  ld(hi('ld#13'),Y)               #10 #12
              031b e00e  jmp  y,$0e       1622  jmp(Y,'ld#13')                  #11
                                          1623  # dummy                         #12 Overlap
                                          1624  #
                                          1625  # pc = 0x031c, Opcode = 0x1c
                                          1626  # Instruction LOKEQI: Loke immediate unsigned word into address contained in [vAC], 34 cycles
                                          1627  label('LOKEQI')
LOKEQI:       031c 142d  ld   $2d,y       1628  ld(hi('lokeqi#13'),Y)           #10 #12
              031d e0b4  jmp  y,$b4       1629  jmp(Y,'lokeqi#13')              #11
              031e c21d  st   [$1d]       1630  st([vTmp])                      #12 imm.1
                                          1631
                                          1632  # pc = 0x031f, Opcode = 0x1f
                                          1633  # Instruction CMPHS: Adjust high byte for signed compare (vACH=XXX), 28 cycles
                                          1634  label('CMPHS')
CMPHS:        031f 140b  ld   $0b,y       1635  ld(hi('cmphs#13'),Y)            #10
              0320 e0d8  jmp  y,$d8       1636  jmp(Y,'cmphs#13')               #11
                                          1637  # dummy                         #12 Overlap, not dependent on ld(AC,X) anymore
                                          1638  #
                                          1639  # pc = 0x0321, Opcode = 0x21
                                          1640  # Instruction LDW: Load word from zero page (vAC=[D]+256*[D+1]), 24 cycles
                                          1641  label('LDW')
LDW:          0321 1416  ld   $16,y       1642  ld(hi('ldw#13'),Y)              #10 #12
              0322 e0b9  jmp  y,$b9       1643  jmp(Y,'ldw#13')                 #11
                                          1644  # dummy                         #12 Overlap
                                          1645  #
                                          1646  # pc = 0x0323, Opcode = 0x23
                                          1647  # Instruction PEEK+: Peek byte at address contained in var, inc var, 30 cycles
                                          1648  label('PEEK+')
PEEK+:        0323 1404  ld   $04,y       1649  ld(hi('peek+#13'),Y)            #10 #12
              0324 e08f  jmp  y,$8f       1650  jmp(Y,'peek+#13')               #11
                                          1651  # dummy                         #12 Overlap
                                          1652  #
                                          1653  # pc = 0x0325, Opcode = 0x25
                                          1654  # Instruction POKEI: Poke immediate byte into address contained in [vAC], 20 cycles
                                          1655  label('POKEI')
POKEI:        0325 1417  ld   $17,y       1656  ld(hi('pokei#13'),Y)            #10 #12
              0326 e0ca  jmp  y,$ca       1657  jmp(Y,'pokei#13')               #11
                                          1658  # dummy                         #12 Overlap
                                          1659  #
                                          1660  # pc = 0x0327, Opcode = 0x27
                                          1661  # Instruction LSLV: Logical shift left word var, 28 cycles
                                          1662  label('LSLV')
LSLV:         0327 1416  ld   $16,y       1663  ld(hi('lslv#13'),Y)             #10 #12
              0328 e0a5  jmp  y,$a5       1664  jmp(Y,'lslv#13')                #11
                                          1665  # dummy                         #12 Overlap
                                          1666  #
                                          1667  # pc = 0x0329, Opcode = 0x29
                                          1668  # Instruction ADDBA: vAC += var.lo, 28 cycles
                                          1669  label('ADDBA')
ADDBA:        0329 1417  ld   $17,y       1670  ld(hi('addba#13'),Y)            #10 #12
              032a e086  jmp  y,$86       1671  jmp(Y,'addba#13')               #11
                                          1672  # dummy                         #12 Overlap
                                          1673  #
                                          1674  # pc = 0x032b, Opcode = 0x2b
                                          1675  # Instruction STW: Store word in zero page ([D],[D+1]=vAC&255,vAC>>8), 24 cycles
                                          1676  label('STW')
STW:          032b 1416  ld   $16,y       1677  ld(hi('stw#13'),Y)              #10 #12
              032c e0c3  jmp  y,$c3       1678  jmp(Y,'stw#13')                 #11
                                          1679  # dummy                         #12 Overlap
                                          1680  #
                                          1681  # pc = 0x032d, Opcode = 0x2d
                                          1682  # Instruction ADDBI: Add a constant 0..255 to byte var, 28 cycles
                                          1683  label('ADDBI')
ADDBI:        032d 1416  ld   $16,y       1684  ld(hi('addbi#13'),Y)            #10 #12
              032e e0da  jmp  y,$da       1685  jmp(Y,'addbi#13')               #11
                                          1686  # dummy                         #12 Overlap
                                          1687  #
                                          1688  # pc = 0x032f, Opcode = 0x2f
                                          1689  # Instruction PREFX2
                                          1690  label('PREFX2')
PREFX2:       032f 1414  ld   $14,y       1691  ld(hi('prefx2#13'),Y)           #10 #12
              0330 e0ed  jmp  y,$ed       1692  jmp(Y,'prefx2#13')              #11
              0331 c22b  st   [$2b]       1693  st([sysArgs+7])                 #12 Operand
                                          1694
                                          1695  # pc = 0x0332, Opcode = 0x32
                                          1696  # Instruction DBNE:  Decrement byte var and branch if not zero, 28 cycles
                                          1697  label('DBNE')
DBNE:         0332 1415  ld   $15,y       1698  ld(hi('dbne#13'),Y)             #10
              0333 e053  jmp  y,$53       1699  jmp(Y,'dbne#13')                #11
              0334 1517  ld   [$17],y     1700  ld([vPC+1],Y)                   #12 vPC.hi
                                          1701
                                          1702  # pc = 0x0335, Opcode = 0x35
                                          1703  # Instruction BCC: Test AC sign and branch conditionally, variable, (24-26), cycles
                                          1704  label('BCC')
BCC:          0335 fe00  bra  ac          1705  bra(AC)                         #10 AC is the conditional operand
              0336 de00  st   [y,x++]     1706  st([Y,Xpp])                     #11 X++
                                          1707
                                          1708  # pc = 0x0337, Opcode = 0x37
                                          1709  # Instruction DOKEI: Doke immediate word into address contained in [vAC], 30 cycles
                                          1710  label('DOKEI')
DOKEI:        0337 1417  ld   $17,y       1711  ld(hi('dokei#13'),Y)            #10
              0338 e0d0  jmp  y,$d0       1712  jmp(Y,'dokei#13')               #11
                                          1713  # dummy                         #12 Overlap
                                          1714  #
                                          1715  # pc = 0x0339, Opcode = 0x39
                                          1716  # Instruction PEEKV: Read byte from address contained in var, 30 cycles
                                          1717  label('PEEKV')
PEEKV:        0339 1416  ld   $16,y       1718  ld(hi('peekv#13'),Y)            #10
              033a e086  jmp  y,$86       1719  jmp(Y,'peekv#13')               #11
                                          1720  # dummy                         #12 Overlap
                                          1721  #
                                          1722  # pc = 0x033b, Opcode = 0x3b
                                          1723  # Instruction DEEKV: Read word from address contained in var, 28 cycles
                                          1724  label('DEEKV')
DEEKV:        033b 1416  ld   $16,y       1725  ld(hi('deekv#13'),Y)            #10 #12
              033c e095  jmp  y,$95       1726  jmp(Y,'deekv#13')               #11
                                          1727  # dummy                         #12 Overlap
                                          1728  #
                                          1729  # pc = 0x033d, Opcode = 0x3d
                                          1730  # Instruction LOKEI: Loke immediate long into address contained in [vAC], 42 cycles
                                          1731  label('LOKEI')
LOKEI:        033d 142d  ld   $2d,y       1732  ld(hi('lokei#13'),Y)            #10
              033e e0ce  jmp  y,$ce       1733  jmp(Y,'lokei#13')               #11
                                          1734  # dummy                         #12 Overlap
                                          1735  #
                                          1736  # pc = 0x033f, Opcode = 0x3f
                                          1737  # Conditional EQ: Branch if zero (if(vACL==0)vPCL=D)
              033f 1417  ld   $17,y       1738  ld(hi('beq#15'),Y)              #12 #12
              0340 e027  jmp  y,$27       1739  jmp(Y,'beq#15')                 #13
              0341 1517  ld   [$17],y     1740  ld([vPC+1],Y)                   #14 vPC.hi
                                          1741
                                          1742  # pc = 0x0342, Opcode = 0x42
                                          1743  # Instruction ADDVI: Add 8bit immediate to 16bit zero page var, var += imm, vAC = var, 50 cycles
                                          1744  label('ADDVI')
ADDVI:        0342 1428  ld   $28,y       1745  ld(hi('addvi#13'),Y)            #10
              0343 e000  jmp  y,$00       1746  jmp(Y,'addvi#13')               #11
                                          1747  # dummy                         #12 Overlap
                                          1748
                                          1749  # pc = 0x0344, Opcode = 0x44
                                          1750  # Instruction SUBVI: Subtract 8bit immediate from 16bit zero page var, var -= imm, vAC = var, 50 cycles
                                          1751  label('SUBVI')
SUBVI:        0344 1428  ld   $28,y       1752  ld(hi('subvi#13'),Y)            #10 #12
              0345 e039  jmp  y,$39       1753  jmp(Y,'subvi#13')               #11
                                          1754  # dummy                         #12 Overlap
                                          1755
                                          1756  # pc = 0x0346, Opcode = 0x46
                                          1757  # Instruction DOKE+: doke word in vAC to address contained in var, var += 2, 30 cycles
                                          1758  label('DOKE+')
DOKE+:        0346 1418  ld   $18,y       1759  ld(hi('doke+#13'),Y)            #10 #12
              0347 e012  jmp  y,$12       1760  jmp(Y,'doke+#13')               #11
                                          1761  # dummy                         #12 Overlap
                                          1762  #
                                          1763  # pc = 0x0348, Opcode = 0x48
                                          1764  # Instruction NOTB: var.lo = ~var.lo, 22 cycles
                                          1765  label('NOTB')
NOTB:         0348 1418  ld   $18,y       1766  ld(hi('notb#13'),Y)             #10 #12
              0349 e00b  jmp  y,$0b       1767  jmp(Y,'notb#13')                #11
                                          1768  # dummy                         #12 Overlap
                                          1769  #
                                          1770  # pc = 0x034a, Opcode = 0x4a
                                          1771  # Instruction DJGE:
                                          1772  label('DJGE')
DJGE:         034a 142b  ld   $2b,y       1773  ld(hi('djge#13'),Y)             #10 #12
              034b e000  jmp  y,$00       1774  jmp(Y,'djge#13')                #11
              034c 1517  ld   [$17],y     1775  ld([vPC+1],Y)                   #12
                                          1776
                                          1777  # pc = 0x034d, Opcode = 0x4d
                                          1778  # Conditional GT: Branch if positive (if(vACL>0)vPCL=D)
              034d 1417  ld   $17,y       1779  ld(hi('bgt#15'),Y)              #12
              034e e043  jmp  y,$43       1780  jmp(Y,'bgt#15')                 #13
              034f 1517  ld   [$17],y     1781  ld([vPC+1],Y)                   #14 vPC.hi
                                          1782
                                          1783  # pc = 0x0350, Opcode = 0x50
                                          1784  # Conditional LT: Branch if negative (if(vACL<0)vPCL=D)
              0350 1417  ld   $17,y       1785  ld(hi('blt#15'),Y)              #12
              0351 e058  jmp  y,$58       1786  jmp(Y,'blt#15')                 #13
              0352 1517  ld   [$17],y     1787  ld([vPC+1],Y)                   #14 vPC.hi
                                          1788
                                          1789  # pc = 0x0353, Opcode = 0x53
                                          1790  # Conditional GE: Branch if positive or zero (if(vACL>=0)vPCL=D)
              0353 1417  ld   $17,y       1791  ld(hi('bge#15'),Y)              #12
              0354 e065  jmp  y,$65       1792  jmp(Y,'bge#15')                 #13
              0355 1517  ld   [$17],y     1793  ld([vPC+1],Y)                   #14 vPC.hi
                                          1794
                                          1795  # pc = 0x0356, Opcode = 0x56
                                          1796  # Conditional LE: Branch if negative or zero (if(vACL<=0)vPCL=D)
              0356 1417  ld   $17,y       1797  ld(hi('ble#15'),Y)              #12
              0357 e072  jmp  y,$72       1798  jmp(Y,'ble#15')                 #13
              0358 1517  ld   [$17],y     1799  ld([vPC+1],Y)                   #14 vPC.hi
                                          1800
                                          1801  # pc = 0x0359, Opcode = 0x59
                                          1802  # Instruction LDI: Load immediate small positive constant (vAC=D), 20 cycles
                                          1803  label('LDI')
LDI:          0359 1416  ld   $16,y       1804  ld(hi('ldi#13'),Y)              #10
              035a e016  jmp  y,$16       1805  jmp(Y,'ldi#13')                 #11
                                          1806  # dummy                         #12 Overlap
                                          1807  #
                                          1808  # pc = 0x035b, Opcode = 0x5b
                                          1809  # Instruction MOVQW: Load a word var with a small constant 0..255, 30 cycles
                                          1810  label('MOVQW')
MOVQW:        035b 1416  ld   $16,y       1811  ld(hi('movqw#13'),Y)            #10 #12
              035c e06e  jmp  y,$6e       1812  jmp(Y,'movqw#13')               #11
              035d 1517  ld   [$17],y     1813  ld([vPC+1],Y)                   #12 vPC.hi
                                          1814
                                          1815  # pc = 0x035e, Opcode = 0x5e
                                          1816  # Instruction ST: Store byte in zero page ([D]=vAC&255), 20 cycles
                                          1817  label('ST')
ST:           035e 1416  ld   $16,y       1818  ld(hi('st#13'),Y)               #10
              035f e01c  jmp  y,$1c       1819  jmp(Y,'st#13')                  #11
                                          1820  # dummy                         #12 Overlap
                                          1821  #
                                          1822  # pc = 0x0360, Opcode = 0x60
                                          1823  # Instruction DEEK+: Deek word at address contained in var, var += 2, 30 cycles
                                          1824  label('DEEK+')
DEEK+:        0360 1417  ld   $17,y       1825  ld(hi('deek+#13'),Y)            #10 #12
              0361 e0df  jmp  y,$df       1826  jmp(Y,'deek+#13')               #11
              0362 1400  ld   $00,y       1827  ld(0,Y)                         #12
                                          1828
                                          1829  # pc = 0x0363, Opcode = 0x63
                                          1830  # Instruction POP: Pop address from stack (vLR,vSP==[vSP]+256*[vSP+1],vSP+2), 30 cycles
                                          1831  label('POP')
POP:          0363 140b  ld   $0b,y       1832  ld(hi('pop#13'),Y)              #10
              0364 e0ba  jmp  y,$ba       1833  jmp(Y,'pop#13')                 #11
                                          1834  # dummy                         #12 Overlap
                                          1835  #
                                          1836  # pc = 0x0365, Opcode = 0x65
                                          1837  # Instruction MOV: Moves a byte from src var to dst var, 28 cycles
                                          1838  label('MOV')
MOV:          0365 1416  ld   $16,y       1839  ld(hi('mov#13'),Y)              #10 #12
              0366 e02c  jmp  y,$2c       1840  jmp(Y,'mov#13')                 #11
                                          1841  # dummy                         #12 Overlap
                                          1842  #
                                          1843  # pc = 0x0367, Opcode = 0x67
                                          1844  # Instruction PEEKA: Peek a byte from [vAC] to var, 24 cycles
                                          1845  label('PEEKA')
PEEKA:        0367 1416  ld   $16,y       1846  ld(hi('peeka#13'),Y)            #10 #12
              0368 e03a  jmp  y,$3a       1847  jmp(Y,'peeka#13')               #11
                                          1848  # dummy                         #12 Overlap
                                          1849  #
                                          1850  # pc = 0x0369, Opcode = 0x69
                                          1851  # Instruction POKEA: Poke a byte from var to [vAC], 22 cycles
                                          1852  label('POKEA')
POKEA:        0369 1417  ld   $17,y       1853  ld(hi('pokea#13'),Y)            #10 #12
              036a e0b2  jmp  y,$b2       1854  jmp(Y,'pokea#13')               #11
                                          1855  # dummy                         #12 Overlap
                                          1856
                                          1857  # pc = 0x036b, Opcode = 0x6b
                                          1858  # Instruction TEQ: Test for EQ, returns 0x0000 or 0x0101 in vAC, 28 cycles
                                          1859  label('TEQ')
TEQ:          036b 1415  ld   $15,y       1860  ld(hi('teq#13'),Y)              #10 #12
              036c e066  jmp  y,$66       1861  jmp(Y,'teq#13')                 #11
                                          1862  # dummy                         #12 Overlap
                                          1863  #
                                          1864  # pc = 0x036d, Opcode = 0x6d
                                          1865  # Instruction TNE: Test for NE, returns 0x0000 or 0x0101 in vAC, 28 cycles
                                          1866  label('TNE')
TNE:          036d 1415  ld   $15,y       1867  ld(hi('tne#13'),Y)              #10 #12
              036e e075  jmp  y,$75       1868  jmp(Y,'tne#13')                 #11
                                          1869  # dummy                         #12 Overlap
                                          1870  #
                                          1871  # pc = 0x036f, Opcode = 0x6f
                                          1872  # Instruction DEEKA: Deek a word from [vAC] to var, 30 cycles
                                          1873  label('DEEKA')
DEEKA:        036f 1416  ld   $16,y       1874  ld(hi('deeka#13'),Y)            #10 #12
              0370 e043  jmp  y,$43       1875  jmp(Y,'deeka#13')               #11
              0371 c21d  st   [$1d]       1876  st([vTmp])                      #12 mask
                                          1877
                                          1878  # pc = 0x0372, Opcode = 0x72
                                          1879  # Conditional NE: Branch if not zero (if(vACL!=0)vPCL=D)
              0372 1417  ld   $17,y       1880  ld(hi('bne#15'),Y)              #12
              0373 e035  jmp  y,$35       1881  jmp(Y,'bne#15')                 #13
              0374 1517  ld   [$17],y     1882  ld([vPC+1],Y)                   #14 vPC.hi
                                          1883
                                          1884  # pc = 0x0375, Opcode = 0x75
                                          1885  # Instruction PUSH: Push vLR on stack ([vSP-2],v[vSP-1],vSP=vLR&255,vLR>>8,vLR-2), 30 cycles
                                          1886  label('PUSH')
PUSH:         0375 140b  ld   $0b,y       1887  ld(hi('push#13'),Y)             #10
              0376 e0ca  jmp  y,$ca       1888  jmp(Y,'push#13')                #11
                                          1889  # dummy                         #12 Overlap
                                          1890  #
                                          1891  # pc = 0x0377, Opcode = 0x77
                                          1892  # Instruction SUBBA: vAC -= var.lo, 28 cycles
                                          1893  label('SUBBA')
SUBBA:        0377 1417  ld   $17,y       1894  ld(hi('subba#13'),Y)            #10 #12
              0378 e09c  jmp  y,$9c       1895  jmp(Y,'subba#13')               #11
                                          1896  # dummy                         #12 Overlap
                                          1897  #
                                          1898  # pc = 0x0379, Opcode = 0x79
                                          1899  # Instruction INCW: Increment word var, 24-26 cycles
                                          1900  label('INCW')
INCW:         0379 1415  ld   $15,y       1901  ld(hi('incw#13'),Y)             #10 #12
              037a e034  jmp  y,$34       1902  jmp(Y,'incw#13')                #11
                                          1903  # dummy                         #12 Overlap
                                          1904  #
                                          1905  # pc = 0x037b, Opcode = 0x7b
                                          1906  # Instruction DECW: Decrement word var, 24-28 cycles
                                          1907  label('DECW')
DECW:         037b 1415  ld   $15,y       1908  ld(hi('decw#13'),Y)             #10 #12
              037c e043  jmp  y,$43       1909  jmp(Y,'decw#13')                #11
                                          1910  # dummy                         #12 Overlap
                                          1911  #
                                          1912  # pc = 0x037d, Opcode = 0x7d
                                          1913  # Instruction DOKEA: Doke a word from var to [vAC], 30 cycles
                                          1914  label('DOKEA')
DOKEA:        037d 1417  ld   $17,y       1915  ld(hi('dokea#13'),Y)            #10 #12
              037e e0ba  jmp  y,$ba       1916  jmp(Y,'dokea#13')               #11
                                          1917  # dummy                         #12 Overlap
                                          1918
                                          1919  # pc = 0x037f, Opcode = 0x7f
                                          1920  # Instruction LUP: ROM lookup (vAC=ROM[vAC+D]), 26 cycles
                                          1921  label('LUP')
LUP:          037f 1519  ld   [$19],y     1922  ld([vAC+1],Y)                   #10 #12
              0380 e0fb  jmp  y,$fb       1923  jmp(Y,251)                      #11 Trampoline offset
              0381 8118  adda [$18]       1924  adda([vAC])                     #12
                                          1925
                                          1926  # pc = 0x0382, Opcode = 0x82
                                          1927  # Instruction ANDI: Logical-AND with small constant (vAC&=D), 20 cycles
                                          1928  label('ANDI')
ANDI:         0382 1404  ld   $04,y       1929  ld(hi('andi#13'),Y)             #10
              0383 e022  jmp  y,$22       1930  jmp(Y,'andi#13')                #11
              0384 2118  anda [$18]       1931  anda([vAC])                     #12
                                          1932
                                          1933  # pc = 0x0385, Opcode = 0x85
                                          1934  # Instruction CALLI: Goto immediate address and remember vPC (vLR,vPC=vPC+3,$HHLL-2), 28 cycles
                                          1935  label('CALLI')
CALLI:        0385 1417  ld   $17,y       1936  ld(hi('calli#13'),Y)            #10
              0386 e000  jmp  y,$00       1937  jmp(Y,'calli#13')               #11
              0387 0116  ld   [$16]       1938  ld([vPC])                       #12
                                          1939
                                          1940  # pc = 0x0388, Opcode = 0x88
                                          1941  # Instruction ORI: Logical-OR with small constant (vAC|=D), 20 cycles
                                          1942  label('ORI')
ORI:          0388 1416  ld   $16,y       1943  ld(hi('ori#13'),Y)              #10
              0389 e022  jmp  y,$22       1944  jmp(Y,'ori#13')                 #11
                                          1945  # dummy                         #12 Overlap
                                          1946  #
                                          1947  # pc = 0x038a, Opcode = 0x8a
                                          1948  # Instruction PEEKA+: Peek a byte from [vAC] to var, incw vAC, 28 to 30 cycles
                                          1949  label('PEEKA+')
PEEKA+:       038a 1414  ld   $14,y       1950  ld(hi('peeka+#13'),Y)           #10 #12
              038b e046  jmp  y,$46       1951  jmp(Y,'peeka+#13')              #11
                                          1952  # dummy                         #12 Overlap
                                          1953  #
                                          1954  # pc = 0x038c, Opcode = 0x8c
                                          1955  # Instruction XORI: Logical-XOR with small constant (vAC^=D), 20 cycles
                                          1956  label('XORI')
XORI:         038c 1418  ld   $18,y       1957  ld(hi('xori#13'),Y)             #10 #12
              038d e022  jmp  y,$22       1958  jmp(Y,'xori#13')                #11
                                          1959  # dummy                         #12 Overlap
                                          1960  #
                                          1961  # pc = 0x038e, Opcode = 0x8e
                                          1962  # Instruction DBGE:  Decrement byte var and branch if >= 0, 30 cycles
                                          1963  label('DBGE')
DBGE:         038e 1418  ld   $18,y       1964  ld(hi('dbge#13'),Y)             #10 #12
              038f e030  jmp  y,$30       1965  jmp(Y,'dbge#13')                #11
                                          1966  # dummy                         #12 Overlap
                                          1967  #
                                          1968  # pc = 0x0390, Opcode = 0x90
                                          1969  # Instruction BRA: Branch unconditionally (vPC=(vPC&0xff00)+D), 18 cycles
                                          1970  label('BRA')
BRA:          0390 1418  ld   $18,y       1971  ld(hi('bra#13'),Y)              #10 #12
              0391 e02d  jmp  y,$2d       1972  jmp(Y,'bra#13')                 #11
              0392 c216  st   [$16]       1973  st([vPC])                       #12
                                          1974
                                          1975  # pc = 0x0393, Opcode = 0x93
                                          1976  # Instruction INC: Increment zero page byte ([D]++), 20 cycles
                                          1977  label('INC')
INC:          0393 1416  ld   $16,y       1978  ld(hi('inc#13'),Y)              #10
              0394 e000  jmp  y,$00       1979  jmp(Y,'inc#13')                 #11
                                          1980  # dummy                         #12 Overlap
                                          1981  #
                                          1982  # pc = 0x0395, Opcode = 0x95
                                          1983  # Instruction INCWA: Increment word var, vAC=var, 26-28 cycles
                                          1984  label('INCWA')
INCWA:        0395 1415  ld   $15,y       1985  ld(hi('incwa#13'),Y)            #10 #12
              0396 e0cc  jmp  y,$cc       1986  jmp(Y,'incwa#13')               #11
                                          1987  # dummy                         #12 Overlap
                                          1988  #
                                          1989  # pc = 0x0397, Opcode = 0x97
                                          1990  # Instruction CMPHU: Adjust high byte for unsigned compare (vACH=XXX), 28 cycles
                                          1991  label('CMPHU')
CMPHU:        0397 140b  ld   $0b,y       1992  ld(hi('cmphu#13'),Y)            #10 #12
              0398 e0e6  jmp  y,$e6       1993  jmp(Y,'cmphu#13')               #11
                                          1994  # dummy                         #12 Overlap, not dependent on ld(AC,X) anymore
                                          1995  #
                                          1996  # pc = 0x0399, Opcode = 0x99
                                          1997  # Instruction ADDW: Word addition with zero page (vAC+=[D]+256*[D+1]), 30 cycles
                                          1998  label('ADDW')
ADDW:         0399 1400  ld   $00,y       1999  ld(hi('addw#13'),Y)             #10 #12
              039a e080  jmp  y,$80       2000  jmp(Y,'addw#13')                #11 Y=0
              039b 1200  ld   ac,x        2001  ld(AC,X)                        #12 Address of low byte to be added
                                          2002
                                          2003  # pc = 0x039c, Opcode = 0x9c
                                          2004  # Instruction LDNI: Load an 8bit immediate as a negative 16bit immediate into vAC, 22 cycles
                                          2005  label('LDNI')
LDNI:         039c 1418  ld   $18,y       2006  ld(hi('ldni#13'),Y)             #10
              039d e044  jmp  y,$44       2007  jmp(Y,'ldni#13')                #11
                                          2008  # dummy                         #12 Overlap
                                          2009
                                          2010  # pc = 0x039e, Opcode = 0x9e
                                          2011  # Instruction ANDBK: vAC = var & imm, 30 cycles
                                          2012  label('ANDBK')
ANDBK:        039e 1418  ld   $18,y       2013  ld(hi('andbk#13'),Y)            #10 #12
              039f e04c  jmp  y,$4c       2014  jmp(Y,'andbk#13')               #11
                                          2015  # dummy                         #12 Overlap
                                          2016
                                          2017  # pc = 0x03a0, Opcode = 0xa0
                                          2018  # Instruction ORBK: vAC = var | imm, 30 cycles
                                          2019  label('ORBK')
ORBK:         03a0 1418  ld   $18,y       2020  ld(hi('orbk#13'),Y)             #10 #12
              03a1 e05c  jmp  y,$5c       2021  jmp(Y,'orbk#13')                #11
                                          2022  # dummy                         #12 Overlap
                                          2023
                                          2024  # pc = 0x03a2, Opcode = 0xa2
                                          2025  # Instruction XORBK: vAC = var ^ imm, 30 cycles
                                          2026  label('XORBK')
XORBK:        03a2 1418  ld   $18,y       2027  ld(hi('xorbk#13'),Y)            #10 #12
              03a3 e06c  jmp  y,$6c       2028  jmp(Y,'xorbk#13')               #11
                                          2029  # dummy                         #12 Overlap
                                          2030
                                          2031  # pc = 0x03a4, Opcode = 0xa4, 26 to 46 cycles
                                          2032  # Instruction DJNE:
                                          2033  label('DJNE')
DJNE:         03a4 142a  ld   $2a,y       2034  ld(hi('djne#13'),Y)             #10 #12
              03a5 e0a6  jmp  y,$a6       2035  jmp(Y,'djne#13')                #11
              03a6 1517  ld   [$17],y     2036  ld([vPC+1],Y)                   #12
                                          2037
                                          2038  # pc = 0x03a7, Opcode = 0xa7
                                          2039  # Instruction CMPI: Compare byte variable to 8bit immediate, 36 cycles
                                          2040  label('CMPI')
CMPI:         03a7 1418  ld   $18,y       2041  ld(hi('cmpi#13'),Y)             #10
              03a8 e07c  jmp  y,$7c       2042  jmp(Y,'cmpi#13')                #11
                                          2043  # dummy                         #12 Overlap
                                          2044
                                          2045  # pc = 0x03a9, Opcode = 0xa9
                                          2046  # Instruction ADDVW: Add two 16bit zero page vars, dst += src, vAC = dst, 28 to 54 cycles
                                          2047  label('ADDVW')
ADDVW:        03a9 1414  ld   $14,y       2048  ld(hi('addvw#13'),Y)            #10 #12
              03aa e05b  jmp  y,$5b       2049  jmp(Y,'addvw#13')               #11
                                          2050  # dummy                         #12 Overlap
                                          2051
                                          2052  # pc = 0x03ab, Opcode = 0xab
                                          2053  # Instruction SUBVW: Subtract two 16bit zero page vars, dst -= src, vAC = dst, 30 to 54 cycles
                                          2054  label('SUBVW')
SUBVW:        03ab 1414  ld   $14,y       2055  ld(hi('subvw#13'),Y)            #10 #12
              03ac e0a4  jmp  y,$a4       2056  jmp(Y,'subvw#13')               #11
                                          2057  # dummy                         #12 Overlap
                                          2058
                                          2059  # pc = 0x03ad, Opcode = 0xad
                                          2060  # Instruction PEEK: Read byte from memory (vAC=[vAC]), 26 cycles
                                          2061  label('PEEK')
PEEK:         03ad 1404  ld   $04,y       2062  ld(hi('peek#13'),Y)             #10 #12
              03ae e052  jmp  y,$52       2063  jmp(Y,'peek#13')                #11
                                          2064  # dummy                         #12 Overlap
                                          2065  #
                                          2066  # The 'SYS' vCPU instruction first checks the number of desired ticks given by
                                          2067  # the operand. As long as there are insufficient ticks available in the current
                                          2068  # time slice, the instruction will be retried. This will effectively wait for
                                          2069  # the next scan line if the current slice is almost out of time. Then a jump to
                                          2070  # native code is made. This code can do whatever it wants, but it must return
                                          2071  # to the 'REENTER' label when done. When returning, AC must hold (the negative
                                          2072  # of) the actual consumed number of whole ticks for the entire virtual
                                          2073  # instruction cycle (from NEXT to NEXT). This duration may not exceed the prior
                                          2074  # declared duration in the operand + 28 (or maxTicks). The operand specifies the
                                          2075  # (negative) of the maximum number of *extra* ticks that the native call will
                                          2076  # need. The GCL compiler automatically makes this calculation from gross number
                                          2077  # of cycles to excess number of ticks.
                                          2078  # SYS functions can modify vPC to implement repetition. For example to split
                                          2079  # up work into multiple chucks.
                                          2080  label('.sys#13')
.sys#13:      03af 1418  ld   $18,y       2081  ld(hi('.sys#16'),Y)             #13 #12
              03b0 e000  jmp  y,$00       2082  jmp(Y,'.sys#16')                #14
                                          2083  # dummy                         #15 Overlap
                                          2084  #
                                          2085  # pc = 0x03b1, Opcode = 0xb1
                                          2086  # Instruction PREFX1
                                          2087  label('PREFX1')
PREFX1:       03b1 1414  ld   $14,y       2088  ld(hi('prefx1#13'),Y)           #10 #15
              03b2 e0f5  jmp  y,$f5       2089  jmp(Y,'prefx1#13')              #11
              03b3 0023  ld   $23         2090  ld(hi('PREFX1_PAGE'))           #12 ENTER is at $(n-1)ff, where n = instruction page
                                          2091
                                          2092  # pc = 0x03b4, Opcode = 0xb4
                                          2093  # Instruction SYS: Native call, <=256 cycles (<=128 ticks, in reality less)
                                          2094  label('SYS')
SYS:          03b4 8115  adda [$15]       2095  adda([vTicks])                  #10
              03b5 e8af  blt  .sys#13     2096  blt('.sys#13')                  #11
              03b6 1523  ld   [$23],y     2097  ld([sysFn+1],Y)                 #12
              03b7 e122  jmp  y,[$22]     2098  jmp(Y,[sysFn])                  #13
                                          2099  # dummy                         #14 Overlap
                                          2100  #
                                          2101  # pc = 0x03b8, Opcode = 0xb8
                                          2102  # Instruction SUBW: Word subtract with zero page (AC-=[D]+256*[D+1]), 30 cycles
                                          2103  label('SUBW')
SUBW:         03b8 1417  ld   $17,y       2104  ld(hi('subw#13'),Y)             #10 #14
              03b9 e00c  jmp  y,$0c       2105  jmp(Y,'subw#13')                #11 Y=0
              03ba 1200  ld   ac,x        2106  ld(AC,X)                        #12 Address of low byte to be added
                                          2107
                                          2108  # pc = 0x03bb, Opcode = 0xbb
                                          2109  # Instruction JEQ: jump to 16bit address if vAC=0
                                          2110  label('JEQ')
JEQ:          03bb 1418  ld   $18,y       2111  ld(hi('jeq#13'),Y)              #10
              03bc e0a2  jmp  y,$a2       2112  jmp(Y,'jeq#13')                 #11
                                          2113  # dummy                         #12 Overlap
                                          2114  #
                                          2115  # pc = 0x03bd, Opcode = 0xbd
                                          2116  # Instruction JNE: jump to 16bit address if vAC!=0
                                          2117  label('JNE')
JNE:          03bd 1418  ld   $18,y       2118  ld(hi('jne#13'),Y)              #10 #12
              03be e0b4  jmp  y,$b4       2119  jmp(Y,'jne#13')                 #11
                                          2120  # dummy                         #12 Overlap
                                          2121  #
                                          2122  # pc = 0x03bf, Opcode = 0xbf
                                          2123  # Instruction JLT: jump to 16bit address if vAC<0
                                          2124  label('JLT')
JLT:          03bf 1418  ld   $18,y       2125  ld(hi('jlt#13'),Y)              #10 #12
              03c0 e0c6  jmp  y,$c6       2126  jmp(Y,'jlt#13')                 #11
                                          2127  # dummy                         #12 Overlap
                                          2128  #
                                          2129  # pc = 0x03c1, Opcode = 0xc1
                                          2130  # Instruction JGT: jump to 16bit address if vAC>0
                                          2131  label('JGT')
JGT:          03c1 1414  ld   $14,y       2132  ld(hi('jgt#13'),Y)              #10 #12
              03c2 e000  jmp  y,$00       2133  jmp(Y,'jgt#13')                 #11
                                          2134  # dummy                         #12 Overlap
                                          2135  #
                                          2136  # pc = 0x03c3, Opcode = 0xc3
                                          2137  # Instruction JLE: jump to 16bit address if vAC<=0
                                          2138  label('JLE')
JLE:          03c3 1414  ld   $14,y       2139  ld(hi('jle#13'),Y)              #10 #12
              03c4 e019  jmp  y,$19       2140  jmp(Y,'jle#13')                 #11
                                          2141  # dummy                         #12 Overlap
                                          2142  #
                                          2143  # pc = 0x03c5, Opcode = 0xc5
                                          2144  # Instruction JGE: jump to 16bit address if vAC>=0
                                          2145  label('JGE')
JGE:          03c5 1414  ld   $14,y       2146  ld(hi('jge#13'),Y)              #10 #12
              03c6 e035  jmp  y,$35       2147  jmp(Y,'jge#13')                 #11
                                          2148  # dummy                         #12 Overlap
                                          2149  #
                                          2150  # pc = 0x03c7, Opcode = 0xc7
                                          2151  # Instruction PREFX3: switches instruction page to 0x2200
                                          2152  # original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2099#p2099
                                          2153  label('PREFX3')
PREFX3:       03c7 1414  ld   $14,y       2154  ld(hi('prefx3#13'),Y)           #10 #12
              03c8 e0e5  jmp  y,$e5       2155  jmp(Y,'prefx3#13')              #11
              03c9 c22b  st   [$2b]       2156  st([sysArgs+7])                 #12 Second operand
                                          2157
                                          2158  # SYS calls and instruction implementations rely on these labels
                                          2159  label('REENTER_28')
REENTER_28:   03ca 00f2  ld   $f2         2160  ld(-28/2)                       #25
                                          2161  label('REENTER')
REENTER:      03cb fc01  bra  NEXT        2162  bra('NEXT')                     #26 Return from SYS calls
              03cc 1517  ld   [$17],y     2163  ld([vPC+1],Y)                   #27
                                          2164
                                          2165  fillers(until=0xcd)
                                          2166
                                          2167  #
                                          2168  # The instructions below are all implemented in the second code page. Jumping
                                          2169  # back and forth makes each 6 cycles slower, but it also saves space in the
                                          2170  # primary page for the instructions above. Most of them are in fact not very
                                          2171  # critical, as evidenced by the fact that they weren't needed for the first
                                          2172  # Gigatron applications (Snake, Racer, Mandelbrot, Loader). By providing them
                                          2173  # in this way, at least they don't need to be implemented as a SYS extension.
                                          2174  #
                                          2175  # pc = 0x03cd, Opcode = 0xcd
                                          2176  # Instruction DEF: Define data or code (vAC,vPC=vPC+2,(vPC&0xff00)+D), 26 cycles
                                          2177  label('DEF')
DEF:          03cd 1404  ld   $04,y       2178  ld(hi('def#13'),Y)              #10
              03ce e017  jmp  y,$17       2179  jmp(Y,'def#13')                 #11
                                          2180  # dummy                         #12 Overlap
                                          2181  #
                                          2182  # pc = 0x03cf, Opcode = 0xcf
                                          2183  # Instruction CALL: Goto address and remember vPC (vLR,vPC=vPC+2,[D]+256*[D+1]-2), 30 cycles
                                          2184  label('CALL')
CALL:         03cf 1404  ld   $04,y       2185  ld(hi('call#13'),Y)             #10 #12
              03d0 e007  jmp  y,$07       2186  jmp(Y,'call#13')                #11
                                          2187  # dummy                         #12 Overlap
                                          2188  #
                                          2189  # pc = 0x03d1, Opcode = 0xd1
                                          2190  # Instruction POKE+: Poke byte in vAC to address contained in var, inc var, 30 cycles
                                          2191  label('POKE+')
POKE+:        03d1 1416  ld   $16,y       2192  ld(hi('poke+#13'),Y)            #10 #12
              03d2 e0cc  jmp  y,$cc       2193  jmp(Y,'poke+#13')               #11
                                          2194  # dummy                         #12 Overlap
                                          2195  #
                                          2196  # pc = 0x03d3, Opcode = 0xd3
                                          2197  # Instruction LSRV: Logical shift right word var, 56 cycles
                                          2198  label('LSRV')
LSRV:         03d3 142c  ld   $2c,y       2199  ld(hi('lsrv#13'),Y)             #10 #12
              03d4 e048  jmp  y,$48       2200  jmp(Y,'lsrv#13')                #11
                                          2201  # dummy                         #12 Overlap
                                          2202  #
                                          2203  # pc = 0x03d5, Opcode = 0xd5
                                          2204  # Instruction TGE: Test for GE, returns 0x0000 or 0x0101 in vAC, 26 cycles
                                          2205  label('TGE')
TGE:          03d5 1415  ld   $15,y       2206  ld(hi('tge#13'),Y)              #10 #12
              03d6 e084  jmp  y,$84       2207  jmp(Y,'tge#13')                 #11
                                          2208  # dummy                         #12 Overlap
                                          2209  #
                                          2210  # pc = 0x03d7, Opcode = 0xd7
                                          2211  # Instruction TLT: Test for LT, returns 0x0000 or 0x0101 in vAC, 26 cycles
                                          2212  label('TLT')
TLT:          03d7 1415  ld   $15,y       2213  ld(hi('tlt#13'),Y)             #10 #12
              03d8 e092  jmp  y,$92       2214  jmp(Y,'tlt#13')                #11
                                          2215  # dummy                        #12 Overlap
                                          2216  #
                                          2217  # pc = 0x03d9, Opcode = 0xd9
                                          2218  # Instruction TGT: Test for GT, returns 0x0000 or 0x0101 in vAC, 28 cycles
                                          2219  label('TGT')
TGT:          03d9 1415  ld   $15,y       2220  ld(hi('tgt#13'),Y)             #10 #12
              03da e0a0  jmp  y,$a0       2221  jmp(Y,'tgt#13')                #11
                                          2222  # dummy                        #12 Overlap
                                          2223  #
                                          2224  # pc = 0x03db, Opcode = 0xdb
                                          2225  # Instruction TLE: Test for LE, returns 0x0000 or 0x0101 in vAC
                                          2226  label('TLE')
TLE:          03db 1415  ld   $15,y       2227  ld(hi('tle#13'),Y)             #10 #12
              03dc e0b6  jmp  y,$b6       2228  jmp(Y,'tle#13')                #11
                                          2229  # dummy                        #12 Overlap
                                          2230  #
                                          2231  # pc = 0x03dd, Opcode = 0xdd
                                          2232  # Instruction DECWA: Decrement word var, vAC=var, 28-30 cycles
                                          2233  label('DECWA')
DECWA:        03dd 1415  ld   $15,y       2234  ld(hi('decwa#13'),Y)           #10 #12
              03de e0de  jmp  y,$de       2235  jmp(Y,'decwa#13')              #11
                                          2236  # dummy                        #12 Overlap
                                          2237  #
                                          2238  # pc = 0x03df, Opcode = 0xdf
                                          2239  # Instruction ALLOC: Create or destroy stack frame (vSP+=D), 20 cycles
                                          2240  label('ALLOC')
ALLOC:        03df 1416  ld   $16,y       2241  ld(hi('alloc#13'),Y)           #10 #12
              03e0 e027  jmp  y,$27       2242  jmp(Y,'alloc#13')              #11
                                          2243  # dummy                        #12 Overlap
                                          2244  #
                                          2245  # pc = 0x03e1, Opcode = 0xe1
                                          2246  # Instruction SUBBI: Subtract a constant 0..255 from a byte var, 28 cycles
                                          2247  label('SUBBI')
SUBBI:        03e1 1416  ld   $16,y       2248  ld(hi('subbi#13'),Y)            #10 #12
              03e2 e053  jmp  y,$53       2249  jmp(Y,'subbi#13')               #11
                                          2250  # dummy                         #12 Overlap
                                          2251  #
                                          2252  # pc = 0x03e3, Opcode = 0xe3
                                          2253  # Instruction ADDI: Add small positive constant (vAC+=D), 26 cycles
                                          2254  label('ADDI')
ADDI:         03e3 1415  ld   $15,y       2255  ld(hi('addi#13'),Y)             #10 #12
              03e4 e000  jmp  y,$00       2256  jmp(Y,'addi#13')                #11
              03e5 c21d  st   [$1d]       2257  st([vTmp])                      #12
                                          2258
                                          2259  # pc = 0x03e6, Opcode = 0xe6
                                          2260  # Instruction SUBI: Subtract small positive constant (vAC+=D), 26 cycles
                                          2261  label('SUBI')
SUBI:         03e6 1415  ld   $15,y       2262  ld(hi('subi#13'),Y)             #10
              03e7 e014  jmp  y,$14       2263  jmp(Y,'subi#13')                #11
              03e8 c21d  st   [$1d]       2264  st([vTmp])                      #12
                                          2265
                                          2266  # pc = 0x03e9, Opcode = 0xe9
                                          2267  # Instruction LSLW: Logical shift left (vAC<<=1), 28 cycles
                                          2268  # Useful, because ADDW can't add vAC to itself. Also more compact.
                                          2269  label('LSLW')
LSLW:         03e9 1404  ld   $04,y       2270  ld(hi('lslw#13'),Y)             #10
              03ea e028  jmp  y,$28       2271  jmp(Y,'lslw#13')                #11
              03eb 0118  ld   [$18]       2272  ld([vAC])                       #12
                                          2273
                                          2274  # pc = 0x03ec, Opcode = 0xec
                                          2275  # Instruction STLW: Store word in stack frame ([vSP+D],[vSP+D+1]=vAC&255,vAC>>8), 24 cycles
                                          2276  label('STLW')
STLW:         03ec 1404  ld   $04,y       2277  ld(hi('stlw#13'),Y)             #10
              03ed e034  jmp  y,$34       2278  jmp(Y,'stlw#13')                #11
                                          2279  #dummy()                        #12 Overlap
                                          2280  #
                                          2281  # pc = 0x03ee, Opcode = 0xee
                                          2282  # Instruction LDLW: Load word from stack frame (vAC=[vSP+D]+256*[vSP+D+1]), 24 cycles
                                          2283  label('LDLW')
LDLW:         03ee 1404  ld   $04,y       2284  ld(hi('ldlw#13'),Y)             #10 #12
              03ef e03d  jmp  y,$3d       2285  jmp(Y,'ldlw#13')                #11
                                          2286  #dummy()                        #12 Overlap
                                          2287  #
                                          2288  # pc = 0x03f0, Opcode = 0xf0
                                          2289  # Instruction POKE: Write byte in memory ([[D+1],[D]]=vAC&255), 26 cycles
                                          2290  label('POKE')
POKE:         03f0 1404  ld   $04,y       2291  ld(hi('poke#13'),Y)             #10 #12
              03f1 e047  jmp  y,$47       2292  jmp(Y,'poke#13')                #11
              03f2 c21d  st   [$1d]       2293  st([vTmp])                      #12
                                          2294
                                          2295  # pc = 0x03f3, Opcode = 0xf3
                                          2296  # Instruction DOKE: Write word in memory ([[D+1],[D]],[[D+1],[D]+1]=vAC&255,vAC>>8), 28 cycles
                                          2297  label('DOKE')
DOKE:         03f3 1404  ld   $04,y       2298  ld(hi('doke#13'),Y)             #10
              03f4 e05e  jmp  y,$5e       2299  jmp(Y,'doke#13')                #11
              03f5 c21d  st   [$1d]       2300  st([vTmp])                      #12
                                          2301
                                          2302  # pc = 0x03f6, Opcode = 0xf6
                                          2303  # Instruction DEEK: Read word from memory (vAC=[vAC]+256*[vAC+1]), 28 cycles
                                          2304  label('DEEK')
DEEK:         03f6 1404  ld   $04,y       2305  ld(hi('deek#13'),Y)             #10
              03f7 e06b  jmp  y,$6b       2306  jmp(Y,'deek#13')                #11
                                          2307  #dummy()                        #12 Overlap
                                          2308  #
                                          2309  # pc = 0x03f8, Opcode = 0xf8
                                          2310  # Instruction ANDW: Word logical-AND with zero page (vAC&=[D]+256*[D+1]), 28 cycles
                                          2311  label('ANDW')
ANDW:         03f8 1404  ld   $04,y       2312  ld(hi('andw#13'),Y)             #10 #12
              03f9 e077  jmp  y,$77       2313  jmp(Y,'andw#13')                #11
                                          2314  #dummy()                        #12 Overlap
                                          2315  #
                                          2316  # pc = 0x03fa, Opcode = 0xfa
                                          2317  # Instruction ORW: Word logical-OR with zero page (vAC|=[D]+256*[D+1]), 28 cycles
                                          2318  label('ORW')
ORW:          03fa 1404  ld   $04,y       2319  ld(hi('orw#13'),Y)              #10 #12
              03fb e083  jmp  y,$83       2320  jmp(Y,'orw#13')                 #11
                                          2321  #dummy()                        #12 Overlap
                                          2322  #
                                          2323  # pc = 0x03fc, Opcode = 0xfc
                                          2324  # Instruction XORW: Word logical-XOR with zero page (vAC^=[D]+256*[D+1]), 28 cycles
                                          2325  label('XORW')
XORW:         03fc 1415  ld   $15,y       2326  ld(hi('xorw#13'),Y)             #10 #12
              03fd e029  jmp  y,$29       2327  jmp(Y,'xorw#13')                #11
              03fe 1200  ld   ac,x        2328  ld(AC,X)                        #12
                                          2329
                                          2330  # pc = 0x03ff, Opcode = 0xff
                                          2331  # Instruction RET: Function return (vPC=vLR-2), 16 cycles
                                          2332  label('RET')
RET:          03ff 011a  ld   [$1a]       2333  ld([vLR])                       #10
                                          2334  assert pc()&255 == 0
                                          2335
                                          2336
                                          2337  #-----------------------------------------------------------------------
                                          2338  #
                                          2339  #  $0400 ROM page 4: Application interpreter extension
                                          2340  #
                                          2341  #-----------------------------------------------------------------------
                                          2342  align(0x100, size=0x100)
                                          2343
                                          2344  # (Continue RET)
              0400 a002  suba $02         2345  suba(2)                         #11
              0401 c216  st   [$16]       2346  st([vPC])                       #12
              0402 011b  ld   [$1b]       2347  ld([vLR+1])                     #13
              0403 c217  st   [$17]       2348  st([vPC+1])                     #14
              0404 1403  ld   $03,y       2349  ld(hi('REENTER'),Y)             #15
              0405 e0cb  jmp  y,$cb       2350  jmp(Y,'REENTER')                #16
              0406 00f6  ld   $f6         2351  ld(-20/2)                       #17
                                          2352
                                          2353  # CALL implementation
                                          2354  label('call#13')
call#13:      0407 1200  ld   ac,x        2355  ld(AC,X)                        #13
              0408 0116  ld   [$16]       2356  ld([vPC])                       #14
              0409 8002  adda $02         2357  adda(2)                         #15 Point to instruction after CALL
              040a c21a  st   [$1a]       2358  st([vLR])                       #16
              040b 0117  ld   [$17]       2359  ld([vPC+1])                     #17
              040c c21b  st   [$1b]       2360  st([vLR+1])                     #18
              040d 1400  ld   $00,y       2361  ld(0,Y)                         #19
              040e 0500  ld   [x]         2362  ld([X])                         #20
              040f de00  st   [y,x++]     2363  st([Y,Xpp])                     #21
              0410 a002  suba $02         2364  suba(2)                         #22 Because NEXT will add 2
              0411 c216  st   [$16]       2365  st([vPC])                       #23
              0412 0500  ld   [x]         2366  ld([X])                         #24
              0413 c217  st   [$17]       2367  st([vPC+1])                     #25
              0414 1403  ld   $03,y       2368  ld(hi('NEXTY'),Y)               #26
              0415 e000  jmp  y,$00       2369  jmp(Y,'NEXTY')                  #27
              0416 00f1  ld   $f1         2370  ld(-30/2)                       #28
                                          2371
                                          2372  # DEF implementation
                                          2373  label('def#13')
def#13:       0417 c21d  st   [$1d]       2374  st([vTmp])                      #13
              0418 0116  ld   [$16]       2375  ld([vPC])                       #14
              0419 8002  adda $02         2376  adda(2)                         #15
              041a c218  st   [$18]       2377  st([vAC])                       #16
              041b 0117  ld   [$17]       2378  ld([vPC+1])                     #17
              041c c219  st   [$19]       2379  st([vAC+1])                     #18
              041d 011d  ld   [$1d]       2380  ld([vTmp])                      #19
              041e c216  st   [$16]       2381  st([vPC])                       #20
              041f 1403  ld   $03,y       2382  ld(hi('REENTER'),Y)             #21
              0420 e0cb  jmp  y,$cb       2383  jmp(Y,'REENTER')                #22
              0421 00f3  ld   $f3         2384  ld(-26/2)                       #23
                                          2385
                                          2386  # ANDI implementation
                                          2387  label('andi#13')
andi#13:      0422 c218  st   [$18]       2388  st([vAC])                       #13
              0423 0000  ld   $00         2389  ld(0)                           #14 Clear high byte
              0424 c219  st   [$19]       2390  st([vAC+1])                     #15
              0425 1403  ld   $03,y       2391  ld(hi('NEXTY'),Y)               #16
              0426 e000  jmp  y,$00       2392  jmp(Y,'NEXTY')                  #17
              0427 00f6  ld   $f6         2393  ld(-20/2)                       #18
                                          2394
                                          2395  # LSLW implementation
                                          2396  label('lslw#13')
lslw#13:      0428 3080  anda $80,x       2397  anda(128,X)                     #13
              0429 8118  adda [$18]       2398  adda([vAC])                     #14
              042a c218  st   [$18]       2399  st([vAC])                       #15
              042b 0500  ld   [x]         2400  ld([X])                         #16
              042c 8119  adda [$19]       2401  adda([vAC+1])                   #17
              042d 8119  adda [$19]       2402  adda([vAC+1])                   #18
              042e c219  st   [$19]       2403  st([vAC+1])                     #19
              042f 0116  ld   [$16]       2404  ld([vPC])                       #20
              0430 a001  suba $01         2405  suba(1)                         #21
              0431 1403  ld   $03,y       2406  ld(hi('REENTER_28'),Y)          #22
              0432 e0ca  jmp  y,$ca       2407  jmp(Y,'REENTER_28')             #23
              0433 c216  st   [$16]       2408  st([vPC])                       #24
                                          2409
                                          2410  # STLW implementation
                                          2411  label('stlw#13')
stlw#13:      0434 1504  ld   [$04],y     2412  ld([vSPH],Y)                    #13
              0435 911c  adda [$1c],x     2413  adda([vSP],X)                   #14
              0436 0118  ld   [$18]       2414  ld([vAC])                       #15
              0437 de00  st   [y,x++]     2415  st([Y,Xpp])                     #16
              0438 0119  ld   [$19]       2416  ld([vAC+1])                     #17
              0439 ce00  st   [y,x]       2417  st([Y,X])                       #18
              043a 1403  ld   $03,y       2418  ld(hi('REENTER'),Y)             #19
              043b e0cb  jmp  y,$cb       2419  jmp(Y,'REENTER')                #20
              043c 00f4  ld   $f4         2420  ld(-24/2)                       #21
                                          2421
                                          2422  # LDLW implementation
                                          2423  label('ldlw#13')
ldlw#13:      043d 1504  ld   [$04],y     2424  ld([vSPH],Y)                    #13
              043e 911c  adda [$1c],x     2425  adda([vSP],X)                   #14
              043f 0d00  ld   [y,x]       2426  ld([Y,X])                       #15
              0440 de00  st   [y,x++]     2427  st([Y,Xpp])                     #16
              0441 c218  st   [$18]       2428  st([vAC])                       #17
              0442 0d00  ld   [y,x]       2429  ld([Y,X])                       #18
              0443 c219  st   [$19]       2430  st([vAC+1])                     #19
              0444 1403  ld   $03,y       2431  ld(hi('NEXTY'),Y)               #20
              0445 e000  jmp  y,$00       2432  jmp(Y,'NEXTY')                  #21
              0446 00f4  ld   $f4         2433  ld(-24/2)                       #22
                                          2434
                                          2435  # POKE implementation
                                          2436  label('poke#13')
poke#13:      0447 9001  adda $01,x       2437  adda(1,X)                       #13
              0448 0500  ld   [x]         2438  ld([X])                         #14
              0449 1600  ld   ac,y        2439  ld(AC,Y)                        #15
              044a 111d  ld   [$1d],x     2440  ld([vTmp],X)                    #16
              044b 0500  ld   [x]         2441  ld([X])                         #17
              044c 1200  ld   ac,x        2442  ld(AC,X)                        #18
              044d 0118  ld   [$18]       2443  ld([vAC])                       #19
              044e ce00  st   [y,x]       2444  st([Y,X])                       #20
              044f 1403  ld   $03,y       2445  ld(hi('REENTER'),Y)             #21
              0450 e0cb  jmp  y,$cb       2446  jmp(Y,'REENTER')                #22
              0451 00f3  ld   $f3         2447  ld(-26/2)                       #23
                                          2448
                                          2449  # PEEK implementation
                                          2450  label('peek#13')
peek#13:      0452 1118  ld   [$18],x     2451  ld([vAC],X)                     #13
              0453 1519  ld   [$19],y     2452  ld([vAC+1],Y)                   #14
              0454 0d00  ld   [y,x]       2453  ld([Y,X])                       #15
              0455 c218  st   [$18]       2454  st([vAC])                       #16
              0456 0000  ld   $00         2455  ld(0)                           #17
              0457 c219  st   [$19]       2456  st([vAC+1])                     #18
              0458 0116  ld   [$16]       2457  ld([vPC])                       #19
              0459 a001  suba $01         2458  suba(1)                         #20
              045a c216  st   [$16]       2459  st([vPC])                       #21
              045b 1403  ld   $03,y       2460  ld(hi('NEXTY'),Y)               #22
              045c e000  jmp  y,$00       2461  jmp(Y,'NEXTY')                  #23
              045d 00f3  ld   $f3         2462  ld(-26/2)                       #24
                                          2463
                                          2464  # DOKE implementation
                                          2465  label('doke#13')
doke#13:      045e 9001  adda $01,x       2466  adda(1,X)                       #13
              045f 0500  ld   [x]         2467  ld([X])                         #14
              0460 1600  ld   ac,y        2468  ld(AC,Y)                        #15
              0461 111d  ld   [$1d],x     2469  ld([vTmp],X)                    #16
              0462 0500  ld   [x]         2470  ld([X])                         #17
              0463 1200  ld   ac,x        2471  ld(AC,X)                        #18
              0464 0118  ld   [$18]       2472  ld([vAC])                       #19
              0465 de00  st   [y,x++]     2473  st([Y,Xpp])                     #20
              0466 0119  ld   [$19]       2474  ld([vAC+1])                     #21
              0467 ce00  st   [y,x]       2475  st([Y,X])                       #22 Incompatible with REENTER_28
              0468 1403  ld   $03,y       2476  ld(hi('REENTER'),Y)             #23
              0469 e0cb  jmp  y,$cb       2477  jmp(Y,'REENTER')                #24
              046a 00f2  ld   $f2         2478  ld(-28/2)                       #25
                                          2479
                                          2480  # DEEK implementation
                                          2481  label('deek#13')
deek#13:      046b 0116  ld   [$16]       2482  ld([vPC])                       #13
              046c a001  suba $01         2483  suba(1)                         #14
              046d c216  st   [$16]       2484  st([vPC])                       #15
              046e 1118  ld   [$18],x     2485  ld([vAC],X)                     #16
              046f 1519  ld   [$19],y     2486  ld([vAC+1],Y)                   #17
              0470 0d00  ld   [y,x]       2487  ld([Y,X])                       #18
              0471 de00  st   [y,x++]     2488  st([Y,Xpp])                     #19 Just X++
              0472 c218  st   [$18]       2489  st([vAC])                       #20
              0473 0d00  ld   [y,x]       2490  ld([Y,X])                       #21
              0474 1403  ld   $03,y       2491  ld(hi('REENTER_28'),Y)          #22
              0475 e0ca  jmp  y,$ca       2492  jmp(Y,'REENTER_28')             #23
              0476 c219  st   [$19]       2493  st([vAC+1])                     #24
                                          2494
                                          2495  # ANDW implementation
                                          2496  label('andw#13')
andw#13:      0477 1200  ld   ac,x        2497  ld(AC,X)                        #13
              0478 1400  ld   $00,y       2498  ld(0,Y)                         #14
              0479 0500  ld   [x]         2499  ld([X])                         #15
              047a de00  st   [y,x++]     2500  st([Y,Xpp])                     #16
              047b 2118  anda [$18]       2501  anda([vAC])                     #17
              047c c218  st   [$18]       2502  st([vAC])                       #18
              047d 0500  ld   [x]         2503  ld([X])                         #19
              047e 2119  anda [$19]       2504  anda([vAC+1])                   #20
              047f c219  st   [$19]       2505  st([vAC+1])                     #21
              0480 1403  ld   $03,y       2506  ld(hi('NEXTY'),Y)               #22
              0481 e000  jmp  y,$00       2507  jmp(Y,'NEXTY')                  #23
              0482 00f3  ld   $f3         2508  ld(-26/2)                       #24
                                          2509
                                          2510  # ORW implementation
                                          2511  label('orw#13')
orw#13:       0483 1200  ld   ac,x        2512  ld(AC,X)                        #13
              0484 1400  ld   $00,y       2513  ld(0,Y)                         #14
              0485 0500  ld   [x]         2514  ld([X])                         #15
              0486 de00  st   [y,x++]     2515  st([Y,Xpp])                     #16
              0487 4118  ora  [$18]       2516  ora([vAC])                      #17
              0488 c218  st   [$18]       2517  st([vAC])                       #18
              0489 0500  ld   [x]         2518  ld([X])                         #19
              048a 4119  ora  [$19]       2519  ora([vAC+1])                    #20
              048b c219  st   [$19]       2520  st([vAC+1])                     #21
              048c 1403  ld   $03,y       2521  ld(hi('NEXTY'),Y)               #22
              048d e000  jmp  y,$00       2522  jmp(Y,'NEXTY')                  #23
              048e 00f3  ld   $f3         2523  ld(-26/2)                       #24
                                          2524
                                          2525  # PEEK+ implementation
                                          2526  label('peek+#13')
peek+#13:     048f 1400  ld   $00,y       2527  ld(0,Y)                         #13
              0490 1200  ld   ac,x        2528  ld(AC,X)                        #14
              0491 0500  ld   [x]         2529  ld([X])                         #15 low byte peek address
              0492 c21d  st   [$1d]       2530  st([vTmp])                      #16
              0493 8001  adda $01         2531  adda(1)                         #17
              0494 de00  st   [y,x++]     2532  st([Y,Xpp])                     #18
              0495 0500  ld   [x]         2533  ld([X])                         #19 high byte peek address
              0496 1600  ld   ac,y        2534  ld(AC,Y)                        #20
              0497 111d  ld   [$1d],x     2535  ld([vTmp],X)                    #21
              0498 0d00  ld   [y,x]       2536  ld([Y,X])                       #22
              0499 c218  st   [$18]       2537  st([vAC])                       #23
              049a 0000  ld   $00         2538  ld(0)                           #24
              049b c219  st   [$19]       2539  st([vAC+1])                     #25
              049c 1403  ld   $03,y       2540  ld(hi('NEXTY'),Y)               #26
              049d e000  jmp  y,$00       2541  jmp(Y,'NEXTY')                  #27
              049e 00f1  ld   $f1         2542  ld(-30/2)                       #28
                                          2543
              049f 0200  nop              2544  fillers(until=0xa7)
              04a0 0200  nop
              04a1 0200  nop
              * 8 times
                                          2545
                                          2546  # pc = 0x04a7
                                          2547  #-----------------------------------------------------------------------
                                          2548  #
                                          2549  #  vCPU extension functions (for acceleration and compaction) follow below.
                                          2550  #
                                          2551  #  The naming convention is: SYS_<CamelCase>[_v<V>]_<N>
                                          2552  #
                                          2553  #  With <N> the maximum number of cycles the function will run
                                          2554  #  (counted from NEXT to NEXT). This is the same number that must
                                          2555  #  be passed to the 'SYS' vCPU instruction as operand, and it will
                                          2556  #  appear in the GCL code upon use.
                                          2557  #
                                          2558  #  If a SYS extension got introduced after ROM v1, the version number of
                                          2559  #  introduction is included in the name. This helps the programmer to be
                                          2560  #  reminded to verify the acutal ROM version and fail gracefully on older
                                          2561  #  ROMs than required. See also Docs/GT1-files.txt on using [romType].
                                          2562  #
                                          2563  #-----------------------------------------------------------------------
                                          2564
                                          2565  #-----------------------------------------------------------------------
                                          2566  # Extension SYS_Random_34: Update entropy and copy to vAC
                                          2567  #-----------------------------------------------------------------------
                                          2568
                                          2569  # This same algorithm runs automatically once per vertical blank.
                                          2570  # Use this function to get numbers at a higher rate.
                                          2571  #
                                          2572  # Variables:
                                          2573  #       vAC
                                          2574
                                          2575  label('SYS_Random_34')
SYS_Random_34:
              04a7 010e  ld   [$0e]       2576  ld([frameCount])                #15
              04a8 6107  xora [$07]       2577  xora([entropy+1])               #16
              04a9 610f  xora [$0f]       2578  xora([serialRaw])               #17
              04aa 8106  adda [$06]       2579  adda([entropy+0])               #18
              04ab c206  st   [$06]       2580  st([entropy+0])                 #19
              04ac c218  st   [$18]       2581  st([vAC+0])                     #20
              04ad 8108  adda [$08]       2582  adda([entropy+2])               #21
              04ae c208  st   [$08]       2583  st([entropy+2])                 #22
              04af e8b2  blt  .sysRnd0    2584  bmi('.sysRnd0')                 #23
              04b0 fcb3  bra  .sysRnd1    2585  bra('.sysRnd1')                 #24
              04b1 6053  xora $53         2586  xora(64+16+2+1)                 #25
                                          2587  label('.sysRnd0')
.sysRnd0:     04b2 606c  xora $6c         2588  xora(64+32+8+4)                 #25
                                          2589  label('.sysRnd1')
.sysRnd1:     04b3 8107  adda [$07]       2590  adda([entropy+1])               #26
              04b4 c207  st   [$07]       2591  st([entropy+1])                 #27
              04b5 c219  st   [$19]       2592  st([vAC+1])                     #28
              04b6 1403  ld   $03,y       2593  ld(hi('REENTER'),Y)             #29
              04b7 e0cb  jmp  y,$cb       2594  jmp(Y,'REENTER')                #30
              04b8 00ef  ld   $ef         2595  ld(-34/2)                       #31
                                          2596
                                          2597  label('SYS_LSRW7_30')
SYS_LSRW7_30: 04b9 0118  ld   [$18]       2598  ld([vAC])                       #15
              04ba 3080  anda $80,x       2599  anda(128,X)                     #16
              04bb 0119  ld   [$19]       2600  ld([vAC+1])                     #17
              04bc 8200  adda ac          2601  adda(AC)                        #18
              04bd 4500  ora  [x]         2602  ora([X])                        #19
              04be c218  st   [$18]       2603  st([vAC])                       #20
              04bf 0119  ld   [$19]       2604  ld([vAC+1])                     #21
              04c0 3080  anda $80,x       2605  anda(128,X)                     #22
              04c1 0500  ld   [x]         2606  ld([X])                         #23
              04c2 c219  st   [$19]       2607  st([vAC+1])                     #24
              04c3 1403  ld   $03,y       2608  ld(hi('REENTER'),Y)             #25
              04c4 e0cb  jmp  y,$cb       2609  jmp(Y,'REENTER')                #26
              04c5 00f1  ld   $f1         2610  ld(-30/2)                       #27
                                          2611
                                          2612  label('SYS_LSRW8_24')
SYS_LSRW8_24: 04c6 0119  ld   [$19]       2613  ld([vAC+1])                     #15
              04c7 c218  st   [$18]       2614  st([vAC])                       #16
              04c8 0000  ld   $00         2615  ld(0)                           #17
              04c9 c219  st   [$19]       2616  st([vAC+1])                     #18
              04ca 1403  ld   $03,y       2617  ld(hi('REENTER'),Y)             #19
              04cb e0cb  jmp  y,$cb       2618  jmp(Y,'REENTER')                #20
              04cc 00f4  ld   $f4         2619  ld(-24/2)                       #21
                                          2620
                                          2621  label('SYS_LSLW8_24')
SYS_LSLW8_24: 04cd 0118  ld   [$18]       2622  ld([vAC])                       #15
              04ce c219  st   [$19]       2623  st([vAC+1])                     #16
              04cf 0000  ld   $00         2624  ld(0)                           #17
              04d0 c218  st   [$18]       2625  st([vAC])                       #18
              04d1 1403  ld   $03,y       2626  ld(hi('REENTER'),Y)             #19
              04d2 e0cb  jmp  y,$cb       2627  jmp(Y,'REENTER')                #20
              04d3 00f4  ld   $f4         2628  ld(-24/2)                       #21
                                          2629
                                          2630  #-----------------------------------------------------------------------
                                          2631  # Extension SYS_Draw4_30
                                          2632  #-----------------------------------------------------------------------
                                          2633
                                          2634  # Draw 4 pixels on screen, horizontally next to each other
                                          2635  #
                                          2636  # Variables:
                                          2637  #       sysArgs[0:3]    Pixels (in)
                                          2638  #       sysArgs[4:5]    Position on screen (in)
                                          2639
                                          2640  label('SYS_Draw4_30')
SYS_Draw4_30: 04d4 1128  ld   [$28],x     2641  ld([sysArgs+4],X)               #15
              04d5 1529  ld   [$29],y     2642  ld([sysArgs+5],Y)               #16
              04d6 0124  ld   [$24]       2643  ld([sysArgs+0])                 #17
              04d7 de00  st   [y,x++]     2644  st([Y,Xpp])                     #18
              04d8 0125  ld   [$25]       2645  ld([sysArgs+1])                 #19
              04d9 de00  st   [y,x++]     2646  st([Y,Xpp])                     #20
              04da 0126  ld   [$26]       2647  ld([sysArgs+2])                 #21
              04db de00  st   [y,x++]     2648  st([Y,Xpp])                     #22
              04dc 0127  ld   [$27]       2649  ld([sysArgs+3])                 #23
              04dd de00  st   [y,x++]     2650  st([Y,Xpp])                     #24
              04de 1403  ld   $03,y       2651  ld(hi('REENTER'),Y)             #25
              04df e0cb  jmp  y,$cb       2652  jmp(Y,'REENTER')                #26
              04e0 00f1  ld   $f1         2653  ld(-30/2)                       #27
                                          2654
                                          2655  #-----------------------------------------------------------------------
                                          2656  # Extension SYS_VDrawBits_134:
                                          2657  #-----------------------------------------------------------------------
                                          2658
                                          2659  # Draw slice of a character, 8 pixels vertical
                                          2660  #
                                          2661  # Variables:
                                          2662  #       sysArgs[0]      Color 0 "background" (in)
                                          2663  #       sysArgs[1]      Color 1 "pen" (in)
                                          2664  #       sysArgs[2]      8 bits, highest bit first (in, changed)
                                          2665  #       sysArgs[4:5]    Position on screen (in)
                                          2666
                                          2667  label('SYS_VDrawBits_134')
SYS_VDrawBits_134:
              04e1 1412  ld   $12,y       2668  ld(hi('sys_VDrawBits'),Y)       #15
              04e2 e093  jmp  y,$93       2669  jmp(Y,'sys_VDrawBits')          #16
              04e3 1128  ld   [$28],x     2670  ld([sysArgs+4],X)               #17
                                          2671
                                          2672  #-----------------------------------------------------------------------
                                          2673
                                          2674  # Interrupt handler:
                                          2675  #       STW  $xx        -> optionally store vCpuSelect
                                          2676  #       ... IRQ payload ...
                                          2677  # either:
                                          2678  #       LDWI $400
                                          2679  #       LUP  0          -> vRTI and don't switch interpreter (immediate resume)
                                          2680  # or:
                                          2681  #       LDWI $400
                                          2682  #       LUP  $xx        -> vRTI and switch interpreter type as stored in [$xx]
              04e4 0200  nop              2683  fillers(until=251-13)
              04e5 0200  nop
              04e6 0200  nop
              * 10 times
                                          2684  label('vRTI#15')
vRTI#15:      04ee 0130  ld   [$30]       2685  ld([vIrqSave])                  #15 Continue with vCPU in the same timeslice (faster)
              04ef c216  st   [$16]       2686  st([vPC])                       #16
              04f0 0131  ld   [$31]       2687  ld([vIrqSave+1])                #17
              04f1 c217  st   [$17]       2688  st([vPC+1])                     #18
              04f2 0132  ld   [$32]       2689  ld([vIrqSave+2])                #19
              04f3 c218  st   [$18]       2690  st([vAC])                       #20
              04f4 0133  ld   [$33]       2691  ld([vIrqSave+3])                #21
              04f5 c219  st   [$19]       2692  st([vAC+1])                     #22
              04f6 0134  ld   [$34]       2693  ld([vIrqSave+4])                #23 Restore vCpuSelect for PREFIX
              04f7 c202  st   [$02]       2694  st([vCpuSelect])                #24
              04f8 9401  adda $01,y       2695  adda(1,Y)                       #25 Jump to correct PREFIX page, (or page by default)
              04f9 e0cb  jmp  y,$cb       2696  jmp(Y,'REENTER')                #26
              04fa 00f1  ld   $f1         2697  ld(-30/2)                       #27
                                          2698  # vRTI entry point
                                          2699  assert(pc()&255 == 251)         # The landing offset 251 for LUP trampoline is fixed
              04fb f0ee  beq  vRTI#15     2700  beq('vRTI#15')                  #13 vRTI sequence
              04fc 9001  adda $01,x       2701  adda(1,X)                       #14
              04fd 1412  ld   $12,y       2702  ld(hi('vRTI#18'),Y)             #15 Switch and wait for end of timeslice (slower)
              04fe e022  jmp  y,$22       2703  jmp(Y,'vRTI#18')                #16
              04ff c21d  st   [$1d]       2704  st([vTmp])                      #17
                                          2705
                                          2706  #-----------------------------------------------------------------------
                                          2707  #
                                          2708  #  $0500 ROM page 5-6: Shift table and code
                                          2709  #
                                          2710  #-----------------------------------------------------------------------
                                          2711
                                          2712  align(0x100, size=0x200)
                                          2713
                                          2714  # Lookup table for i>>n, with n in 1..6
                                          2715  # Indexing ix = i & ~b | (b-1), where b = 1<<(n-1)
                                          2716  #       ...
                                          2717  #       ld   <.ret
                                          2718  #       st   [vTmp]
                                          2719  #       ld   >shiftTable,y
                                          2720  #       <calculate ix>
                                          2721  #       jmp  y,ac
                                          2722  #       bra  $ff
                                          2723  # .ret: ...
                                          2724  #
                                          2725  # i >> 7 can be always be done with RAM: [i&128]
                                          2726  #       ...
                                          2727  #       anda $80,x
                                          2728  #       ld   [x]
                                          2729  #       ...
                                          2730
                                          2731  label('shiftTable')
                                          2732  shiftTable = pc()
                                          2733
                                          2734  for ix in range(255):
                                          2735    for n in range(1,7): # Find first zero
                                          2736      if ~ix & (1 << (n-1)):
                                          2737        break
                                          2738    pattern = ['x' if i<n else '1' if ix&(1<<i) else '0' for i in range(8)]
                                          2739    ld(ix>>n); C('0b%s >> %d' % (''.join(reversed(pattern)), n))
shiftTable:   0500 0000  ld   $00         ;0b0000000x >> 1
              0501 0000  ld   $00         ;0b000000xx >> 2
              0502 0001  ld   $01         ;0b0000001x >> 1
              0503 0000  ld   $00         ;0b00000xxx >> 3
              0504 0002  ld   $02         ;0b0000010x >> 1
              0505 0001  ld   $01         ;0b000001xx >> 2
              0506 0003  ld   $03         ;0b0000011x >> 1
              0507 0000  ld   $00         ;0b0000xxxx >> 4
              0508 0004  ld   $04         ;0b0000100x >> 1
              0509 0002  ld   $02         ;0b000010xx >> 2
              050a 0005  ld   $05         ;0b0000101x >> 1
              050b 0001  ld   $01         ;0b00001xxx >> 3
              050c 0006  ld   $06         ;0b0000110x >> 1
              050d 0003  ld   $03         ;0b000011xx >> 2
              050e 0007  ld   $07         ;0b0000111x >> 1
              050f 0000  ld   $00         ;0b000xxxxx >> 5
              0510 0008  ld   $08         ;0b0001000x >> 1
              0511 0004  ld   $04         ;0b000100xx >> 2
              0512 0009  ld   $09         ;0b0001001x >> 1
              0513 0002  ld   $02         ;0b00010xxx >> 3
              0514 000a  ld   $0a         ;0b0001010x >> 1
              0515 0005  ld   $05         ;0b000101xx >> 2
              0516 000b  ld   $0b         ;0b0001011x >> 1
              0517 0001  ld   $01         ;0b0001xxxx >> 4
              0518 000c  ld   $0c         ;0b0001100x >> 1
              0519 0006  ld   $06         ;0b000110xx >> 2
              051a 000d  ld   $0d         ;0b0001101x >> 1
              051b 0003  ld   $03         ;0b00011xxx >> 3
              051c 000e  ld   $0e         ;0b0001110x >> 1
              051d 0007  ld   $07         ;0b000111xx >> 2
              051e 000f  ld   $0f         ;0b0001111x >> 1
              051f 0000  ld   $00         ;0b00xxxxxx >> 6
              0520 0010  ld   $10         ;0b0010000x >> 1
              0521 0008  ld   $08         ;0b001000xx >> 2
              0522 0011  ld   $11         ;0b0010001x >> 1
              0523 0004  ld   $04         ;0b00100xxx >> 3
              0524 0012  ld   $12         ;0b0010010x >> 1
              0525 0009  ld   $09         ;0b001001xx >> 2
              0526 0013  ld   $13         ;0b0010011x >> 1
              0527 0002  ld   $02         ;0b0010xxxx >> 4
              0528 0014  ld   $14         ;0b0010100x >> 1
              0529 000a  ld   $0a         ;0b001010xx >> 2
              052a 0015  ld   $15         ;0b0010101x >> 1
              052b 0005  ld   $05         ;0b00101xxx >> 3
              052c 0016  ld   $16         ;0b0010110x >> 1
              052d 000b  ld   $0b         ;0b001011xx >> 2
              052e 0017  ld   $17         ;0b0010111x >> 1
              052f 0001  ld   $01         ;0b001xxxxx >> 5
              0530 0018  ld   $18         ;0b0011000x >> 1
              0531 000c  ld   $0c         ;0b001100xx >> 2
              0532 0019  ld   $19         ;0b0011001x >> 1
              0533 0006  ld   $06         ;0b00110xxx >> 3
              0534 001a  ld   $1a         ;0b0011010x >> 1
              0535 000d  ld   $0d         ;0b001101xx >> 2
              0536 001b  ld   $1b         ;0b0011011x >> 1
              0537 0003  ld   $03         ;0b0011xxxx >> 4
              0538 001c  ld   $1c         ;0b0011100x >> 1
              0539 000e  ld   $0e         ;0b001110xx >> 2
              053a 001d  ld   $1d         ;0b0011101x >> 1
              053b 0007  ld   $07         ;0b00111xxx >> 3
              053c 001e  ld   $1e         ;0b0011110x >> 1
              053d 000f  ld   $0f         ;0b001111xx >> 2
              053e 001f  ld   $1f         ;0b0011111x >> 1
              053f 0000  ld   $00         ;0b00xxxxxx >> 6
              0540 0020  ld   $20         ;0b0100000x >> 1
              0541 0010  ld   $10         ;0b010000xx >> 2
              0542 0021  ld   $21         ;0b0100001x >> 1
              0543 0008  ld   $08         ;0b01000xxx >> 3
              0544 0022  ld   $22         ;0b0100010x >> 1
              0545 0011  ld   $11         ;0b010001xx >> 2
              0546 0023  ld   $23         ;0b0100011x >> 1
              0547 0004  ld   $04         ;0b0100xxxx >> 4
              0548 0024  ld   $24         ;0b0100100x >> 1
              0549 0012  ld   $12         ;0b010010xx >> 2
              054a 0025  ld   $25         ;0b0100101x >> 1
              054b 0009  ld   $09         ;0b01001xxx >> 3
              054c 0026  ld   $26         ;0b0100110x >> 1
              054d 0013  ld   $13         ;0b010011xx >> 2
              054e 0027  ld   $27         ;0b0100111x >> 1
              054f 0002  ld   $02         ;0b010xxxxx >> 5
              0550 0028  ld   $28         ;0b0101000x >> 1
              0551 0014  ld   $14         ;0b010100xx >> 2
              0552 0029  ld   $29         ;0b0101001x >> 1
              0553 000a  ld   $0a         ;0b01010xxx >> 3
              0554 002a  ld   $2a         ;0b0101010x >> 1
              0555 0015  ld   $15         ;0b010101xx >> 2
              0556 002b  ld   $2b         ;0b0101011x >> 1
              0557 0005  ld   $05         ;0b0101xxxx >> 4
              0558 002c  ld   $2c         ;0b0101100x >> 1
              0559 0016  ld   $16         ;0b010110xx >> 2
              055a 002d  ld   $2d         ;0b0101101x >> 1
              055b 000b  ld   $0b         ;0b01011xxx >> 3
              055c 002e  ld   $2e         ;0b0101110x >> 1
              055d 0017  ld   $17         ;0b010111xx >> 2
              055e 002f  ld   $2f         ;0b0101111x >> 1
              055f 0001  ld   $01         ;0b01xxxxxx >> 6
              0560 0030  ld   $30         ;0b0110000x >> 1
              0561 0018  ld   $18         ;0b011000xx >> 2
              0562 0031  ld   $31         ;0b0110001x >> 1
              0563 000c  ld   $0c         ;0b01100xxx >> 3
              0564 0032  ld   $32         ;0b0110010x >> 1
              0565 0019  ld   $19         ;0b011001xx >> 2
              0566 0033  ld   $33         ;0b0110011x >> 1
              0567 0006  ld   $06         ;0b0110xxxx >> 4
              0568 0034  ld   $34         ;0b0110100x >> 1
              0569 001a  ld   $1a         ;0b011010xx >> 2
              056a 0035  ld   $35         ;0b0110101x >> 1
              056b 000d  ld   $0d         ;0b01101xxx >> 3
              056c 0036  ld   $36         ;0b0110110x >> 1
              056d 001b  ld   $1b         ;0b011011xx >> 2
              056e 0037  ld   $37         ;0b0110111x >> 1
              056f 0003  ld   $03         ;0b011xxxxx >> 5
              0570 0038  ld   $38         ;0b0111000x >> 1
              0571 001c  ld   $1c         ;0b011100xx >> 2
              0572 0039  ld   $39         ;0b0111001x >> 1
              0573 000e  ld   $0e         ;0b01110xxx >> 3
              0574 003a  ld   $3a         ;0b0111010x >> 1
              0575 001d  ld   $1d         ;0b011101xx >> 2
              0576 003b  ld   $3b         ;0b0111011x >> 1
              0577 0007  ld   $07         ;0b0111xxxx >> 4
              0578 003c  ld   $3c         ;0b0111100x >> 1
              0579 001e  ld   $1e         ;0b011110xx >> 2
              057a 003d  ld   $3d         ;0b0111101x >> 1
              057b 000f  ld   $0f         ;0b01111xxx >> 3
              057c 003e  ld   $3e         ;0b0111110x >> 1
              057d 001f  ld   $1f         ;0b011111xx >> 2
              057e 003f  ld   $3f         ;0b0111111x >> 1
              057f 0001  ld   $01         ;0b01xxxxxx >> 6
              0580 0040  ld   $40         ;0b1000000x >> 1
              0581 0020  ld   $20         ;0b100000xx >> 2
              0582 0041  ld   $41         ;0b1000001x >> 1
              0583 0010  ld   $10         ;0b10000xxx >> 3
              0584 0042  ld   $42         ;0b1000010x >> 1
              0585 0021  ld   $21         ;0b100001xx >> 2
              0586 0043  ld   $43         ;0b1000011x >> 1
              0587 0008  ld   $08         ;0b1000xxxx >> 4
              0588 0044  ld   $44         ;0b1000100x >> 1
              0589 0022  ld   $22         ;0b100010xx >> 2
              058a 0045  ld   $45         ;0b1000101x >> 1
              058b 0011  ld   $11         ;0b10001xxx >> 3
              058c 0046  ld   $46         ;0b1000110x >> 1
              058d 0023  ld   $23         ;0b100011xx >> 2
              058e 0047  ld   $47         ;0b1000111x >> 1
              058f 0004  ld   $04         ;0b100xxxxx >> 5
              0590 0048  ld   $48         ;0b1001000x >> 1
              0591 0024  ld   $24         ;0b100100xx >> 2
              0592 0049  ld   $49         ;0b1001001x >> 1
              0593 0012  ld   $12         ;0b10010xxx >> 3
              0594 004a  ld   $4a         ;0b1001010x >> 1
              0595 0025  ld   $25         ;0b100101xx >> 2
              0596 004b  ld   $4b         ;0b1001011x >> 1
              0597 0009  ld   $09         ;0b1001xxxx >> 4
              0598 004c  ld   $4c         ;0b1001100x >> 1
              0599 0026  ld   $26         ;0b100110xx >> 2
              059a 004d  ld   $4d         ;0b1001101x >> 1
              059b 0013  ld   $13         ;0b10011xxx >> 3
              059c 004e  ld   $4e         ;0b1001110x >> 1
              059d 0027  ld   $27         ;0b100111xx >> 2
              059e 004f  ld   $4f         ;0b1001111x >> 1
              059f 0002  ld   $02         ;0b10xxxxxx >> 6
              05a0 0050  ld   $50         ;0b1010000x >> 1
              05a1 0028  ld   $28         ;0b101000xx >> 2
              05a2 0051  ld   $51         ;0b1010001x >> 1
              05a3 0014  ld   $14         ;0b10100xxx >> 3
              05a4 0052  ld   $52         ;0b1010010x >> 1
              05a5 0029  ld   $29         ;0b101001xx >> 2
              05a6 0053  ld   $53         ;0b1010011x >> 1
              05a7 000a  ld   $0a         ;0b1010xxxx >> 4
              05a8 0054  ld   $54         ;0b1010100x >> 1
              05a9 002a  ld   $2a         ;0b101010xx >> 2
              05aa 0055  ld   $55         ;0b1010101x >> 1
              05ab 0015  ld   $15         ;0b10101xxx >> 3
              05ac 0056  ld   $56         ;0b1010110x >> 1
              05ad 002b  ld   $2b         ;0b101011xx >> 2
              05ae 0057  ld   $57         ;0b1010111x >> 1
              05af 0005  ld   $05         ;0b101xxxxx >> 5
              05b0 0058  ld   $58         ;0b1011000x >> 1
              05b1 002c  ld   $2c         ;0b101100xx >> 2
              05b2 0059  ld   $59         ;0b1011001x >> 1
              05b3 0016  ld   $16         ;0b10110xxx >> 3
              05b4 005a  ld   $5a         ;0b1011010x >> 1
              05b5 002d  ld   $2d         ;0b101101xx >> 2
              05b6 005b  ld   $5b         ;0b1011011x >> 1
              05b7 000b  ld   $0b         ;0b1011xxxx >> 4
              05b8 005c  ld   $5c         ;0b1011100x >> 1
              05b9 002e  ld   $2e         ;0b101110xx >> 2
              05ba 005d  ld   $5d         ;0b1011101x >> 1
              05bb 0017  ld   $17         ;0b10111xxx >> 3
              05bc 005e  ld   $5e         ;0b1011110x >> 1
              05bd 002f  ld   $2f         ;0b101111xx >> 2
              05be 005f  ld   $5f         ;0b1011111x >> 1
              05bf 0002  ld   $02         ;0b10xxxxxx >> 6
              05c0 0060  ld   $60         ;0b1100000x >> 1
              05c1 0030  ld   $30         ;0b110000xx >> 2
              05c2 0061  ld   $61         ;0b1100001x >> 1
              05c3 0018  ld   $18         ;0b11000xxx >> 3
              05c4 0062  ld   $62         ;0b1100010x >> 1
              05c5 0031  ld   $31         ;0b110001xx >> 2
              05c6 0063  ld   $63         ;0b1100011x >> 1
              05c7 000c  ld   $0c         ;0b1100xxxx >> 4
              05c8 0064  ld   $64         ;0b1100100x >> 1
              05c9 0032  ld   $32         ;0b110010xx >> 2
              05ca 0065  ld   $65         ;0b1100101x >> 1
              05cb 0019  ld   $19         ;0b11001xxx >> 3
              05cc 0066  ld   $66         ;0b1100110x >> 1
              05cd 0033  ld   $33         ;0b110011xx >> 2
              05ce 0067  ld   $67         ;0b1100111x >> 1
              05cf 0006  ld   $06         ;0b110xxxxx >> 5
              05d0 0068  ld   $68         ;0b1101000x >> 1
              05d1 0034  ld   $34         ;0b110100xx >> 2
              05d2 0069  ld   $69         ;0b1101001x >> 1
              05d3 001a  ld   $1a         ;0b11010xxx >> 3
              05d4 006a  ld   $6a         ;0b1101010x >> 1
              05d5 0035  ld   $35         ;0b110101xx >> 2
              05d6 006b  ld   $6b         ;0b1101011x >> 1
              05d7 000d  ld   $0d         ;0b1101xxxx >> 4
              05d8 006c  ld   $6c         ;0b1101100x >> 1
              05d9 0036  ld   $36         ;0b110110xx >> 2
              05da 006d  ld   $6d         ;0b1101101x >> 1
              05db 001b  ld   $1b         ;0b11011xxx >> 3
              05dc 006e  ld   $6e         ;0b1101110x >> 1
              05dd 0037  ld   $37         ;0b110111xx >> 2
              05de 006f  ld   $6f         ;0b1101111x >> 1
              05df 0003  ld   $03         ;0b11xxxxxx >> 6
              05e0 0070  ld   $70         ;0b1110000x >> 1
              05e1 0038  ld   $38         ;0b111000xx >> 2
              05e2 0071  ld   $71         ;0b1110001x >> 1
              05e3 001c  ld   $1c         ;0b11100xxx >> 3
              05e4 0072  ld   $72         ;0b1110010x >> 1
              05e5 0039  ld   $39         ;0b111001xx >> 2
              05e6 0073  ld   $73         ;0b1110011x >> 1
              05e7 000e  ld   $0e         ;0b1110xxxx >> 4
              05e8 0074  ld   $74         ;0b1110100x >> 1
              05e9 003a  ld   $3a         ;0b111010xx >> 2
              05ea 0075  ld   $75         ;0b1110101x >> 1
              05eb 001d  ld   $1d         ;0b11101xxx >> 3
              05ec 0076  ld   $76         ;0b1110110x >> 1
              05ed 003b  ld   $3b         ;0b111011xx >> 2
              05ee 0077  ld   $77         ;0b1110111x >> 1
              05ef 0007  ld   $07         ;0b111xxxxx >> 5
              05f0 0078  ld   $78         ;0b1111000x >> 1
              05f1 003c  ld   $3c         ;0b111100xx >> 2
              05f2 0079  ld   $79         ;0b1111001x >> 1
              05f3 001e  ld   $1e         ;0b11110xxx >> 3
              05f4 007a  ld   $7a         ;0b1111010x >> 1
              05f5 003d  ld   $3d         ;0b111101xx >> 2
              05f6 007b  ld   $7b         ;0b1111011x >> 1
              05f7 000f  ld   $0f         ;0b1111xxxx >> 4
              05f8 007c  ld   $7c         ;0b1111100x >> 1
              05f9 003e  ld   $3e         ;0b111110xx >> 2
              05fa 007d  ld   $7d         ;0b1111101x >> 1
              05fb 001f  ld   $1f         ;0b11111xxx >> 3
              05fc 007e  ld   $7e         ;0b1111110x >> 1
              05fd 003f  ld   $3f         ;0b111111xx >> 2
              05fe 007f  ld   $7f         ;0b1111111x >> 1
                                          2740
                                          2741  assert pc()&255 == 255
              05ff fd1d  bra  [$1d]       2742  bra([vTmp])                     # Jumps back into next page
                                          2743
                                          2744  label('SYS_LSRW1_48')
                                          2745  assert pc()&255 == 0            # First instruction on this page *must* be a nop
SYS_LSRW1_48: 0600 0200  nop              2746  nop()                           #15
              0601 1405  ld   $05,y       2747  ld(hi('shiftTable'),Y)          #16 Logical shift right 1 bit (X >> 1)
              0602 0008  ld   $08         2748  ld('.sysLsrw1a')                #17 Shift low byte
              0603 c21d  st   [$1d]       2749  st([vTmp])                      #18
              0604 0118  ld   [$18]       2750  ld([vAC])                       #19
              0605 20fe  anda $fe         2751  anda(0b11111110)                #20
              0606 e200  jmp  y,ac        2752  jmp(Y,AC)                       #21
              0607 fcff  bra  $ff         2753  bra(255)                        #22 bra shiftTable+255
                                          2754  label('.sysLsrw1a')
.sysLsrw1a:   0608 c218  st   [$18]       2755  st([vAC])                       #26
              0609 0119  ld   [$19]       2756  ld([vAC+1])                     #27 Transfer bit 8
              060a 2001  anda $01         2757  anda(1)                         #28
              060b 807f  adda $7f         2758  adda(127)                       #29
              060c 2080  anda $80         2759  anda(128)                       #30
              060d 4118  ora  [$18]       2760  ora([vAC])                      #31
              060e c218  st   [$18]       2761  st([vAC])                       #32
              060f 0015  ld   $15         2762  ld('.sysLsrw1b')                #33 Shift high byte
              0610 c21d  st   [$1d]       2763  st([vTmp])                      #34
              0611 0119  ld   [$19]       2764  ld([vAC+1])                     #35
              0612 20fe  anda $fe         2765  anda(0b11111110)                #36
              0613 e200  jmp  y,ac        2766  jmp(Y,AC)                       #37
              0614 fcff  bra  $ff         2767  bra(255)                        #38 bra shiftTable+255
                                          2768  label('.sysLsrw1b')
.sysLsrw1b:   0615 c219  st   [$19]       2769  st([vAC+1])                     #42
              0616 1403  ld   $03,y       2770  ld(hi('REENTER'),Y)             #43
              0617 e0cb  jmp  y,$cb       2771  jmp(Y,'REENTER')                #44
              0618 00e8  ld   $e8         2772  ld(-48/2)                       #45
                                          2773
                                          2774  label('SYS_LSRW2_52')
SYS_LSRW2_52: 0619 1405  ld   $05,y       2775  ld(hi('shiftTable'),Y)          #15 Logical shift right 2 bit (X >> 2)
              061a 0021  ld   $21         2776  ld('.sysLsrw2a')                #16 Shift low byte
              061b c21d  st   [$1d]       2777  st([vTmp])                      #17
              061c 0118  ld   [$18]       2778  ld([vAC])                       #18
              061d 20fc  anda $fc         2779  anda(0b11111100)                #19
              061e 4001  ora  $01         2780  ora( 0b00000001)                #20
              061f e200  jmp  y,ac        2781  jmp(Y,AC)                       #21
              0620 fcff  bra  $ff         2782  bra(255)                        #22 bra shiftTable+255
                                          2783  label('.sysLsrw2a')
.sysLsrw2a:   0621 c218  st   [$18]       2784  st([vAC])                       #26
              0622 0119  ld   [$19]       2785  ld([vAC+1])                     #27 Transfer bit 8:9
              0623 8200  adda ac          2786  adda(AC)                        #28
              0624 8200  adda ac          2787  adda(AC)                        #29
              0625 8200  adda ac          2788  adda(AC)                        #30
              0626 8200  adda ac          2789  adda(AC)                        #31
              0627 8200  adda ac          2790  adda(AC)                        #32
              0628 8200  adda ac          2791  adda(AC)                        #33
              0629 4118  ora  [$18]       2792  ora([vAC])                      #34
              062a c218  st   [$18]       2793  st([vAC])                       #35
              062b 0032  ld   $32         2794  ld('.sysLsrw2b')                #36 Shift high byte
              062c c21d  st   [$1d]       2795  st([vTmp])                      #37
              062d 0119  ld   [$19]       2796  ld([vAC+1])                     #38
              062e 20fc  anda $fc         2797  anda(0b11111100)                #39
              062f 4001  ora  $01         2798  ora( 0b00000001)                #40
              0630 e200  jmp  y,ac        2799  jmp(Y,AC)                       #41
              0631 fcff  bra  $ff         2800  bra(255)                        #42 bra shiftTable+255
                                          2801  label('.sysLsrw2b')
.sysLsrw2b:   0632 c219  st   [$19]       2802  st([vAC+1])                     #46
              0633 1403  ld   $03,y       2803  ld(hi('REENTER'),Y)             #47
              0634 e0cb  jmp  y,$cb       2804  jmp(Y,'REENTER')                #48
              0635 00e6  ld   $e6         2805  ld(-52/2)                       #49
                                          2806
                                          2807  label('SYS_LSRW3_52')
SYS_LSRW3_52: 0636 1405  ld   $05,y       2808  ld(hi('shiftTable'),Y)          #15 Logical shift right 3 bit (X >> 3)
              0637 003e  ld   $3e         2809  ld('.sysLsrw3a')                #16 Shift low byte
              0638 c21d  st   [$1d]       2810  st([vTmp])                      #17
              0639 0118  ld   [$18]       2811  ld([vAC])                       #18
              063a 20f8  anda $f8         2812  anda(0b11111000)                #19
              063b 4003  ora  $03         2813  ora( 0b00000011)                #20
              063c e200  jmp  y,ac        2814  jmp(Y,AC)                       #21
              063d fcff  bra  $ff         2815  bra(255)                        #22 bra shiftTable+255
                                          2816  label('.sysLsrw3a')
.sysLsrw3a:   063e c218  st   [$18]       2817  st([vAC])                       #26
              063f 0119  ld   [$19]       2818  ld([vAC+1])                     #27 Transfer bit 8:10
              0640 8200  adda ac          2819  adda(AC)                        #28
              0641 8200  adda ac          2820  adda(AC)                        #29
              0642 8200  adda ac          2821  adda(AC)                        #30
              0643 8200  adda ac          2822  adda(AC)                        #31
              0644 8200  adda ac          2823  adda(AC)                        #32
              0645 4118  ora  [$18]       2824  ora([vAC])                      #33
              0646 c218  st   [$18]       2825  st([vAC])                       #34
              0647 004e  ld   $4e         2826  ld('.sysLsrw3b')                #35 Shift high byte
              0648 c21d  st   [$1d]       2827  st([vTmp])                      #36
              0649 0119  ld   [$19]       2828  ld([vAC+1])                     #37
              064a 20f8  anda $f8         2829  anda(0b11111000)                #38
              064b 4003  ora  $03         2830  ora( 0b00000011)                #39
              064c e200  jmp  y,ac        2831  jmp(Y,AC)                       #40
              064d fcff  bra  $ff         2832  bra(255)                        #41 bra shiftTable+255
                                          2833  label('.sysLsrw3b')
.sysLsrw3b:   064e c219  st   [$19]       2834  st([vAC+1])                     #45
              064f 00e6  ld   $e6         2835  ld(-52/2)                       #46
              0650 1403  ld   $03,y       2836  ld(hi('REENTER'),Y)             #47
              0651 e0cb  jmp  y,$cb       2837  jmp(Y,'REENTER')                #48
                                          2838  #nop()                          #49
                                          2839
                                          2840  label('SYS_LSRW4_50')
SYS_LSRW4_50: 0652 1405  ld   $05,y       2841  ld(hi('shiftTable'),Y)          #15,49 Logical shift right 4 bit (X >> 4)
              0653 005a  ld   $5a         2842  ld('.sysLsrw4a')                #16 Shift low byte
              0654 c21d  st   [$1d]       2843  st([vTmp])                      #17
              0655 0118  ld   [$18]       2844  ld([vAC])                       #18
              0656 20f0  anda $f0         2845  anda(0b11110000)                #19
              0657 4007  ora  $07         2846  ora( 0b00000111)                #20
              0658 e200  jmp  y,ac        2847  jmp(Y,AC)                       #21
              0659 fcff  bra  $ff         2848  bra(255)                        #22 bra shiftTable+255
                                          2849  label('.sysLsrw4a')
.sysLsrw4a:   065a c218  st   [$18]       2850  st([vAC])                       #26
              065b 0119  ld   [$19]       2851  ld([vAC+1])                     #27 Transfer bit 8:11
              065c 8200  adda ac          2852  adda(AC)                        #28
              065d 8200  adda ac          2853  adda(AC)                        #29
              065e 8200  adda ac          2854  adda(AC)                        #30
              065f 8200  adda ac          2855  adda(AC)                        #31
              0660 4118  ora  [$18]       2856  ora([vAC])                      #32
              0661 c218  st   [$18]       2857  st([vAC])                       #33
              0662 0069  ld   $69         2858  ld('.sysLsrw4b')                #34 Shift high byte'
              0663 c21d  st   [$1d]       2859  st([vTmp])                      #35
              0664 0119  ld   [$19]       2860  ld([vAC+1])                     #36
              0665 20f0  anda $f0         2861  anda(0b11110000)                #37
              0666 4007  ora  $07         2862  ora( 0b00000111)                #38
              0667 e200  jmp  y,ac        2863  jmp(Y,AC)                       #39
              0668 fcff  bra  $ff         2864  bra(255)                        #40 bra shiftTable+255
                                          2865  label('.sysLsrw4b')
.sysLsrw4b:   0669 c219  st   [$19]       2866  st([vAC+1])                     #44
              066a 1403  ld   $03,y       2867  ld(hi('REENTER'),Y)             #45
              066b e0cb  jmp  y,$cb       2868  jmp(Y,'REENTER')                #46
              066c 00e7  ld   $e7         2869  ld(-50/2)                       #47
                                          2870
                                          2871  label('SYS_LSRW5_50')
SYS_LSRW5_50: 066d 1405  ld   $05,y       2872  ld(hi('shiftTable'),Y)          #15 Logical shift right 5 bit (X >> 5)
              066e 0075  ld   $75         2873  ld('.sysLsrw5a')                #16 Shift low byte
              066f c21d  st   [$1d]       2874  st([vTmp])                      #17
              0670 0118  ld   [$18]       2875  ld([vAC])                       #18
              0671 20e0  anda $e0         2876  anda(0b11100000)                #19
              0672 400f  ora  $0f         2877  ora( 0b00001111)                #20
              0673 e200  jmp  y,ac        2878  jmp(Y,AC)                       #21
              0674 fcff  bra  $ff         2879  bra(255)                        #22 bra shiftTable+255
                                          2880  label('.sysLsrw5a')
.sysLsrw5a:   0675 c218  st   [$18]       2881  st([vAC])                       #26
              0676 0119  ld   [$19]       2882  ld([vAC+1])                     #27 Transfer bit 8:13
              0677 8200  adda ac          2883  adda(AC)                        #28
              0678 8200  adda ac          2884  adda(AC)                        #29
              0679 8200  adda ac          2885  adda(AC)                        #30
              067a 4118  ora  [$18]       2886  ora([vAC])                      #31
              067b c218  st   [$18]       2887  st([vAC])                       #32
              067c 0083  ld   $83         2888  ld('.sysLsrw5b')                #33 Shift high byte
              067d c21d  st   [$1d]       2889  st([vTmp])                      #34
              067e 0119  ld   [$19]       2890  ld([vAC+1])                     #35
              067f 20e0  anda $e0         2891  anda(0b11100000)                #36
              0680 400f  ora  $0f         2892  ora( 0b00001111)                #37
              0681 e200  jmp  y,ac        2893  jmp(Y,AC)                       #38
              0682 fcff  bra  $ff         2894  bra(255)                        #39 bra shiftTable+255
                                          2895  label('.sysLsrw5b')
.sysLsrw5b:   0683 c219  st   [$19]       2896  st([vAC+1])                     #44
              0684 00e7  ld   $e7         2897  ld(-50/2)                       #45
              0685 1403  ld   $03,y       2898  ld(hi('REENTER'),Y)             #46
              0686 e0cb  jmp  y,$cb       2899  jmp(Y,'REENTER')                #47
                                          2900  #nop()                          #48
                                          2901
                                          2902  label('SYS_LSRW6_48')
SYS_LSRW6_48: 0687 1405  ld   $05,y       2903  ld(hi('shiftTable'),Y)          #15,44 Logical shift right 6 bit (X >> 6)
              0688 008f  ld   $8f         2904  ld('.sysLsrw6a')                #16 Shift low byte
              0689 c21d  st   [$1d]       2905  st([vTmp])                      #17
              068a 0118  ld   [$18]       2906  ld([vAC])                       #18
              068b 20c0  anda $c0         2907  anda(0b11000000)                #19
              068c 401f  ora  $1f         2908  ora( 0b00011111)                #20
              068d e200  jmp  y,ac        2909  jmp(Y,AC)                       #21
              068e fcff  bra  $ff         2910  bra(255)                        #22 bra shiftTable+255
                                          2911  label('.sysLsrw6a')
.sysLsrw6a:   068f c218  st   [$18]       2912  st([vAC])                       #26
              0690 0119  ld   [$19]       2913  ld([vAC+1])                     #27 Transfer bit 8:13
              0691 8200  adda ac          2914  adda(AC)                        #28
              0692 8200  adda ac          2915  adda(AC)                        #29
              0693 4118  ora  [$18]       2916  ora([vAC])                      #30
              0694 c218  st   [$18]       2917  st([vAC])                       #31
              0695 009c  ld   $9c         2918  ld('.sysLsrw6b')                #32 Shift high byte
              0696 c21d  st   [$1d]       2919  st([vTmp])                      #33
              0697 0119  ld   [$19]       2920  ld([vAC+1])                     #34
              0698 20c0  anda $c0         2921  anda(0b11000000)                #35
              0699 401f  ora  $1f         2922  ora( 0b00011111)                #36
              069a e200  jmp  y,ac        2923  jmp(Y,AC)                       #37
              069b fcff  bra  $ff         2924  bra(255)                        #38 bra shiftTable+255
                                          2925  label('.sysLsrw6b')
.sysLsrw6b:   069c c219  st   [$19]       2926  st([vAC+1])                     #42
              069d 1403  ld   $03,y       2927  ld(hi('REENTER'),Y)             #43
              069e e0cb  jmp  y,$cb       2928  jmp(Y,'REENTER')                #44
              069f 00e8  ld   $e8         2929  ld(-48/2)                       #45
                                          2930
                                          2931  label('SYS_LSLW4_46')
SYS_LSLW4_46: 06a0 1405  ld   $05,y       2932  ld(hi('shiftTable'),Y)          #15 Logical shift left 4 bit (X << 4)
              06a1 00ae  ld   $ae         2933  ld('.sysLsrl4')                 #16
              06a2 c21d  st   [$1d]       2934  st([vTmp])                      #17
              06a3 0119  ld   [$19]       2935  ld([vAC+1])                     #18
              06a4 8200  adda ac          2936  adda(AC)                        #19
              06a5 8200  adda ac          2937  adda(AC)                        #20
              06a6 8200  adda ac          2938  adda(AC)                        #21
              06a7 8200  adda ac          2939  adda(AC)                        #22
              06a8 c219  st   [$19]       2940  st([vAC+1])                     #23
              06a9 0118  ld   [$18]       2941  ld([vAC])                       #24
              06aa 20f0  anda $f0         2942  anda(0b11110000)                #25
              06ab 4007  ora  $07         2943  ora( 0b00000111)                #26
              06ac e200  jmp  y,ac        2944  jmp(Y,AC)                       #27
              06ad fcff  bra  $ff         2945  bra(255)                        #28 bra shiftTable+255
                                          2946  label('.sysLsrl4')
.sysLsrl4:    06ae 4119  ora  [$19]       2947  ora([vAC+1])                    #32
              06af c219  st   [$19]       2948  st([vAC+1])                     #33
              06b0 0118  ld   [$18]       2949  ld([vAC])                       #34
              06b1 8200  adda ac          2950  adda(AC)                        #35
              06b2 8200  adda ac          2951  adda(AC)                        #36
              06b3 8200  adda ac          2952  adda(AC)                        #37
              06b4 8200  adda ac          2953  adda(AC)                        #38
              06b5 c218  st   [$18]       2954  st([vAC])                       #39
              06b6 00e9  ld   $e9         2955  ld(-46/2)                       #40
              06b7 1403  ld   $03,y       2956  ld(hi('REENTER'),Y)             #41
              06b8 e0cb  jmp  y,$cb       2957  jmp(Y,'REENTER')                #42
                                          2958  #nop()                          #43
                                          2959
                                          2960  #-----------------------------------------------------------------------
                                          2961  #       v6502 right shift instruction
                                          2962  #-----------------------------------------------------------------------
                                          2963
                                          2964  label('v6502_lsr#30')
v6502_lsr#30: 06b9 1525  ld   [$25],y     2965  ld([v6502_ADH],Y)               #30 Result
              06ba ce00  st   [y,x]       2966  st([Y,X])                       #31
              06bb c228  st   [$28]       2967  st([v6502_Qz])                  #32 Z flag
              06bc c229  st   [$29]       2968  st([v6502_Qn])                  #33 N flag
              06bd 140e  ld   $0e,y       2969  ld(hi('v6502_next'),Y)          #34
              06be 00ed  ld   $ed         2970  ld(-38/2)                       #35
              06bf e020  jmp  y,$20       2971  jmp(Y,'v6502_next')             #36
                                          2972  #nop()                          #37 Overlap
                                          2973  #
                                          2974  label('v6502_ror#38')
v6502_ror#38: 06c0 1525  ld   [$25],y     2975  ld([v6502_ADH],Y)               #38,38 Result
              06c1 4119  ora  [$19]       2976  ora([v6502_BI])                 #39 Transfer bit 8
              06c2 ce00  st   [y,x]       2977  st([Y,X])                       #40
              06c3 c228  st   [$28]       2978  st([v6502_Qz])                  #41 Z flag
              06c4 c229  st   [$29]       2979  st([v6502_Qn])                  #42 N flag
              06c5 140e  ld   $0e,y       2980  ld(hi('v6502_next'),Y)          #43
              06c6 e020  jmp  y,$20       2981  jmp(Y,'v6502_next')             #44
              06c7 00e9  ld   $e9         2982  ld(-46/2)                       #45
                                          2983
                                          2984  #-----------------------------------------------------------------------
                                          2985  #       vCPU LSRB
                                          2986  #-----------------------------------------------------------------------
                                          2987
                                          2988  label('.lsrb#24')
.lsrb#24:     06c8 c600  st   [x]         2989  st([X])                         #24
              06c9 1403  ld   $03,y       2990  ld(hi('REENTER'),Y)             #25
              06ca e0cb  jmp  y,$cb       2991  jmp(Y,'REENTER')                #26
              06cb 00f1  ld   $f1         2992  ld(-30/2)                       #27
                                          2993
                                          2994  #-----------------------------------------------------------------------
                                          2995  #       vCPU LSRV
                                          2996  #-----------------------------------------------------------------------
                                          2997
                                          2998  label('.lsrv#27')
.lsrv#27:     06cc 142c  ld   $2c,y       2999  ld(hi('.lsrv#30'),Y)            #27
              06cd e053  jmp  y,$53       3000  jmp(Y,'.lsrv#30')               #28
              06ce c600  st   [x]         3001  st([X])                         #29 shifted byte low
                                          3002
                                          3003  label('.lsrv#51')
.lsrv#51:     06cf c600  st   [x]         3004  st([X])                         #51 shifted byte hi
              06d0 1403  ld   $03,y       3005  ld(hi('NEXTY'),Y)               #52
              06d1 e000  jmp  y,$00       3006  jmp(Y,'NEXTY')                  #53
              06d2 00e4  ld   $e4         3007  ld(-56/2)                       #54
                                          3008
                                          3009  #-----------------------------------------------------------------------
                                          3010  #       vCPU LSRVL
                                          3011  #-----------------------------------------------------------------------
                                          3012
                                          3013  label('.lsrvl#26')
.lsrvl#26:    06d3 142c  ld   $2c,y       3014  ld(hi('.lsrvl#29'),Y)           #26
              06d4 e075  jmp  y,$75       3015  jmp(Y,'.lsrvl#29')              #27
              06d5 c600  st   [x]         3016  st([X])                         #28 shifted byte 0
                                          3017
                                          3018  label('.lsrvl#54')
.lsrvl#54:    06d6 142c  ld   $2c,y       3019  ld(hi('.lsrvl#57'),Y)           #54
              06d7 e08b  jmp  y,$8b       3020  jmp(Y,'.lsrvl#57')              #55
              06d8 c600  st   [x]         3021  st([X])                         #56 shifted byte 1
                                          3022
                                          3023  label('.lsrvl#76')
.lsrvl#76:    06d9 142c  ld   $2c,y       3024  ld(hi('.lsrvl#79'),Y)           #76
              06da e09b  jmp  y,$9b       3025  jmp(Y,'.lsrvl#79')              #77
              06db c600  st   [x]         3026  st([X])                         #78 shifted byte 2
                                          3027
                                          3028  label('.lsrvl#98')
.lsrvl#98:    06dc c600  st   [x]         3029  st([X])                         #98 shifted byte 3
              06dd 1403  ld   $03,y       3030  ld(hi('REENTER'),Y)             #99
              06de e0cb  jmp  y,$cb       3031  jmp(Y,'REENTER')                #100
              06df 00cc  ld   $cc         3032  ld(-104/2)                      #101
                                          3033
                                          3034  #-----------------------------------------------------------------------
                                          3035  #       vCPU NROR (lb3361)
                                          3036  #-----------------------------------------------------------------------
                                          3037
                                          3038  label('nror#35')
nror#35:      06e0 4118  ora  [$18]       3039  ora([vAC])                      #35
              06e1 c600  st   [x]         3040  st([X])                         #36
              06e2 012b  ld   [$2b]       3041  ld([sysArgs+7])                 #37
              06e3 612a  xora [$2a]       3042  xora([sysArgs+6])               #38
              06e4 ece8  bne  nror#41     3043  bne('nror#41')                  #39
              06e5 1403  ld   $03,y       3044  ld(hi('NEXTY'),Y)               #40
              06e6 e000  jmp  y,$00       3045  jmp(Y,'NEXTY')                  #41
              06e7 00ea  ld   $ea         3046  ld(-44/2)                       #42
                                          3047  label('nror#41')
nror#41:      06e8 00f1  ld   $f1         3048  ld(-30/2)                       #41
              06e9 8115  adda [$15]       3049  adda([vTicks])                  #12=42-30
              06ea 1434  ld   $34,y       3050  ld(hi('nror#16'),Y)             #13=43-30
              06eb e027  jmp  y,$27       3051  jmp(Y,'nror#16')                #14=44-30
              06ec c215  st   [$15]       3052  st([vTicks])                    #15=45-30
                                          3053
                                          3054
                                          3055
                                          3056  #-----------------------------------------------------------------------
                                          3057  #
                                          3058  #  $0700 ROM page 7-8: Gigatron font data
                                          3059  #
                                          3060  #-----------------------------------------------------------------------
                                          3061
              06ed 0200  nop              3062  align(0x100, size=0x100)
              06ee 0200  nop
              06ef 0200  nop
              * 19 times
                                          3063
                                          3064  label('font32up')
                                          3065  for ch in range(32, 32+50):
                                          3066    comment = 'Char %s' % repr(chr(ch))
                                          3067    for byte in font.font[ch-32]:
                                          3068      ld(byte)
font32up:     0700 0000  ld   $00         ;Char ' '
              0701 0000  ld   $00
              0702 0000  ld   $00
              * 5 times
              0705 0000  ld   $00         ;Char '!'
              0706 0000  ld   $00
              0707 00fa  ld   $fa
              0708 0000  ld   $00
              0709 0000  ld   $00
              070a 00a0  ld   $a0         ;Char '"'
              070b 00c0  ld   $c0
              070c 0000  ld   $00
              070d 00a0  ld   $a0
              070e 00c0  ld   $c0
              070f 0028  ld   $28         ;Char '#'
              0710 00fe  ld   $fe
              0711 0028  ld   $28
              0712 00fe  ld   $fe
              0713 0028  ld   $28
              0714 0024  ld   $24         ;Char '$'
              0715 0054  ld   $54
              0716 00fe  ld   $fe
              0717 0054  ld   $54
              0718 0048  ld   $48
              0719 00c4  ld   $c4         ;Char '%'
              071a 00c8  ld   $c8
              071b 0010  ld   $10
              071c 0026  ld   $26
              071d 0046  ld   $46
              071e 006c  ld   $6c         ;Char '&'
              071f 0092  ld   $92
              0720 006a  ld   $6a
              0721 0004  ld   $04
              0722 000a  ld   $0a
              0723 0000  ld   $00         ;Char "'"
              0724 00a0  ld   $a0
              0725 00c0  ld   $c0
              0726 0000  ld   $00
              0727 0000  ld   $00
              0728 0000  ld   $00         ;Char '('
              0729 0038  ld   $38
              072a 0044  ld   $44
              072b 0082  ld   $82
              072c 0000  ld   $00
              072d 0000  ld   $00         ;Char ')'
              072e 0082  ld   $82
              072f 0044  ld   $44
              0730 0038  ld   $38
              0731 0000  ld   $00
              0732 0028  ld   $28         ;Char '*'
              0733 0010  ld   $10
              0734 007c  ld   $7c
              0735 0010  ld   $10
              0736 0028  ld   $28
              0737 0010  ld   $10         ;Char '+'
              0738 0010  ld   $10
              0739 007c  ld   $7c
              073a 0010  ld   $10
              073b 0010  ld   $10
              073c 0000  ld   $00         ;Char ','
              073d 0005  ld   $05
              073e 0006  ld   $06
              073f 0000  ld   $00
              0740 0000  ld   $00
              0741 0010  ld   $10         ;Char '-'
              0742 0010  ld   $10
              0743 0010  ld   $10
              * 5 times
              0746 0000  ld   $00         ;Char '.'
              0747 0002  ld   $02
              0748 0002  ld   $02
              0749 0000  ld   $00
              074a 0000  ld   $00
              074b 0000  ld   $00         ;Char '/'
              074c 0006  ld   $06
              074d 0018  ld   $18
              074e 0060  ld   $60
              074f 0000  ld   $00
              0750 007c  ld   $7c         ;Char '0'
              0751 008a  ld   $8a
              0752 0092  ld   $92
              0753 00a2  ld   $a2
              0754 007c  ld   $7c
              0755 0022  ld   $22         ;Char '1'
              0756 0042  ld   $42
              0757 00fe  ld   $fe
              0758 0002  ld   $02
              0759 0002  ld   $02
              075a 0046  ld   $46         ;Char '2'
              075b 008a  ld   $8a
              075c 0092  ld   $92
              075d 0092  ld   $92
              075e 0062  ld   $62
              075f 0044  ld   $44         ;Char '3'
              0760 0082  ld   $82
              0761 0092  ld   $92
              0762 0092  ld   $92
              0763 006c  ld   $6c
              0764 0018  ld   $18         ;Char '4'
              0765 0028  ld   $28
              0766 0048  ld   $48
              0767 00fe  ld   $fe
              0768 0008  ld   $08
              0769 00e4  ld   $e4         ;Char '5'
              076a 00a2  ld   $a2
              076b 00a2  ld   $a2
              076c 00a2  ld   $a2
              076d 009c  ld   $9c
              076e 003c  ld   $3c         ;Char '6'
              076f 0052  ld   $52
              0770 0092  ld   $92
              0771 0092  ld   $92
              0772 000c  ld   $0c
              0773 0080  ld   $80         ;Char '7'
              0774 008e  ld   $8e
              0775 0090  ld   $90
              0776 00a0  ld   $a0
              0777 00c0  ld   $c0
              0778 006c  ld   $6c         ;Char '8'
              0779 0092  ld   $92
              077a 0092  ld   $92
              077b 0092  ld   $92
              077c 006c  ld   $6c
              077d 0060  ld   $60         ;Char '9'
              077e 0092  ld   $92
              077f 0092  ld   $92
              0780 0094  ld   $94
              0781 0078  ld   $78
              0782 0000  ld   $00         ;Char ':'
              0783 0024  ld   $24
              0784 0024  ld   $24
              0785 0000  ld   $00
              0786 0000  ld   $00
              0787 0000  ld   $00         ;Char ';'
              0788 0025  ld   $25
              0789 0026  ld   $26
              078a 0000  ld   $00
              078b 0000  ld   $00
              078c 0010  ld   $10         ;Char '<'
              078d 0028  ld   $28
              078e 0044  ld   $44
              078f 0082  ld   $82
              0790 0000  ld   $00
              0791 0028  ld   $28         ;Char '='
              0792 0028  ld   $28
              0793 0028  ld   $28
              * 5 times
              0796 0000  ld   $00         ;Char '>'
              0797 0082  ld   $82
              0798 0044  ld   $44
              0799 0028  ld   $28
              079a 0010  ld   $10
              079b 0040  ld   $40         ;Char '?'
              079c 0080  ld   $80
              079d 008a  ld   $8a
              079e 0090  ld   $90
              079f 0060  ld   $60
              07a0 007c  ld   $7c         ;Char '@'
              07a1 0082  ld   $82
              07a2 00ba  ld   $ba
              07a3 00aa  ld   $aa
              07a4 0078  ld   $78
              07a5 003e  ld   $3e         ;Char 'A'
              07a6 0048  ld   $48
              07a7 0088  ld   $88
              07a8 0048  ld   $48
              07a9 003e  ld   $3e
              07aa 00fe  ld   $fe         ;Char 'B'
              07ab 0092  ld   $92
              07ac 0092  ld   $92
              07ad 0092  ld   $92
              07ae 006c  ld   $6c
              07af 007c  ld   $7c         ;Char 'C'
              07b0 0082  ld   $82
              07b1 0082  ld   $82
              07b2 0082  ld   $82
              07b3 0044  ld   $44
              07b4 00fe  ld   $fe         ;Char 'D'
              07b5 0082  ld   $82
              07b6 0082  ld   $82
              07b7 0044  ld   $44
              07b8 0038  ld   $38
              07b9 00fe  ld   $fe         ;Char 'E'
              07ba 0092  ld   $92
              07bb 0092  ld   $92
              07bc 0092  ld   $92
              07bd 0082  ld   $82
              07be 00fe  ld   $fe         ;Char 'F'
              07bf 0090  ld   $90
              07c0 0090  ld   $90
              07c1 0090  ld   $90
              07c2 0080  ld   $80
              07c3 007c  ld   $7c         ;Char 'G'
              07c4 0082  ld   $82
              07c5 0082  ld   $82
              07c6 0092  ld   $92
              07c7 005c  ld   $5c
              07c8 00fe  ld   $fe         ;Char 'H'
              07c9 0010  ld   $10
              07ca 0010  ld   $10
              07cb 0010  ld   $10
              07cc 00fe  ld   $fe
              07cd 0000  ld   $00         ;Char 'I'
              07ce 0082  ld   $82
              07cf 00fe  ld   $fe
              07d0 0082  ld   $82
              07d1 0000  ld   $00
              07d2 0004  ld   $04         ;Char 'J'
              07d3 0002  ld   $02
              07d4 0082  ld   $82
              07d5 00fc  ld   $fc
              07d6 0080  ld   $80
              07d7 00fe  ld   $fe         ;Char 'K'
              07d8 0010  ld   $10
              07d9 0028  ld   $28
              07da 0044  ld   $44
              07db 0082  ld   $82
              07dc 00fe  ld   $fe         ;Char 'L'
              07dd 0002  ld   $02
              07de 0002  ld   $02
              07df 0002  ld   $02
              07e0 0002  ld   $02
              07e1 00fe  ld   $fe         ;Char 'M'
              07e2 0040  ld   $40
              07e3 0030  ld   $30
              07e4 0040  ld   $40
              07e5 00fe  ld   $fe
              07e6 00fe  ld   $fe         ;Char 'N'
              07e7 0020  ld   $20
              07e8 0010  ld   $10
              07e9 0008  ld   $08
              07ea 00fe  ld   $fe
              07eb 007c  ld   $7c         ;Char 'O'
              07ec 0082  ld   $82
              07ed 0082  ld   $82
              07ee 0082  ld   $82
              07ef 007c  ld   $7c
              07f0 00fe  ld   $fe         ;Char 'P'
              07f1 0090  ld   $90
              07f2 0090  ld   $90
              07f3 0090  ld   $90
              07f4 0060  ld   $60
              07f5 007c  ld   $7c         ;Char 'Q'
              07f6 0082  ld   $82
              07f7 008a  ld   $8a
              07f8 0084  ld   $84
              07f9 007a  ld   $7a
                                          3069      comment = C(comment)
                                          3070
              07fa 0200  nop              3071  trampoline()
              07fb fe00  bra  ac          ;+-----------------------------------+
              07fc fcfd  bra  $07fd       ;|                                   |
              07fd 1418  ld   $18,y       ;| Trampoline for page $0700 lookups |
              07fe e006  jmp  y,$06       ;|                                   |
              07ff c218  st   [$18]       ;+-----------------------------------+
                                          3072
                                          3073  #-----------------------------------------------------------------------
                                          3074
                                          3075  align(0x100, size=0x100)
                                          3076
                                          3077  label('font82up')
                                          3078  for ch in range(32+50, 132):
                                          3079    comment = 'Char %s' % repr(chr(ch))
                                          3080    for byte in font.font[ch-32]:
                                          3081      ld(byte)
font82up:     0800 00fe  ld   $fe         ;Char 'R'
              0801 0090  ld   $90
              0802 0098  ld   $98
              0803 0094  ld   $94
              0804 0062  ld   $62
              0805 0062  ld   $62         ;Char 'S'
              0806 0092  ld   $92
              0807 0092  ld   $92
              0808 0092  ld   $92
              0809 000c  ld   $0c
              080a 0080  ld   $80         ;Char 'T'
              080b 0080  ld   $80
              080c 00fe  ld   $fe
              080d 0080  ld   $80
              080e 0080  ld   $80
              080f 00fc  ld   $fc         ;Char 'U'
              0810 0002  ld   $02
              0811 0002  ld   $02
              0812 0002  ld   $02
              0813 00fc  ld   $fc
              0814 00f0  ld   $f0         ;Char 'V'
              0815 000c  ld   $0c
              0816 0002  ld   $02
              0817 000c  ld   $0c
              0818 00f0  ld   $f0
              0819 00fe  ld   $fe         ;Char 'W'
              081a 0004  ld   $04
              081b 0018  ld   $18
              081c 0004  ld   $04
              081d 00fe  ld   $fe
              081e 00c6  ld   $c6         ;Char 'X'
              081f 0028  ld   $28
              0820 0010  ld   $10
              0821 0028  ld   $28
              0822 00c6  ld   $c6
              0823 00e0  ld   $e0         ;Char 'Y'
              0824 0010  ld   $10
              0825 000e  ld   $0e
              0826 0010  ld   $10
              0827 00e0  ld   $e0
              0828 0086  ld   $86         ;Char 'Z'
              0829 008a  ld   $8a
              082a 0092  ld   $92
              082b 00a2  ld   $a2
              082c 00c2  ld   $c2
              082d 0000  ld   $00         ;Char '['
              082e 00fe  ld   $fe
              082f 0082  ld   $82
              0830 0082  ld   $82
              0831 0000  ld   $00
              0832 0000  ld   $00         ;Char '\\'
              0833 0060  ld   $60
              0834 0018  ld   $18
              0835 0006  ld   $06
              0836 0000  ld   $00
              0837 0000  ld   $00         ;Char ']'
              0838 0082  ld   $82
              0839 0082  ld   $82
              083a 00fe  ld   $fe
              083b 0000  ld   $00
              083c 0020  ld   $20         ;Char '^'
              083d 0040  ld   $40
              083e 0080  ld   $80
              083f 0040  ld   $40
              0840 0020  ld   $20
              0841 0002  ld   $02         ;Char '_'
              0842 0002  ld   $02
              0843 0002  ld   $02
              * 5 times
              0846 0000  ld   $00         ;Char '`'
              0847 0000  ld   $00
              0848 00c0  ld   $c0
              0849 00a0  ld   $a0
              084a 0000  ld   $00
              084b 0004  ld   $04         ;Char 'a'
              084c 002a  ld   $2a
              084d 002a  ld   $2a
              084e 002a  ld   $2a
              084f 001e  ld   $1e
              0850 00fe  ld   $fe         ;Char 'b'
              0851 0022  ld   $22
              0852 0022  ld   $22
              0853 0022  ld   $22
              0854 001c  ld   $1c
              0855 001c  ld   $1c         ;Char 'c'
              0856 0022  ld   $22
              0857 0022  ld   $22
              0858 0022  ld   $22
              0859 0002  ld   $02
              085a 001c  ld   $1c         ;Char 'd'
              085b 0022  ld   $22
              085c 0022  ld   $22
              085d 0022  ld   $22
              085e 00fe  ld   $fe
              085f 001c  ld   $1c         ;Char 'e'
              0860 002a  ld   $2a
              0861 002a  ld   $2a
              0862 002a  ld   $2a
              0863 0018  ld   $18
              0864 0010  ld   $10         ;Char 'f'
              0865 007e  ld   $7e
              0866 0090  ld   $90
              0867 0080  ld   $80
              0868 0040  ld   $40
              0869 0018  ld   $18         ;Char 'g'
              086a 0025  ld   $25
              086b 0025  ld   $25
              086c 0025  ld   $25
              086d 001e  ld   $1e
              086e 00fe  ld   $fe         ;Char 'h'
              086f 0020  ld   $20
              0870 0020  ld   $20
              0871 0020  ld   $20
              0872 001e  ld   $1e
              0873 0000  ld   $00         ;Char 'i'
              0874 0022  ld   $22
              0875 00be  ld   $be
              0876 0002  ld   $02
              0877 0000  ld   $00
              0878 0002  ld   $02         ;Char 'j'
              0879 0001  ld   $01
              087a 0021  ld   $21
              087b 00be  ld   $be
              087c 0000  ld   $00
              087d 00fe  ld   $fe         ;Char 'k'
              087e 0008  ld   $08
              087f 0018  ld   $18
              0880 0024  ld   $24
              0881 0002  ld   $02
              0882 0000  ld   $00         ;Char 'l'
              0883 0082  ld   $82
              0884 00fe  ld   $fe
              0885 0002  ld   $02
              0886 0000  ld   $00
              0887 003e  ld   $3e         ;Char 'm'
              0888 0020  ld   $20
              0889 001c  ld   $1c
              088a 0020  ld   $20
              088b 001e  ld   $1e
              088c 003e  ld   $3e         ;Char 'n'
              088d 0010  ld   $10
              088e 0020  ld   $20
              088f 0020  ld   $20
              0890 001e  ld   $1e
              0891 001c  ld   $1c         ;Char 'o'
              0892 0022  ld   $22
              0893 0022  ld   $22
              0894 0022  ld   $22
              0895 001c  ld   $1c
              0896 003f  ld   $3f         ;Char 'p'
              0897 0024  ld   $24
              0898 0024  ld   $24
              0899 0024  ld   $24
              089a 0018  ld   $18
              089b 0018  ld   $18         ;Char 'q'
              089c 0024  ld   $24
              089d 0024  ld   $24
              089e 0024  ld   $24
              089f 003f  ld   $3f
              08a0 003e  ld   $3e         ;Char 'r'
              08a1 0010  ld   $10
              08a2 0020  ld   $20
              08a3 0020  ld   $20
              08a4 0010  ld   $10
              08a5 0012  ld   $12         ;Char 's'
              08a6 002a  ld   $2a
              08a7 002a  ld   $2a
              08a8 002a  ld   $2a
              08a9 0004  ld   $04
              08aa 0020  ld   $20         ;Char 't'
              08ab 00fc  ld   $fc
              08ac 0022  ld   $22
              08ad 0002  ld   $02
              08ae 0004  ld   $04
              08af 003c  ld   $3c         ;Char 'u'
              08b0 0002  ld   $02
              08b1 0002  ld   $02
              08b2 0004  ld   $04
              08b3 003e  ld   $3e
              08b4 0038  ld   $38         ;Char 'v'
              08b5 0004  ld   $04
              08b6 0002  ld   $02
              08b7 0004  ld   $04
              08b8 0038  ld   $38
              08b9 003c  ld   $3c         ;Char 'w'
              08ba 0002  ld   $02
              08bb 000c  ld   $0c
              08bc 0002  ld   $02
              08bd 003c  ld   $3c
              08be 0022  ld   $22         ;Char 'x'
              08bf 0014  ld   $14
              08c0 0008  ld   $08
              08c1 0014  ld   $14
              08c2 0022  ld   $22
              08c3 0038  ld   $38         ;Char 'y'
              08c4 0005  ld   $05
              08c5 0005  ld   $05
              08c6 0005  ld   $05
              08c7 003e  ld   $3e
              08c8 0022  ld   $22         ;Char 'z'
              08c9 0026  ld   $26
              08ca 002a  ld   $2a
              08cb 0032  ld   $32
              08cc 0022  ld   $22
              08cd 0010  ld   $10         ;Char '{'
              08ce 006c  ld   $6c
              08cf 0082  ld   $82
              08d0 0082  ld   $82
              08d1 0000  ld   $00
              08d2 0000  ld   $00         ;Char '|'
              08d3 0000  ld   $00
              08d4 00fe  ld   $fe
              08d5 0000  ld   $00
              08d6 0000  ld   $00
              08d7 0000  ld   $00         ;Char '}'
              08d8 0082  ld   $82
              08d9 0082  ld   $82
              08da 006c  ld   $6c
              08db 0010  ld   $10
              08dc 0040  ld   $40         ;Char '~'
              08dd 0080  ld   $80
              08de 0040  ld   $40
              08df 0020  ld   $20
              08e0 0040  ld   $40
              08e1 00fe  ld   $fe         ;Char '\x7f'
              08e2 00fe  ld   $fe
              08e3 00fe  ld   $fe
              * 5 times
              08e6 0010  ld   $10         ;Char '\x80'
              08e7 0038  ld   $38
              08e8 0054  ld   $54
              08e9 0010  ld   $10
              08ea 0010  ld   $10
              08eb 0010  ld   $10         ;Char '\x81'
              08ec 0020  ld   $20
              08ed 007c  ld   $7c
              08ee 0020  ld   $20
              08ef 0010  ld   $10
              08f0 0010  ld   $10         ;Char '\x82'
              08f1 0010  ld   $10
              08f2 0054  ld   $54
              08f3 0038  ld   $38
              08f4 0010  ld   $10
              08f5 0010  ld   $10         ;Char '\x83'
              08f6 0008  ld   $08
              08f7 007c  ld   $7c
              08f8 0008  ld   $08
              08f9 0010  ld   $10
                                          3082      comment = C(comment)
                                          3083
              08fa 0200  nop              3084  trampoline()
              08fb fe00  bra  ac          ;+-----------------------------------+
              08fc fcfd  bra  $08fd       ;|                                   |
              08fd 1418  ld   $18,y       ;| Trampoline for page $0800 lookups |
              08fe e006  jmp  y,$06       ;|                                   |
              08ff c218  st   [$18]       ;+-----------------------------------+
                                          3085
                                          3086  #-----------------------------------------------------------------------
                                          3087  #
                                          3088  #  $0900 ROM page 9: Key table for music
                                          3089  #
                                          3090  #-----------------------------------------------------------------------
                                          3091
                                          3092  align(0x100, size=0x100)
                                          3093  notes = 'CCDDEFFGGAAB'
                                          3094  sampleRate = cpuClock / 200.0 / 4
                                          3095  label('notesTable')
notesTable:   0900 0000  ld   $00         3096  ld(0)
              0901 0000  ld   $00         3097  ld(0)
                                          3098  for i in range(0, 250, 2):
                                          3099    j = i//2-1
                                          3100    freq = 440.0*2.0**((j-57)/12.0)
                                          3101    if j>=0 and freq <= sampleRate/2.0:
                                          3102      key = int(round(32768 * freq / sampleRate))
                                          3103      octave, note = j//12, notes[j%12]
                                          3104      sharp = '-' if notes[j%12-1] != note else '#'
                                          3105      comment = '%s%s%s (%0.1f Hz)' % (note, sharp, octave, freq)
                                          3106      ld(key&127); C(comment); ld(key>>7)
              0902 0045  ld   $45         ;C-0 (16.4 Hz)
              0903 0000  ld   $00
              0904 0049  ld   $49         ;C#0 (17.3 Hz)
              0905 0000  ld   $00
              0906 004d  ld   $4d         ;D-0 (18.4 Hz)
              0907 0000  ld   $00
              0908 0052  ld   $52         ;D#0 (19.4 Hz)
              0909 0000  ld   $00
              090a 0056  ld   $56         ;E-0 (20.6 Hz)
              090b 0000  ld   $00
              090c 005c  ld   $5c         ;F-0 (21.8 Hz)
              090d 0000  ld   $00
              090e 0061  ld   $61         ;F#0 (23.1 Hz)
              090f 0000  ld   $00
              0910 0067  ld   $67         ;G-0 (24.5 Hz)
              0911 0000  ld   $00
              0912 006d  ld   $6d         ;G#0 (26.0 Hz)
              0913 0000  ld   $00
              0914 0073  ld   $73         ;A-0 (27.5 Hz)
              0915 0000  ld   $00
              0916 007a  ld   $7a         ;A#0 (29.1 Hz)
              0917 0000  ld   $00
              0918 0001  ld   $01         ;B-0 (30.9 Hz)
              0919 0001  ld   $01
              091a 0009  ld   $09         ;C-1 (32.7 Hz)
              091b 0001  ld   $01
              091c 0011  ld   $11         ;C#1 (34.6 Hz)
              091d 0001  ld   $01
              091e 001a  ld   $1a         ;D-1 (36.7 Hz)
              091f 0001  ld   $01
              0920 0023  ld   $23         ;D#1 (38.9 Hz)
              0921 0001  ld   $01
              0922 002d  ld   $2d         ;E-1 (41.2 Hz)
              0923 0001  ld   $01
              0924 0037  ld   $37         ;F-1 (43.7 Hz)
              0925 0001  ld   $01
              0926 0042  ld   $42         ;F#1 (46.2 Hz)
              0927 0001  ld   $01
              0928 004e  ld   $4e         ;G-1 (49.0 Hz)
              0929 0001  ld   $01
              092a 005a  ld   $5a         ;G#1 (51.9 Hz)
              092b 0001  ld   $01
              092c 0067  ld   $67         ;A-1 (55.0 Hz)
              092d 0001  ld   $01
              092e 0074  ld   $74         ;A#1 (58.3 Hz)
              092f 0001  ld   $01
              0930 0003  ld   $03         ;B-1 (61.7 Hz)
              0931 0002  ld   $02
              0932 0012  ld   $12         ;C-2 (65.4 Hz)
              0933 0002  ld   $02
              0934 0023  ld   $23         ;C#2 (69.3 Hz)
              0935 0002  ld   $02
              0936 0034  ld   $34         ;D-2 (73.4 Hz)
              0937 0002  ld   $02
              0938 0046  ld   $46         ;D#2 (77.8 Hz)
              0939 0002  ld   $02
              093a 005a  ld   $5a         ;E-2 (82.4 Hz)
              093b 0002  ld   $02
              093c 006e  ld   $6e         ;F-2 (87.3 Hz)
              093d 0002  ld   $02
              093e 0004  ld   $04         ;F#2 (92.5 Hz)
              093f 0003  ld   $03
              0940 001b  ld   $1b         ;G-2 (98.0 Hz)
              0941 0003  ld   $03
              0942 0033  ld   $33         ;G#2 (103.8 Hz)
              0943 0003  ld   $03
              0944 004d  ld   $4d         ;A-2 (110.0 Hz)
              0945 0003  ld   $03
              0946 0069  ld   $69         ;A#2 (116.5 Hz)
              0947 0003  ld   $03
              0948 0006  ld   $06         ;B-2 (123.5 Hz)
              0949 0004  ld   $04
              094a 0025  ld   $25         ;C-3 (130.8 Hz)
              094b 0004  ld   $04
              094c 0045  ld   $45         ;C#3 (138.6 Hz)
              094d 0004  ld   $04
              094e 0068  ld   $68         ;D-3 (146.8 Hz)
              094f 0004  ld   $04
              0950 000c  ld   $0c         ;D#3 (155.6 Hz)
              0951 0005  ld   $05
              0952 0033  ld   $33         ;E-3 (164.8 Hz)
              0953 0005  ld   $05
              0954 005c  ld   $5c         ;F-3 (174.6 Hz)
              0955 0005  ld   $05
              0956 0008  ld   $08         ;F#3 (185.0 Hz)
              0957 0006  ld   $06
              0958 0036  ld   $36         ;G-3 (196.0 Hz)
              0959 0006  ld   $06
              095a 0067  ld   $67         ;G#3 (207.7 Hz)
              095b 0006  ld   $06
              095c 001b  ld   $1b         ;A-3 (220.0 Hz)
              095d 0007  ld   $07
              095e 0052  ld   $52         ;A#3 (233.1 Hz)
              095f 0007  ld   $07
              0960 000c  ld   $0c         ;B-3 (246.9 Hz)
              0961 0008  ld   $08
              0962 0049  ld   $49         ;C-4 (261.6 Hz)
              0963 0008  ld   $08
              0964 000b  ld   $0b         ;C#4 (277.2 Hz)
              0965 0009  ld   $09
              0966 0050  ld   $50         ;D-4 (293.7 Hz)
              0967 0009  ld   $09
              0968 0019  ld   $19         ;D#4 (311.1 Hz)
              0969 000a  ld   $0a
              096a 0067  ld   $67         ;E-4 (329.6 Hz)
              096b 000a  ld   $0a
              096c 0039  ld   $39         ;F-4 (349.2 Hz)
              096d 000b  ld   $0b
              096e 0010  ld   $10         ;F#4 (370.0 Hz)
              096f 000c  ld   $0c
              0970 006c  ld   $6c         ;G-4 (392.0 Hz)
              0971 000c  ld   $0c
              0972 004e  ld   $4e         ;G#4 (415.3 Hz)
              0973 000d  ld   $0d
              0974 0035  ld   $35         ;A-4 (440.0 Hz)
              0975 000e  ld   $0e
              0976 0023  ld   $23         ;A#4 (466.2 Hz)
              0977 000f  ld   $0f
              0978 0017  ld   $17         ;B-4 (493.9 Hz)
              0979 0010  ld   $10
              097a 0013  ld   $13         ;C-5 (523.3 Hz)
              097b 0011  ld   $11
              097c 0015  ld   $15         ;C#5 (554.4 Hz)
              097d 0012  ld   $12
              097e 001f  ld   $1f         ;D-5 (587.3 Hz)
              097f 0013  ld   $13
              0980 0032  ld   $32         ;D#5 (622.3 Hz)
              0981 0014  ld   $14
              0982 004d  ld   $4d         ;E-5 (659.3 Hz)
              0983 0015  ld   $15
              0984 0072  ld   $72         ;F-5 (698.5 Hz)
              0985 0016  ld   $16
              0986 0020  ld   $20         ;F#5 (740.0 Hz)
              0987 0018  ld   $18
              0988 0058  ld   $58         ;G-5 (784.0 Hz)
              0989 0019  ld   $19
              098a 001c  ld   $1c         ;G#5 (830.6 Hz)
              098b 001b  ld   $1b
              098c 006b  ld   $6b         ;A-5 (880.0 Hz)
              098d 001c  ld   $1c
              098e 0046  ld   $46         ;A#5 (932.3 Hz)
              098f 001e  ld   $1e
              0990 002f  ld   $2f         ;B-5 (987.8 Hz)
              0991 0020  ld   $20
              0992 0025  ld   $25         ;C-6 (1046.5 Hz)
              0993 0022  ld   $22
              0994 002a  ld   $2a         ;C#6 (1108.7 Hz)
              0995 0024  ld   $24
              0996 003f  ld   $3f         ;D-6 (1174.7 Hz)
              0997 0026  ld   $26
              0998 0064  ld   $64         ;D#6 (1244.5 Hz)
              0999 0028  ld   $28
              099a 001a  ld   $1a         ;E-6 (1318.5 Hz)
              099b 002b  ld   $2b
              099c 0063  ld   $63         ;F-6 (1396.9 Hz)
              099d 002d  ld   $2d
              099e 003f  ld   $3f         ;F#6 (1480.0 Hz)
              099f 0030  ld   $30
              09a0 0031  ld   $31         ;G-6 (1568.0 Hz)
              09a1 0033  ld   $33
              09a2 0038  ld   $38         ;G#6 (1661.2 Hz)
              09a3 0036  ld   $36
              09a4 0056  ld   $56         ;A-6 (1760.0 Hz)
              09a5 0039  ld   $39
              09a6 000d  ld   $0d         ;A#6 (1864.7 Hz)
              09a7 003d  ld   $3d
              09a8 005e  ld   $5e         ;B-6 (1975.5 Hz)
              09a9 0040  ld   $40
              09aa 004b  ld   $4b         ;C-7 (2093.0 Hz)
              09ab 0044  ld   $44
              09ac 0055  ld   $55         ;C#7 (2217.5 Hz)
              09ad 0048  ld   $48
              09ae 007e  ld   $7e         ;D-7 (2349.3 Hz)
              09af 004c  ld   $4c
              09b0 0048  ld   $48         ;D#7 (2489.0 Hz)
              09b1 0051  ld   $51
              09b2 0034  ld   $34         ;E-7 (2637.0 Hz)
              09b3 0056  ld   $56
              09b4 0046  ld   $46         ;F-7 (2793.8 Hz)
              09b5 005b  ld   $5b
              09b6 007f  ld   $7f         ;F#7 (2960.0 Hz)
              09b7 0060  ld   $60
              09b8 0061  ld   $61         ;G-7 (3136.0 Hz)
              09b9 0066  ld   $66
              09ba 006f  ld   $6f         ;G#7 (3322.4 Hz)
              09bb 006c  ld   $6c
              09bc 002c  ld   $2c         ;A-7 (3520.0 Hz)
              09bd 0073  ld   $73
              09be 001a  ld   $1a         ;A#7 (3729.3 Hz)
              09bf 007a  ld   $7a
                                          3107
                                          3108  # NOTE trampoline, (0x09c0), (cycles times are +1 for midi#13)
                                          3109  label('noteTrampoline')
noteTrampoline:
              09c0 fe00  bra  ac          3110  bra(AC)                         #22,#23 #35,#36 fetches ROM note byte, (low then high)
              09c1 fcc2  bra  $09c2       3111  bra(pc()+1)                     #24,#37
              09c2 1427  ld   $27,y       3112  ld(hi('note#13'),Y)             #25,#38 midi#13 lives in the same page
              09c3 e11d  jmp  y,[$1d]     3113  jmp(Y,[vTmp])                   #26,#39
              09c4 0200  nop              3114  nop()                           #27,#40
                                          3115
              09c5 0200  nop              3116  trampoline()
              09c6 0200  nop
              09c7 0200  nop
              * 54 times
              09fb fe00  bra  ac          ;+-----------------------------------+
              09fc fcfd  bra  $09fd       ;|                                   |
              09fd 1418  ld   $18,y       ;| Trampoline for page $0900 lookups |
              09fe e006  jmp  y,$06       ;|                                   |
              09ff c218  st   [$18]       ;+-----------------------------------+
                                          3117
                                          3118  #-----------------------------------------------------------------------
                                          3119  #
                                          3120  #  $0a00 ROM page 10: Inversion table
                                          3121  #
                                          3122  #-----------------------------------------------------------------------
                                          3123
                                          3124  align(0x100, size=0x100)
                                          3125  label('invTable')
                                          3126
                                          3127  # Unit 64, table offset 16 (=1/4), value offset 1: (x+16)*(y+1) == 64*64 - e
                                          3128  for i in range(251):
invTable:     0a00 00ff  ld   $ff         3129    ld(4096//(i+16)-1)
              0a01 00ef  ld   $ef
              0a02 00e2  ld   $e2
              0a03 00d6  ld   $d6
              0a04 00cb  ld   $cb
              0a05 00c2  ld   $c2
              0a06 00b9  ld   $b9
              0a07 00b1  ld   $b1
              0a08 00a9  ld   $a9
              0a09 00a2  ld   $a2
              0a0a 009c  ld   $9c
              0a0b 0096  ld   $96
              0a0c 0091  ld   $91
              0a0d 008c  ld   $8c
              0a0e 0087  ld   $87
              0a0f 0083  ld   $83
              0a10 007f  ld   $7f
              0a11 007b  ld   $7b
              0a12 0077  ld   $77
              0a13 0074  ld   $74
              0a14 0070  ld   $70
              0a15 006d  ld   $6d
              0a16 006a  ld   $6a
              0a17 0068  ld   $68
              0a18 0065  ld   $65
              0a19 0062  ld   $62
              0a1a 0060  ld   $60
              0a1b 005e  ld   $5e
              0a1c 005c  ld   $5c
              0a1d 005a  ld   $5a
              0a1e 0058  ld   $58
              0a1f 0056  ld   $56
              0a20 0054  ld   $54
              0a21 0052  ld   $52
              0a22 0050  ld   $50
              0a23 004f  ld   $4f
              0a24 004d  ld   $4d
              0a25 004c  ld   $4c
              0a26 004a  ld   $4a
              0a27 0049  ld   $49
              0a28 0048  ld   $48
              0a29 0046  ld   $46
              0a2a 0045  ld   $45
              0a2b 0044  ld   $44
              0a2c 0043  ld   $43
              0a2d 0042  ld   $42
              0a2e 0041  ld   $41
              0a2f 0040  ld   $40
              0a30 003f  ld   $3f
              0a31 003e  ld   $3e
              0a32 003d  ld   $3d
              0a33 003c  ld   $3c
              0a34 003b  ld   $3b
              0a35 003a  ld   $3a
              0a36 0039  ld   $39
              0a37 0038  ld   $38
              0a38 0037  ld   $37
              0a39 0037  ld   $37
              0a3a 0036  ld   $36
              0a3b 0035  ld   $35
              0a3c 0034  ld   $34
              0a3d 0034  ld   $34
              0a3e 0033  ld   $33
              0a3f 0032  ld   $32
              0a40 0032  ld   $32
              0a41 0031  ld   $31
              0a42 0030  ld   $30
              0a43 0030  ld   $30
              0a44 002f  ld   $2f
              0a45 002f  ld   $2f
              0a46 002e  ld   $2e
              0a47 002e  ld   $2e
              0a48 002d  ld   $2d
              0a49 002d  ld   $2d
              0a4a 002c  ld   $2c
              0a4b 002c  ld   $2c
              0a4c 002b  ld   $2b
              0a4d 002b  ld   $2b
              0a4e 002a  ld   $2a
              0a4f 002a  ld   $2a
              0a50 0029  ld   $29
              0a51 0029  ld   $29
              0a52 0028  ld   $28
              0a53 0028  ld   $28
              0a54 0027  ld   $27
              0a55 0027  ld   $27
              0a56 0027  ld   $27
              0a57 0026  ld   $26
              0a58 0026  ld   $26
              0a59 0026  ld   $26
              0a5a 0025  ld   $25
              0a5b 0025  ld   $25
              0a5c 0024  ld   $24
              0a5d 0024  ld   $24
              0a5e 0024  ld   $24
              0a5f 0023  ld   $23
              0a60 0023  ld   $23
              0a61 0023  ld   $23
              0a62 0022  ld   $22
              0a63 0022  ld   $22
              0a64 0022  ld   $22
              0a65 0022  ld   $22
              0a66 0021  ld   $21
              0a67 0021  ld   $21
              0a68 0021  ld   $21
              0a69 0020  ld   $20
              0a6a 0020  ld   $20
              0a6b 0020  ld   $20
              0a6c 0020  ld   $20
              0a6d 001f  ld   $1f
              0a6e 001f  ld   $1f
              0a6f 001f  ld   $1f
              0a70 001f  ld   $1f
              0a71 001e  ld   $1e
              0a72 001e  ld   $1e
              0a73 001e  ld   $1e
              0a74 001e  ld   $1e
              0a75 001d  ld   $1d
              0a76 001d  ld   $1d
              0a77 001d  ld   $1d
              0a78 001d  ld   $1d
              0a79 001c  ld   $1c
              0a7a 001c  ld   $1c
              0a7b 001c  ld   $1c
              * 5 times
              0a7e 001b  ld   $1b
              0a7f 001b  ld   $1b
              0a80 001b  ld   $1b
              * 5 times
              0a83 001a  ld   $1a
              0a84 001a  ld   $1a
              0a85 001a  ld   $1a
              * 5 times
              0a88 0019  ld   $19
              0a89 0019  ld   $19
              0a8a 0019  ld   $19
              * 6 times
              0a8e 0018  ld   $18
              0a8f 0018  ld   $18
              0a90 0018  ld   $18
              * 6 times
              0a94 0017  ld   $17
              0a95 0017  ld   $17
              0a96 0017  ld   $17
              * 7 times
              0a9b 0016  ld   $16
              0a9c 0016  ld   $16
              0a9d 0016  ld   $16
              * 8 times
              0aa3 0015  ld   $15
              0aa4 0015  ld   $15
              0aa5 0015  ld   $15
              * 8 times
              0aab 0014  ld   $14
              0aac 0014  ld   $14
              0aad 0014  ld   $14
              * 9 times
              0ab4 0013  ld   $13
              0ab5 0013  ld   $13
              0ab6 0013  ld   $13
              * 9 times
              0abd 0012  ld   $12
              0abe 0012  ld   $12
              0abf 0012  ld   $12
              * 11 times
              0ac8 0011  ld   $11
              0ac9 0011  ld   $11
              0aca 0011  ld   $11
              * 12 times
              0ad4 0010  ld   $10
              0ad5 0010  ld   $10
              0ad6 0010  ld   $10
              * 13 times
              0ae1 000f  ld   $0f
              0ae2 000f  ld   $0f
              0ae3 000f  ld   $0f
              * 16 times
              0af1 000e  ld   $0e
              0af2 000e  ld   $0e
              0af3 000e  ld   $0e
              * 10 times
                                          3130
                                          3131  trampoline()
              0afb fe00  bra  ac          ;+-----------------------------------+
              0afc fcfd  bra  $0afd       ;|                                   |
              0afd 1418  ld   $18,y       ;| Trampoline for page $0a00 lookups |
              0afe e006  jmp  y,$06       ;|                                   |
              0aff c218  st   [$18]       ;+-----------------------------------+
                                          3132
                                          3133  #-----------------------------------------------------------------------
                                          3134  #
                                          3135  #  $0b00 ROM page 11: More SYS functions
                                          3136  #
                                          3137  #-----------------------------------------------------------------------
                                          3138
                                          3139  align(0x100, size=0x100)
                                          3140
                                          3141  #-----------------------------------------------------------------------
                                          3142  # Extension SYS_SetMode_v2_80
                                          3143  #-----------------------------------------------------------------------
                                          3144
                                          3145  # Set video mode to 0 to 3 black scanlines per pixel line.
                                          3146  #
                                          3147  # Mainly for making the MODE command available in Tiny BASIC, so that
                                          3148  # the user can experiment. It's adviced to refrain from using
                                          3149  # SYS_SetMode_v2_80 in regular applications. Video mode is a deeply
                                          3150  # personal preference, and the programmer shouldn't overrule the user
                                          3151  # in that choice. The Gigatron philisophy is that the end user has
                                          3152  # the final say on what happens on the system, not the application,
                                          3153  # even if that implies a degraded performance. This doesn't mean that
                                          3154  # all applications must work well in all video modes: mode 1 is still
                                          3155  # the default. If an application really doesn't work at all in that
                                          3156  # mode, it's acceptable to change mode once after loading.
                                          3157  #
                                          3158  # There's no "SYS_GetMode" function.
                                          3159  #
                                          3160  # Variables:
                                          3161  #       vAC bit 0:1     Mode:
                                          3162  #                         0      "ABCD" -> Full mode (slowest)
                                          3163  #                         1      "ABC-" -> Default mode after reset
                                          3164  #                         2      "A-C-" -> at67's mode
                                          3165  #                         3      "A---" -> HGM's mode
                                          3166  #       vAC bit 2:15    Ignored bits and should be 0
                                          3167  #
                                          3168  # Special values (ROM v4):
                                          3169  #       vAC = 1975      Zombie mode (no video signals, no input,
                                          3170  #                        no blinkenlights).
                                          3171  #       vAC = -1        Leave zombie mode and restore previous mode.
                                          3172
                                          3173  # Actual duration is <80 cycles, but keep some room for future extensions
                                          3174  label('SYS_SetMode_v2_80')
SYS_SetMode_v2_80:
              0b00 140b  ld   $0b,y       3175  ld(hi('sys_SetMode'),Y)         #15
              0b01 e054  jmp  y,$54       3176  jmp(Y,'sys_SetMode')            #16
              0b02 011e  ld   [$1e]       3177  ld([vReturn])                   #17
                                          3178
                                          3179  #-----------------------------------------------------------------------
                                          3180  # Extension SYS_SetMemory_v2_54
                                          3181  #-----------------------------------------------------------------------
                                          3182
                                          3183  # SYS function for setting 1..256 bytes
                                          3184  #
                                          3185  # sysArgs[0]   Copy count (in, changed)
                                          3186  # sysArgs[1]   Copy value (in)
                                          3187  # sysArgs[2:3] Destination address (in, changed)
                                          3188  #
                                          3189  # Sets up to 8 bytes per invocation before restarting itself through vCPU.
                                          3190  # Doesn't wrap around page boundary. Can run 3 times per 148-cycle time slice.
                                          3191  # All combined that gives a 300% speedup over ROMv4 and before.
                                          3192
                                          3193  label('SYS_SetMemory_v2_54')
SYS_SetMemory_v2_54:
              0b03 0124  ld   [$24]       3194  ld([sysArgs+0])                 #15
                                          3195  bra('sys_SetMemory#18')         #16
              0b04 fc18  bra  sys_SetMemory#18
              0b05 1126  ld   [$26],x     3196  ld([sysArgs+2],X)               #17
                                          3197
                                          3198  #-----------------------------------------------------------------------
                                          3199  # Extension SYS_SendSerial1_v3_80
                                          3200  #-----------------------------------------------------------------------
                                          3201
                                          3202  # SYS function for sending data over serial controller port using
                                          3203  # pulse width modulation of the vertical sync signal.
                                          3204  #
                                          3205  # Variables:
                                          3206  #       sysArgs[0:1]    Source address               (in, changed)
                                          3207  #       sysArgs[2]      Start bit mask (typically 1) (in, changed)
                                          3208  #       sysArgs[3]      Number of send frames X      (in, changed)
                                          3209  #
                                          3210  # The sending will abort if input data is detected on the serial port.
                                          3211  # Returns 0 in case of all bits sent, or <>0 in case of abort
                                          3212  #
                                          3213  # This modulates the next upcoming X vertical pulses with the supplied
                                          3214  # data. A zero becomes a 7 line vPulse, a one will be 9 lines.
                                          3215  # After that, the vPulse width falls back to 8 lines (idle).
                                          3216
                                          3217  label('SYS_SendSerial1_v3_80')
SYS_SendSerial1_v3_80:
              0b06 0109  ld   [$09]       3218  ld([videoY])                    #15
                                          3219  bra('sys_SendSerial1')          #16
              0b07 fc83  bra  sys_SendSerial1
              0b08 60b3  xora $b3         3220  xora(videoYline0)               #17 First line of vertical blank
                                          3221
                                          3222  #-----------------------------------------------------------------------
                                          3223  # Extension SYS_ExpanderControl_v4_40
                                          3224  #-----------------------------------------------------------------------
                                          3225
                                          3226  # Sets the I/O and RAM expander's control register
                                          3227  #
                                          3228  # Variables:
                                          3229  #       vAC bit 2       Device enable /SS0
                                          3230  #           bit 3       Device enable /SS1
                                          3231  #           bit 4       Device enable /SS2
                                          3232  #           bit 5       Device enable /SS3
                                          3233  #           bit 6       Banking B0
                                          3234  #           bit 7       Banking B1
                                          3235  #           bit 15      Data out MOSI
                                          3236  #       sysArgs[7]      Cache for control state (written to)
                                          3237  #
                                          3238  # Intended for prototyping, and probably too low-level for most applications
                                          3239  # Still there's a safeguard: it's not possible to disable RAM using this
                                          3240
                                          3241  label('SYS_ExpanderControl_v4_40')
SYS_ExpanderControl_v4_40:
              0b09 140d  ld   $0d,y       3242  ld(hi('sys_ExpanderControl'),Y) #15
              0b0a e000  jmp  y,$00       3243  jmp(Y,'sys_ExpanderControl')    #16
              0b0b 000c  ld   $0c         3244  ld(0b00001100)                  #17
                                          3245  #    ^^^^^^^^
                                          3246  #    |||||||`-- SCLK
                                          3247  #    ||||||`--- Not connected
                                          3248  #    |||||`---- /SS0
                                          3249  #    ||||`----- /SS1
                                          3250  #    |||`------ /SS2
                                          3251  #    ||`------- /SS3
                                          3252  #    |`-------- B0
                                          3253  #    `--------- B1
                                          3254
                                          3255  #-----------------------------------------------------------------------
                                          3256  # Extension SYS_Run6502_v4_80
                                          3257  #-----------------------------------------------------------------------
                                          3258
                                          3259  # Transfer control to v6502
                                          3260  #
                                          3261  # Calling 6502 code from vCPU goes (only) through this SYS function.
                                          3262  # Directly modifying the vCpuSelect variable is unreliable. The
                                          3263  # control transfer is immediate, without waiting for the current
                                          3264  # time slice to end or first returning to vCPU.
                                          3265  #
                                          3266  # vCPU code and v6502 code can interoperate without much hassle:
                                          3267  # - The v6502 program counter is vLR, and v6502 doesn't touch vPC
                                          3268  # - Returning to vCPU is with the BRK instruction
                                          3269  # - BRK doesn't dump process state on the stack
                                          3270  # - vCPU can save/restore the vLR with PUSH/POP
                                          3271  # - Stacks are shared, vAC is shared
                                          3272  # - vAC can indicate what the v6502 code wants. vAC+1 will be cleared
                                          3273  # - Alternative is to leave a word in sysArgs[6:7] (v6502 X and Y registers)
                                          3274  # - Another way is to set vPC before BRK, and vCPU will continue there(+2)
                                          3275  #
                                          3276  # Calling v6502 code from vCPU looks like this:
                                          3277  #       LDWI  SYS_Run6502_v4_80
                                          3278  #       STW   sysFn
                                          3279  #       LDWI  $6502_start_address
                                          3280  #       STW   vLR
                                          3281  #       SYS   80
                                          3282  #
                                          3283  # Variables:
                                          3284  #       vAC             Accumulator
                                          3285  #       vLR             Program Counter
                                          3286  #       vSP             Stack Pointer (+1)
                                          3287  #       sysArgs[6]      Index Register X
                                          3288  #       sysArgs[7]      Index Register Y
                                          3289  # For info:
                                          3290  #       sysArgs[0:1]    Address Register, free to clobber
                                          3291  #       sysArgs[2]      Instruction Register, free to clobber
                                          3292  #       sysArgs[3:5]    Flags, don't touch
                                          3293  #
                                          3294  # Implementation details::
                                          3295  #
                                          3296  #  The time to reserve for this transition is the maximum time
                                          3297  #  between NEXT and v6502_check. This is
                                          3298  #       SYS call duration + 2*v6502_maxTicks + (v6502_overhead - vCPU_overhead)
                                          3299  #     = 22 + 38 + (11 - 9) = 62 cycles.
                                          3300  #  So reserving 80 cycles is future proof. This isn't overhead, as it includes
                                          3301  #  the fetching of the first 6502 opcode and its operands..
                                          3302  #
                                          3303  #                      0            10                 28=0         9
                                          3304  #    ---+----+---------+------------+------------------+-----------+---
                                          3305  # video | nop| runVcpu |   ENTER    | At least one ins |   EXIT    | video
                                          3306  #    ---+----+---------+------------+------------------+-----------+---
                                          3307  #        sync  prelude  ENTER-to-ins    ins-to-NEXT     NEXT-to-video
                                          3308  #       |<-->|
                                          3309  #        0/1 |<------->|
                                          3310  #                 5    |<----------------------------->|
                                          3311  #          runVCpu_overhead           28               |<--------->|
                                          3312  #                                 2*maxTicks                 9
                                          3313  #                                                      vCPU_overhead
                                          3314  #
                                          3315  #                      0                21                    38=0       11
                                          3316  #    ---+----+---------+----------------+--------------------+-----------+---
                                          3317  # video | nop| runVcpu |   v6502_ENTER  | At least one fetch |v6502_exitB| video
                                          3318  #    ---+----+---------+----------------+--------------------+-----------+---
                                          3319  #        sync  prelude   enter-to-fetch     fetch-to-check    check-to-video
                                          3320  #       |<-->|
                                          3321  #        0/1 |<------->|
                                          3322  #                 5    |<----------------------------------->|
                                          3323  #          runVcpu_overhead           38                     |<--------->|
                                          3324  #                              2*v6520_maxTicks                    11
                                          3325  #                                                            v6502_overhead
                                          3326
                                          3327  label('SYS_Run6502_v4_80')
SYS_Run6502_v4_80:
              0b0c 140d  ld   $0d,y       3328  ld(hi('sys_v6502'),Y)           #15
              0b0d e08b  jmp  y,$8b       3329  jmp(Y,'sys_v6502')              #16
              0b0e 000d  ld   $0d         3330  ld(hi('v6502_ENTER'))           #17 Activate v6502
                                          3331
                                          3332  #-----------------------------------------------------------------------
                                          3333  # Extension SYS_ResetWaveforms_v4_50
                                          3334  #-----------------------------------------------------------------------
                                          3335
                                          3336  # soundTable[4x+0] = sawtooth, to be modified into metallic/noise
                                          3337  # soundTable[4x+1] = pulse
                                          3338  # soundTable[4x+2] = triangle
                                          3339  # soundTable[4x+3] = sawtooth, also useful to right shift 2 bits
                                          3340
                                          3341  label('SYS_ResetWaveforms_v4_50')
SYS_ResetWaveforms_v4_50:
              0b0f 1412  ld   $12,y       3342  ld(hi('sys_ResetWaveforms'),Y)  #15 Initial setup of waveforms. [vAC+0]=i
              0b10 e0b2  jmp  y,$b2       3343  jmp(Y,'sys_ResetWaveforms')     #16
              0b11 1407  ld   $07,y       3344  ld(soundTable>>8,Y)             #17
                                          3345
                                          3346  #-----------------------------------------------------------------------
                                          3347  # Extension SYS_ShuffleNoise_v4_46
                                          3348  #-----------------------------------------------------------------------
                                          3349
                                          3350  # Use simple 6-bits variation of RC4 to permutate waveform 0 in soundTable
                                          3351
                                          3352  label('SYS_ShuffleNoise_v4_46')
SYS_ShuffleNoise_v4_46:
              0b12 1412  ld   $12,y       3353  ld(hi('sys_ShuffleNoise'),Y)    #15 Shuffle soundTable[4i+0]. [vAC+0]=4j, [vAC+1]=4i
              0b13 e0d3  jmp  y,$d3       3354  jmp(Y,'sys_ShuffleNoise')       #16
              0b14 1407  ld   $07,y       3355  ld(soundTable>>8,Y)             #17
                                          3356
                                          3357  #-----------------------------------------------------------------------
                                          3358  # Extension SYS_SpiExchangeBytes_v4_134
                                          3359  #-----------------------------------------------------------------------
                                          3360
                                          3361  # Send AND receive 1..256 bytes over SPI interface
                                          3362
                                          3363  # Variables:
                                          3364  #       sysArgs[0]      Page index start, for both send/receive (in, changed)
                                          3365  #       sysArgs[1]      Memory page for send data (in)
                                          3366  #       sysArgs[2]      Page index stop (in)
                                          3367  #       sysArgs[3]      Memory page for receive data (in)
                                          3368  #       sysArgs[4]      Scratch (changed)
                                          3369
                                          3370  label('SYS_SpiExchangeBytes_v4_134')
SYS_SpiExchangeBytes_v4_134:
              0b15 140d  ld   $0d,y       3371  ld(hi('sys_SpiExchangeBytes'),Y)#15
              0b16 e015  jmp  y,$15       3372  jmp(Y,'sys_SpiExchangeBytes')   #16
              0b17 1401  ld   $01,y       3373  ld(hi(ctrlBits),Y)              #17 Control state as saved by SYS_ExpanderControl
                                          3374
                                          3375
                                          3376  #-----------------------------------------------------------------------
                                          3377  #  SYS Implementations
                                          3378  #-----------------------------------------------------------------------
                                          3379
                                          3380  # SYS_SetMemory_54 implementation
                                          3381  label('sys_SetMemory#18')
sys_SetMemory#18:
              0b18 1527  ld   [$27],y     3382  ld([sysArgs+3],Y)               #18
              0b19 f83c  ble  .sysSb#21   3383  ble('.sysSb#21')                #19 Enter fast lane if >=128 or at 0 (-> 256)
              0b1a a008  suba $08         3384  suba(8)                         #20
              0b1b f43e  bge  .sysSb#23   3385  bge('.sysSb#23')                #21 Or when >=8
              0b1c c224  st   [$24]       3386  st([sysArgs+0])                 #22
              0b1d 2004  anda $04         3387  anda(4)                         #23
              0b1e f025  beq  .sysSb#26   3388  beq('.sysSb#26')                #24
              0b1f 0125  ld   [$25]       3389  ld([sysArgs+1])                 #25 Set 4 pixels
              0b20 de00  st   [y,x++]     3390  st([Y,Xpp])                     #26
              0b21 de00  st   [y,x++]     3391  st([Y,Xpp])                     #27
              0b22 de00  st   [y,x++]     3392  st([Y,Xpp])                     #28
              0b23 fc28  bra  .sysSb#31   3393  bra('.sysSb#31')                #29
              0b24 de00  st   [y,x++]     3394  st([Y,Xpp])                     #30
                                          3395  label('.sysSb#26')
.sysSb#26:    0b25 0001  ld   $01         3396  wait(31-26)                     #26
              0b26 ec26  bne  $0b26
              0b27 a001  suba $01
                                          3397  label('.sysSb#31')
.sysSb#31:    0b28 0124  ld   [$24]       3398  ld([sysArgs+0])                 #31
              0b29 2002  anda $02         3399  anda(2)                         #32
              0b2a f02f  beq  .sysSb#35   3400  beq('.sysSb#35')                #33
              0b2b 0125  ld   [$25]       3401  ld([sysArgs+1])                 #34 Set 2 pixels
              0b2c de00  st   [y,x++]     3402  st([Y,Xpp])                     #35
              0b2d fc32  bra  .sysSb#38   3403  bra('.sysSb#38')                #36
              0b2e de00  st   [y,x++]     3404  st([Y,Xpp])                     #37
                                          3405  label('.sysSb#35')
.sysSb#35:    0b2f 0200  nop              3406  wait(38-35)                     #35
              0b30 0200  nop
              0b31 0200  nop
                                          3407  label('.sysSb#38')
.sysSb#38:    0b32 0124  ld   [$24]       3408  ld([sysArgs+0])                 #38
              0b33 2001  anda $01         3409  anda(1)                         #39
              0b34 f037  beq  $0b37       3410  beq(pc()+3)                     #40
              0b35 fc38  bra  $0b38       3411  bra(pc()+3)                     #41
              0b36 0125  ld   [$25]       3412  ld([sysArgs+1])                 #42 Set 1 pixel
              0b37 0d00  ld   [y,x]       3413  ld([Y,X])                       #42(!) No change
              0b38 ce00  st   [y,x]       3414  st([Y,X])                       #43
              0b39 1403  ld   $03,y       3415  ld(hi('NEXTY'),Y)               #44 Return
              0b3a e000  jmp  y,$00       3416  jmp(Y,'NEXTY')                  #45 All done
              0b3b 00e8  ld   $e8         3417  ld(-48/2)                       #46
                                          3418  label('.sysSb#21')
.sysSb#21:    0b3c 0200  nop              3419  nop()                           #21
              0b3d c224  st   [$24]       3420  st([sysArgs+0])                 #22
                                          3421  label('.sysSb#23')
.sysSb#23:    0b3e 0125  ld   [$25]       3422  ld([sysArgs+1])                 #23 Set 8 pixels
              0b3f de00  st   [y,x++]     3423  st([Y,Xpp])                     #24
              0b40 de00  st   [y,x++]     3424  st([Y,Xpp])                     #25
              0b41 de00  st   [y,x++]     3425  st([Y,Xpp])                     #26
              0b42 de00  st   [y,x++]     3426  st([Y,Xpp])                     #27
              0b43 de00  st   [y,x++]     3427  st([Y,Xpp])                     #28
              0b44 de00  st   [y,x++]     3428  st([Y,Xpp])                     #29
              0b45 de00  st   [y,x++]     3429  st([Y,Xpp])                     #30
              0b46 de00  st   [y,x++]     3430  st([Y,Xpp])                     #31
              0b47 0126  ld   [$26]       3431  ld([sysArgs+2])                 #32 Advance write pointer
              0b48 8008  adda $08         3432  adda(8)                         #33
              0b49 c226  st   [$26]       3433  st([sysArgs+2])                 #34
              0b4a 0124  ld   [$24]       3434  ld([sysArgs+0])                 #35
              0b4b f04e  beq  $0b4e       3435  beq(pc()+3)                     #36
              0b4c fc4f  bra  $0b4f       3436  bra(pc()+3)                     #37
              0b4d 00fe  ld   $fe         3437  ld(-2)                          #38 Self-restart when more to do
              0b4e 0000  ld   $00         3438  ld(0)                           #38(!)
              0b4f 8116  adda [$16]       3439  adda([vPC])                     #39
              0b50 c216  st   [$16]       3440  st([vPC])                       #40
              0b51 1403  ld   $03,y       3441  ld(hi('REENTER'),Y)             #41
              0b52 e0cb  jmp  y,$cb       3442  jmp(Y,'REENTER')                #42
              0b53 00e9  ld   $e9         3443  ld(-46/2)                       #43
                                          3444
                                          3445  # SYS_SetMode_80 implementation
                                          3446  label('sys_SetMode')
sys_SetMode:  0b54 ec57  bne  $0b57       3447  bne(pc()+3)                     #18
              0b55 fc57  bra  $0b57       3448  bra(pc()+2)                     #19
              0b56 0003  ld   $03         3449  ld('startVideo')                #20 First enable video if disabled
              0b57 c21e  st   [$1e]       3450  st([vReturn])                   #20,21
              0b58 0119  ld   [$19]       3451  ld([vAC+1])                     #22
              0b59 f063  beq  .sysSm#25   3452  beq('.sysSm#25')                #23
              0b5a 1403  ld   $03,y       3453  ld(hi('REENTER'),Y)             #24
              0b5b 6118  xora [$18]       3454  xora([vAC])                     #25
              0b5c 60b0  xora $b0         3455  xora((1975>>8)^(1975&255))      #26 Poor man\'s 1975 detection
              0b5d ec60  bne  $0b60       3456  bne(pc()+3)                     #27
              0b5e fc61  bra  $0b61       3457  bra(pc()+3)                     #28
                                          3458  assert videoZ == 0x0100
              0b5f c21e  st   [$1e]       3459  st([vReturn])                   #29 DISABLE video/audio/serial/etc
              0b60 0200  nop              3460  nop()                           #29(!) Ignore and return
              0b61 e0cb  jmp  y,$cb       3461  jmp(Y,'REENTER')                #30
              0b62 00ef  ld   $ef         3462  ld(-34/2)                       #31
                                          3463  label('.sysSm#25')
.sysSm#25:    0b63 0118  ld   [$18]       3464  ld([vAC])                       #25 Mode 0,1,2,3
              0b64 2003  anda $03         3465  anda(3)                         #26
              0b65 8068  adda $68         3466  adda('.sysSm#30')               #27
              0b66 fe00  bra  ac          3467  bra(AC)                         #28
              0b67 fc6c  bra  .sysSm#31   3468  bra('.sysSm#31')                #29
                                          3469  label('.sysSm#30')
.sysSm#30:    0b68 000a  ld   $0a         3470  ld('pixels')                    #30 videoB lines
              0b69 000a  ld   $0a         3471  ld('pixels')                    #30
              0b6a 00f6  ld   $f6         3472  ld('nopixels')                  #30
              0b6b 00f6  ld   $f6         3473  ld('nopixels')                  #30
                                          3474  label('.sysSm#31')
.sysSm#31:    0b6c c20a  st   [$0a]       3475  st([videoModeB])                #31
              0b6d 0118  ld   [$18]       3476  ld([vAC])                       #32
              0b6e 2003  anda $03         3477  anda(3)                         #33
              0b6f 8072  adda $72         3478  adda('.sysSm#37')               #34
              0b70 fe00  bra  ac          3479  bra(AC)                         #35
              0b71 fc76  bra  .sysSm#38   3480  bra('.sysSm#38')                #36
                                          3481  label('.sysSm#37')
.sysSm#37:    0b72 000a  ld   $0a         3482  ld('pixels')                    #37 videoC lines
              0b73 000a  ld   $0a         3483  ld('pixels')                    #37
              0b74 000a  ld   $0a         3484  ld('pixels')                    #37
              0b75 00f6  ld   $f6         3485  ld('nopixels')                  #37
                                          3486  label('.sysSm#38')
.sysSm#38:    0b76 c20b  st   [$0b]       3487  st([videoModeC])                #38
              0b77 0118  ld   [$18]       3488  ld([vAC])                       #39
              0b78 2003  anda $03         3489  anda(3)                         #40
              0b79 807c  adda $7c         3490  adda('.sysSm#44')               #41
              0b7a fe00  bra  ac          3491  bra(AC)                         #42
              0b7b fc80  bra  .sysSm#45   3492  bra('.sysSm#45')                #43
                                          3493  label('.sysSm#44')
.sysSm#44:    0b7c 000a  ld   $0a         3494  ld('pixels')                    #44 videoD lines
              0b7d 00f6  ld   $f6         3495  ld('nopixels')                  #44
              0b7e 00f6  ld   $f6         3496  ld('nopixels')                  #44
              0b7f 00f6  ld   $f6         3497  ld('nopixels')                  #44
                                          3498  label('.sysSm#45')
.sysSm#45:    0b80 c20c  st   [$0c]       3499  st([videoModeD])                #45
              0b81 e0cb  jmp  y,$cb       3500  jmp(Y,'REENTER')                #46
              0b82 00e7  ld   $e7         3501  ld(-50/2)                       #47
                                          3502
                                          3503  # SYS_SendSerial1_v3_80 implementation
                                          3504  label('sys_SendSerial1')
sys_SendSerial1:
              0b83 f08a  beq  .sysSs#20   3505  beq('.sysSs#20')                #18
              0b84 1124  ld   [$24],x     3506  ld([sysArgs+0],X)               #19
              0b85 0116  ld   [$16]       3507  ld([vPC])                       #20 Wait for vBlank
              0b86 a002  suba $02         3508  suba(2)                         #21
              0b87 1403  ld   $03,y       3509  ld(hi('REENTER_28'),Y)          #22
              0b88 e0ca  jmp  y,$ca       3510  jmp(Y,'REENTER_28')             #23
              0b89 c216  st   [$16]       3511  st([vPC])                       #24
                                          3512  label('.sysSs#20')
.sysSs#20:    0b8a 1525  ld   [$25],y     3513  ld([sysArgs+1],Y)               #20 Synchronized with vBlank
              0b8b 0d00  ld   [y,x]       3514  ld([Y,X])                       #21 Copy next bit
              0b8c 2126  anda [$26]       3515  anda([sysArgs+2])               #22
              0b8d ec90  bne  $0b90       3516  bne(pc()+3)                     #23
              0b8e fc91  bra  $0b91       3517  bra(pc()+3)                     #24
              0b8f 000e  ld   $0e         3518  ld(7*2)                         #25
              0b90 0012  ld   $12         3519  ld(9*2)                         #25
              0b91 c20d  st   [$0d]       3520  st([videoPulse])                #26
              0b92 0126  ld   [$26]       3521  ld([sysArgs+2])                 #27 Rotate input bit
              0b93 8200  adda ac          3522  adda(AC)                        #28
              0b94 ec97  bne  $0b97       3523  bne(pc()+3)                     #29
              0b95 fc97  bra  $0b97       3524  bra(pc()+2)                     #30
              0b96 0001  ld   $01         3525  ld(1)                           #31
              0b97 c226  st   [$26]       3526  st([sysArgs+2])                 #31,32 (must be idempotent)
              0b98 2001  anda $01         3527  anda(1)                         #33 Optionally increment pointer
              0b99 8124  adda [$24]       3528  adda([sysArgs+0])               #34
              0b9a d224  st   [$24],x     3529  st([sysArgs+0],X)               #35
              0b9b 0127  ld   [$27]       3530  ld([sysArgs+3])                 #36 Frame counter
              0b9c a001  suba $01         3531  suba(1)                         #37
              0b9d f0ac  beq  .sysSs#40   3532  beq('.sysSs#40')                #38
              0b9e 1403  ld   $03,y       3533  ld(hi('REENTER'),Y)             #39
              0b9f c227  st   [$27]       3534  st([sysArgs+3])                 #40
              0ba0 010f  ld   [$0f]       3535  ld([serialRaw])                 #41 Test for anything being sent back
              0ba1 60ff  xora $ff         3536  xora(255)                       #42
              0ba2 f0a7  beq  .sysSs#45   3537  beq('.sysSs#45')                #43
              0ba3 c218  st   [$18]       3538  st([vAC])                       #44 Abort after key press with non-zero error
              0ba4 c219  st   [$19]       3539  st([vAC+1])                     #45
              0ba5 e0cb  jmp  y,$cb       3540  jmp(Y,'REENTER')                #46
              0ba6 00e7  ld   $e7         3541  ld(-50/2)                       #47
                                          3542  label('.sysSs#45')
.sysSs#45:    0ba7 0116  ld   [$16]       3543  ld([vPC])                       #45 Continue sending bits
              0ba8 a002  suba $02         3544  suba(2)                         #46
              0ba9 c216  st   [$16]       3545  st([vPC])                       #47
              0baa e0cb  jmp  y,$cb       3546  jmp(Y,'REENTER')                #48
              0bab 00e6  ld   $e6         3547  ld(-52/2)                       #49
                                          3548  label('.sysSs#40')
.sysSs#40:    0bac c218  st   [$18]       3549  st([vAC])                       #40 Stop sending bits, no error
              0bad c219  st   [$19]       3550  st([vAC+1])                     #41
              0bae e0cb  jmp  y,$cb       3551  jmp(Y,'REENTER')                #42
              0baf 00e9  ld   $e9         3552  ld(-46/2)                       #43
                                          3553
                                          3554
                                          3555  #-----------------------------------------------------------------------
                                          3556  #  vCPU Implementations
                                          3557  #-----------------------------------------------------------------------
                                          3558
                                          3559  # LDWI implementation
                                          3560  label('ldwi#13')
ldwi#13:      0bb0 c218  st   [$18]       3561  st([vAC])                       #13 Operand
              0bb1 de00  st   [y,x++]     3562  st([Y,Xpp])                     #14 Just X++
              0bb2 0d00  ld   [y,x]       3563  ld([Y,X])                       #15 Fetch second operand
              0bb3 c219  st   [$19]       3564  st([vAC+1])                     #16
              0bb4 0116  ld   [$16]       3565  ld([vPC])                       #17 Advance vPC one more
              0bb5 8001  adda $01         3566  adda(1)                         #18
              0bb6 c216  st   [$16]       3567  st([vPC])                       #19
              0bb7 1403  ld   $03,y       3568  ld(hi('NEXTY'),Y)               #20
              0bb8 e000  jmp  y,$00       3569  jmp(Y,'NEXTY')                  #21
              0bb9 00f4  ld   $f4         3570  ld(-24/2)                       #22
                                          3571
                                          3572  # POP implementation
                                          3573  label('pop#13')
pop#13:       0bba 1504  ld   [$04],y     3574  ld([vSPH],Y)                    #13 vSP.hi
              0bbb 111c  ld   [$1c],x     3575  ld([vSP],X)                     #14
              0bbc 0d00  ld   [y,x]       3576  ld([Y,X])                       #15
              0bbd de00  st   [y,x++]     3577  st([Y,Xpp])                     #16
              0bbe c21a  st   [$1a]       3578  st([vLR])                       #17
              0bbf 0d00  ld   [y,x]       3579  ld([Y,X])                       #18
              0bc0 c21b  st   [$1b]       3580  st([vLR+1])                     #19
              0bc1 011c  ld   [$1c]       3581  ld([vSP])                       #20
              0bc2 8002  adda $02         3582  adda(2)                         #21
              0bc3 c21c  st   [$1c]       3583  st([vSP])                       #22
              0bc4 0116  ld   [$16]       3584  ld([vPC])                       #23
              0bc5 a001  suba $01         3585  suba(1)                         #24
              0bc6 c216  st   [$16]       3586  st([vPC])                       #25
              0bc7 1403  ld   $03,y       3587  ld(hi('NEXTY'),Y)               #26
              0bc8 e000  jmp  y,$00       3588  jmp(Y,'NEXTY')                  #27
              0bc9 00f1  ld   $f1         3589  ld(-30/2)                       #28
                                          3590
                                          3591  # PUSH implementation
                                          3592  label('push#13')
push#13:      0bca 1504  ld   [$04],y     3593  ld([vSPH],Y)                    #13 vSP.hi
              0bcb 011c  ld   [$1c]       3594  ld([vSP])                       #14
              0bcc a002  suba $02         3595  suba(2)                         #15
              0bcd d21c  st   [$1c],x     3596  st([vSP],X)                     #16
              0bce 011a  ld   [$1a]       3597  ld([vLR])                       #17
              0bcf de00  st   [y,x++]     3598  st([Y,Xpp])                     #18
              0bd0 011b  ld   [$1b]       3599  ld([vLR+1])                     #19
              0bd1 ce00  st   [y,x]       3600  st([Y,X])                       #20
              0bd2 0116  ld   [$16]       3601  ld([vPC])                       #21
              0bd3 a001  suba $01         3602  suba(1)                         #22
              0bd4 c216  st   [$16]       3603  st([vPC])                       #23
              0bd5 1403  ld   $03,y       3604  ld(hi('NEXTY'),Y)               #24
              0bd6 e000  jmp  y,$00       3605  jmp(Y,'NEXTY')                  #25
              0bd7 00f2  ld   $f2         3606  ld(-28/2)                       #26
                                          3607
                                          3608  # -------------------------------------------------------------
                                          3609  # vCPU instructions for comparisons between two 16-bit operands
                                          3610  # -------------------------------------------------------------
                                          3611  #
                                          3612  # vCPU's conditional branching (BCC) always compares vAC against 0,
                                          3613  # treating vAC as a two's complement 16-bit number. When we need to
                                          3614  # compare two arbitrary numnbers we normally first take their difference
                                          3615  # with SUBW.  However, when this difference is too large, the subtraction
                                          3616  # overflows and we get the wrong outcome. To get it right over the
                                          3617  # entire range, an elaborate sequence is needed. TinyBASIC uses this
                                          3618  # blurp for its relational operators. (It compares stack variable $02
                                          3619  # with zero page variable $3a.)
                                          3620  #
                                          3621  #       0461  ee 02            LDLW  $02
                                          3622  #       0463  fc 3a            XORW  $3a
                                          3623  #       0465  35 53 6a         BGE   $046c
                                          3624  #       0468  ee 02            LDLW  $02
                                          3625  #       046a  90 6e            BRA   $0470
                                          3626  #       046c  ee 02            LDLW  $02
                                          3627  #       046e  b8 3a            SUBW  $3a
                                          3628  #       0470  35 56 73         BLE   $0475
                                          3629  #
                                          3630  # The CMPHS and CMPHU instructions were introduced to simplify this.
                                          3631  # They inspect both operands to see if there is an overflow risk. If
                                          3632  # so, they modify vAC such that their difference gets smaller, while
                                          3633  # preserving the relation between the two operands. After that, the
                                          3634  # SUBW instruction can't overflow and we achieve a correct comparison.
                                          3635  # Use CMPHS for signed comparisons and CMPHU for unsigned. With these,
                                          3636  # the sequence above becomes:
                                          3637  #
                                          3638  #       0461  ee 02            LDLW  $02
                                          3639  #       0463  1f 3b            CMPHS $3b        Note: high byte of operand
                                          3640  #       0465  b8 3a            SUBW  $3a
                                          3641  #       0467  35 56 73         BLE   $0475
                                          3642  #
                                          3643  # CMPHS/CMPHU don't make much sense other than in combination with
                                          3644  # SUBW. These modify vACH, if needed, as given in the following table:
                                          3645  #
                                          3646  #       vACH  varH  |     vACH
                                          3647  #       bit7  bit7  | CMPHS  CMPHU
                                          3648  #       ---------------------------
                                          3649  #         0     0   |  vACH   vACH      no change needed
                                          3650  #         0     1   | varH+1 varH-1     narrowing the range
                                          3651  #         1     0   | varH-1 varH+1     narrowing the range
                                          3652  #         1     1   |  vACH   vACH      no change needed
                                          3653  #       ---------------------------
                                          3654
                                          3655  # CMPHS implementation
                                          3656  label('cmphs#13')
cmphs#13:     0bd8 1200  ld   ac,x        3657  ld(AC,X)                        #13
              0bd9 0500  ld   [x]         3658  ld([X])                         #14
              0bda 6119  xora [$19]       3659  xora([vAC+1])                   #15
              0bdb f4ee  bge  .cmphu#18   3660  bpl('.cmphu#18')                #16 Skip if same sign
              0bdc 0119  ld   [$19]       3661  ld([vAC+1])                     #17
              0bdd e8e0  blt  $0be0       3662  bmi(pc()+3)                     #18
              0bde fce1  bra  .cmphs#21   3663  bra(pc()+3)                     #19
                                          3664  label('.cmphs#20')
.cmphs#20:    0bdf 0001  ld   $01         3665  ld(+1)                          #20    vAC < variable
              0be0 00ff  ld   $ff         3666  ld(-1)                          #20(!) vAC > variable
                                          3667  label('.cmphs#21')
.cmphs#21:    0be1 8500  adda [x]         3668  adda([X])                       #21
              0be2 c219  st   [$19]       3669  st([vAC+1])                     #22
              0be3 1403  ld   $03,y       3670  ld(hi('REENTER'),Y)             #23
              0be4 e0cb  jmp  y,$cb       3671  jmp(Y,'REENTER')                #24
              0be5 00f2  ld   $f2         3672  ld(-28/2)                       #25
                                          3673
                                          3674  # CMPHU implementation
                                          3675  label('cmphu#13')
cmphu#13:     0be6 1200  ld   ac,x        3676  ld(AC,X)                        #13
              0be7 0500  ld   [x]         3677  ld([X])                         #14
              0be8 6119  xora [$19]       3678  xora([vAC+1])                   #15
              0be9 f4ee  bge  .cmphu#18   3679  bpl('.cmphu#18')                #16 Skip if same sign
              0bea 0119  ld   [$19]       3680  ld([vAC+1])                     #17
              0beb e8df  blt  .cmphs#20   3681  bmi('.cmphs#20')                #18
              0bec fce1  bra  .cmphs#21   3682  bra('.cmphs#21')                #19
              0bed 00ff  ld   $ff         3683  ld(-1)                          #20    vAC > variable
                                          3684
                                          3685  # No-operation for CMPHS/CMPHU when high bits are equal
                                          3686  label('.cmphu#18')
.cmphu#18:    0bee 1403  ld   $03,y       3687  ld(hi('NEXTY'),Y)               #18
              0bef e000  jmp  y,$00       3688  jmp(Y,'NEXTY')                  #19
              0bf0 00f5  ld   $f5         3689  ld(-22/2)                       #20
                                          3690
                                          3691
                                          3692  #-----------------------------------------------------------------------
                                          3693  #
                                          3694  #  $0c00 ROM page 12: More SYS functions (sprites)
                                          3695  #
                                          3696  #       Page 1: vertical blank interval
                                          3697  #       Page 2: visible scanlines
                                          3698  #
                                          3699  #-----------------------------------------------------------------------
                                          3700
              0bf1 0200  nop              3701  align(0x100, size=0x100)
              0bf2 0200  nop
              0bf3 0200  nop
              * 15 times
                                          3702
                                          3703  #-----------------------------------------------------------------------
                                          3704  # Extension SYS_Sprite6_v3_64
                                          3705  # Extension SYS_Sprite6x_v3_64
                                          3706  # Extension SYS_Sprite6y_v3_64
                                          3707  # Extension SYS_Sprite6xy_v3_64
                                          3708  #-----------------------------------------------------------------------
                                          3709
                                          3710  # Blit sprite in screen memory
                                          3711  #
                                          3712  # Variables
                                          3713  #       vAC             Destination address in screen
                                          3714  #       sysArgs[0:1]    Source address of 6xY pixels (colors 0..63) terminated
                                          3715  #                       by negative byte value N (typically N = -Y)
                                          3716  #       sysArgs[2:7]    Scratch (user as copy buffer)
                                          3717  #
                                          3718  # This SYS function draws a sprite of 6 pixels wide and Y pixels high.
                                          3719  # The pixel data is read sequentually from RAM, in horizontal chunks
                                          3720  # of 6 pixels at a time, and then written to the screen through the
                                          3721  # destination pointer (each chunk underneath the previous), thus
                                          3722  # drawing a 6xY stripe. Pixel values should be non-negative. The first
                                          3723  # negative byte N after a chunk signals the end of the sprite data.
                                          3724  # So the sprite's height Y is determined by the source data and is
                                          3725  # therefore flexible. This negative byte value, typically N == -Y,
                                          3726  # is then used to adjust the destination pointer's high byte, to make
                                          3727  # it easier to draw sprites wider than 6 pixels: just repeat the SYS
                                          3728  # call for as many 6-pixel wide stripes you need. All arguments are
                                          3729  # already left in place to facilitate this. After one call, the source
                                          3730  # pointer will point past that source data, effectively:
                                          3731  #       src += Y * 6 + 1
                                          3732  # The destination pointer will have been adjusted as:
                                          3733  #       dst += (Y + N) * 256 + 6
                                          3734  # (With arithmetic wrapping around on the same memory page)
                                          3735  #
                                          3736  # Y is only limited by source memory, not by CPU cycles. The
                                          3737  # implementation is such that the SYS function self-repeats, each
                                          3738  # time drawing the next 6-pixel chunk. It can typically draw 12
                                          3739  # pixels per scanline this way.
                                          3740
                                          3741  label('SYS_Sprite6_v3_64')
                                          3742
SYS_Sprite6_v3_64:
              0c00 1124  ld   [$24],x     3743  ld([sysArgs+0],X)               #15 Pixel data source address
              0c01 1525  ld   [$25],y     3744  ld([sysArgs+1],Y)               #16
              0c02 0d00  ld   [y,x]       3745  ld([Y,X])                       #17 Next pixel or stop
              0c03 f411  bge  .sysDpx0    3746  bpl('.sysDpx0')                 #18
              0c04 de00  st   [y,x++]     3747  st([Y,Xpp])                     #19 Just X++
                                          3748
              0c05 8119  adda [$19]       3749  adda([vAC+1])                   #20 Adjust dst for convenience
              0c06 c219  st   [$19]       3750  st([vAC+1])                     #21
              0c07 0118  ld   [$18]       3751  ld([vAC])                       #22
              0c08 8006  adda $06         3752  adda(6)                         #23
              0c09 c218  st   [$18]       3753  st([vAC])                       #24
              0c0a 0124  ld   [$24]       3754  ld([sysArgs+0])                 #25 Adjust src for convenience
              0c0b 8001  adda $01         3755  adda(1)                         #26
              0c0c c224  st   [$24]       3756  st([sysArgs+0])                 #27
              0c0d 0200  nop              3757  nop()                           #28
              0c0e 1403  ld   $03,y       3758  ld(hi('REENTER'),Y)             #29 Normal exit (no self-repeat)
              0c0f e0cb  jmp  y,$cb       3759  jmp(Y,'REENTER')                #30
              0c10 00ef  ld   $ef         3760  ld(-34/2)                       #31
                                          3761
                                          3762  label('.sysDpx0')
.sysDpx0:     0c11 c226  st   [$26]       3763  st([sysArgs+2])                 #20 Gobble 6 pixels into buffer
              0c12 0d00  ld   [y,x]       3764  ld([Y,X])                       #21
              0c13 de00  st   [y,x++]     3765  st([Y,Xpp])                     #22 Just X++
              0c14 c227  st   [$27]       3766  st([sysArgs+3])                 #23
              0c15 0d00  ld   [y,x]       3767  ld([Y,X])                       #24
              0c16 de00  st   [y,x++]     3768  st([Y,Xpp])                     #25 Just X++
              0c17 c228  st   [$28]       3769  st([sysArgs+4])                 #26
              0c18 0d00  ld   [y,x]       3770  ld([Y,X])                       #27
              0c19 de00  st   [y,x++]     3771  st([Y,Xpp])                     #28 Just X++
              0c1a c229  st   [$29]       3772  st([sysArgs+5])                 #29
              0c1b 0d00  ld   [y,x]       3773  ld([Y,X])                       #30
              0c1c de00  st   [y,x++]     3774  st([Y,Xpp])                     #31 Just X++
              0c1d c22a  st   [$2a]       3775  st([sysArgs+6])                 #32
              0c1e 0d00  ld   [y,x]       3776  ld([Y,X])                       #33
              0c1f de00  st   [y,x++]     3777  st([Y,Xpp])                     #34 Just X++
              0c20 c22b  st   [$2b]       3778  st([sysArgs+7])                 #35
                                          3779
              0c21 1118  ld   [$18],x     3780  ld([vAC],X)                     #36 Screen memory destination address
              0c22 1519  ld   [$19],y     3781  ld([vAC+1],Y)                   #37
              0c23 0126  ld   [$26]       3782  ld([sysArgs+2])                 #38 Write 6 pixels
              0c24 de00  st   [y,x++]     3783  st([Y,Xpp])                     #39
              0c25 0127  ld   [$27]       3784  ld([sysArgs+3])                 #40
              0c26 de00  st   [y,x++]     3785  st([Y,Xpp])                     #41
              0c27 0128  ld   [$28]       3786  ld([sysArgs+4])                 #42
              0c28 de00  st   [y,x++]     3787  st([Y,Xpp])                     #43
              0c29 0129  ld   [$29]       3788  ld([sysArgs+5])                 #44
              0c2a de00  st   [y,x++]     3789  st([Y,Xpp])                     #45
              0c2b 012a  ld   [$2a]       3790  ld([sysArgs+6])                 #46
              0c2c de00  st   [y,x++]     3791  st([Y,Xpp])                     #47
              0c2d 012b  ld   [$2b]       3792  ld([sysArgs+7])                 #48
              0c2e de00  st   [y,x++]     3793  st([Y,Xpp])                     #49
                                          3794
              0c2f 0124  ld   [$24]       3795  ld([sysArgs+0])                 #50 src += 6
              0c30 8006  adda $06         3796  adda(6)                         #51
              0c31 c224  st   [$24]       3797  st([sysArgs+0])                 #52
              0c32 0119  ld   [$19]       3798  ld([vAC+1])                     #53 dst += 256
              0c33 8001  adda $01         3799  adda(1)                         #54
              0c34 c219  st   [$19]       3800  st([vAC+1])                     #55
                                          3801
              0c35 0116  ld   [$16]       3802  ld([vPC])                       #56 Self-repeating SYS call
              0c36 a002  suba $02         3803  suba(2)                         #57
              0c37 c216  st   [$16]       3804  st([vPC])                       #58
              0c38 1403  ld   $03,y       3805  ld(hi('REENTER'),Y)             #59
              0c39 e0cb  jmp  y,$cb       3806  jmp(Y,'REENTER')                #60
              0c3a 00e0  ld   $e0         3807  ld(-64/2)                       #61
                                          3808
              0c3b 0200  nop              3809  align(64)
              0c3c 0200  nop
              0c3d 0200  nop
              * 5 times
                                          3810  label('SYS_Sprite6x_v3_64')
                                          3811
SYS_Sprite6x_v3_64:
              0c40 1124  ld   [$24],x     3812  ld([sysArgs+0],X)               #15 Pixel data source address
              0c41 1525  ld   [$25],y     3813  ld([sysArgs+1],Y)               #16
              0c42 0d00  ld   [y,x]       3814  ld([Y,X])                       #17 Next pixel or stop
              0c43 f451  bge  .sysDpx1    3815  bpl('.sysDpx1')                 #18
              0c44 de00  st   [y,x++]     3816  st([Y,Xpp])                     #19 Just X++
                                          3817
              0c45 8119  adda [$19]       3818  adda([vAC+1])                   #20 Adjust dst for convenience
              0c46 c219  st   [$19]       3819  st([vAC+1])                     #21
              0c47 0118  ld   [$18]       3820  ld([vAC])                       #22
              0c48 a006  suba $06         3821  suba(6)                         #23
              0c49 c218  st   [$18]       3822  st([vAC])                       #24
              0c4a 0124  ld   [$24]       3823  ld([sysArgs+0])                 #25 Adjust src for convenience
              0c4b 8001  adda $01         3824  adda(1)                         #26
              0c4c c224  st   [$24]       3825  st([sysArgs+0])                 #27
              0c4d 0200  nop              3826  nop()                           #28
              0c4e 1403  ld   $03,y       3827  ld(hi('REENTER'),Y)             #29 Normal exit (no self-repeat)
              0c4f e0cb  jmp  y,$cb       3828  jmp(Y,'REENTER')                #30
              0c50 00ef  ld   $ef         3829  ld(-34/2)                       #31
                                          3830
                                          3831  label('.sysDpx1')
.sysDpx1:     0c51 c22b  st   [$2b]       3832  st([sysArgs+7])                 #20 Gobble 6 pixels into buffer (backwards)
              0c52 0d00  ld   [y,x]       3833  ld([Y,X])                       #21
              0c53 de00  st   [y,x++]     3834  st([Y,Xpp])                     #22 Just X++
              0c54 c22a  st   [$2a]       3835  st([sysArgs+6])                 #23
              0c55 0d00  ld   [y,x]       3836  ld([Y,X])                       #24
              0c56 de00  st   [y,x++]     3837  st([Y,Xpp])                     #25 Just X++
              0c57 c229  st   [$29]       3838  st([sysArgs+5])                 #26
              0c58 0d00  ld   [y,x]       3839  ld([Y,X])                       #27
              0c59 de00  st   [y,x++]     3840  st([Y,Xpp])                     #28 Just X++
              0c5a c228  st   [$28]       3841  st([sysArgs+4])                 #29
              0c5b 0d00  ld   [y,x]       3842  ld([Y,X])                       #30
              0c5c de00  st   [y,x++]     3843  st([Y,Xpp])                     #31 Just X++
              0c5d c227  st   [$27]       3844  st([sysArgs+3])                 #32
              0c5e 0d00  ld   [y,x]       3845  ld([Y,X])                       #33
              0c5f de00  st   [y,x++]     3846  st([Y,Xpp])                     #34 Just X++
                                          3847
              0c60 1118  ld   [$18],x     3848  ld([vAC],X)                     #35 Screen memory destination address
              0c61 1519  ld   [$19],y     3849  ld([vAC+1],Y)                   #36
              0c62 de00  st   [y,x++]     3850  st([Y,Xpp])                     #37 Write 6 pixels
              0c63 0127  ld   [$27]       3851  ld([sysArgs+3])                 #38
              0c64 de00  st   [y,x++]     3852  st([Y,Xpp])                     #39
              0c65 0128  ld   [$28]       3853  ld([sysArgs+4])                 #40
              0c66 de00  st   [y,x++]     3854  st([Y,Xpp])                     #41
              0c67 0129  ld   [$29]       3855  ld([sysArgs+5])                 #42
              0c68 de00  st   [y,x++]     3856  st([Y,Xpp])                     #43
              0c69 012a  ld   [$2a]       3857  ld([sysArgs+6])                 #44
              0c6a de00  st   [y,x++]     3858  st([Y,Xpp])                     #45
              0c6b 012b  ld   [$2b]       3859  ld([sysArgs+7])                 #46
              0c6c de00  st   [y,x++]     3860  st([Y,Xpp])                     #47
                                          3861
              0c6d 0124  ld   [$24]       3862  ld([sysArgs+0])                 #48 src += 6
              0c6e 8006  adda $06         3863  adda(6)                         #49
              0c6f c224  st   [$24]       3864  st([sysArgs+0])                 #50
              0c70 0119  ld   [$19]       3865  ld([vAC+1])                     #51 dst += 256
              0c71 8001  adda $01         3866  adda(1)                         #52
              0c72 c219  st   [$19]       3867  st([vAC+1])                     #53
                                          3868
              0c73 0116  ld   [$16]       3869  ld([vPC])                       #54 Self-repeating SYS call
              0c74 a002  suba $02         3870  suba(2)                         #55
              0c75 c216  st   [$16]       3871  st([vPC])                       #56
              0c76 1403  ld   $03,y       3872  ld(hi('REENTER'),Y)             #57
              0c77 e0cb  jmp  y,$cb       3873  jmp(Y,'REENTER')                #58
              0c78 00e1  ld   $e1         3874  ld(-62/2)                       #59
                                          3875
              0c79 0200  nop              3876  align(64)
              0c7a 0200  nop
              0c7b 0200  nop
              * 7 times
                                          3877  label('SYS_Sprite6y_v3_64')
                                          3878
SYS_Sprite6y_v3_64:
              0c80 1124  ld   [$24],x     3879  ld([sysArgs+0],X)               #15 Pixel data source address
              0c81 1525  ld   [$25],y     3880  ld([sysArgs+1],Y)               #16
              0c82 0d00  ld   [y,x]       3881  ld([Y,X])                       #17 Next pixel or stop
              0c83 f493  bge  .sysDpx2    3882  bpl('.sysDpx2')                 #18
              0c84 de00  st   [y,x++]     3883  st([Y,Xpp])                     #19 Just X++
                                          3884
              0c85 60ff  xora $ff         3885  xora(255)                       #20 Adjust dst for convenience
              0c86 8001  adda $01         3886  adda(1)                         #21
              0c87 8119  adda [$19]       3887  adda([vAC+1])                   #22
              0c88 c219  st   [$19]       3888  st([vAC+1])                     #23
              0c89 0118  ld   [$18]       3889  ld([vAC])                       #24
              0c8a 8006  adda $06         3890  adda(6)                         #25
              0c8b c218  st   [$18]       3891  st([vAC])                       #26
              0c8c 0124  ld   [$24]       3892  ld([sysArgs+0])                 #27 Adjust src for convenience
              0c8d 8001  adda $01         3893  adda(1)                         #28
              0c8e c224  st   [$24]       3894  st([sysArgs+0])                 #29
              0c8f 0200  nop              3895  nop()                           #30
              0c90 1403  ld   $03,y       3896  ld(hi('REENTER'),Y)             #31 Normal exit (no self-repeat)
              0c91 e0cb  jmp  y,$cb       3897  jmp(Y,'REENTER')                #32
              0c92 00ee  ld   $ee         3898  ld(-36/2)                       #33
                                          3899
                                          3900  label('.sysDpx2')
.sysDpx2:     0c93 c226  st   [$26]       3901  st([sysArgs+2])                 #20 Gobble 6 pixels into buffer
              0c94 0d00  ld   [y,x]       3902  ld([Y,X])                       #21
              0c95 de00  st   [y,x++]     3903  st([Y,Xpp])                     #22 Just X++
              0c96 c227  st   [$27]       3904  st([sysArgs+3])                 #23
              0c97 0d00  ld   [y,x]       3905  ld([Y,X])                       #24
              0c98 de00  st   [y,x++]     3906  st([Y,Xpp])                     #25 Just X++
              0c99 c228  st   [$28]       3907  st([sysArgs+4])                 #26
              0c9a 0d00  ld   [y,x]       3908  ld([Y,X])                       #27
              0c9b de00  st   [y,x++]     3909  st([Y,Xpp])                     #28 Just X++
              0c9c c229  st   [$29]       3910  st([sysArgs+5])                 #29
              0c9d 0d00  ld   [y,x]       3911  ld([Y,X])                       #30
              0c9e de00  st   [y,x++]     3912  st([Y,Xpp])                     #31 Just X++
              0c9f c22a  st   [$2a]       3913  st([sysArgs+6])                 #32
              0ca0 0d00  ld   [y,x]       3914  ld([Y,X])                       #33
              0ca1 de00  st   [y,x++]     3915  st([Y,Xpp])                     #34 Just X++
              0ca2 c22b  st   [$2b]       3916  st([sysArgs+7])                 #35
                                          3917
              0ca3 1118  ld   [$18],x     3918  ld([vAC],X)                     #36 Screen memory destination address
              0ca4 1519  ld   [$19],y     3919  ld([vAC+1],Y)                   #37
              0ca5 0126  ld   [$26]       3920  ld([sysArgs+2])                 #38 Write 6 pixels
              0ca6 de00  st   [y,x++]     3921  st([Y,Xpp])                     #39
              0ca7 0127  ld   [$27]       3922  ld([sysArgs+3])                 #40
              0ca8 de00  st   [y,x++]     3923  st([Y,Xpp])                     #41
              0ca9 0128  ld   [$28]       3924  ld([sysArgs+4])                 #42
              0caa de00  st   [y,x++]     3925  st([Y,Xpp])                     #43
              0cab 0129  ld   [$29]       3926  ld([sysArgs+5])                 #44
              0cac de00  st   [y,x++]     3927  st([Y,Xpp])                     #45
              0cad 012a  ld   [$2a]       3928  ld([sysArgs+6])                 #46
              0cae de00  st   [y,x++]     3929  st([Y,Xpp])                     #47
              0caf 012b  ld   [$2b]       3930  ld([sysArgs+7])                 #48
              0cb0 de00  st   [y,x++]     3931  st([Y,Xpp])                     #49
                                          3932
              0cb1 0124  ld   [$24]       3933  ld([sysArgs+0])                 #50 src += 6
              0cb2 8006  adda $06         3934  adda(6)                         #51
              0cb3 c224  st   [$24]       3935  st([sysArgs+0])                 #52
              0cb4 0119  ld   [$19]       3936  ld([vAC+1])                     #53 dst -= 256
              0cb5 a001  suba $01         3937  suba(1)                         #54
              0cb6 c219  st   [$19]       3938  st([vAC+1])                     #55
                                          3939
              0cb7 0116  ld   [$16]       3940  ld([vPC])                       #56 Self-repeating SYS call
              0cb8 a002  suba $02         3941  suba(2)                         #57
              0cb9 c216  st   [$16]       3942  st([vPC])                       #58
              0cba 1403  ld   $03,y       3943  ld(hi('REENTER'),Y)             #59
              0cbb e0cb  jmp  y,$cb       3944  jmp(Y,'REENTER')                #60
              0cbc 00e0  ld   $e0         3945  ld(-64/2)                       #61
                                          3946
              0cbd 0200  nop              3947  align(64)
              0cbe 0200  nop
              0cbf 0200  nop
                                          3948  label('SYS_Sprite6xy_v3_64')
                                          3949
SYS_Sprite6xy_v3_64:
              0cc0 1124  ld   [$24],x     3950  ld([sysArgs+0],X)               #15 Pixel data source address
              0cc1 1525  ld   [$25],y     3951  ld([sysArgs+1],Y)               #16
              0cc2 0d00  ld   [y,x]       3952  ld([Y,X])                       #17 Next pixel or stop
              0cc3 f4d3  bge  .sysDpx3    3953  bpl('.sysDpx3')                 #18
              0cc4 de00  st   [y,x++]     3954  st([Y,Xpp])                     #19 Just X++
                                          3955
              0cc5 60ff  xora $ff         3956  xora(255)                       #20 Adjust dst for convenience
              0cc6 8001  adda $01         3957  adda(1)                         #21
              0cc7 8119  adda [$19]       3958  adda([vAC+1])                   #22
              0cc8 c219  st   [$19]       3959  st([vAC+1])                     #23
              0cc9 0118  ld   [$18]       3960  ld([vAC])                       #24
              0cca a006  suba $06         3961  suba(6)                         #25
              0ccb c218  st   [$18]       3962  st([vAC])                       #26
              0ccc 0124  ld   [$24]       3963  ld([sysArgs+0])                 #27 Adjust src for convenience
              0ccd 8001  adda $01         3964  adda(1)                         #28
              0cce c224  st   [$24]       3965  st([sysArgs+0])                 #29
              0ccf 0200  nop              3966  nop()                           #30
              0cd0 1403  ld   $03,y       3967  ld(hi('REENTER'),Y)             #31 Normal exit (no self-repeat)
              0cd1 e0cb  jmp  y,$cb       3968  jmp(Y,'REENTER')                #32
              0cd2 00ee  ld   $ee         3969  ld(-36/2)                       #33
                                          3970
                                          3971  label('.sysDpx3')
.sysDpx3:     0cd3 c22b  st   [$2b]       3972  st([sysArgs+7])                 #20 Gobble 6 pixels into buffer (backwards)
              0cd4 0d00  ld   [y,x]       3973  ld([Y,X])                       #21
              0cd5 de00  st   [y,x++]     3974  st([Y,Xpp])                     #22 Just X++
              0cd6 c22a  st   [$2a]       3975  st([sysArgs+6])                 #23
              0cd7 0d00  ld   [y,x]       3976  ld([Y,X])                       #24
              0cd8 de00  st   [y,x++]     3977  st([Y,Xpp])                     #25 Just X++
              0cd9 c229  st   [$29]       3978  st([sysArgs+5])                 #26
              0cda 0d00  ld   [y,x]       3979  ld([Y,X])                       #27
              0cdb de00  st   [y,x++]     3980  st([Y,Xpp])                     #28 Just X++
              0cdc c228  st   [$28]       3981  st([sysArgs+4])                 #29
              0cdd 0d00  ld   [y,x]       3982  ld([Y,X])                       #30
              0cde de00  st   [y,x++]     3983  st([Y,Xpp])                     #31 Just X++
              0cdf c227  st   [$27]       3984  st([sysArgs+3])                 #32
              0ce0 0d00  ld   [y,x]       3985  ld([Y,X])                       #33
              0ce1 de00  st   [y,x++]     3986  st([Y,Xpp])                     #34 Just X++
                                          3987
              0ce2 1118  ld   [$18],x     3988  ld([vAC],X)                     #35 Screen memory destination address
              0ce3 1519  ld   [$19],y     3989  ld([vAC+1],Y)                   #36
              0ce4 de00  st   [y,x++]     3990  st([Y,Xpp])                     #37 Write 6 pixels
              0ce5 0127  ld   [$27]       3991  ld([sysArgs+3])                 #38
              0ce6 de00  st   [y,x++]     3992  st([Y,Xpp])                     #39
              0ce7 0128  ld   [$28]       3993  ld([sysArgs+4])                 #40
              0ce8 de00  st   [y,x++]     3994  st([Y,Xpp])                     #41
              0ce9 0129  ld   [$29]       3995  ld([sysArgs+5])                 #42
              0cea de00  st   [y,x++]     3996  st([Y,Xpp])                     #43
              0ceb 012a  ld   [$2a]       3997  ld([sysArgs+6])                 #44
              0cec de00  st   [y,x++]     3998  st([Y,Xpp])                     #45
              0ced 012b  ld   [$2b]       3999  ld([sysArgs+7])                 #46
              0cee de00  st   [y,x++]     4000  st([Y,Xpp])                     #47
                                          4001
              0cef 0124  ld   [$24]       4002  ld([sysArgs+0])                 #48 src += 6
              0cf0 8006  adda $06         4003  adda(6)                         #49
              0cf1 c224  st   [$24]       4004  st([sysArgs+0])                 #50
              0cf2 0119  ld   [$19]       4005  ld([vAC+1])                     #51 dst -= 256
              0cf3 a001  suba $01         4006  suba(1)                         #52
              0cf4 c219  st   [$19]       4007  st([vAC+1])                     #53
                                          4008
              0cf5 0116  ld   [$16]       4009  ld([vPC])                       #54 Self-repeating SYS call
              0cf6 a002  suba $02         4010  suba(2)                         #55
              0cf7 c216  st   [$16]       4011  st([vPC])                       #56
              0cf8 1403  ld   $03,y       4012  ld(hi('REENTER'),Y)             #57
              0cf9 e0cb  jmp  y,$cb       4013  jmp(Y,'REENTER')                #58
              0cfa 00e1  ld   $e1         4014  ld(-62/2)                       #59
                                          4015
                                          4016  #-----------------------------------------------------------------------
                                          4017
              0cfb 0200  nop              4018  align(0x100)
              0cfc 0200  nop
              0cfd 0200  nop
              * 5 times
                                          4019
                                          4020  label('sys_ExpanderControl')
                                          4021
sys_ExpanderControl:
              0d00 1401  ld   $01,y       4022  ld(hi(ctrlBits),Y)                  #18
              0d01 2118  anda [$18]       4023  anda([vAC])                         #19 check for special ctrl code space
              0d02 f009  beq  sysEx#22    4024  beq('sysEx#22')                     #20
              0d03 0118  ld   [$18]       4025  ld([vAC])                           #21 load low byte of ctrl code in delay slot
              0d04 20fc  anda $fc         4026  anda(0xfc)                          #22 sanitize normal ctrl code
              0d05 caf8  st   [y,$f8]     4027  st([Y,ctrlBits])                    #23 store in ctrlBits
              0d06 c21d  st   [$1d]       4028  st([vTmp])                          #24 store in vTmp
              0d07 fc0e  bra  sysEx#27    4029  bra('sysEx#27')                     #25 jump to issuing normal ctrl code
              0d08 1519  ld   [$19],y     4030  ld([vAC+1],Y)                       #26 load high byte of ctrl code in delay slot
                                          4031  label('sysEx#22')
sysEx#22:     0d09 30fc  anda $fc,x       4032  anda(0xfc,X)                        #22 * special ctrl code
              0d0a 09f8  ld   [y,$f8]     4033  ld([Y,ctrlBits])                    #23 get previous normal code from ctrlBits
              0d0b c21d  st   [$1d]       4034  st([vTmp])                          #24 save it in vTmp
              0d0c 1519  ld   [$19],y     4035  ld([vAC+1],Y)                       #25 load high byte of ctrl code
              0d0d cd00  ctrl y,x         4036  ctrl(Y,X)                           #26 issue special ctrl code
                                          4037  label('sysEx#27')
sysEx#27:     0d0e 011d  ld   [$1d]       4038  ld([vTmp])                          #27 load saved normal ctrl code
              0d0f 30fc  anda $fc,x       4039  anda(0xfc,X)                        #28 sanitize ctrlBits
              0d10 cd00  ctrl y,x         4040  ctrl(Y,X)                           #29 issue normal ctrl code
              0d11 011d  ld   [$1d]       4041  ld([vTmp])                          #30 always load something after ctrl
              0d12 1403  ld   $03,y       4042  ld(hi('REENTER'),Y)                 #31
              0d13 e0cb  jmp  y,$cb       4043  jmp(Y,'REENTER')                    #32
              0d14 00ee  ld   $ee         4044  ld(-36/2)                           #33
                                          4045
                                          4046  #-----------------------------------------------------------------------
                                          4047
                                          4048  label('sys_SpiExchangeBytes')
                                          4049
sys_SpiExchangeBytes:
              0d15 09f8  ld   [y,$f8]     4050  ld([Y,ctrlBits])                #18
              0d16 c228  st   [$28]       4051  st([sysArgs+4])                 #19
                                          4052
              0d17 1124  ld   [$24],x     4053  ld([sysArgs+0],X)               #20 Fetch byte to send
              0d18 1525  ld   [$25],y     4054  ld([sysArgs+1],Y)               #21
              0d19 0d00  ld   [y,x]       4055  ld([Y,X])                       #22
                                          4056
                                          4057  for i in range(8):
                                          4058    st([vTmp],Y);C('Bit %d'%(7-i))#23+i*12
              0d1a d61d  st   [$1d],y     ;Bit 7
              0d1b 1128  ld   [$28],x     4059    ld([sysArgs+4],X)             #24+i*12
              0d1c dd00  ctrl y,x++       4060    ctrl(Y,Xpp)                   #25+i*12 Set MOSI
              0d1d dd00  ctrl y,x++       4061    ctrl(Y,Xpp)                   #26+i*12 Raise SCLK, disable RAM!
              0d1e 0100  ld   [$00]       4062    ld([0])                       #27+i*12 Get MISO
              0d1f 200f  anda $0f         4063    anda(0b00001111)              #28+i*12 This is why R1 as pull-DOWN is simpler
              0d20 f023  beq  $0d23       4064    beq(pc()+3)                   #29+i*12
              0d21 fc23  bra  $0d23       4065    bra(pc()+2)                   #30+i*12
              0d22 0001  ld   $01         4066    ld(1)                         #31+i*12
              0d23 cd00  ctrl y,x         4067    ctrl(Y,X)                     #32+i*12,29+i*12 (Must be idempotent) Lower SCLK
              0d24 811d  adda [$1d]       4068    adda([vTmp])                  #33+i*12 Shift
              0d25 811d  adda [$1d]       4069    adda([vTmp])                  #34+i*12
              0d26 d61d  st   [$1d],y     ;Bit 6
              0d27 1128  ld   [$28],x
              0d28 dd00  ctrl y,x++
              0d29 dd00  ctrl y,x++
              0d2a 0100  ld   [$00]
              0d2b 200f  anda $0f
              0d2c f02f  beq  $0d2f
              0d2d fc2f  bra  $0d2f
              0d2e 0001  ld   $01
              0d2f cd00  ctrl y,x
              0d30 811d  adda [$1d]
              0d31 811d  adda [$1d]
              0d32 d61d  st   [$1d],y     ;Bit 5
              0d33 1128  ld   [$28],x
              0d34 dd00  ctrl y,x++
              0d35 dd00  ctrl y,x++
              0d36 0100  ld   [$00]
              0d37 200f  anda $0f
              0d38 f03b  beq  $0d3b
              0d39 fc3b  bra  $0d3b
              0d3a 0001  ld   $01
              0d3b cd00  ctrl y,x
              0d3c 811d  adda [$1d]
              0d3d 811d  adda [$1d]
              0d3e d61d  st   [$1d],y     ;Bit 4
              0d3f 1128  ld   [$28],x
              0d40 dd00  ctrl y,x++
              0d41 dd00  ctrl y,x++
              0d42 0100  ld   [$00]
              0d43 200f  anda $0f
              0d44 f047  beq  $0d47
              0d45 fc47  bra  $0d47
              0d46 0001  ld   $01
              0d47 cd00  ctrl y,x
              0d48 811d  adda [$1d]
              0d49 811d  adda [$1d]
              0d4a d61d  st   [$1d],y     ;Bit 3
              0d4b 1128  ld   [$28],x
              0d4c dd00  ctrl y,x++
              0d4d dd00  ctrl y,x++
              0d4e 0100  ld   [$00]
              0d4f 200f  anda $0f
              0d50 f053  beq  $0d53
              0d51 fc53  bra  $0d53
              0d52 0001  ld   $01
              0d53 cd00  ctrl y,x
              0d54 811d  adda [$1d]
              0d55 811d  adda [$1d]
              0d56 d61d  st   [$1d],y     ;Bit 2
              0d57 1128  ld   [$28],x
              0d58 dd00  ctrl y,x++
              0d59 dd00  ctrl y,x++
              0d5a 0100  ld   [$00]
              0d5b 200f  anda $0f
              0d5c f05f  beq  $0d5f
              0d5d fc5f  bra  $0d5f
              0d5e 0001  ld   $01
              0d5f cd00  ctrl y,x
              0d60 811d  adda [$1d]
              0d61 811d  adda [$1d]
              0d62 d61d  st   [$1d],y     ;Bit 1
              0d63 1128  ld   [$28],x
              0d64 dd00  ctrl y,x++
              0d65 dd00  ctrl y,x++
              0d66 0100  ld   [$00]
              0d67 200f  anda $0f
              0d68 f06b  beq  $0d6b
              0d69 fc6b  bra  $0d6b
              0d6a 0001  ld   $01
              0d6b cd00  ctrl y,x
              0d6c 811d  adda [$1d]
              0d6d 811d  adda [$1d]
              0d6e d61d  st   [$1d],y     ;Bit 0
              0d6f 1128  ld   [$28],x
              0d70 dd00  ctrl y,x++
              0d71 dd00  ctrl y,x++
              0d72 0100  ld   [$00]
              0d73 200f  anda $0f
              0d74 f077  beq  $0d77
              0d75 fc77  bra  $0d77
              0d76 0001  ld   $01
              0d77 cd00  ctrl y,x
              0d78 811d  adda [$1d]
              0d79 811d  adda [$1d]
                                          4070
              0d7a 1124  ld   [$24],x     4071  ld([sysArgs+0],X)               #119 Store received byte
              0d7b 1527  ld   [$27],y     4072  ld([sysArgs+3],Y)               #120
              0d7c ce00  st   [y,x]       4073  st([Y,X])                       #121
                                          4074
              0d7d 0124  ld   [$24]       4075  ld([sysArgs+0])                 #122 Advance pointer
              0d7e 8001  adda $01         4076  adda(1)                         #123
              0d7f c224  st   [$24]       4077  st([sysArgs+0])                 #124
                                          4078
              0d80 6126  xora [$26]       4079  xora([sysArgs+2])               #125 Reached end?
              0d81 f088  beq  .sysSpi#128 4080  beq('.sysSpi#128')              #126
                                          4081
              0d82 0116  ld   [$16]       4082  ld([vPC])                       #127 Self-repeating SYS call
              0d83 a002  suba $02         4083  suba(2)                         #128
              0d84 c216  st   [$16]       4084  st([vPC])                       #129
              0d85 1403  ld   $03,y       4085  ld(hi('NEXTY'),Y)               #130
              0d86 e000  jmp  y,$00       4086  jmp(Y,'NEXTY')                  #131
              0d87 00bd  ld   $bd         4087  ld(-134/2)                      #132
                                          4088
                                          4089  label('.sysSpi#128')
.sysSpi#128:  0d88 1403  ld   $03,y       4090  ld(hi('NEXTY'),Y)               #128 Continue program
              0d89 e000  jmp  y,$00       4091  jmp(Y,'NEXTY')                  #129
              0d8a 00be  ld   $be         4092  ld(-132/2)                      #130
                                          4093
                                          4094  #-----------------------------------------------------------------------
                                          4095
                                          4096  label('sys_v6502')
                                          4097
sys_v6502:    0d8b d602  st   [$02],y     4098  st([vCpuSelect],Y)              #18 Activate v6502
              0d8c 00f5  ld   $f5         4099  ld(-22/2)                       #19
              0d8d e0ff  jmp  y,$ff       4100  jmp(Y,'v6502_ENTER')            #20 Transfer control in the same time slice
              0d8e 8115  adda [$15]       4101  adda([vTicks])                  #21
                                          4102  assert (38 - 22)//2 >= v6502_adjust
                                          4103
                                          4104  #-----------------------------------------------------------------------
                                          4105  #       MOS 6502 emulator
                                          4106  #-----------------------------------------------------------------------
                                          4107
                                          4108  # Some quirks:
                                          4109  # - Stack in zero page instead of page 1
                                          4110  # - No interrupts
                                          4111  # - No decimal mode (may never be added). D flag is emulated but ignored.
                                          4112  # - BRK switches back to running 16-bits vCPU
                                          4113  # - Illegal opcodes map to BRK, but can read ghost operands before trapping
                                          4114  # - Illegal opcode $ff won't be trapped and cause havoc instead
                                          4115
                                          4116  # Big things TODO:
                                          4117  # XXX Tuning, put most frequent instructions in the primary page
                                          4118
                                          4119  label('v6502_ror')
                                          4120  assert v6502_Cflag == 1
v6502_ror:    0d8f 1525  ld   [$25],y     4121  ld([v6502_ADH],Y)               #12
              0d90 00fc  ld   $fc         4122  ld(-46//2+v6502_maxTicks)       #13 Is there enough time for the excess ticks?
              0d91 8115  adda [$15]       4123  adda([vTicks])                  #14
              0d92 e8a6  blt  .recheck17  4124  blt('.recheck17')               #15
              0d93 0127  ld   [$27]       4125  ld([v6502_P])                   #16 Transfer C to "bit 8"
              0d94 2001  anda $01         4126  anda(1)                         #17
              0d95 807f  adda $7f         4127  adda(127)                       #18
              0d96 2080  anda $80         4128  anda(128)                       #19
              0d97 c219  st   [$19]       4129  st([v6502_BI])                  #20 The real 6502 wouldn't use BI for this
              0d98 0127  ld   [$27]       4130  ld([v6502_P])                   #21 Transfer bit 0 to C
              0d99 20fe  anda $fe         4131  anda(~1)                        #22
              0d9a c227  st   [$27]       4132  st([v6502_P])                   #23
              0d9b 0d00  ld   [y,x]       4133  ld([Y,X])                       #24
              0d9c 2001  anda $01         4134  anda(1)                         #25
              0d9d 4127  ora  [$27]       4135  ora([v6502_P])                  #26
              0d9e c227  st   [$27]       4136  st([v6502_P])                   #27
              0d9f 00c0  ld   $c0         4137  ld('v6502_ror#38')              #28 Shift table lookup
              0da0 c21d  st   [$1d]       4138  st([vTmp])                      #29
              0da1 0d00  ld   [y,x]       4139  ld([Y,X])                       #30
              0da2 20fe  anda $fe         4140  anda(~1)                        #31
              0da3 1405  ld   $05,y       4141  ld(hi('shiftTable'),Y)          #32
              0da4 e200  jmp  y,ac        4142  jmp(Y,AC)                       #33
              0da5 fcff  bra  $ff         4143  bra(255)                        #34 bra shiftTable+255
                                          4144  label('.recheck17')
.recheck17:   0da6 140e  ld   $0e,y       4145  ld(hi('v6502_check'),Y)         #17 Go back to time check before dispatch
              0da7 e0f2  jmp  y,$f2       4146  jmp(Y,'v6502_check')            #18
              0da8 00f6  ld   $f6         4147  ld(-20/2)                       #19
                                          4148
                                          4149  label('v6502_lsr')
                                          4150  assert v6502_Cflag == 1
v6502_lsr:    0da9 1525  ld   [$25],y     4151  ld([v6502_ADH],Y)               #12
              0daa 0127  ld   [$27]       4152  ld([v6502_P])                   #13 Transfer bit 0 to C
              0dab 20fe  anda $fe         4153  anda(~1)                        #14
              0dac c227  st   [$27]       4154  st([v6502_P])                   #15
              0dad 0d00  ld   [y,x]       4155  ld([Y,X])                       #16
              0dae 2001  anda $01         4156  anda(1)                         #17
              0daf 4127  ora  [$27]       4157  ora([v6502_P])                  #18
              0db0 c227  st   [$27]       4158  st([v6502_P])                   #19
              0db1 00b9  ld   $b9         4159  ld('v6502_lsr#30')              #20 Shift table lookup
              0db2 c21d  st   [$1d]       4160  st([vTmp])                      #21
              0db3 0d00  ld   [y,x]       4161  ld([Y,X])                       #22
              0db4 20fe  anda $fe         4162  anda(~1)                        #23
              0db5 1405  ld   $05,y       4163  ld(hi('shiftTable'),Y)          #24
              0db6 e200  jmp  y,ac        4164  jmp(Y,AC)                       #25
              0db7 fcff  bra  $ff         4165  bra(255)                        #26 bra shiftTable+255
                                          4166
                                          4167  label('v6502_rol')
                                          4168  assert v6502_Cflag == 1
v6502_rol:    0db8 1525  ld   [$25],y     4169  ld([v6502_ADH],Y)               #12
              0db9 0d00  ld   [y,x]       4170  ld([Y,X])                       #13
              0dba 2080  anda $80         4171  anda(0x80)                      #14
              0dbb c21d  st   [$1d]       4172  st([v6502_Tmp])                 #15
              0dbc 0127  ld   [$27]       4173  ld([v6502_P])                   #16
              0dbd 2001  anda $01         4174  anda(1)                         #17
                                          4175  label('.rol#18')
.rol#18:      0dbe 8d00  adda [y,x]       4176  adda([Y,X])                     #18
              0dbf 8d00  adda [y,x]       4177  adda([Y,X])                     #19
              0dc0 ce00  st   [y,x]       4178  st([Y,X])                       #20
              0dc1 c228  st   [$28]       4179  st([v6502_Qz])                  #21 Z flag
              0dc2 c229  st   [$29]       4180  st([v6502_Qn])                  #22 N flag
              0dc3 0127  ld   [$27]       4181  ld([v6502_P])                   #23 C Flag
              0dc4 20fe  anda $fe         4182  anda(~1)                        #24
              0dc5 111d  ld   [$1d],x     4183  ld([v6502_Tmp],X)               #25
              0dc6 4500  ora  [x]         4184  ora([X])                        #26
              0dc7 c227  st   [$27]       4185  st([v6502_P])                   #27
              0dc8 140e  ld   $0e,y       4186  ld(hi('v6502_next'),Y)          #28
              0dc9 00f0  ld   $f0         4187  ld(-32/2)                       #29
              0dca e020  jmp  y,$20       4188  jmp(Y,'v6502_next')             #30
                                          4189  #nop()                          #31 Overlap
                                          4190  #
                                          4191  label('v6502_asl')
v6502_asl:    0dcb 1525  ld   [$25],y     4192  ld([v6502_ADH],Y)               #12,32
              0dcc 0d00  ld   [y,x]       4193  ld([Y,X])                       #13
              0dcd 2080  anda $80         4194  anda(0x80)                      #14
              0dce c21d  st   [$1d]       4195  st([v6502_Tmp])                 #15
              0dcf fcbe  bra  .rol#18     4196  bra('.rol#18')                  #16
              0dd0 0000  ld   $00         4197  ld(0)                           #17
                                          4198
                                          4199  label('v6502_jmp1')
v6502_jmp1:   0dd1 0200  nop              4200  nop()                           #12
              0dd2 0124  ld   [$24]       4201  ld([v6502_ADL])                 #13
              0dd3 c21a  st   [$1a]       4202  st([v6502_PCL])                 #14
              0dd4 0125  ld   [$25]       4203  ld([v6502_ADH])                 #15
              0dd5 c21b  st   [$1b]       4204  st([v6502_PCH])                 #16
              0dd6 140e  ld   $0e,y       4205  ld(hi('v6502_next'),Y)          #17
              0dd7 e020  jmp  y,$20       4206  jmp(Y,'v6502_next')             #18
              0dd8 00f6  ld   $f6         4207  ld(-20/2)                       #19
                                          4208
                                          4209  label('v6502_jmp2')
v6502_jmp2:   0dd9 0200  nop              4210  nop()                           #12
              0dda 1525  ld   [$25],y     4211  ld([v6502_ADH],Y)               #13
              0ddb 0d00  ld   [y,x]       4212  ld([Y,X])                       #14
              0ddc de00  st   [y,x++]     4213  st([Y,Xpp])                     #15 (Just X++) Wrap around: bug compatible with NMOS
              0ddd c21a  st   [$1a]       4214  st([v6502_PCL])                 #16
              0dde 0d00  ld   [y,x]       4215  ld([Y,X])                       #17
              0ddf c21b  st   [$1b]       4216  st([v6502_PCH])                 #18
              0de0 140e  ld   $0e,y       4217  ld(hi('v6502_next'),Y)          #19
              0de1 e020  jmp  y,$20       4218  jmp(Y,'v6502_next')             #20
              0de2 00f5  ld   $f5         4219  ld(-22/2)                       #21
                                          4220
                                          4221  label('v6502_pla')
v6502_pla:    0de3 011c  ld   [$1c]       4222  ld([v6502_S])                   #12
              0de4 1200  ld   ac,x        4223  ld(AC,X)                        #13
              0de5 8001  adda $01         4224  adda(1)                         #14
              0de6 c21c  st   [$1c]       4225  st([v6502_S])                   #15
              0de7 0500  ld   [x]         4226  ld([X])                         #16
              0de8 c218  st   [$18]       4227  st([v6502_A])                   #17
              0de9 c228  st   [$28]       4228  st([v6502_Qz])                  #18 Z flag
              0dea c229  st   [$29]       4229  st([v6502_Qn])                  #19 N flag
              0deb 140e  ld   $0e,y       4230  ld(hi('v6502_next'),Y)          #20
              0dec 00f4  ld   $f4         4231  ld(-24/2)                       #21
              0ded e020  jmp  y,$20       4232  jmp(Y,'v6502_next')             #22
                                          4233  #nop()                          #23 Overlap
                                          4234  #
                                          4235  label('v6502_pha')
v6502_pha:    0dee 140e  ld   $0e,y       4236  ld(hi('v6502_next'),Y)          #12,24
              0def 011c  ld   [$1c]       4237  ld([v6502_S])                   #13
              0df0 a001  suba $01         4238  suba(1)                         #14
              0df1 d21c  st   [$1c],x     4239  st([v6502_S],X)                 #15
              0df2 0118  ld   [$18]       4240  ld([v6502_A])                   #16
              0df3 c600  st   [x]         4241  st([X])                         #17
              0df4 e020  jmp  y,$20       4242  jmp(Y,'v6502_next')             #18
              0df5 00f6  ld   $f6         4243  ld(-20/2)                       #19
                                          4244
                                          4245  label('v6502_brk')
v6502_brk:    0df6 0002  ld   $02         4246  ld(hi('ENTER'))                 #12 Switch to vCPU
              0df7 c202  st   [$02]       4247  st([vCpuSelect])                #13
                                          4248  assert v6502_A == vAC
              0df8 0000  ld   $00         4249  ld(0)                           #14
              0df9 c219  st   [$19]       4250  st([vAC+1])                     #15
              0dfa 1403  ld   $03,y       4251  ld(hi('REENTER'),Y)             #16 Switch in the current time slice
              0dfb 00fa  ld   $fa         4252  ld(-22//2+v6502_adjust)         #17
              0dfc e0cb  jmp  y,$cb       4253  jmp(Y,'REENTER')                #18
              0dfd 0200  nop              4254  nop()                           #19
                                          4255
                                          4256  # All interpreter entry points must share the same page offset, because
                                          4257  # this offset is hard-coded as immediate operand in the video driver.
                                          4258  # The Gigatron's original vCPU's 'ENTER' label is already at $2ff, so we
                                          4259  # just use $dff for 'v6502_ENTER'. v6502 actually has two entry points.
                                          4260  # The other is 'v6502_RESUME' at $10ff. It is used for instructions
                                          4261  # that were fetched but not yet executed. Allowing the split gives finer
                                          4262  # granulariy, and hopefully more throughput for the simpler instructions.
                                          4263  # (There is no "overhead" for allowing instruction splitting, because
                                          4264  #  both emulation phases must administer [vTicks] anyway.)
                                          4265  while pc()&255 < 255:
              0dfe 0200  nop              4266    nop()
                                          4267  label('v6502_ENTER')
v6502_ENTER:  0dff fc22  bra  v6502_next2 4268  bra('v6502_next2')              #0 v6502 primary entry point
                                          4269  # --- Page boundary ---
              0e00 a005  suba $05         4270  suba(v6502_adjust)              #1,19 Adjust for vCPU/v6520 timing differences
                                          4271
                                          4272  #19 Addressing modes
                                          4273  (   'v6502_mode0'  ); bra('v6502_modeIZX'); bra('v6502_modeIMM'); bra('v6502_modeILL') # $00 xxx000xx
              0e01 fce0  bra  v6502_modeIZX
              0e02 fc42  bra  v6502_modeIMM
              0e03 fc58  bra  v6502_modeIMP
                                          4274  bra('v6502_modeZP');  bra('v6502_modeZP');  bra('v6502_modeZP');  bra('v6502_modeILL') # $04 xxx001xx
              0e04 fc5d  bra  v6502_modeZP
              0e05 fc5d  bra  v6502_modeZP
              0e06 fc5d  bra  v6502_modeZP
              0e07 fc58  bra  v6502_modeIMP
                                          4275  bra('v6502_modeIMP'); bra('v6502_modeIMM'); bra('v6502_modeACC'); bra('v6502_modeILL') # $08 xxx010xx
              0e08 fc58  bra  v6502_modeIMP
              0e09 fc42  bra  v6502_modeIMM
              0e0a fc52  bra  v6502_modeACC
              0e0b fc58  bra  v6502_modeIMP
                                          4276  bra('v6502_modeABS'); bra('v6502_modeABS'); bra('v6502_modeABS'); bra('v6502_modeILL') # $0c xxx011xx
              0e0c fc78  bra  v6502_modeABS
              0e0d fc78  bra  v6502_modeABS
              0e0e fc78  bra  v6502_modeABS
              0e0f fc58  bra  v6502_modeIMP
                                          4277  bra('v6502_modeREL'); bra('v6502_modeIZY'); bra('v6502_modeIMM'); bra('v6502_modeILL') # $10 xxx100xx
              0e10 fccf  bra  v6502_modeREL
              0e11 fcab  bra  v6502_modeIZY
              0e12 fc42  bra  v6502_modeIMM
              0e13 fc58  bra  v6502_modeIMP
                                          4278  bra('v6502_modeZPX'); bra('v6502_modeZPX'); bra('v6502_modeZPX'); bra('v6502_modeILL') # $14 xxx101xx
              0e14 fc5b  bra  v6502_modeZPX
              0e15 fc5b  bra  v6502_modeZPX
              0e16 fc5b  bra  v6502_modeZPX
              0e17 fc58  bra  v6502_modeIMP
                                          4279  bra('v6502_modeIMP'); bra('v6502_modeABY'); bra('v6502_modeIMP'); bra('v6502_modeILL') # $18 xxx110xx
              0e18 fc58  bra  v6502_modeIMP
              0e19 fc7b  bra  v6502_modeABY
              0e1a fc58  bra  v6502_modeIMP
              0e1b fc58  bra  v6502_modeIMP
                                          4280  bra('v6502_modeABX'); bra('v6502_modeABX'); bra('v6502_modeABX'); bra('v6502_modeILL') # $1c xxx111xx
              0e1c fc7a  bra  v6502_modeABX
              0e1d fc7a  bra  v6502_modeABX
              0e1e fc7a  bra  v6502_modeABX
              0e1f fc58  bra  v6502_modeIMP
                                          4281
                                          4282  # Special encoding cases for emulator:
                                          4283  #     $00 BRK -         but gets mapped to #$DD      handled in v6502_mode0
                                          4284  #     $20 JSR $DDDD     but gets mapped to #$DD      handled in v6502_mode0 and v6502_JSR
                                          4285  #     $40 RTI -         but gets mapped to #$DD      handled in v6502_mode0
                                          4286  #     $60 RTS -         but gets mapped to #$DD      handled in v6502_mode0
                                          4287  #     $6C JMP ($DDDD)   but gets mapped to $DDDD     handled in v6502_JMP2
                                          4288  #     $96 STX $DD,Y     but gets mapped to $DD,X     handled in v6502_STX2
                                          4289  #     $B6 LDX $DD,Y     but gets mapped to $DD,X     handled in v6502_LDX2
                                          4290  #     $BE LDX $DDDD,Y   but gets mapped to $DDDD,X   handled in v6502_modeABX
                                          4291
                                          4292  label('v6502_next')
v6502_next:   0e20 8115  adda [$15]       4293  adda([vTicks])                  #0
                                          4294  blt('v6502_exitBefore')         #1 No more ticks
              0e21 e83a  blt  v6502_exitBefore
                                          4295  label('v6502_next2')
v6502_next2:  0e22 c215  st   [$15]       4296  st([vTicks])                    #2
                                          4297  #
                                          4298  # Fetch opcode
              0e23 111a  ld   [$1a],x     4299  ld([v6502_PCL],X)               #3
              0e24 151b  ld   [$1b],y     4300  ld([v6502_PCH],Y)               #4
              0e25 0d00  ld   [y,x]       4301  ld([Y,X])                       #5 Fetch IR
              0e26 c226  st   [$26]       4302  st([v6502_IR])                  #6
              0e27 011a  ld   [$1a]       4303  ld([v6502_PCL])                 #7 PC++
              0e28 8001  adda $01         4304  adda(1)                         #8
              0e29 d21a  st   [$1a],x     4305  st([v6502_PCL],X)               #9
              0e2a f02d  beq  $0e2d       4306  beq(pc()+3)                     #10
              0e2b fc2e  bra  $0e2e       4307  bra(pc()+3)                     #11
              0e2c 0000  ld   $00         4308  ld(0)                           #12
              0e2d 0001  ld   $01         4309  ld(1)                           #12(!)
              0e2e 811b  adda [$1b]       4310  adda([v6502_PCH])               #13
              0e2f d61b  st   [$1b],y     4311  st([v6502_PCH],Y)               #14
                                          4312  #
                                          4313  # Get addressing mode and fetch operands
              0e30 0126  ld   [$26]       4314  ld([v6502_IR])                  #15 Get addressing mode
              0e31 201f  anda $1f         4315  anda(31)                        #16
              0e32 fe00  bra  ac          4316  bra(AC)                         #17
              0e33 fc34  bra  .next20     4317  bra('.next20')                  #18
                                          4318  # (jump table)                  #19
                                          4319  label('.next20')
.next20:      0e34 0d00  ld   [y,x]       4320  ld([Y,X])                       #20 Fetch L
                                          4321  # Most opcodes branch away at this point, but IR & 31 == 0 falls through
                                          4322  #
                                          4323  # Implicit Mode for  BRK JSR RTI RTS (<  0x80) -- 26 cycles
                                          4324  # Immediate Mode for LDY CPY CPX     (>= 0x80) -- 36 cycles
                                          4325  label('v6502_mode0')
v6502_mode0:  0e35 0126  ld   [$26]       4326  ld([v6502_IR])                  #21 'xxx0000'
              0e36 e845  blt  .imm24      4327  bmi('.imm24')                   #22
              0e37 011b  ld   [$1b]       4328  ld([v6502_PCH])                 #23
              0e38 fcf2  bra  v6502_check 4329  bra('v6502_check')              #24
              0e39 00f3  ld   $f3         4330  ld(-26/2)                       #25
                                          4331
                                          4332  # Resync with video driver. At this point we're returning BEFORE
                                          4333  # fetching and executing the next instruction.
                                          4334  label('v6502_exitBefore')
v6502_exitBefore:
              0e3a 8013  adda $13         4335  adda(v6502_maxTicks)            #3 Exit BEFORE fetch
              0e3b e43b  bgt  $0e3b       4336  bgt(pc()&255)                   #4 Resync
              0e3c a001  suba $01         4337  suba(1)                         #5
              0e3d 000d  ld   $0d         4338  ld(hi('v6502_ENTER'))           #6 Set entry point to before 'fetch'
              0e3e c202  st   [$02]       4339  st([vCpuSelect])                #7
              0e3f 1401  ld   $01,y       4340  ld(hi('vBlankStart'),Y)         #8
              0e40 e11e  jmp  y,[$1e]     4341  jmp(Y,[vReturn])                #9 To video driver
              0e41 0000  ld   $00         4342  ld(0)                           #10
                                          4343  assert v6502_overhead ==         11
                                          4344
                                          4345  # Immediate Mode: #$FF -- 36 cycles
                                          4346  label('v6502_modeIMM')
v6502_modeIMM:
              0e42 0200  nop              4347  nop()                           #21 Wait for v6502_mode0 to join
              0e43 0200  nop              4348  nop()                           #22
              0e44 011b  ld   [$1b]       4349  ld([v6502_PCH])                 #23 Copy PC
                                          4350  label('.imm24')
.imm24:       0e45 c225  st   [$25]       4351  st([v6502_ADH])                 #24
              0e46 011a  ld   [$1a]       4352  ld([v6502_PCL])                 #25
              0e47 d224  st   [$24],x     4353  st([v6502_ADL],X)               #26
              0e48 8001  adda $01         4354  adda(1)                         #27 PC++
              0e49 c21a  st   [$1a]       4355  st([v6502_PCL])                 #28
              0e4a f04d  beq  $0e4d       4356  beq(pc()+3)                     #29
              0e4b fc4e  bra  $0e4e       4357  bra(pc()+3)                     #30
              0e4c 0000  ld   $00         4358  ld(0)                           #31
              0e4d 0001  ld   $01         4359  ld(1)                           #31(!)
              0e4e 811b  adda [$1b]       4360  adda([v6502_PCH])               #32
              0e4f c21b  st   [$1b]       4361  st([v6502_PCH])                 #33
              0e50 fcf2  bra  v6502_check 4362  bra('v6502_check')              #34
              0e51 00ee  ld   $ee         4363  ld(-36/2)                       #35
                                          4364
                                          4365  # Accumulator Mode: ROL ROR LSL ASR -- 28 cycles
                                          4366  label('v6502_modeACC')
v6502_modeACC:
              0e52 0018  ld   $18         4367  ld(v6502_A&255)                 #21 Address of AC
              0e53 d224  st   [$24],x     4368  st([v6502_ADL],X)               #22
              0e54 0000  ld   $00         4369  ld(v6502_A>>8)                  #23
              0e55 c225  st   [$25]       4370  st([v6502_ADH])                 #24
              0e56 00f2  ld   $f2         4371  ld(-28/2)                       #25
              0e57 fcf2  bra  v6502_check 4372  bra('v6502_check')              #26
                                          4373  #nop()                          #27 Overlap
                                          4374  #
                                          4375  # Implied Mode: no operand -- 24 cycles
                                          4376  label('v6502_modeILL')
                                          4377  label('v6502_modeIMP')
v6502_modeILL:
v6502_modeIMP:
              0e58 0200  nop              4378  nop()                           #21,27
              0e59 fcf2  bra  v6502_check 4379  bra('v6502_check')              #22
              0e5a 00f4  ld   $f4         4380  ld(-24/2)                       #23
                                          4381
                                          4382  # Zero Page Modes: $DD $DD,X $DD,Y -- 36 cycles
                                          4383  label('v6502_modeZPX')
v6502_modeZPX:
              0e5b fc5f  bra  .zp23       4384  bra('.zp23')                    #21
              0e5c 812a  adda [$2a]       4385  adda([v6502_X])                 #22
                                          4386  label('v6502_modeZP')
v6502_modeZP: 0e5d fc5f  bra  .zp23       4387  bra('.zp23')                    #21
              0e5e 0200  nop              4388  nop()                           #22
                                          4389  label('.zp23')
.zp23:        0e5f d224  st   [$24],x     4390  st([v6502_ADL],X)               #23
              0e60 0000  ld   $00         4391  ld(0)                           #24 H=0
              0e61 c225  st   [$25]       4392  st([v6502_ADH])                 #25
              0e62 0001  ld   $01         4393  ld(1)                           #26 PC++
              0e63 811a  adda [$1a]       4394  adda([v6502_PCL])               #27
              0e64 c21a  st   [$1a]       4395  st([v6502_PCL])                 #28
              0e65 f068  beq  $0e68       4396  beq(pc()+3)                     #29
              0e66 fc69  bra  $0e69       4397  bra(pc()+3)                     #30
              0e67 0000  ld   $00         4398  ld(0)                           #31
              0e68 0001  ld   $01         4399  ld(1)                           #31(!)
              0e69 811b  adda [$1b]       4400  adda([v6502_PCH])               #32
              0e6a c21b  st   [$1b]       4401  st([v6502_PCH])                 #33
              0e6b fcf2  bra  v6502_check 4402  bra('v6502_check')              #34
              0e6c 00ee  ld   $ee         4403  ld(-36/2)                       #35
                                          4404
                                          4405  # Possible retry loop for modeABS and modeIZY. Because these need
                                          4406  # more time than the v6502_maxTicks of 38 Gigatron cycles, we may
                                          4407  # have to restart them after the next horizontal pulse.
                                          4408  label('.retry28')
.retry28:     0e6d f070  beq  $0e70       4409  beq(pc()+3)                     #28,37 PC--
              0e6e fc71  bra  $0e71       4410  bra(pc()+3)                     #29
              0e6f 0000  ld   $00         4411  ld(0)                           #30
              0e70 00ff  ld   $ff         4412  ld(-1)                          #30(!)
              0e71 811b  adda [$1b]       4413  adda([v6502_PCH])               #31
              0e72 c21b  st   [$1b]       4414  st([v6502_PCH])                 #32
              0e73 011a  ld   [$1a]       4415  ld([v6502_PCL])                 #33
              0e74 a001  suba $01         4416  suba(1)                         #34
              0e75 c21a  st   [$1a]       4417  st([v6502_PCL])                 #35
              0e76 fc20  bra  v6502_next  4418  bra('v6502_next')               #36 Retry until sufficient time
              0e77 00ed  ld   $ed         4419  ld(-38/2)                       #37
                                          4420
                                          4421  # Absolute Modes: $DDDD $DDDD,X $DDDD,Y -- 64 cycles
                                          4422  label('v6502_modeABS')
v6502_modeABS:
              0e78 fc7d  bra  .abs23      4423  bra('.abs23')                   #21
              0e79 0000  ld   $00         4424  ld(0)                           #22
                                          4425  label('v6502_modeABX')
v6502_modeABX:
              0e7a fc7d  bra  .abs23      4426  bra('.abs23')                   #21
                                          4427  label('v6502_modeABY')
v6502_modeABY:
              0e7b 012a  ld   [$2a]       4428  ld([v6502_X])                   #21,22
              0e7c 012b  ld   [$2b]       4429  ld([v6502_Y])                   #22
                                          4430  label('.abs23')
.abs23:       0e7d c224  st   [$24]       4431  st([v6502_ADL])                 #23
              0e7e 00f3  ld   $f3         4432  ld(-64//2+v6502_maxTicks)       #24 Is there enough time for the excess ticks?
              0e7f 8115  adda [$15]       4433  adda([vTicks])                  #25
              0e80 e86d  blt  .retry28    4434  blt('.retry28')                 #26
              0e81 011a  ld   [$1a]       4435  ld([v6502_PCL])                 #27
              0e82 0126  ld   [$26]       4436  ld([v6502_IR])                  #28 Special case $BE: LDX $DDDD,Y (we got X in ADL)
              0e83 60be  xora $be         4437  xora(0xbe)                      #29
              0e84 f087  beq  $0e87       4438  beq(pc()+3)                     #30
              0e85 fc88  bra  $0e88       4439  bra(pc()+3)                     #31
              0e86 0124  ld   [$24]       4440  ld([v6502_ADL])                 #32
              0e87 012b  ld   [$2b]       4441  ld([v6502_Y])                   #32(!)
              0e88 8d00  adda [y,x]       4442  adda([Y,X])                     #33 Fetch and add L
              0e89 c224  st   [$24]       4443  st([v6502_ADL])                 #34
              0e8a e88e  blt  .abs37      4444  bmi('.abs37')                   #35 Carry?
              0e8b ad00  suba [y,x]       4445  suba([Y,X])                     #36 Gets back original operand
              0e8c fc90  bra  .abs39      4446  bra('.abs39')                   #37
              0e8d 4d00  ora  [y,x]       4447  ora([Y,X])                      #38 Carry in bit 7
                                          4448  label('.abs37')
.abs37:       0e8e 2d00  anda [y,x]       4449  anda([Y,X])                     #37 Carry in bit 7
              0e8f 0200  nop              4450  nop()                           #38
                                          4451  label('.abs39')
.abs39:       0e90 3080  anda $80,x       4452  anda(0x80,X)                    #39 Move carry to bit 0
              0e91 0500  ld   [x]         4453  ld([X])                         #40
              0e92 c225  st   [$25]       4454  st([v6502_ADH])                 #41
              0e93 011a  ld   [$1a]       4455  ld([v6502_PCL])                 #42 PC++
              0e94 8001  adda $01         4456  adda(1)                         #43
              0e95 d21a  st   [$1a],x     4457  st([v6502_PCL],X)               #44
              0e96 f099  beq  $0e99       4458  beq(pc()+3)                     #45
              0e97 fc9a  bra  $0e9a       4459  bra(pc()+3)                     #46
              0e98 0000  ld   $00         4460  ld(0)                           #47
              0e99 0001  ld   $01         4461  ld(1)                           #47(!)
              0e9a 811b  adda [$1b]       4462  adda([v6502_PCH])               #48
              0e9b d61b  st   [$1b],y     4463  st([v6502_PCH],Y)               #49
              0e9c 0d00  ld   [y,x]       4464  ld([Y,X])                       #50 Fetch H
              0e9d 8125  adda [$25]       4465  adda([v6502_ADH])               #51
              0e9e c225  st   [$25]       4466  st([v6502_ADH])                 #52
              0e9f 011a  ld   [$1a]       4467  ld([v6502_PCL])                 #53 PC++
              0ea0 8001  adda $01         4468  adda(1)                         #54
              0ea1 c21a  st   [$1a]       4469  st([v6502_PCL])                 #55
              0ea2 f0a5  beq  $0ea5       4470  beq(pc()+3)                     #56
              0ea3 fca6  bra  $0ea6       4471  bra(pc()+3)                     #57
              0ea4 0000  ld   $00         4472  ld(0)                           #58
              0ea5 0001  ld   $01         4473  ld(1)                           #58(!)
              0ea6 811b  adda [$1b]       4474  adda([v6502_PCH])               #59
              0ea7 c21b  st   [$1b]       4475  st([v6502_PCH])                 #60
              0ea8 1124  ld   [$24],x     4476  ld([v6502_ADL],X)               #61
              0ea9 fcf2  bra  v6502_check 4477  bra('v6502_check')              #62
              0eaa 00e0  ld   $e0         4478  ld(-64/2)                       #63
                                          4479
                                          4480  # Indirect Indexed Mode: ($DD),Y -- 54 cycles
                                          4481  label('v6502_modeIZY')
v6502_modeIZY:
              0eab 1200  ld   ac,x        4482  ld(AC,X)                        #21 $DD
              0eac 1400  ld   $00,y       4483  ld(0,Y)                         #22 $00DD
              0ead 00f8  ld   $f8         4484  ld(-54//2+v6502_maxTicks)       #23 Is there enough time for the excess ticks?
              0eae 8115  adda [$15]       4485  adda([vTicks])                  #24
              0eaf 0200  nop              4486  nop()                           #25
              0eb0 e86d  blt  .retry28    4487  blt('.retry28')                 #26
              0eb1 011a  ld   [$1a]       4488  ld([v6502_PCL])                 #27
              0eb2 8001  adda $01         4489  adda(1)                         #28 PC++
              0eb3 c21a  st   [$1a]       4490  st([v6502_PCL])                 #29
              0eb4 f0b7  beq  $0eb7       4491  beq(pc()+3)                     #30
              0eb5 fcb8  bra  $0eb8       4492  bra(pc()+3)                     #31
              0eb6 0000  ld   $00         4493  ld(0)                           #32
              0eb7 0001  ld   $01         4494  ld(1)                           #32(!)
              0eb8 811b  adda [$1b]       4495  adda([v6502_PCH])               #33
              0eb9 c21b  st   [$1b]       4496  st([v6502_PCH])                 #34
              0eba 0d00  ld   [y,x]       4497  ld([Y,X])                       #35 Read word from zero-page
              0ebb de00  st   [y,x++]     4498  st([Y,Xpp])                     #36 (Just X++) Wrap-around is correct
              0ebc c224  st   [$24]       4499  st([v6502_ADL])                 #37
              0ebd 0d00  ld   [y,x]       4500  ld([Y,X])                       #38
              0ebe c225  st   [$25]       4501  st([v6502_ADH])                 #39
              0ebf 012b  ld   [$2b]       4502  ld([v6502_Y])                   #40 Add Y
              0ec0 8124  adda [$24]       4503  adda([v6502_ADL])               #41
              0ec1 c224  st   [$24]       4504  st([v6502_ADL])                 #42
              0ec2 e8c6  blt  .izy45      4505  bmi('.izy45')                   #43 Carry?
              0ec3 a12b  suba [$2b]       4506  suba([v6502_Y])                 #44 Gets back original operand
              0ec4 fcc8  bra  .izy47      4507  bra('.izy47')                   #45
              0ec5 412b  ora  [$2b]       4508  ora([v6502_Y])                  #46 Carry in bit 7
                                          4509  label('.izy45')
.izy45:       0ec6 212b  anda [$2b]       4510  anda([v6502_Y])                 #45 Carry in bit 7
              0ec7 0200  nop              4511  nop()                           #46
                                          4512  label('.izy47')
.izy47:       0ec8 3080  anda $80,x       4513  anda(0x80,X)                    #47 Move carry to bit 0
              0ec9 0500  ld   [x]         4514  ld([X])                         #48
              0eca 8125  adda [$25]       4515  adda([v6502_ADH])               #49
              0ecb c225  st   [$25]       4516  st([v6502_ADH])                 #50
              0ecc 1124  ld   [$24],x     4517  ld([v6502_ADL],X)               #51
              0ecd fcf2  bra  v6502_check 4518  bra('v6502_check')              #52
              0ece 00e5  ld   $e5         4519  ld(-54/2)                       #53
                                          4520
                                          4521  # Relative Mode: BEQ BNE BPL BMI BCC BCS BVC BVS -- 36 cycles
                                          4522  label('v6502_modeREL')
v6502_modeREL:
              0ecf d224  st   [$24],x     4523  st([v6502_ADL],X)               #21 Offset (Only needed for branch)
              0ed0 e8d3  blt  $0ed3       4524  bmi(pc()+3)                     #22 Sign extend
              0ed1 fcd4  bra  $0ed4       4525  bra(pc()+3)                     #23
              0ed2 0000  ld   $00         4526  ld(0)                           #24
              0ed3 00ff  ld   $ff         4527  ld(255)                         #24(!)
              0ed4 c225  st   [$25]       4528  st([v6502_ADH])                 #25
              0ed5 011a  ld   [$1a]       4529  ld([v6502_PCL])                 #26 PC++ (Needed for both cases)
              0ed6 8001  adda $01         4530  adda(1)                         #27
              0ed7 c21a  st   [$1a]       4531  st([v6502_PCL])                 #28
              0ed8 f0db  beq  $0edb       4532  beq(pc()+3)                     #29
              0ed9 fcdc  bra  $0edc       4533  bra(pc()+3)                     #30
              0eda 0000  ld   $00         4534  ld(0)                           #31
              0edb 0001  ld   $01         4535  ld(1)                           #31(!)
              0edc 811b  adda [$1b]       4536  adda([v6502_PCH])               #32
              0edd c21b  st   [$1b]       4537  st([v6502_PCH])                 #33
              0ede fcf2  bra  v6502_check 4538  bra('v6502_check')              #34
              0edf 00ee  ld   $ee         4539  ld(-36/2)                       #53
                                          4540
                                          4541  # Indexed Indirect Mode: ($DD,X) -- 38 cycles
                                          4542  label('v6502_modeIZX')
v6502_modeIZX:
              0ee0 812a  adda [$2a]       4543  adda([v6502_X])                 #21 Add X
              0ee1 c21d  st   [$1d]       4544  st([v6502_Tmp])                 #22
              0ee2 9001  adda $01,x       4545  adda(1,X)                       #23 Read word from zero-page
              0ee3 0500  ld   [x]         4546  ld([X])                         #24
              0ee4 c225  st   [$25]       4547  st([v6502_ADH])                 #25
              0ee5 111d  ld   [$1d],x     4548  ld([v6502_Tmp],X)               #26
              0ee6 0500  ld   [x]         4549  ld([X])                         #27
              0ee7 d224  st   [$24],x     4550  st([v6502_ADL],X)               #28
              0ee8 011a  ld   [$1a]       4551  ld([v6502_PCL])                 #29 PC++
              0ee9 8001  adda $01         4552  adda(1)                         #30
              0eea c21a  st   [$1a]       4553  st([v6502_PCL])                 #31
              0eeb f0ee  beq  $0eee       4554  beq(pc()+3)                     #32
              0eec fcef  bra  $0eef       4555  bra(pc()+3)                     #33
              0eed 0000  ld   $00         4556  ld(0)                           #34
              0eee 0001  ld   $01         4557  ld(1)                           #34(!)
              0eef 811b  adda [$1b]       4558  adda([v6502_PCH])               #35
              0ef0 c21b  st   [$1b]       4559  st([v6502_PCH])                 #36
              0ef1 00ed  ld   $ed         4560  ld(-38/2)                       #37 !!! Fall through to v6502_check !!!
                                          4561  #
                                          4562  # Update elapsed time for the addressing mode processing.
                                          4563  # Then check if we can immediately execute this instruction.
                                          4564  # Otherwise transfer control to the video driver.
                                          4565  label('v6502_check')
v6502_check:  0ef2 8115  adda [$15]       4566  adda([vTicks])                  #0
                                          4567  blt('v6502_exitAfter')          #1 No more ticks
              0ef3 e8f8  blt  v6502_exitAfter
              0ef4 c215  st   [$15]       4568  st([vTicks])                    #2
              0ef5 140f  ld   $0f,y       4569  ld(hi('v6502_execute'),Y)       #3
              0ef6 e126  jmp  y,[$26]     4570  jmp(Y,[v6502_IR])               #4
              0ef7 fcff  bra  $ff         4571  bra(255)                        #5
                                          4572
                                          4573  # Otherwise resync with video driver. At this point we're returning AFTER
                                          4574  # addressing mode decoding, but before executing the instruction.
                                          4575  label('v6502_exitAfter')
v6502_exitAfter:
              0ef8 8013  adda $13         4576  adda(v6502_maxTicks)            #3 Exit AFTER fetch
              0ef9 e4f9  bgt  $0ef9       4577  bgt(pc()&255)                   #4 Resync
              0efa a001  suba $01         4578  suba(1)                         #5
              0efb 0010  ld   $10         4579  ld(hi('v6502_RESUME'))          #6 Set entry point to before 'execute'
              0efc c202  st   [$02]       4580  st([vCpuSelect])                #7
              0efd 1401  ld   $01,y       4581  ld(hi('vBlankStart'),Y)         #8
              0efe e11e  jmp  y,[$1e]     4582  jmp(Y,[vReturn])                #9 To video driver
              0eff 0000  ld   $00         4583  ld(0)                           #10
                                          4584  assert v6502_overhead ==         11
                                          4585
                                          4586  align(0x100,size=0x100)
                                          4587  label('v6502_execute')
                                          4588  # This page works as a 255-entry (0..254) jump table for 6502 opcodes.
                                          4589  # Jumping into this page must have 'bra 255' in the branch delay slot
                                          4590  # in order to get out again and dispatch to the right continuation.
                                          4591  # X must hold [v6502_ADL],
                                          4592  # Y will hold hi('v6502_execute'),
                                          4593  # A will be loaded with the code offset (this is skipped at offset $ff)
v6502_execute:
              0f00 00fd  ld   $fd         4594  ld('v6502_BRK'); ld('v6502_ORA'); ld('v6502_ILL'); ld('v6502_ILL') #6 $00
              0f01 0089  ld   $89
              0f02 00fd  ld   $fd
              0f03 00fd  ld   $fd
              0f04 00fd  ld   $fd         4595  ld('v6502_ILL'); ld('v6502_ORA'); ld('v6502_ASL'); ld('v6502_ILL') #6
              0f05 0089  ld   $89
              0f06 00f1  ld   $f1
              0f07 00fd  ld   $fd
              0f08 00f3  ld   $f3         4596  ld('v6502_PHP'); ld('v6502_ORA'); ld('v6502_ASL'); ld('v6502_ILL') #6
              0f09 0089  ld   $89
              0f0a 00f1  ld   $f1
              0f0b 00fd  ld   $fd
              0f0c 00fd  ld   $fd         4597  ld('v6502_ILL'); ld('v6502_ORA'); ld('v6502_ASL'); ld('v6502_ILL') #6
              0f0d 0089  ld   $89
              0f0e 00f1  ld   $f1
              0f0f 00fd  ld   $fd
              0f10 003f  ld   $3f         4598  ld('v6502_BPL'); ld('v6502_ORA'); ld('v6502_ILL'); ld('v6502_ILL') #6 $10
              0f11 0089  ld   $89
              0f12 00fd  ld   $fd
              0f13 00fd  ld   $fd
              0f14 00fd  ld   $fd         4599  ld('v6502_ILL'); ld('v6502_ORA'); ld('v6502_ASL'); ld('v6502_ILL') #6
              0f15 0089  ld   $89
              0f16 00f1  ld   $f1
              0f17 00fd  ld   $fd
              0f18 0036  ld   $36         4600  ld('v6502_CLC'); ld('v6502_ORA'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0f19 0089  ld   $89
              0f1a 00fd  ld   $fd
              0f1b 00fd  ld   $fd
              0f1c 00fd  ld   $fd         4601  ld('v6502_ILL'); ld('v6502_ORA'); ld('v6502_ASL'); ld('v6502_ILL') #6
              0f1d 0089  ld   $89
              0f1e 00f1  ld   $f1
              0f1f 00fd  ld   $fd
              0f20 009a  ld   $9a         4602  ld('v6502_JSR'); ld('v6502_AND'); ld('v6502_ILL'); ld('v6502_ILL') #6 $20
              0f21 0085  ld   $85
              0f22 00fd  ld   $fd
              0f23 00fd  ld   $fd
              0f24 00f5  ld   $f5         4603  ld('v6502_BIT'); ld('v6502_AND'); ld('v6502_ROL'); ld('v6502_ILL') #6
              0f25 0085  ld   $85
              0f26 00f7  ld   $f7
              0f27 00fd  ld   $fd
              0f28 00f9  ld   $f9         4604  ld('v6502_PLP'); ld('v6502_AND'); ld('v6502_ROL'); ld('v6502_ILL') #6
              0f29 0085  ld   $85
              0f2a 00f7  ld   $f7
              0f2b 00fd  ld   $fd
              0f2c 00f5  ld   $f5         4605  ld('v6502_BIT'); ld('v6502_AND'); ld('v6502_ROL'); ld('v6502_ILL') #6
              0f2d 0085  ld   $85
              0f2e 00f7  ld   $f7
              0f2f 00fd  ld   $fd
              0f30 0042  ld   $42         4606  ld('v6502_BMI'); ld('v6502_AND'); ld('v6502_ILL'); ld('v6502_ILL') #6 $30
              0f31 0085  ld   $85
              0f32 00fd  ld   $fd
              0f33 00fd  ld   $fd
              0f34 00fd  ld   $fd         4607  ld('v6502_ILL'); ld('v6502_AND'); ld('v6502_ROL'); ld('v6502_ILL') #6
              0f35 0085  ld   $85
              0f36 00f7  ld   $f7
              0f37 00fd  ld   $fd
              0f38 0038  ld   $38         4608  ld('v6502_SEC'); ld('v6502_AND'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0f39 0085  ld   $85
              0f3a 00fd  ld   $fd
              0f3b 00fd  ld   $fd
              0f3c 00fd  ld   $fd         4609  ld('v6502_ILL'); ld('v6502_AND'); ld('v6502_ROL'); ld('v6502_ILL') #6
              0f3d 0085  ld   $85
              0f3e 00f7  ld   $f7
              0f3f 00fd  ld   $fd
              0f40 00d3  ld   $d3         4610  ld('v6502_RTI'); ld('v6502_EOR'); ld('v6502_ILL'); ld('v6502_ILL') #6 $40
              0f41 008c  ld   $8c
              0f42 00fd  ld   $fd
              0f43 00fd  ld   $fd
              0f44 00fd  ld   $fd         4611  ld('v6502_ILL'); ld('v6502_EOR'); ld('v6502_LSR'); ld('v6502_ILL') #6
              0f45 008c  ld   $8c
              0f46 00d7  ld   $d7
              0f47 00fd  ld   $fd
              0f48 00d9  ld   $d9         4612  ld('v6502_PHA'); ld('v6502_EOR'); ld('v6502_LSR'); ld('v6502_ILL') #6
              0f49 008c  ld   $8c
              0f4a 00d7  ld   $d7
              0f4b 00fd  ld   $fd
              0f4c 0096  ld   $96         4613  ld('v6502_JMP1');ld('v6502_EOR'); ld('v6502_LSR'); ld('v6502_ILL') #6
              0f4d 008c  ld   $8c
              0f4e 00d7  ld   $d7
              0f4f 00fd  ld   $fd
              0f50 0045  ld   $45         4614  ld('v6502_BVC'); ld('v6502_EOR'); ld('v6502_ILL'); ld('v6502_ILL') #6 $50
              0f51 008c  ld   $8c
              0f52 00fd  ld   $fd
              0f53 00fd  ld   $fd
              0f54 00fd  ld   $fd         4615  ld('v6502_ILL'); ld('v6502_EOR'); ld('v6502_LSR'); ld('v6502_ILL') #6
              0f55 008c  ld   $8c
              0f56 00d7  ld   $d7
              0f57 00fd  ld   $fd
              0f58 00db  ld   $db         4616  ld('v6502_CLI'); ld('v6502_EOR'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0f59 008c  ld   $8c
              0f5a 00fd  ld   $fd
              0f5b 00fd  ld   $fd
              0f5c 00fd  ld   $fd         4617  ld('v6502_ILL'); ld('v6502_EOR'); ld('v6502_LSR'); ld('v6502_ILL') #6
              0f5d 008c  ld   $8c
              0f5e 00d7  ld   $d7
              0f5f 00fd  ld   $fd
              0f60 00dd  ld   $dd         4618  ld('v6502_RTS'); ld('v6502_ADC'); ld('v6502_ILL'); ld('v6502_ILL') #6 $60
              0f61 0001  ld   $01
              0f62 00fd  ld   $fd
              0f63 00fd  ld   $fd
              0f64 00fd  ld   $fd         4619  ld('v6502_ILL'); ld('v6502_ADC'); ld('v6502_ROR'); ld('v6502_ILL') #6
              0f65 0001  ld   $01
              0f66 00d5  ld   $d5
              0f67 00fd  ld   $fd
              0f68 00df  ld   $df         4620  ld('v6502_PLA'); ld('v6502_ADC'); ld('v6502_ROR'); ld('v6502_ILL') #6
              0f69 0001  ld   $01
              0f6a 00d5  ld   $d5
              0f6b 00fd  ld   $fd
              0f6c 0098  ld   $98         4621  ld('v6502_JMP2');ld('v6502_ADC'); ld('v6502_ROR'); ld('v6502_ILL') #6
              0f6d 0001  ld   $01
              0f6e 00d5  ld   $d5
              0f6f 00fd  ld   $fd
              0f70 0049  ld   $49         4622  ld('v6502_BVS'); ld('v6502_ADC'); ld('v6502_ILL'); ld('v6502_ILL') #6 $70
              0f71 0001  ld   $01
              0f72 00fd  ld   $fd
              0f73 00fd  ld   $fd
              0f74 00fd  ld   $fd         4623  ld('v6502_ILL'); ld('v6502_ADC'); ld('v6502_ROR'); ld('v6502_ILL') #6
              0f75 0001  ld   $01
              0f76 00d5  ld   $d5
              0f77 00fd  ld   $fd
              0f78 00e1  ld   $e1         4624  ld('v6502_SEI'); ld('v6502_ADC'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0f79 0001  ld   $01
              0f7a 00fd  ld   $fd
              0f7b 00fd  ld   $fd
              0f7c 00fd  ld   $fd         4625  ld('v6502_ILL'); ld('v6502_ADC'); ld('v6502_ROR'); ld('v6502_ILL') #6
              0f7d 0001  ld   $01
              0f7e 00d5  ld   $d5
              0f7f 00fd  ld   $fd
              0f80 00fd  ld   $fd         4626  ld('v6502_ILL'); ld('v6502_STA'); ld('v6502_ILL'); ld('v6502_ILL') #6 $80
              0f81 00c1  ld   $c1
              0f82 00fd  ld   $fd
              0f83 00fd  ld   $fd
              0f84 00c7  ld   $c7         4627  ld('v6502_STY'); ld('v6502_STA'); ld('v6502_STX'); ld('v6502_ILL') #6
              0f85 00c1  ld   $c1
              0f86 00c3  ld   $c3
              0f87 00fd  ld   $fd
              0f88 007f  ld   $7f         4628  ld('v6502_DEY'); ld('v6502_ILL'); ld('v6502_TXA'); ld('v6502_ILL') #6
              0f89 00fd  ld   $fd
              0f8a 00cd  ld   $cd
              0f8b 00fd  ld   $fd
              0f8c 00c7  ld   $c7         4629  ld('v6502_STY'); ld('v6502_STA'); ld('v6502_STX'); ld('v6502_ILL') #6
              0f8d 00c1  ld   $c1
              0f8e 00c3  ld   $c3
              0f8f 00fd  ld   $fd
              0f90 004d  ld   $4d         4630  ld('v6502_BCC'); ld('v6502_STA'); ld('v6502_ILL'); ld('v6502_ILL') #6 $90
              0f91 00c1  ld   $c1
              0f92 00fd  ld   $fd
              0f93 00fd  ld   $fd
              0f94 00c7  ld   $c7         4631  ld('v6502_STY'); ld('v6502_STA'); ld('v6502_STX2');ld('v6502_ILL') #6
              0f95 00c1  ld   $c1
              0f96 00c5  ld   $c5
              0f97 00fd  ld   $fd
              0f98 00cf  ld   $cf         4632  ld('v6502_TYA'); ld('v6502_STA'); ld('v6502_TXS'); ld('v6502_ILL') #6
              0f99 00c1  ld   $c1
              0f9a 00e3  ld   $e3
              0f9b 00fd  ld   $fd
              0f9c 00fd  ld   $fd         4633  ld('v6502_ILL'); ld('v6502_STA'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0f9d 00c1  ld   $c1
              0f9e 00fd  ld   $fd
              0f9f 00fd  ld   $fd
              0fa0 00bf  ld   $bf         4634  ld('v6502_LDY'); ld('v6502_LDA'); ld('v6502_LDX'); ld('v6502_ILL') #6 $A0
              0fa1 00b9  ld   $b9
              0fa2 00bb  ld   $bb
              0fa3 00fd  ld   $fd
              0fa4 00bf  ld   $bf         4635  ld('v6502_LDY'); ld('v6502_LDA'); ld('v6502_LDX'); ld('v6502_ILL') #6
              0fa5 00b9  ld   $b9
              0fa6 00bb  ld   $bb
              0fa7 00fd  ld   $fd
              0fa8 00cb  ld   $cb         4636  ld('v6502_TAY'); ld('v6502_LDA'); ld('v6502_TAX'); ld('v6502_ILL') #6
              0fa9 00b9  ld   $b9
              0faa 00c9  ld   $c9
              0fab 00fd  ld   $fd
              0fac 00bf  ld   $bf         4637  ld('v6502_LDY'); ld('v6502_LDA'); ld('v6502_LDX'); ld('v6502_ILL') #6
              0fad 00b9  ld   $b9
              0fae 00bb  ld   $bb
              0faf 00fd  ld   $fd
              0fb0 0051  ld   $51         4638  ld('v6502_BCS'); ld('v6502_LDA'); ld('v6502_ILL'); ld('v6502_ILL') #6 $B0
              0fb1 00b9  ld   $b9
              0fb2 00fd  ld   $fd
              0fb3 00fd  ld   $fd
              0fb4 00bf  ld   $bf         4639  ld('v6502_LDY'); ld('v6502_LDA'); ld('v6502_LDX2');ld('v6502_ILL') #6
              0fb5 00b9  ld   $b9
              0fb6 00bd  ld   $bd
              0fb7 00fd  ld   $fd
              0fb8 00d1  ld   $d1         4640  ld('v6502_CLV'); ld('v6502_LDA'); ld('v6502_TSX'); ld('v6502_ILL') #6
              0fb9 00b9  ld   $b9
              0fba 00e5  ld   $e5
              0fbb 00fd  ld   $fd
              0fbc 00bf  ld   $bf         4641  ld('v6502_LDY'); ld('v6502_LDA'); ld('v6502_LDX'); ld('v6502_ILL') #6
              0fbd 00b9  ld   $b9
              0fbe 00bb  ld   $bb
              0fbf 00fd  ld   $fd
              0fc0 00e7  ld   $e7         4642  ld('v6502_CPY'); ld('v6502_CMP'); ld('v6502_ILL'); ld('v6502_ILL') #6 $C0
              0fc1 00e9  ld   $e9
              0fc2 00fd  ld   $fd
              0fc3 00fd  ld   $fd
              0fc4 00e7  ld   $e7         4643  ld('v6502_CPY'); ld('v6502_CMP'); ld('v6502_DEC'); ld('v6502_ILL') #6
              0fc5 00e9  ld   $e9
              0fc6 00eb  ld   $eb
              0fc7 00fd  ld   $fd
              0fc8 007b  ld   $7b         4644  ld('v6502_INY'); ld('v6502_CMP'); ld('v6502_DEX'); ld('v6502_ILL') #6
              0fc9 00e9  ld   $e9
              0fca 0077  ld   $77
              0fcb 00fd  ld   $fd
              0fcc 00e7  ld   $e7         4645  ld('v6502_CPY'); ld('v6502_CMP'); ld('v6502_DEC'); ld('v6502_ILL') #6
              0fcd 00e9  ld   $e9
              0fce 00eb  ld   $eb
              0fcf 00fd  ld   $fd
              0fd0 0055  ld   $55         4646  ld('v6502_BNE'); ld('v6502_CMP'); ld('v6502_ILL'); ld('v6502_ILL') #6 $D0
              0fd1 00e9  ld   $e9
              0fd2 00fd  ld   $fd
              0fd3 00fd  ld   $fd
              0fd4 00fd  ld   $fd         4647  ld('v6502_ILL'); ld('v6502_CMP'); ld('v6502_DEC'); ld('v6502_ILL') #6
              0fd5 00e9  ld   $e9
              0fd6 00eb  ld   $eb
              0fd7 00fd  ld   $fd
              0fd8 00ed  ld   $ed         4648  ld('v6502_CLD'); ld('v6502_CMP'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0fd9 00e9  ld   $e9
              0fda 00fd  ld   $fd
              0fdb 00fd  ld   $fd
              0fdc 00fd  ld   $fd         4649  ld('v6502_ILL'); ld('v6502_CMP'); ld('v6502_DEC'); ld('v6502_ILL') #6
              0fdd 00e9  ld   $e9
              0fde 00eb  ld   $eb
              0fdf 00fd  ld   $fd
              0fe0 00ef  ld   $ef         4650  ld('v6502_CPX'); ld('v6502_SBC'); ld('v6502_ILL'); ld('v6502_ILL') #6 $E0
              0fe1 0029  ld   $29
              0fe2 00fd  ld   $fd
              0fe3 00fd  ld   $fd
              0fe4 00ef  ld   $ef         4651  ld('v6502_CPX'); ld('v6502_SBC'); ld('v6502_INC'); ld('v6502_ILL') #6
              0fe5 0029  ld   $29
              0fe6 00b7  ld   $b7
              0fe7 00fd  ld   $fd
              0fe8 006c  ld   $6c         4652  ld('v6502_INX'); ld('v6502_SBC'); ld('v6502_NOP'); ld('v6502_ILL') #6
              0fe9 0029  ld   $29
              0fea 0083  ld   $83
              0feb 00fd  ld   $fd
              0fec 00ef  ld   $ef         4653  ld('v6502_CPX'); ld('v6502_SBC'); ld('v6502_INC'); ld('v6502_ILL') #6
              0fed 0029  ld   $29
              0fee 00b7  ld   $b7
              0fef 00fd  ld   $fd
              0ff0 0058  ld   $58         4654  ld('v6502_BEQ'); ld('v6502_SBC'); ld('v6502_ILL'); ld('v6502_ILL') #6 $F0
              0ff1 0029  ld   $29
              0ff2 00fd  ld   $fd
              0ff3 00fd  ld   $fd
              0ff4 00fd  ld   $fd         4655  ld('v6502_ILL'); ld('v6502_SBC'); ld('v6502_INC'); ld('v6502_ILL') #6
              0ff5 0029  ld   $29
              0ff6 00b7  ld   $b7
              0ff7 00fd  ld   $fd
              0ff8 00fb  ld   $fb         4656  ld('v6502_SED'); ld('v6502_SBC'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0ff9 0029  ld   $29
              0ffa 00fd  ld   $fd
              0ffb 00fd  ld   $fd
              0ffc 00fd  ld   $fd         4657  ld('v6502_ILL'); ld('v6502_SBC'); ld('v6502_INC')                  #6
              0ffd 0029  ld   $29
              0ffe 00b7  ld   $b7
              0fff fe00  bra  ac          4658  bra(AC)                         #6,7 Dispatch into next page
                                          4659  # --- Page boundary ---
                                          4660  align(0x100,size=0x100)
              1000 140e  ld   $0e,y       4661  ld(hi('v6502_next'),Y)          #8 Handy for instructions that don't clobber Y
                                          4662
                                          4663  label('v6502_ADC')
                                          4664  assert pc()&255 == 1
                                          4665  assert v6502_Cflag == 1
                                          4666  assert v6502_Vemu == 128
v6502_ADC:    1001 1525  ld   [$25],y     4667  ld([v6502_ADH],Y)               #9 Must be at page offset 1, so A=1
              1002 2127  anda [$27]       4668  anda([v6502_P])                 #10 Carry in (AC=1 because lo('v6502_ADC')=1)
              1003 8118  adda [$18]       4669  adda([v6502_A])                 #11 Sum
              1004 f020  beq  .adc14      4670  beq('.adc14')                   #12 Danger zone for dropping a carry
              1005 8d00  adda [y,x]       4671  adda([Y,X])                     #13
              1006 c228  st   [$28]       4672  st([v6502_Qz])                  #14 Z flag, don't overwrite left-hand side (A) yet
              1007 c229  st   [$29]       4673  st([v6502_Qn])                  #15 N flag
              1008 6118  xora [$18]       4674  xora([v6502_A])                 #16 V flag, (Q^A) & (B^Q) & 0x80
              1009 c218  st   [$18]       4675  st([v6502_A])                   #17
              100a 0d00  ld   [y,x]       4676  ld([Y,X])                       #18
              100b 6128  xora [$28]       4677  xora([v6502_Qz])                #19
              100c 2118  anda [$18]       4678  anda([v6502_A])                 #20
              100d 2080  anda $80         4679  anda(0x80)                      #21
              100e c21d  st   [$1d]       4680  st([v6502_Tmp])                 #22
              100f 0128  ld   [$28]       4681  ld([v6502_Qz])                  #23 Update A
              1010 c218  st   [$18]       4682  st([v6502_A])                   #24
              1011 e815  blt  .adc27      4683  bmi('.adc27')                   #25 C flag
              1012 ad00  suba [y,x]       4684  suba([Y,X])                     #26
              1013 fc17  bra  .adc29      4685  bra('.adc29')                   #27
              1014 4d00  ora  [y,x]       4686  ora([Y,X])                      #28
                                          4687  label('.adc27')
.adc27:       1015 2d00  anda [y,x]       4688  anda([Y,X])                     #27
              1016 0200  nop              4689  nop()                           #28
                                          4690  label('.adc29')
.adc29:       1017 3080  anda $80,x       4691  anda(0x80,X)                    #29
              1018 0127  ld   [$27]       4692  ld([v6502_P])                   #30 Update P
              1019 207e  anda $7e         4693  anda(~v6502_Vemu&~v6502_Cflag)  #31
              101a 4500  ora  [x]         4694  ora([X])                        #32
              101b 411d  ora  [$1d]       4695  ora([v6502_Tmp])                #33
              101c c227  st   [$27]       4696  st([v6502_P])                   #34
              101d 140e  ld   $0e,y       4697  ld(hi('v6502_next'),Y)          #35
              101e e020  jmp  y,$20       4698  jmp(Y,'v6502_next')             #36
              101f 00ed  ld   $ed         4699  ld(-38/2)                       #37
                                          4700  # Cin=1, A=$FF, B=$DD --> Result=$DD, Cout=1, V=0
                                          4701  # Cin=0, A=$00, B=$DD --> Result=$DD, Cout=0, V=0
                                          4702  label('.adc14')
.adc14:       1020 c218  st   [$18]       4703  st([v6502_A])                   #14 Special case
              1021 c228  st   [$28]       4704  st([v6502_Qz])                  #15 Z flag
              1022 c229  st   [$29]       4705  st([v6502_Qn])                  #16 N flag
              1023 0127  ld   [$27]       4706  ld([v6502_P])                   #17
              1024 207f  anda $7f         4707  anda(0x7f)                      #18 V=0, keep C
              1025 c227  st   [$27]       4708  st([v6502_P])                   #19
              1026 140e  ld   $0e,y       4709  ld(hi('v6502_next'),Y)          #20
              1027 00f4  ld   $f4         4710  ld(-24/2)                       #21
              1028 e020  jmp  y,$20       4711  jmp(Y,'v6502_next')             #22
                                          4712  #nop()                          #23 Overlap
                                          4713  #
                                          4714  label('v6502_SBC')
                                          4715  # No matter how hard we try, v6502_SBC always comes out a lot clumsier
                                          4716  # than v6502_ADC. And that one already barely fits in 38 cycles and is
                                          4717  # hard to follow. So we use a hack: transmorph our SBC into an ADC with
                                          4718  # inverted operand, and then dispatch again. Simple and effective.
v6502_SBC:    1029 1525  ld   [$25],y     4719  ld([v6502_ADH],Y)               #9,24
              102a 0d00  ld   [y,x]       4720  ld([Y,X])                       #10
              102b 60ff  xora $ff         4721  xora(255)                       #11 Invert right-hand side operand
              102c c219  st   [$19]       4722  st([v6502_BI])                  #12 Park modified operand for v6502_ADC
              102d 0019  ld   $19         4723  ld(v6502_BI&255)                #13 Address of BI
              102e d224  st   [$24],x     4724  st([v6502_ADL],X)               #14
              102f 0000  ld   $00         4725  ld(v6502_BI>>8)                 #15
              1030 c225  st   [$25]       4726  st([v6502_ADH])                 #16
              1031 0069  ld   $69         4727  ld(0x69)                        #17 ADC #$xx (Any ADC opcode will do)
              1032 c226  st   [$26]       4728  st([v6502_IR])                  #18
              1033 140e  ld   $0e,y       4729  ld(hi('v6502_check'),Y)         #20 Go back to time check before dispatch
              1034 e0f2  jmp  y,$f2       4730  jmp(Y,'v6502_check')            #20
              1035 00f5  ld   $f5         4731  ld(-22/2)                       #21
                                          4732
                                          4733  # Carry calculation table
                                          4734  #   L7 R7 C7   RX UC SC
                                          4735  #   -- -- -- | -- -- --
                                          4736  #    0  0  0 |  0  0  0
                                          4737  #    0  0  1 |  0  0  0
                                          4738  #    1  0  0 |  0  1 +1
                                          4739  #    1  0  1 |  0  0  0
                                          4740  #    0  1  0 | -1  1  0
                                          4741  #    0  1  1 | -1  0 -1
                                          4742  #    1  1  0 | -1  1  0
                                          4743  #    1  1  1 | -1  1  0
                                          4744  #   -- -- -- | -- -- --
                                          4745  #    ^  ^  ^    ^  ^  ^
                                          4746  #    |  |  |    |  |  `--- Carry of unsigned L + signed R: SC = RX + UC
                                          4747  #    |  |  |    |  `----- Carry of unsigned L + unsigned R: UC = C7 ? L7&R7 : L7|R7
                                          4748  #    |  |  |    `------- Sign extension of signed R
                                          4749  #    |  |  `--------- MSB of unextended L + R
                                          4750  #    |  `----------- MSB of right operand R
                                          4751  #    `------------- MSB of left operand L
                                          4752
                                          4753  label('v6502_CLC')
v6502_CLC:    1036 0127  ld   [$27]       4754  ld([v6502_P])                   #9
              1037 fc3b  bra  .sec12      4755  bra('.sec12')                   #10
                                          4756  label('v6502_SEC')
v6502_SEC:    1038 20fe  anda $fe         4757  anda(~v6502_Cflag)              #9,11 Overlap
              1039 0127  ld   [$27]       4758  ld([v6502_P])                   #10
              103a 4001  ora  $01         4759  ora(v6502_Cflag)                #11
                                          4760  label('.sec12')
.sec12:       103b c227  st   [$27]       4761  st([v6502_P])                   #12
              103c 0200  nop              4762  nop()                           #13
                                          4763  label('.next14')
.next14:      103d e020  jmp  y,$20       4764  jmp(Y,'v6502_next')             #14
              103e 00f8  ld   $f8         4765  ld(-16/2)                       #15
                                          4766
                                          4767  label('v6502_BPL')
v6502_BPL:    103f 0129  ld   [$29]       4768  ld([v6502_Qn])                  #9
              1040 e875  blt  .next12     4769  bmi('.next12')                  #10
              1041 f45b  bge  .branch13   4770  bpl('.branch13')                #11
                                          4771  #nop()                          #12 Overlap
                                          4772  label('v6502_BMI')
v6502_BMI:    1042 0129  ld   [$29]       4773  ld([v6502_Qn])                  #9,12
              1043 f475  bge  .next12     4774  bpl('.next12')                  #10
              1044 e85b  blt  .branch13   4775  bmi('.branch13')                #11
                                          4776  #nop()                          #12 Overlap
                                          4777  label('v6502_BVC')
v6502_BVC:    1045 0127  ld   [$27]       4778  ld([v6502_P])                   #9,12
              1046 2080  anda $80         4779  anda(v6502_Vemu)                #10
              1047 f05b  beq  .branch13   4780  beq('.branch13')                #11
              1048 ec3d  bne  .next14     4781  bne('.next14')                  #12
                                          4782  #nop()                          #13 Overlap
                                          4783  label('v6502_BVS')
v6502_BVS:    1049 0127  ld   [$27]       4784  ld([v6502_P])                   #9,13
              104a 2080  anda $80         4785  anda(v6502_Vemu)                #10
              104b ec5b  bne  .branch13   4786  bne('.branch13')                #11
              104c f03d  beq  .next14     4787  beq('.next14')                  #12
                                          4788  #nop()                          #13 Overlap
                                          4789  label('v6502_BCC')
v6502_BCC:    104d 0127  ld   [$27]       4790  ld([v6502_P])                   #9,13
              104e 2001  anda $01         4791  anda(v6502_Cflag)               #10
              104f f05b  beq  .branch13   4792  beq('.branch13')                #11
              1050 ec3d  bne  .next14     4793  bne('.next14')                  #12
                                          4794  #nop()                          #13 Overlap
                                          4795  label('v6502_BCS')
v6502_BCS:    1051 0127  ld   [$27]       4796  ld([v6502_P])                   #9,13
              1052 2001  anda $01         4797  anda(v6502_Cflag)               #10
              1053 ec5b  bne  .branch13   4798  bne('.branch13')                #11
              1054 f03d  beq  .next14     4799  beq('.next14')                  #12
                                          4800  #nop()                          #13 Overlap
                                          4801  label('v6502_BNE')
v6502_BNE:    1055 0128  ld   [$28]       4802  ld([v6502_Qz])                  #9,13
              1056 f075  beq  .next12     4803  beq('.next12')                  #10
              1057 ec5b  bne  .branch13   4804  bne('.branch13')                #11
                                          4805  #nop()                          #12 Overlap
                                          4806  label('v6502_BEQ')
v6502_BEQ:    1058 0128  ld   [$28]       4807  ld([v6502_Qz])                  #9,12
              1059 ec75  bne  .next12     4808  bne('.next12')                  #10
              105a f05b  beq  .branch13   4809  beq('.branch13')                #11
                                          4810  #nop()                          #12 Overlap
                                          4811  label('.branch13')
.branch13:    105b 0124  ld   [$24]       4812  ld([v6502_ADL])                 #13,12 PC + offset
              105c 811a  adda [$1a]       4813  adda([v6502_PCL])               #14
              105d c21a  st   [$1a]       4814  st([v6502_PCL])                 #15
              105e e862  blt  .bra0       4815  bmi('.bra0')                    #16 Carry
              105f a124  suba [$24]       4816  suba([v6502_ADL])               #17
              1060 fc64  bra  .bra1       4817  bra('.bra1')                    #18
              1061 4124  ora  [$24]       4818  ora([v6502_ADL])                #19
                                          4819  label('.bra0')
.bra0:        1062 2124  anda [$24]       4820  anda([v6502_ADL])               #18
              1063 0200  nop              4821  nop()                           #19
                                          4822  label('.bra1')
.bra1:        1064 3080  anda $80,x       4823  anda(0x80,X)                    #20
              1065 0500  ld   [x]         4824  ld([X])                         #21
              1066 8125  adda [$25]       4825  adda([v6502_ADH])               #22
              1067 811b  adda [$1b]       4826  adda([v6502_PCH])               #23
              1068 c21b  st   [$1b]       4827  st([v6502_PCH])                 #24
              1069 0200  nop              4828  nop()                           #25
              106a e020  jmp  y,$20       4829  jmp(Y,'v6502_next')             #26
              106b 00f2  ld   $f2         4830  ld(-28/2)                       #27
                                          4831
                                          4832  label('v6502_INX')
v6502_INX:    106c 0200  nop              4833  nop()                           #9
              106d 012a  ld   [$2a]       4834  ld([v6502_X])                   #10
              106e 8001  adda $01         4835  adda(1)                         #11
              106f c22a  st   [$2a]       4836  st([v6502_X])                   #12
                                          4837  label('.inx13')
.inx13:       1070 c228  st   [$28]       4838  st([v6502_Qz])                  #13 Z flag
              1071 c229  st   [$29]       4839  st([v6502_Qn])                  #14 N flag
              1072 00f7  ld   $f7         4840  ld(-18/2)                       #15
              1073 e020  jmp  y,$20       4841  jmp(Y,'v6502_next')             #16
              1074 0200  nop              4842  nop()                           #17
                                          4843
                                          4844  label('.next12')
.next12:      1075 e020  jmp  y,$20       4845  jmp(Y,'v6502_next')             #12
              1076 00f9  ld   $f9         4846  ld(-14/2)                       #13
                                          4847
                                          4848  label('v6502_DEX')
v6502_DEX:    1077 012a  ld   [$2a]       4849  ld([v6502_X])                   #9
              1078 a001  suba $01         4850  suba(1)                         #10
              1079 fc70  bra  .inx13      4851  bra('.inx13')                   #11
              107a c22a  st   [$2a]       4852  st([v6502_X])                   #12
                                          4853
                                          4854  label('v6502_INY')
v6502_INY:    107b 012b  ld   [$2b]       4855  ld([v6502_Y])                   #9
              107c 8001  adda $01         4856  adda(1)                         #10
              107d fc70  bra  .inx13      4857  bra('.inx13')                   #11
              107e c22b  st   [$2b]       4858  st([v6502_Y])                   #12
                                          4859
                                          4860  label('v6502_DEY')
v6502_DEY:    107f 012b  ld   [$2b]       4861  ld([v6502_Y])                   #9
              1080 a001  suba $01         4862  suba(1)                         #10
              1081 fc70  bra  .inx13      4863  bra('.inx13')                   #11
              1082 c22b  st   [$2b]       4864  st([v6502_Y])                   #12
                                          4865
                                          4866  label('v6502_NOP')
v6502_NOP:    1083 00fa  ld   $fa         4867  ld(-12/2)                       #9
              1084 e020  jmp  y,$20       4868  jmp(Y,'v6502_next')             #10
                                          4869  #nop()                          #11 Overlap
                                          4870  #
                                          4871  label('v6502_AND')
v6502_AND:    1085 1525  ld   [$25],y     4872  ld([v6502_ADH],Y)               #9,11
              1086 0118  ld   [$18]       4873  ld([v6502_A])                   #10
              1087 fc90  bra  .eor13      4874  bra('.eor13')                   #11
              1088 2d00  anda [y,x]       4875  anda([Y,X])                     #12
                                          4876
                                          4877  label('v6502_ORA')
v6502_ORA:    1089 1525  ld   [$25],y     4878  ld([v6502_ADH],Y)               #9
              108a 0118  ld   [$18]       4879  ld([v6502_A])                   #10
              108b fc90  bra  .eor13      4880  bra('.eor13')                   #11
                                          4881  label('v6502_EOR')
v6502_EOR:    108c 4d00  ora  [y,x]       4882  ora([Y,X])                      #12,9
                                          4883  #
                                          4884  #label('v6502_EOR')
                                          4885  #nop()                          #9 Overlap
              108d 1525  ld   [$25],y     4886  ld([v6502_ADH],Y)               #10
              108e 0118  ld   [$18]       4887  ld([v6502_A])                   #11
              108f 6d00  xora [y,x]       4888  xora([Y,X])                     #12
                                          4889  label('.eor13')
.eor13:       1090 c218  st   [$18]       4890  st([v6502_A])                   #13
              1091 c228  st   [$28]       4891  st([v6502_Qz])                  #14 Z flag
              1092 c229  st   [$29]       4892  st([v6502_Qn])                  #15 N flag
              1093 140e  ld   $0e,y       4893  ld(hi('v6502_next'),Y)          #16
              1094 00f6  ld   $f6         4894  ld(-20/2)                       #17
              1095 e020  jmp  y,$20       4895  jmp(Y,'v6502_next')             #18
                                          4896  #nop()                          #19 Overlap
                                          4897  #
                                          4898  label('v6502_JMP1')
v6502_JMP1:   1096 140d  ld   $0d,y       4899  ld(hi('v6502_jmp1'),Y)          #9,19 JMP $DDDD
              1097 e0d1  jmp  y,$d1       4900  jmp(Y,'v6502_jmp1')             #10
                                          4901  #nop()                          #11 Overlap
                                          4902  label('v6502_JMP2')
v6502_JMP2:   1098 140d  ld   $0d,y       4903  ld(hi('v6502_jmp2'),Y)          #9 JMP ($DDDD)
              1099 e0d9  jmp  y,$d9       4904  jmp(Y,'v6502_jmp2')             #10
                                          4905  #nop()                          #11 Overlap
                                          4906  label('v6502_JSR')
v6502_JSR:    109a 011c  ld   [$1c]       4907  ld([v6502_S])                   #9,11
              109b a002  suba $02         4908  suba(2)                         #10
              109c d21c  st   [$1c],x     4909  st([v6502_S],X)                 #11
              109d 1400  ld   $00,y       4910  ld(v6502_Stack>>8,Y)            #12
              109e 011b  ld   [$1b]       4911  ld([v6502_PCH])                 #13 Let ADL,ADH point to L operand
              109f c225  st   [$25]       4912  st([v6502_ADH])                 #14
              10a0 011a  ld   [$1a]       4913  ld([v6502_PCL])                 #15
              10a1 c224  st   [$24]       4914  st([v6502_ADL])                 #16
              10a2 8001  adda $01         4915  adda(1)                         #17 Push ++PC
              10a3 c21a  st   [$1a]       4916  st([v6502_PCL])                 #18 Let PCL,PCH point to H operand
              10a4 de00  st   [y,x++]     4917  st([Y,Xpp])                     #19
              10a5 f0a8  beq  $10a8       4918  beq(pc()+3)                     #20
              10a6 fca9  bra  $10a9       4919  bra(pc()+3)                     #21
              10a7 0000  ld   $00         4920  ld(0)                           #22
              10a8 0001  ld   $01         4921  ld(1)                           #22(!)
              10a9 811b  adda [$1b]       4922  adda([v6502_PCH])               #23
              10aa c21b  st   [$1b]       4923  st([v6502_PCH])                 #24
              10ab ce00  st   [y,x]       4924  st([Y,X])                       #25
              10ac 1124  ld   [$24],x     4925  ld([v6502_ADL],X)               #26 Fetch L
              10ad 1525  ld   [$25],y     4926  ld([v6502_ADH],Y)               #27
              10ae 0d00  ld   [y,x]       4927  ld([Y,X])                       #28
              10af 111a  ld   [$1a],x     4928  ld([v6502_PCL],X)               #29 Fetch H
              10b0 c21a  st   [$1a]       4929  st([v6502_PCL])                 #30
              10b1 151b  ld   [$1b],y     4930  ld([v6502_PCH],Y)               #31
              10b2 0d00  ld   [y,x]       4931  ld([Y,X])                       #32
              10b3 c21b  st   [$1b]       4932  st([v6502_PCH])                 #33
              10b4 140e  ld   $0e,y       4933  ld(hi('v6502_next'),Y)          #34
              10b5 00ed  ld   $ed         4934  ld(-38/2)                       #35
              10b6 e020  jmp  y,$20       4935  jmp(Y,'v6502_next')             #36
                                          4936  #nop()                          #37 Overlap
                                          4937  #
                                          4938  label('v6502_INC')
v6502_INC:    10b7 1411  ld   $11,y       4939  ld(hi('v6502_inc'),Y)           #9,37
              10b8 e00e  jmp  y,$0e       4940  jmp(Y,'v6502_inc')              #10
                                          4941  #nop()                          #11 Overlap
                                          4942  label('v6502_LDA')
v6502_LDA:    10b9 1411  ld   $11,y       4943  ld(hi('v6502_lda'),Y)           #9,11
              10ba e018  jmp  y,$18       4944  jmp(Y,'v6502_lda')              #10
                                          4945  #nop()                          #11 Overlap
                                          4946  label('v6502_LDX')
v6502_LDX:    10bb 1411  ld   $11,y       4947  ld(hi('v6502_ldx'),Y)           #9,11
              10bc e022  jmp  y,$22       4948  jmp(Y,'v6502_ldx')              #10
                                          4949  #nop()                          #11 Overlap
                                          4950  label('v6502_LDX2')
v6502_LDX2:   10bd 1411  ld   $11,y       4951  ld(hi('v6502_ldx2'),Y)          #9,11
              10be e02a  jmp  y,$2a       4952  jmp(Y,'v6502_ldx2')             #10
                                          4953  #nop()                          #11 Overlap
                                          4954  label('v6502_LDY')
v6502_LDY:    10bf 1411  ld   $11,y       4955  ld(hi('v6502_ldy'),Y)           #9,11
              10c0 e026  jmp  y,$26       4956  jmp(Y,'v6502_ldy')              #10
                                          4957  #nop()                          #11 Overlap
                                          4958  label('v6502_STA')
v6502_STA:    10c1 1411  ld   $11,y       4959  ld(hi('v6502_sta'),Y)           #9,11
              10c2 e034  jmp  y,$34       4960  jmp(Y,'v6502_sta')              #10
                                          4961  #nop()                          #11 Overlap
                                          4962  label('v6502_STX')
v6502_STX:    10c3 1411  ld   $11,y       4963  ld(hi('v6502_stx'),Y)           #9,11
              10c4 e03a  jmp  y,$3a       4964  jmp(Y,'v6502_stx')              #10
                                          4965  #nop()                          #11 Overlap
                                          4966  label('v6502_STX2')
v6502_STX2:   10c5 1411  ld   $11,y       4967  ld(hi('v6502_stx2'),Y)          #9,11
              10c6 e040  jmp  y,$40       4968  jmp(Y,'v6502_stx2')             #10
                                          4969  #nop()                          #11 Overlap
                                          4970  label('v6502_STY')
v6502_STY:    10c7 1411  ld   $11,y       4971  ld(hi('v6502_sty'),Y)           #9,11
              10c8 e048  jmp  y,$48       4972  jmp(Y,'v6502_sty')              #10
                                          4973  #nop()                          #11 Overlap
                                          4974  label('v6502_TAX')
v6502_TAX:    10c9 1411  ld   $11,y       4975  ld(hi('v6502_tax'),Y)           #9,11
              10ca e04d  jmp  y,$4d       4976  jmp(Y,'v6502_tax')              #10
                                          4977  #nop()                          #11 Overlap
                                          4978  label('v6502_TAY')
v6502_TAY:    10cb 1411  ld   $11,y       4979  ld(hi('v6502_tay'),Y)           #9,11
              10cc e062  jmp  y,$62       4980  jmp(Y,'v6502_tay')              #10
                                          4981  #nop()                          #11 Overlap
                                          4982  label('v6502_TXA')
v6502_TXA:    10cd 1411  ld   $11,y       4983  ld(hi('v6502_txa'),Y)           #9,11
              10ce e065  jmp  y,$65       4984  jmp(Y,'v6502_txa')              #10
                                          4985  #nop()                          #11 Overlap
                                          4986  label('v6502_TYA')
v6502_TYA:    10cf 1411  ld   $11,y       4987  ld(hi('v6502_tya'),Y)           #9,11
              10d0 e068  jmp  y,$68       4988  jmp(Y,'v6502_tya')              #10
                                          4989  #nop()                          #11 Overlap
                                          4990  label('v6502_CLV')
v6502_CLV:    10d1 1411  ld   $11,y       4991  ld(hi('v6502_clv'),Y)           #9,11
              10d2 e076  jmp  y,$76       4992  jmp(Y,'v6502_clv')              #10
                                          4993  #nop()                          #11 Overlap
                                          4994  label('v6502_RTI')
v6502_RTI:    10d3 1411  ld   $11,y       4995  ld(hi('v6502_rti'),Y)           #9,11
              10d4 e0e4  jmp  y,$e4       4996  jmp(Y,'v6502_rti')              #10
                                          4997  #nop()                          #11 Overlap
                                          4998  label('v6502_ROR')
v6502_ROR:    10d5 140d  ld   $0d,y       4999  ld(hi('v6502_ror'),Y)           #9,11
              10d6 e08f  jmp  y,$8f       5000  jmp(Y,'v6502_ror')              #10
                                          5001  #nop()                          #11 Overlap
                                          5002  label('v6502_LSR')
v6502_LSR:    10d7 140d  ld   $0d,y       5003  ld(hi('v6502_lsr'),Y)           #9,11
              10d8 e0a9  jmp  y,$a9       5004  jmp(Y,'v6502_lsr')              #10
                                          5005  #nop()                          #11 Overlap
                                          5006  label('v6502_PHA')
v6502_PHA:    10d9 140d  ld   $0d,y       5007  ld(hi('v6502_pha'),Y)           #9,11
              10da e0ee  jmp  y,$ee       5008  jmp(Y,'v6502_pha')              #10
                                          5009  #nop()                          #11 Overlap
                                          5010  label('v6502_CLI')
v6502_CLI:    10db 1411  ld   $11,y       5011  ld(hi('v6502_cli'),Y)           #9,11
              10dc e06b  jmp  y,$6b       5012  jmp(Y,'v6502_cli')              #10
                                          5013  #nop()                          #11 Overlap
                                          5014  label('v6502_RTS')
v6502_RTS:    10dd 1411  ld   $11,y       5015  ld(hi('v6502_rts'),Y)           #9,11
              10de e08f  jmp  y,$8f       5016  jmp(Y,'v6502_rts')              #10
                                          5017  #nop()                          #11 Overlap
                                          5018  label('v6502_PLA')
v6502_PLA:    10df 140d  ld   $0d,y       5019  ld(hi('v6502_pla'),Y)           #9,11
              10e0 e0e3  jmp  y,$e3       5020  jmp(Y,'v6502_pla')              #10
                                          5021  #nop()                          #11 Overlap
                                          5022  label('v6502_SEI')
v6502_SEI:    10e1 1411  ld   $11,y       5023  ld(hi('v6502_sei'),Y)           #9,11
              10e2 e06e  jmp  y,$6e       5024  jmp(Y,'v6502_sei')              #10
                                          5025  #nop()                          #11 Overlap
                                          5026  label('v6502_TXS')
v6502_TXS:    10e3 1411  ld   $11,y       5027  ld(hi('v6502_txs'),Y)           #9,11
              10e4 e05e  jmp  y,$5e       5028  jmp(Y,'v6502_txs')              #10
                                          5029  #nop()                          #11 Overlap
                                          5030  label('v6502_TSX')
v6502_TSX:    10e5 1411  ld   $11,y       5031  ld(hi('v6502_tsx'),Y)           #9,11
              10e6 e054  jmp  y,$54       5032  jmp(Y,'v6502_tsx')              #10
                                          5033  #nop()                          #11 Overlap
                                          5034  label('v6502_CPY')
v6502_CPY:    10e7 1411  ld   $11,y       5035  ld(hi('v6502_cpy'),Y)           #9,11
              10e8 e0bd  jmp  y,$bd       5036  jmp(Y,'v6502_cpy')              #10
                                          5037  #nop()                          #11 Overlap
                                          5038  label('v6502_CMP')
v6502_CMP:    10e9 1411  ld   $11,y       5039  ld(hi('v6502_cmp'),Y)           #9,11
              10ea e0be  jmp  y,$be       5040  jmp(Y,'v6502_cmp')              #10
                                          5041  #nop()                          #11 Overlap
                                          5042  label('v6502_DEC')
v6502_DEC:    10eb 1411  ld   $11,y       5043  ld(hi('v6502_dec'),Y)           #9,11
              10ec e005  jmp  y,$05       5044  jmp(Y,'v6502_dec')              #10
                                          5045  #nop()                          #11 Overlap
                                          5046  label('v6502_CLD')
v6502_CLD:    10ed 1411  ld   $11,y       5047  ld(hi('v6502_cld'),Y)           #9,11
              10ee e071  jmp  y,$71       5048  jmp(Y,'v6502_cld')              #10
                                          5049  #nop()                          #11 Overlap
                                          5050  label('v6502_CPX')
v6502_CPX:    10ef 1411  ld   $11,y       5051  ld(hi('v6502_cpx'),Y)           #9,11
              10f0 e0bb  jmp  y,$bb       5052  jmp(Y,'v6502_cpx')              #10
                                          5053  #nop()                          #11 Overlap
                                          5054  label('v6502_ASL')
v6502_ASL:    10f1 140d  ld   $0d,y       5055  ld(hi('v6502_asl'),Y)           #9,11
              10f2 e0cb  jmp  y,$cb       5056  jmp(Y,'v6502_asl')              #10
                                          5057  #nop()                          #11 Overlap
                                          5058  label('v6502_PHP')
v6502_PHP:    10f3 1411  ld   $11,y       5059  ld(hi('v6502_php'),Y)           #9,11
              10f4 e0a2  jmp  y,$a2       5060  jmp(Y,'v6502_php')              #10
                                          5061  #nop()                          #11 Overlap
                                          5062  label('v6502_BIT')
v6502_BIT:    10f5 1411  ld   $11,y       5063  ld(hi('v6502_bit'),Y)           #9
              10f6 e07d  jmp  y,$7d       5064  jmp(Y,'v6502_bit')              #10
                                          5065  #nop()                          #11 Overlap
                                          5066  label('v6502_ROL')
v6502_ROL:    10f7 140d  ld   $0d,y       5067  ld(hi('v6502_rol'),Y)           #9
              10f8 e0b8  jmp  y,$b8       5068  jmp(Y,'v6502_rol')              #10
                                          5069  #nop()                          #11 Overlap
                                          5070  label('v6502_PLP')
v6502_PLP:    10f9 1411  ld   $11,y       5071  ld(hi('v6502_plp'),Y)           #9
              10fa e0d4  jmp  y,$d4       5072  jmp(Y,'v6502_plp')              #10
                                          5073  #nop()                          #11 Overlap
                                          5074  label('v6502_SED')              # Decimal mode not implemented
v6502_SED:    10fb 1411  ld   $11,y       5075  ld(hi('v6502_sed'),Y)           #9,11
              10fc e074  jmp  y,$74       5076  jmp(Y,'v6502_sed')              #10
                                          5077  #nop()                          #11 Overlap
                                          5078  label('v6502_ILL') # All illegal opcodes map to BRK, except $FF which will crash
                                          5079  label('v6502_BRK')
v6502_ILL:
v6502_BRK:    10fd 140d  ld   $0d,y       5080  ld(hi('v6502_brk'),Y)           #9
              10fe e0f6  jmp  y,$f6       5081  jmp(Y,'v6502_brk')              #10
                                          5082  #nop()                          #11 Overlap
                                          5083
                                          5084  while pc()&255 < 255:
                                          5085    nop()
                                          5086
                                          5087  # `v6502_RESUME' is the interpreter's secondary entry point for when
                                          5088  # the opcode and operands were already fetched, just before the last hPulse.
                                          5089  # It must be at $xxff, prefably somewhere in v6502's own code pages.
                                          5090  label('v6502_RESUME')
                                          5091  assert (pc()&255) == 255
v6502_RESUME: 10ff a005  suba $05         5092  suba(v6502_adjust)              #0,11 v6502 secondary entry point
                                          5093  # --- Page boundary ---
                                          5094  align(0x100,size=0x200)
              1100 c215  st   [$15]       5095  st([vTicks])                    #1
              1101 1124  ld   [$24],x     5096  ld([v6502_ADL],X)               #2
              1102 140f  ld   $0f,y       5097  ld(hi('v6502_execute'),Y)       #3
              1103 e126  jmp  y,[$26]     5098  jmp(Y,[v6502_IR])               #4
              1104 fcff  bra  $ff         5099  bra(255)                        #5
                                          5100
                                          5101  label('v6502_dec')
v6502_dec:    1105 1525  ld   [$25],y     5102  ld([v6502_ADH],Y)               #12
              1106 0d00  ld   [y,x]       5103  ld([Y,X])                       #13
              1107 a001  suba $01         5104  suba(1)                         #14
              1108 ce00  st   [y,x]       5105  st([Y,X])                       #15
              1109 c228  st   [$28]       5106  st([v6502_Qz])                  #16 Z flag
              110a c229  st   [$29]       5107  st([v6502_Qn])                  #17 N flag
              110b 140e  ld   $0e,y       5108  ld(hi('v6502_next'),Y)          #18
              110c 00f5  ld   $f5         5109  ld(-22/2)                       #19
              110d e020  jmp  y,$20       5110  jmp(Y,'v6502_next')             #20
                                          5111  #nop()                          #21 Overlap
                                          5112  #
                                          5113  label('v6502_inc')
v6502_inc:    110e 1525  ld   [$25],y     5114  ld([v6502_ADH],Y)               #12,22
              110f 0d00  ld   [y,x]       5115  ld([Y,X])                       #13
              1110 8001  adda $01         5116  adda(1)                         #14
              1111 ce00  st   [y,x]       5117  st([Y,X])                       #15
              1112 c228  st   [$28]       5118  st([v6502_Qz])                  #16 Z flag
              1113 c229  st   [$29]       5119  st([v6502_Qn])                  #17 N flag
              1114 140e  ld   $0e,y       5120  ld(hi('v6502_next'),Y)          #18
              1115 00f5  ld   $f5         5121  ld(-22/2)                       #19
              1116 e020  jmp  y,$20       5122  jmp(Y,'v6502_next')             #20
              1117 0200  nop              5123  nop()                           #21
                                          5124
                                          5125  label('v6502_lda')
v6502_lda:    1118 0200  nop              5126  nop()                           #12
              1119 1525  ld   [$25],y     5127  ld([v6502_ADH],Y)               #13
              111a 0d00  ld   [y,x]       5128  ld([Y,X])                       #14
              111b c218  st   [$18]       5129  st([v6502_A])                   #15
                                          5130  label('.lda16')
.lda16:       111c c228  st   [$28]       5131  st([v6502_Qz])                  #16 Z flag
              111d c229  st   [$29]       5132  st([v6502_Qn])                  #17 N flag
              111e 0200  nop              5133  nop()                           #18
              111f 140e  ld   $0e,y       5134  ld(hi('v6502_next'),Y)          #19
              1120 e020  jmp  y,$20       5135  jmp(Y,'v6502_next')             #20
              1121 00f5  ld   $f5         5136  ld(-22/2)                       #21
                                          5137
                                          5138  label('v6502_ldx')
v6502_ldx:    1122 1525  ld   [$25],y     5139  ld([v6502_ADH],Y)               #12
              1123 0d00  ld   [y,x]       5140  ld([Y,X])                       #13
              1124 fc1c  bra  .lda16      5141  bra('.lda16')                   #14
              1125 c22a  st   [$2a]       5142  st([v6502_X])                   #15
                                          5143
                                          5144  label('v6502_ldy')
v6502_ldy:    1126 1525  ld   [$25],y     5145  ld([v6502_ADH],Y)               #12
              1127 0d00  ld   [y,x]       5146  ld([Y,X])                       #13
              1128 fc1c  bra  .lda16      5147  bra('.lda16')                   #14
              1129 c22b  st   [$2b]       5148  st([v6502_Y])                   #15
                                          5149
                                          5150  label('v6502_ldx2')
v6502_ldx2:   112a 0124  ld   [$24]       5151  ld([v6502_ADL])                 #12 Special case $B6: LDX $DD,Y
              112b a12a  suba [$2a]       5152  suba([v6502_X])                 #13 Undo X offset
              112c 912b  adda [$2b],x     5153  adda([v6502_Y],X)               #14 Apply Y instead
              112d 0500  ld   [x]         5154  ld([X])                         #15
              112e c22a  st   [$2a]       5155  st([v6502_X])                   #16
              112f c228  st   [$28]       5156  st([v6502_Qz])                  #17 Z flag
              1130 c229  st   [$29]       5157  st([v6502_Qn])                  #18 N flag
              1131 140e  ld   $0e,y       5158  ld(hi('v6502_next'),Y)          #19
              1132 e020  jmp  y,$20       5159  jmp(Y,'v6502_next')             #20
              1133 00f5  ld   $f5         5160  ld(-22/2)                       #21
                                          5161
                                          5162  label('v6502_sta')
v6502_sta:    1134 1525  ld   [$25],y     5163  ld([v6502_ADH],Y)               #12
              1135 0118  ld   [$18]       5164  ld([v6502_A])                   #13
              1136 ce00  st   [y,x]       5165  st([Y,X])                       #14
              1137 140e  ld   $0e,y       5166  ld(hi('v6502_next'),Y)          #15
              1138 e020  jmp  y,$20       5167  jmp(Y,'v6502_next')             #16
              1139 00f7  ld   $f7         5168  ld(-18/2)                       #17
                                          5169
                                          5170  label('v6502_stx')
v6502_stx:    113a 1525  ld   [$25],y     5171  ld([v6502_ADH],Y)               #12
              113b 012a  ld   [$2a]       5172  ld([v6502_X])                   #13
              113c ce00  st   [y,x]       5173  st([Y,X])                       #14
              113d 140e  ld   $0e,y       5174  ld(hi('v6502_next'),Y)          #15
              113e e020  jmp  y,$20       5175  jmp(Y,'v6502_next')             #16
              113f 00f7  ld   $f7         5176  ld(-18/2)                       #17
                                          5177
                                          5178  label('v6502_stx2')
v6502_stx2:   1140 0124  ld   [$24]       5179  ld([v6502_ADL])                 #12 Special case $96: STX $DD,Y
              1141 a12a  suba [$2a]       5180  suba([v6502_X])                 #13 Undo X offset
              1142 912b  adda [$2b],x     5181  adda([v6502_Y],X)               #14 Apply Y instead
              1143 012a  ld   [$2a]       5182  ld([v6502_X])                   #15
              1144 c600  st   [x]         5183  st([X])                         #16
              1145 140e  ld   $0e,y       5184  ld(hi('v6502_next'),Y)          #17
              1146 e020  jmp  y,$20       5185  jmp(Y,'v6502_next')             #18
              1147 00f6  ld   $f6         5186  ld(-20/2)                       #19
                                          5187
                                          5188  label('v6502_sty')
v6502_sty:    1148 1525  ld   [$25],y     5189  ld([v6502_ADH],Y)               #12
              1149 012b  ld   [$2b]       5190  ld([v6502_Y])                   #13
              114a ce00  st   [y,x]       5191  st([Y,X])                       #14
              114b 140e  ld   $0e,y       5192  ld(hi('v6502_next'),Y)          #15
              114c e020  jmp  y,$20       5193  jmp(Y,'v6502_next')             #16
                                          5194  label('v6502_tax')
v6502_tax:    114d 00f7  ld   $f7         5195  ld(-18/2)                       #17,12
                                          5196  #
                                          5197  #label('v6502_tax')
                                          5198  #nop()                          #12 Overlap
              114e 0118  ld   [$18]       5199  ld([v6502_A])                   #13
              114f c22a  st   [$2a]       5200  st([v6502_X])                   #14
                                          5201  label('.tax15')
.tax15:       1150 c228  st   [$28]       5202  st([v6502_Qz])                  #15 Z flag
              1151 c229  st   [$29]       5203  st([v6502_Qn])                  #16 N flag
              1152 140e  ld   $0e,y       5204  ld(hi('v6502_next'),Y)          #17
              1153 e020  jmp  y,$20       5205  jmp(Y,'v6502_next')             #18
                                          5206  label('v6502_tsx')
v6502_tsx:    1154 00f6  ld   $f6         5207  ld(-20/2)                       #19
                                          5208  #
                                          5209  #label('v6502_tsx')
                                          5210  #nop()                          #12 Overlap
              1155 011c  ld   [$1c]       5211  ld([v6502_S])                   #13
              1156 a001  suba $01         5212  suba(1)                         #14 Shift down on export
              1157 c22a  st   [$2a]       5213  st([v6502_X])                   #15
                                          5214  label('.tsx16')
.tsx16:       1158 c228  st   [$28]       5215  st([v6502_Qz])                  #16 Z flag
              1159 c229  st   [$29]       5216  st([v6502_Qn])                  #17 N flag
              115a 0200  nop              5217  nop()                           #18
              115b 140e  ld   $0e,y       5218  ld(hi('v6502_next'),Y)          #19
              115c e020  jmp  y,$20       5219  jmp(Y,'v6502_next')             #20
              115d 00f5  ld   $f5         5220  ld(-22/2)                       #21
                                          5221
                                          5222  label('v6502_txs')
v6502_txs:    115e 012a  ld   [$2a]       5223  ld([v6502_X])                   #12
              115f 8001  adda $01         5224  adda(1)                         #13 Shift up on import
              1160 fc58  bra  .tsx16      5225  bra('.tsx16')                   #14
              1161 c21c  st   [$1c]       5226  st([v6502_S])                   #15
                                          5227
                                          5228  label('v6502_tay')
v6502_tay:    1162 0118  ld   [$18]       5229  ld([v6502_A])                   #12
              1163 fc50  bra  .tax15      5230  bra('.tax15')                   #13
              1164 c22b  st   [$2b]       5231  st([v6502_Y])                   #14
                                          5232
                                          5233  label('v6502_txa')
v6502_txa:    1165 012a  ld   [$2a]       5234  ld([v6502_X])                   #12
              1166 fc50  bra  .tax15      5235  bra('.tax15')                   #13
              1167 c218  st   [$18]       5236  st([v6502_A])                   #14
                                          5237
                                          5238  label('v6502_tya')
v6502_tya:    1168 012b  ld   [$2b]       5239  ld([v6502_Y])                   #12
              1169 fc50  bra  .tax15      5240  bra('.tax15')                   #13
              116a c218  st   [$18]       5241  st([v6502_A])                   #14
                                          5242
                                          5243  label('v6502_cli')
v6502_cli:    116b 0127  ld   [$27]       5244  ld([v6502_P])                   #12
              116c fc79  bra  .clv15      5245  bra('.clv15')                   #13
              116d 20fb  anda $fb         5246  anda(~v6502_Iflag)              #14
                                          5247
                                          5248  label('v6502_sei')
v6502_sei:    116e 0127  ld   [$27]       5249  ld([v6502_P])                   #12
              116f fc79  bra  .clv15      5250  bra('.clv15')                   #13
              1170 4004  ora  $04         5251  ora(v6502_Iflag)                #14
                                          5252
                                          5253  label('v6502_cld')
v6502_cld:    1171 0127  ld   [$27]       5254  ld([v6502_P])                   #12
              1172 fc79  bra  .clv15      5255  bra('.clv15')                   #13
              1173 20f7  anda $f7         5256  anda(~v6502_Dflag)              #14
                                          5257
                                          5258  label('v6502_sed')
v6502_sed:    1174 0127  ld   [$27]       5259  ld([v6502_P])                   #12
              1175 fc79  bra  .clv15      5260  bra('.clv15')                   #13
                                          5261  label('v6502_clv')
v6502_clv:    1176 4008  ora  $08         5262  ora(v6502_Dflag)                #14,12 Overlap
                                          5263  #
                                          5264  #label('v6502_clv')
                                          5265  #nop()                          #12
              1177 0127  ld   [$27]       5266  ld([v6502_P])                   #13
              1178 207f  anda $7f         5267  anda(~v6502_Vemu)               #14
                                          5268  label('.clv15')
.clv15:       1179 c227  st   [$27]       5269  st([v6502_P])                   #15
              117a 140e  ld   $0e,y       5270  ld(hi('v6502_next'),Y)          #16
              117b 00f6  ld   $f6         5271  ld(-20/2)                       #17
              117c e020  jmp  y,$20       5272  jmp(Y,'v6502_next')             #18
                                          5273  label('v6502_bit')
v6502_bit:    117d 0200  nop              5274  nop()                           #19,12
                                          5275  #
                                          5276  #label('v6502_bit')
                                          5277  #nop()                          #12 Overlap
              117e 1124  ld   [$24],x     5278  ld([v6502_ADL],X)               #13
              117f 1525  ld   [$25],y     5279  ld([v6502_ADH],Y)               #14
              1180 0d00  ld   [y,x]       5280  ld([Y,X])                       #15
              1181 c229  st   [$29]       5281  st([v6502_Qn])                  #16 N flag
              1182 2118  anda [$18]       5282  anda([v6502_A])                 #17 This is a reason we keep N and Z in separate bytes
              1183 c228  st   [$28]       5283  st([v6502_Qz])                  #18 Z flag
              1184 0127  ld   [$27]       5284  ld([v6502_P])                   #19
              1185 207f  anda $7f         5285  anda(~v6502_Vemu)               #20
              1186 c227  st   [$27]       5286  st([v6502_P])                   #21
              1187 0d00  ld   [y,x]       5287  ld([Y,X])                       #22
              1188 8200  adda ac          5288  adda(AC)                        #23
              1189 2080  anda $80         5289  anda(v6502_Vemu)                #24
              118a 4127  ora  [$27]       5290  ora([v6502_P])                  #25
              118b c227  st   [$27]       5291  st([v6502_P])                   #26 Update V
              118c 140e  ld   $0e,y       5292  ld(hi('v6502_next'),Y)          #27
              118d e020  jmp  y,$20       5293  jmp(Y,'v6502_next')             #28
              118e 00f1  ld   $f1         5294  ld(-30/2)                       #29
                                          5295
                                          5296  label('v6502_rts')
v6502_rts:    118f 011c  ld   [$1c]       5297  ld([v6502_S])                   #12
              1190 1200  ld   ac,x        5298  ld(AC,X)                        #13
              1191 8002  adda $02         5299  adda(2)                         #14
              1192 c21c  st   [$1c]       5300  st([v6502_S])                   #15
              1193 1400  ld   $00,y       5301  ld(0,Y)                         #16
              1194 0d00  ld   [y,x]       5302  ld([Y,X])                       #17
              1195 de00  st   [y,x++]     5303  st([Y,Xpp])                     #18 Just X++
              1196 8001  adda $01         5304  adda(1)                         #19
              1197 c21a  st   [$1a]       5305  st([v6502_PCL])                 #20
              1198 f09b  beq  $119b       5306  beq(pc()+3)                     #21
              1199 fc9c  bra  $119c       5307  bra(pc()+3)                     #22
              119a 0000  ld   $00         5308  ld(0)                           #23
              119b 0001  ld   $01         5309  ld(1)                           #23(!)
              119c 8d00  adda [y,x]       5310  adda([Y,X])                     #24
              119d c21b  st   [$1b]       5311  st([v6502_PCH])                 #25
              119e 0200  nop              5312  nop()                           #26
              119f 140e  ld   $0e,y       5313  ld(hi('v6502_next'),Y)          #27
              11a0 e020  jmp  y,$20       5314  jmp(Y,'v6502_next')             #28
              11a1 00f1  ld   $f1         5315  ld(-30/2)                       #29
                                          5316
                                          5317  label('v6502_php')
v6502_php:    11a2 011c  ld   [$1c]       5318  ld([v6502_S])                   #12
              11a3 a001  suba $01         5319  suba(1)                         #13
              11a4 d21c  st   [$1c],x     5320  st([v6502_S],X)                 #14
              11a5 0127  ld   [$27]       5321  ld([v6502_P])                   #15
              11a6 20bd  anda $bd         5322  anda(~v6502_Vflag&~v6502_Zflag) #16 Keep Vemu,B,D,I,C
              11a7 f4aa  bge  $11aa       5323  bpl(pc()+3)                     #17 V to bit 6 and clear N
              11a8 fcaa  bra  $11aa       5324  bra(pc()+2)                     #18
              11a9 60c0  xora $c0         5325  xora(v6502_Vflag^v6502_Vemu)    #19
              11aa c600  st   [x]         5326  st([X])                         #19,20
              11ab 0128  ld   [$28]       5327  ld([v6502_Qz])                  #21 Z flag
              11ac f0af  beq  $11af       5328  beq(pc()+3)                     #22
              11ad fcb0  bra  $11b0       5329  bra(pc()+3)                     #23
              11ae 0000  ld   $00         5330  ld(0)                           #24
              11af 0002  ld   $02         5331  ld(v6502_Zflag)                 #24(!)
              11b0 4500  ora  [x]         5332  ora([X])                        #25
              11b1 c600  st   [x]         5333  st([X])                         #26
              11b2 0129  ld   [$29]       5334  ld([v6502_Qn])                  #27 N flag
              11b3 2080  anda $80         5335  anda(0x80)                      #28
              11b4 4500  ora  [x]         5336  ora([X])                        #29
              11b5 4020  ora  $20         5337  ora(v6502_Uflag)                #30 Unused bit
              11b6 c600  st   [x]         5338  st([X])                         #31
              11b7 0200  nop              5339  nop()                           #32
              11b8 140e  ld   $0e,y       5340  ld(hi('v6502_next'),Y)          #33
              11b9 e020  jmp  y,$20       5341  jmp(Y,'v6502_next')             #34
              11ba 00ee  ld   $ee         5342  ld(-36/2)                       #35
                                          5343
                                          5344  label('v6502_cpx')
v6502_cpx:    11bb fcc0  bra  .cmp14      5345  bra('.cmp14')                   #12
              11bc 012a  ld   [$2a]       5346  ld([v6502_X])                   #13
                                          5347
                                          5348  label('v6502_cpy')
v6502_cpy:    11bd fcc0  bra  .cmp14      5349  bra('.cmp14')                   #12
                                          5350  label('v6502_cmp')
v6502_cmp:    11be 012b  ld   [$2b]       5351  ld([v6502_Y])                   #13,12
                                          5352  #
                                          5353  #label('v6502_cmp')             #12 Overlap
                                          5354  assert v6502_Cflag == 1
              11bf 0118  ld   [$18]       5355  ld([v6502_A])                   #13
                                          5356  label('.cmp14')
.cmp14:       11c0 1525  ld   [$25],y     5357  ld([v6502_ADH],Y)               #14
              11c1 e8c7  blt  .cmp17      5358  bmi('.cmp17')                   #15 Carry?
              11c2 ad00  suba [y,x]       5359  suba([Y,X])                     #16
              11c3 c228  st   [$28]       5360  st([v6502_Qz])                  #17 Z flag
              11c4 c229  st   [$29]       5361  st([v6502_Qn])                  #18 N flag
              11c5 fccb  bra  .cmp21      5362  bra('.cmp21')                   #19
              11c6 4d00  ora  [y,x]       5363  ora([Y,X])                      #20
                                          5364  label('.cmp17')
.cmp17:       11c7 c228  st   [$28]       5365  st([v6502_Qz])                  #17 Z flag
              11c8 c229  st   [$29]       5366  st([v6502_Qn])                  #18 N flag
              11c9 2d00  anda [y,x]       5367  anda([Y,X])                     #19
              11ca 0200  nop              5368  nop()                           #20
                                          5369  label('.cmp21')
.cmp21:       11cb 6080  xora $80         5370  xora(0x80)                      #21
              11cc 3080  anda $80,x       5371  anda(0x80,X)                    #22 Move carry to bit 0
              11cd 0127  ld   [$27]       5372  ld([v6502_P])                   #23 C flag
              11ce 20fe  anda $fe         5373  anda(~1)                        #24
              11cf 4500  ora  [x]         5374  ora([X])                        #25
              11d0 c227  st   [$27]       5375  st([v6502_P])                   #26
              11d1 140e  ld   $0e,y       5376  ld(hi('v6502_next'),Y)          #27
              11d2 e020  jmp  y,$20       5377  jmp(Y,'v6502_next')             #28
              11d3 00f1  ld   $f1         5378  ld(-30/2)                       #29
                                          5379
                                          5380  label('v6502_plp')
                                          5381  assert v6502_Nflag == 128
                                          5382  assert 2*v6502_Vflag == v6502_Vemu
v6502_plp:    11d4 011c  ld   [$1c]       5383  ld([v6502_S])                   #12
              11d5 1200  ld   ac,x        5384  ld(AC,X)                        #13
              11d6 8001  adda $01         5385  adda(1)                         #14
              11d7 c21c  st   [$1c]       5386  st([v6502_S])                   #15
              11d8 0500  ld   [x]         5387  ld([X])                         #16
              11d9 c229  st   [$29]       5388  st([v6502_Qn])                  #17 N flag
              11da 2002  anda $02         5389  anda(v6502_Zflag)               #18
              11db 6002  xora $02         5390  xora(v6502_Zflag)               #19
              11dc c228  st   [$28]       5391  st([v6502_Qz])                  #20 Z flag
              11dd 0500  ld   [x]         5392  ld([X])                         #21
              11de 207f  anda $7f         5393  anda(~v6502_Vemu)               #22 V to bit 7
              11df 8040  adda $40         5394  adda(v6502_Vflag)               #23
              11e0 c227  st   [$27]       5395  st([v6502_P])                   #24 All other flags
              11e1 140e  ld   $0e,y       5396  ld(hi('v6502_next'),Y)          #25
              11e2 e020  jmp  y,$20       5397  jmp(Y,'v6502_next')             #26
              11e3 00f2  ld   $f2         5398  ld(-28/2)                       #27
                                          5399
                                          5400  label('v6502_rti')
v6502_rti:    11e4 011c  ld   [$1c]       5401  ld([v6502_S])                   #12
              11e5 1200  ld   ac,x        5402  ld(AC,X)                        #13
              11e6 8003  adda $03         5403  adda(3)                         #14
              11e7 c21c  st   [$1c]       5404  st([v6502_S])                   #15
              11e8 0500  ld   [x]         5405  ld([X])                         #16
              11e9 c229  st   [$29]       5406  st([v6502_Qn])                  #17 N flag
              11ea 2002  anda $02         5407  anda(v6502_Zflag)               #18
              11eb 6002  xora $02         5408  xora(v6502_Zflag)               #19
              11ec c228  st   [$28]       5409  st([v6502_Qz])                  #20 Z flag
              11ed 1400  ld   $00,y       5410  ld(0,Y)                         #21
              11ee 0d00  ld   [y,x]       5411  ld([Y,X])                       #22
              11ef de00  st   [y,x++]     5412  st([Y,Xpp])                     #23 Just X++
              11f0 207f  anda $7f         5413  anda(~v6502_Vemu)               #24 V to bit 7
              11f1 8040  adda $40         5414  adda(v6502_Vflag)               #25
              11f2 c227  st   [$27]       5415  st([v6502_P])                   #26 All other flags
              11f3 0d00  ld   [y,x]       5416  ld([Y,X])                       #27
              11f4 de00  st   [y,x++]     5417  st([Y,Xpp])                     #28 Just X++
              11f5 c21a  st   [$1a]       5418  st([v6502_PCL])                 #29
              11f6 0d00  ld   [y,x]       5419  ld([Y,X])                       #30
              11f7 c21b  st   [$1b]       5420  st([v6502_PCH])                 #31
              11f8 0200  nop              5421  nop()                           #32
              11f9 140e  ld   $0e,y       5422  ld(hi('v6502_next'),Y)          #33
              11fa e020  jmp  y,$20       5423  jmp(Y,'v6502_next')             #34
              11fb 00ee  ld   $ee         5424  ld(-36/2)                       #35
                                          5425
                                          5426  #-----------------------------------------------------------------------
                                          5427  #       Extended vertical blank logic: interrupts
                                          5428  #-----------------------------------------------------------------------
              11fc 0200  nop              5429  align(0x100)
              11fd 0200  nop
              11fe 0200  nop
              11ff 0200  nop
                                          5430
                                          5431  # Check if an IRQ handler is defined
                                          5432  label('vBlankFirst#78')
vBlankFirst#78:
              1200 09f6  ld   [y,$f6]     5433  ld([Y,vIRQ_v5])                 #78
              1201 49f7  ora  [y,$f7]     5434  ora([Y,vIRQ_v5+1])              #79
                                          5435  bne('vBlankFirst#82')           #80
              1202 ec09  bne  vBlankFirst#82
              1203 0116  ld   [$16]       5436  ld([vPC])                       #81
              1204 0055  ld   $55         5437  runVcpu(186-82-extra,           #82 Application cycles (scan line 0)
              1205 c21e  st   [$1e]
              1206 1502  ld   [$02],y
              1207 e0ff  jmp  y,$ff
              1208 001e  ld   $1e
                                          5438      '---D line 0 timeout but no irq',
                                          5439      returnTo='vBlankFirst#186')
                                          5440
                                          5441  label('vBlankFirst#82')
vBlankFirst#82:
              1209 c230  st   [$30]       5442  st([vIrqSave])                  #82 Save vPC
              120a 0117  ld   [$17]       5443  ld([vPC+1])                     #83
              120b c231  st   [$31]       5444  st([vIrqSave+1])                #84
              120c 0118  ld   [$18]       5445  ld([vAC])                       #85 Save vAC
              120d c232  st   [$32]       5446  st([vIrqSave+2])                #86
              120e 0119  ld   [$19]       5447  ld([vAC+1])                     #87
              120f c233  st   [$33]       5448  st([vIrqSave+3])                #88
              1210 0102  ld   [$02]       5449  ld([vCpuSelect])                #89 Save vCpuSelect for PREFIX
              1211 c234  st   [$34]       5450  st([vIrqSave+4])                #90
              1212 09f6  ld   [y,$f6]     5451  ld([Y,vIRQ_v5])                 #91 Set vPC to vIRQ
              1213 a002  suba $02         5452  suba(2)                         #92
              1214 c216  st   [$16]       5453  st([vPC])                       #93
              1215 09f7  ld   [y,$f7]     5454  ld([Y,vIRQ_v5+1])               #94
              1216 c217  st   [$17]       5455  st([vPC+1])                     #95
              1217 0102  ld   [$02]       5456  ld([vCpuSelect])                #96 Handler must save this if needed
              1218 c219  st   [$19]       5457  st([vAC+1])                     #97
              1219 0000  ld   $00         5458  ld(0)                           #98
              121a c218  st   [$18]       5459  st([vAC])                       #99
              121b 0002  ld   $02         5460  ld(hi('ENTER'))                 #100 Set vCpuSelect to ENTER (=regular vCPU)
              121c c202  st   [$02]       5461  st([vCpuSelect])                #101
              121d 0055  ld   $55         5462  runVcpu(186-102-extra,          #102 Application cycles (scan line 0)
              121e c21e  st   [$1e]
              121f 1502  ld   [$02],y
              1220 e0ff  jmp  y,$ff
              1221 0014  ld   $14
                                          5463      '---D line 0 timeout with irq',
                                          5464      returnTo='vBlankFirst#186')
                                          5465
                                          5466  # vIRQ sequence WITH interpreter switch
                                          5467  label('vRTI#18')
vRTI#18:      1222 0500  ld   [x]         5468  ld([X])                         #18
              1223 c202  st   [$02]       5469  st([vCpuSelect])                #19
              1224 0130  ld   [$30]       5470  ld([0x30])                      #20
              1225 c216  st   [$16]       5471  st([vPC])                       #21
              1226 0131  ld   [$31]       5472  ld([0x31])                      #22
              1227 c217  st   [$17]       5473  st([vPC+1])                     #23
              1228 0132  ld   [$32]       5474  ld([0x32])                      #24
              1229 c218  st   [$18]       5475  st([vAC])                       #25
              122a 0133  ld   [$33]       5476  ld([0x33])                      #26
              122b c219  st   [$19]       5477  st([vAC+1])                     #27
              122c 0200  nop              5478  nop()                           #28
              122d 0200  nop              5479  nop()                           #29
              122e 0200  nop              5480  nop()                           #30 #0 This MUST match maxTicks, (ie maxTicks=30)
              122f 1403  ld   $03,y       5481  ld(hi('RESYNC'),Y)              #1
              1230 e00c  jmp  y,$0c       5482  jmp(Y,'RESYNC')                 #2
              1231 0115  ld   [$15]       5483  ld([vTicks])                    #3
                                          5484
                                          5485  # Entered last line of vertical blank (line 40)
                                          5486  label('vBlankLast#34')
                                          5487
                                          5488  #-----------------------------------------------------------------------
                                          5489  #       Extended vertical blank logic: game controller decoding
                                          5490  #-----------------------------------------------------------------------
                                          5491
                                          5492  # Game controller types
                                          5493  # TypeA: Based on 74LS165 shift register (not supported)
                                          5494  # TypeB: Based on CD4021B shift register (standard)
                                          5495  # TypeC: Based on priority encoder
                                          5496  #
                                          5497  # Notes:
                                          5498  # - TypeA was only used during development and first beta test, before ROM v1
                                          5499  # - TypeB appears as type A with negative logic levels
                                          5500  # - TypeB is the game controller type that comes with the original kit and ROM v1
                                          5501  # - TypeB is mimicked by BabelFish / Pluggy McPlugface
                                          5502  # - TypeB requires a prolonged /SER_LATCH, therefore vPulse is 8 scanlines, not 2
                                          5503  # - TypeB and TypeC can be sampled in the same scanline
                                          5504  # - TypeA is 1 scanline shifted as it looks at a different edge (XXX up or down?)
                                          5505  # - TypeC gives incomplete information: lower buttons overshadow higher ones
                                          5506  #
                                          5507  #       TypeC    Alias    Button TypeB
                                          5508  #       00000000  ^@   -> Right  11111110
                                          5509  #       00000001  ^A   -> Left   11111101
                                          5510  #       00000011  ^C   -> Down   11111011
                                          5511  #       00000111  ^G   -> Up     11110111
                                          5512  #       00001111  ^O   -> Start  11101111
                                          5513  #       00011111  ^_   -> Select 11011111
                                          5514  #       00111111  ?    -> B      10111111
                                          5515  #       01111111  DEL  -> A      01111111
                                          5516  #       11111111       -> (None) 11111111
                                          5517  #
                                          5518  #       Conversion formula:
                                          5519  #               f(x) := 254 - x
                                          5520
                                          5521  # Detect controller TypeC codes
vBlankLast#34:
              1232 010f  ld   [$0f]       5522  ld([serialRaw])                 #34 if serialRaw in [0,1,3,7,15,31,63,127,255]
              1233 8001  adda $01         5523  adda(1)                         #35
              1234 210f  anda [$0f]       5524  anda([serialRaw])               #36
              1235 ec46  bne  .buttons#39 5525  bne('.buttons#39')              #37
                                          5526
                                          5527  # TypeC
              1236 010f  ld   [$0f]       5528  ld([serialRaw])                 #38 [TypeC] if serialRaw < serialLast
              1237 8001  adda $01         5529  adda(1)                         #39
              1238 2110  anda [$10]       5530  anda([serialLast])              #40
              1239 ec3d  bne  .buttons#43 5531  bne('.buttons#43')              #41
              123a 00fe  ld   $fe         5532  ld(254)                         #42 then clear the selected bit
              123b 0200  nop              5533  nop()                           #43
              123c fc40  bra  .buttons#46 5534  bra('.buttons#46')              #44
                                          5535  label('.buttons#43')
.buttons#43:  123d a10f  suba [$0f]       5536  suba([serialRaw])               #43,45
              123e 2111  anda [$11]       5537  anda([buttonState])             #44
              123f c211  st   [$11]       5538  st([buttonState])               #45
                                          5539  label('.buttons#46')
.buttons#46:  1240 010f  ld   [$0f]       5540  ld([serialRaw])                 #46 Set the lower bits
              1241 4111  ora  [$11]       5541  ora([buttonState])              #47
                                          5542  label('.buttons#48')
.buttons#48:  1242 c211  st   [$11]       5543  st([buttonState])               #48
              1243 010f  ld   [$0f]       5544  ld([serialRaw])                 #49 Update serialLast for next pass
              1244 e0b3  jmp  y,$b3       5545  jmp(Y,'vBlankLast#52')          #50
              1245 c210  st   [$10]       5546  st([serialLast])                #51
                                          5547
                                          5548  # TypeB
                                          5549  # pChange = pNew & ~pOld
                                          5550  # nChange = nNew | ~nOld {DeMorgan}
                                          5551  label('.buttons#39')
.buttons#39:  1246 00ff  ld   $ff         5552  ld(255)                         #39 [TypeB] Bitwise edge-filter to detect button presses
              1247 6110  xora [$10]       5553  xora([serialLast])              #40
              1248 410f  ora  [$0f]       5554  ora([serialRaw])                #41 Catch button-press events
              1249 2111  anda [$11]       5555  anda([buttonState])             #42 Keep active button presses
              124a 410f  ora  [$0f]       5556  ora([serialRaw])                #43
              124b 0200  nop              5557  nop()                           #44
              124c 0200  nop              5558  nop()                           #45
              124d fc42  bra  .buttons#48 5559  bra('.buttons#48')              #46
              124e 0200  nop              5560  nop()                           #47
                                          5561
                                          5562
                                          5563  #-----------------------------------------------------------------------
                                          5564  #       More SYS functions, (0x1200)
                                          5565  #-----------------------------------------------------------------------
                                          5566
                                          5567  # SYS_Exec_88 implementation
                                          5568  label('sys_Exec')
sys_Exec:     124f d617  st   [$17],y     5569  st([vPC+1],Y)                   #18 Clear vPCH and Y
              1250 011c  ld   [$1c]       5570  ld([vSP])                       #19 Place ROM loader below current stack pointer
              1251 a037  suba $37         5571  suba(53+2)                      #20 (AC -> *+0) One extra word for PUSH
              1252 d21d  st   [$1d],x     5572  st([vTmp],X)                    #21
              1253 80fe  adda $fe         5573  adda(-2)                        #22 (AC -> *-2)
              1254 c216  st   [$16]       5574  st([vPC])                       #23
                                          5575  # Start of manually compiled vCPU section
              1255 dc75  st   $75,[y,x++] 5576  st('PUSH',    [Y,Xpp])          #24 *+0
              1256 dccf  st   $cf,[y,x++] 5577  st('CALL',    [Y,Xpp])          #25 *+26 Fetch first byte
              1257 8023  adda $23         5578  adda(33-(-2))                   #26 (AC -> *+33)
              1258 de00  st   [y,x++]     5579  st(           [Y,Xpp])          #27 *+27
              1259 dc5e  st   $5e,[y,x++] 5580  st('ST',      [Y,Xpp])          #28 *+3 Chunk copy loop
              125a dc27  st   $27,[y,x++] 5581  st(sysArgs+3, [Y,Xpp])          #29 *+4 High-address comes first
              125b dccf  st   $cf,[y,x++] 5582  st('CALL',    [Y,Xpp])          #30 *+5
              125c de00  st   [y,x++]     5583  st(           [Y,Xpp])          #31 *+6
              125d dc5e  st   $5e,[y,x++] 5584  st('ST',      [Y,Xpp])          #32 *+7
              125e dc26  st   $26,[y,x++] 5585  st(sysArgs+2, [Y,Xpp])          #33 *+8 Then the low address
              125f dccf  st   $cf,[y,x++] 5586  st('CALL',    [Y,Xpp])          #34 *+9
              1260 de00  st   [y,x++]     5587  st(           [Y,Xpp])          #35 *+10
              1261 dc5e  st   $5e,[y,x++] 5588  st('ST',      [Y,Xpp])          #36 *+11 Byte copy loop
              1262 dc28  st   $28,[y,x++] 5589  st(sysArgs+4, [Y,Xpp])          #37 *+12 Byte count (0 means 256)
              1263 dccf  st   $cf,[y,x++] 5590  st('CALL',    [Y,Xpp])          #38 *+13
              1264 de00  st   [y,x++]     5591  st(           [Y,Xpp])          #39 *+14
              1265 dcf0  st   $f0,[y,x++] 5592  st('POKE',    [Y,Xpp])          #40 *+15
              1266 dc26  st   $26,[y,x++] 5593  st(sysArgs+2, [Y,Xpp])          #41 *+16
              1267 dc93  st   $93,[y,x++] 5594  st('INC',     [Y,Xpp])          #42 *+17
              1268 dc26  st   $26,[y,x++] 5595  st(sysArgs+2, [Y,Xpp])          #43 *+18
              1269 dc1a  st   $1a,[y,x++] 5596  st('LD',      [Y,Xpp])          #44 *+19
              126a dc28  st   $28,[y,x++] 5597  st(sysArgs+4, [Y,Xpp])          #45 *+20
              126b dce6  st   $e6,[y,x++] 5598  st('SUBI',    [Y,Xpp])          #46 *+21
              126c dc01  st   $01,[y,x++] 5599  st(1,         [Y,Xpp])          #47 *+22
              126d dc35  st   $35,[y,x++] 5600  st('BCC',     [Y,Xpp])          #48 *+23
              126e dc72  st   $72,[y,x++] 5601  st('NE',      [Y,Xpp])          #49 *+24
              126f 80e8  adda $e8         5602  adda(11-2-33)                   #50 (AC -> *+9)
              1270 de00  st   [y,x++]     5603  st(           [Y,Xpp])          #51 *+25
              1271 dccf  st   $cf,[y,x++] 5604  st('CALL',    [Y,Xpp])          #52 *+26 Go to next block
              1272 8018  adda $18         5605  adda(33-9)                      #53 (AC -> *+33)
              1273 de00  st   [y,x++]     5606  st(           [Y,Xpp])          #54 *+27
              1274 dc35  st   $35,[y,x++] 5607  st('BCC',     [Y,Xpp])          #55 *+28
              1275 dc72  st   $72,[y,x++] 5608  st('NE',      [Y,Xpp])          #56 *+29
              1276 80e0  adda $e0         5609  adda(3-2-33)                    #57 (AC -> *+1)
              1277 de00  st   [y,x++]     5610  st(           [Y,Xpp])          #58 *+30
              1278 dc63  st   $63,[y,x++] 5611  st('POP',     [Y,Xpp])          #59 *+31 End
              1279 dcff  st   $ff,[y,x++] 5612  st('RET',     [Y,Xpp])          #60 *+32
                                          5613  # Pointer constant pointing to the routine below (for use by CALL)
              127a 8022  adda $22         5614  adda(35-1)                      #61 (AC -> *+35)
              127b de00  st   [y,x++]     5615  st(           [Y,Xpp])          #62 *+33
              127c dc00  st   $00,[y,x++] 5616  st(0,         [Y,Xpp])          #63 *+34
                                          5617  # Routine to read next byte from ROM and advance read pointer
              127d dc1a  st   $1a,[y,x++] 5618  st('LD',      [Y,Xpp])          #64 *+35 Test for end of ROM table
              127e dc24  st   $24,[y,x++] 5619  st(sysArgs+0, [Y,Xpp])          #65 *+36
              127f dc8c  st   $8c,[y,x++] 5620  st('XORI',    [Y,Xpp])          #66 *+37
              1280 dcfb  st   $fb,[y,x++] 5621  st(251,       [Y,Xpp])          #67 *+38
              1281 dc35  st   $35,[y,x++] 5622  st('BCC',     [Y,Xpp])          #68 *+39
              1282 dc72  st   $72,[y,x++] 5623  st('NE',      [Y,Xpp])          #69 *+40
              1283 8009  adda $09         5624  adda(46-2-35)                   #70 (AC -> *+44)
              1284 de00  st   [y,x++]     5625  st(           [Y,Xpp])          #71 *+41
              1285 dc5e  st   $5e,[y,x++] 5626  st('ST',      [Y,Xpp])          #72 *+42 Wrap to next ROM page
              1286 dc24  st   $24,[y,x++] 5627  st(sysArgs+0, [Y,Xpp])          #73 *+43
              1287 dc93  st   $93,[y,x++] 5628  st('INC',     [Y,Xpp])          #74 *+44
              1288 dc25  st   $25,[y,x++] 5629  st(sysArgs+1, [Y,Xpp])          #75 *+45
              1289 dc21  st   $21,[y,x++] 5630  st('LDW',     [Y,Xpp])          #76 *+46 Read next byte from ROM table
              128a dc24  st   $24,[y,x++] 5631  st(sysArgs+0, [Y,Xpp])          #77 *+47
              128b dc7f  st   $7f,[y,x++] 5632  st('LUP',     [Y,Xpp])          #78 *+48
              128c dc00  st   $00,[y,x++] 5633  st(0,         [Y,Xpp])          #79 *+49
              128d dc93  st   $93,[y,x++] 5634  st('INC',     [Y,Xpp])          #80 *+50 Increment read pointer
              128e dc24  st   $24,[y,x++] 5635  st(sysArgs+0, [Y,Xpp])          #81 *+51
              128f dcff  st   $ff,[y,x++] 5636  st('RET',     [Y,Xpp])          #82 *+52 Return
                                          5637  # Return to interpreter
              1290 1403  ld   $03,y       5638  ld(hi('REENTER'),Y)             #83
              1291 e0cb  jmp  y,$cb       5639  jmp(Y,'REENTER')                #84
              1292 00d4  ld   $d4         5640  ld(-88/2)                       #85
                                          5641
                                          5642  # SYS_VDrawBits_134 implementation
                                          5643  label('sys_VDrawBits')
sys_VDrawBits:
              1293 0000  ld   $00         5644  ld(0)                           #18
                                          5645  label('.sysVdb0')
.sysVdb0:     1294 c21d  st   [$1d]       5646  st([vTmp])                      #19+i*25
              1295 9529  adda [$29],y     5647  adda([sysArgs+5],Y)             #20+i*25 Y=[sysPos+1]+[vTmp]
              1296 0126  ld   [$26]       5648  ld([sysArgs+2])                 #21+i*25 Select color
              1297 e89a  blt  $129a       5649  bmi(pc()+3)                     #22+i*25
              1298 fc9b  bra  $129b       5650  bra(pc()+3)                     #23+i*25
              1299 0124  ld   [$24]       5651  ld([sysArgs+0])                 #24+i*25
              129a 0125  ld   [$25]       5652  ld([sysArgs+1])                 #24+i*25(!)
              129b ce00  st   [y,x]       5653  st([Y,X])                       #25+i*25 Draw pixel
              129c 0126  ld   [$26]       5654  ld([sysArgs+2])                 #26+i*25 Shift byte left
              129d 8200  adda ac          5655  adda(AC)                        #27+i*25
              129e c226  st   [$26]       5656  st([sysArgs+2])                 #28+i*25
              129f 011d  ld   [$1d]       5657  ld([vTmp])                      #29+i*25 Unrolled loop (once)
              12a0 8129  adda [$29]       5658  adda([sysArgs+5])               #31+i*25
              12a1 9401  adda $01,y       5659  adda(1,Y)                       #30+i*25 Y=[sysPos+1]+[vTmp]+1
              12a2 0126  ld   [$26]       5660  ld([sysArgs+2])                 #32+i*25 Select color
              12a3 e8a6  blt  $12a6       5661  bmi(pc()+3)                     #33+i*25
              12a4 fca7  bra  $12a7       5662  bra(pc()+3)                     #34+i*25
              12a5 0124  ld   [$24]       5663  ld([sysArgs+0])                 #35+i*25
              12a6 0125  ld   [$25]       5664  ld([sysArgs+1])                 #35+i*25(!)
              12a7 ce00  st   [y,x]       5665  st([Y,X])                       #36+i*25 Draw pixel
              12a8 0126  ld   [$26]       5666  ld([sysArgs+2])                 #37+i*25 Shift byte left
              12a9 8200  adda ac          5667  adda(AC)                        #38+i*25
              12aa c226  st   [$26]       5668  st([sysArgs+2])                 #39+i*25
              12ab 011d  ld   [$1d]       5669  ld([vTmp])                      #40+i*25 Loop counter
              12ac a006  suba $06         5670  suba(6)                         #41+i*25
              12ad ec94  bne  .sysVdb0    5671  bne('.sysVdb0')                 #42+i*25
              12ae 8008  adda $08         5672  adda(8)                         #43+i*25 Steps of 2
              12af 1403  ld   $03,y       5673  ld(hi('REENTER'),Y)             #119
              12b0 e0cb  jmp  y,$cb       5674  jmp(Y,'REENTER')                #120
              12b1 00c2  ld   $c2         5675  ld(-124/2)                      #121
                                          5676
                                          5677  # SYS_ResetWaveforms_v4_50 implementation
                                          5678  label('sys_ResetWaveforms')
sys_ResetWaveforms:
              12b2 0118  ld   [$18]       5679  ld([vAC+0])                     #18 X=4i
              12b3 8200  adda ac          5680  adda(AC)                        #19
              12b4 9200  adda ac,x        5681  adda(AC,X)                      #20
              12b5 0118  ld   [$18]       5682  ld([vAC+0])                     #21
              12b6 de00  st   [y,x++]     5683  st([Y,Xpp])                     #22 Sawtooth: T[4i+0] = i
              12b7 2020  anda $20         5684  anda(0x20)                      #23 Triangle: T[4i+1] = 2i if i<32 else 127-2i
              12b8 ecbb  bne  $12bb       5685  bne(pc()+3)                     #24
              12b9 0118  ld   [$18]       5686  ld([vAC+0])                     #25
              12ba fcbd  bra  $12bd       5687  bra(pc()+3)                     #26
              12bb 8118  adda [$18]       5688  adda([vAC+0])                   #26,27
              12bc 607f  xora $7f         5689  xora(127)                       #27
              12bd de00  st   [y,x++]     5690  st([Y,Xpp])                     #28
              12be 0118  ld   [$18]       5691  ld([vAC+0])                     #29 Pulse: T[4i+2] = 0 if i<32 else 63
              12bf 2020  anda $20         5692  anda(0x20)                      #30
              12c0 ecc3  bne  $12c3       5693  bne(pc()+3)                     #31
              12c1 fcc4  bra  $12c4       5694  bra(pc()+3)                     #32
              12c2 0000  ld   $00         5695  ld(0)                           #33
              12c3 003f  ld   $3f         5696  ld(63)                          #33(!)
              12c4 de00  st   [y,x++]     5697  st([Y,Xpp])                     #34
              12c5 0118  ld   [$18]       5698  ld([vAC+0])                     #35 Sawtooth: T[4i+3] = i
              12c6 ce00  st   [y,x]       5699  st([Y,X])                       #36
              12c7 8001  adda $01         5700  adda(1)                         #37 i += 1
              12c8 c218  st   [$18]       5701  st([vAC+0])                     #38
              12c9 6040  xora $40         5702  xora(64)                        #39 For 64 iterations
              12ca f0cd  beq  $12cd       5703  beq(pc()+3)                     #40
              12cb fcce  bra  $12ce       5704  bra(pc()+3)                     #41
              12cc 00fe  ld   $fe         5705  ld(-2)                          #42
              12cd 0000  ld   $00         5706  ld(0)                           #42(!)
              12ce 8116  adda [$16]       5707  adda([vPC])                     #43
              12cf c216  st   [$16]       5708  st([vPC])                       #44
              12d0 1403  ld   $03,y       5709  ld(hi('REENTER'),Y)             #45
              12d1 e0cb  jmp  y,$cb       5710  jmp(Y,'REENTER')                #46
              12d2 00e7  ld   $e7         5711  ld(-50/2)                       #47
                                          5712
                                          5713  # SYS_ShuffleNoise_v4_46 implementation
                                          5714  label('sys_ShuffleNoise')
sys_ShuffleNoise:
              12d3 1118  ld   [$18],x     5715  ld([vAC+0],X)                   #18 tmp = T[4j]
              12d4 0d00  ld   [y,x]       5716  ld([Y,X])                       #19
              12d5 c21d  st   [$1d]       5717  st([vTmp])                      #20
              12d6 1119  ld   [$19],x     5718  ld([vAC+1],X)                   #21 T[4j] = T[4i]
              12d7 0d00  ld   [y,x]       5719  ld([Y,X])                       #22
              12d8 1118  ld   [$18],x     5720  ld([vAC+0],X)                   #23
              12d9 ce00  st   [y,x]       5721  st([Y,X])                       #24
              12da 8200  adda ac          5722  adda(AC)                        #25 j += T[4i]
              12db 8200  adda ac          5723  adda(AC,)                       #26
              12dc 8118  adda [$18]       5724  adda([vAC+0])                   #27
              12dd c218  st   [$18]       5725  st([vAC+0])                     #28
              12de 1119  ld   [$19],x     5726  ld([vAC+1],X)                   #29 T[4i] = tmp
              12df 011d  ld   [$1d]       5727  ld([vTmp])                      #30
              12e0 ce00  st   [y,x]       5728  st([Y,X])                       #31
              12e1 0119  ld   [$19]       5729  ld([vAC+1])                     #32 i += 1
              12e2 8004  adda $04         5730  adda(4)                         #33
              12e3 c219  st   [$19]       5731  st([vAC+1])                     #34
              12e4 f0e7  beq  $12e7       5732  beq(pc()+3)                     #35 For 64 iterations
              12e5 fce8  bra  $12e8       5733  bra(pc()+3)                     #36
              12e6 00fe  ld   $fe         5734  ld(-2)                          #37
              12e7 0000  ld   $00         5735  ld(0)                           #37(!)
              12e8 8116  adda [$16]       5736  adda([vPC])                     #38
              12e9 c216  st   [$16]       5737  st([vPC])                       #39
              12ea 1403  ld   $03,y       5738  ld(hi('NEXTY'),Y)               #40
              12eb e000  jmp  y,$00       5739  jmp(Y,'NEXTY')                  #41
              12ec 00ea  ld   $ea         5740  ld(-44/2)                       #42
                                          5741
                                          5742
              12ed 0200  nop              5743  fillers(until=0xff)
              12ee 0200  nop
              12ef 0200  nop
              * 18 times
              12ff 0200  nop              5744  align(0x100, size=0x100)
                                          5745
                                          5746
                                          5747  #-----------------------------------------------------------------------
                                          5748  #       More SYS functions, (0x1300)
                                          5749  #-----------------------------------------------------------------------
                                          5750
                                          5751  # sys_Multiply_u8, res:u16 = x:u8 * y:u8
                                          5752  # sysArgs0,1=res, sysArgs2=x, sysArgs3=y, sysArgs4=count
                                          5753  label('SYS_Multiply_u8_vX_48')
SYS_Multiply_u8_vX_48:
              1300 0128  ld   [$28]       5754  ld([sysArgs+4])                 #15,
              1301 a001  suba $01         5755  suba(1)                         #16, count--
                                          5756  bge('.sys_multiply_u8_19')      #17,
              1302 f407  bge  .sys_multiply_u8_19
              1303 c228  st   [$28]       5757  st([sysArgs+4])                 #18,
              1304 1403  ld   $03,y       5758  ld(hi('REENTER'),Y)             #19,
              1305 e0cb  jmp  y,$cb       5759  jmp(Y,'REENTER')                #20,
              1306 00f4  ld   $f4         5760  ld(-24/2)                       #21,
                                          5761
                                          5762  label('.sys_multiply_u8_19')
.sys_multiply_u8_19:
              1307 0124  ld   [$24]       5763  ld([sysArgs+0])                 #19,
              1308 3080  anda $80,x       5764  anda(128,X)                     #20,
              1309 8124  adda [$24]       5765  adda([sysArgs+0])               #21,
              130a c224  st   [$24]       5766  st([sysArgs+0])                 #22,
              130b 0500  ld   [x]         5767  ld([X])                         #23,
              130c 8125  adda [$25]       5768  adda([sysArgs+1])               #24,
              130d 8125  adda [$25]       5769  adda([sysArgs+1])               #25,
              130e c225  st   [$25]       5770  st([sysArgs+1])                 #26, result <<1
              130f 0126  ld   [$26]       5771  ld([sysArgs+2])                 #27,
                                          5772  bmi('.sys_multiply_u8_30')      #28, if(x & 0x80)
              1310 e819  blt  .sys_multiply_u8_30
              1311 8126  adda [$26]       5773  adda([sysArgs+2])               #29,
              1312 c226  st   [$26]       5774  st([sysArgs+2])                 #30, x <<= 1
              1313 0116  ld   [$16]       5775  ld([vPC])                       #31,
              1314 a002  suba $02         5776  suba(2)                         #32,
              1315 c216  st   [$16]       5777  st([vPC])                       #33, restart
              1316 1403  ld   $03,y       5778  ld(hi('NEXTY'),Y)               #34,
              1317 e000  jmp  y,$00       5779  jmp(Y,'NEXTY')                  #35,
              1318 00ed  ld   $ed         5780  ld(-38/2)                       #36,
                                          5781
                                          5782  label('.sys_multiply_u8_30')
.sys_multiply_u8_30:
              1319 c226  st   [$26]       5783  st([sysArgs+2])                 #30, x <<= 1
              131a 0124  ld   [$24]       5784  ld([sysArgs+0])                 #31,
              131b 8127  adda [$27]       5785  adda([sysArgs+3])               #32,
              131c c224  st   [$24]       5786  st([sysArgs+0])                 #33, res.lo += y
                                          5787  bmi('.sys_multiply_u8_36')      #34, check carry
              131d e82a  blt  .sys_multiply_u8_36
              131e a127  suba [$27]       5788  suba([sysArgs+3])               #35, initial value of res.lo
              131f 4127  ora  [$27]       5789  ora([sysArgs+3])                #36, carry in bit 7
              1320 3080  anda $80,x       5790  anda(0x80,X)                    #37, move carry to bit 0
              1321 0500  ld   [x]         5791  ld([X])                         #38,
              1322 8125  adda [$25]       5792  adda([sysArgs+1])               #39,
              1323 c225  st   [$25]       5793  st([sysArgs+1])                 #40, res.hi += carry
              1324 0116  ld   [$16]       5794  ld([vPC])                       #41,
              1325 a002  suba $02         5795  suba(2)                         #42,
              1326 c216  st   [$16]       5796  st([vPC])                       #43, restart
              1327 1403  ld   $03,y       5797  ld(hi('NEXTY'),Y)               #44,
              1328 e000  jmp  y,$00       5798  jmp(Y,'NEXTY')                  #45,
              1329 00e8  ld   $e8         5799  ld(-48/2)                       #46,
                                          5800
                                          5801  label('.sys_multiply_u8_36')
.sys_multiply_u8_36:
              132a 2127  anda [$27]       5802  anda([sysArgs+3])               #36, carry in bit 7
              132b 3080  anda $80,x       5803  anda(0x80,X)                    #37, move carry to bit 0
              132c 0500  ld   [x]         5804  ld([X])                         #38,
              132d 8125  adda [$25]       5805  adda([sysArgs+1])               #39,
              132e c225  st   [$25]       5806  st([sysArgs+1])                 #40, res.hi += carry
              132f 0116  ld   [$16]       5807  ld([vPC])                       #41,
              1330 a002  suba $02         5808  suba(2)                         #42,
              1331 c216  st   [$16]       5809  st([vPC])                       #43, restart
              1332 1403  ld   $03,y       5810  ld(hi('NEXTY'),Y)               #44,
              1333 e000  jmp  y,$00       5811  jmp(Y,'NEXTY')                  #45,
              1334 00e8  ld   $e8         5812  ld(-48/2)                       #46,
                                          5813
                                          5814  # leave some room for updates
              1335 0200  nop              5815  fillers(until=0x40)
              1336 0200  nop
              1337 0200  nop
              * 11 times
                                          5816
                                          5817
                                          5818  # sys_OffsetVTableY, sysArgs0 = scanline:8, sysArgs1 = scanCount:8, sysArgs2,3 = videoTable:16
                                          5819  label('SYS_OffsetVTableY_vX_36')
SYS_OffsetVTableY_vX_36:
              1340 0124  ld   [$24]       5820  ld([sysArgs+0])                 #15, scanline
              1341 1126  ld   [$26],x     5821  ld([sysArgs+2],X)               #16,
              1342 1527  ld   [$27],y     5822  ld([sysArgs+3],Y)               #17,
              1343 ce00  st   [y,x]       5823  st([Y,X])                       #18, [videoTable] = scanline
              1344 8001  adda $01         5824  adda(1)                         #19,
              1345 c224  st   [$24]       5825  st([sysArgs+0])                 #20, scanline++
              1346 0126  ld   [$26]       5826  ld([sysArgs+2])                 #21,
              1347 8002  adda $02         5827  adda(2)                         #22,
              1348 c226  st   [$26]       5828  st([sysArgs+2])                 #23, videoTable += 2
              1349 0125  ld   [$25]       5829  ld([sysArgs+1])                 #24,
              134a a001  suba $01         5830  suba(1)                         #25,
                                          5831  beq('.sys_offsetvty_28')        #26,
              134b f053  beq  .sys_offsetvty_28
              134c c225  st   [$25]       5832  st([sysArgs+1])                 #27, scanCount--
              134d 0116  ld   [$16]       5833  ld([vPC])                       #28,
              134e a002  suba $02         5834  suba(2)                         #29,
              134f c216  st   [$16]       5835  st([vPC])                       #30, restart
              1350 1403  ld   $03,y       5836  ld(hi('REENTER'),Y)             #31,
              1351 e0cb  jmp  y,$cb       5837  jmp(Y,'REENTER')                #32,
              1352 00ee  ld   $ee         5838  ld(-36/2)                       #33,
                                          5839  label('.sys_offsetvty_28')
.sys_offsetvty_28:
              1353 1403  ld   $03,y       5840  ld(hi('NEXTY'),Y)               #28,
              1354 e000  jmp  y,$00       5841  jmp(Y,'NEXTY')                  #29,
              1355 00f0  ld   $f0         5842  ld(-32/2)                       #30,
                                          5843
                                          5844  # leave some room for updates
              1356 0200  nop              5845  fillers(until=0x60)
              1357 0200  nop
              1358 0200  nop
              * 10 times
                                          5846
                                          5847
                                          5848  # sys_FillByteSeq, sysArgs0,1=dst, sysArg2=start, sysArg3=step, sysArg4=count
                                          5849  label('SYS_FillByteSeq_vX_36')
SYS_FillByteSeq_vX_36:
              1360 1525  ld   [$25],y     5850  ld([sysArgs+1],Y)               #15 dst pointer
              1361 1124  ld   [$24],x     5851  ld([sysArgs+0],X)               #16,
              1362 0124  ld   [$24]       5852  ld([sysArgs+0])                 #17,
              1363 8001  adda $01         5853  adda(1)                         #18,
              1364 c224  st   [$24]       5854  st([sysArgs+0])                 #19, dst++
              1365 0126  ld   [$26]       5855  ld([sysArgs+2])                 #20,
              1366 ce00  st   [y,x]       5856  st([Y,X])                       #21, start
              1367 8127  adda [$27]       5857  adda([sysArgs+3])               #22,
              1368 c226  st   [$26]       5858  st([sysArgs+2])                 #23, start += step
              1369 0128  ld   [$28]       5859  ld([sysArgs+4])                 #24,
              136a a001  suba $01         5860  suba(1)                         #25,
                                          5861  beq('.sys_fillbyteseq_28')      #26,
              136b f073  beq  .sys_fillbyteseq_28
              136c c228  st   [$28]       5862  st([sysArgs+4])                 #27,
              136d 0116  ld   [$16]       5863  ld([vPC])                       #28,
              136e a002  suba $02         5864  suba(2)                         #29,
              136f c216  st   [$16]       5865  st([vPC])                       #30, restart
              1370 1403  ld   $03,y       5866  ld(hi('REENTER'),Y)             #31,
              1371 e0cb  jmp  y,$cb       5867  jmp(Y,'REENTER')                #32,
              1372 00ee  ld   $ee         5868  ld(-36/2)                       #33,
                                          5869  label('.sys_fillbyteseq_28')
.sys_fillbyteseq_28:
              1373 1403  ld   $03,y       5870  ld(hi('NEXTY'),Y)               #28,
              1374 e000  jmp  y,$00       5871  jmp(Y,'NEXTY')                  #29,
              1375 00f0  ld   $f0         5872  ld(-32/2)                       #30,
                                          5873
                                          5874  # leave some room for updates
              1376 0200  nop              5875  fillers(until=0x80)
              1377 0200  nop
              1378 0200  nop
              * 10 times
                                          5876
                                          5877
                                          5878  # sys_AddInt8Array, sysArgs0,1=src, sysArgs2,3=dst, sysArgs4=index, sysArgs5=count, dst(i) += src(i)
                                          5879  label('SYS_AddInt8Array_vX_40')
SYS_AddInt8Array_vX_40:
              1380 0124  ld   [$24]       5880  ld([sysArgs+0])                 #15,
              1381 9128  adda [$28],x     5881  adda([sysArgs+4],X)             #16,
              1382 1525  ld   [$25],y     5882  ld([sysArgs+1],Y)               #17,
              1383 0d00  ld   [y,x]       5883  ld([Y,X])                       #18,
              1384 c21d  st   [$1d]       5884  st([vTmp])                      #19
              1385 0126  ld   [$26]       5885  ld([sysArgs+2])                 #20,
              1386 9128  adda [$28],x     5886  adda([sysArgs+4],X)             #21,
              1387 1527  ld   [$27],y     5887  ld([sysArgs+3],Y)               #22,
              1388 011d  ld   [$1d]       5888  ld([vTmp])                      #23
              1389 8d00  adda [y,x]       5889  adda([Y,X])                     #24,
              138a ce00  st   [y,x]       5890  st([Y,X])                       #25,
              138b 0129  ld   [$29]       5891  ld([sysArgs+5])                 #26,
              138c a001  suba $01         5892  suba(1)                         #27,
                                          5893  beq('.sys_addint8Array_30')     #28,
              138d f098  beq  .sys_addint8Array_30
              138e c229  st   [$29]       5894  st([sysArgs+5])                 #29,
              138f 0128  ld   [$28]       5895  ld([sysArgs+4])                 #30,
              1390 8001  adda $01         5896  adda(1)                         #31,
              1391 c228  st   [$28]       5897  st([sysArgs+4])                 #32, index++
              1392 0116  ld   [$16]       5898  ld([vPC])                       #33,
              1393 a002  suba $02         5899  suba(2)                         #34,
              1394 c216  st   [$16]       5900  st([vPC])                       #35,
              1395 1403  ld   $03,y       5901  ld(hi('NEXTY'),Y)               #36,
              1396 e000  jmp  y,$00       5902  jmp(Y,'NEXTY')                  #37,
              1397 00ec  ld   $ec         5903  ld(-40/2)                       #38,
                                          5904  label('.sys_addint8Array_30')
.sys_addint8Array_30:
              1398 1403  ld   $03,y       5905  ld(hi('NEXTY'),Y)               #30,
              1399 e000  jmp  y,$00       5906  jmp(Y,'NEXTY')                  #31,
              139a 00ef  ld   $ef         5907  ld(-34/2)                       #32,
                                          5908
                                          5909  # leave some room for updates
              139b 0200  nop              5910  fillers(until=0xa0)
              139c 0200  nop
              139d 0200  nop
              * 5 times
                                          5911
                                          5912
                                          5913  # sys_ParityFill, sysArgs0,1=borderColour:fillColour, sysArgs2,3=X:Y start address
                                          5914  #                 sysArgs4=countXY, sysArgs6=fill toggle, sysArgs7=replace colour
                                          5915  label('SYS_ParityFill_vX_44')
SYS_ParityFill_vX_44:
              13a0 1527  ld   [$27],y     5916  ld([sysArgs+3],Y)               #15,
              13a1 1126  ld   [$26],x     5917  ld([sysArgs+2],X)               #16,
              13a2 0126  ld   [$26]       5918  ld([sysArgs+2])                 #17,
              13a3 8001  adda $01         5919  adda(1)                         #18,
              13a4 c226  st   [$26]       5920  st([sysArgs+2])                 #19, x++
              13a5 0128  ld   [$28]       5921  ld([sysArgs+4])                 #20,
              13a6 a001  suba $01         5922  suba(1)                         #21, countX--
                                          5923  bge('.sys_parityfill_24')       #22,
              13a7 f4be  bge  .sys_parityfill_24
              13a8 c228  st   [$28]       5924  st([sysArgs+4])                 #23,
              13a9 0127  ld   [$27]       5925  ld([sysArgs+3])                 #24,
              13aa 8001  adda $01         5926  adda(1)                         #25,
              13ab c227  st   [$27]       5927  st([sysArgs+3])                 #26, y++
              13ac 0129  ld   [$29]       5928  ld([sysArgs+5])                 #27,
              13ad a001  suba $01         5929  suba(1)                         #28, countY--
              13ae c229  st   [$29]       5930  st([sysArgs+5])                 #29,
                                          5931  bne('.sys_parityfill_32')       #30,
              13af ecb3  bne  .sys_parityfill_32
              13b0 1403  ld   $03,y       5932  ld(hi('REENTER'),Y)             #31,
              13b1 e0cb  jmp  y,$cb       5933  jmp(Y,'REENTER')                #32,
              13b2 00ee  ld   $ee         5934  ld(-36/2)                       #33,
                                          5935  label('.sys_parityfill_32')
.sys_parityfill_32:
              13b3 0182  ld   [$82]       5936  ld([0x82])                      #32,
              13b4 c226  st   [$26]       5937  st([sysArgs+2])                 #33, restore x
              13b5 0183  ld   [$83]       5938  ld([0x83])                      #34,
              13b6 c228  st   [$28]       5939  st([sysArgs+4])                 #35, restore countX
              13b7 0184  ld   [$84]       5940  ld([0x84])                      #36,
              13b8 c22a  st   [$2a]       5941  st([sysArgs+6])                 #37, restore fill toggle
              13b9 0116  ld   [$16]       5942  ld([vPC])                       #38,
              13ba a002  suba $02         5943  suba(2)                         #39,
              13bb c216  st   [$16]       5944  st([vPC])                       #40, restart
              13bc e000  jmp  y,$00       5945  jmp(Y,'NEXTY')                  #41,
              13bd 00ea  ld   $ea         5946  ld(-44/2)                       #42,
                                          5947
                                          5948  label('.sys_parityfill_24')
.sys_parityfill_24:
              13be 012a  ld   [$2a]       5949  ld([sysArgs+6])                 #24, check fill toggle
                                          5950  bne('.sys_parityfill_27')       #25,
              13bf ecc9  bne  .sys_parityfill_27
              13c0 0d00  ld   [y,x]       5951  ld([Y,X])                       #26, get pixel
              13c1 6124  xora [$24]       5952  xora([sysArgs+0])               #27, check border colour
                                          5953  beq('.sys_parityfill_30')       #28,
              13c2 f0d8  beq  .sys_parityfill_30
              13c3 0116  ld   [$16]       5954  ld([vPC])                       #29,
              13c4 a002  suba $02         5955  suba(2)                         #30,
              13c5 c216  st   [$16]       5956  st([vPC])                       #31, restart
              13c6 1403  ld   $03,y       5957  ld(hi('NEXTY'),Y)               #32,
              13c7 e000  jmp  y,$00       5958  jmp(Y,'NEXTY')                  #33,
              13c8 00ee  ld   $ee         5959  ld(-36/2)                       #34,
                                          5960
                                          5961  label('.sys_parityfill_27')
.sys_parityfill_27:
              13c9 6124  xora [$24]       5962  xora([sysArgs+0])               #27, check border colour
                                          5963  beq('.sys_parityfill_30')       #28,
              13ca f0d8  beq  .sys_parityfill_30
              13cb 0d00  ld   [y,x]       5964  ld([Y,X])                       #29, get pixel
              13cc 612b  xora [$2b]       5965  xora([sysArgs+7])               #30, check replace colour
              13cd ecd0  bne  $13d0       5966  bne(pc()+3)                     #31, ignore replace colour
              13ce fcd1  bra  $13d1       5967  bra(pc()+3)                     #32,
              13cf 0125  ld   [$25]       5968  ld([sysArgs+1])                 #33, fill colour
              13d0 0d00  ld   [y,x]       5969  ld([Y,X])                       #33! get pixel
              13d1 ce00  st   [y,x]       5970  st([Y,X])                       #34, set pixel
              13d2 0116  ld   [$16]       5971  ld([vPC])                       #35,
              13d3 a002  suba $02         5972  suba(2)                         #36,
              13d4 c216  st   [$16]       5973  st([vPC])                       #37, restart
              13d5 1403  ld   $03,y       5974  ld(hi('NEXTY'),Y)               #38,
              13d6 e000  jmp  y,$00       5975  jmp(Y,'NEXTY')                  #39,
              13d7 00eb  ld   $eb         5976  ld(-42/2)                       #40,
                                          5977
                                          5978  label('.sys_parityfill_30')
.sys_parityfill_30:
              13d8 012a  ld   [$2a]       5979  ld([sysArgs+6])                 #30,
              13d9 6001  xora $01         5980  xora(0x01)                      #31,
              13da c22a  st   [$2a]       5981  st([sysArgs+6])                 #32, toggle fill
              13db 0116  ld   [$16]       5982  ld([vPC])                       #33,
              13dc a002  suba $02         5983  suba(2)                         #34,
              13dd c216  st   [$16]       5984  st([vPC])                       #35, restart
              13de 1403  ld   $03,y       5985  ld(hi('NEXTY'),Y)               #36,
              13df e000  jmp  y,$00       5986  jmp(Y,'NEXTY')                  #37,
              13e0 00ec  ld   $ec         5987  ld(-40/2)                       #38,
                                          5988
                                          5989
              13e1 0200  nop              5990  fillers(until=0xff)
              13e2 0200  nop
              13e3 0200  nop
              * 30 times
              13ff 0200  nop              5991  align(0x100, size=0x100)
                                          5992
                                          5993  #-----------------------------------------------------------------------
                                          5994  #       More vCPU instruction implementations, (0x1400)
                                          5995  #-----------------------------------------------------------------------
                                          5996
                                          5997  # JGT implementation
                                          5998  label('jgt#13')
jgt#13:       1400 0119  ld   [$19]       5999  ld([vAC+1])                     #13
              1401 e80a  blt  .jgt#16     6000  blt('.jgt#16')                  #14 if vAC.hi < 0
              1402 4118  ora  [$18]       6001  ora([vAC])                      #15
              1403 ec10  bne  .jgt#18     6002  bne('.jgt#18')                  #16 if (vAC.hi OR vAC.lo) != 0
              1404 0116  ld   [$16]       6003  ld([vPC])                       #17
              1405 8001  adda $01         6004  adda(1)                         #18
              1406 c216  st   [$16]       6005  st([vPC])                       #19
              1407 1403  ld   $03,y       6006  ld(hi('NEXTY'),Y)               #20
              1408 e000  jmp  y,$00       6007  jmp(Y,'NEXTY')                  #21
              1409 00f4  ld   $f4         6008  ld(-24/2)                       #22
                                          6009  label('.jgt#16')
.jgt#16:      140a 0116  ld   [$16]       6010  ld([vPC])                       #16
              140b 8001  adda $01         6011  adda(1)                         #17
              140c c216  st   [$16]       6012  st([vPC])                       #18
              140d 1403  ld   $03,y       6013  ld(hi('REENTER'),Y)             #19
              140e e0cb  jmp  y,$cb       6014  jmp(Y,'REENTER')                #20
              140f 00f4  ld   $f4         6015  ld(-24/2)                       #21
                                          6016  label('.jgt#18')
.jgt#18:      1410 1517  ld   [$17],y     6017  ld([vPC+1],Y)                   #18 vPC.hi
              1411 0d00  ld   [y,x]       6018  ld([Y,X])                       #19 address of branch destination
              1412 c216  st   [$16]       6019  st([vPC])                       #20
              1413 de00  st   [y,x++]     6020  st([Y,Xpp])                     #21
              1414 0d00  ld   [y,x]       6021  ld([Y,X])                       #22 hi address of jump destination
              1415 c217  st   [$17]       6022  st([vPC+1])                     #23
              1416 1403  ld   $03,y       6023  ld(hi('NEXTY'),Y)               #24
              1417 e000  jmp  y,$00       6024  jmp(Y,'NEXTY')                  #25
              1418 00f2  ld   $f2         6025  ld(-28/2)                       #26
                                          6026
                                          6027  # JLE implementation
                                          6028  label('jle#13')
jle#13:       1419 0119  ld   [$19]       6029  ld([vAC+1])                     #13
              141a e827  blt  .jle#16     6030  blt('.jle#16')                  #14 if vAC.hi < 0
              141b 4118  ora  [$18]       6031  ora([vAC])                      #15
              141c ec30  bne  .jle#18     6032  bne('.jle#18')                  #16 if (vAC.hi OR vAC.lo) != 0
              141d 0116  ld   [$16]       6033  ld([vPC])                       #17
              141e 1517  ld   [$17],y     6034  ld([vPC+1],Y)                   #18 vPC.hi
              141f 0d00  ld   [y,x]       6035  ld([Y,X])                       #19 address of branch destination
              1420 c216  st   [$16]       6036  st([vPC])                       #20
              1421 de00  st   [y,x++]     6037  st([Y,Xpp])                     #21
              1422 0d00  ld   [y,x]       6038  ld([Y,X])                       #22 hi address of jump destination
              1423 c217  st   [$17]       6039  st([vPC+1])                     #23
              1424 1403  ld   $03,y       6040  ld(hi('NEXTY'),Y)               #24
              1425 e000  jmp  y,$00       6041  jmp(Y,'NEXTY')                  #25
              1426 00f2  ld   $f2         6042  ld(-28/2)                       #26
                                          6043  label('.jle#16')
.jle#16:      1427 1517  ld   [$17],y     6044  ld([vPC+1],Y)                   #16 vPC.hi
              1428 0d00  ld   [y,x]       6045  ld([Y,X])                       #17 address of branch destination
              1429 c216  st   [$16]       6046  st([vPC])                       #18
              142a de00  st   [y,x++]     6047  st([Y,Xpp])                     #19
              142b 0d00  ld   [y,x]       6048  ld([Y,X])                       #20 hi address of jump destination
              142c c217  st   [$17]       6049  st([vPC+1])                     #21
              142d 1403  ld   $03,y       6050  ld(hi('NEXTY'),Y)               #22
              142e e000  jmp  y,$00       6051  jmp(Y,'NEXTY')                  #23
              142f 00f3  ld   $f3         6052  ld(-26/2)                       #24
                                          6053  label('.jle#18')
.jle#18:      1430 8001  adda $01         6054  adda(1)                         #18
              1431 c216  st   [$16]       6055  st([vPC])                       #19
              1432 1403  ld   $03,y       6056  ld(hi('NEXTY'),Y)               #20
              1433 e000  jmp  y,$00       6057  jmp(Y,'NEXTY')                  #21
              1434 00f4  ld   $f4         6058  ld(-24/2)                       #22
                                          6059
                                          6060  # JGE implementation
                                          6061  label('jge#13')
jge#13:       1435 0119  ld   [$19]       6062  ld([vAC+1])                     #13
              1436 e841  blt  .jge#16     6063  blt('.jge#16')                  #14 if vAC.hi < 0
              1437 0116  ld   [$16]       6064  ld([vPC])                       #15
              1438 1517  ld   [$17],y     6065  ld([vPC+1],Y)                   #16 vPC.hi
              1439 0d00  ld   [y,x]       6066  ld([Y,X])                       #17 address of branch destination
              143a c216  st   [$16]       6067  st([vPC])                       #18
              143b de00  st   [y,x++]     6068  st([Y,Xpp])                     #19
              143c 0d00  ld   [y,x]       6069  ld([Y,X])                       #20 hi address of jump destination
              143d c217  st   [$17]       6070  st([vPC+1])                     #21
              143e 1403  ld   $03,y       6071  ld(hi('NEXTY'),Y)               #22
              143f e000  jmp  y,$00       6072  jmp(Y,'NEXTY')                  #23
              1440 00f3  ld   $f3         6073  ld(-26/2)                       #24
                                          6074  label('.jge#16')
.jge#16:      1441 8001  adda $01         6075  adda(1)                         #16
              1442 c216  st   [$16]       6076  st([vPC])                       #17
              1443 1403  ld   $03,y       6077  ld(hi('NEXTY'),Y)               #18
              1444 e000  jmp  y,$00       6078  jmp(Y,'NEXTY')                  #19
              1445 00f5  ld   $f5         6079  ld(-22/2)                       #20
                                          6080
                                          6081  # PEEKA+ implementation
                                          6082  label('peeka+#13')
peeka+#13:    1446 c21d  st   [$1d]       6083  st([vTmp])                      #13
              1447 1519  ld   [$19],y     6084  ld([vAC+1],Y)                   #14
              1448 0118  ld   [$18]       6085  ld([vAC])                       #15
              1449 1200  ld   ac,x        6086  ld(AC,X)                        #16
              144a 8001  adda $01         6087  adda(1)                         #17
              144b c218  st   [$18]       6088  st([vAC])                       #18
              144c f053  beq  .peeka+#21  6089  beq('.peeka+#21')               #19 if low byte is 0x00
              144d 0d00  ld   [y,x]       6090  ld([Y,X])                       #20 peek [vAC]
              144e 111d  ld   [$1d],x     6091  ld([vTmp],X)                    #21 dst var
              144f c600  st   [x]         6092  st([X])                         #22 dst = peek [vAC]
              1450 1403  ld   $03,y       6093  ld(hi('REENTER'),Y)             #23
              1451 e0cb  jmp  y,$cb       6094  jmp(Y,'REENTER')                #24
              1452 00f2  ld   $f2         6095  ld(-28/2)                       #25
                                          6096  label('.peeka+#21')
.peeka+#21:   1453 111d  ld   [$1d],x     6097  ld([vTmp],X)                    #21 dst var
              1454 c600  st   [x]         6098  st([X])                         #22 dst = peek [vAC]
              1455 0119  ld   [$19]       6099  ld([vAC+1])                     #23
              1456 8001  adda $01         6100  adda(1)                         #24
              1457 c219  st   [$19]       6101  st([vAC+1])                     #25
              1458 1403  ld   $03,y       6102  ld(hi('NEXTY'),Y)               #26
              1459 e000  jmp  y,$00       6103  jmp(Y,'NEXTY')                  #27
              145a 00f1  ld   $f1         6104  ld(-30/2)                       #28
                                          6105
                                          6106  # ADDVW implementation
                                          6107  label('addvw#13')
addvw#13:     145b 1517  ld   [$17],y     6108  ld([vPC+1],Y)                   #13 vPC.hi
              145c c22a  st   [$2a]       6109  st([sysArgs+6])                 #14 src var addr
              145d de00  st   [y,x++]     6110  st([Y,Xpp])                     #15 X++
              145e 00f4  ld   $f4         6111  ld(min(0,maxTicks-54/2))        #16
              145f 8115  adda [$15]       6112  adda([vTicks])                  #17
              1460 e89e  blt  .addvw#20   6113  blt('.addvw#20')                #18 not enough time left, so retry
              1461 0d00  ld   [y,x]       6114  ld([Y,X])                       #19
              1462 c22b  st   [$2b]       6115  st([sysArgs+7])                 #20 dst var addr
              1463 1400  ld   $00,y       6116  ld(0,Y)                         #21
              1464 112a  ld   [$2a],x     6117  ld([sysArgs+6],X)               #22
              1465 0500  ld   [x]         6118  ld([X])                         #23 src low value
              1466 c218  st   [$18]       6119  st([vAC])                       #24
              1467 de00  st   [y,x++]     6120  st([Y,Xpp])                     #25 X++
              1468 0500  ld   [x]         6121  ld([X])                         #26 src hi value
              1469 c219  st   [$19]       6122  st([vAC+1])                     #27
              146a 112b  ld   [$2b],x     6123  ld([sysArgs+7],X)               #28
              146b 0118  ld   [$18]       6124  ld([vAC])                       #29 Low byte
              146c c21d  st   [$1d]       6125  st([vTmp])                      #30
              146d 8500  adda [x]         6126  adda([X])                       #31
              146e c218  st   [$18]       6127  st([vAC])                       #32 vAC.lo = low result
              146f e881  blt  .addvw#35   6128  bmi('.addvw#35')                #33 Now figure out if there was a carry
              1470 0500  ld   [x]         6129  ld([X])                         #34
              1471 de00  st   [y,x++]     6130  st([Y,Xpp])                     #35
              1472 411d  ora  [$1d]       6131  ora([vTmp])                     #36
              1473 e891  blt  .addvw#39   6132  bmi('.addvw#39')                #37 If Carry == 1
              1474 0500  ld   [x]         6133  ld([X])                         #38
              1475 8119  adda [$19]       6134  adda([vAC+1])                   #39
              1476 c219  st   [$19]       6135  st([vAC+1])                     #40 vAC.hi = high result
              1477 c600  st   [x]         6136  st([X])                         #41 dst.hi = high result
              1478 112b  ld   [$2b],x     6137  ld([sysArgs+7],X)               #42
              1479 0118  ld   [$18]       6138  ld([vAC])                       #43
              147a c600  st   [x]         6139  st([X])                         #44 dst.lo = low result
              147b 0116  ld   [$16]       6140  ld([vPC])                       #45
              147c 8001  adda $01         6141  adda(1)                         #46
              147d c216  st   [$16]       6142  st([vPC])                       #47
              147e 1403  ld   $03,y       6143  ld(hi('NEXTY'),Y)               #48
              147f e000  jmp  y,$00       6144  jmp(Y,'NEXTY')                  #49
              1480 00e6  ld   $e6         6145  ld(-52/2)                       #50
                                          6146
                                          6147  label('.addvw#35')
.addvw#35:    1481 de00  st   [y,x++]     6148  st([Y,Xpp])                     #35
              1482 211d  anda [$1d]       6149  anda([vTmp])                    #36
              1483 e891  blt  .addvw#39   6150  bmi('.addvw#39')                #37 If Carry == 1
              1484 0500  ld   [x]         6151  ld([X])                         #38
              1485 8119  adda [$19]       6152  adda([vAC+1])                   #39
              1486 c219  st   [$19]       6153  st([vAC+1])                     #40 vAC.hi = high result
              1487 c600  st   [x]         6154  st([X])                         #41 dst.hi = high result
              1488 112b  ld   [$2b],x     6155  ld([sysArgs+7],X)               #42
              1489 0118  ld   [$18]       6156  ld([vAC])                       #43
              148a c600  st   [x]         6157  st([X])                         #44 dst.lo = low result
              148b 0116  ld   [$16]       6158  ld([vPC])                       #45
              148c 8001  adda $01         6159  adda(1)                         #46
              148d c216  st   [$16]       6160  st([vPC])                       #47
              148e 1403  ld   $03,y       6161  ld(hi('NEXTY'),Y)               #48
              148f e000  jmp  y,$00       6162  jmp(Y,'NEXTY')                  #49
              1490 00e6  ld   $e6         6163  ld(-52/2)                       #50
                                          6164
                                          6165  label('.addvw#39')
.addvw#39:    1491 8001  adda $01         6166  adda(1)                         #39
              1492 8119  adda [$19]       6167  adda([vAC+1])                   #40
              1493 c219  st   [$19]       6168  st([vAC+1])                     #41 vAC.hi = high result
              1494 c600  st   [x]         6169  st([X])                         #42 dst.hi = high result
              1495 112b  ld   [$2b],x     6170  ld([sysArgs+7],X)               #43
              1496 0118  ld   [$18]       6171  ld([vAC])                       #44
              1497 c600  st   [x]         6172  st([X])                         #45 dst.lo = low result
              1498 0116  ld   [$16]       6173  ld([vPC])                       #46
              1499 8001  adda $01         6174  adda(1)                         #47
              149a c216  st   [$16]       6175  st([vPC])                       #48
              149b 1403  ld   $03,y       6176  ld(hi('REENTER'),Y)             #49
              149c e0cb  jmp  y,$cb       6177  jmp(Y,'REENTER')                #50
              149d 00e5  ld   $e5         6178  ld(-54/2)                       #51
                                          6179
                                          6180  label('.addvw#20')
.addvw#20:    149e 0116  ld   [$16]       6181  ld([vPC])                       #20 retry instruction
              149f a002  suba $02         6182  suba(2)                         #21
              14a0 c216  st   [$16]       6183  st([vPC])                       #22
              14a1 1403  ld   $03,y       6184  ld(hi('REENTER'),Y)             #23
              14a2 e0cb  jmp  y,$cb       6185  jmp(Y,'REENTER')                #24
              14a3 00f2  ld   $f2         6186  ld(-28/2)                       #25
                                          6187
                                          6188
                                          6189  # SUBVW implementation
                                          6190  label('subvw#13')
subvw#13:     14a4 1517  ld   [$17],y     6191  ld([vPC+1],Y)                   #13 vPC.hi
              14a5 c22a  st   [$2a]       6192  st([sysArgs+6])                 #14 src var addr
              14a6 de00  st   [y,x++]     6193  st([Y,Xpp])                     #15 X++
              14a7 8001  adda $01         6194  adda(1)                         #16
              14a8 c21d  st   [$1d]       6195  st([vTmp])                      #17 src var high addr
              14a9 00f4  ld   $f4         6196  ld(min(0,maxTicks-54/2))        #18
              14aa 8115  adda [$15]       6197  adda([vTicks])                  #19
              14ab e8df  blt  .subvw#22   6198  blt('.subvw#22')                #20 not enough time left, so retry
              14ac 0d00  ld   [y,x]       6199  ld([Y,X])                       #21
              14ad c22b  st   [$2b]       6200  st([sysArgs+7])                 #22 dst var addr
              14ae 1400  ld   $00,y       6201  ld(0,Y)                         #23
              14af 112b  ld   [$2b],x     6202  ld([sysArgs+7],X)               #24
              14b0 0500  ld   [x]         6203  ld([X])                         #25 dst low value
              14b1 c218  st   [$18]       6204  st([vAC])                       #26
              14b2 de00  st   [y,x++]     6205  st([Y,Xpp])                     #27 X++
              14b3 0500  ld   [x]         6206  ld([X])                         #28 dst hi value
              14b4 c219  st   [$19]       6207  st([vAC+1])                     #29
              14b5 112a  ld   [$2a],x     6208  ld([sysArgs+6],X)               #30
              14b6 0118  ld   [$18]       6209  ld([vAC])                       #31 Low byte
              14b7 e8cc  blt  .subvw#34   6210  bmi('.subvw#34')                #32
              14b8 a500  suba [x]         6211  suba([X])                       #33
              14b9 c218  st   [$18]       6212  st([vAC])                       #34 Store low result
              14ba 4500  ora  [x]         6213  ora([X])                        #35 Carry in bit 7
              14bb 3080  anda $80,x       6214  anda(0x80,X)                    #36 Move carry to bit 0
              14bc 0119  ld   [$19]       6215  ld([vAC+1])                     #37
              14bd a500  suba [x]         6216  suba([X])                       #38
              14be 111d  ld   [$1d],x     6217  ld([vTmp],X)                    #39
              14bf a500  suba [x]         6218  suba([X])                       #40
              14c0 c219  st   [$19]       6219  st([vAC+1])                     #41
              14c1 112b  ld   [$2b],x     6220  ld([sysArgs+7],X)               #42
              14c2 0118  ld   [$18]       6221  ld([vAC])                       #43
              14c3 de00  st   [y,x++]     6222  st([Y,Xpp])                     #44
              14c4 0119  ld   [$19]       6223  ld([vAC+1])                     #45
              14c5 c600  st   [x]         6224  st([X])                         #46
              14c6 0116  ld   [$16]       6225  ld([vPC])                       #47
              14c7 8001  adda $01         6226  adda(1)                         #48
              14c8 c216  st   [$16]       6227  st([vPC])                       #49
              14c9 1403  ld   $03,y       6228  ld(hi('NEXTY'),Y)               #50
              14ca e000  jmp  y,$00       6229  jmp(Y,'NEXTY')                  #51
              14cb 00e5  ld   $e5         6230  ld(-54/2)                       #52
                                          6231
                                          6232  label('.subvw#34')
.subvw#34:    14cc c218  st   [$18]       6233  st([vAC])                       #34 Store low result
              14cd 2500  anda [x]         6234  anda([X])                       #35 Carry in bit 7
              14ce 3080  anda $80,x       6235  anda(0x80,X)                    #36 Move carry to bit 0
              14cf 0119  ld   [$19]       6236  ld([vAC+1])                     #37
              14d0 a500  suba [x]         6237  suba([X])                       #38
              14d1 111d  ld   [$1d],x     6238  ld([vTmp],X)                    #39
              14d2 a500  suba [x]         6239  suba([X])                       #40
              14d3 c219  st   [$19]       6240  st([vAC+1])                     #41
              14d4 112b  ld   [$2b],x     6241  ld([sysArgs+7],X)               #42
              14d5 0118  ld   [$18]       6242  ld([vAC])                       #43
              14d6 de00  st   [y,x++]     6243  st([Y,Xpp])                     #44
              14d7 0119  ld   [$19]       6244  ld([vAC+1])                     #45
              14d8 c600  st   [x]         6245  st([X])                         #46
              14d9 0116  ld   [$16]       6246  ld([vPC])                       #47
              14da 8001  adda $01         6247  adda(1)                         #48
              14db c216  st   [$16]       6248  st([vPC])                       #49
              14dc 1403  ld   $03,y       6249  ld(hi('NEXTY'),Y)               #50
              14dd e000  jmp  y,$00       6250  jmp(Y,'NEXTY')                  #51
              14de 00e5  ld   $e5         6251  ld(-54/2)                       #52
                                          6252
                                          6253  label('.subvw#22')
.subvw#22:    14df 0116  ld   [$16]       6254  ld([vPC])                       #22 retry instruction
              14e0 a002  suba $02         6255  suba(2)                         #23
              14e1 c216  st   [$16]       6256  st([vPC])                       #24
              14e2 1403  ld   $03,y       6257  ld(hi('REENTER'),Y)             #25
              14e3 e0cb  jmp  y,$cb       6258  jmp(Y,'REENTER')                #26
              14e4 00f1  ld   $f1         6259  ld(-30/2)                       #27
                                          6260
                                          6261
                                          6262  # PREFX3 implementation
                                          6263  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2099#p2099
                                          6264  label('prefx3#13')
prefx3#13:    14e5 0116  ld   [$16]       6265  ld([vPC])                       #13
              14e6 8002  adda $02         6266  adda(2)                         #14
              14e7 c216  st   [$16]       6267  st([vPC])                       #15 Advance vPC
              14e8 0021  ld   $21         6268  ld(hi('PREFX3_PAGE'))           #16 ENTER is at $(n-1)ff, where n = instruction page
              14e9 c202  st   [$02]       6269  st([vCpuSelect])                #17
              14ea 9401  adda $01,y       6270  adda(1,Y)                       #18
              14eb e000  jmp  y,$00       6271  jmp(Y,'NEXTY')                  #19
              14ec 00f5  ld   $f5         6272  ld(-22/2)                       #20
                                          6273
                                          6274  # PREFX2 implementation
                                          6275  label('prefx2#13')
prefx2#13:    14ed 0116  ld   [$16]       6276  ld([vPC])                       #13
              14ee 8001  adda $01         6277  adda(1)                         #14
              14ef c216  st   [$16]       6278  st([vPC])                       #15 Advance vPC
              14f0 0022  ld   $22         6279  ld(hi('PREFX2_PAGE'))           #16 ENTER is at $(n-1)ff, where n = instruction page
              14f1 c202  st   [$02]       6280  st([vCpuSelect])                #17
              14f2 9401  adda $01,y       6281  adda(1,Y)                       #18
              14f3 e000  jmp  y,$00       6282  jmp(Y,'NEXTY')                  #19
              14f4 00f5  ld   $f5         6283  ld(-22/2)                       #20
                                          6284
                                          6285  # PREFX1 implementation
                                          6286  label('prefx1#13')
prefx1#13:    14f5 c202  st   [$02]       6287  st([vCpuSelect])                #13
              14f6 9401  adda $01,y       6288  adda(1,Y)                       #14
              14f7 e000  jmp  y,$00       6289  jmp(Y,'NEXTY')                  #15
              14f8 00f7  ld   $f7         6290  ld(-18/2)                       #16
                                          6291
                                          6292
              14f9 0200  nop              6293  fillers(until=0xff)
              14fa 0200  nop
              14fb 0200  nop
              * 6 times
              14ff 0200  nop              6294  align(0x100, size=0x100)
                                          6295
                                          6296  #-----------------------------------------------------------------------
                                          6297  #       More vCPU instruction implementations, (0x1500)
                                          6298  #-----------------------------------------------------------------------
                                          6299
                                          6300  # ADDI implementation
                                          6301  label('addi#13')
addi#13:      1500 8118  adda [$18]       6302  adda([vAC])                     #13
              1501 c218  st   [$18]       6303  st([vAC])                       #14 Store low result
              1502 e80c  blt  .addi#17    6304  bmi('.addi#17')                 #15 Now figure out if there was a carry
              1503 a11d  suba [$1d]       6305  suba([vTmp])                    #16 Gets back the initial value of vAC
              1504 411d  ora  [$1d]       6306  ora([vTmp])                     #17 Carry in bit 7
              1505 3080  anda $80,x       6307  anda(0x80,X)                    #18 Move carry to bit 0
              1506 0500  ld   [x]         6308  ld([X])                         #19
              1507 8119  adda [$19]       6309  adda([vAC+1])                   #20 Add the high bytes with carry
              1508 c219  st   [$19]       6310  st([vAC+1])                     #21 Store high result
              1509 1403  ld   $03,y       6311  ld(hi('NEXTY'),Y)               #22
              150a e000  jmp  y,$00       6312  jmp(Y,'NEXTY')                  #23
              150b 00f3  ld   $f3         6313  ld(-26/2)                       #24
                                          6314  label('.addi#17')
.addi#17:     150c 211d  anda [$1d]       6315  anda([vTmp])                    #17 Carry in bit 7
              150d 3080  anda $80,x       6316  anda(0x80,X)                    #18 Move carry to bit 0
              150e 0500  ld   [x]         6317  ld([X])                         #19
              150f 8119  adda [$19]       6318  adda([vAC+1])                   #20 Add the high bytes with carry
              1510 c219  st   [$19]       6319  st([vAC+1])                     #21 Store high result
              1511 1403  ld   $03,y       6320  ld(hi('NEXTY'),Y)               #22
              1512 e000  jmp  y,$00       6321  jmp(Y,'NEXTY')                  #23
              1513 00f3  ld   $f3         6322  ld(-26/2)                       #24
                                          6323
                                          6324  # SUBI implementation
                                          6325  label('subi#13')
subi#13:      1514 0118  ld   [$18]       6326  ld([vAC])                       #13
              1515 e820  blt  .subi#16    6327  bmi('.subi#16')                 #14
              1516 a11d  suba [$1d]       6328  suba([vTmp])                    #15
              1517 c218  st   [$18]       6329  st([vAC])                       #16 Store low result
              1518 411d  ora  [$1d]       6330  ora([vTmp])                     #17 Carry in bit 7
              1519 3080  anda $80,x       6331  anda(0x80,X)                    #18 Move carry to bit 0
              151a 0119  ld   [$19]       6332  ld([vAC+1])                     #19
              151b a500  suba [x]         6333  suba([X])                       #20
              151c c219  st   [$19]       6334  st([vAC+1])                     #21
              151d 1403  ld   $03,y       6335  ld(hi('NEXTY'),Y)               #22
              151e e000  jmp  y,$00       6336  jmp(Y,'NEXTY')                  #23
              151f 00f3  ld   $f3         6337  ld(-26/2)                       #24
                                          6338  label('.subi#16')
.subi#16:     1520 c218  st   [$18]       6339  st([vAC])                       #16 Store low result
              1521 211d  anda [$1d]       6340  anda([vTmp])                    #17 Carry in bit 7
              1522 3080  anda $80,x       6341  anda(0x80,X)                    #18 Move carry to bit 0
              1523 0119  ld   [$19]       6342  ld([vAC+1])                     #19
              1524 a500  suba [x]         6343  suba([X])                       #20
              1525 c219  st   [$19]       6344  st([vAC+1])                     #21
              1526 1403  ld   $03,y       6345  ld(hi('NEXTY'),Y)               #22
              1527 e000  jmp  y,$00       6346  jmp(Y,'NEXTY')                  #23
              1528 00f3  ld   $f3         6347  ld(-26/2)                       #24
                                          6348
                                          6349  # XORW implementation
                                          6350  label('xorw#13')
xorw#13:      1529 1400  ld   $00,y       6351  ld(0,Y)                         #13
              152a 0500  ld   [x]         6352  ld([X])                         #14
              152b de00  st   [y,x++]     6353  st([Y,Xpp])                     #15
              152c 6118  xora [$18]       6354  xora([vAC])                     #16
              152d c218  st   [$18]       6355  st([vAC])                       #17
              152e 0500  ld   [x]         6356  ld([X])                         #18
              152f 6119  xora [$19]       6357  xora([vAC+1])                   #19
              1530 c219  st   [$19]       6358  st([vAC+1])                     #20
              1531 1403  ld   $03,y       6359  ld(hi('REENTER'),Y)             #21
              1532 e0cb  jmp  y,$cb       6360  jmp(Y,'REENTER')                #22
              1533 00f3  ld   $f3         6361  ld(-26/2)                       #23
                                          6362
                                          6363  # INCW implementation
                                          6364  label('incw#13')
incw#13:      1534 1400  ld   $00,y       6365  ld(0,Y)                         #13
              1535 1200  ld   ac,x        6366  ld(AC,X)                        #14 address of low byte to be added
              1536 0500  ld   [x]         6367  ld([X])                         #15
              1537 8001  adda $01         6368  adda(1)                         #16
              1538 f03d  beq  .incw#19    6369  beq('.incw#19')                 #17 if low byte is 0x00
              1539 de00  st   [y,x++]     6370  st([Y,Xpp])                     #18 inc low byte
              153a 1403  ld   $03,y       6371  ld(hi('REENTER'),Y)             #19
              153b e0cb  jmp  y,$cb       6372  jmp(Y,'REENTER')                #20
              153c 00f4  ld   $f4         6373  ld(-24/2)                       #21
                                          6374  label('.incw#19')
.incw#19:     153d 0500  ld   [x]         6375  ld([X])                         #19
              153e 8001  adda $01         6376  adda(1)                         #20
              153f c600  st   [x]         6377  st([X])                         #21 inc high byte
              1540 1403  ld   $03,y       6378  ld(hi('NEXTY'),Y)               #22
              1541 e000  jmp  y,$00       6379  jmp(Y,'NEXTY')                  #23
              1542 00f3  ld   $f3         6380  ld(-26/2)                       #24
                                          6381
                                          6382  # DECW implementation
                                          6383  label('decw#13')
decw#13:      1543 1400  ld   $00,y       6384  ld(0,Y)                         #13
              1544 1200  ld   ac,x        6385  ld(AC,X)                        #14 address of low byte to be added
              1545 0500  ld   [x]         6386  ld([X])                         #15
              1546 a001  suba $01         6387  suba(1)                         #16
              1547 de00  st   [y,x++]     6388  st([Y,Xpp])                     #17 dec low byte
              1548 60ff  xora $ff         6389  xora(0xff)                      #18 if low byte is 0xff
              1549 f04d  beq  .decw#21    6390  beq('.decw#21')                 #19
              154a 1403  ld   $03,y       6391  ld(hi('NEXTY'),Y)               #20
              154b e000  jmp  y,$00       6392  jmp(Y,'NEXTY')                  #21
              154c 00f4  ld   $f4         6393  ld(-24/2)                       #22
                                          6394  label('.decw#21')
.decw#21:     154d 0500  ld   [x]         6395  ld([X])                         #21
              154e a001  suba $01         6396  suba(1)                         #22
              154f c600  st   [x]         6397  st([X])                         #23 dec high byte
              1550 1403  ld   $03,y       6398  ld(hi('NEXTY'),Y)               #24
              1551 e000  jmp  y,$00       6399  jmp(Y,'NEXTY')                  #25
              1552 00f2  ld   $f2         6400  ld(-28/2)                       #26
                                          6401
                                          6402  # DBNE implementation
                                          6403  label('dbne#13')
dbne#13:      1553 c21d  st   [$1d]       6404  st([vTmp])                      #13 branch offset
              1554 de00  st   [y,x++]     6405  st([Y,Xpp])                     #14 X++, address of counter
              1555 0d00  ld   [y,x]       6406  ld([Y,X])                       #15
              1556 1200  ld   ac,x        6407  ld(AC,X)                        #16 fetch counter
              1557 0500  ld   [x]         6408  ld([X])                         #17
              1558 a001  suba $01         6409  suba(1)                         #18 decrement counter
              1559 f060  beq  .dbne#21    6410  beq('.dbne#21')                 #19 if zero BRA
              155a c600  st   [x]         6411  st([X])                         #20
              155b 011d  ld   [$1d]       6412  ld([vTmp])                      #21
              155c c216  st   [$16]       6413  st([vPC])                       #22 BRA to branch offset
              155d 1403  ld   $03,y       6414  ld(hi('REENTER'),Y)             #23
              155e e0cb  jmp  y,$cb       6415  jmp(Y,'REENTER')                #24
              155f 00f2  ld   $f2         6416  ld(-28/2)                       #25
                                          6417  label('.dbne#21')
.dbne#21:     1560 0116  ld   [$16]       6418  ld([vPC])                       #21
              1561 8001  adda $01         6419  adda(1)                         #22
              1562 c216  st   [$16]       6420  st([vPC])                       #23 advance vPC by 1
              1563 1403  ld   $03,y       6421  ld(hi('NEXTY'),Y)               #24
              1564 e000  jmp  y,$00       6422  jmp(Y,'NEXTY')                  #25
              1565 00f2  ld   $f2         6423  ld(-28/2)                       #26
                                          6424
                                          6425  # TEQ implementation
                                          6426  label('teq#13')
teq#13:       1566 1200  ld   ac,x        6427  ld(AC,X)                        #13 address of var
              1567 0119  ld   [$19]       6428  ld([vAC+1])                     #14
              1568 4118  ora  [$18]       6429  ora([vAC])                      #15
              1569 f070  beq  .teq#18     6430  beq('.teq#18')                  #16 if (vAC.hi OR vAC.lo) == 0
              156a 1400  ld   $00,y       6431  ld(0,Y)                         #17
              156b dc00  st   $00,[y,x++] 6432  st(0,[Y,Xpp])                   #18 var.lo = 0
              156c cc00  st   $00,[y,x]   6433  st(0,[Y,X])                     #19 var.hi = 0
              156d 1403  ld   $03,y       6434  ld(hi('NEXTY'),Y)               #20
              156e e000  jmp  y,$00       6435  jmp(Y,'NEXTY')                  #21
              156f 00f4  ld   $f4         6436  ld(-24/2)                       #22
                                          6437  label('.teq#18')
.teq#18:      1570 dc01  st   $01,[y,x++] 6438  st(1,[Y,Xpp])                   #18 var.lo = 1
              1571 cc00  st   $00,[y,x]   6439  st(0,[Y,X])                     #19 var.hi = 0
              1572 1403  ld   $03,y       6440  ld(hi('NEXTY'),Y)               #20
              1573 e000  jmp  y,$00       6441  jmp(Y,'NEXTY')                  #21
              1574 00f4  ld   $f4         6442  ld(-24/2)                       #22
                                          6443
                                          6444  # TNE implementation
                                          6445  label('tne#13')
tne#13:       1575 1200  ld   ac,x        6446  ld(AC,X)                        #13 address of var
              1576 0119  ld   [$19]       6447  ld([vAC+1])                     #14
              1577 4118  ora  [$18]       6448  ora([vAC])                      #15
              1578 f07f  beq  .tne#18     6449  beq('.tne#18')                  #16 if (vAC.hi OR vAC.lo) == 0
              1579 1400  ld   $00,y       6450  ld(0,Y)                         #17
              157a dc01  st   $01,[y,x++] 6451  st(1,[Y,Xpp])                   #18 var.lo = 1
              157b cc00  st   $00,[y,x]   6452  st(0,[Y,X])                     #19 var.hi = 0
              157c 1403  ld   $03,y       6453  ld(hi('NEXTY'),Y)               #20
              157d e000  jmp  y,$00       6454  jmp(Y,'NEXTY')                  #21
              157e 00f4  ld   $f4         6455  ld(-24/2)                       #22
                                          6456  label('.tne#18')
.tne#18:      157f dc00  st   $00,[y,x++] 6457  st(0,[Y,Xpp])                   #18 var.lo = 0
              1580 cc00  st   $00,[y,x]   6458  st(0,[Y,X])                     #19 var.hi = 0
              1581 1403  ld   $03,y       6459  ld(hi('NEXTY'),Y)               #20
              1582 e000  jmp  y,$00       6460  jmp(Y,'NEXTY')                  #21
              1583 00f4  ld   $f4         6461  ld(-24/2)                       #22
                                          6462
                                          6463  # TGE implementation
                                          6464  label('tge#13')
tge#13:       1584 1200  ld   ac,x        6465  ld(AC,X)                        #13 address of var
              1585 0119  ld   [$19]       6466  ld([vAC+1])                     #14
              1586 e88d  blt  .tge#17     6467  bmi('.tge#17')                  #15 if vAC.hi < 0
              1587 1400  ld   $00,y       6468  ld(0,Y)                         #16
              1588 dc01  st   $01,[y,x++] 6469  st(1,[Y,Xpp])                   #17 var.lo = 1
              1589 cc00  st   $00,[y,x]   6470  st(0,[Y,X])                     #18 var.hi = 0
              158a 1403  ld   $03,y       6471  ld(hi('REENTER'),Y)             #19
              158b e0cb  jmp  y,$cb       6472  jmp(Y,'REENTER')                #20
              158c 00f4  ld   $f4         6473  ld(-24/2)                       #21
                                          6474  label('.tge#17')
.tge#17:      158d dc00  st   $00,[y,x++] 6475  st(0,[Y,Xpp])                   #17 var.lo = 0
              158e cc00  st   $00,[y,x]   6476  st(0,[Y,X])                     #18 var.hi = 0
              158f 1403  ld   $03,y       6477  ld(hi('REENTER'),Y)             #19
              1590 e0cb  jmp  y,$cb       6478  jmp(Y,'REENTER')                #20
              1591 00f4  ld   $f4         6479  ld(-24/2)                       #21
                                          6480
                                          6481  # TLT implementation
                                          6482  label('tlt#13')
tlt#13:       1592 1200  ld   ac,x        6483  ld(AC,X)                        #13 address of var
              1593 0119  ld   [$19]       6484  ld([vAC+1])                     #14
              1594 e89b  blt  .tlt#17     6485  bmi('.tlt#17')                  #15 if vAC.hi < 0
              1595 1400  ld   $00,y       6486  ld(0,Y)                         #16
              1596 dc00  st   $00,[y,x++] 6487  st(0,[Y,Xpp])                   #17 var.lo = 0
              1597 cc00  st   $00,[y,x]   6488  st(0,[Y,X])                     #18 var.hi = 0
              1598 1403  ld   $03,y       6489  ld(hi('REENTER'),Y)             #19
              1599 e0cb  jmp  y,$cb       6490  jmp(Y,'REENTER')                #20
              159a 00f4  ld   $f4         6491  ld(-24/2)                       #21
                                          6492  label('.tlt#17')
.tlt#17:      159b dc01  st   $01,[y,x++] 6493  st(1,[Y,Xpp])                   #17 var.lo = 1
              159c cc00  st   $00,[y,x]   6494  st(0,[Y,X])                     #18 var.hi = 0
              159d 1403  ld   $03,y       6495  ld(hi('REENTER'),Y)             #19
              159e e0cb  jmp  y,$cb       6496  jmp(Y,'REENTER')                #20
              159f 00f4  ld   $f4         6497  ld(-24/2)                       #21
                                          6498
                                          6499  # TGT implementation
                                          6500  label('tgt#13')
tgt#13:       15a0 1400  ld   $00,y       6501  ld(0,Y)                         #13
              15a1 1200  ld   ac,x        6502  ld(AC,X)                        #14 address of var
              15a2 0119  ld   [$19]       6503  ld([vAC+1])                     #15
              15a3 e8ac  blt  .tgt#18     6504  blt('.tgt#18')                  #16 if vAC.hi < 0
              15a4 4118  ora  [$18]       6505  ora([vAC])                      #17
              15a5 ecb1  bne  .tgt#20     6506  bne('.tgt#20')                  #18 if (vAC.hi OR vAC.lo) != 0
              15a6 0200  nop              6507  nop()                           #19
              15a7 dc00  st   $00,[y,x++] 6508  st(0,[Y,Xpp])                   #20 var.lo = 0
              15a8 cc00  st   $00,[y,x]   6509  st(0,[Y,X])                     #21 var.hi = 0
              15a9 1403  ld   $03,y       6510  ld(hi('NEXTY'),Y)               #22
              15aa e000  jmp  y,$00       6511  jmp(Y,'NEXTY')                  #23
              15ab 00f3  ld   $f3         6512  ld(-26/2)                       #24
                                          6513  label('.tgt#18')
.tgt#18:      15ac dc00  st   $00,[y,x++] 6514  st(0,[Y,Xpp])                   #18 var.lo = 0
              15ad cc00  st   $00,[y,x]   6515  st(0,[Y,X])                     #19 var.hi = 0
              15ae 1403  ld   $03,y       6516  ld(hi('NEXTY'),Y)               #20
              15af e000  jmp  y,$00       6517  jmp(Y,'NEXTY')                  #21
              15b0 00f4  ld   $f4         6518  ld(-24/2)                       #22
                                          6519  label('.tgt#20')
.tgt#20:      15b1 dc01  st   $01,[y,x++] 6520  st(1,[Y,Xpp])                   #20 var.lo = 1
              15b2 cc00  st   $00,[y,x]   6521  st(0,[Y,X])                     #21 var.hi = 0
              15b3 1403  ld   $03,y       6522  ld(hi('NEXTY'),Y)               #22
              15b4 e000  jmp  y,$00       6523  jmp(Y,'NEXTY')                  #23
              15b5 00f3  ld   $f3         6524  ld(-26/2)                       #24
                                          6525
                                          6526  # TLE implementation
                                          6527  label('tle#13')
tle#13:       15b6 1400  ld   $00,y       6528  ld(0,Y)                         #13
              15b7 1200  ld   ac,x        6529  ld(AC,X)                        #14 address of var
              15b8 0119  ld   [$19]       6530  ld([vAC+1])                     #15
              15b9 e8c2  blt  .tle#18     6531  blt('.tle#18')                  #16 if vAC.hi < 0
              15ba 4118  ora  [$18]       6532  ora([vAC])                      #17
              15bb ecc7  bne  .tle#20     6533  bne('.tle#20')                  #18 if (vAC.hi OR vAC.lo) != 0
              15bc 0200  nop              6534  nop()                           #19
              15bd dc01  st   $01,[y,x++] 6535  st(1,[Y,Xpp])                   #20 var.lo = 1
              15be cc00  st   $00,[y,x]   6536  st(0,[Y,X])                     #21 var.hi = 0
              15bf 1403  ld   $03,y       6537  ld(hi('NEXTY'),Y)               #22
              15c0 e000  jmp  y,$00       6538  jmp(Y,'NEXTY')                  #23
              15c1 00f3  ld   $f3         6539  ld(-26/2)                       #24
                                          6540  label('.tle#18')
.tle#18:      15c2 dc01  st   $01,[y,x++] 6541  st(1,[Y,Xpp])                   #18 var.lo = 1
              15c3 cc00  st   $00,[y,x]   6542  st(0,[Y,X])                     #19 var.hi = 0
              15c4 1403  ld   $03,y       6543  ld(hi('NEXTY'),Y)               #20
              15c5 e000  jmp  y,$00       6544  jmp(Y,'NEXTY')                  #21
              15c6 00f4  ld   $f4         6545  ld(-24/2)                       #22
                                          6546  label('.tle#20')
.tle#20:      15c7 dc00  st   $00,[y,x++] 6547  st(0,[Y,Xpp])                   #20 var.lo = 0
              15c8 cc00  st   $00,[y,x]   6548  st(0,[Y,X])                     #21 var.hi = 0
              15c9 1403  ld   $03,y       6549  ld(hi('NEXTY'),Y)               #22
              15ca e000  jmp  y,$00       6550  jmp(Y,'NEXTY')                  #23
              15cb 00f3  ld   $f3         6551  ld(-26/2)                       #24
                                          6552
                                          6553  # INCWA implementation
                                          6554  label('incwa#13')
incwa#13:     15cc 1400  ld   $00,y       6555  ld(0,Y)                         #13
              15cd 1200  ld   ac,x        6556  ld(AC,X)                        #14 address of low byte to be added
              15ce 0500  ld   [x]         6557  ld([X])                         #15
              15cf 8001  adda $01         6558  adda(1)                         #16
              15d0 de00  st   [y,x++]     6559  st([Y,Xpp])                     #17 inc low byte
              15d1 c218  st   [$18]       6560  st([vAC])                       #18
              15d2 f0d8  beq  .incwa#21   6561  beq('.incwa#21')                #19 if low byte is 0x00
              15d3 0500  ld   [x]         6562  ld([X])                         #20
              15d4 c219  st   [$19]       6563  st([vAC+1])                     #21
              15d5 1403  ld   $03,y       6564  ld(hi('NEXTY'),Y)               #22
              15d6 e000  jmp  y,$00       6565  jmp(Y,'NEXTY')                  #23
              15d7 00f3  ld   $f3         6566  ld(-26/2)                       #24
                                          6567  label('.incwa#21')
.incwa#21:    15d8 8001  adda $01         6568  adda(1)                         #21
              15d9 c600  st   [x]         6569  st([X])                         #22 inc high byte
              15da c219  st   [$19]       6570  st([vAC+1])                     #23
              15db 1403  ld   $03,y       6571  ld(hi('NEXTY'),Y)               #24
              15dc e000  jmp  y,$00       6572  jmp(Y,'NEXTY')                  #25
              15dd 00f2  ld   $f2         6573  ld(-28/2)                       #26
                                          6574
                                          6575  # DECWA implementation
                                          6576  label('decwa#13')
decwa#13:     15de 1400  ld   $00,y       6577  ld(0,Y)                         #13
              15df 1200  ld   ac,x        6578  ld(AC,X)                        #14 address of low byte to be added
              15e0 0500  ld   [x]         6579  ld([X])                         #15
              15e1 a001  suba $01         6580  suba(1)                         #16
              15e2 de00  st   [y,x++]     6581  st([Y,Xpp])                     #17 dec low byte
              15e3 c218  st   [$18]       6582  st([vAC])                       #18
              15e4 60ff  xora $ff         6583  xora(0xff)                      #19 if low byte is 0xff
              15e5 f0eb  beq  .decwa#22   6584  beq('.decwa#22')                #20
              15e6 0500  ld   [x]         6585  ld([X])                         #21
              15e7 c219  st   [$19]       6586  st([vAC+1])                     #22
              15e8 1403  ld   $03,y       6587  ld(hi('REENTER'),Y)             #23
              15e9 e0cb  jmp  y,$cb       6588  jmp(Y,'REENTER')                #24
              15ea 00f2  ld   $f2         6589  ld(-28/2)                       #25
                                          6590  label('.decwa#22')
.decwa#22:    15eb a001  suba $01         6591  suba(1)                         #22
              15ec c600  st   [x]         6592  st([X])                         #23 dec high byte
              15ed c219  st   [$19]       6593  st([vAC+1])                     #24
              15ee 1403  ld   $03,y       6594  ld(hi('REENTER'),Y)             #25
              15ef e0cb  jmp  y,$cb       6595  jmp(Y,'REENTER')                #26
              15f0 00f1  ld   $f1         6596  ld(-30/2)                       #27
                                          6597
                                          6598
              15f1 0200  nop              6599  fillers(until=0xff)
              15f2 0200  nop
              15f3 0200  nop
              * 14 times
              15ff 0200  nop              6600  align(0x100, size=0x100)
                                          6601
                                          6602  #-----------------------------------------------------------------------
                                          6603  #       More vCPU instruction implementations, (0x1600)
                                          6604  #-----------------------------------------------------------------------
                                          6605
                                          6606  # INC implementation
                                          6607  label('inc#13')
inc#13:       1600 1200  ld   ac,x        6608  ld(AC,X)                        #13
              1601 0500  ld   [x]         6609  ld([X])                         #14
              1602 8001  adda $01         6610  adda(1)                         #15
              1603 c600  st   [x]         6611  st([X])                         #16
              1604 1403  ld   $03,y       6612  ld(hi('REENTER'),Y)             #17
              1605 e0cb  jmp  y,$cb       6613  jmp(Y,'REENTER')                #18
              1606 00f5  ld   $f5         6614  ld(-22/2)                       #19
                                          6615
                                          6616  # DEC implementation
                                          6617  label('dec#13')
dec#13:       1607 1200  ld   ac,x        6618  ld(AC,X)                        #13
              1608 0500  ld   [x]         6619  ld([X])                         #14
              1609 a001  suba $01         6620  suba(1)                         #15
              160a c600  st   [x]         6621  st([X])                         #16
              160b 1403  ld   $03,y       6622  ld(hi('REENTER'),Y)             #17
              160c e0cb  jmp  y,$cb       6623  jmp(Y,'REENTER')                #18
              160d 00f5  ld   $f5         6624  ld(-22/2)                       #19
                                          6625
                                          6626  # LD implementation
                                          6627  label('ld#13')
ld#13:        160e 1200  ld   ac,x        6628  ld(AC,X)                        #13
              160f 0500  ld   [x]         6629  ld([X])                         #14
              1610 c218  st   [$18]       6630  st([vAC])                       #15
              1611 0000  ld   $00         6631  ld(0)                           #16
              1612 c219  st   [$19]       6632  st([vAC+1])                     #17
              1613 1403  ld   $03,y       6633  ld(hi('NEXTY'),Y)               #18
              1614 e000  jmp  y,$00       6634  jmp(Y,'NEXTY')                  #19
              1615 00f5  ld   $f5         6635  ld(-22/2)                       #20
                                          6636
                                          6637  # LDI implementation
                                          6638  label('ldi#13')
ldi#13:       1616 c218  st   [$18]       6639  st([vAC])                       #13
              1617 0000  ld   $00         6640  ld(0)                           #14
              1618 c219  st   [$19]       6641  st([vAC+1])                     #15
              1619 1403  ld   $03,y       6642  ld(hi('NEXTY'),Y)               #16
              161a e000  jmp  y,$00       6643  jmp(Y,'NEXTY')                  #17
              161b 00f6  ld   $f6         6644  ld(-20/2)                       #18
                                          6645
                                          6646  # ST implementation
                                          6647  label('st#13')
st#13:        161c 1200  ld   ac,x        6648  ld(AC,X)                        #13
              161d 0118  ld   [$18]       6649  ld([vAC])                       #14
              161e c600  st   [x]         6650  st([X])                         #15
              161f 1403  ld   $03,y       6651  ld(hi('NEXTY'),Y)               #16
              1620 e000  jmp  y,$00       6652  jmp(Y,'NEXTY')                  #17
              1621 00f6  ld   $f6         6653  ld(-20/2)                       #18
                                          6654
                                          6655  # ORI implementation
                                          6656  label('ori#13')
ori#13:       1622 4118  ora  [$18]       6657  ora([vAC])                      #13
              1623 c218  st   [$18]       6658  st([vAC])                       #14
              1624 1403  ld   $03,y       6659  ld(hi('REENTER'),Y)             #15
              1625 e0cb  jmp  y,$cb       6660  jmp(Y,'REENTER')                #16
              1626 00f6  ld   $f6         6661  ld(-20/2)                       #17
                                          6662
                                          6663  # ALLOC implementation
                                          6664  label('alloc#13')
alloc#13:     1627 811c  adda [$1c]       6665  adda([vSP])                     #13
              1628 c21c  st   [$1c]       6666  st([vSP])                       #14
              1629 1403  ld   $03,y       6667  ld(hi('REENTER'),Y)             #15
              162a e0cb  jmp  y,$cb       6668  jmp(Y,'REENTER')                #16
              162b 00f6  ld   $f6         6669  ld(-20/2)                       #17
                                          6670
                                          6671  # MOV implementation
                                          6672  label('mov#13')
mov#13:       162c 1517  ld   [$17],y     6673  ld([vPC+1],Y)                   #13
              162d c21d  st   [$1d]       6674  st([vTmp])                      #14 save address of dst var
              162e de00  st   [y,x++]     6675  st([Y,Xpp])                     #15 X++
              162f 0d00  ld   [y,x]       6676  ld([Y,X])                       #16 address of src var
              1630 1200  ld   ac,x        6677  ld(AC,X)                        #17
              1631 0500  ld   [x]         6678  ld([X])                         #18 get src
              1632 111d  ld   [$1d],x     6679  ld([vTmp],X)                    #19 address of dst var
              1633 c600  st   [x]         6680  st([X])                         #20 dst = src
              1634 0116  ld   [$16]       6681  ld([vPC])                       #21
              1635 8001  adda $01         6682  adda(1)                         #22
              1636 c216  st   [$16]       6683  st([vPC])                       #23
              1637 1403  ld   $03,y       6684  ld(hi('NEXTY'),Y)               #24
              1638 e000  jmp  y,$00       6685  jmp(Y,'NEXTY')                  #25
              1639 00f2  ld   $f2         6686  ld(-28/2)                       #26
                                          6687
                                          6688  # PEEKA implementation
                                          6689  label('peeka#13')
peeka#13:     163a c21d  st   [$1d]       6690  st([vTmp])                      #13
              163b 1519  ld   [$19],y     6691  ld([vAC+1],Y)                   #14
              163c 1118  ld   [$18],x     6692  ld([vAC],X)                     #15
              163d 0d00  ld   [y,x]       6693  ld([Y,X])                       #16 peek [vAC]
              163e 111d  ld   [$1d],x     6694  ld([vTmp],X)                    #17 dst var
              163f c600  st   [x]         6695  st([X])                         #18 dst = peek [vAC]
              1640 1403  ld   $03,y       6696  ld(hi('REENTER'),Y)             #19
              1641 e0cb  jmp  y,$cb       6697  jmp(Y,'REENTER')                #20
              1642 00f4  ld   $f4         6698  ld(-24/2)                       #21
                                          6699
                                          6700  # DEEKA implementation
                                          6701  label('deeka#13')
deeka#13:     1643 1519  ld   [$19],y     6702  ld([vAC+1],Y)                   #13
              1644 1118  ld   [$18],x     6703  ld([vAC],X)                     #14
              1645 0d00  ld   [y,x]       6704  ld([Y,X])                       #15 peek [vAC]
              1646 de00  st   [y,x++]     6705  st([Y,Xpp])                     #16
              1647 c22a  st   [$2a]       6706  st([sysArgs+6])                 #17
              1648 0d00  ld   [y,x]       6707  ld([Y,X])                       #18 peek [vAC+1]
              1649 c22b  st   [$2b]       6708  st([sysArgs+7])                 #19
              164a 1400  ld   $00,y       6709  ld(0,Y)                         #20
              164b 111d  ld   [$1d],x     6710  ld([vTmp],X)                    #21 dst var
              164c 012a  ld   [$2a]       6711  ld([sysArgs+6])                 #22
              164d de00  st   [y,x++]     6712  st([Y,Xpp])                     #23 [var.lo] = peek [vAC]
              164e 012b  ld   [$2b]       6713  ld([sysArgs+7])                 #24
              164f ce00  st   [y,x]       6714  st([Y,X])                       #25 [var.hi] = peek [vAC+1]
              1650 1403  ld   $03,y       6715  ld(hi('NEXTY'),Y)               #26
              1651 e000  jmp  y,$00       6716  jmp(Y,'NEXTY')                  #27
              1652 00f1  ld   $f1         6717  ld(-30/2)                       #28
                                          6718
                                          6719  # PEEKA implementation
                                          6720  #label('peeka#13')
                                          6721  #ld(0,Y)                         #13
                                          6722  #ld(AC,X)                        #14 address of var
                                          6723  #ld([Y,X])                       #15
                                          6724  #st([vTmp])                      #16 low byte of src pointer
                                          6725  #st([Y,Xpp])                     #17 X++
                                          6726  #ld([Y,X])                       #18
                                          6727  #ld(AC,Y)                        #19 high byte of src pointer
                                          6728  #ld([vTmp],X)                    #20
                                          6729  #ld([Y,X])                       #21 peek src
                                          6730  #ld([vAC],X)                     #22 low byte of dst pointer
                                          6731  #ld([vAC+1],Y)                   #23 high byte of dst pointer
                                          6732  #st([Y,X])                       #24 poke dst
                                          6733  #ld(hi('REENTER'),Y)             #25
                                          6734  #jmp(Y,'REENTER')                #26
                                          6735  #ld(-30/2)                       #27
                                          6736
                                          6737  # SUBBI implementation, var -= imm, does NOT modify var.hi
                                          6738  label('subbi#13')
subbi#13:     1653 1517  ld   [$17],y     6739  ld([vPC+1],Y)                   #13
              1654 c21d  st   [$1d]       6740  st([vTmp])                      #14 immediate value
              1655 de00  st   [y,x++]     6741  st([Y,Xpp])                     #15 X++
              1656 0d00  ld   [y,x]       6742  ld([Y,X])                       #16
              1657 1200  ld   ac,x        6743  ld(AC,X)                        #17 address of var
              1658 0500  ld   [x]         6744  ld([X])                         #18
              1659 a11d  suba [$1d]       6745  suba([vTmp])                    #19
              165a c600  st   [x]         6746  st([X])                         #20
              165b 0116  ld   [$16]       6747  ld([vPC])                       #21
              165c 8001  adda $01         6748  adda(1)                         #22
              165d c216  st   [$16]       6749  st([vPC])                       #23 advance vPC by 1
              165e 1403  ld   $03,y       6750  ld(hi('NEXTY'),Y)               #24
              165f e000  jmp  y,$00       6751  jmp(Y,'NEXTY')                  #25
              1660 00f2  ld   $f2         6752  ld(-28/2)                       #26
                                          6753
                                          6754  # MOVQB implementation
                                          6755  label('movqb#13')
movqb#13:     1661 1517  ld   [$17],y     6756  ld([vPC+1],Y)                   #13 vPC.hi
              1662 c21d  st   [$1d]       6757  st([vTmp])                      #14 immediate value
              1663 de00  st   [y,x++]     6758  st([Y,Xpp])                     #15 X++
              1664 0d00  ld   [y,x]       6759  ld([Y,X])                       #16
              1665 1200  ld   ac,x        6760  ld(AC,X)                        #17 address of var
              1666 011d  ld   [$1d]       6761  ld([vTmp])                      #18
              1667 c600  st   [x]         6762  st([X])                         #19 var.lo = immediate value
              1668 0116  ld   [$16]       6763  ld([vPC])                       #20
              1669 8001  adda $01         6764  adda(1)                         #21
              166a c216  st   [$16]       6765  st([vPC])                       #22 advance vPC by 1
              166b 1403  ld   $03,y       6766  ld(hi('REENTER'),Y)             #23
              166c e0cb  jmp  y,$cb       6767  jmp(Y,'REENTER')                #24
              166d 00f2  ld   $f2         6768  ld(-28/2)                       #25
                                          6769
                                          6770  # MOVQW implementation
                                          6771  label('movqw#13')
movqw#13:     166e c21d  st   [$1d]       6772  st([vTmp])                      #13 immediate value
              166f de00  st   [y,x++]     6773  st([Y,Xpp])                     #14 X++
              1670 0d00  ld   [y,x]       6774  ld([Y,X])                       #15
              1671 1200  ld   ac,x        6775  ld(AC,X)                        #16 address of var
              1672 011d  ld   [$1d]       6776  ld([vTmp])                      #17
              1673 c600  st   [x]         6777  st([X])                         #18 var.lo = immediate value
              1674 1400  ld   $00,y       6778  ld(0,Y)                         #19
              1675 de00  st   [y,x++]     6779  st([Y,Xpp])                     #20 X++
              1676 0000  ld   $00         6780  ld(0)                           #21
              1677 c600  st   [x]         6781  st([X])                         #22 var.hi = 0
              1678 0116  ld   [$16]       6782  ld([vPC])                       #23
              1679 8001  adda $01         6783  adda(1)                         #24
              167a c216  st   [$16]       6784  st([vPC])                       #25 advance vPC by 1
              167b 1403  ld   $03,y       6785  ld(hi('NEXTY'),Y)               #26
              167c e000  jmp  y,$00       6786  jmp(Y,'NEXTY')                  #27
              167d 00f1  ld   $f1         6787  ld(-30/2)                       #28
                                          6788
                                          6789  # LSRB implementation
                                          6790  label('lsrb#13')
lsrb#13:      167e 1200  ld   ac,x        6791  ld(AC,X)                        #13 var
              167f 1405  ld   $05,y       6792  ld(hi('shiftTable'),Y)          #14 logical shift right 1 bit (X >> 1)
              1680 00c8  ld   $c8         6793  ld('.lsrb#24')                  #15 continuation address
              1681 c21d  st   [$1d]       6794  st([vTmp])                      #16
              1682 0500  ld   [x]         6795  ld([X])                         #17 load byte from var
              1683 20fe  anda $fe         6796  anda(0xfe)                      #18
              1684 e200  jmp  y,ac        6797  jmp(Y,AC)                       #19
              1685 fcff  bra  $ff         6798  bra(255)                        #20 bra shiftTable+255
                                          6799  #dummy
                                          6800  # continues in page 0x0600 at label('.lsrb#24') after fetching shifted byte from 0x0500
                                          6801
                                          6802  # PEEKV implementation
                                          6803  label('peekv#13')
peekv#13:     1686 1200  ld   ac,x        6804  ld(AC,X)                        #13
              1687 1400  ld   $00,y       6805  ld(0,Y)                         #14
              1688 0d00  ld   [y,x]       6806  ld([Y,X])                       #15 low byte peek address
              1689 de00  st   [y,x++]     6807  st([Y,Xpp])                     #16 X++
              168a c21d  st   [$1d]       6808  st([vTmp])                      #17
              168b 0d00  ld   [y,x]       6809  ld([Y,X])                       #18 high byte peek address
              168c 1600  ld   ac,y        6810  ld(AC,Y)                        #19
              168d 111d  ld   [$1d],x     6811  ld([vTmp],X)                    #20
              168e 0d00  ld   [y,x]       6812  ld([Y,X])                       #21 peek byte
              168f c218  st   [$18]       6813  st([vAC])                       #22
              1690 0000  ld   $00         6814  ld(0)                           #23
              1691 c219  st   [$19]       6815  st([vAC+1])                     #24
              1692 1403  ld   $03,y       6816  ld(hi('REENTER'),Y)             #25
              1693 e0cb  jmp  y,$cb       6817  jmp(Y,'REENTER')                #26
              1694 00f1  ld   $f1         6818  ld(-30/2)                       #27
                                          6819
                                          6820  # DEEKV implementation
                                          6821  label('deekv#13')
deekv#13:     1695 1200  ld   ac,x        6822  ld(AC,X)                        #13
              1696 1400  ld   $00,y       6823  ld(0,Y)                         #14
              1697 0d00  ld   [y,x]       6824  ld([Y,X])                       #15 low byte deek address
              1698 de00  st   [y,x++]     6825  st([Y,Xpp])                     #16 X++
              1699 c21d  st   [$1d]       6826  st([vTmp])                      #17
              169a 0d00  ld   [y,x]       6827  ld([Y,X])                       #18 high byte deek address
              169b 1600  ld   ac,y        6828  ld(AC,Y)                        #19
              169c 111d  ld   [$1d],x     6829  ld([vTmp],X)                    #20
              169d 0d00  ld   [y,x]       6830  ld([Y,X])                       #21 peek low byte
              169e c218  st   [$18]       6831  st([vAC])                       #22
              169f de00  st   [y,x++]     6832  st([Y,Xpp])                     #23 X++
              16a0 0d00  ld   [y,x]       6833  ld([Y,X])                       #24 peek high byte
              16a1 c219  st   [$19]       6834  st([vAC+1])                     #25
              16a2 1403  ld   $03,y       6835  ld(hi('NEXTY'),Y)               #26
              16a3 e000  jmp  y,$00       6836  jmp(Y,'NEXTY')                  #27
              16a4 00f1  ld   $f1         6837  ld(-30/2)                       #28
                                          6838
                                          6839  # LSLV implementation
                                          6840  label('lslv#13')
lslv#13:      16a5 1400  ld   $00,y       6841  ld(0,Y)                         #13
              16a6 1200  ld   ac,x        6842  ld(AC,X)                        #14 var
              16a7 0500  ld   [x]         6843  ld([X])                         #15
              16a8 f4b2  bge  .lslv#18    6844  bge('.lslv#18')                 #16
              16a9 8500  adda [x]         6845  adda([X])                       #17
              16aa de00  st   [y,x++]     6846  st([Y,Xpp])                     #18 var.lo <<1
              16ab 0500  ld   [x]         6847  ld([X])                         #19
              16ac 8500  adda [x]         6848  adda([X])                       #20
              16ad 4001  ora  $01         6849  ora(1)                          #21
              16ae c600  st   [x]         6850  st([X])                         #22 var.hi <<1 | 1
              16af 1403  ld   $03,y       6851  ld(hi('REENTER'),Y)             #23
              16b0 e0cb  jmp  y,$cb       6852  jmp(Y,'REENTER')                #24
              16b1 00f2  ld   $f2         6853  ld(-28/2)                       #25
                                          6854  label('.lslv#18')
.lslv#18:     16b2 de00  st   [y,x++]     6855  st([Y,Xpp])                     #18
              16b3 0500  ld   [x]         6856  ld([X])                         #19
              16b4 8500  adda [x]         6857  adda([X])                       #20
              16b5 c600  st   [x]         6858  st([X])                         #21
              16b6 1403  ld   $03,y       6859  ld(hi('NEXTY'),Y)               #22
              16b7 e000  jmp  y,$00       6860  jmp(Y,'NEXTY')                  #23
              16b8 00f3  ld   $f3         6861  ld(-26/2)                       #24
                                          6862
                                          6863  # LDW implementation
                                          6864  label('ldw#13')
ldw#13:       16b9 1400  ld   $00,y       6865  ld(0,Y)                         #13
              16ba 1200  ld   ac,x        6866  ld(AC,X)                        #14 Operand
              16bb 0500  ld   [x]         6867  ld([X])                         #15
              16bc c218  st   [$18]       6868  st([vAC])                       #16
              16bd de00  st   [y,x++]     6869  st([Y,Xpp])                     #17 X++
              16be 0500  ld   [x]         6870  ld([X])                         #18
              16bf c219  st   [$19]       6871  st([vAC+1])                     #19
              16c0 1403  ld   $03,y       6872  ld(hi('NEXTY'),Y)               #20
              16c1 e000  jmp  y,$00       6873  jmp(Y,'NEXTY')                  #21
              16c2 00f4  ld   $f4         6874  ld(-24/2)                       #22
                                          6875
                                          6876  # STW implementation
                                          6877  label('stw#13')
stw#13:       16c3 1400  ld   $00,y       6878  ld(0,Y)                         #13
              16c4 1200  ld   ac,x        6879  ld(AC,X)                        #14 Operand
              16c5 0118  ld   [$18]       6880  ld([vAC])                       #15
              16c6 de00  st   [y,x++]     6881  st([Y,Xpp])                     #16
              16c7 0119  ld   [$19]       6882  ld([vAC+1])                     #17
              16c8 c600  st   [x]         6883  st([X])                         #18
              16c9 1403  ld   $03,y       6884  ld(hi('REENTER'),Y)             #19
              16ca e0cb  jmp  y,$cb       6885  jmp(Y,'REENTER')                #20
              16cb 00f4  ld   $f4         6886  ld(-24/2)                       #21
                                          6887
                                          6888  # POKE+ implementation
                                          6889  label('poke+#13')
poke+#13:     16cc 1200  ld   ac,x        6890  ld(AC,X)                        #13 Operand
              16cd 1400  ld   $00,y       6891  ld(0,Y)                         #14
              16ce 0500  ld   [x]         6892  ld([X])                         #15 low byte poke address
              16cf c21d  st   [$1d]       6893  st([vTmp])                      #16
              16d0 8001  adda $01         6894  adda(1)                         #17
              16d1 de00  st   [y,x++]     6895  st([Y,Xpp])                     #18
              16d2 0500  ld   [x]         6896  ld([X])                         #19 high byte poke address
              16d3 1600  ld   ac,y        6897  ld(AC,Y)                        #20
              16d4 111d  ld   [$1d],x     6898  ld([vTmp],X)                    #21
              16d5 0118  ld   [$18]       6899  ld([vAC])                       #22
              16d6 ce00  st   [y,x]       6900  st([Y,X])                       #23
              16d7 1403  ld   $03,y       6901  ld(hi('NEXTY'),Y)               #24
              16d8 e000  jmp  y,$00       6902  jmp(Y,'NEXTY')                  #25
              16d9 00f2  ld   $f2         6903  ld(-28/2)                       #26
                                          6904
                                          6905  # ADDBI implementation, var += imm, does NOT modify var.hi
                                          6906  label('addbi#13')
addbi#13:     16da 1517  ld   [$17],y     6907  ld([vPC+1],Y)                   #13
              16db c21d  st   [$1d]       6908  st([vTmp])                      #14 immediate value
              16dc de00  st   [y,x++]     6909  st([Y,Xpp])                     #15 X++
              16dd 0d00  ld   [y,x]       6910  ld([Y,X])                       #16
              16de 1200  ld   ac,x        6911  ld(AC,X)                        #17 var
              16df 0500  ld   [x]         6912  ld([X])                         #18
              16e0 811d  adda [$1d]       6913  adda([vTmp])                    #19
              16e1 c600  st   [x]         6914  st([X])                         #20
              16e2 0116  ld   [$16]       6915  ld([vPC])                       #21
              16e3 8001  adda $01         6916  adda(1)                         #22
              16e4 c216  st   [$16]       6917  st([vPC])                       #23 advance vPC by 1
              16e5 1403  ld   $03,y       6918  ld(hi('NEXTY'),Y)               #24
              16e6 e000  jmp  y,$00       6919  jmp(Y,'NEXTY')                  #25
              16e7 00f2  ld   $f2         6920  ld(-28/2)                       #26
                                          6921
                                          6922
              16e8 0200  nop              6923  fillers(until=0xff)
              16e9 0200  nop
              16ea 0200  nop
              * 23 times
              16ff 0200  nop              6924  align(0x100, size=0x100)
                                          6925
                                          6926  #-----------------------------------------------------------------------
                                          6927  #       More vCPU instruction implementations, (0x1700)
                                          6928  #-----------------------------------------------------------------------
                                          6929
                                          6930  # CALLI implementation
                                          6931  label('calli#13')
calli#13:     1700 8003  adda $03         6932  adda(3)                         #13
              1701 c21a  st   [$1a]       6933  st([vLR])                       #14
              1702 0117  ld   [$17]       6934  ld([vPC+1])                     #15
              1703 d61b  st   [$1b],y     6935  st([vLR+1],Y)                   #16
              1704 0d00  ld   [y,x]       6936  ld([Y,X])                       #17
              1705 de00  st   [y,x++]     6937  st([Y,Xpp])                     #18 Just X++
              1706 a002  suba $02         6938  suba(2)                         #19
              1707 c216  st   [$16]       6939  st([vPC])                       #20
              1708 0d00  ld   [y,x]       6940  ld([Y,X])                       #21
              1709 1403  ld   $03,y       6941  ld(hi('REENTER_28'),Y)          #22
              170a e0ca  jmp  y,$ca       6942  jmp(Y,'REENTER_28')             #23
              170b c217  st   [$17]       6943  st([vPC+1])                     #24
                                          6944
                                          6945  # SUBW implemetation
                                          6946  label('subw#13')
subw#13:      170c 8001  adda $01         6947  adda(1)                         #13
              170d c21d  st   [$1d]       6948  st([vTmp])                      #14 Address of high byte to be subtracted
              170e 0118  ld   [$18]       6949  ld([vAC])                       #15 Low byte
              170f e81c  blt  .subw#18    6950  bmi('.subw#18')                 #16
              1710 a500  suba [x]         6951  suba([X])                       #17
              1711 c218  st   [$18]       6952  st([vAC])                       #18 Store low result
              1712 4500  ora  [x]         6953  ora([X])                        #19 Carry in bit 7
              1713 3080  anda $80,x       6954  anda(0x80,X)                    #20 Move carry to bit 0
              1714 0119  ld   [$19]       6955  ld([vAC+1])                     #21
              1715 a500  suba [x]         6956  suba([X])                       #22
              1716 111d  ld   [$1d],x     6957  ld([vTmp],X)                    #23
              1717 a500  suba [x]         6958  suba([X])                       #24
              1718 c219  st   [$19]       6959  st([vAC+1])                     #25
              1719 1403  ld   $03,y       6960  ld(hi('NEXTY'),Y)               #26
              171a e000  jmp  y,$00       6961  jmp(Y,'NEXTY')                  #27
              171b 00f1  ld   $f1         6962  ld(-30/2)                       #28
                                          6963  label('.subw#18')
.subw#18:     171c c218  st   [$18]       6964  st([vAC])                       #18 Store low result
              171d 2500  anda [x]         6965  anda([X])                       #19 Carry in bit 7
              171e 3080  anda $80,x       6966  anda(0x80,X)                    #20 Move carry to bit 0
              171f 0119  ld   [$19]       6967  ld([vAC+1])                     #21
              1720 a500  suba [x]         6968  suba([X])                       #22
              1721 111d  ld   [$1d],x     6969  ld([vTmp],X)                    #23
              1722 a500  suba [x]         6970  suba([X])                       #24
              1723 c219  st   [$19]       6971  st([vAC+1])                     #25
              1724 1403  ld   $03,y       6972  ld(hi('NEXTY'),Y)               #26
              1725 e000  jmp  y,$00       6973  jmp(Y,'NEXTY')                  #27
              1726 00f1  ld   $f1         6974  ld(-30/2)                       #28
                                          6975
                                          6976  # BEQ implementation
                                          6977  label('beq#15')
beq#15:       1727 0119  ld   [$19]       6978  ld([vAC+1])                     #15
              1728 4118  ora  [$18]       6979  ora([vAC])                      #16
              1729 f031  beq  .beq#19     6980  beq('.beq#19')                  #17 if (vAC.hi OR vAC.lo) == 0
              172a 0d00  ld   [y,x]       6981  ld([Y,X])                       #18 address of branch destination
              172b 0116  ld   [$16]       6982  ld([vPC])                       #19
              172c 8001  adda $01         6983  adda(1)                         #20
              172d c216  st   [$16]       6984  st([vPC])                       #21
              172e 1403  ld   $03,y       6985  ld(hi('NEXTY'),Y)               #22
              172f e000  jmp  y,$00       6986  jmp(Y,'NEXTY')                  #23
              1730 00f3  ld   $f3         6987  ld(-26/2)                       #24
                                          6988  label('.beq#19')
.beq#19:      1731 c216  st   [$16]       6989  st([vPC])                       #19
              1732 1403  ld   $03,y       6990  ld(hi('NEXTY'),Y)               #20
              1733 e000  jmp  y,$00       6991  jmp(Y,'NEXTY')                  #21
              1734 00f4  ld   $f4         6992  ld(-24/2)                       #22
                                          6993
                                          6994  # BNE implementation
                                          6995  label('bne#15')
bne#15:       1735 0119  ld   [$19]       6996  ld([vAC+1])                     #15
              1736 4118  ora  [$18]       6997  ora([vAC])                      #16
              1737 ec3f  bne  .bne#19     6998  bne('.bne#19')                  #17 if (vAC.hi OR vAC.lo) != 0
              1738 0d00  ld   [y,x]       6999  ld([Y,X])                       #18 address of branch destination
              1739 0116  ld   [$16]       7000  ld([vPC])                       #19
              173a 8001  adda $01         7001  adda(1)                         #20
              173b c216  st   [$16]       7002  st([vPC])                       #21
              173c 1403  ld   $03,y       7003  ld(hi('NEXTY'),Y)               #22
              173d e000  jmp  y,$00       7004  jmp(Y,'NEXTY')                  #23
              173e 00f3  ld   $f3         7005  ld(-26/2)                       #24
                                          7006  label('.bne#19')
.bne#19:      173f c216  st   [$16]       7007  st([vPC])                       #19
              1740 1403  ld   $03,y       7008  ld(hi('NEXTY'),Y)               #20
              1741 e000  jmp  y,$00       7009  jmp(Y,'NEXTY')                  #21
              1742 00f4  ld   $f4         7010  ld(-24/2)                       #22
                                          7011
                                          7012  # BGT implementation
                                          7013  label('bgt#15')
bgt#15:       1743 0119  ld   [$19]       7014  ld([vAC+1])                     #15
              1744 e84d  blt  .bgt#18     7015  blt('.bgt#18')                  #16 if vAC.hi < 0
              1745 4118  ora  [$18]       7016  ora([vAC])                      #17
              1746 ec53  bne  .bgt#20     7017  bne('.bgt#20')                  #18 if (vAC.hi OR vAC.lo) != 0
              1747 0116  ld   [$16]       7018  ld([vPC])                       #19
              1748 8001  adda $01         7019  adda(1)                         #20
              1749 c216  st   [$16]       7020  st([vPC])                       #21
              174a 1403  ld   $03,y       7021  ld(hi('NEXTY'),Y)               #22
              174b e000  jmp  y,$00       7022  jmp(Y,'NEXTY')                  #23
              174c 00f3  ld   $f3         7023  ld(-26/2)                       #24
                                          7024  label('.bgt#18')
.bgt#18:      174d 0116  ld   [$16]       7025  ld([vPC])                       #18
              174e 8001  adda $01         7026  adda(1)                         #19
              174f c216  st   [$16]       7027  st([vPC])                       #20
              1750 1403  ld   $03,y       7028  ld(hi('REENTER'),Y)             #21
              1751 e0cb  jmp  y,$cb       7029  jmp(Y,'REENTER')                #22
              1752 00f3  ld   $f3         7030  ld(-26/2)                       #23
                                          7031  label('.bgt#20')
.bgt#20:      1753 0d00  ld   [y,x]       7032  ld([Y,X])                       #20 address of branch destination
              1754 c216  st   [$16]       7033  st([vPC])                       #21
              1755 1403  ld   $03,y       7034  ld(hi('NEXTY'),Y)               #22
              1756 e000  jmp  y,$00       7035  jmp(Y,'NEXTY')                  #23
              1757 00f3  ld   $f3         7036  ld(-26/2)                       #24
                                          7037
                                          7038  # BLT implementation
                                          7039  label('blt#15')
blt#15:       1758 0119  ld   [$19]       7040  ld([vAC+1])                     #15
              1759 e860  blt  .blt#18     7041  blt('.blt#18')                  #16 if vAC.hi < 0
              175a 0116  ld   [$16]       7042  ld([vPC])                       #17
              175b 8001  adda $01         7043  adda(1)                         #18
              175c c216  st   [$16]       7044  st([vPC])                       #19
              175d 1403  ld   $03,y       7045  ld(hi('NEXTY'),Y)               #20
              175e e000  jmp  y,$00       7046  jmp(Y,'NEXTY')                  #21
              175f 00f4  ld   $f4         7047  ld(-24/2)                       #22
                                          7048  label('.blt#18')
.blt#18:      1760 0d00  ld   [y,x]       7049  ld([Y,X])                       #18 address of branch destination
              1761 c216  st   [$16]       7050  st([vPC])                       #19
              1762 1403  ld   $03,y       7051  ld(hi('NEXTY'),Y)               #20
              1763 e000  jmp  y,$00       7052  jmp(Y,'NEXTY')                  #21
              1764 00f4  ld   $f4         7053  ld(-24/2)                       #22
                                          7054
                                          7055  # BGE implementation
                                          7056  label('bge#15')
bge#15:       1765 0119  ld   [$19]       7057  ld([vAC+1])                     #15
              1766 e86d  blt  .bge#18     7058  blt('.bge#18')                  #16 if vAC.hi < 0
              1767 0116  ld   [$16]       7059  ld([vPC])                       #17
              1768 0d00  ld   [y,x]       7060  ld([Y,X])                       #18 address of branch destination
              1769 c216  st   [$16]       7061  st([vPC])                       #19
              176a 1403  ld   $03,y       7062  ld(hi('NEXTY'),Y)               #20
              176b e000  jmp  y,$00       7063  jmp(Y,'NEXTY')                  #21
              176c 00f4  ld   $f4         7064  ld(-24/2)                       #22
                                          7065  label('.bge#18')
.bge#18:      176d 8001  adda $01         7066  adda(1)                         #18
              176e c216  st   [$16]       7067  st([vPC])                       #19
              176f 1403  ld   $03,y       7068  ld(hi('NEXTY'),Y)               #20
              1770 e000  jmp  y,$00       7069  jmp(Y,'NEXTY')                  #21
              1771 00f4  ld   $f4         7070  ld(-24/2)                       #22
                                          7071
                                          7072  # BLE implementation
                                          7073  label('ble#15')
ble#15:       1772 0119  ld   [$19]       7074  ld([vAC+1])                     #15
              1773 e87c  blt  .ble#18     7075  blt('.ble#18')                  #16 if vAC.hi < 0
              1774 4118  ora  [$18]       7076  ora([vAC])                      #17
              1775 ec81  bne  .ble#20     7077  bne('.ble#20')                  #18 if (vAC.hi OR vAC.lo) != 0
              1776 0116  ld   [$16]       7078  ld([vPC])                       #19
              1777 0d00  ld   [y,x]       7079  ld([Y,X])                       #20 address of branch destination
              1778 c216  st   [$16]       7080  st([vPC])                       #21
              1779 1403  ld   $03,y       7081  ld(hi('NEXTY'),Y)               #22
              177a e000  jmp  y,$00       7082  jmp(Y,'NEXTY')                  #23
              177b 00f3  ld   $f3         7083  ld(-26/2)                       #24
                                          7084  label('.ble#18')
.ble#18:      177c 0d00  ld   [y,x]       7085  ld([Y,X])                       #18 address of branch destination
              177d c216  st   [$16]       7086  st([vPC])                       #19
              177e 1403  ld   $03,y       7087  ld(hi('NEXTY'),Y)               #20
              177f e000  jmp  y,$00       7088  jmp(Y,'NEXTY')                  #21
              1780 00f4  ld   $f4         7089  ld(-24/2)                       #22
                                          7090  label('.ble#20')
.ble#20:      1781 8001  adda $01         7091  adda(1)                         #20
              1782 c216  st   [$16]       7092  st([vPC])                       #21
              1783 1403  ld   $03,y       7093  ld(hi('NEXTY'),Y)               #22
              1784 e000  jmp  y,$00       7094  jmp(Y,'NEXTY')                  #23
              1785 00f3  ld   $f3         7095  ld(-26/2)                       #24
                                          7096
                                          7097  # ADDBA implementation
                                          7098  label('addba#13')
addba#13:     1786 1200  ld   ac,x        7099  ld(AC,X)                        #13 src var
              1787 0118  ld   [$18]       7100  ld([vAC])                       #14
              1788 8500  adda [x]         7101  adda([X])                       #15
              1789 c218  st   [$18]       7102  st([vAC])                       #16 vAC.lo += var.lo
              178a e894  blt  .addba#19   7103  bmi('.addba#19')                #17 Now figure out if there was a carry
              178b a500  suba [x]         7104  suba([X])                       #18 Gets back the initial value of vAC
              178c 4500  ora  [x]         7105  ora([X])                        #19 Carry in bit 7
              178d 3080  anda $80,x       7106  anda(0x80,X)                    #20 Move carry to bit 0
              178e 0500  ld   [x]         7107  ld([X])                         #21
              178f 8119  adda [$19]       7108  adda([vAC+1])                   #22 Add the high byte and carry
              1790 c219  st   [$19]       7109  st([vAC+1])                     #23 Store high result
              1791 1403  ld   $03,y       7110  ld(hi('NEXTY'),Y)               #24
              1792 e000  jmp  y,$00       7111  jmp(Y,'NEXTY')                  #25
              1793 00f2  ld   $f2         7112  ld(-28/2)                       #26
                                          7113  label('.addba#19')
.addba#19:    1794 2500  anda [x]         7114  anda([X])                       #19 Carry in bit 7
              1795 3080  anda $80,x       7115  anda(0x80,X)                    #20 Move carry to bit 0
              1796 0500  ld   [x]         7116  ld([X])                         #21
              1797 8119  adda [$19]       7117  adda([vAC+1])                   #22 Add high byte and carry
              1798 c219  st   [$19]       7118  st([vAC+1])                     #23 Store high result
              1799 1403  ld   $03,y       7119  ld(hi('NEXTY'),Y)               #24
              179a e000  jmp  y,$00       7120  jmp(Y,'NEXTY')                  #25
              179b 00f2  ld   $f2         7121  ld(-28/2)                       #26
                                          7122
                                          7123  # SUBBA implementation
                                          7124  label('subba#13')
subba#13:     179c 1200  ld   ac,x        7125  ld(AC,X)                        #13 src var
              179d 0118  ld   [$18]       7126  ld([vAC])                       #14
              179e e8a9  blt  .subba#17   7127  bmi('.subba#17')                 #15
              179f a500  suba [x]         7128  suba([X])                       #16
              17a0 c218  st   [$18]       7129  st([vAC])                       #17 vAC.lo -= var.lo
              17a1 4500  ora  [x]         7130  ora([X])                        #18 Borrow in bit 7
              17a2 3080  anda $80,x       7131  anda(0x80,X)                    #19 Move borrow to bit 0
              17a3 0119  ld   [$19]       7132  ld([vAC+1])                     #20
              17a4 a500  suba [x]         7133  suba([X])                       #21 Sub borrow from high byte
              17a5 c219  st   [$19]       7134  st([vAC+1])                     #22 Store high result
              17a6 1403  ld   $03,y       7135  ld(hi('REENTER'),Y)             #23
              17a7 e0cb  jmp  y,$cb       7136  jmp(Y,'REENTER')                #24
              17a8 00f2  ld   $f2         7137  ld(-28/2)                       #25
                                          7138  label('.subba#17')
.subba#17:    17a9 c218  st   [$18]       7139  st([vAC])                       #17
              17aa 2500  anda [x]         7140  anda([X])                       #18 Borrow in bit 7
              17ab 3080  anda $80,x       7141  anda(0x80,X)                    #19 Move borrow to bit 0
              17ac 0119  ld   [$19]       7142  ld([vAC+1])                     #20
              17ad a500  suba [x]         7143  suba([X])                       #21 Sub borrow from high byte
              17ae c219  st   [$19]       7144  st([vAC+1])                     #22 Store high result
              17af 1403  ld   $03,y       7145  ld(hi('REENTER'),Y)             #23
              17b0 e0cb  jmp  y,$cb       7146  jmp(Y,'REENTER')                #24
              17b1 00f2  ld   $f2         7147  ld(-28/2)                       #25
                                          7148
                                          7149  # ADDB implementation, dst += src, does NOT modify dst.hi
                                          7150  #label('addb#13')
                                          7151  #ld([vPC+1],Y)                   #13
                                          7152  #st([vTmp])                      #14 dst var
                                          7153  #st([Y,Xpp])                     #15 X++
                                          7154  #ld([Y,X])                       #16
                                          7155  #ld(AC,X)                        #17 src var
                                          7156  #ld([X])                         #18
                                          7157  #ld([vTmp],X)                    #19
                                          7158  #adda([X])                       #20
                                          7159  #st([X])                         #21 dst += src
                                          7160  #ld([vPC])                       #22
                                          7161  #adda(1)                         #23
                                          7162  #st([vPC])                       #24 advance vPC by 1
                                          7163  #ld(hi('REENTER'),Y)             #25
                                          7164  #jmp(Y,'REENTER')                #26
                                          7165  #ld(-30/2)                       #27
                                          7166
                                          7167  # ADDBA implementation, vAC.lo = dst + src, does NOT modify vAC.hi
                                          7168  #label('addba#13')
                                          7169  #ld([vPC+1],Y)                   #13
                                          7170  #st([vTmp])                      #14 dst var
                                          7171  #st([Y,Xpp])                     #15 X++
                                          7172  #ld([Y,X])                       #16
                                          7173  #ld(AC,X)                        #17 src var
                                          7174  #ld([X])                         #18
                                          7175  #ld([vTmp],X)                    #19
                                          7176  #adda([X])                       #20
                                          7177  #st([vAC])                       #21 vAC.lo = dst + src
                                          7178  #ld([vPC])                       #22
                                          7179  #adda(1)                         #23
                                          7180  #st([vPC])                       #24 advance vPC by 1
                                          7181  #ld(hi('REENTER'),Y)             #25
                                          7182  #jmp(Y,'REENTER')                #26
                                          7183  #ld(-30/2)                       #27
                                          7184
                                          7185  # POKEA implementation
                                          7186  label('pokea#13')
pokea#13:     17b2 1200  ld   ac,x        7187  ld(AC,X)                        #13
              17b3 0500  ld   [x]         7188  ld([X])                         #14 var.lo
              17b4 1118  ld   [$18],x     7189  ld([vAC],X)                     #15
              17b5 1519  ld   [$19],y     7190  ld([vAC+1],Y)                   #16
              17b6 ce00  st   [y,x]       7191  st([Y,X])                       #17 poke [vAC], var.lo
              17b7 1403  ld   $03,y       7192  ld(hi('NEXTY'),Y)               #18
              17b8 e000  jmp  y,$00       7193  jmp(Y,'NEXTY')                  #19
              17b9 00f5  ld   $f5         7194  ld(-22/2)                       #20
                                          7195
                                          7196  # DOKEA implementation
                                          7197  label('dokea#13')
dokea#13:     17ba d21d  st   [$1d],x     7198  st([vTmp],X)                    #13
              17bb 0500  ld   [x]         7199  ld([X])                         #14 var.lo
              17bc 1118  ld   [$18],x     7200  ld([vAC],X)                     #15
              17bd 1519  ld   [$19],y     7201  ld([vAC+1],Y)                   #16
              17be ce00  st   [y,x]       7202  st([Y,X])                       #17 poke [vAC], var.lo
              17bf 011d  ld   [$1d]       7203  ld([vTmp])                      #18
              17c0 9001  adda $01,x       7204  adda(1,X)                       #19
              17c1 0500  ld   [x]         7205  ld([X])                         #20 var.hi
              17c2 c21d  st   [$1d]       7206  st([vTmp])                      #21
              17c3 0118  ld   [$18]       7207  ld([vAC])                       #22
              17c4 9001  adda $01,x       7208  adda(1,X)                       #23
              17c5 011d  ld   [$1d]       7209  ld([vTmp])                      #24
              17c6 ce00  st   [y,x]       7210  st([Y,X])                       #25 poke [vAC+1], var.hi
              17c7 1403  ld   $03,y       7211  ld(hi('NEXTY'),Y)               #26
              17c8 e000  jmp  y,$00       7212  jmp(Y,'NEXTY')                  #27
              17c9 00f1  ld   $f1         7213  ld(-30/2)                       #28
                                          7214
                                          7215  # POKEI implementation
                                          7216  label('pokei#13')
pokei#13:     17ca 1519  ld   [$19],y     7217  ld([vAC+1],Y)                   #13
              17cb 1118  ld   [$18],x     7218  ld([vAC],X)                     #14
              17cc de00  st   [y,x++]     7219  st([Y,Xpp])                     #15
              17cd 1403  ld   $03,y       7220  ld(hi('NEXTY'),Y)               #16
              17ce e000  jmp  y,$00       7221  jmp(Y,'NEXTY')                  #17
              17cf 00f6  ld   $f6         7222  ld(-20/2)                       #18
                                          7223
                                          7224  # DOKEI implementation
                                          7225  label('dokei#13')
dokei#13:     17d0 1517  ld   [$17],y     7226  ld([vPC+1],Y)                   #13
              17d1 c21d  st   [$1d]       7227  st([vTmp])                      #14 imm.hi
              17d2 de00  st   [y,x++]     7228  st([Y,Xpp])                     #15 X++
              17d3 0d00  ld   [y,x]       7229  ld([Y,X])                       #16 imm.lo
              17d4 1519  ld   [$19],y     7230  ld([vAC+1],Y)                   #17
              17d5 1118  ld   [$18],x     7231  ld([vAC],X)                     #18
              17d6 de00  st   [y,x++]     7232  st([Y,Xpp])                     #19
              17d7 011d  ld   [$1d]       7233  ld([vTmp])                      #20
              17d8 ce00  st   [y,x]       7234  st([Y,X])                       #21
              17d9 0116  ld   [$16]       7235  ld([vPC])                       #22
              17da 8001  adda $01         7236  adda(1)                         #23
              17db c216  st   [$16]       7237  st([vPC])                       #24
              17dc 1403  ld   $03,y       7238  ld(hi('REENTER'),Y)             #25
              17dd e0cb  jmp  y,$cb       7239  jmp(Y,'REENTER')                #26
              17de 00f1  ld   $f1         7240  ld(-30/2)                       #27
                                          7241
                                          7242  # DEEK+ implementation
                                          7243  label('deek+#13')
deek+#13:     17df 1200  ld   ac,x        7244  ld(AC,X)                        #13
              17e0 0500  ld   [x]         7245  ld([X])                         #14 low byte deek address
              17e1 c21d  st   [$1d]       7246  st([vTmp])                      #15
              17e2 8002  adda $02         7247  adda(2)                         #16
              17e3 de00  st   [y,x++]     7248  st([Y,Xpp])                     #17
              17e4 0500  ld   [x]         7249  ld([X])                         #18 high byte deek address
              17e5 1600  ld   ac,y        7250  ld(AC,Y)                        #19
              17e6 111d  ld   [$1d],x     7251  ld([vTmp],X)                    #20
              17e7 0d00  ld   [y,x]       7252  ld([Y,X])                       #21
              17e8 de00  st   [y,x++]     7253  st([Y,Xpp])                     #22 X++
              17e9 c218  st   [$18]       7254  st([vAC])                       #23
              17ea 0d00  ld   [y,x]       7255  ld([Y,X])                       #24
              17eb c219  st   [$19]       7256  st([vAC+1])                     #25
              17ec 1403  ld   $03,y       7257  ld(hi('NEXTY'),Y)               #26
              17ed e000  jmp  y,$00       7258  jmp(Y,'NEXTY')                  #27
              17ee 00f1  ld   $f1         7259  ld(-30/2)                       #28
                                          7260
                                          7261
              17ef 0200  nop              7262  fillers(until=0xff)
              17f0 0200  nop
              17f1 0200  nop
              * 16 times
              17ff 0200  nop              7263  align(0x100, size=0x100)
                                          7264
                                          7265  #-----------------------------------------------------------------------
                                          7266  #       More vCPU instruction implementations, (0x1800)
                                          7267  #-----------------------------------------------------------------------
                                          7268
                                          7269  # SYS retry implementation
                                          7270  label('.sys#16')
.sys#16:      1800 0116  ld   [$16]       7271  ld([vPC])                       #16
              1801 a002  suba $02         7272  suba(2)                         #17
              1802 c216  st   [$16]       7273  st([vPC])                       #18
              1803 1403  ld   $03,y       7274  ld(hi('REENTER'),Y)             #19
              1804 e0cb  jmp  y,$cb       7275  jmp(Y,'REENTER')                #20
              1805 00f4  ld   $f4         7276  ld(-24/2)                       #21
                                          7277
                                          7278  # LUP return, no longer part of PEEK
                                          7279  label('lupReturn#19')
lupReturn#19: 1806 0000  ld   $00         7280  ld(0)                           #19
              1807 c219  st   [$19]       7281  st([vAC+1])                     #20
              1808 1403  ld   $03,y       7282  ld(hi('REENTER'),Y)             #21
              1809 e0cb  jmp  y,$cb       7283  jmp(Y,'REENTER')                #22
              180a 00f3  ld   $f3         7284  ld(-26/2)                       #23
                                          7285
                                          7286  # NOTB implementation
                                          7287  label('notb#13')
notb#13:      180b 1200  ld   ac,x        7288  ld(AC,X)                        #13 address of var
              180c 0500  ld   [x]         7289  ld([X])                         #14
              180d 60ff  xora $ff         7290  xora(255)                       #15
              180e c600  st   [x]         7291  st([X])                         #16
              180f 1403  ld   $03,y       7292  ld(hi('REENTER'),Y)             #17
              1810 e0cb  jmp  y,$cb       7293  jmp(Y,'REENTER')                #18
              1811 00f5  ld   $f5         7294  ld(-22/2)                       #19
                                          7295
                                          7296  # DOKE+ implementation
                                          7297  label('doke+#13')
doke+#13:     1812 1200  ld   ac,x        7298  ld(AC,X)                        #13
              1813 1400  ld   $00,y       7299  ld(0,Y)                         #14
              1814 0500  ld   [x]         7300  ld([X])                         #15 low byte poke address
              1815 c21d  st   [$1d]       7301  st([vTmp])                      #16
              1816 8002  adda $02         7302  adda(2)                         #17
              1817 de00  st   [y,x++]     7303  st([Y,Xpp])                     #18
              1818 0500  ld   [x]         7304  ld([X])                         #19 high byte poke address
              1819 1600  ld   ac,y        7305  ld(AC,Y)                        #20
              181a 111d  ld   [$1d],x     7306  ld([vTmp],X)                    #21
              181b 0118  ld   [$18]       7307  ld([vAC])                       #22
              181c de00  st   [y,x++]     7308  st([Y,Xpp])                     #23
              181d 0119  ld   [$19]       7309  ld([vAC+1])                     #24
              181e ce00  st   [y,x]       7310  st([Y,X])                       #25
              181f 1403  ld   $03,y       7311  ld(hi('NEXTY'),Y)               #26
              1820 e000  jmp  y,$00       7312  jmp(Y,'NEXTY')                  #27
              1821 00f1  ld   $f1         7313  ld(-30/2)                       #28
                                          7314
                                          7315  # XORI implementation
                                          7316  label('xori#13')
xori#13:      1822 6118  xora [$18]       7317  xora([vAC])                     #13
              1823 c218  st   [$18]       7318  st([vAC])                       #14
              1824 1403  ld   $03,y       7319  ld(hi('REENTER'),Y)             #15
              1825 e0cb  jmp  y,$cb       7320  jmp(Y,'REENTER')                #16
              1826 00f6  ld   $f6         7321  ld(-20/2)                       #17
                                          7322
                                          7323  # NOP implementation
                                          7324  label('nop#13')
nop#13:       1827 0116  ld   [$16]       7325  ld([vPC])                       #13
              1828 a001  suba $01         7326  suba(1)                         #14
              1829 c216  st   [$16]       7327  st([vPC])                       #15 vPC--
              182a 1403  ld   $03,y       7328  ld(hi('NEXTY'),Y)               #16
              182b e000  jmp  y,$00       7329  jmp(Y,'NEXTY')                  #17
              182c 00f6  ld   $f6         7330  ld(-20/2)                       #18
                                          7331
                                          7332  # BRA implementation
                                          7333  label('bra#13')
bra#13:       182d 1403  ld   $03,y       7334  ld(hi('REENTER'),Y)             #13
              182e e0cb  jmp  y,$cb       7335  jmp(Y,'REENTER')                #14
              182f 00f7  ld   $f7         7336  ld(-18/2)                       #15
                                          7337
                                          7338  # DBGE implementation
                                          7339  label('dbge#13')
dbge#13:      1830 1517  ld   [$17],y     7340  ld([vPC+1],Y)                   #13 vPC.hi
              1831 c21d  st   [$1d]       7341  st([vTmp])                      #14 branch offset
              1832 de00  st   [y,x++]     7342  st([Y,Xpp])                     #15 X++, address of counter
              1833 0d00  ld   [y,x]       7343  ld([Y,X])                       #16
              1834 1200  ld   ac,x        7344  ld(AC,X)                        #17 fetch counter
              1835 0500  ld   [x]         7345  ld([X])                         #18
              1836 a001  suba $01         7346  suba(1)                         #19 decrement counter
              1837 e83e  blt  .dbge#22    7347  blt('.dbge#22')                 #20 if < 0 BRA
              1838 c600  st   [x]         7348  st([X])                         #21
              1839 011d  ld   [$1d]       7349  ld([vTmp])                      #22
              183a c216  st   [$16]       7350  st([vPC])                       #23 BRA to branch offset
              183b 1403  ld   $03,y       7351  ld(hi('NEXTY'),Y)               #24
              183c e000  jmp  y,$00       7352  jmp(Y,'NEXTY')                  #25
              183d 00f2  ld   $f2         7353  ld(-28/2)                       #26
                                          7354  label('.dbge#22')
.dbge#22:     183e 0116  ld   [$16]       7355  ld([vPC])                       #22
              183f 8001  adda $01         7356  adda(1)                         #23
              1840 c216  st   [$16]       7357  st([vPC])                       #24 advance vPC by 1
              1841 1403  ld   $03,y       7358  ld(hi('REENTER'),Y)             #25
              1842 e0cb  jmp  y,$cb       7359  jmp(Y,'REENTER')                #26
              1843 00f1  ld   $f1         7360  ld(-30/2)                       #27
                                          7361
                                          7362  # LDNI implementation
                                          7363  label('ldni#13')
ldni#13:      1844 60ff  xora $ff         7364  xora(255)                       #13
              1845 8001  adda $01         7365  adda(1)                         #14
              1846 c218  st   [$18]       7366  st([vAC])                       #15
              1847 00ff  ld   $ff         7367  ld(255)                         #16
              1848 c219  st   [$19]       7368  st([vAC+1])                     #17
              1849 1403  ld   $03,y       7369  ld(hi('NEXTY'),Y)               #18
              184a e000  jmp  y,$00       7370  jmp(Y,'NEXTY')                  #19
              184b 00f5  ld   $f5         7371  ld(-22/2)                       #20
                                          7372
                                          7373  # ANDBK implementation
                                          7374  label('andbk#13')
andbk#13:     184c 1517  ld   [$17],y     7375  ld([vPC+1],Y)                   #13
              184d c21d  st   [$1d]       7376  st([vTmp])                      #14 immediate value
              184e de00  st   [y,x++]     7377  st([Y,Xpp])                     #15 X++
              184f 0d00  ld   [y,x]       7378  ld([Y,X])                       #16
              1850 1200  ld   ac,x        7379  ld(AC,X)                        #17 address of var
              1851 0500  ld   [x]         7380  ld([X])                         #18
              1852 211d  anda [$1d]       7381  anda([vTmp])                    #19
              1853 c218  st   [$18]       7382  st([vAC])                       #20
              1854 0000  ld   $00         7383  ld(0)                           #21
              1855 c219  st   [$19]       7384  st([vAC+1])                     #22 Store high result
              1856 0116  ld   [$16]       7385  ld([vPC])                       #23
              1857 8001  adda $01         7386  adda(1)                         #24
              1858 c216  st   [$16]       7387  st([vPC])                       #25 advance vPC by 1
              1859 1403  ld   $03,y       7388  ld(hi('NEXTY'),Y)               #26
              185a e000  jmp  y,$00       7389  jmp(Y,'NEXTY')                  #27
              185b 00f1  ld   $f1         7390  ld(-30/2)                       #28
                                          7391
                                          7392  # ORBK implementation
                                          7393  label('orbk#13')
orbk#13:      185c 1517  ld   [$17],y     7394  ld([vPC+1],Y)                   #13
              185d c21d  st   [$1d]       7395  st([vTmp])                      #14 immediate value
              185e de00  st   [y,x++]     7396  st([Y,Xpp])                     #15 X++
              185f 0d00  ld   [y,x]       7397  ld([Y,X])                       #16
              1860 1200  ld   ac,x        7398  ld(AC,X)                        #17 address of var
              1861 0500  ld   [x]         7399  ld([X])                         #18
              1862 411d  ora  [$1d]       7400  ora([vTmp])                     #19
              1863 c218  st   [$18]       7401  st([vAC])                       #20
              1864 0000  ld   $00         7402  ld(0)                           #21
              1865 c219  st   [$19]       7403  st([vAC+1])                     #22 Store high result
              1866 0116  ld   [$16]       7404  ld([vPC])                       #23
              1867 8001  adda $01         7405  adda(1)                         #24
              1868 c216  st   [$16]       7406  st([vPC])                       #25 advance vPC by 1
              1869 1403  ld   $03,y       7407  ld(hi('NEXTY'),Y)               #26
              186a e000  jmp  y,$00       7408  jmp(Y,'NEXTY')                  #27
              186b 00f1  ld   $f1         7409  ld(-30/2)                       #28
                                          7410
                                          7411  # XORBK implementation
                                          7412  label('xorbk#13')
xorbk#13:     186c 1517  ld   [$17],y     7413  ld([vPC+1],Y)                   #13
              186d c21d  st   [$1d]       7414  st([vTmp])                      #14 immediate value
              186e de00  st   [y,x++]     7415  st([Y,Xpp])                     #15 X++
              186f 0d00  ld   [y,x]       7416  ld([Y,X])                       #16
              1870 1200  ld   ac,x        7417  ld(AC,X)                        #17 address of var
              1871 0500  ld   [x]         7418  ld([X])                         #18
              1872 611d  xora [$1d]       7419  xora([vTmp])                    #19
              1873 c218  st   [$18]       7420  st([vAC])                       #20
              1874 0000  ld   $00         7421  ld(0)                           #21
              1875 c219  st   [$19]       7422  st([vAC+1])                     #22 Store high result
              1876 0116  ld   [$16]       7423  ld([vPC])                       #23
              1877 8001  adda $01         7424  adda(1)                         #24
              1878 c216  st   [$16]       7425  st([vPC])                       #25 advance vPC by 1
              1879 1403  ld   $03,y       7426  ld(hi('NEXTY'),Y)               #26
              187a e000  jmp  y,$00       7427  jmp(Y,'NEXTY')                  #27
              187b 00f1  ld   $f1         7428  ld(-30/2)                       #28
                                          7429
                                          7430  # CMPI implementation
                                          7431  label('cmpi#13')
cmpi#13:      187c c21d  st   [$1d]       7432  st([vTmp])                      #13 immediate value
              187d 00fd  ld   $fd         7433  ld(min(0,maxTicks-36/2))        #14
              187e 8115  adda [$15]       7434  adda([vTicks])                  #15
              187f e89c  blt  .cmpi#18    7435  blt('.cmpi#18')                 #16 not enough time left, so retry
              1880 1517  ld   [$17],y     7436  ld([vPC+1],Y)                   #17
              1881 011d  ld   [$1d]       7437  ld([vTmp])                      #18 immediate value
              1882 de00  st   [y,x++]     7438  st([Y,Xpp])                     #19 X++
              1883 0d00  ld   [y,x]       7439  ld([Y,X])                       #20 address of var
              1884 1200  ld   ac,x        7440  ld(AC,X)                        #21
              1885 0500  ld   [x]         7441  ld([X])                         #22 low byte of var
              1886 e892  blt  .cmpi#25    7442  bmi('.cmpi#25')                 #23
              1887 a11d  suba [$1d]       7443  suba([vTmp])                    #24
              1888 c218  st   [$18]       7444  st([vAC])                       #25 store low result
              1889 411d  ora  [$1d]       7445  ora([vTmp])                     #26
              188a 2080  anda $80         7446  anda(0x80)                      #27
              188b c219  st   [$19]       7447  st([vAC+1])                     #28 [vAC.hi] = sign bit, numerical accuracy is not important
              188c 0116  ld   [$16]       7448  ld([vPC])                       #29
              188d 8001  adda $01         7449  adda(1)                         #30
              188e c216  st   [$16]       7450  st([vPC])                       #31 advance vPC by 1
              188f 1403  ld   $03,y       7451  ld(hi('NEXTY'),Y)               #32
              1890 e000  jmp  y,$00       7452  jmp(Y,'NEXTY')                  #33
              1891 00ee  ld   $ee         7453  ld(-36/2)                       #34
                                          7454  label('.cmpi#25')
.cmpi#25:     1892 c218  st   [$18]       7455  st([vAC])                       #25 store low result
              1893 211d  anda [$1d]       7456  anda([vTmp])                    #26
              1894 2080  anda $80         7457  anda(0x80)                      #27
              1895 c219  st   [$19]       7458  st([vAC+1])                     #28 [vAC.hi] = sign bit, numerical accuracy is not important
              1896 0116  ld   [$16]       7459  ld([vPC])                       #29
              1897 8001  adda $01         7460  adda(1)                         #30
              1898 c216  st   [$16]       7461  st([vPC])                       #31 advance vPC by 1
              1899 1403  ld   $03,y       7462  ld(hi('NEXTY'),Y)               #32
              189a e000  jmp  y,$00       7463  jmp(Y,'NEXTY')                  #33
              189b 00ee  ld   $ee         7464  ld(-36/2)                       #34
                                          7465  label('.cmpi#18')
.cmpi#18:     189c 0116  ld   [$16]       7466  ld([vPC])                       #18 retry instruction
              189d a002  suba $02         7467  suba(2)                         #19
              189e c216  st   [$16]       7468  st([vPC])                       #20
              189f 1403  ld   $03,y       7469  ld(hi('REENTER'),Y)             #21
              18a0 e0cb  jmp  y,$cb       7470  jmp(Y,'REENTER')                #22
              18a1 00f3  ld   $f3         7471  ld(-26/2)                       #23
                                          7472
                                          7473  # JEQ implementation
                                          7474  label('jeq#13')
jeq#13:       18a2 1517  ld   [$17],y     7475  ld([vPC+1],Y)                   #13 vPC.hi
              18a3 0119  ld   [$19]       7476  ld([vAC+1])                     #14
              18a4 4118  ora  [$18]       7477  ora([vAC])                      #15
              18a5 f0ad  beq  .jeq#18     7478  beq('.jeq#18')                  #16 if (vAC.hi OR vAC.lo) == 0
              18a6 0d00  ld   [y,x]       7479  ld([Y,X])                       #17 lo address of jump destination
              18a7 0116  ld   [$16]       7480  ld([vPC])                       #18
              18a8 8001  adda $01         7481  adda(1)                         #19
              18a9 c216  st   [$16]       7482  st([vPC])                       #20
              18aa 1403  ld   $03,y       7483  ld(hi('REENTER'),Y)             #21
              18ab e0cb  jmp  y,$cb       7484  jmp(Y,'REENTER')                #22
              18ac 00f3  ld   $f3         7485  ld(-26/2)                       #23
                                          7486  label('.jeq#18')
.jeq#18:      18ad c216  st   [$16]       7487  st([vPC])                       #18
              18ae de00  st   [y,x++]     7488  st([Y,Xpp])                     #19
              18af 0d00  ld   [y,x]       7489  ld([Y,X])                       #20 hi address of jump destination
              18b0 c217  st   [$17]       7490  st([vPC+1])                     #21
              18b1 1403  ld   $03,y       7491  ld(hi('NEXTY'),Y)               #22
              18b2 e000  jmp  y,$00       7492  jmp(Y,'NEXTY')                  #23
              18b3 00f3  ld   $f3         7493  ld(-26/2)                       #24
                                          7494
                                          7495  # JNE implementation
                                          7496  label('jne#13')
jne#13:       18b4 1517  ld   [$17],y     7497  ld([vPC+1],Y)                   #13 vPC.hi
              18b5 0119  ld   [$19]       7498  ld([vAC+1])                     #14
              18b6 4118  ora  [$18]       7499  ora([vAC])                      #15
              18b7 ecbf  bne  .jne#18     7500  bne('.jne#18')                  #16 if (vAC.hi OR vAC.lo) != 0
              18b8 0d00  ld   [y,x]       7501  ld([Y,X])                       #17 address of branch destination
              18b9 0116  ld   [$16]       7502  ld([vPC])                       #18
              18ba 8001  adda $01         7503  adda(1)                         #19
              18bb c216  st   [$16]       7504  st([vPC])                       #20
              18bc 1403  ld   $03,y       7505  ld(hi('REENTER'),Y)             #21
              18bd e0cb  jmp  y,$cb       7506  jmp(Y,'REENTER')                #22
              18be 00f3  ld   $f3         7507  ld(-26/2)                       #23
                                          7508  label('.jne#18')
.jne#18:      18bf c216  st   [$16]       7509  st([vPC])                       #18
              18c0 de00  st   [y,x++]     7510  st([Y,Xpp])                     #19
              18c1 0d00  ld   [y,x]       7511  ld([Y,X])                       #20 hi address of jump destination
              18c2 c217  st   [$17]       7512  st([vPC+1])                     #21
              18c3 1403  ld   $03,y       7513  ld(hi('NEXTY'),Y)               #22
              18c4 e000  jmp  y,$00       7514  jmp(Y,'NEXTY')                  #23
              18c5 00f3  ld   $f3         7515  ld(-26/2)                       #24
                                          7516
                                          7517  # JLT implementation
                                          7518  label('jlt#13')
jlt#13:       18c6 1517  ld   [$17],y     7519  ld([vPC+1],Y)                   #13 vPC.hi
              18c7 0119  ld   [$19]       7520  ld([vAC+1])                     #14
              18c8 e8d0  blt  .jlt#17     7521  blt('.jlt#17')                  #15 if vAC.hi < 0
              18c9 0d00  ld   [y,x]       7522  ld([Y,X])                       #16 address of branch destination
              18ca 0116  ld   [$16]       7523  ld([vPC])                       #17
              18cb 8001  adda $01         7524  adda(1)                         #18
              18cc c216  st   [$16]       7525  st([vPC])                       #19
              18cd 1403  ld   $03,y       7526  ld(hi('NEXTY'),Y)               #20
              18ce e000  jmp  y,$00       7527  jmp(Y,'NEXTY')                  #21
              18cf 00f4  ld   $f4         7528  ld(-24/2)                       #22
                                          7529  label('.jlt#17')
.jlt#17:      18d0 c216  st   [$16]       7530  st([vPC])                       #17
              18d1 de00  st   [y,x++]     7531  st([Y,Xpp])                     #18
              18d2 0d00  ld   [y,x]       7532  ld([Y,X])                       #19 hi address of jump destination
              18d3 c217  st   [$17]       7533  st([vPC+1])                     #20
              18d4 1403  ld   $03,y       7534  ld(hi('REENTER'),Y)             #21
              18d5 e0cb  jmp  y,$cb       7535  jmp(Y,'REENTER')                #22
              18d6 00f3  ld   $f3         7536  ld(-26/2)                       #23
                                          7537
                                          7538  # BBEQ implementation
                                          7539  #label('bbeq#13')
                                          7540  #ld([vPC+1],Y)                   #13 vPC.hi
                                          7541  #st([vTmp])                      #14 branch offset
                                          7542  #st([Y,Xpp])                     #15 X++
                                          7543  #ld([Y,X])                       #16
                                          7544  #ld(AC,X)                        #17
                                          7545  #ld([X])                         #18 low byte of var
                                          7546  #beq('.bbeq#21')                 #19
                                          7547  #ld([vPC])                       #20
                                          7548  #adda(1)                         #21
                                          7549  #st([vPC])                       #22 advance vPC by 1
                                          7550  #ld(hi('REENTER'),Y)             #23
                                          7551  #jmp(Y,'REENTER')                #24
                                          7552  #ld(-28/2)                       #25
                                          7553  #label('.bbeq#21')
                                          7554  #ld([vTmp])                      #21
                                          7555  #st([vPC])                       #22 branch to offset
                                          7556  #ld(hi('REENTER'),Y)             #23
                                          7557  #jmp(Y,'REENTER')                #24
                                          7558  #ld(-28/2)                       #25
                                          7559
                                          7560  # BWEQ implementation
                                          7561  #label('bweq#13')
                                          7562  #ld([vPC+1],Y)                   #13 vPC.hi
                                          7563  #st([vTmp])                      #14 branch offset
                                          7564  #st([Y,Xpp])                     #15 X++
                                          7565  #ld([Y,X])                       #16
                                          7566  #ld(AC,X)                        #17
                                          7567  #ld([X])                         #18 low byte of var
                                          7568  #ld(0,Y)                         #19
                                          7569  #st([Y,Xpp])                     #20 X++
                                          7570  #ora([Y,X])                      #21 or with high byte of var
                                          7571  #beq('.bweq#24')                 #22
                                          7572  #ld([vPC])                       #23
                                          7573  #adda(1)                         #24
                                          7574  #st([vPC])                       #25 advance vPC by 1
                                          7575  #ld(hi('NEXTY'),Y)               #26
                                          7576  #jmp(Y,'NEXTY')                  #27
                                          7577  #ld(-30/2)                       #28
                                          7578  #label('.bweq#24')
                                          7579  #ld([vTmp])                      #24
                                          7580  #st([vPC])                       #25 branch to offset
                                          7581  #ld(hi('NEXTY'),Y)               #26
                                          7582  #jmp(Y,'NEXTY')                  #27
                                          7583  #ld(-30/2)                       #28
                                          7584
                                          7585
              18d7 0200  nop              7586  fillers(until=0xff)
              18d8 0200  nop
              18d9 0200  nop
              * 40 times
              18ff 0200  nop              7587  align(0x100, size=0x100)
                                          7588
                                          7589  #-----------------------------------------------------------------------
                                          7590  #       More sys implementations, (0x1900)
                                          7591  #-----------------------------------------------------------------------
                                          7592  # sys_Multiply_s16, sum:s16 = x:s16 * y:s16
                                          7593  # x:args0:1 y:args2:3 sum:args4:5 mask:args6:7
                                          7594  label('sys_Multiply_s16')
sys_Multiply_s16:
              1900 2126  anda [$26]       7595  anda([sysArgs+2])               #18,
              1901 c218  st   [$18]       7596  st([vAC])                       #19, AC.lo = mask.lo AND y.lo
              1902 012b  ld   [$2b]       7597  ld([sysArgs+7])                 #20, load mask.hio
              1903 2127  anda [$27]       7598  anda([sysArgs+3])               #21,
              1904 c219  st   [$19]       7599  st([vAC+1])                     #22, AC.hi = mask.hi AND y.hi
              1905 4118  ora  [$18]       7600  ora([vAC])                      #23,
                                          7601  beq('.sys_ms16_26')             #24, AC = 0 then skip
              1906 f00e  beq  .sys_ms16_26
              1907 0128  ld   [$28]       7602  ld([sysArgs+4])                 #25, load sum.lo
              1908 8124  adda [$24]       7603  adda([sysArgs+0])               #26, load x.lo
              1909 c228  st   [$28]       7604  st([sysArgs+4])                 #27, sum.lo = sum.lo + x.lo
                                          7605  blt('.sys_ms16_30')             #28, check for carry
              190a e810  blt  .sys_ms16_30
              190b a124  suba [$24]       7606  suba([sysArgs+0])               #29, get original sum.lo back
                                          7607  bra('.sys_ms16_32')             #30,
              190c fc12  bra  .sys_ms16_32
              190d 4124  ora  [$24]       7608  ora([sysArgs+0])                #31, carry in bit 7
                                          7609
                                          7610  label('.sys_ms16_26')
                                          7611  bra('.sys_ms16_28')             #26,
.sys_ms16_26: 190e fc18  bra  .sys_ms16_28
              190f 00e4  ld   $e4         7612  ld(-56/2)                       #27, no accumulate sys ticks
                                          7613
                                          7614  label('.sys_ms16_30')
.sys_ms16_30: 1910 2124  anda [$24]       7615  anda([sysArgs+0])               #30, carry in bit 7
              1911 0200  nop              7616  nop()                           #31,
                                          7617
                                          7618  label('.sys_ms16_32')
.sys_ms16_32: 1912 3080  anda $80,x       7619  anda(0x80,X)                    #32,
              1913 0500  ld   [x]         7620  ld([X])                         #33, move carry to bit 0
              1914 8129  adda [$29]       7621  adda([sysArgs+5])               #34,
              1915 8125  adda [$25]       7622  adda([sysArgs+1])               #35,
              1916 c229  st   [$29]       7623  st([sysArgs+5])                 #36, sum.hi = sum.hi + x.hi
              1917 00df  ld   $df         7624  ld(-66/2)                       #37, accumulate sys ticks
                                          7625
                                          7626  label('.sys_ms16_28')
.sys_ms16_28: 1918 c21d  st   [$1d]       7627  st([vTmp])                      #28,#38,
              1919 0124  ld   [$24]       7628  ld([sysArgs+0])                 #29,#39, AC = x.lo
              191a 3080  anda $80,x       7629  anda(0x80,X)                    #30,#40, X = AC & 0x80
              191b 8124  adda [$24]       7630  adda([sysArgs+0])               #31,#41, AC = x.lo <<1
              191c c224  st   [$24]       7631  st([sysArgs+0])                 #32,#42, x.lo = AC
              191d 0500  ld   [x]         7632  ld([X])                         #33,#43, AC = X >>7
              191e 8125  adda [$25]       7633  adda([sysArgs+1])               #34,#44,
              191f 8125  adda [$25]       7634  adda([sysArgs+1])               #35,#45,
              1920 c225  st   [$25]       7635  st([sysArgs+1])                 #36,#46, x.hi = x.hi <<1 + AC
              1921 012a  ld   [$2a]       7636  ld([sysArgs+6])                 #37,#47, AC = mask.lo
              1922 3080  anda $80,x       7637  anda(0x80,X)                    #38,#48, X = AC & 0x80
              1923 812a  adda [$2a]       7638  adda([sysArgs+6])               #39,#49, AC = mask.lo <<1
              1924 c22a  st   [$2a]       7639  st([sysArgs+6])                 #40,#50, mask.lo = AC
              1925 0500  ld   [x]         7640  ld([X])                         #41,#51, AC = X >>7
              1926 812b  adda [$2b]       7641  adda([sysArgs+7])               #42,#52,
              1927 812b  adda [$2b]       7642  adda([sysArgs+7])               #43,#53,
              1928 c22b  st   [$2b]       7643  st([sysArgs+7])                 #44,#54, mask.hi = mask.hi <<1 + AC
              1929 412a  ora  [$2a]       7644  ora([sysArgs+6])                #45,#55,
                                          7645  beq('.sys_ms16_48')             #46,#56, if mask = 0
              192a f032  beq  .sys_ms16_48
              192b 0128  ld   [$28]       7646  ld([sysArgs+4])                 #47,#57
              192c 0116  ld   [$16]       7647  ld([vPC])                       #48,#58,
              192d a002  suba $02         7648  suba(2)                         #49,#59,
              192e c216  st   [$16]       7649  st([vPC])                       #50,#60, restart SYS function
              192f 1403  ld   $03,y       7650  ld(hi('REENTER'),Y)             #51,#61,
              1930 e0cb  jmp  y,$cb       7651  jmp(Y,'REENTER')                #52,#62,
              1931 011d  ld   [$1d]       7652  ld([vTmp])                      #53,#63,
                                          7653
                                          7654  label('.sys_ms16_48')
.sys_ms16_48: 1932 c218  st   [$18]       7655  st([vAC])                       #48,#58,
              1933 0129  ld   [$29]       7656  ld([sysArgs+5])                 #49,#59,
              1934 c219  st   [$19]       7657  st([vAC+1])                     #50,#60,
              1935 1403  ld   $03,y       7658  ld(hi('REENTER'),Y)             #51,#61,
              1936 e0cb  jmp  y,$cb       7659  jmp(Y,'REENTER')                #52,#62,
              1937 011d  ld   [$1d]       7660  ld([vTmp])                      #53,#63,
                                          7661
                                          7662
                                          7663  #-----------------------------------------------------------------------
                                          7664  # sys_Divide_s16, x:s16 = x:s16 / y:s16, rem:s16 = x:s16 % y:s16
                                          7665  # x:args0:1 y:args2:3 rem:args4:5 mask:args6:7
                                          7666  label('sys_Divide_s16')
sys_Divide_s16:
              1938 3080  anda $80,x       7667  anda(0x80,X)                    #18, X = AC & 0x80
              1939 8128  adda [$28]       7668  adda([sysArgs+4])               #19, AC = rem.lo <<1
              193a c228  st   [$28]       7669  st([sysArgs+4])                 #20, rem.lo = AC
              193b 0500  ld   [x]         7670  ld([X])                         #21, AC = X >>7
              193c 8129  adda [$29]       7671  adda([sysArgs+5])               #22,
              193d 8129  adda [$29]       7672  adda([sysArgs+5])               #23,
              193e c229  st   [$29]       7673  st([sysArgs+5])                 #24, rem.hi = rem.hi <<1 + AC
              193f 0125  ld   [$25]       7674  ld([sysArgs+1])                 #25,
              1940 2080  anda $80         7675  anda(0x80)                      #26, sign of x
                                          7676  beq('.sys_ds16_29')             #27, if x >= 0
              1941 f046  beq  .sys_ds16_29
              1942 0128  ld   [$28]       7677  ld([sysArgs+4])                 #28,
              1943 8001  adda $01         7678  adda(1)                         #29,
                                          7679  bra('.sys_ds16_32')             #30,
              1944 fc49  bra  .sys_ds16_32
              1945 c228  st   [$28]       7680  st([sysArgs+4])                 #31, rem.lo++
                                          7681
                                          7682  label('.sys_ds16_29')
.sys_ds16_29: 1946 0200  nop              7683  nop()                           #29
              1947 0200  nop              7684  nop()                           #30
              1948 0200  nop              7685  nop()                           #31
                                          7686
                                          7687  label('.sys_ds16_32')
.sys_ds16_32: 1949 0124  ld   [$24]       7688  ld([sysArgs+0])                 #32, AC = x.lo
              194a 3080  anda $80,x       7689  anda(0x80,X)                    #33, X = AC & 0x80
              194b 8124  adda [$24]       7690  adda([sysArgs+0])               #34, AC = x.lo <<1
              194c c224  st   [$24]       7691  st([sysArgs+0])                 #35, x.lo = AC
              194d 0500  ld   [x]         7692  ld([X])                         #36, AC = X >>7
              194e 8125  adda [$25]       7693  adda([sysArgs+1])               #37,
              194f 8125  adda [$25]       7694  adda([sysArgs+1])               #38,
              1950 c225  st   [$25]       7695  st([sysArgs+1])                 #39, x.hi = x.hi <<1 + AC
                                          7696
              1951 0128  ld   [$28]       7697  ld([sysArgs+4])                 #40, load rem.lo
                                          7698  blt('.sys_ds16_43')             #41, check for borrow
              1952 e857  blt  .sys_ds16_43
              1953 a126  suba [$26]       7699  suba([sysArgs+2])               #42,
              1954 c218  st   [$18]       7700  st([vAC])                       #43, vAC.lo = rem.lo - y.lo
                                          7701  bra('.sys_ds16_46')             #44,
              1955 fc5a  bra  .sys_ds16_46
              1956 4126  ora  [$26]       7702  ora([sysArgs+2])                #45,
                                          7703
                                          7704  label('.sys_ds16_43')
.sys_ds16_43: 1957 c218  st   [$18]       7705  st([vAC])                       #43,
              1958 2126  anda [$26]       7706  anda([sysArgs+2])               #44,
              1959 0200  nop              7707  nop()                           #45,
                                          7708
                                          7709  label('.sys_ds16_46')
.sys_ds16_46: 195a 3080  anda $80,x       7710  anda(0x80,X)                    #46, move borrow to bit 0
              195b 0129  ld   [$29]       7711  ld([sysArgs+5])                 #47, load rem.hi
              195c a500  suba [x]         7712  suba([X])                       #48,
              195d a127  suba [$27]       7713  suba([sysArgs+3])               #49,
              195e c219  st   [$19]       7714  st([vAC+1])                     #50, vAC.hi = rem.hi - y.hi
                                          7715  blt('.sys_ds16_53')             #51,
              195f e869  blt  .sys_ds16_53
              1960 00dc  ld   $dc         7716  ld(-72/2)                       #52
              1961 0118  ld   [$18]       7717  ld([vAC])                       #53,
              1962 c228  st   [$28]       7718  st([sysArgs+4])                 #54,
              1963 0119  ld   [$19]       7719  ld([vAC+1])                     #55,
              1964 c229  st   [$29]       7720  st([sysArgs+5])                 #56, rem = vAC
              1965 0124  ld   [$24]       7721  ld([sysArgs+0])                 #57,
              1966 8001  adda $01         7722  adda(1)                         #58,
              1967 c224  st   [$24]       7723  st([sysArgs+0])                 #59, x.lo++
              1968 00d8  ld   $d8         7724  ld(-80/2)                       #60,
                                          7725
                                          7726  label('.sys_ds16_53')
.sys_ds16_53: 1969 c21d  st   [$1d]       7727  st([vTmp])                      #53, #61,
              196a 012a  ld   [$2a]       7728  ld([sysArgs+6])                 #54, #62, AC = mask.lo
              196b 3080  anda $80,x       7729  anda(0x80,X)                    #55, #63, X = AC & 0x80
              196c 812a  adda [$2a]       7730  adda([sysArgs+6])               #56, #64, AC = mask.lo <<1
              196d c22a  st   [$2a]       7731  st([sysArgs+6])                 #57, #65, mask.lo = AC
              196e 0500  ld   [x]         7732  ld([X])                         #58, #66, AC = X >>7
              196f 812b  adda [$2b]       7733  adda([sysArgs+7])               #59, #67,
              1970 812b  adda [$2b]       7734  adda([sysArgs+7])               #60, #68,
              1971 c22b  st   [$2b]       7735  st([sysArgs+7])                 #61, #69, mask.hi = mask.hi <<1 + AC
              1972 412a  ora  [$2a]       7736  ora([sysArgs+6])                #62, #70,
                                          7737  bne('.sys_ds16_65')             #63, #71,
              1973 ec7a  bne  .sys_ds16_65
              1974 0116  ld   [$16]       7738  ld([vPC])                       #64, #72,
              1975 0200  nop              7739  nop()                           #65, #73,
              1976 0200  nop              7740  nop()                           #66, #74,
              1977 1403  ld   $03,y       7741  ld(hi('REENTER'),Y)             #67, #75,
              1978 e0cb  jmp  y,$cb       7742  jmp(Y,'REENTER')                #68, #76,
              1979 011d  ld   [$1d]       7743  ld([vTmp])                      #69, #77,
                                          7744
                                          7745  label('.sys_ds16_65')
.sys_ds16_65: 197a a002  suba $02         7746  suba(2)                         #65, #73,
              197b c216  st   [$16]       7747  st([vPC])                       #66, #74, restart SYS function
              197c 1403  ld   $03,y       7748  ld(hi('REENTER'),Y)             #67, #75,
              197d e0cb  jmp  y,$cb       7749  jmp(Y,'REENTER')                #68, #76,
              197e 011d  ld   [$1d]       7750  ld([vTmp])                      #69, #77,
                                          7751
                                          7752
                                          7753  #-----------------------------------------------------------------------
                                          7754  # sys_DrawLine
                                          7755  label('sys_DrawLine')
sys_DrawLine: 197f 1182  ld   [$82],x     7756  ld([0x82],X)                    #18, X = [xy1].lo
              1980 1583  ld   [$83],y     7757  ld([0x83],Y)                    #19, Y = [xy1].hi
              1981 ce00  st   [y,x]       7758  st([Y,X])                       #20, [Y, X] = fgColour
              1982 1184  ld   [$84],x     7759  ld([0x84],X)                    #21, X = [xy2].lo
              1983 1585  ld   [$85],y     7760  ld([0x85],Y)                    #22, Y = [xy2].hi
              1984 ce00  st   [y,x]       7761  st([Y,X])                       #23, [Y, X] = fgColour
                                          7762
              1985 01a0  ld   [$a0]       7763  ld([0xA0])                      #24, num.lo
              1986 819c  adda [$9c]       7764  adda([0x9C])                    #25, sy.lo
              1987 c2a0  st   [$a0]       7765  st([0xA0])                      #26, num.lo = num.lo + sy.lo
                                          7766  blt('.sys_drawl_29')            #27, check for carry
              1988 e88c  blt  .sys_drawl_29
              1989 a19c  suba [$9c]       7767  suba([0x9C])                    #28, get original num.lo back
                                          7768  bra('.sys_drawl_31')            #29,
              198a fc8e  bra  .sys_drawl_31
              198b 419c  ora  [$9c]       7769  ora([0x9C])                     #30, carry in bit 7
                                          7770
                                          7771  label('.sys_drawl_29')
.sys_drawl_29:
              198c 219c  anda [$9c]       7772  anda([0x9C])                    #29, carry in bit 7
              198d 0200  nop              7773  nop()                           #30,
                                          7774
                                          7775  label('.sys_drawl_31')
.sys_drawl_31:
              198e 3080  anda $80,x       7776  anda(0x80,X)                    #31,
              198f 0500  ld   [x]         7777  ld([X])                         #32, move carry to bit 0
              1990 81a1  adda [$a1]       7778  adda([0xA1])                    #33,
              1991 819d  adda [$9d]       7779  adda([0x9D])                    #34,
              1992 c2a1  st   [$a1]       7780  st([0xA1])                      #35, num.hi = num.hi + sy.hi
                                          7781
              1993 01a0  ld   [$a0]       7782  ld([0xA0])                      #36, num.lo
                                          7783  blt('.sys_drawl_39')            #37, check for borrow
              1994 e899  blt  .sys_drawl_39
              1995 a19a  suba [$9a]       7784  suba([0x9A])                    #38, sx.lo
              1996 c218  st   [$18]       7785  st([vAC])                       #39, vAC.lo = num.lo - sx.lo
                                          7786  bra('.sys_drawl_42')            #40,
              1997 fc9c  bra  .sys_drawl_42
              1998 419a  ora  [$9a]       7787  ora([0x9A])                     #41,
                                          7788
                                          7789  label('.sys_drawl_39')
.sys_drawl_39:
              1999 c218  st   [$18]       7790  st([vAC])                       #39,
              199a 219a  anda [$9a]       7791  anda([0x9A])                    #40,
              199b 0200  nop              7792  nop()                           #41,
                                          7793
                                          7794  label('.sys_drawl_42')
.sys_drawl_42:
              199c 3080  anda $80,x       7795  anda(0x80,X)                    #42, move borrow to bit 0
              199d 01a1  ld   [$a1]       7796  ld([0xA1])                      #43, num.hi
              199e a500  suba [x]         7797  suba([X])                       #44,
              199f a19b  suba [$9b]       7798  suba([0x9B])                    #45,
                                          7799  blt('.sys_drawl_48')            #46,
              19a0 e8cf  blt  .sys_drawl_48
              19a1 c219  st   [$19]       7800  st([vAC+1])                     #47, vAC.hi = num.hi - sx.hi
              19a2 0118  ld   [$18]       7801  ld([vAC])                       #48,
              19a3 c2a0  st   [$a0]       7802  st([0xA0])                      #49,
              19a4 0119  ld   [$19]       7803  ld([vAC+1])                     #50,
              19a5 c2a1  st   [$a1]       7804  st([0xA1])                      #51, num = vAC
                                          7805
              19a6 0182  ld   [$82]       7806  ld([0x82])                      #52, xy1.lo
              19a7 8186  adda [$86]       7807  adda([0x86])                    #53, dxy1.lo
              19a8 c282  st   [$82]       7808  st([0x82])                      #54, xy1.lo = xy1.lo + dxy1.lo
                                          7809  blt('.sys_drawl_57')            #55, check for carry
              19a9 e8ad  blt  .sys_drawl_57
              19aa a186  suba [$86]       7810  suba([0x86])                    #56, get original xy1.lo back
                                          7811  bra('.sys_drawl_59')            #57,
              19ab fcaf  bra  .sys_drawl_59
              19ac 4186  ora  [$86]       7812  ora([0x86])                     #58, carry in bit 7
                                          7813
                                          7814  label('.sys_drawl_57')
.sys_drawl_57:
              19ad 2186  anda [$86]       7815  anda([0x86])                    #57, carry in bit 7
              19ae 0200  nop              7816  nop()                           #58,
                                          7817
                                          7818  label('.sys_drawl_59')
.sys_drawl_59:
              19af 3080  anda $80,x       7819  anda(0x80,X)                    #59,
              19b0 0500  ld   [x]         7820  ld([X])                         #60, move carry to bit 0
              19b1 8183  adda [$83]       7821  adda([0x83])                    #61,
              19b2 8187  adda [$87]       7822  adda([0x87])                    #62,
              19b3 c283  st   [$83]       7823  st([0x83])                      #63, xy1.hi = xy1.hi + dxy1.hi
                                          7824
              19b4 0184  ld   [$84]       7825  ld([0x84])                      #64, xy2.lo
                                          7826  blt('.sys_drawl_67')            #65, check for borrow
              19b5 e8ba  blt  .sys_drawl_67
              19b6 a186  suba [$86]       7827  suba([0x86])                    #66, dxy1.lo
              19b7 c284  st   [$84]       7828  st([0x84])                      #67, xy2.lo = xy2.lo - dxy1.lo
                                          7829  bra('.sys_drawl_70')            #68,
              19b8 fcbd  bra  .sys_drawl_70
              19b9 4186  ora  [$86]       7830  ora([0x86])                     #69,
                                          7831
                                          7832  label('.sys_drawl_67')
.sys_drawl_67:
              19ba c284  st   [$84]       7833  st([0x84])                      #67,
              19bb 2186  anda [$86]       7834  anda([0x86])                    #68,
              19bc 0200  nop              7835  nop()                           #69,
                                          7836
                                          7837  label('.sys_drawl_70')
.sys_drawl_70:
              19bd 3080  anda $80,x       7838  anda(0x80,X)                    #70, move borrow to bit 0
              19be 0185  ld   [$85]       7839  ld([0x85])                      #71, xy2.hi
              19bf a500  suba [x]         7840  suba([X])                       #72,
              19c0 a187  suba [$87]       7841  suba([0x87])                    #73,
              19c1 c285  st   [$85]       7842  st([0x85])                      #74, xy2.hi = xy2.hi - dxy1.hi
                                          7843
              19c2 019e  ld   [$9e]       7844  ld([0x9E])                      #75,
              19c3 a001  suba $01         7845  suba(1)                         #76,
                                          7846  bne('.sys_drawl_79')            #77,
              19c4 ecc9  bne  .sys_drawl_79
              19c5 c29e  st   [$9e]       7847  st([0x9E])                      #78, drawLine_count--
              19c6 1403  ld   $03,y       7848  ld(hi('REENTER'),Y)             #79,
              19c7 e0cb  jmp  y,$cb       7849  jmp(Y,'REENTER')                #80,
              19c8 00d6  ld   $d6         7850  ld(-84/2)                       #81,
                                          7851
                                          7852  label('.sys_drawl_79')
.sys_drawl_79:
              19c9 0116  ld   [$16]       7853  ld([vPC])                       #79,
              19ca a002  suba $02         7854  suba(2)                         #80,
              19cb c216  st   [$16]       7855  st([vPC])                       #81, restart
              19cc 1403  ld   $03,y       7856  ld(hi('NEXTY'),Y)               #82,
              19cd e000  jmp  y,$00       7857  jmp(Y,'NEXTY')                  #83,
              19ce 00d5  ld   $d5         7858  ld(-86/2)                       #84,
                                          7859
                                          7860  label('.sys_drawl_48')
.sys_drawl_48:
              19cf 0182  ld   [$82]       7861  ld([0x82])                      #48, xy1.lo
              19d0 8188  adda [$88]       7862  adda([0x88])                    #49, dxy2.lo
              19d1 c282  st   [$82]       7863  st([0x82])                      #50, xy1.lo = xy1.lo + dxy2.lo
                                          7864  blt('.sys_drawl_53')            #51, check for carry
              19d2 e8d6  blt  .sys_drawl_53
              19d3 a188  suba [$88]       7865  suba([0x88])                    #52, get original xy1.lo back
                                          7866  bra('.sys_drawl_55')            #53,
              19d4 fcd8  bra  .sys_drawl_55
              19d5 4188  ora  [$88]       7867  ora([0x88])                     #54, carry in bit 7
                                          7868
                                          7869  label('.sys_drawl_53')
.sys_drawl_53:
              19d6 2188  anda [$88]       7870  anda([0x88])                    #53, carry in bit 7
              19d7 0200  nop              7871  nop()                           #54,
                                          7872
                                          7873  label('.sys_drawl_55')
.sys_drawl_55:
              19d8 3080  anda $80,x       7874  anda(0x80,X)                    #55,
              19d9 0500  ld   [x]         7875  ld([X])                         #56, move carry to bit 0
              19da 8183  adda [$83]       7876  adda([0x83])                    #57,
              19db 8189  adda [$89]       7877  adda([0x89])                    #58,
              19dc c283  st   [$83]       7878  st([0x83])                      #59, xy1.hi = xy1.hi + dxy2.hi
                                          7879
              19dd 0184  ld   [$84]       7880  ld([0x84])                      #60, xy2.lo
                                          7881  blt('.sys_drawl_63')            #61, check for borrow
              19de e8e3  blt  .sys_drawl_63
              19df a188  suba [$88]       7882  suba([0x88])                    #62, dxy2.lo
              19e0 c284  st   [$84]       7883  st([0x84])                      #63, xy2.lo = xy2.lo - dxy2.lo
                                          7884  bra('.sys_drawl_66')            #64,
              19e1 fce6  bra  .sys_drawl_66
              19e2 4188  ora  [$88]       7885  ora([0x88])                     #65,
                                          7886
                                          7887  label('.sys_drawl_63')
.sys_drawl_63:
              19e3 c284  st   [$84]       7888  st([0x84])                      #63,
              19e4 2188  anda [$88]       7889  anda([0x88])                    #64,
              19e5 0200  nop              7890  nop()                           #65,
                                          7891
                                          7892  label('.sys_drawl_66')
.sys_drawl_66:
              19e6 3080  anda $80,x       7893  anda(0x80,X)                    #66, move borrow to bit 0
              19e7 0185  ld   [$85]       7894  ld([0x85])                      #67, xy2.hi
              19e8 a500  suba [x]         7895  suba([X])                       #68,
              19e9 a189  suba [$89]       7896  suba([0x89])                    #69,
              19ea c285  st   [$85]       7897  st([0x85])                      #70, xy2.hi = xy2.hi - dxy2.hi
                                          7898
              19eb 019e  ld   [$9e]       7899  ld([0x9E])                      #71,
              19ec a001  suba $01         7900  suba(1)                         #72,
                                          7901  bne('.sys_drawl_75')            #73,
              19ed ecf2  bne  .sys_drawl_75
              19ee c29e  st   [$9e]       7902  st([0x9E])                      #74, drawLine_count--
              19ef 1403  ld   $03,y       7903  ld(hi('REENTER'),Y)             #75,
              19f0 e0cb  jmp  y,$cb       7904  jmp(Y,'REENTER')                #76,
              19f1 00d8  ld   $d8         7905  ld(-80/2)                       #77,
                                          7906
                                          7907  label('.sys_drawl_75')
.sys_drawl_75:
              19f2 0116  ld   [$16]       7908  ld([vPC])                       #75,
              19f3 a002  suba $02         7909  suba(2)                         #76,
              19f4 c216  st   [$16]       7910  st([vPC])                       #77, restart
              19f5 1403  ld   $03,y       7911  ld(hi('NEXTY'),Y)               #78,
              19f6 e000  jmp  y,$00       7912  jmp(Y,'NEXTY')                  #79,
              19f7 00d7  ld   $d7         7913  ld(-82/2)                       #80,
                                          7914
                                          7915
              19f8 0200  nop              7916  fillers(until=0xff)
              19f9 0200  nop
              19fa 0200  nop
              * 7 times
              19ff 0200  nop              7917  align(0x100, size=0x100)
                                          7918
                                          7919  #-----------------------------------------------------------------------
                                          7920  #       More sys implementations, (0x1A00)
                                          7921  #-----------------------------------------------------------------------
                                          7922
                                          7923
                                          7924  # sys_WaitVBlank
                                          7925  label('sys_WaitVBlank')
sys_WaitVBlank:
              1a00 60b3  xora $b3         7926  xora(videoYline0)               #18,
                                          7927  beq('.sys_waitvblank_21')       #19,
              1a01 f008  beq  .sys_waitvblank_21
              1a02 0116  ld   [$16]       7928  ld([vPC])                       #20,
              1a03 a002  suba $02         7929  suba(2)                         #21,
              1a04 c216  st   [$16]       7930  st([vPC])                       #22, restart
              1a05 1403  ld   $03,y       7931  ld(hi('REENTER'),Y)             #23,
              1a06 e0cb  jmp  y,$cb       7932  jmp(Y,'REENTER')                #24,
              1a07 00f2  ld   $f2         7933  ld(-28/2)                       #25,
                                          7934  label('.sys_waitvblank_21')
.sys_waitvblank_21:
              1a08 1403  ld   $03,y       7935  ld(hi('REENTER'),Y)             #21,
              1a09 e0cb  jmp  y,$cb       7936  jmp(Y,'REENTER')                #22,
              1a0a 00f2  ld   $f2         7937  ld(-28/2)                       #23,
                                          7938
                                          7939
                                          7940  # sys_SortUint8Array, sysArgs0,1=array, sysArg2=i, sysArg3=j, sysArg4=key, sysArg5=length
                                          7941  label('sys_SortUint8Array')
sys_SortUint8Array:
              1a0b 0127  ld   [$27]       7942  ld([sysArgs+3])                 #18,
                                          7943  ble('.sys_sortuint8array_21')   #19, j == 0
              1a0c f824  ble  .sys_sortuint8array_21
              1a0d 0124  ld   [$24]       7944  ld([sysArgs+0])                 #20,
              1a0e 8127  adda [$27]       7945  adda([sysArgs+3])               #21,
              1a0f b001  suba $01,x       7946  suba(1,X)                       #22,
              1a10 0d00  ld   [y,x]       7947  ld([Y,X])                       #23,
                                          7948  bmi('.sys_sortuint8array_26')   #24, convert signed < to unsigned <
              1a11 e815  blt  .sys_sortuint8array_26
              1a12 a128  suba [$28]       7949  suba([sysArgs+4])               #25,
                                          7950  bra('.sys_sortuint8array_28')   #26,
              1a13 fc17  bra  .sys_sortuint8array_28
              1a14 4128  ora  [$28]       7951  ora([sysArgs+4])                #27, borrow
                                          7952  label('.sys_sortuint8array_26')
.sys_sortuint8array_26:
              1a15 2128  anda [$28]       7953  anda([sysArgs+4])               #26, borrow
              1a16 0200  nop              7954  nop()                           #27,
                                          7955  label('.sys_sortuint8array_28')
.sys_sortuint8array_28:                   7956  bmi('.sys_sortuint8array_30_0') #28, a[j-1] < key
              1a17 e830  blt  .sys_sortuint8array_30_0
              1a18 0d00  ld   [y,x]       7957  ld([Y,X])                       #29,
              1a19 de00  st   [y,x++]     7958  st([Y,Xpp])                     #30,
              1a1a ce00  st   [y,x]       7959  st([Y,X])                       #31, a[j] = a[j-1]
              1a1b 0127  ld   [$27]       7960  ld([sysArgs+3])                 #32,
              1a1c a001  suba $01         7961  suba(1)                         #33,
              1a1d c227  st   [$27]       7962  st([sysArgs+3])                 #34, j--
              1a1e 0116  ld   [$16]       7963  ld([vPC])                       #35,
              1a1f a002  suba $02         7964  suba(2)                         #36,
              1a20 c216  st   [$16]       7965  st([vPC])                       #37, restart
              1a21 1403  ld   $03,y       7966  ld(hi('NEXTY'),Y)               #38,
              1a22 e000  jmp  y,$00       7967  jmp(Y,'NEXTY')                  #39,
              1a23 00eb  ld   $eb         7968  ld(-42/2)                       #40,
                                          7969  label('.sys_sortuint8array_21')
.sys_sortuint8array_21:
              1a24 9127  adda [$27],x     7970  adda([sysArgs+3],X)             #21,
              1a25 0128  ld   [$28]       7971  ld([sysArgs+4])                 #22,
              1a26 ce00  st   [y,x]       7972  st([Y,X])                       #23, a[j] = key
              1a27 0126  ld   [$26]       7973  ld([sysArgs+2])                 #24,
              1a28 8001  adda $01         7974  adda(1)                         #25,
              1a29 c226  st   [$26]       7975  st([sysArgs+2])                 #26, i++
              1a2a a129  suba [$29]       7976  suba([sysArgs+5])               #27,
                                          7977  blt('.sys_sortuint8array_30_1') #28, i < length
              1a2b e83c  blt  .sys_sortuint8array_30_1
              1a2c 0124  ld   [$24]       7978  ld([sysArgs+0])                 #29,
              1a2d 1403  ld   $03,y       7979  ld(hi('NEXTY'),Y)               #30,
              1a2e e000  jmp  y,$00       7980  jmp(Y,'NEXTY')                  #31,
              1a2f 00ef  ld   $ef         7981  ld(-34/2)                       #32,
                                          7982  label('.sys_sortuint8array_30_0')
.sys_sortuint8array_30_0:
              1a30 de00  st   [y,x++]     7983  st([Y,Xpp])                     #30,
              1a31 0128  ld   [$28]       7984  ld([sysArgs+4])                 #31,
              1a32 ce00  st   [y,x]       7985  st([Y,X])                       #32, a[j] = key
              1a33 0126  ld   [$26]       7986  ld([sysArgs+2])                 #33,
              1a34 8001  adda $01         7987  adda(1)                         #34,
              1a35 c226  st   [$26]       7988  st([sysArgs+2])                 #35, i++
              1a36 a129  suba [$29]       7989  suba([sysArgs+5])               #36,
                                          7990  blt('.sys_sortuint8array_39')   #37, i < length
              1a37 e847  blt  .sys_sortuint8array_39
              1a38 0124  ld   [$24]       7991  ld([sysArgs+0])                 #38,
              1a39 1403  ld   $03,y       7992  ld(hi('REENTER'),Y)             #39,
              1a3a e0cb  jmp  y,$cb       7993  jmp(Y,'REENTER')                #40,
              1a3b 00ea  ld   $ea         7994  ld(-44/2)                       #41,
                                          7995  label('.sys_sortuint8array_30_1')
.sys_sortuint8array_30_1:
              1a3c 9126  adda [$26],x     7996  adda([sysArgs+2],X)             #30,
              1a3d 0d00  ld   [y,x]       7997  ld([Y,X])                       #31,
              1a3e c228  st   [$28]       7998  st([sysArgs+4])                 #32, key = a[i]
              1a3f 0126  ld   [$26]       7999  ld([sysArgs+2])                 #33,
              1a40 c227  st   [$27]       8000  st([sysArgs+3])                 #34, j = i
              1a41 0116  ld   [$16]       8001  ld([vPC])                       #35,
              1a42 a002  suba $02         8002  suba(2)                         #36,
              1a43 c216  st   [$16]       8003  st([vPC])                       #37, restart
              1a44 1403  ld   $03,y       8004  ld(hi('NEXTY'),Y)               #38,
              1a45 e000  jmp  y,$00       8005  jmp(Y,'NEXTY')                  #39,
              1a46 00eb  ld   $eb         8006  ld(-42/2)                       #40,
                                          8007  label('.sys_sortuint8array_39')
.sys_sortuint8array_39:
              1a47 9126  adda [$26],x     8008  adda([sysArgs+2],X)             #39,
              1a48 0d00  ld   [y,x]       8009  ld([Y,X])                       #40,
              1a49 c228  st   [$28]       8010  st([sysArgs+4])                 #41, key = a[i]
              1a4a 0126  ld   [$26]       8011  ld([sysArgs+2])                 #42,
              1a4b c227  st   [$27]       8012  st([sysArgs+3])                 #43, j = i
              1a4c 0116  ld   [$16]       8013  ld([vPC])                       #44,
              1a4d a002  suba $02         8014  suba(2)                         #45,
              1a4e c216  st   [$16]       8015  st([vPC])                       #46, restart
              1a4f 1403  ld   $03,y       8016  ld(hi('REENTER'),Y)             #47,
              1a50 e0cb  jmp  y,$cb       8017  jmp(Y,'REENTER')                #48,
              1a51 00e6  ld   $e6         8018  ld(-52/2)                       #49,
                                          8019
                                          8020
                                          8021  # sys_SortViaIndices, sysArgs0,1=indices, sysArgs2,3=src, sysArg4,5=dst, sysArg6=dst step, vAC=count
                                          8022  label('sys_SortViaIndices')
sys_SortViaIndices:
              1a52 1124  ld   [$24],x     8023  ld([sysArgs+0],X)               #18,
              1a53 0d00  ld   [y,x]       8024  ld([Y,X])                       #19, [index]
              1a54 1527  ld   [$27],y     8025  ld([sysArgs+3],Y)               #20,
              1a55 9126  adda [$26],x     8026  adda([sysArgs+2],X)             #21, src
              1a56 0d00  ld   [y,x]       8027  ld([Y,X])                       #22, peek(src + index)
              1a57 1529  ld   [$29],y     8028  ld([sysArgs+5],Y)               #23,
              1a58 1128  ld   [$28],x     8029  ld([sysArgs+4],X)               #24, dst
              1a59 ce00  st   [y,x]       8030  st([Y,X])                       #25,
              1a5a 0124  ld   [$24]       8031  ld([sysArgs+0])                 #26,
              1a5b 8001  adda $01         8032  adda(1)                         #27,
              1a5c c224  st   [$24]       8033  st([sysArgs+0])                 #28, indices++
              1a5d 0128  ld   [$28]       8034  ld([sysArgs+4])                 #29,
              1a5e 812a  adda [$2a]       8035  adda([sysArgs+6])               #30,
              1a5f c228  st   [$28]       8036  st([sysArgs+4])                 #31, dst += step
              1a60 0118  ld   [$18]       8037  ld([vAC])                       #32,
              1a61 a001  suba $01         8038  suba(1)                         #33,
                                          8039  beq('.sys_sortviaindices_36')   #34,
              1a62 f06a  beq  .sys_sortviaindices_36
              1a63 c218  st   [$18]       8040  st([vAC])                       #35, count--
              1a64 0116  ld   [$16]       8041  ld([vPC])                       #36,
              1a65 a002  suba $02         8042  suba(2)                         #37,
              1a66 c216  st   [$16]       8043  st([vPC])                       #38, restart
              1a67 1403  ld   $03,y       8044  ld(hi('REENTER'),Y)             #39,
              1a68 e0cb  jmp  y,$cb       8045  jmp(Y,'REENTER')                #40,
              1a69 00ea  ld   $ea         8046  ld(-44/2)                       #41,
                                          8047  label('.sys_sortviaindices_36')
.sys_sortviaindices_36:
              1a6a 1403  ld   $03,y       8048  ld(hi('NEXTY'),Y)               #36,
              1a6b e000  jmp  y,$00       8049  jmp(Y,'NEXTY')                  #37,
              1a6c 00ec  ld   $ec         8050  ld(-40/2)                       #38,
                                          8051
                                          8052
                                          8053  # SYS_LoaderNextByteIn_32
                                          8054  # sysArgs[0:1] Current address
                                          8055  # sysArgs[2]   Checksum
                                          8056  # sysArgs[3]   Wait value (videoY)
                                          8057  label('SYS_LoaderNextByteIn_32')
SYS_LoaderNextByteIn_32:
              1a6d 0109  ld   [$09]       8058  ld([videoY])                    #15
              1a6e 6127  xora [$27]       8059  xora([sysArgs+3])               #16
              1a6f ec7d  bne  .sysNbi#19  8060  bne('.sysNbi#19')               #17
              1a70 1124  ld   [$24],x     8061  ld([sysArgs+0],X)               #18
              1a71 1525  ld   [$25],y     8062  ld([sysArgs+1],Y)               #19
              1a72 0300  ld   in          8063  ld(IN)                          #20
              1a73 ce00  st   [y,x]       8064  st([Y,X])                       #21
              1a74 c218  st   [$18]       8065  st([vAC])                       #22
              1a75 8126  adda [$26]       8066  adda([sysArgs+2])               #23
              1a76 c226  st   [$26]       8067  st([sysArgs+2])                 #24
              1a77 0124  ld   [$24]       8068  ld([sysArgs+0])                 #25
              1a78 8001  adda $01         8069  adda(1)                         #26
              1a79 c224  st   [$24]       8070  st([sysArgs+0])                 #27
              1a7a 1403  ld   $03,y       8071  ld(hi('NEXTY'),Y)               #28
              1a7b e000  jmp  y,$00       8072  jmp(Y,'NEXTY')                  #29
              1a7c 00f0  ld   $f0         8073  ld(-32/2)                       #30
                                          8074
                                          8075  # Restart the instruction in the next timeslice
                                          8076  label('.sysNbi#19')
.sysNbi#19:   1a7d 0116  ld   [$16]       8077  ld([vPC])                       #19
              1a7e a002  suba $02         8078  suba(2)                         #20
              1a7f c216  st   [$16]       8079  st([vPC])                       #21
              1a80 1403  ld   $03,y       8080  ld(hi('NEXTY'),Y)               #22
              1a81 e000  jmp  y,$00       8081  jmp(Y,'NEXTY')                  #23
              1a82 00f3  ld   $f3         8082  ld(-26/2)                       #24
                                          8083
                                          8084
                                          8085  # SYS_LoaderProcessInput_64
                                          8086  # sysArgs[0:1] Source address
                                          8087  # sysArgs[2]   Checksum
                                          8088  # sysArgs[4]   Copy count
                                          8089  # sysArgs[5:6] Destination address
                                          8090  label('SYS_LoaderProcessInput_64')
SYS_LoaderProcessInput_64:
              1a83 1525  ld   [$25],y     8091  ld([sysArgs+1],Y)               #15
              1a84 0126  ld   [$26]       8092  ld([sysArgs+2])                 #16
              1a85 ecaa  bne  .sysPi#19   8093  bne('.sysPi#19')                #17
              1a86 0124  ld   [$24]       8094  ld([sysArgs+0])                 #18
              1a87 b041  suba $41,x       8095  suba(65,X)                      #19 Point at first byte of buffer
              1a88 0d00  ld   [y,x]       8096  ld([Y,X])                       #20 Command byte
                                          8097  st([Y,Xpp]);                    C('Just X++')#21
              1a89 de00  st   [y,x++]     ;Just X++
              1a8a 604c  xora $4c         8098  xora(ord('L'))                  #22 This loader lumps everything under 'L'
              1a8b ecae  bne  .sysPi#25   8099  bne('.sysPi#25')                #23
                                          8100  ld([Y,X]);                      C('Valid command')#24 Length byte
              1a8c 0d00  ld   [y,x]       ;Valid command
                                          8101  st([Y,Xpp]);                    C('Just X++')#25
              1a8d de00  st   [y,x++]     ;Just X++
              1a8e 203f  anda $3f         8102  anda(63)                        #26 Bit 6:7 are garbage
              1a8f c228  st   [$28]       8103  st([sysArgs+4])                 #27 Copy count 0..60
              1a90 8d00  adda [y,x]       8104  adda([Y,X])                     #28 One location past (+1) the last byte of fragment
              1a91 8001  adda $01         8105  adda(1)                         #29 254+1 = $ff becomes 0, 255+1 = $00 becomes 1
              1a92 20fe  anda $fe         8106  anda(0xfe)                      #30 Will be zero only when writing in top 2 bytes of page
              1a93 c21d  st   [$1d]       8107  st([vTmp])                      #31 Remember as first condition
              1a94 0d00  ld   [y,x]       8108  ld([Y,X])                       #32 Low copy address
                                          8109  st([Y,Xpp]);                    C('Just X++')#33
              1a95 de00  st   [y,x++]     ;Just X++
              1a96 c229  st   [$29]       8110  st([sysArgs+5])                 #34
              1a97 0d00  ld   [y,x]       8111  ld([Y,X])                       #35 High copy address
                                          8112  st([Y,Xpp]);                    C('Just X++')#36
              1a98 de00  st   [y,x++]     ;Just X++
              1a99 c22a  st   [$2a]       8113  st([sysArgs+6])                 #37
              1a9a a001  suba $01         8114  suba(1)                         #38 Check if writing into sound channel page (1..4)
              1a9b 20fc  anda $fc         8115  anda(0xfc)                      #39
              1a9c 411d  ora  [$1d]       8116  ora([vTmp])                     #40 Combine second condition with first
              1a9d c21d  st   [$1d]       8117  st([vTmp])                      #41 Zero when overwriting one of oscL[1..4] or oscH[1..4]
              1a9e 0128  ld   [$28]       8118  ld([sysArgs+4])                 #42 Check copy count
              1a9f ecb3  bne  .sysPi#45   8119  bne('.sysPi#45')                #43
                                          8120  # Execute code (don't care about checksum anymore)
                                          8121  ld([sysArgs+5]);                C('Execute')#44 Low run address
              1aa0 0129  ld   [$29]       ;Execute
              1aa1 c21a  st   [$1a]       8122  st([vLR])                       #45 https://forum.gigatron.io/viewtopic.php?p=29#p29
              1aa2 a002  suba $02         8123  suba(2)                         #46
              1aa3 c216  st   [$16]       8124  st([vPC])                       #47
              1aa4 012a  ld   [$2a]       8125  ld([sysArgs+6])                 #48 High run address
              1aa5 c217  st   [$17]       8126  st([vPC+1])                     #49
              1aa6 c21b  st   [$1b]       8127  st([vLR+1])                     #50
              1aa7 1403  ld   $03,y       8128  ld(hi('REENTER'),Y)             #51
              1aa8 e0cb  jmp  y,$cb       8129  jmp(Y,'REENTER')                #52
              1aa9 00e4  ld   $e4         8130  ld(-56/2)                       #53
                                          8131
                                          8132  # Invalid checksum
                                          8133  label('.sysPi#19')
.sysPi#19:    1aaa 0001  ld   $01         8134  wait(25-19);                    C('Invalid checksum')#19 Reset checksum
              1aab ecab  bne  $1aab
              1aac a001  suba $01
              1aad 0200  nop              ;Invalid checksum
                                          8135
                                          8136  # Unknown command
                                          8137  label('.sysPi#25')
                                          8138  ld(ord('g'));                   C('Unknown command')#25 Reset checksum
.sysPi#25:    1aae 0067  ld   $67         ;Unknown command
              1aaf c226  st   [$26]       8139  st([sysArgs+2])                 #26
              1ab0 1403  ld   $03,y       8140  ld(hi('REENTER'),Y)             #27
              1ab1 e0cb  jmp  y,$cb       8141  jmp(Y,'REENTER')                #28
              1ab2 00f0  ld   $f0         8142  ld(-32/2)                       #29
                                          8143
                                          8144  # Loading data
                                          8145  label('.sysPi#45')
                                          8146  ld([vTmp]);                     C('Loading data')#45
.sysPi#45:    1ab3 011d  ld   [$1d]       ;Loading data
              1ab4 ecb7  bne  $1ab7       8147  bne(pc()+3)                     #46
              1ab5 fcb8  bra  $1ab8       8148  bra(pc()+3)                     #47
                                          8149  ld(0xfc);                       C('Unsafe')#48  Clear low channelMask bits so it becomes safe
              1ab6 00fc  ld   $fc         ;Unsafe
                                          8150  ld(0xff);                       C('Safe')#48(!) No change to channelMask because already safe
              1ab7 00ff  ld   $ff         ;Safe
              1ab8 2121  anda [$21]       8151  anda([channelMask])             #49
              1ab9 c221  st   [$21]       8152  st([channelMask])               #50
              1aba 0124  ld   [$24]       8153  ld([sysArgs+0])                 #51 Continue checksum
              1abb b001  suba $01,x       8154  suba(1,X)                       #52 Point at last byte
              1abc 0d00  ld   [y,x]       8155  ld([Y,X])                       #53
              1abd c226  st   [$26]       8156  st([sysArgs+2])                 #54
              1abe 1403  ld   $03,y       8157  ld(hi('REENTER'),Y)             #55
              1abf e0cb  jmp  y,$cb       8158  jmp(Y,'REENTER')                #56
              1ac0 00e2  ld   $e2         8159  ld(-60/2)                       #57
                                          8160
                                          8161
                                          8162  # SYS_LoaderPayloadCopy_34
                                          8163  # sysArgs[0:1] Source address
                                          8164  # sysArgs[4]   Copy count
                                          8165  # sysArgs[5:6] Destination address
                                          8166  label('SYS_LoaderPayloadCopy_34')
SYS_LoaderPayloadCopy_34:
              1ac1 0128  ld   [$28]       8167  ld([sysArgs+4])                 #15 Copy count
              1ac2 f0cf  beq  .sysCc#18   8168  beq('.sysCc#18')                #16
              1ac3 a001  suba $01         8169  suba(1)                         #17
              1ac4 c228  st   [$28]       8170  st([sysArgs+4])                 #18
              1ac5 1124  ld   [$24],x     8171  ld([sysArgs+0],X)               #19 Current pointer
              1ac6 1525  ld   [$25],y     8172  ld([sysArgs+1],Y)               #20
              1ac7 0d00  ld   [y,x]       8173  ld([Y,X])                       #21
              1ac8 1129  ld   [$29],x     8174  ld([sysArgs+5],X)               #22 Target pointer
              1ac9 152a  ld   [$2a],y     8175  ld([sysArgs+6],Y)               #23
              1aca ce00  st   [y,x]       8176  st([Y,X])                       #24
              1acb 0129  ld   [$29]       8177  ld([sysArgs+5])                 #25 Increment target
              1acc 8001  adda $01         8178  adda(1)                         #26
              1acd c229  st   [$29]       8179  st([sysArgs+5])                 #27
              1ace fcd3  bra  .sysCc#30   8180  bra('.sysCc#30')                #28
                                          8181
                                          8182  label('.sysCc#18')
.sysCc#18:    1acf 1403  ld   $03,y       8183  ld(hi('REENTER'),Y)             #18,29
              1ad0 0004  ld   $04         8184  wait(30-19)                     #19
              1ad1 ecd1  bne  $1ad1
              1ad2 a001  suba $01
                                          8185  label('.sysCc#30')
.sysCc#30:    1ad3 e0cb  jmp  y,$cb       8186  jmp(Y,'REENTER')                #30
              1ad4 00ef  ld   $ef         8187  ld(-34/2)                       #31
                                          8188
                                          8189
                                          8190  # SYS_Unpack_56
                                          8191  # Unpack 3 bytes into 4 pixels
                                          8192  #
                                          8193  # Variables:
                                          8194  #       sysArgs[0:2]    Packed bytes (in)
                                          8195  #       sysArgs[0:3]    Pixels (out)
                                          8196  label('SYS_Unpack_56')
SYS_Unpack_56:
              1ad5 1407  ld   $07,y       8197  ld(soundTable>>8,Y)             #15
              1ad6 0126  ld   [$26]       8198  ld([sysArgs+2])                 #16 a[2]>>2
              1ad7 5003  ora  $03,x       8199  ora(0x03,X)                     #17
              1ad8 0d00  ld   [y,x]       8200  ld([Y,X])                       #18
              1ad9 c227  st   [$27]       8201  st([sysArgs+3])                 #19 -> Pixel 3
                                          8202
              1ada 0126  ld   [$26]       8203  ld([sysArgs+2])                 #20 (a[2]&3)<<4
              1adb 2003  anda $03         8204  anda(0x03)                      #21
              1adc 8200  adda ac          8205  adda(AC)                        #22
              1add 8200  adda ac          8206  adda(AC)                        #23
              1ade 8200  adda ac          8207  adda(AC)                        #24
              1adf 8200  adda ac          8208  adda(AC)                        #25
              1ae0 c226  st   [$26]       8209  st([sysArgs+2])                 #26
              1ae1 0125  ld   [$25]       8210  ld([sysArgs+1])                 #27 | a[1]>>4
              1ae2 5003  ora  $03,x       8211  ora(0x03,X)                     #28
              1ae3 0d00  ld   [y,x]       8212  ld([Y,X])                       #29
              1ae4 5003  ora  $03,x       8213  ora(0x03,X)                     #30
              1ae5 0d00  ld   [y,x]       8214  ld([Y,X])                       #31
              1ae6 4126  ora  [$26]       8215  ora([sysArgs+2])                #32
              1ae7 c226  st   [$26]       8216  st([sysArgs+2])                 #33 -> Pixel 2
                                          8217
              1ae8 0125  ld   [$25]       8218  ld([sysArgs+1])                 #34 (a[1]&15)<<2
              1ae9 200f  anda $0f         8219  anda(0x0f)                      #35
              1aea 8200  adda ac          8220  adda(AC)                        #36
              1aeb 8200  adda ac          8221  adda(AC)                        #37
              1aec c225  st   [$25]       8222  st([sysArgs+1])                 #38
                                          8223
              1aed 0124  ld   [$24]       8224  ld([sysArgs+0])                 #39 | a[0]>>6
              1aee 5003  ora  $03,x       8225  ora(0x03,X)                     #40
              1aef 0d00  ld   [y,x]       8226  ld([Y,X])                       #41
              1af0 5003  ora  $03,x       8227  ora(0x03,X)                     #42
              1af1 0d00  ld   [y,x]       8228  ld([Y,X])                       #43
              1af2 5003  ora  $03,x       8229  ora(0x03,X)                     #44
              1af3 0d00  ld   [y,x]       8230  ld([Y,X])                       #45
              1af4 4125  ora  [$25]       8231  ora([sysArgs+1])                #46
              1af5 c225  st   [$25]       8232  st([sysArgs+1])                 #47 -> Pixel 1
                                          8233
              1af6 0124  ld   [$24]       8234  ld([sysArgs+0])                 #48 a[1]&63
              1af7 203f  anda $3f         8235  anda(0x3f)                      #49
              1af8 c224  st   [$24]       8236  st([sysArgs+0])                 #50 -> Pixel 0
                                          8237
              1af9 1403  ld   $03,y       8238  ld(hi('REENTER'),Y)             #51
              1afa e0cb  jmp  y,$cb       8239  jmp(Y,'REENTER')                #52
              1afb 00e4  ld   $e4         8240  ld(-56/2)                       #53
                                          8241
                                          8242
              1afc 0200  nop              8243  fillers(until=0xff)
              1afd 0200  nop
              1afe 0200  nop
              1aff 0200  nop              8244  align(0x100, size=0x100)
                                          8245
                                          8246  #-----------------------------------------------------------------------
                                          8247  #       More sys implementations, (0x1B00)
                                          8248  #-----------------------------------------------------------------------
                                          8249
                                          8250  # sys_MemCopyByte, sysArgs0,1=src, sysArg2,3=dst, sysArg4=src step, sysArg5=dst step, vAC=count
                                          8251  label('sys_MemCopyByte')
sys_MemCopyByte:
              1b00 1124  ld   [$24],x     8252  ld([sysArgs+0],X)               #18,
              1b01 0d00  ld   [y,x]       8253  ld([Y,X])                       #19, [src]
              1b02 1527  ld   [$27],y     8254  ld([sysArgs+3],Y)               #20,
              1b03 1126  ld   [$26],x     8255  ld([sysArgs+2],X)               #21,
              1b04 ce00  st   [y,x]       8256  st([Y,X])                       #22, [dst] = [src]
              1b05 0124  ld   [$24]       8257  ld([sysArgs+0])                 #23,
              1b06 8128  adda [$28]       8258  adda([sysArgs+4])               #24,
              1b07 c224  st   [$24]       8259  st([sysArgs+0])                 #25, src++
              1b08 0126  ld   [$26]       8260  ld([sysArgs+2])                 #26,
              1b09 8129  adda [$29]       8261  adda([sysArgs+5])               #27,
              1b0a c226  st   [$26]       8262  st([sysArgs+2])                 #28, dst++
              1b0b 0118  ld   [$18]       8263  ld([vAC])                       #29,
              1b0c a001  suba $01         8264  suba(1)                         #30,
                                          8265  beq('.sys_memcopybyte_33')      #31,
              1b0d f015  beq  .sys_memcopybyte_33
              1b0e c218  st   [$18]       8266  st([vAC])                       #32, count--
              1b0f 0116  ld   [$16]       8267  ld([vPC])                       #33,
              1b10 a002  suba $02         8268  suba(2)                         #34,
              1b11 c216  st   [$16]       8269  st([vPC])                       #35, restart
              1b12 1403  ld   $03,y       8270  ld(hi('NEXTY'),Y)               #36,
              1b13 e000  jmp  y,$00       8271  jmp(Y,'NEXTY')                  #37,
              1b14 00ec  ld   $ec         8272  ld(-40/2)                       #38,
                                          8273  label('.sys_memcopybyte_33')
.sys_memcopybyte_33:
              1b15 1403  ld   $03,y       8274  ld(hi('REENTER'),Y)             #33,
              1b16 e0cb  jmp  y,$cb       8275  jmp(Y,'REENTER')                #34,
              1b17 00ed  ld   $ed         8276  ld(-38/2)                       #35,
                                          8277
                                          8278
                                          8279  # sys_MemCopyWord, sysArgs0,1=src, sysArg2,3=dst, vAC=count, sysArg4,5=tmp
                                          8280  label('sys_MemCopyWord')
sys_MemCopyWord:
              1b18 1124  ld   [$24],x     8281  ld([sysArgs+0],X)               #18,
              1b19 0d00  ld   [y,x]       8282  ld([Y,X])                       #19, [src + 0]
              1b1a de00  st   [y,x++]     8283  st([Y,Xpp])                     #20
              1b1b c228  st   [$28]       8284  st([sysArgs+4])                 #21,
              1b1c 0d00  ld   [y,x]       8285  ld([Y,X])                       #22, [src + 1]
              1b1d c229  st   [$29]       8286  st([sysArgs+5])                 #23,
              1b1e 1527  ld   [$27],y     8287  ld([sysArgs+3],Y)               #24,
              1b1f 1126  ld   [$26],x     8288  ld([sysArgs+2],X)               #25,
              1b20 0128  ld   [$28]       8289  ld([sysArgs+4])                 #26,
              1b21 de00  st   [y,x++]     8290  st([Y,Xpp])                     #27, [dst + 0] = [src + 0]
              1b22 0129  ld   [$29]       8291  ld([sysArgs+5])                 #28,
              1b23 ce00  st   [y,x]       8292  st([Y,X])                       #29, [dst + 1] = [src + 1]
              1b24 0124  ld   [$24]       8293  ld([sysArgs+0])                 #30,
              1b25 8002  adda $02         8294  adda(2)                         #31,
              1b26 c224  st   [$24]       8295  st([sysArgs+0])                 #32, src += 2
              1b27 0126  ld   [$26]       8296  ld([sysArgs+2])                 #33,
              1b28 8002  adda $02         8297  adda(2)                         #34,
              1b29 c226  st   [$26]       8298  st([sysArgs+2])                 #35, dst += 2
              1b2a 0118  ld   [$18]       8299  ld([vAC])                       #36,
              1b2b a001  suba $01         8300  suba(1)                         #37,
                                          8301  beq('.sys_memcopyword_40')      #38,
              1b2c f034  beq  .sys_memcopyword_40
              1b2d c218  st   [$18]       8302  st([vAC])                       #39, count--
              1b2e 0116  ld   [$16]       8303  ld([vPC])                       #40,
              1b2f a002  suba $02         8304  suba(2)                         #41,
              1b30 c216  st   [$16]       8305  st([vPC])                       #42, restart
              1b31 1403  ld   $03,y       8306  ld(hi('REENTER'),Y)             #43,
              1b32 e0cb  jmp  y,$cb       8307  jmp(Y,'REENTER')                #44,
              1b33 00e8  ld   $e8         8308  ld(-48/2)                       #45,
                                          8309  label('.sys_memcopyword_40')
.sys_memcopyword_40:
              1b34 1403  ld   $03,y       8310  ld(hi('NEXTY'),Y)               #40,
              1b35 e000  jmp  y,$00       8311  jmp(Y,'NEXTY')                  #41,
              1b36 00ea  ld   $ea         8312  ld(-44/2)                       #42,
                                          8313
                                          8314
                                          8315  # sys_MemCopyDWord, sysArgs0,1=src, sysArg2,3=dst, vAC=count, sysArg4,5=tmp, sysArg6,7=tmp
                                          8316  label('sys_MemCopyDWord')
sys_MemCopyDWord:
              1b37 1124  ld   [$24],x     8317  ld([sysArgs+0],X)               #18,
              1b38 0d00  ld   [y,x]       8318  ld([Y,X])                       #19, [src + 0]
              1b39 de00  st   [y,x++]     8319  st([Y,Xpp])                     #20
              1b3a c228  st   [$28]       8320  st([sysArgs+4])                 #21,
              1b3b 0d00  ld   [y,x]       8321  ld([Y,X])                       #22, [src + 1]
              1b3c de00  st   [y,x++]     8322  st([Y,Xpp])                     #23
              1b3d c229  st   [$29]       8323  st([sysArgs+5])                 #24,
              1b3e 0d00  ld   [y,x]       8324  ld([Y,X])                       #25, [src + 2]
              1b3f de00  st   [y,x++]     8325  st([Y,Xpp])                     #26
              1b40 c22a  st   [$2a]       8326  st([sysArgs+6])                 #27,
              1b41 0d00  ld   [y,x]       8327  ld([Y,X])                       #28, [src + 3]
              1b42 c22b  st   [$2b]       8328  st([sysArgs+7])                 #29,
              1b43 1527  ld   [$27],y     8329  ld([sysArgs+3],Y)               #30,
              1b44 1126  ld   [$26],x     8330  ld([sysArgs+2],X)               #31,
              1b45 0128  ld   [$28]       8331  ld([sysArgs+4])                 #32,
              1b46 de00  st   [y,x++]     8332  st([Y,Xpp])                     #33, [dst + 0] = [src + 0]
              1b47 0129  ld   [$29]       8333  ld([sysArgs+5])                 #34,
              1b48 de00  st   [y,x++]     8334  st([Y,Xpp])                     #35, [dst + 1] = [src + 1]
              1b49 012a  ld   [$2a]       8335  ld([sysArgs+6])                 #36,
              1b4a de00  st   [y,x++]     8336  st([Y,Xpp])                     #37, [dst + 2] = [src + 2]
              1b4b 012b  ld   [$2b]       8337  ld([sysArgs+7])                 #38,
              1b4c ce00  st   [y,x]       8338  st([Y,X])                       #39, [dst + 3] = [src + 3]
              1b4d 0124  ld   [$24]       8339  ld([sysArgs+0])                 #40,
              1b4e 8004  adda $04         8340  adda(4)                         #41,
              1b4f c224  st   [$24]       8341  st([sysArgs+0])                 #42, src += 4
              1b50 0126  ld   [$26]       8342  ld([sysArgs+2])                 #43,
              1b51 8004  adda $04         8343  adda(4)                         #44,
              1b52 c226  st   [$26]       8344  st([sysArgs+2])                 #45, dst += 4
              1b53 0118  ld   [$18]       8345  ld([vAC])                       #46,
              1b54 a001  suba $01         8346  suba(1)                         #47,
                                          8347  beq('.sys_memcopydword_50')     #48,
              1b55 f05d  beq  .sys_memcopydword_50
              1b56 c218  st   [$18]       8348  st([vAC])                       #49, count--
              1b57 0116  ld   [$16]       8349  ld([vPC])                       #50,
              1b58 a002  suba $02         8350  suba(2)                         #51,
              1b59 c216  st   [$16]       8351  st([vPC])                       #52, restart
              1b5a 1403  ld   $03,y       8352  ld(hi('REENTER'),Y)             #53,
              1b5b e0cb  jmp  y,$cb       8353  jmp(Y,'REENTER')                #54,
              1b5c 00e3  ld   $e3         8354  ld(-58/2)                       #55,
                                          8355  label('.sys_memcopydword_50')
.sys_memcopydword_50:
              1b5d 1403  ld   $03,y       8356  ld(hi('NEXTY'),Y)               #50,
              1b5e e000  jmp  y,$00       8357  jmp(Y,'NEXTY')                  #51,
              1b5f 00e5  ld   $e5         8358  ld(-54/2)                       #52,
                                          8359
                                          8360
                                          8361  # sys_ReadPixel
                                          8362  label('sys_ReadPixel')
sys_ReadPixel:
              1b60 8119  adda [$19]       8363  adda([vAC+1])                   #18,
              1b61 1200  ld   ac,x        8364  ld(AC,X)                        #19,
              1b62 1401  ld   $01,y       8365  ld(1,Y)                         #20, Y,X = 0x0100 + 2*y, (0 >= y <= 127)
              1b63 0d00  ld   [y,x]       8366  ld([Y,X])                       #21,
              1b64 1600  ld   ac,y        8367  ld(AC,Y)                        #22, Y = [Y,X]
              1b65 1118  ld   [$18],x     8368  ld([vAC],X)                     #23, X = x
              1b66 0d00  ld   [y,x]       8369  ld([Y,X])                       #24,
              1b67 c218  st   [$18]       8370  st([vAC])                       #25, vAC = [Y,X]
              1b68 0000  ld   $00         8371  ld(0)                           #26,
              1b69 c219  st   [$19]       8372  st([vAC+1])                     #27,
              1b6a 1403  ld   $03,y       8373  ld(hi('NEXTY'),Y)               #28,
              1b6b e000  jmp  y,$00       8374  jmp(Y,'NEXTY')                  #29,
              1b6c 00f0  ld   $f0         8375  ld(-32/2)                       #30,
                                          8376
                                          8377
                                          8378  # sys_DrawPixel
                                          8379  label('sys_DrawPixel')
sys_DrawPixel:
              1b6d 8125  adda [$25]       8380  adda([sysArgs+1])               #18,
              1b6e 1200  ld   ac,x        8381  ld(AC,X)                        #19,
              1b6f 1401  ld   $01,y       8382  ld(1,Y)                         #20, Y,X = 0x0100 + 2*y, (0 >= y <= 127)
              1b70 0d00  ld   [y,x]       8383  ld([Y,X])                       #21,
              1b71 1600  ld   ac,y        8384  ld(AC,Y)                        #22, Y = [Y,X]
              1b72 1124  ld   [$24],x     8385  ld([sysArgs+0],X)               #23, X = x
              1b73 0126  ld   [$26]       8386  ld([sysArgs+2])                 #24, colour
              1b74 ce00  st   [y,x]       8387  st([Y,X])                       #25, [Y,X] = colour
              1b75 1403  ld   $03,y       8388  ld(hi('NEXTY'),Y)               #26,
              1b76 e000  jmp  y,$00       8389  jmp(Y,'NEXTY')                  #27,
              1b77 00f1  ld   $f1         8390  ld(-30/2)                       #28,
                                          8391
                                          8392
              1b78 0200  nop              8393  fillers(until=0xff)
              1b79 0200  nop
              1b7a 0200  nop
              * 135 times
              1bff 0200  nop              8394  align(0x100, size=0x100)
                                          8395
                                          8396  #-----------------------------------------------------------------------
                                          8397  #       More sys implementations, (0x1C00)
                                          8398  #-----------------------------------------------------------------------
                                          8399
                                          8400  # sys_SortSprites, sysArgs0,1=_y_array, sysArg2=i, sysArg3=j, sysArg4=key0, sysArg5=length
                                          8401  #                  sysArgs6,7=_is_array, vAC.lo=key1
                                          8402  label('sys_SortSprites')
sys_SortSprites:
              1c00 0127  ld   [$27]       8403  ld([sysArgs+3])                 #18,
                                          8404  ble('.sys_sortsprites_21')      #19, j <= 0
              1c01 f820  ble  .sys_sortsprites_21
              1c02 0124  ld   [$24]       8405  ld([sysArgs+0])                 #20,
              1c03 8127  adda [$27]       8406  adda([sysArgs+3])               #21,
              1c04 b001  suba $01,x       8407  suba(1,X)                       #22,
              1c05 0d00  ld   [y,x]       8408  ld([Y,X])                       #23,
                                          8409  bmi('.sys_sortsprites_26')      #24, convert signed < to unsigned <
              1c06 e80a  blt  .sys_sortsprites_26
              1c07 a128  suba [$28]       8410  suba([sysArgs+4])               #25,
                                          8411  bra('.sys_sortsprites_28')      #26,
              1c08 fc0c  bra  .sys_sortsprites_28
              1c09 4128  ora  [$28]       8412  ora([sysArgs+4])                #27, borrow
                                          8413  label('.sys_sortsprites_26')
.sys_sortsprites_26:
              1c0a 2128  anda [$28]       8414  anda([sysArgs+4])               #26, borrow
              1c0b 0200  nop              8415  nop()                           #27,
                                          8416  label('.sys_sortsprites_28')
.sys_sortsprites_28:                      8417  bmi('.sys_sortsprites_30')      #28, y[j-1] < key
              1c0c e831  blt  .sys_sortsprites_30
              1c0d 0d00  ld   [y,x]       8418  ld([Y,X])                       #29,
              1c0e de00  st   [y,x++]     8419  st([Y,Xpp])                     #30,
              1c0f ce00  st   [y,x]       8420  st([Y,X])                       #31, y[j] = y[j-1]
              1c10 152b  ld   [$2b],y     8421  ld([sysArgs+7],Y)               #32,
              1c11 012a  ld   [$2a]       8422  ld([sysArgs+6])                 #33,
              1c12 8127  adda [$27]       8423  adda([sysArgs+3])               #34,
              1c13 b001  suba $01,x       8424  suba(1,X)                       #35,
              1c14 0d00  ld   [y,x]       8425  ld([Y,X])                       #36,
              1c15 de00  st   [y,x++]     8426  st([Y,Xpp])                     #37,
              1c16 ce00  st   [y,x]       8427  st([Y,X])                       #38, is[j] = is[j-1]
              1c17 0127  ld   [$27]       8428  ld([sysArgs+3])                 #39,
              1c18 a001  suba $01         8429  suba(1)                         #40,
              1c19 c227  st   [$27]       8430  st([sysArgs+3])                 #41, j--
              1c1a 0116  ld   [$16]       8431  ld([vPC])                       #42,
              1c1b a002  suba $02         8432  suba(2)                         #43,
              1c1c c216  st   [$16]       8433  st([vPC])                       #44, restart
              1c1d 1403  ld   $03,y       8434  ld(hi('REENTER'),Y)             #45,
              1c1e e0cb  jmp  y,$cb       8435  jmp(Y,'REENTER')                #46,
              1c1f 00e7  ld   $e7         8436  ld(-50/2)                       #47,
                                          8437  label('.sys_sortsprites_21')
.sys_sortsprites_21:
              1c20 9127  adda [$27],x     8438  adda([sysArgs+3],X)             #21,
              1c21 0128  ld   [$28]       8439  ld([sysArgs+4])                 #22,
              1c22 ce00  st   [y,x]       8440  st([Y,X])                       #23, y[j] = key0
              1c23 152b  ld   [$2b],y     8441  ld([sysArgs+7],Y)               #24,
              1c24 012a  ld   [$2a]       8442  ld([sysArgs+6])                 #25,
              1c25 9127  adda [$27],x     8443  adda([sysArgs+3],X)             #26,
              1c26 0182  ld   [$82]       8444  ld([0x82])                      #27,
              1c27 ce00  st   [y,x]       8445  st([Y,X])                       #28, is[j] = key1
              1c28 0126  ld   [$26]       8446  ld([sysArgs+2])                 #29,
              1c29 8001  adda $01         8447  adda(1)                         #30,
              1c2a c226  st   [$26]       8448  st([sysArgs+2])                 #31, i++
              1c2b a129  suba [$29]       8449  suba([sysArgs+5])               #32,
                                          8450  blt('.sys_sortsprites_35')      #33, i < length
              1c2c e842  blt  .sys_sortsprites_35
              1c2d 1525  ld   [$25],y     8451  ld([sysArgs+1],Y)               #34,
              1c2e 1403  ld   $03,y       8452  ld(hi('REENTER'),Y)             #35,
              1c2f e0cb  jmp  y,$cb       8453  jmp(Y,'REENTER')                #36,
              1c30 00ec  ld   $ec         8454  ld(-40/2)                       #37,
                                          8455  label('.sys_sortsprites_30')
.sys_sortsprites_30:
              1c31 de00  st   [y,x++]     8456  st([Y,Xpp])                     #30,
              1c32 0128  ld   [$28]       8457  ld([sysArgs+4])                 #31,
              1c33 ce00  st   [y,x]       8458  st([Y,X])                       #32, y[j] = key0
              1c34 152b  ld   [$2b],y     8459  ld([sysArgs+7],Y)               #33,
              1c35 012a  ld   [$2a]       8460  ld([sysArgs+6])                 #34,
              1c36 9127  adda [$27],x     8461  adda([sysArgs+3],X)             #35,
              1c37 0182  ld   [$82]       8462  ld([0x82])                      #36,
              1c38 ce00  st   [y,x]       8463  st([Y,X])                       #37, is[j] = key1
              1c39 0126  ld   [$26]       8464  ld([sysArgs+2])                 #38,
              1c3a 8001  adda $01         8465  adda(1)                         #39,
              1c3b c226  st   [$26]       8466  st([sysArgs+2])                 #40, i++
              1c3c a129  suba [$29]       8467  suba([sysArgs+5])               #41,
                                          8468  blt('.sys_sortsprites_44')      #42, i < length
              1c3d e853  blt  .sys_sortsprites_44
              1c3e 1525  ld   [$25],y     8469  ld([sysArgs+1],Y)               #43
              1c3f 1403  ld   $03,y       8470  ld(hi('NEXTY'),Y)               #44,
              1c40 e000  jmp  y,$00       8471  jmp(Y,'NEXTY')                  #45,
              1c41 00e8  ld   $e8         8472  ld(-48/2)                       #46,
                                          8473  label('.sys_sortsprites_35')
.sys_sortsprites_35:
              1c42 0124  ld   [$24]       8474  ld([sysArgs+0])                 #35,
              1c43 9126  adda [$26],x     8475  adda([sysArgs+2],X)             #36,
              1c44 0d00  ld   [y,x]       8476  ld([Y,X])                       #37,
              1c45 c228  st   [$28]       8477  st([sysArgs+4])                 #38, key0 = y[i]
              1c46 152b  ld   [$2b],y     8478  ld([sysArgs+7],Y)               #39,
              1c47 012a  ld   [$2a]       8479  ld([sysArgs+6])                 #40,
              1c48 9126  adda [$26],x     8480  adda([sysArgs+2],X)             #41,
              1c49 0d00  ld   [y,x]       8481  ld([Y,X])                       #42,
              1c4a c282  st   [$82]       8482  st([0x82])                      #43, key1 = is[i]
              1c4b 0126  ld   [$26]       8483  ld([sysArgs+2])                 #44,
              1c4c c227  st   [$27]       8484  st([sysArgs+3])                 #45, j = i
              1c4d 0116  ld   [$16]       8485  ld([vPC])                       #46,
              1c4e a002  suba $02         8486  suba(2)                         #47,
              1c4f c216  st   [$16]       8487  st([vPC])                       #48, restart
              1c50 1403  ld   $03,y       8488  ld(hi('REENTER'),Y)             #49,
              1c51 e0cb  jmp  y,$cb       8489  jmp(Y,'REENTER')                #50,
              1c52 00e5  ld   $e5         8490  ld(-54/2)                       #51,
                                          8491  label('.sys_sortsprites_44')
.sys_sortsprites_44:
              1c53 0124  ld   [$24]       8492  ld([sysArgs+0])                 #44,
              1c54 9126  adda [$26],x     8493  adda([sysArgs+2],X)             #45,
              1c55 0d00  ld   [y,x]       8494  ld([Y,X])                       #46,
              1c56 c228  st   [$28]       8495  st([sysArgs+4])                 #47, key0 = y[i]
              1c57 152b  ld   [$2b],y     8496  ld([sysArgs+7],Y)               #48,
              1c58 012a  ld   [$2a]       8497  ld([sysArgs+6])                 #49,
              1c59 9126  adda [$26],x     8498  adda([sysArgs+2],X)             #50,
              1c5a 0d00  ld   [y,x]       8499  ld([Y,X])                       #51,
              1c5b c282  st   [$82]       8500  st([0x82])                      #52, key1 = is[i]
              1c5c 0126  ld   [$26]       8501  ld([sysArgs+2])                 #53,
              1c5d c227  st   [$27]       8502  st([sysArgs+3])                 #54, j = i
              1c5e 0116  ld   [$16]       8503  ld([vPC])                       #55,
              1c5f a002  suba $02         8504  suba(2)                         #56,
              1c60 c216  st   [$16]       8505  st([vPC])                       #57, restart
              1c61 1403  ld   $03,y       8506  ld(hi('NEXTY'),Y)               #58,
              1c62 e000  jmp  y,$00       8507  jmp(Y,'NEXTY')                  #59,
              1c63 00e1  ld   $e1         8508  ld(-62/2)                       #60,
                                          8509
                                          8510
              1c64 0200  nop              8511  fillers(until=0xff)
              1c65 0200  nop
              1c66 0200  nop
              * 155 times
              1cff 0200  nop              8512  align(0x100, size=0x100)
                                          8513
                                          8514  #-----------------------------------------------------------------------
                                          8515  #       More sys implementations, (0x1D00)
                                          8516  #-----------------------------------------------------------------------
                                          8517
                                          8518  # sys_DrawSprite
                                          8519  label('sys_DrawSprite')
sys_DrawSprite:
              1d00 1583  ld   [$83],y     8520  ld([0x83],Y)                    #18, spriteY
                                          8521
              1d01 0d00  ld   [y,x]       8522  ld([Y,X])                       #19, get back0
              1d02 1587  ld   [$87],y     8523  ld([0x87],Y)                    #20, spriteData
              1d03 caa2  st   [y,$a2]     8524  st([Y,0xA2])                    #21, save back0
              1d04 09a3  ld   [y,$a3]     8525  ld([Y,0xA3])                    #22, load pixel0
              1d05 1583  ld   [$83],y     8526  ld([0x83],Y)                    #23, spriteY
              1d06 ec09  bne  $1d09       8527  bne(pc()+3)                     #24, colourkey
              1d07 fc0a  bra  $1d0a       8528  bra(pc()+3)                     #25,
              1d08 0d00  ld   [y,x]       8529  ld([Y,X])                       #26,
              1d09 0200  nop              8530  nop()                           #26, (!)
              1d0a de00  st   [y,x++]     8531  st([Y,Xpp])                     #27, draw pixel0
                                          8532
              1d0b 0d00  ld   [y,x]       8533  ld([Y,X])                       #28, get back1
              1d0c 1587  ld   [$87],y     8534  ld([0x87],Y)                    #29, spriteData
              1d0d caa4  st   [y,$a4]     8535  st([Y,0xA4])                    #30, save back1
              1d0e 09a5  ld   [y,$a5]     8536  ld([Y,0xA5])                    #31, load pixel1
              1d0f 1583  ld   [$83],y     8537  ld([0x83],Y)                    #32, spriteY
              1d10 ec13  bne  $1d13       8538  bne(pc()+3)                     #33, colourkey
              1d11 fc14  bra  $1d14       8539  bra(pc()+3)                     #34,
              1d12 0d00  ld   [y,x]       8540  ld([Y,X])                       #35,
              1d13 0200  nop              8541  nop()                           #35, (!)
              1d14 de00  st   [y,x++]     8542  st([Y,Xpp])                     #36, draw pixel1
                                          8543
              1d15 0d00  ld   [y,x]       8544  ld([Y,X])                       #37, get back2
              1d16 1587  ld   [$87],y     8545  ld([0x87],Y)                    #38, spriteData
              1d17 caa6  st   [y,$a6]     8546  st([Y,0xA6])                    #39, save back2
              1d18 09a7  ld   [y,$a7]     8547  ld([Y,0xA7])                    #40, load pixel2
              1d19 1583  ld   [$83],y     8548  ld([0x83],Y)                    #41, spriteY
              1d1a ec1d  bne  $1d1d       8549  bne(pc()+3)                     #42, colourkey
              1d1b fc1e  bra  $1d1e       8550  bra(pc()+3)                     #43,
              1d1c 0d00  ld   [y,x]       8551  ld([Y,X])                       #44,
              1d1d 0200  nop              8552  nop()                           #44, (!)
              1d1e de00  st   [y,x++]     8553  st([Y,Xpp])                     #45, draw pixel2
                                          8554
              1d1f 0d00  ld   [y,x]       8555  ld([Y,X])                       #46, get back3
              1d20 1587  ld   [$87],y     8556  ld([0x87],Y)                    #47, spriteData
              1d21 caa8  st   [y,$a8]     8557  st([Y,0xA8])                    #48, save back3
              1d22 09a9  ld   [y,$a9]     8558  ld([Y,0xA9])                    #49, load pixel3
              1d23 1583  ld   [$83],y     8559  ld([0x83],Y)                    #50, spriteY
              1d24 ec27  bne  $1d27       8560  bne(pc()+3)                     #51, colourkey
              1d25 fc28  bra  $1d28       8561  bra(pc()+3)                     #52,
              1d26 0d00  ld   [y,x]       8562  ld([Y,X])                       #53,
              1d27 0200  nop              8563  nop()                           #53, (!)
              1d28 de00  st   [y,x++]     8564  st([Y,Xpp])                     #54, draw pixel3
                                          8565
              1d29 0d00  ld   [y,x]       8566  ld([Y,X])                       #55, get back4
              1d2a 1587  ld   [$87],y     8567  ld([0x87],Y)                    #56, spriteData
              1d2b caaa  st   [y,$aa]     8568  st([Y,0xAA])                    #57, save back4
              1d2c 09ab  ld   [y,$ab]     8569  ld([Y,0xAB])                    #58, load pixel4
              1d2d 1583  ld   [$83],y     8570  ld([0x83],Y)                    #59, spriteY
              1d2e ec31  bne  $1d31       8571  bne(pc()+3)                     #60, colourkey
              1d2f fc32  bra  $1d32       8572  bra(pc()+3)                     #61,
              1d30 0d00  ld   [y,x]       8573  ld([Y,X])                       #62,
              1d31 0200  nop              8574  nop()                           #62, (!)
              1d32 de00  st   [y,x++]     8575  st([Y,Xpp])                     #63, draw pixel4
                                          8576
              1d33 0d00  ld   [y,x]       8577  ld([Y,X])                       #64, get back5
              1d34 1587  ld   [$87],y     8578  ld([0x87],Y)                    #65, spriteData
              1d35 caac  st   [y,$ac]     8579  st([Y,0xAC])                    #66, save back5
              1d36 09ad  ld   [y,$ad]     8580  ld([Y,0xAD])                    #67, load pixel5
              1d37 1583  ld   [$83],y     8581  ld([0x83],Y)                    #68, spriteY
              1d38 ec3b  bne  $1d3b       8582  bne(pc()+3)                     #69, colourkey
              1d39 fc3c  bra  $1d3c       8583  bra(pc()+3)                     #70,
              1d3a 0d00  ld   [y,x]       8584  ld([Y,X])                       #71,
              1d3b 0200  nop              8585  nop()                           #71, (!)
              1d3c de00  st   [y,x++]     8586  st([Y,Xpp])                     #72, draw pixel5
                                          8587
              1d3d 0d00  ld   [y,x]       8588  ld([Y,X])                       #73, get back6
              1d3e 1587  ld   [$87],y     8589  ld([0x87],Y)                    #74, spriteData
              1d3f caae  st   [y,$ae]     8590  st([Y,0xAE])                    #75, save back6
              1d40 09af  ld   [y,$af]     8591  ld([Y,0xAF])                    #76, load pixel6
              1d41 1583  ld   [$83],y     8592  ld([0x83],Y)                    #77, spriteY
              1d42 ec45  bne  $1d45       8593  bne(pc()+3)                     #78, colourkey
              1d43 fc46  bra  $1d46       8594  bra(pc()+3)                     #79,
              1d44 0d00  ld   [y,x]       8595  ld([Y,X])                       #80,
              1d45 0200  nop              8596  nop()                           #80, (!)
              1d46 de00  st   [y,x++]     8597  st([Y,Xpp])                     #81, draw pixel6
                                          8598
              1d47 0d00  ld   [y,x]       8599  ld([Y,X])                       #82, get back7
              1d48 1587  ld   [$87],y     8600  ld([0x87],Y)                    #83, spriteData
              1d49 cab0  st   [y,$b0]     8601  st([Y,0xB0])                    #84, save back7
              1d4a 09b1  ld   [y,$b1]     8602  ld([Y,0xB1])                    #85, load pixel7
              1d4b 1583  ld   [$83],y     8603  ld([0x83],Y)                    #86, spriteY
              1d4c ec4f  bne  $1d4f       8604  bne(pc()+3)                     #87, colourkey
              1d4d fc50  bra  $1d50       8605  bra(pc()+3)                     #88,
              1d4e 0d00  ld   [y,x]       8606  ld([Y,X])                       #89,
              1d4f 0200  nop              8607  nop()                           #89, (!)
              1d50 de00  st   [y,x++]     8608  st([Y,Xpp])                     #90, draw pixel7
                                          8609
              1d51 0d00  ld   [y,x]       8610  ld([Y,X])                       #91, get back8
              1d52 1587  ld   [$87],y     8611  ld([0x87],Y)                    #92, spriteData
              1d53 cab2  st   [y,$b2]     8612  st([Y,0xB2])                    #93, save back8
              1d54 09b3  ld   [y,$b3]     8613  ld([Y,0xB3])                    #94, load pixel8
              1d55 1583  ld   [$83],y     8614  ld([0x83],Y)                    #95, spriteY
              1d56 ec59  bne  $1d59       8615  bne(pc()+3)                     #96, colourkey
              1d57 fc5a  bra  $1d5a       8616  bra(pc()+3)                     #97,
              1d58 0d00  ld   [y,x]       8617  ld([Y,X])                       #98,
              1d59 0200  nop              8618  nop()                           #98, (!)
              1d5a de00  st   [y,x++]     8619  st([Y,Xpp])                     #99, draw pixel8
                                          8620
              1d5b 1587  ld   [$87],y     8621  ld([0x87],Y)                    #100, spriteData
              1d5c 0182  ld   [$82]       8622  ld([0x82])                      #101, spriteX
              1d5d caa0  st   [y,$a0]     8623  st([Y,0xA0])                    #102, spriteOldX
              1d5e 0183  ld   [$83]       8624  ld([0x83])                      #103, spriteY
              1d5f caa1  st   [y,$a1]     8625  st([Y,0xA1])                    #104, spriteOldY
              1d60 0186  ld   [$86]       8626  ld([0x86])                      #105,
              1d61 a001  suba $01         8627  suba(1)                         #106,
                                          8628  beq('.sys_drawsprite_109')      #107,
              1d62 f070  beq  .sys_drawsprite_109
              1d63 c286  st   [$86]       8629  st([0x86])                      #108, scanLines--
              1d64 0183  ld   [$83]       8630  ld([0x83])                      #109, spriteY
              1d65 8001  adda $01         8631  adda(1)                         #110,
              1d66 c283  st   [$83]       8632  st([0x83])                      #111, spriteY++
              1d67 0187  ld   [$87]       8633  ld([0x87])                      #112,
              1d68 8001  adda $01         8634  adda(1)                         #113,
              1d69 c287  st   [$87]       8635  st([0x87])                      #114, spriteData++
              1d6a 0116  ld   [$16]       8636  ld([vPC])                       #115,
              1d6b a002  suba $02         8637  suba(2)                         #116,
              1d6c c216  st   [$16]       8638  st([vPC])                       #117, restart
              1d6d 1403  ld   $03,y       8639  ld(hi('NEXTY'),Y)               #118,
              1d6e e000  jmp  y,$00       8640  jmp(Y,'NEXTY')                  #119,
              1d6f 00c3  ld   $c3         8641  ld(-122/2)                      #120,
                                          8642  label('.sys_drawsprite_109')
.sys_drawsprite_109:
              1d70 019c  ld   [$9c]       8643  ld([0x9C])                      #109,
              1d71 8001  adda $01         8644  adda(1)                         #110,
              1d72 d29c  st   [$9c],x     8645  st([0x9C],X)                    #111, register13++
              1d73 159d  ld   [$9d],y     8646  ld([0x9D],Y)                    #112,
              1d74 0d00  ld   [y,x]       8647  ld([Y,X])                       #113, peek(register13)
              1d75 c282  st   [$82]       8648  st([0x82])                      #114, spriteX
              1d76 019e  ld   [$9e]       8649  ld([0x9E])                      #115,
              1d77 8001  adda $01         8650  adda(1)                         #116,
              1d78 d29e  st   [$9e],x     8651  st([0x9E],X)                    #117, register14++
              1d79 159f  ld   [$9f],y     8652  ld([0x9F],Y)                    #118,
              1d7a 0d00  ld   [y,x]       8653  ld([Y,X])                       #119, peek(register14)
              1d7b c283  st   [$83]       8654  st([0x83])                      #120, spriteY
              1d7c 01a0  ld   [$a0]       8655  ld([0xA0])                      #121,
              1d7d 8001  adda $01         8656  adda(1)                         #122,
              1d7e d2a0  st   [$a0],x     8657  st([0xA0],X)                    #123, register15++
              1d7f 15a1  ld   [$a1],y     8658  ld([0xA1],Y)                    #124,
              1d80 0d00  ld   [y,x]       8659  ld([Y,X])                       #125, peek(register15)
              1d81 c287  st   [$87]       8660  st([0x87])                      #126, spriteData
              1d82 1403  ld   $03,y       8661  ld(hi('REENTER'),Y)             #127,
              1d83 e0cb  jmp  y,$cb       8662  jmp(Y,'REENTER')                #128,
              1d84 00be  ld   $be         8663  ld(-132/2)                      #129,
                                          8664
                                          8665
                                          8666  # sys_DrawVLine, sysArgs0,1=count:colour, sysArgs2,3=X:Y address
                                          8667  label('sys_DrawVLine')
sys_DrawVLine:
              1d85 1126  ld   [$26],x     8668  ld([sysArgs+2],X)               #18,
              1d86 0124  ld   [$24]       8669  ld([sysArgs+0])                 #19,
              1d87 a008  suba $08         8670  suba(8)                         #20,
                                          8671  blt('.sys_drawvline_23')        #21,
              1d88 e8b3  blt  .sys_drawvline_23
              1d89 0124  ld   [$24]       8672  ld([sysArgs+0])                 #22,
              1d8a 0125  ld   [$25]       8673  ld([sysArgs+1])                 #23, 8 pixels
              1d8b ce00  st   [y,x]       8674  st([Y,X])                       #24,
              1d8c 0127  ld   [$27]       8675  ld([sysArgs+3])                 #25,
              1d8d 9401  adda $01,y       8676  adda(1,Y)                       #26,
              1d8e 0125  ld   [$25]       8677  ld([sysArgs+1])                 #27,
              1d8f ce00  st   [y,x]       8678  st([Y,X])                       #28,
              1d90 0127  ld   [$27]       8679  ld([sysArgs+3])                 #29,
              1d91 9402  adda $02,y       8680  adda(2,Y)                       #30,
              1d92 0125  ld   [$25]       8681  ld([sysArgs+1])                 #31,
              1d93 ce00  st   [y,x]       8682  st([Y,X])                       #32,
              1d94 0127  ld   [$27]       8683  ld([sysArgs+3])                 #33,
              1d95 9403  adda $03,y       8684  adda(3,Y)                       #34,
              1d96 0125  ld   [$25]       8685  ld([sysArgs+1])                 #35,
              1d97 ce00  st   [y,x]       8686  st([Y,X])                       #36,
              1d98 0127  ld   [$27]       8687  ld([sysArgs+3])                 #37,
              1d99 9404  adda $04,y       8688  adda(4,Y)                       #38,
              1d9a 0125  ld   [$25]       8689  ld([sysArgs+1])                 #39,
              1d9b ce00  st   [y,x]       8690  st([Y,X])                       #40,
              1d9c 0127  ld   [$27]       8691  ld([sysArgs+3])                 #41,
              1d9d 9405  adda $05,y       8692  adda(5,Y)                       #42,
              1d9e 0125  ld   [$25]       8693  ld([sysArgs+1])                 #43,
              1d9f ce00  st   [y,x]       8694  st([Y,X])                       #44,
              1da0 0127  ld   [$27]       8695  ld([sysArgs+3])                 #45,
              1da1 9406  adda $06,y       8696  adda(6,Y)                       #46,
              1da2 0125  ld   [$25]       8697  ld([sysArgs+1])                 #47,
              1da3 ce00  st   [y,x]       8698  st([Y,X])                       #48,
              1da4 0127  ld   [$27]       8699  ld([sysArgs+3])                 #49,
              1da5 9407  adda $07,y       8700  adda(7,Y)                       #50,
              1da6 8008  adda $08         8701  adda(8)                         #51,
              1da7 c227  st   [$27]       8702  st([sysArgs+3])                 #52,
              1da8 0125  ld   [$25]       8703  ld([sysArgs+1])                 #53,
              1da9 ce00  st   [y,x]       8704  st([Y,X])                       #54,
              1daa 0124  ld   [$24]       8705  ld([sysArgs+0])                 #55,
              1dab a008  suba $08         8706  suba(8)                         #56,
              1dac c224  st   [$24]       8707  st([sysArgs+0])                 #57,
              1dad 0116  ld   [$16]       8708  ld([vPC])                       #58,
              1dae a002  suba $02         8709  suba(2)                         #59,
              1daf c216  st   [$16]       8710  st([vPC])                       #60, restart
              1db0 1403  ld   $03,y       8711  ld(hi('REENTER'),Y)             #61,
              1db1 e0cb  jmp  y,$cb       8712  jmp(Y,'REENTER')                #62,
              1db2 00df  ld   $df         8713  ld(-66/2)                       #63,
                                          8714  label('.sys_drawvline_23')
.sys_drawvline_23:
              1db3 a004  suba $04         8715  suba(4)                         #23,
                                          8716  blt('.sys_drawvline_26')        #24,
              1db4 e8cf  blt  .sys_drawvline_26
              1db5 0124  ld   [$24]       8717  ld([sysArgs+0])                 #25,
              1db6 0125  ld   [$25]       8718  ld([sysArgs+1])                 #26, 4 pixels
              1db7 ce00  st   [y,x]       8719  st([Y,X])                       #27,
              1db8 0127  ld   [$27]       8720  ld([sysArgs+3])                 #28,
              1db9 9401  adda $01,y       8721  adda(1,Y)                       #29,
              1dba 0125  ld   [$25]       8722  ld([sysArgs+1])                 #30,
              1dbb ce00  st   [y,x]       8723  st([Y,X])                       #31,
              1dbc 0127  ld   [$27]       8724  ld([sysArgs+3])                 #32,
              1dbd 9402  adda $02,y       8725  adda(2,Y)                       #33,
              1dbe 0125  ld   [$25]       8726  ld([sysArgs+1])                 #34,
              1dbf ce00  st   [y,x]       8727  st([Y,X])                       #35,
              1dc0 0127  ld   [$27]       8728  ld([sysArgs+3])                 #36,
              1dc1 9403  adda $03,y       8729  adda(3,Y)                       #37,
              1dc2 8004  adda $04         8730  adda(4)                         #38,
              1dc3 c227  st   [$27]       8731  st([sysArgs+3])                 #39,
              1dc4 0125  ld   [$25]       8732  ld([sysArgs+1])                 #40,
              1dc5 ce00  st   [y,x]       8733  st([Y,X])                       #41,
              1dc6 0124  ld   [$24]       8734  ld([sysArgs+0])                 #42,
              1dc7 a004  suba $04         8735  suba(4)                         #43,
              1dc8 c224  st   [$24]       8736  st([sysArgs+0])                 #44,
              1dc9 0116  ld   [$16]       8737  ld([vPC])                       #45,
              1dca a002  suba $02         8738  suba(2)                         #46,
              1dcb c216  st   [$16]       8739  st([vPC])                       #47, restart
              1dcc 1403  ld   $03,y       8740  ld(hi('NEXTY'),Y)               #48,
              1dcd e000  jmp  y,$00       8741  jmp(Y,'NEXTY')                  #49,
              1dce 00e6  ld   $e6         8742  ld(-52/2)                       #50,
                                          8743  label('.sys_drawvline_26')
.sys_drawvline_26:
              1dcf a002  suba $02         8744  suba(2)                         #26,
                                          8745  blt('.sys_drawvline_29')        #27,
              1dd0 e8e3  blt  .sys_drawvline_29
              1dd1 0124  ld   [$24]       8746  ld([sysArgs+0])                 #28,
              1dd2 0125  ld   [$25]       8747  ld([sysArgs+1])                 #29, 2 pixels
              1dd3 ce00  st   [y,x]       8748  st([Y,X])                       #30,
              1dd4 0127  ld   [$27]       8749  ld([sysArgs+3])                 #31,
              1dd5 9401  adda $01,y       8750  adda(1,Y)                       #32,
              1dd6 8002  adda $02         8751  adda(2)                         #33,
              1dd7 c227  st   [$27]       8752  st([sysArgs+3])                 #34,
              1dd8 0125  ld   [$25]       8753  ld([sysArgs+1])                 #35,
              1dd9 ce00  st   [y,x]       8754  st([Y,X])                       #36,
              1dda 0124  ld   [$24]       8755  ld([sysArgs+0])                 #37,
              1ddb a002  suba $02         8756  suba(2)                         #38,
              1ddc c224  st   [$24]       8757  st([sysArgs+0])                 #39,
              1ddd 0116  ld   [$16]       8758  ld([vPC])                       #40,
              1dde a002  suba $02         8759  suba(2)                         #41,
              1ddf c216  st   [$16]       8760  st([vPC])                       #42, restart
              1de0 1403  ld   $03,y       8761  ld(hi('REENTER'),Y)             #43,
              1de1 e0cb  jmp  y,$cb       8762  jmp(Y,'REENTER')                #44,
              1de2 00e8  ld   $e8         8763  ld(-48/2)                       #45,
                                          8764  label('.sys_drawvline_29')
.sys_drawvline_29:
              1de3 a001  suba $01         8765  suba(1)                         #29,
                                          8766  blt('.sys_drawvline_32')        #30,
              1de4 e8f1  blt  .sys_drawvline_32
              1de5 0124  ld   [$24]       8767  ld([sysArgs+0])                 #31,
              1de6 0125  ld   [$25]       8768  ld([sysArgs+1])                 #32, 1 pixel
              1de7 ce00  st   [y,x]       8769  st([Y,X])                       #33,
              1de8 0124  ld   [$24]       8770  ld([sysArgs+0])                 #34,
              1de9 a001  suba $01         8771  suba(1)                         #35,
              1dea c224  st   [$24]       8772  st([sysArgs+0])                 #36,
              1deb 0116  ld   [$16]       8773  ld([vPC])                       #37,
              1dec a002  suba $02         8774  suba(2)                         #38,
              1ded c216  st   [$16]       8775  st([vPC])                       #39, restart
              1dee 1403  ld   $03,y       8776  ld(hi('NEXTY'),Y)               #40,
              1def e000  jmp  y,$00       8777  jmp(Y,'NEXTY')                  #41,
              1df0 00ea  ld   $ea         8778  ld(-44/2)                       #42,
                                          8779  label('.sys_drawvline_32')
.sys_drawvline_32:
              1df1 1403  ld   $03,y       8780  ld(hi('NEXTY'),Y)               #32, done
              1df2 e000  jmp  y,$00       8781  jmp(Y,'NEXTY')                  #33,
              1df3 00ee  ld   $ee         8782  ld(-36/2)                       #34,
                                          8783
                                          8784
              1df4 0200  nop              8785  fillers(until=0xff)
              1df5 0200  nop
              1df6 0200  nop
              * 11 times
              1dff 0200  nop              8786  align(0x100, size=0x100)
                                          8787
                                          8788  #-----------------------------------------------------------------------
                                          8789  #       More sys implementations, (0x1E00)
                                          8790  #-----------------------------------------------------------------------
                                          8791
                                          8792  # sys_SpritePattern, sysArgs0,1=src, sysArgs2=dstY, sysArgs3=height/2, sysArgs4,5=patternLut
                                          8793  label('sys_SpritePattern')
sys_SpritePattern:
              1e00 1525  ld   [$25],y     8794  ld([sysArgs+1],Y)               #18, src.hi
              1e01 0d00  ld   [y,x]       8795  ld([Y,X])                       #19,
              1e02 de00  st   [y,x++]     8796  st([Y,Xpp])                     #20, src.lo++
              1e03 1526  ld   [$26],y     8797  ld([sysArgs+2],Y)               #21,
              1e04 caa3  st   [y,$a3]     8798  st([Y,0xA3])                    #22, pixel0
              1e05 1525  ld   [$25],y     8799  ld([sysArgs+1],Y)               #23, src.hi
              1e06 0d00  ld   [y,x]       8800  ld([Y,X])                       #24,
              1e07 de00  st   [y,x++]     8801  st([Y,Xpp])                     #25, src.lo++
              1e08 1526  ld   [$26],y     8802  ld([sysArgs+2],Y)               #26,
              1e09 caa5  st   [y,$a5]     8803  st([Y,0xA5])                    #27, pixel1
              1e0a 1525  ld   [$25],y     8804  ld([sysArgs+1],Y)               #28, src.hi
              1e0b 0d00  ld   [y,x]       8805  ld([Y,X])                       #29,
              1e0c de00  st   [y,x++]     8806  st([Y,Xpp])                     #30, src.lo++
              1e0d 1526  ld   [$26],y     8807  ld([sysArgs+2],Y)               #31,
              1e0e caa7  st   [y,$a7]     8808  st([Y,0xA7])                    #32, pixel2
              1e0f 1525  ld   [$25],y     8809  ld([sysArgs+1],Y)               #33, src.hi
              1e10 0d00  ld   [y,x]       8810  ld([Y,X])                       #34,
              1e11 de00  st   [y,x++]     8811  st([Y,Xpp])                     #35, src.lo++
              1e12 1526  ld   [$26],y     8812  ld([sysArgs+2],Y)               #36,
              1e13 caa9  st   [y,$a9]     8813  st([Y,0xA9])                    #37, pixel3
              1e14 1525  ld   [$25],y     8814  ld([sysArgs+1],Y)               #38, src.hi
              1e15 0d00  ld   [y,x]       8815  ld([Y,X])                       #39,
              1e16 de00  st   [y,x++]     8816  st([Y,Xpp])                     #40, src.lo++
              1e17 1526  ld   [$26],y     8817  ld([sysArgs+2],Y)               #41,
              1e18 caab  st   [y,$ab]     8818  st([Y,0xAB])                    #42, pixel4
              1e19 1525  ld   [$25],y     8819  ld([sysArgs+1],Y)               #43, src.hi
              1e1a 0d00  ld   [y,x]       8820  ld([Y,X])                       #44,
              1e1b de00  st   [y,x++]     8821  st([Y,Xpp])                     #45, src.lo++
              1e1c 1526  ld   [$26],y     8822  ld([sysArgs+2],Y)               #46,
              1e1d caad  st   [y,$ad]     8823  st([Y,0xAD])                    #47, pixel5
              1e1e 1525  ld   [$25],y     8824  ld([sysArgs+1],Y)               #48, src.hi
              1e1f 0d00  ld   [y,x]       8825  ld([Y,X])                       #49,
              1e20 de00  st   [y,x++]     8826  st([Y,Xpp])                     #50, src.lo++
              1e21 1526  ld   [$26],y     8827  ld([sysArgs+2],Y)               #51,
              1e22 caaf  st   [y,$af]     8828  st([Y,0xAF])                    #52, pixel6
              1e23 1525  ld   [$25],y     8829  ld([sysArgs+1],Y)               #53, src.hi
              1e24 0d00  ld   [y,x]       8830  ld([Y,X])                       #54,
              1e25 de00  st   [y,x++]     8831  st([Y,Xpp])                     #55, src.lo++
              1e26 1526  ld   [$26],y     8832  ld([sysArgs+2],Y)               #56,
              1e27 cab1  st   [y,$b1]     8833  st([Y,0xB1])                    #57, pixel7
              1e28 1525  ld   [$25],y     8834  ld([sysArgs+1],Y)               #58, src.hi
              1e29 0d00  ld   [y,x]       8835  ld([Y,X])                       #59,
              1e2a de00  st   [y,x++]     8836  st([Y,Xpp])                     #60, src.lo++
              1e2b 1526  ld   [$26],y     8837  ld([sysArgs+2],Y)               #61,
              1e2c cab3  st   [y,$b3]     8838  st([Y,0xB3])                    #62, pixel8
              1e2d 0126  ld   [$26]       8839  ld([sysArgs+2])                 #63,
              1e2e 8001  adda $01         8840  adda(1)                         #64,
              1e2f c226  st   [$26]       8841  st([sysArgs+2])                 #65, dstY++
              1e30 1525  ld   [$25],y     8842  ld([sysArgs+1],Y)               #66, src.hi
              1e31 0d00  ld   [y,x]       8843  ld([Y,X])                       #67,
              1e32 de00  st   [y,x++]     8844  st([Y,Xpp])                     #68, src.lo++
              1e33 1526  ld   [$26],y     8845  ld([sysArgs+2],Y)               #69,
              1e34 caa3  st   [y,$a3]     8846  st([Y,0xA3])                    #70, pixel9
              1e35 1525  ld   [$25],y     8847  ld([sysArgs+1],Y)               #71, src.hi
              1e36 0d00  ld   [y,x]       8848  ld([Y,X])                       #72,
              1e37 de00  st   [y,x++]     8849  st([Y,Xpp])                     #73, src.lo++
              1e38 1526  ld   [$26],y     8850  ld([sysArgs+2],Y)               #74,
              1e39 caa5  st   [y,$a5]     8851  st([Y,0xA5])                    #75, pixel10
              1e3a 1525  ld   [$25],y     8852  ld([sysArgs+1],Y)               #76, src.hi
              1e3b 0d00  ld   [y,x]       8853  ld([Y,X])                       #77,
              1e3c de00  st   [y,x++]     8854  st([Y,Xpp])                     #78, src.lo++
              1e3d 1526  ld   [$26],y     8855  ld([sysArgs+2],Y)               #79,
              1e3e caa7  st   [y,$a7]     8856  st([Y,0xA7])                    #80, pixel11
              1e3f 1525  ld   [$25],y     8857  ld([sysArgs+1],Y)               #81, src.hi
              1e40 0d00  ld   [y,x]       8858  ld([Y,X])                       #82,
              1e41 de00  st   [y,x++]     8859  st([Y,Xpp])                     #83, src.lo++
              1e42 1526  ld   [$26],y     8860  ld([sysArgs+2],Y)               #84,
              1e43 caa9  st   [y,$a9]     8861  st([Y,0xA9])                    #85, pixel12
              1e44 1525  ld   [$25],y     8862  ld([sysArgs+1],Y)               #86, src.hi
              1e45 0d00  ld   [y,x]       8863  ld([Y,X])                       #87,
              1e46 de00  st   [y,x++]     8864  st([Y,Xpp])                     #88, src.lo++
              1e47 1526  ld   [$26],y     8865  ld([sysArgs+2],Y)               #89,
              1e48 caab  st   [y,$ab]     8866  st([Y,0xAB])                    #90, pixel13
              1e49 1525  ld   [$25],y     8867  ld([sysArgs+1],Y)               #91, src.hi
              1e4a 0d00  ld   [y,x]       8868  ld([Y,X])                       #92,
              1e4b de00  st   [y,x++]     8869  st([Y,Xpp])                     #93, src.lo++
              1e4c 1526  ld   [$26],y     8870  ld([sysArgs+2],Y)               #94,
              1e4d caad  st   [y,$ad]     8871  st([Y,0xAD])                    #95, pixel14
              1e4e 1525  ld   [$25],y     8872  ld([sysArgs+1],Y)               #96, src.hi
              1e4f 0d00  ld   [y,x]       8873  ld([Y,X])                       #97,
              1e50 de00  st   [y,x++]     8874  st([Y,Xpp])                     #98, src.lo++
              1e51 1526  ld   [$26],y     8875  ld([sysArgs+2],Y)               #99,
              1e52 caaf  st   [y,$af]     8876  st([Y,0xAF])                    #100, pixel15
              1e53 1525  ld   [$25],y     8877  ld([sysArgs+1],Y)               #101, src.hi
              1e54 0d00  ld   [y,x]       8878  ld([Y,X])                       #102,
              1e55 de00  st   [y,x++]     8879  st([Y,Xpp])                     #103, src.lo++
              1e56 1526  ld   [$26],y     8880  ld([sysArgs+2],Y)               #104,
              1e57 cab1  st   [y,$b1]     8881  st([Y,0xB1])                    #105, pixel16
              1e58 1525  ld   [$25],y     8882  ld([sysArgs+1],Y)               #106, src.hi
              1e59 0d00  ld   [y,x]       8883  ld([Y,X])                       #107,
              1e5a de00  st   [y,x++]     8884  st([Y,Xpp])                     #108, src.lo++
              1e5b 1526  ld   [$26],y     8885  ld([sysArgs+2],Y)               #109,
              1e5c cab3  st   [y,$b3]     8886  st([Y,0xB3])                    #110, pixel17
              1e5d 0126  ld   [$26]       8887  ld([sysArgs+2])                 #111,
              1e5e 8001  adda $01         8888  adda(1)                         #112,
              1e5f c226  st   [$26]       8889  st([sysArgs+2])                 #113, dstY++
                                          8890
              1e60 0128  ld   [$28]       8891  ld([sysArgs+4])                 #114,
              1e61 8002  adda $02         8892  adda(2)                         #115,
              1e62 d228  st   [$28],x     8893  st([sysArgs+4],X)               #116, patternLut += 2
              1e63 1529  ld   [$29],y     8894  ld([sysArgs+5],Y)               #117,
              1e64 0d00  ld   [y,x]       8895  ld([Y,X])                       #118,
              1e65 de00  st   [y,x++]     8896  st([Y,Xpp])                     #119,
              1e66 c224  st   [$24]       8897  st([sysArgs+0])                 #120, src.lo
              1e67 0d00  ld   [y,x]       8898  ld([Y,X])                       #121,
              1e68 c225  st   [$25]       8899  st([sysArgs+1])                 #122, src.hi
                                          8900
              1e69 0127  ld   [$27]       8901  ld([sysArgs+3])                 #123,
              1e6a a001  suba $01         8902  suba(1)                         #124,
              1e6b c227  st   [$27]       8903  st([sysArgs+3])                 #125, height/2 --
                                          8904  beq('.sys_spritepattern_128')   #126,
              1e6c f073  beq  .sys_spritepattern_128
              1e6d 0116  ld   [$16]       8905  ld([vPC])                       #127,
              1e6e a002  suba $02         8906  suba(2)                         #128,
              1e6f c216  st   [$16]       8907  st([vPC])                       #129, restart
              1e70 1403  ld   $03,y       8908  ld(hi('NEXTY'),Y)               #130,
              1e71 e000  jmp  y,$00       8909  jmp(Y,'NEXTY')                  #131,
              1e72 00bd  ld   $bd         8910  ld(-134/2)                      #132,
                                          8911
                                          8912  label('.sys_spritepattern_128')
.sys_spritepattern_128:
              1e73 1403  ld   $03,y       8913  ld(hi('NEXTY'),Y)               #128,
              1e74 e000  jmp  y,$00       8914  jmp(Y,'NEXTY')                  #129,
              1e75 00be  ld   $be         8915  ld(-132/2)                      #130,
                                          8916
                                          8917
                                          8918  # sys_DrawBullet
                                          8919  label('sys_DrawBullet')
sys_DrawBullet:
              1e76 1583  ld   [$83],y     8920  ld([0x83],Y)                    #18, bulletY
              1e77 0d00  ld   [y,x]       8921  ld([Y,X])                       #19, AC = screen
              1e78 1587  ld   [$87],y     8922  ld([0x87],Y)                    #20, bulletData
              1e79 69b4  xora [y,$b4]     8923  xora([Y,0xB4])                  #21, AC ^= bullet
              1e7a 1583  ld   [$83],y     8924  ld([0x83],Y)                    #22, bulletY
              1e7b de00  st   [y,x++]     8925  st([Y,Xpp])                     #23, screen = AC
                                          8926
              1e7c 0d00  ld   [y,x]       8927  ld([Y,X])                       #24, AC = screen
              1e7d 1587  ld   [$87],y     8928  ld([0x87],Y)                    #25, bulletData
              1e7e 69b5  xora [y,$b5]     8929  xora([Y,0xB5])                  #26, AC ^= bullet
              1e7f 1583  ld   [$83],y     8930  ld([0x83],Y)                    #27, bulletY
              1e80 de00  st   [y,x++]     8931  st([Y,Xpp])                     #28, screen = AC
                                          8932
              1e81 0d00  ld   [y,x]       8933  ld([Y,X])                       #29, AC = screen
              1e82 1587  ld   [$87],y     8934  ld([0x87],Y)                    #30, bulletData
              1e83 69b6  xora [y,$b6]     8935  xora([Y,0xB6])                  #31, AC ^= bullet
              1e84 1583  ld   [$83],y     8936  ld([0x83],Y)                    #32, bulletY
              1e85 de00  st   [y,x++]     8937  st([Y,Xpp])                     #33, screen = AC
                                          8938
              1e86 0d00  ld   [y,x]       8939  ld([Y,X])                       #34, AC = screen
              1e87 1587  ld   [$87],y     8940  ld([0x87],Y)                    #35, bulletData
              1e88 69b7  xora [y,$b7]     8941  xora([Y,0xB7])                  #36, AC ^= bullet
              1e89 1583  ld   [$83],y     8942  ld([0x83],Y)                    #37, bulletY
              1e8a de00  st   [y,x++]     8943  st([Y,Xpp])                     #38, screen = AC
                                          8944
              1e8b 1182  ld   [$82],x     8945  ld([0x82],X)                    #39, bulletX
              1e8c 0183  ld   [$83]       8946  ld([0x83])                      #40,
              1e8d 8001  adda $01         8947  adda(1)                         #41,
              1e8e d683  st   [$83],y     8948  st([0x83],Y)                    #42, bulletY++
                                          8949
              1e8f 0d00  ld   [y,x]       8950  ld([Y,X])                       #43, AC = screen
              1e90 1587  ld   [$87],y     8951  ld([0x87],Y)                    #44, bulletData
              1e91 69b8  xora [y,$b8]     8952  xora([Y,0xB8])                  #45, AC ^= bullet
              1e92 1583  ld   [$83],y     8953  ld([0x83],Y)                    #46, bulletY
              1e93 de00  st   [y,x++]     8954  st([Y,Xpp])                     #47, screen = AC
                                          8955
              1e94 0d00  ld   [y,x]       8956  ld([Y,X])                       #48, AC = screen
              1e95 1587  ld   [$87],y     8957  ld([0x87],Y)                    #49, bulletData
              1e96 69b9  xora [y,$b9]     8958  xora([Y,0xB9])                  #50, AC ^= bullet
              1e97 1583  ld   [$83],y     8959  ld([0x83],Y)                    #51, bulletY
              1e98 de00  st   [y,x++]     8960  st([Y,Xpp])                     #52, screen = AC
                                          8961
              1e99 0d00  ld   [y,x]       8962  ld([Y,X])                       #53, AC = screen
              1e9a 1587  ld   [$87],y     8963  ld([0x87],Y)                    #54, bulletData
              1e9b 69ba  xora [y,$ba]     8964  xora([Y,0xBA])                  #55, AC ^= bullet
              1e9c 1583  ld   [$83],y     8965  ld([0x83],Y)                    #56, bulletY
              1e9d de00  st   [y,x++]     8966  st([Y,Xpp])                     #57, screen = AC
                                          8967
              1e9e 0d00  ld   [y,x]       8968  ld([Y,X])                       #58, AC = screen
              1e9f 1587  ld   [$87],y     8969  ld([0x87],Y)                    #59, bulletData
              1ea0 69bb  xora [y,$bb]     8970  xora([Y,0xBB])                  #60, AC ^= bullet
              1ea1 1583  ld   [$83],y     8971  ld([0x83],Y)                    #61, bulletY
              1ea2 de00  st   [y,x++]     8972  st([Y,Xpp])                     #62, screen = AC
                                          8973
              1ea3 1182  ld   [$82],x     8974  ld([0x82],X)                    #63, bulletX
              1ea4 0183  ld   [$83]       8975  ld([0x83])                      #64,
              1ea5 8001  adda $01         8976  adda(1)                         #65,
              1ea6 d683  st   [$83],y     8977  st([0x83],Y)                    #66, bulletY++
                                          8978
              1ea7 0d00  ld   [y,x]       8979  ld([Y,X])                       #67, AC = screen
              1ea8 1587  ld   [$87],y     8980  ld([0x87],Y)                    #68, bulletData
              1ea9 69bc  xora [y,$bc]     8981  xora([Y,0xBC])                  #69, AC ^= bullet
              1eaa 1583  ld   [$83],y     8982  ld([0x83],Y)                    #70, bulletY
              1eab de00  st   [y,x++]     8983  st([Y,Xpp])                     #71, screen = AC
                                          8984
              1eac 0d00  ld   [y,x]       8985  ld([Y,X])                       #72, AC = screen
              1ead 1587  ld   [$87],y     8986  ld([0x87],Y)                    #73, bulletData
              1eae 69bd  xora [y,$bd]     8987  xora([Y,0xBD])                  #74, AC ^= bullet
              1eaf 1583  ld   [$83],y     8988  ld([0x83],Y)                    #75, bulletY
              1eb0 de00  st   [y,x++]     8989  st([Y,Xpp])                     #76, screen = AC
                                          8990
              1eb1 0d00  ld   [y,x]       8991  ld([Y,X])                       #77, AC = screen
              1eb2 1587  ld   [$87],y     8992  ld([0x87],Y)                    #78, bulletData
              1eb3 69be  xora [y,$be]     8993  xora([Y,0xBE])                  #79, AC ^= bullet
              1eb4 1583  ld   [$83],y     8994  ld([0x83],Y)                    #80, bulletY
              1eb5 de00  st   [y,x++]     8995  st([Y,Xpp])                     #81, screen = AC
                                          8996
              1eb6 0d00  ld   [y,x]       8997  ld([Y,X])                       #82, AC = screen
              1eb7 1587  ld   [$87],y     8998  ld([0x87],Y)                    #83, bulletData
              1eb8 69bf  xora [y,$bf]     8999  xora([Y,0xBF])                  #84, AC ^= bullet
              1eb9 1583  ld   [$83],y     9000  ld([0x83],Y)                    #85, bulletY
              1eba de00  st   [y,x++]     9001  st([Y,Xpp])                     #86, screen = AC
                                          9002
              1ebb 1182  ld   [$82],x     9003  ld([0x82],X)                    #87, bulletX
              1ebc 0183  ld   [$83]       9004  ld([0x83])                      #88,
              1ebd 8001  adda $01         9005  adda(1)                         #89,
              1ebe d683  st   [$83],y     9006  st([0x83],Y)                    #90, bulletY++
                                          9007
              1ebf 0d00  ld   [y,x]       9008  ld([Y,X])                       #91, AC = screen
              1ec0 1587  ld   [$87],y     9009  ld([0x87],Y)                    #92, bulletData
              1ec1 69c0  xora [y,$c0]     9010  xora([Y,0xC0])                  #93, AC ^= bullet
              1ec2 1583  ld   [$83],y     9011  ld([0x83],Y)                    #94, bulletY
              1ec3 de00  st   [y,x++]     9012  st([Y,Xpp])                     #95, screen = AC
                                          9013
              1ec4 0d00  ld   [y,x]       9014  ld([Y,X])                       #96, AC = screen
              1ec5 1587  ld   [$87],y     9015  ld([0x87],Y)                    #97, bulletData
              1ec6 69c1  xora [y,$c1]     9016  xora([Y,0xC1])                  #98, AC ^= bullet
              1ec7 1583  ld   [$83],y     9017  ld([0x83],Y)                    #99, bulletY
              1ec8 de00  st   [y,x++]     9018  st([Y,Xpp])                     #100, screen = AC
                                          9019
              1ec9 0d00  ld   [y,x]       9020  ld([Y,X])                       #101, AC = screen
              1eca 1587  ld   [$87],y     9021  ld([0x87],Y)                    #102, bulletData
              1ecb 69c2  xora [y,$c2]     9022  xora([Y,0xC2])                  #103, AC ^= bullet
              1ecc 1583  ld   [$83],y     9023  ld([0x83],Y)                    #104, bulletY
              1ecd de00  st   [y,x++]     9024  st([Y,Xpp])                     #105, screen = AC
                                          9025
              1ece 0d00  ld   [y,x]       9026  ld([Y,X])                       #106, AC = screen
              1ecf 1587  ld   [$87],y     9027  ld([0x87],Y)                    #107, bulletData
              1ed0 69c3  xora [y,$c3]     9028  xora([Y,0xC3])                  #108, AC ^= bullet
              1ed1 1583  ld   [$83],y     9029  ld([0x83],Y)                    #109, bulletY
              1ed2 de00  st   [y,x++]     9030  st([Y,Xpp])                     #110, screen = AC
                                          9031
              1ed3 019c  ld   [$9c]       9032  ld([0x9C])                      #111, register13
              1ed4 8001  adda $01         9033  adda(1)                         #112,
              1ed5 d29c  st   [$9c],x     9034  st([0x9C],X)                    #113, register13++
              1ed6 159d  ld   [$9d],y     9035  ld([0x9D],Y)                    #114,
              1ed7 0d00  ld   [y,x]       9036  ld([Y,X])                       #115, peek(register13)
              1ed8 c282  st   [$82]       9037  st([0x82])                      #116, bulletX
                                          9038
              1ed9 019e  ld   [$9e]       9039  ld([0x9E])                      #117,
              1eda 8001  adda $01         9040  adda(1)                         #118,
              1edb d29e  st   [$9e],x     9041  st([0x9E],X)                    #119, register14++
              1edc 159f  ld   [$9f],y     9042  ld([0x9F],Y)                    #120,
              1edd 0d00  ld   [y,x]       9043  ld([Y,X])                       #121, peek(register14)
              1ede c283  st   [$83]       9044  st([0x83])                      #122, bulletY
                                          9045
              1edf 01a0  ld   [$a0]       9046  ld([0xA0])                      #123,
              1ee0 8001  adda $01         9047  adda(1)                         #124,
              1ee1 d2a0  st   [$a0],x     9048  st([0xA0],X)                    #125, register15++
              1ee2 15a1  ld   [$a1],y     9049  ld([0xA1],Y)                    #126,
              1ee3 0d00  ld   [y,x]       9050  ld([Y,X])                       #127, peek(register15)
              1ee4 c287  st   [$87]       9051  st([0x87])                      #128, bulletData
                                          9052
              1ee5 019a  ld   [$9a]       9053  ld([0x9A])                      #129,
              1ee6 a001  suba $01         9054  suba(1)                         #130,
                                          9055  beq('.sys_drawbullet_133')      #131,
              1ee7 f0ef  beq  .sys_drawbullet_133
              1ee8 c29a  st   [$9a]       9056  st([0x9A])                      #132, register12--
              1ee9 1403  ld   $03,y       9057  ld(hi('NEXTY'),Y)               #133,
              1eea 0116  ld   [$16]       9058  ld([vPC])                       #134,
              1eeb a002  suba $02         9059  suba(2)                         #135,
              1eec c216  st   [$16]       9060  st([vPC])                       #136, restart
              1eed e000  jmp  y,$00       9061  jmp(Y,'NEXTY')                  #137,
              1eee 00ba  ld   $ba         9062  ld(-140/2)                      #138,
                                          9063  label('.sys_drawbullet_133')
.sys_drawbullet_133:
              1eef 1403  ld   $03,y       9064  ld(hi('REENTER'),Y)             #133,
              1ef0 e0cb  jmp  y,$cb       9065  jmp(Y,'REENTER')                #134,
              1ef1 00bb  ld   $bb         9066  ld(-138/2)                      #135,
                                          9067
                                          9068
              1ef2 0200  nop              9069  fillers(until=0xff)
              1ef3 0200  nop
              1ef4 0200  nop
              * 13 times
              1eff 0200  nop              9070  align(0x100, size=0x100)
                                          9071
                                          9072  #-----------------------------------------------------------------------
                                          9073  #       More sys implementations, (0x1F00)
                                          9074  #-----------------------------------------------------------------------
                                          9075
                                          9076  # sys_CmpByteBounds, 0xB8,B9=src, 0xBA,BB=vPC_bounds, 0xBC,BD=bounds, 0xBE=index,
                                          9077  #                    0xBF=count, output:vAC.lo=index
                                          9078  label('sys_CmpByteBounds')
sys_CmpByteBounds:
              1f00 a001  suba $01         9079  suba(1)                         #18,
                                          9080  bge('.sys_cmpbytebounds_21')    #19,
              1f01 f406  bge  .sys_cmpbytebounds_21
              1f02 c2bf  st   [$bf]       9081  st([0xBF])                      #20, count--
              1f03 1403  ld   $03,y       9082  ld(hi('REENTER'),Y)             #21,
              1f04 e0cb  jmp  y,$cb       9083  jmp(Y,'REENTER')                #22,
              1f05 00f3  ld   $f3         9084  ld(-26/2)                       #23,
                                          9085  label('.sys_cmpbytebounds_21')
.sys_cmpbytebounds_21:
              1f06 01b8  ld   [$b8]       9086  ld([0xB8])                      #21,
              1f07 91be  adda [$be],x     9087  adda([0xBE],X)                  #22,
              1f08 15b9  ld   [$b9],y     9088  ld([0xB9],Y)                    #23,
              1f09 0d00  ld   [y,x]       9089  ld([Y,X])                       #24,
                                          9090  bmi('.sys_cmpbytebounds_27')    #25,
              1f0a e80e  blt  .sys_cmpbytebounds_27
              1f0b a1bc  suba [$bc]       9091  suba([0xBC])                    #26,
                                          9092  bra('.sys_cmpbytebounds_29')    #27,
              1f0c fc10  bra  .sys_cmpbytebounds_29
              1f0d 41bc  ora  [$bc]       9093  ora([0xBC])                     #28,
                                          9094  label('.sys_cmpbytebounds_27')
.sys_cmpbytebounds_27:
              1f0e 21bc  anda [$bc]       9095  anda([0xBC])                    #27,
              1f0f 0200  nop              9096  nop()                           #28,
                                          9097
                                          9098  label('.sys_cmpbytebounds_29')
.sys_cmpbytebounds_29:                    9099  bpl('.sys_cmpbytebounds_31')    #29,
              1f10 f422  bge  .sys_cmpbytebounds_31
              1f11 0d00  ld   [y,x]       9100  ld([Y,X])                       #30,
              1f12 0116  ld   [$16]       9101  ld([vPC])                       #31, < lbounds
              1f13 c21a  st   [$1a]       9102  st([vLR])                       #32, return to SYS call
              1f14 0117  ld   [$17]       9103  ld([vPC+1])                     #33,
              1f15 c21b  st   [$1b]       9104  st([vLR+1])                     #34,
              1f16 01ba  ld   [$ba]       9105  ld([0xBA])                      #35,
              1f17 a002  suba $02         9106  suba(2)                         #36,
              1f18 c216  st   [$16]       9107  st([vPC])                       #37, NEXT adds 2
              1f19 01bb  ld   [$bb]       9108  ld([0xBB])                      #38,
              1f1a c217  st   [$17]       9109  st([vPC+1])                     #39, bounds call address
              1f1b 01be  ld   [$be]       9110  ld([0xBE])                      #40,
              1f1c c218  st   [$18]       9111  st([vAC])                       #41, vAC.lo = index
              1f1d 8001  adda $01         9112  adda(1)                         #42,
              1f1e c2be  st   [$be]       9113  st([0xBE])                      #43, index++
              1f1f 1403  ld   $03,y       9114  ld(hi('NEXTY'),Y)               #44,
              1f20 e000  jmp  y,$00       9115  jmp(Y,'NEXTY')                  #45,
              1f21 00e8  ld   $e8         9116  ld(-48/2)                       #46,
                                          9117
                                          9118  label('.sys_cmpbytebounds_31')
.sys_cmpbytebounds_31:                    9119  bmi('.sys_cmpbytebounds_33')    #31,
              1f22 e826  blt  .sys_cmpbytebounds_33
              1f23 a1bd  suba [$bd]       9120  suba([0xBD])                    #32,
                                          9121  bra('.sys_cmpbytebounds_35')    #33,
              1f24 fc28  bra  .sys_cmpbytebounds_35
              1f25 41bd  ora  [$bd]       9122  ora([0xBD])                     #34,
                                          9123  label('.sys_cmpbytebounds_33')
.sys_cmpbytebounds_33:
              1f26 21bd  anda [$bd]       9124  anda([0xBD])                    #33,
              1f27 0200  nop              9125  nop()                           #34,
                                          9126  label('.sys_cmpbytebounds_35')
.sys_cmpbytebounds_35:                    9127  bmi('.sys_cmpbytebounds_37')    #35,
              1f28 e839  blt  .sys_cmpbytebounds_37
              1f29 0116  ld   [$16]       9128  ld([vPC])                       #36, >= ubounds
              1f2a c21a  st   [$1a]       9129  st([vLR])                       #37, return to SYS call
              1f2b 0117  ld   [$17]       9130  ld([vPC+1])                     #38,
              1f2c c21b  st   [$1b]       9131  st([vLR+1])                     #39,
              1f2d 01ba  ld   [$ba]       9132  ld([0xBA])                      #40,
              1f2e a002  suba $02         9133  suba(2)                         #41,
              1f2f c216  st   [$16]       9134  st([vPC])                       #42, NEXT adds 2
              1f30 01bb  ld   [$bb]       9135  ld([0xBB])                      #43,
              1f31 c217  st   [$17]       9136  st([vPC+1])                     #44, bounds call address
              1f32 01be  ld   [$be]       9137  ld([0xBE])                      #45,
              1f33 c218  st   [$18]       9138  st([vAC])                       #46, vAC.lo = index
              1f34 8001  adda $01         9139  adda(1)                         #47,
              1f35 c2be  st   [$be]       9140  st([0xBE])                      #48, index++
              1f36 1403  ld   $03,y       9141  ld(hi('REENTER'),Y)             #49,
              1f37 e0cb  jmp  y,$cb       9142  jmp(Y,'REENTER')                #50,
              1f38 00e5  ld   $e5         9143  ld(-54/2)                       #51,
                                          9144
                                          9145  label('.sys_cmpbytebounds_37')
.sys_cmpbytebounds_37:
              1f39 a002  suba $02         9146  suba(2)                         #37,
              1f3a c216  st   [$16]       9147  st([vPC])                       #38, restart
              1f3b 01be  ld   [$be]       9148  ld([0xBE])                      #39,
              1f3c 8001  adda $01         9149  adda(1)                         #40,
              1f3d c2be  st   [$be]       9150  st([0xBE])                      #41, index++
              1f3e 1403  ld   $03,y       9151  ld(hi('NEXTY'),Y)               #42,
              1f3f e000  jmp  y,$00       9152  jmp(Y,'NEXTY')                  #43,
              1f40 00e9  ld   $e9         9153  ld(-46/2)                       #44,
                                          9154
                                          9155
                                          9156  # SYS_Reset_88 imolementation
                                          9157  label('sys_Reset_88')
sys_Reset_88: 1f41 c221  st   [$21]       9158  st([romType])                   #18
              1f42 0000  ld   $00         9159  ld(0)                           #19
              1f43 c21c  st   [$1c]       9160  st([vSP])                       #20 vSP
              1f44 c204  st   [$04]       9161  st([vSPH])                      #21 vSPH
              1f45 1401  ld   $01,y       9162  ld(hi('videoTop_v5'),Y)         #22
              1f46 caf9  st   [y,$f9]     9163  st([Y,lo('videoTop_v5')])       #23 Show all 120 pixel lines
              1f47 caf6  st   [y,$f6]     9164  st([Y,vIRQ_v5])                 #24 Disable vIRQ dispatch
              1f48 caf7  st   [y,$f7]     9165  st([Y,vIRQ_v5+1])               #25
              1f49 c22c  st   [$2c]       9166  st([soundTimer])                #26 soundTimer
                                          9167  assert userCode&255 == 0
              1f4a c21a  st   [$1a]       9168  st([vLR])                       #27 vLR
              1f4b 0002  ld   $02         9169  ld(userCode>>8)                 #28
              1f4c c21b  st   [$1b]       9170  st([vLR+1])                     #29
              1f4d 00f6  ld   $f6         9171  ld('nopixels')                  #30 Video mode 3 (fast)
              1f4e c20a  st   [$0a]       9172  st([videoModeB])                #31
              1f4f c20b  st   [$0b]       9173  st([videoModeC])                #32
              1f50 c20c  st   [$0c]       9174  st([videoModeD])                #33
              1f51 00ad  ld   $ad         9175  ld('SYS_Exec_88')               #34 SYS_Exec_88
              1f52 c222  st   [$22]       9176  st([sysFn])                     #35 High byte (remains) 0
              1f53 008b  ld   $8b         9177  ld('Reset')                     #36 Reset.gt1 from EPROM
              1f54 c224  st   [$24]       9178  st([sysArgs+0])                 #37
              1f55 00da  ld   $da         9179  ld(hi('Reset'))                 #38
              1f56 c225  st   [$25]       9180  st([sysArgs+1])                 #39
              1f57 0116  ld   [$16]       9181  ld([vPC])                       #40 Force second SYS call
              1f58 a002  suba $02         9182  suba(2)                         #41
              1f59 c216  st   [$16]       9183  st([vPC])                       #42
              1f5a c17f  ctrl $7f         9184  ctrl(0b01111111)                #43 Expansion board: (1) reset signal.
              1f5b c17c  ctrl $7c         9185  ctrl(0b01111100)                #44 (2) disable SPI slaves, enable RAM bank 1
              1f5c 1403  ld   $03,y       9186  ld(hi('REENTER'),Y)             #45
              1f5d e0cb  jmp  y,$cb       9187  jmp(Y,'REENTER')                #46
              1f5e 00e7  ld   $e7         9188  ld(-50/2)                       #47
                                          9189
                                          9190
                                          9191  #-----------------------------------------------------------------------
                                          9192  # sys_Divide_u168, x:u8 = x:u16 / y:u8, rem:u8 = x:u16 % y:u8
                                          9193  # sysArgs0,1=x, sysArgs2=y, sysArgs4=count, output : sysArgs0=res, sysArgs1=rem
                                          9194  label('sys_Divide_u168')
sys_Divide_u168:
              1f5f c229  st   [$29]       9195  st([sysArgs+5])                 #18, save x.hi
              1f60 0128  ld   [$28]       9196  ld([sysArgs+4])                 #19,
              1f61 a001  suba $01         9197  suba(1)                         #20, count--
                                          9198  bge('.sys_divide_u168_23')      #21,
              1f62 f467  bge  .sys_divide_u168_23
              1f63 c228  st   [$28]       9199  st([sysArgs+4])                 #22,
              1f64 1403  ld   $03,y       9200  ld(hi('REENTER'),Y)             #23,
              1f65 e0cb  jmp  y,$cb       9201  jmp(Y,'REENTER')                #24,
              1f66 00f2  ld   $f2         9202  ld(-28/2)                       #25,
                                          9203
                                          9204  label('.sys_divide_u168_23')
.sys_divide_u168_23:
              1f67 0124  ld   [$24]       9205  ld([sysArgs+0])                 #23,
              1f68 3080  anda $80,x       9206  anda(128,X)                     #24,
              1f69 8124  adda [$24]       9207  adda([sysArgs+0])               #25,
              1f6a c224  st   [$24]       9208  st([sysArgs+0])                 #26,
              1f6b 0500  ld   [x]         9209  ld([X])                         #27,
              1f6c 8125  adda [$25]       9210  adda([sysArgs+1])               #28,
              1f6d 8125  adda [$25]       9211  adda([sysArgs+1])               #29,
              1f6e c225  st   [$25]       9212  st([sysArgs+1])                 #30, x <<1
                                          9213  bmi('.sys_divide_u168_33')      #31, unsigned compare
              1f6f e874  blt  .sys_divide_u168_33
              1f70 a126  suba [$26]       9214  suba([sysArgs+2])               #32, x.hi - y
              1f71 c21d  st   [$1d]       9215  st([vTmp])                      #33,
                                          9216  bra('.sys_divide_u168_36')      #34,
              1f72 fc77  bra  .sys_divide_u168_36
              1f73 4126  ora  [$26]       9217  ora([sysArgs+2])                #35,
                                          9218  label('.sys_divide_u168_33')
.sys_divide_u168_33:
              1f74 c21d  st   [$1d]       9219  st([vTmp])                      #33,
              1f75 2126  anda [$26]       9220  anda([sysArgs+2])               #34,
              1f76 0200  nop              9221  nop()                           #35,
                                          9222
                                          9223  label('.sys_divide_u168_36')
.sys_divide_u168_36:                      9224  bmi('.sys_divide_u168_38')      #36,
              1f77 e88d  blt  .sys_divide_u168_38
              1f78 011d  ld   [$1d]       9225  ld([vTmp])                      #37, x.hi >= y
              1f79 c225  st   [$25]       9226  st([sysArgs+1])                 #38, x.hi = (x.hi - y) <<8
              1f7a 0124  ld   [$24]       9227  ld([sysArgs+0])                 #39,
              1f7b 8001  adda $01         9228  adda(1)                         #40, x.lo++
                                          9229  bne('.sys_divide_u168_43')      #41,
              1f7c ec87  bne  .sys_divide_u168_43
              1f7d c224  st   [$24]       9230  st([sysArgs+0])                 #42,
              1f7e 0125  ld   [$25]       9231  ld([sysArgs+1])                 #43,
              1f7f 8001  adda $01         9232  adda(1)                         #44, x.hi++
              1f80 c225  st   [$25]       9233  st([sysArgs+1])                 #45,
              1f81 0116  ld   [$16]       9234  ld([vPC])                       #46,
              1f82 a002  suba $02         9235  suba(2)                         #47,
              1f83 c216  st   [$16]       9236  st([vPC])                       #48, restart
              1f84 1403  ld   $03,y       9237  ld(hi('REENTER'),Y)             #49,
              1f85 e0cb  jmp  y,$cb       9238  jmp(Y,'REENTER')                #50,
              1f86 00e5  ld   $e5         9239  ld(-54/2)                       #51,
                                          9240  label('.sys_divide_u168_43')
.sys_divide_u168_43:
              1f87 0116  ld   [$16]       9241  ld([vPC])                       #43,
              1f88 a002  suba $02         9242  suba(2)                         #44,
              1f89 c216  st   [$16]       9243  st([vPC])                       #45, restart
              1f8a 1403  ld   $03,y       9244  ld(hi('NEXTY'),Y)               #46,
              1f8b e000  jmp  y,$00       9245  jmp(Y,'NEXTY')                  #47,
              1f8c 00e7  ld   $e7         9246  ld(-50/2)                       #48,
                                          9247
                                          9248  label('.sys_divide_u168_38')
.sys_divide_u168_38:
              1f8d 0129  ld   [$29]       9249  ld([sysArgs+5])                 #38,
                                          9250  bpl('.sys_divide_u168_41')      #39, msb(x.hi) = 0
              1f8e f4a4  bge  .sys_divide_u168_41
              1f8f 011d  ld   [$1d]       9251  ld([vTmp])                      #40, x.hi >= y
              1f90 c225  st   [$25]       9252  st([sysArgs+1])                 #41, x.hi = (x.hi - y) <<8
              1f91 0124  ld   [$24]       9253  ld([sysArgs+0])                 #42,
              1f92 8001  adda $01         9254  adda(1)                         #43, x.lo++
                                          9255  bne('.sys_divide_u168_46')      #44,
              1f93 ec9e  bne  .sys_divide_u168_46
              1f94 c224  st   [$24]       9256  st([sysArgs+0])                 #45,
              1f95 0125  ld   [$25]       9257  ld([sysArgs+1])                 #46,
              1f96 8001  adda $01         9258  adda(1)                         #47, x.hi++
              1f97 c225  st   [$25]       9259  st([sysArgs+1])                 #48,
              1f98 0116  ld   [$16]       9260  ld([vPC])                       #49,
              1f99 a002  suba $02         9261  suba(2)                         #50,
              1f9a c216  st   [$16]       9262  st([vPC])                       #51, restart
              1f9b 1403  ld   $03,y       9263  ld(hi('NEXTY'),Y)               #52,
              1f9c e000  jmp  y,$00       9264  jmp(Y,'NEXTY')                  #53,
              1f9d 00e4  ld   $e4         9265  ld(-56/2)                       #54,
                                          9266  label('.sys_divide_u168_46')
.sys_divide_u168_46:
              1f9e 0116  ld   [$16]       9267  ld([vPC])                       #46,
              1f9f a002  suba $02         9268  suba(2)                         #47,
              1fa0 c216  st   [$16]       9269  st([vPC])                       #48, restart
              1fa1 1403  ld   $03,y       9270  ld(hi('REENTER'),Y)             #49,
              1fa2 e0cb  jmp  y,$cb       9271  jmp(Y,'REENTER')                #50,
              1fa3 00e5  ld   $e5         9272  ld(-54/2)                       #51,
                                          9273
                                          9274  label('.sys_divide_u168_41')
.sys_divide_u168_41:
              1fa4 0116  ld   [$16]       9275  ld([vPC])                       #41,
              1fa5 a002  suba $02         9276  suba(2)                         #42,
              1fa6 c216  st   [$16]       9277  st([vPC])                       #43, restart
              1fa7 1403  ld   $03,y       9278  ld(hi('NEXTY'),Y)               #44,
              1fa8 e000  jmp  y,$00       9279  jmp(Y,'NEXTY')                  #45,
              1fa9 00e8  ld   $e8         9280  ld(-48/2)                       #46,
                                          9281
                                          9282
              1faa 0200  nop              9283  fillers(until=0xc0)
              1fab 0200  nop
              1fac 0200  nop
              * 22 times
                                          9284
                                          9285  # sys_ConvertVTableX, sysArgs0=dst, sysArgs2=offsetX, sysArgs3=accum, sysArgs4=count
                                          9286  label('SYS_ConvertVTableX_66')
SYS_ConvertVTableX_66:
              1fc0 1401  ld   $01,y       9287  ld(1,Y)                         #15, VTable.hi
              1fc1 1126  ld   [$26],x     9288  ld([sysArgs+2],X)               #16, VTable.lo
              1fc2 0d00  ld   [y,x]       9289  ld([Y,X])                       #17, get VTableX
              1fc3 8127  adda [$27]       9290  adda([sysArgs+3])               #18,
              1fc4 1525  ld   [$25],y     9291  ld([sysArgs+1],Y)               #19, dst.hi
              1fc5 1124  ld   [$24],x     9292  ld([sysArgs+0],X)               #20, dst.lo
              1fc6 ce00  st   [y,x]       9293  st([Y,X])                       #21,
              1fc7 c227  st   [$27]       9294  st([sysArgs+3])                 #22, accum
                                          9295
              1fc8 1401  ld   $01,y       9296  ld(1,Y)                         #23
              1fc9 0124  ld   [$24]       9297  ld([sysArgs+0])                 #24,
              1fca 8001  adda $01         9298  adda(1)                         #25,
              1fcb c224  st   [$24]       9299  st([sysArgs+0])                 #26, dst++
              1fcc 0126  ld   [$26]       9300  ld([sysArgs+2])                 #27,
              1fcd 8002  adda $02         9301  adda(2)                         #28,
              1fce d226  st   [$26],x     9302  st([sysArgs+2],X)               #29, offsetX += 2
              1fcf 0d00  ld   [y,x]       9303  ld([Y,X])                       #30, get video table X
              1fd0 8127  adda [$27]       9304  adda([sysArgs+3])               #31,
              1fd1 1525  ld   [$25],y     9305  ld([sysArgs+1],Y)               #32, dst.hi
              1fd2 1124  ld   [$24],x     9306  ld([sysArgs+0],X)               #33, dst.lo
              1fd3 ce00  st   [y,x]       9307  st([Y,X])                       #34,
              1fd4 c227  st   [$27]       9308  st([sysArgs+3])                 #35, accum
                                          9309
              1fd5 1401  ld   $01,y       9310  ld(1,Y)                         #36
              1fd6 0124  ld   [$24]       9311  ld([sysArgs+0])                 #37,
              1fd7 8001  adda $01         9312  adda(1)                         #38,
              1fd8 c224  st   [$24]       9313  st([sysArgs+0])                 #39, dst++
              1fd9 0126  ld   [$26]       9314  ld([sysArgs+2])                 #40,
              1fda 8002  adda $02         9315  adda(2)                         #41,
              1fdb d226  st   [$26],x     9316  st([sysArgs+2],X)               #42, offsetX += 2
              1fdc 0d00  ld   [y,x]       9317  ld([Y,X])                       #43, get video table X
              1fdd 8127  adda [$27]       9318  adda([sysArgs+3])               #44,
              1fde 1525  ld   [$25],y     9319  ld([sysArgs+1],Y)               #45, dst.hi
              1fdf 1124  ld   [$24],x     9320  ld([sysArgs+0],X)               #46, dst.lo
              1fe0 ce00  st   [y,x]       9321  st([Y,X])                       #47,
              1fe1 c227  st   [$27]       9322  st([sysArgs+3])                 #48, accum
                                          9323
              1fe2 0128  ld   [$28]       9324  ld([sysArgs+4])                 #49,
              1fe3 a001  suba $01         9325  suba(1)                         #50,
              1fe4 c228  st   [$28]       9326  st([sysArgs+4])                 #51, count--
                                          9327  beq('.sys_convertvtablex_54')   #52,
              1fe5 f0f2  beq  .sys_convertvtablex_54
              1fe6 0124  ld   [$24]       9328  ld([sysArgs+0])                 #53,
              1fe7 8001  adda $01         9329  adda(1)                         #54,
              1fe8 c224  st   [$24]       9330  st([sysArgs+0])                 #55, dst++
              1fe9 0126  ld   [$26]       9331  ld([sysArgs+2])                 #56,
              1fea 8002  adda $02         9332  adda(2)                         #57,
              1feb c226  st   [$26]       9333  st([sysArgs+2])                 #58, offsetX += 2
              1fec 0116  ld   [$16]       9334  ld([vPC])                       #59,
              1fed a002  suba $02         9335  suba(2)                         #60,
              1fee c216  st   [$16]       9336  st([vPC])                       #61, restart
              1fef 1403  ld   $03,y       9337  ld(hi('NEXTY'),Y)               #62,
              1ff0 e000  jmp  y,$00       9338  jmp(Y,'NEXTY')                  #63,
              1ff1 00df  ld   $df         9339  ld(-66/2)                       #64,
                                          9340  label('.sys_convertvtablex_54')
.sys_convertvtablex_54:
              1ff2 1403  ld   $03,y       9341  ld(hi('NEXTY'),Y)               #54,
              1ff3 e000  jmp  y,$00       9342  jmp(Y,'NEXTY')                  #55,
              1ff4 00e3  ld   $e3         9343  ld(-58/2)                       #56,
                                          9344
                                          9345
              1ff5 0200  nop              9346  fillers(until=0xff)
              1ff6 0200  nop
              1ff7 0200  nop
              * 10 times
              1fff 0200  nop              9347  align(0x100, size=0x100)
                                          9348
                                          9349  #-----------------------------------------------------------------------
                                          9350  #       More sys implementations, (0x2000)
                                          9351  #-----------------------------------------------------------------------
                                          9352
                                          9353  # SYS_DrawSpriteH_vX_140
                                          9354  label('SYS_DrawSpriteH_vX_140')
SYS_DrawSpriteH_vX_140:
              2000 0186  ld   [$86]       9355  ld([0x86])                      #15, spriteEnable
                                          9356  bmi('.sys_drawspriteh_18')      #16,
              2001 e89b  blt  .sys_drawspriteh_18
              2002 0183  ld   [$83]       9357  ld([0x83])                      #17, spriteY
              2003 8183  adda [$83]       9358  adda([0x83])                    #18, spriteY
              2004 1200  ld   ac,x        9359  ld(AC,X)                        #19,
              2005 1401  ld   $01,y       9360  ld(1,Y)                         #20, 0x0100
              2006 0d00  ld   [y,x]       9361  ld([Y,X])                       #21, VTableY
              2007 c285  st   [$85]       9362  st([0x85])                      #22,
              2008 1525  ld   [$25],y     9363  ld([sysArgs+1],Y)               #23, VTableAbsX.hi
              2009 0124  ld   [$24]       9364  ld([sysArgs+0])                 #24, VTableAbsX.lo
              200a 8183  adda [$83]       9365  adda([0x83])                    #25, spriteY
              200b 1200  ld   ac,x        9366  ld(AC,X)                        #26,
              200c 0182  ld   [$82]       9367  ld([0x82])                      #27, spriteX
              200d 8d00  adda [y,x]       9368  adda([Y,X])                     #28, VTableX offset, (absolute)
              200e d284  st   [$84],x     9369  st([0x84],X)                    #29,
              200f 1585  ld   [$85],y     9370  ld([0x85],Y)                    #30,
                                          9371
              2010 0d00  ld   [y,x]       9372  ld([Y,X])                       #31, get back0
              2011 1587  ld   [$87],y     9373  ld([0x87],Y)                    #32, spriteData
              2012 caa2  st   [y,$a2]     9374  st([Y,0xA2])                    #33, save back0
              2013 09a3  ld   [y,$a3]     9375  ld([Y,0xA3])                    #34, load pixel0
              2014 1585  ld   [$85],y     9376  ld([0x85],Y)                    #35, spriteY
              2015 ec18  bne  $2018       9377  bne(pc()+3)                     #36, colourkey
              2016 fc19  bra  $2019       9378  bra(pc()+3)                     #37,
              2017 0d00  ld   [y,x]       9379  ld([Y,X])                       #38,
              2018 0200  nop              9380  nop()                           #38, (!)
              2019 de00  st   [y,x++]     9381  st([Y,Xpp])                     #39, draw pixel0
                                          9382
              201a 0d00  ld   [y,x]       9383  ld([Y,X])                       #40, get back1
              201b 1587  ld   [$87],y     9384  ld([0x87],Y)                    #41, spriteData
              201c caa4  st   [y,$a4]     9385  st([Y,0xA4])                    #42, save back1
              201d 09a5  ld   [y,$a5]     9386  ld([Y,0xA5])                    #43, load pixel1
              201e 1585  ld   [$85],y     9387  ld([0x85],Y)                    #44, spriteY
              201f ec22  bne  $2022       9388  bne(pc()+3)                     #45, colourkey
              2020 fc23  bra  $2023       9389  bra(pc()+3)                     #46,
              2021 0d00  ld   [y,x]       9390  ld([Y,X])                       #47,
              2022 0200  nop              9391  nop()                           #47, (!)
              2023 de00  st   [y,x++]     9392  st([Y,Xpp])                     #48, draw pixel1
                                          9393
              2024 0d00  ld   [y,x]       9394  ld([Y,X])                       #49, get back2
              2025 1587  ld   [$87],y     9395  ld([0x87],Y)                    #50, spriteData
              2026 caa6  st   [y,$a6]     9396  st([Y,0xA6])                    #51, save back2
              2027 09a7  ld   [y,$a7]     9397  ld([Y,0xA7])                    #52, load pixel2
              2028 1585  ld   [$85],y     9398  ld([0x85],Y)                    #53, spriteY
              2029 ec2c  bne  $202c       9399  bne(pc()+3)                     #54, colourkey
              202a fc2d  bra  $202d       9400  bra(pc()+3)                     #55,
              202b 0d00  ld   [y,x]       9401  ld([Y,X])                       #56,
              202c 0200  nop              9402  nop()                           #56, (!)
              202d de00  st   [y,x++]     9403  st([Y,Xpp])                     #57, draw pixel2
                                          9404
              202e 0d00  ld   [y,x]       9405  ld([Y,X])                       #58, get back3
              202f 1587  ld   [$87],y     9406  ld([0x87],Y)                    #59, spriteData
              2030 caa8  st   [y,$a8]     9407  st([Y,0xA8])                    #60, save back3
              2031 09a9  ld   [y,$a9]     9408  ld([Y,0xA9])                    #61, load pixel3
              2032 1585  ld   [$85],y     9409  ld([0x85],Y)                    #62, spriteY
              2033 ec36  bne  $2036       9410  bne(pc()+3)                     #63, colourkey
              2034 fc37  bra  $2037       9411  bra(pc()+3)                     #64,
              2035 0d00  ld   [y,x]       9412  ld([Y,X])                       #65,
              2036 0200  nop              9413  nop()                           #65, (!)
              2037 de00  st   [y,x++]     9414  st([Y,Xpp])                     #66, draw pixel3
                                          9415
              2038 0d00  ld   [y,x]       9416  ld([Y,X])                       #67, get back4
              2039 1587  ld   [$87],y     9417  ld([0x87],Y)                    #68, spriteData
              203a caaa  st   [y,$aa]     9418  st([Y,0xAA])                    #69, save back4
              203b 09ab  ld   [y,$ab]     9419  ld([Y,0xAB])                    #70, load pixel4
              203c 1585  ld   [$85],y     9420  ld([0x85],Y)                    #71, spriteY
              203d ec40  bne  $2040       9421  bne(pc()+3)                     #72, colourkey
              203e fc41  bra  $2041       9422  bra(pc()+3)                     #73,
              203f 0d00  ld   [y,x]       9423  ld([Y,X])                       #74,
              2040 0200  nop              9424  nop()                           #74, (!)
              2041 de00  st   [y,x++]     9425  st([Y,Xpp])                     #75, draw pixel4
                                          9426
              2042 0d00  ld   [y,x]       9427  ld([Y,X])                       #76, get back5
              2043 1587  ld   [$87],y     9428  ld([0x87],Y)                    #77, spriteData
              2044 caac  st   [y,$ac]     9429  st([Y,0xAC])                    #78, save back5
              2045 09ad  ld   [y,$ad]     9430  ld([Y,0xAD])                    #79, load pixel5
              2046 1585  ld   [$85],y     9431  ld([0x85],Y)                    #80, spriteY
              2047 ec4a  bne  $204a       9432  bne(pc()+3)                     #81, colourkey
              2048 fc4b  bra  $204b       9433  bra(pc()+3)                     #82,
              2049 0d00  ld   [y,x]       9434  ld([Y,X])                       #83,
              204a 0200  nop              9435  nop()                           #83, (!)
              204b de00  st   [y,x++]     9436  st([Y,Xpp])                     #84, draw pixel5
                                          9437
              204c 0d00  ld   [y,x]       9438  ld([Y,X])                       #85, get back6
              204d 1587  ld   [$87],y     9439  ld([0x87],Y)                    #86, spriteData
              204e caae  st   [y,$ae]     9440  st([Y,0xAE])                    #87, save back6
              204f 09af  ld   [y,$af]     9441  ld([Y,0xAF])                    #88, load pixel6
              2050 1585  ld   [$85],y     9442  ld([0x85],Y)                    #89, spriteY
              2051 ec54  bne  $2054       9443  bne(pc()+3)                     #90, colourkey
              2052 fc55  bra  $2055       9444  bra(pc()+3)                     #91,
              2053 0d00  ld   [y,x]       9445  ld([Y,X])                       #92,
              2054 0200  nop              9446  nop()                           #92, (!)
              2055 de00  st   [y,x++]     9447  st([Y,Xpp])                     #93, draw pixel6
                                          9448
              2056 0d00  ld   [y,x]       9449  ld([Y,X])                       #94, get back7
              2057 1587  ld   [$87],y     9450  ld([0x87],Y)                    #95, spriteData
              2058 cab0  st   [y,$b0]     9451  st([Y,0xB0])                    #96, save back7
              2059 09b1  ld   [y,$b1]     9452  ld([Y,0xB1])                    #97, load pixel7
              205a 1585  ld   [$85],y     9453  ld([0x85],Y)                    #98, spriteY
              205b ec5e  bne  $205e       9454  bne(pc()+3)                     #99, colourkey
              205c fc5f  bra  $205f       9455  bra(pc()+3)                     #100,
              205d 0d00  ld   [y,x]       9456  ld([Y,X])                       #101,
              205e 0200  nop              9457  nop()                           #101, (!)
              205f de00  st   [y,x++]     9458  st([Y,Xpp])                     #102, draw pixel7
                                          9459
              2060 0d00  ld   [y,x]       9460  ld([Y,X])                       #103, get back8
              2061 1587  ld   [$87],y     9461  ld([0x87],Y)                    #104, spriteData
              2062 cab2  st   [y,$b2]     9462  st([Y,0xB2])                    #105, save back8
              2063 09b3  ld   [y,$b3]     9463  ld([Y,0xB3])                    #106, load pixel8
              2064 1585  ld   [$85],y     9464  ld([0x85],Y)                    #107, spriteY
              2065 ec68  bne  $2068       9465  bne(pc()+3)                     #108, colourkey
              2066 fc69  bra  $2069       9466  bra(pc()+3)                     #109,
              2067 0d00  ld   [y,x]       9467  ld([Y,X])                       #110,
              2068 0200  nop              9468  nop()                           #110, (!)
              2069 de00  st   [y,x++]     9469  st([Y,Xpp])                     #111, draw pixel8
                                          9470
              206a 1587  ld   [$87],y     9471  ld([0x87],Y)                    #112, spriteData
              206b 0184  ld   [$84]       9472  ld([0x84])                      #113, spriteX
              206c caa0  st   [y,$a0]     9473  st([Y,0xA0])                    #114, spriteOldX
              206d 0185  ld   [$85]       9474  ld([0x85])                      #115, spriteY
              206e caa1  st   [y,$a1]     9475  st([Y,0xA1])                    #116, spriteOldY
              206f 0186  ld   [$86]       9476  ld([0x86])                      #117,
              2070 a001  suba $01         9477  suba(1)                         #118,
              2071 c286  st   [$86]       9478  st([0x86])                      #119, scanLines--
                                          9479  beq('.sys_drawspriteh_122')     #120,
              2072 f07f  beq  .sys_drawspriteh_122
              2073 0183  ld   [$83]       9480  ld([0x83])                      #121, spriteY
              2074 8001  adda $01         9481  adda(1)                         #122,
              2075 c283  st   [$83]       9482  st([0x83])                      #123, spriteY++
              2076 0187  ld   [$87]       9483  ld([0x87])                      #124,
              2077 8001  adda $01         9484  adda(1)                         #125,
              2078 c287  st   [$87]       9485  st([0x87])                      #126, spriteData++
              2079 0116  ld   [$16]       9486  ld([vPC])                       #127,
              207a a002  suba $02         9487  suba(2)                         #128,
              207b c216  st   [$16]       9488  st([vPC])                       #129, restart
              207c 1403  ld   $03,y       9489  ld(hi('NEXTY'),Y)               #130,
              207d e000  jmp  y,$00       9490  jmp(Y,'NEXTY')                  #131,
              207e 00bd  ld   $bd         9491  ld(-134/2)                      #132,
                                          9492
                                          9493  label('.sys_drawspriteh_122')
.sys_drawspriteh_122:
              207f 01a0  ld   [$a0]       9494  ld([0xA0])                      #122,
              2080 8004  adda $04         9495  adda(4)                         #123,
              2081 d2a0  st   [$a0],x     9496  st([0xA0],X)                    #124, register15 += 4
              2082 15a1  ld   [$a1],y     9497  ld([0xA1],Y)                    #125,
              2083 0d00  ld   [y,x]       9498  ld([Y,X])                       #126, peek(register15 + 0)
              2084 c282  st   [$82]       9499  st([0x82])                      #127, spriteX
              2085 de00  st   [y,x++]     9500  st([Y,Xpp])                     #128, X++
              2086 0d00  ld   [y,x]       9501  ld([Y,X])                       #129, peek(register15 + 1)
              2087 c283  st   [$83]       9502  st([0x83])                      #130, spriteY
              2088 de00  st   [y,x++]     9503  st([Y,Xpp])                     #131, X++
              2089 0d00  ld   [y,x]       9504  ld([Y,X])                       #132, peek(register15 + 2)
              208a c286  st   [$86]       9505  st([0x86])                      #133, spriteHeight
              208b de00  st   [y,x++]     9506  st([Y,Xpp])                     #134, X++
              208c 0d00  ld   [y,x]       9507  ld([Y,X])                       #135, peek(register15 + 3)
              208d c287  st   [$87]       9508  st([0x87])                      #136, spriteData
              208e 0188  ld   [$88]       9509  ld([0x88])                      #137,
              208f a001  suba $01         9510  suba(1)                         #138,
              2090 c288  st   [$88]       9511  st([0x88])                      #139, register3--, spriteCount
                                          9512  beq('.sys_drawspriteh_142')     #140,
              2091 f098  beq  .sys_drawspriteh_142
              2092 0116  ld   [$16]       9513  ld([vPC])                       #141,
              2093 a002  suba $02         9514  suba(2)                         #142,
              2094 c216  st   [$16]       9515  st([vPC])                       #143, restart
              2095 1403  ld   $03,y       9516  ld(hi('NEXTY'),Y)               #144,
              2096 e000  jmp  y,$00       9517  jmp(Y,'NEXTY')                  #145,
              2097 00b6  ld   $b6         9518  ld(-148/2)                      #146,
                                          9519  label('.sys_drawspriteh_142')
.sys_drawspriteh_142:
              2098 1403  ld   $03,y       9520  ld(hi('NEXTY'),Y)               #142,
              2099 e000  jmp  y,$00       9521  jmp(Y,'NEXTY')                  #143,
              209a 00b7  ld   $b7         9522  ld(-146/2)                      #144,
                                          9523
                                          9524  label('.sys_drawspriteh_18')
.sys_drawspriteh_18:
              209b 01a0  ld   [$a0]       9525  ld([0xA0])                      #18,
              209c 8004  adda $04         9526  adda(4)                         #19,
              209d d2a0  st   [$a0],x     9527  st([0xA0],X)                    #20, register15 += 4
              209e 15a1  ld   [$a1],y     9528  ld([0xA1],Y)                    #21,
              209f 0d00  ld   [y,x]       9529  ld([Y,X])                       #22, peek(register15 + 0)
              20a0 c282  st   [$82]       9530  st([0x82])                      #23, spriteX
              20a1 de00  st   [y,x++]     9531  st([Y,Xpp])                     #24, X++
              20a2 0d00  ld   [y,x]       9532  ld([Y,X])                       #25, peek(register15 + 1)
              20a3 c283  st   [$83]       9533  st([0x83])                      #26, spriteY
              20a4 de00  st   [y,x++]     9534  st([Y,Xpp])                     #27, X++
              20a5 0d00  ld   [y,x]       9535  ld([Y,X])                       #28, peek(register15 + 2)
              20a6 c286  st   [$86]       9536  st([0x86])                      #29, spriteHeight
              20a7 de00  st   [y,x++]     9537  st([Y,Xpp])                     #30, X++
              20a8 0d00  ld   [y,x]       9538  ld([Y,X])                       #31, peek(register15 + 3)
              20a9 c287  st   [$87]       9539  st([0x87])                      #32, spriteData
              20aa 0188  ld   [$88]       9540  ld([0x88])                      #33,
              20ab a001  suba $01         9541  suba(1)                         #34,
              20ac c288  st   [$88]       9542  st([0x88])                      #35, register3--, spriteCount
                                          9543  beq('.sys_drawspriteh_38')      #36,
              20ad f0b4  beq  .sys_drawspriteh_38
              20ae 0116  ld   [$16]       9544  ld([vPC])                       #37,
              20af a002  suba $02         9545  suba(2)                         #38,
              20b0 c216  st   [$16]       9546  st([vPC])                       #39, restart
              20b1 1403  ld   $03,y       9547  ld(hi('NEXTY'),Y)               #40,
              20b2 e000  jmp  y,$00       9548  jmp(Y,'NEXTY')                  #41,
              20b3 00ea  ld   $ea         9549  ld(-44/2)                       #42,
                                          9550  label('.sys_drawspriteh_38')
.sys_drawspriteh_38:
              20b4 1403  ld   $03,y       9551  ld(hi('NEXTY'),Y)               #38,
              20b5 e000  jmp  y,$00       9552  jmp(Y,'NEXTY')                  #39,
              20b6 00eb  ld   $eb         9553  ld(-42/2)                       #40,
                                          9554
                                          9555
              20b7 0200  nop              9556  fillers(until=0xc0)
              20b8 0200  nop
              20b9 0200  nop
              * 9 times
                                          9557
                                          9558  # SYS_ScrollVTableY_vX_38, sysArgs0=scrollOffset, sysArgs1=scanCount, sysArgs2,3=videoTable
                                          9559  label('SYS_ScrollVTableY_vX_38')
SYS_ScrollVTableY_vX_38:
              20c0 0125  ld   [$25]       9560  ld([sysArgs+1])                 #15,
              20c1 a001  suba $01         9561  suba(1)                         #16,
              20c2 c225  st   [$25]       9562  st([sysArgs+1])                 #17, scanCount--
                                          9563  bge('.sys_scrollvty_20')        #18,
              20c3 f4c8  bge  .sys_scrollvty_20
              20c4 1527  ld   [$27],y     9564  ld([sysArgs+3],Y)               #19, VTable.hi
              20c5 1403  ld   $03,y       9565  ld(hi('NEXTY'),Y)               #20,
              20c6 e000  jmp  y,$00       9566  jmp(Y,'NEXTY')                  #21,
              20c7 00f4  ld   $f4         9567  ld(-24/2)                       #22,
                                          9568  label('.sys_scrollvty_20')
.sys_scrollvty_20:
              20c8 1126  ld   [$26],x     9569  ld([sysArgs+2],X)               #20, VTable.low
              20c9 0d00  ld   [y,x]       9570  ld([Y,X])                       #21, scanline = peek [VTable]
              20ca 8124  adda [$24]       9571  adda([sysArgs+0])               #22, scanline += scrollOffset
              20cb a07f  suba $7f         9572  suba(0x7f)                      #23, scanline -= 0x7f
                                          9573  ble('.sys_scrollvty_26')        #24,
              20cc f8d9  ble  .sys_scrollvty_26
              20cd 807f  adda $7f         9574  adda(0x7F)                      #25, original scanline
              20ce 8088  adda $88         9575  adda(0x88)                      #26, overflow into the range 0x08 to 0x7f
              20cf ce00  st   [y,x]       9576  st([Y,X])                       #27,
              20d0 0126  ld   [$26]       9577  ld([sysArgs+2])                 #28,
              20d1 8002  adda $02         9578  adda(2)                         #29,
              20d2 c226  st   [$26]       9579  st([sysArgs+2])                 #30,
              20d3 0116  ld   [$16]       9580  ld([vPC])                       #31,
              20d4 a002  suba $02         9581  suba(2)                         #32,
              20d5 c216  st   [$16]       9582  st([vPC])                       #33, restart
              20d6 1403  ld   $03,y       9583  ld(hi('NEXTY'),Y)               #34,
              20d7 e000  jmp  y,$00       9584  jmp(Y,'NEXTY')                  #35,
              20d8 00ed  ld   $ed         9585  ld(-38/2)                       #36,
                                          9586
                                          9587  label('.sys_scrollvty_26')
.sys_scrollvty_26:
              20d9 ce00  st   [y,x]       9588  st([Y,X])                       #26,
              20da 0126  ld   [$26]       9589  ld([sysArgs+2])                 #27,
              20db 8002  adda $02         9590  adda(2)                         #28,
              20dc c226  st   [$26]       9591  st([sysArgs+2])                 #29,
              20dd 0116  ld   [$16]       9592  ld([vPC])                       #30,
              20de a002  suba $02         9593  suba(2)                         #31,
              20df c216  st   [$16]       9594  st([vPC])                       #32, restart
              20e0 1403  ld   $03,y       9595  ld(hi('REENTER'),Y)             #33,
              20e1 e0cb  jmp  y,$cb       9596  jmp(Y,'REENTER')                #34,
              20e2 00ed  ld   $ed         9597  ld(-38/2)                       #35,
                                          9598
                                          9599
              20e3 0200  nop              9600  fillers(until=0xff)
              20e4 0200  nop
              20e5 0200  nop
              * 28 times
              20ff 0200  nop              9601  align(0x100, size=0x100)
                                          9602
                                          9603  #-----------------------------------------------------------------------
                                          9604  #       More sys implementations, (0x2100)
                                          9605  #-----------------------------------------------------------------------
                                          9606  # SYS_RestoreSprite_vX_126
                                          9607  label('SYS_RestoreSprite_vX_126')
SYS_RestoreSprite_vX_126:
              2100 0186  ld   [$86]       9608  ld([0x86])                      #15, spriteEnable
                                          9609  bmi('.sys_restoresprite_18')    #16,
              2101 e877  blt  .sys_restoresprite_18
              2102 1587  ld   [$87],y     9610  ld([0x87],Y)                    #17, spriteData
              2103 09a0  ld   [y,$a0]     9611  ld([Y,0xA0])                    #18, spriteOldX
              2104 1200  ld   ac,x        9612  ld(AC,X)                        #19,
              2105 09a1  ld   [y,$a1]     9613  ld([Y,0xA1])                    #20, spriteOldY
              2106 c21d  st   [$1d]       9614  st([vTmp])                      #21,
                                          9615
              2107 09a2  ld   [y,$a2]     9616  ld([Y,0xA2])                    #22, load back0
              2108 151d  ld   [$1d],y     9617  ld([vTmp],Y)                    #23, spriteOldY
              2109 de00  st   [y,x++]     9618  st([Y,Xpp])                     #24, restore back0
                                          9619
              210a 1587  ld   [$87],y     9620  ld([0x87],Y)                    #25, spriteData
              210b 09a4  ld   [y,$a4]     9621  ld([Y,0xA4])                    #26, load back1
              210c 151d  ld   [$1d],y     9622  ld([vTmp],Y)                    #27, spriteOldY
              210d de00  st   [y,x++]     9623  st([Y,Xpp])                     #28, restore back1
                                          9624
              210e 1587  ld   [$87],y     9625  ld([0x87],Y)                    #29, spriteData
              210f 09a6  ld   [y,$a6]     9626  ld([Y,0xA6])                    #30, load back2
              2110 151d  ld   [$1d],y     9627  ld([vTmp],Y)                    #31, spriteOldY
              2111 de00  st   [y,x++]     9628  st([Y,Xpp])                     #32, restore back2
                                          9629
              2112 1587  ld   [$87],y     9630  ld([0x87],Y)                    #33, spriteData
              2113 09a8  ld   [y,$a8]     9631  ld([Y,0xA8])                    #34, load back3
              2114 151d  ld   [$1d],y     9632  ld([vTmp],Y)                    #35, spriteOldY
              2115 de00  st   [y,x++]     9633  st([Y,Xpp])                     #36, restore back3
                                          9634
              2116 1587  ld   [$87],y     9635  ld([0x87],Y)                    #37, spriteData
              2117 09aa  ld   [y,$aa]     9636  ld([Y,0xAA])                    #38, load back4
              2118 151d  ld   [$1d],y     9637  ld([vTmp],Y)                    #39, spriteOldY
              2119 de00  st   [y,x++]     9638  st([Y,Xpp])                     #40, restore back4
                                          9639
              211a 1587  ld   [$87],y     9640  ld([0x87],Y)                    #41, spriteData
              211b 09ac  ld   [y,$ac]     9641  ld([Y,0xAC])                    #42, load back5
              211c 151d  ld   [$1d],y     9642  ld([vTmp],Y)                    #43, spriteOldY
              211d de00  st   [y,x++]     9643  st([Y,Xpp])                     #44, restore back5
                                          9644
              211e 1587  ld   [$87],y     9645  ld([0x87],Y)                    #45, spriteData
              211f 09ae  ld   [y,$ae]     9646  ld([Y,0xAE])                    #46, load back6
              2120 151d  ld   [$1d],y     9647  ld([vTmp],Y)                    #47, spriteOldY
              2121 de00  st   [y,x++]     9648  st([Y,Xpp])                     #48, restore back6
                                          9649
              2122 1587  ld   [$87],y     9650  ld([0x87],Y)                    #49, spriteData
              2123 09b0  ld   [y,$b0]     9651  ld([Y,0xB0])                    #50, load back7
              2124 151d  ld   [$1d],y     9652  ld([vTmp],Y)                    #51, spriteOldY
              2125 de00  st   [y,x++]     9653  st([Y,Xpp])                     #52, restore back7
                                          9654
              2126 1587  ld   [$87],y     9655  ld([0x87],Y)                    #53, spriteData
              2127 09b2  ld   [y,$b2]     9656  ld([Y,0xB2])                    #54, load back8
              2128 151d  ld   [$1d],y     9657  ld([vTmp],Y)                    #55, spriteOldY
              2129 de00  st   [y,x++]     9658  st([Y,Xpp])                     #56, restore back8
                                          9659
              212a 0187  ld   [$87]       9660  ld([0x87])                      #57,
              212b 8001  adda $01         9661  adda(1)                         #58,
              212c d687  st   [$87],y     9662  st([0x87],Y)                    #59, spriteData++
                                          9663
              212d 09a0  ld   [y,$a0]     9664  ld([Y,0xA0])                    #60, spriteOldX
              212e 1200  ld   ac,x        9665  ld(AC,X)                        #61,
              212f 09a1  ld   [y,$a1]     9666  ld([Y,0xA1])                    #62, spriteOldY
              2130 c21d  st   [$1d]       9667  st([vTmp])                      #63,
                                          9668
              2131 09a2  ld   [y,$a2]     9669  ld([Y,0xA2])                    #64, load back0
              2132 151d  ld   [$1d],y     9670  ld([vTmp],Y)                    #65, spriteOldY
              2133 de00  st   [y,x++]     9671  st([Y,Xpp])                     #66, restore back0
                                          9672
              2134 1587  ld   [$87],y     9673  ld([0x87],Y)                    #67, spriteData
              2135 09a4  ld   [y,$a4]     9674  ld([Y,0xA4])                    #68, load back1
              2136 151d  ld   [$1d],y     9675  ld([vTmp],Y)                    #69, spriteOldY
              2137 de00  st   [y,x++]     9676  st([Y,Xpp])                     #70, restore back1
                                          9677
              2138 1587  ld   [$87],y     9678  ld([0x87],Y)                    #71, spriteData
              2139 09a6  ld   [y,$a6]     9679  ld([Y,0xA6])                    #72, load back2
              213a 151d  ld   [$1d],y     9680  ld([vTmp],Y)                    #73, spriteOldY
              213b de00  st   [y,x++]     9681  st([Y,Xpp])                     #74, restore back2
                                          9682
              213c 1587  ld   [$87],y     9683  ld([0x87],Y)                    #75, spriteData
              213d 09a8  ld   [y,$a8]     9684  ld([Y,0xA8])                    #76, load back3
              213e 151d  ld   [$1d],y     9685  ld([vTmp],Y)                    #77, spriteOldY
              213f de00  st   [y,x++]     9686  st([Y,Xpp])                     #78, restore back3
                                          9687
              2140 1587  ld   [$87],y     9688  ld([0x87],Y)                    #79, spriteData
              2141 09aa  ld   [y,$aa]     9689  ld([Y,0xAA])                    #80, load back4
              2142 151d  ld   [$1d],y     9690  ld([vTmp],Y)                    #81, spriteOldY
              2143 de00  st   [y,x++]     9691  st([Y,Xpp])                     #82, restore back4
                                          9692
              2144 1587  ld   [$87],y     9693  ld([0x87],Y)                    #83, spriteData
              2145 09ac  ld   [y,$ac]     9694  ld([Y,0xAC])                    #84, load back5
              2146 151d  ld   [$1d],y     9695  ld([vTmp],Y)                    #85, spriteOldY
              2147 de00  st   [y,x++]     9696  st([Y,Xpp])                     #86, restore back5
                                          9697
              2148 1587  ld   [$87],y     9698  ld([0x87],Y)                    #87, spriteData
              2149 09ae  ld   [y,$ae]     9699  ld([Y,0xAE])                    #88, load back6
              214a 151d  ld   [$1d],y     9700  ld([vTmp],Y)                    #89, spriteOldY
              214b de00  st   [y,x++]     9701  st([Y,Xpp])                     #90, restore back6
                                          9702
              214c 1587  ld   [$87],y     9703  ld([0x87],Y)                    #91, spriteData
              214d 09b0  ld   [y,$b0]     9704  ld([Y,0xB0])                    #92, load back7
              214e 151d  ld   [$1d],y     9705  ld([vTmp],Y)                    #93, spriteOldY
              214f de00  st   [y,x++]     9706  st([Y,Xpp])                     #94, restore back7
                                          9707
              2150 1587  ld   [$87],y     9708  ld([0x87],Y)                    #95, spriteData
              2151 09b2  ld   [y,$b2]     9709  ld([Y,0xB2])                    #96, load back8
              2152 151d  ld   [$1d],y     9710  ld([vTmp],Y)                    #97, spriteOldY
              2153 de00  st   [y,x++]     9711  st([Y,Xpp])                     #98, restore back8
                                          9712
              2154 0186  ld   [$86]       9713  ld([0x86])                      #99,
              2155 a002  suba $02         9714  suba(2)                         #100,
              2156 c286  st   [$86]       9715  st([0x86])                      #101, scanLines -= 2
                                          9716  beq('.sys_restoresprite_104')   #102,
              2157 f061  beq  .sys_restoresprite_104
              2158 0187  ld   [$87]       9717  ld([0x87])                      #103,
              2159 8001  adda $01         9718  adda(1)                         #104,
              215a c287  st   [$87]       9719  st([0x87])                      #105, spriteData++
              215b 0116  ld   [$16]       9720  ld([vPC])                       #106,
              215c a002  suba $02         9721  suba(2)                         #107,
              215d c216  st   [$16]       9722  st([vPC])                       #108, restart
              215e 1403  ld   $03,y       9723  ld(hi('REENTER'),Y)             #109,
              215f e0cb  jmp  y,$cb       9724  jmp(Y,'REENTER')                #110,
              2160 00c7  ld   $c7         9725  ld(-114/2)                      #111,
                                          9726  label('.sys_restoresprite_104')
.sys_restoresprite_104:
              2161 01a0  ld   [$a0]       9727  ld([0xA0])                      #104,
              2162 a004  suba $04         9728  suba(4)                         #105,
              2163 d2a0  st   [$a0],x     9729  st([0xA0],X)                    #106, register15 -= 4
              2164 15a1  ld   [$a1],y     9730  ld([0xA1],Y)                    #107,
              2165 0d00  ld   [y,x]       9731  ld([Y,X])                       #108, peek(register15 + 2)
              2166 c286  st   [$86]       9732  st([0x86])                      #109, spriteHeight
              2167 de00  st   [y,x++]     9733  st([Y,Xpp])                     #110, X++
              2168 0d00  ld   [y,x]       9734  ld([Y,X])                       #111, peek(register15 + 3)
              2169 c287  st   [$87]       9735  st([0x87])                      #112, spriteData
              216a 0188  ld   [$88]       9736  ld([0x88])                      #113,
              216b a001  suba $01         9737  suba(1)                         #114,
              216c c288  st   [$88]       9738  st([0x88])                      #115, numSprites--
                                          9739  beq('.sys_restoresprite_118')   #116,
              216d f074  beq  .sys_restoresprite_118
              216e 0116  ld   [$16]       9740  ld([vPC])                       #117,
              216f a002  suba $02         9741  suba(2)                         #118,
              2170 c216  st   [$16]       9742  st([vPC])                       #119, restart
              2171 1403  ld   $03,y       9743  ld(hi('NEXTY'),Y)               #120,
              2172 e000  jmp  y,$00       9744  jmp(Y,'NEXTY')                  #121,
              2173 00c2  ld   $c2         9745  ld(-124/2)                      #122,
                                          9746  label('.sys_restoresprite_118')
.sys_restoresprite_118:
              2174 1403  ld   $03,y       9747  ld(hi('NEXTY'),Y)               #118,
              2175 e000  jmp  y,$00       9748  jmp(Y,'NEXTY')                  #119,
              2176 00c3  ld   $c3         9749  ld(-122/2)                      #120,
                                          9750
                                          9751  label('.sys_restoresprite_18')
.sys_restoresprite_18:
              2177 01a0  ld   [$a0]       9752  ld([0xA0])                      #18,
              2178 a004  suba $04         9753  suba(4)                         #19,
              2179 d2a0  st   [$a0],x     9754  st([0xA0],X)                    #20, register15 -= 4
              217a 15a1  ld   [$a1],y     9755  ld([0xA1],Y)                    #21,
              217b 0d00  ld   [y,x]       9756  ld([Y,X])                       #22, peek(register15 + 2)
              217c c286  st   [$86]       9757  st([0x86])                      #23, spriteHeight
              217d de00  st   [y,x++]     9758  st([Y,Xpp])                     #24, X++
              217e 0d00  ld   [y,x]       9759  ld([Y,X])                       #25, peek(register15 + 3)
              217f c287  st   [$87]       9760  st([0x87])                      #26, spriteData
              2180 0188  ld   [$88]       9761  ld([0x88])                      #27,
              2181 a001  suba $01         9762  suba(1)                         #28,
              2182 c288  st   [$88]       9763  st([0x88])                      #29, numSprites--
                                          9764  beq('.sys_restoresprite_32')    #30,
              2183 f08a  beq  .sys_restoresprite_32
              2184 0116  ld   [$16]       9765  ld([vPC])                       #31,
              2185 a002  suba $02         9766  suba(2)                         #32,
              2186 c216  st   [$16]       9767  st([vPC])                       #33, restart
              2187 1403  ld   $03,y       9768  ld(hi('NEXTY'),Y)               #34,
              2188 e000  jmp  y,$00       9769  jmp(Y,'NEXTY')                  #35,
              2189 00ed  ld   $ed         9770  ld(-38/2)                       #36,
                                          9771  label('.sys_restoresprite_32')
.sys_restoresprite_32:
              218a 1403  ld   $03,y       9772  ld(hi('NEXTY'),Y)               #32,
              218b e000  jmp  y,$00       9773  jmp(Y,'NEXTY')                  #33,
              218c 00ee  ld   $ee         9774  ld(-36/2)                       #34,
                                          9775
                                          9776
              218d 0200  nop              9777  fillers(until=0xa0)
              218e 0200  nop
              218f 0200  nop
              * 19 times
                                          9778
                                          9779  # SYS_ScrollRectVTableY_vX_44, sysArgs0=scrollOffset, sysArgs1=scanCount, sysArgs2,3=videoTable,
                                          9780  #                              sysArgs4,5=scrollStart,scrollEnd
                                          9781  label('SYS_ScrollRectVTableY_vX_44')
SYS_ScrollRectVTableY_vX_44:
              21a0 0125  ld   [$25]       9782  ld([sysArgs+1])                 #15,
              21a1 a001  suba $01         9783  suba(1)                         #16,
              21a2 c225  st   [$25]       9784  st([sysArgs+1])                 #17, scanCount--
                                          9785  bge('.sys_scrollrectvty_20')    #18,
              21a3 f4a8  bge  .sys_scrollrectvty_20
              21a4 1527  ld   [$27],y     9786  ld([sysArgs+3],Y)               #19, VTable.hi
              21a5 1403  ld   $03,y       9787  ld(hi('NEXTY'),Y)               #20,
              21a6 e000  jmp  y,$00       9788  jmp(Y,'NEXTY')                  #21,
              21a7 00f4  ld   $f4         9789  ld(-24/2)                       #22,
                                          9790  label('.sys_scrollrectvty_20')
.sys_scrollrectvty_20:
              21a8 1126  ld   [$26],x     9791  ld([sysArgs+2],X)               #20, VTable.low
              21a9 0d00  ld   [y,x]       9792  ld([Y,X])                       #21, scanline = peek [VTable]
              21aa 8124  adda [$24]       9793  adda([sysArgs+0])               #22, scanline += scrollOffset
              21ab c21d  st   [$1d]       9794  st([vTmp])                      #23,
              21ac a128  suba [$28]       9795  suba([sysArgs+4])               #24,
                                          9796  bge('.sys_scrollrectvty_27')    #25,
              21ad f4b9  bge  .sys_scrollrectvty_27
              21ae 8129  adda [$29]       9797  adda([sysArgs+5])               #26,
              21af ce00  st   [y,x]       9798  st([Y,X])                       #27,
              21b0 0126  ld   [$26]       9799  ld([sysArgs+2])                 #28,
              21b1 8002  adda $02         9800  adda(2)                         #29,
              21b2 c226  st   [$26]       9801  st([sysArgs+2])                 #30,
              21b3 0116  ld   [$16]       9802  ld([vPC])                       #31,
              21b4 a002  suba $02         9803  suba(2)                         #32,
              21b5 c216  st   [$16]       9804  st([vPC])                       #33, restart
              21b6 1403  ld   $03,y       9805  ld(hi('NEXTY'),Y)               #34,
              21b7 e000  jmp  y,$00       9806  jmp(Y,'NEXTY')                  #35,
              21b8 00ed  ld   $ed         9807  ld(-38/2)                       #36,
                                          9808
                                          9809  label('.sys_scrollrectvty_27')
.sys_scrollrectvty_27:
              21b9 011d  ld   [$1d]       9810  ld([vTmp])                      #27,
              21ba a129  suba [$29]       9811  suba([sysArgs+5])               #28,
                                          9812  blt('.sys_scrollrectvty_31')    #29,
              21bb e8c7  blt  .sys_scrollrectvty_31
              21bc 8128  adda [$28]       9813  adda([sysArgs+4])               #30,
              21bd ce00  st   [y,x]       9814  st([Y,X])                       #31,
              21be 0126  ld   [$26]       9815  ld([sysArgs+2])                 #32,
              21bf 8002  adda $02         9816  adda(2)                         #33,
              21c0 c226  st   [$26]       9817  st([sysArgs+2])                 #34,
              21c1 0116  ld   [$16]       9818  ld([vPC])                       #35,
              21c2 a002  suba $02         9819  suba(2)                         #36,
              21c3 c216  st   [$16]       9820  st([vPC])                       #37, restart
              21c4 1403  ld   $03,y       9821  ld(hi('NEXTY'),Y)               #38,
              21c5 e000  jmp  y,$00       9822  jmp(Y,'NEXTY')                  #39,
              21c6 00eb  ld   $eb         9823  ld(-42/2)                       #40,
                                          9824
                                          9825  label('.sys_scrollrectvty_31')
.sys_scrollrectvty_31:
              21c7 011d  ld   [$1d]       9826  ld([vTmp])                      #31,
              21c8 ce00  st   [y,x]       9827  st([Y,X])                       #32,
              21c9 0126  ld   [$26]       9828  ld([sysArgs+2])                 #33,
              21ca 8002  adda $02         9829  adda(2)                         #34,
              21cb c226  st   [$26]       9830  st([sysArgs+2])                 #35,
              21cc 0116  ld   [$16]       9831  ld([vPC])                       #36,
              21cd a002  suba $02         9832  suba(2)                         #37,
              21ce c216  st   [$16]       9833  st([vPC])                       #38, restart
              21cf 1403  ld   $03,y       9834  ld(hi('REENTER'),Y)             #39,
              21d0 e0cb  jmp  y,$cb       9835  jmp(Y,'REENTER')                #40,
              21d1 00ea  ld   $ea         9836  ld(-44/2)                       #41,
                                          9837
                                          9838
              21d2 0200  nop              9839  fillers(until=0xff)
              21d3 0200  nop
              21d4 0200  nop
              * 45 times
                                          9840
                                          9841  #-----------------------------------------------------------------------
                                          9842  #       PREFX3 instruction page, (0x2200), PREFIX ARG1 OPCODE ARG0
                                          9843  #-----------------------------------------------------------------------
                                          9844  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2099#p2099
                                          9845  #
                                          9846  label('PREFX3_PAGE')
PREFX3_PAGE:  21ff fc03  bra  $2203       9847  bra('.next2')                   #0 Enter at '.next2' (so no startup overhead)
                                          9848  # --- Page boundary ---
                                          9849  align(0x100,size=0x100)
              2200 1517  ld   [$17],y     9850  ld([vPC+1],Y)                   #1
                                          9851
                                          9852  # Fetch next instruction and execute it, but only if there are sufficient
                                          9853  # ticks left for the slowest instruction.
              2201 8115  adda [$15]       9854  adda([vTicks])                  #0 Track elapsed ticks (actually counting down: AC<0)
              2202 e80b  blt  $220b       9855  blt('EXIT')                     #1 Escape near time out
              2203 c215  st   [$15]       9856  st([vTicks])                    #2
              2204 1116  ld   [$16],x     9857  ld([vPC],X)                     #3 PREFIX+ARG1 is 2 bytes, vPC has been incremented by 2
              2205 0200  nop              9858  nop()                           #4
              2206 c002  st   $02,[$02]   9859  st(vCpuSelect,[vCpuSelect])     #5 Reset to default vCPU page
              2207 0d00  ld   [y,x]       9860  ld([Y,X])                       #6 Fetch opcode (actually a branch target)
              2208 de00  st   [y,x++]     9861  st([Y,Xpp])                     #7 Just X++
              2209 fe00  bra  ac          9862  bra(AC)                         #8 Dispatch
              220a 0d00  ld   [y,x]       9863  ld([Y,X])                       #9 Prefetch operand
                                          9864
                                          9865  # Resync with video driver and transfer control
              220b 800f  adda $0f         9866  adda(maxTicks)                  #3
              220c e40c  bgt  $220c       9867  bgt(pc()&255)                   #4 Resync
              220d a001  suba $01         9868  suba(1)                         #5
              220e 1401  ld   $01,y       9869  ld(hi('vBlankStart'),Y)         #6
              220f e11e  jmp  y,[$1e]     9870  jmp(Y,[vReturn])                #7 To video driver
              2210 0000  ld   $00         9871  ld(0)                           #8 AC should be 0 already. Still..
                                          9872  assert vCPU_overhead ==          9
                                          9873
                                          9874  # pc = 0x2211, Opcode = 0x11
                                          9875  # Instruction STB2: Store vAC.lo into 16bit immediate address, 22 + 20 cycles
                                          9876  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2135#p2135
                                          9877  label('STB2')
STB2:         2211 1425  ld   $25,y       9878  ld(hi('stb2#13'),Y)             #10
              2212 e000  jmp  y,$00       9879  jmp(Y,'stb2#13')                #11
              2213 1200  ld   ac,x        9880  ld(AC,X)                        #12
                                          9881
                                          9882  # pc = 0x2214, Opcode = 0x14
                                          9883  # Instruction STW2: Store vAC into 16bit immediate address, 22 + 22 cycles
                                          9884  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2135#p2135
                                          9885  label('STW2')
STW2:         2214 1425  ld   $25,y       9886  ld(hi('stw2#13'),Y)             #10
              2215 e006  jmp  y,$06       9887  jmp(Y,'stw2#13')                #11
              2216 1200  ld   ac,x        9888  ld(AC,X)                        #12
                                          9889
                                          9890  # pc = 0x2217, Opcode = 0x17
                                          9891  # Instruction XCHGB: Exchange two zero byte variables, 22 + 28 cycles
                                          9892  label('XCHGB')
XCHGB:        2217 1425  ld   $25,y       9893  ld(hi('xchgb#13'),Y)            #10
              2218 e00e  jmp  y,$0e       9894  jmp(Y,'xchgb#13')               #11
                                          9895  # dummy                         #12
                                          9896  #
                                          9897  # pc = 0x2219, Opcode = 0x19
                                          9898  # Instruction MOVW: Move 16bits from src zero page var to dst zero page var, 22 + 30 cycles
                                          9899  label('MOVW')
MOVW:         2219 1425  ld   $25,y       9900  ld(hi('movw#13'),Y)             #10
              221a e040  jmp  y,$40       9901  jmp(Y,'movw#13')                #11
                                          9902  # dummy                         #12
                                          9903  #
                                          9904  # pc = 0x221b, Opcode = 0x1b
                                          9905  # Instruction ADDWI: vAC += immediate 16bit value, 22 + 28 cycles
                                          9906  label('ADDWI')
ADDWI:        221b 1425  ld   $25,y       9907  ld(hi('addwi#13'),Y)            #10 #12
              221c e050  jmp  y,$50       9908  jmp(Y,'addwi#13')               #11
                                          9909  # dummy                         #12
                                          9910  #
                                          9911  # pc = 0x221d, Opcode = 0x1d
                                          9912  # Instruction SUBWI: vAC -= immediate 16bit value, 22 + 28 cycles
                                          9913  label('SUBWI')
SUBWI:        221d 1425  ld   $25,y       9914  ld(hi('subwi#13'),Y)            #10 #12
              221e e06b  jmp  y,$6b       9915  jmp(Y,'subwi#13')               #11
                                          9916  # dummy                         #12
                                          9917  #
                                          9918  # pc = 0x221f, Opcode = 0x1f
                                          9919  # Instruction ANDWI: vAC &= immediate 16bit value, 22 + 22 cycles
                                          9920  label('ANDWI')
ANDWI:        221f 1425  ld   $25,y       9921  ld(hi('andwi#13'),Y)            #10 #12
              2220 e083  jmp  y,$83       9922  jmp(Y,'andwi#13')               #11
                                          9923  # dummy                         #12
                                          9924  #
                                          9925  # pc = 0x2221, Opcode = 0x21
                                          9926  # Instruction ORWI: vAC |= immediate 16bit value, 22 + 22 cycles
                                          9927  label('ORWI')
ORWI:         2221 1425  ld   $25,y       9928  ld(hi('orwi#13'),Y)             #10 #12
              2222 e08b  jmp  y,$8b       9929  jmp(Y,'orwi#13')                #11
                                          9930  # dummy                         #12
                                          9931  #
                                          9932  # pc = 0x2223, Opcode = 0x23
                                          9933  # Instruction XORWI: vAC ^= immediate 16bit value, 22 + 22 cycles
                                          9934  label('XORWI')
XORWI:        2223 1425  ld   $25,y       9935  ld(hi('xorwi#13'),Y)            #10 #12
              2224 e093  jmp  y,$93       9936  jmp(Y,'xorwi#13')               #11
                                          9937  # dummy                         #12
                                          9938  #
                                          9939  # pc = 0x2225, Opcode = 0x25
                                          9940  # Instruction LDPX: Load Pixel, <address var>, <colour var>, 22 + 30 cycles
                                          9941  label('LDPX')
LDPX:         2225 1425  ld   $25,y       9942  ld(hi('ldpx#13'),Y)             #10 #12
              2226 e09b  jmp  y,$9b       9943  jmp(Y,'ldpx#13')                #11
              2227 c21d  st   [$1d]       9944  st([vTmp])                      #12
                                          9945
                                          9946  # pc = 0x2228, Opcode = 0x28
                                          9947  # Instruction STPX: Store Pixel, <address var>, <colour var>, 22 + 30 cycles
                                          9948  label('STPX')
STPX:         2228 1400  ld   $00,y       9949  ld(hi('stpx#13'),Y)             #10
              2229 e062  jmp  y,$62       9950  jmp(Y,'stpx#13')                #11
              222a 1200  ld   ac,x        9951  ld(AC,X)                        #12
                                          9952
                                          9953  # pc = 0x222b, Opcode = 0x2b
                                          9954  # Instruction CONDI: chooses immediate operand based on condition, (vAC == 0), 22 + 26 cycles
                                          9955  label('CONDI')
CONDI:        222b 1425  ld   $25,y       9956  ld(hi('condi#13'),Y)            #10
              222c e0ab  jmp  y,$ab       9957  jmp(Y,'condi#13')               #11
                                          9958  # dummy                         #12
                                          9959  #
                                          9960  # pc = 0x222d, Opcode = 0x2d
                                          9961  # Instruction CONDB: chooses zero page byte var based on condition, (vAC == 0), 22 + 26 cycles
                                          9962  label('CONDB')
CONDB:        222d 1425  ld   $25,y       9963  ld(hi('condb#13'),Y)            #10 #12
              222e e0b8  jmp  y,$b8       9964  jmp(Y,'condb#13')               #11
              222f 1200  ld   ac,x        9965  ld(AC,X)                        #12
                                          9966
                                          9967  # pc = 0x2230, Opcode = 0x30
                                          9968  # Instruction CONDIB: chooses between imm and zero page byte var based on condition, (vAC == 0), 22 + 26 cycles
                                          9969  label('CONDIB')
CONDIB:       2230 1425  ld   $25,y       9970  ld(hi('condib#13'),Y)           #10
              2231 e0c7  jmp  y,$c7       9971  jmp(Y,'condib#13')              #11
              2232 c21d  st   [$1d]       9972  st([vTmp])                      #12
                                          9973
                                          9974  # pc = 0x2233, Opcode = 0x33
                                          9975  # Instruction CONDBI: chooses between zero page byte var and imm based on condition, (vAC == 0), 22 + 26 cycles
                                          9976  label('CONDBI')
CONDBI:       2233 1425  ld   $25,y       9977  ld(hi('condbi#13'),Y)           #10
              2234 e0d4  jmp  y,$d4       9978  jmp(Y,'condbi#13')              #11
                                          9979  # dummy                         #12
                                          9980  #
                                          9981  # pc = 0x2235, Opcode = 0x35
                                          9982  # Instruction XCHGW: Exchange two zero word variables, 22 + 46 cycles
                                          9983  label('XCHGW')
XCHGW:        2235 1425  ld   $25,y       9984  ld(hi('xchgw#13'),Y)            #10 #12
              2236 e01c  jmp  y,$1c       9985  jmp(Y,'xchgw#13')               #11
              2237 c22a  st   [$2a]       9986  st([sysArgs+6])                 #12 var1
                                          9987
                                          9988  # pc = 0x2238, Opcode = 0x38
                                          9989  # Instruction OSCPX:
                                          9990  label('OSCPX')
OSCPX:        2238 1428  ld   $28,y       9991  ld(hi('oscpx#13'),Y)            #10
              2239 e073  jmp  y,$73       9992  jmp(Y,'oscpx#13')               #11
                                          9993  # dummy                         #12
                                          9994  #
                                          9995  # pc = 0x223a, Opcode = 0x3a
                                          9996  # Instruction SWAPB: Swap two bytes in memory, 22 + 46 cycles
                                          9997  label('SWAPB')
SWAPB:        223a 1429  ld   $29,y       9998  ld(hi('swapb#13'),Y)            #10 #12
              223b e093  jmp  y,$93       9999  jmp(Y,'swapb#13')               #11
              223c 1200  ld   ac,x        10000  ld(AC,X)                        #12 var1
                                          10001  #
                                          10002  # pc = 0x223d, Opcode = 0x3d
                                          10003  # Instruction SWAPW: Swap two words in memory, 22 + 58 cycles
                                          10004  label('SWAPW')
SWAPW:        223d 1429  ld   $29,y       10005  ld(hi('swapw#13'),Y)            #10
              223e e0b8  jmp  y,$b8       10006  jmp(Y,'swapw#13')               #11
              223f 1200  ld   ac,x        10007  ld(AC,X)                        #12 var1
                                          10008
                                          10009  # pc = 0x2240, Opcode = 0x40
                                          10010  # Instruction NEEKA: Peek <n> bytes from [vAC] into [var], 22 + 34*n + 24 cycles
                                          10011  label('NEEKA')
NEEKA:        2240 142a  ld   $2a,y       10012  ld(hi('neeka#13'),Y)            #10
              2241 e06e  jmp  y,$6e       10013  jmp(Y,'neeka#13')               #11
              2242 c22a  st   [$2a]       10014  st([sysArgs+6])                 #12 var
                                          10015
                                          10016  # pc = 0x2243, Opcode = 0x43
                                          10017  # Instruction NOKEA: Poke <n> bytes from [var] into [vAC], 22 + 34*n + 24 cycles
                                          10018  label('NOKEA')
NOKEA:        2243 142a  ld   $2a,y       10019  ld(hi('nokea#13'),Y)            #10
              2244 e08a  jmp  y,$8a       10020  jmp(Y,'nokea#13')               #11
              2245 c22a  st   [$2a]       10021  st([sysArgs+6])                 #12 var
                                          10022
                                          10023  # pc = 0x2246, Opcode = 0x46
                                          10024  # Instruction ADDVL: Add two 32bit zero page vars, dst += src, 22 + 78 cycles
                                          10025  label('ADDVL')
ADDVL:        2246 142b  ld   $2b,y       10026  ld(hi('addvl#13'),Y)            #10
              2247 e02f  jmp  y,$2f       10027  jmp(Y,'addvl#13')               #11
              2248 d22a  st   [$2a],x     10028  st([sysArgs+6],X)               #12 src var
                                          10029
                                          10030  # pc = 0x2249, Opcode = 0x49
                                          10031  # Instruction SUBVL: Subtract two 32bit zero page vars, dst -= src, 22 + 74 cycles
                                          10032  label('SUBVL')
SUBVL:        2249 142b  ld   $2b,y       10033  ld(hi('subvl#13'),Y)            #10
              224a e079  jmp  y,$79       10034  jmp(Y,'subvl#13')               #11
              224b d22a  st   [$2a],x     10035  st([sysArgs+6],X)               #12 src var
                                          10036
                                          10037  # pc = 0x224c, Opcode = 0x4c
                                          10038  # Instruction ANDVL: And two 32bit zero page vars, dst &= src, 22 + 46 cycles
                                          10039  label('ANDVL')
ANDVL:        224c 142b  ld   $2b,y       10040  ld(hi('andvl#13'),Y)            #10
              224d e0c5  jmp  y,$c5       10041  jmp(Y,'andvl#13')               #11
              224e 1200  ld   ac,x        10042  ld(AC,X)                        #12 src var
                                          10043
                                          10044  # pc = 0x224f, Opcode = 0x4f
                                          10045  # Instruction ORVL: Or two 32bit zero page vars, dst |= src, 22 + 46 cycles
                                          10046  label('ORVL')
ORVL:         224f 142c  ld   $2c,y       10047  ld(hi('orvl#13'),Y)             #10
              2250 e000  jmp  y,$00       10048  jmp(Y,'orvl#13')                #11
              2251 1200  ld   ac,x        10049  ld(AC,X)                        #12 src var
                                          10050
                                          10051  # pc = 0x2252, Opcode = 0x52
                                          10052  # Instruction XORVL: Xor two 32bit zero page vars, dst ^= src, 22 + 76 cycles
                                          10053  label('XORVL')
XORVL:        2252 142c  ld   $2c,y       10054  ld(hi('xorvl#13'),Y)            #10
              2253 e024  jmp  y,$24       10055  jmp(Y,'xorvl#13')               #11
              2254 1200  ld   ac,x        10056  ld(AC,X)                        #12 src var
                                          10057
                                          10058  # pc = 0x2255, Opcode = 0x55
                                          10059  # Instruction JEQL: 22 + 40 cycles
                                          10060  label('JEQL')
JEQL:         2255 142d  ld   $2d,y       10061  ld(hi('jeql#13'),Y)             #10
              2256 e000  jmp  y,$00       10062  jmp(Y,'jeql#13')                #11
              2257 c22a  st   [$2a]       10063  st([sysArgs+6])                 #12 jump.hi
                                          10064
                                          10065  # pc = 0x2258, Opcode = 0x58
                                          10066  # Instruction JNEL: 22 + 40 cycles
                                          10067  label('JNEL')
JNEL:         2258 142d  ld   $2d,y       10068  ld(hi('jnel#13'),Y)             #10
              2259 e022  jmp  y,$22       10069  jmp(Y,'jnel#13')                #11
              225a c22a  st   [$2a]       10070  st([sysArgs+6])                 #12 jump.hi
                                          10071
                                          10072  # pc = 0x225B, Opcode = 0x5B
                                          10073  # Instruction JLTL: 22 + 26 cycles
                                          10074  label('JLTL')
JLTL:         225b 142d  ld   $2d,y       10075  ld(hi('jltl#13'),Y)             #10
              225c e044  jmp  y,$44       10076  jmp(Y,'jltl#13')                #11
              225d c22a  st   [$2a]       10077  st([sysArgs+6])                 #12 jump.hi
                                          10078
                                          10079  # pc = 0x225E, Opcode = 0x5E
                                          10080  # Instruction JGTL: 22 + 42 cycles
                                          10081  label('JGTL')
JGTL:         225e 142d  ld   $2d,y       10082  ld(hi('jgtl#13'),Y)             #10
              225f e053  jmp  y,$53       10083  jmp(Y,'jgtl#13')                #11
              2260 c22a  st   [$2a]       10084  st([sysArgs+6])                 #12 jump.hi
                                          10085
                                          10086  # pc = 0x2261, Opcode = 0x61
                                          10087  # Instruction JLEL: 22 + 42 cycles
                                          10088  label('JLEL')
JLEL:         2261 142d  ld   $2d,y       10089  ld(hi('jlel#13'),Y)             #10
              2262 e07a  jmp  y,$7a       10090  jmp(Y,'jlel#13')                #11
              2263 c22a  st   [$2a]       10091  st([sysArgs+6])                 #12 jump.hi
                                          10092
                                          10093  # pc = 0x2264, Opcode = 0x64
                                          10094  # Instruction JGEL: 22 + 26 cycles
                                          10095  label('JGEL')
JGEL:         2264 142d  ld   $2d,y       10096  ld(hi('jgel#13'),Y)             #10
              2265 e0a5  jmp  y,$a5       10097  jmp(Y,'jgel#13')                #11
              2266 c22a  st   [$2a]       10098  st([sysArgs+6])                 #12 jump.hi
                                          10099
                                          10100  # pc = 0x2267, Opcode = 0x67
                                          10101  # Instruction ANDBI: And immediate byte with byte var, result in byte var, 22 + 20 cycles
                                          10102  label('ANDBI')
ANDBI:        2267 142e  ld   $2e,y       10103  ld(hi('andbi#13'),Y)            #10
              2268 e000  jmp  y,$00       10104  jmp(Y,'andbi#13')               #11
              2269 1200  ld   ac,x        10105  ld(AC,X)                        #12 address of var
                                          10106
                                          10107  # pc = 0x226A, Opcode = 0x6A
                                          10108  # Instruction ORBI: OR immediate byte with byte var, result in byte var, 22 + 20 cycles
                                          10109  label('ORBI')
ORBI:         226a 142e  ld   $2e,y       10110  ld(hi('orbi#13'),Y)             #10
              226b e006  jmp  y,$06       10111  jmp(Y,'orbi#13')                #11
              226c 1200  ld   ac,x        10112  ld(AC,X)                        #12 address of var
                                          10113
                                          10114  # pc = 0x226D, Opcode = 0x6D
                                          10115  # Instruction XORBI: var.lo ^= imm, 22 + 20 cycles
                                          10116  label('XORBI')
XORBI:        226d 142e  ld   $2e,y       10117  ld(hi('xorbi#13'),Y)            #10
              226e e00c  jmp  y,$0c       10118  jmp(Y,'xorbi#13')               #11
              226f 1200  ld   ac,x        10119  ld(AC,X)                        #12 address of var
                                          10120
                                          10121  # pc = 0x2270, Opcode = 0x70
                                          10122  # Instruction JMPI, (lb3361): Jump to 16bit address, preserve vLR, 22 + 20 cycles
                                          10123  label('JMPI')
JMPI:         2270 1427  ld   $27,y       10124  ld(hi('jmpi#13'),Y)             #10
              2271 e041  jmp  y,$41       10125  jmp(Y,'jmpi#13')                #11
              2272 a002  suba $02         10126  suba(2)                         #12
                                          10127
                                          10128  # SYS calls and instruction implementations rely on these
              2273 0200  nop              10129  fillers(until=0xca)
              2274 0200  nop
              2275 0200  nop
              * 87 times
              22ca 00f2  ld   $f2         10130  ld(-28/2)                       #25
              22cb fc01  bra  $2201       10131  bra('NEXT')                     #26 Return from SYS calls
              22cc 1517  ld   [$17],y     10132  ld([vPC+1],Y)                   #27
                                          10133
                                          10134  # pc = 0x22cd, Opcode = 0xcd
                                          10135  # Instruction MOVL (lb3361): Move long variable. 22+40 cycles
                                          10136  label('MOVL')
MOVL:         22cd 1432  ld   $32,y       10137  ld(hi('movl#13'),Y)             #10
              22ce e000  jmp  y,$00       10138  jmp(Y,'movl#13')                #11
              22cf c22a  st   [$2a]       10139  st([sysArgs+6])                 #12
                                          10140
                                          10141  # pc = 0x22d0, Opcode = 0xd0
                                          10142  # Instruction MOVF (lb3361): Move float variable. 22+46 cycles
                                          10143  label('MOVF')
MOVF:         22d0 1432  ld   $32,y       10144  ld(hi('movf#13'),Y)             #10
              22d1 e01f  jmp  y,$1f       10145  jmp(Y,'movf#13')                #11
              22d2 c22a  st   [$2a]       10146  st([sysArgs+6])                 #12
                                          10147
                                          10148  # pc = 0x22d3 Opcode = 0xd3
                                          10149  # Instruction NROL (lb3361): Left rotate n bytes. 22+18+n*18
                                          10150  # Shift vACsign<-bit(8n-1)<-...<-bit(0)<-vACsign. Destroys vAC
                                          10151  # Encoding: [0xc7,v,0xd3,v+n]
                                          10152  label('NROL')
NROL:         22d3 1434  ld   $34,y       10153  ld(hi('nrol#13'),Y)             #10
              22d4 e000  jmp  y,$00       10154  jmp(Y,'nrol#13')                #11
              22d5 c22a  st   [$2a]       10155  st([sysArgs+6])                 #12
                                          10156
                                          10157  # pc = 0x22d6 Opcode = 0xd6
                                          10158  # Instruction NROR (lb3361): Right rotate n bytes. 22+26+n*32
                                          10159  # Shift vACsign->bit(8n-1)->...->bit(0)->vACsign. Destroys vAC
                                          10160  # Encoding: [0xc7,v+n,0xd6,v]
                                          10161  label('NROR')
NROR:         22d6 1434  ld   $34,y       10162  ld(hi('nror#13'),Y)             #10
              22d7 e024  jmp  y,$24       10163  jmp(Y,'nror#13')                #11
              22d8 c22a  st   [$2a]       10164  st([sysArgs+6])                 #12
                                          10165
                                          10166
                                          10167
              22d9 0200  nop              10168  fillers(until=0xff)
              22da 0200  nop
              22db 0200  nop
              * 38 times
                                          10169
                                          10170  #-----------------------------------------------------------------------
                                          10171  #       PREFX2 instruction page, (0x2300), PREFIX ARG0 OPCODE
                                          10172  #-----------------------------------------------------------------------
                                          10173  #
                                          10174  label('PREFX2_PAGE')
PREFX2_PAGE:  22ff fc03  bra  $2303       10175  bra('.next2')                   #0 Enter at '.next2' (so no startup overhead)
                                          10176  # --- Page boundary ---
                                          10177  align(0x100,size=0x100)
              2300 1517  ld   [$17],y     10178  ld([vPC+1],Y)                   #1
                                          10179
                                          10180  # Fetch next instruction and execute it, but only if there are sufficient
                                          10181  # ticks left for the slowest instruction.
              2301 8115  adda [$15]       10182  adda([vTicks])                  #0 Track elapsed ticks (actually counting down: AC<0)
              2302 e80b  blt  $230b       10183  blt('EXIT')                     #1 Escape near time out
              2303 c215  st   [$15]       10184  st([vTicks])                    #2
              2304 0116  ld   [$16]       10185  ld([vPC])                       #3 PREFIX+ARG0 is 2 bytes, vPC has been incremented by 1
              2305 9001  adda $01,x       10186  adda(1,X)                       #4 point to opcode
              2306 c002  st   $02,[$02]   10187  st(vCpuSelect,[vCpuSelect])     #5 Reset to default vCPU page
              2307 0d00  ld   [y,x]       10188  ld([Y,X])                       #6 Fetch opcode (actually a branch target)
              2308 de00  st   [y,x++]     10189  st([Y,Xpp])                     #7 Just X++
              2309 fe00  bra  ac          10190  bra(AC)                         #8 Dispatch
              230a 012b  ld   [$2b]       10191  ld([sysArgs+7])                 #9 Operand
                                          10192
                                          10193  # Resync with video driver and transfer control
              230b 800f  adda $0f         10194  adda(maxTicks)                  #3
              230c e40c  bgt  $230c       10195  bgt(pc()&255)                   #4 Resync
              230d a001  suba $01         10196  suba(1)                         #5
              230e 1401  ld   $01,y       10197  ld(hi('vBlankStart'),Y)         #6
              230f e11e  jmp  y,[$1e]     10198  jmp(Y,[vReturn])                #7 To video driver
              2310 0000  ld   $00         10199  ld(0)                           #8 AC should be 0 already. Still..
                                          10200  assert vCPU_overhead ==          9
                                          10201
                                          10202  # pc = 0x2311, Opcode = 0x11
                                          10203  # Instruction LSLN: Logical shift left vAC, (16bit), n times, 22 + 30*n + 20 cycles
                                          10204  label('LSLN')
LSLN:         2311 1426  ld   $26,y       10205  ld(hi('lsln#13'),Y)             #10
              2312 e000  jmp  y,$00       10206  jmp(Y,'lsln#13')                #11
                                          10207  # dummy                         #12 Overlap
                                          10208  #
                                          10209  # pc = 0x2313, Opcode = 0x13
                                          10210  # Instruction SEXT: Sign extend vAC based on a variable mask, 22 + 24 cycles
                                          10211  label('SEXT')
SEXT:         2313 1426  ld   $26,y       10212  ld(hi('sext#13'),Y)             #10 #12
              2314 e032  jmp  y,$32       10213  jmp(Y,'sext#13')                #11
                                          10214  # dummy                         #12 Overlap
                                          10215  #
                                          10216  # pc = 0x2315, Opcode = 0x15
                                          10217  # Instruction NOTW: Boolean invert var, 22 + 26 cycles
                                          10218  label('NOTW')
NOTW:         2315 1426  ld   $26,y       10219  ld(hi('notw#13'),Y)             #10 #12
              2316 e013  jmp  y,$13       10220  jmp(Y,'notw#13')                #11
                                          10221  # dummy                         #12 Overlap
                                          10222  #
                                          10223  # pc = 0x2317, Opcode = 0x17
                                          10224  # Instruction NEGW: Arithmetic negate var, 22 + 28 cycles
                                          10225  label('NEGW')
NEGW:         2317 1426  ld   $26,y       10226  ld(hi('negw#13'),Y)             #10 #12
              2318 e01e  jmp  y,$1e       10227  jmp(Y,'negw#13')                #11
                                          10228  # dummy                         #12 Overlap
                                          10229  #
                                          10230  # pc = 0x2319, Opcode = 0x19
                                          10231  # Instruction ANDBA: vAC &= var.lo, 22 + 22 cycles
                                          10232  label('ANDBA')
ANDBA:        2319 1426  ld   $26,y       10233  ld(hi('andba#13'),Y)            #10 #12
              231a e03f  jmp  y,$3f       10234  jmp(Y,'andba#13')               #11
              231b 1200  ld   ac,x        10235  ld(AC,X)                        #12 var
                                          10236
                                          10237  # pc = 0x231c, Opcode = 0x1c
                                          10238  # Instruction ORBA: vAC |= var.lo, 22 + 20 cycles
                                          10239  label('ORBA')
ORBA:         231c 1426  ld   $26,y       10240  ld(hi('orba#13'),Y)             #10
              231d e047  jmp  y,$47       10241  jmp(Y,'orba#13')                #11
              231e 1200  ld   ac,x        10242  ld(AC,X)                        #12 var
                                          10243
                                          10244  # pc = 0x231f, Opcode = 0x1f
                                          10245  # Instruction XORBA: vAC ^= var.lo, 22 + 20 cycles
                                          10246  label('XORBA')
XORBA:        231f 1426  ld   $26,y       10247  ld(hi('xorba#13'),Y)            #10
              2320 e04d  jmp  y,$4d       10248  jmp(Y,'xorba#13')               #11
              2321 1200  ld   ac,x        10249  ld(AC,X)                        #12 var
                                          10250
                                          10251  # pc = 0x2322, Opcode = 0x22
                                          10252  # Instruction FREQM: [(((chan & 3) + 1) <<8) | 0x00FC] = vAC, chan var = [0..3], 22 + 26 cycles
                                          10253  label('FREQM')
FREQM:        2322 1426  ld   $26,y       10254  ld(hi('freqm#13'),Y)            #10
              2323 e053  jmp  y,$53       10255  jmp(Y,'freqm#13')               #11
                                          10256  # dummy                         #12 Overlap
                                          10257  #
                                          10258  # pc = 0x2324, Opcode = 0x24
                                          10259  # Instruction FREQA: [((((chan - 1) & 3) + 1) <<8) | 0x00FC] = vAC, chan var = [1..4], 22 + 26 cycles
                                          10260  label('FREQA')
FREQA:        2324 1426  ld   $26,y       10261  ld(hi('freqa#13'),Y)            #10 #12
              2325 e05f  jmp  y,$5f       10262  jmp(Y,'freqa#13')               #11
              2326 1200  ld   ac,x        10263  ld(AC,X)                        #12 var
                                          10264
                                          10265  # pc = 0x2327, Opcode = 0x27
                                          10266  # Instruction FREQZI: [(((imm & 3) + 1) <<8) | 0x00FC] = 0, imm = [0..3], 22 + 22 cycles
                                          10267  label('FREQZI')
FREQZI:       2327 1426  ld   $26,y       10268  ld(hi('freqzi#13'),Y)           #10
              2328 e06b  jmp  y,$6b       10269  jmp(Y,'freqzi#13')              #11
              2329 2003  anda $03         10270  anda(3)                         #12 channel
                                          10271
                                          10272  # pc = 0x232a, Opcode = 0x2a
                                          10273  # Instruction VOLM: [(((chan & 3) + 1) <<8) | 0x00FA] = vAC.low, chan var = [0..3], 22 + 24 cycles
                                          10274  label('VOLM')
VOLM:         232a 1426  ld   $26,y       10275  ld(hi('volm#13'),Y)             #10
              232b e073  jmp  y,$73       10276  jmp(Y,'volm#13')                #11
                                          10277  # dummy                         #12 Overlap
                                          10278  #
                                          10279  # pc = 0x232c, Opcode = 0x2c
                                          10280  # Instruction VOLA: [((((chan - 1) & 3) + 1) <<8) | 0x00FA] = 63 - vAC.low + 64, chan var = [1..4],  22 + 26 cycles
                                          10281  label('VOLA')
VOLA:         232c 1426  ld   $26,y       10282  ld(hi('vola#13'),Y)             #10 #12
              232d e07d  jmp  y,$7d       10283  jmp(Y,'vola#13')                #11
              232e 1200  ld   ac,x        10284  ld(AC,X)                        #12 chan + 1
                                          10285
                                          10286  # pc = 0x232f, Opcode = 0x2f
                                          10287  # Instruction MODA: [((((chan - 1) & 3) + 1) <<8) | 0x00FB] = vAC.low, chan var = [1..4], 22 + 24 cycles
                                          10288  label('MODA')
MODA:         232f 1426  ld   $26,y       10289  ld(hi('moda#13'),Y)             #10
              2330 e089  jmp  y,$89       10290  jmp(Y,'moda#13')                #11
              2331 1200  ld   ac,x        10291  ld(AC,X)                        #12 chan + 1
                                          10292
                                          10293  # pc = 0x2332, Opcode = 0x32
                                          10294  # Instruction MODZI: [(((imm & 3) + 1) <<8) | 0x00FA] = 0x0200, imm = [0..3], 22 + 24 cycles
                                          10295  label('MODZI')
MODZI:        2332 1426  ld   $26,y       10296  ld(hi('modzi#13'),Y)            #10
              2333 e093  jmp  y,$93       10297  jmp(Y,'modzi#13')               #11
                                          10298  # dummy                         #12 Overlap
                                          10299  #
                                          10300  # pc = 0x2234, Opcode = 0x34
                                          10301  # Instruction SMPCPY:
                                          10302  label('SMPCPY')
SMPCPY:       2334 1426  ld   $26,y       10303  ld(hi('smpcpy#13'),Y)           #10 #12
              2335 e09d  jmp  y,$9d       10304  jmp(Y,'smpcpy#13')              #11
              2336 1200  ld   ac,x        10305  ld(AC,X)                        #12 dst var
                                          10306
                                          10307  # pc = 0x2237, Opcode = 0x37
                                          10308  # Instruction CMPWS:
                                          10309  label('CMPWS')
CMPWS:        2337 1428  ld   $28,y       10310  ld(hi('cmpws#13'),Y)            #10
              2338 e094  jmp  y,$94       10311  jmp(Y,'cmpws#13')               #11
                                          10312  # dummy                         #12 Overlap
                                          10313  #
                                          10314  # pc = 0x2239, Opcode = 0x39
                                          10315  # Instruction CMPWU:
                                          10316  label('CMPWU')
CMPWU:        2339 1428  ld   $28,y       10317  ld(hi('cmpwu#13'),Y)            #10 #12
              233a e0c7  jmp  y,$c7       10318  jmp(Y,'cmpwu#13')               #11
                                          10319  # dummy                         #12 Overlap
                                          10320  #
                                          10321  # pc = 0x223b, Opcode = 0x3b
                                          10322  # Instruction LEEKA:
                                          10323  label('LEEKA')
LEEKA:        233b 1429  ld   $29,y       10324  ld(hi('leeka#13'),Y)            #10 #12
              233c e000  jmp  y,$00       10325  jmp(Y,'leeka#13')               #11
                                          10326  # dummy                         #12 Overlap
                                          10327  #
                                          10328  # pc = 0x223d, Opcode = 0x3d
                                          10329  # Instruction LOKEA:
                                          10330  label('LOKEA')
LOKEA:        233d 1429  ld   $29,y       10331  ld(hi('lokea#13'),Y)            #10 #12
              233e e023  jmp  y,$23       10332  jmp(Y,'lokea#13')               #11
                                          10333  # dummy                         #12
                                          10334  #
                                          10335  # pc = 0x223f, Opcode = 0x3f
                                          10336  # Instruction FEEKA:
                                          10337  label('FEEKA')
FEEKA:        233f 1429  ld   $29,y       10338  ld(hi('feeka#13'),Y)            #10 #12
              2340 e045  jmp  y,$45       10339  jmp(Y,'feeka#13')               #11
              2341 c21d  st   [$1d]       10340  st([vTmp])                      #12 dst var
                                          10341
                                          10342  # pc = 0x2242, Opcode = 0x42
                                          10343  # Instruction FOKEA:
                                          10344  label('FOKEA')
FOKEA:        2342 1429  ld   $29,y       10345  ld(hi('fokea#13'),Y)            #10
              2343 e06c  jmp  y,$6c       10346  jmp(Y,'fokea#13')               #11
                                          10347  # dummy                         #12
                                          10348  #
                                          10349  # pc = 0x2344, Opcode = 0x44
                                          10350  # Instruction MEEKA: Peek 8 bytes from [vAC] to [var], 22 + 64 cycles
                                          10351  label('MEEKA')
MEEKA:        2344 142a  ld   $2a,y       10352  ld(hi('meeka#13'),Y)            #10 #12
              2345 e000  jmp  y,$00       10353  jmp(Y,'meeka#13')               #11
                                          10354  # dummy                         #12
                                          10355  #
                                          10356  # pc = 0x2346, Opcode = 0x46
                                          10357  # Instruction MOKEA: Poke 8 bytes from [var] to [vAC], 22 + 64 cycles
                                          10358  label('MOKEA')
MOKEA:        2346 142a  ld   $2a,y       10359  ld(hi('mokea#13'),Y)            #10 #12
              2347 e037  jmp  y,$37       10360  jmp(Y,'mokea#13')               #11
                                          10361  # dummy                         #12
                                          10362  #
                                          10363  # pc = 0x2348, Opcode = 0x48
                                          10364  # Instruction LSRVL: Logical shift right var long, 22 + 104 cycles
                                          10365  label('LSRVL')
LSRVL:        2348 142c  ld   $2c,y       10366  ld(hi('lsrvl#13'),Y)            #10 #12
              2349 e06b  jmp  y,$6b       10367  jmp(Y,'lsrvl#13')               #11
              234a 1200  ld   ac,x        10368  ld(AC,X)                        #12 var
                                          10369
                                          10370  # pc = 0x234b, Opcode = 0x4b
                                          10371  # Instruction LSLVL: Logical shift left var long, 22 + 56 cycles
                                          10372  label('LSLVL')
LSLVL:        234b 142c  ld   $2c,y       10373  ld(hi('lslvl#13'),Y)            #10 #12
              234c e0b0  jmp  y,$b0       10374  jmp(Y,'lslvl#13')               #11
              234d 1200  ld   ac,x        10375  ld(AC,X)                        #12 var
                                          10376
                                          10377  # pc = 0x234e, Opcode = 0x4e
                                          10378  # Instruction INCL: Increment var long, 22 + 36 cycles
                                          10379  label('INCL')
INCL:         234e 142e  ld   $2e,y       10380  ld(hi('incl#13'),Y)             #10 #12
              234f e012  jmp  y,$12       10381  jmp(Y,'incl#13')                #11
              2350 1200  ld   ac,x        10382  ld(AC,X)                        #12 var
                                          10383
                                          10384  # pc = 0x2351, Opcode = 0x51
                                          10385  # Instruction DECL: Decrement var long, 22 + 40 cycles
                                          10386  label('DECL')
DECL:         2351 142e  ld   $2e,y       10387  ld(hi('decl#13'),Y)             #10 #12
              2352 e036  jmp  y,$36       10388  jmp(Y,'decl#13')                #11
                                          10389  # dummy                         #12
                                          10390  #
                                          10391  # pc = 0x2353, Opcode = 0x53
                                          10392  # Instruction PEEKV+: Peek byte at address contained in var, var += 1, 22 + 38-42 cycles, (can cross page boundaries)
                                          10393  label('PEEKV+')
PEEKV+:       2353 1431  ld   $31,y       10394  ld(hi('peekv+#13'),Y)           #10 #12
              2354 e000  jmp  y,$00       10395  jmp(Y,'peekv+#13')              #11
                                          10396  # dummy                         #12
                                          10397  #
                                          10398  # SYS calls and instruction implementations rely on these
              2355 0200  nop              10399  fillers(until=0xca)
              2356 0200  nop
              2357 0200  nop
              * 117 times
              23ca 00f2  ld   $f2         10400  ld(-28/2)                       #25
              23cb fc01  bra  $2301       10401  bra('NEXT')                     #26 Return from SYS calls
              23cc 1517  ld   [$17],y     10402  ld([vPC+1],Y)                   #27
                                          10403
                                          10404  # pc = 0x23cd, Opcode = 0xcd
                                          10405  # Instruction NCOPY (lb3361): copy n bytes from [vAC] to [vDST]. vAC+=n. vDST+=n
                                          10406  label('NCOPY')
NCOPY:        23cd 1433  ld   $33,y       10407  ld(hi('ncopy#13'),Y)            #10
              23ce e007  jmp  y,$07       10408  jmp(Y,'ncopy#13')               #11
              23cf 0115  ld   [$15]       10409  ld([vTicks])                    #12
                                          10410
                                          10411
                                          10412  # pc = 0x23d0, Opcode = 0xd0
                                          10413  # Instruction STLU (lb3361): store zero extended vAC into long var. 22+26 cycles
                                          10414  label('STLU')
STLU:         23d0 1433  ld   $33,y       10415  ld(hi('stlu#13'),Y)             #10
              23d1 e073  jmp  y,$73       10416  jmp(Y,'stlu#13')                #11
              23d2 1200  ld   ac,x        10417  ld(AC,X)                        #12
                                          10418
                                          10419  # pc = 0x23d3, Opcode = 0xd3
                                          10420  # Instruction STLS (lb3361): store sign extended vAC into long var. 22+28 cycles
                                          10421  label('STLS')
STLS:         23d3 1433  ld   $33,y       10422  ld(hi('stls#13'),Y)             #10
              23d4 e07e  jmp  y,$7e       10423  jmp(Y,'stls#13')                #11
              23d5 1200  ld   ac,x        10424  ld(AC,X)                        #12
                                          10425
                                          10426  # pc = 0x23d6, Opcode = 0xd6
                                          10427  # Instruction NOTL (lb3361): complement long var. 22+30 cycles
                                          10428  label('NOTL')
NOTL:         23d6 1433  ld   $33,y       10429  ld(hi('notl#13'),Y)             #10
              23d7 e0ef  jmp  y,$ef       10430  jmp(Y,'notl#13')                #11
              23d8 1200  ld   ac,x        10431  ld(AC,X)                        #12
                                          10432
                                          10433  # pc = 0x23d9, Opcode = 0xd9
                                          10434  # Instruction NEGL (lb3361): negate long var. 22+58(max) cycles
                                          10435  label('NEGL')
NEGL:         23d9 142e  ld   $2e,y       10436  ld(hi('negl#13'),Y)             #10
              23da e05e  jmp  y,$5e       10437  jmp(Y,'negl#13')                #11
              23db 1200  ld   ac,x        10438  ld(AC,X)                        #12
                                          10439
                                          10440
              23dc 0200  nop              10441  fillers(until=0xff)
              23dd 0200  nop
              23de 0200  nop
              * 35 times
                                          10442
                                          10443  #-----------------------------------------------------------------------
                                          10444  #       PREFX1 instruction page, (0x2400), PREFIX OPCODE
                                          10445  #-----------------------------------------------------------------------
                                          10446  #
                                          10447  label('PREFX1_PAGE')
PREFX1_PAGE:  23ff fc03  bra  $2403       10448  bra('.next2')                   #0 Enter at '.next2' (so no startup overhead)
                                          10449  # --- Page boundary ---
                                          10450  align(0x100,size=0x100)
              2400 1517  ld   [$17],y     10451  ld([vPC+1],Y)                   #1
                                          10452
                                          10453  # Fetch next instruction and execute it, but only if there are sufficient
                                          10454  # ticks left for the slowest instruction.
              2401 8115  adda [$15]       10455  adda([vTicks])                  #0 Track elapsed ticks (actually counting down: AC<0)
              2402 e80b  blt  $240b       10456  blt('EXIT')                     #1 Escape near time out
              2403 c215  st   [$15]       10457  st([vTicks])                    #2
              2404 0116  ld   [$16]       10458  ld([vPC])                       #3 PREFIX is 1 byte, vPC hasn't been incremented
              2405 9001  adda $01,x       10459  adda(1,X)                       #4
              2406 c002  st   $02,[$02]   10460  st(vCpuSelect,[vCpuSelect])     #5 Reset to default vCPU page
              2407 0d00  ld   [y,x]       10461  ld([Y,X])                       #6 Fetch opcode (actually a branch target)
              2408 de00  st   [y,x++]     10462  st([Y,Xpp])                     #7 Just X++
              2409 fe00  bra  ac          10463  bra(AC)                         #8 Dispatch
              240a 0d00  ld   [y,x]       10464  ld([Y,X])                       #9 Prefetch operand
                                          10465
                                          10466  # Resync with video driver and transfer control
              240b 800f  adda $0f         10467  adda(maxTicks)                  #3
              240c e40c  bgt  $240c       10468  bgt(pc()&255)                   #4 Resync
              240d a001  suba $01         10469  suba(1)                         #5
              240e 1401  ld   $01,y       10470  ld(hi('vBlankStart'),Y)         #6
              240f e11e  jmp  y,[$1e]     10471  jmp(Y,[vReturn])                #7 To video driver
              2410 0000  ld   $00         10472  ld(0)                           #8 AC should be 0 already. Still..
                                          10473  assert vCPU_overhead ==          9
                                          10474
                                          10475  # pc = 0x2411, Opcode = 0x11
                                          10476  # Instruction NOTE: vAC = ROM:[NotesTable + vAC.lo*2], 18 + 28 cycles
                                          10477  label('NOTE')
NOTE:         2411 1427  ld   $27,y       10478  ld(hi('note#13'),Y)             #10
              2412 e000  jmp  y,$00       10479  jmp(Y,'note#13')                #11
              2413 0009  ld   $09         10480  ld('.note#28')                  #12 low byte of low note return address
                                          10481
                                          10482  # pc = 0x2414, Opcode = 0x14
                                          10483  # Instruction MIDI: vAC = ROM:[NotesTable + (vAC.lo - 11)*2], 18 + 30 cycles
                                          10484  label('MIDI')
MIDI:         2414 1427  ld   $27,y       10485  ld(hi('midi#13'),Y)             #10
              2415 e019  jmp  y,$19       10486  jmp(Y,'midi#13')                #11
              2416 0023  ld   $23         10487  ld('.midi#29')                  #12 low byte of low midi return address
                                          10488
                                          10489  # pc = 0x2417, Opcode = 0x17
                                          10490  # Instruction XLA, (lb3361): Exchange vLR with vAC, 18 + 28 cycles
                                          10491  label('XLA')
XLA:          2417 1427  ld   $27,y       10492  ld(hi('xla#13'),Y)              #10
              2418 e033  jmp  y,$33       10493  jmp(Y,'xla#13')                 #11
              2419 0118  ld   [$18]       10494  ld([vAC])                       #12
                                          10495
                                          10496  # pc = 0x241a Opcode = 0x1a
                                          10497  # Instruction ADDLP (lb3361): vLAC += [vAC]. 22+66 cycles
                                          10498  label('ADDLP')
ADDLP:        241a 1432  ld   $32,y       10499  ld(hi('addlp#13'),Y)            #10
              241b e03f  jmp  y,$3f       10500  jmp(Y,'addlp#13')               #11
              241c 0115  ld   [$15]       10501  ld([vTicks])                    #12
                                          10502
                                          10503  # pc = 0x241d Opcode = 0x1d
                                          10504  # Instruction SUBLP (lb3361): vLAC -= [vAC]. 22+60 cycles
                                          10505  label('SUBLP')
SUBLP:        241d 1432  ld   $32,y       10506  ld(hi('sublp#13'),Y)            #10
              241e e07f  jmp  y,$7f       10507  jmp(Y,'sublp#13')               #11
              241f 0115  ld   [$15]       10508  ld([vTicks])                    #12
                                          10509
                                          10510  # pc = 0x241d Opcode = 0x20
                                          10511  # Instruction ANDLP (lb3361): vLAC &= [vAC]. 22+42 cycles
                                          10512  # On return vAC>0 (resp =0, <0) iff LAC>0 (resp =0, <0)
                                          10513  label('ANDLP')
ANDLP:        2420 1432  ld   $32,y       10514  ld(hi('andlp#13'),Y)            #10
              2421 e0b8  jmp  y,$b8       10515  jmp(Y,'andlp#13')               #11
              2422 0115  ld   [$15]       10516  ld([vTicks])                    #12
                                          10517
                                          10518  # pc = 0x2423 Opcode = 0x23
                                          10519  # Instruction ORLP (lb3361): vLAC |= [vAC]. 22+42 cycles
                                          10520  # On return vAC>0 (resp =0, <0) iff LAC>0 (resp =0, <0)
                                          10521  label('ORLP')
ORLP:         2423 1432  ld   $32,y       10522  ld(hi('orlp#13'),Y)             #10
              2424 e0d4  jmp  y,$d4       10523  jmp(Y,'orlp#13')                #11
              2425 0115  ld   [$15]       10524  ld([vTicks])                    #12
                                          10525
                                          10526  # pc = 0x2426 Opcode = 0x26
                                          10527  # Instruction XORLP (lb3361): vLAC ^= [vAC]. 22+42 cycles
                                          10528  # On return vAC>0 (resp =0, <0) iff LAC>0 (resp =0, <0)
                                          10529  label('XORLP')
XORLP:        2426 1432  ld   $32,y       10530  ld(hi('xorlp#13'),Y)            #10
              2427 e0e7  jmp  y,$e7       10531  jmp(Y,'xorlp#13')               #11
              2428 0115  ld   [$15]       10532  ld([vTicks])                    #12
                                          10533
                                          10534  # pc = 0x2429 Opcode = 0x29
                                          10535  # Instruction CMPLPU (lb3361): compare vLAC and [vAC] unsigned. 22+72(max) cycles
                                          10536  # On return vAC>0 (resp =0, <0)
                                          10537  label('CMPLPU')
CMPLPU:       2429 1433  ld   $33,y       10538  ld(hi('cmplpu#13'),Y)           #10
              242a e09e  jmp  y,$9e       10539  jmp(Y,'cmplpu#13')              #11
              242b 0115  ld   [$15]       10540  ld([vTicks])                    #12
                                          10541
                                          10542  # pc = 0x242c Opcode = 0x2c
                                          10543  # Instruction CMPLPS (lb3361): compare vLAC and [vAC] signed. 22+72(max) cycles
                                          10544  # On return vAC>0 (resp =0, <0)
                                          10545  label('CMPLPS')
CMPLPS:       242c 1433  ld   $33,y       10546  ld(hi('cmplps#13'),Y)           #10
              242d e0de  jmp  y,$de       10547  jmp(Y,'cmplps#13')              #11
              242e 0115  ld   [$15]       10548  ld([vTicks])                    #12
                                          10549
                                          10550  # SYS calls and instruction implementations rely on these
              242f 0200  nop              10551  fillers(until=0xca)
              2430 0200  nop
              2431 0200  nop
              * 155 times
              24ca 00f2  ld   $f2         10552  ld(-28/2)                       #25
              24cb fc01  bra  $2401       10553  bra('NEXT')                     #26 Return from SYS calls
              24cc 1517  ld   [$17],y     10554  ld([vPC+1],Y)                   #27
                                          10555
                                          10556
              24cd 0200  nop              10557  fillers(until=0xff)
              24ce 0200  nop
              24cf 0200  nop
              * 50 times
              24ff 0200  nop              10558  align(0x100, size=0x100)
                                          10559
                                          10560  #-----------------------------------------------------------------------
                                          10561  #       PREFX3 implementation page, (0x2500)
                                          10562  #-----------------------------------------------------------------------
                                          10563  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2099#p2099
                                          10564  #
                                          10565  # STB2 implementation
                                          10566  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2135#p2135
                                          10567  label('stb2#13')
stb2#13:      2500 152b  ld   [$2b],y     10568  ld([sysArgs+7],Y)               #13 Second operand
              2501 0118  ld   [$18]       10569  ld([vAC])                       #14
              2502 ce00  st   [y,x]       10570  st([Y,X])                       #15
              2503 1403  ld   $03,y       10571  ld(hi('NEXTY'),Y)               #16
              2504 e000  jmp  y,$00       10572  jmp(Y,'NEXTY')                  #17
              2505 00f6  ld   $f6         10573  ld(-20/2)                       #18
                                          10574
                                          10575  # STW2 implementation
                                          10576  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2135#p2135
                                          10577  label('stw2#13')
stw2#13:      2506 152b  ld   [$2b],y     10578  ld([sysArgs+7],Y)               #13 Second operand
              2507 0118  ld   [$18]       10579  ld([vAC])                       #14
              2508 de00  st   [y,x++]     10580  st([Y,Xpp])                     #15
              2509 0119  ld   [$19]       10581  ld([vAC+1])                     #16
              250a ce00  st   [y,x]       10582  st([Y,X])                       #17
              250b 1403  ld   $03,y       10583  ld(hi('NEXTY'),Y)               #18
              250c e000  jmp  y,$00       10584  jmp(Y,'NEXTY')                  #19
              250d 00f5  ld   $f5         10585  ld(-22/2)                       #20
                                          10586
                                          10587  # XCHGB implementation
                                          10588  label('xchgb#13')
xchgb#13:     250e c22a  st   [$2a]       10589  st([sysArgs+6])                 #13 1st var
              250f 112b  ld   [$2b],x     10590  ld([sysArgs+7],X)               #14 2nd var
              2510 0500  ld   [x]         10591  ld([X])                         #15
              2511 c21d  st   [$1d]       10592  st([vTmp])                      #16
              2512 112a  ld   [$2a],x     10593  ld([sysArgs+6],X)               #17
              2513 0500  ld   [x]         10594  ld([X])                         #18
              2514 112b  ld   [$2b],x     10595  ld([sysArgs+7],X)               #19
              2515 c600  st   [x]         10596  st([X])                         #20
              2516 112a  ld   [$2a],x     10597  ld([sysArgs+6],X)               #21
              2517 011d  ld   [$1d]       10598  ld([vTmp])                      #22
              2518 c600  st   [x]         10599  st([X])                         #23
              2519 1403  ld   $03,y       10600  ld(hi('NEXTY'),Y)               #24
              251a e000  jmp  y,$00       10601  jmp(Y,'NEXTY')                  #25
              251b 00f2  ld   $f2         10602  ld(-28/2)                       #26
                                          10603
                                          10604  # XCHGW implementation
                                          10605  label('xchgw#13')
xchgw#13:     251c 00f8  ld   $f8         10606  ld(min(0,maxTicks-46/2))        #13
              251d 8115  adda [$15]       10607  adda([vTicks])                  #14
              251e e83b  blt  .xchgw#17   10608  blt('.xchgw#17')                #15 not enough time left, so retry
              251f 1400  ld   $00,y       10609  ld(0,Y)                         #16
              2520 112b  ld   [$2b],x     10610  ld([sysArgs+7],X)               #17
              2521 0500  ld   [x]         10611  ld([X])                         #18
              2522 c21d  st   [$1d]       10612  st([vTmp])                      #19 vTmp = var2.lo
              2523 112a  ld   [$2a],x     10613  ld([sysArgs+6],X)               #20
              2524 0500  ld   [x]         10614  ld([X])                         #21 AC = var1.lo
              2525 112b  ld   [$2b],x     10615  ld([sysArgs+7],X)               #22
              2526 c600  st   [x]         10616  st([X])                         #23 var2.lo = AC
              2527 112a  ld   [$2a],x     10617  ld([sysArgs+6],X)               #24
              2528 011d  ld   [$1d]       10618  ld([vTmp])                      #25
              2529 c600  st   [x]         10619  st([X])                         #26 var1.lo = vTmp
              252a 012b  ld   [$2b]       10620  ld([sysArgs+7])                 #27
              252b 8001  adda $01         10621  adda(1)                         #28
              252c d22b  st   [$2b],x     10622  st([sysArgs+7],X)               #29 inc sysArgs+7
              252d 0500  ld   [x]         10623  ld([X])                         #30
              252e c21d  st   [$1d]       10624  st([vTmp])                      #31 vTmp = var2.hi
              252f 012a  ld   [$2a]       10625  ld([sysArgs+6])                 #32
              2530 9001  adda $01,x       10626  adda(1,X)                       #33
              2531 0500  ld   [x]         10627  ld([X])                         #34 AC = var1.hi
              2532 112b  ld   [$2b],x     10628  ld([sysArgs+7],X)               #35
              2533 c600  st   [x]         10629  st([X])                         #36 var2.hi = AC
              2534 012a  ld   [$2a]       10630  ld([sysArgs+6])                 #37
              2535 9001  adda $01,x       10631  adda(1,X)                       #38
              2536 011d  ld   [$1d]       10632  ld([vTmp])                      #39
              2537 c600  st   [x]         10633  st([X])                         #40 var1.hi = vTmp
              2538 1403  ld   $03,y       10634  ld(hi('REENTER'),Y)             #41
              2539 e0cb  jmp  y,$cb       10635  jmp(Y,'REENTER')                #42
              253a 00e9  ld   $e9         10636  ld(-46/2)                       #43
                                          10637  label('.xchgw#17')
.xchgw#17:    253b 0021  ld   $21         10638  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              253c c202  st   [$02]       10639  st([vCpuSelect])                #18 restore PREFX3 instruction page
              253d 9401  adda $01,y       10640  adda(1,Y)                       #19 retry instruction
              253e e0cb  jmp  y,$cb       10641  jmp(Y,'REENTER')                #20
              253f 00f4  ld   $f4         10642  ld(-24/2)                       #21
                                          10643
                                          10644  # MOVW implementation
                                          10645  label('movw#13')
movw#13:      2540 1200  ld   ac,x        10646  ld(AC,X)                        #13
              2541 8001  adda $01         10647  adda(1)                         #14
              2542 c21d  st   [$1d]       10648  st([vTmp])                      #15 address of src.hi
              2543 0500  ld   [x]         10649  ld([X])                         #16 src.lo
              2544 112b  ld   [$2b],x     10650  ld([sysArgs+7],X)               #17 address of dst.lo
              2545 c600  st   [x]         10651  st([X])                         #18 dst.lo = src.lo
              2546 111d  ld   [$1d],x     10652  ld([vTmp],X)                    #19
              2547 0500  ld   [x]         10653  ld([X])                         #20 src.hi
              2548 c21d  st   [$1d]       10654  st([vTmp])                      #21
              2549 012b  ld   [$2b]       10655  ld([sysArgs+7])                 #22
              254a 9001  adda $01,x       10656  adda(1,X)                       #23 address of dst.hi
              254b 011d  ld   [$1d]       10657  ld([vTmp])                      #24
              254c c600  st   [x]         10658  st([X])                         #25 dst.hi = src.hi
              254d 1403  ld   $03,y       10659  ld(hi('NEXTY'),Y)               #26
              254e e000  jmp  y,$00       10660  jmp(Y,'NEXTY')                  #27
              254f 00f1  ld   $f1         10661  ld(-30/2)                       #28
                                          10662
                                          10663  # ADDWI implementation
                                          10664  label('addwi#13')
addwi#13:     2550 c21d  st   [$1d]       10665  st([vTmp])                      #13 save imm.lo
              2551 8118  adda [$18]       10666  adda([vAC])                     #14
              2552 c218  st   [$18]       10667  st([vAC])                       #15 vAC.lo += imm.lo
              2553 e85d  blt  .addwi#18   10668  bmi('.addwi#18')                #16 overflow
              2554 a11d  suba [$1d]       10669  suba([vTmp])                    #17 restore vAC.lo
              2555 411d  ora  [$1d]       10670  ora([vTmp])                     #18 imm.lo | vAC.lo
              2556 e865  blt  .addwi#21   10671  bmi('.addwi#21')                #19 if carry == 1
              2557 012b  ld   [$2b]       10672  ld([sysArgs+7])                 #20 imm.hi
              2558 8119  adda [$19]       10673  adda([vAC+1])                   #21 carry = 0
              2559 c219  st   [$19]       10674  st([vAC+1])                     #22 vAC.hi += imm.hi
              255a 1403  ld   $03,y       10675  ld(hi('REENTER'),Y)             #23
              255b e0cb  jmp  y,$cb       10676  jmp(Y,'REENTER')                #24
              255c 00f2  ld   $f2         10677  ld(-28/2)                       #25
                                          10678  label('.addwi#18')
.addwi#18:    255d 211d  anda [$1d]       10679  anda([vTmp])                    #18 imm.lo & vAC.lo
              255e e865  blt  .addwi#21   10680  bmi('.addwi#21')                #19 If carry == 1
              255f 012b  ld   [$2b]       10681  ld([sysArgs+7])                 #20 imm.hi
              2560 8119  adda [$19]       10682  adda([vAC+1])                   #21 carry = 0
              2561 c219  st   [$19]       10683  st([vAC+1])                     #22 vAC.hi += imm.hi
              2562 1403  ld   $03,y       10684  ld(hi('REENTER'),Y)             #23
              2563 e0cb  jmp  y,$cb       10685  jmp(Y,'REENTER')                #24
              2564 00f2  ld   $f2         10686  ld(-28/2)                       #25
                                          10687  label('.addwi#21')
.addwi#21:    2565 8001  adda $01         10688  adda(1)                         #21 carry = 1
              2566 8119  adda [$19]       10689  adda([vAC+1])                   #22
              2567 c219  st   [$19]       10690  st([vAC+1])                     #23 vAC.hi = vAC.hi + carry + imm.hi
              2568 1403  ld   $03,y       10691  ld(hi('NEXTY'),Y)               #24
              2569 e000  jmp  y,$00       10692  jmp(Y,'NEXTY')                  #25
              256a 00f2  ld   $f2         10693  ld(-28/2)                       #26
                                          10694
                                          10695  # SUBWI implementation
                                          10696  label('subwi#13')
subwi#13:     256b c21d  st   [$1d]       10697  st([vTmp])                      #13 save imm.lo
              256c 0118  ld   [$18]       10698  ld([vAC])                       #14
              256d e879  blt  .subwi#17   10699  bmi('.subwi#17')                #15 is -ve?
              256e a11d  suba [$1d]       10700  suba([vTmp])                    #16
              256f c218  st   [$18]       10701  st([vAC])                       #17 vAC.lo -= imm.lo
              2570 411d  ora  [$1d]       10702  ora([vTmp])                     #18 borrow in bit 7
              2571 3080  anda $80,x       10703  anda(0x80,X)                    #19 move borrow to bit 0
              2572 0119  ld   [$19]       10704  ld([vAC+1])                     #20
              2573 a500  suba [x]         10705  suba([X])                       #21
              2574 a12b  suba [$2b]       10706  suba([sysArgs+7])               #22
              2575 c219  st   [$19]       10707  st([vAC+1])                     #23 vAC.hi = vAC.hi - borrow - imm.hi
              2576 1403  ld   $03,y       10708  ld(hi('NEXTY'),Y)               #24
              2577 e000  jmp  y,$00       10709  jmp(Y,'NEXTY')                  #25
              2578 00f2  ld   $f2         10710  ld(-28/2)                       #26
                                          10711  label('.subwi#17')
.subwi#17:    2579 c218  st   [$18]       10712  st([vAC])                       #17 vAC.lo -= imm.lo
              257a 211d  anda [$1d]       10713  anda([vTmp])                    #18 borrow in bit 7
              257b 3080  anda $80,x       10714  anda(0x80,X)                    #19 move borrow to bit 0
              257c 0119  ld   [$19]       10715  ld([vAC+1])                     #20
              257d a500  suba [x]         10716  suba([X])                       #21
              257e a12b  suba [$2b]       10717  suba([sysArgs+7])               #22
              257f c219  st   [$19]       10718  st([vAC+1])                     #23 vAC.hi = vAC.hi - borrow - imm.hi
              2580 1403  ld   $03,y       10719  ld(hi('NEXTY'),Y)               #24
              2581 e000  jmp  y,$00       10720  jmp(Y,'NEXTY')                  #25
              2582 00f2  ld   $f2         10721  ld(-28/2)                       #26
                                          10722
                                          10723  # ANDWI implementation
                                          10724  label('andwi#13')
andwi#13:     2583 2118  anda [$18]       10725  anda([vAC])                     #13
              2584 c218  st   [$18]       10726  st([vAC])                       #14 vAC.lo &= imm.lo
              2585 012b  ld   [$2b]       10727  ld([sysArgs+7])                 #15
              2586 2119  anda [$19]       10728  anda([vAC+1])                   #16
              2587 c219  st   [$19]       10729  st([vAC+1])                     #17 vAC.hi &= imm.hi
              2588 1403  ld   $03,y       10730  ld(hi('NEXTY'),Y)               #18
              2589 e000  jmp  y,$00       10731  jmp(Y,'NEXTY')                  #19
              258a 00f5  ld   $f5         10732  ld(-22/2)                       #20
                                          10733
                                          10734  # ORWI implementation
                                          10735  label('orwi#13')
orwi#13:      258b 4118  ora  [$18]       10736  ora([vAC])                      #13
              258c c218  st   [$18]       10737  st([vAC])                       #14 vAC.lo |= imm.lo
              258d 012b  ld   [$2b]       10738  ld([sysArgs+7])                 #15
              258e 4119  ora  [$19]       10739  ora([vAC+1])                    #16
              258f c219  st   [$19]       10740  st([vAC+1])                     #17 vAC.hi |= imm.hi
              2590 1403  ld   $03,y       10741  ld(hi('NEXTY'),Y)               #18
              2591 e000  jmp  y,$00       10742  jmp(Y,'NEXTY')                  #19
              2592 00f5  ld   $f5         10743  ld(-22/2)                       #20
                                          10744
                                          10745  # XORWI implementation
                                          10746  label('xorwi#13')
xorwi#13:     2593 6118  xora [$18]       10747  xora([vAC])                     #13
              2594 c218  st   [$18]       10748  st([vAC])                       #14 vAC.lo ^= imm.lo
              2595 012b  ld   [$2b]       10749  ld([sysArgs+7])                 #15
              2596 6119  xora [$19]       10750  xora([vAC+1])                   #16
              2597 c219  st   [$19]       10751  st([vAC+1])                     #17 vAC.hi ^= imm.hi
              2598 1403  ld   $03,y       10752  ld(hi('NEXTY'),Y)               #18
              2599 e000  jmp  y,$00       10753  jmp(Y,'NEXTY')                  #19
              259a 00f5  ld   $f5         10754  ld(-22/2)                       #20
                                          10755
                                          10756  # LDPX implementation
                                          10757  label('ldpx#13')
ldpx#13:      259b 9001  adda $01,x       10758  adda(1,X)                       #13
              259c 0500  ld   [x]         10759  ld([X])                         #14 y
              259d 8500  adda [x]         10760  adda([X])                       #15 y*2
              259e 1200  ld   ac,x        10761  ld(AC,X)                        #16
              259f 1401  ld   $01,y       10762  ld(1,Y)                         #17 Y,X = 0x0100 + 2*y, (0 >= y <= 127)
              25a0 0d00  ld   [y,x]       10763  ld([Y,X])                       #18
              25a1 1600  ld   ac,y        10764  ld(AC,Y)                        #19 Y = [Y,X]
              25a2 111d  ld   [$1d],x     10765  ld([vTmp],X)                    #20
              25a3 0500  ld   [x]         10766  ld([X])                         #21
              25a4 1200  ld   ac,x        10767  ld(AC,X)                        #22 X = x
              25a5 0d00  ld   [y,x]       10768  ld([Y,X])                       #23 colour = [Y,X]
              25a6 112b  ld   [$2b],x     10769  ld([sysArgs+7],X)               #24
              25a7 c600  st   [x]         10770  st([X])                         #25 colour
              25a8 1403  ld   $03,y       10771  ld(hi('NEXTY'),Y)               #26
              25a9 e000  jmp  y,$00       10772  jmp(Y,'NEXTY')                  #27
              25aa 00f1  ld   $f1         10773  ld(-30/2)                       #28
                                          10774
                                          10775  # CONDI implementation
                                          10776  label('condi#13')
condi#13:     25ab c21d  st   [$1d]       10777  st([vTmp])                      #13
              25ac 0118  ld   [$18]       10778  ld([vAC])                       #14
              25ad 4119  ora  [$19]       10779  ora([vAC+1])                    #15
              25ae ecb1  bne  $25b1       10780  bne(pc()+3)                     #16
              25af fcb2  bra  $25b2       10781  bra(pc()+3)                     #17
              25b0 012b  ld   [$2b]       10782  ld([sysArgs+7])                 #18 get result cond == 0
              25b1 011d  ld   [$1d]       10783  ld([vTmp])                      #18 get result cond != 0
              25b2 c218  st   [$18]       10784  st([vAC])                       #19 result.lo
              25b3 0000  ld   $00         10785  ld(0)                           #20
              25b4 c219  st   [$19]       10786  st([vAC+1])                     #21 result.hi = 0
              25b5 1403  ld   $03,y       10787  ld(hi('NEXTY'),Y)               #22
              25b6 e000  jmp  y,$00       10788  jmp(Y,'NEXTY')                  #23
              25b7 00f3  ld   $f3         10789  ld(-26/2)                       #24
                                          10790
                                          10791  # CONDB implementation
                                          10792  label('condb#13')
condb#13:     25b8 0500  ld   [x]         10793  ld([X])                         #13
              25b9 c21d  st   [$1d]       10794  st([vTmp])                      #14
              25ba 112b  ld   [$2b],x     10795  ld([sysArgs+7],X)               #15 get result cond=0
              25bb 0118  ld   [$18]       10796  ld([vAC])                       #16
              25bc 4119  ora  [$19]       10797  ora([vAC+1])                    #17
              25bd ecc0  bne  $25c0       10798  bne(pc()+3)                     #18
              25be fcc1  bra  $25c1       10799  bra(pc()+3)                     #19
              25bf 0500  ld   [x]         10800  ld([X])                         #20 get result cond == 0
              25c0 011d  ld   [$1d]       10801  ld([vTmp])                      #20 get result cond != 0
              25c1 c218  st   [$18]       10802  st([vAC])                       #21 result.lo
              25c2 0000  ld   $00         10803  ld(0)                           #22
              25c3 c219  st   [$19]       10804  st([vAC+1])                     #23 result.hi = 0
              25c4 1403  ld   $03,y       10805  ld(hi('NEXTY'),Y)               #24
              25c5 e000  jmp  y,$00       10806  jmp(Y,'NEXTY')                  #25
              25c6 00f2  ld   $f2         10807  ld(-28/2)                       #26
                                          10808
                                          10809  # CONDIB implementation
                                          10810  label('condib#13')
condib#13:    25c7 112b  ld   [$2b],x     10811  ld([sysArgs+7],X)               #13 get result cond=0
              25c8 0118  ld   [$18]       10812  ld([vAC])                       #14
              25c9 4119  ora  [$19]       10813  ora([vAC+1])                    #15
              25ca eccd  bne  $25cd       10814  bne(pc()+3)                     #16
              25cb fcce  bra  $25ce       10815  bra(pc()+3)                     #17
              25cc 0500  ld   [x]         10816  ld([X])                         #18 get result cond == 0
              25cd 011d  ld   [$1d]       10817  ld([vTmp])                      #18 get result cond != 0
              25ce c218  st   [$18]       10818  st([vAC])                       #19 result.lo
              25cf 0000  ld   $00         10819  ld(0)                           #20
              25d0 c219  st   [$19]       10820  st([vAC+1])                     #21 result.hi = 0
              25d1 1403  ld   $03,y       10821  ld(hi('NEXTY'),Y)               #22
              25d2 e000  jmp  y,$00       10822  jmp(Y,'NEXTY')                  #23
              25d3 00f3  ld   $f3         10823  ld(-26/2)                       #24
                                          10824
                                          10825  # CONDBI implementation
                                          10826  label('condbi#13')
condbi#13:    25d4 1200  ld   ac,x        10827  ld(AC,X)                        #13
              25d5 0118  ld   [$18]       10828  ld([vAC])                       #14
              25d6 4119  ora  [$19]       10829  ora([vAC+1])                    #15
              25d7 ecda  bne  $25da       10830  bne(pc()+3)                     #16
              25d8 fcdb  bra  $25db       10831  bra(pc()+3)                     #17
              25d9 012b  ld   [$2b]       10832  ld([sysArgs+7])                 #18 get result cond == 0
              25da 0500  ld   [x]         10833  ld([X])                         #18 get result cond != 0
              25db c218  st   [$18]       10834  st([vAC])                       #19 result.lo
              25dc 0000  ld   $00         10835  ld(0)                           #20
              25dd c219  st   [$19]       10836  st([vAC+1])                     #21 result.hi = 0
              25de 1403  ld   $03,y       10837  ld(hi('NEXTY'),Y)               #22
              25df e000  jmp  y,$00       10838  jmp(Y,'NEXTY')                  #23
              25e0 00f3  ld   $f3         10839  ld(-26/2)                       #24
                                          10840
                                          10841
              25e1 0200  nop              10842  fillers(until=0xff)
              25e2 0200  nop
              25e3 0200  nop
              * 30 times
              25ff 0200  nop              10843  align(0x100, size=0x100)
                                          10844
                                          10845  #-----------------------------------------------------------------------
                                          10846  #       PREFX2 implementation page, (0x2600)
                                          10847  #-----------------------------------------------------------------------
                                          10848  #
                                          10849  # LSLN implementation
                                          10850  label('lsln#13')
lsln#13:      2600 a001  suba $01         10851  suba(1)                         #13
              2601 f406  bge  .lsln#16    10852  bge('.lsln#16')                 #14
              2602 c22b  st   [$2b]       10853  st([sysArgs+7])                 #15
              2603 1403  ld   $03,y       10854  ld(hi('NEXTY'),Y)               #16 exit PREFX2 instruction page
              2604 e000  jmp  y,$00       10855  jmp(Y,'NEXTY')                  #17
              2605 00f6  ld   $f6         10856  ld(-20/2)                       #18
                                          10857  label('.lsln#16')
.lsln#16:     2606 0118  ld   [$18]       10858  ld([vAC])                       #16
              2607 3080  anda $80,x       10859  anda(128,X)                     #17
              2608 8118  adda [$18]       10860  adda([vAC])                     #18
              2609 c218  st   [$18]       10861  st([vAC])                       #19
              260a 0500  ld   [x]         10862  ld([X])                         #20
              260b 8119  adda [$19]       10863  adda([vAC+1])                   #21
              260c 8119  adda [$19]       10864  adda([vAC+1])                   #22
              260d c219  st   [$19]       10865  st([vAC+1])                     #23
              260e 0022  ld   $22         10866  ld(hi('PREFX2_PAGE'))           #24 ENTER is at $(n-1)ff, where n = instruction page
              260f c202  st   [$02]       10867  st([vCpuSelect])                #25 restore PREFX2 instruction page
              2610 9401  adda $01,y       10868  adda(1,Y)                       #26 restart instruction
              2611 e000  jmp  y,$00       10869  jmp(Y,'NEXTY')                  #27
              2612 00f1  ld   $f1         10870  ld(-30/2)                       #28
                                          10871
                                          10872  # NOTW implementation
                                          10873  label('notw#13')
notw#13:      2613 112b  ld   [$2b],x     10874  ld([sysArgs+7],X)               #13
              2614 1400  ld   $00,y       10875  ld(0,Y)                         #14
              2615 0500  ld   [x]         10876  ld([X])                         #15
              2616 60ff  xora $ff         10877  xora(255)                       #16
              2617 de00  st   [y,x++]     10878  st([Y,Xpp])                     #17
              2618 0500  ld   [x]         10879  ld([X])                         #18
              2619 60ff  xora $ff         10880  xora(255)                       #19
              261a c600  st   [x]         10881  st([X])                         #20
              261b 1403  ld   $03,y       10882  ld(hi('REENTER'),Y)             #21
              261c e0cb  jmp  y,$cb       10883  jmp(Y,'REENTER')                #22
              261d 00f3  ld   $f3         10884  ld(-26/2)                       #23
                                          10885
                                          10886  # NEGW implementation
                                          10887  label('negw#13')
negw#13:      261e 112b  ld   [$2b],x     10888  ld([sysArgs+7],X)               #13
              261f 1400  ld   $00,y       10889  ld(0,Y)                         #14
              2620 0500  ld   [x]         10890  ld([X])                         #15
              2621 60ff  xora $ff         10891  xora(255)                       #16
              2622 8001  adda $01         10892  adda(1)                         #17
              2623 f02b  beq  .negw#20    10893  beq('.negw#20')                 #18
              2624 de00  st   [y,x++]     10894  st([Y,Xpp])                     #19
              2625 0500  ld   [x]         10895  ld([X])                         #20
              2626 60ff  xora $ff         10896  xora(255)                       #21
              2627 c600  st   [x]         10897  st([X])                         #22
              2628 1403  ld   $03,y       10898  ld(hi('REENTER'),Y)             #23
              2629 e0cb  jmp  y,$cb       10899  jmp(Y,'REENTER')                #24
              262a 00f2  ld   $f2         10900  ld(-28/2)                       #25
                                          10901  label('.negw#20')
.negw#20:     262b 0500  ld   [x]         10902  ld([X])                         #20
              262c 60ff  xora $ff         10903  xora(255)                       #21
              262d 8001  adda $01         10904  adda(1)                         #22
              262e c600  st   [x]         10905  st([X])                         #23
              262f 1403  ld   $03,y       10906  ld(hi('NEXTY'),Y)               #24
              2630 e000  jmp  y,$00       10907  jmp(Y,'NEXTY')                  #25
              2631 00f2  ld   $f2         10908  ld(-28/2)                       #26
                                          10909
                                          10910  # SEXT implementation
                                          10911  label('sext#13')
sext#13:      2632 2119  anda [$19]       10912  anda([vAC+1])                   #13
              2633 ec38  bne  .sext#16    10913  bne('.sext#16')                 #14 check mask
              2634 012b  ld   [$2b]       10914  ld([sysArgs+7])                 #15
              2635 1403  ld   $03,y       10915  ld(hi('NEXTY'),Y)               #16
              2636 e000  jmp  y,$00       10916  jmp(Y,'NEXTY')                  #17
              2637 00f6  ld   $f6         10917  ld(-20/2)                       #18
                                          10918  label('.sext#16')
.sext#16:     2638 60ff  xora $ff         10919  xora(255)                       #16
              2639 8001  adda $01         10920  adda(1)                         #17 mask = (~mask) + 1
              263a 4119  ora  [$19]       10921  ora([vAC+1])                    #18
              263b c219  st   [$19]       10922  st([vAC+1])                     #19 set sign bits
              263c 1403  ld   $03,y       10923  ld(hi('NEXTY'),Y)               #20
              263d e000  jmp  y,$00       10924  jmp(Y,'NEXTY')                  #21
              263e 00f4  ld   $f4         10925  ld(-24/2)                       #22
                                          10926
                                          10927  # ANDBA implementation
                                          10928  label('andba#13')
andba#13:     263f 0118  ld   [$18]       10929  ld([vAC])                       #13
              2640 2500  anda [x]         10930  anda([X])                       #14
              2641 c218  st   [$18]       10931  st([vAC])                       #15 vAC.lo &= var.lo
              2642 0000  ld   $00         10932  ld(0)                           #16
              2643 c219  st   [$19]       10933  st([vAC+1])                     #17 Store high result
              2644 1403  ld   $03,y       10934  ld(hi('NEXTY'),Y)               #18
              2645 e000  jmp  y,$00       10935  jmp(Y,'NEXTY')                  #19
              2646 00f5  ld   $f5         10936  ld(-22/2)                       #20
                                          10937
                                          10938  # ORBA implementation
                                          10939  label('orba#13')
orba#13:      2647 0118  ld   [$18]       10940  ld([vAC])                       #13
              2648 4500  ora  [x]         10941  ora([X])                        #14
              2649 c218  st   [$18]       10942  st([vAC])                       #15 vAC.lo |= var.lo
              264a 1403  ld   $03,y       10943  ld(hi('NEXTY'),Y)               #16
              264b e000  jmp  y,$00       10944  jmp(Y,'NEXTY')                  #17
              264c 00f6  ld   $f6         10945  ld(-20/2)                       #18
                                          10946
                                          10947  # XORBA implementation
                                          10948  label('xorba#13')
xorba#13:     264d 0118  ld   [$18]       10949  ld([vAC])                       #13
              264e 6500  xora [x]         10950  xora([X])                       #14
              264f c218  st   [$18]       10951  st([vAC])                       #15 vAC.lo ^= var.lo
              2650 1403  ld   $03,y       10952  ld(hi('NEXTY'),Y)               #16
              2651 e000  jmp  y,$00       10953  jmp(Y,'NEXTY')                  #17
              2652 00f6  ld   $f6         10954  ld(-20/2)                       #18
                                          10955
                                          10956  # FREQM implementation, (frequency control for static data in the correct format, i.e. MIDI)
                                          10957  label('freqm#13')
freqm#13:     2653 1200  ld   ac,x        10958  ld(AC,X)                        #13 chan var, (operand from PREFX2)
              2654 0500  ld   [x]         10959  ld([X])                         #14
              2655 2003  anda $03         10960  anda(3)                         #15
              2656 9401  adda $01,y       10961  adda(1,Y)                       #16
              2657 10fc  ld   $fc,x       10962  ld(0xFC,X)                      #17
              2658 0118  ld   [$18]       10963  ld([vAC])                       #18
              2659 de00  st   [y,x++]     10964  st([Y,Xpp])                     #19
              265a 0119  ld   [$19]       10965  ld([vAC+1])                     #20
              265b ce00  st   [y,x]       10966  st([Y,X])                       #21
              265c 1403  ld   $03,y       10967  ld(hi('NEXTY'),Y)               #22
              265d e000  jmp  y,$00       10968  jmp(Y,'NEXTY')                  #23
              265e 00f3  ld   $f3         10969  ld(-26/2)                       #24
                                          10970
                                          10971  # FREQA implementation
                                          10972  label('freqa#13')
freqa#13:     265f 0500  ld   [x]         10973  ld([X])                         #13
              2660 a001  suba $01         10974  suba(1)                         #14
              2661 2003  anda $03         10975  anda(3)                         #15
              2662 9401  adda $01,y       10976  adda(1,Y)                       #16
              2663 10fc  ld   $fc,x       10977  ld(0xFC,X)                      #17
              2664 0118  ld   [$18]       10978  ld([vAC])                       #18
              2665 de00  st   [y,x++]     10979  st([Y,Xpp])                     #19
              2666 0119  ld   [$19]       10980  ld([vAC+1])                     #20
              2667 ce00  st   [y,x]       10981  st([Y,X])                       #21
              2668 1403  ld   $03,y       10982  ld(hi('NEXTY'),Y)               #22
              2669 e000  jmp  y,$00       10983  jmp(Y,'NEXTY')                  #23
              266a 00f3  ld   $f3         10984  ld(-26/2)                       #24
                                          10985
                                          10986  # FREQZI implementation
                                          10987  label('freqzi#13')
freqzi#13:    266b 9401  adda $01,y       10988  adda(1,Y)                       #13
              266c 10fc  ld   $fc,x       10989  ld(0xFC,X)                      #14
              266d 0000  ld   $00         10990  ld(0)                           #15
              266e de00  st   [y,x++]     10991  st([Y,Xpp])                     #16
              266f ce00  st   [y,x]       10992  st([Y,X])                       #17
              2670 1403  ld   $03,y       10993  ld(hi('NEXTY'),Y)               #18
              2671 e000  jmp  y,$00       10994  jmp(Y,'NEXTY')                  #19
              2672 00f5  ld   $f5         10995  ld(-22/2)                       #20
                                          10996
                                          10997  # VOLM implementation, (volume control for static data in the correct format, i.e. MIDI)
                                          10998  label('volm#13')
volm#13:      2673 1200  ld   ac,x        10999  ld(AC,X)                        #13 chan var, (operand from PREFX2)
              2674 0500  ld   [x]         11000  ld([X])                         #14
              2675 2003  anda $03         11001  anda(3)                         #15
              2676 9401  adda $01,y       11002  adda(1,Y)                       #16
              2677 10fa  ld   $fa,x       11003  ld(0xFA,X)                      #17
              2678 0118  ld   [$18]       11004  ld([vAC])                       #18
              2679 ce00  st   [y,x]       11005  st([Y,X])                       #19
              267a 1403  ld   $03,y       11006  ld(hi('NEXTY'),Y)               #20
              267b e000  jmp  y,$00       11007  jmp(Y,'NEXTY')                  #21
              267c 00f4  ld   $f4         11008  ld(-24/2)                       #22
                                          11009
                                          11010  # VOLA implementation
                                          11011  label('vola#13')
vola#13:      267d 0500  ld   [x]         11012  ld([X])                         #13
              267e a001  suba $01         11013  suba(1)                         #14
              267f 2003  anda $03         11014  anda(3)                         #15
              2680 9401  adda $01,y       11015  adda(1,Y)                       #16
              2681 10fa  ld   $fa,x       11016  ld(0xFA,X)                      #17
              2682 003f  ld   $3f         11017  ld(63)                          #18
              2683 a118  suba [$18]       11018  suba([vAC])                     #19
              2684 8040  adda $40         11019  adda(64)                        #20
              2685 ce00  st   [y,x]       11020  st([Y,X])                       #21
              2686 1403  ld   $03,y       11021  ld(hi('NEXTY'),Y)               #22
              2687 e000  jmp  y,$00       11022  jmp(Y,'NEXTY')                  #23
              2688 00f3  ld   $f3         11023  ld(-26/2)                       #24
                                          11024
                                          11025  # MODA implementation
                                          11026  label('moda#13')
moda#13:      2689 0500  ld   [x]         11027  ld([X])                         #13
              268a a001  suba $01         11028  suba(1)                         #14
              268b 2003  anda $03         11029  anda(3)                         #15
              268c 9401  adda $01,y       11030  adda(1,Y)                       #16
              268d 10fb  ld   $fb,x       11031  ld(0xFB,X)                      #17
              268e 0118  ld   [$18]       11032  ld([vAC])                       #18
              268f ce00  st   [y,x]       11033  st([Y,X])                       #19
              2690 1403  ld   $03,y       11034  ld(hi('NEXTY'),Y)               #20
              2691 e000  jmp  y,$00       11035  jmp(Y,'NEXTY')                  #21
              2692 00f4  ld   $f4         11036  ld(-24/2)                       #22
                                          11037
                                          11038  # MODZI implementation
                                          11039  label('modzi#13')
modzi#13:     2693 2003  anda $03         11040  anda(3)                         #13
              2694 9401  adda $01,y       11041  adda(1,Y)                       #14
              2695 10fa  ld   $fa,x       11042  ld(0xFA,X)                      #15
              2696 0000  ld   $00         11043  ld(0)                           #16
              2697 de00  st   [y,x++]     11044  st([Y,Xpp])                     #17
              2698 0002  ld   $02         11045  ld(2)                           #18
              2699 ce00  st   [y,x]       11046  st([Y,X])                       #19
              269a 1403  ld   $03,y       11047  ld(hi('NEXTY'),Y)               #20
              269b e000  jmp  y,$00       11048  jmp(Y,'NEXTY')                  #21
              269c 00f4  ld   $f4         11049  ld(-24/2)                       #22
                                          11050
                                          11051
                                          11052  # SMPCPY implementation
                                          11053  label('smpcpy#13')
smpcpy#13:    269d 1400  ld   $00,y       11054  ld(0,Y)                         #13
              269e 00f1  ld   $f1         11055  ld(min(0,maxTicks-60/2))        #14
              269f 8115  adda [$15]       11056  adda([vTicks])                  #15
              26a0 e8d3  blt  .smpcpy#18  11057  blt('.smpcpy#18')               #16 not enough time left, so retry
              26a1 0500  ld   [x]         11058  ld([X])                         #17 dst address = [dst var]
              26a2 de00  st   [y,x++]     11059  st([Y,Xpp])                     #18
              26a3 c2b0  st   [$b0]       11060  st([0xB0])                      #19
              26a4 0500  ld   [x]         11061  ld([X])                         #20
              26a5 c2b1  st   [$b1]       11062  st([0xB1])                      #21
              26a6 1118  ld   [$18],x     11063  ld([vAC],X)                     #22 low byte of src address
              26a7 1519  ld   [$19],y     11064  ld([vAC+1],Y)                   #23 high byte of arc address
              26a8 0d00  ld   [y,x]       11065  ld([Y,X])                       #24
              26a9 c21d  st   [$1d]       11066  st([vTmp])                      #25 packed sample, 4:4
              26aa 1407  ld   $07,y       11067  ld(soundTable>>8,Y)             #26
              26ab 20f0  anda $f0         11068  anda(0xF0)                      #27 high nibble
              26ac 5003  ora  $03,x       11069  ora(0x03,X)                     #28
              26ad 0d00  ld   [y,x]       11070  ld([Y,X])                       #29 high nibble >>2
              26ae 11b0  ld   [$b0],x     11071  ld([0xB0],X)                    #30 low byte dst address
              26af 15b1  ld   [$b1],y     11072  ld([0xB1],Y)                    #31 high byte dst address
              26b0 ce00  st   [y,x]       11073  st([Y,X])                       #32 [0x0702 + i] = 6bit sample
              26b1 01b0  ld   [$b0]       11074  ld([0xB0])                      #33
              26b2 9004  adda $04,x       11075  adda(4,X)                       #34
              26b3 8008  adda $08         11076  adda(8)                         #35
              26b4 c2b0  st   [$b0]       11077  st([0xB0])                      #36
              26b5 011d  ld   [$1d]       11078  ld([vTmp])                      #37 packed sample, 4:4
              26b6 200f  anda $0f         11079  anda(0x0F)                      #38 low nibble
              26b7 8200  adda ac          11080  adda(AC)                        #39
              26b8 8200  adda ac          11081  adda(AC)                        #40 low nibble <<2
              26b9 ce00  st   [y,x]       11082  st([Y,X])                       #41 [0x0706 + i] = 6bit sample
              26ba 112b  ld   [$2b],x     11083  ld([sysArgs+7],X)               #42
              26bb 01b0  ld   [$b0]       11084  ld([0xB0])                      #43
              26bc c600  st   [x]         11085  st([X])                         #44
              26bd a002  suba $02         11086  suba(0x02)                      #45
              26be f0d0  beq  .smpcpy#48  11087  beq('.smpcpy#48')               #46 check for end sample
              26bf 0118  ld   [$18]       11088  ld([vAC])                       #47
              26c0 8001  adda $01         11089  adda(1)                         #48
              26c1 eccb  bne  .smpcpy#51  11090  bne('.smpcpy#51')               #49
              26c2 c218  st   [$18]       11091  st([vAC])                       #50
              26c3 0119  ld   [$19]       11092  ld([vAC+1])                     #51
              26c4 8001  adda $01         11093  adda(1)                         #52
              26c5 c219  st   [$19]       11094  st([vAC+1])                     #53
              26c6 0022  ld   $22         11095  ld(hi('PREFX2_PAGE'))           #54 ENTER is at $(n-1)ff, where n = instruction page
              26c7 c202  st   [$02]       11096  st([vCpuSelect])                #55 restore PREFX2 instruction page
              26c8 9401  adda $01,y       11097  adda(1,Y)                       #56 restart instruction
              26c9 e000  jmp  y,$00       11098  jmp(Y,'NEXTY')                  #57
              26ca 00e2  ld   $e2         11099  ld(-60/2)                       #58
                                          11100
                                          11101  label('.smpcpy#51')
.smpcpy#51:   26cb 0022  ld   $22         11102  ld(hi('PREFX2_PAGE'))           #51 ENTER is at $(n-1)ff, where n = instruction page
              26cc c202  st   [$02]       11103  st([vCpuSelect])                #52 restore PREFX2 instruction page
              26cd 9401  adda $01,y       11104  adda(1,Y)                       #53 restart instruction
              26ce e0cb  jmp  y,$cb       11105  jmp(Y,'REENTER')                #54
              26cf 00e3  ld   $e3         11106  ld(-58/2)                       #55
                                          11107
                                          11108  label('.smpcpy#48')
.smpcpy#48:   26d0 1403  ld   $03,y       11109  ld(hi('NEXTY'),Y)               #48
              26d1 e000  jmp  y,$00       11110  jmp(Y,'NEXTY')                  #49
              26d2 00e6  ld   $e6         11111  ld(-52/2)                       #50
                                          11112
                                          11113  label('.smpcpy#18')
.smpcpy#18:   26d3 0022  ld   $22         11114  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              26d4 c202  st   [$02]       11115  st([vCpuSelect])                #19 restore PREFX2 instruction page
              26d5 9401  adda $01,y       11116  adda(1,Y)                       #20 retry instruction
              26d6 e000  jmp  y,$00       11117  jmp(Y,'NEXTY')                  #21
              26d7 00f4  ld   $f4         11118  ld(-24/2)                       #22
                                          11119
                                          11120
                                          11121  # CMPWS implementation, vAC = vAC CMPWS var
                                          11122  #           LDW   var0
                                          11123  #           XORW  var1
                                          11124  #           BGE   CMPWS_GE
                                          11125  #           LDW   var0
                                          11126  #           BRA   CMPWS_RT
                                          11127  #CMPWS_GE   LDW   var0
                                          11128  #           SUBW  var1
                                          11129  #CMPWS_RT   RET
                                          11130  #label('cmpws#13')
                                          11131  #ld(min(0,maxTicks-38/2))        #13
                                          11132  #adda([vTicks])                  #14
                                          11133  #blt('.cmpws#17')                #15 not enough time left, so retry
                                          11134  #ld(0,Y)                         #16
                                          11135  #ld([X])                         #17
                                          11136  #st([Y,Xpp])                     #18
                                          11137  #st([0xB0])                      #19 cmp var.lo
                                          11138  #ld([X])                         #20
                                          11139  #st([0xB1])                      #21 cmp var.hi
                                          11140  #xora([vAC+1])                   #22
                                          11141  #blt('.cmpws#25')                #23 if < 0
                                          11142  #ld([vAC])                       #24 Low byte
                                          11143  #bmi('.cmpws#27')                #25
                                          11144  #suba([0xB0])                    #26
                                          11145  #st([vAC])                       #27 Store low result
                                          11146  #ora([0xB0])                     #28 Carry in bit 7
                                          11147  #anda(0x80,X)                    #29 Move carry to bit 0
                                          11148  #ld([vAC+1])                     #30
                                          11149  #suba([X])                       #31
                                          11150  #suba([0xB1])                    #32 sub var.hi with carry
                                          11151  #st([vAC+1])                     #33
                                          11152  #ld(hi('NEXTY'),Y)               #34
                                          11153  #jmp(Y,'NEXTY')                  #35
                                          11154  #ld(-38/2)                       #36
                                          11155  #
                                          11156  #label('.cmpws#25')
                                          11157  #ld(hi('REENTER'),Y)             #25
                                          11158  #jmp(Y,'REENTER')                #26
                                          11159  #ld(-30/2)                       #27
                                          11160  #
                                          11161  #label('.cmpws#27')
                                          11162  #st([vAC])                       #27 Store low result
                                          11163  #anda([0xB0])                    #28 Carry in bit 7
                                          11164  #anda(0x80,X)                    #29 Move carry to bit 0
                                          11165  #ld([vAC+1])                     #30
                                          11166  #suba([X])                       #31
                                          11167  #suba([0xB1])                    #32 sub var.hi with carry
                                          11168  #st([vAC+1])                     #33
                                          11169  #ld(hi('NEXTY'),Y)               #34
                                          11170  #jmp(Y,'NEXTY')                  #35
                                          11171  #ld(-38/2)                       #36
                                          11172  #
                                          11173  #label('.cmpws#17')
                                          11174  #ld(hi('PREFX2_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
                                          11175  #st([vCpuSelect])                #18 restore PREFX2 instruction page
                                          11176  #adda(1,Y)                       #19 retry instruction
                                          11177  #jmp(Y,'REENTER')                #20
                                          11178  #ld(-24/2)                       #21
                                          11179
                                          11180
              26d8 0200  nop              11181  fillers(until=0xff)
              26d9 0200  nop
              26da 0200  nop
              * 39 times
              26ff 0200  nop              11182  align(0x100, size=0x100)
                                          11183
                                          11184  #-----------------------------------------------------------------------
                                          11185  #       PREFX1 implementation page, (0x2700)
                                          11186  #-----------------------------------------------------------------------
                                          11187  #
                                          11188  # NOTE implementation: vAC = ROM:[NotesTable + vAC.lo*2], 22 + 46 cycles
                                          11189  label('note#13')
note#13:      2700 c21d  st   [$1d]       11190  st([vTmp])                      #13 low byte of low note return address
              2701 00f8  ld   $f8         11191  ld(min(0,maxTicks-46/2))        #14
              2702 8115  adda [$15]       11192  adda([vTicks])                  #15
              2703 e814  blt  .note#18    11193  blt('.note#18')                 #16 not enough time left, so retry
              2704 1409  ld   $09,y       11194  ld(hi('noteTrampoline'),Y)      #17
              2705 0118  ld   [$18]       11195  ld([vAC])                       #18 vAC.lo = note index
              2706 8200  adda ac          11196  adda(AC)                        #19 vAC.lo*2, (low note byte)
              2707 e0c0  jmp  y,$c0       11197  jmp(Y,'noteTrampoline')         #20
              2708 c219  st   [$19]       11198  st([vAC+1])                     #21 vAC.hi = vAC.lo*2
                                          11199  label('.note#28')
.note#28:     2709 c218  st   [$18]       11200  st([vAC])                       #28 vAC.lo = note.lo
              270a 0010  ld   $10         11201  ld('.note#41')                  #29
              270b c21d  st   [$1d]       11202  st([vTmp])                      #30 low byte of high note return address
              270c 1409  ld   $09,y       11203  ld(hi('noteTrampoline'),Y)      #31
              270d 0119  ld   [$19]       11204  ld([vAC+1])                     #32
              270e e0c0  jmp  y,$c0       11205  jmp(Y,'noteTrampoline')         #33
              270f 8001  adda $01         11206  adda(1)                         #34 vAC.lo*2 + 1, (high note byte)
                                          11207  label('.note#41')
.note#41:     2710 c219  st   [$19]       11208  st([vAC+1])                     #41
              2711 1403  ld   $03,y       11209  ld(hi('NEXTY'),Y)               #42
              2712 e000  jmp  y,$00       11210  jmp(Y,'NEXTY')                  #43
              2713 00e9  ld   $e9         11211  ld(-46/2)                       #44
                                          11212  label('.note#18')
.note#18:     2714 0023  ld   $23         11213  ld(hi('PREFX1_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2715 c202  st   [$02]       11214  st([vCpuSelect])                #19 restore PREFX1 instruction page
              2716 9401  adda $01,y       11215  adda(1,Y)                       #20 retry instruction
              2717 e000  jmp  y,$00       11216  jmp(Y,'NEXTY')                  #21
              2718 00f4  ld   $f4         11217  ld(-24/2)                       #22
                                          11218
                                          11219  # MIDI implementation: vAC = ROM:[NotesTable + (vAC.lo - 11)*2], 22 + 48 cycles
                                          11220  label('midi#13')
midi#13:      2719 c21d  st   [$1d]       11221  st([vTmp])                      #13 low byte of low midi return address
              271a 00f7  ld   $f7         11222  ld(min(0,maxTicks-48/2))        #14
              271b 8115  adda [$15]       11223  adda([vTicks])                  #15
              271c e82e  blt  .midi#18    11224  blt('.midi#18')                 #16 not enough time left, so retry
              271d 1409  ld   $09,y       11225  ld(hi('noteTrampoline'),Y)      #17
              271e 0118  ld   [$18]       11226  ld([vAC])                       #18 vAC.lo = midi index
              271f a00b  suba $0b         11227  suba(11)                        #19 vAC.lo -= 11
              2720 8200  adda ac          11228  adda(AC)                        #20 vAC.lo*2, (low midi byte)
              2721 e0c0  jmp  y,$c0       11229  jmp(Y,'noteTrampoline')         #21
              2722 c219  st   [$19]       11230  st([vAC+1])                     #22 vAC.hi = vAC.lo*2
                                          11231  label('.midi#29')
.midi#29:     2723 c218  st   [$18]       11232  st([vAC])                       #29 vAC.lo = midi.lo
              2724 002a  ld   $2a         11233  ld('.midi#42')                  #30
              2725 c21d  st   [$1d]       11234  st([vTmp])                      #31 low byte of high midi return address
              2726 1409  ld   $09,y       11235  ld(hi('noteTrampoline'),Y)      #32
              2727 0119  ld   [$19]       11236  ld([vAC+1])                     #33
              2728 e0c0  jmp  y,$c0       11237  jmp(Y,'noteTrampoline')         #34
              2729 8001  adda $01         11238  adda(1)                         #35 vAC.lo*2 + 1, (high midi byte)
                                          11239  label('.midi#42')
.midi#42:     272a c219  st   [$19]       11240  st([vAC+1])                     #42
              272b 1403  ld   $03,y       11241  ld(hi('REENTER'),Y)             #43
              272c e0cb  jmp  y,$cb       11242  jmp(Y,'REENTER')                #44
              272d 00e8  ld   $e8         11243  ld(-48/2)                       #45
                                          11244  label('.midi#18')
.midi#18:     272e 0023  ld   $23         11245  ld(hi('PREFX1_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              272f c202  st   [$02]       11246  st([vCpuSelect])                #19 restore PREFX1 instruction page
              2730 9401  adda $01,y       11247  adda(1,Y)                       #20 retry instruction
              2731 e000  jmp  y,$00       11248  jmp(Y,'NEXTY')                  #21
              2732 00f4  ld   $f4         11249  ld(-24/2)                       #22
                                          11250
                                          11251  # XLA, implementation, (lb3361)
                                          11252  label('xla#13')
xla#13:       2733 c21d  st   [$1d]       11253  st([vTmp])                      #13
              2734 011a  ld   [$1a]       11254  ld([vLR])                       #14
              2735 c218  st   [$18]       11255  st([vAC])                       #15
              2736 011d  ld   [$1d]       11256  ld([vTmp])                      #16
              2737 c21a  st   [$1a]       11257  st([vLR])                       #17
              2738 0119  ld   [$19]       11258  ld([vAC+1])                     #18
              2739 c21d  st   [$1d]       11259  st([vTmp])                      #19
              273a 011b  ld   [$1b]       11260  ld([vLR+1])                     #20
              273b c219  st   [$19]       11261  st([vAC+1])                     #21
              273c 011d  ld   [$1d]       11262  ld([vTmp])                      #22
              273d c21b  st   [$1b]       11263  st([vLR+1])                     #23
              273e 1403  ld   $03,y       11264  ld(hi('NEXTY'),Y)               #24
              273f e000  jmp  y,$00       11265  jmp(Y,'NEXTY')                  #25
              2740 00f2  ld   $f2         11266  ld(-28/2)                       #26
                                          11267
                                          11268  # JMPI implementation, (lb3361)
                                          11269  label('jmpi#13')
jmpi#13:      2741 c216  st   [$16]       11270  st([vPC])                       #13
              2742 012b  ld   [$2b]       11271  ld([sysArgs+7])                 #14
              2743 c217  st   [$17]       11272  st([vPC+1])                     #15
              2744 1403  ld   $03,y       11273  ld(hi('NEXTY'),Y)               #16
              2745 e000  jmp  y,$00       11274  jmp(Y,'NEXTY')                  #17
              2746 00f6  ld   $f6         11275  ld(-20/2)                       #18
                                          11276
                                          11277
              2747 0200  nop              11278  fillers(until=0xff)
              2748 0200  nop
              2749 0200  nop
              * 184 times
              27ff 0200  nop              11279  align(0x100, size=0x100)
                                          11280
                                          11281  #-----------------------------------------------------------------------
                                          11282  #       More vCPU instruction implementations, (0x2800)
                                          11283  #-----------------------------------------------------------------------
                                          11284  #
                                          11285  # ADDVI implementation
                                          11286  label('addvi#13')
addvi#13:     2800 1517  ld   [$17],y     11287  ld([vPC+1],Y)                   #13 vPC.hi
              2801 c22a  st   [$2a]       11288  st([sysArgs+6])                 #14 immediate 8bit
              2802 de00  st   [y,x++]     11289  st([Y,Xpp])                     #15 X++
              2803 00f6  ld   $f6         11290  ld(min(0,maxTicks-50/2))        #16
              2804 8115  adda [$15]       11291  adda([vTicks])                  #17
              2805 e833  blt  .addvi#20   11292  blt('.addvi#20')                #18 not enough time left, so retry
              2806 0d00  ld   [y,x]       11293  ld([Y,X])                       #19
              2807 d22b  st   [$2b],x     11294  st([sysArgs+7],X)               #20 dst var addr
              2808 1400  ld   $00,y       11295  ld(0,Y)                         #21
              2809 0500  ld   [x]         11296  ld([X])                         #22 dst low value
              280a c218  st   [$18]       11297  st([vAC])                       #23
              280b de00  st   [y,x++]     11298  st([Y,Xpp])                     #24 X++
              280c 0500  ld   [x]         11299  ld([X])                         #25 dst hi value
              280d c219  st   [$19]       11300  st([vAC+1])                     #26
              280e 012a  ld   [$2a]       11301  ld([sysArgs+6])                 #27
              280f 8118  adda [$18]       11302  adda([vAC])                     #28
              2810 c218  st   [$18]       11303  st([vAC])                       #29 Store low result
              2811 e823  blt  .addvi#32   11304  bmi('.addvi#32')                #30 Now figure out if there was a carry
              2812 a12a  suba [$2a]       11305  suba([sysArgs+6])               #31 Gets back the initial value of vAC
              2813 412a  ora  [$2a]       11306  ora([sysArgs+6])                #32 Carry in bit 7
              2814 3080  anda $80,x       11307  anda(0x80,X)                    #33 Move carry to bit 0
              2815 0500  ld   [x]         11308  ld([X])                         #34
              2816 8119  adda [$19]       11309  adda([vAC+1])                   #35 Add the high bytes with carry
              2817 c219  st   [$19]       11310  st([vAC+1])                     #36 Store high result
              2818 112b  ld   [$2b],x     11311  ld([sysArgs+7],X)               #37
              2819 0118  ld   [$18]       11312  ld([vAC])                       #38
              281a de00  st   [y,x++]     11313  st([Y,Xpp])                     #39
              281b 0119  ld   [$19]       11314  ld([vAC+1])                     #40
              281c c600  st   [x]         11315  st([X])                         #41
              281d 0116  ld   [$16]       11316  ld([vPC])                       #42
              281e 8001  adda $01         11317  adda(1)                         #43
              281f c216  st   [$16]       11318  st([vPC])                       #44
              2820 1403  ld   $03,y       11319  ld(hi('REENTER'),Y)             #45
              2821 e0cb  jmp  y,$cb       11320  jmp(Y,'REENTER')                #46
              2822 00e7  ld   $e7         11321  ld(-50/2)                       #47
                                          11322
                                          11323  label('.addvi#32')
.addvi#32:    2823 212a  anda [$2a]       11324  anda([sysArgs+6])               #32 Carry in bit 7
              2824 3080  anda $80,x       11325  anda(0x80,X)                    #33 Move carry to bit 0
              2825 0500  ld   [x]         11326  ld([X])                         #34
              2826 8119  adda [$19]       11327  adda([vAC+1])                   #35 Add the high bytes with carry
              2827 c219  st   [$19]       11328  st([vAC+1])                     #36 Store high result
              2828 112b  ld   [$2b],x     11329  ld([sysArgs+7],X)               #37
              2829 0118  ld   [$18]       11330  ld([vAC])                       #38
              282a de00  st   [y,x++]     11331  st([Y,Xpp])                     #39
              282b 0119  ld   [$19]       11332  ld([vAC+1])                     #40
              282c c600  st   [x]         11333  st([X])                         #41
              282d 0116  ld   [$16]       11334  ld([vPC])                       #42
              282e 8001  adda $01         11335  adda(1)                         #43
              282f c216  st   [$16]       11336  st([vPC])                       #44
              2830 1403  ld   $03,y       11337  ld(hi('REENTER'),Y)             #45
              2831 e0cb  jmp  y,$cb       11338  jmp(Y,'REENTER')                #46
              2832 00e7  ld   $e7         11339  ld(-50/2)                       #47
                                          11340
                                          11341  label('.addvi#20')
.addvi#20:    2833 0116  ld   [$16]       11342  ld([vPC])                       #20 retry instruction
              2834 a002  suba $02         11343  suba(2)                         #21
              2835 c216  st   [$16]       11344  st([vPC])                       #22
              2836 1403  ld   $03,y       11345  ld(hi('REENTER'),Y)             #23
              2837 e0cb  jmp  y,$cb       11346  jmp(Y,'REENTER')                #24
              2838 00f2  ld   $f2         11347  ld(-28/2)                       #25
                                          11348
                                          11349
                                          11350  # SUBVI implementation
                                          11351  label('subvi#13')
subvi#13:     2839 1517  ld   [$17],y     11352  ld([vPC+1],Y)                   #13 vPC.hi
              283a c22a  st   [$2a]       11353  st([sysArgs+6])                 #14 immediate 8bit
              283b de00  st   [y,x++]     11354  st([Y,Xpp])                     #15 X++
              283c 00f6  ld   $f6         11355  ld(min(0,maxTicks-50/2))        #16
              283d 8115  adda [$15]       11356  adda([vTicks])                  #17
              283e e86d  blt  .subvi#20   11357  blt('.subvi#20')                #18 not enough time left, so retry
              283f 0d00  ld   [y,x]       11358  ld([Y,X])                       #19
              2840 d22b  st   [$2b],x     11359  st([sysArgs+7],X)               #20 dst var addr
              2841 1400  ld   $00,y       11360  ld(0,Y)                         #21
              2842 0500  ld   [x]         11361  ld([X])                         #22 dst low value
              2843 c218  st   [$18]       11362  st([vAC])                       #23
              2844 de00  st   [y,x++]     11363  st([Y,Xpp])                     #24 X++
              2845 0500  ld   [x]         11364  ld([X])                         #25 dst hi value
              2846 c219  st   [$19]       11365  st([vAC+1])                     #26
              2847 112b  ld   [$2b],x     11366  ld([sysArgs+7],X)               #27 dst var addr
              2848 0500  ld   [x]         11367  ld([X])                         #28
              2849 e85c  blt  .subvi#31   11368  bmi('.subvi#31')                #29
              284a a12a  suba [$2a]       11369  suba([sysArgs+6])               #30
              284b c218  st   [$18]       11370  st([vAC])                       #31 store low result
              284c 412a  ora  [$2a]       11371  ora([sysArgs+6])                #32 carry in bit 7
              284d 3080  anda $80,x       11372  anda(0x80,X)                    #33 move carry to bit 0
              284e 0119  ld   [$19]       11373  ld([vAC+1])                     #34
              284f a500  suba [x]         11374  suba([X])                       #35
              2850 c219  st   [$19]       11375  st([vAC+1])                     #36 store high result
              2851 112b  ld   [$2b],x     11376  ld([sysArgs+7],X)               #37
              2852 0118  ld   [$18]       11377  ld([vAC])                       #38
              2853 de00  st   [y,x++]     11378  st([Y,Xpp])                     #39
              2854 0119  ld   [$19]       11379  ld([vAC+1])                     #40
              2855 c600  st   [x]         11380  st([X])                         #41
              2856 0116  ld   [$16]       11381  ld([vPC])                       #42
              2857 8001  adda $01         11382  adda(1)                         #43
              2858 c216  st   [$16]       11383  st([vPC])                       #44
              2859 1403  ld   $03,y       11384  ld(hi('REENTER'),Y)             #45
              285a e0cb  jmp  y,$cb       11385  jmp(Y,'REENTER')                #46
              285b 00e7  ld   $e7         11386  ld(-50/2)                       #47
                                          11387
                                          11388  label('.subvi#31')
.subvi#31:    285c c218  st   [$18]       11389  st([vAC])                       #31 store low result
              285d 212a  anda [$2a]       11390  anda([sysArgs+6])               #32 carry in bit 7
              285e 3080  anda $80,x       11391  anda(0x80,X)                    #33 move carry to bit 0
              285f 0119  ld   [$19]       11392  ld([vAC+1])                     #34
              2860 a500  suba [x]         11393  suba([X])                       #35
              2861 c219  st   [$19]       11394  st([vAC+1])                     #36 store high result
              2862 112b  ld   [$2b],x     11395  ld([sysArgs+7],X)               #37
              2863 0118  ld   [$18]       11396  ld([vAC])                       #38
              2864 de00  st   [y,x++]     11397  st([Y,Xpp])                     #39
              2865 0119  ld   [$19]       11398  ld([vAC+1])                     #40
              2866 c600  st   [x]         11399  st([X])                         #41
              2867 0116  ld   [$16]       11400  ld([vPC])                       #42
              2868 8001  adda $01         11401  adda(1)                         #43
              2869 c216  st   [$16]       11402  st([vPC])                       #44
              286a 1403  ld   $03,y       11403  ld(hi('REENTER'),Y)             #45
              286b e0cb  jmp  y,$cb       11404  jmp(Y,'REENTER')                #46
              286c 00e7  ld   $e7         11405  ld(-50/2)                       #47
                                          11406
                                          11407  label('.subvi#20')
.subvi#20:    286d 0116  ld   [$16]       11408  ld([vPC])                       #20 retry instruction
              286e a002  suba $02         11409  suba(2)                         #21
              286f c216  st   [$16]       11410  st([vPC])                       #22
              2870 1403  ld   $03,y       11411  ld(hi('REENTER'),Y)             #23
              2871 e0cb  jmp  y,$cb       11412  jmp(Y,'REENTER')                #24
              2872 00f2  ld   $f2         11413  ld(-28/2)                       #25
                                          11414
                                          11415
                                          11416  # OSCPX implementation
                                          11417  label('oscpx#13')
oscpx#13:     2873 d22a  st   [$2a],x     11418  st([sysArgs+6],X)               #13 sample address var
              2874 00fa  ld   $fa         11419  ld(min(0,maxTicks-42/2))        #14
              2875 8115  adda [$15]       11420  adda([vTicks])                  #15
              2876 e88f  blt  .oscpx#18   11421  blt('.oscpx#18')                #16 not enough time left, so retry
              2877 0500  ld   [x]         11422  ld([X])                         #17 sample address low byte
              2878 112b  ld   [$2b],x     11423  ld([sysArgs+7],X)               #18 index var
              2879 8500  adda [x]         11424  adda([X])                       #19 sample address low byte + index
              287a c21d  st   [$1d]       11425  st([vTmp])                      #20
              287b 012a  ld   [$2a]       11426  ld([sysArgs+6])                 #21
              287c 9001  adda $01,x       11427  adda(1,X)                       #22
              287d 0500  ld   [x]         11428  ld([X])                         #23
              287e 1600  ld   ac,y        11429  ld(AC,Y)                        #24 sample address high byte
              287f 111d  ld   [$1d],x     11430  ld([vTmp],X)                    #25
              2880 0d00  ld   [y,x]       11431  ld([Y,X])                       #26
              2881 20fc  anda $fc         11432  anda(0xFC)                      #27 6bit sample in upper 8bits
              2882 1407  ld   $07,y       11433  ld(soundTable>>8,Y)             #28
              2883 5003  ora  $03,x       11434  ora(0x03,X)                     #29
              2884 0d00  ld   [y,x]       11435  ld([Y,X])                       #30 6bit sample, (>>2)
              2885 9519  adda [$19],y     11436  adda([vAC+1],Y)                 #31 dest pixel address high byte
              2886 0118  ld   [$18]       11437  ld([vAC])                       #32 dest pixel address low byte
              2887 112b  ld   [$2b],x     11438  ld([sysArgs+7],X)               #33 index
              2888 8500  adda [x]         11439  adda([X])                       #34 sample address low byte + index
              2889 1200  ld   ac,x        11440  ld(AC,X)                        #35
              288a 01a3  ld   [$a3]       11441  ld([0xA3])                      #36 pixel colour
              288b ce00  st   [y,x]       11442  st([Y,X])                       #37
              288c 1403  ld   $03,y       11443  ld(hi('NEXTY'),Y)               #38
              288d e000  jmp  y,$00       11444  jmp(Y,'NEXTY')                  #39
              288e 00eb  ld   $eb         11445  ld(-42/2)                       #40
                                          11446
                                          11447  label('.oscpx#18')
.oscpx#18:    288f 0021  ld   $21         11448  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2890 c202  st   [$02]       11449  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2891 9401  adda $01,y       11450  adda(1,Y)                       #20 retry instruction
              2892 e000  jmp  y,$00       11451  jmp(Y,'NEXTY')                  #21
              2893 00f4  ld   $f4         11452  ld(-24/2)                       #22
                                          11453
                                          11454
                                          11455  # CMPWS implementation, vAC = vAC CMPWS var
                                          11456  #           LDW   var0
                                          11457  #           CMPHS var1.hi
                                          11458  #           SUBW  var1
                                          11459  label('cmpws#13')
cmpws#13:     2894 00e9  ld   $e9         11460  ld(-46/2)                       #13
              2895 c21d  st   [$1d]       11461  st([vTmp])                      #14
              2896 00f8  ld   $f8         11462  ld(min(0,maxTicks-46/2))        #15
              2897 8115  adda [$15]       11463  adda([vTicks])                  #16
              2898 e8c2  blt  .cmpws#19   11464  blt('.cmpws#19')                #17 not enough time left, so retry
              2899 1400  ld   $00,y       11465  ld(0,Y)                         #18
              289a 0500  ld   [x]         11466  ld([X])                         #19
              289b de00  st   [y,x++]     11467  st([Y,Xpp])                     #20
              289c c2b0  st   [$b0]       11468  st([0xB0])                      #21 cmp var.lo
              289d 0500  ld   [x]         11469  ld([X])                         #22
              289e c2b1  st   [$b1]       11470  st([0xB1])                      #23 cmp var.hi
              289f 6119  xora [$19]       11471  xora([vAC+1])                   #24
              28a0 f4b5  bge  .cmpws#27   11472  bpl('.cmpws#27')                #25 skip if same sign
              28a1 0119  ld   [$19]       11473  ld([vAC+1])                     #26
              28a2 e8a5  blt  $28a5       11474  bmi(pc()+3)                     #27
              28a3 fca6  bra  .cmpws#30   11475  bra(pc()+3)                     #28
                                          11476
                                          11477  label('.cmpws#29')
.cmpws#29:    28a4 0001  ld   $01         11478  ld(+1)                          #29    vAC < variable
              28a5 00ff  ld   $ff         11479  ld(-1)                          #29(!) vAC > variable
                                          11480
                                          11481  label('.cmpws#30')
.cmpws#30:    28a6 8500  adda [x]         11482  adda([X])                       #30
              28a7 c219  st   [$19]       11483  st([vAC+1])                     #31
                                          11484
                                          11485  label('.cmpws#32')
.cmpws#32:    28a8 0118  ld   [$18]       11486  ld([vAC])                       #32, #30 Low byte
              28a9 e8b8  blt  .cmpws#35   11487  bmi('.cmpws#35')                #33, #31
              28aa a1b0  suba [$b0]       11488  suba([0xB0])                    #34, #32
              28ab c218  st   [$18]       11489  st([vAC])                       #35, #33 Store low result
              28ac 41b0  ora  [$b0]       11490  ora([0xB0])                     #36, #34 Carry in bit 7
              28ad 3080  anda $80,x       11491  anda(0x80,X)                    #37, #35 Move carry to bit 0
              28ae 0119  ld   [$19]       11492  ld([vAC+1])                     #38, #36
              28af a500  suba [x]         11493  suba([X])                       #39, #37
              28b0 a1b1  suba [$b1]       11494  suba([0xB1])                    #40, #38 sub var.hi with carry
              28b1 c219  st   [$19]       11495  st([vAC+1])                     #41, #39
              28b2 1403  ld   $03,y       11496  ld(hi('NEXTY'),Y)               #42, #40
              28b3 e000  jmp  y,$00       11497  jmp(Y,'NEXTY')                  #43, #41
              28b4 011d  ld   [$1d]       11498  ld([vTmp])                      #44, #42
                                          11499
                                          11500  label('.cmpws#27')
.cmpws#27:    28b5 00ea  ld   $ea         11501  ld(-44/2)                       #27
              28b6 fca8  bra  .cmpws#32   11502  bra('.cmpws#32')                #28
              28b7 c21d  st   [$1d]       11503  st([vTmp])                      #29
                                          11504
                                          11505  label('.cmpws#35')
.cmpws#35:    28b8 c218  st   [$18]       11506  st([vAC])                       #35, #33 Store low result
              28b9 21b0  anda [$b0]       11507  anda([0xB0])                    #36, #34 Carry in bit 7
              28ba 3080  anda $80,x       11508  anda(0x80,X)                    #37, #35 Move carry to bit 0
              28bb 0119  ld   [$19]       11509  ld([vAC+1])                     #38, #36
              28bc a500  suba [x]         11510  suba([X])                       #39, #37
              28bd a1b1  suba [$b1]       11511  suba([0xB1])                    #40, #38 sub var.hi with carry
              28be c219  st   [$19]       11512  st([vAC+1])                     #41, #39
              28bf 1403  ld   $03,y       11513  ld(hi('NEXTY'),Y)               #42, #40
              28c0 e000  jmp  y,$00       11514  jmp(Y,'NEXTY')                  #43, #41
              28c1 011d  ld   [$1d]       11515  ld([vTmp])                      #44, #42
                                          11516
                                          11517  label('.cmpws#19')
.cmpws#19:    28c2 0022  ld   $22         11518  ld(hi('PREFX2_PAGE'))           #19 ENTER is at $(n-1)ff, where n = instruction page
              28c3 c202  st   [$02]       11519  st([vCpuSelect])                #20 restore PREFX2 instruction page
              28c4 9401  adda $01,y       11520  adda(1,Y)                       #21 retry instruction
              28c5 e0cb  jmp  y,$cb       11521  jmp(Y,'REENTER')                #22
              28c6 00f3  ld   $f3         11522  ld(-26/2)                       #23
                                          11523
                                          11524
                                          11525  # CMPWU implementation, vAC = vAC CMPWU var
                                          11526  #           LDW   var0
                                          11527  #           CMPHU var1.hi
                                          11528  #           SUBW  var1
                                          11529  label('cmpwu#13')
cmpwu#13:     28c7 00e9  ld   $e9         11530  ld(-46/2)                       #13
              28c8 c21d  st   [$1d]       11531  st([vTmp])                      #14
              28c9 00f8  ld   $f8         11532  ld(min(0,maxTicks-46/2))        #15
              28ca 8115  adda [$15]       11533  adda([vTicks])                  #16
              28cb e8c2  blt  .cmpws#19   11534  blt('.cmpws#19')                #17 not enough time left, so retry, (use .cmpws#19)
              28cc 1400  ld   $00,y       11535  ld(0,Y)                         #18
              28cd 0500  ld   [x]         11536  ld([X])                         #19
              28ce de00  st   [y,x++]     11537  st([Y,Xpp])                     #20
              28cf c2b0  st   [$b0]       11538  st([0xB0])                      #21 cmp var.lo
              28d0 0500  ld   [x]         11539  ld([X])                         #22
              28d1 c2b1  st   [$b1]       11540  st([0xB1])                      #23 cmp var.hi
              28d2 6119  xora [$19]       11541  xora([vAC+1])                   #24
              28d3 f4b5  bge  .cmpws#27   11542  bpl('.cmpws#27')                #25 skip if same sign, (use .cmpws#27)
              28d4 0119  ld   [$19]       11543  ld([vAC+1])                     #26
              28d5 e8a4  blt  .cmpws#29   11544  bmi('.cmpws#29')                #27 use .cmpws#29
              28d6 fca6  bra  .cmpws#30   11545  bra('.cmpws#30')                #28 use .cmpws#30
              28d7 00ff  ld   $ff         11546  ld(-1)                          #29 vAC > variable
                                          11547
                                          11548
              28d8 0200  nop              11549  fillers(until=0xff)
              28d9 0200  nop
              28da 0200  nop
              * 39 times
              28ff 0200  nop              11550  align(0x100, size=0x100)
                                          11551
                                          11552  #-----------------------------------------------------------------------
                                          11553  #       More vCPU instruction implementations, (0x2900)
                                          11554  #-----------------------------------------------------------------------
                                          11555  #
                                          11556  # LEEKA implementation
                                          11557  label('leeka#13')
leeka#13:     2900 c21d  st   [$1d]       11558  st([vTmp])                      #13
              2901 00f9  ld   $f9         11559  ld(min(0,maxTicks-44/2))        #14
              2902 8115  adda [$15]       11560  adda([vTicks])                  #15
              2903 e81e  blt  .leeka#18   11561  blt('.leeka#18')                #16 not enough time left, so retry
              2904 1519  ld   [$19],y     11562  ld([vAC+1],Y)                   #17
              2905 1118  ld   [$18],x     11563  ld([vAC],X)                     #18
              2906 0d00  ld   [y,x]       11564  ld([Y,X])                       #19 peek [vAC]
              2907 de00  st   [y,x++]     11565  st([Y,Xpp])                     #20
              2908 c2c8  st   [$c8]       11566  st([vTmpL+0])                   #21
              2909 0d00  ld   [y,x]       11567  ld([Y,X])                       #22 peek [vAC+1]
              290a de00  st   [y,x++]     11568  st([Y,Xpp])                     #23
              290b c2c9  st   [$c9]       11569  st([vTmpL+1])                   #24
              290c 0d00  ld   [y,x]       11570  ld([Y,X])                       #25 peek [vAC+2]
              290d de00  st   [y,x++]     11571  st([Y,Xpp])                     #26
              290e c2ca  st   [$ca]       11572  st([vTmpL+2])                   #27
              290f 0d00  ld   [y,x]       11573  ld([Y,X])                       #28 peek [vAC+3]
              2910 c2cb  st   [$cb]       11574  st([vTmpL+3])                   #29
              2911 1400  ld   $00,y       11575  ld(0,Y)                         #30
              2912 111d  ld   [$1d],x     11576  ld([vTmp],X)                    #31 dst var
              2913 01c8  ld   [$c8]       11577  ld([vTmpL+0])                   #32
              2914 de00  st   [y,x++]     11578  st([Y,Xpp])                     #33 [var.0] = peek [vAC]
              2915 01c9  ld   [$c9]       11579  ld([vTmpL+1])                   #34
              2916 de00  st   [y,x++]     11580  st([Y,Xpp])                     #35 [var.1] = peek [vAC+1]
              2917 01ca  ld   [$ca]       11581  ld([vTmpL+2])                   #36
              2918 de00  st   [y,x++]     11582  st([Y,Xpp])                     #37 [var.2] = peek [vAC+2]
              2919 01cb  ld   [$cb]       11583  ld([vTmpL+3])                   #38
              291a ce00  st   [y,x]       11584  st([Y,X])                       #39 [var.3] = peek [vAC+3]
              291b 1403  ld   $03,y       11585  ld(hi('NEXTY'),Y)               #40
              291c e000  jmp  y,$00       11586  jmp(Y,'NEXTY')                  #41
              291d 00ea  ld   $ea         11587  ld(-44/2)                       #42
                                          11588
                                          11589  label('.leeka#18')
.leeka#18:    291e 0022  ld   $22         11590  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              291f c202  st   [$02]       11591  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2920 9401  adda $01,y       11592  adda(1,Y)                       #20 retry instruction
              2921 e000  jmp  y,$00       11593  jmp(Y,'NEXTY')                  #21
              2922 00f4  ld   $f4         11594  ld(-24/2)                       #22
                                          11595
                                          11596
                                          11597  # LOKEA implementation
                                          11598  label('lokea#13')
lokea#13:     2923 1200  ld   ac,x        11599  ld(AC,X)                        #13
              2924 00f9  ld   $f9         11600  ld(min(0,maxTicks-44/2))        #14
              2925 8115  adda [$15]       11601  adda([vTicks])                  #15
              2926 e840  blt  .lokea#18   11602  blt('.lokea#18')                #16 not enough time left, so retry
              2927 1400  ld   $00,y       11603  ld(0,Y)                         #17
              2928 0500  ld   [x]         11604  ld([X])                         #18 var.0
              2929 de00  st   [y,x++]     11605  st([Y,Xpp])                     #19
              292a c2c8  st   [$c8]       11606  st([vTmpL+0])                   #20
              292b 0500  ld   [x]         11607  ld([X])                         #21 var.1
              292c de00  st   [y,x++]     11608  st([Y,Xpp])                     #22
              292d c2c9  st   [$c9]       11609  st([vTmpL+1])                   #23
              292e 0500  ld   [x]         11610  ld([X])                         #24 var.2
              292f de00  st   [y,x++]     11611  st([Y,Xpp])                     #25
              2930 c2ca  st   [$ca]       11612  st([vTmpL+2])                   #26
              2931 0500  ld   [x]         11613  ld([X])                         #27 var.3
              2932 c2cb  st   [$cb]       11614  st([vTmpL+3])                   #28
              2933 1118  ld   [$18],x     11615  ld([vAC],X)                     #29
              2934 1519  ld   [$19],y     11616  ld([vAC+1],Y)                   #30
              2935 01c8  ld   [$c8]       11617  ld([vTmpL+0])                   #31
              2936 de00  st   [y,x++]     11618  st([Y,Xpp])                     #32 poke [vAC], var.0
              2937 01c9  ld   [$c9]       11619  ld([vTmpL+1])                   #33
              2938 de00  st   [y,x++]     11620  st([Y,Xpp])                     #34 poke [vAC], var.1
              2939 01ca  ld   [$ca]       11621  ld([vTmpL+2])                   #35
              293a de00  st   [y,x++]     11622  st([Y,Xpp])                     #36 poke [vAC], var.2
              293b 01cb  ld   [$cb]       11623  ld([vTmpL+3])                   #37
              293c ce00  st   [y,x]       11624  st([Y,X])                       #38 poke [vAC], var.3
              293d 1403  ld   $03,y       11625  ld(hi('REENTER'),Y)             #39
              293e e0cb  jmp  y,$cb       11626  jmp(Y,'REENTER')                #40
              293f 00ea  ld   $ea         11627  ld(-44/2)                       #41
                                          11628
                                          11629  label('.lokea#18')
.lokea#18:    2940 0022  ld   $22         11630  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2941 c202  st   [$02]       11631  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2942 9401  adda $01,y       11632  adda(1,Y)                       #20 retry instruction
              2943 e000  jmp  y,$00       11633  jmp(Y,'NEXTY')                  #21
              2944 00f4  ld   $f4         11634  ld(-24/2)                       #22
                                          11635
                                          11636
                                          11637  # FEEKA implementation
                                          11638  label('feeka#13')
feeka#13:     2945 1519  ld   [$19],y     11639  ld([vAC+1],Y)                   #13
              2946 00f7  ld   $f7         11640  ld(min(0,maxTicks-48/2))        #14
              2947 8115  adda [$15]       11641  adda([vTicks])                  #15
              2948 e867  blt  .feeka#18   11642  blt('.feeka#18')                #16 not enough time left, so retry
              2949 1118  ld   [$18],x     11643  ld([vAC],X)                     #17
              294a 0d00  ld   [y,x]       11644  ld([Y,X])                       #18 peek [vAC]
              294b de00  st   [y,x++]     11645  st([Y,Xpp])                     #19
              294c c2b0  st   [$b0]       11646  st([0xB0])                      #20
              294d 0d00  ld   [y,x]       11647  ld([Y,X])                       #21 peek [vAC+1]
              294e de00  st   [y,x++]     11648  st([Y,Xpp])                     #22
              294f c2b1  st   [$b1]       11649  st([0xB1])                      #23
              2950 0d00  ld   [y,x]       11650  ld([Y,X])                       #24 peek [vAC+2]
              2951 de00  st   [y,x++]     11651  st([Y,Xpp])                     #25
              2952 c2b2  st   [$b2]       11652  st([0xB2])                      #26
              2953 0d00  ld   [y,x]       11653  ld([Y,X])                       #27 peek [vAC+3]
              2954 de00  st   [y,x++]     11654  st([Y,Xpp])                     #28
              2955 c2b3  st   [$b3]       11655  st([0xB3])                      #29
              2956 0d00  ld   [y,x]       11656  ld([Y,X])                       #30 peek [vAC+4]
              2957 c2b4  st   [$b4]       11657  st([0xB4])                      #31
              2958 1400  ld   $00,y       11658  ld(0,Y)                         #32
              2959 111d  ld   [$1d],x     11659  ld([vTmp],X)                    #33 dst var
              295a 01b0  ld   [$b0]       11660  ld([0xB0])                      #34
              295b de00  st   [y,x++]     11661  st([Y,Xpp])                     #35 [var.0] = peek [vAC]
              295c 01b1  ld   [$b1]       11662  ld([0xB1])                      #36
              295d de00  st   [y,x++]     11663  st([Y,Xpp])                     #37 [var.1] = peek [vAC+1]
              295e 01b2  ld   [$b2]       11664  ld([0xB2])                      #38
              295f de00  st   [y,x++]     11665  st([Y,Xpp])                     #39 [var.2] = peek [vAC+2]
              2960 01b3  ld   [$b3]       11666  ld([0xB3])                      #40
              2961 ce00  st   [y,x]       11667  st([Y,X])                       #41 [var.3] = peek [vAC+3]
              2962 01b4  ld   [$b4]       11668  ld([0xB4])                      #42
              2963 ce00  st   [y,x]       11669  st([Y,X])                       #43 [var.4] = peek [vAC+4]
              2964 1403  ld   $03,y       11670  ld(hi('NEXTY'),Y)               #44
              2965 e000  jmp  y,$00       11671  jmp(Y,'NEXTY')                  #45
              2966 00e8  ld   $e8         11672  ld(-48/2)                       #46
                                          11673
                                          11674  label('.feeka#18')
.feeka#18:    2967 0022  ld   $22         11675  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2968 c202  st   [$02]       11676  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2969 9401  adda $01,y       11677  adda(1,Y)                       #20 retry instruction
              296a e000  jmp  y,$00       11678  jmp(Y,'NEXTY')                  #21
              296b 00f4  ld   $f4         11679  ld(-24/2)                       #22
                                          11680
                                          11681
                                          11682  # FOKEA implementation
                                          11683  label('fokea#13')
fokea#13:     296c 1200  ld   ac,x        11684  ld(AC,X)                        #13 var.0
              296d 00f7  ld   $f7         11685  ld(min(0,maxTicks-48/2))        #14
              296e 8115  adda [$15]       11686  adda([vTicks])                  #15
              296f e88e  blt  .fokea#18   11687  blt('.fokea#18')                #16 not enough time left, so retry
              2970 1400  ld   $00,y       11688  ld(0,Y)                         #17
              2971 0500  ld   [x]         11689  ld([X])                         #18 [var.0]
              2972 de00  st   [y,x++]     11690  st([Y,Xpp])                     #19
              2973 c2b0  st   [$b0]       11691  st([0xB0])                      #20
              2974 0500  ld   [x]         11692  ld([X])                         #21 [var.1]
              2975 de00  st   [y,x++]     11693  st([Y,Xpp])                     #22
              2976 c2b1  st   [$b1]       11694  st([0xB1])                      #23
              2977 0500  ld   [x]         11695  ld([X])                         #24 [var.2]
              2978 de00  st   [y,x++]     11696  st([Y,Xpp])                     #25
              2979 c2b2  st   [$b2]       11697  st([0xB2])                      #26
              297a 0500  ld   [x]         11698  ld([X])                         #27 [var.3]
              297b de00  st   [y,x++]     11699  st([Y,Xpp])                     #28
              297c c2b3  st   [$b3]       11700  st([0xB3])                      #29
              297d 0500  ld   [x]         11701  ld([X])                         #30 [var.4]
              297e c2b4  st   [$b4]       11702  st([0xB4])                      #31
              297f 1118  ld   [$18],x     11703  ld([vAC],X)                     #32
              2980 1519  ld   [$19],y     11704  ld([vAC+1],Y)                   #33
              2981 01b0  ld   [$b0]       11705  ld([0xB0])                      #34
              2982 de00  st   [y,x++]     11706  st([Y,Xpp])                     #35 poke [vAC], [var.0]
              2983 01b1  ld   [$b1]       11707  ld([0xB1])                      #36
              2984 de00  st   [y,x++]     11708  st([Y,Xpp])                     #37 poke [vAC], [var.1]
              2985 01b2  ld   [$b2]       11709  ld([0xB2])                      #38
              2986 de00  st   [y,x++]     11710  st([Y,Xpp])                     #39 poke [vAC], [var.2]
              2987 01b3  ld   [$b3]       11711  ld([0xB3])                      #40
              2988 ce00  st   [y,x]       11712  st([Y,X])                       #41 poke [vAC], [var.3]
              2989 01b4  ld   [$b4]       11713  ld([0xB4])                      #42
              298a ce00  st   [y,x]       11714  st([Y,X])                       #43 poke [vAC], [var.4]
              298b 1403  ld   $03,y       11715  ld(hi('NEXTY'),Y)               #44
              298c e000  jmp  y,$00       11716  jmp(Y,'NEXTY')                  #45
              298d 00e8  ld   $e8         11717  ld(-48/2)                       #46
                                          11718
                                          11719  label('.fokea#18')
.fokea#18:    298e 0022  ld   $22         11720  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              298f c202  st   [$02]       11721  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2990 9401  adda $01,y       11722  adda(1,Y)                       #20 retry instruction
              2991 e000  jmp  y,$00       11723  jmp(Y,'NEXTY')                  #21
              2992 00f4  ld   $f4         11724  ld(-24/2)                       #22
                                          11725
                                          11726
                                          11727  # SWAPB implementation
                                          11728  label('swapb#13')
swapb#13:     2993 00f8  ld   $f8         11729  ld(min(0,maxTicks-46/2))        #13
              2994 8115  adda [$15]       11730  adda([vTicks])                  #14
              2995 e8b3  blt  .swapb#17   11731  blt('.swapb#17')                #15 not enough time left, so retry
              2996 1400  ld   $00,y       11732  ld(0,Y)                         #16
              2997 0500  ld   [x]         11733  ld([X])                         #17
              2998 de00  st   [y,x++]     11734  st([Y,Xpp])                     #18
              2999 c2b2  st   [$b2]       11735  st([0xB2])                      #19 var1.lo
              299a 0500  ld   [x]         11736  ld([X])                         #20
              299b c2b3  st   [$b3]       11737  st([0xB3])                      #21 var1.hi
              299c 112b  ld   [$2b],x     11738  ld([sysArgs+7],X)               #22 var0
              299d 0500  ld   [x]         11739  ld([X])                         #23
              299e de00  st   [y,x++]     11740  st([Y,Xpp])                     #24
              299f c2b4  st   [$b4]       11741  st([0xB4])                      #25 var0.lo
              29a0 0500  ld   [x]         11742  ld([X])                         #26
              29a1 c2b5  st   [$b5]       11743  st([0xB5])                      #27 var0.hi
              29a2 11b2  ld   [$b2],x     11744  ld([0xB2],X)                    #28
              29a3 15b3  ld   [$b3],y     11745  ld([0xB3],Y)                    #29
              29a4 0d00  ld   [y,x]       11746  ld([Y,X])                       #30
              29a5 c2b1  st   [$b1]       11747  st([0xB1])                      #31 tmp1 = [var1]
              29a6 11b4  ld   [$b4],x     11748  ld([0xB4],X)                    #32
              29a7 15b5  ld   [$b5],y     11749  ld([0xB5],Y)                    #33
              29a8 0d00  ld   [y,x]       11750  ld([Y,X])                       #34
              29a9 c2b0  st   [$b0]       11751  st([0xB0])                      #35 tmp0 = [var0]
              29aa 01b1  ld   [$b1]       11752  ld([0xB1])                      #36
              29ab ce00  st   [y,x]       11753  st([Y,X])                       #37 [var0] = tmp1
              29ac 11b2  ld   [$b2],x     11754  ld([0xB2],X)                    #38
              29ad 15b3  ld   [$b3],y     11755  ld([0xB3],Y)                    #39
              29ae 01b0  ld   [$b0]       11756  ld([0xB0])                      #40
              29af ce00  st   [y,x]       11757  st([Y,X])                       #41 [var1] = tmp0
              29b0 1403  ld   $03,y       11758  ld(hi('NEXTY'),Y)               #42
              29b1 e000  jmp  y,$00       11759  jmp(Y,'NEXTY')                  #43
              29b2 00e9  ld   $e9         11760  ld(-46/2)                       #44
                                          11761
                                          11762  label('.swapb#17')
.swapb#17:    29b3 0021  ld   $21         11763  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              29b4 c202  st   [$02]       11764  st([vCpuSelect])                #18 restore PREFX3 instruction page
              29b5 9401  adda $01,y       11765  adda(1,Y)                       #19 retry instruction
              29b6 e0cb  jmp  y,$cb       11766  jmp(Y,'REENTER')                #20
              29b7 00f4  ld   $f4         11767  ld(-24/2)                       #21
                                          11768
                                          11769
                                          11770  # SWAPW implementation
                                          11771  label('swapw#13')
swapw#13:     29b8 00f2  ld   $f2         11772  ld(min(0,maxTicks-58/2))        #13
              29b9 8115  adda [$15]       11773  adda([vTicks])                  #14
              29ba e8e4  blt  .swapw#17   11774  blt('.swapw#17')                #15 not enough time left, so retry
              29bb 1400  ld   $00,y       11775  ld(0,Y)                         #16
              29bc 0500  ld   [x]         11776  ld([X])                         #17
              29bd de00  st   [y,x++]     11777  st([Y,Xpp])                     #18
              29be c2b2  st   [$b2]       11778  st([0xB2])                      #19 var1.lo
              29bf 0500  ld   [x]         11779  ld([X])                         #20
              29c0 c2b3  st   [$b3]       11780  st([0xB3])                      #21 var1.hi
              29c1 112b  ld   [$2b],x     11781  ld([sysArgs+7],X)               #22 var0
              29c2 0500  ld   [x]         11782  ld([X])                         #23
              29c3 de00  st   [y,x++]     11783  st([Y,Xpp])                     #24
              29c4 c2b4  st   [$b4]       11784  st([0xB4])                      #25 var0.lo
              29c5 0500  ld   [x]         11785  ld([X])                         #26
              29c6 c2b5  st   [$b5]       11786  st([0xB5])                      #27 var0.hi
              29c7 11b2  ld   [$b2],x     11787  ld([0xB2],X)                    #28
              29c8 15b3  ld   [$b3],y     11788  ld([0xB3],Y)                    #29
              29c9 0d00  ld   [y,x]       11789  ld([Y,X])                       #30
              29ca de00  st   [y,x++]     11790  st([Y,Xpp])                     #31
              29cb c2b0  st   [$b0]       11791  st([0xB0])                      #32 temp.lo = var1.lo
              29cc 0d00  ld   [y,x]       11792  ld([Y,X])                       #33
              29cd c2b1  st   [$b1]       11793  st([0xB1])                      #34 temp.hi = var1.hi
              29ce 11b4  ld   [$b4],x     11794  ld([0xB4],X)                    #35
              29cf 15b5  ld   [$b5],y     11795  ld([0xB5],Y)                    #36
              29d0 0d00  ld   [y,x]       11796  ld([Y,X])                       #37
              29d1 de00  st   [y,x++]     11797  st([Y,Xpp])                     #38
              29d2 c218  st   [$18]       11798  st([vAC])                       #39
              29d3 0d00  ld   [y,x]       11799  ld([Y,X])                       #40
              29d4 c219  st   [$19]       11800  st([vAC+1])                     #41
              29d5 11b2  ld   [$b2],x     11801  ld([0xB2],X)                    #42
              29d6 15b3  ld   [$b3],y     11802  ld([0xB3],Y)                    #43
              29d7 0118  ld   [$18]       11803  ld([vAC])                       #44
              29d8 de00  st   [y,x++]     11804  st([Y,Xpp])                     #45 var1.lo = var0.lo
              29d9 0119  ld   [$19]       11805  ld([vAC+1])                     #46
              29da ce00  st   [y,x]       11806  st([Y,X])                       #47 var1.lo = var0.lo
              29db 11b4  ld   [$b4],x     11807  ld([0xB4],X)                    #48
              29dc 15b5  ld   [$b5],y     11808  ld([0xB5],Y)                    #49
              29dd 01b0  ld   [$b0]       11809  ld([0xB0])                      #50
              29de de00  st   [y,x++]     11810  st([Y,Xpp])                     #51 var0.lo = temp.lo
              29df 01b1  ld   [$b1]       11811  ld([0xB1])                      #52
              29e0 ce00  st   [y,x]       11812  st([Y,X])                       #53 var0.hi = temp.hi
              29e1 1403  ld   $03,y       11813  ld(hi('NEXTY'),Y)               #54
              29e2 e000  jmp  y,$00       11814  jmp(Y,'NEXTY')                  #55
              29e3 00e3  ld   $e3         11815  ld(-58/2)                       #56
                                          11816
                                          11817  label('.swapw#17')
.swapw#17:    29e4 0021  ld   $21         11818  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              29e5 c202  st   [$02]       11819  st([vCpuSelect])                #18 restore PREFX3 instruction page
              29e6 9401  adda $01,y       11820  adda(1,Y)                       #19 retry instruction
              29e7 e0cb  jmp  y,$cb       11821  jmp(Y,'REENTER')                #20
              29e8 00f4  ld   $f4         11822  ld(-24/2)                       #21
                                          11823
                                          11824
              29e9 0200  nop              11825  fillers(until=0xff)
              29ea 0200  nop
              29eb 0200  nop
              * 22 times
              29ff 0200  nop              11826  align(0x100, size=0x100)
                                          11827
                                          11828  #-----------------------------------------------------------------------
                                          11829  #       More vCPU instruction implementations, (0x2A00)
                                          11830  #-----------------------------------------------------------------------
                                          11831  #
                                          11832  # MEEKA implementation
                                          11833  label('meeka#13')
meeka#13:     2a00 c21d  st   [$1d]       11834  st([vTmp])                      #13
              2a01 00ef  ld   $ef         11835  ld(min(0,maxTicks-64/2))        #14
              2a02 8115  adda [$15]       11836  adda([vTicks])                  #15
              2a03 e832  blt  .meeka#18   11837  blt('.meeka#18')                #16 not enough time left, so retry
              2a04 1519  ld   [$19],y     11838  ld([vAC+1],Y)                   #17
              2a05 1118  ld   [$18],x     11839  ld([vAC],X)                     #18
              2a06 0d00  ld   [y,x]       11840  ld([Y,X])                       #19 peek [vAC]
              2a07 de00  st   [y,x++]     11841  st([Y,Xpp])                     #20
              2a08 c2b0  st   [$b0]       11842  st([0xB0])                      #21
              2a09 0d00  ld   [y,x]       11843  ld([Y,X])                       #22 peek [vAC+1]
              2a0a de00  st   [y,x++]     11844  st([Y,Xpp])                     #23
              2a0b c2b1  st   [$b1]       11845  st([0xB1])                      #24
              2a0c 0d00  ld   [y,x]       11846  ld([Y,X])                       #25 peek [vAC+2]
              2a0d de00  st   [y,x++]     11847  st([Y,Xpp])                     #26
              2a0e c2b2  st   [$b2]       11848  st([0xB2])                      #27
              2a0f 0d00  ld   [y,x]       11849  ld([Y,X])                       #28 peek [vAC+3]
              2a10 de00  st   [y,x++]     11850  st([Y,Xpp])                     #29
              2a11 c2b3  st   [$b3]       11851  st([0xB3])                      #30
              2a12 0d00  ld   [y,x]       11852  ld([Y,X])                       #31 peek [vAC+4]
              2a13 de00  st   [y,x++]     11853  st([Y,Xpp])                     #32
              2a14 c2b4  st   [$b4]       11854  st([0xB4])                      #33
              2a15 0d00  ld   [y,x]       11855  ld([Y,X])                       #34 peek [vAC+5]
              2a16 de00  st   [y,x++]     11856  st([Y,Xpp])                     #35
              2a17 c2b5  st   [$b5]       11857  st([0xB5])                      #36
              2a18 0d00  ld   [y,x]       11858  ld([Y,X])                       #37 peek [vAC+6]
              2a19 de00  st   [y,x++]     11859  st([Y,Xpp])                     #38
              2a1a c2b6  st   [$b6]       11860  st([0xB6])                      #39
              2a1b 0d00  ld   [y,x]       11861  ld([Y,X])                       #40 peek [vAC+7]
              2a1c c2b7  st   [$b7]       11862  st([0xB7])                      #41
              2a1d 1400  ld   $00,y       11863  ld(0,Y)                         #42
              2a1e 111d  ld   [$1d],x     11864  ld([vTmp],X)                    #43 dst var
              2a1f 01b0  ld   [$b0]       11865  ld([0xB0])                      #44
              2a20 de00  st   [y,x++]     11866  st([Y,Xpp])                     #45 [var.0] = peek [vAC]
              2a21 01b1  ld   [$b1]       11867  ld([0xB1])                      #46
              2a22 de00  st   [y,x++]     11868  st([Y,Xpp])                     #47 [var.1] = peek [vAC+1]
              2a23 01b2  ld   [$b2]       11869  ld([0xB2])                      #48
              2a24 de00  st   [y,x++]     11870  st([Y,Xpp])                     #49 [var.2] = peek [vAC+2]
              2a25 01b3  ld   [$b3]       11871  ld([0xB3])                      #50
              2a26 de00  st   [y,x++]     11872  st([Y,Xpp])                     #51 [var.3] = peek [vAC+3]
              2a27 01b4  ld   [$b4]       11873  ld([0xB4])                      #52
              2a28 de00  st   [y,x++]     11874  st([Y,Xpp])                     #53 [var.0] = peek [vAC+4]
              2a29 01b5  ld   [$b5]       11875  ld([0xB5])                      #54
              2a2a de00  st   [y,x++]     11876  st([Y,Xpp])                     #55 [var.1] = peek [vAC+5]
              2a2b 01b6  ld   [$b6]       11877  ld([0xB6])                      #56
              2a2c de00  st   [y,x++]     11878  st([Y,Xpp])                     #57 [var.2] = peek [vAC+6]
              2a2d 01b7  ld   [$b7]       11879  ld([0xB7])                      #58
              2a2e ce00  st   [y,x]       11880  st([Y,X])                       #59 [var.3] = peek [vAC+7]
              2a2f 1403  ld   $03,y       11881  ld(hi('NEXTY'),Y)               #60
              2a30 e000  jmp  y,$00       11882  jmp(Y,'NEXTY')                  #61
              2a31 00e0  ld   $e0         11883  ld(-64/2)                       #62
                                          11884
                                          11885  label('.meeka#18')
.meeka#18:    2a32 0022  ld   $22         11886  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2a33 c202  st   [$02]       11887  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2a34 9401  adda $01,y       11888  adda(1,Y)                       #20 retry instruction
              2a35 e000  jmp  y,$00       11889  jmp(Y,'NEXTY')                  #21
              2a36 00f4  ld   $f4         11890  ld(-24/2)                       #22
                                          11891
                                          11892
                                          11893  # MOKEA
                                          11894  label('mokea#13')
mokea#13:     2a37 1200  ld   ac,x        11895  ld(AC,X)                        #13 var
              2a38 00ef  ld   $ef         11896  ld(min(0,maxTicks-64/2))        #14
              2a39 8115  adda [$15]       11897  adda([vTicks])                  #15
              2a3a e869  blt  .mokea#18   11898  blt('.mokea#18')                #16 not enough time left, so retry
              2a3b 1400  ld   $00,y       11899  ld(0,Y)                         #17
              2a3c 0500  ld   [x]         11900  ld([X])                         #18 var.0
              2a3d de00  st   [y,x++]     11901  st([Y,Xpp])                     #19
              2a3e c2b0  st   [$b0]       11902  st([0xB0])                      #20
              2a3f 0500  ld   [x]         11903  ld([X])                         #21 var.1
              2a40 de00  st   [y,x++]     11904  st([Y,Xpp])                     #22
              2a41 c2b1  st   [$b1]       11905  st([0xB1])                      #23
              2a42 0500  ld   [x]         11906  ld([X])                         #24 var.2
              2a43 de00  st   [y,x++]     11907  st([Y,Xpp])                     #25
              2a44 c2b2  st   [$b2]       11908  st([0xB2])                      #26
              2a45 0500  ld   [x]         11909  ld([X])                         #27 var.3
              2a46 de00  st   [y,x++]     11910  st([Y,Xpp])                     #28
              2a47 c2b3  st   [$b3]       11911  st([0xB3])                      #29
              2a48 0500  ld   [x]         11912  ld([X])                         #30 var.4
              2a49 de00  st   [y,x++]     11913  st([Y,Xpp])                     #31
              2a4a c2b4  st   [$b4]       11914  st([0xB4])                      #32
              2a4b 0500  ld   [x]         11915  ld([X])                         #33 var.5
              2a4c de00  st   [y,x++]     11916  st([Y,Xpp])                     #34
              2a4d c2b5  st   [$b5]       11917  st([0xB5])                      #35
              2a4e 0500  ld   [x]         11918  ld([X])                         #36 var.6
              2a4f de00  st   [y,x++]     11919  st([Y,Xpp])                     #37
              2a50 c2b6  st   [$b6]       11920  st([0xB6])                      #38
              2a51 0500  ld   [x]         11921  ld([X])                         #39 var.7
              2a52 de00  st   [y,x++]     11922  st([Y,Xpp])                     #40
              2a53 c2b7  st   [$b7]       11923  st([0xB7])                      #41
              2a54 1118  ld   [$18],x     11924  ld([vAC],X)                     #42
              2a55 1519  ld   [$19],y     11925  ld([vAC+1],Y)                   #43
              2a56 01b0  ld   [$b0]       11926  ld([0xB0])                      #44
              2a57 de00  st   [y,x++]     11927  st([Y,Xpp])                     #45 poke [vAC], var.0
              2a58 01b1  ld   [$b1]       11928  ld([0xB1])                      #46
              2a59 de00  st   [y,x++]     11929  st([Y,Xpp])                     #47 poke [vAC], var.1
              2a5a 01b2  ld   [$b2]       11930  ld([0xB2])                      #48
              2a5b de00  st   [y,x++]     11931  st([Y,Xpp])                     #49 poke [vAC], var.2
              2a5c 01b3  ld   [$b3]       11932  ld([0xB3])                      #50
              2a5d de00  st   [y,x++]     11933  st([Y,Xpp])                     #51 poke [vAC], var.3
              2a5e 01b4  ld   [$b4]       11934  ld([0xB4])                      #52
              2a5f de00  st   [y,x++]     11935  st([Y,Xpp])                     #53 poke [vAC], var.4
              2a60 01b5  ld   [$b5]       11936  ld([0xB5])                      #54
              2a61 de00  st   [y,x++]     11937  st([Y,Xpp])                     #55 poke [vAC], var.5
              2a62 01b6  ld   [$b6]       11938  ld([0xB6])                      #56
              2a63 de00  st   [y,x++]     11939  st([Y,Xpp])                     #57 poke [vAC], var.6
              2a64 01b7  ld   [$b7]       11940  ld([0xB7])                      #58
              2a65 de00  st   [y,x++]     11941  st([Y,Xpp])                     #59 poke [vAC], var.7
              2a66 1403  ld   $03,y       11942  ld(hi('NEXTY'),Y)               #60
              2a67 e000  jmp  y,$00       11943  jmp(Y,'NEXTY')                  #61
              2a68 00e0  ld   $e0         11944  ld(-64/2)                       #62
                                          11945
                                          11946  label('.mokea#18')
.mokea#18:    2a69 0022  ld   $22         11947  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2a6a c202  st   [$02]       11948  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2a6b 9401  adda $01,y       11949  adda(1,Y)                       #20 retry instruction
              2a6c e000  jmp  y,$00       11950  jmp(Y,'NEXTY')                  #21
              2a6d 00f4  ld   $f4         11951  ld(-24/2)                       #22
                                          11952
                                          11953
                                          11954  # NEEKA implementation
                                          11955  label('neeka#13')
neeka#13:     2a6e 00fe  ld   $fe         11956  ld(min(0,maxTicks-34/2))        #13
              2a6f 8115  adda [$15]       11957  adda([vTicks])                  #14
              2a70 e885  blt  .neeka#17   11958  blt('.neeka#17')                #15 not enough time left, so retry
              2a71 012b  ld   [$2b]       11959  ld([sysArgs+7])                 #16 number of bytes to peek
              2a72 a001  suba $01         11960  suba(1)                         #17
              2a73 f478  bge  .neeka#20   11961  bge('.neeka#20')                #18
              2a74 c22b  st   [$2b]       11962  st([sysArgs+7])                 #19
              2a75 1403  ld   $03,y       11963  ld(hi('NEXTY'),Y)               #20 done
              2a76 e000  jmp  y,$00       11964  jmp(Y,'NEXTY')                  #21
              2a77 00f4  ld   $f4         11965  ld(-24/2)                       #22
                                          11966
                                          11967  label('.neeka#20')
.neeka#20:    2a78 1519  ld   [$19],y     11968  ld([vAC+1],Y)                   #20
              2a79 9118  adda [$18],x     11969  adda([vAC],X)                   #21
              2a7a 0d00  ld   [y,x]       11970  ld([Y,X])                       #22 peek [vAC + index]
              2a7b c21d  st   [$1d]       11971  st([vTmp])                      #23
              2a7c 012a  ld   [$2a]       11972  ld([sysArgs+6])                 #24
              2a7d 912b  adda [$2b],x     11973  adda([sysArgs+7],X)             #25 var + index
              2a7e 011d  ld   [$1d]       11974  ld([vTmp])                      #26
              2a7f c600  st   [x]         11975  st([X])                         #27 [var + index] = peek [vAC + index]
              2a80 0021  ld   $21         11976  ld(hi('PREFX3_PAGE'))           #28 ENTER is at $(n-1)ff, where n = instruction page
              2a81 c202  st   [$02]       11977  st([vCpuSelect])                #29 restore PREFX3 instruction page
              2a82 9401  adda $01,y       11978  adda(1,Y)                       #30 restart instruction
              2a83 e000  jmp  y,$00       11979  jmp(Y,'NEXTY')                  #31
              2a84 00ef  ld   $ef         11980  ld(-34/2)                       #32
                                          11981
                                          11982  label('.neeka#17')
.neeka#17:    2a85 0021  ld   $21         11983  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              2a86 c202  st   [$02]       11984  st([vCpuSelect])                #18 restore PREFX3 instruction page
              2a87 9401  adda $01,y       11985  adda(1,Y)                       #19 retry instruction
              2a88 e0cb  jmp  y,$cb       11986  jmp(Y,'REENTER')                #20
              2a89 00f4  ld   $f4         11987  ld(-24/2)                       #21
                                          11988
                                          11989
                                          11990  # NOKEA implementation
                                          11991  label('nokea#13')
nokea#13:     2a8a 00fe  ld   $fe         11992  ld(min(0,maxTicks-34/2))        #13
              2a8b 8115  adda [$15]       11993  adda([vTicks])                  #14
              2a8c e8a1  blt  .nokea#17   11994  blt('.nokea#17')                #15 not enough time left, so retry
              2a8d 012b  ld   [$2b]       11995  ld([sysArgs+7])                 #16 number of bytes to peek
              2a8e a001  suba $01         11996  suba(1)                         #17
              2a8f f494  bge  .nokea#20   11997  bge('.nokea#20')                #18
              2a90 c22b  st   [$2b]       11998  st([sysArgs+7])                 #19
              2a91 1403  ld   $03,y       11999  ld(hi('NEXTY'),Y)               #20 done
              2a92 e000  jmp  y,$00       12000  jmp(Y,'NEXTY')                  #21
              2a93 00f4  ld   $f4         12001  ld(-24/2)                       #22
                                          12002
                                          12003  label('.nokea#20')
.nokea#20:    2a94 912a  adda [$2a],x     12004  adda([sysArgs+6],X)             #20 var + index
              2a95 0500  ld   [x]         12005  ld([X])                         #21
              2a96 c21d  st   [$1d]       12006  st([vTmp])                      #22
              2a97 1519  ld   [$19],y     12007  ld([vAC+1],Y)                   #23
              2a98 012b  ld   [$2b]       12008  ld([sysArgs+7])                 #24
              2a99 9118  adda [$18],x     12009  adda([vAC],X)                   #25 vAC + index
              2a9a 011d  ld   [$1d]       12010  ld([vTmp])                      #26
              2a9b ce00  st   [y,x]       12011  st([Y,X])                       #27 [vAC + index] = peek [var + index]
              2a9c 0021  ld   $21         12012  ld(hi('PREFX3_PAGE'))           #28 ENTER is at $(n-1)ff, where n = instruction page
              2a9d c202  st   [$02]       12013  st([vCpuSelect])                #29 restore PREFX3 instruction page
              2a9e 9401  adda $01,y       12014  adda(1,Y)                       #30 restart instruction
              2a9f e000  jmp  y,$00       12015  jmp(Y,'NEXTY')                  #31
              2aa0 00ef  ld   $ef         12016  ld(-34/2)                       #32
                                          12017
                                          12018  label('.nokea#17')
.nokea#17:    2aa1 0021  ld   $21         12019  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              2aa2 c202  st   [$02]       12020  st([vCpuSelect])                #18 restore PREFX3 instruction page
              2aa3 9401  adda $01,y       12021  adda(1,Y)                       #19 retry instruction
              2aa4 e0cb  jmp  y,$cb       12022  jmp(Y,'REENTER')                #20
              2aa5 00f4  ld   $f4         12023  ld(-24/2)                       #21
                                          12024
                                          12025
                                          12026  # DJNE implementation
                                          12027  label('djne#13')
djne#13:      2aa6 de00  st   [y,x++]     12028  st([Y,Xpp])                     #13 X++
              2aa7 c21d  st   [$1d]       12029  st([vTmp])                      #14 var
              2aa8 00f8  ld   $f8         12030  ld(min(0,maxTicks-46/2))        #15
              2aa9 8115  adda [$15]       12031  adda([vTicks])                  #16
              2aaa e8d3  blt  .djne#19    12032  blt('.djne#19')                 #17 not enough time left, so retry
              2aab 0d00  ld   [y,x]       12033  ld([Y,X])                       #18
              2aac de00  st   [y,x++]     12034  st([Y,Xpp])                     #19 X++
              2aad c22a  st   [$2a]       12035  st([sysArgs+6])                 #20 jump addr.lo
              2aae 0d00  ld   [y,x]       12036  ld([Y,X])                       #21
              2aaf c22b  st   [$2b]       12037  st([sysArgs+7])                 #22 jump addr.hi
              2ab0 1400  ld   $00,y       12038  ld(0,Y)                         #23
              2ab1 111d  ld   [$1d],x     12039  ld([vTmp],X)                    #24
              2ab2 0500  ld   [x]         12040  ld([X])                         #25 count.lo
              2ab3 a001  suba $01         12041  suba(1)                         #26
              2ab4 de00  st   [y,x++]     12042  st([Y,Xpp])                     #27 count.lo-- X++
              2ab5 4500  ora  [x]         12043  ora([X])                        #28 count.lo | count.hi
              2ab6 f0c6  beq  .djne#31    12044  beq('.djne#31')                 #19 count = 0
              2ab7 111d  ld   [$1d],x     12045  ld([vTmp],X)                    #30
              2ab8 0500  ld   [x]         12046  ld([X])                         #31 count.lo
              2ab9 de00  st   [y,x++]     12047  st([Y,Xpp])                     #32 X++
              2aba 60ff  xora $ff         12048  xora(0xFF)                      #33 if low byte is 0xFF
              2abb eccc  bne  .djne#36    12049  bne('.djne#36')                 #34
              2abc 0500  ld   [x]         12050  ld([X])                         #35 count.hi
              2abd a001  suba $01         12051  suba(1)                         #36
              2abe c600  st   [x]         12052  st([X])                         #37
              2abf 012a  ld   [$2a]       12053  ld([sysArgs+6])                 #38 jump
              2ac0 c216  st   [$16]       12054  st([vPC])                       #39
              2ac1 012b  ld   [$2b]       12055  ld([sysArgs+7])                 #40
              2ac2 c217  st   [$17]       12056  st([vPC+1])                     #41
              2ac3 1403  ld   $03,y       12057  ld(hi('NEXTY'),Y)               #42
              2ac4 e000  jmp  y,$00       12058  jmp(Y,'NEXTY')                  #43
              2ac5 00e9  ld   $e9         12059  ld(-46/2)                       #44
                                          12060
                                          12061  label('.djne#31')
.djne#31:     2ac6 0116  ld   [$16]       12062  ld([vPC])                       #31 done
              2ac7 8002  adda $02         12063  adda(2)                         #32
              2ac8 c216  st   [$16]       12064  st([vPC])                       #33
              2ac9 1403  ld   $03,y       12065  ld(hi('NEXTY'),Y)               #34
              2aca e000  jmp  y,$00       12066  jmp(Y,'NEXTY')                  #35
              2acb 00ed  ld   $ed         12067  ld(-38/2)                       #36
                                          12068
                                          12069  label('.djne#36')
.djne#36:     2acc 012a  ld   [$2a]       12070  ld([sysArgs+6])                 #36 jump
              2acd c216  st   [$16]       12071  st([vPC])                       #37
              2ace 012b  ld   [$2b]       12072  ld([sysArgs+7])                 #38
              2acf c217  st   [$17]       12073  st([vPC+1])                     #39
              2ad0 1403  ld   $03,y       12074  ld(hi('NEXTY'),Y)               #40
              2ad1 e000  jmp  y,$00       12075  jmp(Y,'NEXTY')                  #41
              2ad2 00ea  ld   $ea         12076  ld(-44/2)                       #42
                                          12077
                                          12078  label('.djne#19')
.djne#19:     2ad3 0116  ld   [$16]       12079  ld([vPC])                       #19 retry
              2ad4 a002  suba $02         12080  suba(2)                         #20
              2ad5 c216  st   [$16]       12081  st([vPC])                       #21
              2ad6 1403  ld   $03,y       12082  ld(hi('NEXTY'),Y)               #22
              2ad7 e000  jmp  y,$00       12083  jmp(Y,'NEXTY')                  #23
              2ad8 00f3  ld   $f3         12084  ld(-26/2)                       #24
                                          12085
                                          12086
              2ad9 0200  nop              12087  fillers(until=0xff)
              2ada 0200  nop
              2adb 0200  nop
              * 38 times
              2aff 0200  nop              12088  align(0x100, size=0x100)
                                          12089
                                          12090  #-----------------------------------------------------------------------
                                          12091  #       More vCPU instruction implementations, (0x2B00)
                                          12092  #-----------------------------------------------------------------------
                                          12093  #
                                          12094  # DJGE implementation
                                          12095  label('djge#13')
djge#13:      2b00 de00  st   [y,x++]     12096  st([Y,Xpp])                     #13
              2b01 c21d  st   [$1d]       12097  st([vTmp])                      #14 var
              2b02 00fa  ld   $fa         12098  ld(min(0,maxTicks-42/2))        #15
              2b03 8115  adda [$15]       12099  adda([vTicks])                  #16
              2b04 e829  blt  .djge#19    12100  blt('.djge#19')                 #17 not enough time left, so retry
              2b05 0d00  ld   [y,x]       12101  ld([Y,X])                       #18
              2b06 de00  st   [y,x++]     12102  st([Y,Xpp])                     #19
              2b07 c22a  st   [$2a]       12103  st([sysArgs+6])                 #20 jump addr.lo
              2b08 0d00  ld   [y,x]       12104  ld([Y,X])                       #21
              2b09 c22b  st   [$2b]       12105  st([sysArgs+7])                 #22 jump addr.hi
              2b0a 1400  ld   $00,y       12106  ld(0,Y)                         #23
              2b0b 111d  ld   [$1d],x     12107  ld([vTmp],X)                    #24
              2b0c 0500  ld   [x]         12108  ld([X])                         #25 count.lo
              2b0d a001  suba $01         12109  suba(1)                         #26
              2b0e de00  st   [y,x++]     12110  st([Y,Xpp])                     #27 count.lo-- X++
              2b0f 60ff  xora $ff         12111  xora(0xFF)                      #28 if low byte is 0xFF
              2b10 ec1c  bne  .djge#31    12112  bne('.djge#31')                 #29
              2b11 0500  ld   [x]         12113  ld([X])                         #30 count.hi
              2b12 f023  beq  .djge#33    12114  beq('.djge#33')                 #31
              2b13 a001  suba $01         12115  suba(1)                         #32
              2b14 c600  st   [x]         12116  st([X])                         #33
              2b15 012a  ld   [$2a]       12117  ld([sysArgs+6])                 #34 jump
              2b16 c216  st   [$16]       12118  st([vPC])                       #35
              2b17 012b  ld   [$2b]       12119  ld([sysArgs+7])                 #36
              2b18 c217  st   [$17]       12120  st([vPC+1])                     #37
              2b19 1403  ld   $03,y       12121  ld(hi('NEXTY'),Y)               #38
              2b1a e000  jmp  y,$00       12122  jmp(Y,'NEXTY')                  #39
              2b1b 00eb  ld   $eb         12123  ld(-42/2)                       #40
                                          12124
                                          12125  label('.djge#31')
.djge#31:     2b1c 012a  ld   [$2a]       12126  ld([sysArgs+6])                 #31 jump
              2b1d c216  st   [$16]       12127  st([vPC])                       #32
              2b1e 012b  ld   [$2b]       12128  ld([sysArgs+7])                 #33
              2b1f c217  st   [$17]       12129  st([vPC+1])                     #34
              2b20 1403  ld   $03,y       12130  ld(hi('REENTER'),Y)             #35
              2b21 e0cb  jmp  y,$cb       12131  jmp(Y,'REENTER')                #36
              2b22 00ec  ld   $ec         12132  ld(-40/2)                       #37
                                          12133
                                          12134  label('.djge#33')
.djge#33:     2b23 0116  ld   [$16]       12135  ld([vPC])                       #33 done
              2b24 8002  adda $02         12136  adda(2)                         #34
              2b25 c216  st   [$16]       12137  st([vPC])                       #35
              2b26 1403  ld   $03,y       12138  ld(hi('NEXTY'),Y)               #36
              2b27 e000  jmp  y,$00       12139  jmp(Y,'NEXTY')                  #37
              2b28 00ec  ld   $ec         12140  ld(-40/2)                       #38
                                          12141
                                          12142  label('.djge#19')
.djge#19:     2b29 0116  ld   [$16]       12143  ld([vPC])                       #19 retry
              2b2a a002  suba $02         12144  suba(2)                         #20
              2b2b c216  st   [$16]       12145  st([vPC])                       #21
              2b2c 1403  ld   $03,y       12146  ld(hi('NEXTY'),Y)               #22
              2b2d e000  jmp  y,$00       12147  jmp(Y,'NEXTY')                  #23
              2b2e 00f3  ld   $f3         12148  ld(-26/2)                       #24
                                          12149
                                          12150
                                          12151  # ADDVL
                                          12152  label('addvl#13')
addvl#13:     2b2f 0500  ld   [x]         12153  ld([X])                         #13
              2b30 c21d  st   [$1d]       12154  st([vTmp])                      #14 save src.0
              2b31 112b  ld   [$2b],x     12155  ld([sysArgs+7],X)               #15 dst.0
              2b32 00e8  ld   $e8         12156  ld(min(0,maxTicks-78/2))        #16
              2b33 8115  adda [$15]       12157  adda([vTicks])                  #17
              2b34 e874  blt  .addvl#20   12158  blt('.addvl#20')                #18 not enough time left, so retry
              2b35 011d  ld   [$1d]       12159  ld([vTmp])                      #19 src.0
              2b36 8500  adda [x]         12160  adda([X])                       #20
              2b37 c600  st   [x]         12161  st([X])                         #21 dst.0 += src.0
              2b38 e83c  blt  .addvl#24   12162  bmi('.addvl#24')                #22 carry
              2b39 a11d  suba [$1d]       12163  suba([vTmp])                    #23 original dst.0
              2b3a fc3e  bra  .addvl#26   12164  bra('.addvl#26')                #24
              2b3b 411d  ora  [$1d]       12165  ora([vTmp])                     #25 carry in bit 7
                                          12166
                                          12167  label('.addvl#24')
.addvl#24:    2b3c 211d  anda [$1d]       12168  anda([vTmp])                    #24 carry in bit 7
              2b3d 0200  nop              12169  nop()                           #25
                                          12170
                                          12171  label('.addvl#26')
.addvl#26:    2b3e 3080  anda $80,x       12172  anda(0x80,X)                    #26 carry to bit 0
              2b3f 0500  ld   [x]         12173  ld([X])                         #27
              2b40 c21d  st   [$1d]       12174  st([vTmp])                      #28 store carry
              2b41 012a  ld   [$2a]       12175  ld([sysArgs+6])                 #29
              2b42 9001  adda $01,x       12176  adda(1,X)                       #30 src.1
              2b43 011d  ld   [$1d]       12177  ld([vTmp])                      #31
              2b44 8500  adda [x]         12178  adda([X])                       #32
              2b45 c21d  st   [$1d]       12179  st([vTmp])                      #33 src.1 += carry
              2b46 012b  ld   [$2b]       12180  ld([sysArgs+7])                 #34
              2b47 9001  adda $01,x       12181  adda(1,X)                       #35
              2b48 011d  ld   [$1d]       12182  ld([vTmp])                      #36
              2b49 8500  adda [x]         12183  adda([X])                       #37
              2b4a c600  st   [x]         12184  st([X])                         #38 dst.1 += src.1
              2b4b e84f  blt  .addvl#41   12185  bmi('.addvl#41')                #39 carry
              2b4c a11d  suba [$1d]       12186  suba([vTmp])                    #40 original dst.1
              2b4d fc51  bra  .addvl#43   12187  bra('.addvl#43')                #41
              2b4e 411d  ora  [$1d]       12188  ora([vTmp])                     #42 carry in bit 7
                                          12189
                                          12190  label('.addvl#41')
.addvl#41:    2b4f 211d  anda [$1d]       12191  anda([vTmp])                    #41 carry in bit 7
              2b50 0200  nop              12192  nop()                           #42
                                          12193
                                          12194  label('.addvl#43')
.addvl#43:    2b51 3080  anda $80,x       12195  anda(0x80,X)                    #43 carry to bit 0
              2b52 0500  ld   [x]         12196  ld([X])                         #44
              2b53 c21d  st   [$1d]       12197  st([vTmp])                      #45 store carry
              2b54 012a  ld   [$2a]       12198  ld([sysArgs+6])                 #46
              2b55 9002  adda $02,x       12199  adda(2,X)                       #47 src.2
              2b56 011d  ld   [$1d]       12200  ld([vTmp])                      #48
              2b57 8500  adda [x]         12201  adda([X])                       #49
              2b58 c21d  st   [$1d]       12202  st([vTmp])                      #50 src.2 += carry
              2b59 012b  ld   [$2b]       12203  ld([sysArgs+7])                 #51
              2b5a 9002  adda $02,x       12204  adda(2,X)                       #52
              2b5b 011d  ld   [$1d]       12205  ld([vTmp])                      #53
              2b5c 8500  adda [x]         12206  adda([X])                       #54
              2b5d c600  st   [x]         12207  st([X])                         #55 dst.2 += src.2
              2b5e e862  blt  .addvl#58   12208  bmi('.addvl#58')                #56 carry
              2b5f a11d  suba [$1d]       12209  suba([vTmp])                    #57 original dst.2
              2b60 fc64  bra  .addvl#60   12210  bra('.addvl#60')                #58
              2b61 411d  ora  [$1d]       12211  ora([vTmp])                     #59 carry in bit 7
                                          12212
                                          12213  label('.addvl#58')
.addvl#58:    2b62 211d  anda [$1d]       12214  anda([vTmp])                    #58 carry in bit 7
              2b63 0200  nop              12215  nop()                           #59
                                          12216
                                          12217  label('.addvl#60')
.addvl#60:    2b64 3080  anda $80,x       12218  anda(0x80,X)                    #60 carry to bit 0
              2b65 0500  ld   [x]         12219  ld([X])                         #61
              2b66 c21d  st   [$1d]       12220  st([vTmp])                      #62 store carry
              2b67 012a  ld   [$2a]       12221  ld([sysArgs+6])                 #63
              2b68 9003  adda $03,x       12222  adda(3,X)                       #64 src.3
              2b69 011d  ld   [$1d]       12223  ld([vTmp])                      #65
              2b6a 8500  adda [x]         12224  adda([X])                       #66
              2b6b c21d  st   [$1d]       12225  st([vTmp])                      #67 src.3 += carry
              2b6c 012b  ld   [$2b]       12226  ld([sysArgs+7])                 #68
              2b6d 9003  adda $03,x       12227  adda(3,X)                       #69
              2b6e 011d  ld   [$1d]       12228  ld([vTmp])                      #70
              2b6f 8500  adda [x]         12229  adda([X])                       #71
              2b70 c600  st   [x]         12230  st([X])                         #72 dst.3 += src.3
              2b71 1403  ld   $03,y       12231  ld(hi('REENTER'),Y)             #73
              2b72 e0cb  jmp  y,$cb       12232  jmp(Y,'REENTER')                #74
              2b73 00d9  ld   $d9         12233  ld(-78/2)                       #75
                                          12234
                                          12235  label('.addvl#20')
.addvl#20:    2b74 0021  ld   $21         12236  ld(hi('PREFX3_PAGE'))           #20 ENTER is at $(n-1)ff, where n = instruction page
              2b75 c202  st   [$02]       12237  st([vCpuSelect])                #21 restore PREFX3 instruction page
              2b76 9401  adda $01,y       12238  adda(1,Y)                       #22 retry instruction
              2b77 e000  jmp  y,$00       12239  jmp(Y,'NEXTY')                  #23
              2b78 00f3  ld   $f3         12240  ld(-26/2)                       #24
                                          12241
                                          12242
                                          12243  # SUBVL
                                          12244  label('subvl#13')
subvl#13:     2b79 0500  ld   [x]         12245  ld([X])                         #13
              2b7a c21d  st   [$1d]       12246  st([vTmp])                      #14 save src.0
              2b7b 112b  ld   [$2b],x     12247  ld([sysArgs+7],X)               #15 dst.0
              2b7c 00ea  ld   $ea         12248  ld(min(0,maxTicks-74/2))        #16
              2b7d 8115  adda [$15]       12249  adda([vTicks])                  #17
              2b7e e8c0  blt  .subvl#20   12250  blt('.subvl#20')                #18 not enough time left, so retry
              2b7f 0500  ld   [x]         12251  ld([X])                         #19 dst.0
              2b80 e885  blt  .subvl#22   12252  bmi('.subvl#22')                #20
              2b81 a11d  suba [$1d]       12253  suba([vTmp])                    #21
              2b82 c600  st   [x]         12254  st([X])                         #22 dst.0 -= src.0
              2b83 fc88  bra  .subvl#25   12255  bra('.subvl#25')                #23
              2b84 411d  ora  [$1d]       12256  ora([vTmp])                     #24 borrow in bit 7
                                          12257
                                          12258  label('.subvl#22')
.subvl#22:    2b85 c600  st   [x]         12259  st([X])                         #22 dst.0 -= src.0
              2b86 211d  anda [$1d]       12260  anda([vTmp])                    #23 borrow in bit 7
              2b87 0200  nop              12261  nop()                           #24
                                          12262
                                          12263  label('.subvl#25')
.subvl#25:    2b88 3080  anda $80,x       12264  anda(0x80,X)                    #25 borrow to bit 0
              2b89 0500  ld   [x]         12265  ld([X])                         #26
              2b8a c2b0  st   [$b0]       12266  st([0xB0])                      #27 store borrow
              2b8b 012a  ld   [$2a]       12267  ld([sysArgs+6])                 #28
              2b8c 9001  adda $01,x       12268  adda(1,X)                       #29
              2b8d 0500  ld   [x]         12269  ld([X])                         #30
              2b8e c21d  st   [$1d]       12270  st([vTmp])                      #31 src.1
              2b8f 012b  ld   [$2b]       12271  ld([sysArgs+7])                 #32
              2b90 9001  adda $01,x       12272  adda(1,X)                       #33
              2b91 0500  ld   [x]         12273  ld([X])                         #34 dst.1
              2b92 e898  blt  .subvl#37   12274  bmi('.subvl#37')                #35
              2b93 a11d  suba [$1d]       12275  suba([vTmp])                    #36
              2b94 a1b0  suba [$b0]       12276  suba([0xB0])                    #37
              2b95 c600  st   [x]         12277  st([X])                         #38 dst.1 = dst.1 - src.1 - borrow
              2b96 fc9c  bra  .subvl#41   12278  bra('.subvl#41')                #39
              2b97 411d  ora  [$1d]       12279  ora([vTmp])                     #40 borrow in bit 7
                                          12280
                                          12281  label('.subvl#37')
.subvl#37:    2b98 a1b0  suba [$b0]       12282  suba([0xB0])                    #37
              2b99 c600  st   [x]         12283  st([X])                         #38 dst.1 = dst.1 - src.1 - borrow
              2b9a 211d  anda [$1d]       12284  anda([vTmp])                    #39 borrow in bit 7
              2b9b 0200  nop              12285  nop()                           #40
                                          12286
                                          12287  label('.subvl#41')
.subvl#41:    2b9c 3080  anda $80,x       12288  anda(0x80,X)                    #41 borrow to bit 0
              2b9d 0500  ld   [x]         12289  ld([X])                         #42
              2b9e c2b0  st   [$b0]       12290  st([0xB0])                      #43 store borrow
              2b9f 012a  ld   [$2a]       12291  ld([sysArgs+6])                 #44
              2ba0 9002  adda $02,x       12292  adda(2,X)                       #45
              2ba1 0500  ld   [x]         12293  ld([X])                         #46
              2ba2 c21d  st   [$1d]       12294  st([vTmp])                      #47 src.2
              2ba3 012b  ld   [$2b]       12295  ld([sysArgs+7])                 #48
              2ba4 9002  adda $02,x       12296  adda(2,X)                       #49
              2ba5 0500  ld   [x]         12297  ld([X])                         #50 dst.2
              2ba6 e8ac  blt  .subvl#53   12298  bmi('.subvl#53')                #51
              2ba7 a11d  suba [$1d]       12299  suba([vTmp])                    #52
              2ba8 a1b0  suba [$b0]       12300  suba([0xB0])                    #53
              2ba9 c600  st   [x]         12301  st([X])                         #54 dst.2 = dst.2 - src.2 - borrow
              2baa fcb0  bra  .subvl#57   12302  bra('.subvl#57')                #55
              2bab 411d  ora  [$1d]       12303  ora([vTmp])                     #56 borrow in bit 7
                                          12304
                                          12305  label('.subvl#53')
.subvl#53:    2bac a1b0  suba [$b0]       12306  suba([0xB0])                    #53
              2bad c600  st   [x]         12307  st([X])                         #54 dst.2 = dst.2 - src.2 - borrow
              2bae 211d  anda [$1d]       12308  anda([vTmp])                    #55 borrow in bit 7
              2baf 0200  nop              12309  nop()                           #56
                                          12310
                                          12311  label('.subvl#57')
.subvl#57:    2bb0 3080  anda $80,x       12312  anda(0x80,X)                    #57 borrow to bit 0
              2bb1 0500  ld   [x]         12313  ld([X])                         #58
              2bb2 c2b0  st   [$b0]       12314  st([0xB0])                      #59 store borrow
              2bb3 012a  ld   [$2a]       12315  ld([sysArgs+6])                 #60
              2bb4 9003  adda $03,x       12316  adda(3,X)                       #61
              2bb5 0500  ld   [x]         12317  ld([X])                         #62
              2bb6 c21d  st   [$1d]       12318  st([vTmp])                      #63 src.3
              2bb7 012b  ld   [$2b]       12319  ld([sysArgs+7])                 #64
              2bb8 9003  adda $03,x       12320  adda(3,X)                       #65 dst.3
              2bb9 0500  ld   [x]         12321  ld([X])                         #66
              2bba a11d  suba [$1d]       12322  suba([vTmp])                    #67
              2bbb a1b0  suba [$b0]       12323  suba([0xB0])                    #68
              2bbc c600  st   [x]         12324  st([X])                         #69 dst.3 = dst.3 - src.3 - borrow
              2bbd 1403  ld   $03,y       12325  ld(hi('NEXTY'),Y)               #70
              2bbe e000  jmp  y,$00       12326  jmp(Y,'NEXTY')                  #71
              2bbf 00db  ld   $db         12327  ld(-74/2)                       #72
                                          12328
                                          12329  label('.subvl#20')
.subvl#20:    2bc0 0021  ld   $21         12330  ld(hi('PREFX3_PAGE'))           #20 ENTER is at $(n-1)ff, where n = instruction page
              2bc1 c202  st   [$02]       12331  st([vCpuSelect])                #21 restore PREFX3 instruction page
              2bc2 9401  adda $01,y       12332  adda(1,Y)                       #22 retry instruction
              2bc3 e000  jmp  y,$00       12333  jmp(Y,'NEXTY')                  #23
              2bc4 00f3  ld   $f3         12334  ld(-26/2)                       #24
                                          12335
                                          12336
                                          12337  # ANDVL
                                          12338  label('andvl#13')
andvl#13:     2bc5 1400  ld   $00,y       12339  ld(0,Y)                         #13
              2bc6 00f8  ld   $f8         12340  ld(min(0,maxTicks-46/2))        #14
              2bc7 8115  adda [$15]       12341  adda([vTicks])                  #15
              2bc8 e8e4  blt  .andvl#18   12342  blt('.andvl#18')                #16 not enough time left, so retry
              2bc9 0d00  ld   [y,x]       12343  ld([Y,X])                       #17 src.0
              2bca de00  st   [y,x++]     12344  st([Y,Xpp])                     #18
              2bcb c2b0  st   [$b0]       12345  st([0xB0])                      #19
              2bcc 0d00  ld   [y,x]       12346  ld([Y,X])                       #20 src.1
              2bcd de00  st   [y,x++]     12347  st([Y,Xpp])                     #21
              2bce c2b1  st   [$b1]       12348  st([0xB1])                      #22
              2bcf 0d00  ld   [y,x]       12349  ld([Y,X])                       #23 src.2
              2bd0 de00  st   [y,x++]     12350  st([Y,Xpp])                     #24
              2bd1 c2b2  st   [$b2]       12351  st([0xB2])                      #25
              2bd2 0500  ld   [x]         12352  ld([X])                         #26 src.3
              2bd3 c2b3  st   [$b3]       12353  st([0xB3])                      #27
              2bd4 112b  ld   [$2b],x     12354  ld([sysArgs+7],X)               #28
              2bd5 0500  ld   [x]         12355  ld([X])                         #29 dst.0
              2bd6 21b0  anda [$b0]       12356  anda([0xB0])                    #30
              2bd7 de00  st   [y,x++]     12357  st([Y,Xpp])                     #31 dst.0 &= src.0
              2bd8 0500  ld   [x]         12358  ld([X])                         #32 dst.1
              2bd9 21b1  anda [$b1]       12359  anda([0xB1])                    #33
              2bda de00  st   [y,x++]     12360  st([Y,Xpp])                     #34 dst.1 &= src.1
              2bdb 0500  ld   [x]         12361  ld([X])                         #35 dst.2
              2bdc 21b2  anda [$b2]       12362  anda([0xB2])                    #36
              2bdd de00  st   [y,x++]     12363  st([Y,Xpp])                     #37 dst.2 &= src.2
              2bde 0500  ld   [x]         12364  ld([X])                         #38 dst.3
              2bdf 21b3  anda [$b3]       12365  anda([0xB3])                    #39
              2be0 de00  st   [y,x++]     12366  st([Y,Xpp])                     #40 dst.3 &= src.3
              2be1 1403  ld   $03,y       12367  ld(hi('REENTER'),Y)             #41
              2be2 e0cb  jmp  y,$cb       12368  jmp(Y,'REENTER')                #42
              2be3 00e9  ld   $e9         12369  ld(-46/2)                       #43
                                          12370
                                          12371  label('.andvl#18')
.andvl#18:    2be4 0021  ld   $21         12372  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2be5 c202  st   [$02]       12373  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2be6 9401  adda $01,y       12374  adda(1,Y)                       #20 retry instruction
              2be7 e000  jmp  y,$00       12375  jmp(Y,'NEXTY')                  #21
              2be8 00f4  ld   $f4         12376  ld(-24/2)                       #22
                                          12377
                                          12378
              2be9 0200  nop              12379  fillers(until=0xff)
              2bea 0200  nop
              2beb 0200  nop
              * 22 times
              2bff 0200  nop              12380  align(0x100, size=0x100)
                                          12381
                                          12382  #-----------------------------------------------------------------------
                                          12383  #       More vCPU instruction implementations, (0x2C00)
                                          12384  #-----------------------------------------------------------------------
                                          12385  #
                                          12386  # ORVL
                                          12387  label('orvl#13')
orvl#13:      2c00 1400  ld   $00,y       12388  ld(0,Y)                         #13
              2c01 00f8  ld   $f8         12389  ld(min(0,maxTicks-46/2))        #14
              2c02 8115  adda [$15]       12390  adda([vTicks])                  #15
              2c03 e81f  blt  .orvl#18    12391  blt('.orvl#18')                 #16 not enough time left, so retry
              2c04 0d00  ld   [y,x]       12392  ld([Y,X])                       #17 src.0
              2c05 de00  st   [y,x++]     12393  st([Y,Xpp])                     #18
              2c06 c2b0  st   [$b0]       12394  st([0xB0])                      #19
              2c07 0d00  ld   [y,x]       12395  ld([Y,X])                       #20 src.1
              2c08 de00  st   [y,x++]     12396  st([Y,Xpp])                     #21
              2c09 c2b1  st   [$b1]       12397  st([0xB1])                      #22
              2c0a 0d00  ld   [y,x]       12398  ld([Y,X])                       #23 src.2
              2c0b de00  st   [y,x++]     12399  st([Y,Xpp])                     #24
              2c0c c2b2  st   [$b2]       12400  st([0xB2])                      #25
              2c0d 0500  ld   [x]         12401  ld([X])                         #26 src.3
              2c0e c2b3  st   [$b3]       12402  st([0xB3])                      #27
              2c0f 112b  ld   [$2b],x     12403  ld([sysArgs+7],X)               #28
              2c10 0500  ld   [x]         12404  ld([X])                         #29 dst.0
              2c11 41b0  ora  [$b0]       12405  ora([0xB0])                     #30
              2c12 de00  st   [y,x++]     12406  st([Y,Xpp])                     #31 dst.0 |= src.0
              2c13 0500  ld   [x]         12407  ld([X])                         #32 dst.1
              2c14 41b1  ora  [$b1]       12408  ora([0xB1])                     #33
              2c15 de00  st   [y,x++]     12409  st([Y,Xpp])                     #34 dst.1 |= src.1
              2c16 0500  ld   [x]         12410  ld([X])                         #35 dst.2
              2c17 41b2  ora  [$b2]       12411  ora([0xB2])                     #36
              2c18 de00  st   [y,x++]     12412  st([Y,Xpp])                     #37 dst.2 |= src.2
              2c19 0500  ld   [x]         12413  ld([X])                         #38 dst.3
              2c1a 41b3  ora  [$b3]       12414  ora([0xB3])                     #39
              2c1b de00  st   [y,x++]     12415  st([Y,Xpp])                     #40 dst.3 |= src.3
              2c1c 1403  ld   $03,y       12416  ld(hi('REENTER'),Y)             #41
              2c1d e0cb  jmp  y,$cb       12417  jmp(Y,'REENTER')                #42
              2c1e 00e9  ld   $e9         12418  ld(-46/2)                       #43
                                          12419
                                          12420  label('.orvl#18')
.orvl#18:     2c1f 0021  ld   $21         12421  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2c20 c202  st   [$02]       12422  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2c21 9401  adda $01,y       12423  adda(1,Y)                       #20 retry instruction
              2c22 e000  jmp  y,$00       12424  jmp(Y,'NEXTY')                  #21
              2c23 00f4  ld   $f4         12425  ld(-24/2)                       #22
                                          12426
                                          12427
                                          12428  # XORVL
                                          12429  label('xorvl#13')
xorvl#13:     2c24 1400  ld   $00,y       12430  ld(0,Y)                         #13
              2c25 00f8  ld   $f8         12431  ld(min(0,maxTicks-46/2))        #14
              2c26 8115  adda [$15]       12432  adda([vTicks])                  #15
              2c27 e843  blt  .xorvl#18   12433  blt('.xorvl#18')                #16 not enough time left, so retry
              2c28 0d00  ld   [y,x]       12434  ld([Y,X])                       #17 src.0
              2c29 de00  st   [y,x++]     12435  st([Y,Xpp])                     #18
              2c2a c2b0  st   [$b0]       12436  st([0xB0])                      #19
              2c2b 0d00  ld   [y,x]       12437  ld([Y,X])                       #20 src.1
              2c2c de00  st   [y,x++]     12438  st([Y,Xpp])                     #21
              2c2d c2b1  st   [$b1]       12439  st([0xB1])                      #22
              2c2e 0d00  ld   [y,x]       12440  ld([Y,X])                       #23 src.2
              2c2f de00  st   [y,x++]     12441  st([Y,Xpp])                     #24
              2c30 c2b2  st   [$b2]       12442  st([0xB2])                      #25
              2c31 0500  ld   [x]         12443  ld([X])                         #26 src.3
              2c32 c2b3  st   [$b3]       12444  st([0xB3])                      #27
              2c33 112b  ld   [$2b],x     12445  ld([sysArgs+7],X)               #28
              2c34 0500  ld   [x]         12446  ld([X])                         #29 dst.0
              2c35 61b0  xora [$b0]       12447  xora([0xB0])                    #30
              2c36 de00  st   [y,x++]     12448  st([Y,Xpp])                     #31 dst.0 ^= src.0
              2c37 0500  ld   [x]         12449  ld([X])                         #32 dst.1
              2c38 61b1  xora [$b1]       12450  xora([0xB1])                    #33
              2c39 de00  st   [y,x++]     12451  st([Y,Xpp])                     #34 dst.1 ^= src.1
              2c3a 0500  ld   [x]         12452  ld([X])                         #35 dst.2
              2c3b 61b2  xora [$b2]       12453  xora([0xB2])                    #36
              2c3c de00  st   [y,x++]     12454  st([Y,Xpp])                     #37 dst.2 ^= src.2
              2c3d 0500  ld   [x]         12455  ld([X])                         #38 dst.3
              2c3e 61b3  xora [$b3]       12456  xora([0xB3])                    #39
              2c3f de00  st   [y,x++]     12457  st([Y,Xpp])                     #40 dst.3 ^= src.3
              2c40 1403  ld   $03,y       12458  ld(hi('REENTER'),Y)             #41
              2c41 e0cb  jmp  y,$cb       12459  jmp(Y,'REENTER')                #42
              2c42 00e9  ld   $e9         12460  ld(-46/2)                       #43
                                          12461
                                          12462  label('.xorvl#18')
.xorvl#18:    2c43 0021  ld   $21         12463  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2c44 c202  st   [$02]       12464  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2c45 9401  adda $01,y       12465  adda(1,Y)                       #20 retry instruction
              2c46 e000  jmp  y,$00       12466  jmp(Y,'NEXTY')                  #21
              2c47 00f4  ld   $f4         12467  ld(-24/2)                       #22
                                          12468
                                          12469
                                          12470  # LSRV implementation
                                          12471  label('lsrv#13')
lsrv#13:      2c48 d22b  st   [$2b],x     12472  st([sysArgs+7],X)               #13 var
              2c49 00f3  ld   $f3         12473  ld(min(0,maxTicks-56/2))        #14
              2c4a 8115  adda [$15]       12474  adda([vTicks])                  #15
              2c4b e865  blt  .lsrv#18    12475  blt('.lsrv#18')                 #16 not enough time left, so retry
              2c4c 1405  ld   $05,y       12476  ld(hi('shiftTable'),Y)          #17 (ac >> 1) table
              2c4d 00cc  ld   $cc         12477  ld('.lsrv#27')                  #18 continuation address
              2c4e c21d  st   [$1d]       12478  st([vTmp])                      #19
              2c4f 0500  ld   [x]         12479  ld([X])                         #20 load byte from var
              2c50 20fe  anda $fe         12480  anda(0xfe)                      #21
              2c51 e200  jmp  y,ac        12481  jmp(Y,AC)                       #22
              2c52 fcff  bra  $ff         12482  bra(255)                        #23 bra shiftTable+255
                                          12483  # continues in page 0x0600 at label('.lsrv#27') fetching shifted byte from 0x0500
                                          12484
                                          12485  label('.lsrv#30')
.lsrv#30:     2c53 012b  ld   [$2b]       12486  ld([sysArgs+7])                 #30 low byte address
              2c54 8001  adda $01         12487  adda(1)                         #31
              2c55 d22a  st   [$2a],x     12488  st([sysArgs+6],X)               #32 high byte address
              2c56 0500  ld   [x]         12489  ld([X])                         #33 bit 0 of high byte
              2c57 2001  anda $01         12490  anda(1)                         #34
              2c58 807f  adda $7f         12491  adda(127)                       #35
              2c59 2080  anda $80         12492  anda(128)                       #36
              2c5a 112b  ld   [$2b],x     12493  ld([sysArgs+7],X)               #37
              2c5b 4500  ora  [x]         12494  ora([X])                        #38
              2c5c c600  st   [x]         12495  st([X])                         #39 transfer to bit 7 of low byte
              2c5d 1405  ld   $05,y       12496  ld(hi('shiftTable'),Y)          #40 (ac >> 1) table
              2c5e 00cf  ld   $cf         12497  ld('.lsrv#51')                  #41 continuation address
              2c5f c21d  st   [$1d]       12498  st([vTmp])                      #42
              2c60 112a  ld   [$2a],x     12499  ld([sysArgs+6],X)               #43
              2c61 0500  ld   [x]         12500  ld([X])                         #44
              2c62 20fe  anda $fe         12501  anda(0b11111110)                #45
              2c63 e200  jmp  y,ac        12502  jmp(Y,AC)                       #46
              2c64 fcff  bra  $ff         12503  bra(255)                        #47 bra shiftTable+255
                                          12504  # continues in page 0x0600 at label('.lsrv#51') fetching shifted byte from 0x0500
                                          12505
                                          12506  label('.lsrv#18')
.lsrv#18:     2c65 0116  ld   [$16]       12507  ld([vPC])                       #18 retry instruction
              2c66 a002  suba $02         12508  suba(2)                         #19
              2c67 c216  st   [$16]       12509  st([vPC])                       #20
              2c68 1403  ld   $03,y       12510  ld(hi('REENTER'),Y)             #21
              2c69 e0cb  jmp  y,$cb       12511  jmp(Y,'REENTER')                #22
              2c6a 00f3  ld   $f3         12512  ld(-26/2)                       #23
                                          12513
                                          12514
                                          12515  # LSRVL implementation
                                          12516  label('lsrvl#13')
lsrvl#13:     2c6b 1405  ld   $05,y       12517  ld(hi('shiftTable'),Y)          #13 (ac >> 1) table
              2c6c 00db  ld   $db         12518  ld(min(0,maxTicks-104/2))       #14
              2c6d 8115  adda [$15]       12519  adda([vTicks])                  #15
              2c6e e8ab  blt  .lsrvl#18   12520  blt('.lsrvl#18')                #16 not enough time left, so retry
              2c6f 00d3  ld   $d3         12521  ld('.lsrvl#26')                 #17 continuation address
              2c70 c21d  st   [$1d]       12522  st([vTmp])                      #18
              2c71 0500  ld   [x]         12523  ld([X])                         #19 load byte 0 from var
              2c72 20fe  anda $fe         12524  anda(0xfe)                      #20
              2c73 e200  jmp  y,ac        12525  jmp(Y,AC)                       #21
              2c74 fcff  bra  $ff         12526  bra(255)                        #22 bra shiftTable+255
                                          12527  # continues in page 0x0600 at label('.lsrvl#26') fetching shifted byte from 0x0500
                                          12528
                                          12529  label('.lsrvl#29')
.lsrvl#29:    2c75 012b  ld   [$2b]       12530  ld([sysArgs+7])                 #29 byte 0 address
              2c76 8001  adda $01         12531  adda(1)                         #30
              2c77 d2b0  st   [$b0],x     12532  st([0xB0],X)                    #31 byte 1 address
              2c78 8001  adda $01         12533  adda(1)                         #32
              2c79 c2b1  st   [$b1]       12534  st([0xB1])                      #33 byte 2 address
              2c7a 8001  adda $01         12535  adda(1)                         #34
              2c7b c2b2  st   [$b2]       12536  st([0xB2])                      #35 byte 3 address
              2c7c 0500  ld   [x]         12537  ld([X])                         #36 bit 0 of byte 1
              2c7d 2001  anda $01         12538  anda(1)                         #37
              2c7e 807f  adda $7f         12539  adda(127)                       #38
              2c7f 2080  anda $80         12540  anda(128)                       #39
              2c80 112b  ld   [$2b],x     12541  ld([sysArgs+7],X)               #40 byte 0 address
              2c81 4500  ora  [x]         12542  ora([X])                        #41
              2c82 c600  st   [x]         12543  st([X])                         #42 transfer to bit 7 of byte 0
              2c83 1405  ld   $05,y       12544  ld(hi('shiftTable'),Y)          #43 (ac >> 1) table
              2c84 00d6  ld   $d6         12545  ld('.lsrvl#54')                 #44 continuation address
              2c85 c21d  st   [$1d]       12546  st([vTmp])                      #45
              2c86 11b0  ld   [$b0],x     12547  ld([0xB0],X)                    #46 byte 1 address
              2c87 0500  ld   [x]         12548  ld([X])                         #47
              2c88 20fe  anda $fe         12549  anda(0b11111110)                #48
              2c89 e200  jmp  y,ac        12550  jmp(Y,AC)                       #49
              2c8a fcff  bra  $ff         12551  bra(255)                        #50 bra shiftTable+255
                                          12552  # continues in page 0x0600 at label('.lsrvl#54') fetching shifted byte from 0x0500
                                          12553
                                          12554  label('.lsrvl#57')
.lsrvl#57:    2c8b 11b1  ld   [$b1],x     12555  ld([0xB1],X)                    #57 byte 2 address
              2c8c 0500  ld   [x]         12556  ld([X])                         #58 bit 0 of byte 2
              2c8d 2001  anda $01         12557  anda(1)                         #59
              2c8e 807f  adda $7f         12558  adda(127)                       #60
              2c8f 2080  anda $80         12559  anda(128)                       #61
              2c90 11b0  ld   [$b0],x     12560  ld([0xB0],X)                    #62 byte 1 address
              2c91 4500  ora  [x]         12561  ora([X])                        #63
              2c92 c600  st   [x]         12562  st([X])                         #64 transfer to bit 7 of byte 1
              2c93 1405  ld   $05,y       12563  ld(hi('shiftTable'),Y)          #65 (ac >> 1) table
              2c94 00d9  ld   $d9         12564  ld('.lsrvl#76')                 #66 continuation address
              2c95 c21d  st   [$1d]       12565  st([vTmp])                      #67
              2c96 11b1  ld   [$b1],x     12566  ld([0xB1],X)                    #68 byte 2 address
              2c97 0500  ld   [x]         12567  ld([X])                         #69
              2c98 20fe  anda $fe         12568  anda(0b11111110)                #70
              2c99 e200  jmp  y,ac        12569  jmp(Y,AC)                       #71
              2c9a fcff  bra  $ff         12570  bra(255)                        #72 bra shiftTable+255
                                          12571  # continues in page 0x0600 at label('.lsrvl#76') fetching shifted byte from 0x0500
                                          12572
                                          12573  label('.lsrvl#79')
.lsrvl#79:    2c9b 11b2  ld   [$b2],x     12574  ld([0xB2],X)                    #79 byte 3 address
              2c9c 0500  ld   [x]         12575  ld([X])                         #80 bit 0 of byte 3
              2c9d 2001  anda $01         12576  anda(1)                         #81
              2c9e 807f  adda $7f         12577  adda(127)                       #82
              2c9f 2080  anda $80         12578  anda(128)                       #83
              2ca0 11b1  ld   [$b1],x     12579  ld([0xB1],X)                    #84 byte 2 address
              2ca1 4500  ora  [x]         12580  ora([X])                        #85
              2ca2 c600  st   [x]         12581  st([X])                         #86 transfer to bit 7 of byte 2
              2ca3 1405  ld   $05,y       12582  ld(hi('shiftTable'),Y)          #87 (ac >> 1) table
              2ca4 00dc  ld   $dc         12583  ld('.lsrvl#98')                 #88 continuation address
              2ca5 c21d  st   [$1d]       12584  st([vTmp])                      #89
              2ca6 11b2  ld   [$b2],x     12585  ld([0xB2],X)                    #90 byte 3 address
              2ca7 0500  ld   [x]         12586  ld([X])                         #91
              2ca8 20fe  anda $fe         12587  anda(0b11111110)                #92
              2ca9 e200  jmp  y,ac        12588  jmp(Y,AC)                       #93
              2caa fcff  bra  $ff         12589  bra(255)                        #94 bra shiftTable+255
                                          12590  # continues in page 0x0600 at label('.lsrvl#98') fetching shifted byte from 0x0500
                                          12591
                                          12592  label('.lsrvl#18')
.lsrvl#18:    2cab 0022  ld   $22         12593  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2cac c202  st   [$02]       12594  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2cad 9401  adda $01,y       12595  adda(1,Y)                       #20 retry instruction
              2cae e000  jmp  y,$00       12596  jmp(Y,'NEXTY')                  #21
              2caf 00f4  ld   $f4         12597  ld(-24/2)                       #22
                                          12598
                                          12599
                                          12600  # LSLVL implementation
                                          12601  label('lslvl#13')
lslvl#13:     2cb0 1400  ld   $00,y       12602  ld(0,Y)                         #13
              2cb1 00f3  ld   $f3         12603  ld(min(0,maxTicks-56/2))        #14
              2cb2 8115  adda [$15]       12604  adda([vTicks])                  #15
              2cb3 e8de  blt  .lslvl#18   12605  blt('.lslvl#18')                #16 not enough time left, so retry
              2cb4 0500  ld   [x]         12606  ld([X])                         #17
              2cb5 f4b8  bge  $2cb8       12607  bge(pc()+3)                     #18
              2cb6 fcb9  bra  $2cb9       12608  bra(pc()+3)                     #19
              2cb7 0001  ld   $01         12609  ld(1)                           #20
              2cb8 0000  ld   $00         12610  ld(0)                           #20
              2cb9 c2b0  st   [$b0]       12611  st([0xB0])                      #21 (var.0 & 0x80) >>7
              2cba 0500  ld   [x]         12612  ld([X])                         #22
              2cbb 8500  adda [x]         12613  adda([X])                       #23
              2cbc de00  st   [y,x++]     12614  st([Y,Xpp])                     #24 var.0 <<1
              2cbd 0500  ld   [x]         12615  ld([X])                         #25
              2cbe f4c1  bge  $2cc1       12616  bge(pc()+3)                     #26
              2cbf fcc2  bra  $2cc2       12617  bra(pc()+3)                     #27
              2cc0 0001  ld   $01         12618  ld(1)                           #28
              2cc1 0000  ld   $00         12619  ld(0)                           #28
              2cc2 c2b1  st   [$b1]       12620  st([0xB1])                      #29 (var.1 & 0x80) >>7
              2cc3 0500  ld   [x]         12621  ld([X])                         #30
              2cc4 8500  adda [x]         12622  adda([X])                       #31
              2cc5 41b0  ora  [$b0]       12623  ora([0xB0])                     #32
              2cc6 de00  st   [y,x++]     12624  st([Y,Xpp])                     #33 (var.1 <<1) | [0xB0]
              2cc7 0500  ld   [x]         12625  ld([X])                         #34
              2cc8 f4cb  bge  $2ccb       12626  bge(pc()+3)                     #35
              2cc9 fccc  bra  $2ccc       12627  bra(pc()+3)                     #36
              2cca 0001  ld   $01         12628  ld(1)                           #37
              2ccb 0000  ld   $00         12629  ld(0)                           #37
              2ccc c2b0  st   [$b0]       12630  st([0xB0])                      #38 (var.2 & 0x80) >>7
              2ccd 0500  ld   [x]         12631  ld([X])                         #39
              2cce 8500  adda [x]         12632  adda([X])                       #40
              2ccf 41b1  ora  [$b1]       12633  ora([0xB1])                     #41
              2cd0 de00  st   [y,x++]     12634  st([Y,Xpp])                     #42 (var.2 <<1) | [0xB1]
              2cd1 0500  ld   [x]         12635  ld([X])                         #43
              2cd2 f4d5  bge  $2cd5       12636  bge(pc()+3)                     #44
              2cd3 fcd6  bra  $2cd6       12637  bra(pc()+3)                     #45
              2cd4 0001  ld   $01         12638  ld(1)                           #46
              2cd5 0000  ld   $00         12639  ld(0)                           #46
              2cd6 c2b1  st   [$b1]       12640  st([0xB1])                      #47 (var.3 & 0x80) >>7
              2cd7 0500  ld   [x]         12641  ld([X])                         #48
              2cd8 8500  adda [x]         12642  adda([X])                       #49
              2cd9 41b0  ora  [$b0]       12643  ora([0xB0])                     #50
              2cda de00  st   [y,x++]     12644  st([Y,Xpp])                     #51 (var.3 <<1) | [0xB0]
              2cdb 1403  ld   $03,y       12645  ld(hi('NEXTY'),Y)               #52
              2cdc e000  jmp  y,$00       12646  jmp(Y,'NEXTY')                  #53
              2cdd 00e4  ld   $e4         12647  ld(-56/2)                       #54
                                          12648
                                          12649  label('.lslvl#18')
.lslvl#18:    2cde 0022  ld   $22         12650  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2cdf c202  st   [$02]       12651  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2ce0 9401  adda $01,y       12652  adda(1,Y)                       #20 retry instruction
              2ce1 e000  jmp  y,$00       12653  jmp(Y,'NEXTY')                  #21
              2ce2 00f4  ld   $f4         12654  ld(-24/2)                       #22
                                          12655
                                          12656
              2ce3 0200  nop              12657  fillers(until=0xff)
              2ce4 0200  nop
              2ce5 0200  nop
              * 28 times
              2cff 0200  nop              12658  align(0x100, size=0x100)
                                          12659
                                          12660  #-----------------------------------------------------------------------
                                          12661  #       More vCPU instruction implementations, (0x2D00)
                                          12662  #-----------------------------------------------------------------------
                                          12663  #
                                          12664  # JEQL implementation
                                          12665  label('jeql#13')
jeql#13:      2d00 1519  ld   [$19],y     12666  ld([vAC+1],Y)                   #13
              2d01 00fb  ld   $fb         12667  ld(min(0,maxTicks-40/2))        #14
              2d02 8115  adda [$15]       12668  adda([vTicks])                  #15
              2d03 e81d  blt  .jeql#18    12669  blt('.jeql#18')                 #16 not enough time left, so retry
              2d04 1118  ld   [$18],x     12670  ld([vAC],X)                     #17
              2d05 0d00  ld   [y,x]       12671  ld([Y,X])                       #18
              2d06 de00  st   [y,x++]     12672  st([Y,Xpp])                     #19
              2d07 c2b0  st   [$b0]       12673  st([0xB0])                      #20 [vAC].0
              2d08 0d00  ld   [y,x]       12674  ld([Y,X])                       #21
              2d09 de00  st   [y,x++]     12675  st([Y,Xpp])                     #22
              2d0a c2b1  st   [$b1]       12676  st([0xB1])                      #23 [vAC].1
              2d0b 0d00  ld   [y,x]       12677  ld([Y,X])                       #24
              2d0c de00  st   [y,x++]     12678  st([Y,Xpp])                     #25
              2d0d c2b2  st   [$b2]       12679  st([0xB2])                      #26 [vAC].2
              2d0e 0d00  ld   [y,x]       12680  ld([Y,X])                       #27 [vAC].3
              2d0f 41b2  ora  [$b2]       12681  ora([0xB2])                     #28
              2d10 41b1  ora  [$b1]       12682  ora([0xB1])                     #29
              2d11 41b0  ora  [$b0]       12683  ora([0xB0])                     #30
              2d12 ec1a  bne  .jeql#33    12684  bne('.jeql#33')                 #31 if (vAC.3 OR vAC.2 OR vAC.1 OR vAC.0) != 0
              2d13 012b  ld   [$2b]       12685  ld([sysArgs+7])                 #32 address of branch destination
              2d14 c216  st   [$16]       12686  st([vPC])                       #33
              2d15 012a  ld   [$2a]       12687  ld([sysArgs+6])                 #34
              2d16 c217  st   [$17]       12688  st([vPC+1])                     #35
              2d17 1403  ld   $03,y       12689  ld(hi('NEXTY'),Y)               #36
              2d18 e000  jmp  y,$00       12690  jmp(Y,'NEXTY')                  #37
              2d19 00ec  ld   $ec         12691  ld(-40/2)                       #38
                                          12692
                                          12693  label('.jeql#33')
.jeql#33:     2d1a 1403  ld   $03,y       12694  ld(hi('REENTER'),Y)             #33
              2d1b e0cb  jmp  y,$cb       12695  jmp(Y,'REENTER')                #34
              2d1c 00ed  ld   $ed         12696  ld(-38/2)                       #35
                                          12697
                                          12698  label('.jeql#18')
.jeql#18:     2d1d 0021  ld   $21         12699  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2d1e c202  st   [$02]       12700  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2d1f 9401  adda $01,y       12701  adda(1,Y)                       #20 retry instruction
              2d20 e000  jmp  y,$00       12702  jmp(Y,'NEXTY')                  #21
              2d21 00f4  ld   $f4         12703  ld(-24/2)                       #22
                                          12704
                                          12705
                                          12706  # JNEL implementation
                                          12707  label('jnel#13')
jnel#13:      2d22 1519  ld   [$19],y     12708  ld([vAC+1],Y)                   #13
              2d23 00fb  ld   $fb         12709  ld(min(0,maxTicks-40/2))        #14
              2d24 8115  adda [$15]       12710  adda([vTicks])                  #15
              2d25 e83f  blt  .jnel#18    12711  blt('.jnel#18')                 #16 not enough time left, so retry
              2d26 1118  ld   [$18],x     12712  ld([vAC],X)                     #17
              2d27 0d00  ld   [y,x]       12713  ld([Y,X])                       #18
              2d28 de00  st   [y,x++]     12714  st([Y,Xpp])                     #19
              2d29 c2b0  st   [$b0]       12715  st([0xB0])                      #20 [vAC].0
              2d2a 0d00  ld   [y,x]       12716  ld([Y,X])                       #21
              2d2b de00  st   [y,x++]     12717  st([Y,Xpp])                     #22
              2d2c c2b1  st   [$b1]       12718  st([0xB1])                      #23 [vAC].1
              2d2d 0d00  ld   [y,x]       12719  ld([Y,X])                       #24
              2d2e de00  st   [y,x++]     12720  st([Y,Xpp])                     #25
              2d2f c2b2  st   [$b2]       12721  st([0xB2])                      #26 [vAC].2
              2d30 0d00  ld   [y,x]       12722  ld([Y,X])                       #27 [vAC].3
              2d31 41b2  ora  [$b2]       12723  ora([0xB2])                     #28
              2d32 41b1  ora  [$b1]       12724  ora([0xB1])                     #29
              2d33 41b0  ora  [$b0]       12725  ora([0xB0])                     #30
              2d34 f03c  beq  .jnel#33    12726  beq('.jnel#33')                 #31 if (vAC.3 OR vAC.2 OR vAC.1 OR vAC.0) == 0
              2d35 012b  ld   [$2b]       12727  ld([sysArgs+7])                 #32 address of branch destination
              2d36 c216  st   [$16]       12728  st([vPC])                       #33
              2d37 012a  ld   [$2a]       12729  ld([sysArgs+6])                 #34
              2d38 c217  st   [$17]       12730  st([vPC+1])                     #35
              2d39 1403  ld   $03,y       12731  ld(hi('NEXTY'),Y)               #36
              2d3a e000  jmp  y,$00       12732  jmp(Y,'NEXTY')                  #37
              2d3b 00ec  ld   $ec         12733  ld(-40/2)                       #38
                                          12734
                                          12735  label('.jnel#33')
.jnel#33:     2d3c 1403  ld   $03,y       12736  ld(hi('REENTER'),Y)             #33
              2d3d e0cb  jmp  y,$cb       12737  jmp(Y,'REENTER')                #34
              2d3e 00ed  ld   $ed         12738  ld(-38/2)                       #35
                                          12739
                                          12740  label('.jnel#18')
.jnel#18:     2d3f 0021  ld   $21         12741  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2d40 c202  st   [$02]       12742  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2d41 9401  adda $01,y       12743  adda(1,Y)                       #20 retry instruction
              2d42 e000  jmp  y,$00       12744  jmp(Y,'NEXTY')                  #21
              2d43 00f4  ld   $f4         12745  ld(-24/2)                       #22
                                          12746
                                          12747
                                          12748  # JLTL implementation
                                          12749  label('jltl#13')
jltl#13:      2d44 1519  ld   [$19],y     12750  ld([vAC+1],Y)                   #13
              2d45 0118  ld   [$18]       12751  ld([vAC])                       #14
              2d46 9003  adda $03,x       12752  adda(3,X)                       #15
              2d47 0d00  ld   [y,x]       12753  ld([Y,X])                       #16
              2d48 e84d  blt  .jltl#19    12754  blt('.jltl#19')                 #17 if [vAC.3] < 0
              2d49 012b  ld   [$2b]       12755  ld([sysArgs+7])                 #18 address of branch destination
              2d4a 1403  ld   $03,y       12756  ld(hi('REENTER'),Y)             #19
              2d4b e0cb  jmp  y,$cb       12757  jmp(Y,'REENTER')                #20
              2d4c 00f4  ld   $f4         12758  ld(-24/2)                       #21
                                          12759
                                          12760  label('.jltl#19')
.jltl#19:     2d4d c216  st   [$16]       12761  st([vPC])                       #19
              2d4e 012a  ld   [$2a]       12762  ld([sysArgs+6])                 #20
              2d4f c217  st   [$17]       12763  st([vPC+1])                     #21
              2d50 1403  ld   $03,y       12764  ld(hi('NEXTY'),Y)               #22
              2d51 e000  jmp  y,$00       12765  jmp(Y,'NEXTY')                  #23
              2d52 00f3  ld   $f3         12766  ld(-26/2)                       #24
                                          12767
                                          12768
                                          12769  # JGTL implementation
                                          12770  label('jgtl#13')
jgtl#13:      2d53 1519  ld   [$19],y     12771  ld([vAC+1],Y)                   #13
              2d54 00fa  ld   $fa         12772  ld(min(0,maxTicks-42/2))        #14
              2d55 8115  adda [$15]       12773  adda([vTicks])                  #15
              2d56 e875  blt  .jgtl#18    12774  blt('.jgtl#18')                 #16 not enough time left, so retry
              2d57 1118  ld   [$18],x     12775  ld([vAC],X)                     #17
              2d58 0d00  ld   [y,x]       12776  ld([Y,X])                       #18
              2d59 de00  st   [y,x++]     12777  st([Y,Xpp])                     #19
              2d5a c2b0  st   [$b0]       12778  st([0xB0])                      #20 [vAC].0
              2d5b 0d00  ld   [y,x]       12779  ld([Y,X])                       #21
              2d5c de00  st   [y,x++]     12780  st([Y,Xpp])                     #22
              2d5d c2b1  st   [$b1]       12781  st([0xB1])                      #23 [vAC].1
              2d5e 0d00  ld   [y,x]       12782  ld([Y,X])                       #24
              2d5f de00  st   [y,x++]     12783  st([Y,Xpp])                     #25
              2d60 c2b2  st   [$b2]       12784  st([0xB2])                      #26 [vAC].2
              2d61 0d00  ld   [y,x]       12785  ld([Y,X])                       #27
              2d62 c2b3  st   [$b3]       12786  st([0xB3])                      #28 [vAC].3
              2d63 e86c  blt  .jgtl#31    12787  blt('.jgtl#31')                 #29 if [vAC.3] < 0
              2d64 41b2  ora  [$b2]       12788  ora([0xB2])                     #30
              2d65 41b1  ora  [$b1]       12789  ora([0xB1])                     #31
              2d66 41b0  ora  [$b0]       12790  ora([0xB0])                     #32
              2d67 ec6f  bne  .jgtl#35    12791  bne('.jgtl#35')                 #33 if (vAC.3 OR vAC.2 OR vAC.1 OR vAC.0) != 0
              2d68 012b  ld   [$2b]       12792  ld([sysArgs+7])                 #34 address of branch destination
              2d69 1403  ld   $03,y       12793  ld(hi('REENTER'),Y)             #35
              2d6a e0cb  jmp  y,$cb       12794  jmp(Y,'REENTER')                #36
              2d6b 00ec  ld   $ec         12795  ld(-40/2)                       #37
                                          12796
                                          12797  label('.jgtl#31')
.jgtl#31:     2d6c 1403  ld   $03,y       12798  ld(hi('REENTER'),Y)             #31
              2d6d e0cb  jmp  y,$cb       12799  jmp(Y,'REENTER')                #32
              2d6e 00ee  ld   $ee         12800  ld(-36/2)                       #33
                                          12801
                                          12802  label('.jgtl#35')
.jgtl#35:     2d6f c216  st   [$16]       12803  st([vPC])                       #35
              2d70 012a  ld   [$2a]       12804  ld([sysArgs+6])                 #36
              2d71 c217  st   [$17]       12805  st([vPC+1])                     #37
              2d72 1403  ld   $03,y       12806  ld(hi('NEXTY'),Y)               #38
              2d73 e000  jmp  y,$00       12807  jmp(Y,'NEXTY')                  #39
              2d74 00eb  ld   $eb         12808  ld(-42/2)                       #40
                                          12809
                                          12810  label('.jgtl#18')
.jgtl#18:     2d75 0021  ld   $21         12811  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2d76 c202  st   [$02]       12812  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2d77 9401  adda $01,y       12813  adda(1,Y)                       #20 retry instruction
              2d78 e000  jmp  y,$00       12814  jmp(Y,'NEXTY')                  #21
              2d79 00f4  ld   $f4         12815  ld(-24/2)                       #22
                                          12816
                                          12817
                                          12818  # JLEL implementation
                                          12819  label('jlel#13')
jlel#13:      2d7a 1519  ld   [$19],y     12820  ld([vAC+1],Y)                   #13
              2d7b 00fa  ld   $fa         12821  ld(min(0,maxTicks-42/2))        #14
              2d7c 8115  adda [$15]       12822  adda([vTicks])                  #15
              2d7d e8a0  blt  .jlel#18    12823  blt('.jlel#18')                 #16 not enough time left, so retry
              2d7e 1118  ld   [$18],x     12824  ld([vAC],X)                     #17
              2d7f 0d00  ld   [y,x]       12825  ld([Y,X])                       #18
              2d80 de00  st   [y,x++]     12826  st([Y,Xpp])                     #19
              2d81 c2b0  st   [$b0]       12827  st([0xB0])                      #20 [vAC].0
              2d82 0d00  ld   [y,x]       12828  ld([Y,X])                       #21
              2d83 de00  st   [y,x++]     12829  st([Y,Xpp])                     #22
              2d84 c2b1  st   [$b1]       12830  st([0xB1])                      #23 [vAC].1
              2d85 0d00  ld   [y,x]       12831  ld([Y,X])                       #24
              2d86 de00  st   [y,x++]     12832  st([Y,Xpp])                     #25
              2d87 c2b2  st   [$b2]       12833  st([0xB2])                      #26 [vAC].2
              2d88 0d00  ld   [y,x]       12834  ld([Y,X])                       #27
              2d89 c2b3  st   [$b3]       12835  st([0xB3])                      #28 [vAC].3
              2d8a e893  blt  .jlel#31    12836  blt('.jlel#31')                 #29 if [vAC.3] < 0
              2d8b 41b2  ora  [$b2]       12837  ora([0xB2])                     #30
              2d8c 41b1  ora  [$b1]       12838  ora([0xB1])                     #31
              2d8d 41b0  ora  [$b0]       12839  ora([0xB0])                     #32
              2d8e f09a  beq  .jlel#35    12840  beq('.jlel#35')                 #33 if (vAC.3 OR vAC.2 OR vAC.1 OR vAC.0) == 0
              2d8f 012b  ld   [$2b]       12841  ld([sysArgs+7])                 #34 address of branch destination
              2d90 1403  ld   $03,y       12842  ld(hi('REENTER'),Y)             #35
              2d91 e0cb  jmp  y,$cb       12843  jmp(Y,'REENTER')                #36
              2d92 00ec  ld   $ec         12844  ld(-40/2)                       #37
                                          12845
                                          12846  label('.jlel#31')
.jlel#31:     2d93 012b  ld   [$2b]       12847  ld([sysArgs+7])                 #31 address of branch destination
              2d94 c216  st   [$16]       12848  st([vPC])                       #32
              2d95 012a  ld   [$2a]       12849  ld([sysArgs+6])                 #33
              2d96 c217  st   [$17]       12850  st([vPC+1])                     #34
              2d97 1403  ld   $03,y       12851  ld(hi('REENTER'),Y)             #35
              2d98 e0cb  jmp  y,$cb       12852  jmp(Y,'REENTER')                #36
              2d99 00ec  ld   $ec         12853  ld(-40/2)                       #37
                                          12854
                                          12855  label('.jlel#35')
.jlel#35:     2d9a c216  st   [$16]       12856  st([vPC])                       #35
              2d9b 012a  ld   [$2a]       12857  ld([sysArgs+6])                 #36
              2d9c c217  st   [$17]       12858  st([vPC+1])                     #37
              2d9d 1403  ld   $03,y       12859  ld(hi('NEXTY'),Y)               #38
              2d9e e000  jmp  y,$00       12860  jmp(Y,'NEXTY')                  #39
              2d9f 00eb  ld   $eb         12861  ld(-42/2)                       #40
                                          12862
                                          12863  label('.jlel#18')
.jlel#18:     2da0 0021  ld   $21         12864  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2da1 c202  st   [$02]       12865  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2da2 9401  adda $01,y       12866  adda(1,Y)                       #20 retry instruction
              2da3 e000  jmp  y,$00       12867  jmp(Y,'NEXTY')                  #21
              2da4 00f4  ld   $f4         12868  ld(-24/2)                       #22
                                          12869
                                          12870
                                          12871  # JGEL implementation
                                          12872  label('jgel#13')
jgel#13:      2da5 1519  ld   [$19],y     12873  ld([vAC+1],Y)                   #13
              2da6 0118  ld   [$18]       12874  ld([vAC])                       #14
              2da7 9003  adda $03,x       12875  adda(3,X)                       #15
              2da8 0d00  ld   [y,x]       12876  ld([Y,X])                       #16
              2da9 e8b1  blt  .jgel#19    12877  blt('.jgel#19')                 #17 if [vAC.3] < 0
              2daa 012b  ld   [$2b]       12878  ld([sysArgs+7])                 #18 address of branch destination
              2dab c216  st   [$16]       12879  st([vPC])                       #19
              2dac 012a  ld   [$2a]       12880  ld([sysArgs+6])                 #20
              2dad c217  st   [$17]       12881  st([vPC+1])                     #21
              2dae 1403  ld   $03,y       12882  ld(hi('NEXTY'),Y)               #22
              2daf e000  jmp  y,$00       12883  jmp(Y,'NEXTY')                  #23
              2db0 00f3  ld   $f3         12884  ld(-26/2)                       #24
                                          12885
                                          12886  label('.jgel#19')
.jgel#19:     2db1 1403  ld   $03,y       12887  ld(hi('REENTER'),Y)             #19
              2db2 e0cb  jmp  y,$cb       12888  jmp(Y,'REENTER')                #20
              2db3 00f4  ld   $f4         12889  ld(-24/2)                       #21
                                          12890
                                          12891
                                          12892  # LOKEQI implementation
                                          12893  label('lokeqi#13')
lokeqi#13:    2db4 1517  ld   [$17],y     12894  ld([vPC+1],Y)                   #13
              2db5 de00  st   [y,x++]     12895  st([Y,Xpp])                     #14 X++
              2db6 00fe  ld   $fe         12896  ld(min(0,maxTicks-34/2))        #15
              2db7 8115  adda [$15]       12897  adda([vTicks])                  #16
              2db8 e8c8  blt  .lokeqi#19  12898  blt('.lokeqi#19')               #17 not enough time left, so retry
              2db9 0d00  ld   [y,x]       12899  ld([Y,X])                       #18 imm.0
              2dba 1519  ld   [$19],y     12900  ld([vAC+1],Y)                   #19
              2dbb 1118  ld   [$18],x     12901  ld([vAC],X)                     #20
              2dbc de00  st   [y,x++]     12902  st([Y,Xpp])                     #21 [vAC.0] = imm.0, X++
              2dbd 011d  ld   [$1d]       12903  ld([vTmp])                      #22
              2dbe de00  st   [y,x++]     12904  st([Y,Xpp])                     #23 [vAC.1] = imm.1, X++
              2dbf 0000  ld   $00         12905  ld(0)                           #24
              2dc0 de00  st   [y,x++]     12906  st([Y,Xpp])                     #25 [vAC.2] = 0, X++
              2dc1 ce00  st   [y,x]       12907  st([Y,X])                       #26 [vAC.3] = 0
              2dc2 0116  ld   [$16]       12908  ld([vPC])                       #27 fix vPC for 3 byte instruction
              2dc3 8001  adda $01         12909  adda(1)                         #28
              2dc4 c216  st   [$16]       12910  st([vPC])                       #29
              2dc5 1403  ld   $03,y       12911  ld(hi('NEXTY'),Y)               #30
              2dc6 e000  jmp  y,$00       12912  jmp(Y,'NEXTY')                  #31
              2dc7 00ef  ld   $ef         12913  ld(-34/2)                       #32
                                          12914
                                          12915  label('.lokeqi#19')
.lokeqi#19:   2dc8 0116  ld   [$16]       12916  ld([vPC])                       #19 retry
              2dc9 a002  suba $02         12917  suba(2)                         #20
              2dca c216  st   [$16]       12918  st([vPC])                       #21
              2dcb 1403  ld   $03,y       12919  ld(hi('NEXTY'),Y)               #22
              2dcc e000  jmp  y,$00       12920  jmp(Y,'NEXTY')                  #23
              2dcd 00f3  ld   $f3         12921  ld(-26/2)                       #24
                                          12922
                                          12923
                                          12924  # LOKEI implementation
                                          12925  label('lokei#13')
lokei#13:     2dce 1517  ld   [$17],y     12926  ld([vPC+1],Y)                   #13
              2dcf c2b0  st   [$b0]       12927  st([0xB0])                      #14 imm.3
              2dd0 de00  st   [y,x++]     12928  st([Y,Xpp])                     #15 X++
              2dd1 00fa  ld   $fa         12929  ld(min(0,maxTicks-42/2))        #16
              2dd2 8115  adda [$15]       12930  adda([vTicks])                  #17
              2dd3 e8ea  blt  .lokei#20   12931  blt('.lokei#20')                #18 not enough time left, so retry
              2dd4 0d00  ld   [y,x]       12932  ld([Y,X])                       #19
              2dd5 de00  st   [y,x++]     12933  st([Y,Xpp])                     #20 X++
              2dd6 c2b1  st   [$b1]       12934  st([0xB1])                      #21 imm.2
              2dd7 0d00  ld   [y,x]       12935  ld([Y,X])                       #22
              2dd8 de00  st   [y,x++]     12936  st([Y,Xpp])                     #23 X++
              2dd9 c2b2  st   [$b2]       12937  st([0xB2])                      #24 imm.1
              2dda 0d00  ld   [y,x]       12938  ld([Y,X])                       #25 imm.0
              2ddb 1519  ld   [$19],y     12939  ld([vAC+1],Y)                   #26
              2ddc 1118  ld   [$18],x     12940  ld([vAC],X)                     #27
              2ddd de00  st   [y,x++]     12941  st([Y,Xpp])                     #28 [vAC.0] = imm.0, X++
              2dde 01b2  ld   [$b2]       12942  ld([0xB2])                      #29
              2ddf de00  st   [y,x++]     12943  st([Y,Xpp])                     #30 [vAC.1] = imm.1, X++
              2de0 01b1  ld   [$b1]       12944  ld([0xB1])                      #31
              2de1 de00  st   [y,x++]     12945  st([Y,Xpp])                     #32 [vAC.2] = imm.2, X++
              2de2 01b0  ld   [$b0]       12946  ld([0xB0])                      #33
              2de3 ce00  st   [y,x]       12947  st([Y,X])                       #34 [vAC.3] = imm.3
              2de4 0116  ld   [$16]       12948  ld([vPC])                       #35 fix vPC for 5 byte instruction
              2de5 8003  adda $03         12949  adda(3)                         #36
              2de6 c216  st   [$16]       12950  st([vPC])                       #37
              2de7 1403  ld   $03,y       12951  ld(hi('NEXTY'),Y)               #38
              2de8 e000  jmp  y,$00       12952  jmp(Y,'NEXTY')                  #39
              2de9 00eb  ld   $eb         12953  ld(-42/2)                       #40
                                          12954
                                          12955  label('.lokei#20')
.lokei#20:    2dea 0116  ld   [$16]       12956  ld([vPC])                       #20 retry
              2deb a002  suba $02         12957  suba(2)                         #21
              2dec c216  st   [$16]       12958  st([vPC])                       #22
              2ded 1403  ld   $03,y       12959  ld(hi('REENTER'),Y)             #23
              2dee e0cb  jmp  y,$cb       12960  jmp(Y,'REENTER')                #24
              2def 00f2  ld   $f2         12961  ld(-28/2)                       #25
                                          12962
                                          12963
              2df0 0200  nop              12964  fillers(until=0xff)
              2df1 0200  nop
              2df2 0200  nop
              * 15 times
              2dff 0200  nop              12965  align(0x100, size=0x100)
                                          12966
                                          12967  #-----------------------------------------------------------------------
                                          12968  #       More vCPU instruction implementations, (0x2E00)
                                          12969  #-----------------------------------------------------------------------
                                          12970  #
                                          12971  # ANDBI implementation
                                          12972  label('andbi#13')
andbi#13:     2e00 0500  ld   [x]         12973  ld([X])                         #13
              2e01 212b  anda [$2b]       12974  anda([sysArgs+7])               #14 immediate value
              2e02 c600  st   [x]         12975  st([X])                         #15
              2e03 1403  ld   $03,y       12976  ld(hi('NEXTY'),Y)               #16
              2e04 e000  jmp  y,$00       12977  jmp(Y,'NEXTY')                  #17
              2e05 00f6  ld   $f6         12978  ld(-20/2)                       #18
                                          12979
                                          12980  # ORBI implementation
                                          12981  label('orbi#13')
orbi#13:      2e06 0500  ld   [x]         12982  ld([X])                         #13
              2e07 412b  ora  [$2b]       12983  ora([sysArgs+7])                #14 immediate value
              2e08 c600  st   [x]         12984  st([X])                         #15
              2e09 1403  ld   $03,y       12985  ld(hi('NEXTY'),Y)               #16
              2e0a e000  jmp  y,$00       12986  jmp(Y,'NEXTY')                  #17
              2e0b 00f6  ld   $f6         12987  ld(-20/2)                       #18
                                          12988
                                          12989  # XORBI implementation
                                          12990  label('xorbi#13')
xorbi#13:     2e0c 0500  ld   [x]         12991  ld([X])                         #13
              2e0d 612b  xora [$2b]       12992  xora([sysArgs+7])               #14 immediate value
              2e0e c600  st   [x]         12993  st([X])                         #15
              2e0f 1403  ld   $03,y       12994  ld(hi('NEXTY'),Y)               #16
              2e10 e000  jmp  y,$00       12995  jmp(Y,'NEXTY')                  #17
              2e11 00f6  ld   $f6         12996  ld(-20/2)                       #18
                                          12997
                                          12998
                                          12999  # INCL implementation
                                          13000  label('incl#13')
incl#13:      2e12 00fd  ld   $fd         13001  ld(min(0,maxTicks-36/2))        #13
              2e13 8115  adda [$15]       13002  adda([vTicks])                  #14
              2e14 e831  blt  .incl#17    13003  blt('.incl#17')                 #15 not enough time left, so retry
              2e15 1400  ld   $00,y       13004  ld(0,Y)                         #16
              2e16 0500  ld   [x]         13005  ld([X])                         #17
                                          13006  label('incl#18')
incl#18:      2e17 8001  adda $01         13007  adda(1)                         #18
              2e18 f01d  beq  .incl#21    13008  beq('.incl#21')                 #19 if 0 byte is 0x00
              2e19 de00  st   [y,x++]     13009  st([Y,Xpp])                     #20 inc 0 byte
              2e1a 1403  ld   $03,y       13010  ld(hi('REENTER'),Y)             #21
              2e1b e0cb  jmp  y,$cb       13011  jmp(Y,'REENTER')                #22
              2e1c 00f3  ld   $f3         13012  ld(-26/2)                       #23
                                          13013
                                          13014  label('.incl#21')
.incl#21:     2e1d 0500  ld   [x]         13015  ld([X])                         #21
              2e1e 8001  adda $01         13016  adda(1)                         #22
              2e1f f024  beq  .incl#25    13017  beq('.incl#25')                 #23 if 1 byte is 0x00
              2e20 de00  st   [y,x++]     13018  st([Y,Xpp])                     #24 inc 1 byte
              2e21 1403  ld   $03,y       13019  ld(hi('REENTER'),Y)             #25
              2e22 e0cb  jmp  y,$cb       13020  jmp(Y,'REENTER')                #26
              2e23 00f1  ld   $f1         13021  ld(-30/2)                       #27
                                          13022
                                          13023  label('.incl#25')
.incl#25:     2e24 0500  ld   [x]         13024  ld([X])                         #25
              2e25 8001  adda $01         13025  adda(1)                         #26
              2e26 f02b  beq  .incl#29    13026  beq('.incl#29')                 #27 if 2 byte is 0x00
              2e27 de00  st   [y,x++]     13027  st([Y,Xpp])                     #28 inc 2 byte
              2e28 1403  ld   $03,y       13028  ld(hi('REENTER'),Y)             #29
              2e29 e0cb  jmp  y,$cb       13029  jmp(Y,'REENTER')                #30
              2e2a 00ef  ld   $ef         13030  ld(-34/2)                       #31
                                          13031
                                          13032  label('.incl#29')
.incl#29:     2e2b 0500  ld   [x]         13033  ld([X])                         #29
              2e2c 8001  adda $01         13034  adda(1)                         #30
              2e2d c600  st   [x]         13035  st([X])                         #31 inc high byte
              2e2e 1403  ld   $03,y       13036  ld(hi('NEXTY'),Y)               #32
              2e2f e000  jmp  y,$00       13037  jmp(Y,'NEXTY')                  #33
              2e30 00ee  ld   $ee         13038  ld(-36/2)                       #34
                                          13039
                                          13040  label('.incl#17')
.incl#17:     2e31 0022  ld   $22         13041  ld(hi('PREFX2_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              2e32 c202  st   [$02]       13042  st([vCpuSelect])                #18 restore PREFX2 instruction page
              2e33 9401  adda $01,y       13043  adda(1,Y)                       #19 retry instruction
              2e34 e0cb  jmp  y,$cb       13044  jmp(Y,'REENTER')                #20
              2e35 00f4  ld   $f4         13045  ld(-24/2)                       #21
                                          13046
                                          13047
                                          13048  # DECL implementation
                                          13049  label('decl#13')
decl#13:      2e36 1200  ld   ac,x        13050  ld(AC,X)                        #13 var
              2e37 00fb  ld   $fb         13051  ld(min(0,maxTicks-40/2))        #14
              2e38 8115  adda [$15]       13052  adda([vTicks])                  #15
              2e39 e859  blt  .decl#18    13053  blt('.decl#18')                 #16 not enough time left, so retry
              2e3a 1400  ld   $00,y       13054  ld(0,Y)                         #17
              2e3b 0500  ld   [x]         13055  ld([X])                         #18
              2e3c a001  suba $01         13056  suba(1)                         #19
              2e3d de00  st   [y,x++]     13057  st([Y,Xpp])                     #20 dec 0 byte
              2e3e 60ff  xora $ff         13058  xora(0xff)                      #21 if 0 byte is 0xff
              2e3f f044  beq  .decl#24    13059  beq('.decl#24')                 #22
              2e40 0500  ld   [x]         13060  ld([X])                         #23
              2e41 1403  ld   $03,y       13061  ld(hi('NEXTY'),Y)               #24
              2e42 e000  jmp  y,$00       13062  jmp(Y,'NEXTY')                  #25
              2e43 00f2  ld   $f2         13063  ld(-28/2)                       #26
                                          13064
                                          13065  label('.decl#24')
.decl#24:     2e44 a001  suba $01         13066  suba(1)                         #24
              2e45 de00  st   [y,x++]     13067  st([Y,Xpp])                     #25 dec 1 byte
              2e46 60ff  xora $ff         13068  xora(0xff)                      #26 if 1 byte is 0xff
              2e47 f04c  beq  .decl#29    13069  beq('.decl#29')                 #27
              2e48 0500  ld   [x]         13070  ld([X])                         #28
              2e49 1403  ld   $03,y       13071  ld(hi('REENTER'),Y)             #29
              2e4a e0cb  jmp  y,$cb       13072  jmp(Y,'REENTER')                #30
              2e4b 00ef  ld   $ef         13073  ld(-34/2)                       #31
                                          13074
                                          13075  label('.decl#29')
.decl#29:     2e4c a001  suba $01         13076  suba(1)                         #29
              2e4d de00  st   [y,x++]     13077  st([Y,Xpp])                     #30 dec 2 byte
              2e4e 60ff  xora $ff         13078  xora(0xff)                      #31 if 2 byte is 0xff
              2e4f f054  beq  .decl#34    13079  beq('.decl#34')                 #32
              2e50 0500  ld   [x]         13080  ld([X])                         #33
              2e51 1403  ld   $03,y       13081  ld(hi('NEXTY'),Y)               #34
              2e52 e000  jmp  y,$00       13082  jmp(Y,'NEXTY')                  #35
              2e53 00ed  ld   $ed         13083  ld(-38/2)                       #36
                                          13084
                                          13085  label('.decl#34')
.decl#34:     2e54 a001  suba $01         13086  suba(1)                         #34
              2e55 c600  st   [x]         13087  st([X])                         #35 dec 3 byte
              2e56 1403  ld   $03,y       13088  ld(hi('NEXTY'),Y)               #36
              2e57 e000  jmp  y,$00       13089  jmp(Y,'NEXTY')                  #37
              2e58 00ec  ld   $ec         13090  ld(-40/2)                       #38
                                          13091
                                          13092  label('.decl#18')
.decl#18:     2e59 0022  ld   $22         13093  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2e5a c202  st   [$02]       13094  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2e5b 9401  adda $01,y       13095  adda(1,Y)                       #20 retry instruction
              2e5c e000  jmp  y,$00       13096  jmp(Y,'NEXTY')                  #21
              2e5d 00f4  ld   $f4         13097  ld(-24/2)                       #22
                                          13098
                                          13099
                                          13100  # NEGL implementation, (lb3361)
                                          13101  # Complement then jumps into INCL
                                          13102  label('negl#13')
negl#13:      2e5e 1400  ld   $00,y       13103  ld(0,Y)                         #13
              2e5f 00f2  ld   $f2         13104  ld(min(0,maxTicks-(40+18)/2))   #14
              2e60 8115  adda [$15]       13105  adda([vTicks])                  #15
              2e61 e859  blt  .decl#18    13106  blt('.decl#18')                 #16 restart
              2e62 0d00  ld   [y,x]       13107  ld([Y,X])                       #17
              2e63 60ff  xora $ff         13108  xora(0xff)                      #18
              2e64 de00  st   [y,x++]     13109  st([Y,Xpp])                     #19
              2e65 0d00  ld   [y,x]       13110  ld([Y,X])                       #20
              2e66 60ff  xora $ff         13111  xora(0xff)                      #21
              2e67 de00  st   [y,x++]     13112  st([Y,Xpp])                     #22
              2e68 0d00  ld   [y,x]       13113  ld([Y,X])                       #23
              2e69 60ff  xora $ff         13114  xora(0xff)                      #24
              2e6a de00  st   [y,x++]     13115  st([Y,Xpp])                     #25
              2e6b 0d00  ld   [y,x]       13116  ld([Y,X])                       #26
              2e6c 60ff  xora $ff         13117  xora(0xff)                      #27
              2e6d de00  st   [y,x++]     13118  st([Y,Xpp])                     #28
              2e6e 0200  nop              13119  nop()                           #29
              2e6f 0115  ld   [$15]       13120  ld([vTicks])                    #30
              2e70 80f7  adda $f7         13121  adda(-18/2)                     #13=31-18
              2e71 c215  st   [$15]       13122  st([vTicks])                    #14
              2e72 112b  ld   [$2b],x     13123  ld([sysArgs+7],X)               #15
              2e73 fc17  bra  incl#18     13124  bra('incl#18')                  #16
              2e74 0500  ld   [x]         13125  ld([X])                         #17
                                          13126
                                          13127
                                          13128
              2e75 0200  nop              13129  fillers(until=0xff)
              2e76 0200  nop
              2e77 0200  nop
              * 138 times
              2eff 0200  nop              13130  align(0x100, size=0x100)
                                          13131
                                          13132  #-----------------------------------------------------------------------
                                          13133  #  Implementation of SYS_CopyMemory[Ext], (0x2F00)
                                          13134  #-----------------------------------------------------------------------
                                          13135  #
                                          13136  # SYS_CopyMemory_vX_80 implementation, (lb3361)
                                          13137  label('sys_CopyMemory')
sys_CopyMemory:
              2f00 f83e  ble  .sysCm#20   13138  ble('.sysCm#20')                     #18   goto burst6
              2f01 a006  suba $06         13139  suba(6)                              #19
              2f02 f440  bge  .sysCm#22   13140  bge('.sysCm#22')                     #20   goto burst6
              2f03 1527  ld   [$27],y     13141  ld([sysArgs+3],Y)                    #21
              2f04 8003  adda $03         13142  adda(3)                              #22
              2f05 f41d  bge  .sysCm#25   13143  bge('.sysCm#25')                     #23   goto burst3
              2f06 1126  ld   [$26],x     13144  ld([sysArgs+2],X)                    #24
                                          13145
              2f07 8002  adda $02         13146  adda(2)                              #25   single
              2f08 c218  st   [$18]       13147  st([vAC])                            #26
              2f09 0d00  ld   [y,x]       13148  ld([Y,X])                            #27
              2f0a 1525  ld   [$25],y     13149  ld([sysArgs+1],Y)                    #28
              2f0b 1124  ld   [$24],x     13150  ld([sysArgs+0],X)                    #29
              2f0c ce00  st   [y,x]       13151  st([Y,X])                            #30
              2f0d 0124  ld   [$24]       13152  ld([sysArgs+0])                      #31
              2f0e 8001  adda $01         13153  adda(1)                              #32
              2f0f c224  st   [$24]       13154  st([sysArgs+0])                      #33
              2f10 0126  ld   [$26]       13155  ld([sysArgs+2])                      #34
              2f11 8001  adda $01         13156  adda(1)                              #35
              2f12 c226  st   [$26]       13157  st([sysArgs+2])                      #36
              2f13 0118  ld   [$18]       13158  ld([vAC])                            #37
              2f14 f017  beq  $2f17       13159  beq(pc()+3)                          #38
              2f15 fc18  bra  $2f18       13160  bra(pc()+3)                          #39
              2f16 00fe  ld   $fe         13161  ld(-2)                               #40
              2f17 0000  ld   $00         13162  ld(0)                                #40!
              2f18 8116  adda [$16]       13163  adda([vPC])                          #41
              2f19 c216  st   [$16]       13164  st([vPC])                            #42
              2f1a 1403  ld   $03,y       13165  ld(hi('REENTER'),Y)                  #43
              2f1b e0cb  jmp  y,$cb       13166  jmp(Y,'REENTER')                     #44
              2f1c 00e8  ld   $e8         13167  ld(-48/2)                            #45
                                          13168
                                          13169  label('.sysCm#25')
.sysCm#25:    2f1d c218  st   [$18]       13170  st([vAC])                            #25   burst3
                                          13171  for i in range(3):
              2f1e 0d00  ld   [y,x]       13172    ld([Y,X])                            #26+3*i
              2f1f c228  st   [$28]       13173    st([sysArgs+4+i])                    #27+3*i
              2f20 de00  st   [y,x++]     13174    st([Y,Xpp]) if i<2 else None         #28+3*i
              2f21 0d00  ld   [y,x]
              2f22 c229  st   [$29]
              2f23 de00  st   [y,x++]
              2f24 0d00  ld   [y,x]
              2f25 c22a  st   [$2a]
              2f26 1525  ld   [$25],y     13175  ld([sysArgs+1],Y)                    #34
              2f27 1124  ld   [$24],x     13176  ld([sysArgs+0],X)                    #35
                                          13177  for i in range(3):
              2f28 0128  ld   [$28]       13178    ld([sysArgs+4+i])                    #36+2*i
              2f29 de00  st   [y,x++]     13179    st([Y,Xpp])                          #37+2*i
              2f2a 0129  ld   [$29]
              2f2b de00  st   [y,x++]
              2f2c 012a  ld   [$2a]
              2f2d de00  st   [y,x++]
              2f2e 0124  ld   [$24]       13180  ld([sysArgs+0])                      #42
              2f2f 8003  adda $03         13181  adda(3)                              #43
              2f30 c224  st   [$24]       13182  st([sysArgs+0])                      #44
              2f31 0126  ld   [$26]       13183  ld([sysArgs+2])                      #45
              2f32 8003  adda $03         13184  adda(3)                              #46
              2f33 c226  st   [$26]       13185  st([sysArgs+2])                      #47
              2f34 0118  ld   [$18]       13186  ld([vAC])                            #48
              2f35 f038  beq  $2f38       13187  beq(pc()+3)                          #49
              2f36 fc39  bra  $2f39       13188  bra(pc()+3)                          #50
              2f37 00fe  ld   $fe         13189  ld(-2)                               #51
              2f38 0000  ld   $00         13190  ld(0)                                #51!
              2f39 8116  adda [$16]       13191  adda([vPC])                          #52
              2f3a c216  st   [$16]       13192  st([vPC])                            #53
              2f3b 1403  ld   $03,y       13193  ld(hi('NEXTY'),Y)                    #54
              2f3c e000  jmp  y,$00       13194  jmp(Y,'NEXTY')                       #55
              2f3d 00e3  ld   $e3         13195  ld(-58/2)                            #56
                                          13196
                                          13197  label('.sysCm#20')
.sysCm#20:    2f3e 0200  nop              13198  nop()                                #20   burst6
              2f3f 1527  ld   [$27],y     13199  ld([sysArgs+3],Y)                    #21
                                          13200  label('.sysCm#22')
.sysCm#22:    2f40 c218  st   [$18]       13201  st([vAC])                            #22   burst6
              2f41 1126  ld   [$26],x     13202  ld([sysArgs+2],X)                    #23
                                          13203  for i in range(6):
              2f42 0d00  ld   [y,x]       13204    ld([Y,X])                            #24+i*3
              2f43 c21a  st   [$1a]       13205    st([vLR+i if i<2 else sysArgs+2+i])  #25+i*3
              2f44 de00  st   [y,x++]     13206    st([Y,Xpp]) if i<5 else None         #26+i*3 if i<5
              2f45 0d00  ld   [y,x]
              2f46 c21b  st   [$1b]
              2f47 de00  st   [y,x++]
              2f48 0d00  ld   [y,x]
              2f49 c228  st   [$28]
              2f4a de00  st   [y,x++]
              2f4b 0d00  ld   [y,x]
              2f4c c229  st   [$29]
              2f4d de00  st   [y,x++]
              2f4e 0d00  ld   [y,x]
              2f4f c22a  st   [$2a]
              2f50 de00  st   [y,x++]
              2f51 0d00  ld   [y,x]
              2f52 c22b  st   [$2b]
              2f53 1525  ld   [$25],y     13207  ld([sysArgs+1],Y)                    #41
              2f54 1124  ld   [$24],x     13208  ld([sysArgs+0],X)                    #42
                                          13209  for i in range(6):
              2f55 011a  ld   [$1a]       13210    ld([vLR+i if i<2 else sysArgs+2+i])  #43+i*2
              2f56 de00  st   [y,x++]     13211    st([Y,Xpp])                          #44+i*2
              2f57 011b  ld   [$1b]
              2f58 de00  st   [y,x++]
              2f59 0128  ld   [$28]
              2f5a de00  st   [y,x++]
              2f5b 0129  ld   [$29]
              2f5c de00  st   [y,x++]
              2f5d 012a  ld   [$2a]
              2f5e de00  st   [y,x++]
              2f5f 012b  ld   [$2b]
              2f60 de00  st   [y,x++]
              2f61 0124  ld   [$24]       13212  ld([sysArgs+0])                      #55
              2f62 8006  adda $06         13213  adda(6)                              #56
              2f63 c224  st   [$24]       13214  st([sysArgs+0])                      #57
              2f64 0126  ld   [$26]       13215  ld([sysArgs+2])                      #58
              2f65 8006  adda $06         13216  adda(6)                              #59
              2f66 c226  st   [$26]       13217  st([sysArgs+2])                      #60
                                          13218
              2f67 0118  ld   [$18]       13219  ld([vAC])                            #61
              2f68 ec6c  bne  .sysCm#64   13220  bne('.sysCm#64')                     #62
              2f69 1403  ld   $03,y       13221  ld(hi('REENTER'),Y)                  #63
              2f6a e0cb  jmp  y,$cb       13222  jmp(Y,'REENTER')                     #64
              2f6b 00de  ld   $de         13223  ld(-68/2)                            #65
                                          13224
                                          13225  label('.sysCm#64')
.sysCm#64:    2f6c 00e6  ld   $e6         13226  ld(-52/2)                            #64
              2f6d 8115  adda [$15]       13227  adda([vTicks])                       #13 = 65 - 52
              2f6e c215  st   [$15]       13228  st([vTicks])                         #14
              2f6f 80e8  adda $e8         13229  adda(min(0,maxTicks-(26+52)/2))      #15   could probably be min(0,maxTicks-(26+52)/2)
                                          13230  bge('sys_CopyMemory')                #16
              2f70 f400  bge  sys_CopyMemory
              2f71 0118  ld   [$18]       13231  ld([vAC])                            #17
              2f72 00fe  ld   $fe         13232  ld(-2)                               #18   notime
              2f73 8116  adda [$16]       13233  adda([vPC])                          #19
              2f74 c216  st   [$16]       13234  st([vPC])                            #20
              2f75 1403  ld   $03,y       13235  ld(hi('REENTER'),Y)                  #21
              2f76 e0cb  jmp  y,$cb       13236  jmp(Y,'REENTER')                     #22
              2f77 00f3  ld   $f3         13237  ld(-26/2)                            #23
                                          13238
                                          13239
                                          13240  # SYS_CopyMemoryExt_vX_100 implementation, (lb3361)
                                          13241  label('sys_CopyMemoryExt')
sys_CopyMemoryExt:
              2f78 8200  adda ac          13242  adda(AC)                             #18
              2f79 8200  adda ac          13243  adda(AC)                             #19
              2f7a 403c  ora  $3c         13244  ora(0x3c)                            #20
              2f7b c21d  st   [$1d]       13245  st([vTmp])                           #21 [vTmp] = src ctrl value
              2f7c 0119  ld   [$19]       13246  ld([vAC+1])                          #22
              2f7d 20fc  anda $fc         13247  anda(0xfc)                           #23
              2f7e 403c  ora  $3c         13248  ora(0x3c)                            #24
              2f7f c21a  st   [$1a]       13249  st([vLR])                            #25 [vLR] = dest ctrl value
                                          13250
                                          13251  label('.sysCme#26')
.sysCme#26:   2f80 0118  ld   [$18]       13252  ld([vAC])                            #26
              2f81 f8a4  ble  .sysCme#29  13253  ble('.sysCme#29')                    #27   goto burst5
              2f82 a005  suba $05         13254  suba(5)                              #28
              2f83 f4a6  bge  .sysCme#31  13255  bge('.sysCme#31')                    #29   goto burst5
              2f84 1527  ld   [$27],y     13256  ld([sysArgs+3],Y)                    #30
              2f85 8004  adda $04         13257  adda(4)                              #31
                                          13258
              2f86 c218  st   [$18]       13259  st([vAC])                            #32   single
              2f87 111d  ld   [$1d],x     13260  ld([vTmp],X)                         #33
              2f88 c500  ctrl x           13261  ctrl(X)                              #34
              2f89 1126  ld   [$26],x     13262  ld([sysArgs+2],X)                    #35
              2f8a 0d00  ld   [y,x]       13263  ld([Y,X])                            #36
              2f8b 111a  ld   [$1a],x     13264  ld([vLR],X)                          #37
              2f8c c500  ctrl x           13265  ctrl(X)                              #38
              2f8d 1525  ld   [$25],y     13266  ld([sysArgs+1],Y)                    #39
              2f8e 1124  ld   [$24],x     13267  ld([sysArgs+0],X)                    #40
              2f8f ce00  st   [y,x]       13268  st([Y,X])                            #41
              2f90 1401  ld   $01,y       13269  ld(hi(ctrlBits), Y)                  #42
              2f91 09f8  ld   [y,$f8]     13270  ld([Y,ctrlBits])                     #43
              2f92 1200  ld   ac,x        13271  ld(AC,X)                             #44
              2f93 c500  ctrl x           13272  ctrl(X)                              #45
              2f94 0124  ld   [$24]       13273  ld([sysArgs+0])                      #46
              2f95 8001  adda $01         13274  adda(1)                              #47
              2f96 c224  st   [$24]       13275  st([sysArgs+0])                      #48
              2f97 0126  ld   [$26]       13276  ld([sysArgs+2])                      #49
              2f98 8001  adda $01         13277  adda(1)                              #50
              2f99 c226  st   [$26]       13278  st([sysArgs+2])                      #51
              2f9a 0118  ld   [$18]       13279  ld([vAC])                            #52  done?
              2f9b f09e  beq  $2f9e       13280  beq(pc()+3)                          #53
              2f9c fc9f  bra  $2f9f       13281  bra(pc()+3)                          #54
              2f9d 00fe  ld   $fe         13282  ld(-2)                               #55  restart
              2f9e 0000  ld   $00         13283  ld(0)                                #55! finished
              2f9f 8116  adda [$16]       13284  adda([vPC])                          #56
              2fa0 c216  st   [$16]       13285  st([vPC])                            #57
              2fa1 1403  ld   $03,y       13286  ld(hi('NEXTY'),Y)                    #58
              2fa2 e000  jmp  y,$00       13287  jmp(Y,'NEXTY')                       #59
              2fa3 00e1  ld   $e1         13288  ld(-62/2)                            #60
                                          13289
                                          13290  label('.sysCme#29')
.sysCme#29:   2fa4 0200  nop              13291  nop()                                #29   burst5
              2fa5 1527  ld   [$27],y     13292  ld([sysArgs+3],Y)                    #30
                                          13293  label('.sysCme#31')
.sysCme#31:   2fa6 c218  st   [$18]       13294  st([vAC])                            #31   burst5
              2fa7 111d  ld   [$1d],x     13295  ld([vTmp],X)                         #32
              2fa8 c500  ctrl x           13296  ctrl(X)                              #33
              2fa9 1126  ld   [$26],x     13297  ld([sysArgs+2],X)                    #34
                                          13298  for i in range(5):
              2faa 0d00  ld   [y,x]       13299    ld([Y,X])                            #35+i*3
              2fab c21b  st   [$1b]       13300    st([vLR+1 if i<1 else sysArgs+3+i])  #36+i*3
              2fac de00  st   [y,x++]     13301    st([Y,Xpp]) if i<4 else None         #37+i*3 if i<4
              2fad 0d00  ld   [y,x]
              2fae c228  st   [$28]
              2faf de00  st   [y,x++]
              2fb0 0d00  ld   [y,x]
              2fb1 c229  st   [$29]
              2fb2 de00  st   [y,x++]
              2fb3 0d00  ld   [y,x]
              2fb4 c22a  st   [$2a]
              2fb5 de00  st   [y,x++]
              2fb6 0d00  ld   [y,x]
              2fb7 c22b  st   [$2b]
              2fb8 111a  ld   [$1a],x     13302  ld([vLR],X)                          #49
              2fb9 c500  ctrl x           13303  ctrl(X)                              #50
              2fba 1525  ld   [$25],y     13304  ld([sysArgs+1],Y)                    #51
              2fbb 1124  ld   [$24],x     13305  ld([sysArgs+0],X)                    #52
                                          13306  for i in range(5):
              2fbc 011b  ld   [$1b]       13307    ld([vLR+1 if i<1 else sysArgs+3+i])  #53+i*2
              2fbd de00  st   [y,x++]     13308    st([Y,Xpp])                          #54+i*2
              2fbe 0128  ld   [$28]
              2fbf de00  st   [y,x++]
              2fc0 0129  ld   [$29]
              2fc1 de00  st   [y,x++]
              2fc2 012a  ld   [$2a]
              2fc3 de00  st   [y,x++]
              2fc4 012b  ld   [$2b]
              2fc5 de00  st   [y,x++]
              2fc6 0124  ld   [$24]       13309  ld([sysArgs+0])                      #63
              2fc7 8005  adda $05         13310  adda(5)                              #64
              2fc8 c224  st   [$24]       13311  st([sysArgs+0])                      #65
              2fc9 0126  ld   [$26]       13312  ld([sysArgs+2])                      #66
              2fca 8005  adda $05         13313  adda(5)                              #67
              2fcb c226  st   [$26]       13314  st([sysArgs+2])                      #68
                                          13315
              2fcc 0118  ld   [$18]       13316  ld([vAC])                            #69
              2fcd ecd6  bne  .sysCme#72  13317  bne('.sysCme#72')                    #70
              2fce 1401  ld   $01,y       13318  ld(hi(ctrlBits), Y)                  #71  we're done!
              2fcf 09f8  ld   [y,$f8]     13319  ld([Y,ctrlBits])                     #72
              2fd0 30fc  anda $fc,x       13320  anda(0xfc,X)                         #73
              2fd1 c500  ctrl x           13321  ctrl(X)                              #74
              2fd2 011d  ld   [$1d]       13322  ld([vTmp])                           #75  always read after ctrl
              2fd3 1403  ld   $03,y       13323  ld(hi('NEXTY'),Y)                    #76
              2fd4 e000  jmp  y,$00       13324  jmp(Y,'NEXTY')                       #77
              2fd5 00d8  ld   $d8         13325  ld(-80/2)                            #78
                                          13326
                                          13327  label('.sysCme#72')
.sysCme#72:   2fd6 00e6  ld   $e6         13328  ld(-52/2)                            #72
              2fd7 8115  adda [$15]       13329  adda([vTicks])                       #21 = 72 - 52
              2fd8 c215  st   [$15]       13330  st([vTicks])                         #22
              2fd9 80e1  adda $e1         13331  adda(min(0,maxTicks-(40+52)/2))      #23
              2fda f480  bge  .sysCme#26  13332  bge('.sysCme#26')                    #24  enough time for another loop
              2fdb 00fe  ld   $fe         13333  ld(-2)                               #25
              2fdc 8116  adda [$16]       13334  adda([vPC])                          #26  restart
              2fdd c216  st   [$16]       13335  st([vPC])                            #27
              2fde 1401  ld   $01,y       13336  ld(hi(ctrlBits), Y)                  #28
              2fdf 09f8  ld   [y,$f8]     13337  ld([Y,ctrlBits])                     #29
              2fe0 30fc  anda $fc,x       13338  anda(0xfc,X)                         #30
              2fe1 c500  ctrl x           13339  ctrl(X)                              #31
              2fe2 011d  ld   [$1d]       13340  ld([vTmp])                           #32 always read after ctrl
              2fe3 1403  ld   $03,y       13341  ld(hi('REENTER'),Y)                  #33
              2fe4 e0cb  jmp  y,$cb       13342  jmp(Y,'REENTER')                     #34
              2fe5 00ed  ld   $ed         13343  ld(-38/2)                            #35 max: 38 + 52 = 90 cycles
                                          13344
                                          13345
              2fe6 0200  nop              13346  fillers(until=0xff)
              2fe7 0200  nop
              2fe8 0200  nop
              * 25 times
              2fff 0200  nop              13347  align(0x100, size=0x100)
                                          13348
                                          13349  #-----------------------------------------------------------------------
                                          13350  #  Implementation of SYS_ScanMemory[Ext], (0x3000)
                                          13351  #-----------------------------------------------------------------------
                                          13352  #
                                          13353  # SYS_ScanMemory_vX_50 implementation, (lb3361)
                                          13354  label('sys_ScanMemory')
sys_ScanMemory:
              3000 1124  ld   [$24],x     13355  ld([sysArgs+0],X)                    #18
              3001 0d00  ld   [y,x]       13356  ld([Y,X])                            #19
                                          13357  label('.sysSme#20')
.sysSme#20:   3002 6126  xora [$26]       13358  xora([sysArgs+2])                    #20
              3003 f01e  beq  .sysSme#23  13359  beq('.sysSme#23')                    #21
              3004 0d00  ld   [y,x]       13360  ld([Y,X])                            #22
              3005 6127  xora [$27]       13361  xora([sysArgs+3])                    #23
              3006 f021  beq  .sysSme#26  13362  beq('.sysSme#26')                    #24
              3007 0124  ld   [$24]       13363  ld([sysArgs+0])                      #25
              3008 8001  adda $01         13364  adda(1);                             #26
              3009 d224  st   [$24],x     13365  st([sysArgs+0],X)                    #27
              300a 0118  ld   [$18]       13366  ld([vAC])                            #28
              300b a001  suba $01         13367  suba(1)                              #29
              300c f01a  beq  .sysSme#32  13368  beq('.sysSme#32')                    #30 return zero
              300d c218  st   [$18]       13369  st([vAC])                            #31
              300e 00f7  ld   $f7         13370  ld(-18/2)                            #14 = 32 - 18
              300f 8115  adda [$15]       13371  adda([vTicks])                       #15
              3010 c215  st   [$15]       13372  st([vTicks])                         #16
              3011 80f8  adda $f8         13373  adda(min(0,maxTicks -(28+18)/2))     #17
              3012 f402  bge  .sysSme#20  13374  bge('.sysSme#20')                    #18
              3013 0d00  ld   [y,x]       13375  ld([Y,X])                            #19
              3014 00fe  ld   $fe         13376  ld(-2)                               #20 restart
              3015 8116  adda [$16]       13377  adda([vPC])                          #21
              3016 c216  st   [$16]       13378  st([vPC])                            #22
              3017 1403  ld   $03,y       13379  ld(hi('REENTER'),Y)                  #23
              3018 e0cb  jmp  y,$cb       13380  jmp(Y,'REENTER')                     #24
              3019 00f2  ld   $f2         13381  ld(-28/2)                            #25
                                          13382
                                          13383  label('.sysSme#32')
.sysSme#32:   301a c219  st   [$19]       13384  st([vAC+1])                          #32 return zero
              301b 1403  ld   $03,y       13385  ld(hi('REENTER'),Y)                  #33
              301c e0cb  jmp  y,$cb       13386  jmp(Y,'REENTER')                     #34
              301d 00ed  ld   $ed         13387  ld(-38/2)                            #35
                                          13388
                                          13389  label('.sysSme#23')
.sysSme#23:   301e 0200  nop              13390  nop()                                #23 success
              301f 0200  nop              13391  nop()                                #24
              3020 0124  ld   [$24]       13392  ld([sysArgs+0])                      #25
                                          13393  label('.sysSme#26')
.sysSme#26:   3021 c218  st   [$18]       13394  st([vAC])                            #26 success
              3022 0125  ld   [$25]       13395  ld([sysArgs+1])                      #27
              3023 c219  st   [$19]       13396  st([vAC+1])                          #28
              3024 1403  ld   $03,y       13397  ld(hi('REENTER'),Y)                  #29
              3025 e0cb  jmp  y,$cb       13398  jmp(Y,'REENTER')                     #30
              3026 00ef  ld   $ef         13399  ld(-34/2)                            #31
                                          13400
                                          13401
                                          13402  # SYS_ScanMemoryExt_vX_50 implementation, (lb3361)
                                          13403  label('sys_ScanMemoryExt')
sys_ScanMemoryExt:
              3027 503c  ora  $3c,x       13404  ora(0x3c,X)                          #18
              3028 c500  ctrl x           13405  ctrl(X)                              #19
              3029 1525  ld   [$25],y     13406  ld([sysArgs+1],Y)                    #20
              302a 1124  ld   [$24],x     13407  ld([sysArgs+0],X)                    #21
              302b 0d00  ld   [y,x]       13408  ld([Y,X])                            #22
              302c 0200  nop              13409  nop()                                #23
                                          13410  label('.sysSmx#24')
.sysSmx#24:   302d 6126  xora [$26]       13411  xora([sysArgs+2])                    #24
              302e f04a  beq  .sysSmx#27  13412  beq('.sysSmx#27')                    #25
              302f 0d00  ld   [y,x]       13413  ld([Y,X])                            #26
              3030 6127  xora [$27]       13414  xora([sysArgs+3])                    #27
              3031 f04d  beq  .sysSmx#30  13415  beq('.sysSmx#30')                    #28
              3032 0124  ld   [$24]       13416  ld([sysArgs+0])                      #29
              3033 8001  adda $01         13417  adda(1);                             #30
              3034 d224  st   [$24],x     13418  st([sysArgs+0],X)                    #31
              3035 0118  ld   [$18]       13419  ld([vAC])                            #32
              3036 a001  suba $01         13420  suba(1)                              #33
              3037 f053  beq  .sysSmx#36  13421  beq('.sysSmx#36')                    #34 return zero
              3038 c218  st   [$18]       13422  st([vAC])                            #35
              3039 00f7  ld   $f7         13423  ld(-18/2)                            #18 = 36 - 18
              303a 8115  adda [$15]       13424  adda([vTicks])                       #19
              303b c215  st   [$15]       13425  st([vTicks])                         #20
              303c 80f7  adda $f7         13426  adda(min(0,maxTicks -(30+18)/2))     #21
              303d f42d  bge  .sysSmx#24  13427  bge('.sysSmx#24')                    #22
              303e 0d00  ld   [y,x]       13428  ld([Y,X])                            #23
              303f 0116  ld   [$16]       13429  ld([vPC])                            #24
              3040 a002  suba $02         13430  suba(2)                              #25 restart
              3041 c216  st   [$16]       13431  st([vPC])                            #26
              3042 1401  ld   $01,y       13432  ld(hi(ctrlBits),Y)                   #27 restore and return
              3043 09f8  ld   [y,$f8]     13433  ld([Y,ctrlBits])                     #28
              3044 30fc  anda $fc,x       13434  anda(0xfc,X)                         #29
              3045 c500  ctrl x           13435  ctrl(X)                              #30
              3046 011d  ld   [$1d]       13436  ld([vTmp])                           #31
              3047 1403  ld   $03,y       13437  ld(hi('NEXTY'),Y)                    #32
              3048 e000  jmp  y,$00       13438  jmp(Y,'NEXTY')                       #33
              3049 00ee  ld   $ee         13439  ld(-36/2)                            #34
                                          13440
                                          13441  label('.sysSmx#27')
.sysSmx#27:   304a 0200  nop              13442  nop()                                #27 success
              304b 0200  nop              13443  nop()                                #28
              304c 0124  ld   [$24]       13444  ld([sysArgs+0])                      #29
                                          13445  label('.sysSmx#30')
.sysSmx#30:   304d c218  st   [$18]       13446  st([vAC])                            #30 success
              304e 0125  ld   [$25]       13447  ld([sysArgs+1])                      #31
              304f 0200  nop              13448  nop()                                #32
              3050 0200  nop              13449  nop()                                #33
              3051 0200  nop              13450  nop()                                #34
              3052 0200  nop              13451  nop()                                #35
                                          13452  label('.sysSmx#36')
.sysSmx#36:   3053 c219  st   [$19]       13453  st([vAC+1])                          #36
              3054 1401  ld   $01,y       13454  ld(hi(ctrlBits),Y)                   #37 restore and return
              3055 09f8  ld   [y,$f8]     13455  ld([Y,ctrlBits])                     #38
              3056 30fc  anda $fc,x       13456  anda(0xfc,X)                         #39
              3057 c500  ctrl x           13457  ctrl(X)                              #40
              3058 011d  ld   [$1d]       13458  ld([vTmp])                           #41
              3059 1403  ld   $03,y       13459  ld(hi('NEXTY'),Y)                    #42
              305a e000  jmp  y,$00       13460  jmp(Y,'NEXTY')                       #43
              305b 00e9  ld   $e9         13461  ld(-46/2)                            #44
                                          13462
                                          13463
              305c 0200  nop              13464  fillers(until=0x80)
              305d 0200  nop
              305e 0200  nop
              * 36 times
                                          13465
                                          13466  # SYS_LoaderSerialIN
                                          13467  # sysArgs[0]   (in), zero page address of odd videoY waits and first even videoY wait, 207 219 235 251 2
                                          13468  # sysArgs[1]   (in), sysArgs2 address, buffer that receives protocol, packet length and packet address
                                          13469  # sysArgs[2]   (out), protocol, filled in automatically by the Sys call
                                          13470  # sysArgs[3]   (out), packet length, filled in automatically by the Sys call
                                          13471  # sysArgs[4:5] (out), packet address, filled in automatically by the Sys call
                                          13472  # No error checks are performed, (apart from checking protocol)
                                          13473  # No checksums are performed
                                          13474  label('SYS_LoadSerialIn_vX_58')
SYS_LoadSerialIn_vX_58:
              3080 1124  ld   [$24],x     13475  ld([sysArgs+0],X)                   #15
              3081 0109  ld   [$09]       13476  ld([videoY])                        #16
              3082 6500  xora [x]         13477  xora([X])                           #17
              3083 ec95  bne  .sysLsi#20  13478  bne('.sysLsi#20')                   #18 wrong videoY so restart
              3084 0500  ld   [x]         13479  ld([X])                             #19
              3085 2001  anda $01         13480  anda(1)                             #20
              3086 f09b  beq  .sysLsi#23  13481  beq('.sysLsi#23')                   #21 even videoY
              3087 0124  ld   [$24]       13482  ld([sysArgs+0])                     #22
              3088 8001  adda $01         13483  adda(1)                             #23 odd videoY
              3089 c224  st   [$24]       13484  st([sysArgs+0])                     #24
              308a 1125  ld   [$25],x     13485  ld([sysArgs+1],X)                   #25 sysArgs address
              308b c700  st   in,[x]      13486  st(IN,[X])                          #26
              308c 0125  ld   [$25]       13487  ld([sysArgs+1])                     #27
              308d 8001  adda $01         13488  adda(1)                             #28
              308e c225  st   [$25]       13489  st([sysArgs+1])                     #29
              308f 0116  ld   [$16]       13490  ld([vPC])                           #30 restart
              3090 a002  suba $02         13491  suba(2)                             #31
              3091 c216  st   [$16]       13492  st([vPC])                           #32
              3092 1403  ld   $03,y       13493  ld(hi('REENTER'),Y)                 #33
              3093 e0cb  jmp  y,$cb       13494  jmp(Y,'REENTER')                    #34
              3094 00ed  ld   $ed         13495  ld(-38/2)                           #35
                                          13496
                                          13497  # wrong videoY
                                          13498  label('.sysLsi#20')
.sysLsi#20:   3095 0116  ld   [$16]       13499  ld([vPC])                           #20 restart
              3096 a002  suba $02         13500  suba(2)                             #21
              3097 c216  st   [$16]       13501  st([vPC])                           #22
              3098 1403  ld   $03,y       13502  ld(hi('REENTER'),Y)                 #23
              3099 e0cb  jmp  y,$cb       13503  jmp(Y,'REENTER')                    #24
              309a 00f2  ld   $f2         13504  ld(-28/2)                           #25
                                          13505
                                          13506  # even videoY
                                          13507  label('.sysLsi#23')
.sysLsi#23:   309b 0500  ld   [x]         13508  ld([X])                             #23
              309c 8004  adda $04         13509  adda(4)                             #24
              309d c600  st   [x]         13510  st([X])                             #25
              309e 0126  ld   [$26]       13511  ld([sysArgs+2])                     #26 protocol
              309f 604c  xora $4c         13512  xora(ord('L'))                      #27 check valid load
              30a0 ecb3  bne  .sysLsi#30  13513  bne('.sysLsi#30')                   #28 invalid packet
              30a1 0127  ld   [$27]       13514  ld([sysArgs+3])                     #29 check length
              30a2 f0d3  beq  .sysLsi#32  13515  beq('.sysLsi#32')                   #30 execute
              30a3 a001  suba $01         13516  suba(1)                             #31
              30a4 c227  st   [$27]       13517  st([sysArgs+3])                     #32 length--
              30a5 1128  ld   [$28],x     13518  ld([sysArgs+4],X)                   #33
              30a6 1529  ld   [$29],y     13519  ld([sysArgs+5],Y)                   #34
              30a7 cf00  st   in,[y,x]    13520  st(IN,[Y,X])                        #35
              30a8 0127  ld   [$27]       13521  ld([sysArgs+3])                     #36 check length
              30a9 f0c2  beq  .sysLsi#39  13522  beq('.sysLsi#39')                   #37 new packet
              30aa 0128  ld   [$28]       13523  ld([sysArgs+4])                     #38
              30ab 8001  adda $01         13524  adda(1)                             #39
              30ac c228  st   [$28]       13525  st([sysArgs+4])                     #40
              30ad 0116  ld   [$16]       13526  ld([vPC])                           #41 restart
              30ae a002  suba $02         13527  suba(2)                             #42
              30af c216  st   [$16]       13528  st([vPC])                           #43
              30b0 1403  ld   $03,y       13529  ld(hi('NEXTY'),Y)                   #44
              30b1 e000  jmp  y,$00       13530  jmp(Y,'NEXTY')                      #45
              30b2 00e8  ld   $e8         13531  ld(-48/2)                           #46
                                          13532
                                          13533  # invalid packet
                                          13534  label('.sysLsi#30')
.sysLsi#30:   30b3 0002  ld   $02         13535  ld(2)                               #30
              30b4 c2bc  st   [$bc]       13536  st([0xBC])                          #31 reset even videoY
              30b5 00b8  ld   $b8         13537  ld(0xB8)                            #32
              30b6 c224  st   [$24]       13538  st([sysArgs+0])                     #33 reset videoY address
              30b7 0026  ld   $26         13539  ld(0x26)                            #34
              30b8 c225  st   [$25]       13540  st([sysArgs+1])                     #35 reset sys args address
              30b9 0116  ld   [$16]       13541  ld([vPC])                           #36 restart
              30ba a002  suba $02         13542  suba(2)                             #37
              30bb c216  st   [$16]       13543  st([vPC])                           #38
              30bc 0000  ld   $00         13544  ld(0)                               #39
              30bd 1401  ld   $01,y       13545  ld(0x01,Y)                          #40
              30be ca01  st   [y,$01]     13546  st([Y,0x01])                        #41 reset screen vibration
              30bf 1403  ld   $03,y       13547  ld(hi('NEXTY'),Y)                   #42
              30c0 e000  jmp  y,$00       13548  jmp(Y,'NEXTY')                      #43
              30c1 00e9  ld   $e9         13549  ld(-46/2)                           #44
                                          13550
                                          13551  # new packet
                                          13552  label('.sysLsi#39')
.sysLsi#39:   30c2 0002  ld   $02         13553  ld(2)                               #39
              30c3 c2bc  st   [$bc]       13554  st([0xBC])                          #40 reset even videoY
              30c4 00b8  ld   $b8         13555  ld(0xB8)                            #41
              30c5 c224  st   [$24]       13556  st([sysArgs+0])                     #42 reset videoY address
              30c6 0026  ld   $26         13557  ld(0x26)                            #43
              30c7 c225  st   [$25]       13558  st([sysArgs+1])                     #44 reset sys args address
              30c8 0116  ld   [$16]       13559  ld([vPC])                           #45 restart
              30c9 a002  suba $02         13560  suba(2)                             #46
              30ca c216  st   [$16]       13561  st([vPC])                           #47
              30cb 0129  ld   [$29]       13562  ld([sysArgs+5])                     #48 hi address
              30cc 2001  anda $01         13563  anda(1)                             #49
              30cd 1401  ld   $01,y       13564  ld(0x01,Y)                          #50
              30ce 6901  xora [y,$01]     13565  xora([Y,0x01])                      #51
              30cf ca01  st   [y,$01]     13566  st([Y,0x01])                        #52 vibrate screen to show loading progress
              30d0 1403  ld   $03,y       13567  ld(hi('REENTER'),Y)                 #53
              30d1 e0cb  jmp  y,$cb       13568  jmp(Y,'REENTER')                    #54
              30d2 00e3  ld   $e3         13569  ld(-58/2)                           #55
                                          13570
                                          13571  # execute
                                          13572  label('.sysLsi#32')
.sysLsi#32:   30d3 0128  ld   [$28]       13573  ld([sysArgs+4])                     #32 low execute address
              30d4 c21a  st   [$1a]       13574  st([vLR])                           #33
              30d5 a002  suba $02         13575  suba(2)                             #34
              30d6 c216  st   [$16]       13576  st([vPC])                           #35
              30d7 0129  ld   [$29]       13577  ld([sysArgs+5])                     #36 high execute address
              30d8 c217  st   [$17]       13578  st([vPC+1])                         #37
              30d9 c21b  st   [$1b]       13579  st([vLR+1])                         #38
              30da 0000  ld   $00         13580  ld(0)                               #39
              30db 1401  ld   $01,y       13581  ld(0x01,Y)                          #40
              30dc ca01  st   [y,$01]     13582  st([Y,0x01])                        #41 reset screen vibration
              30dd 1403  ld   $03,y       13583  ld(hi('NEXTY'),Y)                   #42
              30de e000  jmp  y,$00       13584  jmp(Y,'NEXTY')                      #43
              30df 00e9  ld   $e9         13585  ld(-46/2)                           #44
                                          13586
                                          13587
              30e0 0200  nop              13588  fillers(until=0xff)
              30e1 0200  nop
              30e2 0200  nop
              * 31 times
              30ff 0200  nop              13589  align(0x100, size=0x100)
                                          13590
                                          13591  #-----------------------------------------------------------------------
                                          13592  #       More vCPU instruction implementations, (0x3100)
                                          13593  #-----------------------------------------------------------------------
                                          13594  #
                                          13595  # PEEKV+ implementation
                                          13596  label('peekv+#13')
peekv+#13:    3100 1200  ld   ac,x        13597  ld(AC,X)                        #13 var
              3101 00fa  ld   $fa         13598  ld(min(0,maxTicks-42/2))        #14
              3102 8115  adda [$15]       13599  adda([vTicks])                  #15
              3103 e81f  blt  .peekv+#18  13600  blt('.peekv+#18')               #16 not enough time left, so retry
              3104 1400  ld   $00,y       13601  ld(0,Y)                         #17
              3105 0500  ld   [x]         13602  ld([X])                         #18 low byte peek address
              3106 de00  st   [y,x++]     13603  st([Y,Xpp])                     #19 X++
              3107 c22a  st   [$2a]       13604  st([sysArgs+6])                 #20
              3108 0500  ld   [x]         13605  ld([X])                         #21 high byte peek address
              3109 c22b  st   [$2b]       13606  st([sysArgs+7])                 #22
              310a 1600  ld   ac,y        13607  ld(AC,Y)                        #23
              310b 112a  ld   [$2a],x     13608  ld([sysArgs+6],X)               #24
              310c 0d00  ld   [y,x]       13609  ld([Y,X])                       #25 peek byte
              310d c218  st   [$18]       13610  st([vAC])                       #26
              310e 0000  ld   $00         13611  ld(0)                           #27
              310f c219  st   [$19]       13612  st([vAC+1])                     #28
              3110 112a  ld   [$2a],x     13613  ld([sysArgs+6],X)               #29 address of low byte to be added
              3111 0500  ld   [x]         13614  ld([X])                         #30
              3112 8001  adda $01         13615  adda(1)                         #31
              3113 f018  beq  .peekv+#34  13616  beq('.peekv+#34')               #32 if low byte is 0x00
              3114 c600  st   [x]         13617  st([X])                         #33 inc low byte
              3115 1403  ld   $03,y       13618  ld(hi('NEXTY'),Y)               #34
              3116 e000  jmp  y,$00       13619  jmp(Y,'NEXTY')                  #35
              3117 00ed  ld   $ed         13620  ld(-38/2)                       #36
                                          13621
                                          13622  label('.peekv+#34')
.peekv+#34:   3118 112b  ld   [$2b],x     13623  ld([sysArgs+7],X)               #34 address of high byte to be added
              3119 0500  ld   [x]         13624  ld([X])                         #35
              311a 8001  adda $01         13625  adda(1)                         #36
              311b c600  st   [x]         13626  st([X])                         #37 inc high byte
              311c 1403  ld   $03,y       13627  ld(hi('NEXTY'),Y)               #38
              311d e000  jmp  y,$00       13628  jmp(Y,'NEXTY')                  #39
              311e 00eb  ld   $eb         13629  ld(-42/2)                       #40
                                          13630
                                          13631  label('.peekv+#18')
.peekv+#18:   311f 0022  ld   $22         13632  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              3120 c202  st   [$02]       13633  st([vCpuSelect])                #19 restore PREFX2 instruction page
              3121 9401  adda $01,y       13634  adda(1,Y)                       #20 retry instruction
              3122 e000  jmp  y,$00       13635  jmp(Y,'NEXTY')                  #21
              3123 00f4  ld   $f4         13636  ld(-24/2)                       #22
                                          13637
                                          13638
              3124 0200  nop              13639  fillers(until=0xff)
              3125 0200  nop
              3126 0200  nop
              * 219 times
              31ff 0200  nop              13640  align(0x100, size=0x100)
                                          13641
                                          13642  #-----------------------------------------------------------------------
                                          13643  #  More vCPU instruction implementations, (0x3200)
                                          13644  #-----------------------------------------------------------------------
                                          13645  #
                                          13646  # MOVL implementation, (lb3361)
                                          13647  label('movl#13')
movl#13:      3200 9001  adda $01,x       13648  adda(1, X)                      #13
              3201 00fb  ld   $fb         13649  ld(min(0,maxTicks-40/2))        #14
              3202 8115  adda [$15]       13650  adda([vTicks])                  #15
              3203 e81a  blt  movl#18     13651  blt('movl#18')                  #16
              3204 1400  ld   $00,y       13652  ld(0,Y)                         #17
              3205 0d00  ld   [y,x]       13653  ld([Y,X])                       #18
              3206 de00  st   [y,x++]     13654  st([Y,Xpp])                     #19
              3207 c2c8  st   [$c8]       13655  st([vTmpL])                     #20
              3208 0d00  ld   [y,x]       13656  ld([Y,X])                       #21
              3209 de00  st   [y,x++]     13657  st([Y,Xpp])                     #22
              320a c2c9  st   [$c9]       13658  st([vTmpL+1])                   #23
              320b 0d00  ld   [y,x]       13659  ld([Y,X])                       #24
              320c c2ca  st   [$ca]       13660  st([vTmpL+2])                   #25
              320d 112a  ld   [$2a],x     13661  ld([sysArgs+6],X)               #26
              320e 0d00  ld   [y,x]       13662  ld([Y,X])                       #27
              320f 112b  ld   [$2b],x     13663  ld([sysArgs+7],X)               #28
              3210 de00  st   [y,x++]     13664  st([Y,Xpp])                     #29
              3211 01c8  ld   [$c8]       13665  ld([vTmpL])                     #30
              3212 de00  st   [y,x++]     13666  st([Y,Xpp])                     #31
              3213 01c9  ld   [$c9]       13667  ld([vTmpL+1])                   #32
              3214 de00  st   [y,x++]     13668  st([Y,Xpp])                     #33
              3215 01ca  ld   [$ca]       13669  ld([vTmpL+2])                   #34
              3216 de00  st   [y,x++]     13670  st([Y,Xpp])                     #35
              3217 1403  ld   $03,y       13671  ld(hi('NEXTY'),Y)               #36
              3218 e000  jmp  y,$00       13672  jmp(Y,'NEXTY')                  #37
              3219 00ec  ld   $ec         13673  ld(-40/2)                       #38
                                          13674  label('movl#18')
movl#18:      321a 0021  ld   $21         13675  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              321b c202  st   [$02]       13676  st([vCpuSelect])                #19 restore PREFX3 instruction page
              321c 9401  adda $01,y       13677  adda(1,Y)                       #20 retry instruction
              321d e000  jmp  y,$00       13678  jmp(Y,'NEXTY')                  #21
              321e 00f4  ld   $f4         13679  ld(-24/2)                       #22
                                          13680
                                          13681
                                          13682  # MOVF implementation, (lb3361)
                                          13683  label('movf#13')
movf#13:      321f 9001  adda $01,x       13684  adda(1, X)                      #13
              3220 00f8  ld   $f8         13685  ld(min(0,maxTicks-46/2))        #14
              3221 8115  adda [$15]       13686  adda([vTicks])                  #15
              3222 e81a  blt  movl#18     13687  blt('movl#18')                  #16
              3223 1400  ld   $00,y       13688  ld(0,Y)                         #17
              3224 0d00  ld   [y,x]       13689  ld([Y,X])                       #18
              3225 de00  st   [y,x++]     13690  st([Y,Xpp])                     #19
              3226 c2c8  st   [$c8]       13691  st([vTmpL])                     #20
              3227 0d00  ld   [y,x]       13692  ld([Y,X])                       #21
              3228 de00  st   [y,x++]     13693  st([Y,Xpp])                     #22
              3229 c2c9  st   [$c9]       13694  st([vTmpL+1])                   #23
              322a 0d00  ld   [y,x]       13695  ld([Y,X])                       #24
              322b de00  st   [y,x++]     13696  st([Y,Xpp])                     #25
              322c c2ca  st   [$ca]       13697  st([vTmpL+2])                   #26
              322d 0d00  ld   [y,x]       13698  ld([Y,X])                       #27
              322e c2cb  st   [$cb]       13699  st([vTmpL+3])                   #28
              322f 112a  ld   [$2a],x     13700  ld([sysArgs+6],X)               #29
              3230 0d00  ld   [y,x]       13701  ld([Y,X])                       #30
              3231 112b  ld   [$2b],x     13702  ld([sysArgs+7],X)               #31
              3232 de00  st   [y,x++]     13703  st([Y,Xpp])                     #32
              3233 01c8  ld   [$c8]       13704  ld([vTmpL])                     #33
              3234 de00  st   [y,x++]     13705  st([Y,Xpp])                     #34
              3235 01c9  ld   [$c9]       13706  ld([vTmpL+1])                   #35
              3236 de00  st   [y,x++]     13707  st([Y,Xpp])                     #36
              3237 01ca  ld   [$ca]       13708  ld([vTmpL+2])                   #37
              3238 de00  st   [y,x++]     13709  st([Y,Xpp])                     #38
              3239 01cb  ld   [$cb]       13710  ld([vTmpL+3])                   #39
              323a de00  st   [y,x++]     13711  st([Y,Xpp])                     #40
              323b 0200  nop              13712  nop()                           #41
              323c 1403  ld   $03,y       13713  ld(hi('NEXTY'),Y)               #42
              323d e000  jmp  y,$00       13714  jmp(Y,'NEXTY')                  #43
              323e 00e9  ld   $e9         13715  ld(-46/2)                       #44
                                          13716
                                          13717
                                          13718  # ADDLP implementation, (lb3361)
                                          13719  label('addlp#13')
addlp#13:     323f 80ee  adda $ee         13720  adda(min(0,maxTicks-66/2))      #13
              3240 e87a  blt  addlp#16    13721  blt('addlp#16')                 #14
              3241 1519  ld   [$19],y     13722  ld([vAC+1],Y)                   #15
              3242 1118  ld   [$18],x     13723  ld([vAC],X)                     #16
              3243 01c4  ld   [$c4]       13724  ld([vLAC])                      #17 lac0
              3244 8d00  adda [y,x]       13725  adda([Y,X])                     #18 +arg0
              3245 c2c4  st   [$c4]       13726  st([vLAC])                      #19
              3246 e84a  blt  addlp#22    13727  bmi('addlp#22')                 #20
              3247 ad00  suba [y,x]       13728  suba([Y,X])                     #21 reconstruct lac0
              3248 fc4c  bra  addlp#24    13729  bra('addlp#24')                 #22
              3249 4d00  ora  [y,x]       13730  ora([Y,X])                      #23
                                          13731  label('addlp#22')
addlp#22:     324a 2d00  anda [y,x]       13732  anda([Y,X])                     #22
              324b 0200  nop              13733  nop()                           #23
                                          13734  label('addlp#24')
addlp#24:     324c 3080  anda $80,x       13735  anda(0x80,X)                    #24
              324d 0500  ld   [x]         13736  ld([X])                         #25
              324e c21d  st   [$1d]       13737  st([vTmp])                      #26 save carry
              324f 0118  ld   [$18]       13738  ld([vAC])                       #27
              3250 9001  adda $01,x       13739  adda(1,X)                       #28
              3251 01c5  ld   [$c5]       13740  ld([vLAC+1])                    #29 lac1
              3252 811d  adda [$1d]       13741  adda([vTmp])                    #30 +carry
              3253 8d00  adda [y,x]       13742  adda([Y,X])                     #31 +arg1
              3254 c2c5  st   [$c5]       13743  st([vLAC+1])                    #32
              3255 e85a  blt  addlp#35    13744  bmi('addlp#35')                 #33
              3256 ad00  suba [y,x]       13745  suba([Y,X])                     #34
              3257 a11d  suba [$1d]       13746  suba([vTmp])                    #35 reconstruct lac1
              3258 fc5d  bra  addlp#38    13747  bra('addlp#38')                 #36
              3259 4d00  ora  [y,x]       13748  ora([Y,X])                      #37
                                          13749  label('addlp#35')
addlp#35:     325a a11d  suba [$1d]       13750  suba([vTmp])                    #35
              325b 2d00  anda [y,x]       13751  anda([Y,X])                     #36
              325c 0200  nop              13752  nop()                           #37
                                          13753  label('addlp#38')
addlp#38:     325d 3080  anda $80,x       13754  anda(0x80,X)                    #38
              325e 0500  ld   [x]         13755  ld([X])                         #39
              325f c21d  st   [$1d]       13756  st([vTmp])                      #40
              3260 0118  ld   [$18]       13757  ld([vAC])                       #41
              3261 9002  adda $02,x       13758  adda(2,X)                       #42
              3262 01c6  ld   [$c6]       13759  ld([vLAC+2])                    #43 lac2
              3263 811d  adda [$1d]       13760  adda([vTmp])                    #44 +carry
              3264 8d00  adda [y,x]       13761  adda([Y,X])                     #45 +arg2
              3265 c2c6  st   [$c6]       13762  st([vLAC+2])                    #46
              3266 e86b  blt  addlp#49    13763  bmi('addlp#49')                 #47
              3267 ad00  suba [y,x]       13764  suba([Y,X])                     #48
              3268 a11d  suba [$1d]       13765  suba([vTmp])                    #49 reconstruct lac2
              3269 fc6e  bra  addlp#52    13766  bra('addlp#52')                 #50
              326a 4d00  ora  [y,x]       13767  ora([Y,X])                      #51
                                          13768  label('addlp#49')
addlp#49:     326b a11d  suba [$1d]       13769  suba([vTmp])                    #49
              326c 2d00  anda [y,x]       13770  anda([Y,X])                     #50
              326d 0200  nop              13771  nop()                           #51
                                          13772  label('addlp#52')
addlp#52:     326e 3080  anda $80,x       13773  anda(0x80,X)                    #52
              326f 0500  ld   [x]         13774  ld([X])                         #53
              3270 c21d  st   [$1d]       13775  st([vTmp])                      #54
              3271 0118  ld   [$18]       13776  ld([vAC])                       #55
              3272 9003  adda $03,x       13777  adda(3,X)                       #56
              3273 01c7  ld   [$c7]       13778  ld([vLAC+3])                    #57 lac3
              3274 811d  adda [$1d]       13779  adda([vTmp])                    #58 +carry
              3275 8d00  adda [y,x]       13780  adda([Y,X])                     #59 +arg3
              3276 c2c7  st   [$c7]       13781  st([vLAC+3])                    #60
              3277 1403  ld   $03,y       13782  ld(hi('REENTER'),Y)             #61
              3278 e0cb  jmp  y,$cb       13783  jmp(Y,'REENTER')                #62
              3279 00df  ld   $df         13784  ld(-66/2)                       #63
                                          13785  label('addlp#16')
addlp#16:     327a 0023  ld   $23         13786  ld(hi('PREFX1_PAGE'))           #16 restart
              327b c202  st   [$02]       13787  st([vCpuSelect])                #17
              327c 9401  adda $01,y       13788  adda(1,Y)                       #18
              327d e000  jmp  y,$00       13789  jmp(Y,'NEXTY')                  #19
              327e 00f5  ld   $f5         13790  ld(-22/2)                       #20
                                          13791
                                          13792
                                          13793  # SUBLP implementation, (lb3361)
                                          13794  label('sublp#13')
sublp#13:     327f 80f1  adda $f1         13795  adda(min(0,maxTicks-60/2))      #13
              3280 e87a  blt  addlp#16    13796  blt('addlp#16')                 #14
              3281 1519  ld   [$19],y     13797  ld([vAC+1],Y)                   #15
              3282 1118  ld   [$18],x     13798  ld([vAC],X)                     #16
              3283 01c4  ld   [$c4]       13799  ld([vLAC])                      #17 lac0
              3284 e889  blt  sublp#20    13800  bmi('sublp#20')                 #18
              3285 ad00  suba [y,x]       13801  suba([Y,X])                     #19 -arg0
              3286 c2c4  st   [$c4]       13802  st([vLAC])                      #20
              3287 fc8c  bra  sublp#23    13803  bra('sublp#23')                 #21
              3288 4d00  ora  [y,x]       13804  ora([Y,X])                      #22
                                          13805  label('sublp#20')
sublp#20:     3289 c2c4  st   [$c4]       13806  st([vLAC])                      #20
              328a 2d00  anda [y,x]       13807  anda([Y,X])                     #21
              328b 0200  nop              13808  nop()                           #22
                                          13809  label('sublp#23')
sublp#23:     328c 3080  anda $80,x       13810  anda(0x80,X)                    #23
              328d 0500  ld   [x]         13811  ld([X])                         #24
              328e c21d  st   [$1d]       13812  st([vTmp])                      #25 borrow
              328f 0118  ld   [$18]       13813  ld([vAC])                       #26
              3290 9001  adda $01,x       13814  adda(1,X)                       #27
              3291 01c5  ld   [$c5]       13815  ld([vLAC+1])                    #28 lac1
              3292 e898  blt  sublp#31    13816  bmi('sublp#31')                 #29
              3293 ad00  suba [y,x]       13817  suba([Y,X])                     #30 -arg1
              3294 a11d  suba [$1d]       13818  suba([vTmp])                    #31 -borrow
              3295 c2c5  st   [$c5]       13819  st([vLAC+1])                    #32
              3296 fc9c  bra  sublp#35    13820  bra('sublp#35')                 #33
              3297 4d00  ora  [y,x]       13821  ora([Y,X])                      #34
                                          13822  label('sublp#31')
sublp#31:     3298 a11d  suba [$1d]       13823  suba([vTmp])                    #31
              3299 c2c5  st   [$c5]       13824  st([vLAC+1])                    #32
              329a 2d00  anda [y,x]       13825  anda([Y,X])                     #33
              329b 0200  nop              13826  nop()                           #34
                                          13827  label('sublp#35')
sublp#35:     329c 3080  anda $80,x       13828  anda(0x80,X)                    #35
              329d 0500  ld   [x]         13829  ld([X])                         #36
              329e c21d  st   [$1d]       13830  st([vTmp])                      #37
              329f 0118  ld   [$18]       13831  ld([vAC])                       #38
              32a0 9002  adda $02,x       13832  adda(2,X)                       #39
              32a1 01c6  ld   [$c6]       13833  ld([vLAC+2])                    #40 lac2
              32a2 e8a8  blt  sublp#43    13834  bmi('sublp#43')                 #41
              32a3 ad00  suba [y,x]       13835  suba([Y,X])                     #42 -arg2
              32a4 a11d  suba [$1d]       13836  suba([vTmp])                    #43 -borrow
              32a5 c2c6  st   [$c6]       13837  st([vLAC+2])                    #44
              32a6 fcac  bra  sublp#47    13838  bra('sublp#47')                 #45
              32a7 4d00  ora  [y,x]       13839  ora([Y,X])                      #46
                                          13840  label('sublp#43')
sublp#43:     32a8 a11d  suba [$1d]       13841  suba([vTmp])                    #43
              32a9 c2c6  st   [$c6]       13842  st([vLAC+2])                    #44
              32aa 2d00  anda [y,x]       13843  anda([Y,X])                     #45
              32ab 0200  nop              13844  nop()                           #46
                                          13845  label('sublp#47')
sublp#47:     32ac 3080  anda $80,x       13846  anda(0x80,X)                    #47
              32ad 0500  ld   [x]         13847  ld([X])                         #48
              32ae c21d  st   [$1d]       13848  st([vTmp])                      #49
              32af 0118  ld   [$18]       13849  ld([vAC])                       #50
              32b0 9003  adda $03,x       13850  adda(3,X)                       #51
              32b1 01c7  ld   [$c7]       13851  ld([vLAC+3])                    #52 lac3
              32b2 ad00  suba [y,x]       13852  suba([Y,X])                     #53 -arg3
              32b3 a11d  suba [$1d]       13853  suba([vTmp])                    #54 -borrow
              32b4 c2c7  st   [$c7]       13854  st([vLAC+3])                    #55
              32b5 1403  ld   $03,y       13855  ld(hi('NEXTY'),Y)               #56
              32b6 e000  jmp  y,$00       13856  jmp(Y,'NEXTY')                  #57
              32b7 00e2  ld   $e2         13857  ld(-60/2)                       #58
                                          13858
                                          13859
                                          13860  # ANDLP implementation, (lb3361)
                                          13861  label('andlp#13')
andlp#13:     32b8 80fa  adda $fa         13862  adda(min(0,maxTicks-42/2))      #13
              32b9 e87a  blt  addlp#16    13863  blt('addlp#16')                 #14
              32ba 1519  ld   [$19],y     13864  ld([vAC+1],Y)                   #15
              32bb 1118  ld   [$18],x     13865  ld([vAC],X)                     #16
              32bc 0d00  ld   [y,x]       13866  ld([Y,X])                       #17
              32bd de00  st   [y,x++]     13867  st([Y,Xpp])                     #18
              32be 21c4  anda [$c4]       13868  anda([vLAC+0])                  #19
              32bf c2c4  st   [$c4]       13869  st([vLAC+0])                    #20
              32c0 0d00  ld   [y,x]       13870  ld([Y,X])                       #21
              32c1 de00  st   [y,x++]     13871  st([Y,Xpp])                     #22
              32c2 21c5  anda [$c5]       13872  anda([vLAC+1])                  #23
              32c3 c2c5  st   [$c5]       13873  st([vLAC+1])                    #24
              32c4 0d00  ld   [y,x]       13874  ld([Y,X])                       #25
              32c5 de00  st   [y,x++]     13875  st([Y,Xpp])                     #26
              32c6 21c6  anda [$c6]       13876  anda([vLAC+2])                  #27
              32c7 c2c6  st   [$c6]       13877  st([vLAC+2])                    #28
              32c8 0d00  ld   [y,x]       13878  ld([Y,X])                       #29
              32c9 21c7  anda [$c7]       13879  anda([vLAC+3])                  #30
              32ca 0200  nop              13880  nop()                           #31
                                          13881  label('andlp#32')
andlp#32:     32cb c2c7  st   [$c7]       13882  st([vLAC+3])                    #32
              32cc c219  st   [$19]       13883  st([vAC+1])                     #33
              32cd 01c4  ld   [$c4]       13884  ld([vLAC+0])                    #34
              32ce 41c5  ora  [$c5]       13885  ora([vLAC+1])                   #35
              32cf 41c6  ora  [$c6]       13886  ora([vLAC+2])                   #36
              32d0 c218  st   [$18]       13887  st([vAC])                       #37
              32d1 1403  ld   $03,y       13888  ld(hi('NEXTY'),Y)               #38
              32d2 e000  jmp  y,$00       13889  jmp(Y,'NEXTY')                  #39
              32d3 00eb  ld   $eb         13890  ld(-42/2)                       #40
                                          13891
                                          13892
                                          13893  # ORLP implementation, (lb3361)
                                          13894  label('orlp#13')
orlp#13:      32d4 80fa  adda $fa         13895  adda(min(0,maxTicks-42/2))      #13
              32d5 e87a  blt  addlp#16    13896  blt('addlp#16')                 #14
              32d6 1519  ld   [$19],y     13897  ld([vAC+1],Y)                   #15
              32d7 1118  ld   [$18],x     13898  ld([vAC],X)                     #16
              32d8 0d00  ld   [y,x]       13899  ld([Y,X])                       #17
              32d9 de00  st   [y,x++]     13900  st([Y,Xpp])                     #18
              32da 41c4  ora  [$c4]       13901  ora([vLAC+0])                   #19
              32db c2c4  st   [$c4]       13902  st([vLAC+0])                    #20
              32dc 0d00  ld   [y,x]       13903  ld([Y,X])                       #21
              32dd de00  st   [y,x++]     13904  st([Y,Xpp])                     #22
              32de 41c5  ora  [$c5]       13905  ora([vLAC+1])                   #23
              32df c2c5  st   [$c5]       13906  st([vLAC+1])                    #24
              32e0 0d00  ld   [y,x]       13907  ld([Y,X])                       #25
              32e1 de00  st   [y,x++]     13908  st([Y,Xpp])                     #26
              32e2 41c6  ora  [$c6]       13909  ora([vLAC+2])                   #27
              32e3 c2c6  st   [$c6]       13910  st([vLAC+2])                    #28
              32e4 0d00  ld   [y,x]       13911  ld([Y,X])                       #29
              32e5 fccb  bra  andlp#32    13912  bra('andlp#32')                 #30
              32e6 41c7  ora  [$c7]       13913  ora([vLAC+3])                   #31
                                          13914
                                          13915
                                          13916  # XORLP implementation, (lb3361)
                                          13917  label('xorlp#13')
xorlp#13:     32e7 80fa  adda $fa         13918  adda(min(0,maxTicks-42/2))      #13
              32e8 e87a  blt  addlp#16    13919  blt('addlp#16')                 #14
              32e9 1519  ld   [$19],y     13920  ld([vAC+1],Y)                   #15
              32ea 1118  ld   [$18],x     13921  ld([vAC],X)                     #16
              32eb 0d00  ld   [y,x]       13922  ld([Y,X])                       #17
              32ec de00  st   [y,x++]     13923  st([Y,Xpp])                     #18
              32ed 61c4  xora [$c4]       13924  xora([vLAC+0])                  #19
              32ee c2c4  st   [$c4]       13925  st([vLAC+0])                    #20
              32ef 0d00  ld   [y,x]       13926  ld([Y,X])                       #21
              32f0 de00  st   [y,x++]     13927  st([Y,Xpp])                     #22
              32f1 61c5  xora [$c5]       13928  xora([vLAC+1])                  #23
              32f2 c2c5  st   [$c5]       13929  st([vLAC+1])                    #24
              32f3 0d00  ld   [y,x]       13930  ld([Y,X])                       #25
              32f4 de00  st   [y,x++]     13931  st([Y,Xpp])                     #26
              32f5 61c6  xora [$c6]       13932  xora([vLAC+2])                  #27
              32f6 c2c6  st   [$c6]       13933  st([vLAC+2])                    #28
              32f7 0d00  ld   [y,x]       13934  ld([Y,X])                       #29
              32f8 fccb  bra  andlp#32    13935  bra('andlp#32')                 #30
              32f9 61c7  xora [$c7]       13936  xora([vLAC+3])                  #31
                                          13937
                                          13938
              32fa 0200  nop              13939  fillers(until=0xff)
              32fb 0200  nop
              32fc 0200  nop
              * 5 times
              32ff 0200  nop              13940  align(0x100, size=0x100)
                                          13941
                                          13942  #-----------------------------------------------------------------------
                                          13943  #  More vCPU instruction implementations, (0x3300)
                                          13944  #-----------------------------------------------------------------------
                                          13945  #
                                          13946  # NCOPY implementation, (lb3361)
                                          13947  label('ncopy#16')
ncopy#16:     3300 0022  ld   $22         13948  ld(hi('PREFX2_PAGE'))           #16 restart
              3301 c202  st   [$02]       13949  st([vCpuSelect])                #17
              3302 9401  adda $01,y       13950  adda(1,Y)                       #18
              3303 e000  jmp  y,$00       13951  jmp(Y,'NEXTY')                  #19
              3304 00f5  ld   $f5         13952  ld(-22/2)                       #20
                                          13953
                                          13954  label('ncopy#11')
ncopy#11:     3305 8115  adda [$15]       13955  adda([vTicks])                  #11
              3306 c215  st   [$15]       13956  st([vTicks])                    #12
                                          13957  label('ncopy#13')               #-- entry point
ncopy#13:     3307 80eb  adda $eb         13958  adda(min(0,maxTicks-(22+50)/2)) #13 time for longest path (72 cycles)
              3308 e800  blt  ncopy#16    13959  blt('ncopy#16')                 #14 > restart
              3309 0118  ld   [$18]       13960  ld([vAC])                       #15
              330a 20fc  anda $fc         13961  anda(0xfc)                      #16
              330b 60fc  xora $fc         13962  xora(0xfc)                      #17
              330c f04e  beq  ncopy#20    13963  beq('ncopy#20')                 #18 > slow because src crosses page boundary
              330d 01cc  ld   [$cc]       13964  ld([vDST])                      #19
              330e 20fc  anda $fc         13965  anda(0xfc)                      #20
              330f 60fc  xora $fc         13966  xora(0xfc)                      #21
              3310 f052  beq  ncopy#24    13967  beq('ncopy#24')                 #22 > slow because dst crosses page boundnary
              3311 012b  ld   [$2b]       13968  ld([sysArgs+7])                 #23
              3312 20fc  anda $fc         13969  anda(0xfc)                      #24
              3313 f03a  beq  ncopy#27    13970  beq('ncopy#27')                 #25 > slow because n<4 but no page crossings
              3314 1519  ld   [$19],y     13971  ld([vAC+1],Y)                   #26
              3315 1118  ld   [$18],x     13972  ld([vAC],X)                     #27 four bytes burst
              3316 0d00  ld   [y,x]       13973  ld([Y,X])                       #28
              3317 de00  st   [y,x++]     13974  st([Y,Xpp])                     #29
              3318 c2c8  st   [$c8]       13975  st([vTmpL])                     #30
              3319 0d00  ld   [y,x]       13976  ld([Y,X])                       #31
              331a de00  st   [y,x++]     13977  st([Y,Xpp])                     #32
              331b c2c9  st   [$c9]       13978  st([vTmpL+1])                   #33
              331c 0d00  ld   [y,x]       13979  ld([Y,X])                       #34
              331d de00  st   [y,x++]     13980  st([Y,Xpp])                     #35
              331e c2ca  st   [$ca]       13981  st([vTmpL+2])                   #36
              331f 0d00  ld   [y,x]       13982  ld([Y,X])                       #37
              3320 de00  st   [y,x++]     13983  st([Y,Xpp])                     #38
              3321 c2cb  st   [$cb]       13984  st([vTmpL+3])                   #39
              3322 15cd  ld   [$cd],y     13985  ld([vDST+1],Y)                  #40
              3323 11cc  ld   [$cc],x     13986  ld([vDST],X)                    #41
              3324 01c8  ld   [$c8]       13987  ld([vTmpL])                     #42
              3325 de00  st   [y,x++]     13988  st([Y,Xpp])                     #43
              3326 01c9  ld   [$c9]       13989  ld([vTmpL+1])                   #44
              3327 de00  st   [y,x++]     13990  st([Y,Xpp])                     #45
              3328 01ca  ld   [$ca]       13991  ld([vTmpL+2])                   #46
              3329 de00  st   [y,x++]     13992  st([Y,Xpp])                     #47
              332a 01cb  ld   [$cb]       13993  ld([vTmpL+3])                   #48
              332b de00  st   [y,x++]     13994  st([Y,Xpp])                     #40
              332c 0004  ld   $04         13995  ld(4)                           #50 increment (no page crossing)
              332d 8118  adda [$18]       13996  adda([vAC])                     #51
              332e c218  st   [$18]       13997  st([vAC])                       #52
              332f 0004  ld   $04         13998  ld(4)                           #53
              3330 81cc  adda [$cc]       13999  adda([vDST])                    #54
              3331 c2cc  st   [$cc]       14000  st([vDST])                      #55
              3332 012b  ld   [$2b]       14001  ld([sysArgs+7])                 #56
              3333 a004  suba $04         14002  suba(4)                         #57
              3334 c22b  st   [$2b]       14003  st([sysArgs+7])                 #58
              3335 ec05  bne  ncopy#11    14004  bne('ncopy#11')                 #59-50=9
              3336 00e7  ld   $e7         14005  ld(-50/2)                       #60-50=10
              3337 1403  ld   $03,y       14006  ld(hi('REENTER'),Y)             #61
              3338 e0cb  jmp  y,$cb       14007  jmp(Y,'REENTER')                #62
              3339 00df  ld   $df         14008  ld(-66/2)                       #63
                                          14009
                                          14010  label('ncopy#27')
ncopy#27:     333a 1118  ld   [$18],x     14011  ld([vAC],X)                     #27 one byte, no page crossings
              333b 0d00  ld   [y,x]       14012  ld([Y,X])                       #28
              333c 15cd  ld   [$cd],y     14013  ld([vDST+1],Y)                  #29
              333d 11cc  ld   [$cc],x     14014  ld([vDST],X)                    #30
              333e ce00  st   [y,x]       14015  st([Y,X])                       #31
              333f 0001  ld   $01         14016  ld(1)                           #32 increment (no page crossing)
              3340 8118  adda [$18]       14017  adda([vAC])                     #33
              3341 c218  st   [$18]       14018  st([vAC])                       #34
              3342 0001  ld   $01         14019  ld(1)                           #35
              3343 81cc  adda [$cc]       14020  adda([vDST])                    #36
              3344 c2cc  st   [$cc]       14021  st([vDST])                      #37
              3345 012b  ld   [$2b]       14022  ld([sysArgs+7])                 #38
              3346 a001  suba $01         14023  suba(1)                         #39
              3347 c22b  st   [$2b]       14024  st([sysArgs+7])                 #40
              3348 ec05  bne  ncopy#11    14025  bne('ncopy#11')                 #41-32=9
              3349 00f0  ld   $f0         14026  ld(-32/2)                       #42-32=10
              334a 0200  nop              14027  nop()                           #43
              334b 1403  ld   $03,y       14028  ld(hi('NEXTY'),Y)               #44
              334c e000  jmp  y,$00       14029  jmp(Y,'NEXTY')                  #45
              334d 00e8  ld   $e8         14030  ld(-48/2)                       #46
                                          14031
                                          14032  label('ncopy#20')
ncopy#20:     334e 0200  nop              14033  nop()                           #20
              334f 0200  nop              14034  nop()                           #21
              3350 0200  nop              14035  nop()                           #22
              3351 0200  nop              14036  nop()                           #23
                                          14037  label('ncopy#24')
ncopy#24:     3352 1519  ld   [$19],y     14038  ld([vAC+1],Y)                   #24
              3353 1118  ld   [$18],x     14039  ld([vAC],X)                     #25 one byte, possible page crossings
              3354 0d00  ld   [y,x]       14040  ld([Y,X])                       #26
              3355 15cd  ld   [$cd],y     14041  ld([vDST+1],Y)                  #27
              3356 11cc  ld   [$cc],x     14042  ld([vDST],X)                    #28
              3357 ce00  st   [y,x]       14043  st([Y,X])                       #29
              3358 0001  ld   $01         14044  ld(1)                           #30 increment vAC
              3359 8118  adda [$18]       14045  adda([vAC])                     #31
              335a c218  st   [$18]       14046  st([vAC])                       #32
              335b f05e  beq  $335e       14047  beq(pc()+3)                     #33
              335c fc5f  bra  $335f       14048  bra(pc()+3)                     #34
              335d 0000  ld   $00         14049  ld(0)                           #35
              335e 0001  ld   $01         14050  ld(1)                           #35!
              335f 8119  adda [$19]       14051  adda([vAC+1])                   #36
              3360 c219  st   [$19]       14052  st([vAC+1])                     #37
              3361 0001  ld   $01         14053  ld(1)                           #38 increment vDST
              3362 81cc  adda [$cc]       14054  adda([vDST])                    #39
              3363 c2cc  st   [$cc]       14055  st([vDST])                      #40
              3364 f067  beq  $3367       14056  beq(pc()+3)                     #41
              3365 fc68  bra  $3368       14057  bra(pc()+3)                     #42
              3366 0000  ld   $00         14058  ld(0)                           #43
              3367 0001  ld   $01         14059  ld(1)                           #43!
              3368 81cd  adda [$cd]       14060  adda([vDST+1])                  #44
              3369 c2cd  st   [$cd]       14061  st([vDST+1])                    #45
              336a 0200  nop              14062  nop()                           #46
              336b 012b  ld   [$2b]       14063  ld([sysArgs+7])                 #47 decrement sysArgs7
              336c a001  suba $01         14064  suba(1)                         #48
              336d c22b  st   [$2b]       14065  st([sysArgs+7])                 #49
              336e 1403  ld   $03,y       14066  ld(hi('NEXTY'),Y)               #50
              336f ec05  bne  ncopy#11    14067  bne('ncopy#11')                 #51-42=9
              3370 00eb  ld   $eb         14068  ld(-42/2)                       #52-42=10
              3371 e000  jmp  y,$00       14069  jmp(Y,'NEXTY')                  #53
              3372 00e4  ld   $e4         14070  ld(-56/2)                       #54
                                          14071
                                          14072
                                          14073  # STLU implementation, (lb3361)
                                          14074  label('stlu#13')
stlu#13:      3373 1400  ld   $00,y       14075  ld(0,Y)                         #13
              3374 0118  ld   [$18]       14076  ld([vAC])                       #14
              3375 de00  st   [y,x++]     14077  st([Y,Xpp])                     #15
              3376 0119  ld   [$19]       14078  ld([vAC+1])                     #16
              3377 de00  st   [y,x++]     14079  st([Y,Xpp])                     #17
              3378 0000  ld   $00         14080  ld(0)                           #18
              3379 de00  st   [y,x++]     14081  st([Y,Xpp])                     #19
              337a ce00  st   [y,x]       14082  st([Y,X])                       #20
              337b 1403  ld   $03,y       14083  ld(hi('REENTER'),Y)             #21
              337c e0cb  jmp  y,$cb       14084  jmp(Y,'REENTER')                #22
              337d 00f3  ld   $f3         14085  ld(-26/2)                       #23
                                          14086
                                          14087
                                          14088  # STLS implementation, (lb3361)
                                          14089  label('stls#13')
stls#13:      337e 1400  ld   $00,y       14090  ld(0,Y)                         #13
              337f 0118  ld   [$18]       14091  ld([vAC])                       #14
              3380 de00  st   [y,x++]     14092  st([Y,Xpp])                     #15
              3381 0119  ld   [$19]       14093  ld([vAC+1])                     #16
              3382 de00  st   [y,x++]     14094  st([Y,Xpp])                     #17
              3383 e886  blt  $3386       14095  bmi(pc()+3)                     #18
              3384 fc87  bra  $3387       14096  bra(pc()+3)                     #19
              3385 0000  ld   $00         14097  ld(0)                           #20
              3386 00ff  ld   $ff         14098  ld(0xff)                        #20
              3387 de00  st   [y,x++]     14099  st([Y,Xpp])                     #21
              3388 ce00  st   [y,x]       14100  st([Y,X])                       #22
              3389 1403  ld   $03,y       14101  ld(hi('REENTER'),Y)             #23
              338a e0cb  jmp  y,$cb       14102  jmp(Y,'REENTER')                #24
              338b 00f2  ld   $f2         14103  ld(-28/2)                       #25
                                          14104
                                          14105
                                          14106  # CMPLPU/CMPLPS implementation, (lb3361)
                                          14107  label('cmplp#16')
cmplp#16:     338c 0023  ld   $23         14108  ld(hi('PREFX1_PAGE'))           #16 restart
              338d c202  st   [$02]       14109  st([vCpuSelect])                #17
              338e 9401  adda $01,y       14110  adda(1,Y)                       #18
              338f e000  jmp  y,$00       14111  jmp(Y,'NEXTY')                  #19
              3390 00f5  ld   $f5         14112  ld(-22/2)                       #20
                                          14113
                                          14114  label('cmplp#lt')
cmplp#lt:     3391 00ff  ld   $ff         14115  ld(0xff)                        #vTmp-7
              3392 c218  st   [$18]       14116  st([vAC])                       #vTmp-6
              3393 c219  st   [$19]       14117  st([vAC+1])                     #vTmp-5
              3394 1403  ld   $03,y       14118  ld(hi('NEXTY'),Y)               #vTmp-4
              3395 e000  jmp  y,$00       14119  jmp(Y,'NEXTY')                  #vTmp-3
              3396 011d  ld   [$1d]       14120  ld([vTmp])                      #vTmp-2
                                          14121
                                          14122  label('cmplp#gt')
cmplp#gt:     3397 0001  ld   $01         14123  ld(1)                           #vTmp-8
              3398 c218  st   [$18]       14124  st([vAC])                       #vTmp-7
              3399 0000  ld   $00         14125  ld(0)                           #vTmp-6
              339a c219  st   [$19]       14126  st([vAC+1])                     #vTmp-5
              339b 1403  ld   $03,y       14127  ld(hi('NEXTY'),Y)               #vTmp-4
              339c e000  jmp  y,$00       14128  jmp(Y,'NEXTY')                  #vTmp-3
              339d 011d  ld   [$1d]       14129  ld([vTmp])                      #vTmp-2
                                          14130
                                          14131  label('cmplpu#13')
cmplpu#13:    339e 80eb  adda $eb         14132  adda(min(0,maxTicks-72/2))      #13
              339f e88c  blt  cmplp#16    14133  blt('cmplp#16')                 #14
              33a0 1519  ld   [$19],y     14134  ld([vAC+1],Y)                   #15
                                          14135  # byte3
              33a1 0118  ld   [$18]       14136  ld([vAC])                       #16
              33a2 9003  adda $03,x       14137  adda(3,X)                       #17
              33a3 00ee  ld   $ee         14138  ld(-36/2)                       #18
              33a4 c21d  st   [$1d]       14139  st([vTmp])                      #19
              33a5 01c7  ld   [$c7]       14140  ld([vLAC+3])                    #20
              33a6 6d00  xora [y,x]       14141  xora([Y,X])                     #21
              33a7 e8ab  blt  $33ab       14142  blt(pc()+4)                     #22
              33a8 01c7  ld   [$c7]       14143  ld([vLAC+3])                    #23
              33a9 fcad  bra  cmplp#26    14144  bra('cmplp#26')                 #24
              33aa ad00  suba [y,x]       14145  suba([Y,X])                     #25
              33ab 6080  xora $80         14146  xora(0x80)                      #24
              33ac 4001  ora  $01         14147  ora(1)                          #25
                                          14148  label('cmplp#26')
cmplp#26:     33ad e497  bgt  cmplp#gt    14149  bgt('cmplp#gt')                 #26
              33ae e891  blt  cmplp#lt    14150  blt('cmplp#lt')                 #27
                                          14151  # byte2
              33af 0118  ld   [$18]       14152  ld([vAC])                       #28
              33b0 9002  adda $02,x       14153  adda(2,X)                       #29
              33b1 00e8  ld   $e8         14154  ld(-48/2)                       #30
              33b2 c21d  st   [$1d]       14155  st([vTmp])                      #31
              33b3 01c6  ld   [$c6]       14156  ld([vLAC+2])                    #32
              33b4 6d00  xora [y,x]       14157  xora([Y,X])                     #33
              33b5 e8b9  blt  $33b9       14158  blt(pc()+4)                     #34
              33b6 01c6  ld   [$c6]       14159  ld([vLAC+2])                    #35
              33b7 fcbb  bra  $33bb       14160  bra(pc()+4)                     #36
              33b8 ad00  suba [y,x]       14161  suba([Y,X])                     #37
              33b9 6080  xora $80         14162  xora(0x80)                      #36
              33ba 4001  ora  $01         14163  ora(1)                          #37
              33bb e497  bgt  cmplp#gt    14164  bgt('cmplp#gt')                 #38
              33bc e891  blt  cmplp#lt    14165  blt('cmplp#lt')                 #39
                                          14166  # byte1
              33bd 0118  ld   [$18]       14167  ld([vAC])                       #40
              33be 9001  adda $01,x       14168  adda(1,X)                       #41
              33bf 00e2  ld   $e2         14169  ld(-60/2)                       #42
              33c0 c21d  st   [$1d]       14170  st([vTmp])                      #43
              33c1 01c5  ld   [$c5]       14171  ld([vLAC+1])                    #44
              33c2 6d00  xora [y,x]       14172  xora([Y,X])                     #45
              33c3 e8c7  blt  $33c7       14173  blt(pc()+4)                     #46
              33c4 01c5  ld   [$c5]       14174  ld([vLAC+1])                    #47
              33c5 fcc9  bra  $33c9       14175  bra(pc()+4)                     #48
              33c6 ad00  suba [y,x]       14176  suba([Y,X])                     #49
              33c7 6080  xora $80         14177  xora(0x80)                      #48
              33c8 4001  ora  $01         14178  ora(1)                          #49
              33c9 e497  bgt  cmplp#gt    14179  bgt('cmplp#gt')                 #50
              33ca e891  blt  cmplp#lt    14180  blt('cmplp#lt')                 #51
                                          14181  # byte0
              33cb 0118  ld   [$18]       14182  ld([vAC])                       #52
              33cc 9000  adda $00,x       14183  adda(0,X)                       #53
              33cd 00dc  ld   $dc         14184  ld(-72/2)                       #54
              33ce c21d  st   [$1d]       14185  st([vTmp])                      #55
              33cf 01c4  ld   [$c4]       14186  ld([vLAC])                      #56
              33d0 6d00  xora [y,x]       14187  xora([Y,X])                     #57
              33d1 e8d5  blt  $33d5       14188  blt(pc()+4)                     #58
              33d2 01c4  ld   [$c4]       14189  ld([vLAC])                      #59
              33d3 fcd7  bra  $33d7       14190  bra(pc()+4)                     #60
              33d4 ad00  suba [y,x]       14191  suba([Y,X])                     #61
              33d5 6080  xora $80         14192  xora(0x80)                      #60
              33d6 4001  ora  $01         14193  ora(1)                          #61
              33d7 e497  bgt  cmplp#gt    14194  bgt('cmplp#gt')                 #62
              33d8 e891  blt  cmplp#lt    14195  blt('cmplp#lt')                 #63
              33d9 c219  st   [$19]       14196  st([vAC+1])                     #64
              33da c218  st   [$18]       14197  st([vAC])                       #65
              33db 1403  ld   $03,y       14198  ld(hi('NEXTY'),Y)               #66
              33dc e000  jmp  y,$00       14199  jmp(Y,'NEXTY')                  #67
              33dd 00dd  ld   $dd         14200  ld(-70/2)                       #68
                                          14201
                                          14202  label('cmplps#13')
cmplps#13:    33de 80eb  adda $eb         14203  adda(min(0,maxTicks-72/2))      #13
              33df e88c  blt  cmplp#16    14204  blt('cmplp#16')                 #14
              33e0 1519  ld   [$19],y     14205  ld([vAC+1],Y)                   #15
                                          14206  #byte3
              33e1 0118  ld   [$18]       14207  ld([vAC])                       #16
              33e2 9003  adda $03,x       14208  adda(3,X)                       #17
              33e3 00ee  ld   $ee         14209  ld(-36/2)                       #18
              33e4 c21d  st   [$1d]       14210  st([vTmp])                      #19
              33e5 01c7  ld   [$c7]       14211  ld([vLAC+3])                    #20
              33e6 6d00  xora [y,x]       14212  xora([Y,X])                     #21
              33e7 e8eb  blt  $33eb       14213  blt(pc()+4)                     #22
              33e8 01c7  ld   [$c7]       14214  ld([vLAC+3])                    #23
              33e9 fcad  bra  cmplp#26    14215  bra('cmplp#26')                 #24
              33ea ad00  suba [y,x]       14216  suba([Y,X])                     #25
              33eb 0200  nop              14217  nop()                           #24
              33ec 4001  ora  $01         14218  ora(1)                          #25
              33ed e497  bgt  cmplp#gt    14219  bgt('cmplp#gt')                 #26
              33ee e891  blt  cmplp#lt    14220  blt('cmplp#lt')                 #27
                                          14221  #dummy                          #28
                                          14222
                                          14223
                                          14224  # NOTL implementation, (lb3361)
                                          14225  label('notl#13')
notl#13:      33ef 1400  ld   $00,y       14226  ld(0,Y)                         #13
              33f0 0d00  ld   [y,x]       14227  ld([Y,X])                       #14
              33f1 60ff  xora $ff         14228  xora(0xff)                      #15
              33f2 de00  st   [y,x++]     14229  st([Y,Xpp])                     #16
              33f3 0d00  ld   [y,x]       14230  ld([Y,X])                       #17
              33f4 60ff  xora $ff         14231  xora(0xff)                      #18
              33f5 de00  st   [y,x++]     14232  st([Y,Xpp])                     #19
              33f6 0d00  ld   [y,x]       14233  ld([Y,X])                       #20
              33f7 60ff  xora $ff         14234  xora(0xff)                      #21
              33f8 de00  st   [y,x++]     14235  st([Y,Xpp])                     #22
              33f9 0d00  ld   [y,x]       14236  ld([Y,X])                       #23
              33fa 60ff  xora $ff         14237  xora(0xff)                      #24
              33fb de00  st   [y,x++]     14238  st([Y,Xpp])                     #25
              33fc 1403  ld   $03,y       14239  ld(hi('NEXTY'),Y)               #26
              33fd e000  jmp  y,$00       14240  jmp(Y,'NEXTY')                  #27
              33fe 00f1  ld   $f1         14241  ld(-30/2)                       #28
                                          14242
                                          14243
                                          14244  fillers(until=0xff)
              33ff 0200  nop              14245  align(0x100, size=0x100)
                                          14246
                                          14247  #-----------------------------------------------------------------------
                                          14248  #  More vCPU instruction implementations, (0x3400)
                                          14249  #-----------------------------------------------------------------------
                                          14250  #
                                          14251  # NROL implementation, (lb3361)
                                          14252  label('nrol#13')
nrol#13:      3400 112b  ld   [$2b],x     14253  ld([sysArgs+7],X)               #13
              3401 fc05  bra  nrol#16     14254  bra('nrol#16')                  #14
              3402 0115  ld   [$15]       14255  ld([vTicks])                    #15
                                          14256
                                          14257  label('nrol#14')
nrol#14:      3403 8115  adda [$15]       14258  adda([vTicks])                  #14
              3404 c215  st   [$15]       14259  st([vTicks])                    #15
                                          14260  label('nrol#16')
nrol#16:      3405 80fa  adda $fa         14261  adda(min(0,maxTicks-(24+18)/2)) #16
              3406 f40c  bge  nrol#19     14262  bge('nrol#19')                  #17 -> enough time
              3407 0021  ld   $21         14263  ld(hi('PREFX3_PAGE'))           #18 restart
              3408 c202  st   [$02]       14264  st([vCpuSelect])                #19
              3409 9401  adda $01,y       14265  adda(1,Y)                       #20
              340a e000  jmp  y,$00       14266  jmp(Y,'NEXTY')                  #21
              340b 00f4  ld   $f4         14267  ld(-24/2)                       #22
                                          14268
                                          14269  label('nrol#19')
nrol#19:      340c 0119  ld   [$19]       14270  ld([vAC+1])                     #19 enough time
              340d e812  blt  nrol#22     14271  blt('nrol#22')                  #20
              340e 0500  ld   [x]         14272  ld([X])                         #21
              340f c219  st   [$19]       14273  st([vAC+1])                     #22
              3410 fc15  bra  nrol#25     14274  bra('nrol#25')                  #23
              3411 8200  adda ac          14275  adda(AC)                        #24
                                          14276  label('nrol#22')
nrol#22:      3412 c219  st   [$19]       14277  st([vAC+1])                     #22
              3413 8200  adda ac          14278  adda(AC)                        #23
              3414 8001  adda $01         14279  adda(1)                         #24
                                          14280  label('nrol#25')
nrol#25:      3415 c600  st   [x]         14281  st([X])                         #25
              3416 0001  ld   $01         14282  ld(1)                           #26
              3417 812b  adda [$2b]       14283  adda([sysArgs+7])               #27
              3418 d22b  st   [$2b],x     14284  st([sysArgs+7],X)               #28
              3419 612a  xora [$2a]       14285  xora([sysArgs+6])               #29
              341a ec03  bne  nrol#14     14286  bne('nrol#14')                  #30-18=12
              341b 00f7  ld   $f7         14287  ld(-18/2)                       #31-18=13
              341c 1403  ld   $03,y       14288  ld(hi('NEXTY'),Y)               #32
              341d e000  jmp  y,$00       14289  jmp(Y,'NEXTY')                  #33
              341e 00ee  ld   $ee         14290  ld(-36/2)                       #34
                                          14291
                                          14292
                                          14293  # NROR implementation, (lb3361)
                                          14294  label('nror#20')
nror#20:      341f 0021  ld   $21         14295  ld(hi('PREFX3_PAGE'))           #20 restart
              3420 c202  st   [$02]       14296  st([vCpuSelect])                #21
              3421 9401  adda $01,y       14297  adda(1,Y)                       #22
              3422 e000  jmp  y,$00       14298  jmp(Y,'NEXTY')                  #23
              3423 00f3  ld   $f3         14299  ld(-26/2)                       #24
                                          14300
                                          14301  label('nror#13')
nror#13:      3424 00e0  ld   $e0         14302  ld('nror#35')                   #13
              3425 c21d  st   [$1d]       14303  st([vTmp])                      #14
              3426 0115  ld   [$15]       14304  ld([vTicks])                    #15
                                          14305  label('nror#16')
nror#16:      3427 1405  ld   $05,y       14306  ld(hi('shiftTable'),Y)          #16
              3428 80f3  adda $f3         14307  adda(min(0,maxTicks-(26+30)/2)) #17
              3429 e81f  blt  nror#20     14308  blt('nror#20')                  #18
              342a 012b  ld   [$2b]       14309  ld([sysArgs+7])                 #19
              342b a001  suba $01         14310  suba(1)                         #20
              342c d22b  st   [$2b],x     14311  st([sysArgs+7],X)               #21
              342d 0119  ld   [$19]       14312  ld([vAC+1])                     #22
              342e 2080  anda $80         14313  anda(0x80)                      #23
              342f c218  st   [$18]       14314  st([vAC])                       #24
              3430 0500  ld   [x]         14315  ld([X])                         #25
              3431 20fe  anda $fe         14316  anda(0xfe)                      #26
              3432 a500  suba [x]         14317  suba([X])                       #27
              3433 c219  st   [$19]       14318  st([vAC+1])                     #28
              3434 8500  adda [x]         14319  adda([X])                       #29
              3435 e200  jmp  y,ac        14320  jmp(Y,AC)                       #30
              3436 fcff  bra  $ff         14321  bra(255)                        #31 continues in page 0x600
                                          14322
                                          14323
              3437 0200  nop              14324  fillers(until=0xff)
              3438 0200  nop
              3439 0200  nop
              * 200 times
              34ff 0200  nop              14325  align(0x100, size=0x100)
                                          14326
                                          14327  #-----------------------------------------------------------------------
                                          14328  #  More vCPU instruction implementations, (0x3500)
                                          14329  #-----------------------------------------------------------------------
                                          14330  #
                                          14331
                                          14332
              3500 0200  nop              14333  fillers(until=0xff)
              3501 0200  nop
              3502 0200  nop
              * 255 times
              35ff 0200  nop              14334  align(0x100, size=0x100)
                                          14335
                                          14336  #-----------------------------------------------------------------------
                                          14337  #  More vCPU instruction implementations, (0x3600)
                                          14338  #-----------------------------------------------------------------------
                                          14339  #
                                          14340
                                          14341
              3600 0200  nop              14342  fillers(until=0xff)
              3601 0200  nop
              3602 0200  nop
              * 255 times
              36ff 0200  nop              14343  align(0x100, size=0x100)
                                          14344
                                          14345  #-----------------------------------------------------------------------
                                          14346  #  More vCPU instruction implementations, (0x3700)
                                          14347  #-----------------------------------------------------------------------
                                          14348  #
                                          14349
                                          14350
              3700 0200  nop              14351  fillers(until=0xff)
              3701 0200  nop
              3702 0200  nop
              * 255 times
              37ff 0200  nop              14352  align(0x100, size=0x100)
                                          14353
                                          14354  #-----------------------------------------------------------------------
                                          14355  #  More vCPU instruction implementations, (0x3800)
                                          14356  #-----------------------------------------------------------------------
                                          14357  #
                                          14358
                                          14359
              3800 0200  nop              14360  fillers(until=0xff)
              3801 0200  nop
              3802 0200  nop
              * 255 times
              38ff 0200  nop              14361  align(0x100, size=0x100)
                                          14362
                                          14363  #-----------------------------------------------------------------------
                                          14364  #  More vCPU instruction implementations, (0x3900)
                                          14365  #-----------------------------------------------------------------------
                                          14366  #
                                          14367
                                          14368
              3900 0200  nop              14369  fillers(until=0xff)
              3901 0200  nop
              3902 0200  nop
              * 255 times
              39ff 0200  nop              14370  align(0x100, size=0x100)
                                          14371
                                          14372  #-----------------------------------------------------------------------
                                          14373  #  More vCPU instruction implementations, (0x3A00)
                                          14374  #-----------------------------------------------------------------------
                                          14375  #
                                          14376
                                          14377
              3a00 0200  nop              14378  fillers(until=0xff)
              3a01 0200  nop
              3a02 0200  nop
              * 255 times
              3aff 0200  nop              14379  align(0x100, size=0x100)
                                          14380
                                          14381  #-----------------------------------------------------------------------
                                          14382  #  More vCPU instruction implementations, (0x3B00)
                                          14383  #-----------------------------------------------------------------------
                                          14384  #
                                          14385
                                          14386
              3b00 0200  nop              14387  fillers(until=0xff)
              3b01 0200  nop
              3b02 0200  nop
              * 255 times
              3bff 0200  nop              14388  align(0x100, size=0x100)
                                          14389
                                          14390  #-----------------------------------------------------------------------
                                          14391  #  More vCPU instruction implementations, (0x3C00)
                                          14392  #-----------------------------------------------------------------------
                                          14393  #
                                          14394
                                          14395
              3c00 0200  nop              14396  fillers(until=0xff)
              3c01 0200  nop
              3c02 0200  nop
              * 255 times
              3cff 0200  nop              14397  align(0x100, size=0x100)
                                          14398
                                          14399  #-----------------------------------------------------------------------
                                          14400  #  More vCPU instruction implementations, (0x3D00)
                                          14401  #-----------------------------------------------------------------------
                                          14402  #
                                          14403
                                          14404
              3d00 0200  nop              14405  fillers(until=0xff)
              3d01 0200  nop
              3d02 0200  nop
              * 255 times
              3dff 0200  nop              14406  align(0x100, size=0x100)
                                          14407
                                          14408  #-----------------------------------------------------------------------
                                          14409  #  More vCPU instruction implementations, (0x3E00)
                                          14410  #-----------------------------------------------------------------------
                                          14411  #
                                          14412
                                          14413
              3e00 0200  nop              14414  fillers(until=0xff)
              3e01 0200  nop
              3e02 0200  nop
              * 255 times
              3eff 0200  nop              14415  align(0x100, size=0x100)
                                          14416
                                          14417  #-----------------------------------------------------------------------
                                          14418  #  More vCPU instruction implementations, (0x3F00)
                                          14419  #-----------------------------------------------------------------------
                                          14420  #
                                          14421
                                          14422
              3f00 0200  nop              14423  fillers(until=0xff)
              3f01 0200  nop
              3f02 0200  nop
              * 255 times
              3fff 0200  nop              14424  align(0x100, size=0x100)
                                          14425
                                          14426  #-----------------------------------------------------------------------
                                          14427  #
                                          14428  #  End of core
                                          14429  #
                                          14430  #-----------------------------------------------------------------------
                                          14431  disableListing()
                                          ;+-----------------------------------+
                                          ;| SYS_Racer_v1.py                   |
                                          ;+-----------------------------------+
SYS_Racer_v1:
SYS_RacerUpdateVideoX_40:
              4000 1126  ld   [$26],x
              4001 1527  ld   [$27],y
              4002 0d00  ld   [y,x]
              4003 c21d  st   [$1d]
              4004 a128  suba [$28]
              4005 1124  ld   [$24],x
              4006 1525  ld   [$25],y
              4007 ce00  st   [y,x]
              4008 0124  ld   [$24]
              4009 a004  suba $04
              400a c224  st   [$24]
              400b 011d  ld   [$1d]
              400c c228  st   [$28]
              400d 0126  ld   [$26]
              400e 8001  adda $01
              400f c226  st   [$26]
              4010 ec14  bne  .sysRacer0
              4011 0116  ld   [$16]
              4012 fc16  bra  .sysRacer1
              4013 0200  nop
.sysRacer0:   4014 a002  suba $02
              4015 c216  st   [$16]
.sysRacer1:   4016 1403  ld   $03,y
              4017 e0cb  jmp  y,$cb
              4018 00ec  ld   $ec
SYS_RacerUpdateVideoY_40:
              4019 0127  ld   [$27]
              401a 2008  anda $08
              401b ec1e  bne  $401e
              401c fc1f  bra  $401f
              401d 0000  ld   $00
              401e 0001  ld   $01
              401f c21d  st   [$1d]
              4020 1525  ld   [$25],y
              4021 0124  ld   [$24]
              4022 8002  adda $02
              4023 d224  st   [$24],x
              4024 60ee  xora $ee
              4025 c218  st   [$18]
              4026 c219  st   [$19]
              4027 0126  ld   [$26]
              4028 20fe  anda $fe
              4029 811d  adda [$1d]
              402a ce00  st   [y,x]
              402b 0126  ld   [$26]
              402c 8001  adda $01
              402d c226  st   [$26]
              402e 1403  ld   $03,y
              402f e0cb  jmp  y,$cb
              4030 00ec  ld   $ec         ;End of SYS_Racer_v1.py, size 49
                                          ;+-----------------------------------+
                                          ;| Apps/Racer/Horizon-256x16.rgb     |
                                          ;+-----------------------------------+
              4031 dc00  st   $00,[y,x++] ;'\x00'
              4032 dc00  st   $00,[y,x++] ;'\x00'
              4033 dc00  st   $00,[y,x++] ;'\x00'
              4034 dc00  st   $00,[y,x++] ;'\x00'
              4035 dc00  st   $00,[y,x++] ;'\x00'
              4036 dc00  st   $00,[y,x++] ;'\x00'
              4037 dc00  st   $00,[y,x++] ;'\x00'
              4038 dc00  st   $00,[y,x++] ;'\x00'
              4039 0000  ld   $00
              403a c218  st   [$18]
              403b 0000  ld   $00
              403c 14dd  ld   $dd,y
              403d e06f  jmp  y,$6f
              403e c219  st   [$19]
zippedRacerHorizon:
              403f 0041  ld   $41
              4040 0000  ld   $00
              4041 00c3  ld   $c3
              4042 0030  ld   $30
              4043 000c  ld   $0c
              4044 00c3  ld   $c3
              4045 0030  ld   $30
              4046 000c  ld   $0c
              4047 00c3  ld   $c3
              4048 0030  ld   $30
              4049 000c  ld   $0c
              404a 00c3  ld   $c3
              404b 0030  ld   $30
              404c 000c  ld   $0c
              404d 00c3  ld   $c3
              404e 0030  ld   $30
              404f 000c  ld   $0c
              4050 00c3  ld   $c3
              4051 0030  ld   $30
              4052 000c  ld   $0c
              4053 00c3  ld   $c3
              4054 0030  ld   $30
              4055 000c  ld   $0c
              4056 00c3  ld   $c3
              4057 0000  ld   $00
              4058 000c  ld   $0c
              4059 00c3  ld   $c3
              405a 0030  ld   $30
              405b 000c  ld   $0c
              405c 00c3  ld   $c3
              405d 0030  ld   $30
              405e 00fc  ld   $fc
              405f 0002  ld   $02
              4060 0030  ld   $30
              4061 000c  ld   $0c
              4062 00c3  ld   $c3
              4063 0030  ld   $30
              4064 000c  ld   $0c
              4065 00c3  ld   $c3
              4066 0030  ld   $30
              4067 000c  ld   $0c
              4068 00c3  ld   $c3
              4069 0030  ld   $30
              406a 000c  ld   $0c
              406b 00c3  ld   $c3
              406c 0030  ld   $30
              406d 000c  ld   $0c
              406e 00c3  ld   $c3
              406f 0030  ld   $30
              4070 000c  ld   $0c
              4071 00c3  ld   $c3
              4072 0030  ld   $30
              4073 000c  ld   $0c
              4074 00c3  ld   $c3
              4075 0030  ld   $30
              4076 000c  ld   $0c
              4077 00c3  ld   $c3
              4078 0030  ld   $30
              4079 000c  ld   $0c
              407a 00c3  ld   $c3
              407b 0030  ld   $30
              407c 000c  ld   $0c
              407d 00c3  ld   $c3
              407e 0030  ld   $30
              407f 000c  ld   $0c
              4080 00c3  ld   $c3
              4081 0030  ld   $30
              4082 000c  ld   $0c
              4083 00c3  ld   $c3
              4084 0030  ld   $30
              4085 000c  ld   $0c
              4086 00c3  ld   $c3
              4087 0030  ld   $30
              4088 000c  ld   $0c
              4089 00c3  ld   $c3
              408a 0030  ld   $30
              408b 000c  ld   $0c
              408c 00c3  ld   $c3
              408d 0030  ld   $30
              408e 000c  ld   $0c
              408f 00c3  ld   $c3
              4090 0030  ld   $30
              4091 000c  ld   $0c
              4092 00c3  ld   $c3
              4093 0013  ld   $13
              4094 000c  ld   $0c
              4095 00c3  ld   $c3
              4096 0030  ld   $30
              4097 000c  ld   $0c
              4098 00c3  ld   $c3
              4099 002a  ld   $2a
              409a 000c  ld   $0c
              409b 00c3  ld   $c3
              409c 0030  ld   $30
              409d 000c  ld   $0c
              409e 00c3  ld   $c3
              409f 0030  ld   $30
              40a0 000c  ld   $0c
              40a1 00c3  ld   $c3
              40a2 0030  ld   $30
              40a3 000c  ld   $0c
              40a4 00c3  ld   $c3
              40a5 0030  ld   $30
              40a6 000c  ld   $0c
              40a7 00c3  ld   $c3
              40a8 0030  ld   $30
              40a9 000c  ld   $0c
              40aa 00c3  ld   $c3
              40ab 0030  ld   $30
              40ac 000c  ld   $0c
              40ad 00c3  ld   $c3
              40ae 0030  ld   $30
              40af 000c  ld   $0c
              40b0 00c3  ld   $c3
              40b1 0030  ld   $30
              40b2 000c  ld   $0c
              40b3 00c3  ld   $c3
              40b4 0030  ld   $30
              40b5 000c  ld   $0c
              40b6 00c3  ld   $c3
              40b7 0030  ld   $30
              40b8 000c  ld   $0c
              40b9 00c3  ld   $c3
              40ba 0030  ld   $30
              40bb 000c  ld   $0c
              40bc 00c3  ld   $c3
              40bd 0030  ld   $30
              40be 000c  ld   $0c
              40bf 00ab  ld   $ab
              40c0 002a  ld   $2a
              40c1 000c  ld   $0c
              40c2 00c3  ld   $c3
              40c3 0030  ld   $30
              40c4 000c  ld   $0c
              40c5 00c3  ld   $c3
              40c6 0030  ld   $30
              40c7 000c  ld   $0c
              40c8 00c3  ld   $c3
              40c9 0030  ld   $30
              40ca 000c  ld   $0c
              40cb 00c3  ld   $c3
              40cc 0030  ld   $30
              40cd 000c  ld   $0c
              40ce 00c3  ld   $c3
              40cf 00f0  ld   $f0
              40d0 000f  ld   $0f
              40d1 00c3  ld   $c3
              40d2 0030  ld   $30
              40d3 000c  ld   $0c
              40d4 00c3  ld   $c3
              40d5 00f0  ld   $f0
              40d6 000f  ld   $0f
              40d7 00c3  ld   $c3
              40d8 0030  ld   $30
              40d9 000c  ld   $0c
              40da 00c3  ld   $c3
              40db 003f  ld   $3f
              40dc 000c  ld   $0c
              40dd 00c3  ld   $c3
              40de 0030  ld   $30
              40df 000c  ld   $0c
              40e0 00c3  ld   $c3
              40e1 0030  ld   $30
              40e2 000c  ld   $0c
              40e3 00c3  ld   $c3
              40e4 0030  ld   $30
              40e5 000c  ld   $0c
              40e6 00c3  ld   $c3
              40e7 0030  ld   $30
              40e8 000c  ld   $0c
              40e9 00c3  ld   $c3
              40ea 0030  ld   $30
              40eb 000c  ld   $0c
              40ec 00c3  ld   $c3
              40ed 0030  ld   $30
              40ee 000c  ld   $0c
              40ef 00c3  ld   $c3
              40f0 0030  ld   $30
              40f1 000c  ld   $0c
              40f2 00c3  ld   $c3
              40f3 0015  ld   $15
              40f4 000c  ld   $0c
              40f5 00c3  ld   $c3
              40f6 0030  ld   $30
              40f7 000c  ld   $0c
              40f8 00c3  ld   $c3
              40f9 0030  ld   $30
              40fa 000c  ld   $0c
              40fb fe00  bra  ac          ;+-----------------------------------+
              40fc fcfd  bra  $40fd       ;|                                   |
              40fd 1418  ld   $18,y       ;| Trampoline for page $4000 lookups |
              40fe e006  jmp  y,$06       ;|                                   |
              40ff c218  st   [$18]       ;+-----------------------------------+
              4100 00c3  ld   $c3
              4101 0030  ld   $30
              4102 001c  ld   $1c
              4103 0004  ld   $04
              4104 006b  ld   $6b
              4105 0000  ld   $00
              4106 00c3  ld   $c3
              4107 0030  ld   $30
              4108 000c  ld   $0c
              4109 00c3  ld   $c3
              410a 0030  ld   $30
              410b 000c  ld   $0c
              410c 00c3  ld   $c3
              410d 0030  ld   $30
              410e 000c  ld   $0c
              410f 00c3  ld   $c3
              4110 0030  ld   $30
              4111 000c  ld   $0c
              4112 00c3  ld   $c3
              4113 0030  ld   $30
              4114 000c  ld   $0c
              4115 00c3  ld   $c3
              4116 0030  ld   $30
              4117 000c  ld   $0c
              4118 00c3  ld   $c3
              4119 0030  ld   $30
              411a 000c  ld   $0c
              411b 00c3  ld   $c3
              411c 003f  ld   $3f
              411d 0000  ld   $00
              411e 00c3  ld   $c3
              411f 0030  ld   $30
              4120 000c  ld   $0c
              4121 00c3  ld   $c3
              4122 00f0  ld   $f0
              4123 000f  ld   $0f
              4124 00c0  ld   $c0
              4125 0030  ld   $30
              4126 000c  ld   $0c
              4127 00c3  ld   $c3
              4128 0030  ld   $30
              4129 000c  ld   $0c
              412a 00c3  ld   $c3
              412b 0030  ld   $30
              412c 000c  ld   $0c
              412d 00c3  ld   $c3
              412e 0030  ld   $30
              412f 000c  ld   $0c
              4130 00c3  ld   $c3
              4131 0030  ld   $30
              4132 000c  ld   $0c
              4133 00c3  ld   $c3
              4134 0030  ld   $30
              4135 000c  ld   $0c
              4136 00c3  ld   $c3
              4137 0030  ld   $30
              4138 000c  ld   $0c
              4139 00c3  ld   $c3
              413a 0030  ld   $30
              413b 000c  ld   $0c
              413c 00c3  ld   $c3
              413d 0030  ld   $30
              413e 000c  ld   $0c
              413f 00c3  ld   $c3
              4140 0030  ld   $30
              4141 000c  ld   $0c
              4142 00c3  ld   $c3
              4143 0030  ld   $30
              4144 000c  ld   $0c
              4145 00c3  ld   $c3
              4146 0030  ld   $30
              4147 000c  ld   $0c
              4148 00c3  ld   $c3
              4149 0030  ld   $30
              414a 000c  ld   $0c
              414b 00c3  ld   $c3
              414c 0030  ld   $30
              414d 000c  ld   $0c
              414e 00c3  ld   $c3
              414f 0030  ld   $30
              4150 000c  ld   $0c
              4151 00c3  ld   $c3
              4152 0030  ld   $30
              4153 000c  ld   $0c
              4154 00c3  ld   $c3
              4155 0030  ld   $30
              4156 000c  ld   $0c
              4157 00c3  ld   $c3
              4158 002a  ld   $2a
              4159 000c  ld   $0c
              415a 00c3  ld   $c3
              415b 0030  ld   $30
              415c 000c  ld   $0c
              415d 00ab  ld   $ab
              415e 002a  ld   $2a
              415f 000c  ld   $0c
              4160 00c3  ld   $c3
              4161 0030  ld   $30
              4162 000c  ld   $0c
              4163 00c3  ld   $c3
              4164 0030  ld   $30
              4165 000c  ld   $0c
              4166 00c3  ld   $c3
              4167 0030  ld   $30
              4168 000c  ld   $0c
              4169 00c3  ld   $c3
              416a 0030  ld   $30
              416b 000c  ld   $0c
              416c 00c3  ld   $c3
              416d 00ff  ld   $ff
              416e 00fb  ld   $fb
              416f 00bf  ld   $bf
              4170 003f  ld   $3f
              4171 000c  ld   $0c
              4172 00c3  ld   $c3
              4173 0030  ld   $30
              4174 000c  ld   $0c
              4175 00c3  ld   $c3
              4176 0030  ld   $30
              4177 000c  ld   $0c
              4178 00c3  ld   $c3
              4179 0030  ld   $30
              417a 000c  ld   $0c
              417b 00c3  ld   $c3
              417c 0030  ld   $30
              417d 000c  ld   $0c
              417e 00c3  ld   $c3
              417f 0030  ld   $30
              4180 000c  ld   $0c
              4181 00c3  ld   $c3
              4182 0030  ld   $30
              4183 00ac  ld   $ac
              4184 0056  ld   $56
              4185 0095  ld   $95
              4186 000a  ld   $0a
              4187 00c3  ld   $c3
              4188 0030  ld   $30
              4189 000c  ld   $0c
              418a 00c3  ld   $c3
              418b 0030  ld   $30
              418c 000c  ld   $0c
              418d 00c3  ld   $c3
              418e 0030  ld   $30
              418f 000c  ld   $0c
              4190 00c3  ld   $c3
              4191 0030  ld   $30
              4192 000c  ld   $0c
              4193 00c3  ld   $c3
              4194 00f0  ld   $f0
              4195 00ff  ld   $ff
              4196 00c3  ld   $c3
              4197 0030  ld   $30
              4198 000c  ld   $0c
              4199 00c3  ld   $c3
              419a 00f0  ld   $f0
              419b 00ff  ld   $ff
              419c 00c3  ld   $c3
              419d 0030  ld   $30
              419e 000c  ld   $0c
              419f 00c3  ld   $c3
              41a0 00ff  ld   $ff
              41a1 000f  ld   $0f
              41a2 00c3  ld   $c3
              41a3 0030  ld   $30
              41a4 000c  ld   $0c
              41a5 00c3  ld   $c3
              41a6 0030  ld   $30
              41a7 000c  ld   $0c
              41a8 00c3  ld   $c3
              41a9 0030  ld   $30
              41aa 000c  ld   $0c
              41ab 00c3  ld   $c3
              41ac 0030  ld   $30
              41ad 000c  ld   $0c
              41ae 00c3  ld   $c3
              41af 0030  ld   $30
              41b0 000c  ld   $0c
              41b1 00c3  ld   $c3
              41b2 0030  ld   $30
              41b3 000c  ld   $0c
              41b4 00c3  ld   $c3
              41b5 0030  ld   $30
              41b6 000c  ld   $0c
              41b7 00c3  ld   $c3
              41b8 0015  ld   $15
              41b9 000c  ld   $0c
              41ba 00c3  ld   $c3
              41bb 0030  ld   $30
              41bc 000c  ld   $0c
              41bd 00c3  ld   $c3
              41be 0030  ld   $30
              41bf 000c  ld   $0c
              41c0 00c3  ld   $c3
              41c1 0030  ld   $30
              41c2 001c  ld   $1c
              41c3 00ac  ld   $ac
              41c4 0056  ld   $56
              41c5 0060  ld   $60
              41c6 0059  ld   $59
              41c7 0030  ld   $30
              41c8 000c  ld   $0c
              41c9 00c3  ld   $c3
              41ca 0070  ld   $70
              41cb 0055  ld   $55
              41cc 00fd  ld   $fd
              41cd 0055  ld   $55
              41ce 00f5  ld   $f5
              41cf 0057  ld   $57
              41d0 00d5  ld   $d5
              41d1 005f  ld   $5f
              41d2 0055  ld   $55
              41d3 007f  ld   $7f
              41d4 0055  ld   $55
              41d5 00fd  ld   $fd
              41d6 0055  ld   $55
              41d7 0005  ld   $05
              41d8 00c3  ld   $c3
              41d9 0030  ld   $30
              41da 000c  ld   $0c
              41db 00c3  ld   $c3
              41dc 00f0  ld   $f0
              41dd 000b  ld   $0b
              41de 00c0  ld   $c0
              41df 0030  ld   $30
              41e0 000c  ld   $0c
              41e1 00c3  ld   $c3
              41e2 002f  ld   $2f
              41e3 0000  ld   $00
              41e4 00c3  ld   $c3
              41e5 0030  ld   $30
              41e6 000c  ld   $0c
              41e7 00c3  ld   $c3
              41e8 0030  ld   $30
              41e9 000c  ld   $0c
              41ea 00c3  ld   $c3
              41eb 0030  ld   $30
              41ec 000c  ld   $0c
              41ed 00c3  ld   $c3
              41ee 0030  ld   $30
              41ef 000c  ld   $0c
              41f0 00c3  ld   $c3
              41f1 0030  ld   $30
              41f2 000c  ld   $0c
              41f3 00c3  ld   $c3
              41f4 0030  ld   $30
              41f5 000c  ld   $0c
              41f6 00c3  ld   $c3
              41f7 0030  ld   $30
              41f8 000c  ld   $0c
              41f9 00c3  ld   $c3
              41fa 0030  ld   $30
              41fb fe00  bra  ac          ;+-----------------------------------+
              41fc fcfd  bra  $41fd       ;|                                   |
              41fd 1418  ld   $18,y       ;| Trampoline for page $4100 lookups |
              41fe e006  jmp  y,$06       ;|                                   |
              41ff c218  st   [$18]       ;+-----------------------------------+
              4200 000c  ld   $0c
              4201 00c3  ld   $c3
              4202 0030  ld   $30
              4203 000c  ld   $0c
              4204 00c3  ld   $c3
              4205 0030  ld   $30
              4206 000c  ld   $0c
              4207 00c3  ld   $c3
              4208 0030  ld   $30
              4209 000c  ld   $0c
              420a 00c3  ld   $c3
              420b 0030  ld   $30
              420c 000c  ld   $0c
              420d 00c3  ld   $c3
              420e 0030  ld   $30
              420f 000c  ld   $0c
              4210 00c3  ld   $c3
              4211 0030  ld   $30
              4212 000c  ld   $0c
              4213 00c3  ld   $c3
              4214 0030  ld   $30
              4215 000c  ld   $0c
              4216 00c3  ld   $c3
              4217 0030  ld   $30
              4218 000c  ld   $0c
              4219 00c3  ld   $c3
              421a 0030  ld   $30
              421b 000c  ld   $0c
              421c 00c3  ld   $c3
              421d 002a  ld   $2a
              421e 000c  ld   $0c
              421f 00c3  ld   $c3
              4220 00b0  ld   $b0
              4221 00aa  ld   $aa
              4222 00aa  ld   $aa
              4223 002a  ld   $2a
              4224 000c  ld   $0c
              4225 00c3  ld   $c3
              4226 0030  ld   $30
              4227 000c  ld   $0c
              4228 00c3  ld   $c3
              4229 0030  ld   $30
              422a 000c  ld   $0c
              422b 00c3  ld   $c3
              422c 0030  ld   $30
              422d 000c  ld   $0c
              422e 00c3  ld   $c3
              422f 0030  ld   $30
              4230 000c  ld   $0c
              4231 00bf  ld   $bf
              4232 0091  ld   $91
              4233 00f4  ld   $f4
              4234 0046  ld   $46
              4235 00d2  ld   $d2
              4236 000b  ld   $0b
              4237 00c3  ld   $c3
              4238 0030  ld   $30
              4239 000c  ld   $0c
              423a 00c3  ld   $c3
              423b 0030  ld   $30
              423c 000c  ld   $0c
              423d 00c3  ld   $c3
              423e 0030  ld   $30
              423f 000c  ld   $0c
              4240 00c3  ld   $c3
              4241 0030  ld   $30
              4242 000c  ld   $0c
              4243 00c3  ld   $c3
              4244 0030  ld   $30
              4245 00ac  ld   $ac
              4246 00c2  ld   $c2
              4247 00b0  ld   $b0
              4248 00aa  ld   $aa
              4249 00aa  ld   $aa
              424a 00aa  ld   $aa
              424b 00aa  ld   $aa
              424c 00c2  ld   $c2
              424d 00b0  ld   $b0
              424e 000a  ld   $0a
              424f 00c3  ld   $c3
              4250 0030  ld   $30
              4251 000c  ld   $0c
              4252 00c3  ld   $c3
              4253 0030  ld   $30
              4254 000c  ld   $0c
              4255 00c3  ld   $c3
              4256 0030  ld   $30
              4257 000c  ld   $0c
              4258 00c3  ld   $c3
              4259 0030  ld   $30
              425a 00ac  ld   $ac
              425b 00fe  ld   $fe
              425c 00ff  ld   $ff
              425d 003f  ld   $3f
              425e 00c0  ld   $c0
              425f 0030  ld   $30
              4260 00ac  ld   $ac
              4261 00fe  ld   $fe
              4262 00ff  ld   $ff
              4263 003f  ld   $3f
              4264 00c0  ld   $c0
              4265 00b0  ld   $b0
              4266 00fa  ld   $fa
              4267 00ff  ld   $ff
              4268 00ff  ld   $ff
              4269 0000  ld   $00
              426a 00c3  ld   $c3
              426b 0030  ld   $30
              426c 000c  ld   $0c
              426d 00c3  ld   $c3
              426e 0030  ld   $30
              426f 000c  ld   $0c
              4270 00c3  ld   $c3
              4271 0030  ld   $30
              4272 000c  ld   $0c
              4273 00c3  ld   $c3
              4274 0030  ld   $30
              4275 000c  ld   $0c
              4276 00c3  ld   $c3
              4277 0030  ld   $30
              4278 000c  ld   $0c
              4279 00c3  ld   $c3
              427a 0030  ld   $30
              427b 000c  ld   $0c
              427c 0057  ld   $57
              427d 0055  ld   $55
              427e 0005  ld   $05
              427f 00c3  ld   $c3
              4280 0030  ld   $30
              4281 000c  ld   $0c
              4282 00c3  ld   $c3
              4283 0030  ld   $30
              4284 000c  ld   $0c
              4285 00c3  ld   $c3
              4286 0096  ld   $96
              4287 0015  ld   $15
              4288 0058  ld   $58
              4289 006b  ld   $6b
              428a 00b0  ld   $b0
              428b 00ae  ld   $ae
              428c 0030  ld   $30
              428d 000c  ld   $0c
              428e 00c3  ld   $c3
              428f 00f0  ld   $f0
              4290 00ff  ld   $ff
              4291 00ff  ld   $ff
              4292 00ff  ld   $ff
              * 12 times
              429c 000f  ld   $0f
              429d 00c3  ld   $c3
              429e 0030  ld   $30
              429f 000c  ld   $0c
              42a0 00c3  ld   $c3
              42a1 0030  ld   $30
              42a2 00fc  ld   $fc
              42a3 0003  ld   $03
              42a4 0030  ld   $30
              42a5 000c  ld   $0c
              42a6 00ff  ld   $ff
              42a7 0000  ld   $00
              42a8 000c  ld   $0c
              42a9 00c3  ld   $c3
              42aa 0030  ld   $30
              42ab 000c  ld   $0c
              42ac 00c3  ld   $c3
              42ad 0030  ld   $30
              42ae 00fc  ld   $fc
              42af 00bf  ld   $bf
              42b0 0030  ld   $30
              42b1 000c  ld   $0c
              42b2 00c3  ld   $c3
              42b3 0030  ld   $30
              42b4 000c  ld   $0c
              42b5 00c3  ld   $c3
              42b6 0030  ld   $30
              42b7 000c  ld   $0c
              42b8 00c3  ld   $c3
              42b9 0030  ld   $30
              42ba 000c  ld   $0c
              42bb 00c3  ld   $c3
              42bc 0030  ld   $30
              42bd 000c  ld   $0c
              42be 00c3  ld   $c3
              42bf 0030  ld   $30
              42c0 000c  ld   $0c
              42c1 00c3  ld   $c3
              42c2 0030  ld   $30
              42c3 000c  ld   $0c
              42c4 00c3  ld   $c3
              42c5 0030  ld   $30
              42c6 000c  ld   $0c
              42c7 00c3  ld   $c3
              42c8 0030  ld   $30
              42c9 000c  ld   $0c
              42ca 00c3  ld   $c3
              42cb 0030  ld   $30
              42cc 000c  ld   $0c
              42cd 00c3  ld   $c3
              42ce 0030  ld   $30
              42cf 000c  ld   $0c
              42d0 00c3  ld   $c3
              42d1 0030  ld   $30
              42d2 000c  ld   $0c
              42d3 00c3  ld   $c3
              42d4 0030  ld   $30
              42d5 000c  ld   $0c
              42d6 00c3  ld   $c3
              42d7 0030  ld   $30
              42d8 000c  ld   $0c
              42d9 00c3  ld   $c3
              42da 00f0  ld   $f0
              42db 00ff  ld   $ff
              42dc 00ab  ld   $ab
              42dd 00ff  ld   $ff
              42de 000f  ld   $0f
              42df 00c3  ld   $c3
              42e0 006a  ld   $6a
              42e1 00a5  ld   $a5
              42e2 0056  ld   $56
              42e3 002a  ld   $2a
              42e4 000c  ld   $0c
              42e5 00c3  ld   $c3
              42e6 0030  ld   $30
              42e7 000c  ld   $0c
              42e8 00c3  ld   $c3
              42e9 0030  ld   $30
              42ea 000c  ld   $0c
              42eb 00c3  ld   $c3
              42ec 0030  ld   $30
              42ed 000c  ld   $0c
              42ee 00c3  ld   $c3
              42ef 0030  ld   $30
              42f0 00fc  ld   $fc
              42f1 004a  ld   $4a
              42f2 0030  ld   $30
              42f3 00fc  ld   $fc
              42f4 00c2  ld   $c2
              42f5 0070  ld   $70
              42f6 00f4  ld   $f4
              42f7 00c2  ld   $c2
              42f8 0030  ld   $30
              42f9 000c  ld   $0c
              42fa 00c3  ld   $c3
              42fb fe00  bra  ac          ;+-----------------------------------+
              42fc fcfd  bra  $42fd       ;|                                   |
              42fd 1418  ld   $18,y       ;| Trampoline for page $4200 lookups |
              42fe e006  jmp  y,$06       ;|                                   |
              42ff c218  st   [$18]       ;+-----------------------------------+
              4300 0030  ld   $30
              4301 000c  ld   $0c
              4302 00c3  ld   $c3
              4303 0030  ld   $30
              4304 000c  ld   $0c
              4305 00c3  ld   $c3
              4306 0030  ld   $30
              4307 000c  ld   $0c
              4308 00c3  ld   $c3
              4309 00f0  ld   $f0
              430a 00af  ld   $af
              430b 00fe  ld   $fe
              430c 00aa  ld   $aa
              430d 00aa  ld   $aa
              430e 00aa  ld   $aa
              * 6 times
              4312 00bf  ld   $bf
              4313 00fa  ld   $fa
              4314 00c3  ld   $c3
              4315 0030  ld   $30
              4316 000c  ld   $0c
              4317 00c3  ld   $c3
              4318 0030  ld   $30
              4319 000c  ld   $0c
              431a 00c3  ld   $c3
              431b 0030  ld   $30
              431c 000c  ld   $0c
              431d 00c3  ld   $c3
              431e 00f0  ld   $f0
              431f 00ff  ld   $ff
              4320 00ff  ld   $ff
              4321 0030  ld   $30
              4322 000c  ld   $0c
              4323 00c3  ld   $c3
              4324 00f0  ld   $f0
              4325 00ff  ld   $ff
              4326 00ff  ld   $ff
              4327 0030  ld   $30
              4328 000c  ld   $0c
              4329 00c3  ld   $c3
              432a 00ff  ld   $ff
              432b 00ff  ld   $ff
              432c 00c3  ld   $c3
              432d 0030  ld   $30
              432e 000c  ld   $0c
              432f 00c3  ld   $c3
              4330 0030  ld   $30
              4331 000c  ld   $0c
              4332 00c3  ld   $c3
              4333 0030  ld   $30
              4334 000c  ld   $0c
              4335 00c3  ld   $c3
              4336 0030  ld   $30
              4337 000c  ld   $0c
              4338 00c3  ld   $c3
              4339 0030  ld   $30
              433a 000c  ld   $0c
              433b 00c3  ld   $c3
              433c 0030  ld   $30
              433d 000c  ld   $0c
              433e 00c3  ld   $c3
              433f 0030  ld   $30
              4340 000c  ld   $0c
              4341 00c3  ld   $c3
              4342 0015  ld   $15
              4343 000c  ld   $0c
              4344 00c3  ld   $c3
              4345 0030  ld   $30
              4346 000c  ld   $0c
              4347 00c3  ld   $c3
              4348 0030  ld   $30
              4349 000c  ld   $0c
              434a 00c3  ld   $c3
              434b 00eb  ld   $eb
              434c 001a  ld   $1a
              434d 00ac  ld   $ac
              434e 0056  ld   $56
              434f 00b0  ld   $b0
              4350 00a6  ld   $a6
              4351 0030  ld   $30
              4352 000c  ld   $0c
              4353 00c3  ld   $c3
              4354 0070  ld   $70
              4355 0055  ld   $55
              4356 00fd  ld   $fd
              4357 0055  ld   $55
              4358 00f5  ld   $f5
              4359 0057  ld   $57
              435a 00d5  ld   $d5
              435b 005f  ld   $5f
              435c 0055  ld   $55
              435d 007f  ld   $7f
              435e 0055  ld   $55
              435f 00fd  ld   $fd
              4360 0055  ld   $55
              4361 0005  ld   $05
              4362 00c3  ld   $c3
              4363 0030  ld   $30
              4364 000c  ld   $0c
              4365 00c3  ld   $c3
              4366 0030  ld   $30
              4367 000c  ld   $0c
              4368 00bf  ld   $bf
              4369 0000  ld   $00
              436a 00fc  ld   $fc
              436b 0002  ld   $02
              436c 0030  ld   $30
              436d 000c  ld   $0c
              436e 00c3  ld   $c3
              436f 0030  ld   $30
              4370 000c  ld   $0c
              4371 00c3  ld   $c3
              4372 0030  ld   $30
              4373 006c  ld   $6c
              4374 00fc  ld   $fc
              4375 0030  ld   $30
              4376 000c  ld   $0c
              4377 00c3  ld   $c3
              4378 0030  ld   $30
              4379 000c  ld   $0c
              437a 00c3  ld   $c3
              437b 0030  ld   $30
              437c 000c  ld   $0c
              437d 00c3  ld   $c3
              437e 0030  ld   $30
              437f 000c  ld   $0c
              4380 00c3  ld   $c3
              4381 0030  ld   $30
              4382 000c  ld   $0c
              4383 00c3  ld   $c3
              4384 0030  ld   $30
              4385 000c  ld   $0c
              4386 00c3  ld   $c3
              4387 0030  ld   $30
              4388 000c  ld   $0c
              4389 00c3  ld   $c3
              438a 0030  ld   $30
              438b 000c  ld   $0c
              438c 00c3  ld   $c3
              438d 0030  ld   $30
              438e 000c  ld   $0c
              438f 00c3  ld   $c3
              4390 0030  ld   $30
              4391 000c  ld   $0c
              4392 00c3  ld   $c3
              4393 0030  ld   $30
              4394 000c  ld   $0c
              4395 00c3  ld   $c3
              4396 0030  ld   $30
              4397 000c  ld   $0c
              4398 00c3  ld   $c3
              4399 0030  ld   $30
              439a 000c  ld   $0c
              439b 00c3  ld   $c3
              439c 0030  ld   $30
              439d 000c  ld   $0c
              439e 00c3  ld   $c3
              439f 00f0  ld   $f0
              43a0 00af  ld   $af
              43a1 00fe  ld   $fe
              43a2 00ea  ld   $ea
              43a3 000f  ld   $0f
              43a4 00ab  ld   $ab
              43a5 00aa  ld   $aa
              43a6 00aa  ld   $aa
              43a7 00aa  ld   $aa
              43a8 002a  ld   $2a
              43a9 000c  ld   $0c
              43aa 00c3  ld   $c3
              43ab 0030  ld   $30
              43ac 000c  ld   $0c
              43ad 00c3  ld   $c3
              43ae 0030  ld   $30
              43af 000c  ld   $0c
              43b0 00c3  ld   $c3
              43b1 0030  ld   $30
              43b2 000c  ld   $0c
              43b3 00c3  ld   $c3
              43b4 00f0  ld   $f0
              43b5 001b  ld   $1b
              43b6 00bd  ld   $bd
              43b7 0030  ld   $30
              43b8 00fc  ld   $fc
              43b9 00c2  ld   $c2
              43ba 00f0  ld   $f0
              43bb 002b  ld   $2b
              43bc 00bd  ld   $bd
              43bd 0030  ld   $30
              43be 000c  ld   $0c
              43bf 00c3  ld   $c3
              43c0 0030  ld   $30
              43c1 000c  ld   $0c
              43c2 00c3  ld   $c3
              43c3 0030  ld   $30
              43c4 000c  ld   $0c
              43c5 00c3  ld   $c3
              43c6 0030  ld   $30
              43c7 000c  ld   $0c
              43c8 00c3  ld   $c3
              43c9 00f0  ld   $f0
              43ca 00af  ld   $af
              43cb 00ab  ld   $ab
              43cc 0095  ld   $95
              43cd 005a  ld   $5a
              43ce 0055  ld   $55
              43cf 006a  ld   $6a
              43d0 00a5  ld   $a5
              43d1 0056  ld   $56
              43d2 00aa  ld   $aa
              43d3 00fe  ld   $fe
              43d4 00c3  ld   $c3
              43d5 0030  ld   $30
              43d6 000c  ld   $0c
              43d7 00c3  ld   $c3
              43d8 0030  ld   $30
              43d9 000c  ld   $0c
              43da 00c3  ld   $c3
              43db 0030  ld   $30
              43dc 000c  ld   $0c
              43dd 00c3  ld   $c3
              43de 00ff  ld   $ff
              43df 00af  ld   $af
              43e0 00fe  ld   $fe
              43e1 0030  ld   $30
              43e2 000c  ld   $0c
              43e3 00c3  ld   $c3
              43e4 00ff  ld   $ff
              43e5 00af  ld   $af
              43e6 00fe  ld   $fe
              43e7 0030  ld   $30
              43e8 000c  ld   $0c
              43e9 00ff  ld   $ff
              43ea 00bf  ld   $bf
              43eb 00fa  ld   $fa
              43ec 00c3  ld   $c3
              43ed 0030  ld   $30
              43ee 000c  ld   $0c
              43ef 00c3  ld   $c3
              43f0 0030  ld   $30
              43f1 000c  ld   $0c
              43f2 00c3  ld   $c3
              43f3 0030  ld   $30
              43f4 000c  ld   $0c
              43f5 00c3  ld   $c3
              43f6 0030  ld   $30
              43f7 000c  ld   $0c
              43f8 00c3  ld   $c3
              43f9 0030  ld   $30
              43fa 000c  ld   $0c
              43fb fe00  bra  ac          ;+-----------------------------------+
              43fc fcfd  bra  $43fd       ;|                                   |
              43fd 1418  ld   $18,y       ;| Trampoline for page $4300 lookups |
              43fe e006  jmp  y,$06       ;|                                   |
              43ff c218  st   [$18]       ;+-----------------------------------+
              4400 00c3  ld   $c3
              4401 0030  ld   $30
              4402 000c  ld   $0c
              4403 00c3  ld   $c3
              4404 0030  ld   $30
              4405 000c  ld   $0c
              4406 00ab  ld   $ab
              4407 0095  ld   $95
              4408 000a  ld   $0a
              4409 00c3  ld   $c3
              440a 0030  ld   $30
              440b 000c  ld   $0c
              440c 00c3  ld   $c3
              440d 0030  ld   $30
              440e 000c  ld   $0c
              440f 00c3  ld   $c3
              4410 00e9  ld   $e9
              4411 001a  ld   $1a
              4412 0058  ld   $58
              4413 0041  ld   $41
              4414 00b0  ld   $b0
              4415 00ae  ld   $ae
              4416 0030  ld   $30
              4417 000c  ld   $0c
              4418 00c3  ld   $c3
              4419 00b0  ld   $b0
              441a 00ae  ld   $ae
              441b 00fe  ld   $fe
              441c 00aa  ld   $aa
              441d 00fe  ld   $fe
              441e 00ab  ld   $ab
              441f 00ea  ld   $ea
              4420 00af  ld   $af
              4421 00ab  ld   $ab
              4422 00bf  ld   $bf
              4423 00aa  ld   $aa
              4424 00ff  ld   $ff
              4425 00aa  ld   $aa
              4426 000e  ld   $0e
              4427 00c3  ld   $c3
              4428 0030  ld   $30
              4429 000c  ld   $0c
              442a 00c3  ld   $c3
              442b 0030  ld   $30
              442c 000c  ld   $0c
              442d 00c3  ld   $c3
              442e 007f  ld   $7f
              442f 0005  ld   $05
              4430 00c0  ld   $c0
              4431 0030  ld   $30
              4432 000c  ld   $0c
              4433 00c3  ld   $c3
              4434 0030  ld   $30
              4435 000c  ld   $0c
              4436 00c3  ld   $c3
              4437 0030  ld   $30
              4438 00bc  ld   $bc
              4439 00bc  ld   $bc
              443a 0030  ld   $30
              443b 000c  ld   $0c
              443c 00c3  ld   $c3
              443d 0030  ld   $30
              443e 000c  ld   $0c
              443f 00c3  ld   $c3
              4440 0030  ld   $30
              4441 000c  ld   $0c
              4442 00c3  ld   $c3
              4443 0030  ld   $30
              4444 000c  ld   $0c
              4445 00c3  ld   $c3
              4446 0030  ld   $30
              4447 000c  ld   $0c
              4448 00c3  ld   $c3
              4449 0030  ld   $30
              444a 000c  ld   $0c
              444b 00c3  ld   $c3
              444c 0030  ld   $30
              444d 000c  ld   $0c
              444e 00c3  ld   $c3
              444f 0030  ld   $30
              4450 000c  ld   $0c
              4451 00c3  ld   $c3
              4452 0030  ld   $30
              4453 000c  ld   $0c
              4454 00c3  ld   $c3
              4455 0030  ld   $30
              4456 000c  ld   $0c
              4457 00c3  ld   $c3
              4458 0030  ld   $30
              4459 000c  ld   $0c
              445a 00c3  ld   $c3
              445b 0030  ld   $30
              445c 000c  ld   $0c
              445d 00c3  ld   $c3
              445e 0030  ld   $30
              445f 000c  ld   $0c
              4460 00c3  ld   $c3
              4461 0030  ld   $30
              4462 000c  ld   $0c
              4463 00c3  ld   $c3
              4464 00b0  ld   $b0
              4465 00fa  ld   $fa
              4466 00ab  ld   $ab
              4467 00bf  ld   $bf
              4468 000a  ld   $0a
              4469 00ab  ld   $ab
              446a 0095  ld   $95
              446b 005a  ld   $5a
              446c 00a9  ld   $a9
              446d 002a  ld   $2a
              446e 000c  ld   $0c
              446f 00c3  ld   $c3
              4470 0012  ld   $12
              4471 005c  ld   $5c
              4472 00c2  ld   $c2
              4473 0030  ld   $30
              4474 000c  ld   $0c
              4475 00c3  ld   $c3
              4476 0030  ld   $30
              4477 000c  ld   $0c
              4478 00c3  ld   $c3
              4479 00bf  ld   $bf
              447a 0004  ld   $04
              447b 00c3  ld   $c3
              447c 002f  ld   $2f
              447d 00fc  ld   $fc
              447e 00c2  ld   $c2
              447f 002f  ld   $2f
              4480 000c  ld   $0c
              4481 0047  ld   $47
              4482 003f  ld   $3f
              4483 000c  ld   $0c
              4484 00c3  ld   $c3
              4485 0030  ld   $30
              4486 000c  ld   $0c
              4487 00c3  ld   $c3
              4488 0030  ld   $30
              4489 000c  ld   $0c
              448a 00c3  ld   $c3
              448b 0030  ld   $30
              448c 000c  ld   $0c
              448d 00c3  ld   $c3
              448e 00b0  ld   $b0
              448f 00aa  ld   $aa
              4490 00aa  ld   $aa
              4491 0095  ld   $95
              4492 005a  ld   $5a
              4493 00a9  ld   $a9
              4494 006a  ld   $6a
              4495 00a5  ld   $a5
              4496 0056  ld   $56
              4497 00aa  ld   $aa
              4498 00aa  ld   $aa
              4499 00c2  ld   $c2
              449a 0030  ld   $30
              449b 000c  ld   $0c
              449c 00c3  ld   $c3
              449d 0030  ld   $30
              449e 000c  ld   $0c
              449f 00c3  ld   $c3
              44a0 0030  ld   $30
              44a1 000c  ld   $0c
              44a2 000f  ld   $0f
              44a3 003f  ld   $3f
              44a4 00ac  ld   $ac
              44a5 00fe  ld   $fe
              44a6 0030  ld   $30
              44a7 000c  ld   $0c
              44a8 000f  ld   $0f
              44a9 003f  ld   $3f
              44aa 00ac  ld   $ac
              44ab 00fe  ld   $fe
              44ac 0030  ld   $30
              44ad 003c  ld   $3c
              44ae 00fc  ld   $fc
              44af 00b0  ld   $b0
              44b0 00fa  ld   $fa
              44b1 00c3  ld   $c3
              44b2 0030  ld   $30
              44b3 000c  ld   $0c
              44b4 00c3  ld   $c3
              44b5 0030  ld   $30
              44b6 000c  ld   $0c
              44b7 00c3  ld   $c3
              44b8 0030  ld   $30
              44b9 000c  ld   $0c
              44ba 00c3  ld   $c3
              44bb 0030  ld   $30
              44bc 000c  ld   $0c
              44bd 00c3  ld   $c3
              44be 0030  ld   $30
              44bf 000c  ld   $0c
              44c0 00c3  ld   $c3
              44c1 0030  ld   $30
              44c2 000c  ld   $0c
              44c3 00c3  ld   $c3
              44c4 0030  ld   $30
              44c5 000c  ld   $0c
              44c6 00c3  ld   $c3
              44c7 0015  ld   $15
              44c8 000c  ld   $0c
              44c9 00c3  ld   $c3
              44ca 0030  ld   $30
              44cb 000c  ld   $0c
              44cc 00c3  ld   $c3
              44cd 0030  ld   $30
              44ce 000c  ld   $0c
              44cf 00c3  ld   $c3
              44d0 00eb  ld   $eb
              44d1 001a  ld   $1a
              44d2 0004  ld   $04
              44d3 0069  ld   $69
              44d4 00b0  ld   $b0
              44d5 00a6  ld   $a6
              44d6 0030  ld   $30
              44d7 000c  ld   $0c
              44d8 00c3  ld   $c3
              44d9 0070  ld   $70
              44da 0055  ld   $55
              44db 00fd  ld   $fd
              44dc 0055  ld   $55
              44dd 00f5  ld   $f5
              44de 0057  ld   $57
              44df 00d5  ld   $d5
              44e0 005f  ld   $5f
              44e1 0055  ld   $55
              44e2 007f  ld   $7f
              44e3 0055  ld   $55
              44e4 00fd  ld   $fd
              44e5 0055  ld   $55
              44e6 0005  ld   $05
              44e7 00c3  ld   $c3
              44e8 0030  ld   $30
              44e9 000c  ld   $0c
              44ea 00c3  ld   $c3
              44eb 0030  ld   $30
              44ec 000c  ld   $0c
              44ed 00c3  ld   $c3
              44ee 0030  ld   $30
              44ef 0050  ld   $50
              44f0 00fd  ld   $fd
              44f1 0030  ld   $30
              44f2 000c  ld   $0c
              44f3 00c3  ld   $c3
              44f4 0030  ld   $30
              44f5 000c  ld   $0c
              44f6 00c3  ld   $c3
              44f7 0030  ld   $30
              44f8 006c  ld   $6c
              44f9 00fc  ld   $fc
              44fa 0030  ld   $30
              44fb fe00  bra  ac          ;+-----------------------------------+
              44fc fcfd  bra  $44fd       ;|                                   |
              44fd 1418  ld   $18,y       ;| Trampoline for page $4400 lookups |
              44fe e006  jmp  y,$06       ;|                                   |
              44ff c218  st   [$18]       ;+-----------------------------------+
              4500 000c  ld   $0c
              4501 00c3  ld   $c3
              4502 0030  ld   $30
              4503 000c  ld   $0c
              4504 00c3  ld   $c3
              4505 0030  ld   $30
              4506 000c  ld   $0c
              4507 00c3  ld   $c3
              4508 0030  ld   $30
              4509 000c  ld   $0c
              450a 00c3  ld   $c3
              450b 0030  ld   $30
              450c 000c  ld   $0c
              450d 00c3  ld   $c3
              450e 0030  ld   $30
              450f 000c  ld   $0c
              4510 00c3  ld   $c3
              4511 0030  ld   $30
              4512 000c  ld   $0c
              4513 00c3  ld   $c3
              4514 0030  ld   $30
              4515 000c  ld   $0c
              4516 00c3  ld   $c3
              4517 0030  ld   $30
              4518 000c  ld   $0c
              4519 00c3  ld   $c3
              451a 0030  ld   $30
              451b 000c  ld   $0c
              451c 00c3  ld   $c3
              451d 0030  ld   $30
              451e 000c  ld   $0c
              451f 00c3  ld   $c3
              4520 0030  ld   $30
              4521 000c  ld   $0c
              4522 00c3  ld   $c3
              4523 0030  ld   $30
              4524 000c  ld   $0c
              4525 00c3  ld   $c3
              4526 0030  ld   $30
              4527 000c  ld   $0c
              4528 00c3  ld   $c3
              4529 0070  ld   $70
              452a 00a5  ld   $a5
              452b 00fe  ld   $fe
              452c 00ea  ld   $ea
              452d 000f  ld   $0f
              452e 00ab  ld   $ab
              452f 006a  ld   $6a
              4530 00a5  ld   $a5
              4531 0056  ld   $56
              4532 002a  ld   $2a
              4533 000c  ld   $0c
              4534 004b  ld   $4b
              4535 0092  ld   $92
              4536 0054  ld   $54
              4537 0096  ld   $96
              4538 0030  ld   $30
              4539 000c  ld   $0c
              453a 00c3  ld   $c3
              453b 0030  ld   $30
              453c 000c  ld   $0c
              453d 00c3  ld   $c3
              453e 006f  ld   $6f
              453f 0004  ld   $04
              4540 00c3  ld   $c3
              4541 00f0  ld   $f0
              4542 000b  ld   $0b
              4543 00bf  ld   $bf
              4544 0030  ld   $30
              4545 000c  ld   $0c
              4546 004b  ld   $4b
              4547 002f  ld   $2f
              4548 000c  ld   $0c
              4549 00c3  ld   $c3
              454a 0030  ld   $30
              454b 000c  ld   $0c
              454c 00c3  ld   $c3
              454d 0030  ld   $30
              454e 00fc  ld   $fc
              454f 00ff  ld   $ff
              4550 00ff  ld   $ff
              4551 00ff  ld   $ff
              4552 00ff  ld   $ff
              4553 00aa  ld   $aa
              4554 0065  ld   $65
              4555 00a9  ld   $a9
              4556 00aa  ld   $aa
              4557 00aa  ld   $aa
              4558 00aa  ld   $aa
              * 7 times
              455d 0065  ld   $65
              455e 00a9  ld   $a9
              455f 00ff  ld   $ff
              4560 00ff  ld   $ff
              4561 00ff  ld   $ff
              4562 00ff  ld   $ff
              4563 000f  ld   $0f
              4564 00c3  ld   $c3
              4565 0030  ld   $30
              4566 000c  ld   $0c
              4567 00c3  ld   $c3
              4568 0030  ld   $30
              4569 00ac  ld   $ac
              456a 00fe  ld   $fe
              456b 0030  ld   $30
              456c 000c  ld   $0c
              456d 00c3  ld   $c3
              456e 0030  ld   $30
              456f 00ac  ld   $ac
              4570 00fe  ld   $fe
              4571 0030  ld   $30
              4572 000c  ld   $0c
              4573 00c3  ld   $c3
              4574 00b0  ld   $b0
              4575 00fa  ld   $fa
              4576 00c3  ld   $c3
              4577 0030  ld   $30
              4578 000c  ld   $0c
              4579 00c3  ld   $c3
              457a 0030  ld   $30
              457b 000c  ld   $0c
              457c 00c3  ld   $c3
              457d 0030  ld   $30
              457e 000c  ld   $0c
              457f 00c3  ld   $c3
              4580 0030  ld   $30
              4581 000c  ld   $0c
              4582 00c3  ld   $c3
              4583 0030  ld   $30
              4584 000c  ld   $0c
              4585 00c3  ld   $c3
              4586 0030  ld   $30
              4587 000c  ld   $0c
              4588 00c3  ld   $c3
              4589 0030  ld   $30
              458a 000c  ld   $0c
              458b 00c3  ld   $c3
              458c 0015  ld   $15
              458d 000c  ld   $0c
              458e 00c3  ld   $c3
              458f 0030  ld   $30
              4590 000c  ld   $0c
              4591 00c3  ld   $c3
              4592 0030  ld   $30
              4593 000c  ld   $0c
              4594 00c3  ld   $c3
              4595 00e9  ld   $e9
              4596 001a  ld   $1a
              4597 00a4  ld   $a4
              4598 0041  ld   $41
              4599 00b0  ld   $b0
              459a 00ae  ld   $ae
              459b 0030  ld   $30
              459c 000c  ld   $0c
              459d 00c3  ld   $c3
              459e 00b0  ld   $b0
              459f 00aa  ld   $aa
              45a0 00ff  ld   $ff
              45a1 00ba  ld   $ba
              45a2 00fa  ld   $fa
              45a3 00ab  ld   $ab
              45a4 00fa  ld   $fa
              45a5 00af  ld   $af
              45a6 00aa  ld   $aa
              45a7 00bf  ld   $bf
              45a8 00ae  ld   $ae
              45a9 00fe  ld   $fe
              45aa 00ba  ld   $ba
              45ab 000a  ld   $0a
              45ac 00c3  ld   $c3
              45ad 0030  ld   $30
              45ae 000c  ld   $0c
              45af 00c3  ld   $c3
              45b0 0030  ld   $30
              45b1 000c  ld   $0c
              45b2 00c3  ld   $c3
              45b3 00c0  ld   $c0
              45b4 006b  ld   $6b
              45b5 0001  ld   $01
              45b6 002f  ld   $2f
              45b7 000c  ld   $0c
              45b8 00c3  ld   $c3
              45b9 0030  ld   $30
              45ba 000c  ld   $0c
              45bb 00c3  ld   $c3
              45bc 0030  ld   $30
              45bd 00bc  ld   $bc
              45be 00bc  ld   $bc
              45bf 0030  ld   $30
              45c0 000c  ld   $0c
              45c1 00c3  ld   $c3
              45c2 0030  ld   $30
              45c3 000c  ld   $0c
              45c4 00c3  ld   $c3
              45c5 0030  ld   $30
              45c6 000c  ld   $0c
              45c7 00c3  ld   $c3
              45c8 0030  ld   $30
              45c9 000c  ld   $0c
              45ca 00c3  ld   $c3
              45cb 0030  ld   $30
              45cc 000c  ld   $0c
              45cd 00c3  ld   $c3
              45ce 0030  ld   $30
              45cf 000c  ld   $0c
              45d0 00c3  ld   $c3
              45d1 0030  ld   $30
              45d2 000c  ld   $0c
              45d3 00c3  ld   $c3
              45d4 0030  ld   $30
              45d5 000c  ld   $0c
              45d6 00c3  ld   $c3
              45d7 0030  ld   $30
              45d8 000c  ld   $0c
              45d9 00c3  ld   $c3
              45da 0030  ld   $30
              45db 000c  ld   $0c
              45dc 00c3  ld   $c3
              45dd 0030  ld   $30
              45de 000c  ld   $0c
              45df 00c3  ld   $c3
              45e0 0030  ld   $30
              45e1 000c  ld   $0c
              45e2 00c3  ld   $c3
              45e3 0030  ld   $30
              45e4 000c  ld   $0c
              45e5 00c3  ld   $c3
              45e6 0030  ld   $30
              45e7 000c  ld   $0c
              45e8 00c3  ld   $c3
              45e9 00b0  ld   $b0
              45ea 005a  ld   $5a
              45eb 00a9  ld   $a9
              45ec 00bf  ld   $bf
              45ed 000a  ld   $0a
              45ee 00ab  ld   $ab
              45ef 0095  ld   $95
              45f0 005a  ld   $5a
              45f1 00a9  ld   $a9
              45f2 002a  ld   $2a
              45f3 000c  ld   $0c
              45f4 004b  ld   $4b
              45f5 00a3  ld   $a3
              45f6 0094  ld   $94
              45f7 0097  ld   $97
              45f8 0030  ld   $30
              45f9 000c  ld   $0c
              45fa 00c3  ld   $c3
              45fb fe00  bra  ac          ;+-----------------------------------+
              45fc fcfd  bra  $45fd       ;|                                   |
              45fd 1418  ld   $18,y       ;| Trampoline for page $4500 lookups |
              45fe e006  jmp  y,$06       ;|                                   |
              45ff c218  st   [$18]       ;+-----------------------------------+
              4600 0030  ld   $30
              4601 000c  ld   $0c
              4602 00c3  ld   $c3
              4603 00ff  ld   $ff
              4604 00fb  ld   $fb
              4605 00be  ld   $be
              4606 002f  ld   $2f
              4607 00fc  ld   $fc
              4608 00c3  ld   $c3
              4609 00ef  ld   $ef
              460a 00fb  ld   $fb
              460b 00be  ld   $be
              460c 003f  ld   $3f
              460d 000c  ld   $0c
              460e 00c3  ld   $c3
              460f 0030  ld   $30
              4610 000c  ld   $0c
              4611 00c3  ld   $c3
              4612 0030  ld   $30
              4613 00ac  ld   $ac
              4614 0069  ld   $69
              4615 009a  ld   $9a
              4616 00a6  ld   $a6
              4617 0069  ld   $69
              4618 0096  ld   $96
              4619 00aa  ld   $aa
              461a 001a  ld   $1a
              461b 0096  ld   $96
              461c 0065  ld   $65
              461d 0059  ld   $59
              461e 0096  ld   $96
              461f 0065  ld   $65
              4620 0059  ld   $59
              4621 0086  ld   $86
              4622 00aa  ld   $aa
              4623 005a  ld   $5a
              4624 009a  ld   $9a
              4625 00a6  ld   $a6
              4626 0069  ld   $69
              4627 009a  ld   $9a
              4628 0006  ld   $06
              4629 00c3  ld   $c3
              462a 0030  ld   $30
              462b 000c  ld   $0c
              462c 00c3  ld   $c3
              462d 0030  ld   $30
              462e 00ac  ld   $ac
              462f 00fe  ld   $fe
              4630 0030  ld   $30
              4631 000c  ld   $0c
              4632 00c3  ld   $c3
              4633 0030  ld   $30
              4634 00ac  ld   $ac
              4635 00fe  ld   $fe
              4636 0030  ld   $30
              4637 000c  ld   $0c
              4638 00c3  ld   $c3
              4639 00b0  ld   $b0
              463a 00fa  ld   $fa
              463b 00c3  ld   $c3
              463c 0030  ld   $30
              463d 000c  ld   $0c
              463e 00c3  ld   $c3
              463f 0030  ld   $30
              4640 000c  ld   $0c
              4641 00c3  ld   $c3
              4642 0030  ld   $30
              4643 000c  ld   $0c
              4644 00c3  ld   $c3
              4645 0030  ld   $30
              4646 000c  ld   $0c
              4647 00c3  ld   $c3
              4648 0030  ld   $30
              4649 00ac  ld   $ac
              464a 00aa  ld   $aa
              464b 00ff  ld   $ff
              464c 00ff  ld   $ff
              464d 00ff  ld   $ff
              * 5 times
              4650 00c3  ld   $c3
              4651 0015  ld   $15
              4652 000c  ld   $0c
              4653 00c3  ld   $c3
              4654 0030  ld   $30
              4655 000c  ld   $0c
              4656 00c3  ld   $c3
              4657 0030  ld   $30
              4658 000c  ld   $0c
              4659 00c3  ld   $c3
              465a 00eb  ld   $eb
              465b 001a  ld   $1a
              465c 0004  ld   $04
              465d 0069  ld   $69
              465e 00b0  ld   $b0
              465f 00a6  ld   $a6
              4660 0030  ld   $30
              4661 000c  ld   $0c
              4662 00c3  ld   $c3
              4663 0070  ld   $70
              4664 0055  ld   $55
              4665 00fd  ld   $fd
              4666 0055  ld   $55
              4667 00f5  ld   $f5
              4668 0057  ld   $57
              4669 00d5  ld   $d5
              466a 005f  ld   $5f
              466b 0055  ld   $55
              466c 007f  ld   $7f
              466d 0055  ld   $55
              466e 00fd  ld   $fd
              466f 0055  ld   $55
              4670 0005  ld   $05
              4671 00c3  ld   $c3
              4672 0030  ld   $30
              4673 000c  ld   $0c
              4674 00c3  ld   $c3
              4675 0030  ld   $30
              4676 000c  ld   $0c
              4677 0003  ld   $03
              4678 007f  ld   $7f
              4679 0010  ld   $10
              467a 0004  ld   $04
              467b 00c0  ld   $c0
              467c 000f  ld   $0f
              467d 00c3  ld   $c3
              467e 0030  ld   $30
              467f 000c  ld   $0c
              4680 00c3  ld   $c3
              4681 0030  ld   $30
              4682 006c  ld   $6c
              4683 00fc  ld   $fc
              4684 0041  ld   $41
              4685 0010  ld   $10
              4686 0004  ld   $04
              4687 0041  ld   $41
              4688 0010  ld   $10
              4689 0004  ld   $04
              468a 0041  ld   $41
              468b 0010  ld   $10
              468c 0004  ld   $04
              468d 0041  ld   $41
              468e 0010  ld   $10
              468f 0004  ld   $04
              4690 0041  ld   $41
              4691 0010  ld   $10
              4692 0004  ld   $04
              4693 0030  ld   $30
              4694 000c  ld   $0c
              4695 00c3  ld   $c3
              4696 0030  ld   $30
              4697 000c  ld   $0c
              4698 00c3  ld   $c3
              4699 0030  ld   $30
              469a 000c  ld   $0c
              469b 00c3  ld   $c3
              469c 0030  ld   $30
              469d 000c  ld   $0c
              469e 00c3  ld   $c3
              469f 0030  ld   $30
              46a0 000c  ld   $0c
              46a1 00c3  ld   $c3
              46a2 0030  ld   $30
              46a3 000c  ld   $0c
              46a4 00c3  ld   $c3
              46a5 0030  ld   $30
              46a6 000c  ld   $0c
              46a7 00c3  ld   $c3
              46a8 0030  ld   $30
              46a9 000c  ld   $0c
              46aa 00c3  ld   $c3
              46ab 0030  ld   $30
              46ac 000c  ld   $0c
              46ad 00c3  ld   $c3
              46ae 0070  ld   $70
              46af 00a5  ld   $a5
              46b0 00fe  ld   $fe
              46b1 00ea  ld   $ea
              46b2 000f  ld   $0f
              46b3 00ab  ld   $ab
              46b4 006a  ld   $6a
              46b5 00a5  ld   $a5
              46b6 0056  ld   $56
              46b7 002a  ld   $2a
              46b8 001c  ld   $1c
              46b9 0058  ld   $58
              46ba 0081  ld   $81
              46bb 0015  ld   $15
              46bc 0058  ld   $58
              46bd 0011  ld   $11
              46be 000c  ld   $0c
              46bf 00c3  ld   $c3
              46c0 0030  ld   $30
              46c1 000c  ld   $0c
              46c2 00c3  ld   $c3
              46c3 00af  ld   $af
              46c4 0004  ld   $04
              46c5 00c3  ld   $c3
              46c6 00f0  ld   $f0
              46c7 000f  ld   $0f
              46c8 00ff  ld   $ff
              46c9 0030  ld   $30
              46ca 000c  ld   $0c
              46cb 0047  ld   $47
              46cc 002f  ld   $2f
              46cd 000c  ld   $0c
              46ce 00c3  ld   $c3
              46cf 0030  ld   $30
              46d0 000c  ld   $0c
              46d1 00c3  ld   $c3
              46d2 0030  ld   $30
              46d3 005c  ld   $5c
              46d4 0055  ld   $55
              46d5 0055  ld   $55
              46d6 0055  ld   $55
              46d7 0055  ld   $55
              46d8 00d6  ld   $d6
              46d9 00fa  ld   $fa
              46da 005a  ld   $5a
              46db 0069  ld   $69
              46dc 009a  ld   $9a
              46dd 00a6  ld   $a6
              46de 0069  ld   $69
              46df 009a  ld   $9a
              46e0 00a6  ld   $a6
              46e1 00d6  ld   $d6
              46e2 00bb  ld   $bb
              46e3 005a  ld   $5a
              46e4 0055  ld   $55
              46e5 0055  ld   $55
              46e6 0055  ld   $55
              46e7 0055  ld   $55
              46e8 0005  ld   $05
              46e9 00c3  ld   $c3
              46ea 0030  ld   $30
              46eb 000c  ld   $0c
              46ec 00c3  ld   $c3
              46ed 0030  ld   $30
              46ee 00ac  ld   $ac
              46ef 00fe  ld   $fe
              46f0 0030  ld   $30
              46f1 000c  ld   $0c
              46f2 00c3  ld   $c3
              46f3 0030  ld   $30
              46f4 00ac  ld   $ac
              46f5 00fe  ld   $fe
              46f6 0030  ld   $30
              46f7 000c  ld   $0c
              46f8 00c3  ld   $c3
              46f9 00b0  ld   $b0
              46fa 00fa  ld   $fa
              46fb fe00  bra  ac          ;+-----------------------------------+
              46fc fcfd  bra  $46fd       ;|                                   |
              46fd 1418  ld   $18,y       ;| Trampoline for page $4600 lookups |
              46fe e006  jmp  y,$06       ;|                                   |
              46ff c218  st   [$18]       ;+-----------------------------------+
              4700 00c3  ld   $c3
              4701 0030  ld   $30
              4702 000c  ld   $0c
              4703 00c3  ld   $c3
              4704 0030  ld   $30
              4705 000c  ld   $0c
              4706 00c3  ld   $c3
              4707 0030  ld   $30
              4708 000c  ld   $0c
              4709 00c3  ld   $c3
              470a 0030  ld   $30
              470b 000c  ld   $0c
              470c 00ab  ld   $ab
              470d 00aa  ld   $aa
              470e 00aa  ld   $aa
              470f 00aa  ld   $aa
              4710 00aa  ld   $aa
              4711 00fa  ld   $fa
              4712 00ff  ld   $ff
              4713 00ff  ld   $ff
              4714 00ff  ld   $ff
              * 5 times
              4717 000f  ld   $0f
              4718 00c3  ld   $c3
              4719 0030  ld   $30
              471a 000c  ld   $0c
              471b 00c3  ld   $c3
              471c 0030  ld   $30
              471d 000c  ld   $0c
              471e 00c3  ld   $c3
              471f 00e9  ld   $e9
              4720 001a  ld   $1a
              4721 00a4  ld   $a4
              4722 0041  ld   $41
              4723 00b0  ld   $b0
              4724 00ae  ld   $ae
              4725 0030  ld   $30
              4726 000c  ld   $0c
              4727 00c3  ld   $c3
              4728 00b0  ld   $b0
              4729 00aa  ld   $aa
              472a 00ff  ld   $ff
              472b 00aa  ld   $aa
              472c 00fe  ld   $fe
              472d 00ab  ld   $ab
              472e 00ea  ld   $ea
              472f 00af  ld   $af
              4730 00ea  ld   $ea
              4731 00bf  ld   $bf
              4732 00aa  ld   $aa
              4733 00ff  ld   $ff
              4734 00aa  ld   $aa
              4735 000e  ld   $0e
              4736 00c3  ld   $c3
              4737 0030  ld   $30
              4738 000c  ld   $0c
              4739 00c3  ld   $c3
              473a 0030  ld   $30
              473b 000c  ld   $0c
              473c 00bc  ld   $bc
              473d 0081  ld   $81
              473e 0065  ld   $65
              473f 0005  ld   $05
              4740 0020  ld   $20
              4741 00f0  ld   $f0
              4742 00c2  ld   $c2
              4743 0030  ld   $30
              4744 000c  ld   $0c
              4745 00c3  ld   $c3
              4746 0030  ld   $30
              4747 00bc  ld   $bc
              4748 00bc  ld   $bc
              4749 00ff  ld   $ff
              474a 00fb  ld   $fb
              474b 00bf  ld   $bf
              474c 00ff  ld   $ff
              474d 00fb  ld   $fb
              474e 00bf  ld   $bf
              474f 00ff  ld   $ff
              4750 00fb  ld   $fb
              4751 00bf  ld   $bf
              4752 00ff  ld   $ff
              4753 00fb  ld   $fb
              4754 00bf  ld   $bf
              4755 00ff  ld   $ff
              4756 00fb  ld   $fb
              4757 0007  ld   $07
              4758 0030  ld   $30
              4759 000c  ld   $0c
              475a 00c3  ld   $c3
              475b 0030  ld   $30
              475c 000c  ld   $0c
              475d 00c3  ld   $c3
              475e 0030  ld   $30
              475f 000c  ld   $0c
              4760 00c3  ld   $c3
              4761 0030  ld   $30
              4762 000c  ld   $0c
              4763 00c3  ld   $c3
              4764 0030  ld   $30
              4765 000c  ld   $0c
              4766 00c3  ld   $c3
              4767 0030  ld   $30
              4768 000c  ld   $0c
              4769 00c3  ld   $c3
              476a 0030  ld   $30
              476b 000c  ld   $0c
              476c 00c3  ld   $c3
              476d 0030  ld   $30
              476e 000c  ld   $0c
              476f 00c3  ld   $c3
              4770 0030  ld   $30
              4771 000c  ld   $0c
              4772 00c3  ld   $c3
              4773 00b0  ld   $b0
              4774 005a  ld   $5a
              4775 00a9  ld   $a9
              4776 00bf  ld   $bf
              4777 000a  ld   $0a
              4778 00ab  ld   $ab
              4779 0095  ld   $95
              477a 005a  ld   $5a
              477b 00a9  ld   $a9
              477c 002a  ld   $2a
              477d 001c  ld   $1c
              477e 0004  ld   $04
              477f 0041  ld   $41
              4780 0010  ld   $10
              4781 0044  ld   $44
              4782 0011  ld   $11
              4783 000c  ld   $0c
              4784 00c3  ld   $c3
              4785 0030  ld   $30
              4786 000c  ld   $0c
              4787 00c3  ld   $c3
              4788 007f  ld   $7f
              4789 0004  ld   $04
              478a 00c3  ld   $c3
              478b 00ef  ld   $ef
              478c 00ff  ld   $ff
              478d 00fe  ld   $fe
              478e 003f  ld   $3f
              478f 000c  ld   $0c
              4790 004b  ld   $4b
              4791 003f  ld   $3f
              4792 000c  ld   $0c
              4793 00c3  ld   $c3
              4794 0030  ld   $30
              4795 000c  ld   $0c
              4796 00c3  ld   $c3
              4797 0030  ld   $30
              4798 00ac  ld   $ac
              4799 00aa  ld   $aa
              479a 0095  ld   $95
              479b 00aa  ld   $aa
              479c 0056  ld   $56
              479d 00d6  ld   $d6
              479e 00fa  ld   $fa
              479f 005a  ld   $5a
              47a0 006a  ld   $6a
              47a1 00a5  ld   $a5
              47a2 00aa  ld   $aa
              47a3 006a  ld   $6a
              47a4 00a5  ld   $a5
              47a5 00aa  ld   $aa
              47a6 00d6  ld   $d6
              47a7 00bb  ld   $bb
              47a8 005a  ld   $5a
              47a9 0095  ld   $95
              47aa 00aa  ld   $aa
              47ab 0056  ld   $56
              47ac 00aa  ld   $aa
              47ad 000a  ld   $0a
              47ae 00c3  ld   $c3
              47af 0030  ld   $30
              47b0 000c  ld   $0c
              47b1 00c3  ld   $c3
              47b2 0030  ld   $30
              47b3 00ac  ld   $ac
              47b4 00fe  ld   $fe
              47b5 0030  ld   $30
              47b6 000c  ld   $0c
              47b7 00c3  ld   $c3
              47b8 0030  ld   $30
              47b9 00ac  ld   $ac
              47ba 00fe  ld   $fe
              47bb 0030  ld   $30
              47bc 000c  ld   $0c
              47bd 00c3  ld   $c3
              47be 00b0  ld   $b0
              47bf 00fa  ld   $fa
              47c0 00c3  ld   $c3
              47c1 0030  ld   $30
              47c2 000c  ld   $0c
              47c3 00c3  ld   $c3
              47c4 0030  ld   $30
              47c5 000c  ld   $0c
              47c6 00c3  ld   $c3
              47c7 0030  ld   $30
              47c8 000c  ld   $0c
              47c9 00c3  ld   $c3
              47ca 0055  ld   $55
              47cb 0055  ld   $55
              47cc 0055  ld   $55
              * 6 times
              47d0 00aa  ld   $aa
              47d1 00aa  ld   $aa
              47d2 00aa  ld   $aa
              47d3 00ea  ld   $ea
              47d4 00ff  ld   $ff
              47d5 00ff  ld   $ff
              47d6 00ff  ld   $ff
              * 5 times
              47d9 003f  ld   $3f
              47da 000c  ld   $0c
              47db 00c3  ld   $c3
              47dc 0030  ld   $30
              47dd 000c  ld   $0c
              47de 00c3  ld   $c3
              47df 00eb  ld   $eb
              47e0 001a  ld   $1a
              47e1 0004  ld   $04
              47e2 0069  ld   $69
              47e3 00b0  ld   $b0
              47e4 00a6  ld   $a6
              47e5 0030  ld   $30
              47e6 000c  ld   $0c
              47e7 00c3  ld   $c3
              47e8 0070  ld   $70
              47e9 0055  ld   $55
              47ea 00fd  ld   $fd
              47eb 0055  ld   $55
              47ec 00f5  ld   $f5
              47ed 0057  ld   $57
              47ee 00d5  ld   $d5
              47ef 005f  ld   $5f
              47f0 0055  ld   $55
              47f1 007f  ld   $7f
              47f2 0055  ld   $55
              47f3 00fd  ld   $fd
              47f4 0055  ld   $55
              47f5 0005  ld   $05
              47f6 00c3  ld   $c3
              47f7 0030  ld   $30
              47f8 000c  ld   $0c
              47f9 00c3  ld   $c3
              47fa 0030  ld   $30
              47fb fe00  bra  ac          ;+-----------------------------------+
              47fc fcfd  bra  $47fd       ;|                                   |
              47fd 1418  ld   $18,y       ;| Trampoline for page $4700 lookups |
              47fe e006  jmp  y,$06       ;|                                   |
              47ff c218  st   [$18]       ;+-----------------------------------+
              4800 00f0  ld   $f0
              4801 0083  ld   $83
              4802 0081  ld   $81
              4803 0065  ld   $65
              4804 0005  ld   $05
              4805 0020  ld   $20
              4806 0008  ld   $08
              4807 00fc  ld   $fc
              4808 0030  ld   $30
              4809 000c  ld   $0c
              480a 00c3  ld   $c3
              480b 0030  ld   $30
              480c 006c  ld   $6c
              480d 00fc  ld   $fc
              480e 006f  ld   $6f
              480f 0060  ld   $60
              4810 0004  ld   $04
              4811 0046  ld   $46
              4812 0060  ld   $60
              4813 0004  ld   $04
              4814 0046  ld   $46
              4815 0060  ld   $60
              4816 0004  ld   $04
              4817 00c6  ld   $c6
              4818 006f  ld   $6f
              4819 002c  ld   $2c
              481a 0056  ld   $56
              481b 00f0  ld   $f0
              481c 0006  ld   $06
              481d 0030  ld   $30
              481e 000c  ld   $0c
              481f 00c3  ld   $c3
              4820 0030  ld   $30
              4821 000c  ld   $0c
              4822 00c3  ld   $c3
              4823 0030  ld   $30
              4824 000c  ld   $0c
              4825 00c3  ld   $c3
              4826 0030  ld   $30
              4827 000c  ld   $0c
              4828 00c3  ld   $c3
              4829 0030  ld   $30
              482a 000c  ld   $0c
              482b 00c3  ld   $c3
              482c 0030  ld   $30
              482d 000c  ld   $0c
              482e 00c3  ld   $c3
              482f 0030  ld   $30
              4830 000c  ld   $0c
              4831 00c3  ld   $c3
              4832 0030  ld   $30
              4833 000c  ld   $0c
              4834 00c3  ld   $c3
              4835 0030  ld   $30
              4836 000c  ld   $0c
              4837 00c3  ld   $c3
              4838 0070  ld   $70
              4839 00a5  ld   $a5
              483a 00fe  ld   $fe
              483b 00ea  ld   $ea
              483c 000f  ld   $0f
              483d 00ab  ld   $ab
              483e 006a  ld   $6a
              483f 00a5  ld   $a5
              4840 0056  ld   $56
              4841 002a  ld   $2a
              4842 001c  ld   $1c
              4843 0058  ld   $58
              4844 0081  ld   $81
              4845 0015  ld   $15
              4846 0058  ld   $58
              4847 0011  ld   $11
              4848 000c  ld   $0c
              4849 00c3  ld   $c3
              484a 0030  ld   $30
              484b 000c  ld   $0c
              484c 00c3  ld   $c3
              484d 00f0  ld   $f0
              484e 000b  ld   $0b
              484f 00bf  ld   $bf
              4850 003f  ld   $3f
              4851 00fc  ld   $fc
              4852 00c2  ld   $c2
              4853 00ff  ld   $ff
              4854 000f  ld   $0f
              4855 00bf  ld   $bf
              4856 0030  ld   $30
              4857 000c  ld   $0c
              4858 00c3  ld   $c3
              4859 0030  ld   $30
              485a 000c  ld   $0c
              485b 00c3  ld   $c3
              485c 0030  ld   $30
              485d 00ac  ld   $ac
              485e 0069  ld   $69
              485f 0055  ld   $55
              4860 0055  ld   $55
              4861 0055  ld   $55
              4862 0096  ld   $96
              4863 00aa  ld   $aa
              4864 005a  ld   $5a
              4865 00aa  ld   $aa
              4866 006a  ld   $6a
              4867 00a9  ld   $a9
              4868 0096  ld   $96
              4869 00aa  ld   $aa
              486a 00aa  ld   $aa
              486b 0096  ld   $96
              486c 00aa  ld   $aa
              486d 005a  ld   $5a
              486e 0055  ld   $55
              486f 0055  ld   $55
              4870 0055  ld   $55
              4871 009a  ld   $9a
              4872 0006  ld   $06
              4873 00c3  ld   $c3
              4874 0030  ld   $30
              4875 000c  ld   $0c
              4876 00c3  ld   $c3
              4877 0030  ld   $30
              4878 00ac  ld   $ac
              4879 00fe  ld   $fe
              487a 0030  ld   $30
              487b 000c  ld   $0c
              487c 00c3  ld   $c3
              487d 0030  ld   $30
              487e 00ac  ld   $ac
              487f 00fe  ld   $fe
              4880 0030  ld   $30
              4881 000c  ld   $0c
              4882 00c3  ld   $c3
              4883 00b0  ld   $b0
              4884 00fa  ld   $fa
              4885 00c3  ld   $c3
              4886 0030  ld   $30
              4887 000c  ld   $0c
              4888 00c3  ld   $c3
              4889 0030  ld   $30
              488a 000c  ld   $0c
              488b 00c3  ld   $c3
              488c 0030  ld   $30
              488d 0000  ld   $00
              488e 0000  ld   $00
              488f 0000  ld   $00
              * 5 times
              4892 0055  ld   $55
              4893 0055  ld   $55
              4894 0055  ld   $55
              4895 0055  ld   $55
              4896 00a5  ld   $a5
              4897 00aa  ld   $aa
              4898 00aa  ld   $aa
              4899 00aa  ld   $aa
              489a 00fe  ld   $fe
              489b 00ff  ld   $ff
              489c 00ff  ld   $ff
              489d 00ff  ld   $ff
              * 6 times
              48a1 0030  ld   $30
              48a2 000c  ld   $0c
              48a3 00c3  ld   $c3
              48a4 00e9  ld   $e9
              48a5 001a  ld   $1a
              48a6 00a4  ld   $a4
              48a7 0041  ld   $41
              48a8 00b0  ld   $b0
              48a9 00ae  ld   $ae
              48aa 0030  ld   $30
              48ab 000c  ld   $0c
              48ac 00c3  ld   $c3
              48ad 00b0  ld   $b0
              48ae 00ae  ld   $ae
              48af 00fe  ld   $fe
              48b0 00ba  ld   $ba
              48b1 00fa  ld   $fa
              48b2 00ab  ld   $ab
              48b3 00fa  ld   $fa
              48b4 00af  ld   $af
              48b5 00aa  ld   $aa
              48b6 00bf  ld   $bf
              48b7 00ae  ld   $ae
              48b8 00fe  ld   $fe
              48b9 00aa  ld   $aa
              48ba 000e  ld   $0e
              48bb 00c3  ld   $c3
              48bc 0030  ld   $30
              48bd 000c  ld   $0c
              48be 00c3  ld   $c3
              48bf 00c0  ld   $c0
              48c0 001b  ld   $1b
              48c1 0004  ld   $04
              48c2 0041  ld   $41
              48c3 0010  ld   $10
              48c4 0004  ld   $04
              48c5 0041  ld   $41
              48c6 0000  ld   $00
              48c7 0003  ld   $03
              48c8 0030  ld   $30
              48c9 000c  ld   $0c
              48ca 00c3  ld   $c3
              48cb 0030  ld   $30
              48cc 00bc  ld   $bc
              48cd 00bc  ld   $bc
              48ce 00bf  ld   $bf
              48cf 00f1  ld   $f1
              48d0 001a  ld   $1a
              48d1 008b  ld   $8b
              48d2 00b1  ld   $b1
              48d3 0018  ld   $18
              48d4 008b  ld   $8b
              48d5 00b1  ld   $b1
              48d6 0018  ld   $18
              48d7 00c1  ld   $c1
              48d8 00bb  ld   $bb
              48d9 0058  ld   $58
              48da 0046  ld   $46
              48db 00f0  ld   $f0
              48dc 0007  ld   $07
              48dd 0030  ld   $30
              48de 000c  ld   $0c
              48df 00c3  ld   $c3
              48e0 0030  ld   $30
              48e1 000c  ld   $0c
              48e2 00c3  ld   $c3
              48e3 0030  ld   $30
              48e4 000c  ld   $0c
              48e5 00c3  ld   $c3
              48e6 0030  ld   $30
              48e7 000c  ld   $0c
              48e8 00c3  ld   $c3
              48e9 0030  ld   $30
              48ea 000c  ld   $0c
              48eb 00c3  ld   $c3
              48ec 0030  ld   $30
              48ed 000c  ld   $0c
              48ee 00c3  ld   $c3
              48ef 0030  ld   $30
              48f0 000c  ld   $0c
              48f1 00c3  ld   $c3
              48f2 0030  ld   $30
              48f3 000c  ld   $0c
              48f4 00c3  ld   $c3
              48f5 0030  ld   $30
              48f6 000c  ld   $0c
              48f7 00c3  ld   $c3
              48f8 00b0  ld   $b0
              48f9 005a  ld   $5a
              48fa 00a9  ld   $a9
              48fb fe00  bra  ac          ;+-----------------------------------+
              48fc fcfd  bra  $48fd       ;|                                   |
              48fd 1418  ld   $18,y       ;| Trampoline for page $4800 lookups |
              48fe e006  jmp  y,$06       ;|                                   |
              48ff c218  st   [$18]       ;+-----------------------------------+
              4900 00bf  ld   $bf
              4901 000a  ld   $0a
              4902 00ab  ld   $ab
              4903 0095  ld   $95
              4904 005a  ld   $5a
              4905 00a9  ld   $a9
              4906 002a  ld   $2a
              4907 001c  ld   $1c
              4908 0004  ld   $04
              4909 0041  ld   $41
              490a 0010  ld   $10
              490b 0044  ld   $44
              490c 0011  ld   $11
              490d 000c  ld   $0c
              490e 00c3  ld   $c3
              490f 0030  ld   $30
              4910 000c  ld   $0c
              4911 00c3  ld   $c3
              4912 0070  ld   $70
              4913 00f4  ld   $f4
              4914 00fe  ld   $fe
              4915 0030  ld   $30
              4916 00fc  ld   $fc
              4917 00c2  ld   $c2
              4918 00f0  ld   $f0
              4919 00ff  ld   $ff
              491a 004b  ld   $4b
              491b 0030  ld   $30
              491c 000c  ld   $0c
              491d 00c3  ld   $c3
              491e 0030  ld   $30
              491f 000c  ld   $0c
              4920 00c3  ld   $c3
              4921 0030  ld   $30
              4922 00ac  ld   $ac
              4923 0069  ld   $69
              4924 009a  ld   $9a
              4925 00aa  ld   $aa
              4926 006a  ld   $6a
              4927 0016  ld   $16
              4928 00a5  ld   $a5
              4929 005a  ld   $5a
              492a 00aa  ld   $aa
              492b 0061  ld   $61
              492c 00a9  ld   $a9
              492d 0056  ld   $56
              492e 0065  ld   $65
              492f 00a8  ld   $a8
              4930 0056  ld   $56
              4931 0095  ld   $95
              4932 005a  ld   $5a
              4933 009a  ld   $9a
              4934 00aa  ld   $aa
              4935 006a  ld   $6a
              4936 009a  ld   $9a
              4937 0006  ld   $06
              4938 00c3  ld   $c3
              4939 0030  ld   $30
              493a 000c  ld   $0c
              493b 00c3  ld   $c3
              493c 0030  ld   $30
              493d 00ac  ld   $ac
              493e 00fe  ld   $fe
              493f 0030  ld   $30
              4940 000c  ld   $0c
              4941 00c3  ld   $c3
              4942 0030  ld   $30
              4943 00ac  ld   $ac
              4944 00fe  ld   $fe
              4945 0030  ld   $30
              4946 000c  ld   $0c
              4947 00c3  ld   $c3
              4948 00b0  ld   $b0
              4949 00fa  ld   $fa
              494a 00c3  ld   $c3
              494b 0030  ld   $30
              494c 000c  ld   $0c
              494d 00c3  ld   $c3
              494e 0030  ld   $30
              494f 000c  ld   $0c
              4950 00c3  ld   $c3
              4951 0030  ld   $30
              4952 000c  ld   $0c
              4953 0003  ld   $03
              4954 0000  ld   $00
              4955 0000  ld   $00
              4956 0000  ld   $00
              * 5 times
              4959 0054  ld   $54
              495a 0055  ld   $55
              495b 0055  ld   $55
              495c 0055  ld   $55
              495d 0055  ld   $55
              495e 00a5  ld   $a5
              495f 00aa  ld   $aa
              4960 00aa  ld   $aa
              4961 00fa  ld   $fa
              4962 00ff  ld   $ff
              4963 00ff  ld   $ff
              4964 000f  ld   $0f
              4965 00c3  ld   $c3
              4966 0030  ld   $30
              4967 000c  ld   $0c
              4968 00c3  ld   $c3
              4969 00eb  ld   $eb
              496a 001a  ld   $1a
              496b 0004  ld   $04
              496c 0069  ld   $69
              496d 00b0  ld   $b0
              496e 00a6  ld   $a6
              496f 0030  ld   $30
              4970 000c  ld   $0c
              4971 00c3  ld   $c3
              4972 0070  ld   $70
              4973 0055  ld   $55
              4974 00fd  ld   $fd
              4975 0055  ld   $55
              4976 00f5  ld   $f5
              4977 0057  ld   $57
              4978 00d5  ld   $d5
              4979 005f  ld   $5f
              497a 0055  ld   $55
              497b 007f  ld   $7f
              497c 0055  ld   $55
              497d 00fd  ld   $fd
              497e 0055  ld   $55
              497f 0005  ld   $05
              4980 00c3  ld   $c3
              4981 0030  ld   $30
              4982 000c  ld   $0c
              4983 00c3  ld   $c3
              4984 0030  ld   $30
              4985 000c  ld   $0c
              4986 0007  ld   $07
              4987 0096  ld   $96
              4988 0065  ld   $65
              4989 0059  ld   $59
              498a 0001  ld   $01
              498b 000c  ld   $0c
              498c 00c3  ld   $c3
              498d 0030  ld   $30
              498e 000c  ld   $0c
              498f 00c3  ld   $c3
              4990 0030  ld   $30
              4991 006c  ld   $6c
              4992 00fc  ld   $fc
              4993 006f  ld   $6f
              4994 0060  ld   $60
              4995 002c  ld   $2c
              4996 00c6  ld   $c6
              4997 0062  ld   $62
              4998 002c  ld   $2c
              4999 00c6  ld   $c6
              499a 0062  ld   $62
              499b 002c  ld   $2c
              499c 00c6  ld   $c6
              499d 006f  ld   $6f
              499e 0019  ld   $19
              499f 0056  ld   $56
              49a0 00f0  ld   $f0
              49a1 0006  ld   $06
              49a2 0030  ld   $30
              49a3 000c  ld   $0c
              49a4 00c3  ld   $c3
              49a5 0030  ld   $30
              49a6 000c  ld   $0c
              49a7 00c3  ld   $c3
              49a8 0030  ld   $30
              49a9 000c  ld   $0c
              49aa 00c3  ld   $c3
              49ab 0030  ld   $30
              49ac 000c  ld   $0c
              49ad 00c3  ld   $c3
              49ae 0030  ld   $30
              49af 000c  ld   $0c
              49b0 00c3  ld   $c3
              49b1 0030  ld   $30
              49b2 000c  ld   $0c
              49b3 00c3  ld   $c3
              49b4 0030  ld   $30
              49b5 000c  ld   $0c
              49b6 00c3  ld   $c3
              49b7 0030  ld   $30
              49b8 000c  ld   $0c
              49b9 00c3  ld   $c3
              49ba 0030  ld   $30
              49bb 000c  ld   $0c
              49bc 00c3  ld   $c3
              49bd 0070  ld   $70
              49be 00a5  ld   $a5
              49bf 00fe  ld   $fe
              49c0 00ea  ld   $ea
              49c1 000f  ld   $0f
              49c2 00ab  ld   $ab
              49c3 006a  ld   $6a
              49c4 00a5  ld   $a5
              49c5 0056  ld   $56
              49c6 002a  ld   $2a
              49c7 001c  ld   $1c
              49c8 0058  ld   $58
              49c9 0081  ld   $81
              49ca 0015  ld   $15
              49cb 0058  ld   $58
              49cc 0011  ld   $11
              49cd 000c  ld   $0c
              49ce 00c3  ld   $c3
              49cf 0030  ld   $30
              49d0 000c  ld   $0c
              49d1 00c3  ld   $c3
              49d2 0030  ld   $30
              49d3 00fc  ld   $fc
              49d4 00bf  ld   $bf
              49d5 0030  ld   $30
              49d6 00fc  ld   $fc
              49d7 00c2  ld   $c2
              49d8 00f0  ld   $f0
              49d9 00fb  ld   $fb
              49da 00c3  ld   $c3
              49db 0030  ld   $30
              49dc 000c  ld   $0c
              49dd 00c3  ld   $c3
              49de 0030  ld   $30
              49df 000c  ld   $0c
              49e0 00c3  ld   $c3
              49e1 0030  ld   $30
              49e2 005c  ld   $5c
              49e3 00a9  ld   $a9
              49e4 0069  ld   $69
              49e5 0055  ld   $55
              49e6 0055  ld   $55
              49e7 0029  ld   $29
              49e8 0055  ld   $55
              49e9 0055  ld   $55
              49ea 0055  ld   $55
              49eb 0055  ld   $55
              49ec 0051  ld   $51
              49ed 0054  ld   $54
              49ee 0055  ld   $55
              49ef 0055  ld   $55
              49f0 0014  ld   $14
              49f1 0090  ld   $90
              49f2 0052  ld   $52
              49f3 0055  ld   $55
              49f4 0055  ld   $55
              49f5 0055  ld   $55
              49f6 006a  ld   $6a
              49f7 0005  ld   $05
              49f8 00c3  ld   $c3
              49f9 0030  ld   $30
              49fa 000c  ld   $0c
              49fb fe00  bra  ac          ;+-----------------------------------+
              49fc fcfd  bra  $49fd       ;|                                   |
              49fd 1418  ld   $18,y       ;| Trampoline for page $4900 lookups |
              49fe e006  jmp  y,$06       ;|                                   |
              49ff c218  st   [$18]       ;+-----------------------------------+
              4a00 00c3  ld   $c3
              4a01 0030  ld   $30
              4a02 00ac  ld   $ac
              4a03 00fe  ld   $fe
              4a04 0030  ld   $30
              4a05 000c  ld   $0c
              4a06 00c3  ld   $c3
              4a07 0030  ld   $30
              4a08 00ac  ld   $ac
              4a09 00fe  ld   $fe
              4a0a 0030  ld   $30
              4a0b 000c  ld   $0c
              4a0c 00c3  ld   $c3
              4a0d 00b0  ld   $b0
              4a0e 00fa  ld   $fa
              4a0f 00c3  ld   $c3
              4a10 0030  ld   $30
              4a11 000c  ld   $0c
              4a12 00c3  ld   $c3
              4a13 0030  ld   $30
              4a14 000c  ld   $0c
              4a15 00c3  ld   $c3
              4a16 0030  ld   $30
              4a17 000c  ld   $0c
              4a18 00c3  ld   $c3
              4a19 0030  ld   $30
              4a1a 0000  ld   $00
              4a1b 0000  ld   $00
              4a1c 0000  ld   $00
              * 8 times
              4a22 0040  ld   $40
              4a23 0055  ld   $55
              4a24 0055  ld   $55
              4a25 0055  ld   $55
              * 5 times
              4a28 0030  ld   $30
              4a29 000c  ld   $0c
              4a2a 00c3  ld   $c3
              4a2b 0030  ld   $30
              4a2c 000c  ld   $0c
              4a2d 00c3  ld   $c3
              4a2e 00e9  ld   $e9
              4a2f 001a  ld   $1a
              4a30 00a4  ld   $a4
              4a31 0041  ld   $41
              4a32 00b0  ld   $b0
              4a33 00ae  ld   $ae
              4a34 0030  ld   $30
              4a35 000c  ld   $0c
              4a36 00c3  ld   $c3
              4a37 00b0  ld   $b0
              4a38 004a  ld   $4a
              4a39 00d3  ld   $d3
              4a3a 0034  ld   $34
              4a3b 004d  ld   $4d
              4a3c 00d3  ld   $d3
              4a3d 0034  ld   $34
              4a3e 004d  ld   $4d
              4a3f 00d3  ld   $d3
              4a40 0034  ld   $34
              4a41 004d  ld   $4d
              4a42 00d3  ld   $d3
              4a43 00b4  ld   $b4
              4a44 000a  ld   $0a
              4a45 00c3  ld   $c3
              4a46 0030  ld   $30
              4a47 000c  ld   $0c
              4a48 00c3  ld   $c3
              4a49 0030  ld   $30
              4a4a 000c  ld   $0c
              4a4b 0007  ld   $07
              4a4c 0096  ld   $96
              4a4d 0045  ld   $45
              4a4e 0058  ld   $58
              4a4f 0001  ld   $01
              4a50 000c  ld   $0c
              4a51 00c3  ld   $c3
              4a52 0030  ld   $30
              4a53 000c  ld   $0c
              4a54 00c3  ld   $c3
              4a55 0030  ld   $30
              4a56 00bc  ld   $bc
              4a57 00bc  ld   $bc
              4a58 00bf  ld   $bf
              4a59 0011  ld   $11
              4a5a 0018  ld   $18
              4a5b 0081  ld   $81
              4a5c 0011  ld   $11
              4a5d 0018  ld   $18
              4a5e 0081  ld   $81
              4a5f 0011  ld   $11
              4a60 0018  ld   $18
              4a61 00c1  ld   $c1
              4a62 001b  ld   $1b
              4a63 0004  ld   $04
              4a64 0041  ld   $41
              4a65 00f0  ld   $f0
              4a66 0007  ld   $07
              4a67 0030  ld   $30
              4a68 000c  ld   $0c
              4a69 00c3  ld   $c3
              4a6a 0030  ld   $30
              4a6b 000c  ld   $0c
              4a6c 00fc  ld   $fc
              4a6d 0030  ld   $30
              4a6e 000c  ld   $0c
              4a6f 00ff  ld   $ff
              4a70 003f  ld   $3f
              4a71 000c  ld   $0c
              4a72 00c3  ld   $c3
              4a73 003f  ld   $3f
              4a74 00f0  ld   $f0
              4a75 00c3  ld   $c3
              4a76 0030  ld   $30
              4a77 000c  ld   $0c
              4a78 00ff  ld   $ff
              4a79 00c0  ld   $c0
              4a7a 000f  ld   $0f
              4a7b 00c3  ld   $c3
              4a7c 00ff  ld   $ff
              4a7d 000f  ld   $0f
              4a7e 00c3  ld   $c3
              4a7f 0030  ld   $30
              4a80 000c  ld   $0c
              4a81 00c3  ld   $c3
              4a82 00b0  ld   $b0
              4a83 005a  ld   $5a
              4a84 00a9  ld   $a9
              4a85 00bf  ld   $bf
              4a86 000a  ld   $0a
              4a87 00ab  ld   $ab
              4a88 0095  ld   $95
              4a89 005a  ld   $5a
              4a8a 00a9  ld   $a9
              4a8b 002a  ld   $2a
              4a8c 001c  ld   $1c
              4a8d 0004  ld   $04
              4a8e 0041  ld   $41
              4a8f 0010  ld   $10
              4a90 0044  ld   $44
              4a91 0011  ld   $11
              4a92 000c  ld   $0c
              4a93 00c3  ld   $c3
              4a94 0030  ld   $30
              4a95 000c  ld   $0c
              4a96 00c3  ld   $c3
              4a97 00f0  ld   $f0
              4a98 00ff  ld   $ff
              4a99 004b  ld   $4b
              4a9a 00ff  ld   $ff
              4a9b 00fb  ld   $fb
              4a9c 00bf  ld   $bf
              4a9d 00bf  ld   $bf
              4a9e 00f4  ld   $f4
              4a9f 00ff  ld   $ff
              4aa0 0030  ld   $30
              4aa1 000c  ld   $0c
              4aa2 00c3  ld   $c3
              4aa3 0030  ld   $30
              4aa4 000c  ld   $0c
              4aa5 00c3  ld   $c3
              4aa6 0030  ld   $30
              4aa7 00ac  ld   $ac
              4aa8 00aa  ld   $aa
              4aa9 00aa  ld   $aa
              4aaa 005a  ld   $5a
              4aab 00a9  ld   $a9
              4aac 00aa  ld   $aa
              4aad 00aa  ld   $aa
              4aae 00aa  ld   $aa
              * 5 times
              4ab1 006a  ld   $6a
              4ab2 009a  ld   $9a
              4ab3 00aa  ld   $aa
              4ab4 00aa  ld   $aa
              4ab5 00aa  ld   $aa
              * 5 times
              4ab8 006a  ld   $6a
              4ab9 00a5  ld   $a5
              4aba 0069  ld   $69
              4abb 009a  ld   $9a
              4abc 0006  ld   $06
              4abd 00c3  ld   $c3
              4abe 0030  ld   $30
              4abf 000c  ld   $0c
              4ac0 00c3  ld   $c3
              4ac1 0030  ld   $30
              4ac2 00ac  ld   $ac
              4ac3 00fe  ld   $fe
              4ac4 0030  ld   $30
              4ac5 000c  ld   $0c
              4ac6 00c3  ld   $c3
              4ac7 0030  ld   $30
              4ac8 00ac  ld   $ac
              4ac9 00fe  ld   $fe
              4aca 0030  ld   $30
              4acb 000c  ld   $0c
              4acc 00c3  ld   $c3
              4acd 00b0  ld   $b0
              4ace 00fa  ld   $fa
              4acf 00c3  ld   $c3
              4ad0 0030  ld   $30
              4ad1 000c  ld   $0c
              4ad2 00c3  ld   $c3
              4ad3 0030  ld   $30
              4ad4 000c  ld   $0c
              4ad5 00c3  ld   $c3
              4ad6 0030  ld   $30
              4ad7 000c  ld   $0c
              4ad8 00c3  ld   $c3
              4ad9 0030  ld   $30
              4ada 000c  ld   $0c
              4adb 0003  ld   $03
              4adc 0000  ld   $00
              4add 0000  ld   $00
              4ade 0000  ld   $00
              * 11 times
              4ae7 00c3  ld   $c3
              4ae8 0030  ld   $30
              4ae9 000c  ld   $0c
              4aea 00c3  ld   $c3
              4aeb 0030  ld   $30
              4aec 000c  ld   $0c
              4aed 00c3  ld   $c3
              4aee 00eb  ld   $eb
              4aef 001a  ld   $1a
              4af0 0004  ld   $04
              4af1 0069  ld   $69
              4af2 00b0  ld   $b0
              4af3 00a6  ld   $a6
              4af4 0030  ld   $30
              4af5 000c  ld   $0c
              4af6 00c3  ld   $c3
              4af7 0070  ld   $70
              4af8 0005  ld   $05
              4af9 00c3  ld   $c3
              4afa 00fe  ld   $fe
              4afb fe00  bra  ac          ;+-----------------------------------+
              4afc fcfd  bra  $4afd       ;|                                   |
              4afd 1418  ld   $18,y       ;| Trampoline for page $4a00 lookups |
              4afe e006  jmp  y,$06       ;|                                   |
              4aff c218  st   [$18]       ;+-----------------------------------+
              4b00 00ef  ld   $ef
              4b01 00ff  ld   $ff
              4b02 00fe  ld   $fe
              4b03 00ef  ld   $ef
              4b04 00ff  ld   $ff
              4b05 00fe  ld   $fe
              4b06 00ef  ld   $ef
              4b07 00c3  ld   $c3
              4b08 0070  ld   $70
              4b09 0005  ld   $05
              4b0a 00c3  ld   $c3
              4b0b 0030  ld   $30
              4b0c 000c  ld   $0c
              4b0d 00c3  ld   $c3
              4b0e 0030  ld   $30
              4b0f 000c  ld   $0c
              4b10 0007  ld   $07
              4b11 0084  ld   $84
              4b12 0065  ld   $65
              4b13 0059  ld   $59
              4b14 0001  ld   $01
              4b15 000c  ld   $0c
              4b16 00c3  ld   $c3
              4b17 0030  ld   $30
              4b18 000c  ld   $0c
              4b19 00c3  ld   $c3
              4b1a 0030  ld   $30
              4b1b 006c  ld   $6c
              4b1c 00fc  ld   $fc
              4b1d 00ef  ld   $ef
              4b1e 00ff  ld   $ff
              4b1f 00fe  ld   $fe
              4b20 00ef  ld   $ef
              4b21 00ff  ld   $ff
              4b22 00fe  ld   $fe
              4b23 00ef  ld   $ef
              4b24 00ff  ld   $ff
              4b25 00fe  ld   $fe
              4b26 00ef  ld   $ef
              4b27 00ff  ld   $ff
              4b28 00fe  ld   $fe
              4b29 00ef  ld   $ef
              4b2a 00ff  ld   $ff
              4b2b 0006  ld   $06
              4b2c 0030  ld   $30
              4b2d 000c  ld   $0c
              4b2e 00c3  ld   $c3
              4b2f 000c  ld   $0c
              4b30 00f3  ld   $f3
              4b31 0003  ld   $03
              4b32 000c  ld   $0c
              4b33 00c3  ld   $c3
              4b34 0030  ld   $30
              4b35 000c  ld   $0c
              4b36 00c3  ld   $c3
              4b37 0030  ld   $30
              4b38 00cc  ld   $cc
              4b39 00ff  ld   $ff
              4b3a 0033  ld   $33
              4b3b 000c  ld   $0c
              4b3c 00c3  ld   $c3
              4b3d 0000  ld   $00
              4b3e 003f  ld   $3f
              4b3f 00c3  ld   $c3
              4b40 0030  ld   $30
              4b41 000c  ld   $0c
              4b42 00c3  ld   $c3
              4b43 0030  ld   $30
              4b44 000c  ld   $0c
              4b45 000c  ld   $0c
              4b46 00c3  ld   $c3
              4b47 0070  ld   $70
              4b48 00a5  ld   $a5
              4b49 00fe  ld   $fe
              4b4a 00ea  ld   $ea
              4b4b 000f  ld   $0f
              4b4c 00ab  ld   $ab
              4b4d 006a  ld   $6a
              4b4e 00a5  ld   $a5
              4b4f 0056  ld   $56
              4b50 002a  ld   $2a
              4b51 001c  ld   $1c
              4b52 0058  ld   $58
              4b53 0081  ld   $81
              4b54 0015  ld   $15
              4b55 0058  ld   $58
              4b56 0011  ld   $11
              4b57 000c  ld   $0c
              4b58 00c3  ld   $c3
              4b59 0030  ld   $30
              4b5a 000c  ld   $0c
              4b5b 00c3  ld   $c3
              4b5c 00f0  ld   $f0
              4b5d 000f  ld   $0f
              4b5e 00c3  ld   $c3
              4b5f 0052  ld   $52
              4b60 0024  ld   $24
              4b61 0005  ld   $05
              4b62 0012  ld   $12
              4b63 000c  ld   $0c
              4b64 00ff  ld   $ff
              4b65 0030  ld   $30
              4b66 000c  ld   $0c
              4b67 00c3  ld   $c3
              4b68 0030  ld   $30
              4b69 000c  ld   $0c
              4b6a 00c3  ld   $c3
              4b6b 0030  ld   $30
              4b6c 005c  ld   $5c
              4b6d 0055  ld   $55
              4b6e 0055  ld   $55
              4b6f 0055  ld   $55
              4b70 0055  ld   $55
              4b71 0015  ld   $15
              4b72 0055  ld   $55
              4b73 00a9  ld   $a9
              4b74 0095  ld   $95
              4b75 00aa  ld   $aa
              4b76 00aa  ld   $aa
              4b77 00aa  ld   $aa
              4b78 001a  ld   $1a
              4b79 0054  ld   $54
              4b7a 0041  ld   $41
              4b7b 0055  ld   $55
              4b7c 0055  ld   $55
              4b7d 0055  ld   $55
              4b7e 0055  ld   $55
              4b7f 0005  ld   $05
              4b80 0095  ld   $95
              4b81 000a  ld   $0a
              4b82 00c3  ld   $c3
              4b83 0030  ld   $30
              4b84 00cc  ld   $cc
              4b85 0030  ld   $30
              4b86 008c  ld   $8c
              4b87 00fa  ld   $fa
              4b88 00ff  ld   $ff
              4b89 003f  ld   $3f
              4b8a 00c3  ld   $c3
              4b8b 0030  ld   $30
              4b8c 008c  ld   $8c
              4b8d 00fa  ld   $fa
              4b8e 00ff  ld   $ff
              4b8f 003f  ld   $3f
              4b90 00c3  ld   $c3
              4b91 0030  ld   $30
              4b92 00ea  ld   $ea
              4b93 00ff  ld   $ff
              4b94 00ff  ld   $ff
              4b95 000c  ld   $0c
              4b96 00c3  ld   $c3
              4b97 00c0  ld   $c0
              4b98 0030  ld   $30
              4b99 000c  ld   $0c
              4b9a 00c3  ld   $c3
              4b9b 0030  ld   $30
              4b9c 000c  ld   $0c
              4b9d 00c3  ld   $c3
              4b9e 0030  ld   $30
              4b9f 000c  ld   $0c
              4ba0 00c3  ld   $c3
              4ba1 0030  ld   $30
              4ba2 0000  ld   $00
              4ba3 0000  ld   $00
              4ba4 0000  ld   $00
              * 8 times
              4baa 0015  ld   $15
              4bab 000c  ld   $0c
              4bac 00c3  ld   $c3
              4bad 0030  ld   $30
              4bae 000c  ld   $0c
              4baf 00c3  ld   $c3
              4bb0 0030  ld   $30
              4bb1 000c  ld   $0c
              4bb2 00c3  ld   $c3
              4bb3 00e9  ld   $e9
              4bb4 001a  ld   $1a
              4bb5 00a4  ld   $a4
              4bb6 0041  ld   $41
              4bb7 00b0  ld   $b0
              4bb8 00ae  ld   $ae
              4bb9 0030  ld   $30
              4bba 000c  ld   $0c
              4bbb 00c3  ld   $c3
              4bbc 0070  ld   $70
              4bbd 00f5  ld   $f5
              4bbe 00fb  ld   $fb
              4bbf 00bf  ld   $bf
              4bc0 00af  ld   $af
              4bc1 00aa  ld   $aa
              4bc2 00aa  ld   $aa
              4bc3 00aa  ld   $aa
              * 5 times
              4bc6 00fa  ld   $fa
              4bc7 00fb  ld   $fb
              4bc8 007f  ld   $7f
              4bc9 0005  ld   $05
              4bca 00c3  ld   $c3
              4bcb 0030  ld   $30
              4bcc 000c  ld   $0c
              4bcd 00c3  ld   $c3
              4bce 0030  ld   $30
              4bcf 000c  ld   $0c
              4bd0 0007  ld   $07
              4bd1 0084  ld   $84
              4bd2 0065  ld   $65
              4bd3 0059  ld   $59
              4bd4 0001  ld   $01
              4bd5 000c  ld   $0c
              4bd6 00c3  ld   $c3
              4bd7 0030  ld   $30
              4bd8 000c  ld   $0c
              4bd9 00c3  ld   $c3
              4bda 0030  ld   $30
              4bdb 00bc  ld   $bc
              4bdc 00bc  ld   $bc
              4bdd 0000  ld   $00
              4bde 0000  ld   $00
              4bdf 0000  ld   $00
              * 13 times
              4bea 00f0  ld   $f0
              4beb 0007  ld   $07
              4bec 0030  ld   $30
              4bed 000c  ld   $0c
              4bee 0033  ld   $33
              4bef 0008  ld   $08
              4bf0 0082  ld   $82
              4bf1 0020  ld   $20
              4bf2 0008  ld   $08
              4bf3 0082  ld   $82
              4bf4 0020  ld   $20
              4bf5 0008  ld   $08
              4bf6 0082  ld   $82
              4bf7 0020  ld   $20
              4bf8 0008  ld   $08
              4bf9 0082  ld   $82
              4bfa 0020  ld   $20
              4bfb fe00  bra  ac          ;+-----------------------------------+
              4bfc fcfd  bra  $4bfd       ;|                                   |
              4bfd 1418  ld   $18,y       ;| Trampoline for page $4b00 lookups |
              4bfe e006  jmp  y,$06       ;|                                   |
              4bff c218  st   [$18]       ;+-----------------------------------+
              4c00 0008  ld   $08
              4c01 0082  ld   $82
              4c02 0020  ld   $20
              4c03 0008  ld   $08
              4c04 0082  ld   $82
              4c05 0020  ld   $20
              4c06 0008  ld   $08
              4c07 0082  ld   $82
              4c08 0020  ld   $20
              4c09 0008  ld   $08
              4c0a 0003  ld   $03
              4c0b 00c3  ld   $c3
              4c0c 00b0  ld   $b0
              4c0d 005a  ld   $5a
              4c0e 00a9  ld   $a9
              4c0f 00bf  ld   $bf
              4c10 000a  ld   $0a
              4c11 00ab  ld   $ab
              4c12 00aa  ld   $aa
              4c13 00aa  ld   $aa
              4c14 00aa  ld   $aa
              4c15 002a  ld   $2a
              4c16 001c  ld   $1c
              4c17 0004  ld   $04
              4c18 0041  ld   $41
              4c19 0010  ld   $10
              4c1a 0044  ld   $44
              4c1b 0011  ld   $11
              4c1c 000c  ld   $0c
              4c1d 00c3  ld   $c3
              4c1e 0030  ld   $30
              4c1f 000c  ld   $0c
              4c20 00ff  ld   $ff
              4c21 00ff  ld   $ff
              4c22 00ff  ld   $ff
              * 11 times
              4c2b 000f  ld   $0f
              4c2c 00c3  ld   $c3
              4c2d 0030  ld   $30
              4c2e 000c  ld   $0c
              4c2f 00c3  ld   $c3
              4c30 0030  ld   $30
              4c31 005c  ld   $5c
              4c32 0014  ld   $14
              4c33 0045  ld   $45
              4c34 0051  ld   $51
              4c35 0014  ld   $14
              4c36 0045  ld   $45
              4c37 0051  ld   $51
              4c38 0014  ld   $14
              4c39 0045  ld   $45
              4c3a 0051  ld   $51
              4c3b 0014  ld   $14
              4c3c 0045  ld   $45
              4c3d 0051  ld   $51
              4c3e 0014  ld   $14
              4c3f 0045  ld   $45
              4c40 0051  ld   $51
              4c41 0014  ld   $14
              4c42 0045  ld   $45
              4c43 0051  ld   $51
              4c44 0014  ld   $14
              4c45 0045  ld   $45
              4c46 0001  ld   $01
              4c47 00c3  ld   $c3
              4c48 0030  ld   $30
              4c49 0083  ld   $83
              4c4a 0020  ld   $20
              4c4b 0008  ld   $08
              4c4c 0082  ld   $82
              4c4d 0020  ld   $20
              4c4e 0008  ld   $08
              4c4f 0082  ld   $82
              4c50 0020  ld   $20
              4c51 0008  ld   $08
              4c52 0082  ld   $82
              4c53 0020  ld   $20
              4c54 0008  ld   $08
              4c55 0082  ld   $82
              4c56 0020  ld   $20
              4c57 0008  ld   $08
              4c58 0082  ld   $82
              4c59 0020  ld   $20
              4c5a 0008  ld   $08
              4c5b 0082  ld   $82
              4c5c 0030  ld   $30
              4c5d 0030  ld   $30
              4c5e 000c  ld   $0c
              4c5f 00c3  ld   $c3
              4c60 0030  ld   $30
              4c61 000c  ld   $0c
              4c62 00c3  ld   $c3
              4c63 0030  ld   $30
              4c64 000c  ld   $0c
              4c65 00c3  ld   $c3
              4c66 0030  ld   $30
              4c67 000c  ld   $0c
              4c68 0003  ld   $03
              4c69 0000  ld   $00
              4c6a 0000  ld   $00
              4c6b 0000  ld   $00
              * 5 times
              4c6e 00c3  ld   $c3
              4c6f 0015  ld   $15
              4c70 000c  ld   $0c
              4c71 00c3  ld   $c3
              4c72 0030  ld   $30
              4c73 000c  ld   $0c
              4c74 00c3  ld   $c3
              4c75 0030  ld   $30
              4c76 000c  ld   $0c
              4c77 00c3  ld   $c3
              4c78 00eb  ld   $eb
              4c79 001a  ld   $1a
              4c7a 0004  ld   $04         ;End of Apps/Racer/Horizon-256x16.rgb, size 3132
                                          ;+-----------------------------------+
                                          ;| Apps/Racer/Racer_v2.gcl           |
                                          ;+-----------------------------------+
              4c7b dc7a  st   $7a,[y,x++] ;'z'
              4c7c dc69  st   $69,[y,x++] ;'i'
              4c7d dc70  st   $70,[y,x++] ;'p'
              4c7e dc70  st   $70,[y,x++] ;'p'
              4c7f dc65  st   $65,[y,x++] ;'e'
              4c80 dc64  st   $64,[y,x++] ;'d'
              4c81 dc52  st   $52,[y,x++] ;'R'
              4c82 dc61  st   $61,[y,x++] ;'a'
              4c83 003f  ld   $3f
              4c84 c218  st   [$18]
              4c85 0040  ld   $40
              4c86 14dd  ld   $dd,y
              4c87 e06f  jmp  y,$6f
              4c88 c219  st   [$19]
Racer:        4c89 0002  ld   $02         ;| RAM segment address (high byte first)
              4c8a 0000  ld   $00         ;|
              4c8b 00f7  ld   $f7         ;| Length (1..256)
              4c8c 001a  ld   $1a         ;0200 LD
              4c8d 0021  ld   $21
              4c8e 00e6  ld   $e6         ;0202 SUBI
              4c8f 0020  ld   $20
              4c90 0035  ld   $35         ;0204 BCC
              4c91 0053  ld   $53         ;0205 GE
              4c92 000b  ld   $0b
              4c93 0021  ld   $21         ;0207 LDW
              4c94 000e  ld   $0e         ;0207 '_frameCount'
              4c95 00f3  ld   $f3         ;0209 DOKE
              4c96 0017  ld   $17         ;0209 '_vPCH'
              4c97 0090  ld   $90         ;020b BRA
              4c98 0005  ld   $05
              4c99 00cd  ld   $cd         ;020d DEF
              4c9a 0057  ld   $57
              4c9b 00e6  ld   $e6         ;020f SUBI
              4c9c 0052  ld   $52
              4c9d 0035  ld   $35         ;0211 BCC
              4c9e 0053  ld   $53         ;0212 GE
              4c9f 001b  ld   $1b
              4ca0 00e3  ld   $e3         ;0214 ADDI
              4ca1 0032  ld   $32
              4ca2 002b  ld   $2b         ;0216 STW
              4ca3 0030  ld   $30         ;0216 'i'
              4ca4 0011  ld   $11         ;0218 LDWI
              4ca5 0000  ld   $00
              4ca6 0007  ld   $07
              4ca7 0090  ld   $90         ;021b BRA
              4ca8 0020  ld   $20
              4ca9 002b  ld   $2b         ;021d STW
              4caa 0030  ld   $30         ;021d 'i'
              4cab 0011  ld   $11         ;021f LDWI
              4cac 0000  ld   $00
              4cad 0008  ld   $08
              4cae 002b  ld   $2b         ;0222 STW
              4caf 0032  ld   $32         ;0222 'fontData'
              4cb0 0021  ld   $21         ;0224 LDW
              4cb1 0030  ld   $30         ;0224 'i'
              4cb2 00e9  ld   $e9         ;0226 LSLW
              4cb3 00e9  ld   $e9         ;0227 LSLW
              4cb4 0099  ld   $99         ;0228 ADDW
              4cb5 0030  ld   $30         ;0228 'i'
              4cb6 0099  ld   $99         ;022a ADDW
              4cb7 0032  ld   $32         ;022a 'fontData'
              4cb8 002b  ld   $2b         ;022c STW
              4cb9 0032  ld   $32         ;022c 'fontData'
              4cba 0021  ld   $21         ;022e LDW
              4cbb 0034  ld   $34         ;022e 'BgColor'
              4cbc 005e  ld   $5e         ;0230 ST
              4cbd 0024  ld   $24
              4cbe 0021  ld   $21         ;0232 LDW
              4cbf 0036  ld   $36         ;0232 'Color'
              4cc0 005e  ld   $5e         ;0234 ST
              4cc1 0025  ld   $25
              4cc2 0021  ld   $21         ;0236 LDW
              4cc3 0038  ld   $38         ;0236 'Pos'
              4cc4 002b  ld   $2b         ;0238 STW
              4cc5 0028  ld   $28
              4cc6 0011  ld   $11         ;023a LDWI
              4cc7 00e1  ld   $e1
              4cc8 0004  ld   $04
              4cc9 002b  ld   $2b         ;023d STW
              4cca 0022  ld   $22
              4ccb 0059  ld   $59         ;023f LDI
              4ccc 00fb  ld   $fb
              4ccd 002b  ld   $2b         ;0241 STW
              4cce 0030  ld   $30         ;0241 'i'
              4ccf 0021  ld   $21         ;0243 LDW
              4cd0 0032  ld   $32         ;0243 'fontData'
              4cd1 007f  ld   $7f         ;0245 LUP
              4cd2 0000  ld   $00
              4cd3 0093  ld   $93         ;0247 INC
              4cd4 0032  ld   $32         ;0247 'fontData'
              4cd5 005e  ld   $5e         ;0249 ST
              4cd6 0026  ld   $26
              4cd7 00b4  ld   $b4         ;024b SYS
              4cd8 00cc  ld   $cc
              4cd9 0093  ld   $93         ;024d INC
              4cda 0028  ld   $28
              4cdb 0093  ld   $93         ;024f INC
              4cdc 0030  ld   $30         ;024f 'i'
              4cdd 0021  ld   $21         ;0251 LDW
              4cde 0030  ld   $30         ;0251 'i'
              4cdf 0035  ld   $35         ;0253 BCC
              4ce0 0072  ld   $72         ;0254 NE
              4ce1 0041  ld   $41
              4ce2 0021  ld   $21         ;0256 LDW
              4ce3 0038  ld   $38         ;0256 'Pos'
              4ce4 00ff  ld   $ff         ;0258 RET
              4ce5 002b  ld   $2b         ;0259 STW
              4ce6 003a  ld   $3a         ;0259 'QPrintChar'
              4ce7 00cd  ld   $cd         ;025b DEF
              4ce8 00f0  ld   $f0
              4ce9 001a  ld   $1a         ;025d LD
              4cea 000e  ld   $0e
              4ceb 00b8  ld   $b8         ;025f SUBW
              4cec 003c  ld   $3c         ;025f 'LastFrame'
              4ced 0082  ld   $82         ;0261 ANDI
              4cee 00ff  ld   $ff
              4cef 005e  ld   $5e         ;0263 ST
              4cf0 002b  ld   $2b
              4cf1 0099  ld   $99         ;0265 ADDW
              4cf2 003e  ld   $3e         ;0265 'Time'
              4cf3 0035  ld   $35         ;0267 BCC
              4cf4 0053  ld   $53         ;0268 GE
              4cf5 006b  ld   $6b
              4cf6 0011  ld   $11         ;026a LDWI
              4cf7 00ff  ld   $ff
              4cf8 007f  ld   $7f
              4cf9 002b  ld   $2b         ;026d STW
              4cfa 003e  ld   $3e         ;026d 'Time'
              4cfb fe00  bra  ac          ;+-----------------------------------+
              4cfc fcfd  bra  $4cfd       ;|                                   |
              4cfd 1418  ld   $18,y       ;| Trampoline for page $4c00 lookups |
              4cfe e006  jmp  y,$06       ;|                                   |
              4cff c218  st   [$18]       ;+-----------------------------------+
              4d00 001a  ld   $1a         ;026f LD
              4d01 000e  ld   $0e
              4d02 002b  ld   $2b         ;0271 STW
              4d03 003c  ld   $3c         ;0271 'LastFrame'
              4d04 001a  ld   $1a         ;0273 LD
              4d05 0041  ld   $41         ;0273 'Speed'+1
              4d06 0035  ld   $35         ;0275 BCC
              4d07 0056  ld   $56         ;0276 LE
              4d08 008a  ld   $8a
              4d09 002b  ld   $2b         ;0278 STW
              4d0a 0030  ld   $30         ;0278 'i'
              4d0b 0021  ld   $21         ;027a LDW
              4d0c 0042  ld   $42         ;027a 'CarX'
              4d0d 00b8  ld   $b8         ;027c SUBW
              4d0e 0044  ld   $44         ;027c 'DriftX'
              4d0f 002b  ld   $2b         ;027e STW
              4d10 0042  ld   $42         ;027e 'CarX'
              4d11 0021  ld   $21         ;0280 LDW
              4d12 0046  ld   $46         ;0280 'HorizonX'
              4d13 0099  ld   $99         ;0282 ADDW
              4d14 0048  ld   $48         ;0282 'HorizonDX'
              4d15 002b  ld   $2b         ;0284 STW
              4d16 0046  ld   $46         ;0284 'HorizonX'
              4d17 0021  ld   $21         ;0286 LDW
              4d18 0030  ld   $30         ;0286 'i'
              4d19 00e6  ld   $e6         ;0288 SUBI
              4d1a 0001  ld   $01
              4d1b 0090  ld   $90         ;028a BRA
              4d1c 0073  ld   $73
              4d1d 0059  ld   $59         ;028c LDI
              4d1e 0000  ld   $00
              4d1f 002b  ld   $2b         ;028e STW
              4d20 004a  ld   $4a         ;028e 'Steer'
              4d21 001a  ld   $1a         ;0290 LD
              4d22 0011  ld   $11
              4d23 0082  ld   $82         ;0292 ANDI
              4d24 0001  ld   $01
              4d25 0035  ld   $35         ;0294 BCC
              4d26 0072  ld   $72         ;0295 NE
              4d27 00a0  ld   $a0
              4d28 0011  ld   $11         ;0297 LDWI
              4d29 0000  ld   $00
              4d2a 0002  ld   $02
              4d2b 0099  ld   $99         ;029a ADDW
              4d2c 0042  ld   $42         ;029a 'CarX'
              4d2d 002b  ld   $2b         ;029c STW
              4d2e 0042  ld   $42         ;029c 'CarX'
              4d2f 0059  ld   $59         ;029e LDI
              4d30 0001  ld   $01
              4d31 002b  ld   $2b         ;02a0 STW
              4d32 004a  ld   $4a         ;02a0 'Steer'
              4d33 001a  ld   $1a         ;02a2 LD
              4d34 0011  ld   $11
              4d35 0082  ld   $82         ;02a4 ANDI
              4d36 0002  ld   $02
              4d37 0035  ld   $35         ;02a6 BCC
              4d38 0072  ld   $72         ;02a7 NE
              4d39 00b3  ld   $b3
              4d3a 0011  ld   $11         ;02a9 LDWI
              4d3b 0000  ld   $00
              4d3c 00fe  ld   $fe
              4d3d 0099  ld   $99         ;02ac ADDW
              4d3e 0042  ld   $42         ;02ac 'CarX'
              4d3f 002b  ld   $2b         ;02ae STW
              4d40 0042  ld   $42         ;02ae 'CarX'
              4d41 0011  ld   $11         ;02b0 LDWI
              4d42 00ff  ld   $ff
              4d43 00ff  ld   $ff
              4d44 002b  ld   $2b         ;02b3 STW
              4d45 004a  ld   $4a         ;02b3 'Steer'
              4d46 001a  ld   $1a         ;02b5 LD
              4d47 0011  ld   $11
              4d48 0082  ld   $82         ;02b7 ANDI
              4d49 0080  ld   $80
              4d4a 0035  ld   $35         ;02b9 BCC
              4d4b 0072  ld   $72         ;02ba NE
              4d4c 00cf  ld   $cf
              4d4d 0021  ld   $21         ;02bc LDW
              4d4e 0040  ld   $40         ;02bc 'Speed'
              4d4f 00e3  ld   $e3         ;02be ADDI
              4d50 0010  ld   $10
              4d51 002b  ld   $2b         ;02c0 STW
              4d52 0040  ld   $40         ;02c0 'Speed'
              4d53 0011  ld   $11         ;02c2 LDWI
              4d54 00ff  ld   $ff
              4d55 0005  ld   $05
              4d56 00b8  ld   $b8         ;02c5 SUBW
              4d57 0040  ld   $40         ;02c5 'Speed'
              4d58 0035  ld   $35         ;02c7 BCC
              4d59 0053  ld   $53         ;02c8 GE
              4d5a 00cd  ld   $cd
              4d5b 0011  ld   $11         ;02ca LDWI
              4d5c 00ff  ld   $ff
              4d5d 0005  ld   $05
              4d5e 002b  ld   $2b         ;02cd STW
              4d5f 0040  ld   $40         ;02cd 'Speed'
              4d60 0090  ld   $90         ;02cf BRA
              4d61 00dd  ld   $dd
              4d62 0011  ld   $11         ;02d1 LDWI
              4d63 00f8  ld   $f8
              4d64 00fe  ld   $fe
              4d65 0099  ld   $99         ;02d4 ADDW
              4d66 0040  ld   $40         ;02d4 'Speed'
              4d67 0035  ld   $35         ;02d6 BCC
              4d68 0050  ld   $50         ;02d7 LT
              4d69 00dd  ld   $dd
              4d6a 0021  ld   $21         ;02d9 LDW
              4d6b 0040  ld   $40         ;02d9 'Speed'
              4d6c 00e6  ld   $e6         ;02db SUBI
              4d6d 0008  ld   $08
              4d6e 002b  ld   $2b         ;02dd STW
              4d6f 0040  ld   $40         ;02dd 'Speed'
              4d70 001a  ld   $1a         ;02df LD
              4d71 0011  ld   $11
              4d72 0082  ld   $82         ;02e1 ANDI
              4d73 0040  ld   $40
              4d74 0035  ld   $35         ;02e3 BCC
              4d75 0072  ld   $72         ;02e4 NE
              4d76 00ef  ld   $ef
              4d77 0021  ld   $21         ;02e6 LDW
              4d78 0040  ld   $40         ;02e6 'Speed'
              4d79 00e6  ld   $e6         ;02e8 SUBI
              4d7a 0040  ld   $40
              4d7b 0035  ld   $35         ;02ea BCC
              4d7c 0053  ld   $53         ;02eb GE
              4d7d 00ed  ld   $ed
              4d7e 0059  ld   $59         ;02ed LDI
              4d7f 0000  ld   $00
              4d80 002b  ld   $2b         ;02ef STW
              4d81 0040  ld   $40         ;02ef 'Speed'
              4d82 00ff  ld   $ff         ;02f1 RET
              4d83 002b  ld   $2b         ;02f2 STW
              4d84 004c  ld   $4c         ;02f2 'ControlRaceCar'
              4d85 0093  ld   $93         ;02f4 INC
              4d86 001b  ld   $1b         ;02f4 '_vLR'+1
              4d87 00ff  ld   $ff         ;02f6 RET
              4d88 0003  ld   $03         ;| RAM segment address (high byte first)
              4d89 0000  ld   $00         ;|
              4d8a 00e1  ld   $e1         ;| Length (1..256)
              4d8b 00cd  ld   $cd         ;0300 DEF
              4d8c 0009  ld   $09
              4d8d 0047  ld   $47         ;0302 'G'
              4d8e 0069  ld   $69         ;0303 'i'
              4d8f 0067  ld   $67         ;0304 'g'
              4d90 0061  ld   $61         ;0305 'a'
              4d91 0074  ld   $74         ;0306 't'
              4d92 0072  ld   $72         ;0307 'r'
              4d93 006f  ld   $6f         ;0308 'o'
              4d94 006e  ld   $6e         ;0309 'n'
              4d95 0000  ld   $00         ;030a 0
              4d96 002b  ld   $2b         ;030b STW
              4d97 004e  ld   $4e         ;030b 'GigatronText'
              4d98 00cd  ld   $cd         ;030d DEF
              4d99 001d  ld   $1d
              4d9a 001a  ld   $1a         ;030f LD
              4d9b 000e  ld   $0e
              4d9c 0099  ld   $99         ;0311 ADDW
              4d9d 0050  ld   $50         ;0311 'Delay'
              4d9e 0082  ld   $82         ;0313 ANDI
              4d9f 00ff  ld   $ff
              4da0 002b  ld   $2b         ;0315 STW
              4da1 0052  ld   $52         ;0315 'tmp'
              4da2 001a  ld   $1a         ;0317 LD
              4da3 000e  ld   $0e
              4da4 00b8  ld   $b8         ;0319 SUBW
              4da5 0052  ld   $52         ;0319 'tmp'
              4da6 0035  ld   $35         ;031b BCC
              4da7 0072  ld   $72         ;031c NE
              4da8 0015  ld   $15
              4da9 00ff  ld   $ff         ;031e RET
              4daa 002b  ld   $2b         ;031f STW
              4dab 0054  ld   $54         ;031f 'Wait'
              4dac 00cd  ld   $cd         ;0321 DEF
              4dad 00a1  ld   $a1
              4dae 0021  ld   $21         ;0323 LDW
              4daf 0056  ld   $56         ;0323 'Video'
              4db0 00ad  ld   $ad         ;0325 PEEK
              4db1 0082  ld   $82         ;0326 ANDI
              4db2 00fe  ld   $fe
              4db3 005e  ld   $5e         ;0328 ST
              4db4 0059  ld   $59         ;0328 'p'+1
              4db5 0088  ld   $88         ;032a ORI
              4db6 0001  ld   $01
              4db7 005e  ld   $5e         ;032c ST
              4db8 005b  ld   $5b         ;032c 'q'+1
              4db9 0093  ld   $93         ;032e INC
              4dba 0056  ld   $56         ;032e 'Video'
              4dbb 0059  ld   $59         ;0330 LDI
              4dbc 0000  ld   $00
              4dbd 005e  ld   $5e         ;0332 ST
              4dbe 0058  ld   $58         ;0332 'p'
              4dbf 005e  ld   $5e         ;0334 ST
              4dc0 005a  ld   $5a         ;0334 'q'
              4dc1 0021  ld   $21         ;0336 LDW
              4dc2 0058  ld   $58         ;0336 'p'
              4dc3 00ad  ld   $ad         ;0338 PEEK
              4dc4 002b  ld   $2b         ;0339 STW
              4dc5 0030  ld   $30         ;0339 'i'
              4dc6 0021  ld   $21         ;033b LDW
              4dc7 005a  ld   $5a         ;033b 'q'
              4dc8 00ad  ld   $ad         ;033d PEEK
              4dc9 00b8  ld   $b8         ;033e SUBW
              4dca 0030  ld   $30         ;033e 'i'
              4dcb 002b  ld   $2b         ;0340 STW
              4dcc 0030  ld   $30         ;0340 'i'
              4dcd 0021  ld   $21         ;0342 LDW
              4dce 0058  ld   $58         ;0342 'p'
              4dcf 00ad  ld   $ad         ;0344 PEEK
              4dd0 005e  ld   $5e         ;0345 ST
              4dd1 0058  ld   $58         ;0345 'p'
              4dd2 005e  ld   $5e         ;0347 ST
              4dd3 005a  ld   $5a         ;0347 'q'
              4dd4 0059  ld   $59         ;0349 LDI
              4dd5 0015  ld   $15
              4dd6 00f0  ld   $f0         ;034b POKE
              4dd7 0058  ld   $58         ;034b 'p'
              4dd8 00f0  ld   $f0         ;034d POKE
              4dd9 005a  ld   $5a         ;034d 'q'
              4dda 0093  ld   $93         ;034f INC
              4ddb 0058  ld   $58         ;034f 'p'
              4ddc 0093  ld   $93         ;0351 INC
              4ddd 005a  ld   $5a         ;0351 'q'
              4dde 0021  ld   $21         ;0353 LDW
              4ddf 0030  ld   $30         ;0353 'i'
              4de0 00e6  ld   $e6         ;0355 SUBI
              4de1 0001  ld   $01
              4de2 002b  ld   $2b         ;0357 STW
              4de3 0030  ld   $30         ;0357 'i'
              4de4 0035  ld   $35         ;0359 BCC
              4de5 004d  ld   $4d         ;035a GT
              4de6 0047  ld   $47
              4de7 0021  ld   $21         ;035c LDW
              4de8 005c  ld   $5c         ;035c 'Sprite'
              4de9 002b  ld   $2b         ;035e STW
              4dea 005e  ld   $5e         ;035e 's'
              4deb 0059  ld   $59         ;0360 LDI
              4dec 0000  ld   $00
              4ded 005e  ld   $5e         ;0362 ST
              4dee 0058  ld   $58         ;0362 'p'
              4def 0021  ld   $21         ;0364 LDW
              4df0 0056  ld   $56         ;0364 'Video'
              4df1 00ad  ld   $ad         ;0366 PEEK
              4df2 0099  ld   $99         ;0367 ADDW
              4df3 0060  ld   $60         ;0367 'X'
              4df4 002b  ld   $2b         ;0369 STW
              4df5 0060  ld   $60         ;0369 'X'
              4df6 0021  ld   $21         ;036b LDW
              4df7 005e  ld   $5e         ;036b 's'
              4df8 00ad  ld   $ad         ;036d PEEK
              4df9 0099  ld   $99         ;036e ADDW
              4dfa 0060  ld   $60         ;036e 'X'
              4dfb fe00  bra  ac          ;+-----------------------------------+
              4dfc fcfd  bra  $4dfd       ;|                                   |
              4dfd 1418  ld   $18,y       ;| Trampoline for page $4d00 lookups |
              4dfe e006  jmp  y,$06       ;|                                   |
              4dff c218  st   [$18]       ;+-----------------------------------+
              4e00 00f0  ld   $f0         ;0370 POKE
              4e01 0058  ld   $58         ;0370 'p'
              4e02 005e  ld   $5e         ;0372 ST
              4e03 0058  ld   $58         ;0372 'p'
              4e04 005e  ld   $5e         ;0374 ST
              4e05 005a  ld   $5a         ;0374 'q'
              4e06 0093  ld   $93         ;0376 INC
              4e07 005e  ld   $5e         ;0376 's'
              4e08 0021  ld   $21         ;0378 LDW
              4e09 0058  ld   $58         ;0378 'p'
              4e0a 00ad  ld   $ad         ;037a PEEK
              4e0b 008c  ld   $8c         ;037b XORI
              4e0c 0015  ld   $15
              4e0d 0099  ld   $99         ;037d ADDW
              4e0e 0062  ld   $62         ;037d 'Collision'
              4e0f 002b  ld   $2b         ;037f STW
              4e10 0062  ld   $62         ;037f 'Collision'
              4e11 0021  ld   $21         ;0381 LDW
              4e12 005e  ld   $5e         ;0381 's'
              4e13 00ad  ld   $ad         ;0383 PEEK
              4e14 00f0  ld   $f0         ;0384 POKE
              4e15 0058  ld   $58         ;0384 'p'
              4e16 0093  ld   $93         ;0386 INC
              4e17 0058  ld   $58         ;0386 'p'
              4e18 00f0  ld   $f0         ;0388 POKE
              4e19 005a  ld   $5a         ;0388 'q'
              4e1a 0093  ld   $93         ;038a INC
              4e1b 005a  ld   $5a         ;038a 'q'
              4e1c 0093  ld   $93         ;038c INC
              4e1d 005e  ld   $5e         ;038c 's'
              4e1e 0021  ld   $21         ;038e LDW
              4e1f 005e  ld   $5e         ;038e 's'
              4e20 00ad  ld   $ad         ;0390 PEEK
              4e21 0035  ld   $35         ;0391 BCC
              4e22 0072  ld   $72         ;0392 NE
              4e23 0076  ld   $76
              4e24 0059  ld   $59         ;0394 LDI
              4e25 0000  ld   $00
              4e26 005e  ld   $5e         ;0396 ST
              4e27 005a  ld   $5a         ;0396 'q'
              4e28 001a  ld   $1a         ;0398 LD
              4e29 0058  ld   $58         ;0398 'p'
              4e2a 00f0  ld   $f0         ;039a POKE
              4e2b 005a  ld   $5a         ;039a 'q'
              4e2c 0021  ld   $21         ;039c LDW
              4e2d 0056  ld   $56         ;039c 'Video'
              4e2e 00e3  ld   $e3         ;039e ADDI
              4e2f 0003  ld   $03
              4e30 002b  ld   $2b         ;03a0 STW
              4e31 0056  ld   $56         ;03a0 'Video'
              4e32 00ff  ld   $ff         ;03a2 RET
              4e33 002b  ld   $2b         ;03a3 STW
              4e34 0064  ld   $64         ;03a3 'DrawPixels'
              4e35 00cd  ld   $cd         ;03a5 DEF
              4e36 00da  ld   $da
              4e37 0011  ld   $11         ;03a7 LDWI
              4e38 00fd  ld   $fd
              4e39 0001  ld   $01
              4e3a 002b  ld   $2b         ;03aa STW
              4e3b 0058  ld   $58         ;03aa 'p'
              4e3c 0021  ld   $21         ;03ac LDW
              4e3d 0040  ld   $40         ;03ac 'Speed'
              4e3e 0099  ld   $99         ;03ae ADDW
              4e3f 0040  ld   $40         ;03ae 'Speed'
              4e40 001a  ld   $1a         ;03b0 LD
              4e41 0019  ld   $19
              4e42 00f0  ld   $f0         ;03b2 POKE
              4e43 0058  ld   $58         ;03b2 'p'
              4e44 0093  ld   $93         ;03b4 INC
              4e45 0059  ld   $59         ;03b4 'p'+1
              4e46 00f0  ld   $f0         ;03b6 POKE
              4e47 0058  ld   $58         ;03b6 'p'
              4e48 0093  ld   $93         ;03b8 INC
              4e49 0059  ld   $59         ;03b8 'p'+1
              4e4a 00f0  ld   $f0         ;03ba POKE
              4e4b 0058  ld   $58         ;03ba 'p'
              4e4c 0093  ld   $93         ;03bc INC
              4e4d 0059  ld   $59         ;03bc 'p'+1
              4e4e 00f0  ld   $f0         ;03be POKE
              4e4f 0058  ld   $58         ;03be 'p'
              4e50 0011  ld   $11         ;03c0 LDWI
              4e51 00fc  ld   $fc
              4e52 0001  ld   $01
              4e53 002b  ld   $2b         ;03c3 STW
              4e54 0058  ld   $58         ;03c3 'p'
              4e55 0021  ld   $21         ;03c5 LDW
              4e56 0040  ld   $40         ;03c5 'Speed'
              4e57 0082  ld   $82         ;03c7 ANDI
              4e58 007f  ld   $7f
              4e59 00f0  ld   $f0         ;03c9 POKE
              4e5a 0058  ld   $58         ;03c9 'p'
              4e5b 0093  ld   $93         ;03cb INC
              4e5c 0059  ld   $59         ;03cb 'p'+1
              4e5d 00f0  ld   $f0         ;03cd POKE
              4e5e 0058  ld   $58         ;03cd 'p'
              4e5f 0093  ld   $93         ;03cf INC
              4e60 0059  ld   $59         ;03cf 'p'+1
              4e61 00f0  ld   $f0         ;03d1 POKE
              4e62 0058  ld   $58         ;03d1 'p'
              4e63 0093  ld   $93         ;03d3 INC
              4e64 0059  ld   $59         ;03d3 'p'+1
              4e65 00f0  ld   $f0         ;03d5 POKE
              4e66 0058  ld   $58         ;03d5 'p'
              4e67 0059  ld   $59         ;03d7 LDI
              4e68 000a  ld   $0a
              4e69 005e  ld   $5e         ;03d9 ST
              4e6a 002c  ld   $2c
              4e6b 00ff  ld   $ff         ;03db RET
              4e6c 002b  ld   $2b         ;03dc STW
              4e6d 0066  ld   $66         ;03dc 'PlayEngineSound'
              4e6e 0093  ld   $93         ;03de INC
              4e6f 001b  ld   $1b         ;03de '_vLR'+1
              4e70 00ff  ld   $ff         ;03e0 RET
              4e71 0004  ld   $04         ;| RAM segment address (high byte first)
              4e72 0000  ld   $00         ;|
              4e73 00ef  ld   $ef         ;| Length (1..256)
              4e74 00cd  ld   $cd         ;0400 DEF
              4e75 003e  ld   $3e
              4e76 0075  ld   $75         ;0402 PUSH
              4e77 0011  ld   $11         ;0403 LDWI
              4e78 0080  ld   $80
              4e79 0020  ld   $20
              4e7a 002b  ld   $2b         ;0406 STW
              4e7b 0038  ld   $38         ;0406 'Pos'
              4e7c 0011  ld   $11         ;0408 LDWI
              4e7d 0003  ld   $03
              4e7e 000b  ld   $0b
              4e7f 002b  ld   $2b         ;040b STW
              4e80 0022  ld   $22
              4e81 0059  ld   $59         ;040d LDI
              4e82 0000  ld   $00
              4e83 002b  ld   $2b         ;040f STW
              4e84 0068  ld   $68         ;040f 'Width'
              4e85 0021  ld   $21         ;0411 LDW
              4e86 0068  ld   $68         ;0411 'Width'
              4e87 00e3  ld   $e3         ;0413 ADDI
              4e88 0001  ld   $01
              4e89 002b  ld   $2b         ;0415 STW
              4e8a 0068  ld   $68         ;0415 'Width'
              4e8b 0059  ld   $59         ;0417 LDI
              4e8c 003f  ld   $3f
              4e8d 002b  ld   $2b         ;0419 STW
              4e8e 006a  ld   $6a         ;0419 'CurbColor'
              4e8f 0059  ld   $59         ;041b LDI
              4e90 000c  ld   $0c
              4e91 002b  ld   $2b         ;041d STW
              4e92 006c  ld   $6c         ;041d 'GrassColor'
              4e93 00cf  ld   $cf         ;041f CALL
              4e94 006e  ld   $6e         ;041f 'SetupSegment'
              4e95 0093  ld   $93         ;0421 INC
              4e96 0039  ld   $39         ;0421 'Pos'+1
              4e97 0059  ld   $59         ;0423 LDI
              4e98 0003  ld   $03
              4e99 002b  ld   $2b         ;0425 STW
              4e9a 006a  ld   $6a         ;0425 'CurbColor'
              4e9b 0059  ld   $59         ;0427 LDI
              4e9c 0008  ld   $08
              4e9d 002b  ld   $2b         ;0429 STW
              4e9e 006c  ld   $6c         ;0429 'GrassColor'
              4e9f 00cf  ld   $cf         ;042b CALL
              4ea0 006e  ld   $6e         ;042b 'SetupSegment'
              4ea1 0093  ld   $93         ;042d INC
              4ea2 0039  ld   $39         ;042d 'Pos'+1
              4ea3 0021  ld   $21         ;042f LDW
              4ea4 0038  ld   $38         ;042f 'Pos'
              4ea5 0035  ld   $35         ;0431 BCC
              4ea6 0053  ld   $53         ;0432 GE
              4ea7 000f  ld   $0f
              4ea8 0011  ld   $11         ;0434 LDWI
              4ea9 0000  ld   $00
              4eaa 0074  ld   $74
              4eab 00f0  ld   $f0         ;0437 1008
              4eac 0018  ld   $18         ;0438 24
              4ead 0093  ld   $93         ;0439 INC
              4eae 0019  ld   $19
              4eaf 0035  ld   $35         ;043b BCC
              4eb0 004d  ld   $4d         ;043c GT
              4eb1 0035  ld   $35
              4eb2 0063  ld   $63         ;043e POP
              4eb3 00ff  ld   $ff         ;043f RET
              4eb4 002b  ld   $2b         ;0440 STW
              4eb5 0070  ld   $70         ;0440 'SetupRoad'
              4eb6 00cd  ld   $cd         ;0442 DEF
              4eb7 0086  ld   $86
              4eb8 0021  ld   $21         ;0444 LDW
              4eb9 0068  ld   $68         ;0444 'Width'
              4eba 00e9  ld   $e9         ;0446 LSLW
              4ebb 005e  ld   $5e         ;0447 ST
              4ebc 0024  ld   $24
              4ebd 0021  ld   $21         ;0449 LDW
              4ebe 0038  ld   $38         ;0449 'Pos'
              4ebf 00b8  ld   $b8         ;044b SUBW
              4ec0 0068  ld   $68         ;044b 'Width'
              4ec1 002b  ld   $2b         ;044d STW
              4ec2 0058  ld   $58         ;044d 'p'
              4ec3 002b  ld   $2b         ;044f STW
              4ec4 0026  ld   $26
              4ec5 0059  ld   $59         ;0451 LDI
              4ec6 0015  ld   $15
              4ec7 005e  ld   $5e         ;0453 ST
              4ec8 0025  ld   $25
              4ec9 00b4  ld   $b4         ;0455 SYS
              4eca 00f4  ld   $f4
              4ecb 0059  ld   $59         ;0457 LDI
              4ecc 0080  ld   $80
              4ecd 00b8  ld   $b8         ;0459 SUBW
              4ece 0068  ld   $68         ;0459 'Width'
              4ecf 00e9  ld   $e9         ;045b LSLW
              4ed0 005e  ld   $5e         ;045c ST
              4ed1 0024  ld   $24
              4ed2 0021  ld   $21         ;045e LDW
              4ed3 0038  ld   $38         ;045e 'Pos'
              4ed4 0099  ld   $99         ;0460 ADDW
              4ed5 0068  ld   $68         ;0460 'Width'
              4ed6 002b  ld   $2b         ;0462 STW
              4ed7 005a  ld   $5a         ;0462 'q'
              4ed8 002b  ld   $2b         ;0464 STW
              4ed9 0026  ld   $26
              4eda 0021  ld   $21         ;0466 LDW
              4edb 006c  ld   $6c         ;0466 'GrassColor'
              4edc 005e  ld   $5e         ;0468 ST
              4edd 0025  ld   $25
              4ede 00b4  ld   $b4         ;046a SYS
              4edf 00f4  ld   $f4
              4ee0 0021  ld   $21         ;046c LDW
              4ee1 0068  ld   $68         ;046c 'Width'
              4ee2 00e6  ld   $e6         ;046e SUBI
              4ee3 0008  ld   $08
              4ee4 0035  ld   $35         ;0470 BCC
              4ee5 0056  ld   $56         ;0471 LE
              4ee6 0085  ld   $85
              4ee7 002b  ld   $2b         ;0473 STW
              4ee8 0052  ld   $52         ;0473 'tmp'
              4ee9 0021  ld   $21         ;0475 LDW
              4eea 005a  ld   $5a         ;0475 'q'
              4eeb 00e6  ld   $e6         ;0477 SUBI
              4eec 0001  ld   $01
              4eed 002b  ld   $2b         ;0479 STW
              4eee 005a  ld   $5a         ;0479 'q'
              4eef 0021  ld   $21         ;047b LDW
              4ef0 006a  ld   $6a         ;047b 'CurbColor'
              4ef1 00f0  ld   $f0         ;047d POKE
              4ef2 0058  ld   $58         ;047d 'p'
              4ef3 00f0  ld   $f0         ;047f POKE
              4ef4 005a  ld   $5a         ;047f 'q'
              4ef5 0093  ld   $93         ;0481 INC
              4ef6 0058  ld   $58         ;0481 'p'
              4ef7 0021  ld   $21         ;0483 LDW
              4ef8 0052  ld   $52         ;0483 'tmp'
              4ef9 0090  ld   $90         ;0485 BRA
              4efa 006c  ld   $6c
              4efb fe00  bra  ac          ;+-----------------------------------+
              4efc fcfd  bra  $4efd       ;|                                   |
              4efd 1418  ld   $18,y       ;| Trampoline for page $4e00 lookups |
              4efe e006  jmp  y,$06       ;|                                   |
              4eff c218  st   [$18]       ;+-----------------------------------+
              4f00 00ff  ld   $ff         ;0487 RET
              4f01 002b  ld   $2b         ;0488 STW
              4f02 006e  ld   $6e         ;0488 'SetupSegment'
              4f03 00cd  ld   $cd         ;048a DEF
              4f04 00e8  ld   $e8
              4f05 0075  ld   $75         ;048c PUSH
              4f06 0011  ld   $11         ;048d LDWI
              4f07 000f  ld   $0f
              4f08 000e  ld   $0e
              4f09 002b  ld   $2b         ;0490 STW
              4f0a 0072  ld   $72         ;0490 'Radix'
              4f0b 00cf  ld   $cf         ;0492 CALL
              4f0c 0074  ld   $74         ;0492 'ExtractDigit'
              4f0d 0021  ld   $21         ;0494 LDW
              4f0e 0076  ld   $76         ;0494 'Prev3'
              4f0f 00fc  ld   $fc         ;0496 XORW
              4f10 0078  ld   $78         ;0496 'Char'
              4f11 0035  ld   $35         ;0498 BCC
              4f12 003f  ld   $3f         ;0499 EQ
              4f13 00a1  ld   $a1
              4f14 0021  ld   $21         ;049b LDW
              4f15 0078  ld   $78         ;049b 'Char'
              4f16 002b  ld   $2b         ;049d STW
              4f17 0076  ld   $76         ;049d 'Prev3'
              4f18 00cf  ld   $cf         ;049f CALL
              4f19 003a  ld   $3a         ;049f 'QPrintChar'
              4f1a 0090  ld   $90         ;04a1 BRA
              4f1b 00a3  ld   $a3
              4f1c 0021  ld   $21         ;04a3 LDW
              4f1d 0038  ld   $38         ;04a3 'Pos'
              4f1e 00e3  ld   $e3         ;04a5 ADDI
              4f1f 000c  ld   $0c
              4f20 002b  ld   $2b         ;04a7 STW
              4f21 0038  ld   $38         ;04a7 'Pos'
              4f22 0011  ld   $11         ;04a9 LDWI
              4f23 0058  ld   $58
              4f24 0002  ld   $02
              4f25 002b  ld   $2b         ;04ac STW
              4f26 0072  ld   $72         ;04ac 'Radix'
              4f27 00cf  ld   $cf         ;04ae CALL
              4f28 0074  ld   $74         ;04ae 'ExtractDigit'
              4f29 0021  ld   $21         ;04b0 LDW
              4f2a 007a  ld   $7a         ;04b0 'Prev2'
              4f2b 00fc  ld   $fc         ;04b2 XORW
              4f2c 0078  ld   $78         ;04b2 'Char'
              4f2d 0035  ld   $35         ;04b4 BCC
              4f2e 003f  ld   $3f         ;04b5 EQ
              4f2f 00bd  ld   $bd
              4f30 0021  ld   $21         ;04b7 LDW
              4f31 0078  ld   $78         ;04b7 'Char'
              4f32 002b  ld   $2b         ;04b9 STW
              4f33 007a  ld   $7a         ;04b9 'Prev2'
              4f34 00cf  ld   $cf         ;04bb CALL
              4f35 003a  ld   $3a         ;04bb 'QPrintChar'
              4f36 0090  ld   $90         ;04bd BRA
              4f37 00bf  ld   $bf
              4f38 0021  ld   $21         ;04bf LDW
              4f39 0038  ld   $38         ;04bf 'Pos'
              4f3a 00e3  ld   $e3         ;04c1 ADDI
              4f3b 0006  ld   $06
              4f3c 002b  ld   $2b         ;04c3 STW
              4f3d 0038  ld   $38         ;04c3 'Pos'
              4f3e 0059  ld   $59         ;04c5 LDI
              4f3f 003c  ld   $3c
              4f40 002b  ld   $2b         ;04c7 STW
              4f41 0072  ld   $72         ;04c7 'Radix'
              4f42 00cf  ld   $cf         ;04c9 CALL
              4f43 0074  ld   $74         ;04c9 'ExtractDigit'
              4f44 0021  ld   $21         ;04cb LDW
              4f45 007c  ld   $7c         ;04cb 'Prev1'
              4f46 00fc  ld   $fc         ;04cd XORW
              4f47 0078  ld   $78         ;04cd 'Char'
              4f48 0035  ld   $35         ;04cf BCC
              4f49 003f  ld   $3f         ;04d0 EQ
              4f4a 00d8  ld   $d8
              4f4b 0021  ld   $21         ;04d2 LDW
              4f4c 0078  ld   $78         ;04d2 'Char'
              4f4d 002b  ld   $2b         ;04d4 STW
              4f4e 007c  ld   $7c         ;04d4 'Prev1'
              4f4f 00cf  ld   $cf         ;04d6 CALL
              4f50 003a  ld   $3a         ;04d6 'QPrintChar'
              4f51 0090  ld   $90         ;04d8 BRA
              4f52 00da  ld   $da
              4f53 0021  ld   $21         ;04da LDW
              4f54 0038  ld   $38         ;04da 'Pos'
              4f55 00e3  ld   $e3         ;04dc ADDI
              4f56 000c  ld   $0c
              4f57 002b  ld   $2b         ;04de STW
              4f58 0038  ld   $38         ;04de 'Pos'
              4f59 0059  ld   $59         ;04e0 LDI
              4f5a 0006  ld   $06
              4f5b 002b  ld   $2b         ;04e2 STW
              4f5c 0072  ld   $72         ;04e2 'Radix'
              4f5d 00cf  ld   $cf         ;04e4 CALL
              4f5e 0074  ld   $74         ;04e4 'ExtractDigit'
              4f5f 00cf  ld   $cf         ;04e6 CALL
              4f60 003a  ld   $3a         ;04e6 'QPrintChar'
              4f61 0063  ld   $63         ;04e8 POP
              4f62 00ff  ld   $ff         ;04e9 RET
              4f63 002b  ld   $2b         ;04ea STW
              4f64 007e  ld   $7e         ;04ea 'PrintTime'
              4f65 0093  ld   $93         ;04ec INC
              4f66 001b  ld   $1b         ;04ec '_vLR'+1
              4f67 00ff  ld   $ff         ;04ee RET
              4f68 0005  ld   $05         ;| RAM segment address (high byte first)
              4f69 0000  ld   $00         ;|
              4f6a 00e6  ld   $e6         ;| Length (1..256)
              4f6b 00cd  ld   $cd         ;0500 DEF
              4f6c 0017  ld   $17
              4f6d 0059  ld   $59         ;0502 LDI
              4f6e 0030  ld   $30
              4f6f 002b  ld   $2b         ;0504 STW
              4f70 0078  ld   $78         ;0504 'Char'
              4f71 0021  ld   $21         ;0506 LDW
              4f72 0081  ld   $81         ;0506 'Value'
              4f73 00b8  ld   $b8         ;0508 SUBW
              4f74 0072  ld   $72         ;0508 'Radix'
              4f75 0035  ld   $35         ;050a BCC
              4f76 0050  ld   $50         ;050b LT
              4f77 0014  ld   $14
              4f78 002b  ld   $2b         ;050d STW
              4f79 0081  ld   $81         ;050d 'Value'
              4f7a 0093  ld   $93         ;050f INC
              4f7b 0078  ld   $78         ;050f 'Char'
              4f7c 00b8  ld   $b8         ;0511 SUBW
              4f7d 0072  ld   $72         ;0511 'Radix'
              4f7e 0035  ld   $35         ;0513 BCC
              4f7f 0053  ld   $53         ;0514 GE
              4f80 000b  ld   $0b
              4f81 0021  ld   $21         ;0516 LDW
              4f82 0078  ld   $78         ;0516 'Char'
              4f83 00ff  ld   $ff         ;0518 RET
              4f84 002b  ld   $2b         ;0519 STW
              4f85 0074  ld   $74         ;0519 'ExtractDigit'
              4f86 00cd  ld   $cd         ;051b DEF
              4f87 0032  ld   $32
              4f88 0075  ld   $75         ;051d PUSH
              4f89 002b  ld   $2b         ;051e STW
              4f8a 0083  ld   $83         ;051e 'Text'
              4f8b 0021  ld   $21         ;0520 LDW
              4f8c 0083  ld   $83         ;0520 'Text'
              4f8d 00ad  ld   $ad         ;0522 PEEK
              4f8e 002b  ld   $2b         ;0523 STW
              4f8f 0078  ld   $78         ;0523 'Char'
              4f90 0035  ld   $35         ;0525 BCC
              4f91 003f  ld   $3f         ;0526 EQ
              4f92 0030  ld   $30
              4f93 0093  ld   $93         ;0528 INC
              4f94 0083  ld   $83         ;0528 'Text'
              4f95 00cf  ld   $cf         ;052a CALL
              4f96 003a  ld   $3a         ;052a 'QPrintChar'
              4f97 00e3  ld   $e3         ;052c ADDI
              4f98 0006  ld   $06
              4f99 002b  ld   $2b         ;052e STW
              4f9a 0038  ld   $38         ;052e 'Pos'
              4f9b 0090  ld   $90         ;0530 BRA
              4f9c 001e  ld   $1e
              4f9d 0063  ld   $63         ;0532 POP
              4f9e 00ff  ld   $ff         ;0533 RET
              4f9f 002b  ld   $2b         ;0534 STW
              4fa0 0085  ld   $85         ;0534 'PrintText'
              4fa1 00cd  ld   $cd         ;0536 DEF
              4fa2 00df  ld   $df
              4fa3 0011  ld   $11         ;0538 LDWI
              4fa4 00d0  ld   $d0
              4fa5 0074  ld   $74
              4fa6 002b  ld   $2b         ;053b STW
              4fa7 0058  ld   $58         ;053b 'p'
              4fa8 0059  ld   $59         ;053d LDI
              4fa9 0000  ld   $00
              4faa 002b  ld   $2b         ;053f STW
              4fab 0060  ld   $60         ;053f 'X'
              4fac 0021  ld   $21         ;0541 LDW
              4fad 0087  ld   $87         ;0541 'DX0'
              4fae 002b  ld   $2b         ;0543 STW
              4faf 0089  ld   $89         ;0543 'DX'
              4fb0 0021  ld   $21         ;0545 LDW
              4fb1 008b  ld   $8b         ;0545 'NextTurn'
              4fb2 00b8  ld   $b8         ;0547 SUBW
              4fb3 008d  ld   $8d         ;0547 'Distance'
              4fb4 002b  ld   $2b         ;0549 STW
              4fb5 0052  ld   $52         ;0549 'tmp'
              4fb6 0099  ld   $99         ;054b ADDW
              4fb7 0052  ld   $52         ;054b 'tmp'
              4fb8 002b  ld   $2b         ;054d STW
              4fb9 0052  ld   $52         ;054d 'tmp'
              4fba 0011  ld   $11         ;054f LDWI
              4fbb 0000  ld   $00
              4fbc 000a  ld   $0a
              4fbd 0099  ld   $99         ;0552 ADDW
              4fbe 0052  ld   $52         ;0552 'tmp'
              4fbf 007f  ld   $7f         ;0554 LUP
              4fc0 0035  ld   $35
              4fc1 002b  ld   $2b         ;0556 STW
              4fc2 0052  ld   $52         ;0556 'tmp'
              4fc3 0059  ld   $59         ;0558 LDI
              4fc4 00c5  ld   $c5
              4fc5 0099  ld   $99         ;055a ADDW
              4fc6 0052  ld   $52         ;055a 'tmp'
              4fc7 002b  ld   $2b         ;055c STW
              4fc8 0030  ld   $30         ;055c 'i'
              4fc9 001a  ld   $1a         ;055e LD
              4fca 0061  ld   $61         ;055e 'X'+1
              4fcb 00f0  ld   $f0         ;0560 POKE
              4fcc 0058  ld   $58         ;0560 'p'
              4fcd 0093  ld   $93         ;0562 INC
              4fce 0058  ld   $58         ;0562 'p'
              4fcf 0021  ld   $21         ;0564 LDW
              4fd0 0089  ld   $89         ;0564 'DX'
              4fd1 0099  ld   $99         ;0566 ADDW
              4fd2 008f  ld   $8f         ;0566 'DDX'
              4fd3 002b  ld   $2b         ;0568 STW
              4fd4 0089  ld   $89         ;0568 'DX'
              4fd5 0099  ld   $99         ;056a ADDW
              4fd6 0060  ld   $60         ;056a 'X'
              4fd7 002b  ld   $2b         ;056c STW
              4fd8 0060  ld   $60         ;056c 'X'
              4fd9 0093  ld   $93         ;056e INC
              4fda 0030  ld   $30         ;056e 'i'
              4fdb 0021  ld   $21         ;0570 LDW
              4fdc 0030  ld   $30         ;0570 'i'
              4fdd 0035  ld   $35         ;0572 BCC
              4fde 0072  ld   $72         ;0573 NE
              4fdf 005c  ld   $5c
              4fe0 001a  ld   $1a         ;0575 LD
              4fe1 0061  ld   $61         ;0575 'X'+1
              4fe2 00f0  ld   $f0         ;0577 POKE
              4fe3 0058  ld   $58         ;0577 'p'
              4fe4 0093  ld   $93         ;0579 INC
              4fe5 0058  ld   $58         ;0579 'p'
              4fe6 0021  ld   $21         ;057b LDW
              4fe7 0089  ld   $89         ;057b 'DX'
              4fe8 0099  ld   $99         ;057d ADDW
              4fe9 0091  ld   $91         ;057d 'NextDDX'
              4fea 002b  ld   $2b         ;057f STW
              4feb 0089  ld   $89         ;057f 'DX'
              4fec 0099  ld   $99         ;0581 ADDW
              4fed 0060  ld   $60         ;0581 'X'
              4fee 002b  ld   $2b         ;0583 STW
              4fef 0060  ld   $60         ;0583 'X'
              4ff0 001a  ld   $1a         ;0585 LD
              4ff1 0058  ld   $58         ;0585 'p'
              4ff2 0035  ld   $35         ;0587 BCC
              4ff3 0072  ld   $72         ;0588 NE
              4ff4 0073  ld   $73
              4ff5 0011  ld   $11         ;058a LDWI
              4ff6 00ed  ld   $ed
              4ff7 0001  ld   $01
              4ff8 002b  ld   $2b         ;058d STW
              4ff9 0024  ld   $24
              4ffa 0011  ld   $11         ;058f LDWI
              4ffb fe00  bra  ac          ;+-----------------------------------+
              4ffc fcfd  bra  $4ffd       ;|                                   |
              4ffd 1418  ld   $18,y       ;| Trampoline for page $4f00 lookups |
              4ffe e006  jmp  y,$06       ;|                                   |
              4fff c218  st   [$18]       ;+-----------------------------------+
              5000 00d1  ld   $d1
              5001 0074  ld   $74
              5002 002b  ld   $2b         ;0592 STW
              5003 0026  ld   $26
              5004 00e6  ld   $e6         ;0594 SUBI
              5005 0001  ld   $01
              5006 00ad  ld   $ad         ;0596 PEEK
              5007 002b  ld   $2b         ;0597 STW
              5008 0028  ld   $28
              5009 001a  ld   $1a         ;0599 LD
              500a 0047  ld   $47         ;0599 'HorizonX'+1
              500b 002b  ld   $2b         ;059b STW
              500c 0052  ld   $52         ;059b 'tmp'
              500d 0011  ld   $11         ;059d LDWI
              500e 00d5  ld   $d5
              500f 0074  ld   $74
              5010 00ad  ld   $ad         ;05a0 PEEK
              5011 00e3  ld   $e3         ;05a1 ADDI
              5012 0030  ld   $30
              5013 00b8  ld   $b8         ;05a3 SUBW
              5014 0052  ld   $52         ;05a3 'tmp'
              5015 002b  ld   $2b         ;05a5 STW
              5016 0052  ld   $52         ;05a5 'tmp'
              5017 0011  ld   $11         ;05a7 LDWI
              5018 00d4  ld   $d4
              5019 0074  ld   $74
              501a 00ad  ld   $ad         ;05aa PEEK
              501b 002b  ld   $2b         ;05ab STW
              501c 0087  ld   $87         ;05ab 'DX0'
              501d 0011  ld   $11         ;05ad LDWI
              501e 00ec  ld   $ec
              501f 0074  ld   $74
              5020 00ad  ld   $ad         ;05b0 PEEK
              5021 00b8  ld   $b8         ;05b1 SUBW
              5022 0087  ld   $87         ;05b1 'DX0'
              5023 0082  ld   $82         ;05b3 ANDI
              5024 00ff  ld   $ff
              5025 008c  ld   $8c         ;05b5 XORI
              5026 0080  ld   $80
              5027 00e6  ld   $e6         ;05b7 SUBI
              5028 0080  ld   $80
              5029 002b  ld   $2b         ;05b9 STW
              502a 0087  ld   $87         ;05b9 'DX0'
              502b 0011  ld   $11         ;05bb LDWI
              502c 0011  ld   $11
              502d 0001  ld   $01
              502e 002b  ld   $2b         ;05be STW
              502f 005e  ld   $5e         ;05be 's'
              5030 001a  ld   $1a         ;05c0 LD
              5031 0009  ld   $09
              5032 0082  ld   $82         ;05c2 ANDI
              5033 0001  ld   $01
              5034 0035  ld   $35         ;05c4 BCC
              5035 003f  ld   $3f         ;05c5 EQ
              5036 00be  ld   $be
              5037 001a  ld   $1a         ;05c7 LD
              5038 0047  ld   $47         ;05c7 'HorizonX'+1
              5039 00f0  ld   $f0         ;05c9 POKE
              503a 005e  ld   $5e         ;05c9 's'
              503b 0011  ld   $11         ;05cb LDWI
              503c 0000  ld   $00
              503d 0040  ld   $40
              503e 002b  ld   $2b         ;05ce STW
              503f 0022  ld   $22
              5040 00b4  ld   $b4         ;05d0 SYS
              5041 00fb  ld   $fb
              5042 0021  ld   $21         ;05d2 LDW
              5043 0024  ld   $24
              5044 002b  ld   $2b         ;05d4 STW
              5045 005e  ld   $5e         ;05d4 's'
              5046 0021  ld   $21         ;05d6 LDW
              5047 0028  ld   $28
              5048 002b  ld   $2b         ;05d8 STW
              5049 0060  ld   $60         ;05d8 'X'
              504a 0021  ld   $21         ;05da LDW
              504b 0052  ld   $52         ;05da 'tmp'
              504c 00b8  ld   $b8         ;05dc SUBW
              504d 0060  ld   $60         ;05dc 'X'
              504e 00f0  ld   $f0         ;05de POKE
              504f 005e  ld   $5e         ;05de 's'
              5050 00ff  ld   $ff         ;05e0 RET
              5051 002b  ld   $2b         ;05e1 STW
              5052 0093  ld   $93         ;05e1 'DrawRoad'
              5053 0093  ld   $93         ;05e3 INC
              5054 001b  ld   $1b         ;05e3 '_vLR'+1
              5055 00ff  ld   $ff         ;05e5 RET
              5056 0006  ld   $06         ;| RAM segment address (high byte first)
              5057 0000  ld   $00         ;|
              5058 00df  ld   $df         ;| Length (1..256)
              5059 00cd  ld   $cd         ;0600 DEF
              505a 00a7  ld   $a7
              505b 0075  ld   $75         ;0602 PUSH
              505c 0059  ld   $59         ;0603 LDI
              505d 0000  ld   $00
              505e 002b  ld   $2b         ;0605 STW
              505f 0062  ld   $62         ;0605 'Collision'
              5060 002b  ld   $2b         ;0607 STW
              5061 0076  ld   $76         ;0607 'Prev3'
              5062 002b  ld   $2b         ;0609 STW
              5063 007a  ld   $7a         ;0609 'Prev2'
              5064 002b  ld   $2b         ;060b STW
              5065 007c  ld   $7c         ;060b 'Prev1'
              5066 00cf  ld   $cf         ;060d CALL
              5067 0095  ld   $95         ;060d 'AdvanceCar'
              5068 0021  ld   $21         ;060f LDW
              5069 008d  ld   $8d         ;060f 'Distance'
              506a 0035  ld   $35         ;0611 BCC
              506b 0053  ld   $53         ;0612 GE
              506c 002e  ld   $2e
              506d 0021  ld   $21         ;0614 LDW
              506e 003e  ld   $3e         ;0614 'Time'
              506f 00b8  ld   $b8         ;0616 SUBW
              5070 0097  ld   $97         ;0616 'BestTime'
              5071 0035  ld   $35         ;0618 BCC
              5072 0053  ld   $53         ;0619 GE
              5073 001d  ld   $1d
              5074 0021  ld   $21         ;061b LDW
              5075 003e  ld   $3e         ;061b 'Time'
              5076 002b  ld   $2b         ;061d STW
              5077 0097  ld   $97         ;061d 'BestTime'
              5078 0059  ld   $59         ;061f LDI
              5079 000f  ld   $0f
              507a 00cf  ld   $cf         ;0621 CALL
              507b 0099  ld   $99         ;0621 'PrintBestTime'
              507c 0059  ld   $59         ;0623 LDI
              507d 0000  ld   $00
              507e 002b  ld   $2b         ;0625 STW
              507f 003e  ld   $3e         ;0625 'Time'
              5080 002b  ld   $2b         ;0627 STW
              5081 009b  ld   $9b         ;0627 'Random'
              5082 0011  ld   $11         ;0629 LDWI
              5083 0000  ld   $00
              5084 0074  ld   $74
              5085 002b  ld   $2b         ;062c STW
              5086 008d  ld   $8d         ;062c 'Distance'
              5087 002b  ld   $2b         ;062e STW
              5088 008b  ld   $8b         ;062e 'NextTurn'
              5089 00b8  ld   $b8         ;0630 SUBW
              508a 008b  ld   $8b         ;0630 'NextTurn'
              508b 0035  ld   $35         ;0632 BCC
              508c 0056  ld   $56         ;0633 LE
              508d 0073  ld   $73
              508e 0021  ld   $21         ;0635 LDW
              508f 009b  ld   $9b         ;0635 'Random'
              5090 0099  ld   $99         ;0637 ADDW
              5091 008b  ld   $8b         ;0637 'NextTurn'
              5092 008c  ld   $8c         ;0639 XORI
              5093 006d  ld   $6d
              5094 002b  ld   $2b         ;063b STW
              5095 009b  ld   $9b         ;063b 'Random'
              5096 0082  ld   $82         ;063d ANDI
              5097 001f  ld   $1f
              5098 00e3  ld   $e3         ;063f ADDI
              5099 0028  ld   $28
              509a 0099  ld   $99         ;0641 ADDW
              509b 008b  ld   $8b         ;0641 'NextTurn'
              509c 002b  ld   $2b         ;0643 STW
              509d 008b  ld   $8b         ;0643 'NextTurn'
              509e 001a  ld   $1a         ;0645 LD
              509f 009c  ld   $9c         ;0645 'Random'+1
              50a0 0082  ld   $82         ;0647 ANDI
              50a1 0003  ld   $03
              50a2 00e3  ld   $e3         ;0649 ADDI
              50a3 0001  ld   $01
              50a4 002b  ld   $2b         ;064b STW
              50a5 0030  ld   $30         ;064b 'i'
              50a6 0099  ld   $99         ;064d ADDW
              50a7 0030  ld   $30         ;064d 'i'
              50a8 0099  ld   $99         ;064f ADDW
              50a9 0030  ld   $30         ;064f 'i'
              50aa 00e9  ld   $e9         ;0651 LSLW
              50ab 002b  ld   $2b         ;0652 STW
              50ac 0030  ld   $30         ;0652 'i'
              50ad 0021  ld   $21         ;0654 LDW
              50ae 0091  ld   $91         ;0654 'NextDDX'
              50af 002b  ld   $2b         ;0656 STW
              50b0 008f  ld   $8f         ;0656 'DDX'
              50b1 0035  ld   $35         ;0658 BCC
              50b2 0053  ld   $53         ;0659 GE
              50b3 005d  ld   $5d
              50b4 0099  ld   $99         ;065b ADDW
              50b5 0030  ld   $30         ;065b 'i'
              50b6 0090  ld   $90         ;065d BRA
              50b7 0071  ld   $71
              50b8 0035  ld   $35         ;065f BCC
              50b9 0056  ld   $56         ;0660 LE
              50ba 0064  ld   $64
              50bb 00b8  ld   $b8         ;0662 SUBW
              50bc 0030  ld   $30         ;0662 'i'
              50bd 0090  ld   $90         ;0664 BRA
              50be 0071  ld   $71
              50bf 0021  ld   $21         ;0666 LDW
              50c0 009b  ld   $9b         ;0666 'Random'
              50c1 0035  ld   $35         ;0668 BCC
              50c2 0050  ld   $50         ;0669 LT
              50c3 006d  ld   $6d
              50c4 0021  ld   $21         ;066b LDW
              50c5 0030  ld   $30         ;066b 'i'
              50c6 0090  ld   $90         ;066d BRA
              50c7 0071  ld   $71
              50c8 0059  ld   $59         ;066f LDI
              50c9 0000  ld   $00
              50ca 00b8  ld   $b8         ;0671 SUBW
              50cb 0030  ld   $30         ;0671 'i'
              50cc 002b  ld   $2b         ;0673 STW
              50cd 0091  ld   $91         ;0673 'NextDDX'
              50ce 00cf  ld   $cf         ;0675 CALL
              50cf 0093  ld   $93         ;0675 'DrawRoad'
              50d0 0021  ld   $21         ;0677 LDW
              50d1 008f  ld   $8f         ;0677 'DDX'
              50d2 00e9  ld   $e9         ;0679 LSLW
              50d3 00e9  ld   $e9         ;067a LSLW
              50d4 00e9  ld   $e9         ;067b LSLW
              50d5 002b  ld   $2b         ;067c STW
              50d6 0048  ld   $48         ;067c 'HorizonDX'
              50d7 00e9  ld   $e9         ;067e LSLW
              50d8 002b  ld   $2b         ;067f STW
              50d9 0044  ld   $44         ;067f 'DriftX'
              50da 00cf  ld   $cf         ;0681 CALL
              50db 004c  ld   $4c         ;0681 'ControlRaceCar'
              50dc 00cf  ld   $cf         ;0683 CALL
              50dd 0066  ld   $66         ;0683 'PlayEngineSound'
              50de 00cf  ld   $cf         ;0685 CALL
              50df 009d  ld   $9d         ;0685 'DrawRaceCar'
              50e0 00cf  ld   $cf         ;0687 CALL
              50e1 009f  ld   $9f         ;0687 'DrawGrass'
              50e2 0011  ld   $11         ;0689 LDWI
              50e3 00b5  ld   $b5
              50e4 00b9  ld   $b9
              50e5 0099  ld   $99         ;068c ADDW
              50e6 003e  ld   $3e         ;068c 'Time'
              50e7 0035  ld   $35         ;068e BCC
              50e8 0056  ld   $56         ;068f LE
              50e9 0091  ld   $91
              50ea 002b  ld   $2b         ;0691 STW
              50eb 0062  ld   $62         ;0691 'Collision'
              50ec 0021  ld   $21         ;0693 LDW
              50ed 003e  ld   $3e         ;0693 'Time'
              50ee 002b  ld   $2b         ;0695 STW
              50ef 0081  ld   $81         ;0695 'Value'
              50f0 0011  ld   $11         ;0697 LDWI
              50f1 0001  ld   $01
              50f2 0008  ld   $08
              50f3 002b  ld   $2b         ;069a STW
              50f4 0038  ld   $38         ;069a 'Pos'
              50f5 0059  ld   $59         ;069c LDI
              50f6 003f  ld   $3f
              50f7 002b  ld   $2b         ;069e STW
              50f8 0036  ld   $36         ;069e 'Color'
              50f9 00cf  ld   $cf         ;06a0 CALL
              50fa 007e  ld   $7e         ;06a0 'PrintTime'
              50fb fe00  bra  ac          ;+-----------------------------------+
              50fc fcfd  bra  $50fd       ;|                                   |
              50fd 1418  ld   $18,y       ;| Trampoline for page $5000 lookups |
              50fe e006  jmp  y,$06       ;|                                   |
              50ff c218  st   [$18]       ;+-----------------------------------+
              5100 0021  ld   $21         ;06a2 LDW
              5101 0062  ld   $62         ;06a2 'Collision'
              5102 0035  ld   $35         ;06a4 BCC
              5103 003f  ld   $3f         ;06a5 EQ
              5104 000b  ld   $0b
              5105 0063  ld   $63         ;06a7 POP
              5106 00ff  ld   $ff         ;06a8 RET
              5107 002b  ld   $2b         ;06a9 STW
              5108 00a1  ld   $a1         ;06a9 'PlayGame'
              5109 00cd  ld   $cd         ;06ab DEF
              510a 00b7  ld   $b7
              510b 0002  ld   $02         ;06ad 2
              510c 0040  ld   $40         ;06ae 64
              510d 0040  ld   $40         ;06af 64
              510e 0040  ld   $40         ;06b0 64
              510f 0028  ld   $28         ;06b1 40
              5110 003c  ld   $3c         ;06b2 60
              5111 003c  ld   $3c         ;06b3 60
              5112 0028  ld   $28         ;06b4 40
              5113 0040  ld   $40         ;06b5 64
              5114 0040  ld   $40         ;06b6 64
              5115 0040  ld   $40         ;06b7 64
              5116 0000  ld   $00         ;06b8 0
              5117 002b  ld   $2b         ;06b9 STW
              5118 00a3  ld   $a3         ;06b9 'Car0'
              5119 00cd  ld   $cd         ;06bb DEF
              511a 00c5  ld   $c5
              511b 0003  ld   $03         ;06bd 3
              511c 0028  ld   $28         ;06be 40
              511d 0014  ld   $14         ;06bf 20
              511e 0014  ld   $14         ;06c0 20
              511f 003f  ld   $3f         ;06c1 63
              5120 003f  ld   $3f         ;06c2 63
              5121 0014  ld   $14         ;06c3 20
              5122 0014  ld   $14         ;06c4 20
              5123 0028  ld   $28         ;06c5 40
              5124 0000  ld   $00         ;06c6 0
              5125 002b  ld   $2b         ;06c7 STW
              5126 00a5  ld   $a5         ;06c7 'Car1'
              5127 00cd  ld   $cd         ;06c9 DEF
              5128 00d5  ld   $d5
              5129 0002  ld   $02         ;06cb 2
              512a 0028  ld   $28         ;06cc 40
              512b 0014  ld   $14         ;06cd 20
              512c 0014  ld   $14         ;06ce 20
              512d 0014  ld   $14         ;06cf 20
              512e 0028  ld   $28         ;06d0 40
              512f 0028  ld   $28         ;06d1 40
              5130 0014  ld   $14         ;06d2 20
              5131 0014  ld   $14         ;06d3 20
              5132 0014  ld   $14         ;06d4 20
              5133 0028  ld   $28         ;06d5 40
              5134 0000  ld   $00         ;06d6 0
              5135 002b  ld   $2b         ;06d7 STW
              5136 00a7  ld   $a7         ;06d7 'Car2'
              5137 0011  ld   $11         ;06d9 LDWI
              5138 00a0  ld   $a0
              5139 0008  ld   $08
              513a 002b  ld   $2b         ;06dc STW
              513b 001a  ld   $1a
              513c 00ff  ld   $ff         ;06de RET
              513d 0008  ld   $08         ;| RAM segment address (high byte first)
              513e 00a0  ld   $a0         ;|
              513f 0052  ld   $52         ;| Length (1..256)
              5140 00cd  ld   $cd         ;08a0 DEF
              5141 00b0  ld   $b0
              5142 0000  ld   $00         ;08a2 0
              5143 0040  ld   $40         ;08a3 64
              5144 0040  ld   $40         ;08a4 64
              5145 0040  ld   $40         ;08a5 64
              5146 0040  ld   $40         ;08a6 64
              5147 0028  ld   $28         ;08a7 40
              5148 0014  ld   $14         ;08a8 20
              5149 0014  ld   $14         ;08a9 20
              514a 0014  ld   $14         ;08aa 20
              514b 0014  ld   $14         ;08ab 20
              514c 0028  ld   $28         ;08ac 40
              514d 0040  ld   $40         ;08ad 64
              514e 0040  ld   $40         ;08ae 64
              514f 0040  ld   $40         ;08af 64
              5150 0040  ld   $40         ;08b0 64
              5151 0000  ld   $00         ;08b1 0
              5152 002b  ld   $2b         ;08b2 STW
              5153 00a9  ld   $a9         ;08b2 'Car3'
              5154 00cd  ld   $cd         ;08b4 DEF
              5155 00c4  ld   $c4
              5156 0000  ld   $00         ;08b6 0
              5157 0040  ld   $40         ;08b7 64
              5158 0040  ld   $40         ;08b8 64
              5159 0040  ld   $40         ;08b9 64
              515a 0040  ld   $40         ;08ba 64
              515b 0015  ld   $15         ;08bb 21
              515c 0015  ld   $15         ;08bc 21
              515d 0015  ld   $15         ;08bd 21
              515e 0015  ld   $15         ;08be 21
              515f 0015  ld   $15         ;08bf 21
              5160 0015  ld   $15         ;08c0 21
              5161 0040  ld   $40         ;08c1 64
              5162 0040  ld   $40         ;08c2 64
              5163 0040  ld   $40         ;08c3 64
              5164 0040  ld   $40         ;08c4 64
              5165 0000  ld   $00         ;08c5 0
              5166 002b  ld   $2b         ;08c6 STW
              5167 00ab  ld   $ab         ;08c6 'Car4'
              5168 00cd  ld   $cd         ;08c8 DEF
              5169 00eb  ld   $eb
              516a 0011  ld   $11         ;08ca LDWI
              516b 002e  ld   $2e
              516c 0001  ld   $01
              516d 002b  ld   $2b         ;08cd STW
              516e 0024  ld   $24
              516f 0059  ld   $59         ;08cf LDI
              5170 0020  ld   $20
              5171 005e  ld   $5e         ;08d1 ST
              5172 0026  ld   $26
              5173 0011  ld   $11         ;08d3 LDWI
              5174 0000  ld   $00
              5175 000a  ld   $0a
              5176 002b  ld   $2b         ;08d6 STW
              5177 005a  ld   $5a         ;08d6 'q'
              5178 0011  ld   $11         ;08d8 LDWI
              5179 0019  ld   $19
              517a 0040  ld   $40
              517b 002b  ld   $2b         ;08db STW
              517c 0022  ld   $22
              517d 0021  ld   $21         ;08dd LDW
              517e 005a  ld   $5a         ;08dd 'q'
              517f 007f  ld   $7f         ;08df LUP
              5180 0008  ld   $08
              5181 0099  ld   $99         ;08e1 ADDW
              5182 008d  ld   $8d         ;08e1 'Distance'
              5183 005e  ld   $5e         ;08e3 ST
              5184 0027  ld   $27
              5185 00b4  ld   $b4         ;08e5 SYS
              5186 00fb  ld   $fb
              5187 0093  ld   $93         ;08e7 INC
              5188 005a  ld   $5a         ;08e7 'q'
              5189 0035  ld   $35         ;08e9 BCC
              518a 0072  ld   $72         ;08ea NE
              518b 00db  ld   $db
              518c 00ff  ld   $ff         ;08ec RET
              518d 002b  ld   $2b         ;08ed STW
              518e 009f  ld   $9f         ;08ed 'DrawGrass'
              518f 0093  ld   $93         ;08ef INC
              5190 001b  ld   $1b         ;08ef '_vLR'+1
              5191 00ff  ld   $ff         ;08f1 RET
              5192 0009  ld   $09         ;| RAM segment address (high byte first)
              5193 00a0  ld   $a0         ;|
              5194 0038  ld   $38         ;| Length (1..256)
              5195 00cd  ld   $cd         ;09a0 DEF
              5196 00b8  ld   $b8
              5197 0011  ld   $11         ;09a2 LDWI
              5198 00f7  ld   $f7
              5199 000b  ld   $0b
              519a 002b  ld   $2b         ;09a5 STW
              519b 00ad  ld   $ad         ;09a5 'Indicator'
              519c 0011  ld   $11         ;09a7 LDWI
              519d 006b  ld   $6b
              519e 000c  ld   $0c
              519f 002b  ld   $2b         ;09aa STW
              51a0 00af  ld   $af         ;09aa 'Tracking'
              51a1 0059  ld   $59         ;09ac LDI
              51a2 0000  ld   $00
              51a3 00f0  ld   $f0         ;09ae POKE
              51a4 00af  ld   $af         ;09ae 'Tracking'
              51a5 0093  ld   $93         ;09b0 INC
              51a6 00af  ld   $af         ;09b0 'Tracking'
              51a7 001a  ld   $1a         ;09b2 LD
              51a8 00af  ld   $af         ;09b2 'Tracking'
              51a9 008c  ld   $8c         ;09b4 XORI
              51aa 0076  ld   $76
              51ab 0035  ld   $35         ;09b6 BCC
              51ac 0072  ld   $72         ;09b7 NE
              51ad 00aa  ld   $aa
              51ae 00ff  ld   $ff         ;09b9 RET
              51af 002b  ld   $2b         ;09ba STW
              51b0 00b1  ld   $b1         ;09ba 'SetupIndicator'
              51b1 00cd  ld   $cd         ;09bc DEF
              51b2 00d1  ld   $d1
              51b3 0059  ld   $59         ;09be LDI
              51b4 0000  ld   $00
              51b5 00f0  ld   $f0         ;09c0 POKE
              51b6 00af  ld   $af         ;09c0 'Tracking'
              51b7 001a  ld   $1a         ;09c2 LD
              51b8 008e  ld   $8e         ;09c2 'Distance'+1
              51b9 0099  ld   $99         ;09c4 ADDW
              51ba 00ad  ld   $ad         ;09c4 'Indicator'
              51bb 002b  ld   $2b         ;09c6 STW
              51bc 00af  ld   $af         ;09c6 'Tracking'
              51bd 0059  ld   $59         ;09c8 LDI
              51be 003c  ld   $3c
              51bf 00f0  ld   $f0         ;09ca POKE
              51c0 00af  ld   $af         ;09ca 'Tracking'
              51c1 001a  ld   $1a         ;09cc LD
              51c2 0041  ld   $41         ;09cc 'Speed'+1
              51c3 0099  ld   $99         ;09ce ADDW
              51c4 008d  ld   $8d         ;09ce 'Distance'
              51c5 002b  ld   $2b         ;09d0 STW
              51c6 008d  ld   $8d         ;09d0 'Distance'
              51c7 00ff  ld   $ff         ;09d2 RET
              51c8 002b  ld   $2b         ;09d3 STW
              51c9 0095  ld   $95         ;09d3 'AdvanceCar'
              51ca 0093  ld   $93         ;09d5 INC
              51cb 001b  ld   $1b         ;09d5 '_vLR'+1
              51cc 00ff  ld   $ff         ;09d7 RET
              51cd 000a  ld   $0a         ;| RAM segment address (high byte first)
              51ce 00a0  ld   $a0         ;|
              51cf 0041  ld   $41         ;| Length (1..256)
              51d0 00cd  ld   $cd         ;0aa0 DEF
              51d1 00da  ld   $da
              51d2 0075  ld   $75         ;0aa2 PUSH
              51d3 0011  ld   $11         ;0aa3 LDWI
              51d4 00d9  ld   $d9
              51d5 0001  ld   $01
              51d6 00ad  ld   $ad         ;0aa6 PEEK
              51d7 008c  ld   $8c         ;0aa7 XORI
              51d8 00ff  ld   $ff
              51d9 002b  ld   $2b         ;0aa9 STW
              51da 0060  ld   $60         ;0aa9 'X'
              51db 001a  ld   $1a         ;0aab LD
              51dc 0043  ld   $43         ;0aab 'CarX'+1
              51dd 0099  ld   $99         ;0aad ADDW
              51de 0060  ld   $60         ;0aad 'X'
              51df 002b  ld   $2b         ;0aaf STW
              51e0 0060  ld   $60         ;0aaf 'X'
              51e1 0011  ld   $11         ;0ab1 LDWI
              51e2 00d8  ld   $d8
              51e3 0001  ld   $01
              51e4 002b  ld   $2b         ;0ab4 STW
              51e5 0056  ld   $56         ;0ab4 'Video'
              51e6 0021  ld   $21         ;0ab6 LDW
              51e7 00a3  ld   $a3         ;0ab6 'Car0'
              51e8 002b  ld   $2b         ;0ab8 STW
              51e9 005c  ld   $5c         ;0ab8 'Sprite'
              51ea 00cf  ld   $cf         ;0aba CALL
              51eb 0064  ld   $64         ;0aba 'DrawPixels'
              51ec 0021  ld   $21         ;0abc LDW
              51ed 00a5  ld   $a5         ;0abc 'Car1'
              51ee 002b  ld   $2b         ;0abe STW
              51ef 005c  ld   $5c         ;0abe 'Sprite'
              51f0 00cf  ld   $cf         ;0ac0 CALL
              51f1 0064  ld   $64         ;0ac0 'DrawPixels'
              51f2 0021  ld   $21         ;0ac2 LDW
              51f3 0060  ld   $60         ;0ac2 'X'
              51f4 00b8  ld   $b8         ;0ac4 SUBW
              51f5 004a  ld   $4a         ;0ac4 'Steer'
              51f6 002b  ld   $2b         ;0ac6 STW
              51f7 0060  ld   $60         ;0ac6 'X'
              51f8 0021  ld   $21         ;0ac8 LDW
              51f9 00a7  ld   $a7         ;0ac8 'Car2'
              51fa 002b  ld   $2b         ;0aca STW
              51fb fe00  bra  ac          ;+-----------------------------------+
              51fc fcfd  bra  $51fd       ;|                                   |
              51fd 1418  ld   $18,y       ;| Trampoline for page $5100 lookups |
              51fe e006  jmp  y,$06       ;|                                   |
              51ff c218  st   [$18]       ;+-----------------------------------+
              5200 005c  ld   $5c         ;0aca 'Sprite'
              5201 00cf  ld   $cf         ;0acc CALL
              5202 0064  ld   $64         ;0acc 'DrawPixels'
              5203 0021  ld   $21         ;0ace LDW
              5204 00a9  ld   $a9         ;0ace 'Car3'
              5205 002b  ld   $2b         ;0ad0 STW
              5206 005c  ld   $5c         ;0ad0 'Sprite'
              5207 00cf  ld   $cf         ;0ad2 CALL
              5208 0064  ld   $64         ;0ad2 'DrawPixels'
              5209 0021  ld   $21         ;0ad4 LDW
              520a 00ab  ld   $ab         ;0ad4 'Car4'
              520b 002b  ld   $2b         ;0ad6 STW
              520c 005c  ld   $5c         ;0ad6 'Sprite'
              520d 00cf  ld   $cf         ;0ad8 CALL
              520e 0064  ld   $64         ;0ad8 'DrawPixels'
              520f 0063  ld   $63         ;0ada POP
              5210 00ff  ld   $ff         ;0adb RET
              5211 002b  ld   $2b         ;0adc STW
              5212 009d  ld   $9d         ;0adc 'DrawRaceCar'
              5213 0093  ld   $93         ;0ade INC
              5214 001b  ld   $1b         ;0ade '_vLR'+1
              5215 00ff  ld   $ff         ;0ae0 RET
              5216 000b  ld   $0b         ;| RAM segment address (high byte first)
              5217 00a0  ld   $a0         ;|
              5218 004c  ld   $4c         ;| Length (1..256)
              5219 00cd  ld   $cd         ;0ba0 DEF
              521a 00e5  ld   $e5
              521b 0075  ld   $75         ;0ba2 PUSH
              521c 0059  ld   $59         ;0ba3 LDI
              521d 0030  ld   $30
              521e 002b  ld   $2b         ;0ba5 STW
              521f 0034  ld   $34         ;0ba5 'BgColor'
              5220 0021  ld   $21         ;0ba7 LDW
              5221 0034  ld   $34         ;0ba7 'BgColor'
              5222 005e  ld   $5e         ;0ba9 ST
              5223 0024  ld   $24
              5224 005e  ld   $5e         ;0bab ST
              5225 0025  ld   $25
              5226 0011  ld   $11         ;0bad LDWI
              5227 0000  ld   $00
              5228 0008  ld   $08
              5229 002b  ld   $2b         ;0bb0 STW
              522a 0028  ld   $28
              522b 0011  ld   $11         ;0bb2 LDWI
              522c 00e1  ld   $e1
              522d 0004  ld   $04
              522e 002b  ld   $2b         ;0bb5 STW
              522f 0022  ld   $22
              5230 00b4  ld   $b4         ;0bb7 SYS
              5231 00cc  ld   $cc
              5232 0093  ld   $93         ;0bb9 INC
              5233 0028  ld   $28
              5234 001a  ld   $1a         ;0bbb LD
              5235 0028  ld   $28
              5236 008c  ld   $8c         ;0bbd XORI
              5237 00a0  ld   $a0
              5238 0035  ld   $35         ;0bbf BCC
              5239 0072  ld   $72         ;0bc0 NE
              523a 00b5  ld   $b5
              523b 0059  ld   $59         ;0bc2 LDI
              523c 003f  ld   $3f
              523d 002b  ld   $2b         ;0bc4 STW
              523e 0036  ld   $36         ;0bc4 'Color'
              523f 0011  ld   $11         ;0bc6 LDWI
              5240 0007  ld   $07
              5241 0008  ld   $08
              5242 002b  ld   $2b         ;0bc9 STW
              5243 0038  ld   $38         ;0bc9 'Pos'
              5244 0059  ld   $59         ;0bcb LDI
              5245 003a  ld   $3a
              5246 00cf  ld   $cf         ;0bcd CALL
              5247 003a  ld   $3a         ;0bcd 'QPrintChar'
              5248 00e3  ld   $e3         ;0bcf ADDI
              5249 0012  ld   $12
              524a 002b  ld   $2b         ;0bd1 STW
              524b 0038  ld   $38         ;0bd1 'Pos'
              524c 0059  ld   $59         ;0bd3 LDI
              524d 002e  ld   $2e
              524e 00cf  ld   $cf         ;0bd5 CALL
              524f 003a  ld   $3a         ;0bd5 'QPrintChar'
              5250 00e3  ld   $e3         ;0bd7 ADDI
              5251 001f  ld   $1f
              5252 002b  ld   $2b         ;0bd9 STW
              5253 0038  ld   $38         ;0bd9 'Pos'
              5254 0021  ld   $21         ;0bdb LDW
              5255 004e  ld   $4e         ;0bdb 'GigatronText'
              5256 00cf  ld   $cf         ;0bdd CALL
              5257 0085  ld   $85         ;0bdd 'PrintText'
              5258 0059  ld   $59         ;0bdf LDI
              5259 003c  ld   $3c
              525a 002b  ld   $2b         ;0be1 STW
              525b 0050  ld   $50         ;0be1 'Delay'
              525c 00cf  ld   $cf         ;0be3 CALL
              525d 0054  ld   $54         ;0be3 'Wait'
              525e 0063  ld   $63         ;0be5 POP
              525f 00ff  ld   $ff         ;0be6 RET
              5260 002b  ld   $2b         ;0be7 STW
              5261 00b3  ld   $b3         ;0be7 'Intro'
              5262 0093  ld   $93         ;0be9 INC
              5263 001b  ld   $1b         ;0be9 '_vLR'+1
              5264 00ff  ld   $ff         ;0beb RET
              5265 000c  ld   $0c         ;| RAM segment address (high byte first)
              5266 00a0  ld   $a0         ;|
              5267 0059  ld   $59         ;| Length (1..256)
              5268 00cd  ld   $cd         ;0ca0 DEF
              5269 00f2  ld   $f2
              526a 002b  ld   $2b         ;0ca2 STW
              526b 0036  ld   $36         ;0ca2 'Color'
              526c 0021  ld   $21         ;0ca4 LDW
              526d 0097  ld   $97         ;0ca4 'BestTime'
              526e 002b  ld   $2b         ;0ca6 STW
              526f 0081  ld   $81         ;0ca6 'Value'
              5270 00e3  ld   $e3         ;0ca8 ADDI
              5271 0001  ld   $01
              5272 0035  ld   $35         ;0caa BCC
              5273 0053  ld   $53         ;0cab GE
              5274 00ac  ld   $ac
              5275 00ff  ld   $ff         ;0cad RET
              5276 0075  ld   $75         ;0cae PUSH
              5277 0011  ld   $11         ;0caf LDWI
              5278 007c  ld   $7c
              5279 0008  ld   $08
              527a 002b  ld   $2b         ;0cb2 STW
              527b 0038  ld   $38         ;0cb2 'Pos'
              527c 0011  ld   $11         ;0cb4 LDWI
              527d 000f  ld   $0f
              527e 000e  ld   $0e
              527f 002b  ld   $2b         ;0cb7 STW
              5280 0072  ld   $72         ;0cb7 'Radix'
              5281 00cf  ld   $cf         ;0cb9 CALL
              5282 0074  ld   $74         ;0cb9 'ExtractDigit'
              5283 00cf  ld   $cf         ;0cbb CALL
              5284 003a  ld   $3a         ;0cbb 'QPrintChar'
              5285 00e3  ld   $e3         ;0cbd ADDI
              5286 0006  ld   $06
              5287 002b  ld   $2b         ;0cbf STW
              5288 0038  ld   $38         ;0cbf 'Pos'
              5289 0059  ld   $59         ;0cc1 LDI
              528a 003a  ld   $3a
              528b 00cf  ld   $cf         ;0cc3 CALL
              528c 003a  ld   $3a         ;0cc3 'QPrintChar'
              528d 00e3  ld   $e3         ;0cc5 ADDI
              528e 0006  ld   $06
              528f 002b  ld   $2b         ;0cc7 STW
              5290 0038  ld   $38         ;0cc7 'Pos'
              5291 0011  ld   $11         ;0cc9 LDWI
              5292 0058  ld   $58
              5293 0002  ld   $02
              5294 002b  ld   $2b         ;0ccc STW
              5295 0072  ld   $72         ;0ccc 'Radix'
              5296 00cf  ld   $cf         ;0cce CALL
              5297 0074  ld   $74         ;0cce 'ExtractDigit'
              5298 00cf  ld   $cf         ;0cd0 CALL
              5299 003a  ld   $3a         ;0cd0 'QPrintChar'
              529a 00e3  ld   $e3         ;0cd2 ADDI
              529b 0006  ld   $06
              529c 002b  ld   $2b         ;0cd4 STW
              529d 0038  ld   $38         ;0cd4 'Pos'
              529e 0059  ld   $59         ;0cd6 LDI
              529f 003c  ld   $3c
              52a0 002b  ld   $2b         ;0cd8 STW
              52a1 0072  ld   $72         ;0cd8 'Radix'
              52a2 00cf  ld   $cf         ;0cda CALL
              52a3 0074  ld   $74         ;0cda 'ExtractDigit'
              52a4 00cf  ld   $cf         ;0cdc CALL
              52a5 003a  ld   $3a         ;0cdc 'QPrintChar'
              52a6 00e3  ld   $e3         ;0cde ADDI
              52a7 0006  ld   $06
              52a8 002b  ld   $2b         ;0ce0 STW
              52a9 0038  ld   $38         ;0ce0 'Pos'
              52aa 0059  ld   $59         ;0ce2 LDI
              52ab 002e  ld   $2e
              52ac 00cf  ld   $cf         ;0ce4 CALL
              52ad 003a  ld   $3a         ;0ce4 'QPrintChar'
              52ae 00e3  ld   $e3         ;0ce6 ADDI
              52af 0006  ld   $06
              52b0 002b  ld   $2b         ;0ce8 STW
              52b1 0038  ld   $38         ;0ce8 'Pos'
              52b2 0059  ld   $59         ;0cea LDI
              52b3 0006  ld   $06
              52b4 002b  ld   $2b         ;0cec STW
              52b5 0072  ld   $72         ;0cec 'Radix'
              52b6 00cf  ld   $cf         ;0cee CALL
              52b7 0074  ld   $74         ;0cee 'ExtractDigit'
              52b8 00cf  ld   $cf         ;0cf0 CALL
              52b9 003a  ld   $3a         ;0cf0 'QPrintChar'
              52ba 0063  ld   $63         ;0cf2 POP
              52bb 00ff  ld   $ff         ;0cf3 RET
              52bc 002b  ld   $2b         ;0cf4 STW
              52bd 0099  ld   $99         ;0cf4 'PrintBestTime'
              52be 0093  ld   $93         ;0cf6 INC
              52bf 001b  ld   $1b         ;0cf6 '_vLR'+1
              52c0 00ff  ld   $ff         ;0cf8 RET
              52c1 000d  ld   $0d         ;| RAM segment address (high byte first)
              52c2 00a0  ld   $a0         ;|
              52c3 0056  ld   $56         ;| Length (1..256)
              52c4 00cd  ld   $cd         ;0da0 DEF
              52c5 00ef  ld   $ef
              52c6 0075  ld   $75         ;0da2 PUSH
              52c7 0011  ld   $11         ;0da3 LDWI
              52c8 0035  ld   $35
              52c9 0014  ld   $14
              52ca 002b  ld   $2b         ;0da6 STW
              52cb 0038  ld   $38         ;0da6 'Pos'
              52cc 00cd  ld   $cd         ;0da8 DEF
              52cd 00b2  ld   $b2
              52ce 0047  ld   $47         ;0daa 'G'
              52cf 0041  ld   $41         ;0dab 'A'
              52d0 004d  ld   $4d         ;0dac 'M'
              52d1 0045  ld   $45         ;0dad 'E'
              52d2 0020  ld   $20         ;0dae ' '
              52d3 004f  ld   $4f         ;0daf 'O'
              52d4 0056  ld   $56         ;0db0 'V'
              52d5 0045  ld   $45         ;0db1 'E'
              52d6 0052  ld   $52         ;0db2 'R'
              52d7 0000  ld   $00         ;0db3 0
              52d8 00cf  ld   $cf         ;0db4 CALL
              52d9 0085  ld   $85         ;0db4 'PrintText'
              52da 0011  ld   $11         ;0db6 LDWI
              52db 0011  ld   $11
              52dc 0001  ld   $01
              52dd 002b  ld   $2b         ;0db9 STW
              52de 005e  ld   $5e         ;0db9 's'
              52df 00e3  ld   $e3         ;0dbb ADDI
              52e0 0020  ld   $20
              52e1 002b  ld   $2b         ;0dbd STW
              52e2 00b5  ld   $b5         ;0dbd 't'
              52e3 0059  ld   $59         ;0dbf LDI
              52e4 0001  ld   $01
              52e5 002b  ld   $2b         ;0dc1 STW
              52e6 0050  ld   $50         ;0dc1 'Delay'
              52e7 0021  ld   $21         ;0dc3 LDW
              52e8 005e  ld   $5e         ;0dc3 's'
              52e9 00ad  ld   $ad         ;0dc5 PEEK
              52ea 0082  ld   $82         ;0dc6 ANDI
              52eb 0080  ld   $80
              52ec 0035  ld   $35         ;0dc8 BCC
              52ed 0072  ld   $72         ;0dc9 NE
              52ee 00cd  ld   $cd
              52ef 0059  ld   $59         ;0dcb LDI
              52f0 0001  ld   $01
              52f1 0090  ld   $90         ;0dcd BRA
              52f2 00d0  ld   $d0
              52f3 0011  ld   $11         ;0dcf LDWI
              52f4 00ff  ld   $ff
              52f5 00ff  ld   $ff
              52f6 002b  ld   $2b         ;0dd2 STW
              52f7 0030  ld   $30         ;0dd2 'i'
              52f8 00cf  ld   $cf         ;0dd4 CALL
              52f9 0054  ld   $54         ;0dd4 'Wait'
              52fa 0021  ld   $21         ;0dd6 LDW
              52fb fe00  bra  ac          ;+-----------------------------------+
              52fc fcfd  bra  $52fd       ;|                                   |
              52fd 1418  ld   $18,y       ;| Trampoline for page $5200 lookups |
              52fe e006  jmp  y,$06       ;|                                   |
              52ff c218  st   [$18]       ;+-----------------------------------+
              5300 00b5  ld   $b5         ;0dd6 't'
              5301 00ad  ld   $ad         ;0dd8 PEEK
              5302 00b8  ld   $b8         ;0dd9 SUBW
              5303 0030  ld   $30         ;0dd9 'i'
              5304 00f0  ld   $f0         ;0ddb POKE
              5305 00b5  ld   $b5         ;0ddb 't'
              5306 0021  ld   $21         ;0ddd LDW
              5307 005e  ld   $5e         ;0ddd 's'
              5308 00ad  ld   $ad         ;0ddf PEEK
              5309 0099  ld   $99         ;0de0 ADDW
              530a 0030  ld   $30         ;0de0 'i'
              530b 00f0  ld   $f0         ;0de2 POKE
              530c 005e  ld   $5e         ;0de2 's'
              530d 0082  ld   $82         ;0de4 ANDI
              530e 00ff  ld   $ff
              530f 0035  ld   $35         ;0de6 BCC
              5310 0072  ld   $72         ;0de7 NE
              5311 00d2  ld   $d2
              5312 0059  ld   $59         ;0de9 LDI
              5313 001e  ld   $1e
              5314 002b  ld   $2b         ;0deb STW
              5315 0050  ld   $50         ;0deb 'Delay'
              5316 00cf  ld   $cf         ;0ded CALL
              5317 0054  ld   $54         ;0ded 'Wait'
              5318 0063  ld   $63         ;0def POP
              5319 00ff  ld   $ff         ;0df0 RET
              531a 002b  ld   $2b         ;0df1 STW
              531b 00b7  ld   $b7         ;0df1 'GameOver'
              531c 0093  ld   $93         ;0df3 INC
              531d 001b  ld   $1b         ;0df3 '_vLR'+1
              531e 00ff  ld   $ff         ;0df5 RET
              531f 000e  ld   $0e         ;| RAM segment address (high byte first)
              5320 00a0  ld   $a0         ;|
              5321 005b  ld   $5b         ;| Length (1..256)
              5322 00cd  ld   $cd         ;0ea0 DEF
              5323 00f4  ld   $f4
              5324 0075  ld   $75         ;0ea2 PUSH
              5325 0011  ld   $11         ;0ea3 LDWI
              5326 003f  ld   $3f
              5327 0040  ld   $40
              5328 002b  ld   $2b         ;0ea6 STW
              5329 0058  ld   $58         ;0ea6 'p'
              532a 0011  ld   $11         ;0ea8 LDWI
              532b 0000  ld   $00
              532c 0010  ld   $10
              532d 002b  ld   $2b         ;0eab STW
              532e 005a  ld   $5a         ;0eab 'q'
              532f 00cd  ld   $cd         ;0ead DEF
              5330 00bf  ld   $bf
              5331 001a  ld   $1a         ;0eaf LD
              5332 0058  ld   $58         ;0eaf 'p'
              5333 008c  ld   $8c         ;0eb1 XORI
              5334 00fa  ld   $fa
              5335 0035  ld   $35         ;0eb3 BCC
              5336 003f  ld   $3f         ;0eb4 EQ
              5337 00b8  ld   $b8
              5338 0059  ld   $59         ;0eb6 LDI
              5339 0001  ld   $01
              533a 0090  ld   $90         ;0eb8 BRA
              533b 00ba  ld   $ba
              533c 0059  ld   $59         ;0eba LDI
              533d 0006  ld   $06
              533e 0099  ld   $99         ;0ebc ADDW
              533f 0058  ld   $58         ;0ebc 'p'
              5340 002b  ld   $2b         ;0ebe STW
              5341 0058  ld   $58         ;0ebe 'p'
              5342 00ff  ld   $ff         ;0ec0 RET
              5343 002b  ld   $2b         ;0ec1 STW
              5344 0052  ld   $52         ;0ec1 'tmp'
              5345 0021  ld   $21         ;0ec3 LDW
              5346 0058  ld   $58         ;0ec3 'p'
              5347 007f  ld   $7f         ;0ec5 LUP
              5348 0000  ld   $00
              5349 005e  ld   $5e         ;0ec7 ST
              534a 0024  ld   $24
              534b 00cf  ld   $cf         ;0ec9 CALL
              534c 0052  ld   $52         ;0ec9 'tmp'
              534d 007f  ld   $7f         ;0ecb LUP
              534e 0000  ld   $00
              534f 005e  ld   $5e         ;0ecd ST
              5350 0025  ld   $25
              5351 00cf  ld   $cf         ;0ecf CALL
              5352 0052  ld   $52         ;0ecf 'tmp'
              5353 007f  ld   $7f         ;0ed1 LUP
              5354 0000  ld   $00
              5355 005e  ld   $5e         ;0ed3 ST
              5356 0026  ld   $26
              5357 00cf  ld   $cf         ;0ed5 CALL
              5358 0052  ld   $52         ;0ed5 'tmp'
              5359 0011  ld   $11         ;0ed7 LDWI
              535a 00d5  ld   $d5
              535b 001a  ld   $1a
              535c 002b  ld   $2b         ;0eda STW
              535d 0022  ld   $22
              535e 00b4  ld   $b4         ;0edc SYS
              535f 00f3  ld   $f3
              5360 0021  ld   $21         ;0ede LDW
              5361 005a  ld   $5a         ;0ede 'q'
              5362 002b  ld   $2b         ;0ee0 STW
              5363 0028  ld   $28
              5364 00e3  ld   $e3         ;0ee2 ADDI
              5365 0004  ld   $04
              5366 002b  ld   $2b         ;0ee4 STW
              5367 005a  ld   $5a         ;0ee4 'q'
              5368 0011  ld   $11         ;0ee6 LDWI
              5369 00d4  ld   $d4
              536a 0004  ld   $04
              536b 002b  ld   $2b         ;0ee9 STW
              536c 0022  ld   $22
              536d 00b4  ld   $b4         ;0eeb SYS
              536e 0000  ld   $00
              536f 001a  ld   $1a         ;0eed LD
              5370 005b  ld   $5b         ;0eed 'q'+1
              5371 008c  ld   $8c         ;0eef XORI
              5372 0020  ld   $20
              5373 0035  ld   $35         ;0ef1 BCC
              5374 0072  ld   $72         ;0ef2 NE
              5375 00c1  ld   $c1
              5376 0063  ld   $63         ;0ef4 POP
              5377 00ff  ld   $ff         ;0ef5 RET
              5378 002b  ld   $2b         ;0ef6 STW
              5379 00b9  ld   $b9         ;0ef6 'SetupHorizon'
              537a 0093  ld   $93         ;0ef8 INC
              537b 001b  ld   $1b         ;0ef8 '_vLR'+1
              537c 00ff  ld   $ff         ;0efa RET
              537d 000f  ld   $0f         ;| RAM segment address (high byte first)
              537e 00a0  ld   $a0         ;|
              537f 0054  ld   $54         ;| Length (1..256)
              5380 00cf  ld   $cf         ;0fa0 CALL
              5381 00b3  ld   $b3         ;0fa0 'Intro'
              5382 0011  ld   $11         ;0fa2 LDWI
              5383 0000  ld   $00
              5384 0074  ld   $74
              5385 002b  ld   $2b         ;0fa5 STW
              5386 008d  ld   $8d         ;0fa5 'Distance'
              5387 002b  ld   $2b         ;0fa7 STW
              5388 008b  ld   $8b         ;0fa7 'NextTurn'
              5389 0011  ld   $11         ;0fa9 LDWI
              538a 00ff  ld   $ff
              538b 007f  ld   $7f
              538c 002b  ld   $2b         ;0fac STW
              538d 0097  ld   $97         ;0fac 'BestTime'
              538e 0059  ld   $59         ;0fae LDI
              538f 0000  ld   $00
              5390 002b  ld   $2b         ;0fb0 STW
              5391 003e  ld   $3e         ;0fb0 'Time'
              5392 002b  ld   $2b         ;0fb2 STW
              5393 0081  ld   $81         ;0fb2 'Value'
              5394 002b  ld   $2b         ;0fb4 STW
              5395 0046  ld   $46         ;0fb4 'HorizonX'
              5396 002b  ld   $2b         ;0fb6 STW
              5397 0044  ld   $44         ;0fb6 'DriftX'
              5398 002b  ld   $2b         ;0fb8 STW
              5399 0040  ld   $40         ;0fb8 'Speed'
              539a 002b  ld   $2b         ;0fba STW
              539b 009b  ld   $9b         ;0fba 'Random'
              539c 002b  ld   $2b         ;0fbc STW
              539d 0087  ld   $87         ;0fbc 'DX0'
              539e 002b  ld   $2b         ;0fbe STW
              539f 008f  ld   $8f         ;0fbe 'DDX'
              53a0 002b  ld   $2b         ;0fc0 STW
              53a1 0091  ld   $91         ;0fc0 'NextDDX'
              53a2 00cf  ld   $cf         ;0fc2 CALL
              53a3 0093  ld   $93         ;0fc2 'DrawRoad'
              53a4 00cf  ld   $cf         ;0fc4 CALL
              53a5 009f  ld   $9f         ;0fc4 'DrawGrass'
              53a6 00cf  ld   $cf         ;0fc6 CALL
              53a7 00b9  ld   $b9         ;0fc6 'SetupHorizon'
              53a8 0011  ld   $11         ;0fc8 LDWI
              53a9 0035  ld   $35
              53aa 0014  ld   $14
              53ab 002b  ld   $2b         ;0fcb STW
              53ac 0038  ld   $38         ;0fcb 'Pos'
              53ad 00cd  ld   $cd         ;0fcd DEF
              53ae 00d7  ld   $d7
              53af 0047  ld   $47         ;0fcf 'G'
              53b0 0045  ld   $45         ;0fd0 'E'
              53b1 0054  ld   $54         ;0fd1 'T'
              53b2 0020  ld   $20         ;0fd2 ' '
              53b3 0052  ld   $52         ;0fd3 'R'
              53b4 0045  ld   $45         ;0fd4 'E'
              53b5 0041  ld   $41         ;0fd5 'A'
              53b6 0044  ld   $44         ;0fd6 'D'
              53b7 0059  ld   $59         ;0fd7 'Y'
              53b8 0000  ld   $00         ;0fd8 0
              53b9 00cf  ld   $cf         ;0fd9 CALL
              53ba 0085  ld   $85         ;0fd9 'PrintText'
              53bb 00cf  ld   $cf         ;0fdb CALL
              53bc 0070  ld   $70         ;0fdb 'SetupRoad'
              53bd 00cf  ld   $cf         ;0fdd CALL
              53be 00b9  ld   $b9         ;0fdd 'SetupHorizon'
              53bf 00cf  ld   $cf         ;0fdf CALL
              53c0 00b1  ld   $b1         ;0fdf 'SetupIndicator'
              53c1 0011  ld   $11         ;0fe1 LDWI
              53c2 0000  ld   $00
              53c3 0079  ld   $79
              53c4 002b  ld   $2b         ;0fe4 STW
              53c5 0042  ld   $42         ;0fe4 'CarX'
              53c6 001a  ld   $1a         ;0fe6 LD
              53c7 000e  ld   $0e
              53c8 002b  ld   $2b         ;0fe8 STW
              53c9 003c  ld   $3c         ;0fe8 'LastFrame'
              53ca 00cf  ld   $cf         ;0fea CALL
              53cb 00a1  ld   $a1         ;0fea 'PlayGame'
              53cc 00cf  ld   $cf         ;0fec CALL
              53cd 00b7  ld   $b7         ;0fec 'GameOver'
              53ce 0059  ld   $59         ;0fee LDI
              53cf 003f  ld   $3f
              53d0 00cf  ld   $cf         ;0ff0 CALL
              53d1 0099  ld   $99         ;0ff0 'PrintBestTime'
              53d2 0090  ld   $90         ;0ff2 BRA
              53d3 00a0  ld   $a0
              53d4 0000  ld   $00         ;End of Apps/Racer/Racer_v2.gcl, size 1868
                                          ;+-----------------------------------+
                                          ;| Apps/Mandelbrot/Mandelbrot_v1.gcl |
                                          ;+-----------------------------------+
              53d5 dc52  st   $52,[y,x++] ;'R'
              53d6 dc61  st   $61,[y,x++] ;'a'
              53d7 dc63  st   $63,[y,x++] ;'c'
              53d8 dc65  st   $65,[y,x++] ;'e'
              53d9 dc72  st   $72,[y,x++] ;'r'
              53da dc00  st   $00,[y,x++] ;'\x00'
              53db dc00  st   $00,[y,x++] ;'\x00'
              53dc dc00  st   $00,[y,x++] ;'\x00'
              53dd 0089  ld   $89
              53de c218  st   [$18]
              53df 004c  ld   $4c
              53e0 14dd  ld   $dd,y
              53e1 e06f  jmp  y,$6f
              53e2 c219  st   [$19]
Mandelbrot:   53e3 0002  ld   $02         ;| RAM segment address (high byte first)
              53e4 0000  ld   $00         ;|
              53e5 00ef  ld   $ef         ;| Length (1..256)
              53e6 00cd  ld   $cd         ;0200 DEF
              53e7 00e8  ld   $e8
              53e8 0075  ld   $75         ;0202 PUSH
              53e9 0059  ld   $59         ;0203 LDI
              53ea 0000  ld   $00
              53eb 002b  ld   $2b         ;0205 STW
              53ec 0030  ld   $30         ;0205 'sign'
              53ed 002b  ld   $2b         ;0207 STW
              53ee 0032  ld   $32         ;0207 'C'
              53ef 00b8  ld   $b8         ;0209 SUBW
              53f0 0034  ld   $34         ;0209 'A'
              53f1 0035  ld   $35         ;020b BCC
              53f2 0056  ld   $56         ;020c LE
              53f3 0012  ld   $12
              53f4 002b  ld   $2b         ;020e STW
              53f5 0034  ld   $34         ;020e 'A'
              53f6 0059  ld   $59         ;0210 LDI
              53f7 0001  ld   $01
              53f8 002b  ld   $2b         ;0212 STW
              53f9 0030  ld   $30         ;0212 'sign'
              53fa 0059  ld   $59         ;0214 LDI
              53fb fe00  bra  ac          ;+-----------------------------------+
              53fc fcfd  bra  $53fd       ;|                                   |
              53fd 1418  ld   $18,y       ;| Trampoline for page $5300 lookups |
              53fe e006  jmp  y,$06       ;|                                   |
              53ff c218  st   [$18]       ;+-----------------------------------+
              5400 0000  ld   $00
              5401 00b8  ld   $b8         ;0216 SUBW
              5402 0036  ld   $36         ;0216 'B'
              5403 0035  ld   $35         ;0218 BCC
              5404 0056  ld   $56         ;0219 LE
              5405 0021  ld   $21
              5406 002b  ld   $2b         ;021b STW
              5407 0036  ld   $36         ;021b 'B'
              5408 0021  ld   $21         ;021d LDW
              5409 0030  ld   $30         ;021d 'sign'
              540a 008c  ld   $8c         ;021f XORI
              540b 0001  ld   $01
              540c 002b  ld   $2b         ;0221 STW
              540d 0030  ld   $30         ;0221 'sign'
              540e 0059  ld   $59         ;0223 LDI
              540f 0007  ld   $07
              5410 002b  ld   $2b         ;0225 STW
              5411 0038  ld   $38         ;0225 'shift'
              5412 0011  ld   $11         ;0227 LDWI
              5413 0000  ld   $00
              5414 0006  ld   $06
              5415 002b  ld   $2b         ;022a STW
              5416 0022  ld   $22
              5417 0011  ld   $11         ;022c LDWI
              5418 0000  ld   $00
              5419 0002  ld   $02
              541a 002b  ld   $2b         ;022f STW
              541b 003a  ld   $3a         ;022f 'bit'
              541c 0011  ld   $11         ;0231 LDWI
              541d 0000  ld   $00
              541e 00c0  ld   $c0
              541f 0099  ld   $99         ;0234 ADDW
              5420 0032  ld   $32         ;0234 'C'
              5421 0035  ld   $35         ;0236 BCC
              5422 0053  ld   $53         ;0237 GE
              5423 003e  ld   $3e
              5424 0021  ld   $21         ;0239 LDW
              5425 0032  ld   $32         ;0239 'C'
              5426 00e9  ld   $e9         ;023b LSLW
              5427 002b  ld   $2b         ;023c STW
              5428 0032  ld   $32         ;023c 'C'
              5429 0090  ld   $90         ;023e BRA
              542a 004a  ld   $4a
              542b 0021  ld   $21         ;0240 LDW
              542c 0036  ld   $36         ;0240 'B'
              542d 00b4  ld   $b4         ;0242 SYS
              542e 00f7  ld   $f7
              542f 002b  ld   $2b         ;0244 STW
              5430 0036  ld   $36         ;0244 'B'
              5431 0021  ld   $21         ;0246 LDW
              5432 0038  ld   $38         ;0246 'shift'
              5433 00e6  ld   $e6         ;0248 SUBI
              5434 0001  ld   $01
              5435 002b  ld   $2b         ;024a STW
              5436 0038  ld   $38         ;024a 'shift'
              5437 0021  ld   $21         ;024c LDW
              5438 0034  ld   $34         ;024c 'A'
              5439 00b8  ld   $b8         ;024e SUBW
              543a 003a  ld   $3a         ;024e 'bit'
              543b 0035  ld   $35         ;0250 BCC
              543c 0050  ld   $50         ;0251 LT
              543d 0059  ld   $59
              543e 002b  ld   $2b         ;0253 STW
              543f 0034  ld   $34         ;0253 'A'
              5440 0021  ld   $21         ;0255 LDW
              5441 0032  ld   $32         ;0255 'C'
              5442 0099  ld   $99         ;0257 ADDW
              5443 0036  ld   $36         ;0257 'B'
              5444 002b  ld   $2b         ;0259 STW
              5445 0032  ld   $32         ;0259 'C'
              5446 0021  ld   $21         ;025b LDW
              5447 003a  ld   $3a         ;025b 'bit'
              5448 00b4  ld   $b4         ;025d SYS
              5449 00f7  ld   $f7
              544a 0035  ld   $35         ;025f BCC
              544b 0072  ld   $72         ;0260 NE
              544c 002d  ld   $2d
              544d 0021  ld   $21         ;0262 LDW
              544e 0038  ld   $38         ;0262 'shift'
              544f 008c  ld   $8c         ;0264 XORI
              5450 0007  ld   $07
              5451 0035  ld   $35         ;0266 BCC
              5452 0072  ld   $72         ;0267 NE
              5453 0072  ld   $72
              5454 0011  ld   $11         ;0269 LDWI
              5455 00b9  ld   $b9
              5456 0004  ld   $04
              5457 002b  ld   $2b         ;026c STW
              5458 0022  ld   $22
              5459 0021  ld   $21         ;026e LDW
              545a 0032  ld   $32         ;026e 'C'
              545b 00b4  ld   $b4         ;0270 SYS
              545c 0000  ld   $00
              545d 0090  ld   $90         ;0272 BRA
              545e 00d7  ld   $d7
              545f 0021  ld   $21         ;0274 LDW
              5460 0038  ld   $38         ;0274 'shift'
              5461 008c  ld   $8c         ;0276 XORI
              5462 0006  ld   $06
              5463 0035  ld   $35         ;0278 BCC
              5464 0072  ld   $72         ;0279 NE
              5465 0084  ld   $84
              5466 0011  ld   $11         ;027b LDWI
              5467 0087  ld   $87
              5468 0006  ld   $06
              5469 002b  ld   $2b         ;027e STW
              546a 0022  ld   $22
              546b 0021  ld   $21         ;0280 LDW
              546c 0032  ld   $32         ;0280 'C'
              546d 00b4  ld   $b4         ;0282 SYS
              546e 00f7  ld   $f7
              546f 0090  ld   $90         ;0284 BRA
              5470 00d7  ld   $d7
              5471 0021  ld   $21         ;0286 LDW
              5472 0038  ld   $38         ;0286 'shift'
              5473 008c  ld   $8c         ;0288 XORI
              5474 0005  ld   $05
              5475 0035  ld   $35         ;028a BCC
              5476 0072  ld   $72         ;028b NE
              5477 0096  ld   $96
              5478 0011  ld   $11         ;028d LDWI
              5479 006d  ld   $6d
              547a 0006  ld   $06
              547b 002b  ld   $2b         ;0290 STW
              547c 0022  ld   $22
              547d 0021  ld   $21         ;0292 LDW
              547e 0032  ld   $32         ;0292 'C'
              547f 00b4  ld   $b4         ;0294 SYS
              5480 00f6  ld   $f6
              5481 0090  ld   $90         ;0296 BRA
              5482 00d7  ld   $d7
              5483 0021  ld   $21         ;0298 LDW
              5484 0038  ld   $38         ;0298 'shift'
              5485 008c  ld   $8c         ;029a XORI
              5486 0004  ld   $04
              5487 0035  ld   $35         ;029c BCC
              5488 0072  ld   $72         ;029d NE
              5489 00a8  ld   $a8
              548a 0011  ld   $11         ;029f LDWI
              548b 0052  ld   $52
              548c 0006  ld   $06
              548d 002b  ld   $2b         ;02a2 STW
              548e 0022  ld   $22
              548f 0021  ld   $21         ;02a4 LDW
              5490 0032  ld   $32         ;02a4 'C'
              5491 00b4  ld   $b4         ;02a6 SYS
              5492 00f6  ld   $f6
              5493 0090  ld   $90         ;02a8 BRA
              5494 00d7  ld   $d7
              5495 0021  ld   $21         ;02aa LDW
              5496 0038  ld   $38         ;02aa 'shift'
              5497 008c  ld   $8c         ;02ac XORI
              5498 0003  ld   $03
              5499 0035  ld   $35         ;02ae BCC
              549a 0072  ld   $72         ;02af NE
              549b 00ba  ld   $ba
              549c 0011  ld   $11         ;02b1 LDWI
              549d 0036  ld   $36
              549e 0006  ld   $06
              549f 002b  ld   $2b         ;02b4 STW
              54a0 0022  ld   $22
              54a1 0021  ld   $21         ;02b6 LDW
              54a2 0032  ld   $32         ;02b6 'C'
              54a3 00b4  ld   $b4         ;02b8 SYS
              54a4 00f5  ld   $f5
              54a5 0090  ld   $90         ;02ba BRA
              54a6 00d7  ld   $d7
              54a7 0021  ld   $21         ;02bc LDW
              54a8 0038  ld   $38         ;02bc 'shift'
              54a9 008c  ld   $8c         ;02be XORI
              54aa 0002  ld   $02
              54ab 0035  ld   $35         ;02c0 BCC
              54ac 0072  ld   $72         ;02c1 NE
              54ad 00cc  ld   $cc
              54ae 0011  ld   $11         ;02c3 LDWI
              54af 0019  ld   $19
              54b0 0006  ld   $06
              54b1 002b  ld   $2b         ;02c6 STW
              54b2 0022  ld   $22
              54b3 0021  ld   $21         ;02c8 LDW
              54b4 0032  ld   $32         ;02c8 'C'
              54b5 00b4  ld   $b4         ;02ca SYS
              54b6 00f5  ld   $f5
              54b7 0090  ld   $90         ;02cc BRA
              54b8 00d7  ld   $d7
              54b9 0021  ld   $21         ;02ce LDW
              54ba 0038  ld   $38         ;02ce 'shift'
              54bb 008c  ld   $8c         ;02d0 XORI
              54bc 0001  ld   $01
              54bd 0035  ld   $35         ;02d2 BCC
              54be 0072  ld   $72         ;02d3 NE
              54bf 00d7  ld   $d7
              54c0 0021  ld   $21         ;02d5 LDW
              54c1 0032  ld   $32         ;02d5 'C'
              54c2 00b4  ld   $b4         ;02d7 SYS
              54c3 00f7  ld   $f7
              54c4 002b  ld   $2b         ;02d9 STW
              54c5 0032  ld   $32         ;02d9 'C'
              54c6 0021  ld   $21         ;02db LDW
              54c7 0030  ld   $30         ;02db 'sign'
              54c8 0035  ld   $35         ;02dd BCC
              54c9 003f  ld   $3f         ;02de EQ
              54ca 00e4  ld   $e4
              54cb 0059  ld   $59         ;02e0 LDI
              54cc 0000  ld   $00
              54cd 00b8  ld   $b8         ;02e2 SUBW
              54ce 0032  ld   $32         ;02e2 'C'
              54cf 0090  ld   $90         ;02e4 BRA
              54d0 00e6  ld   $e6
              54d1 0021  ld   $21         ;02e6 LDW
              54d2 0032  ld   $32         ;02e6 'C'
              54d3 0063  ld   $63         ;02e8 POP
              54d4 00ff  ld   $ff         ;02e9 RET
              54d5 002b  ld   $2b         ;02ea STW
              54d6 003c  ld   $3c         ;02ea 'MulShift7'
              54d7 0093  ld   $93         ;02ec INC
              54d8 001b  ld   $1b
              54d9 00ff  ld   $ff         ;02ee RET
              54da 0003  ld   $03         ;| RAM segment address (high byte first)
              54db 0000  ld   $00         ;|
              54dc 00eb  ld   $eb         ;| Length (1..256)
              54dd 00cd  ld   $cd         ;0300 DEF
              54de 00e4  ld   $e4
              54df 0075  ld   $75         ;0302 PUSH
              54e0 0011  ld   $11         ;0303 LDWI
              54e1 0000  ld   $00
              54e2 0008  ld   $08
              54e3 002b  ld   $2b         ;0306 STW
              54e4 003e  ld   $3e         ;0306 'Pen'
              54e5 0059  ld   $59         ;0308 LDI
              54e6 0078  ld   $78
              54e7 002b  ld   $2b         ;030a STW
              54e8 0040  ld   $40         ;030a 'Height'
              54e9 0059  ld   $59         ;030c LDI
              54ea 00a0  ld   $a0
              54eb 002b  ld   $2b         ;030e STW
              54ec 0042  ld   $42         ;030e 'Width'
              54ed 002b  ld   $2b         ;0310 STW
              54ee 0044  ld   $44         ;0310 'len'
              54ef 002b  ld   $2b         ;0312 STW
              54f0 0046  ld   $46         ;0312 'LastPixel'
              54f1 0059  ld   $59         ;0314 LDI
              54f2 0000  ld   $00
              54f3 002b  ld   $2b         ;0316 STW
              54f4 0048  ld   $48         ;0316 'DY'
              54f5 0021  ld   $21         ;0318 LDW
              54f6 004a  ld   $4a         ;0318 'Step'
              54f7 002b  ld   $2b         ;031a STW
              54f8 004c  ld   $4c         ;031a 'DX'
              54f9 0059  ld   $59         ;031c LDI
              54fa 003f  ld   $3f
              54fb fe00  bra  ac          ;+-----------------------------------+
              54fc fcfd  bra  $54fd       ;|                                   |
              54fd 1418  ld   $18,y       ;| Trampoline for page $5400 lookups |
              54fe e006  jmp  y,$06       ;|                                   |
              54ff c218  st   [$18]       ;+-----------------------------------+
              5500 00f0  ld   $f0         ;031e POKE
              5501 003e  ld   $3e         ;031e 'Pen'
              5502 00cf  ld   $cf         ;0320 CALL
              5503 004e  ld   $4e         ;0320 'UpdateClock'
              5504 0021  ld   $21         ;0322 LDW
              5505 0046  ld   $46         ;0322 'LastPixel'
              5506 0035  ld   $35         ;0324 BCC
              5507 0072  ld   $72         ;0325 NE
              5508 0071  ld   $71
              5509 0021  ld   $21         ;0327 LDW
              550a 0050  ld   $50         ;0327 'Y0'
              550b 002b  ld   $2b         ;0329 STW
              550c 0034  ld   $34         ;0329 'A'
              550d 002b  ld   $2b         ;032b STW
              550e 0036  ld   $36         ;032b 'B'
              550f 00cf  ld   $cf         ;032d CALL
              5510 003c  ld   $3c         ;032d 'MulShift7'
              5511 002b  ld   $2b         ;032f STW
              5512 0052  ld   $52         ;032f 'YY'
              5513 0021  ld   $21         ;0331 LDW
              5514 0054  ld   $54         ;0331 'X0'
              5515 00e3  ld   $e3         ;0333 ADDI
              5516 0080  ld   $80
              5517 002b  ld   $2b         ;0335 STW
              5518 0034  ld   $34         ;0335 'A'
              5519 002b  ld   $2b         ;0337 STW
              551a 0036  ld   $36         ;0337 'B'
              551b 00cf  ld   $cf         ;0339 CALL
              551c 003c  ld   $3c         ;0339 'MulShift7'
              551d 0099  ld   $99         ;033b ADDW
              551e 0052  ld   $52         ;033b 'YY'
              551f 00e6  ld   $e6         ;033d SUBI
              5520 0008  ld   $08
              5521 0035  ld   $35         ;033f BCC
              5522 0053  ld   $53         ;0340 GE
              5523 0044  ld   $44
              5524 0059  ld   $59         ;0342 LDI
              5525 0000  ld   $00
              5526 0090  ld   $90         ;0344 BRA
              5527 006f  ld   $6f
              5528 0021  ld   $21         ;0346 LDW
              5529 0054  ld   $54         ;0346 'X0'
              552a 00e6  ld   $e6         ;0348 SUBI
              552b 0020  ld   $20
              552c 002b  ld   $2b         ;034a STW
              552d 0034  ld   $34         ;034a 'A'
              552e 002b  ld   $2b         ;034c STW
              552f 0036  ld   $36         ;034c 'B'
              5530 00cf  ld   $cf         ;034e CALL
              5531 003c  ld   $3c         ;034e 'MulShift7'
              5532 0099  ld   $99         ;0350 ADDW
              5533 0052  ld   $52         ;0350 'YY'
              5534 002b  ld   $2b         ;0352 STW
              5535 0034  ld   $34         ;0352 'A'
              5536 0099  ld   $99         ;0354 ADDW
              5537 0054  ld   $54         ;0354 'X0'
              5538 00e6  ld   $e6         ;0356 SUBI
              5539 0020  ld   $20
              553a 002b  ld   $2b         ;0358 STW
              553b 0036  ld   $36         ;0358 'B'
              553c 00cf  ld   $cf         ;035a CALL
              553d 003c  ld   $3c         ;035a 'MulShift7'
              553e 002b  ld   $2b         ;035c STW
              553f 0056  ld   $56         ;035c 'tmp'
              5540 0099  ld   $99         ;035e ADDW
              5541 0056  ld   $56         ;035e 'tmp'
              5542 002b  ld   $2b         ;0360 STW
              5543 0056  ld   $56         ;0360 'tmp'
              5544 0099  ld   $99         ;0362 ADDW
              5545 0056  ld   $56         ;0362 'tmp'
              5546 002b  ld   $2b         ;0364 STW
              5547 0056  ld   $56         ;0364 'tmp'
              5548 00b8  ld   $b8         ;0366 SUBW
              5549 0052  ld   $52         ;0366 'YY'
              554a 0035  ld   $35         ;0368 BCC
              554b 0053  ld   $53         ;0369 GE
              554c 006d  ld   $6d
              554d 0059  ld   $59         ;036b LDI
              554e 0000  ld   $00
              554f 0090  ld   $90         ;036d BRA
              5550 006f  ld   $6f
              5551 00cf  ld   $cf         ;036f CALL
              5552 0058  ld   $58         ;036f 'CalcPixel'
              5553 0090  ld   $90         ;0371 BRA
              5554 0073  ld   $73
              5555 00cf  ld   $cf         ;0373 CALL
              5556 0058  ld   $58         ;0373 'CalcPixel'
              5557 002b  ld   $2b         ;0375 STW
              5558 0046  ld   $46         ;0375 'LastPixel'
              5559 00f0  ld   $f0         ;0377 POKE
              555a 003e  ld   $3e         ;0377 'Pen'
              555b 0021  ld   $21         ;0379 LDW
              555c 0044  ld   $44         ;0379 'len'
              555d 00e6  ld   $e6         ;037b SUBI
              555e 0001  ld   $01
              555f 0035  ld   $35         ;037d BCC
              5560 004d  ld   $4d         ;037e GT
              5561 009f  ld   $9f
              5562 0021  ld   $21         ;0380 LDW
              5563 0048  ld   $48         ;0380 'DY'
              5564 002b  ld   $2b         ;0382 STW
              5565 0056  ld   $56         ;0382 'tmp'
              5566 0021  ld   $21         ;0384 LDW
              5567 004c  ld   $4c         ;0384 'DX'
              5568 002b  ld   $2b         ;0386 STW
              5569 0048  ld   $48         ;0386 'DY'
              556a 0059  ld   $59         ;0388 LDI
              556b 0000  ld   $00
              556c 00b8  ld   $b8         ;038a SUBW
              556d 0056  ld   $56         ;038a 'tmp'
              556e 002b  ld   $2b         ;038c STW
              556f 004c  ld   $4c         ;038c 'DX'
              5570 0021  ld   $21         ;038e LDW
              5571 004c  ld   $4c         ;038e 'DX'
              5572 0035  ld   $35         ;0390 BCC
              5573 003f  ld   $3f         ;0391 EQ
              5574 0099  ld   $99
              5575 0021  ld   $21         ;0393 LDW
              5576 0042  ld   $42         ;0393 'Width'
              5577 00e6  ld   $e6         ;0395 SUBI
              5578 0001  ld   $01
              5579 002b  ld   $2b         ;0397 STW
              557a 0042  ld   $42         ;0397 'Width'
              557b 0090  ld   $90         ;0399 BRA
              557c 009f  ld   $9f
              557d 0021  ld   $21         ;039b LDW
              557e 0040  ld   $40         ;039b 'Height'
              557f 00e6  ld   $e6         ;039d SUBI
              5580 0001  ld   $01
              5581 002b  ld   $2b         ;039f STW
              5582 0040  ld   $40         ;039f 'Height'
              5583 002b  ld   $2b         ;03a1 STW
              5584 0044  ld   $44         ;03a1 'len'
              5585 0035  ld   $35         ;03a3 BCC
              5586 0056  ld   $56         ;03a4 LE
              5587 00e0  ld   $e0
              5588 0021  ld   $21         ;03a6 LDW
              5589 0054  ld   $54         ;03a6 'X0'
              558a 0099  ld   $99         ;03a8 ADDW
              558b 004c  ld   $4c         ;03a8 'DX'
              558c 002b  ld   $2b         ;03aa STW
              558d 0054  ld   $54         ;03aa 'X0'
              558e 0021  ld   $21         ;03ac LDW
              558f 0050  ld   $50         ;03ac 'Y0'
              5590 0099  ld   $99         ;03ae ADDW
              5591 0048  ld   $48         ;03ae 'DY'
              5592 002b  ld   $2b         ;03b0 STW
              5593 0050  ld   $50         ;03b0 'Y0'
              5594 0021  ld   $21         ;03b2 LDW
              5595 004c  ld   $4c         ;03b2 'DX'
              5596 0035  ld   $35         ;03b4 BCC
              5597 0053  ld   $53         ;03b5 GE
              5598 00bb  ld   $bb
              5599 0021  ld   $21         ;03b7 LDW
              559a 003e  ld   $3e         ;03b7 'Pen'
              559b 00e6  ld   $e6         ;03b9 SUBI
              559c 0001  ld   $01
              559d 002b  ld   $2b         ;03bb STW
              559e 003e  ld   $3e         ;03bb 'Pen'
              559f 0021  ld   $21         ;03bd LDW
              55a0 004c  ld   $4c         ;03bd 'DX'
              55a1 0035  ld   $35         ;03bf BCC
              55a2 0056  ld   $56         ;03c0 LE
              55a3 00c6  ld   $c6
              55a4 0021  ld   $21         ;03c2 LDW
              55a5 003e  ld   $3e         ;03c2 'Pen'
              55a6 00e3  ld   $e3         ;03c4 ADDI
              55a7 0001  ld   $01
              55a8 002b  ld   $2b         ;03c6 STW
              55a9 003e  ld   $3e         ;03c6 'Pen'
              55aa 0021  ld   $21         ;03c8 LDW
              55ab 0048  ld   $48         ;03c8 'DY'
              55ac 0035  ld   $35         ;03ca BCC
              55ad 0053  ld   $53         ;03cb GE
              55ae 00d2  ld   $d2
              55af 0011  ld   $11         ;03cd LDWI
              55b0 0000  ld   $00
              55b1 00ff  ld   $ff
              55b2 0099  ld   $99         ;03d0 ADDW
              55b3 003e  ld   $3e         ;03d0 'Pen'
              55b4 002b  ld   $2b         ;03d2 STW
              55b5 003e  ld   $3e         ;03d2 'Pen'
              55b6 0021  ld   $21         ;03d4 LDW
              55b7 0048  ld   $48         ;03d4 'DY'
              55b8 0035  ld   $35         ;03d6 BCC
              55b9 0056  ld   $56         ;03d7 LE
              55ba 00de  ld   $de
              55bb 0011  ld   $11         ;03d9 LDWI
              55bc 0000  ld   $00
              55bd 0001  ld   $01
              55be 0099  ld   $99         ;03dc ADDW
              55bf 003e  ld   $3e         ;03dc 'Pen'
              55c0 002b  ld   $2b         ;03de STW
              55c1 003e  ld   $3e         ;03de 'Pen'
              55c2 0090  ld   $90         ;03e0 BRA
              55c3 001a  ld   $1a
              55c4 00cf  ld   $cf         ;03e2 CALL
              55c5 005a  ld   $5a         ;03e2 'GrayOut'
              55c6 0063  ld   $63         ;03e4 POP
              55c7 00ff  ld   $ff         ;03e5 RET
              55c8 002b  ld   $2b         ;03e6 STW
              55c9 005c  ld   $5c         ;03e6 'CalcSet'
              55ca 0093  ld   $93         ;03e8 INC
              55cb 001b  ld   $1b
              55cc 00ff  ld   $ff         ;03ea RET
              55cd 0004  ld   $04         ;| RAM segment address (high byte first)
              55ce 0000  ld   $00         ;|
              55cf 00f0  ld   $f0         ;| Length (1..256)
              55d0 00cd  ld   $cd         ;0400 DEF
              55d1 00e4  ld   $e4
              55d2 0075  ld   $75         ;0402 PUSH
              55d3 0011  ld   $11         ;0403 LDWI
              55d4 0000  ld   $00
              55d5 0008  ld   $08
              55d6 002b  ld   $2b         ;0406 STW
              55d7 003e  ld   $3e         ;0406 'Pen'
              55d8 0059  ld   $59         ;0408 LDI
              55d9 0078  ld   $78
              55da 002b  ld   $2b         ;040a STW
              55db 0040  ld   $40         ;040a 'Height'
              55dc 0059  ld   $59         ;040c LDI
              55dd 00a0  ld   $a0
              55de 002b  ld   $2b         ;040e STW
              55df 0042  ld   $42         ;040e 'Width'
              55e0 002b  ld   $2b         ;0410 STW
              55e1 0044  ld   $44         ;0410 'len'
              55e2 0059  ld   $59         ;0412 LDI
              55e3 0001  ld   $01
              55e4 002b  ld   $2b         ;0414 STW
              55e5 004c  ld   $4c         ;0414 'DX'
              55e6 0059  ld   $59         ;0416 LDI
              55e7 0000  ld   $00
              55e8 002b  ld   $2b         ;0418 STW
              55e9 0048  ld   $48         ;0418 'DY'
              55ea 0011  ld   $11         ;041a LDWI
              55eb 0000  ld   $00
              55ec 0006  ld   $06
              55ed 002b  ld   $2b         ;041d STW
              55ee 0022  ld   $22
              55ef 0059  ld   $59         ;041f LDI
              55f0 0000  ld   $00
              55f1 002b  ld   $2b         ;0421 STW
              55f2 005e  ld   $5e         ;0421 'Level'
              55f3 0059  ld   $59         ;0423 LDI
              55f4 0020  ld   $20
              55f5 002b  ld   $2b         ;0425 STW
              55f6 0060  ld   $60         ;0425 'i'
              55f7 0021  ld   $21         ;0427 LDW
              55f8 003e  ld   $3e         ;0427 'Pen'
              55f9 00ad  ld   $ad         ;0429 PEEK
              55fa 0082  ld   $82         ;042a ANDI
              55fb fe00  bra  ac          ;+-----------------------------------+
              55fc fcfd  bra  $55fd       ;|                                   |
              55fd 1418  ld   $18,y       ;| Trampoline for page $5500 lookups |
              55fe e006  jmp  y,$06       ;|                                   |
              55ff c218  st   [$18]       ;+-----------------------------------+
              5600 003f  ld   $3f
              5601 00b8  ld   $b8         ;042c SUBW
              5602 0060  ld   $60         ;042c 'i'
              5603 0035  ld   $35         ;042e BCC
              5604 0050  ld   $50         ;042f LT
              5605 0042  ld   $42
              5606 00f0  ld   $f0         ;0431 POKE
              5607 003e  ld   $3e         ;0431 'Pen'
              5608 0021  ld   $21         ;0433 LDW
              5609 0060  ld   $60         ;0433 'i'
              560a 0082  ld   $82         ;0435 ANDI
              560b 0015  ld   $15
              560c 0035  ld   $35         ;0437 BCC
              560d 003f  ld   $3f         ;0438 EQ
              560e 003c  ld   $3c
              560f 0059  ld   $59         ;043a LDI
              5610 0001  ld   $01
              5611 0090  ld   $90         ;043c BRA
              5612 003e  ld   $3e
              5613 0059  ld   $59         ;043e LDI
              5614 0002  ld   $02
              5615 0099  ld   $99         ;0440 ADDW
              5616 005e  ld   $5e         ;0440 'Level'
              5617 002b  ld   $2b         ;0442 STW
              5618 005e  ld   $5e         ;0442 'Level'
              5619 0021  ld   $21         ;0444 LDW
              561a 0060  ld   $60         ;0444 'i'
              561b 00b4  ld   $b4         ;0446 SYS
              561c 00f7  ld   $f7
              561d 0035  ld   $35         ;0448 BCC
              561e 004d  ld   $4d         ;0449 GT
              561f 0023  ld   $23
              5620 00f0  ld   $f0         ;044b POKE
              5621 003e  ld   $3e         ;044b 'Pen'
              5622 0021  ld   $21         ;044d LDW
              5623 005e  ld   $5e         ;044d 'Level'
              5624 0035  ld   $35         ;044f BCC
              5625 003f  ld   $3f         ;0450 EQ
              5626 0083  ld   $83
              5627 001a  ld   $1a         ;0452 LD
              5628 003f  ld   $3f         ;0452 'Pen'+1
              5629 0082  ld   $82         ;0454 ANDI
              562a 0001  ld   $01
              562b 002b  ld   $2b         ;0456 STW
              562c 0060  ld   $60         ;0456 'i'
              562d 0099  ld   $99         ;0458 ADDW
              562e 0060  ld   $60         ;0458 'i'
              562f 002b  ld   $2b         ;045a STW
              5630 0060  ld   $60         ;045a 'i'
              5631 0021  ld   $21         ;045c LDW
              5632 003e  ld   $3e         ;045c 'Pen'
              5633 0082  ld   $82         ;045e ANDI
              5634 0001  ld   $01
              5635 0099  ld   $99         ;0460 ADDW
              5636 0060  ld   $60         ;0460 'i'
              5637 002b  ld   $2b         ;0462 STW
              5638 0060  ld   $60         ;0462 'i'
              5639 00cd  ld   $cd         ;0464 DEF
              563a 0068  ld   $68
              563b 0000  ld   $00
              563c 0002  ld   $02
              563d 0003  ld   $03
              563e 0001  ld   $01
              563f 0099  ld   $99         ;046a ADDW
              5640 0060  ld   $60         ;046a 'i'
              5641 00ad  ld   $ad         ;046c PEEK
              5642 0099  ld   $99         ;046d ADDW
              5643 005e  ld   $5e         ;046d 'Level'
              5644 00e6  ld   $e6         ;046f SUBI
              5645 0001  ld   $01
              5646 002b  ld   $2b         ;0471 STW
              5647 005e  ld   $5e         ;0471 'Level'
              5648 0021  ld   $21         ;0473 LDW
              5649 005e  ld   $5e         ;0473 'Level'
              564a 00e6  ld   $e6         ;0475 SUBI
              564b 0003  ld   $03
              564c 0035  ld   $35         ;0477 BCC
              564d 0050  ld   $50         ;0478 LT
              564e 0083  ld   $83
              564f 002b  ld   $2b         ;047a STW
              5650 005e  ld   $5e         ;047a 'Level'
              5651 0021  ld   $21         ;047c LDW
              5652 003e  ld   $3e         ;047c 'Pen'
              5653 00ad  ld   $ad         ;047e PEEK
              5654 00e3  ld   $e3         ;047f ADDI
              5655 0015  ld   $15
              5656 00f0  ld   $f0         ;0481 POKE
              5657 003e  ld   $3e         ;0481 'Pen'
              5658 0090  ld   $90         ;0483 BRA
              5659 0071  ld   $71
              565a 0021  ld   $21         ;0485 LDW
              565b 0044  ld   $44         ;0485 'len'
              565c 00e6  ld   $e6         ;0487 SUBI
              565d 0001  ld   $01
              565e 0035  ld   $35         ;0489 BCC
              565f 004d  ld   $4d         ;048a GT
              5660 00ab  ld   $ab
              5661 0021  ld   $21         ;048c LDW
              5662 0048  ld   $48         ;048c 'DY'
              5663 002b  ld   $2b         ;048e STW
              5664 0056  ld   $56         ;048e 'tmp'
              5665 0021  ld   $21         ;0490 LDW
              5666 004c  ld   $4c         ;0490 'DX'
              5667 002b  ld   $2b         ;0492 STW
              5668 0048  ld   $48         ;0492 'DY'
              5669 0059  ld   $59         ;0494 LDI
              566a 0000  ld   $00
              566b 00b8  ld   $b8         ;0496 SUBW
              566c 0056  ld   $56         ;0496 'tmp'
              566d 002b  ld   $2b         ;0498 STW
              566e 004c  ld   $4c         ;0498 'DX'
              566f 0021  ld   $21         ;049a LDW
              5670 004c  ld   $4c         ;049a 'DX'
              5671 0035  ld   $35         ;049c BCC
              5672 003f  ld   $3f         ;049d EQ
              5673 00a5  ld   $a5
              5674 0021  ld   $21         ;049f LDW
              5675 0042  ld   $42         ;049f 'Width'
              5676 00e6  ld   $e6         ;04a1 SUBI
              5677 0001  ld   $01
              5678 002b  ld   $2b         ;04a3 STW
              5679 0042  ld   $42         ;04a3 'Width'
              567a 0090  ld   $90         ;04a5 BRA
              567b 00ab  ld   $ab
              567c 0021  ld   $21         ;04a7 LDW
              567d 0040  ld   $40         ;04a7 'Height'
              567e 00e6  ld   $e6         ;04a9 SUBI
              567f 0001  ld   $01
              5680 002b  ld   $2b         ;04ab STW
              5681 0040  ld   $40         ;04ab 'Height'
              5682 002b  ld   $2b         ;04ad STW
              5683 0044  ld   $44         ;04ad 'len'
              5684 0035  ld   $35         ;04af BCC
              5685 0056  ld   $56         ;04b0 LE
              5686 00e2  ld   $e2
              5687 0021  ld   $21         ;04b2 LDW
              5688 004c  ld   $4c         ;04b2 'DX'
              5689 0035  ld   $35         ;04b4 BCC
              568a 0053  ld   $53         ;04b5 GE
              568b 00bb  ld   $bb
              568c 0021  ld   $21         ;04b7 LDW
              568d 003e  ld   $3e         ;04b7 'Pen'
              568e 00e6  ld   $e6         ;04b9 SUBI
              568f 0001  ld   $01
              5690 002b  ld   $2b         ;04bb STW
              5691 003e  ld   $3e         ;04bb 'Pen'
              5692 0021  ld   $21         ;04bd LDW
              5693 004c  ld   $4c         ;04bd 'DX'
              5694 0035  ld   $35         ;04bf BCC
              5695 0056  ld   $56         ;04c0 LE
              5696 00c6  ld   $c6
              5697 0021  ld   $21         ;04c2 LDW
              5698 003e  ld   $3e         ;04c2 'Pen'
              5699 00e3  ld   $e3         ;04c4 ADDI
              569a 0001  ld   $01
              569b 002b  ld   $2b         ;04c6 STW
              569c 003e  ld   $3e         ;04c6 'Pen'
              569d 0021  ld   $21         ;04c8 LDW
              569e 0048  ld   $48         ;04c8 'DY'
              569f 0035  ld   $35         ;04ca BCC
              56a0 0053  ld   $53         ;04cb GE
              56a1 00d2  ld   $d2
              56a2 0011  ld   $11         ;04cd LDWI
              56a3 0000  ld   $00
              56a4 00ff  ld   $ff
              56a5 0099  ld   $99         ;04d0 ADDW
              56a6 003e  ld   $3e         ;04d0 'Pen'
              56a7 002b  ld   $2b         ;04d2 STW
              56a8 003e  ld   $3e         ;04d2 'Pen'
              56a9 0021  ld   $21         ;04d4 LDW
              56aa 0048  ld   $48         ;04d4 'DY'
              56ab 0035  ld   $35         ;04d6 BCC
              56ac 0056  ld   $56         ;04d7 LE
              56ad 00de  ld   $de
              56ae 0011  ld   $11         ;04d9 LDWI
              56af 0000  ld   $00
              56b0 0001  ld   $01
              56b1 0099  ld   $99         ;04dc ADDW
              56b2 003e  ld   $3e         ;04dc 'Pen'
              56b3 002b  ld   $2b         ;04de STW
              56b4 003e  ld   $3e         ;04de 'Pen'
              56b5 00cf  ld   $cf         ;04e0 CALL
              56b6 004e  ld   $4e         ;04e0 'UpdateClock'
              56b7 0090  ld   $90         ;04e2 BRA
              56b8 0018  ld   $18
              56b9 0063  ld   $63         ;04e4 POP
              56ba 00ff  ld   $ff         ;04e5 RET
              56bb 002b  ld   $2b         ;04e6 STW
              56bc 005a  ld   $5a         ;04e6 'GrayOut'
              56bd 0011  ld   $11         ;04e8 LDWI
              56be 001a  ld   $1a
              56bf 0020  ld   $20
              56c0 002b  ld   $2b         ;04eb STW
              56c1 0062  ld   $62         ;04eb 'Separator'
              56c2 0093  ld   $93         ;04ed INC
              56c3 001b  ld   $1b
              56c4 00ff  ld   $ff         ;04ef RET
              56c5 0005  ld   $05         ;| RAM segment address (high byte first)
              56c6 0000  ld   $00         ;|
              56c7 00f6  ld   $f6         ;| Length (1..256)
              56c8 00cd  ld   $cd         ;0500 DEF
              56c9 00a4  ld   $a4
              56ca 001a  ld   $1a         ;0502 LD
              56cb 000e  ld   $0e
              56cc 00b8  ld   $b8         ;0504 SUBW
              56cd 0064  ld   $64         ;0504 'LastFrame'
              56ce 0082  ld   $82         ;0506 ANDI
              56cf 00ff  ld   $ff
              56d0 002b  ld   $2b         ;0508 STW
              56d1 0066  ld   $66         ;0508 'Elapsed'
              56d2 00e6  ld   $e6         ;050a SUBI
              56d3 003c  ld   $3c
              56d4 0035  ld   $35         ;050c BCC
              56d5 0053  ld   $53         ;050d GE
              56d6 0019  ld   $19
              56d7 001a  ld   $1a         ;050f LD
              56d8 0011  ld   $11
              56d9 0082  ld   $82         ;0511 ANDI
              56da 0080  ld   $80
              56db 0035  ld   $35         ;0513 BCC
              56dc 003f  ld   $3f         ;0514 EQ
              56dd 0015  ld   $15
              56de 00ff  ld   $ff         ;0516 RET
              56df 0059  ld   $59         ;0517 LDI
              56e0 000f  ld   $0f
              56e1 0090  ld   $90         ;0519 BRA
              56e2 001b  ld   $1b
              56e3 0059  ld   $59         ;051b LDI
              56e4 003f  ld   $3f
              56e5 002b  ld   $2b         ;051d STW
              56e6 0068  ld   $68         ;051d 'Color'
              56e7 0075  ld   $75         ;051f PUSH
              56e8 0021  ld   $21         ;0520 LDW
              56e9 006a  ld   $6a         ;0520 'Clock0'
              56ea 0099  ld   $99         ;0522 ADDW
              56eb 0066  ld   $66         ;0522 'Elapsed'
              56ec 002b  ld   $2b         ;0524 STW
              56ed 006a  ld   $6a         ;0524 'Clock0'
              56ee 0021  ld   $21         ;0526 LDW
              56ef 0064  ld   $64         ;0526 'LastFrame'
              56f0 0099  ld   $99         ;0528 ADDW
              56f1 0066  ld   $66         ;0528 'Elapsed'
              56f2 002b  ld   $2b         ;052a STW
              56f3 0064  ld   $64         ;052a 'LastFrame'
              56f4 0011  ld   $11         ;052c LDWI
              56f5 00f1  ld   $f1
              56f6 00f1  ld   $f1
              56f7 0099  ld   $99         ;052f ADDW
              56f8 006a  ld   $6a         ;052f 'Clock0'
              56f9 0035  ld   $35         ;0531 BCC
              56fa 0050  ld   $50         ;0532 LT
              56fb fe00  bra  ac          ;+-----------------------------------+
              56fc fcfd  bra  $56fd       ;|                                   |
              56fd 1418  ld   $18,y       ;| Trampoline for page $5600 lookups |
              56fe e006  jmp  y,$06       ;|                                   |
              56ff c218  st   [$18]       ;+-----------------------------------+
              5700 0038  ld   $38
              5701 002b  ld   $2b         ;0534 STW
              5702 006a  ld   $6a         ;0534 'Clock0'
              5703 0059  ld   $59         ;0536 LDI
              5704 0001  ld   $01
              5705 00cf  ld   $cf         ;0538 CALL
              5706 006c  ld   $6c         ;0538 'AddMinutes'
              5707 001a  ld   $1a         ;053a LD
              5708 0063  ld   $63         ;053a 'Separator'+1
              5709 00fc  ld   $fc         ;053c XORW
              570a 0062  ld   $62         ;053c 'Separator'
              570b 005e  ld   $5e         ;053e ST
              570c 0063  ld   $63         ;053e 'Separator'+1
              570d 001a  ld   $1a         ;0540 LD
              570e 0011  ld   $11
              570f 008c  ld   $8c         ;0542 XORI
              5710 0077  ld   $77
              5711 0035  ld   $35         ;0544 BCC
              5712 0072  ld   $72         ;0545 NE
              5713 004b  ld   $4b
              5714 002b  ld   $2b         ;0547 STW
              5715 006a  ld   $6a         ;0547 'Clock0'
              5716 0059  ld   $59         ;0549 LDI
              5717 0001  ld   $01
              5718 0090  ld   $90         ;054b BRA
              5719 0070  ld   $70
              571a 008c  ld   $8c         ;054d XORI
              571b 000c  ld   $0c
              571c 0035  ld   $35         ;054f BCC
              571d 0072  ld   $72         ;0550 NE
              571e 0057  ld   $57
              571f 002b  ld   $2b         ;0552 STW
              5720 006a  ld   $6a         ;0552 'Clock0'
              5721 0011  ld   $11         ;0554 LDWI
              5722 00ff  ld   $ff
              5723 00ff  ld   $ff
              5724 0090  ld   $90         ;0557 BRA
              5725 0070  ld   $70
              5726 008c  ld   $8c         ;0559 XORI
              5727 0006  ld   $06
              5728 0035  ld   $35         ;055b BCC
              5729 0072  ld   $72         ;055c NE
              572a 0063  ld   $63
              572b 002b  ld   $2b         ;055e STW
              572c 006a  ld   $6a         ;055e 'Clock0'
              572d 0011  ld   $11         ;0560 LDWI
              572e 00c4  ld   $c4
              572f 00ff  ld   $ff
              5730 0090  ld   $90         ;0563 BRA
              5731 0070  ld   $70
              5732 008c  ld   $8c         ;0565 XORI
              5733 0003  ld   $03
              5734 0035  ld   $35         ;0567 BCC
              5735 0072  ld   $72         ;0568 NE
              5736 006e  ld   $6e
              5737 002b  ld   $2b         ;056a STW
              5738 006a  ld   $6a         ;056a 'Clock0'
              5739 0059  ld   $59         ;056c LDI
              573a 003c  ld   $3c
              573b 0090  ld   $90         ;056e BRA
              573c 0070  ld   $70
              573d 0059  ld   $59         ;0570 LDI
              573e 0000  ld   $00
              573f 0035  ld   $35         ;0572 BCC
              5740 003f  ld   $3f         ;0573 EQ
              5741 007e  ld   $7e
              5742 00cf  ld   $cf         ;0575 CALL
              5743 006c  ld   $6c         ;0575 'AddMinutes'
              5744 0059  ld   $59         ;0577 LDI
              5745 0000  ld   $00
              5746 002b  ld   $2b         ;0579 STW
              5747 006a  ld   $6a         ;0579 'Clock0'
              5748 0011  ld   $11         ;057b LDWI
              5749 0000  ld   $00
              574a 003a  ld   $3a
              574b 002b  ld   $2b         ;057e STW
              574c 0062  ld   $62         ;057e 'Separator'
              574d 001a  ld   $1a         ;0580 LD
              574e 0011  ld   $11
              574f 0088  ld   $88         ;0582 ORI
              5750 000f  ld   $0f
              5751 005e  ld   $5e         ;0584 ST
              5752 0011  ld   $11
              5753 0011  ld   $11         ;0586 LDWI
              5754 005c  ld   $5c
              5755 0044  ld   $44
              5756 002b  ld   $2b         ;0589 STW
              5757 006e  ld   $6e         ;0589 'Pos'
              5758 0021  ld   $21         ;058b LDW
              5759 0070  ld   $70         ;058b 'Clock1'
              575a 002b  ld   $2b         ;058d STW
              575b 0072  ld   $72         ;058d 'Value'
              575c 0011  ld   $11         ;058f LDWI
              575d 0058  ld   $58
              575e 0002  ld   $02
              575f 00cf  ld   $cf         ;0592 CALL
              5760 0074  ld   $74         ;0592 'NextDigit'
              5761 0059  ld   $59         ;0594 LDI
              5762 003c  ld   $3c
              5763 00cf  ld   $cf         ;0596 CALL
              5764 0074  ld   $74         ;0596 'NextDigit'
              5765 001a  ld   $1a         ;0598 LD
              5766 0063  ld   $63         ;0598 'Separator'+1
              5767 00cf  ld   $cf         ;059a CALL
              5768 0076  ld   $76         ;059a 'PrintChar'
              5769 0059  ld   $59         ;059c LDI
              576a 000a  ld   $0a
              576b 00cf  ld   $cf         ;059e CALL
              576c 0074  ld   $74         ;059e 'NextDigit'
              576d 0059  ld   $59         ;05a0 LDI
              576e 0001  ld   $01
              576f 00cf  ld   $cf         ;05a2 CALL
              5770 0074  ld   $74         ;05a2 'NextDigit'
              5771 0063  ld   $63         ;05a4 POP
              5772 00ff  ld   $ff         ;05a5 RET
              5773 002b  ld   $2b         ;05a6 STW
              5774 004e  ld   $4e         ;05a6 'UpdateClock'
              5775 00cd  ld   $cd         ;05a8 DEF
              5776 00ef  ld   $ef
              5777 00e6  ld   $e6         ;05aa SUBI
              5778 0020  ld   $20
              5779 002b  ld   $2b         ;05ac STW
              577a 0060  ld   $60         ;05ac 'i'
              577b 0011  ld   $11         ;05ae LDWI
              577c 0000  ld   $00
              577d 0007  ld   $07
              577e 002b  ld   $2b         ;05b1 STW
              577f 0078  ld   $78         ;05b1 'fontData'
              5780 0021  ld   $21         ;05b3 LDW
              5781 0060  ld   $60         ;05b3 'i'
              5782 00e9  ld   $e9         ;05b5 LSLW
              5783 00e9  ld   $e9         ;05b6 LSLW
              5784 0099  ld   $99         ;05b7 ADDW
              5785 0060  ld   $60         ;05b7 'i'
              5786 0099  ld   $99         ;05b9 ADDW
              5787 0078  ld   $78         ;05b9 'fontData'
              5788 002b  ld   $2b         ;05bb STW
              5789 0078  ld   $78         ;05bb 'fontData'
              578a 0011  ld   $11         ;05bd LDWI
              578b 0000  ld   $00
              578c 0008  ld   $08
              578d 0099  ld   $99         ;05c0 ADDW
              578e 006e  ld   $6e         ;05c0 'Pos'
              578f 002b  ld   $2b         ;05c2 STW
              5790 007a  ld   $7a         ;05c2 'q'
              5791 0059  ld   $59         ;05c4 LDI
              5792 0000  ld   $00
              5793 005e  ld   $5e         ;05c6 ST
              5794 0024  ld   $24
              5795 0021  ld   $21         ;05c8 LDW
              5796 0068  ld   $68         ;05c8 'Color'
              5797 005e  ld   $5e         ;05ca ST
              5798 0025  ld   $25
              5799 0021  ld   $21         ;05cc LDW
              579a 006e  ld   $6e         ;05cc 'Pos'
              579b 002b  ld   $2b         ;05ce STW
              579c 0028  ld   $28
              579d 00e3  ld   $e3         ;05d0 ADDI
              579e 0006  ld   $06
              579f 002b  ld   $2b         ;05d2 STW
              57a0 006e  ld   $6e         ;05d2 'Pos'
              57a1 0011  ld   $11         ;05d4 LDWI
              57a2 00e1  ld   $e1
              57a3 0004  ld   $04
              57a4 002b  ld   $2b         ;05d7 STW
              57a5 0022  ld   $22
              57a6 0059  ld   $59         ;05d9 LDI
              57a7 00fb  ld   $fb
              57a8 002b  ld   $2b         ;05db STW
              57a9 0060  ld   $60         ;05db 'i'
              57aa 0021  ld   $21         ;05dd LDW
              57ab 0078  ld   $78         ;05dd 'fontData'
              57ac 007f  ld   $7f         ;05df LUP
              57ad 0000  ld   $00
              57ae 0093  ld   $93         ;05e1 INC
              57af 0078  ld   $78         ;05e1 'fontData'
              57b0 005e  ld   $5e         ;05e3 ST
              57b1 0026  ld   $26
              57b2 00b4  ld   $b4         ;05e5 SYS
              57b3 00cc  ld   $cc
              57b4 0093  ld   $93         ;05e7 INC
              57b5 0028  ld   $28
              57b6 0093  ld   $93         ;05e9 INC
              57b7 0060  ld   $60         ;05e9 'i'
              57b8 0021  ld   $21         ;05eb LDW
              57b9 0060  ld   $60         ;05eb 'i'
              57ba 0035  ld   $35         ;05ed BCC
              57bb 0072  ld   $72         ;05ee NE
              57bc 00db  ld   $db
              57bd 00ff  ld   $ff         ;05f0 RET
              57be 002b  ld   $2b         ;05f1 STW
              57bf 0076  ld   $76         ;05f1 'PrintChar'
              57c0 0093  ld   $93         ;05f3 INC
              57c1 001b  ld   $1b
              57c2 00ff  ld   $ff         ;05f5 RET
              57c3 0006  ld   $06         ;| RAM segment address (high byte first)
              57c4 0000  ld   $00         ;|
              57c5 00fe  ld   $fe         ;| Length (1..256)
              57c6 00cd  ld   $cd         ;0600 DEF
              57c7 001d  ld   $1d
              57c8 0075  ld   $75         ;0602 PUSH
              57c9 002b  ld   $2b         ;0603 STW
              57ca 007c  ld   $7c         ;0603 'Radix'
              57cb 0059  ld   $59         ;0605 LDI
              57cc 0030  ld   $30
              57cd 002b  ld   $2b         ;0607 STW
              57ce 007e  ld   $7e         ;0607 'Digit'
              57cf 0021  ld   $21         ;0609 LDW
              57d0 0072  ld   $72         ;0609 'Value'
              57d1 00b8  ld   $b8         ;060b SUBW
              57d2 007c  ld   $7c         ;060b 'Radix'
              57d3 0035  ld   $35         ;060d BCC
              57d4 0050  ld   $50         ;060e LT
              57d5 0017  ld   $17
              57d6 002b  ld   $2b         ;0610 STW
              57d7 0072  ld   $72         ;0610 'Value'
              57d8 0093  ld   $93         ;0612 INC
              57d9 007e  ld   $7e         ;0612 'Digit'
              57da 00b8  ld   $b8         ;0614 SUBW
              57db 007c  ld   $7c         ;0614 'Radix'
              57dc 0035  ld   $35         ;0616 BCC
              57dd 0053  ld   $53         ;0617 GE
              57de 000e  ld   $0e
              57df 0021  ld   $21         ;0619 LDW
              57e0 007e  ld   $7e         ;0619 'Digit'
              57e1 00cf  ld   $cf         ;061b CALL
              57e2 0076  ld   $76         ;061b 'PrintChar'
              57e3 0063  ld   $63         ;061d POP
              57e4 00ff  ld   $ff         ;061e RET
              57e5 002b  ld   $2b         ;061f STW
              57e6 0074  ld   $74         ;061f 'NextDigit'
              57e7 00cd  ld   $cd         ;0621 DEF
              57e8 003a  ld   $3a
              57e9 0099  ld   $99         ;0623 ADDW
              57ea 0070  ld   $70         ;0623 'Clock1'
              57eb 002b  ld   $2b         ;0625 STW
              57ec 0070  ld   $70         ;0625 'Clock1'
              57ed 0035  ld   $35         ;0627 BCC
              57ee 0053  ld   $53         ;0628 GE
              57ef 002f  ld   $2f
              57f0 0011  ld   $11         ;062a LDWI
              57f1 00a0  ld   $a0
              57f2 0005  ld   $05
              57f3 0099  ld   $99         ;062d ADDW
              57f4 0070  ld   $70         ;062d 'Clock1'
              57f5 002b  ld   $2b         ;062f STW
              57f6 0070  ld   $70         ;062f 'Clock1'
              57f7 0011  ld   $11         ;0631 LDWI
              57f8 0060  ld   $60
              57f9 00fa  ld   $fa
              57fa 0099  ld   $99         ;0634 ADDW
              57fb fe00  bra  ac          ;+-----------------------------------+
              57fc fcfd  bra  $57fd       ;|                                   |
              57fd 1418  ld   $18,y       ;| Trampoline for page $5700 lookups |
              57fe e006  jmp  y,$06       ;|                                   |
              57ff c218  st   [$18]       ;+-----------------------------------+
              5800 0070  ld   $70         ;0634 'Clock1'
              5801 0035  ld   $35         ;0636 BCC
              5802 0050  ld   $50         ;0637 LT
              5803 0039  ld   $39
              5804 002b  ld   $2b         ;0639 STW
              5805 0070  ld   $70         ;0639 'Clock1'
              5806 00ff  ld   $ff         ;063b RET
              5807 002b  ld   $2b         ;063c STW
              5808 006c  ld   $6c         ;063c 'AddMinutes'
              5809 00cd  ld   $cd         ;063e DEF
              580a 008e  ld   $8e
              580b 0075  ld   $75         ;0640 PUSH
              580c 0059  ld   $59         ;0641 LDI
              580d 0000  ld   $00
              580e 002b  ld   $2b         ;0643 STW
              580f 0081  ld   $81         ;0643 'X'
              5810 002b  ld   $2b         ;0645 STW
              5811 0083  ld   $83         ;0645 'XX'
              5812 002b  ld   $2b         ;0647 STW
              5813 0085  ld   $85         ;0647 'Y'
              5814 002b  ld   $2b         ;0649 STW
              5815 0052  ld   $52         ;0649 'YY'
              5816 002b  ld   $2b         ;064b STW
              5817 0060  ld   $60         ;064b 'i'
              5818 0021  ld   $21         ;064d LDW
              5819 0060  ld   $60         ;064d 'i'
              581a 00e3  ld   $e3         ;064f ADDI
              581b 0001  ld   $01
              581c 002b  ld   $2b         ;0651 STW
              581d 0060  ld   $60         ;0651 'i'
              581e 008c  ld   $8c         ;0653 XORI
              581f 0040  ld   $40
              5820 0035  ld   $35         ;0655 BCC
              5821 003f  ld   $3f         ;0656 EQ
              5822 008c  ld   $8c
              5823 0021  ld   $21         ;0658 LDW
              5824 0081  ld   $81         ;0658 'X'
              5825 002b  ld   $2b         ;065a STW
              5826 0034  ld   $34         ;065a 'A'
              5827 0021  ld   $21         ;065c LDW
              5828 0085  ld   $85         ;065c 'Y'
              5829 0099  ld   $99         ;065e ADDW
              582a 0085  ld   $85         ;065e 'Y'
              582b 002b  ld   $2b         ;0660 STW
              582c 0036  ld   $36         ;0660 'B'
              582d 00cf  ld   $cf         ;0662 CALL
              582e 003c  ld   $3c         ;0662 'MulShift7'
              582f 0099  ld   $99         ;0664 ADDW
              5830 0050  ld   $50         ;0664 'Y0'
              5831 002b  ld   $2b         ;0666 STW
              5832 0085  ld   $85         ;0666 'Y'
              5833 0021  ld   $21         ;0668 LDW
              5834 0083  ld   $83         ;0668 'XX'
              5835 00b8  ld   $b8         ;066a SUBW
              5836 0052  ld   $52         ;066a 'YY'
              5837 0099  ld   $99         ;066c ADDW
              5838 0054  ld   $54         ;066c 'X0'
              5839 002b  ld   $2b         ;066e STW
              583a 0081  ld   $81         ;066e 'X'
              583b 002b  ld   $2b         ;0670 STW
              583c 0034  ld   $34         ;0670 'A'
              583d 002b  ld   $2b         ;0672 STW
              583e 0036  ld   $36         ;0672 'B'
              583f 00cf  ld   $cf         ;0674 CALL
              5840 003c  ld   $3c         ;0674 'MulShift7'
              5841 002b  ld   $2b         ;0676 STW
              5842 0083  ld   $83         ;0676 'XX'
              5843 0021  ld   $21         ;0678 LDW
              5844 0085  ld   $85         ;0678 'Y'
              5845 002b  ld   $2b         ;067a STW
              5846 0034  ld   $34         ;067a 'A'
              5847 002b  ld   $2b         ;067c STW
              5848 0036  ld   $36         ;067c 'B'
              5849 00cf  ld   $cf         ;067e CALL
              584a 003c  ld   $3c         ;067e 'MulShift7'
              584b 002b  ld   $2b         ;0680 STW
              584c 0052  ld   $52         ;0680 'YY'
              584d 0011  ld   $11         ;0682 LDWI
              584e 0000  ld   $00
              584f 00fe  ld   $fe
              5850 0099  ld   $99         ;0685 ADDW
              5851 0083  ld   $83         ;0685 'XX'
              5852 0099  ld   $99         ;0687 ADDW
              5853 0052  ld   $52         ;0687 'YY'
              5854 0035  ld   $35         ;0689 BCC
              5855 0056  ld   $56         ;068a LE
              5856 004b  ld   $4b
              5857 0021  ld   $21         ;068c LDW
              5858 0060  ld   $60         ;068c 'i'
              5859 0063  ld   $63         ;068e POP
              585a 00ff  ld   $ff         ;068f RET
              585b 002b  ld   $2b         ;0690 STW
              585c 0058  ld   $58         ;0690 'CalcPixel'
              585d 0059  ld   $59         ;0692 LDI
              585e 0000  ld   $00
              585f 002b  ld   $2b         ;0694 STW
              5860 006a  ld   $6a         ;0694 'Clock0'
              5861 002b  ld   $2b         ;0696 STW
              5862 0070  ld   $70         ;0696 'Clock1'
              5863 002b  ld   $2b         ;0698 STW
              5864 007e  ld   $7e         ;0698 'Digit'
              5865 001a  ld   $1a         ;069a LD
              5866 000e  ld   $0e
              5867 002b  ld   $2b         ;069c STW
              5868 0064  ld   $64         ;069c 'LastFrame'
              5869 0011  ld   $11         ;069e LDWI
              586a 004c  ld   $4c
              586b 00ff  ld   $ff
              586c 002b  ld   $2b         ;06a1 STW
              586d 0050  ld   $50         ;06a1 'Y0'
              586e 0011  ld   $11         ;06a3 LDWI
              586f 00c0  ld   $c0
              5870 00fe  ld   $fe
              5871 002b  ld   $2b         ;06a6 STW
              5872 0054  ld   $54         ;06a6 'X0'
              5873 0059  ld   $59         ;06a8 LDI
              5874 0003  ld   $03
              5875 002b  ld   $2b         ;06aa STW
              5876 004a  ld   $4a         ;06aa 'Step'
              5877 00cf  ld   $cf         ;06ac CALL
              5878 005c  ld   $5c         ;06ac 'CalcSet'
              5879 0011  ld   $11         ;06ae LDWI
              587a 006c  ld   $6c
              587b 00ff  ld   $ff
              587c 002b  ld   $2b         ;06b1 STW
              587d 0050  ld   $50         ;06b1 'Y0'
              587e 0011  ld   $11         ;06b3 LDWI
              587f 009e  ld   $9e
              5880 00ff  ld   $ff
              5881 002b  ld   $2b         ;06b6 STW
              5882 0054  ld   $54         ;06b6 'X0'
              5883 0059  ld   $59         ;06b8 LDI
              5884 0001  ld   $01
              5885 002b  ld   $2b         ;06ba STW
              5886 004a  ld   $4a         ;06ba 'Step'
              5887 00cf  ld   $cf         ;06bc CALL
              5888 005c  ld   $5c         ;06bc 'CalcSet'
              5889 0011  ld   $11         ;06be LDWI
              588a 00c4  ld   $c4
              588b 00ff  ld   $ff
              588c 002b  ld   $2b         ;06c1 STW
              588d 0050  ld   $50         ;06c1 'Y0'
              588e 0011  ld   $11         ;06c3 LDWI
              588f 0000  ld   $00
              5890 00ff  ld   $ff
              5891 002b  ld   $2b         ;06c6 STW
              5892 0054  ld   $54         ;06c6 'X0'
              5893 0059  ld   $59         ;06c8 LDI
              5894 0001  ld   $01
              5895 002b  ld   $2b         ;06ca STW
              5896 004a  ld   $4a         ;06ca 'Step'
              5897 00cf  ld   $cf         ;06cc CALL
              5898 005c  ld   $5c         ;06cc 'CalcSet'
              5899 0011  ld   $11         ;06ce LDWI
              589a 00c0  ld   $c0
              589b 00fe  ld   $fe
              589c 002b  ld   $2b         ;06d1 STW
              589d 0050  ld   $50         ;06d1 'Y0'
              589e 0011  ld   $11         ;06d3 LDWI
              589f 0098  ld   $98
              58a0 00fe  ld   $fe
              58a1 002b  ld   $2b         ;06d6 STW
              58a2 0054  ld   $54         ;06d6 'X0'
              58a3 0059  ld   $59         ;06d8 LDI
              58a4 0009  ld   $09
              58a5 002b  ld   $2b         ;06da STW
              58a6 004a  ld   $4a         ;06da 'Step'
              58a7 00cf  ld   $cf         ;06dc CALL
              58a8 005c  ld   $5c         ;06dc 'CalcSet'
              58a9 0059  ld   $59         ;06de LDI
              58aa 0000  ld   $00
              58ab 002b  ld   $2b         ;06e0 STW
              58ac 0050  ld   $50         ;06e0 'Y0'
              58ad 0011  ld   $11         ;06e2 LDWI
              58ae 009c  ld   $9c
              58af 00ff  ld   $ff
              58b0 002b  ld   $2b         ;06e5 STW
              58b1 0054  ld   $54         ;06e5 'X0'
              58b2 0059  ld   $59         ;06e7 LDI
              58b3 0001  ld   $01
              58b4 002b  ld   $2b         ;06e9 STW
              58b5 004a  ld   $4a         ;06e9 'Step'
              58b6 00cf  ld   $cf         ;06eb CALL
              58b7 005c  ld   $5c         ;06eb 'CalcSet'
              58b8 0011  ld   $11         ;06ed LDWI
              58b9 00c4  ld   $c4
              58ba 00ff  ld   $ff
              58bb 002b  ld   $2b         ;06f0 STW
              58bc 0050  ld   $50         ;06f0 'Y0'
              58bd 0059  ld   $59         ;06f2 LDI
              58be 0000  ld   $00
              58bf 002b  ld   $2b         ;06f4 STW
              58c0 0054  ld   $54         ;06f4 'X0'
              58c1 0059  ld   $59         ;06f6 LDI
              58c2 0001  ld   $01
              58c3 002b  ld   $2b         ;06f8 STW
              58c4 004a  ld   $4a         ;06f8 'Step'
              58c5 00cf  ld   $cf         ;06fa CALL
              58c6 005c  ld   $5c         ;06fa 'CalcSet'
              58c7 0090  ld   $90         ;06fc BRA
              58c8 009c  ld   $9c
              58c9 0000  ld   $00         ;End of Apps/Mandelbrot/Mandelbrot_v1.gcl, size 1255
                                          ;+-----------------------------------+
                                          ;| Apps/Credits/Credits_v3.gcl       |
                                          ;+-----------------------------------+
              58ca dc4d  st   $4d,[y,x++] ;'M'
              58cb dc61  st   $61,[y,x++] ;'a'
              58cc dc6e  st   $6e,[y,x++] ;'n'
              58cd dc64  st   $64,[y,x++] ;'d'
              58ce dc65  st   $65,[y,x++] ;'e'
              58cf dc6c  st   $6c,[y,x++] ;'l'
              58d0 dc62  st   $62,[y,x++] ;'b'
              58d1 dc72  st   $72,[y,x++] ;'r'
              58d2 00e3  ld   $e3
              58d3 c218  st   [$18]
              58d4 0053  ld   $53
              58d5 14dd  ld   $dd,y
              58d6 e06f  jmp  y,$6f
              58d7 c219  st   [$19]
Credits:      58d8 0002  ld   $02         ;| RAM segment address (high byte first)
              58d9 0000  ld   $00         ;|
              58da 00d4  ld   $d4         ;| Length (1..256)
              58db 00cd  ld   $cd         ;0200 DEF
              58dc 0025  ld   $25
              58dd 0075  ld   $75         ;0202 PUSH
              58de 0021  ld   $21         ;0203 LDW
              58df 0030  ld   $30         ;0203 'Text'
              58e0 00ad  ld   $ad         ;0205 PEEK
              58e1 002b  ld   $2b         ;0206 STW
              58e2 0032  ld   $32         ;0206 'Char'
              58e3 0035  ld   $35         ;0208 BCC
              58e4 003f  ld   $3f         ;0209 EQ
              58e5 0023  ld   $23
              58e6 0093  ld   $93         ;020b INC
              58e7 0030  ld   $30         ;020b 'Text'
              58e8 0021  ld   $21         ;020d LDW
              58e9 0032  ld   $32         ;020d 'Char'
              58ea 008c  ld   $8c         ;020f XORI
              58eb 000a  ld   $0a
              58ec 0035  ld   $35         ;0211 BCC
              58ed 0072  ld   $72         ;0212 NE
              58ee 001f  ld   $1f
              58ef 0059  ld   $59         ;0214 LDI
              58f0 0002  ld   $02
              58f1 005e  ld   $5e         ;0216 ST
              58f2 0034  ld   $34         ;0216 'Pos'
              58f3 0011  ld   $11         ;0218 LDWI
              58f4 0000  ld   $00
              58f5 0008  ld   $08
              58f6 0099  ld   $99         ;021b ADDW
              58f7 0034  ld   $34         ;021b 'Pos'
              58f8 002b  ld   $2b         ;021d STW
              58f9 0034  ld   $34         ;021d 'Pos'
              58fa 0090  ld   $90         ;021f BRA
              58fb fe00  bra  ac          ;+-----------------------------------+
              58fc fcfd  bra  $58fd       ;|                                   |
              58fd 1418  ld   $18,y       ;| Trampoline for page $5800 lookups |
              58fe e006  jmp  y,$06       ;|                                   |
              58ff c218  st   [$18]       ;+-----------------------------------+
              5900 0021  ld   $21
              5901 00cf  ld   $cf         ;0221 CALL
              5902 0036  ld   $36         ;0221 'PrintChar'
              5903 0090  ld   $90         ;0223 BRA
              5904 0001  ld   $01
              5905 0063  ld   $63         ;0225 POP
              5906 00ff  ld   $ff         ;0226 RET
              5907 002b  ld   $2b         ;0227 STW
              5908 0038  ld   $38         ;0227 'PrintText'
              5909 00cd  ld   $cd         ;0229 DEF
              590a 00cd  ld   $cd
              590b 0054  ld   $54         ;022b 'T'
              590c 0068  ld   $68         ;022c 'h'
              590d 0069  ld   $69         ;022d 'i'
              590e 0073  ld   $73         ;022e 's'
              590f 0020  ld   $20         ;022f ' '
              5910 0047  ld   $47         ;0230 'G'
              5911 0069  ld   $69         ;0231 'i'
              5912 0067  ld   $67         ;0232 'g'
              5913 0061  ld   $61         ;0233 'a'
              5914 0074  ld   $74         ;0234 't'
              5915 0072  ld   $72         ;0235 'r'
              5916 006f  ld   $6f         ;0236 'o'
              5917 006e  ld   $6e         ;0237 'n'
              5918 0020  ld   $20         ;0238 ' '
              5919 0054  ld   $54         ;0239 'T'
              591a 0054  ld   $54         ;023a 'T'
              591b 004c  ld   $4c         ;023b 'L'
              591c 0020  ld   $20         ;023c ' '
              591d 0063  ld   $63         ;023d 'c'
              591e 006f  ld   $6f         ;023e 'o'
              591f 006d  ld   $6d         ;023f 'm'
              5920 0070  ld   $70         ;0240 'p'
              5921 0075  ld   $75         ;0241 'u'
              5922 0074  ld   $74         ;0242 't'
              5923 0065  ld   $65         ;0243 'e'
              5924 0072  ld   $72         ;0244 'r'
              5925 000a  ld   $0a         ;0245 10
              5926 006b  ld   $6b         ;0246 'k'
              5927 0069  ld   $69         ;0247 'i'
              5928 0074  ld   $74         ;0248 't'
              5929 0020  ld   $20         ;0249 ' '
              592a 0077  ld   $77         ;024a 'w'
              592b 0061  ld   $61         ;024b 'a'
              592c 0073  ld   $73         ;024c 's'
              592d 0020  ld   $20         ;024d ' '
              592e 0062  ld   $62         ;024e 'b'
              592f 0072  ld   $72         ;024f 'r'
              5930 006f  ld   $6f         ;0250 'o'
              5931 0075  ld   $75         ;0251 'u'
              5932 0067  ld   $67         ;0252 'g'
              5933 0068  ld   $68         ;0253 'h'
              5934 0074  ld   $74         ;0254 't'
              5935 0020  ld   $20         ;0255 ' '
              5936 0074  ld   $74         ;0256 't'
              5937 006f  ld   $6f         ;0257 'o'
              5938 0020  ld   $20         ;0258 ' '
              5939 0079  ld   $79         ;0259 'y'
              593a 006f  ld   $6f         ;025a 'o'
              593b 0075  ld   $75         ;025b 'u'
              593c 0020  ld   $20         ;025c ' '
              593d 0062  ld   $62         ;025d 'b'
              593e 0079  ld   $79         ;025e 'y'
              593f 000a  ld   $0a         ;025f 10
              5940 004d  ld   $4d         ;0260 'M'
              5941 0061  ld   $61         ;0261 'a'
              5942 0072  ld   $72         ;0262 'r'
              5943 0063  ld   $63         ;0263 'c'
              5944 0065  ld   $65         ;0264 'e'
              5945 006c  ld   $6c         ;0265 'l'
              5946 0020  ld   $20         ;0266 ' '
              5947 0076  ld   $76         ;0267 'v'
              5948 0061  ld   $61         ;0268 'a'
              5949 006e  ld   $6e         ;0269 'n'
              594a 0020  ld   $20         ;026a ' '
              594b 004b  ld   $4b         ;026b 'K'
              594c 0065  ld   $65         ;026c 'e'
              594d 0072  ld   $72         ;026d 'r'
              594e 0076  ld   $76         ;026e 'v'
              594f 0069  ld   $69         ;026f 'i'
              5950 006e  ld   $6e         ;0270 'n'
              5951 0063  ld   $63         ;0271 'c'
              5952 006b  ld   $6b         ;0272 'k'
              5953 0020  ld   $20         ;0273 ' '
              5954 0061  ld   $61         ;0274 'a'
              5955 006e  ld   $6e         ;0275 'n'
              5956 0064  ld   $64         ;0276 'd'
              5957 000a  ld   $0a         ;0277 10
              5958 0057  ld   $57         ;0278 'W'
              5959 0061  ld   $61         ;0279 'a'
              595a 006c  ld   $6c         ;027a 'l'
              595b 0074  ld   $74         ;027b 't'
              595c 0065  ld   $65         ;027c 'e'
              595d 0072  ld   $72         ;027d 'r'
              595e 0020  ld   $20         ;027e ' '
              595f 0042  ld   $42         ;027f 'B'
              5960 0065  ld   $65         ;0280 'e'
              5961 006c  ld   $6c         ;0281 'l'
              5962 0067  ld   $67         ;0282 'g'
              5963 0065  ld   $65         ;0283 'e'
              5964 0072  ld   $72         ;0284 'r'
              5965 0073  ld   $73         ;0285 's'
              5966 002e  ld   $2e         ;0286 '.'
              5967 000a  ld   $0a         ;0287 10
              5968 000a  ld   $0a         ;0288 10
              5969 0060  ld   $60         ;0289 '`'
              596a 0054  ld   $54         ;028a 'T'
              596b 0065  ld   $65         ;028b 'e'
              596c 0074  ld   $74         ;028c 't'
              596d 0072  ld   $72         ;028d 'r'
              596e 006f  ld   $6f         ;028e 'o'
              596f 006e  ld   $6e         ;028f 'n'
              5970 0069  ld   $69         ;0290 'i'
              5971 0073  ld   $73         ;0291 's'
              5972 0027  ld   $27         ;0292 "'"
              5973 0020  ld   $20         ;0293 ' '
              5974 0069  ld   $69         ;0294 'i'
              5975 0073  ld   $73         ;0295 's'
              5976 0020  ld   $20         ;0296 ' '
              5977 0062  ld   $62         ;0297 'b'
              5978 0079  ld   $79         ;0298 'y'
              5979 0020  ld   $20         ;0299 ' '
              597a 0061  ld   $61         ;029a 'a'
              597b 0074  ld   $74         ;029b 't'
              597c 0036  ld   $36         ;029c '6'
              597d 0037  ld   $37         ;029d '7'
              597e 0020  ld   $20         ;029e ' '
              597f 0061  ld   $61         ;029f 'a'
              5980 006e  ld   $6e         ;02a0 'n'
              5981 0064  ld   $64         ;02a1 'd'
              5982 000a  ld   $0a         ;02a2 10
              5983 0060  ld   $60         ;02a3 '`'
              5984 0042  ld   $42         ;02a4 'B'
              5985 0072  ld   $72         ;02a5 'r'
              5986 0069  ld   $69         ;02a6 'i'
              5987 0063  ld   $63         ;02a7 'c'
              5988 006b  ld   $6b         ;02a8 'k'
              5989 0073  ld   $73         ;02a9 's'
              598a 0027  ld   $27         ;02aa "'"
              598b 0020  ld   $20         ;02ab ' '
              598c 0062  ld   $62         ;02ac 'b'
              598d 0079  ld   $79         ;02ad 'y'
              598e 0020  ld   $20         ;02ae ' '
              598f 0078  ld   $78         ;02af 'x'
              5990 0062  ld   $62         ;02b0 'b'
              5991 0078  ld   $78         ;02b1 'x'
              5992 002e  ld   $2e         ;02b2 '.'
              5993 000a  ld   $0a         ;02b3 10
              5994 000a  ld   $0a         ;02b4 10
              5995 0053  ld   $53         ;02b5 'S'
              5996 0070  ld   $70         ;02b6 'p'
              5997 0065  ld   $65         ;02b7 'e'
              5998 0063  ld   $63         ;02b8 'c'
              5999 0069  ld   $69         ;02b9 'i'
              599a 0061  ld   $61         ;02ba 'a'
              599b 006c  ld   $6c         ;02bb 'l'
              599c 0020  ld   $20         ;02bc ' '
              599d 0074  ld   $74         ;02bd 't'
              599e 0068  ld   $68         ;02be 'h'
              599f 0061  ld   $61         ;02bf 'a'
              59a0 006e  ld   $6e         ;02c0 'n'
              59a1 006b  ld   $6b         ;02c1 'k'
              59a2 0073  ld   $73         ;02c2 's'
              59a3 0020  ld   $20         ;02c3 ' '
              59a4 006d  ld   $6d         ;02c4 'm'
              59a5 0075  ld   $75         ;02c5 'u'
              59a6 0073  ld   $73         ;02c6 's'
              59a7 0074  ld   $74         ;02c7 't'
              59a8 0020  ld   $20         ;02c8 ' '
              59a9 0067  ld   $67         ;02c9 'g'
              59aa 006f  ld   $6f         ;02ca 'o'
              59ab 0020  ld   $20         ;02cb ' '
              59ac 0074  ld   $74         ;02cc 't'
              59ad 006f  ld   $6f         ;02cd 'o'
              59ae 0000  ld   $00         ;02ce 0
              59af 002b  ld   $2b         ;02cf STW
              59b0 003a  ld   $3a         ;02cf 'Part1'
              59b1 0093  ld   $93         ;02d1 INC
              59b2 001b  ld   $1b
              59b3 00ff  ld   $ff         ;02d3 RET
              59b4 0003  ld   $03         ;| RAM segment address (high byte first)
              59b5 0000  ld   $00         ;|
              59b6 00e8  ld   $e8         ;| Length (1..256)
              59b7 00cd  ld   $cd         ;0300 DEF
              59b8 0098  ld   $98
              59b9 000a  ld   $0a         ;0302 10
              59ba 004d  ld   $4d         ;0303 'M'
              59bb 0061  ld   $61         ;0304 'a'
              59bc 0072  ld   $72         ;0305 'r'
              59bd 0063  ld   $63         ;0306 'c'
              59be 002c  ld   $2c         ;0307 ','
              59bf 0020  ld   $20         ;0308 ' '
              59c0 0050  ld   $50         ;0309 'P'
              59c1 0061  ld   $61         ;030a 'a'
              59c2 0075  ld   $75         ;030b 'u'
              59c3 006c  ld   $6c         ;030c 'l'
              59c4 002c  ld   $2c         ;030d ','
              59c5 0020  ld   $20         ;030e ' '
              59c6 0049  ld   $49         ;030f 'I'
              59c7 0076  ld   $76         ;0310 'v'
              59c8 0061  ld   $61         ;0311 'a'
              59c9 006e  ld   $6e         ;0312 'n'
              59ca 0061  ld   $61         ;0313 'a'
              59cb 002c  ld   $2c         ;0314 ','
              59cc 0020  ld   $20         ;0315 ' '
              59cd 004f  ld   $4f         ;0316 'O'
              59ce 0073  ld   $73         ;0317 's'
              59cf 0063  ld   $63         ;0318 'c'
              59d0 0061  ld   $61         ;0319 'a'
              59d1 0072  ld   $72         ;031a 'r'
              59d2 002c  ld   $2c         ;031b ','
              59d3 000a  ld   $0a         ;031c 10
              59d4 004d  ld   $4d         ;031d 'M'
              59d5 0061  ld   $61         ;031e 'a'
              59d6 0072  ld   $72         ;031f 'r'
              59d7 0074  ld   $74         ;0320 't'
              59d8 0069  ld   $69         ;0321 'i'
              59d9 006a  ld   $6a         ;0322 'j'
              59da 006e  ld   $6e         ;0323 'n'
              59db 002c  ld   $2c         ;0324 ','
              59dc 0020  ld   $20         ;0325 ' '
              59dd 0045  ld   $45         ;0326 'E'
              59de 0072  ld   $72         ;0327 'r'
              59df 0069  ld   $69         ;0328 'i'
              59e0 006b  ld   $6b         ;0329 'k'
              59e1 002c  ld   $2c         ;032a ','
              59e2 0020  ld   $20         ;032b ' '
              59e3 0043  ld   $43         ;032c 'C'
              59e4 0068  ld   $68         ;032d 'h'
              59e5 0075  ld   $75         ;032e 'u'
              59e6 0063  ld   $63         ;032f 'c'
              59e7 006b  ld   $6b         ;0330 'k'
              59e8 002c  ld   $2c         ;0331 ','
              59e9 0020  ld   $20         ;0332 ' '
              59ea 0042  ld   $42         ;0333 'B'
              59eb 0065  ld   $65         ;0334 'e'
              59ec 006e  ld   $6e         ;0335 'n'
              59ed 002c  ld   $2c         ;0336 ','
              59ee 000a  ld   $0a         ;0337 10
              59ef 0044  ld   $44         ;0338 'D'
              59f0 0069  ld   $69         ;0339 'i'
              59f1 0065  ld   $65         ;033a 'e'
              59f2 0074  ld   $74         ;033b 't'
              59f3 0065  ld   $65         ;033c 'e'
              59f4 0072  ld   $72         ;033d 'r'
              59f5 002c  ld   $2c         ;033e ','
              59f6 0020  ld   $20         ;033f ' '
              59f7 004d  ld   $4d         ;0340 'M'
              59f8 0061  ld   $61         ;0341 'a'
              59f9 0072  ld   $72         ;0342 'r'
              59fa 0074  ld   $74         ;0343 't'
              59fb fe00  bra  ac          ;+-----------------------------------+
              59fc fcfd  bra  $59fd       ;|                                   |
              59fd 1418  ld   $18,y       ;| Trampoline for page $5900 lookups |
              59fe e006  jmp  y,$06       ;|                                   |
              59ff c218  st   [$18]       ;+-----------------------------------+
              5a00 0069  ld   $69         ;0344 'i'
              5a01 006e  ld   $6e         ;0345 'n'
              5a02 002c  ld   $2c         ;0346 ','
              5a03 0020  ld   $20         ;0347 ' '
              5a04 0042  ld   $42         ;0348 'B'
              5a05 0072  ld   $72         ;0349 'r'
              5a06 0061  ld   $61         ;034a 'a'
              5a07 0064  ld   $64         ;034b 'd'
              5a08 002c  ld   $2c         ;034c ','
              5a09 0020  ld   $20         ;034d ' '
              5a0a 004c  ld   $4c         ;034e 'L'
              5a0b 006f  ld   $6f         ;034f 'o'
              5a0c 0075  ld   $75         ;0350 'u'
              5a0d 002c  ld   $2c         ;0351 ','
              5a0e 000a  ld   $0a         ;0352 10
              5a0f 0050  ld   $50         ;0353 'P'
              5a10 0068  ld   $68         ;0354 'h'
              5a11 0069  ld   $69         ;0355 'i'
              5a12 006c  ld   $6c         ;0356 'l'
              5a13 002c  ld   $2c         ;0357 ','
              5a14 0020  ld   $20         ;0358 ' '
              5a15 0042  ld   $42         ;0359 'B'
              5a16 0072  ld   $72         ;035a 'r'
              5a17 0069  ld   $69         ;035b 'i'
              5a18 0061  ld   $61         ;035c 'a'
              5a19 006e  ld   $6e         ;035d 'n'
              5a1a 002c  ld   $2c         ;035e ','
              5a1b 0020  ld   $20         ;035f ' '
              5a1c 0044  ld   $44         ;0360 'D'
              5a1d 0061  ld   $61         ;0361 'a'
              5a1e 0076  ld   $76         ;0362 'v'
              5a1f 0069  ld   $69         ;0363 'i'
              5a20 0064  ld   $64         ;0364 'd'
              5a21 002c  ld   $2c         ;0365 ','
              5a22 0020  ld   $20         ;0366 ' '
              5a23 0044  ld   $44         ;0367 'D'
              5a24 0061  ld   $61         ;0368 'a'
              5a25 0076  ld   $76         ;0369 'v'
              5a26 0065  ld   $65         ;036a 'e'
              5a27 002c  ld   $2c         ;036b ','
              5a28 000a  ld   $0a         ;036c 10
              5a29 0048  ld   $48         ;036d 'H'
              5a2a 0047  ld   $47         ;036e 'G'
              5a2b 0020  ld   $20         ;036f ' '
              5a2c 0061  ld   $61         ;0370 'a'
              5a2d 006e  ld   $6e         ;0371 'n'
              5a2e 0064  ld   $64         ;0372 'd'
              5a2f 0020  ld   $20         ;0373 ' '
              5a30 0061  ld   $61         ;0374 'a'
              5a31 006c  ld   $6c         ;0375 'l'
              5a32 006c  ld   $6c         ;0376 'l'
              5a33 0020  ld   $20         ;0377 ' '
              5a34 0066  ld   $66         ;0378 'f'
              5a35 0061  ld   $61         ;0379 'a'
              5a36 006e  ld   $6e         ;037a 'n'
              5a37 0073  ld   $73         ;037b 's'
              5a38 0021  ld   $21         ;037c '!'
              5a39 000a  ld   $0a         ;037d 10
              5a3a 0020  ld   $20         ;037e ' '
              5a3b 0020  ld   $20         ;037f ' '
              5a3c 0020  ld   $20         ;0380 ' '
              5a3d 0020  ld   $20         ;0381 ' '
              5a3e 0020  ld   $20         ;0382 ' '
              5a3f 0020  ld   $20         ;0383 ' '
              5a40 0020  ld   $20         ;0384 ' '
              5a41 0020  ld   $20         ;0385 ' '
              5a42 0020  ld   $20         ;0386 ' '
              5a43 0020  ld   $20         ;0387 ' '
              5a44 0020  ld   $20         ;0388 ' '
              5a45 004d  ld   $4d         ;0389 'M'
              5a46 0061  ld   $61         ;038a 'a'
              5a47 0072  ld   $72         ;038b 'r'
              5a48 0063  ld   $63         ;038c 'c'
              5a49 0065  ld   $65         ;038d 'e'
              5a4a 006c  ld   $6c         ;038e 'l'
              5a4b 0020  ld   $20         ;038f ' '
              5a4c 0026  ld   $26         ;0390 '&'
              5a4d 0020  ld   $20         ;0391 ' '
              5a4e 0057  ld   $57         ;0392 'W'
              5a4f 0061  ld   $61         ;0393 'a'
              5a50 006c  ld   $6c         ;0394 'l'
              5a51 0074  ld   $74         ;0395 't'
              5a52 0065  ld   $65         ;0396 'e'
              5a53 0072  ld   $72         ;0397 'r'
              5a54 000a  ld   $0a         ;0398 10
              5a55 0000  ld   $00         ;0399 0
              5a56 002b  ld   $2b         ;039a STW
              5a57 003c  ld   $3c         ;039a 'Part2'
              5a58 00cd  ld   $cd         ;039c DEF
              5a59 00cd  ld   $cd
              5a5a 0011  ld   $11         ;039e LDWI
              5a5b 0000  ld   $00
              5a5c 0008  ld   $08
              5a5d 002b  ld   $2b         ;03a1 STW
              5a5e 003e  ld   $3e         ;03a1 'p'
              5a5f 0011  ld   $11         ;03a3 LDWI
              5a60 0001  ld   $01
              5a61 0088  ld   $88
              5a62 002b  ld   $2b         ;03a6 STW
              5a63 0040  ld   $40         ;03a6 'i'
              5a64 0059  ld   $59         ;03a8 LDI
              5a65 0000  ld   $00
              5a66 005e  ld   $5e         ;03aa ST
              5a67 0024  ld   $24
              5a68 005e  ld   $5e         ;03ac ST
              5a69 0025  ld   $25
              5a6a 0011  ld   $11         ;03ae LDWI
              5a6b 00e1  ld   $e1
              5a6c 0004  ld   $04
              5a6d 002b  ld   $2b         ;03b1 STW
              5a6e 0022  ld   $22
              5a6f 0021  ld   $21         ;03b3 LDW
              5a70 003e  ld   $3e         ;03b3 'p'
              5a71 002b  ld   $2b         ;03b5 STW
              5a72 0028  ld   $28
              5a73 00b4  ld   $b4         ;03b7 SYS
              5a74 00cc  ld   $cc
              5a75 0011  ld   $11         ;03b9 LDWI
              5a76 0000  ld   $00
              5a77 0008  ld   $08
              5a78 0099  ld   $99         ;03bc ADDW
              5a79 003e  ld   $3e         ;03bc 'p'
              5a7a 002b  ld   $2b         ;03be STW
              5a7b 003e  ld   $3e         ;03be 'p'
              5a7c 0035  ld   $35         ;03c0 BCC
              5a7d 004d  ld   $4d         ;03c1 GT
              5a7e 00b3  ld   $b3
              5a7f 0099  ld   $99         ;03c3 ADDW
              5a80 0040  ld   $40         ;03c3 'i'
              5a81 002b  ld   $2b         ;03c5 STW
              5a82 003e  ld   $3e         ;03c5 'p'
              5a83 0082  ld   $82         ;03c7 ANDI
              5a84 00ff  ld   $ff
              5a85 008c  ld   $8c         ;03c9 XORI
              5a86 00a0  ld   $a0
              5a87 0035  ld   $35         ;03cb BCC
              5a88 0072  ld   $72         ;03cc NE
              5a89 00b1  ld   $b1
              5a8a 00ff  ld   $ff         ;03ce RET
              5a8b 002b  ld   $2b         ;03cf STW
              5a8c 0042  ld   $42         ;03cf 'ClearScreen'
              5a8d 00cd  ld   $cd         ;03d1 DEF
              5a8e 00e1  ld   $e1
              5a8f 001a  ld   $1a         ;03d3 LD
              5a90 000e  ld   $0e
              5a91 0099  ld   $99         ;03d5 ADDW
              5a92 0044  ld   $44         ;03d5 'Delay'
              5a93 0082  ld   $82         ;03d7 ANDI
              5a94 00ff  ld   $ff
              5a95 002b  ld   $2b         ;03d9 STW
              5a96 0046  ld   $46         ;03d9 'tmp'
              5a97 001a  ld   $1a         ;03db LD
              5a98 000e  ld   $0e
              5a99 00b8  ld   $b8         ;03dd SUBW
              5a9a 0046  ld   $46         ;03dd 'tmp'
              5a9b 0035  ld   $35         ;03df BCC
              5a9c 0072  ld   $72         ;03e0 NE
              5a9d 00d9  ld   $d9
              5a9e 00ff  ld   $ff         ;03e2 RET
              5a9f 002b  ld   $2b         ;03e3 STW
              5aa0 0048  ld   $48         ;03e3 'Wait'
              5aa1 0093  ld   $93         ;03e5 INC
              5aa2 001b  ld   $1b
              5aa3 00ff  ld   $ff         ;03e7 RET
              5aa4 0004  ld   $04         ;| RAM segment address (high byte first)
              5aa5 0000  ld   $00         ;|
              5aa6 0081  ld   $81         ;| Length (1..256)
              5aa7 00cd  ld   $cd         ;0400 DEF
              5aa8 004a  ld   $4a
              5aa9 0021  ld   $21         ;0402 LDW
              5aaa 0032  ld   $32         ;0402 'Char'
              5aab 00e6  ld   $e6         ;0404 SUBI
              5aac 0052  ld   $52
              5aad 0035  ld   $35         ;0406 BCC
              5aae 0053  ld   $53         ;0407 GE
              5aaf 0010  ld   $10
              5ab0 00e3  ld   $e3         ;0409 ADDI
              5ab1 0032  ld   $32
              5ab2 002b  ld   $2b         ;040b STW
              5ab3 0040  ld   $40         ;040b 'i'
              5ab4 0011  ld   $11         ;040d LDWI
              5ab5 0000  ld   $00
              5ab6 0007  ld   $07
              5ab7 0090  ld   $90         ;0410 BRA
              5ab8 0015  ld   $15
              5ab9 002b  ld   $2b         ;0412 STW
              5aba 0040  ld   $40         ;0412 'i'
              5abb 0011  ld   $11         ;0414 LDWI
              5abc 0000  ld   $00
              5abd 0008  ld   $08
              5abe 002b  ld   $2b         ;0417 STW
              5abf 004a  ld   $4a         ;0417 'fontData'
              5ac0 0021  ld   $21         ;0419 LDW
              5ac1 0040  ld   $40         ;0419 'i'
              5ac2 00e9  ld   $e9         ;041b LSLW
              5ac3 00e9  ld   $e9         ;041c LSLW
              5ac4 0099  ld   $99         ;041d ADDW
              5ac5 0040  ld   $40         ;041d 'i'
              5ac6 0099  ld   $99         ;041f ADDW
              5ac7 004a  ld   $4a         ;041f 'fontData'
              5ac8 002b  ld   $2b         ;0421 STW
              5ac9 004a  ld   $4a         ;0421 'fontData'
              5aca 0021  ld   $21         ;0423 LDW
              5acb 004c  ld   $4c         ;0423 'Color'
              5acc 005e  ld   $5e         ;0425 ST
              5acd 0025  ld   $25
              5ace 0021  ld   $21         ;0427 LDW
              5acf 0034  ld   $34         ;0427 'Pos'
              5ad0 002b  ld   $2b         ;0429 STW
              5ad1 0028  ld   $28
              5ad2 00e3  ld   $e3         ;042b ADDI
              5ad3 0006  ld   $06
              5ad4 002b  ld   $2b         ;042d STW
              5ad5 0034  ld   $34         ;042d 'Pos'
              5ad6 0011  ld   $11         ;042f LDWI
              5ad7 00e1  ld   $e1
              5ad8 0004  ld   $04
              5ad9 002b  ld   $2b         ;0432 STW
              5ada 0022  ld   $22
              5adb 0059  ld   $59         ;0434 LDI
              5adc 00fb  ld   $fb
              5add 002b  ld   $2b         ;0436 STW
              5ade 0040  ld   $40         ;0436 'i'
              5adf 0021  ld   $21         ;0438 LDW
              5ae0 004a  ld   $4a         ;0438 'fontData'
              5ae1 007f  ld   $7f         ;043a LUP
              5ae2 0000  ld   $00
              5ae3 0093  ld   $93         ;043c INC
              5ae4 004a  ld   $4a         ;043c 'fontData'
              5ae5 005e  ld   $5e         ;043e ST
              5ae6 0026  ld   $26
              5ae7 00b4  ld   $b4         ;0440 SYS
              5ae8 00cc  ld   $cc
              5ae9 0093  ld   $93         ;0442 INC
              5aea 0028  ld   $28
              5aeb 0093  ld   $93         ;0444 INC
              5aec 0040  ld   $40         ;0444 'i'
              5aed 0021  ld   $21         ;0446 LDW
              5aee 0040  ld   $40         ;0446 'i'
              5aef 0035  ld   $35         ;0448 BCC
              5af0 0072  ld   $72         ;0449 NE
              5af1 0036  ld   $36
              5af2 00ff  ld   $ff         ;044b RET
              5af3 002b  ld   $2b         ;044c STW
              5af4 0036  ld   $36         ;044c 'PrintChar'
              5af5 0011  ld   $11         ;044e LDWI
              5af6 0002  ld   $02
              5af7 0008  ld   $08
              5af8 002b  ld   $2b         ;0451 STW
              5af9 0034  ld   $34         ;0451 'Pos'
              5afa 00cf  ld   $cf         ;0453 CALL
              5afb fe00  bra  ac          ;+-----------------------------------+
              5afc fcfd  bra  $5afd       ;|                                   |
              5afd 1418  ld   $18,y       ;| Trampoline for page $5a00 lookups |
              5afe e006  jmp  y,$06       ;|                                   |
              5aff c218  st   [$18]       ;+-----------------------------------+
              5b00 0042  ld   $42         ;0453 'ClearScreen'
              5b01 0059  ld   $59         ;0455 LDI
              5b02 003e  ld   $3e
              5b03 002b  ld   $2b         ;0457 STW
              5b04 004c  ld   $4c         ;0457 'Color'
              5b05 0011  ld   $11         ;0459 LDWI
              5b06 0000  ld   $00
              5b07 0008  ld   $08
              5b08 002b  ld   $2b         ;045c STW
              5b09 0034  ld   $34         ;045c 'Pos'
              5b0a 0021  ld   $21         ;045e LDW
              5b0b 003a  ld   $3a         ;045e 'Part1'
              5b0c 002b  ld   $2b         ;0460 STW
              5b0d 0030  ld   $30         ;0460 'Text'
              5b0e 00cf  ld   $cf         ;0462 CALL
              5b0f 0038  ld   $38         ;0462 'PrintText'
              5b10 0021  ld   $21         ;0464 LDW
              5b11 003c  ld   $3c         ;0464 'Part2'
              5b12 002b  ld   $2b         ;0466 STW
              5b13 0030  ld   $30         ;0466 'Text'
              5b14 00cf  ld   $cf         ;0468 CALL
              5b15 0038  ld   $38         ;0468 'PrintText'
              5b16 0059  ld   $59         ;046a LDI
              5b17 00f0  ld   $f0
              5b18 002b  ld   $2b         ;046c STW
              5b19 0044  ld   $44         ;046c 'Delay'
              5b1a 00cf  ld   $cf         ;046e CALL
              5b1b 0048  ld   $48         ;046e 'Wait'
              5b1c 0021  ld   $21         ;0470 LDW
              5b1d 004c  ld   $4c         ;0470 'Color'
              5b1e 008c  ld   $8c         ;0472 XORI
              5b1f 0008  ld   $08
              5b20 0035  ld   $35         ;0474 BCC
              5b21 003f  ld   $3f         ;0475 EQ
              5b22 007d  ld   $7d
              5b23 0021  ld   $21         ;0477 LDW
              5b24 004c  ld   $4c         ;0477 'Color'
              5b25 00e6  ld   $e6         ;0479 SUBI
              5b26 0009  ld   $09
              5b27 002b  ld   $2b         ;047b STW
              5b28 004c  ld   $4c         ;047b 'Color'
              5b29 0090  ld   $90         ;047d BRA
              5b2a 0057  ld   $57
              5b2b 0090  ld   $90         ;047f BRA
              5b2c 0053  ld   $53
              5b2d 0000  ld   $00         ;End of Apps/Credits/Credits_v3.gcl, size 598
                                          ;+-----------------------------------+
                                          ;| Apps/Snake/Snake_v3.gcl           |
                                          ;+-----------------------------------+
              5b2e dc43  st   $43,[y,x++] ;'C'
              5b2f dc72  st   $72,[y,x++] ;'r'
              5b30 dc65  st   $65,[y,x++] ;'e'
              5b31 dc64  st   $64,[y,x++] ;'d'
              5b32 dc69  st   $69,[y,x++] ;'i'
              5b33 dc74  st   $74,[y,x++] ;'t'
              5b34 dc73  st   $73,[y,x++] ;'s'
              5b35 dc00  st   $00,[y,x++] ;'\x00'
              5b36 00d8  ld   $d8
              5b37 c218  st   [$18]
              5b38 0058  ld   $58
              5b39 14dd  ld   $dd,y
              5b3a e06f  jmp  y,$6f
              5b3b c219  st   [$19]
Snake:        5b3c 0002  ld   $02         ;| RAM segment address (high byte first)
              5b3d 0000  ld   $00         ;|
              5b3e 00e5  ld   $e5         ;| Length (1..256)
              5b3f 001a  ld   $1a         ;0200 LD
              5b40 0021  ld   $21
              5b41 00e6  ld   $e6         ;0202 SUBI
              5b42 0020  ld   $20
              5b43 0035  ld   $35         ;0204 BCC
              5b44 0053  ld   $53         ;0205 GE
              5b45 000b  ld   $0b
              5b46 0021  ld   $21         ;0207 LDW
              5b47 000e  ld   $0e         ;0207 '_frameCount'
              5b48 00f3  ld   $f3         ;0209 DOKE
              5b49 0017  ld   $17         ;0209 '_vPCH'
              5b4a 0090  ld   $90         ;020b BRA
              5b4b 0005  ld   $05
              5b4c 0059  ld   $59         ;020d LDI
              5b4d 0000  ld   $00
              5b4e 002b  ld   $2b         ;020f STW
              5b4f 0030  ld   $30         ;020f 'HighScore'
              5b50 00cd  ld   $cd         ;0211 DEF
              5b51 005f  ld   $5f
              5b52 0021  ld   $21         ;0213 LDW
              5b53 0032  ld   $32         ;0213 'Char'
              5b54 00e6  ld   $e6         ;0215 SUBI
              5b55 0052  ld   $52
              5b56 0035  ld   $35         ;0217 BCC
              5b57 0053  ld   $53         ;0218 GE
              5b58 0021  ld   $21
              5b59 00e3  ld   $e3         ;021a ADDI
              5b5a 0032  ld   $32
              5b5b 002b  ld   $2b         ;021c STW
              5b5c 0034  ld   $34         ;021c 'i'
              5b5d 0011  ld   $11         ;021e LDWI
              5b5e 0000  ld   $00
              5b5f 0007  ld   $07
              5b60 0090  ld   $90         ;0221 BRA
              5b61 0026  ld   $26
              5b62 002b  ld   $2b         ;0223 STW
              5b63 0034  ld   $34         ;0223 'i'
              5b64 0011  ld   $11         ;0225 LDWI
              5b65 0000  ld   $00
              5b66 0008  ld   $08
              5b67 002b  ld   $2b         ;0228 STW
              5b68 0036  ld   $36         ;0228 'fontData'
              5b69 0021  ld   $21         ;022a LDW
              5b6a 0034  ld   $34         ;022a 'i'
              5b6b 00e9  ld   $e9         ;022c LSLW
              5b6c 00e9  ld   $e9         ;022d LSLW
              5b6d 0099  ld   $99         ;022e ADDW
              5b6e 0034  ld   $34         ;022e 'i'
              5b6f 0099  ld   $99         ;0230 ADDW
              5b70 0036  ld   $36         ;0230 'fontData'
              5b71 002b  ld   $2b         ;0232 STW
              5b72 0036  ld   $36         ;0232 'fontData'
              5b73 0021  ld   $21         ;0234 LDW
              5b74 0038  ld   $38         ;0234 'BgColor'
              5b75 005e  ld   $5e         ;0236 ST
              5b76 0024  ld   $24
              5b77 0021  ld   $21         ;0238 LDW
              5b78 003a  ld   $3a         ;0238 'Color'
              5b79 005e  ld   $5e         ;023a ST
              5b7a 0025  ld   $25
              5b7b 0021  ld   $21         ;023c LDW
              5b7c 003c  ld   $3c         ;023c 'Pos'
              5b7d 002b  ld   $2b         ;023e STW
              5b7e 0028  ld   $28
              5b7f 00e3  ld   $e3         ;0240 ADDI
              5b80 0006  ld   $06
              5b81 002b  ld   $2b         ;0242 STW
              5b82 003c  ld   $3c         ;0242 'Pos'
              5b83 0011  ld   $11         ;0244 LDWI
              5b84 00e1  ld   $e1
              5b85 0004  ld   $04
              5b86 002b  ld   $2b         ;0247 STW
              5b87 0022  ld   $22
              5b88 0059  ld   $59         ;0249 LDI
              5b89 00fb  ld   $fb
              5b8a 002b  ld   $2b         ;024b STW
              5b8b 0034  ld   $34         ;024b 'i'
              5b8c 0021  ld   $21         ;024d LDW
              5b8d 0036  ld   $36         ;024d 'fontData'
              5b8e 007f  ld   $7f         ;024f LUP
              5b8f 0000  ld   $00
              5b90 0093  ld   $93         ;0251 INC
              5b91 0036  ld   $36         ;0251 'fontData'
              5b92 005e  ld   $5e         ;0253 ST
              5b93 0026  ld   $26
              5b94 00b4  ld   $b4         ;0255 SYS
              5b95 00cc  ld   $cc
              5b96 0093  ld   $93         ;0257 INC
              5b97 0028  ld   $28
              5b98 0093  ld   $93         ;0259 INC
              5b99 0034  ld   $34         ;0259 'i'
              5b9a 0021  ld   $21         ;025b LDW
              5b9b 0034  ld   $34         ;025b 'i'
              5b9c 0035  ld   $35         ;025d BCC
              5b9d 0072  ld   $72         ;025e NE
              5b9e 004b  ld   $4b
              5b9f 00ff  ld   $ff         ;0260 RET
              5ba0 002b  ld   $2b         ;0261 STW
              5ba1 003e  ld   $3e         ;0261 'PrintChar'
              5ba2 00cd  ld   $cd         ;0263 DEF
              5ba3 0076  ld   $76
              5ba4 0075  ld   $75         ;0265 PUSH
              5ba5 002b  ld   $2b         ;0266 STW
              5ba6 0040  ld   $40         ;0266 'Text'
              5ba7 0021  ld   $21         ;0268 LDW
              5ba8 0040  ld   $40         ;0268 'Text'
              5ba9 00ad  ld   $ad         ;026a PEEK
              5baa 002b  ld   $2b         ;026b STW
              5bab 0032  ld   $32         ;026b 'Char'
              5bac 0093  ld   $93         ;026d INC
              5bad 0040  ld   $40         ;026d 'Text'
              5bae 0035  ld   $35         ;026f BCC
              5baf 003f  ld   $3f         ;0270 EQ
              5bb0 0074  ld   $74
              5bb1 00cf  ld   $cf         ;0272 CALL
              5bb2 003e  ld   $3e         ;0272 'PrintChar'
              5bb3 0090  ld   $90         ;0274 BRA
              5bb4 0066  ld   $66
              5bb5 0063  ld   $63         ;0276 POP
              5bb6 00ff  ld   $ff         ;0277 RET
              5bb7 002b  ld   $2b         ;0278 STW
              5bb8 0042  ld   $42         ;0278 'PrintText'
              5bb9 00cd  ld   $cd         ;027a DEF
              5bba 0090  ld   $90
              5bbb 0035  ld   $35         ;027c BCC
              5bbc 0056  ld   $56         ;027d LE
              5bbd 008f  ld   $8f
              5bbe 002b  ld   $2b         ;027f STW
              5bbf 0034  ld   $34         ;027f 'i'
              5bc0 0021  ld   $21         ;0281 LDW
              5bc1 003a  ld   $3a         ;0281 'Color'
              5bc2 00f0  ld   $f0         ;0283 POKE
              5bc3 003c  ld   $3c         ;0283 'Pos'
              5bc4 0021  ld   $21         ;0285 LDW
              5bc5 003c  ld   $3c         ;0285 'Pos'
              5bc6 0099  ld   $99         ;0287 ADDW
              5bc7 0044  ld   $44         ;0287 'Step'
              5bc8 002b  ld   $2b         ;0289 STW
              5bc9 003c  ld   $3c         ;0289 'Pos'
              5bca 0021  ld   $21         ;028b LDW
              5bcb 0034  ld   $34         ;028b 'i'
              5bcc 00e6  ld   $e6         ;028d SUBI
              5bcd 0001  ld   $01
              5bce 0090  ld   $90         ;028f BRA
              5bcf 007a  ld   $7a
              5bd0 00ff  ld   $ff         ;0291 RET
              5bd1 002b  ld   $2b         ;0292 STW
              5bd2 0046  ld   $46         ;0292 'DrawLine'
              5bd3 00cd  ld   $cd         ;0294 DEF
              5bd4 00bc  ld   $bc
              5bd5 0075  ld   $75         ;0296 PUSH
              5bd6 001a  ld   $1a         ;0297 LD
              5bd7 000e  ld   $0e
              5bd8 00b8  ld   $b8         ;0299 SUBW
              5bd9 0048  ld   $48         ;0299 'TimeOut'
              5bda 0082  ld   $82         ;029b ANDI
              5bdb 0080  ld   $80
              5bdc 0035  ld   $35         ;029d BCC
              5bdd 0072  ld   $72         ;029e NE
              5bde 00a9  ld   $a9
              5bdf 0021  ld   $21         ;02a0 LDW
              5be0 004a  ld   $4a         ;02a0 'Timer'
              5be1 0035  ld   $35         ;02a2 BCC
              5be2 0056  ld   $56         ;02a3 LE
              5be3 00a7  ld   $a7
              5be4 00e6  ld   $e6         ;02a5 SUBI
              5be5 0001  ld   $01
              5be6 002b  ld   $2b         ;02a7 STW
              5be7 004a  ld   $4a         ;02a7 'Timer'
              5be8 00cf  ld   $cf         ;02a9 CALL
              5be9 004c  ld   $4c         ;02a9 'DrawTimer'
              5bea 001a  ld   $1a         ;02ab LD
              5beb 0011  ld   $11
              5bec 0082  ld   $82         ;02ad ANDI
              5bed 0080  ld   $80
              5bee 0035  ld   $35         ;02af BCC
              5bef 0072  ld   $72         ;02b0 NE
              5bf0 00b4  ld   $b4
              5bf1 00e6  ld   $e6         ;02b2 SUBI
              5bf2 0001  ld   $01
              5bf3 0090  ld   $90         ;02b4 BRA
              5bf4 00b6  ld   $b6
              5bf5 0059  ld   $59         ;02b6 LDI
              5bf6 0000  ld   $00
              5bf7 0099  ld   $99         ;02b8 ADDW
              5bf8 004e  ld   $4e         ;02b8 'Delay'
              5bf9 00cf  ld   $cf         ;02ba CALL
              5bfa 0050  ld   $50         ;02ba 'Wait'
              5bfb fe00  bra  ac          ;+-----------------------------------+
              5bfc fcfd  bra  $5bfd       ;|                                   |
              5bfd 1418  ld   $18,y       ;| Trampoline for page $5b00 lookups |
              5bfe e006  jmp  y,$06       ;|                                   |
              5bff c218  st   [$18]       ;+-----------------------------------+
              5c00 0063  ld   $63         ;02bc POP
              5c01 00ff  ld   $ff         ;02bd RET
              5c02 002b  ld   $2b         ;02be STW
              5c03 0052  ld   $52         ;02be 'TimeStep'
              5c04 00cd  ld   $cd         ;02c0 DEF
              5c05 00de  ld   $de
              5c06 0075  ld   $75         ;02c2 PUSH
              5c07 0011  ld   $11         ;02c3 LDWI
              5c08 0020  ld   $20
              5c09 0008  ld   $08
              5c0a 002b  ld   $2b         ;02c6 STW
              5c0b 003c  ld   $3c         ;02c6 'Pos'
              5c0c 0059  ld   $59         ;02c8 LDI
              5c0d 0008  ld   $08
              5c0e 002b  ld   $2b         ;02ca STW
              5c0f 003a  ld   $3a         ;02ca 'Color'
              5c10 0059  ld   $59         ;02cc LDI
              5c11 0000  ld   $00
              5c12 002b  ld   $2b         ;02ce STW
              5c13 0038  ld   $38         ;02ce 'BgColor'
              5c14 0021  ld   $21         ;02d0 LDW
              5c15 004a  ld   $4a         ;02d0 'Timer'
              5c16 002b  ld   $2b         ;02d2 STW
              5c17 0054  ld   $54         ;02d2 'Value'
              5c18 00cf  ld   $cf         ;02d4 CALL
              5c19 0056  ld   $56         ;02d4 'DrawNumber2'
              5c1a 0021  ld   $21         ;02d6 LDW
              5c1b 0048  ld   $48         ;02d6 'TimeOut'
              5c1c 00e3  ld   $e3         ;02d8 ADDI
              5c1d 003c  ld   $3c
              5c1e 0082  ld   $82         ;02da ANDI
              5c1f 00ff  ld   $ff
              5c20 002b  ld   $2b         ;02dc STW
              5c21 0048  ld   $48         ;02dc 'TimeOut'
              5c22 0063  ld   $63         ;02de POP
              5c23 00ff  ld   $ff         ;02df RET
              5c24 002b  ld   $2b         ;02e0 STW
              5c25 004c  ld   $4c         ;02e0 'DrawTimer'
              5c26 0093  ld   $93         ;02e2 INC
              5c27 001b  ld   $1b         ;02e2 '_vLR'+1
              5c28 00ff  ld   $ff         ;02e4 RET
              5c29 0003  ld   $03         ;| RAM segment address (high byte first)
              5c2a 0000  ld   $00         ;|
              5c2b 00f7  ld   $f7         ;| Length (1..256)
              5c2c 00cd  ld   $cd         ;0300 DEF
              5c2d 000b  ld   $0b
              5c2e 0075  ld   $75         ;0302 PUSH
              5c2f 0059  ld   $59         ;0303 LDI
              5c30 000f  ld   $0f
              5c31 002b  ld   $2b         ;0305 STW
              5c32 003a  ld   $3a         ;0305 'Color'
              5c33 0021  ld   $21         ;0307 LDW
              5c34 0058  ld   $58         ;0307 'Head'
              5c35 00cf  ld   $cf         ;0309 CALL
              5c36 005a  ld   $5a         ;0309 'DrawBlock'
              5c37 0063  ld   $63         ;030b POP
              5c38 00ff  ld   $ff         ;030c RET
              5c39 002b  ld   $2b         ;030d STW
              5c3a 005c  ld   $5c         ;030d 'DrawHead'
              5c3b 00cd  ld   $cd         ;030f DEF
              5c3c 0043  ld   $43
              5c3d 0075  ld   $75         ;0311 PUSH
              5c3e 0011  ld   $11         ;0312 LDWI
              5c3f 0035  ld   $35
              5c40 0044  ld   $44
              5c41 002b  ld   $2b         ;0315 STW
              5c42 003c  ld   $3c         ;0315 'Pos'
              5c43 0059  ld   $59         ;0317 LDI
              5c44 0004  ld   $04
              5c45 002b  ld   $2b         ;0319 STW
              5c46 0038  ld   $38         ;0319 'BgColor'
              5c47 00cd  ld   $cd         ;031b DEF
              5c48 0025  ld   $25
              5c49 0047  ld   $47         ;031d 'G'
              5c4a 0041  ld   $41         ;031e 'A'
              5c4b 004d  ld   $4d         ;031f 'M'
              5c4c 0045  ld   $45         ;0320 'E'
              5c4d 0020  ld   $20         ;0321 ' '
              5c4e 004f  ld   $4f         ;0322 'O'
              5c4f 0056  ld   $56         ;0323 'V'
              5c50 0045  ld   $45         ;0324 'E'
              5c51 0052  ld   $52         ;0325 'R'
              5c52 0000  ld   $00         ;0326 0
              5c53 00cf  ld   $cf         ;0327 CALL
              5c54 0042  ld   $42         ;0327 'PrintText'
              5c55 0021  ld   $21         ;0329 LDW
              5c56 005e  ld   $5e         ;0329 'Score'
              5c57 00b8  ld   $b8         ;032b SUBW
              5c58 0030  ld   $30         ;032b 'HighScore'
              5c59 0035  ld   $35         ;032d BCC
              5c5a 0056  ld   $56         ;032e LE
              5c5b 003f  ld   $3f
              5c5c 0021  ld   $21         ;0330 LDW
              5c5d 0060  ld   $60         ;0330 'Control'
              5c5e 00fc  ld   $fc         ;0332 XORW
              5c5f 0062  ld   $62         ;0332 'PlayerControl'
              5c60 0035  ld   $35         ;0334 BCC
              5c61 0072  ld   $72         ;0335 NE
              5c62 003f  ld   $3f
              5c63 0021  ld   $21         ;0337 LDW
              5c64 005e  ld   $5e         ;0337 'Score'
              5c65 002b  ld   $2b         ;0339 STW
              5c66 0030  ld   $30         ;0339 'HighScore'
              5c67 0059  ld   $59         ;033b LDI
              5c68 001e  ld   $1e
              5c69 002b  ld   $2b         ;033d STW
              5c6a 003a  ld   $3a         ;033d 'Color'
              5c6b 00cf  ld   $cf         ;033f CALL
              5c6c 0064  ld   $64         ;033f 'DrawHighScore'
              5c6d 00cf  ld   $cf         ;0341 CALL
              5c6e 0066  ld   $66         ;0341 'PlayGameOverSound'
              5c6f 0063  ld   $63         ;0343 POP
              5c70 00ff  ld   $ff         ;0344 RET
              5c71 002b  ld   $2b         ;0345 STW
              5c72 0068  ld   $68         ;0345 'GameOver'
              5c73 00cd  ld   $cd         ;0347 DEF
              5c74 0059  ld   $59
              5c75 002b  ld   $2b         ;0349 STW
              5c76 006a  ld   $6a         ;0349 'tmp'
              5c77 001a  ld   $1a         ;034b LD
              5c78 000e  ld   $0e
              5c79 0099  ld   $99         ;034d ADDW
              5c7a 006a  ld   $6a         ;034d 'tmp'
              5c7b 0082  ld   $82         ;034f ANDI
              5c7c 00ff  ld   $ff
              5c7d 002b  ld   $2b         ;0351 STW
              5c7e 006a  ld   $6a         ;0351 'tmp'
              5c7f 001a  ld   $1a         ;0353 LD
              5c80 000e  ld   $0e
              5c81 00b8  ld   $b8         ;0355 SUBW
              5c82 006a  ld   $6a         ;0355 'tmp'
              5c83 0035  ld   $35         ;0357 BCC
              5c84 0072  ld   $72         ;0358 NE
              5c85 0051  ld   $51
              5c86 00ff  ld   $ff         ;035a RET
              5c87 002b  ld   $2b         ;035b STW
              5c88 0050  ld   $50         ;035b 'Wait'
              5c89 00cd  ld   $cd         ;035d DEF
              5c8a 007f  ld   $7f
              5c8b 0075  ld   $75         ;035f PUSH
              5c8c 0059  ld   $59         ;0360 LDI
              5c8d 0008  ld   $08
              5c8e 002b  ld   $2b         ;0362 STW
              5c8f 003a  ld   $3a         ;0362 'Color'
              5c90 0059  ld   $59         ;0364 LDI
              5c91 0000  ld   $00
              5c92 002b  ld   $2b         ;0366 STW
              5c93 0038  ld   $38         ;0366 'BgColor'
              5c94 0011  ld   $11         ;0368 LDWI
              5c95 0000  ld   $00
              5c96 0008  ld   $08
              5c97 00cf  ld   $cf         ;036b CALL
              5c98 006c  ld   $6c         ;036b 'ClearScreen'
              5c99 0011  ld   $11         ;036d LDWI
              5c9a 0038  ld   $38
              5c9b 0008  ld   $08
              5c9c 002b  ld   $2b         ;0370 STW
              5c9d 003c  ld   $3c         ;0370 'Pos'
              5c9e 00cd  ld   $cd         ;0372 DEF
              5c9f 007b  ld   $7b
              5ca0 0047  ld   $47         ;0374 'G'
              5ca1 0069  ld   $69         ;0375 'i'
              5ca2 0067  ld   $67         ;0376 'g'
              5ca3 0061  ld   $61         ;0377 'a'
              5ca4 0074  ld   $74         ;0378 't'
              5ca5 0072  ld   $72         ;0379 'r'
              5ca6 006f  ld   $6f         ;037a 'o'
              5ca7 006e  ld   $6e         ;037b 'n'
              5ca8 0000  ld   $00         ;037c 0
              5ca9 00cf  ld   $cf         ;037d CALL
              5caa 0042  ld   $42         ;037d 'PrintText'
              5cab 0063  ld   $63         ;037f POP
              5cac 00ff  ld   $ff         ;0380 RET
              5cad 002b  ld   $2b         ;0381 STW
              5cae 006e  ld   $6e         ;0381 'Intro'
              5caf 00cd  ld   $cd         ;0383 DEF
              5cb0 00a3  ld   $a3
              5cb1 002b  ld   $2b         ;0385 STW
              5cb2 0070  ld   $70         ;0385 'p'
              5cb3 0011  ld   $11         ;0387 LDWI
              5cb4 0003  ld   $03
              5cb5 000b  ld   $0b
              5cb6 002b  ld   $2b         ;038a STW
              5cb7 0022  ld   $22
              5cb8 0021  ld   $21         ;038c LDW
              5cb9 0038  ld   $38         ;038c 'BgColor'
              5cba 005e  ld   $5e         ;038e ST
              5cbb 0025  ld   $25
              5cbc 0021  ld   $21         ;0390 LDW
              5cbd 0070  ld   $70         ;0390 'p'
              5cbe 002b  ld   $2b         ;0392 STW
              5cbf 0026  ld   $26
              5cc0 0059  ld   $59         ;0394 LDI
              5cc1 00a0  ld   $a0
              5cc2 005e  ld   $5e         ;0396 ST
              5cc3 0024  ld   $24
              5cc4 00b4  ld   $b4         ;0398 SYS
              5cc5 00f4  ld   $f4
              5cc6 0011  ld   $11         ;039a LDWI
              5cc7 0000  ld   $00
              5cc8 0001  ld   $01
              5cc9 0099  ld   $99         ;039d ADDW
              5cca 0070  ld   $70         ;039d 'p'
              5ccb 002b  ld   $2b         ;039f STW
              5ccc 0070  ld   $70         ;039f 'p'
              5ccd 0035  ld   $35         ;03a1 BCC
              5cce 004d  ld   $4d         ;03a2 GT
              5ccf 0090  ld   $90
              5cd0 00ff  ld   $ff         ;03a4 RET
              5cd1 002b  ld   $2b         ;03a5 STW
              5cd2 006c  ld   $6c         ;03a5 'ClearScreen'
              5cd3 00cd  ld   $cd         ;03a7 DEF
              5cd4 00c1  ld   $c1
              5cd5 0059  ld   $59         ;03a9 LDI
              5cd6 0000  ld   $00
              5cd7 00b8  ld   $b8         ;03ab SUBW
              5cd8 0072  ld   $72         ;03ab 'stepV'
              5cd9 002b  ld   $2b         ;03ad STW
              5cda 006a  ld   $6a         ;03ad 'tmp'
              5cdb 0021  ld   $21         ;03af LDW
              5cdc 0074  ld   $74         ;03af 'stepU'
              5cdd 002b  ld   $2b         ;03b1 STW
              5cde 0072  ld   $72         ;03b1 'stepV'
              5cdf 0021  ld   $21         ;03b3 LDW
              5ce0 006a  ld   $6a         ;03b3 'tmp'
              5ce1 002b  ld   $2b         ;03b5 STW
              5ce2 0074  ld   $74         ;03b5 'stepU'
              5ce3 0021  ld   $21         ;03b7 LDW
              5ce4 0076  ld   $76         ;03b7 'Bias'
              5ce5 0035  ld   $35         ;03b9 BCC
              5ce6 0053  ld   $53         ;03ba GE
              5ce7 00bc  ld   $bc
              5ce8 0059  ld   $59         ;03bc LDI
              5ce9 0000  ld   $00
              5cea 00e3  ld   $e3         ;03be ADDI
              5ceb 003c  ld   $3c
              5cec 002b  ld   $2b         ;03c0 STW
              5ced 0076  ld   $76         ;03c0 'Bias'
              5cee 00ff  ld   $ff         ;03c2 RET
              5cef 002b  ld   $2b         ;03c3 STW
              5cf0 0078  ld   $78         ;03c3 'TurnL'
              5cf1 00cd  ld   $cd         ;03c5 DEF
              5cf2 00df  ld   $df
              5cf3 0059  ld   $59         ;03c7 LDI
              5cf4 0000  ld   $00
              5cf5 00b8  ld   $b8         ;03c9 SUBW
              5cf6 0074  ld   $74         ;03c9 'stepU'
              5cf7 002b  ld   $2b         ;03cb STW
              5cf8 006a  ld   $6a         ;03cb 'tmp'
              5cf9 0021  ld   $21         ;03cd LDW
              5cfa 0072  ld   $72         ;03cd 'stepV'
              5cfb fe00  bra  ac          ;+-----------------------------------+
              5cfc fcfd  bra  $5cfd       ;|                                   |
              5cfd 1418  ld   $18,y       ;| Trampoline for page $5c00 lookups |
              5cfe e006  jmp  y,$06       ;|                                   |
              5cff c218  st   [$18]       ;+-----------------------------------+
              5d00 002b  ld   $2b         ;03cf STW
              5d01 0074  ld   $74         ;03cf 'stepU'
              5d02 0021  ld   $21         ;03d1 LDW
              5d03 006a  ld   $6a         ;03d1 'tmp'
              5d04 002b  ld   $2b         ;03d3 STW
              5d05 0072  ld   $72         ;03d3 'stepV'
              5d06 0021  ld   $21         ;03d5 LDW
              5d07 0076  ld   $76         ;03d5 'Bias'
              5d08 0035  ld   $35         ;03d7 BCC
              5d09 0056  ld   $56         ;03d8 LE
              5d0a 00da  ld   $da
              5d0b 0059  ld   $59         ;03da LDI
              5d0c 0000  ld   $00
              5d0d 00e6  ld   $e6         ;03dc SUBI
              5d0e 003c  ld   $3c
              5d0f 002b  ld   $2b         ;03de STW
              5d10 0076  ld   $76         ;03de 'Bias'
              5d11 00ff  ld   $ff         ;03e0 RET
              5d12 002b  ld   $2b         ;03e1 STW
              5d13 007a  ld   $7a         ;03e1 'TurnR'
              5d14 00cd  ld   $cd         ;03e3 DEF
              5d15 00f0  ld   $f0
              5d16 002b  ld   $2b         ;03e5 STW
              5d17 003c  ld   $3c         ;03e5 'Pos'
              5d18 0021  ld   $21         ;03e7 LDW
              5d19 003a  ld   $3a         ;03e7 'Color'
              5d1a 005e  ld   $5e         ;03e9 ST
              5d1b 0019  ld   $19
              5d1c 00f3  ld   $f3         ;03eb DOKE
              5d1d 003c  ld   $3c         ;03eb 'Pos'
              5d1e 0093  ld   $93         ;03ed INC
              5d1f 003d  ld   $3d         ;03ed 'Pos'+1
              5d20 00f3  ld   $f3         ;03ef DOKE
              5d21 003c  ld   $3c         ;03ef 'Pos'
              5d22 00ff  ld   $ff         ;03f1 RET
              5d23 002b  ld   $2b         ;03f2 STW
              5d24 005a  ld   $5a         ;03f2 'DrawBlock'
              5d25 0093  ld   $93         ;03f4 INC
              5d26 001b  ld   $1b         ;03f4 '_vLR'+1
              5d27 00ff  ld   $ff         ;03f6 RET
              5d28 0004  ld   $04         ;| RAM segment address (high byte first)
              5d29 0000  ld   $00         ;|
              5d2a 00f9  ld   $f9         ;| Length (1..256)
              5d2b 00cd  ld   $cd         ;0400 DEF
              5d2c 00ae  ld   $ae
              5d2d 0075  ld   $75         ;0402 PUSH
              5d2e 00cf  ld   $cf         ;0403 CALL
              5d2f 0060  ld   $60         ;0403 'Control'
              5d30 001a  ld   $1a         ;0405 LD
              5d31 0075  ld   $75         ;0405 'stepU'+1
              5d32 0082  ld   $82         ;0407 ANDI
              5d33 0080  ld   $80
              5d34 002b  ld   $2b         ;0409 STW
              5d35 006a  ld   $6a         ;0409 'tmp'
              5d36 0021  ld   $21         ;040b LDW
              5d37 0074  ld   $74         ;040b 'stepU'
              5d38 0082  ld   $82         ;040d ANDI
              5d39 0002  ld   $02
              5d3a 0035  ld   $35         ;040f BCC
              5d3b 003f  ld   $3f         ;0410 EQ
              5d3c 0012  ld   $12
              5d3d 0059  ld   $59         ;0412 LDI
              5d3e 0040  ld   $40
              5d3f 0099  ld   $99         ;0414 ADDW
              5d40 006a  ld   $6a         ;0414 'tmp'
              5d41 00e3  ld   $e3         ;0416 ADDI
              5d42 001b  ld   $1b
              5d43 002b  ld   $2b         ;0418 STW
              5d44 003a  ld   $3a         ;0418 'Color'
              5d45 001a  ld   $1a         ;041a LD
              5d46 0059  ld   $59         ;041a 'Head'+1
              5d47 00fc  ld   $fc         ;041c XORW
              5d48 0058  ld   $58         ;041c 'Head'
              5d49 0082  ld   $82         ;041e ANDI
              5d4a 0002  ld   $02
              5d4b 0035  ld   $35         ;0420 BCC
              5d4c 003f  ld   $3f         ;0421 EQ
              5d4d 0023  ld   $23
              5d4e 0059  ld   $59         ;0423 LDI
              5d4f 0001  ld   $01
              5d50 00fc  ld   $fc         ;0425 XORW
              5d51 003a  ld   $3a         ;0425 'Color'
              5d52 002b  ld   $2b         ;0427 STW
              5d53 003a  ld   $3a         ;0427 'Color'
              5d54 0021  ld   $21         ;0429 LDW
              5d55 0058  ld   $58         ;0429 'Head'
              5d56 00cf  ld   $cf         ;042b CALL
              5d57 005a  ld   $5a         ;042b 'DrawBlock'
              5d58 0021  ld   $21         ;042d LDW
              5d59 0058  ld   $58         ;042d 'Head'
              5d5a 0099  ld   $99         ;042f ADDW
              5d5b 0074  ld   $74         ;042f 'stepU'
              5d5c 002b  ld   $2b         ;0431 STW
              5d5d 0058  ld   $58         ;0431 'Head'
              5d5e 0021  ld   $21         ;0433 LDW
              5d5f 0058  ld   $58         ;0433 'Head'
              5d60 00ad  ld   $ad         ;0435 PEEK
              5d61 0082  ld   $82         ;0436 ANDI
              5d62 0003  ld   $03
              5d63 0035  ld   $35         ;0438 BCC
              5d64 003f  ld   $3f         ;0439 EQ
              5d65 003b  ld   $3b
              5d66 0063  ld   $63         ;043b POP
              5d67 00ff  ld   $ff         ;043c RET
              5d68 0021  ld   $21         ;043d LDW
              5d69 0058  ld   $58         ;043d 'Head'
              5d6a 00ad  ld   $ad         ;043f PEEK
              5d6b 008c  ld   $8c         ;0440 XORI
              5d6c 0018  ld   $18
              5d6d 0035  ld   $35         ;0442 BCC
              5d6e 0072  ld   $72         ;0443 NE
              5d6f 005d  ld   $5d
              5d70 0059  ld   $59         ;0445 LDI
              5d71 0040  ld   $40
              5d72 0099  ld   $99         ;0447 ADDW
              5d73 004a  ld   $4a         ;0447 'Timer'
              5d74 00cf  ld   $cf         ;0449 CALL
              5d75 007c  ld   $7c         ;0449 'SetNote'
              5d76 0059  ld   $59         ;044b LDI
              5d77 0002  ld   $02
              5d78 005e  ld   $5e         ;044d ST
              5d79 002c  ld   $2c
              5d7a 0021  ld   $21         ;044f LDW
              5d7b 005e  ld   $5e         ;044f 'Score'
              5d7c 0099  ld   $99         ;0451 ADDW
              5d7d 004a  ld   $4a         ;0451 'Timer'
              5d7e 002b  ld   $2b         ;0453 STW
              5d7f 005e  ld   $5e         ;0453 'Score'
              5d80 00cf  ld   $cf         ;0455 CALL
              5d81 007e  ld   $7e         ;0455 'DrawScore'
              5d82 0059  ld   $59         ;0457 LDI
              5d83 0005  ld   $05
              5d84 00cf  ld   $cf         ;0459 CALL
              5d85 0081  ld   $81         ;0459 'AddTimer'
              5d86 0093  ld   $93         ;045b INC
              5d87 0083  ld   $83         ;045b 'Grow'
              5d88 0093  ld   $93         ;045d INC
              5d89 0085  ld   $85         ;045d 'Drops'
              5d8a 00cf  ld   $cf         ;045f CALL
              5d8b 005c  ld   $5c         ;045f 'DrawHead'
              5d8c 0021  ld   $21         ;0461 LDW
              5d8d 0083  ld   $83         ;0461 'Grow'
              5d8e 0035  ld   $35         ;0463 BCC
              5d8f 0056  ld   $56         ;0464 LE
              5d90 006c  ld   $6c
              5d91 00e6  ld   $e6         ;0466 SUBI
              5d92 0001  ld   $01
              5d93 002b  ld   $2b         ;0468 STW
              5d94 0083  ld   $83         ;0468 'Grow'
              5d95 00cf  ld   $cf         ;046a CALL
              5d96 0087  ld   $87         ;046a 'AddFood'
              5d97 0090  ld   $90         ;046c BRA
              5d98 00aa  ld   $aa
              5d99 0021  ld   $21         ;046e LDW
              5d9a 0089  ld   $89         ;046e 'Tail'
              5d9b 00ad  ld   $ad         ;0470 PEEK
              5d9c 002b  ld   $2b         ;0471 STW
              5d9d 006a  ld   $6a         ;0471 'tmp'
              5d9e 0021  ld   $21         ;0473 LDW
              5d9f 0085  ld   $85         ;0473 'Drops'
              5da0 0035  ld   $35         ;0475 BCC
              5da1 0056  ld   $56         ;0476 LE
              5da2 007e  ld   $7e
              5da3 00e6  ld   $e6         ;0478 SUBI
              5da4 0001  ld   $01
              5da5 002b  ld   $2b         ;047a STW
              5da6 0085  ld   $85         ;047a 'Drops'
              5da7 0059  ld   $59         ;047c LDI
              5da8 003e  ld   $3e
              5da9 0090  ld   $90         ;047e BRA
              5daa 0080  ld   $80
              5dab 0059  ld   $59         ;0480 LDI
              5dac 0004  ld   $04
              5dad 002b  ld   $2b         ;0482 STW
              5dae 003a  ld   $3a         ;0482 'Color'
              5daf 0021  ld   $21         ;0484 LDW
              5db0 0089  ld   $89         ;0484 'Tail'
              5db1 00cf  ld   $cf         ;0486 CALL
              5db2 005a  ld   $5a         ;0486 'DrawBlock'
              5db3 0021  ld   $21         ;0488 LDW
              5db4 006a  ld   $6a         ;0488 'tmp'
              5db5 0082  ld   $82         ;048a ANDI
              5db6 0040  ld   $40
              5db7 0035  ld   $35         ;048c BCC
              5db8 0072  ld   $72         ;048d NE
              5db9 0092  ld   $92
              5dba 0011  ld   $11         ;048f LDWI
              5dbb 0000  ld   $00
              5dbc 0001  ld   $01
              5dbd 0090  ld   $90         ;0492 BRA
              5dbe 0094  ld   $94
              5dbf 0059  ld   $59         ;0494 LDI
              5dc0 0001  ld   $01
              5dc1 002b  ld   $2b         ;0496 STW
              5dc2 008b  ld   $8b         ;0496 'x'
              5dc3 0021  ld   $21         ;0498 LDW
              5dc4 006a  ld   $6a         ;0498 'tmp'
              5dc5 0082  ld   $82         ;049a ANDI
              5dc6 0080  ld   $80
              5dc7 0035  ld   $35         ;049c BCC
              5dc8 0072  ld   $72         ;049d NE
              5dc9 00a1  ld   $a1
              5dca 0021  ld   $21         ;049f LDW
              5dcb 008b  ld   $8b         ;049f 'x'
              5dcc 0090  ld   $90         ;04a1 BRA
              5dcd 00a5  ld   $a5
              5dce 0059  ld   $59         ;04a3 LDI
              5dcf 0000  ld   $00
              5dd0 00b8  ld   $b8         ;04a5 SUBW
              5dd1 008b  ld   $8b         ;04a5 'x'
              5dd2 00e9  ld   $e9         ;04a7 LSLW
              5dd3 0099  ld   $99         ;04a8 ADDW
              5dd4 0089  ld   $89         ;04a8 'Tail'
              5dd5 002b  ld   $2b         ;04aa STW
              5dd6 0089  ld   $89         ;04aa 'Tail'
              5dd7 00cf  ld   $cf         ;04ac CALL
              5dd8 0052  ld   $52         ;04ac 'TimeStep'
              5dd9 0090  ld   $90         ;04ae BRA
              5dda 0001  ld   $01
              5ddb 002b  ld   $2b         ;04b0 STW
              5ddc 008d  ld   $8d         ;04b0 'RunGame'
              5ddd 00cd  ld   $cd         ;04b2 DEF
              5dde 00ee  ld   $ee
              5ddf 0075  ld   $75         ;04b4 PUSH
              5de0 0059  ld   $59         ;04b5 LDI
              5de1 0018  ld   $18
              5de2 002b  ld   $2b         ;04b7 STW
              5de3 003a  ld   $3a         ;04b7 'Color'
              5de4 0011  ld   $11         ;04b9 LDWI
              5de5 00a7  ld   $a7
              5de6 0004  ld   $04
              5de7 002b  ld   $2b         ;04bc STW
              5de8 0022  ld   $22
              5de9 00b4  ld   $b4         ;04be SYS
              5dea 00fe  ld   $fe
              5deb 002b  ld   $2b         ;04c0 STW
              5dec 003c  ld   $3c         ;04c0 'Pos'
              5ded 001a  ld   $1a         ;04c2 LD
              5dee 003c  ld   $3c         ;04c2 'Pos'
              5def 00e6  ld   $e6         ;04c4 SUBI
              5df0 0080  ld   $80
              5df1 0035  ld   $35         ;04c6 BCC
              5df2 0053  ld   $53         ;04c7 GE
              5df3 00c9  ld   $c9
              5df4 00e3  ld   $e3         ;04c9 ADDI
              5df5 0096  ld   $96
              5df6 00e3  ld   $e3         ;04cb ADDI
              5df7 0005  ld   $05
              5df8 0082  ld   $82         ;04cd ANDI
              5df9 00fe  ld   $fe
              5dfa 005e  ld   $5e         ;04cf ST
              5dfb fe00  bra  ac          ;+-----------------------------------+
              5dfc fcfd  bra  $5dfd       ;|                                   |
              5dfd 1418  ld   $18,y       ;| Trampoline for page $5d00 lookups |
              5dfe e006  jmp  y,$06       ;|                                   |
              5dff c218  st   [$18]       ;+-----------------------------------+
              5e00 003c  ld   $3c         ;04cf 'Pos'
              5e01 001a  ld   $1a         ;04d1 LD
              5e02 003d  ld   $3d         ;04d1 'Pos'+1
              5e03 0082  ld   $82         ;04d3 ANDI
              5e04 007f  ld   $7f
              5e05 00e6  ld   $e6         ;04d5 SUBI
              5e06 0040  ld   $40
              5e07 0035  ld   $35         ;04d7 BCC
              5e08 0053  ld   $53         ;04d8 GE
              5e09 00da  ld   $da
              5e0a 00e3  ld   $e3         ;04da ADDI
              5e0b 0066  ld   $66
              5e0c 00e3  ld   $e3         ;04dc ADDI
              5e0d 0015  ld   $15
              5e0e 0082  ld   $82         ;04de ANDI
              5e0f 00fe  ld   $fe
              5e10 005e  ld   $5e         ;04e0 ST
              5e11 003d  ld   $3d         ;04e0 'Pos'+1
              5e12 0021  ld   $21         ;04e2 LDW
              5e13 003c  ld   $3c         ;04e2 'Pos'
              5e14 00ad  ld   $ad         ;04e4 PEEK
              5e15 008c  ld   $8c         ;04e5 XORI
              5e16 0004  ld   $04
              5e17 0035  ld   $35         ;04e7 BCC
              5e18 0072  ld   $72         ;04e8 NE
              5e19 00b7  ld   $b7
              5e1a 0021  ld   $21         ;04ea LDW
              5e1b 003c  ld   $3c         ;04ea 'Pos'
              5e1c 00cf  ld   $cf         ;04ec CALL
              5e1d 005a  ld   $5a         ;04ec 'DrawBlock'
              5e1e 0063  ld   $63         ;04ee POP
              5e1f 00ff  ld   $ff         ;04ef RET
              5e20 002b  ld   $2b         ;04f0 STW
              5e21 0087  ld   $87         ;04f0 'AddFood'
              5e22 0059  ld   $59         ;04f2 LDI
              5e23 0000  ld   $00
              5e24 002b  ld   $2b         ;04f4 STW
              5e25 0076  ld   $76         ;04f4 'Bias'
              5e26 0093  ld   $93         ;04f6 INC
              5e27 001b  ld   $1b         ;04f6 '_vLR'+1
              5e28 00ff  ld   $ff         ;04f8 RET
              5e29 0005  ld   $05         ;| RAM segment address (high byte first)
              5e2a 0000  ld   $00         ;|
              5e2b 00ed  ld   $ed         ;| Length (1..256)
              5e2c 00cd  ld   $cd         ;0500 DEF
              5e2d 00e6  ld   $e6
              5e2e 0075  ld   $75         ;0502 PUSH
              5e2f 001a  ld   $1a         ;0503 LD
              5e30 0011  ld   $11
              5e31 0082  ld   $82         ;0505 ANDI
              5e32 00cf  ld   $cf
              5e33 008c  ld   $8c         ;0507 XORI
              5e34 00cf  ld   $cf
              5e35 0035  ld   $35         ;0509 BCC
              5e36 003f  ld   $3f         ;050a EQ
              5e37 000e  ld   $0e
              5e38 00cf  ld   $cf         ;050c CALL
              5e39 008f  ld   $8f         ;050c 'SetupGame'
              5e3a 0063  ld   $63         ;050e POP
              5e3b 00ff  ld   $ff         ;050f RET
              5e3c 0021  ld   $21         ;0510 LDW
              5e3d 0078  ld   $78         ;0510 'TurnL'
              5e3e 002b  ld   $2b         ;0512 STW
              5e3f 0070  ld   $70         ;0512 'p'
              5e40 0021  ld   $21         ;0514 LDW
              5e41 007a  ld   $7a         ;0514 'TurnR'
              5e42 002b  ld   $2b         ;0516 STW
              5e43 0091  ld   $91         ;0516 'q'
              5e44 0021  ld   $21         ;0518 LDW
              5e45 0058  ld   $58         ;0518 'Head'
              5e46 0099  ld   $99         ;051a ADDW
              5e47 0074  ld   $74         ;051a 'stepU'
              5e48 00ad  ld   $ad         ;051c PEEK
              5e49 008c  ld   $8c         ;051d XORI
              5e4a 0004  ld   $04
              5e4b 002b  ld   $2b         ;051f STW
              5e4c 006a  ld   $6a         ;051f 'tmp'
              5e4d 0035  ld   $35         ;0521 BCC
              5e4e 003f  ld   $3f         ;0522 EQ
              5e4f 002b  ld   $2b
              5e50 008c  ld   $8c         ;0524 XORI
              5e51 001c  ld   $1c
              5e52 0035  ld   $35         ;0526 BCC
              5e53 0072  ld   $72         ;0527 NE
              5e54 0029  ld   $29
              5e55 002b  ld   $2b         ;0529 STW
              5e56 006a  ld   $6a         ;0529 'tmp'
              5e57 0090  ld   $90         ;052b BRA
              5e58 0039  ld   $39
              5e59 0021  ld   $21         ;052d LDW
              5e5a 0058  ld   $58         ;052d 'Head'
              5e5b 0099  ld   $99         ;052f ADDW
              5e5c 0074  ld   $74         ;052f 'stepU'
              5e5d 0099  ld   $99         ;0531 ADDW
              5e5e 0074  ld   $74         ;0531 'stepU'
              5e5f 00ad  ld   $ad         ;0533 PEEK
              5e60 008c  ld   $8c         ;0534 XORI
              5e61 003e  ld   $3e
              5e62 0035  ld   $35         ;0536 BCC
              5e63 0072  ld   $72         ;0537 NE
              5e64 0039  ld   $39
              5e65 0093  ld   $93         ;0539 INC
              5e66 006b  ld   $6b         ;0539 'tmp'+1
              5e67 0021  ld   $21         ;053b LDW
              5e68 0058  ld   $58         ;053b 'Head'
              5e69 00b8  ld   $b8         ;053d SUBW
              5e6a 0072  ld   $72         ;053d 'stepV'
              5e6b 00ad  ld   $ad         ;053f PEEK
              5e6c 008c  ld   $8c         ;0540 XORI
              5e6d 0004  ld   $04
              5e6e 0035  ld   $35         ;0542 BCC
              5e6f 003f  ld   $3f         ;0543 EQ
              5e70 0054  ld   $54
              5e71 008c  ld   $8c         ;0545 XORI
              5e72 001c  ld   $1c
              5e73 0035  ld   $35         ;0547 BCC
              5e74 0072  ld   $72         ;0548 NE
              5e75 004e  ld   $4e
              5e76 002b  ld   $2b         ;054a STW
              5e77 0091  ld   $91         ;054a 'q'
              5e78 0093  ld   $93         ;054c INC
              5e79 006b  ld   $6b         ;054c 'tmp'+1
              5e7a 0090  ld   $90         ;054e BRA
              5e7b 0052  ld   $52
              5e7c 0059  ld   $59         ;0550 LDI
              5e7d 0000  ld   $00
              5e7e 002b  ld   $2b         ;0552 STW
              5e7f 0070  ld   $70         ;0552 'p'
              5e80 0090  ld   $90         ;0554 BRA
              5e81 0071  ld   $71
              5e82 0021  ld   $21         ;0556 LDW
              5e83 0058  ld   $58         ;0556 'Head'
              5e84 00b8  ld   $b8         ;0558 SUBW
              5e85 0072  ld   $72         ;0558 'stepV'
              5e86 00b8  ld   $b8         ;055a SUBW
              5e87 0072  ld   $72         ;055a 'stepV'
              5e88 00ad  ld   $ad         ;055c PEEK
              5e89 008c  ld   $8c         ;055d XORI
              5e8a 0004  ld   $04
              5e8b 0035  ld   $35         ;055f BCC
              5e8c 003f  ld   $3f         ;0560 EQ
              5e8d 0071  ld   $71
              5e8e 008c  ld   $8c         ;0562 XORI
              5e8f 001c  ld   $1c
              5e90 0035  ld   $35         ;0564 BCC
              5e91 0072  ld   $72         ;0565 NE
              5e92 006b  ld   $6b
              5e93 002b  ld   $2b         ;0567 STW
              5e94 0091  ld   $91         ;0567 'q'
              5e95 0093  ld   $93         ;0569 INC
              5e96 006b  ld   $6b         ;0569 'tmp'+1
              5e97 0090  ld   $90         ;056b BRA
              5e98 0071  ld   $71
              5e99 0021  ld   $21         ;056d LDW
              5e9a 0076  ld   $76         ;056d 'Bias'
              5e9b 00e3  ld   $e3         ;056f ADDI
              5e9c 000f  ld   $0f
              5e9d 0021  ld   $21         ;0571 LDW
              5e9e 0076  ld   $76         ;0571 'Bias'
              5e9f 0021  ld   $21         ;0573 LDW
              5ea0 0058  ld   $58         ;0573 'Head'
              5ea1 0099  ld   $99         ;0575 ADDW
              5ea2 0072  ld   $72         ;0575 'stepV'
              5ea3 00ad  ld   $ad         ;0577 PEEK
              5ea4 008c  ld   $8c         ;0578 XORI
              5ea5 0004  ld   $04
              5ea6 0035  ld   $35         ;057a BCC
              5ea7 003f  ld   $3f         ;057b EQ
              5ea8 008c  ld   $8c
              5ea9 008c  ld   $8c         ;057d XORI
              5eaa 001c  ld   $1c
              5eab 0035  ld   $35         ;057f BCC
              5eac 0072  ld   $72         ;0580 NE
              5ead 0086  ld   $86
              5eae 002b  ld   $2b         ;0582 STW
              5eaf 0070  ld   $70         ;0582 'p'
              5eb0 0093  ld   $93         ;0584 INC
              5eb1 006b  ld   $6b         ;0584 'tmp'+1
              5eb2 0090  ld   $90         ;0586 BRA
              5eb3 008a  ld   $8a
              5eb4 0059  ld   $59         ;0588 LDI
              5eb5 0000  ld   $00
              5eb6 002b  ld   $2b         ;058a STW
              5eb7 0091  ld   $91         ;058a 'q'
              5eb8 0090  ld   $90         ;058c BRA
              5eb9 00a9  ld   $a9
              5eba 0021  ld   $21         ;058e LDW
              5ebb 0058  ld   $58         ;058e 'Head'
              5ebc 0099  ld   $99         ;0590 ADDW
              5ebd 0072  ld   $72         ;0590 'stepV'
              5ebe 0099  ld   $99         ;0592 ADDW
              5ebf 0072  ld   $72         ;0592 'stepV'
              5ec0 00ad  ld   $ad         ;0594 PEEK
              5ec1 008c  ld   $8c         ;0595 XORI
              5ec2 0004  ld   $04
              5ec3 0035  ld   $35         ;0597 BCC
              5ec4 003f  ld   $3f         ;0598 EQ
              5ec5 00a9  ld   $a9
              5ec6 008c  ld   $8c         ;059a XORI
              5ec7 001c  ld   $1c
              5ec8 0035  ld   $35         ;059c BCC
              5ec9 0072  ld   $72         ;059d NE
              5eca 00a3  ld   $a3
              5ecb 002b  ld   $2b         ;059f STW
              5ecc 0070  ld   $70         ;059f 'p'
              5ecd 0093  ld   $93         ;05a1 INC
              5ece 006b  ld   $6b         ;05a1 'tmp'+1
              5ecf 0090  ld   $90         ;05a3 BRA
              5ed0 00a9  ld   $a9
              5ed1 0021  ld   $21         ;05a5 LDW
              5ed2 0076  ld   $76         ;05a5 'Bias'
              5ed3 00e6  ld   $e6         ;05a7 SUBI
              5ed4 000f  ld   $0f
              5ed5 0021  ld   $21         ;05a9 LDW
              5ed6 0076  ld   $76         ;05a9 'Bias'
              5ed7 0021  ld   $21         ;05ab LDW
              5ed8 006a  ld   $6a         ;05ab 'tmp'
              5ed9 0035  ld   $35         ;05ad BCC
              5eda 0072  ld   $72         ;05ae NE
              5edb 00bb  ld   $bb
              5edc 001a  ld   $1a         ;05b0 LD
              5edd 0006  ld   $06
              5ede 00e6  ld   $e6         ;05b2 SUBI
              5edf 000d  ld   $0d
              5ee0 0035  ld   $35         ;05b4 BCC
              5ee1 0053  ld   $53         ;05b5 GE
              5ee2 00b9  ld   $b9
              5ee3 0059  ld   $59         ;05b7 LDI
              5ee4 0001  ld   $01
              5ee5 0090  ld   $90         ;05b9 BRA
              5ee6 00bb  ld   $bb
              5ee7 0059  ld   $59         ;05bb LDI
              5ee8 0000  ld   $00
              5ee9 0035  ld   $35         ;05bd BCC
              5eea 003f  ld   $3f         ;05be EQ
              5eeb 00e4  ld   $e4
              5eec 0021  ld   $21         ;05c0 LDW
              5eed 0070  ld   $70         ;05c0 'p'
              5eee 0035  ld   $35         ;05c2 BCC
              5eef 0072  ld   $72         ;05c3 NE
              5ef0 00c7  ld   $c7
              5ef1 0021  ld   $21         ;05c5 LDW
              5ef2 0091  ld   $91         ;05c5 'q'
              5ef3 0090  ld   $90         ;05c7 BRA
              5ef4 00df  ld   $df
              5ef5 0021  ld   $21         ;05c9 LDW
              5ef6 0091  ld   $91         ;05c9 'q'
              5ef7 0035  ld   $35         ;05cb BCC
              5ef8 0072  ld   $72         ;05cc NE
              5ef9 00d0  ld   $d0
              5efa 0021  ld   $21         ;05ce LDW
              5efb fe00  bra  ac          ;+-----------------------------------+
              5efc fcfd  bra  $5efd       ;|                                   |
              5efd 1418  ld   $18,y       ;| Trampoline for page $5e00 lookups |
              5efe e006  jmp  y,$06       ;|                                   |
              5eff c218  st   [$18]       ;+-----------------------------------+
              5f00 0070  ld   $70         ;05ce 'p'
              5f01 0090  ld   $90         ;05d0 BRA
              5f02 00df  ld   $df
              5f03 001a  ld   $1a         ;05d2 LD
              5f04 0006  ld   $06
              5f05 00e6  ld   $e6         ;05d4 SUBI
              5f06 0080  ld   $80
              5f07 0099  ld   $99         ;05d6 ADDW
              5f08 0076  ld   $76         ;05d6 'Bias'
              5f09 0035  ld   $35         ;05d8 BCC
              5f0a 0053  ld   $53         ;05d9 GE
              5f0b 00dd  ld   $dd
              5f0c 0021  ld   $21         ;05db LDW
              5f0d 0070  ld   $70         ;05db 'p'
              5f0e 0090  ld   $90         ;05dd BRA
              5f0f 00df  ld   $df
              5f10 0021  ld   $21         ;05df LDW
              5f11 0091  ld   $91         ;05df 'q'
              5f12 0035  ld   $35         ;05e1 BCC
              5f13 003f  ld   $3f         ;05e2 EQ
              5f14 00e4  ld   $e4
              5f15 00cf  ld   $cf         ;05e4 CALL
              5f16 0018  ld   $18         ;05e4 vAC
              5f17 0063  ld   $63         ;05e6 POP
              5f18 00ff  ld   $ff         ;05e7 RET
              5f19 002b  ld   $2b         ;05e8 STW
              5f1a 0093  ld   $93         ;05e8 'AutoControl'
              5f1b 0093  ld   $93         ;05ea INC
              5f1c 001b  ld   $1b         ;05ea '_vLR'+1
              5f1d 00ff  ld   $ff         ;05ec RET
              5f1e 0006  ld   $06         ;| RAM segment address (high byte first)
              5f1f 0000  ld   $00         ;|
              5f20 00fa  ld   $fa         ;| Length (1..256)
              5f21 00cd  ld   $cd         ;0600 DEF
              5f22 0016  ld   $16
              5f23 0075  ld   $75         ;0602 PUSH
              5f24 0099  ld   $99         ;0603 ADDW
              5f25 004a  ld   $4a         ;0603 'Timer'
              5f26 002b  ld   $2b         ;0605 STW
              5f27 004a  ld   $4a         ;0605 'Timer'
              5f28 00e6  ld   $e6         ;0607 SUBI
              5f29 000f  ld   $0f
              5f2a 0035  ld   $35         ;0609 BCC
              5f2b 0056  ld   $56         ;060a LE
              5f2c 000e  ld   $0e
              5f2d 0059  ld   $59         ;060c LDI
              5f2e 000f  ld   $0f
              5f2f 002b  ld   $2b         ;060e STW
              5f30 004a  ld   $4a         ;060e 'Timer'
              5f31 001a  ld   $1a         ;0610 LD
              5f32 000e  ld   $0e
              5f33 002b  ld   $2b         ;0612 STW
              5f34 0048  ld   $48         ;0612 'TimeOut'
              5f35 00cf  ld   $cf         ;0614 CALL
              5f36 004c  ld   $4c         ;0614 'DrawTimer'
              5f37 0063  ld   $63         ;0616 POP
              5f38 00ff  ld   $ff         ;0617 RET
              5f39 002b  ld   $2b         ;0618 STW
              5f3a 0081  ld   $81         ;0618 'AddTimer'
              5f3b 00cd  ld   $cd         ;061a DEF
              5f3c 00b3  ld   $b3
              5f3d 0075  ld   $75         ;061c PUSH
              5f3e 0059  ld   $59         ;061d LDI
              5f3f 0000  ld   $00
              5f40 002b  ld   $2b         ;061f STW
              5f41 005e  ld   $5e         ;061f 'Score'
              5f42 002b  ld   $2b         ;0621 STW
              5f43 004a  ld   $4a         ;0621 'Timer'
              5f44 00cf  ld   $cf         ;0623 CALL
              5f45 007e  ld   $7e         ;0623 'DrawScore'
              5f46 0059  ld   $59         ;0625 LDI
              5f47 000f  ld   $0f
              5f48 002b  ld   $2b         ;0627 STW
              5f49 004a  ld   $4a         ;0627 'Timer'
              5f4a 00cf  ld   $cf         ;0629 CALL
              5f4b 004c  ld   $4c         ;0629 'DrawTimer'
              5f4c 00cf  ld   $cf         ;062b CALL
              5f4d 0064  ld   $64         ;062b 'DrawHighScore'
              5f4e 0059  ld   $59         ;062d LDI
              5f4f 0004  ld   $04
              5f50 002b  ld   $2b         ;062f STW
              5f51 0038  ld   $38         ;062f 'BgColor'
              5f52 0011  ld   $11         ;0631 LDWI
              5f53 0000  ld   $00
              5f54 0010  ld   $10
              5f55 002b  ld   $2b         ;0634 STW
              5f56 003c  ld   $3c         ;0634 'Pos'
              5f57 00cf  ld   $cf         ;0636 CALL
              5f58 006c  ld   $6c         ;0636 'ClearScreen'
              5f59 0059  ld   $59         ;0638 LDI
              5f5a 001a  ld   $1a
              5f5b 002b  ld   $2b         ;063a STW
              5f5c 003a  ld   $3a         ;063a 'Color'
              5f5d 0059  ld   $59         ;063c LDI
              5f5e 0001  ld   $01
              5f5f 002b  ld   $2b         ;063e STW
              5f60 0044  ld   $44         ;063e 'Step'
              5f61 0059  ld   $59         ;0640 LDI
              5f62 009f  ld   $9f
              5f63 00cf  ld   $cf         ;0642 CALL
              5f64 0046  ld   $46         ;0642 'DrawLine'
              5f65 0011  ld   $11         ;0644 LDWI
              5f66 0000  ld   $00
              5f67 0001  ld   $01
              5f68 002b  ld   $2b         ;0647 STW
              5f69 0044  ld   $44         ;0647 'Step'
              5f6a 0059  ld   $59         ;0649 LDI
              5f6b 006f  ld   $6f
              5f6c 00cf  ld   $cf         ;064b CALL
              5f6d 0046  ld   $46         ;064b 'DrawLine'
              5f6e 0011  ld   $11         ;064d LDWI
              5f6f 00ff  ld   $ff
              5f70 00ff  ld   $ff
              5f71 002b  ld   $2b         ;0650 STW
              5f72 0044  ld   $44         ;0650 'Step'
              5f73 0059  ld   $59         ;0652 LDI
              5f74 009f  ld   $9f
              5f75 00cf  ld   $cf         ;0654 CALL
              5f76 0046  ld   $46         ;0654 'DrawLine'
              5f77 0011  ld   $11         ;0656 LDWI
              5f78 0000  ld   $00
              5f79 00ff  ld   $ff
              5f7a 002b  ld   $2b         ;0659 STW
              5f7b 0044  ld   $44         ;0659 'Step'
              5f7c 0059  ld   $59         ;065b LDI
              5f7d 006e  ld   $6e
              5f7e 00cf  ld   $cf         ;065d CALL
              5f7f 0046  ld   $46         ;065d 'DrawLine'
              5f80 0059  ld   $59         ;065f LDI
              5f81 0001  ld   $01
              5f82 002b  ld   $2b         ;0661 STW
              5f83 0044  ld   $44         ;0661 'Step'
              5f84 0059  ld   $59         ;0663 LDI
              5f85 009e  ld   $9e
              5f86 00cf  ld   $cf         ;0665 CALL
              5f87 0046  ld   $46         ;0665 'DrawLine'
              5f88 0011  ld   $11         ;0667 LDWI
              5f89 0000  ld   $00
              5f8a 0001  ld   $01
              5f8b 002b  ld   $2b         ;066a STW
              5f8c 0044  ld   $44         ;066a 'Step'
              5f8d 0059  ld   $59         ;066c LDI
              5f8e 006d  ld   $6d
              5f8f 00cf  ld   $cf         ;066e CALL
              5f90 0046  ld   $46         ;066e 'DrawLine'
              5f91 0011  ld   $11         ;0670 LDWI
              5f92 00ff  ld   $ff
              5f93 00ff  ld   $ff
              5f94 002b  ld   $2b         ;0673 STW
              5f95 0044  ld   $44         ;0673 'Step'
              5f96 0059  ld   $59         ;0675 LDI
              5f97 009d  ld   $9d
              5f98 00cf  ld   $cf         ;0677 CALL
              5f99 0046  ld   $46         ;0677 'DrawLine'
              5f9a 0011  ld   $11         ;0679 LDWI
              5f9b 0000  ld   $00
              5f9c 00ff  ld   $ff
              5f9d 002b  ld   $2b         ;067c STW
              5f9e 0044  ld   $44         ;067c 'Step'
              5f9f 0059  ld   $59         ;067e LDI
              5fa0 006d  ld   $6d
              5fa1 00cf  ld   $cf         ;0680 CALL
              5fa2 0046  ld   $46         ;0680 'DrawLine'
              5fa3 00cf  ld   $cf         ;0682 CALL
              5fa4 0095  ld   $95         ;0682 'GetReady'
              5fa5 0011  ld   $11         ;0684 LDWI
              5fa6 0030  ld   $30
              5fa7 0044  ld   $44
              5fa8 002b  ld   $2b         ;0687 STW
              5fa9 0058  ld   $58         ;0687 'Head'
              5faa 002b  ld   $2b         ;0689 STW
              5fab 0089  ld   $89         ;0689 'Tail'
              5fac 00cf  ld   $cf         ;068b CALL
              5fad 005c  ld   $5c         ;068b 'DrawHead'
              5fae 0059  ld   $59         ;068d LDI
              5faf 0000  ld   $00
              5fb0 002b  ld   $2b         ;068f STW
              5fb1 0083  ld   $83         ;068f 'Grow'
              5fb2 002b  ld   $2b         ;0691 STW
              5fb3 0085  ld   $85         ;0691 'Drops'
              5fb4 002b  ld   $2b         ;0693 STW
              5fb5 004a  ld   $4a         ;0693 'Timer'
              5fb6 0059  ld   $59         ;0695 LDI
              5fb7 000f  ld   $0f
              5fb8 00cf  ld   $cf         ;0697 CALL
              5fb9 0081  ld   $81         ;0697 'AddTimer'
              5fba 0059  ld   $59         ;0699 LDI
              5fbb 0002  ld   $02
              5fbc 002b  ld   $2b         ;069b STW
              5fbd 0074  ld   $74         ;069b 'stepU'
              5fbe 0011  ld   $11         ;069d LDWI
              5fbf 0000  ld   $00
              5fc0 0002  ld   $02
              5fc1 002b  ld   $2b         ;06a0 STW
              5fc2 0072  ld   $72         ;06a0 'stepV'
              5fc3 0059  ld   $59         ;06a2 LDI
              5fc4 0019  ld   $19
              5fc5 002b  ld   $2b         ;06a4 STW
              5fc6 0034  ld   $34         ;06a4 'i'
              5fc7 00cf  ld   $cf         ;06a6 CALL
              5fc8 0087  ld   $87         ;06a6 'AddFood'
              5fc9 0021  ld   $21         ;06a8 LDW
              5fca 0034  ld   $34         ;06a8 'i'
              5fcb 00e6  ld   $e6         ;06aa SUBI
              5fcc 0001  ld   $01
              5fcd 0035  ld   $35         ;06ac BCC
              5fce 004d  ld   $4d         ;06ad GT
              5fcf 00a2  ld   $a2
              5fd0 0021  ld   $21         ;06af LDW
              5fd1 0097  ld   $97         ;06af 'LaunchControl'
              5fd2 002b  ld   $2b         ;06b1 STW
              5fd3 0060  ld   $60         ;06b1 'Control'
              5fd4 0063  ld   $63         ;06b3 POP
              5fd5 00ff  ld   $ff         ;06b4 RET
              5fd6 002b  ld   $2b         ;06b5 STW
              5fd7 008f  ld   $8f         ;06b5 'SetupGame'
              5fd8 00cd  ld   $cd         ;06b7 DEF
              5fd9 00f0  ld   $f0
              5fda 0075  ld   $75         ;06b9 PUSH
              5fdb 0011  ld   $11         ;06ba LDWI
              5fdc 0002  ld   $02
              5fdd 0008  ld   $08
              5fde 002b  ld   $2b         ;06bd STW
              5fdf 003c  ld   $3c         ;06bd 'Pos'
              5fe0 0021  ld   $21         ;06bf LDW
              5fe1 005e  ld   $5e         ;06bf 'Score'
              5fe2 00b8  ld   $b8         ;06c1 SUBW
              5fe3 0030  ld   $30         ;06c1 'HighScore'
              5fe4 0035  ld   $35         ;06c3 BCC
              5fe5 0056  ld   $56         ;06c4 LE
              5fe6 00c8  ld   $c8
              5fe7 0059  ld   $59         ;06c6 LDI
              5fe8 001e  ld   $1e
              5fe9 0090  ld   $90         ;06c8 BRA
              5fea 00ca  ld   $ca
              5feb 0059  ld   $59         ;06ca LDI
              5fec 0008  ld   $08
              5fed 002b  ld   $2b         ;06cc STW
              5fee 003a  ld   $3a         ;06cc 'Color'
              5fef 0059  ld   $59         ;06ce LDI
              5ff0 0000  ld   $00
              5ff1 002b  ld   $2b         ;06d0 STW
              5ff2 0038  ld   $38         ;06d0 'BgColor'
              5ff3 0021  ld   $21         ;06d2 LDW
              5ff4 005e  ld   $5e         ;06d2 'Score'
              5ff5 002b  ld   $2b         ;06d4 STW
              5ff6 0054  ld   $54         ;06d4 'Value'
              5ff7 00cf  ld   $cf         ;06d6 CALL
              5ff8 0099  ld   $99         ;06d6 'DrawNumber4'
              5ff9 0021  ld   $21         ;06d8 LDW
              5ffa 005e  ld   $5e         ;06d8 'Score'
              5ffb fe00  bra  ac          ;+-----------------------------------+
              5ffc fcfd  bra  $5ffd       ;|                                   |
              5ffd 1418  ld   $18,y       ;| Trampoline for page $5f00 lookups |
              5ffe e006  jmp  y,$06       ;|                                   |
              5fff c218  st   [$18]       ;+-----------------------------------+
              6000 00e6  ld   $e6         ;06da SUBI
              6001 0064  ld   $64
              6002 0035  ld   $35         ;06dc BCC
              6003 0053  ld   $53         ;06dd GE
              6004 00e1  ld   $e1
              6005 0059  ld   $59         ;06df LDI
              6006 0004  ld   $04
              6007 0090  ld   $90         ;06e1 BRA
              6008 00ec  ld   $ec
              6009 00e6  ld   $e6         ;06e3 SUBI
              600a 00c8  ld   $c8
              600b 0035  ld   $35         ;06e5 BCC
              600c 0053  ld   $53         ;06e6 GE
              600d 00ea  ld   $ea
              600e 0059  ld   $59         ;06e8 LDI
              600f 0003  ld   $03
              6010 0090  ld   $90         ;06ea BRA
              6011 00ec  ld   $ec
              6012 0059  ld   $59         ;06ec LDI
              6013 0002  ld   $02
              6014 002b  ld   $2b         ;06ee STW
              6015 004e  ld   $4e         ;06ee 'Delay'
              6016 0063  ld   $63         ;06f0 POP
              6017 00ff  ld   $ff         ;06f1 RET
              6018 002b  ld   $2b         ;06f2 STW
              6019 007e  ld   $7e         ;06f2 'DrawScore'
              601a 0011  ld   $11         ;06f4 LDWI
              601b 00a0  ld   $a0
              601c 0008  ld   $08
              601d 002b  ld   $2b         ;06f7 STW
              601e 001a  ld   $1a
              601f 00ff  ld   $ff         ;06f9 RET
              6020 0008  ld   $08         ;| RAM segment address (high byte first)
              6021 00a0  ld   $a0         ;|
              6022 0056  ld   $56         ;| Length (1..256)
              6023 00cd  ld   $cd         ;08a0 DEF
              6024 00d4  ld   $d4
              6025 0075  ld   $75         ;08a2 PUSH
              6026 0011  ld   $11         ;08a3 LDWI
              6027 009c  ld   $9c
              6028 0044  ld   $44
              6029 00b8  ld   $b8         ;08a6 SUBW
              602a 0058  ld   $58         ;08a6 'Head'
              602b 0035  ld   $35         ;08a8 BCC
              602c 0072  ld   $72         ;08a9 NE
              602d 00c3  ld   $c3
              602e 0059  ld   $59         ;08ab LDI
              602f 001e  ld   $1e
              6030 002b  ld   $2b         ;08ad STW
              6031 003a  ld   $3a         ;08ad 'Color'
              6032 0011  ld   $11         ;08af LDWI
              6033 0002  ld   $02
              6034 0008  ld   $08
              6035 002b  ld   $2b         ;08b2 STW
              6036 003c  ld   $3c         ;08b2 'Pos'
              6037 00cd  ld   $cd         ;08b4 DEF
              6038 00b9  ld   $b9
              6039 0041  ld   $41         ;08b6 'A'
              603a 0055  ld   $55         ;08b7 'U'
              603b 0054  ld   $54         ;08b8 'T'
              603c 004f  ld   $4f         ;08b9 'O'
              603d 0000  ld   $00         ;08ba 0
              603e 00cf  ld   $cf         ;08bb CALL
              603f 0042  ld   $42         ;08bb 'PrintText'
              6040 0021  ld   $21         ;08bd LDW
              6041 0093  ld   $93         ;08bd 'AutoControl'
              6042 002b  ld   $2b         ;08bf STW
              6043 0060  ld   $60         ;08bf 'Control'
              6044 00cf  ld   $cf         ;08c1 CALL
              6045 0018  ld   $18         ;08c1 vAC
              6046 0090  ld   $90         ;08c3 BRA
              6047 00d2  ld   $d2
              6048 001a  ld   $1a         ;08c5 LD
              6049 0011  ld   $11
              604a 0082  ld   $82         ;08c7 ANDI
              604b 00cf  ld   $cf
              604c 008c  ld   $8c         ;08c9 XORI
              604d 00cf  ld   $cf
              604e 0035  ld   $35         ;08cb BCC
              604f 003f  ld   $3f         ;08cc EQ
              6050 00d2  ld   $d2
              6051 0021  ld   $21         ;08ce LDW
              6052 0062  ld   $62         ;08ce 'PlayerControl'
              6053 002b  ld   $2b         ;08d0 STW
              6054 0060  ld   $60         ;08d0 'Control'
              6055 00cf  ld   $cf         ;08d2 CALL
              6056 0018  ld   $18         ;08d2 vAC
              6057 0063  ld   $63         ;08d4 POP
              6058 00ff  ld   $ff         ;08d5 RET
              6059 002b  ld   $2b         ;08d6 STW
              605a 0097  ld   $97         ;08d6 'LaunchControl'
              605b 00cd  ld   $cd         ;08d8 DEF
              605c 00ef  ld   $ef
              605d 0075  ld   $75         ;08da PUSH
              605e 0059  ld   $59         ;08db LDI
              605f 0020  ld   $20
              6060 002b  ld   $2b         ;08dd STW
              6061 0032  ld   $32         ;08dd 'Char'
              6062 0059  ld   $59         ;08df LDI
              6063 000a  ld   $0a
              6064 002b  ld   $2b         ;08e1 STW
              6065 009b  ld   $9b         ;08e1 'Radix'
              6066 00cf  ld   $cf         ;08e3 CALL
              6067 009d  ld   $9d         ;08e3 'DrawNextDigit'
              6068 0059  ld   $59         ;08e5 LDI
              6069 0030  ld   $30
              606a 002b  ld   $2b         ;08e7 STW
              606b 0032  ld   $32         ;08e7 'Char'
              606c 0059  ld   $59         ;08e9 LDI
              606d 0001  ld   $01
              606e 002b  ld   $2b         ;08eb STW
              606f 009b  ld   $9b         ;08eb 'Radix'
              6070 00cf  ld   $cf         ;08ed CALL
              6071 009d  ld   $9d         ;08ed 'DrawNextDigit'
              6072 0063  ld   $63         ;08ef POP
              6073 00ff  ld   $ff         ;08f0 RET
              6074 002b  ld   $2b         ;08f1 STW
              6075 0056  ld   $56         ;08f1 'DrawNumber2'
              6076 0093  ld   $93         ;08f3 INC
              6077 001b  ld   $1b         ;08f3 '_vLR'+1
              6078 00ff  ld   $ff         ;08f5 RET
              6079 0009  ld   $09         ;| RAM segment address (high byte first)
              607a 00a0  ld   $a0         ;|
              607b 0056  ld   $56         ;| Length (1..256)
              607c 00cd  ld   $cd         ;09a0 DEF
              607d 00c7  ld   $c7
              607e 0075  ld   $75         ;09a2 PUSH
              607f 0021  ld   $21         ;09a3 LDW
              6080 0054  ld   $54         ;09a3 'Value'
              6081 00b8  ld   $b8         ;09a5 SUBW
              6082 009b  ld   $9b         ;09a5 'Radix'
              6083 0035  ld   $35         ;09a7 BCC
              6084 0050  ld   $50         ;09a8 LT
              6085 00c3  ld   $c3
              6086 002b  ld   $2b         ;09aa STW
              6087 0054  ld   $54         ;09aa 'Value'
              6088 0059  ld   $59         ;09ac LDI
              6089 0031  ld   $31
              608a 002b  ld   $2b         ;09ae STW
              608b 0032  ld   $32         ;09ae 'Char'
              608c 0021  ld   $21         ;09b0 LDW
              608d 0054  ld   $54         ;09b0 'Value'
              608e 00b8  ld   $b8         ;09b2 SUBW
              608f 009b  ld   $9b         ;09b2 'Radix'
              6090 0035  ld   $35         ;09b4 BCC
              6091 0050  ld   $50         ;09b5 LT
              6092 00bb  ld   $bb
              6093 002b  ld   $2b         ;09b7 STW
              6094 0054  ld   $54         ;09b7 'Value'
              6095 0093  ld   $93         ;09b9 INC
              6096 0032  ld   $32         ;09b9 'Char'
              6097 0090  ld   $90         ;09bb BRA
              6098 00b0  ld   $b0
              6099 00cf  ld   $cf         ;09bd CALL
              609a 003e  ld   $3e         ;09bd 'PrintChar'
              609b 0059  ld   $59         ;09bf LDI
              609c 0030  ld   $30
              609d 002b  ld   $2b         ;09c1 STW
              609e 0032  ld   $32         ;09c1 'Char'
              609f 0090  ld   $90         ;09c3 BRA
              60a0 00c5  ld   $c5
              60a1 00cf  ld   $cf         ;09c5 CALL
              60a2 003e  ld   $3e         ;09c5 'PrintChar'
              60a3 0063  ld   $63         ;09c7 POP
              60a4 00ff  ld   $ff         ;09c8 RET
              60a5 002b  ld   $2b         ;09c9 STW
              60a6 009d  ld   $9d         ;09c9 'DrawNextDigit'
              60a7 00cd  ld   $cd         ;09cb DEF
              60a8 00ef  ld   $ef
              60a9 0075  ld   $75         ;09cd PUSH
              60aa 0059  ld   $59         ;09ce LDI
              60ab 0020  ld   $20
              60ac 002b  ld   $2b         ;09d0 STW
              60ad 0032  ld   $32         ;09d0 'Char'
              60ae 0011  ld   $11         ;09d2 LDWI
              60af 00e8  ld   $e8
              60b0 0003  ld   $03
              60b1 002b  ld   $2b         ;09d5 STW
              60b2 009b  ld   $9b         ;09d5 'Radix'
              60b3 00cf  ld   $cf         ;09d7 CALL
              60b4 009d  ld   $9d         ;09d7 'DrawNextDigit'
              60b5 0059  ld   $59         ;09d9 LDI
              60b6 0064  ld   $64
              60b7 002b  ld   $2b         ;09db STW
              60b8 009b  ld   $9b         ;09db 'Radix'
              60b9 00cf  ld   $cf         ;09dd CALL
              60ba 009d  ld   $9d         ;09dd 'DrawNextDigit'
              60bb 0059  ld   $59         ;09df LDI
              60bc 000a  ld   $0a
              60bd 002b  ld   $2b         ;09e1 STW
              60be 009b  ld   $9b         ;09e1 'Radix'
              60bf 00cf  ld   $cf         ;09e3 CALL
              60c0 009d  ld   $9d         ;09e3 'DrawNextDigit'
              60c1 0059  ld   $59         ;09e5 LDI
              60c2 0030  ld   $30
              60c3 002b  ld   $2b         ;09e7 STW
              60c4 0032  ld   $32         ;09e7 'Char'
              60c5 0059  ld   $59         ;09e9 LDI
              60c6 0001  ld   $01
              60c7 002b  ld   $2b         ;09eb STW
              60c8 009b  ld   $9b         ;09eb 'Radix'
              60c9 00cf  ld   $cf         ;09ed CALL
              60ca 009d  ld   $9d         ;09ed 'DrawNextDigit'
              60cb 0063  ld   $63         ;09ef POP
              60cc 00ff  ld   $ff         ;09f0 RET
              60cd 002b  ld   $2b         ;09f1 STW
              60ce 0099  ld   $99         ;09f1 'DrawNumber4'
              60cf 0093  ld   $93         ;09f3 INC
              60d0 001b  ld   $1b         ;09f3 '_vLR'+1
              60d1 00ff  ld   $ff         ;09f5 RET
              60d2 000a  ld   $0a         ;| RAM segment address (high byte first)
              60d3 00a0  ld   $a0         ;|
              60d4 0056  ld   $56         ;| Length (1..256)
              60d5 00cd  ld   $cd         ;0aa0 DEF
              60d6 00ba  ld   $ba
              60d7 0075  ld   $75         ;0aa2 PUSH
              60d8 0011  ld   $11         ;0aa3 LDWI
              60d9 0074  ld   $74
              60da 0008  ld   $08
              60db 002b  ld   $2b         ;0aa6 STW
              60dc 003c  ld   $3c         ;0aa6 'Pos'
              60dd 0059  ld   $59         ;0aa8 LDI
              60de 0000  ld   $00
              60df 002b  ld   $2b         ;0aaa STW
              60e0 0038  ld   $38         ;0aaa 'BgColor'
              60e1 00cd  ld   $cd         ;0aac DEF
              60e2 00b0  ld   $b0
              60e3 0048  ld   $48         ;0aae 'H'
              60e4 0049  ld   $49         ;0aaf 'I'
              60e5 0020  ld   $20         ;0ab0 ' '
              60e6 0000  ld   $00         ;0ab1 0
              60e7 00cf  ld   $cf         ;0ab2 CALL
              60e8 0042  ld   $42         ;0ab2 'PrintText'
              60e9 0021  ld   $21         ;0ab4 LDW
              60ea 0030  ld   $30         ;0ab4 'HighScore'
              60eb 002b  ld   $2b         ;0ab6 STW
              60ec 0054  ld   $54         ;0ab6 'Value'
              60ed 00cf  ld   $cf         ;0ab8 CALL
              60ee 0099  ld   $99         ;0ab8 'DrawNumber4'
              60ef 0063  ld   $63         ;0aba POP
              60f0 00ff  ld   $ff         ;0abb RET
              60f1 002b  ld   $2b         ;0abc STW
              60f2 0064  ld   $64         ;0abc 'DrawHighScore'
              60f3 00cd  ld   $cd         ;0abe DEF
              60f4 00ef  ld   $ef
              60f5 002b  ld   $2b         ;0ac0 STW
              60f6 0034  ld   $34         ;0ac0 'i'
              60f7 0088  ld   $88         ;0ac2 ORI
              60f8 00ff  ld   $ff
              60f9 008c  ld   $8c         ;0ac4 XORI
              60fa 00ff  ld   $ff
              60fb fe00  bra  ac          ;+-----------------------------------+
              60fc fcfd  bra  $60fd       ;|                                   |
              60fd 1418  ld   $18,y       ;| Trampoline for page $6000 lookups |
              60fe e006  jmp  y,$06       ;|                                   |
              60ff c218  st   [$18]       ;+-----------------------------------+
              6100 0088  ld   $88         ;0ac6 ORI
              6101 00fa  ld   $fa
              6102 002b  ld   $2b         ;0ac8 STW
              6103 0070  ld   $70         ;0ac8 'p'
              6104 001a  ld   $1a         ;0aca LD
              6105 0034  ld   $34         ;0aca 'i'
              6106 002b  ld   $2b         ;0acc STW
              6107 0034  ld   $34         ;0acc 'i'
              6108 0059  ld   $59         ;0ace LDI
              6109 0000  ld   $00
              610a 00f0  ld   $f0         ;0ad0 POKE
              610b 0070  ld   $70         ;0ad0 'p'
              610c 0093  ld   $93         ;0ad2 INC
              610d 0070  ld   $70         ;0ad2 'p'
              610e 0059  ld   $59         ;0ad4 LDI
              610f 0001  ld   $01
              6110 00f0  ld   $f0         ;0ad6 POKE
              6111 0070  ld   $70         ;0ad6 'p'
              6112 0093  ld   $93         ;0ad8 INC
              6113 0070  ld   $70         ;0ad8 'p'
              6114 0011  ld   $11         ;0ada LDWI
              6115 0000  ld   $00
              6116 0009  ld   $09
              6117 0099  ld   $99         ;0add ADDW
              6118 0034  ld   $34         ;0add 'i'
              6119 007f  ld   $7f         ;0adf LUP
              611a 0000  ld   $00
              611b 00f0  ld   $f0         ;0ae1 POKE
              611c 0070  ld   $70         ;0ae1 'p'
              611d 0093  ld   $93         ;0ae3 INC
              611e 0070  ld   $70         ;0ae3 'p'
              611f 0011  ld   $11         ;0ae5 LDWI
              6120 0000  ld   $00
              6121 0009  ld   $09
              6122 0099  ld   $99         ;0ae8 ADDW
              6123 0034  ld   $34         ;0ae8 'i'
              6124 007f  ld   $7f         ;0aea LUP
              6125 0001  ld   $01
              6126 00f0  ld   $f0         ;0aec POKE
              6127 0070  ld   $70         ;0aec 'p'
              6128 0093  ld   $93         ;0aee INC
              6129 0070  ld   $70         ;0aee 'p'
              612a 00ff  ld   $ff         ;0af0 RET
              612b 002b  ld   $2b         ;0af1 STW
              612c 009f  ld   $9f         ;0af1 'SetupChannel'
              612d 0093  ld   $93         ;0af3 INC
              612e 001b  ld   $1b         ;0af3 '_vLR'+1
              612f 00ff  ld   $ff         ;0af5 RET
              6130 000b  ld   $0b         ;| RAM segment address (high byte first)
              6131 00a0  ld   $a0         ;|
              6132 004c  ld   $4c         ;| Length (1..256)
              6133 00cd  ld   $cd         ;0ba0 DEF
              6134 00c2  ld   $c2
              6135 0075  ld   $75         ;0ba2 PUSH
              6136 00e9  ld   $e9         ;0ba3 LSLW
              6137 002b  ld   $2b         ;0ba4 STW
              6138 006a  ld   $6a         ;0ba4 'tmp'
              6139 0011  ld   $11         ;0ba6 LDWI
              613a 0000  ld   $00
              613b 0001  ld   $01
              613c 00fa  ld   $fa         ;0ba9 ORW
              613d 006a  ld   $6a         ;0ba9 'tmp'
              613e 00cf  ld   $cf         ;0bab CALL
              613f 009f  ld   $9f         ;0bab 'SetupChannel'
              6140 0011  ld   $11         ;0bad LDWI
              6141 0000  ld   $00
              6142 0002  ld   $02
              6143 00fa  ld   $fa         ;0bb0 ORW
              6144 006a  ld   $6a         ;0bb0 'tmp'
              6145 00cf  ld   $cf         ;0bb2 CALL
              6146 009f  ld   $9f         ;0bb2 'SetupChannel'
              6147 0011  ld   $11         ;0bb4 LDWI
              6148 0000  ld   $00
              6149 0003  ld   $03
              614a 00fa  ld   $fa         ;0bb7 ORW
              614b 006a  ld   $6a         ;0bb7 'tmp'
              614c 00cf  ld   $cf         ;0bb9 CALL
              614d 009f  ld   $9f         ;0bb9 'SetupChannel'
              614e 0011  ld   $11         ;0bbb LDWI
              614f 0000  ld   $00
              6150 0004  ld   $04
              6151 00fa  ld   $fa         ;0bbe ORW
              6152 006a  ld   $6a         ;0bbe 'tmp'
              6153 00cf  ld   $cf         ;0bc0 CALL
              6154 009f  ld   $9f         ;0bc0 'SetupChannel'
              6155 0063  ld   $63         ;0bc2 POP
              6156 00ff  ld   $ff         ;0bc3 RET
              6157 002b  ld   $2b         ;0bc4 STW
              6158 007c  ld   $7c         ;0bc4 'SetNote'
              6159 00cd  ld   $cd         ;0bc6 DEF
              615a 00e5  ld   $e5
              615b 0075  ld   $75         ;0bc8 PUSH
              615c 0059  ld   $59         ;0bc9 LDI
              615d 0049  ld   $49
              615e 002b  ld   $2b         ;0bcb STW
              615f 00a1  ld   $a1         ;0bcb 'j'
              6160 0021  ld   $21         ;0bcd LDW
              6161 00a1  ld   $a1         ;0bcd 'j'
              6162 00cf  ld   $cf         ;0bcf CALL
              6163 007c  ld   $7c         ;0bcf 'SetNote'
              6164 0059  ld   $59         ;0bd1 LDI
              6165 0005  ld   $05
              6166 005e  ld   $5e         ;0bd3 ST
              6167 002c  ld   $2c
              6168 001a  ld   $1a         ;0bd5 LD
              6169 002c  ld   $2c
              616a 0035  ld   $35         ;0bd7 BCC
              616b 0072  ld   $72         ;0bd8 NE
              616c 00d3  ld   $d3
              616d 0021  ld   $21         ;0bda LDW
              616e 00a1  ld   $a1         ;0bda 'j'
              616f 00e6  ld   $e6         ;0bdc SUBI
              6170 0001  ld   $01
              6171 002b  ld   $2b         ;0bde STW
              6172 00a1  ld   $a1         ;0bde 'j'
              6173 008c  ld   $8c         ;0be0 XORI
              6174 0030  ld   $30
              6175 0035  ld   $35         ;0be2 BCC
              6176 0072  ld   $72         ;0be3 NE
              6177 00cb  ld   $cb
              6178 0063  ld   $63         ;0be5 POP
              6179 00ff  ld   $ff         ;0be6 RET
              617a 002b  ld   $2b         ;0be7 STW
              617b 0066  ld   $66         ;0be7 'PlayGameOverSound'
              617c 0093  ld   $93         ;0be9 INC
              617d 001b  ld   $1b         ;0be9 '_vLR'+1
              617e 00ff  ld   $ff         ;0beb RET
              617f 000c  ld   $0c         ;| RAM segment address (high byte first)
              6180 00a0  ld   $a0         ;|
              6181 0045  ld   $45         ;| Length (1..256)
              6182 00cd  ld   $cd         ;0ca0 DEF
              6183 00de  ld   $de
              6184 0075  ld   $75         ;0ca2 PUSH
              6185 0011  ld   $11         ;0ca3 LDWI
              6186 0033  ld   $33
              6187 0045  ld   $45
              6188 002b  ld   $2b         ;0ca6 STW
              6189 0070  ld   $70         ;0ca6 'p'
              618a 002b  ld   $2b         ;0ca8 STW
              618b 003c  ld   $3c         ;0ca8 'Pos'
              618c 0059  ld   $59         ;0caa LDI
              618d 0018  ld   $18
              618e 002b  ld   $2b         ;0cac STW
              618f 003a  ld   $3a         ;0cac 'Color'
              6190 0021  ld   $21         ;0cae LDW
              6191 00a3  ld   $a3         ;0cae 'Messages'
              6192 00cf  ld   $cf         ;0cb0 CALL
              6193 0042  ld   $42         ;0cb0 'PrintText'
              6194 0059  ld   $59         ;0cb2 LDI
              6195 002d  ld   $2d
              6196 00cf  ld   $cf         ;0cb4 CALL
              6197 0050  ld   $50         ;0cb4 'Wait'
              6198 0021  ld   $21         ;0cb6 LDW
              6199 0070  ld   $70         ;0cb6 'p'
              619a 002b  ld   $2b         ;0cb8 STW
              619b 003c  ld   $3c         ;0cb8 'Pos'
              619c 0059  ld   $59         ;0cba LDI
              619d 003e  ld   $3e
              619e 002b  ld   $2b         ;0cbc STW
              619f 003a  ld   $3a         ;0cbc 'Color'
              61a0 0021  ld   $21         ;0cbe LDW
              61a1 0040  ld   $40         ;0cbe 'Text'
              61a2 00cf  ld   $cf         ;0cc0 CALL
              61a3 0042  ld   $42         ;0cc0 'PrintText'
              61a4 0059  ld   $59         ;0cc2 LDI
              61a5 002d  ld   $2d
              61a6 00cf  ld   $cf         ;0cc4 CALL
              61a7 0050  ld   $50         ;0cc4 'Wait'
              61a8 0021  ld   $21         ;0cc6 LDW
              61a9 0070  ld   $70         ;0cc6 'p'
              61aa 002b  ld   $2b         ;0cc8 STW
              61ab 003c  ld   $3c         ;0cc8 'Pos'
              61ac 0059  ld   $59         ;0cca LDI
              61ad 000f  ld   $0f
              61ae 002b  ld   $2b         ;0ccc STW
              61af 003a  ld   $3a         ;0ccc 'Color'
              61b0 0021  ld   $21         ;0cce LDW
              61b1 0040  ld   $40         ;0cce 'Text'
              61b2 00cf  ld   $cf         ;0cd0 CALL
              61b3 0042  ld   $42         ;0cd0 'PrintText'
              61b4 0059  ld   $59         ;0cd2 LDI
              61b5 002d  ld   $2d
              61b6 00cf  ld   $cf         ;0cd4 CALL
              61b7 0050  ld   $50         ;0cd4 'Wait'
              61b8 0021  ld   $21         ;0cd6 LDW
              61b9 0070  ld   $70         ;0cd6 'p'
              61ba 002b  ld   $2b         ;0cd8 STW
              61bb 003c  ld   $3c         ;0cd8 'Pos'
              61bc 0021  ld   $21         ;0cda LDW
              61bd 0040  ld   $40         ;0cda 'Text'
              61be 00cf  ld   $cf         ;0cdc CALL
              61bf 0042  ld   $42         ;0cdc 'PrintText'
              61c0 0063  ld   $63         ;0cde POP
              61c1 00ff  ld   $ff         ;0cdf RET
              61c2 002b  ld   $2b         ;0ce0 STW
              61c3 0095  ld   $95         ;0ce0 'GetReady'
              61c4 0093  ld   $93         ;0ce2 INC
              61c5 001b  ld   $1b         ;0ce2 '_vLR'+1
              61c6 00ff  ld   $ff         ;0ce4 RET
              61c7 000d  ld   $0d         ;| RAM segment address (high byte first)
              61c8 00a0  ld   $a0         ;|
              61c9 0046  ld   $46         ;| Length (1..256)
              61ca 00cd  ld   $cd         ;0da0 DEF
              61cb 00df  ld   $df
              61cc 0021  ld   $21         ;0da2 LDW
              61cd 0074  ld   $74         ;0da2 'stepU'
              61ce 002b  ld   $2b         ;0da4 STW
              61cf 006a  ld   $6a         ;0da4 'tmp'
              61d0 001a  ld   $1a         ;0da6 LD
              61d1 0011  ld   $11
              61d2 008c  ld   $8c         ;0da8 XORI
              61d3 00fe  ld   $fe
              61d4 0035  ld   $35         ;0daa BCC
              61d5 0072  ld   $72         ;0dab NE
              61d6 00af  ld   $af
              61d7 0059  ld   $59         ;0dad LDI
              61d8 0002  ld   $02
              61d9 002b  ld   $2b         ;0daf STW
              61da 006a  ld   $6a         ;0daf 'tmp'
              61db 001a  ld   $1a         ;0db1 LD
              61dc 0011  ld   $11
              61dd 008c  ld   $8c         ;0db3 XORI
              61de 00fd  ld   $fd
              61df 0035  ld   $35         ;0db5 BCC
              61e0 0072  ld   $72         ;0db6 NE
              61e1 00bb  ld   $bb
              61e2 0011  ld   $11         ;0db8 LDWI
              61e3 00fe  ld   $fe
              61e4 00ff  ld   $ff
              61e5 002b  ld   $2b         ;0dbb STW
              61e6 006a  ld   $6a         ;0dbb 'tmp'
              61e7 001a  ld   $1a         ;0dbd LD
              61e8 0011  ld   $11
              61e9 008c  ld   $8c         ;0dbf XORI
              61ea 00fb  ld   $fb
              61eb 0035  ld   $35         ;0dc1 BCC
              61ec 0072  ld   $72         ;0dc2 NE
              61ed 00c7  ld   $c7
              61ee 0011  ld   $11         ;0dc4 LDWI
              61ef 0000  ld   $00
              61f0 0002  ld   $02
              61f1 002b  ld   $2b         ;0dc7 STW
              61f2 006a  ld   $6a         ;0dc7 'tmp'
              61f3 001a  ld   $1a         ;0dc9 LD
              61f4 0011  ld   $11
              61f5 008c  ld   $8c         ;0dcb XORI
              61f6 00f7  ld   $f7
              61f7 0035  ld   $35         ;0dcd BCC
              61f8 0072  ld   $72         ;0dce NE
              61f9 00d3  ld   $d3
              61fa 0011  ld   $11         ;0dd0 LDWI
              61fb fe00  bra  ac          ;+-----------------------------------+
              61fc fcfd  bra  $61fd       ;|                                   |
              61fd 1418  ld   $18,y       ;| Trampoline for page $6100 lookups |
              61fe e006  jmp  y,$06       ;|                                   |
              61ff c218  st   [$18]       ;+-----------------------------------+
              6200 0000  ld   $00
              6201 00fe  ld   $fe
              6202 002b  ld   $2b         ;0dd3 STW
              6203 006a  ld   $6a         ;0dd3 'tmp'
              6204 0021  ld   $21         ;0dd5 LDW
              6205 006a  ld   $6a         ;0dd5 'tmp'
              6206 0099  ld   $99         ;0dd7 ADDW
              6207 0074  ld   $74         ;0dd7 'stepU'
              6208 0035  ld   $35         ;0dd9 BCC
              6209 003f  ld   $3f         ;0dda EQ
              620a 00de  ld   $de
              620b 0021  ld   $21         ;0ddc LDW
              620c 006a  ld   $6a         ;0ddc 'tmp'
              620d 002b  ld   $2b         ;0dde STW
              620e 0074  ld   $74         ;0dde 'stepU'
              620f 00ff  ld   $ff         ;0de0 RET
              6210 002b  ld   $2b         ;0de1 STW
              6211 0062  ld   $62         ;0de1 'PlayerControl'
              6212 0093  ld   $93         ;0de3 INC
              6213 001b  ld   $1b         ;0de3 '_vLR'+1
              6214 00ff  ld   $ff         ;0de5 RET
              6215 000e  ld   $0e         ;| RAM segment address (high byte first)
              6216 00a0  ld   $a0         ;|
              6217 004d  ld   $4d         ;| Length (1..256)
              6218 00cd  ld   $cd         ;0ea0 DEF
              6219 00cb  ld   $cb
              621a 0020  ld   $20         ;0ea2 ' '
              621b 0045  ld   $45         ;0ea3 'E'
              621c 0041  ld   $41         ;0ea4 'A'
              621d 0054  ld   $54         ;0ea5 'T'
              621e 0020  ld   $20         ;0ea6 ' '
              621f 0046  ld   $46         ;0ea7 'F'
              6220 004f  ld   $4f         ;0ea8 'O'
              6221 004f  ld   $4f         ;0ea9 'O'
              6222 0044  ld   $44         ;0eaa 'D'
              6223 0000  ld   $00         ;0eab 0
              6224 004e  ld   $4e         ;0eac 'N'
              6225 004f  ld   $4f         ;0ead 'O'
              6226 0054  ld   $54         ;0eae 'T'
              6227 0020  ld   $20         ;0eaf ' '
              6228 0050  ld   $50         ;0eb0 'P'
              6229 004f  ld   $4f         ;0eb1 'O'
              622a 0049  ld   $49         ;0eb2 'I'
              622b 0053  ld   $53         ;0eb3 'S'
              622c 004f  ld   $4f         ;0eb4 'O'
              622d 004e  ld   $4e         ;0eb5 'N'
              622e 0000  ld   $00         ;0eb6 0
              622f 0047  ld   $47         ;0eb7 'G'
              6230 0045  ld   $45         ;0eb8 'E'
              6231 0054  ld   $54         ;0eb9 'T'
              6232 0020  ld   $20         ;0eba ' '
              6233 0052  ld   $52         ;0ebb 'R'
              6234 0045  ld   $45         ;0ebc 'E'
              6235 0041  ld   $41         ;0ebd 'A'
              6236 0044  ld   $44         ;0ebe 'D'
              6237 0059  ld   $59         ;0ebf 'Y'
              6238 0021  ld   $21         ;0ec0 '!'
              6239 0000  ld   $00         ;0ec1 0
              623a 0020  ld   $20         ;0ec2 ' '
              623b 0020  ld   $20         ;0ec3 ' '
              623c 0020  ld   $20         ;0ec4 ' '
              623d 0020  ld   $20         ;0ec5 ' '
              623e 0020  ld   $20         ;0ec6 ' '
              623f 0020  ld   $20         ;0ec7 ' '
              6240 0020  ld   $20         ;0ec8 ' '
              6241 0020  ld   $20         ;0ec9 ' '
              6242 0020  ld   $20         ;0eca ' '
              6243 0020  ld   $20         ;0ecb ' '
              6244 0000  ld   $00         ;0ecc 0
              6245 002b  ld   $2b         ;0ecd STW
              6246 00a3  ld   $a3         ;0ecd 'Messages'
              6247 00cf  ld   $cf         ;0ecf CALL
              6248 006e  ld   $6e         ;0ecf 'Intro'
              6249 0059  ld   $59         ;0ed1 LDI
              624a 0049  ld   $49
              624b 00cf  ld   $cf         ;0ed3 CALL
              624c 007c  ld   $7c         ;0ed3 'SetNote'
              624d 00cf  ld   $cf         ;0ed5 CALL
              624e 008f  ld   $8f         ;0ed5 'SetupGame'
              624f 00cf  ld   $cf         ;0ed7 CALL
              6250 008d  ld   $8d         ;0ed7 'RunGame'
              6251 0059  ld   $59         ;0ed9 LDI
              6252 0078  ld   $78
              6253 005e  ld   $5e         ;0edb ST
              6254 002c  ld   $2c
              6255 0059  ld   $59         ;0edd LDI
              6256 0007  ld   $07
              6257 002b  ld   $2b         ;0edf STW
              6258 003a  ld   $3a         ;0edf 'Color'
              6259 0021  ld   $21         ;0ee1 LDW
              625a 0058  ld   $58         ;0ee1 'Head'
              625b 00cf  ld   $cf         ;0ee3 CALL
              625c 005a  ld   $5a         ;0ee3 'DrawBlock'
              625d 00cf  ld   $cf         ;0ee5 CALL
              625e 0068  ld   $68         ;0ee5 'GameOver'
              625f 0059  ld   $59         ;0ee7 LDI
              6260 003c  ld   $3c
              6261 00cf  ld   $cf         ;0ee9 CALL
              6262 0050  ld   $50         ;0ee9 'Wait'
              6263 0090  ld   $90         ;0eeb BRA
              6264 00d3  ld   $d3
              6265 0000  ld   $00         ;End of Apps/Snake/Snake_v3.gcl, size 1834
                                          ;+-----------------------------------+
                                          ;| Apps/TinyBASIC/TinyBASIC_v4.gcl   |
                                          ;+-----------------------------------+
              6266 dc53  st   $53,[y,x++] ;'S'
              6267 dc6e  st   $6e,[y,x++] ;'n'
              6268 dc61  st   $61,[y,x++] ;'a'
              6269 dc6b  st   $6b,[y,x++] ;'k'
              626a dc65  st   $65,[y,x++] ;'e'
              626b dc00  st   $00,[y,x++] ;'\x00'
              626c dc00  st   $00,[y,x++] ;'\x00'
              626d dc00  st   $00,[y,x++] ;'\x00'
              626e 003c  ld   $3c
              626f c218  st   [$18]
              6270 005b  ld   $5b
              6271 14dd  ld   $dd,y
              6272 e06f  jmp  y,$6f
              6273 c219  st   [$19]
TinyBASIC:    6274 0002  ld   $02         ;| RAM segment address (high byte first)
              6275 0000  ld   $00         ;|
              6276 00f8  ld   $f8         ;| Length (1..256)
              6277 0011  ld   $11         ;0200 LDWI
              6278 00df  ld   $df
              6279 0001  ld   $01
              627a 00f6  ld   $f6         ;0203 DEEK
              627b 002b  ld   $2b         ;0204 STW
              627c 0030  ld   $30         ;0204 'Pos'
              627d 00cd  ld   $cd         ;0206 DEF
              627e 00c3  ld   $c3
              627f 0075  ld   $75         ;0208 PUSH
              6280 00cf  ld   $cf         ;0209 CALL
              6281 0032  ld   $32         ;0209 'Number'
              6282 0035  ld   $35         ;020b BCC
              6283 0050  ld   $50         ;020c LT
              6284 0010  ld   $10
              6285 00cf  ld   $cf         ;020e CALL
              6286 0034  ld   $34         ;020e 'Spaces'
              6287 0063  ld   $63         ;0210 POP
              6288 00ff  ld   $ff         ;0211 RET
              6289 0021  ld   $21         ;0212 LDW
              628a 0036  ld   $36         ;0212 'Active'
              628b 00ad  ld   $ad         ;0214 PEEK
              628c 008c  ld   $8c         ;0215 XORI
              628d 0024  ld   $24
              628e 0035  ld   $35         ;0217 BCC
              628f 0072  ld   $72         ;0218 NE
              6290 0021  ld   $21
              6291 0011  ld   $11         ;021a LDWI
              6292 00ce  ld   $ce
              6293 0005  ld   $05
              6294 00cf  ld   $cf         ;021d CALL
              6295 0018  ld   $18         ;021d vAC
              6296 00cf  ld   $cf         ;021f CALL
              6297 0034  ld   $34         ;021f 'Spaces'
              6298 0063  ld   $63         ;0221 POP
              6299 00ff  ld   $ff         ;0222 RET
              629a 00cf  ld   $cf         ;0223 CALL
              629b 0038  ld   $38         ;0223 'Keyword'
              629c 0028  ld   $28         ;0225 '('
              629d 0000  ld   $00         ;0226 0
              629e 0035  ld   $35         ;0227 BCC
              629f 003f  ld   $3f         ;0228 EQ
              62a0 002c  ld   $2c
              62a1 00cf  ld   $cf         ;022a CALL
              62a2 003a  ld   $3a         ;022a 'Expression'
              62a3 0090  ld   $90         ;022c BRA
              62a4 00b8  ld   $b8
              62a5 00cf  ld   $cf         ;022e CALL
              62a6 0038  ld   $38         ;022e 'Keyword'
              62a7 0070  ld   $70         ;0230 'p'
              62a8 0065  ld   $65         ;0231 'e'
              62a9 0065  ld   $65         ;0232 'e'
              62aa 006b  ld   $6b         ;0233 'k'
              62ab 0028  ld   $28         ;0234 '('
              62ac 0000  ld   $00         ;0235 0
              62ad 0035  ld   $35         ;0236 BCC
              62ae 003f  ld   $3f         ;0237 EQ
              62af 003e  ld   $3e
              62b0 00cf  ld   $cf         ;0239 CALL
              62b1 003a  ld   $3a         ;0239 'Expression'
              62b2 00ad  ld   $ad         ;023b PEEK
              62b3 002b  ld   $2b         ;023c STW
              62b4 003c  ld   $3c         ;023c 'Value'
              62b5 0090  ld   $90         ;023e BRA
              62b6 00b8  ld   $b8
              62b7 00cf  ld   $cf         ;0240 CALL
              62b8 0038  ld   $38         ;0240 'Keyword'
              62b9 0072  ld   $72         ;0242 'r'
              62ba 006e  ld   $6e         ;0243 'n'
              62bb 0064  ld   $64         ;0244 'd'
              62bc 0028  ld   $28         ;0245 '('
              62bd 0000  ld   $00         ;0246 0
              62be 0035  ld   $35         ;0247 BCC
              62bf 003f  ld   $3f         ;0248 EQ
              62c0 005c  ld   $5c
              62c1 00cf  ld   $cf         ;024a CALL
              62c2 003a  ld   $3a         ;024a 'Expression'
              62c3 0011  ld   $11         ;024c LDWI
              62c4 00a7  ld   $a7
              62c5 0004  ld   $04
              62c6 002b  ld   $2b         ;024f STW
              62c7 0022  ld   $22         ;024f '_sysFn'
              62c8 00b4  ld   $b4         ;0251 SYS
              62c9 00fe  ld   $fe
              62ca 0035  ld   $35         ;0253 BCC
              62cb 0050  ld   $50         ;0254 LT
              62cc 004f  ld   $4f
              62cd 00cf  ld   $cf         ;0256 CALL
              62ce 003e  ld   $3e         ;0256 'Divide'
              62cf 0021  ld   $21         ;0258 LDW
              62d0 0040  ld   $40         ;0258 'i'
              62d1 002b  ld   $2b         ;025a STW
              62d2 003c  ld   $3c         ;025a 'Value'
              62d3 0090  ld   $90         ;025c BRA
              62d4 00b8  ld   $b8
              62d5 00cf  ld   $cf         ;025e CALL
              62d6 0038  ld   $38         ;025e 'Keyword'
              62d7 0075  ld   $75         ;0260 'u'
              62d8 0073  ld   $73         ;0261 's'
              62d9 0072  ld   $72         ;0262 'r'
              62da 0028  ld   $28         ;0263 '('
              62db 0000  ld   $00         ;0264 0
              62dc 0035  ld   $35         ;0265 BCC
              62dd 003f  ld   $3f         ;0266 EQ
              62de 006e  ld   $6e
              62df 00cf  ld   $cf         ;0268 CALL
              62e0 003a  ld   $3a         ;0268 'Expression'
              62e1 00cf  ld   $cf         ;026a CALL
              62e2 003c  ld   $3c         ;026a 'Value'
              62e3 002b  ld   $2b         ;026c STW
              62e4 003c  ld   $3c         ;026c 'Value'
              62e5 0090  ld   $90         ;026e BRA
              62e6 00b8  ld   $b8
              62e7 00cf  ld   $cf         ;0270 CALL
              62e8 0042  ld   $42         ;0270 'Variable'
              62e9 002b  ld   $2b         ;0272 STW
              62ea 0044  ld   $44         ;0272 'k'
              62eb 00cf  ld   $cf         ;0274 CALL
              62ec 0034  ld   $34         ;0274 'Spaces'
              62ed 00cf  ld   $cf         ;0276 CALL
              62ee 0038  ld   $38         ;0276 'Keyword'
              62ef 0028  ld   $28         ;0278 '('
              62f0 0000  ld   $00         ;0279 0
              62f1 0035  ld   $35         ;027a BCC
              62f2 003f  ld   $3f         ;027b EQ
              62f3 00b1  ld   $b1
              62f4 0075  ld   $75         ;027d PUSH
              62f5 0021  ld   $21         ;027e LDW
              62f6 0044  ld   $44         ;027e 'k'
              62f7 00ec  ld   $ec         ;0280 STLW
              62f8 0000  ld   $00
              62f9 00cf  ld   $cf         ;0282 CALL
              62fa 003a  ld   $3a         ;0282 'Expression'
              62fb fe00  bra  ac          ;+-----------------------------------+
              62fc fcfd  bra  $62fd       ;|                                   |
              62fd 1418  ld   $18,y       ;| Trampoline for page $6200 lookups |
              62fe e006  jmp  y,$06       ;|                                   |
              62ff c218  st   [$18]       ;+-----------------------------------+
              6300 0035  ld   $35         ;0284 BCC
              6301 0053  ld   $53         ;0285 GE
              6302 0087  ld   $87
              6303 00cf  ld   $cf         ;0287 CALL
              6304 0046  ld   $46         ;0287 'ValueError'
              6305 00ee  ld   $ee         ;0289 LDLW
              6306 0000  ld   $00
              6307 002b  ld   $2b         ;028b STW
              6308 0044  ld   $44         ;028b 'k'
              6309 0063  ld   $63         ;028d POP
              630a 001a  ld   $1a         ;028e LD
              630b 0045  ld   $45         ;028e 'k'+1
              630c 00b8  ld   $b8         ;0290 SUBW
              630d 003c  ld   $3c         ;0290 'Value'
              630e 00e6  ld   $e6         ;0292 SUBI
              630f 0002  ld   $02
              6310 005e  ld   $5e         ;0294 ST
              6311 0045  ld   $45         ;0294 'k'+1
              6312 0021  ld   $21         ;0296 LDW
              6313 0048  ld   $48         ;0296 'End'
              6314 00fc  ld   $fc         ;0298 XORW
              6315 0044  ld   $44         ;0298 'k'
              6316 0035  ld   $35         ;029a BCC
              6317 0053  ld   $53         ;029b GE
              6318 009f  ld   $9f
              6319 0021  ld   $21         ;029d LDW
              631a 0048  ld   $48         ;029d 'End'
              631b 0090  ld   $90         ;029f BRA
              631c 00a3  ld   $a3
              631d 0021  ld   $21         ;02a1 LDW
              631e 0044  ld   $44         ;02a1 'k'
              631f 00b8  ld   $b8         ;02a3 SUBW
              6320 0048  ld   $48         ;02a3 'End'
              6321 0035  ld   $35         ;02a5 BCC
              6322 0053  ld   $53         ;02a6 GE
              6323 00a8  ld   $a8
              6324 00cf  ld   $cf         ;02a8 CALL
              6325 0046  ld   $46         ;02a8 'ValueError'
              6326 00cf  ld   $cf         ;02aa CALL
              6327 0038  ld   $38         ;02aa 'Keyword'
              6328 0029  ld   $29         ;02ac ')'
              6329 0000  ld   $00         ;02ad 0
              632a 0035  ld   $35         ;02ae BCC
              632b 0072  ld   $72         ;02af NE
              632c 00b1  ld   $b1
              632d 00cf  ld   $cf         ;02b1 CALL
              632e 004a  ld   $4a         ;02b1 'SyntaxError'
              632f 0021  ld   $21         ;02b3 LDW
              6330 0044  ld   $44         ;02b3 'k'
              6331 00f6  ld   $f6         ;02b5 DEEK
              6332 002b  ld   $2b         ;02b6 STW
              6333 003c  ld   $3c         ;02b6 'Value'
              6334 0063  ld   $63         ;02b8 POP
              6335 00ff  ld   $ff         ;02b9 RET
              6336 00cf  ld   $cf         ;02ba CALL
              6337 0038  ld   $38         ;02ba 'Keyword'
              6338 0029  ld   $29         ;02bc ')'
              6339 0000  ld   $00         ;02bd 0
              633a 0035  ld   $35         ;02be BCC
              633b 0072  ld   $72         ;02bf NE
              633c 00c1  ld   $c1
              633d 00cf  ld   $cf         ;02c1 CALL
              633e 004a  ld   $4a         ;02c1 'SyntaxError'
              633f 0063  ld   $63         ;02c3 POP
              6340 00ff  ld   $ff         ;02c4 RET
              6341 002b  ld   $2b         ;02c5 STW
              6342 004c  ld   $4c         ;02c5 'Factor'
              6343 00cd  ld   $cd         ;02c7 DEF
              6344 00d9  ld   $d9
              6345 0021  ld   $21         ;02c9 LDW
              6346 001a  ld   $1a
              6347 002b  ld   $2b         ;02cb STW
              6348 004e  ld   $4e         ;02cb 'tmp'
              6349 0021  ld   $21         ;02cd LDW
              634a 004e  ld   $4e         ;02cd 'tmp'
              634b 00ad  ld   $ad         ;02cf PEEK
              634c 0093  ld   $93         ;02d0 INC
              634d 004e  ld   $4e         ;02d0 'tmp'
              634e 0035  ld   $35         ;02d2 BCC
              634f 003f  ld   $3f         ;02d3 EQ
              6350 00d7  ld   $d7
              6351 00cf  ld   $cf         ;02d5 CALL
              6352 0050  ld   $50         ;02d5 'PrintChar'
              6353 0090  ld   $90         ;02d7 BRA
              6354 00cb  ld   $cb
              6355 00cf  ld   $cf         ;02d9 CALL
              6356 004e  ld   $4e         ;02d9 'tmp'
              6357 002b  ld   $2b         ;02db STW
              6358 0052  ld   $52         ;02db 'PrintS'
              6359 00cd  ld   $cd         ;02dd DEF
              635a 00f1  ld   $f1
              635b 001a  ld   $1a         ;02df LD
              635c 000f  ld   $0f
              635d 008c  ld   $8c         ;02e1 XORI
              635e 0003  ld   $03
              635f 0035  ld   $35         ;02e3 BCC
              6360 0072  ld   $72         ;02e4 NE
              6361 00f0  ld   $f0
              6362 0021  ld   $21         ;02e6 LDW
              6363 0054  ld   $54         ;02e6 'PrintCharScreen'
              6364 002b  ld   $2b         ;02e8 STW
              6365 0050  ld   $50         ;02e8 'PrintChar'
              6366 00cf  ld   $cf         ;02ea CALL
              6367 0056  ld   $56         ;02ea 'Prompt'
              6368 0042  ld   $42         ;02ec 'B'
              6369 0072  ld   $72         ;02ed 'r'
              636a 0065  ld   $65         ;02ee 'e'
              636b 0061  ld   $61         ;02ef 'a'
              636c 006b  ld   $6b         ;02f0 'k'
              636d 0000  ld   $00         ;02f1 0
              636e 00ff  ld   $ff         ;02f2 RET
              636f 002b  ld   $2b         ;02f3 STW
              6370 0058  ld   $58         ;02f3 'TestBreak'
              6371 0093  ld   $93         ;02f5 INC
              6372 001b  ld   $1b
              6373 00ff  ld   $ff         ;02f7 RET
              6374 0003  ld   $03         ;| RAM segment address (high byte first)
              6375 0000  ld   $00         ;|
              6376 00f9  ld   $f9         ;| Length (1..256)
              6377 00cd  ld   $cd         ;0300 DEF
              6378 006e  ld   $6e
              6379 002b  ld   $2b         ;0302 STW
              637a 0044  ld   $44         ;0302 'k'
              637b 00e6  ld   $e6         ;0304 SUBI
              637c 0083  ld   $83
              637d 0035  ld   $35         ;0306 BCC
              637e 004d  ld   $4d         ;0307 GT
              637f 006d  ld   $6d
              6380 001a  ld   $1a         ;0309 LD
              6381 0031  ld   $31         ;0309 'Pos'+1
              6382 00e6  ld   $e6         ;030b SUBI
              6383 0078  ld   $78
              6384 0035  ld   $35         ;030d BCC
              6385 004d  ld   $4d         ;030e GT
              6386 006d  ld   $6d
              6387 001a  ld   $1a         ;0310 LD
              6388 0030  ld   $30         ;0310 'Pos'
              6389 00e6  ld   $e6         ;0312 SUBI
              638a 009a  ld   $9a
              638b 0035  ld   $35         ;0314 BCC
              638c 0056  ld   $56         ;0315 LE
              638d 0019  ld   $19
              638e 0075  ld   $75         ;0317 PUSH
              638f 00cf  ld   $cf         ;0318 CALL
              6390 005a  ld   $5a         ;0318 'Newline'
              6391 0063  ld   $63         ;031a POP
              6392 0021  ld   $21         ;031b LDW
              6393 0044  ld   $44         ;031b 'k'
              6394 00e6  ld   $e6         ;031d SUBI
              6395 0052  ld   $52
              6396 0035  ld   $35         ;031f BCC
              6397 0053  ld   $53         ;0320 GE
              6398 0029  ld   $29
              6399 00e3  ld   $e3         ;0322 ADDI
              639a 0032  ld   $32
              639b 002b  ld   $2b         ;0324 STW
              639c 0040  ld   $40         ;0324 'i'
              639d 0011  ld   $11         ;0326 LDWI
              639e 0000  ld   $00
              639f 0007  ld   $07
              63a0 0090  ld   $90         ;0329 BRA
              63a1 002e  ld   $2e
              63a2 002b  ld   $2b         ;032b STW
              63a3 0040  ld   $40         ;032b 'i'
              63a4 0011  ld   $11         ;032d LDWI
              63a5 0000  ld   $00
              63a6 0008  ld   $08
              63a7 002b  ld   $2b         ;0330 STW
              63a8 0044  ld   $44         ;0330 'k'
              63a9 0021  ld   $21         ;0332 LDW
              63aa 0040  ld   $40         ;0332 'i'
              63ab 0035  ld   $35         ;0334 BCC
              63ac 0050  ld   $50         ;0335 LT
              63ad 006d  ld   $6d
              63ae 00e9  ld   $e9         ;0337 LSLW
              63af 00e9  ld   $e9         ;0338 LSLW
              63b0 0099  ld   $99         ;0339 ADDW
              63b1 0040  ld   $40         ;0339 'i'
              63b2 0099  ld   $99         ;033b ADDW
              63b3 0044  ld   $44         ;033b 'k'
              63b4 002b  ld   $2b         ;033d STW
              63b5 0044  ld   $44         ;033d 'k'
              63b6 0011  ld   $11         ;033f LDWI
              63b7 00e1  ld   $e1
              63b8 0004  ld   $04
              63b9 002b  ld   $2b         ;0342 STW
              63ba 0022  ld   $22         ;0342 '_sysFn'
              63bb 0021  ld   $21         ;0344 LDW
              63bc 002a  ld   $2a         ;0344 '_sysArgs6'
              63bd 002b  ld   $2b         ;0346 STW
              63be 0024  ld   $24         ;0346 '_sysArgs0'
              63bf 0021  ld   $21         ;0348 LDW
              63c0 0030  ld   $30         ;0348 'Pos'
              63c1 002b  ld   $2b         ;034a STW
              63c2 0028  ld   $28
              63c3 00ec  ld   $ec         ;034c STLW
              63c4 00fe  ld   $fe
              63c5 00e3  ld   $e3         ;034e ADDI
              63c6 0006  ld   $06
              63c7 002b  ld   $2b         ;0350 STW
              63c8 0030  ld   $30         ;0350 'Pos'
              63c9 0059  ld   $59         ;0352 LDI
              63ca 0005  ld   $05
              63cb 002b  ld   $2b         ;0354 STW
              63cc 0040  ld   $40         ;0354 'i'
              63cd 0021  ld   $21         ;0356 LDW
              63ce 0044  ld   $44         ;0356 'k'
              63cf 007f  ld   $7f         ;0358 LUP
              63d0 0000  ld   $00
              63d1 005e  ld   $5e         ;035a ST
              63d2 0026  ld   $26
              63d3 00b4  ld   $b4         ;035c SYS
              63d4 00cc  ld   $cc
              63d5 0093  ld   $93         ;035e INC
              63d6 0044  ld   $44         ;035e 'k'
              63d7 0093  ld   $93         ;0360 INC
              63d8 0028  ld   $28
              63d9 0021  ld   $21         ;0362 LDW
              63da 0040  ld   $40         ;0362 'i'
              63db 00e6  ld   $e6         ;0364 SUBI
              63dc 0001  ld   $01
              63dd 0035  ld   $35         ;0366 BCC
              63de 004d  ld   $4d         ;0367 GT
              63df 0052  ld   $52
              63e0 005e  ld   $5e         ;0369 ST
              63e1 0026  ld   $26
              63e2 00b4  ld   $b4         ;036b SYS
              63e3 00cc  ld   $cc
              63e4 00ee  ld   $ee         ;036d LDLW
              63e5 00fe  ld   $fe
              63e6 00ff  ld   $ff         ;036f RET
              63e7 002b  ld   $2b         ;0370 STW
              63e8 0050  ld   $50         ;0370 'PrintChar'
              63e9 002b  ld   $2b         ;0372 STW
              63ea 0054  ld   $54         ;0372 'PrintCharScreen'
              63eb 00cd  ld   $cd         ;0374 DEF
              63ec 00f4  ld   $f4
              63ed 0075  ld   $75         ;0376 PUSH
              63ee 002b  ld   $2b         ;0377 STW
              63ef 004e  ld   $4e         ;0377 'tmp'
              63f0 0011  ld   $11         ;0379 LDWI
              63f1 0000  ld   $00
              63f2 000b  ld   $0b
              63f3 002b  ld   $2b         ;037c STW
              63f4 0022  ld   $22         ;037c '_sysFn'
              63f5 001a  ld   $1a         ;037e LD
              63f6 0021  ld   $21
              63f7 00e6  ld   $e6         ;0380 SUBI
              63f8 0038  ld   $38
              63f9 0035  ld   $35         ;0382 BCC
              63fa 0050  ld   $50         ;0383 LT
              63fb fe00  bra  ac          ;+-----------------------------------+
              63fc fcfd  bra  $63fd       ;|                                   |
              63fd 1418  ld   $18,y       ;| Trampoline for page $6300 lookups |
              63fe e006  jmp  y,$06       ;|                                   |
              63ff c218  st   [$18]       ;+-----------------------------------+
              6400 0087  ld   $87
              6401 00e6  ld   $e6         ;0385 SUBI
              6402 00ff  ld   $ff
              6403 00b4  ld   $b4         ;0387 SYS
              6404 00e7  ld   $e7
              6405 0011  ld   $11         ;0389 LDWI
              6406 00a0  ld   $a0
              6407 001b  ld   $1b
              6408 002b  ld   $2b         ;038c STW
              6409 0036  ld   $36         ;038c 'Active'
              640a 0021  ld   $21         ;038e LDW
              640b 004e  ld   $4e         ;038e 'tmp'
              640c 00f3  ld   $f3         ;0390 DOKE
              640d 0036  ld   $36         ;0390 'Active'
              640e 0059  ld   $59         ;0392 LDI
              640f 00a2  ld   $a2
              6410 005e  ld   $5e         ;0394 ST
              6411 0036  ld   $36         ;0394 'Active'
              6412 0059  ld   $59         ;0396 LDI
              6413 007f  ld   $7f
              6414 00cf  ld   $cf         ;0398 CALL
              6415 0050  ld   $50         ;0398 'PrintChar'
              6416 002b  ld   $2b         ;039a STW
              6417 0030  ld   $30         ;039a 'Pos'
              6418 001a  ld   $1a         ;039c LD
              6419 000f  ld   $0f
              641a 002b  ld   $2b         ;039e STW
              641b 004e  ld   $4e         ;039e 'tmp'
              641c 001a  ld   $1a         ;03a0 LD
              641d 000f  ld   $0f
              641e 00f0  ld   $f0         ;03a2 POKE
              641f 0036  ld   $36         ;03a2 'Active'
              6420 00fc  ld   $fc         ;03a4 XORW
              6421 004e  ld   $4e         ;03a4 'tmp'
              6422 0035  ld   $35         ;03a6 BCC
              6423 0072  ld   $72         ;03a7 NE
              6424 00ac  ld   $ac
              6425 0021  ld   $21         ;03a9 LDW
              6426 0036  ld   $36         ;03a9 'Active'
              6427 00ad  ld   $ad         ;03ab PEEK
              6428 0090  ld   $90         ;03ac BRA
              6429 009c  ld   $9c
              642a 0021  ld   $21         ;03ae LDW
              642b 0036  ld   $36         ;03ae 'Active'
              642c 00ad  ld   $ad         ;03b0 PEEK
              642d 008c  ld   $8c         ;03b1 XORI
              642e 000a  ld   $0a
              642f 0035  ld   $35         ;03b3 BCC
              6430 003f  ld   $3f         ;03b4 EQ
              6431 00ef  ld   $ef
              6432 008c  ld   $8c         ;03b6 XORI
              6433 0075  ld   $75
              6434 0035  ld   $35         ;03b8 BCC
              6435 0072  ld   $72         ;03b9 NE
              6436 00d0  ld   $d0
              6437 0059  ld   $59         ;03bb LDI
              6438 0020  ld   $20
              6439 00cf  ld   $cf         ;03bd CALL
              643a 0050  ld   $50         ;03bd 'PrintChar'
              643b 002b  ld   $2b         ;03bf STW
              643c 0030  ld   $30         ;03bf 'Pos'
              643d 001a  ld   $1a         ;03c1 LD
              643e 0030  ld   $30         ;03c1 'Pos'
              643f 00e6  ld   $e6         ;03c3 SUBI
              6440 0006  ld   $06
              6441 0035  ld   $35         ;03c5 BCC
              6442 0050  ld   $50         ;03c6 LT
              6443 00ce  ld   $ce
              6444 005e  ld   $5e         ;03c8 ST
              6445 0030  ld   $30         ;03c8 'Pos'
              6446 0021  ld   $21         ;03ca LDW
              6447 0036  ld   $36         ;03ca 'Active'
              6448 00e6  ld   $e6         ;03cc SUBI
              6449 0001  ld   $01
              644a 002b  ld   $2b         ;03ce STW
              644b 0036  ld   $36         ;03ce 'Active'
              644c 0090  ld   $90         ;03d0 BRA
              644d 0094  ld   $94
              644e 00e6  ld   $e6         ;03d2 SUBI
              644f 0060  ld   $60
              6450 0035  ld   $35         ;03d4 BCC
              6451 0053  ld   $53         ;03d5 GE
              6452 0094  ld   $94
              6453 001a  ld   $1a         ;03d7 LD
              6454 0030  ld   $30         ;03d7 'Pos'
              6455 00e6  ld   $e6         ;03d9 SUBI
              6456 0096  ld   $96
              6457 0035  ld   $35         ;03db BCC
              6458 0050  ld   $50         ;03dc LT
              6459 00e6  ld   $e6
              645a 0059  ld   $59         ;03de LDI
              645b 00a2  ld   $a2
              645c 005e  ld   $5e         ;03e0 ST
              645d 0036  ld   $36         ;03e0 'Active'
              645e 0059  ld   $59         ;03e2 LDI
              645f 005c  ld   $5c
              6460 00cf  ld   $cf         ;03e4 CALL
              6461 0050  ld   $50         ;03e4 'PrintChar'
              6462 0090  ld   $90         ;03e6 BRA
              6463 0094  ld   $94
              6464 0021  ld   $21         ;03e8 LDW
              6465 0036  ld   $36         ;03e8 'Active'
              6466 00ad  ld   $ad         ;03ea PEEK
              6467 00cf  ld   $cf         ;03eb CALL
              6468 0050  ld   $50         ;03eb 'PrintChar'
              6469 0093  ld   $93         ;03ed INC
              646a 0036  ld   $36         ;03ed 'Active'
              646b 0090  ld   $90         ;03ef BRA
              646c 0094  ld   $94
              646d 0011  ld   $11         ;03f1 LDWI
              646e 00e8  ld   $e8
              646f 0006  ld   $06
              6470 00cf  ld   $cf         ;03f4 CALL
              6471 0018  ld   $18         ;03f4 vAC
              6472 0093  ld   $93         ;03f6 INC
              6473 001b  ld   $1b
              6474 00ff  ld   $ff         ;03f8 RET
              6475 0004  ld   $04         ;| RAM segment address (high byte first)
              6476 0000  ld   $00         ;|
              6477 00f8  ld   $f8         ;| Length (1..256)
              6478 002b  ld   $2b         ;0400 STW
              6479 005c  ld   $5c         ;0400 'GetLine'
              647a 00cd  ld   $cd         ;0402 DEF
              647b 00ef  ld   $ef
              647c 00cf  ld   $cf         ;0404 CALL
              647d 0034  ld   $34         ;0404 'Spaces'
              647e 00cf  ld   $cf         ;0406 CALL
              647f 0038  ld   $38         ;0406 'Keyword'
              6480 0067  ld   $67         ;0408 'g'
              6481 006f  ld   $6f         ;0409 'o'
              6482 0074  ld   $74         ;040a 't'
              6483 006f  ld   $6f         ;040b 'o'
              6484 0000  ld   $00         ;040c 0
              6485 0035  ld   $35         ;040d BCC
              6486 003f  ld   $3f         ;040e EQ
              6487 0012  ld   $12
              6488 00cf  ld   $cf         ;0410 CALL
              6489 003a  ld   $3a         ;0410 'Expression'
              648a 00cf  ld   $cf         ;0412 CALL
              648b 005e  ld   $5e         ;0412 'GotoValue'
              648c 00cf  ld   $cf         ;0414 CALL
              648d 0038  ld   $38         ;0414 'Keyword'
              648e 0067  ld   $67         ;0416 'g'
              648f 006f  ld   $6f         ;0417 'o'
              6490 0073  ld   $73         ;0418 's'
              6491 0075  ld   $75         ;0419 'u'
              6492 0062  ld   $62         ;041a 'b'
              6493 0000  ld   $00         ;041b 0
              6494 0035  ld   $35         ;041c BCC
              6495 003f  ld   $3f         ;041d EQ
              6496 0026  ld   $26
              6497 00cf  ld   $cf         ;041f CALL
              6498 003a  ld   $3a         ;041f 'Expression'
              6499 0075  ld   $75         ;0421 PUSH
              649a 0021  ld   $21         ;0422 LDW
              649b 0036  ld   $36         ;0422 'Active'
              649c 00ec  ld   $ec         ;0424 STLW
              649d 0000  ld   $00
              649e 00cf  ld   $cf         ;0426 CALL
              649f 005e  ld   $5e         ;0426 'GotoValue'
              64a0 00cf  ld   $cf         ;0428 CALL
              64a1 0038  ld   $38         ;0428 'Keyword'
              64a2 0072  ld   $72         ;042a 'r'
              64a3 0065  ld   $65         ;042b 'e'
              64a4 0074  ld   $74         ;042c 't'
              64a5 0075  ld   $75         ;042d 'u'
              64a6 0072  ld   $72         ;042e 'r'
              64a7 006e  ld   $6e         ;042f 'n'
              64a8 0000  ld   $00         ;0430 0
              64a9 0035  ld   $35         ;0431 BCC
              64aa 003f  ld   $3f         ;0432 EQ
              64ab 003f  ld   $3f
              64ac 001a  ld   $1a         ;0434 LD
              64ad 001c  ld   $1c
              64ae 0035  ld   $35         ;0436 BCC
              64af 0072  ld   $72         ;0437 NE
              64b0 0039  ld   $39
              64b1 00cf  ld   $cf         ;0439 CALL
              64b2 0060  ld   $60         ;0439 'StackError'
              64b3 00f6  ld   $f6         ;043b DEEK
              64b4 002b  ld   $2b         ;043c STW
              64b5 0036  ld   $36         ;043c 'Active'
              64b6 0063  ld   $63         ;043e POP
              64b7 00cf  ld   $cf         ;043f CALL
              64b8 0062  ld   $62         ;043f 'EndOfLine'
              64b9 00cf  ld   $cf         ;0441 CALL
              64ba 0038  ld   $38         ;0441 'Keyword'
              64bb 0069  ld   $69         ;0443 'i'
              64bc 0066  ld   $66         ;0444 'f'
              64bd 0000  ld   $00         ;0445 0
              64be 0035  ld   $35         ;0446 BCC
              64bf 003f  ld   $3f         ;0447 EQ
              64c0 0096  ld   $96
              64c1 00cf  ld   $cf         ;0449 CALL
              64c2 003a  ld   $3a         ;0449 'Expression'
              64c3 00df  ld   $df         ;044b ALLOC
              64c4 00fc  ld   $fc
              64c5 00ec  ld   $ec         ;044d STLW
              64c6 0002  ld   $02
              64c7 00cf  ld   $cf         ;044f CALL
              64c8 0064  ld   $64         ;044f 'RelOp'
              64c9 0035  ld   $35         ;0451 BCC
              64ca 0072  ld   $72         ;0452 NE
              64cb 0054  ld   $54
              64cc 00cf  ld   $cf         ;0454 CALL
              64cd 004a  ld   $4a         ;0454 'SyntaxError'
              64ce 00ec  ld   $ec         ;0456 STLW
              64cf 0000  ld   $00
              64d0 00cf  ld   $cf         ;0458 CALL
              64d1 003a  ld   $3a         ;0458 'Expression'
              64d2 00cf  ld   $cf         ;045a CALL
              64d3 0038  ld   $38         ;045a 'Keyword'
              64d4 0074  ld   $74         ;045c 't'
              64d5 0068  ld   $68         ;045d 'h'
              64d6 0065  ld   $65         ;045e 'e'
              64d7 006e  ld   $6e         ;045f 'n'
              64d8 0000  ld   $00         ;0460 0
              64d9 00ee  ld   $ee         ;0461 LDLW
              64da 0002  ld   $02
              64db 00fc  ld   $fc         ;0463 XORW
              64dc 003c  ld   $3c         ;0463 'Value'
              64dd 0035  ld   $35         ;0465 BCC
              64de 0053  ld   $53         ;0466 GE
              64df 006a  ld   $6a
              64e0 00ee  ld   $ee         ;0468 LDLW
              64e1 0002  ld   $02
              64e2 0090  ld   $90         ;046a BRA
              64e3 006e  ld   $6e
              64e4 00ee  ld   $ee         ;046c LDLW
              64e5 0002  ld   $02
              64e6 00b8  ld   $b8         ;046e SUBW
              64e7 003c  ld   $3c         ;046e 'Value'
              64e8 0035  ld   $35         ;0470 BCC
              64e9 0056  ld   $56         ;0471 LE
              64ea 0073  ld   $73
              64eb 0059  ld   $59         ;0473 LDI
              64ec 0004  ld   $04
              64ed 0035  ld   $35         ;0475 BCC
              64ee 0053  ld   $53         ;0476 GE
              64ef 0078  ld   $78
              64f0 0059  ld   $59         ;0478 LDI
              64f1 0001  ld   $01
              64f2 0035  ld   $35         ;047a BCC
              64f3 0072  ld   $72         ;047b NE
              64f4 007d  ld   $7d
              64f5 0059  ld   $59         ;047d LDI
              64f6 0002  ld   $02
              64f7 002b  ld   $2b         ;047f STW
              64f8 0040  ld   $40         ;047f 'i'
              64f9 00ee  ld   $ee         ;0481 LDLW
              64fa 0000  ld   $00
              64fb fe00  bra  ac          ;+-----------------------------------+
              64fc fcfd  bra  $64fd       ;|                                   |
              64fd 1418  ld   $18,y       ;| Trampoline for page $6400 lookups |
              64fe e006  jmp  y,$06       ;|                                   |
              64ff c218  st   [$18]       ;+-----------------------------------+
              6500 00f8  ld   $f8         ;0483 ANDW
              6501 0040  ld   $40         ;0483 'i'
              6502 00df  ld   $df         ;0485 ALLOC
              6503 0004  ld   $04
              6504 0035  ld   $35         ;0487 BCC
              6505 003f  ld   $3f         ;0488 EQ
              6506 008a  ld   $8a
              6507 00cf  ld   $cf         ;048a CALL
              6508 0066  ld   $66         ;048a 'Statements'
              6509 0021  ld   $21         ;048c LDW
              650a 0036  ld   $36         ;048c 'Active'
              650b 00ad  ld   $ad         ;048e PEEK
              650c 0035  ld   $35         ;048f BCC
              650d 003f  ld   $3f         ;0490 EQ
              650e 0094  ld   $94
              650f 0093  ld   $93         ;0492 INC
              6510 0036  ld   $36         ;0492 'Active'
              6511 0090  ld   $90         ;0494 BRA
              6512 008a  ld   $8a
              6513 00cf  ld   $cf         ;0496 CALL
              6514 0062  ld   $62         ;0496 'EndOfLine'
              6515 00cf  ld   $cf         ;0498 CALL
              6516 0038  ld   $38         ;0498 'Keyword'
              6517 0070  ld   $70         ;049a 'p'
              6518 006f  ld   $6f         ;049b 'o'
              6519 006b  ld   $6b         ;049c 'k'
              651a 0065  ld   $65         ;049d 'e'
              651b 0000  ld   $00         ;049e 0
              651c 0035  ld   $35         ;049f BCC
              651d 003f  ld   $3f         ;04a0 EQ
              651e 00b3  ld   $b3
              651f 00cf  ld   $cf         ;04a2 CALL
              6520 003a  ld   $3a         ;04a2 'Expression'
              6521 002b  ld   $2b         ;04a4 STW
              6522 0068  ld   $68         ;04a4 'Address'
              6523 00cf  ld   $cf         ;04a6 CALL
              6524 0038  ld   $38         ;04a6 'Keyword'
              6525 002c  ld   $2c         ;04a8 ','
              6526 0000  ld   $00         ;04a9 0
              6527 0035  ld   $35         ;04aa BCC
              6528 0072  ld   $72         ;04ab NE
              6529 00ad  ld   $ad
              652a 00cf  ld   $cf         ;04ad CALL
              652b 004a  ld   $4a         ;04ad 'SyntaxError'
              652c 00cf  ld   $cf         ;04af CALL
              652d 003a  ld   $3a         ;04af 'Expression'
              652e 00f0  ld   $f0         ;04b1 POKE
              652f 0068  ld   $68         ;04b1 'Address'
              6530 00cf  ld   $cf         ;04b3 CALL
              6531 0062  ld   $62         ;04b3 'EndOfLine'
              6532 00cf  ld   $cf         ;04b5 CALL
              6533 0038  ld   $38         ;04b5 'Keyword'
              6534 0027  ld   $27         ;04b7 "'"
              6535 0000  ld   $00         ;04b8 0
              6536 0035  ld   $35         ;04b9 BCC
              6537 0072  ld   $72         ;04ba NE
              6538 00c0  ld   $c0
              6539 00cf  ld   $cf         ;04bc CALL
              653a 0038  ld   $38         ;04bc 'Keyword'
              653b 0072  ld   $72         ;04be 'r'
              653c 0065  ld   $65         ;04bf 'e'
              653d 006d  ld   $6d         ;04c0 'm'
              653e 0000  ld   $00         ;04c1 0
              653f 0035  ld   $35         ;04c2 BCC
              6540 003f  ld   $3f         ;04c3 EQ
              6541 00cf  ld   $cf
              6542 0021  ld   $21         ;04c5 LDW
              6543 0036  ld   $36         ;04c5 'Active'
              6544 00ad  ld   $ad         ;04c7 PEEK
              6545 0035  ld   $35         ;04c8 BCC
              6546 003f  ld   $3f         ;04c9 EQ
              6547 00cd  ld   $cd
              6548 0093  ld   $93         ;04cb INC
              6549 0036  ld   $36         ;04cb 'Active'
              654a 0090  ld   $90         ;04cd BRA
              654b 00c3  ld   $c3
              654c 00cf  ld   $cf         ;04cf CALL
              654d 0062  ld   $62         ;04cf 'EndOfLine'
              654e 00cf  ld   $cf         ;04d1 CALL
              654f 0038  ld   $38         ;04d1 'Keyword'
              6550 006c  ld   $6c         ;04d3 'l'
              6551 0069  ld   $69         ;04d4 'i'
              6552 006e  ld   $6e         ;04d5 'n'
              6553 0065  ld   $65         ;04d6 'e'
              6554 0000  ld   $00         ;04d7 0
              6555 0035  ld   $35         ;04d8 BCC
              6556 003f  ld   $3f         ;04d9 EQ
              6557 00de  ld   $de
              6558 0011  ld   $11         ;04db LDWI
              6559 00a0  ld   $a0
              655a 0019  ld   $19
              655b 00cf  ld   $cf         ;04de CALL
              655c 0018  ld   $18         ;04de vAC
              655d 00cf  ld   $cf         ;04e0 CALL
              655e 0038  ld   $38         ;04e0 'Keyword'
              655f 0065  ld   $65         ;04e2 'e'
              6560 006e  ld   $6e         ;04e3 'n'
              6561 0064  ld   $64         ;04e4 'd'
              6562 0000  ld   $00         ;04e5 0
              6563 0035  ld   $35         ;04e6 BCC
              6564 003f  ld   $3f         ;04e7 EQ
              6565 00ea  ld   $ea
              6566 00cf  ld   $cf         ;04e9 CALL
              6567 0056  ld   $56         ;04e9 'Prompt'
              6568 0000  ld   $00         ;04eb 0
              6569 0011  ld   $11         ;04ec LDWI
              656a 0000  ld   $00
              656b 0005  ld   $05
              656c 00cf  ld   $cf         ;04ef CALL
              656d 0018  ld   $18         ;04ef vAC
              656e 002b  ld   $2b         ;04f1 STW
              656f 0066  ld   $66         ;04f1 'Statements'
              6570 0093  ld   $93         ;04f3 INC
              6571 001b  ld   $1b
              6572 0093  ld   $93         ;04f5 INC
              6573 001b  ld   $1b
              6574 00ff  ld   $ff         ;04f7 RET
              6575 0005  ld   $05         ;| RAM segment address (high byte first)
              6576 0000  ld   $00         ;|
              6577 0000  ld   $00         ;| Length (1..256)
              6578 00cf  ld   $cf         ;0500 CALL
              6579 0038  ld   $38         ;0500 'Keyword'
              657a 006e  ld   $6e         ;0502 'n'
              657b 0065  ld   $65         ;0503 'e'
              657c 0078  ld   $78         ;0504 'x'
              657d 0074  ld   $74         ;0505 't'
              657e 0000  ld   $00         ;0506 0
              657f 0035  ld   $35         ;0507 BCC
              6580 003f  ld   $3f         ;0508 EQ
              6581 0037  ld   $37
              6582 00cf  ld   $cf         ;050a CALL
              6583 0042  ld   $42         ;050a 'Variable'
              6584 002b  ld   $2b         ;050c STW
              6585 0068  ld   $68         ;050c 'Address'
              6586 0075  ld   $75         ;050e PUSH
              6587 0021  ld   $21         ;050f LDW
              6588 0036  ld   $36         ;050f 'Active'
              6589 00ec  ld   $ec         ;0511 STLW
              658a 0000  ld   $00
              658b 0011  ld   $11         ;0513 LDWI
              658c 0000  ld   $00
              658d 00ff  ld   $ff
              658e 0099  ld   $99         ;0516 ADDW
              658f 0068  ld   $68         ;0516 'Address'
              6590 00f6  ld   $f6         ;0518 DEEK
              6591 0035  ld   $35         ;0519 BCC
              6592 0072  ld   $72         ;051a NE
              6593 001c  ld   $1c
              6594 00cf  ld   $cf         ;051c CALL
              6595 0046  ld   $46         ;051c 'ValueError'
              6596 002b  ld   $2b         ;051e STW
              6597 0036  ld   $36         ;051e 'Active'
              6598 00cf  ld   $cf         ;0520 CALL
              6599 003a  ld   $3a         ;0520 'Expression'
              659a 0021  ld   $21         ;0522 LDW
              659b 0068  ld   $68         ;0522 'Address'
              659c 00f6  ld   $f6         ;0524 DEEK
              659d 00e3  ld   $e3         ;0525 ADDI
              659e 0001  ld   $01
              659f 00f3  ld   $f3         ;0527 DOKE
              65a0 0068  ld   $68         ;0527 'Address'
              65a1 00b8  ld   $b8         ;0529 SUBW
              65a2 003c  ld   $3c         ;0529 'Value'
              65a3 0035  ld   $35         ;052b BCC
              65a4 0056  ld   $56         ;052c LE
              65a5 0032  ld   $32
              65a6 00ee  ld   $ee         ;052e LDLW
              65a7 0000  ld   $00
              65a8 002b  ld   $2b         ;0530 STW
              65a9 0036  ld   $36         ;0530 'Active'
              65aa 00cf  ld   $cf         ;0532 CALL
              65ab 0034  ld   $34         ;0532 'Spaces'
              65ac 0063  ld   $63         ;0534 POP
              65ad 00cf  ld   $cf         ;0535 CALL
              65ae 0058  ld   $58         ;0535 'TestBreak'
              65af 00cf  ld   $cf         ;0537 CALL
              65b0 0062  ld   $62         ;0537 'EndOfLine'
              65b1 00cf  ld   $cf         ;0539 CALL
              65b2 0038  ld   $38         ;0539 'Keyword'
              65b3 0066  ld   $66         ;053b 'f'
              65b4 006f  ld   $6f         ;053c 'o'
              65b5 0072  ld   $72         ;053d 'r'
              65b6 0000  ld   $00         ;053e 0
              65b7 0035  ld   $35         ;053f BCC
              65b8 003f  ld   $3f         ;0540 EQ
              65b9 006c  ld   $6c
              65ba 00cf  ld   $cf         ;0542 CALL
              65bb 0042  ld   $42         ;0542 'Variable'
              65bc 002b  ld   $2b         ;0544 STW
              65bd 0068  ld   $68         ;0544 'Address'
              65be 00cf  ld   $cf         ;0546 CALL
              65bf 0034  ld   $34         ;0546 'Spaces'
              65c0 00cf  ld   $cf         ;0548 CALL
              65c1 0038  ld   $38         ;0548 'Keyword'
              65c2 003d  ld   $3d         ;054a '='
              65c3 0000  ld   $00         ;054b 0
              65c4 0035  ld   $35         ;054c BCC
              65c5 0072  ld   $72         ;054d NE
              65c6 004f  ld   $4f
              65c7 00cf  ld   $cf         ;054f CALL
              65c8 004a  ld   $4a         ;054f 'SyntaxError'
              65c9 00cf  ld   $cf         ;0551 CALL
              65ca 003a  ld   $3a         ;0551 'Expression'
              65cb 00f3  ld   $f3         ;0553 DOKE
              65cc 0068  ld   $68         ;0553 'Address'
              65cd 00cf  ld   $cf         ;0555 CALL
              65ce 0038  ld   $38         ;0555 'Keyword'
              65cf 0074  ld   $74         ;0557 't'
              65d0 006f  ld   $6f         ;0558 'o'
              65d1 0000  ld   $00         ;0559 0
              65d2 0035  ld   $35         ;055a BCC
              65d3 0072  ld   $72         ;055b NE
              65d4 005d  ld   $5d
              65d5 00cf  ld   $cf         ;055d CALL
              65d6 004a  ld   $4a         ;055d 'SyntaxError'
              65d7 0011  ld   $11         ;055f LDWI
              65d8 0000  ld   $00
              65d9 00ff  ld   $ff
              65da 0099  ld   $99         ;0562 ADDW
              65db 0068  ld   $68         ;0562 'Address'
              65dc 002b  ld   $2b         ;0564 STW
              65dd 006a  ld   $6a         ;0564 'j'
              65de 0021  ld   $21         ;0566 LDW
              65df 0036  ld   $36         ;0566 'Active'
              65e0 00f3  ld   $f3         ;0568 DOKE
              65e1 006a  ld   $6a         ;0568 'j'
              65e2 00cf  ld   $cf         ;056a CALL
              65e3 003a  ld   $3a         ;056a 'Expression'
              65e4 00cf  ld   $cf         ;056c CALL
              65e5 0062  ld   $62         ;056c 'EndOfLine'
              65e6 00cf  ld   $cf         ;056e CALL
              65e7 0038  ld   $38         ;056e 'Keyword'
              65e8 0061  ld   $61         ;0570 'a'
              65e9 0074  ld   $74         ;0571 't'
              65ea 0000  ld   $00         ;0572 0
              65eb 0035  ld   $35         ;0573 BCC
              65ec 003f  ld   $3f         ;0574 EQ
              65ed 009a  ld   $9a
              65ee 00cf  ld   $cf         ;0576 CALL
              65ef 003a  ld   $3a         ;0576 'Expression'
              65f0 0035  ld   $35         ;0578 BCC
              65f1 0053  ld   $53         ;0579 GE
              65f2 007b  ld   $7b
              65f3 00cf  ld   $cf         ;057b CALL
              65f4 0046  ld   $46         ;057b 'ValueError'
              65f5 005e  ld   $5e         ;057d ST
              65f6 0030  ld   $30         ;057d 'Pos'
              65f7 00cf  ld   $cf         ;057f CALL
              65f8 0038  ld   $38         ;057f 'Keyword'
              65f9 002c  ld   $2c         ;0581 ','
              65fa 0000  ld   $00         ;0582 0
              65fb fe00  bra  ac          ;+-----------------------------------+
              65fc fcfd  bra  $65fd       ;|                                   |
              65fd 1418  ld   $18,y       ;| Trampoline for page $6500 lookups |
              65fe e006  jmp  y,$06       ;|                                   |
              65ff c218  st   [$18]       ;+-----------------------------------+
              6600 0035  ld   $35         ;0583 BCC
              6601 003f  ld   $3f         ;0584 EQ
              6602 0098  ld   $98
              6603 00cf  ld   $cf         ;0586 CALL
              6604 003a  ld   $3a         ;0586 'Expression'
              6605 0035  ld   $35         ;0588 BCC
              6606 0053  ld   $53         ;0589 GE
              6607 008b  ld   $8b
              6608 00cf  ld   $cf         ;058b CALL
              6609 0046  ld   $46         ;058b 'ValueError'
              660a 00e6  ld   $e6         ;058d SUBI
              660b 0078  ld   $78
              660c 0035  ld   $35         ;058f BCC
              660d 0050  ld   $50         ;0590 LT
              660e 0092  ld   $92
              660f 00cf  ld   $cf         ;0592 CALL
              6610 0046  ld   $46         ;0592 'ValueError'
              6611 00e3  ld   $e3         ;0594 ADDI
              6612 00f8  ld   $f8
              6613 00e9  ld   $e9         ;0596 LSLW
              6614 00ad  ld   $ad         ;0597 PEEK
              6615 005e  ld   $5e         ;0598 ST
              6616 0031  ld   $31         ;0598 'Pos'+1
              6617 00cf  ld   $cf         ;059a CALL
              6618 0062  ld   $62         ;059a 'EndOfLine'
              6619 00cf  ld   $cf         ;059c CALL
              661a 0038  ld   $38         ;059c 'Keyword'
              661b 0070  ld   $70         ;059e 'p'
              661c 0075  ld   $75         ;059f 'u'
              661d 0074  ld   $74         ;05a0 't'
              661e 0000  ld   $00         ;05a1 0
              661f 0035  ld   $35         ;05a2 BCC
              6620 003f  ld   $3f         ;05a3 EQ
              6621 00a9  ld   $a9
              6622 00cf  ld   $cf         ;05a5 CALL
              6623 003a  ld   $3a         ;05a5 'Expression'
              6624 00cf  ld   $cf         ;05a7 CALL
              6625 0050  ld   $50         ;05a7 'PrintChar'
              6626 00cf  ld   $cf         ;05a9 CALL
              6627 0062  ld   $62         ;05a9 'EndOfLine'
              6628 00cf  ld   $cf         ;05ab CALL
              6629 0038  ld   $38         ;05ab 'Keyword'
              662a 006d  ld   $6d         ;05ad 'm'
              662b 006f  ld   $6f         ;05ae 'o'
              662c 0064  ld   $64         ;05af 'd'
              662d 0065  ld   $65         ;05b0 'e'
              662e 0000  ld   $00         ;05b1 0
              662f 0035  ld   $35         ;05b2 BCC
              6630 003f  ld   $3f         ;05b3 EQ
              6631 00c7  ld   $c7
              6632 00cf  ld   $cf         ;05b5 CALL
              6633 003a  ld   $3a         ;05b5 'Expression'
              6634 001a  ld   $1a         ;05b7 LD
              6635 0021  ld   $21
              6636 00e6  ld   $e6         ;05b9 SUBI
              6637 0020  ld   $20
              6638 0035  ld   $35         ;05bb BCC
              6639 0050  ld   $50         ;05bc LT
              663a 00c5  ld   $c5
              663b 0011  ld   $11         ;05be LDWI
              663c 0000  ld   $00
              663d 000b  ld   $0b
              663e 002b  ld   $2b         ;05c1 STW
              663f 0022  ld   $22         ;05c1 '_sysFn'
              6640 0021  ld   $21         ;05c3 LDW
              6641 003c  ld   $3c         ;05c3 'Value'
              6642 00b4  ld   $b4         ;05c5 SYS
              6643 00e7  ld   $e7
              6644 00cf  ld   $cf         ;05c7 CALL
              6645 0062  ld   $62         ;05c7 'EndOfLine'
              6646 0011  ld   $11         ;05c9 LDWI
              6647 00a0  ld   $a0
              6648 0014  ld   $14
              6649 00cf  ld   $cf         ;05cc CALL
              664a 0018  ld   $18         ;05cc vAC
              664b 0059  ld   $59         ;05ce LDI
              664c 0000  ld   $00
              664d 002b  ld   $2b         ;05d0 STW
              664e 003c  ld   $3c         ;05d0 'Value'
              664f 00e9  ld   $e9         ;05d2 LSLW
              6650 00e9  ld   $e9         ;05d3 LSLW
              6651 00e9  ld   $e9         ;05d4 LSLW
              6652 00e9  ld   $e9         ;05d5 LSLW
              6653 002b  ld   $2b         ;05d6 STW
              6654 0040  ld   $40         ;05d6 'i'
              6655 0093  ld   $93         ;05d8 INC
              6656 0036  ld   $36         ;05d8 'Active'
              6657 0021  ld   $21         ;05da LDW
              6658 0036  ld   $36         ;05da 'Active'
              6659 00ad  ld   $ad         ;05dc PEEK
              665a 00e6  ld   $e6         ;05dd SUBI
              665b 0030  ld   $30
              665c 0035  ld   $35         ;05df BCC
              665d 0050  ld   $50         ;05e0 LT
              665e 00fd  ld   $fd
              665f 00e6  ld   $e6         ;05e2 SUBI
              6660 000a  ld   $0a
              6661 0035  ld   $35         ;05e4 BCC
              6662 0053  ld   $53         ;05e5 GE
              6663 00eb  ld   $eb
              6664 00e3  ld   $e3         ;05e7 ADDI
              6665 000a  ld   $0a
              6666 0099  ld   $99         ;05e9 ADDW
              6667 0040  ld   $40         ;05e9 'i'
              6668 0090  ld   $90         ;05eb BRA
              6669 00ce  ld   $ce
              666a 0082  ld   $82         ;05ed ANDI
              666b 00df  ld   $df
              666c 00e6  ld   $e6         ;05ef SUBI
              666d 0007  ld   $07
              666e 0035  ld   $35         ;05f1 BCC
              666f 0050  ld   $50         ;05f2 LT
              6670 00fd  ld   $fd
              6671 00e6  ld   $e6         ;05f4 SUBI
              6672 0006  ld   $06
              6673 0035  ld   $35         ;05f6 BCC
              6674 0053  ld   $53         ;05f7 GE
              6675 00fd  ld   $fd
              6676 00e3  ld   $e3         ;05f9 ADDI
              6677 0010  ld   $10
              6678 0099  ld   $99         ;05fb ADDW
              6679 0040  ld   $40         ;05fb 'i'
              667a 0090  ld   $90         ;05fd BRA
              667b 00ce  ld   $ce
              667c 00ff  ld   $ff         ;05ff RET
              667d 0006  ld   $06         ;| RAM segment address (high byte first)
              667e 0000  ld   $00         ;|
              667f 00fd  ld   $fd         ;| Length (1..256)
              6680 00cd  ld   $cd         ;0600 DEF
              6681 00bb  ld   $bb
              6682 0075  ld   $75         ;0602 PUSH
              6683 00cf  ld   $cf         ;0603 CALL
              6684 0032  ld   $32         ;0603 'Number'
              6685 0035  ld   $35         ;0605 BCC
              6686 0056  ld   $56         ;0606 LE
              6687 00b9  ld   $b9
              6688 0021  ld   $21         ;0608 LDW
              6689 0048  ld   $48         ;0608 'End'
              668a 002b  ld   $2b         ;060a STW
              668b 0040  ld   $40         ;060a 'i'
              668c 002b  ld   $2b         ;060c STW
              668d 006a  ld   $6a         ;060c 'j'
              668e 00fc  ld   $fc         ;060e XORW
              668f 006c  ld   $6c         ;060e 'Begin'
              6690 0035  ld   $35         ;0610 BCC
              6691 003f  ld   $3f         ;0611 EQ
              6692 0016  ld   $16
              6693 0021  ld   $21         ;0613 LDW
              6694 0048  ld   $48         ;0613 'End'
              6695 00cf  ld   $cf         ;0615 CALL
              6696 006e  ld   $6e         ;0615 'PrevBlock'
              6697 00f6  ld   $f6         ;0617 DEEK
              6698 00b8  ld   $b8         ;0618 SUBW
              6699 003c  ld   $3c         ;0618 'Value'
              669a 0035  ld   $35         ;061a BCC
              669b 0050  ld   $50         ;061b LT
              669c 005a  ld   $5a
              669d 0021  ld   $21         ;061d LDW
              669e 006c  ld   $6c         ;061d 'Begin'
              669f 002b  ld   $2b         ;061f STW
              66a0 0040  ld   $40         ;061f 'i'
              66a1 0021  ld   $21         ;0621 LDW
              66a2 0040  ld   $40         ;0621 'i'
              66a3 00f6  ld   $f6         ;0623 DEEK
              66a4 00b8  ld   $b8         ;0624 SUBW
              66a5 003c  ld   $3c         ;0624 'Value'
              66a6 0035  ld   $35         ;0626 BCC
              66a7 0053  ld   $53         ;0627 GE
              66a8 002d  ld   $2d
              66a9 0021  ld   $21         ;0629 LDW
              66aa 0040  ld   $40         ;0629 'i'
              66ab 00cf  ld   $cf         ;062b CALL
              66ac 0070  ld   $70         ;062b 'NextBlock'
              66ad 0090  ld   $90         ;062d BRA
              66ae 001d  ld   $1d
              66af 0035  ld   $35         ;062f BCC
              66b0 0056  ld   $56         ;0630 LE
              66b1 005a  ld   $5a
              66b2 0021  ld   $21         ;0632 LDW
              66b3 0000  ld   $00
              66b4 00fc  ld   $fc         ;0634 XORW
              66b5 0048  ld   $48         ;0634 'End'
              66b6 0035  ld   $35         ;0636 BCC
              66b7 003f  ld   $3f         ;0637 EQ
              66b8 0058  ld   $58
              66b9 0021  ld   $21         ;0639 LDW
              66ba 006a  ld   $6a         ;0639 'j'
              66bb 002b  ld   $2b         ;063b STW
              66bc 0044  ld   $44         ;063b 'k'
              66bd 00cf  ld   $cf         ;063d CALL
              66be 006e  ld   $6e         ;063d 'PrevBlock'
              66bf 002b  ld   $2b         ;063f STW
              66c0 006a  ld   $6a         ;063f 'j'
              66c1 002b  ld   $2b         ;0641 STW
              66c2 004e  ld   $4e         ;0641 'tmp'
              66c3 0021  ld   $21         ;0643 LDW
              66c4 004e  ld   $4e         ;0643 'tmp'
              66c5 00ad  ld   $ad         ;0645 PEEK
              66c6 00f0  ld   $f0         ;0646 POKE
              66c7 0044  ld   $44         ;0646 'k'
              66c8 0093  ld   $93         ;0648 INC
              66c9 004e  ld   $4e         ;0648 'tmp'
              66ca 0093  ld   $93         ;064a INC
              66cb 0044  ld   $44         ;064a 'k'
              66cc 0021  ld   $21         ;064c LDW
              66cd 004e  ld   $4e         ;064c 'tmp'
              66ce 0082  ld   $82         ;064e ANDI
              66cf 001f  ld   $1f
              66d0 0035  ld   $35         ;0650 BCC
              66d1 0072  ld   $72         ;0651 NE
              66d2 0041  ld   $41
              66d3 0021  ld   $21         ;0653 LDW
              66d4 006a  ld   $6a         ;0653 'j'
              66d5 00fc  ld   $fc         ;0655 XORW
              66d6 0040  ld   $40         ;0655 'i'
              66d7 0035  ld   $35         ;0657 BCC
              66d8 0072  ld   $72         ;0658 NE
              66d9 0037  ld   $37
              66da 0059  ld   $59         ;065a LDI
              66db 0001  ld   $01
              66dc 0035  ld   $35         ;065c BCC
              66dd 003f  ld   $3f         ;065d EQ
              66de 0070  ld   $70
              66df 0021  ld   $21         ;065f LDW
              66e0 0000  ld   $00
              66e1 00e6  ld   $e6         ;0661 SUBI
              66e2 0080  ld   $80
              66e3 00e6  ld   $e6         ;0663 SUBI
              66e4 00c0  ld   $c0
              66e5 00fc  ld   $fc         ;0665 XORW
              66e6 0048  ld   $48         ;0665 'End'
              66e7 0035  ld   $35         ;0667 BCC
              66e8 0072  ld   $72         ;0668 NE
              66e9 006a  ld   $6a
              66ea 00cf  ld   $cf         ;066a CALL
              66eb 004a  ld   $4a         ;066a 'SyntaxError'
              66ec 0021  ld   $21         ;066c LDW
              66ed 0048  ld   $48         ;066c 'End'
              66ee 00cf  ld   $cf         ;066e CALL
              66ef 0070  ld   $70         ;066e 'NextBlock'
              66f0 002b  ld   $2b         ;0670 STW
              66f1 0048  ld   $48         ;0670 'End'
              66f2 0021  ld   $21         ;0672 LDW
              66f3 0036  ld   $36         ;0672 'Active'
              66f4 00ad  ld   $ad         ;0674 PEEK
              66f5 0035  ld   $35         ;0675 BCC
              66f6 003f  ld   $3f         ;0676 EQ
              66f7 008a  ld   $8a
              66f8 0021  ld   $21         ;0678 LDW
              66f9 003c  ld   $3c         ;0678 'Value'
              66fa 00f3  ld   $f3         ;067a DOKE
              66fb fe00  bra  ac          ;+-----------------------------------+
              66fc fcfd  bra  $66fd       ;|                                   |
              66fd 1418  ld   $18,y       ;| Trampoline for page $6600 lookups |
              66fe e006  jmp  y,$06       ;|                                   |
              66ff c218  st   [$18]       ;+-----------------------------------+
              6700 0040  ld   $40         ;067a 'i'
              6701 0093  ld   $93         ;067c INC
              6702 0040  ld   $40         ;067c 'i'
              6703 0093  ld   $93         ;067e INC
              6704 0040  ld   $40         ;067e 'i'
              6705 0021  ld   $21         ;0680 LDW
              6706 0036  ld   $36         ;0680 'Active'
              6707 00ad  ld   $ad         ;0682 PEEK
              6708 0093  ld   $93         ;0683 INC
              6709 0036  ld   $36         ;0683 'Active'
              670a 00f0  ld   $f0         ;0685 POKE
              670b 0040  ld   $40         ;0685 'i'
              670c 0035  ld   $35         ;0687 BCC
              670d 0072  ld   $72         ;0688 NE
              670e 007c  ld   $7c
              670f 0090  ld   $90         ;068a BRA
              6710 00b7  ld   $b7
              6711 0021  ld   $21         ;068c LDW
              6712 0040  ld   $40         ;068c 'i'
              6713 002b  ld   $2b         ;068e STW
              6714 006a  ld   $6a         ;068e 'j'
              6715 00fc  ld   $fc         ;0690 XORW
              6716 0048  ld   $48         ;0690 'End'
              6717 0035  ld   $35         ;0692 BCC
              6718 003f  ld   $3f         ;0693 EQ
              6719 00b1  ld   $b1
              671a 0021  ld   $21         ;0695 LDW
              671b 006a  ld   $6a         ;0695 'j'
              671c 00cf  ld   $cf         ;0697 CALL
              671d 0070  ld   $70         ;0697 'NextBlock'
              671e 002b  ld   $2b         ;0699 STW
              671f 006a  ld   $6a         ;0699 'j'
              6720 002b  ld   $2b         ;069b STW
              6721 004e  ld   $4e         ;069b 'tmp'
              6722 0021  ld   $21         ;069d LDW
              6723 004e  ld   $4e         ;069d 'tmp'
              6724 00ad  ld   $ad         ;069f PEEK
              6725 00f0  ld   $f0         ;06a0 POKE
              6726 0040  ld   $40         ;06a0 'i'
              6727 0093  ld   $93         ;06a2 INC
              6728 004e  ld   $4e         ;06a2 'tmp'
              6729 0093  ld   $93         ;06a4 INC
              672a 0040  ld   $40         ;06a4 'i'
              672b 0021  ld   $21         ;06a6 LDW
              672c 004e  ld   $4e         ;06a6 'tmp'
              672d 0082  ld   $82         ;06a8 ANDI
              672e 001f  ld   $1f
              672f 0035  ld   $35         ;06aa BCC
              6730 0072  ld   $72         ;06ab NE
              6731 009b  ld   $9b
              6732 0021  ld   $21         ;06ad LDW
              6733 006a  ld   $6a         ;06ad 'j'
              6734 002b  ld   $2b         ;06af STW
              6735 0040  ld   $40         ;06af 'i'
              6736 0090  ld   $90         ;06b1 BRA
              6737 008e  ld   $8e
              6738 0021  ld   $21         ;06b3 LDW
              6739 0048  ld   $48         ;06b3 'End'
              673a 00cf  ld   $cf         ;06b5 CALL
              673b 006e  ld   $6e         ;06b5 'PrevBlock'
              673c 002b  ld   $2b         ;06b7 STW
              673d 0048  ld   $48         ;06b7 'End'
              673e 0021  ld   $21         ;06b9 LDW
              673f 003c  ld   $3c         ;06b9 'Value'
              6740 0063  ld   $63         ;06bb POP
              6741 00ff  ld   $ff         ;06bc RET
              6742 002b  ld   $2b         ;06bd STW
              6743 0072  ld   $72         ;06bd 'Insert'
              6744 0011  ld   $11         ;06bf LDWI
              6745 003f  ld   $3f
              6746 0035  ld   $35
              6747 002b  ld   $2b         ;06c2 STW
              6748 002a  ld   $2a
              6749 0011  ld   $11         ;06c4 LDWI
              674a 00a0  ld   $a0
              674b 0018  ld   $18
              674c 002b  ld   $2b         ;06c7 STW
              674d 005a  ld   $5a         ;06c7 'Newline'
              674e 00cf  ld   $cf         ;06c9 CALL
              674f 0018  ld   $18         ;06c9 vAC
              6750 00cf  ld   $cf         ;06cb CALL
              6751 0052  ld   $52         ;06cb 'PrintS'
              6752 002a  ld   $2a         ;06cd '*'
              6753 002a  ld   $2a         ;06ce '*'
              6754 002a  ld   $2a         ;06cf '*'
              6755 0020  ld   $20         ;06d0 ' '
              6756 0054  ld   $54         ;06d1 'T'
              6757 0069  ld   $69         ;06d2 'i'
              6758 006e  ld   $6e         ;06d3 'n'
              6759 0079  ld   $79         ;06d4 'y'
              675a 0020  ld   $20         ;06d5 ' '
              675b 0042  ld   $42         ;06d6 'B'
              675c 0041  ld   $41         ;06d7 'A'
              675d 0053  ld   $53         ;06d8 'S'
              675e 0049  ld   $49         ;06d9 'I'
              675f 0043  ld   $43         ;06da 'C'
              6760 0020  ld   $20         ;06db ' '
              6761 0044  ld   $44         ;06dc 'D'
              6762 0045  ld   $45         ;06dd 'E'
              6763 0056  ld   $56         ;06de 'V'
              6764 0000  ld   $00         ;06df 0
              6765 00cf  ld   $cf         ;06e0 CALL
              6766 005a  ld   $5a         ;06e0 'Newline'
              6767 0011  ld   $11         ;06e2 LDWI
              6768 00a0  ld   $a0
              6769 0008  ld   $08
              676a 002b  ld   $2b         ;06e5 STW
              676b 001a  ld   $1a         ;06e5 '_vLR'
              676c 00ff  ld   $ff         ;06e7 RET
              676d 0059  ld   $59         ;06e8 LDI
              676e 0000  ld   $00
              676f 00f0  ld   $f0         ;06ea POKE
              6770 0036  ld   $36         ;06ea 'Active'
              6771 0059  ld   $59         ;06ec LDI
              6772 0020  ld   $20
              6773 00cf  ld   $cf         ;06ee CALL
              6774 0050  ld   $50         ;06ee 'PrintChar'
              6775 00cf  ld   $cf         ;06f0 CALL
              6776 005a  ld   $5a         ;06f0 'Newline'
              6777 0059  ld   $59         ;06f2 LDI
              6778 00a2  ld   $a2
              6779 005e  ld   $5e         ;06f4 ST
              677a 0036  ld   $36         ;06f4 'Active'
              677b 00cf  ld   $cf         ;06f6 CALL
              677c 0034  ld   $34         ;06f6 'Spaces'
              677d 0021  ld   $21         ;06f8 LDW
              677e 0036  ld   $36         ;06f8 'Active'
              677f 00ad  ld   $ad         ;06fa PEEK
              6780 0063  ld   $63         ;06fb POP
              6781 00ff  ld   $ff         ;06fc RET
              6782 0008  ld   $08         ;| RAM segment address (high byte first)
              6783 00a0  ld   $a0         ;|
              6784 005f  ld   $5f         ;| Length (1..256)
              6785 00cd  ld   $cd         ;08a0 DEF
              6786 00b6  ld   $b6
              6787 0088  ld   $88         ;08a2 ORI
              6788 001f  ld   $1f
              6789 00e3  ld   $e3         ;08a4 ADDI
              678a 0001  ld   $01
              678b 002b  ld   $2b         ;08a6 STW
              678c 004e  ld   $4e         ;08a6 'tmp'
              678d 0035  ld   $35         ;08a8 BCC
              678e 0056  ld   $56         ;08a9 LE
              678f 00b3  ld   $b3
              6790 0082  ld   $82         ;08ab ANDI
              6791 00e0  ld   $e0
              6792 0035  ld   $35         ;08ad BCC
              6793 0072  ld   $72         ;08ae NE
              6794 00b3  ld   $b3
              6795 0021  ld   $21         ;08b0 LDW
              6796 004e  ld   $4e         ;08b0 'tmp'
              6797 00e3  ld   $e3         ;08b2 ADDI
              6798 00a0  ld   $a0
              6799 00ff  ld   $ff         ;08b4 RET
              679a 0021  ld   $21         ;08b5 LDW
              679b 004e  ld   $4e         ;08b5 'tmp'
              679c 00ff  ld   $ff         ;08b7 RET
              679d 002b  ld   $2b         ;08b8 STW
              679e 0070  ld   $70         ;08b8 'NextBlock'
              679f 00cd  ld   $cd         ;08ba DEF
              67a0 00ce  ld   $ce
              67a1 00e6  ld   $e6         ;08bc SUBI
              67a2 0020  ld   $20
              67a3 002b  ld   $2b         ;08be STW
              67a4 004e  ld   $4e         ;08be 'tmp'
              67a5 0035  ld   $35         ;08c0 BCC
              67a6 0050  ld   $50         ;08c1 LT
              67a7 00cb  ld   $cb
              67a8 0082  ld   $82         ;08c3 ANDI
              67a9 0060  ld   $60
              67aa 0035  ld   $35         ;08c5 BCC
              67ab 0072  ld   $72         ;08c6 NE
              67ac 00cb  ld   $cb
              67ad 0021  ld   $21         ;08c8 LDW
              67ae 004e  ld   $4e         ;08c8 'tmp'
              67af 00e6  ld   $e6         ;08ca SUBI
              67b0 00a0  ld   $a0
              67b1 00ff  ld   $ff         ;08cc RET
              67b2 0021  ld   $21         ;08cd LDW
              67b3 004e  ld   $4e         ;08cd 'tmp'
              67b4 00ff  ld   $ff         ;08cf RET
              67b5 002b  ld   $2b         ;08d0 STW
              67b6 006e  ld   $6e         ;08d0 'PrevBlock'
              67b7 00cd  ld   $cd         ;08d2 DEF
              67b8 00fa  ld   $fa
              67b9 0021  ld   $21         ;08d4 LDW
              67ba 006c  ld   $6c         ;08d4 'Begin'
              67bb 002b  ld   $2b         ;08d6 STW
              67bc 0040  ld   $40         ;08d6 'i'
              67bd 00fc  ld   $fc         ;08d8 XORW
              67be 0048  ld   $48         ;08d8 'End'
              67bf 0035  ld   $35         ;08da BCC
              67c0 003f  ld   $3f         ;08db EQ
              67c1 00f3  ld   $f3
              67c2 0021  ld   $21         ;08dd LDW
              67c3 0040  ld   $40         ;08dd 'i'
              67c4 00f6  ld   $f6         ;08df DEEK
              67c5 00fc  ld   $fc         ;08e0 XORW
              67c6 003c  ld   $3c         ;08e0 'Value'
              67c7 0035  ld   $35         ;08e2 BCC
              67c8 0072  ld   $72         ;08e3 NE
              67c9 00ed  ld   $ed
              67ca 0021  ld   $21         ;08e5 LDW
              67cb 0040  ld   $40         ;08e5 'i'
              67cc 00e3  ld   $e3         ;08e7 ADDI
              67cd 0002  ld   $02
              67ce 002b  ld   $2b         ;08e9 STW
              67cf 0036  ld   $36         ;08e9 'Active'
              67d0 00cf  ld   $cf         ;08eb CALL
              67d1 0058  ld   $58         ;08eb 'TestBreak'
              67d2 00cf  ld   $cf         ;08ed CALL
              67d3 0066  ld   $66         ;08ed 'Statements'
              67d4 0021  ld   $21         ;08ef LDW
              67d5 0040  ld   $40         ;08ef 'i'
              67d6 00cf  ld   $cf         ;08f1 CALL
              67d7 0070  ld   $70         ;08f1 'NextBlock'
              67d8 0090  ld   $90         ;08f3 BRA
              67d9 00d4  ld   $d4
              67da 00cf  ld   $cf         ;08f5 CALL
              67db 0056  ld   $56         ;08f5 'Prompt'
              67dc 004c  ld   $4c         ;08f7 'L'
              67dd 0069  ld   $69         ;08f8 'i'
              67de 006e  ld   $6e         ;08f9 'n'
              67df 0065  ld   $65         ;08fa 'e'
              67e0 0000  ld   $00         ;08fb 0
              67e1 0093  ld   $93         ;08fc INC
              67e2 001b  ld   $1b
              67e3 00ff  ld   $ff         ;08fe RET
              67e4 0009  ld   $09         ;| RAM segment address (high byte first)
              67e5 00a0  ld   $a0         ;|
              67e6 005e  ld   $5e         ;| Length (1..256)
              67e7 002b  ld   $2b         ;09a0 STW
              67e8 005e  ld   $5e         ;09a0 'GotoValue'
              67e9 00cd  ld   $cd         ;09a2 DEF
              67ea 00de  ld   $de
              67eb 0075  ld   $75         ;09a4 PUSH
              67ec 0035  ld   $35         ;09a5 BCC
              67ed 0053  ld   $53         ;09a6 GE
              67ee 00b0  ld   $b0
              67ef 0059  ld   $59         ;09a8 LDI
              67f0 0000  ld   $00
              67f1 00b8  ld   $b8         ;09aa SUBW
              67f2 003c  ld   $3c         ;09aa 'Value'
              67f3 002b  ld   $2b         ;09ac STW
              67f4 003c  ld   $3c         ;09ac 'Value'
              67f5 0059  ld   $59         ;09ae LDI
              67f6 002d  ld   $2d
              67f7 00cf  ld   $cf         ;09b0 CALL
              67f8 0050  ld   $50         ;09b0 'PrintChar'
              67f9 0059  ld   $59         ;09b2 LDI
              67fa 0000  ld   $00
              67fb fe00  bra  ac          ;+-----------------------------------+
              67fc fcfd  bra  $67fd       ;|                                   |
              67fd 1418  ld   $18,y       ;| Trampoline for page $6700 lookups |
              67fe e006  jmp  y,$06       ;|                                   |
              67ff c218  st   [$18]       ;+-----------------------------------+
              6800 002b  ld   $2b         ;09b4 STW
              6801 0044  ld   $44         ;09b4 'k'
              6802 0021  ld   $21         ;09b6 LDW
              6803 003c  ld   $3c         ;09b6 'Value'
              6804 0035  ld   $35         ;09b8 BCC
              6805 0053  ld   $53         ;09b9 GE
              6806 00c4  ld   $c4
              6807 0011  ld   $11         ;09bb LDWI
              6808 00d0  ld   $d0
              6809 008a  ld   $8a
              680a 0099  ld   $99         ;09be ADDW
              680b 003c  ld   $3c         ;09be 'Value'
              680c 002b  ld   $2b         ;09c0 STW
              680d 003c  ld   $3c         ;09c0 'Value'
              680e 0059  ld   $59         ;09c2 LDI
              680f 0003  ld   $03
              6810 002b  ld   $2b         ;09c4 STW
              6811 0044  ld   $44         ;09c4 'k'
              6812 0011  ld   $11         ;09c6 LDWI
              6813 0010  ld   $10
              6814 0027  ld   $27
              6815 00cf  ld   $cf         ;09c9 CALL
              6816 0074  ld   $74         ;09c9 'PrintDigit'
              6817 0011  ld   $11         ;09cb LDWI
              6818 00e8  ld   $e8
              6819 0003  ld   $03
              681a 00cf  ld   $cf         ;09ce CALL
              681b 0074  ld   $74         ;09ce 'PrintDigit'
              681c 0059  ld   $59         ;09d0 LDI
              681d 0064  ld   $64
              681e 00cf  ld   $cf         ;09d2 CALL
              681f 0074  ld   $74         ;09d2 'PrintDigit'
              6820 0059  ld   $59         ;09d4 LDI
              6821 000a  ld   $0a
              6822 00cf  ld   $cf         ;09d6 CALL
              6823 0074  ld   $74         ;09d6 'PrintDigit'
              6824 0059  ld   $59         ;09d8 LDI
              6825 0030  ld   $30
              6826 0099  ld   $99         ;09da ADDW
              6827 003c  ld   $3c         ;09da 'Value'
              6828 00cf  ld   $cf         ;09dc CALL
              6829 0050  ld   $50         ;09dc 'PrintChar'
              682a 0063  ld   $63         ;09de POP
              682b 00ff  ld   $ff         ;09df RET
              682c 002b  ld   $2b         ;09e0 STW
              682d 0076  ld   $76         ;09e0 'PrintValue'
              682e 00cd  ld   $cd         ;09e2 DEF
              682f 00ea  ld   $ea
              6830 00cf  ld   $cf         ;09e4 CALL
              6831 0056  ld   $56         ;09e4 'Prompt'
              6832 0053  ld   $53         ;09e6 'S'
              6833 0074  ld   $74         ;09e7 't'
              6834 0061  ld   $61         ;09e8 'a'
              6835 0063  ld   $63         ;09e9 'c'
              6836 006b  ld   $6b         ;09ea 'k'
              6837 0000  ld   $00         ;09eb 0
              6838 002b  ld   $2b         ;09ec STW
              6839 0060  ld   $60         ;09ec 'StackError'
              683a 00cd  ld   $cd         ;09ee DEF
              683b 00f7  ld   $f7
              683c 00cf  ld   $cf         ;09f0 CALL
              683d 0056  ld   $56         ;09f0 'Prompt'
              683e 0053  ld   $53         ;09f2 'S'
              683f 0079  ld   $79         ;09f3 'y'
              6840 006e  ld   $6e         ;09f4 'n'
              6841 0074  ld   $74         ;09f5 't'
              6842 0061  ld   $61         ;09f6 'a'
              6843 0078  ld   $78         ;09f7 'x'
              6844 0000  ld   $00         ;09f8 0
              6845 002b  ld   $2b         ;09f9 STW
              6846 004a  ld   $4a         ;09f9 'SyntaxError'
              6847 0093  ld   $93         ;09fb INC
              6848 001b  ld   $1b
              6849 00ff  ld   $ff         ;09fd RET
              684a 000a  ld   $0a         ;| RAM segment address (high byte first)
              684b 00a0  ld   $a0         ;|
              684c 005f  ld   $5f         ;| Length (1..256)
              684d 00cd  ld   $cd         ;0aa0 DEF
              684e 00d2  ld   $d2
              684f 0021  ld   $21         ;0aa2 LDW
              6850 001a  ld   $1a
              6851 002b  ld   $2b         ;0aa4 STW
              6852 004e  ld   $4e         ;0aa4 'tmp'
              6853 0021  ld   $21         ;0aa6 LDW
              6854 0036  ld   $36         ;0aa6 'Active'
              6855 002b  ld   $2b         ;0aa8 STW
              6856 006a  ld   $6a         ;0aa8 'j'
              6857 0021  ld   $21         ;0aaa LDW
              6858 004e  ld   $4e         ;0aaa 'tmp'
              6859 00ad  ld   $ad         ;0aac PEEK
              685a 0093  ld   $93         ;0aad INC
              685b 004e  ld   $4e         ;0aad 'tmp'
              685c 0035  ld   $35         ;0aaf BCC
              685d 003f  ld   $3f         ;0ab0 EQ
              685e 00ce  ld   $ce
              685f 002b  ld   $2b         ;0ab2 STW
              6860 0040  ld   $40         ;0ab2 'i'
              6861 0021  ld   $21         ;0ab4 LDW
              6862 0036  ld   $36         ;0ab4 'Active'
              6863 00ad  ld   $ad         ;0ab6 PEEK
              6864 0088  ld   $88         ;0ab7 ORI
              6865 0020  ld   $20
              6866 00fc  ld   $fc         ;0ab9 XORW
              6867 0040  ld   $40         ;0ab9 'i'
              6868 0035  ld   $35         ;0abb BCC
              6869 0072  ld   $72         ;0abc NE
              686a 00c0  ld   $c0
              686b 0093  ld   $93         ;0abe INC
              686c 0036  ld   $36         ;0abe 'Active'
              686d 0090  ld   $90         ;0ac0 BRA
              686e 00a8  ld   $a8
              686f 0021  ld   $21         ;0ac2 LDW
              6870 006a  ld   $6a         ;0ac2 'j'
              6871 002b  ld   $2b         ;0ac4 STW
              6872 0036  ld   $36         ;0ac4 'Active'
              6873 0021  ld   $21         ;0ac6 LDW
              6874 004e  ld   $4e         ;0ac6 'tmp'
              6875 00ad  ld   $ad         ;0ac8 PEEK
              6876 0093  ld   $93         ;0ac9 INC
              6877 004e  ld   $4e         ;0ac9 'tmp'
              6878 0035  ld   $35         ;0acb BCC
              6879 0072  ld   $72         ;0acc NE
              687a 00c4  ld   $c4
              687b 00cf  ld   $cf         ;0ace CALL
              687c 004e  ld   $4e         ;0ace 'tmp'
              687d 00cf  ld   $cf         ;0ad0 CALL
              687e 0034  ld   $34         ;0ad0 'Spaces'
              687f 00cf  ld   $cf         ;0ad2 CALL
              6880 004e  ld   $4e         ;0ad2 'tmp'
              6881 002b  ld   $2b         ;0ad4 STW
              6882 0038  ld   $38         ;0ad4 'Keyword'
              6883 00cd  ld   $cd         ;0ad6 DEF
              6884 00fa  ld   $fa
              6885 0011  ld   $11         ;0ad8 LDWI
              6886 0000  ld   $00
              6887 0080  ld   $80
              6888 002b  ld   $2b         ;0adb STW
              6889 003c  ld   $3c         ;0adb 'Value'
              688a 00e9  ld   $e9         ;0add LSLW
              688b 00e9  ld   $e9         ;0ade LSLW
              688c 0099  ld   $99         ;0adf ADDW
              688d 003c  ld   $3c         ;0adf 'Value'
              688e 00e9  ld   $e9         ;0ae1 LSLW
              688f 002b  ld   $2b         ;0ae2 STW
              6890 0040  ld   $40         ;0ae2 'i'
              6891 0021  ld   $21         ;0ae4 LDW
              6892 0036  ld   $36         ;0ae4 'Active'
              6893 00ad  ld   $ad         ;0ae6 PEEK
              6894 00e6  ld   $e6         ;0ae7 SUBI
              6895 0030  ld   $30
              6896 0035  ld   $35         ;0ae9 BCC
              6897 0050  ld   $50         ;0aea LT
              6898 00f7  ld   $f7
              6899 00e6  ld   $e6         ;0aec SUBI
              689a 000a  ld   $0a
              689b 0035  ld   $35         ;0aee BCC
              689c 0053  ld   $53         ;0aef GE
              689d 00f7  ld   $f7
              689e 00e3  ld   $e3         ;0af1 ADDI
              689f 000a  ld   $0a
              68a0 0099  ld   $99         ;0af3 ADDW
              68a1 0040  ld   $40         ;0af3 'i'
              68a2 0093  ld   $93         ;0af5 INC
              68a3 0036  ld   $36         ;0af5 'Active'
              68a4 0090  ld   $90         ;0af7 BRA
              68a5 00d9  ld   $d9
              68a6 0021  ld   $21         ;0af9 LDW
              68a7 003c  ld   $3c         ;0af9 'Value'
              68a8 00ff  ld   $ff         ;0afb RET
              68a9 0093  ld   $93         ;0afc INC
              68aa 001b  ld   $1b
              68ab 00ff  ld   $ff         ;0afe RET
              68ac 000b  ld   $0b         ;| RAM segment address (high byte first)
              68ad 00a0  ld   $a0         ;|
              68ae 0060  ld   $60         ;| Length (1..256)
              68af 002b  ld   $2b         ;0ba0 STW
              68b0 0032  ld   $32         ;0ba0 'Number'
              68b1 00cd  ld   $cd         ;0ba2 DEF
              68b2 00d1  ld   $d1
              68b3 0021  ld   $21         ;0ba4 LDW
              68b4 0036  ld   $36         ;0ba4 'Active'
              68b5 00ad  ld   $ad         ;0ba6 PEEK
              68b6 0035  ld   $35         ;0ba7 BCC
              68b7 003f  ld   $3f         ;0ba8 EQ
              68b8 00b3  ld   $b3
              68b9 008c  ld   $8c         ;0baa XORI
              68ba 003a  ld   $3a
              68bb 0035  ld   $35         ;0bac BCC
              68bc 0072  ld   $72         ;0bad NE
              68bd 00b1  ld   $b1
              68be 0093  ld   $93         ;0baf INC
              68bf 0036  ld   $36         ;0baf 'Active'
              68c0 00cf  ld   $cf         ;0bb1 CALL
              68c1 0066  ld   $66         ;0bb1 'Statements'
              68c2 00cf  ld   $cf         ;0bb3 CALL
              68c3 004a  ld   $4a         ;0bb3 'SyntaxError'
              68c4 0021  ld   $21         ;0bb5 LDW
              68c5 0036  ld   $36         ;0bb5 'Active'
              68c6 00cf  ld   $cf         ;0bb7 CALL
              68c7 0070  ld   $70         ;0bb7 'NextBlock'
              68c8 002b  ld   $2b         ;0bb9 STW
              68c9 0036  ld   $36         ;0bb9 'Active'
              68ca 00fc  ld   $fc         ;0bbb XORW
              68cb 0048  ld   $48         ;0bbb 'End'
              68cc 0035  ld   $35         ;0bbd BCC
              68cd 003f  ld   $3f         ;0bbe EQ
              68ce 00ce  ld   $ce
              68cf 0011  ld   $11         ;0bc0 LDWI
              68d0 00c0  ld   $c0
              68d1 001b  ld   $1b
              68d2 00fc  ld   $fc         ;0bc3 XORW
              68d3 0036  ld   $36         ;0bc3 'Active'
              68d4 0035  ld   $35         ;0bc5 BCC
              68d5 003f  ld   $3f         ;0bc6 EQ
              68d6 00ce  ld   $ce
              68d7 0021  ld   $21         ;0bc8 LDW
              68d8 0036  ld   $36         ;0bc8 'Active'
              68d9 00e3  ld   $e3         ;0bca ADDI
              68da 0002  ld   $02
              68db 002b  ld   $2b         ;0bcc STW
              68dc 0036  ld   $36         ;0bcc 'Active'
              68dd 00cf  ld   $cf         ;0bce CALL
              68de 0066  ld   $66         ;0bce 'Statements'
              68df 00cf  ld   $cf         ;0bd0 CALL
              68e0 0056  ld   $56         ;0bd0 'Prompt'
              68e1 0000  ld   $00         ;0bd2 0
              68e2 002b  ld   $2b         ;0bd3 STW
              68e3 0062  ld   $62         ;0bd3 'EndOfLine'
              68e4 00cd  ld   $cd         ;0bd5 DEF
              68e5 00fb  ld   $fb
              68e6 0021  ld   $21         ;0bd7 LDW
              68e7 0000  ld   $00
              68e8 002b  ld   $2b         ;0bd9 STW
              68e9 0040  ld   $40         ;0bd9 'i'
              68ea 0059  ld   $59         ;0bdb LDI
              68eb 0002  ld   $02
              68ec 002b  ld   $2b         ;0bdd STW
              68ed 006a  ld   $6a         ;0bdd 'j'
              68ee 0021  ld   $21         ;0bdf LDW
              68ef 0040  ld   $40         ;0bdf 'i'
              68f0 00e6  ld   $e6         ;0be1 SUBI
              68f1 0036  ld   $36
              68f2 002b  ld   $2b         ;0be3 STW
              68f3 0040  ld   $40         ;0be3 'i'
              68f4 0059  ld   $59         ;0be5 LDI
              68f5 0000  ld   $00
              68f6 00f0  ld   $f0         ;0be7 POKE
              68f7 0040  ld   $40         ;0be7 'i'
              68f8 0093  ld   $93         ;0be9 INC
              68f9 0040  ld   $40         ;0be9 'i'
              68fa 001a  ld   $1a         ;0beb LD
              68fb fe00  bra  ac          ;+-----------------------------------+
              68fc fcfd  bra  $68fd       ;|                                   |
              68fd 1418  ld   $18,y       ;| Trampoline for page $6800 lookups |
              68fe e006  jmp  y,$06       ;|                                   |
              68ff c218  st   [$18]       ;+-----------------------------------+
              6900 0040  ld   $40         ;0beb 'i'
              6901 0035  ld   $35         ;0bed BCC
              6902 0072  ld   $72         ;0bee NE
              6903 00e3  ld   $e3
              6904 0021  ld   $21         ;0bf0 LDW
              6905 006a  ld   $6a         ;0bf0 'j'
              6906 00e6  ld   $e6         ;0bf2 SUBI
              6907 0001  ld   $01
              6908 0035  ld   $35         ;0bf4 BCC
              6909 0072  ld   $72         ;0bf5 NE
              690a 00db  ld   $db
              690b 0011  ld   $11         ;0bf7 LDWI
              690c 00c0  ld   $c0
              690d 001b  ld   $1b
              690e 002b  ld   $2b         ;0bfa STW
              690f 006c  ld   $6c         ;0bfa 'Begin'
              6910 00ff  ld   $ff         ;0bfc RET
              6911 0093  ld   $93         ;0bfd INC
              6912 001b  ld   $1b
              6913 00ff  ld   $ff         ;0bff RET
              6914 000c  ld   $0c         ;| RAM segment address (high byte first)
              6915 00a0  ld   $a0         ;|
              6916 0060  ld   $60         ;| Length (1..256)
              6917 002b  ld   $2b         ;0ca0 STW
              6918 0078  ld   $78         ;0ca0 'Clear'
              6919 00cd  ld   $cd         ;0ca2 DEF
              691a 00ed  ld   $ed
              691b 0075  ld   $75         ;0ca4 PUSH
              691c 001a  ld   $1a         ;0ca5 LD
              691d 001c  ld   $1c
              691e 00e6  ld   $e6         ;0ca7 SUBI
              691f 008d  ld   $8d
              6920 0035  ld   $35         ;0ca9 BCC
              6921 0053  ld   $53         ;0caa GE
              6922 00ac  ld   $ac
              6923 00cf  ld   $cf         ;0cac CALL
              6924 0060  ld   $60         ;0cac 'StackError'
              6925 00cf  ld   $cf         ;0cae CALL
              6926 0038  ld   $38         ;0cae 'Keyword'
              6927 002d  ld   $2d         ;0cb0 '-'
              6928 0000  ld   $00         ;0cb1 0
              6929 0035  ld   $35         ;0cb2 BCC
              692a 003f  ld   $3f         ;0cb3 EQ
              692b 00bb  ld   $bb
              692c 00cf  ld   $cf         ;0cb5 CALL
              692d 007a  ld   $7a         ;0cb5 'Term'
              692e 0059  ld   $59         ;0cb7 LDI
              692f 0000  ld   $00
              6930 00b8  ld   $b8         ;0cb9 SUBW
              6931 003c  ld   $3c         ;0cb9 'Value'
              6932 0090  ld   $90         ;0cbb BRA
              6933 00c1  ld   $c1
              6934 00cf  ld   $cf         ;0cbd CALL
              6935 0038  ld   $38         ;0cbd 'Keyword'
              6936 002b  ld   $2b         ;0cbf '+'
              6937 0000  ld   $00         ;0cc0 0
              6938 00cf  ld   $cf         ;0cc1 CALL
              6939 007a  ld   $7a         ;0cc1 'Term'
              693a 0075  ld   $75         ;0cc3 PUSH
              693b 00ec  ld   $ec         ;0cc4 STLW
              693c 0000  ld   $00
              693d 00cf  ld   $cf         ;0cc6 CALL
              693e 0038  ld   $38         ;0cc6 'Keyword'
              693f 002b  ld   $2b         ;0cc8 '+'
              6940 0000  ld   $00         ;0cc9 0
              6941 0035  ld   $35         ;0cca BCC
              6942 003f  ld   $3f         ;0ccb EQ
              6943 00d5  ld   $d5
              6944 00cf  ld   $cf         ;0ccd CALL
              6945 007a  ld   $7a         ;0ccd 'Term'
              6946 00ee  ld   $ee         ;0ccf LDLW
              6947 0000  ld   $00
              6948 0099  ld   $99         ;0cd1 ADDW
              6949 003c  ld   $3c         ;0cd1 'Value'
              694a 00ec  ld   $ec         ;0cd3 STLW
              694b 0000  ld   $00
              694c 0090  ld   $90         ;0cd5 BRA
              694d 00c4  ld   $c4
              694e 00cf  ld   $cf         ;0cd7 CALL
              694f 0038  ld   $38         ;0cd7 'Keyword'
              6950 002d  ld   $2d         ;0cd9 '-'
              6951 0000  ld   $00         ;0cda 0
              6952 0035  ld   $35         ;0cdb BCC
              6953 003f  ld   $3f         ;0cdc EQ
              6954 00e6  ld   $e6
              6955 00cf  ld   $cf         ;0cde CALL
              6956 007a  ld   $7a         ;0cde 'Term'
              6957 00ee  ld   $ee         ;0ce0 LDLW
              6958 0000  ld   $00
              6959 00b8  ld   $b8         ;0ce2 SUBW
              695a 003c  ld   $3c         ;0ce2 'Value'
              695b 00ec  ld   $ec         ;0ce4 STLW
              695c 0000  ld   $00
              695d 0090  ld   $90         ;0ce6 BRA
              695e 00c4  ld   $c4
              695f 00ee  ld   $ee         ;0ce8 LDLW
              6960 0000  ld   $00
              6961 002b  ld   $2b         ;0cea STW
              6962 003c  ld   $3c         ;0cea 'Value'
              6963 0063  ld   $63         ;0cec POP
              6964 0063  ld   $63         ;0ced POP
              6965 00ff  ld   $ff         ;0cee RET
              6966 002b  ld   $2b         ;0cef STW
              6967 003a  ld   $3a         ;0cef 'Expression'
              6968 00cd  ld   $cd         ;0cf1 DEF
              6969 00f9  ld   $f9
              696a 00cf  ld   $cf         ;0cf3 CALL
              696b 0056  ld   $56         ;0cf3 'Prompt'
              696c 0056  ld   $56         ;0cf5 'V'
              696d 0061  ld   $61         ;0cf6 'a'
              696e 006c  ld   $6c         ;0cf7 'l'
              696f 0075  ld   $75         ;0cf8 'u'
              6970 0065  ld   $65         ;0cf9 'e'
              6971 0000  ld   $00         ;0cfa 0
              6972 002b  ld   $2b         ;0cfb STW
              6973 0046  ld   $46         ;0cfb 'ValueError'
              6974 0093  ld   $93         ;0cfd INC
              6975 001b  ld   $1b
              6976 00ff  ld   $ff         ;0cff RET
              6977 000d  ld   $0d         ;| RAM segment address (high byte first)
              6978 00a0  ld   $a0         ;|
              6979 0060  ld   $60         ;| Length (1..256)
              697a 00cd  ld   $cd         ;0da0 DEF
              697b 00e4  ld   $e4
              697c 0075  ld   $75         ;0da2 PUSH
              697d 00cf  ld   $cf         ;0da3 CALL
              697e 004c  ld   $4c         ;0da3 'Factor'
              697f 0075  ld   $75         ;0da5 PUSH
              6980 0021  ld   $21         ;0da6 LDW
              6981 003c  ld   $3c         ;0da6 'Value'
              6982 00ec  ld   $ec         ;0da8 STLW
              6983 0000  ld   $00
              6984 00cf  ld   $cf         ;0daa CALL
              6985 0038  ld   $38         ;0daa 'Keyword'
              6986 002a  ld   $2a         ;0dac '*'
              6987 0000  ld   $00         ;0dad 0
              6988 0035  ld   $35         ;0dae BCC
              6989 003f  ld   $3f         ;0daf EQ
              698a 00b9  ld   $b9
              698b 00cf  ld   $cf         ;0db1 CALL
              698c 004c  ld   $4c         ;0db1 'Factor'
              698d 00ee  ld   $ee         ;0db3 LDLW
              698e 0000  ld   $00
              698f 00cf  ld   $cf         ;0db5 CALL
              6990 007c  ld   $7c         ;0db5 'Multiply'
              6991 00ec  ld   $ec         ;0db7 STLW
              6992 0000  ld   $00
              6993 0090  ld   $90         ;0db9 BRA
              6994 00a8  ld   $a8
              6995 00cf  ld   $cf         ;0dbb CALL
              6996 0038  ld   $38         ;0dbb 'Keyword'
              6997 002f  ld   $2f         ;0dbd '/'
              6998 0000  ld   $00         ;0dbe 0
              6999 0035  ld   $35         ;0dbf BCC
              699a 003f  ld   $3f         ;0dc0 EQ
              699b 00ca  ld   $ca
              699c 00cf  ld   $cf         ;0dc2 CALL
              699d 004c  ld   $4c         ;0dc2 'Factor'
              699e 00ee  ld   $ee         ;0dc4 LDLW
              699f 0000  ld   $00
              69a0 00cf  ld   $cf         ;0dc6 CALL
              69a1 003e  ld   $3e         ;0dc6 'Divide'
              69a2 00ec  ld   $ec         ;0dc8 STLW
              69a3 0000  ld   $00
              69a4 0090  ld   $90         ;0dca BRA
              69a5 00a8  ld   $a8
              69a6 00cf  ld   $cf         ;0dcc CALL
              69a7 0038  ld   $38         ;0dcc 'Keyword'
              69a8 0025  ld   $25         ;0dce '%'
              69a9 0000  ld   $00         ;0dcf 0
              69aa 0035  ld   $35         ;0dd0 BCC
              69ab 003f  ld   $3f         ;0dd1 EQ
              69ac 00dd  ld   $dd
              69ad 00cf  ld   $cf         ;0dd3 CALL
              69ae 004c  ld   $4c         ;0dd3 'Factor'
              69af 00ee  ld   $ee         ;0dd5 LDLW
              69b0 0000  ld   $00
              69b1 00cf  ld   $cf         ;0dd7 CALL
              69b2 003e  ld   $3e         ;0dd7 'Divide'
              69b3 0021  ld   $21         ;0dd9 LDW
              69b4 0040  ld   $40         ;0dd9 'i'
              69b5 00ec  ld   $ec         ;0ddb STLW
              69b6 0000  ld   $00
              69b7 0090  ld   $90         ;0ddd BRA
              69b8 00a8  ld   $a8
              69b9 00ee  ld   $ee         ;0ddf LDLW
              69ba 0000  ld   $00
              69bb 002b  ld   $2b         ;0de1 STW
              69bc 003c  ld   $3c         ;0de1 'Value'
              69bd 0063  ld   $63         ;0de3 POP
              69be 0063  ld   $63         ;0de4 POP
              69bf 00ff  ld   $ff         ;0de5 RET
              69c0 002b  ld   $2b         ;0de6 STW
              69c1 007a  ld   $7a         ;0de6 'Term'
              69c2 0093  ld   $93         ;0de8 INC
              69c3 001b  ld   $1b
              69c4 00ff  ld   $ff         ;0dea RET
              69c5 00cf  ld   $cf         ;0deb CALL
              69c6 0038  ld   $38         ;0deb 'Keyword'
              69c7 0072  ld   $72         ;0ded 'r'
              69c8 0075  ld   $75         ;0dee 'u'
              69c9 006e  ld   $6e         ;0def 'n'
              69ca 0000  ld   $00         ;0df0 0
              69cb 0035  ld   $35         ;0df1 BCC
              69cc 003f  ld   $3f         ;0df2 EQ
              69cd 00f9  ld   $f9
              69ce 00cf  ld   $cf         ;0df4 CALL
              69cf 0078  ld   $78         ;0df4 'Clear'
              69d0 00f6  ld   $f6         ;0df6 DEEK
              69d1 002b  ld   $2b         ;0df7 STW
              69d2 003c  ld   $3c         ;0df7 'Value'
              69d3 00cf  ld   $cf         ;0df9 CALL
              69d4 005e  ld   $5e         ;0df9 'GotoValue'
              69d5 0011  ld   $11         ;0dfb LDWI
              69d6 00a0  ld   $a0
              69d7 0016  ld   $16
              69d8 00cf  ld   $cf         ;0dfe CALL
              69d9 0018  ld   $18         ;0dfe vAC
              69da 000e  ld   $0e         ;| RAM segment address (high byte first)
              69db 00a0  ld   $a0         ;|
              69dc 0060  ld   $60         ;| Length (1..256)
              69dd 00cd  ld   $cd         ;0ea0 DEF
              69de 00fb  ld   $fb
              69df 002b  ld   $2b         ;0ea2 STW
              69e0 006a  ld   $6a         ;0ea2 'j'
              69e1 00fc  ld   $fc         ;0ea4 XORW
              69e2 003c  ld   $3c         ;0ea4 'Value'
              69e3 002b  ld   $2b         ;0ea6 STW
              69e4 0044  ld   $44         ;0ea6 'k'
              69e5 0021  ld   $21         ;0ea8 LDW
              69e6 006a  ld   $6a         ;0ea8 'j'
              69e7 0035  ld   $35         ;0eaa BCC
              69e8 0053  ld   $53         ;0eab GE
              69e9 00b1  ld   $b1
              69ea 0059  ld   $59         ;0ead LDI
              69eb 0000  ld   $00
              69ec 00b8  ld   $b8         ;0eaf SUBW
              69ed 006a  ld   $6a         ;0eaf 'j'
              69ee 002b  ld   $2b         ;0eb1 STW
              69ef 006a  ld   $6a         ;0eb1 'j'
              69f0 0021  ld   $21         ;0eb3 LDW
              69f1 003c  ld   $3c         ;0eb3 'Value'
              69f2 0035  ld   $35         ;0eb5 BCC
              69f3 0053  ld   $53         ;0eb6 GE
              69f4 00bc  ld   $bc
              69f5 0059  ld   $59         ;0eb8 LDI
              69f6 0000  ld   $00
              69f7 00b8  ld   $b8         ;0eba SUBW
              69f8 003c  ld   $3c         ;0eba 'Value'
              69f9 002b  ld   $2b         ;0ebc STW
              69fa 003c  ld   $3c         ;0ebc 'Value'
              69fb fe00  bra  ac          ;+-----------------------------------+
              69fc fcfd  bra  $69fd       ;|                                   |
              69fd 1418  ld   $18,y       ;| Trampoline for page $6900 lookups |
              69fe e006  jmp  y,$06       ;|                                   |
              69ff c218  st   [$18]       ;+-----------------------------------+
              6a00 0035  ld   $35         ;0ebe BCC
              6a01 0072  ld   $72         ;0ebf NE
              6a02 00c1  ld   $c1
              6a03 00cf  ld   $cf         ;0ec1 CALL
              6a04 0046  ld   $46         ;0ec1 'ValueError'
              6a05 0059  ld   $59         ;0ec3 LDI
              6a06 0000  ld   $00
              6a07 002b  ld   $2b         ;0ec5 STW
              6a08 0040  ld   $40         ;0ec5 'i'
              6a09 002b  ld   $2b         ;0ec7 STW
              6a0a 004e  ld   $4e         ;0ec7 'tmp'
              6a0b 0021  ld   $21         ;0ec9 LDW
              6a0c 0040  ld   $40         ;0ec9 'i'
              6a0d 0099  ld   $99         ;0ecb ADDW
              6a0e 0040  ld   $40         ;0ecb 'i'
              6a0f 002b  ld   $2b         ;0ecd STW
              6a10 0040  ld   $40         ;0ecd 'i'
              6a11 0021  ld   $21         ;0ecf LDW
              6a12 006a  ld   $6a         ;0ecf 'j'
              6a13 0035  ld   $35         ;0ed1 BCC
              6a14 0053  ld   $53         ;0ed2 GE
              6a15 00d4  ld   $d4
              6a16 0093  ld   $93         ;0ed4 INC
              6a17 0040  ld   $40         ;0ed4 'i'
              6a18 0021  ld   $21         ;0ed6 LDW
              6a19 006a  ld   $6a         ;0ed6 'j'
              6a1a 0099  ld   $99         ;0ed8 ADDW
              6a1b 006a  ld   $6a         ;0ed8 'j'
              6a1c 002b  ld   $2b         ;0eda STW
              6a1d 006a  ld   $6a         ;0eda 'j'
              6a1e 0021  ld   $21         ;0edc LDW
              6a1f 0040  ld   $40         ;0edc 'i'
              6a20 00b8  ld   $b8         ;0ede SUBW
              6a21 003c  ld   $3c         ;0ede 'Value'
              6a22 0035  ld   $35         ;0ee0 BCC
              6a23 0050  ld   $50         ;0ee1 LT
              6a24 00e5  ld   $e5
              6a25 002b  ld   $2b         ;0ee3 STW
              6a26 0040  ld   $40         ;0ee3 'i'
              6a27 0093  ld   $93         ;0ee5 INC
              6a28 006a  ld   $6a         ;0ee5 'j'
              6a29 0021  ld   $21         ;0ee7 LDW
              6a2a 004e  ld   $4e         ;0ee7 'tmp'
              6a2b 00e3  ld   $e3         ;0ee9 ADDI
              6a2c 0001  ld   $01
              6a2d 0082  ld   $82         ;0eeb ANDI
              6a2e 000f  ld   $0f
              6a2f 0035  ld   $35         ;0eed BCC
              6a30 0072  ld   $72         ;0eee NE
              6a31 00c5  ld   $c5
              6a32 0021  ld   $21         ;0ef0 LDW
              6a33 0044  ld   $44         ;0ef0 'k'
              6a34 0035  ld   $35         ;0ef2 BCC
              6a35 0053  ld   $53         ;0ef3 GE
              6a36 00f8  ld   $f8
              6a37 0059  ld   $59         ;0ef5 LDI
              6a38 0000  ld   $00
              6a39 00b8  ld   $b8         ;0ef7 SUBW
              6a3a 006a  ld   $6a         ;0ef7 'j'
              6a3b 00ff  ld   $ff         ;0ef9 RET
              6a3c 0021  ld   $21         ;0efa LDW
              6a3d 006a  ld   $6a         ;0efa 'j'
              6a3e 00ff  ld   $ff         ;0efc RET
              6a3f 0093  ld   $93         ;0efd INC
              6a40 001b  ld   $1b
              6a41 00ff  ld   $ff         ;0eff RET
              6a42 000f  ld   $0f         ;| RAM segment address (high byte first)
              6a43 00a0  ld   $a0         ;|
              6a44 005e  ld   $5e         ;| Length (1..256)
              6a45 002b  ld   $2b         ;0fa0 STW
              6a46 003e  ld   $3e         ;0fa0 'Divide'
              6a47 00cd  ld   $cd         ;0fa2 DEF
              6a48 00c7  ld   $c7
              6a49 002b  ld   $2b         ;0fa4 STW
              6a4a 004e  ld   $4e         ;0fa4 'tmp'
              6a4b 0059  ld   $59         ;0fa6 LDI
              6a4c 0000  ld   $00
              6a4d 002b  ld   $2b         ;0fa8 STW
              6a4e 006a  ld   $6a         ;0fa8 'j'
              6a4f 0059  ld   $59         ;0faa LDI
              6a50 0001  ld   $01
              6a51 002b  ld   $2b         ;0fac STW
              6a52 0040  ld   $40         ;0fac 'i'
              6a53 00f8  ld   $f8         ;0fae ANDW
              6a54 004e  ld   $4e         ;0fae 'tmp'
              6a55 0035  ld   $35         ;0fb0 BCC
              6a56 003f  ld   $3f         ;0fb1 EQ
              6a57 00b7  ld   $b7
              6a58 0021  ld   $21         ;0fb3 LDW
              6a59 006a  ld   $6a         ;0fb3 'j'
              6a5a 0099  ld   $99         ;0fb5 ADDW
              6a5b 003c  ld   $3c         ;0fb5 'Value'
              6a5c 002b  ld   $2b         ;0fb7 STW
              6a5d 006a  ld   $6a         ;0fb7 'j'
              6a5e 0021  ld   $21         ;0fb9 LDW
              6a5f 003c  ld   $3c         ;0fb9 'Value'
              6a60 0099  ld   $99         ;0fbb ADDW
              6a61 003c  ld   $3c         ;0fbb 'Value'
              6a62 002b  ld   $2b         ;0fbd STW
              6a63 003c  ld   $3c         ;0fbd 'Value'
              6a64 0021  ld   $21         ;0fbf LDW
              6a65 0040  ld   $40         ;0fbf 'i'
              6a66 0099  ld   $99         ;0fc1 ADDW
              6a67 0040  ld   $40         ;0fc1 'i'
              6a68 0035  ld   $35         ;0fc3 BCC
              6a69 0072  ld   $72         ;0fc4 NE
              6a6a 00aa  ld   $aa
              6a6b 0021  ld   $21         ;0fc6 LDW
              6a6c 006a  ld   $6a         ;0fc6 'j'
              6a6d 00ff  ld   $ff         ;0fc8 RET
              6a6e 002b  ld   $2b         ;0fc9 STW
              6a6f 007c  ld   $7c         ;0fc9 'Multiply'
              6a70 00cd  ld   $cd         ;0fcb DEF
              6a71 00e6  ld   $e6
              6a72 0021  ld   $21         ;0fcd LDW
              6a73 0000  ld   $00
              6a74 002b  ld   $2b         ;0fcf STW
              6a75 0040  ld   $40         ;0fcf 'i'
              6a76 0021  ld   $21         ;0fd1 LDW
              6a77 0036  ld   $36         ;0fd1 'Active'
              6a78 00ad  ld   $ad         ;0fd3 PEEK
              6a79 0082  ld   $82         ;0fd4 ANDI
              6a7a 005f  ld   $5f
              6a7b 00e6  ld   $e6         ;0fd6 SUBI
              6a7c 0040  ld   $40
              6a7d 0035  ld   $35         ;0fd8 BCC
              6a7e 0050  ld   $50         ;0fd9 LT
              6a7f 00e4  ld   $e4
              6a80 00e6  ld   $e6         ;0fdb SUBI
              6a81 001b  ld   $1b
              6a82 0035  ld   $35         ;0fdd BCC
              6a83 0053  ld   $53         ;0fde GE
              6a84 00e4  ld   $e4
              6a85 0093  ld   $93         ;0fe0 INC
              6a86 0036  ld   $36         ;0fe0 'Active'
              6a87 00e9  ld   $e9         ;0fe2 LSLW
              6a88 0099  ld   $99         ;0fe3 ADDW
              6a89 0040  ld   $40         ;0fe3 'i'
              6a8a 00ff  ld   $ff         ;0fe5 RET
              6a8b 00cf  ld   $cf         ;0fe6 CALL
              6a8c 004a  ld   $4a         ;0fe6 'SyntaxError'
              6a8d 002b  ld   $2b         ;0fe8 STW
              6a8e 0042  ld   $42         ;0fe8 'Variable'
              6a8f 00cd  ld   $cd         ;0fea DEF
              6a90 00f7  ld   $f7
              6a91 0021  ld   $21         ;0fec LDW
              6a92 0036  ld   $36         ;0fec 'Active'
              6a93 00ad  ld   $ad         ;0fee PEEK
              6a94 008c  ld   $8c         ;0fef XORI
              6a95 0020  ld   $20
              6a96 0035  ld   $35         ;0ff1 BCC
              6a97 0072  ld   $72         ;0ff2 NE
              6a98 00f6  ld   $f6
              6a99 0093  ld   $93         ;0ff4 INC
              6a9a 0036  ld   $36         ;0ff4 'Active'
              6a9b 0090  ld   $90         ;0ff6 BRA
              6a9c 00ea  ld   $ea
              6a9d 00ff  ld   $ff         ;0ff8 RET
              6a9e 002b  ld   $2b         ;0ff9 STW
              6a9f 0034  ld   $34         ;0ff9 'Spaces'
              6aa0 0093  ld   $93         ;0ffb INC
              6aa1 001b  ld   $1b
              6aa2 00ff  ld   $ff         ;0ffd RET
              6aa3 0010  ld   $10         ;| RAM segment address (high byte first)
              6aa4 00a0  ld   $a0         ;|
              6aa5 0060  ld   $60         ;| Length (1..256)
              6aa6 00cd  ld   $cd         ;10a0 DEF
              6aa7 00fb  ld   $fb
              6aa8 0075  ld   $75         ;10a2 PUSH
              6aa9 0021  ld   $21         ;10a3 LDW
              6aaa 006c  ld   $6c         ;10a3 'Begin'
              6aab 002b  ld   $2b         ;10a5 STW
              6aac 006a  ld   $6a         ;10a5 'j'
              6aad 00fc  ld   $fc         ;10a7 XORW
              6aae 0048  ld   $48         ;10a7 'End'
              6aaf 0035  ld   $35         ;10a9 BCC
              6ab0 003f  ld   $3f         ;10aa EQ
              6ab1 00c9  ld   $c9
              6ab2 00cf  ld   $cf         ;10ac CALL
              6ab3 0058  ld   $58         ;10ac 'TestBreak'
              6ab4 0021  ld   $21         ;10ae LDW
              6ab5 006a  ld   $6a         ;10ae 'j'
              6ab6 00f6  ld   $f6         ;10b0 DEEK
              6ab7 002b  ld   $2b         ;10b1 STW
              6ab8 003c  ld   $3c         ;10b1 'Value'
              6ab9 00cf  ld   $cf         ;10b3 CALL
              6aba 0076  ld   $76         ;10b3 'PrintValue'
              6abb 0093  ld   $93         ;10b5 INC
              6abc 006a  ld   $6a         ;10b5 'j'
              6abd 0093  ld   $93         ;10b7 INC
              6abe 006a  ld   $6a         ;10b7 'j'
              6abf 0021  ld   $21         ;10b9 LDW
              6ac0 006a  ld   $6a         ;10b9 'j'
              6ac1 00ad  ld   $ad         ;10bb PEEK
              6ac2 0035  ld   $35         ;10bc BCC
              6ac3 003f  ld   $3f         ;10bd EQ
              6ac4 00c1  ld   $c1
              6ac5 00cf  ld   $cf         ;10bf CALL
              6ac6 0050  ld   $50         ;10bf 'PrintChar'
              6ac7 0090  ld   $90         ;10c1 BRA
              6ac8 00b5  ld   $b5
              6ac9 00cf  ld   $cf         ;10c3 CALL
              6aca 005a  ld   $5a         ;10c3 'Newline'
              6acb 0021  ld   $21         ;10c5 LDW
              6acc 006a  ld   $6a         ;10c5 'j'
              6acd 00cf  ld   $cf         ;10c7 CALL
              6ace 0070  ld   $70         ;10c7 'NextBlock'
              6acf 0090  ld   $90         ;10c9 BRA
              6ad0 00a3  ld   $a3
              6ad1 002b  ld   $2b         ;10cb STW
              6ad2 003c  ld   $3c         ;10cb 'Value'
              6ad3 0021  ld   $21         ;10cd LDW
              6ad4 0000  ld   $00
              6ad5 00e6  ld   $e6         ;10cf SUBI
              6ad6 0080  ld   $80
              6ad7 00e6  ld   $e6         ;10d1 SUBI
              6ad8 00c0  ld   $c0
              6ad9 00fc  ld   $fc         ;10d3 XORW
              6ada 006a  ld   $6a         ;10d3 'j'
              6adb 0035  ld   $35         ;10d5 BCC
              6adc 003f  ld   $3f         ;10d6 EQ
              6add 00e2  ld   $e2
              6ade 0021  ld   $21         ;10d8 LDW
              6adf 006a  ld   $6a         ;10d8 'j'
              6ae0 00cf  ld   $cf         ;10da CALL
              6ae1 0070  ld   $70         ;10da 'NextBlock'
              6ae2 002b  ld   $2b         ;10dc STW
              6ae3 006a  ld   $6a         ;10dc 'j'
              6ae4 0021  ld   $21         ;10de LDW
              6ae5 003c  ld   $3c         ;10de 'Value'
              6ae6 00e3  ld   $e3         ;10e0 ADDI
              6ae7 0020  ld   $20
              6ae8 0090  ld   $90         ;10e2 BRA
              6ae9 00c9  ld   $c9
              6aea 0021  ld   $21         ;10e4 LDW
              6aeb 0050  ld   $50         ;10e4 'PrintChar'
              6aec 00fc  ld   $fc         ;10e6 XORW
              6aed 0054  ld   $54         ;10e6 'PrintCharScreen'
              6aee 0035  ld   $35         ;10e8 BCC
              6aef 0072  ld   $72         ;10e9 NE
              6af0 00f9  ld   $f9
              6af1 00cf  ld   $cf         ;10eb CALL
              6af2 0076  ld   $76         ;10eb 'PrintValue'
              6af3 00cf  ld   $cf         ;10ed CALL
              6af4 0052  ld   $52         ;10ed 'PrintS'
              6af5 0020  ld   $20         ;10ef ' '
              6af6 0062  ld   $62         ;10f0 'b'
              6af7 0079  ld   $79         ;10f1 'y'
              6af8 0074  ld   $74         ;10f2 't'
              6af9 0065  ld   $65         ;10f3 'e'
              6afa 0073  ld   $73         ;10f4 's'
              6afb fe00  bra  ac          ;+-----------------------------------+
              6afc fcfd  bra  $6afd       ;|                                   |
              6afd 1418  ld   $18,y       ;| Trampoline for page $6a00 lookups |
              6afe e006  jmp  y,$06       ;|                                   |
              6aff c218  st   [$18]       ;+-----------------------------------+
              6b00 0020  ld   $20         ;10f5 ' '
              6b01 0066  ld   $66         ;10f6 'f'
              6b02 0072  ld   $72         ;10f7 'r'
              6b03 0065  ld   $65         ;10f8 'e'
              6b04 0065  ld   $65         ;10f9 'e'
              6b05 0000  ld   $00         ;10fa 0
              6b06 0063  ld   $63         ;10fb POP
              6b07 00ff  ld   $ff         ;10fc RET
              6b08 0093  ld   $93         ;10fd INC
              6b09 001b  ld   $1b
              6b0a 00ff  ld   $ff         ;10ff RET
              6b0b 0011  ld   $11         ;| RAM segment address (high byte first)
              6b0c 00a0  ld   $a0         ;|
              6b0d 0060  ld   $60         ;| Length (1..256)
              6b0e 002b  ld   $2b         ;11a0 STW
              6b0f 007e  ld   $7e         ;11a0 'List'
              6b10 00cd  ld   $cd         ;11a2 DEF
              6b11 00c1  ld   $c1
              6b12 0075  ld   $75         ;11a4 PUSH
              6b13 002b  ld   $2b         ;11a5 STW
              6b14 0040  ld   $40         ;11a5 'i'
              6b15 0021  ld   $21         ;11a7 LDW
              6b16 003c  ld   $3c         ;11a7 'Value'
              6b17 00b8  ld   $b8         ;11a9 SUBW
              6b18 0040  ld   $40         ;11a9 'i'
              6b19 0035  ld   $35         ;11ab BCC
              6b1a 0050  ld   $50         ;11ac LT
              6b1b 00b2  ld   $b2
              6b1c 002b  ld   $2b         ;11ae STW
              6b1d 003c  ld   $3c         ;11ae 'Value'
              6b1e 0093  ld   $93         ;11b0 INC
              6b1f 0044  ld   $44         ;11b0 'k'
              6b20 0090  ld   $90         ;11b2 BRA
              6b21 00a7  ld   $a7
              6b22 0021  ld   $21         ;11b4 LDW
              6b23 0044  ld   $44         ;11b4 'k'
              6b24 0035  ld   $35         ;11b6 BCC
              6b25 003f  ld   $3f         ;11b7 EQ
              6b26 00bf  ld   $bf
              6b27 0088  ld   $88         ;11b9 ORI
              6b28 0030  ld   $30
              6b29 00cf  ld   $cf         ;11bb CALL
              6b2a 0050  ld   $50         ;11bb 'PrintChar'
              6b2b 0059  ld   $59         ;11bd LDI
              6b2c 0030  ld   $30
              6b2d 002b  ld   $2b         ;11bf STW
              6b2e 0044  ld   $44         ;11bf 'k'
              6b2f 0063  ld   $63         ;11c1 POP
              6b30 00ff  ld   $ff         ;11c2 RET
              6b31 002b  ld   $2b         ;11c3 STW
              6b32 0074  ld   $74         ;11c3 'PrintDigit'
              6b33 00cd  ld   $cd         ;11c5 DEF
              6b34 00f1  ld   $f1
              6b35 0075  ld   $75         ;11c7 PUSH
              6b36 0059  ld   $59         ;11c8 LDI
              6b37 0000  ld   $00
              6b38 002b  ld   $2b         ;11ca STW
              6b39 0044  ld   $44         ;11ca 'k'
              6b3a 00cf  ld   $cf         ;11cc CALL
              6b3b 0038  ld   $38         ;11cc 'Keyword'
              6b3c 003c  ld   $3c         ;11ce '<'
              6b3d 0000  ld   $00         ;11cf 0
              6b3e 0035  ld   $35         ;11d0 BCC
              6b3f 003f  ld   $3f         ;11d1 EQ
              6b40 00d3  ld   $d3
              6b41 0093  ld   $93         ;11d3 INC
              6b42 0044  ld   $44         ;11d3 'k'
              6b43 00cf  ld   $cf         ;11d5 CALL
              6b44 0038  ld   $38         ;11d5 'Keyword'
              6b45 003e  ld   $3e         ;11d7 '>'
              6b46 0000  ld   $00         ;11d8 0
              6b47 0035  ld   $35         ;11d9 BCC
              6b48 003f  ld   $3f         ;11da EQ
              6b49 00e0  ld   $e0
              6b4a 0021  ld   $21         ;11dc LDW
              6b4b 0044  ld   $44         ;11dc 'k'
              6b4c 00e3  ld   $e3         ;11de ADDI
              6b4d 0004  ld   $04
              6b4e 002b  ld   $2b         ;11e0 STW
              6b4f 0044  ld   $44         ;11e0 'k'
              6b50 00cf  ld   $cf         ;11e2 CALL
              6b51 0038  ld   $38         ;11e2 'Keyword'
              6b52 003d  ld   $3d         ;11e4 '='
              6b53 0000  ld   $00         ;11e5 0
              6b54 0035  ld   $35         ;11e6 BCC
              6b55 003f  ld   $3f         ;11e7 EQ
              6b56 00ed  ld   $ed
              6b57 0021  ld   $21         ;11e9 LDW
              6b58 0044  ld   $44         ;11e9 'k'
              6b59 00e3  ld   $e3         ;11eb ADDI
              6b5a 0002  ld   $02
              6b5b 002b  ld   $2b         ;11ed STW
              6b5c 0044  ld   $44         ;11ed 'k'
              6b5d 0021  ld   $21         ;11ef LDW
              6b5e 0044  ld   $44         ;11ef 'k'
              6b5f 0063  ld   $63         ;11f1 POP
              6b60 00ff  ld   $ff         ;11f2 RET
              6b61 002b  ld   $2b         ;11f3 STW
              6b62 0064  ld   $64         ;11f3 'RelOp'
              6b63 0011  ld   $11         ;11f5 LDWI
              6b64 00a0  ld   $a0
              6b65 001b  ld   $1b
              6b66 00f6  ld   $f6         ;11f8 DEEK
              6b67 002b  ld   $2b         ;11f9 STW
              6b68 0048  ld   $48         ;11f9 'End'
              6b69 00e3  ld   $e3         ;11fb ADDI
              6b6a 0002  ld   $02
              6b6b 0093  ld   $93         ;11fd INC
              6b6c 001b  ld   $1b
              6b6d 00ff  ld   $ff         ;11ff RET
              6b6e 0012  ld   $12         ;| RAM segment address (high byte first)
              6b6f 00a0  ld   $a0         ;|
              6b70 005d  ld   $5d         ;| Length (1..256)
              6b71 002b  ld   $2b         ;12a0 STW
              6b72 0036  ld   $36         ;12a0 'Active'
              6b73 00cd  ld   $cd         ;12a2 DEF
              6b74 00f7  ld   $f7
              6b75 0021  ld   $21         ;12a4 LDW
              6b76 001a  ld   $1a
              6b77 002b  ld   $2b         ;12a6 STW
              6b78 004e  ld   $4e         ;12a6 'tmp'
              6b79 001a  ld   $1a         ;12a8 LD
              6b7a 0030  ld   $30         ;12a8 'Pos'
              6b7b 00e6  ld   $e6         ;12aa SUBI
              6b7c 0002  ld   $02
              6b7d 0035  ld   $35         ;12ac BCC
              6b7e 0056  ld   $56         ;12ad LE
              6b7f 00af  ld   $af
              6b80 00cf  ld   $cf         ;12af CALL
              6b81 005a  ld   $5a         ;12af 'Newline'
              6b82 0059  ld   $59         ;12b1 LDI
              6b83 0000  ld   $00
              6b84 005e  ld   $5e         ;12b3 ST
              6b85 001c  ld   $1c
              6b86 0021  ld   $21         ;12b5 LDW
              6b87 004e  ld   $4e         ;12b5 'tmp'
              6b88 00ad  ld   $ad         ;12b7 PEEK
              6b89 0035  ld   $35         ;12b8 BCC
              6b8a 003f  ld   $3f         ;12b9 EQ
              6b8b 00e3  ld   $e3
              6b8c 0059  ld   $59         ;12bb LDI
              6b8d 003f  ld   $3f
              6b8e 00cf  ld   $cf         ;12bd CALL
              6b8f 0050  ld   $50         ;12bd 'PrintChar'
              6b90 0021  ld   $21         ;12bf LDW
              6b91 004e  ld   $4e         ;12bf 'tmp'
              6b92 00ad  ld   $ad         ;12c1 PEEK
              6b93 0093  ld   $93         ;12c2 INC
              6b94 004e  ld   $4e         ;12c2 'tmp'
              6b95 0035  ld   $35         ;12c4 BCC
              6b96 0072  ld   $72         ;12c5 NE
              6b97 00bb  ld   $bb
              6b98 00cf  ld   $cf         ;12c7 CALL
              6b99 0052  ld   $52         ;12c7 'PrintS'
              6b9a 0020  ld   $20         ;12c9 ' '
              6b9b 0065  ld   $65         ;12ca 'e'
              6b9c 0072  ld   $72         ;12cb 'r'
              6b9d 0072  ld   $72         ;12cc 'r'
              6b9e 006f  ld   $6f         ;12cd 'o'
              6b9f 0072  ld   $72         ;12ce 'r'
              6ba0 0000  ld   $00         ;12cf 0
              6ba1 00e6  ld   $e6         ;12d0 SUBI
              6ba2 0020  ld   $20
              6ba3 00f8  ld   $f8         ;12d2 ANDW
              6ba4 0036  ld   $36         ;12d2 'Active'
              6ba5 00f6  ld   $f6         ;12d4 DEEK
              6ba6 0035  ld   $35         ;12d5 BCC
              6ba7 003f  ld   $3f         ;12d6 EQ
              6ba8 00e1  ld   $e1
              6ba9 002b  ld   $2b         ;12d8 STW
              6baa 003c  ld   $3c         ;12d8 'Value'
              6bab 00cf  ld   $cf         ;12da CALL
              6bac 0052  ld   $52         ;12da 'PrintS'
              6bad 0020  ld   $20         ;12dc ' '
              6bae 0069  ld   $69         ;12dd 'i'
              6baf 006e  ld   $6e         ;12de 'n'
              6bb0 0020  ld   $20         ;12df ' '
              6bb1 0000  ld   $00         ;12e0 0
              6bb2 00cf  ld   $cf         ;12e1 CALL
              6bb3 0076  ld   $76         ;12e1 'PrintValue'
              6bb4 00cf  ld   $cf         ;12e3 CALL
              6bb5 005a  ld   $5a         ;12e3 'Newline'
              6bb6 00cf  ld   $cf         ;12e5 CALL
              6bb7 0052  ld   $52         ;12e5 'PrintS'
              6bb8 004f  ld   $4f         ;12e7 'O'
              6bb9 006b  ld   $6b         ;12e8 'k'
              6bba 0000  ld   $00         ;12e9 0
              6bbb 00cf  ld   $cf         ;12ea CALL
              6bbc 005a  ld   $5a         ;12ea 'Newline'
              6bbd 0059  ld   $59         ;12ec LDI
              6bbe 0000  ld   $00
              6bbf 00cf  ld   $cf         ;12ee CALL
              6bc0 005c  ld   $5c         ;12ee 'GetLine'
              6bc1 0035  ld   $35         ;12f0 BCC
              6bc2 003f  ld   $3f         ;12f1 EQ
              6bc3 00ea  ld   $ea
              6bc4 00cf  ld   $cf         ;12f3 CALL
              6bc5 0072  ld   $72         ;12f3 'Insert'
              6bc6 0035  ld   $35         ;12f5 BCC
              6bc7 004d  ld   $4d         ;12f6 GT
              6bc8 00ea  ld   $ea
              6bc9 0011  ld   $11         ;12f8 785
              6bca 002b  ld   $2b         ;12f9 STW
              6bcb 0056  ld   $56         ;12f9 'Prompt'
              6bcc 00cf  ld   $cf         ;12fb CALL
              6bcd 0066  ld   $66         ;12fb 'Statements'
              6bce 0013  ld   $13         ;| RAM segment address (high byte first)
              6bcf 00a0  ld   $a0         ;|
              6bd0 0059  ld   $59         ;| Length (1..256)
              6bd1 0021  ld   $21         ;13a0 LDW
              6bd2 0036  ld   $36         ;13a0 'Active'
              6bd3 00ad  ld   $ad         ;13a2 PEEK
              6bd4 0035  ld   $35         ;13a3 BCC
              6bd5 003f  ld   $3f         ;13a4 EQ
              6bd6 00f3  ld   $f3
              6bd7 008c  ld   $8c         ;13a6 XORI
              6bd8 003a  ld   $3a
              6bd9 0035  ld   $35         ;13a8 BCC
              6bda 003f  ld   $3f         ;13a9 EQ
              6bdb 00f3  ld   $f3
              6bdc 0021  ld   $21         ;13ab LDW
              6bdd 0036  ld   $36         ;13ab 'Active'
              6bde 00ad  ld   $ad         ;13ad PEEK
              6bdf 0035  ld   $35         ;13ae BCC
              6be0 003f  ld   $3f         ;13af EQ
              6be1 00f1  ld   $f1
              6be2 008c  ld   $8c         ;13b1 XORI
              6be3 003a  ld   $3a
              6be4 0035  ld   $35         ;13b3 BCC
              6be5 003f  ld   $3f         ;13b4 EQ
              6be6 00f1  ld   $f1
              6be7 008c  ld   $8c         ;13b6 XORI
              6be8 0018  ld   $18
              6be9 0035  ld   $35         ;13b8 BCC
              6bea 0072  ld   $72         ;13b9 NE
              6beb 00ce  ld   $ce
              6bec 0093  ld   $93         ;13bb INC
              6bed 0036  ld   $36         ;13bb 'Active'
              6bee 00cf  ld   $cf         ;13bd CALL
              6bef 0038  ld   $38         ;13bd 'Keyword'
              6bf0 0022  ld   $22         ;13bf 34
              6bf1 0000  ld   $00         ;13c0 0
              6bf2 0035  ld   $35         ;13c1 BCC
              6bf3 0072  ld   $72         ;13c2 NE
              6bf4 00cc  ld   $cc
              6bf5 0021  ld   $21         ;13c4 LDW
              6bf6 0036  ld   $36         ;13c4 'Active'
              6bf7 00ad  ld   $ad         ;13c6 PEEK
              6bf8 0035  ld   $35         ;13c7 BCC
              6bf9 003f  ld   $3f         ;13c8 EQ
              6bfa 00cc  ld   $cc
              6bfb fe00  bra  ac          ;+-----------------------------------+
              6bfc fcfd  bra  $6bfd       ;|                                   |
              6bfd 1418  ld   $18,y       ;| Trampoline for page $6b00 lookups |
              6bfe e006  jmp  y,$06       ;|                                   |
              6bff c218  st   [$18]       ;+-----------------------------------+
              6c00 00cf  ld   $cf         ;13ca CALL
              6c01 0050  ld   $50         ;13ca 'PrintChar'
              6c02 0090  ld   $90         ;13cc BRA
              6c03 00b9  ld   $b9
              6c04 0090  ld   $90         ;13ce BRA
              6c05 00d2  ld   $d2
              6c06 00cf  ld   $cf         ;13d0 CALL
              6c07 003a  ld   $3a         ;13d0 'Expression'
              6c08 00cf  ld   $cf         ;13d2 CALL
              6c09 0076  ld   $76         ;13d2 'PrintValue'
              6c0a 00cf  ld   $cf         ;13d4 CALL
              6c0b 0038  ld   $38         ;13d4 'Keyword'
              6c0c 002c  ld   $2c         ;13d6 44
              6c0d 0000  ld   $00         ;13d7 0
              6c0e 0035  ld   $35         ;13d8 BCC
              6c0f 003f  ld   $3f         ;13d9 EQ
              6c10 00e8  ld   $e8
              6c11 0059  ld   $59         ;13db LDI
              6c12 0020  ld   $20
              6c13 00cf  ld   $cf         ;13dd CALL
              6c14 0050  ld   $50         ;13dd 'PrintChar'
              6c15 001a  ld   $1a         ;13df LD
              6c16 0030  ld   $30         ;13df 'Pos'
              6c17 00e6  ld   $e6         ;13e1 SUBI
              6c18 0002  ld   $02
              6c19 0082  ld   $82         ;13e3 ANDI
              6c1a 0007  ld   $07
              6c1b 0035  ld   $35         ;13e5 BCC
              6c1c 0072  ld   $72         ;13e6 NE
              6c1d 00d9  ld   $d9
              6c1e 0090  ld   $90         ;13e8 BRA
              6c1f 00a9  ld   $a9
              6c20 00cf  ld   $cf         ;13ea CALL
              6c21 0038  ld   $38         ;13ea 'Keyword'
              6c22 003b  ld   $3b         ;13ec 59
              6c23 0000  ld   $00         ;13ed 0
              6c24 0035  ld   $35         ;13ee BCC
              6c25 0072  ld   $72         ;13ef NE
              6c26 00a9  ld   $a9
              6c27 00cf  ld   $cf         ;13f1 CALL
              6c28 005a  ld   $5a         ;13f1 'Newline'
              6c29 0090  ld   $90         ;13f3 BRA
              6c2a 00f5  ld   $f5
              6c2b 00cf  ld   $cf         ;13f5 CALL
              6c2c 005a  ld   $5a         ;13f5 'Newline'
              6c2d 00cf  ld   $cf         ;13f7 CALL
              6c2e 0062  ld   $62         ;13f7 'EndOfLine'
              6c2f 0014  ld   $14         ;| RAM segment address (high byte first)
              6c30 00a0  ld   $a0         ;|
              6c31 005f  ld   $5f         ;| Length (1..256)
              6c32 00cf  ld   $cf         ;14a0 CALL
              6c33 0038  ld   $38         ;14a0 'Keyword'
              6c34 003f  ld   $3f         ;14a2 '?'
              6c35 0000  ld   $00         ;14a3 0
              6c36 0035  ld   $35         ;14a4 BCC
              6c37 0072  ld   $72         ;14a5 NE
              6c38 00ad  ld   $ad
              6c39 00cf  ld   $cf         ;14a7 CALL
              6c3a 0038  ld   $38         ;14a7 'Keyword'
              6c3b 0070  ld   $70         ;14a9 'p'
              6c3c 0072  ld   $72         ;14aa 'r'
              6c3d 0069  ld   $69         ;14ab 'i'
              6c3e 006e  ld   $6e         ;14ac 'n'
              6c3f 0074  ld   $74         ;14ad 't'
              6c40 0000  ld   $00         ;14ae 0
              6c41 0035  ld   $35         ;14af BCC
              6c42 003f  ld   $3f         ;14b0 EQ
              6c43 00b5  ld   $b5
              6c44 0011  ld   $11         ;14b2 LDWI
              6c45 00a0  ld   $a0
              6c46 0013  ld   $13
              6c47 00cf  ld   $cf         ;14b5 CALL
              6c48 0018  ld   $18         ;14b5 vAC
              6c49 00cf  ld   $cf         ;14b7 CALL
              6c4a 0038  ld   $38         ;14b7 'Keyword'
              6c4b 0069  ld   $69         ;14b9 'i'
              6c4c 006e  ld   $6e         ;14ba 'n'
              6c4d 0070  ld   $70         ;14bb 'p'
              6c4e 0075  ld   $75         ;14bc 'u'
              6c4f 0074  ld   $74         ;14bd 't'
              6c50 0000  ld   $00         ;14be 0
              6c51 0035  ld   $35         ;14bf BCC
              6c52 003f  ld   $3f         ;14c0 EQ
              6c53 00f8  ld   $f8
              6c54 0021  ld   $21         ;14c2 LDW
              6c55 0036  ld   $36         ;14c2 'Active'
              6c56 00ad  ld   $ad         ;14c4 PEEK
              6c57 00cf  ld   $cf         ;14c5 CALL
              6c58 0050  ld   $50         ;14c5 'PrintChar'
              6c59 00cf  ld   $cf         ;14c7 CALL
              6c5a 0042  ld   $42         ;14c7 'Variable'
              6c5b 002b  ld   $2b         ;14c9 STW
              6c5c 0068  ld   $68         ;14c9 'Address'
              6c5d 00cf  ld   $cf         ;14cb CALL
              6c5e 0034  ld   $34         ;14cb 'Spaces'
              6c5f 00df  ld   $df         ;14cd ALLOC
              6c60 00fc  ld   $fc
              6c61 0021  ld   $21         ;14cf LDW
              6c62 0036  ld   $36         ;14cf 'Active'
              6c63 00ec  ld   $ec         ;14d1 STLW
              6c64 0002  ld   $02
              6c65 0088  ld   $88         ;14d3 ORI
              6c66 001f  ld   $1f
              6c67 00e6  ld   $e6         ;14d5 SUBI
              6c68 001f  ld   $1f
              6c69 00f6  ld   $f6         ;14d7 DEEK
              6c6a 00ec  ld   $ec         ;14d8 STLW
              6c6b 0000  ld   $00
              6c6c 0059  ld   $59         ;14da LDI
              6c6d 003f  ld   $3f
              6c6e 00cf  ld   $cf         ;14dc CALL
              6c6f 0050  ld   $50         ;14dc 'PrintChar'
              6c70 00cf  ld   $cf         ;14de CALL
              6c71 005a  ld   $5a         ;14de 'Newline'
              6c72 00ee  ld   $ee         ;14e0 LDLW
              6c73 0000  ld   $00
              6c74 00cf  ld   $cf         ;14e2 CALL
              6c75 005c  ld   $5c         ;14e2 'GetLine'
              6c76 0035  ld   $35         ;14e4 BCC
              6c77 003f  ld   $3f         ;14e5 EQ
              6c78 00d8  ld   $d8
              6c79 00cf  ld   $cf         ;14e7 CALL
              6c7a 003a  ld   $3a         ;14e7 'Expression'
              6c7b 00f3  ld   $f3         ;14e9 DOKE
              6c7c 0068  ld   $68         ;14e9 'Address'
              6c7d 00ee  ld   $ee         ;14eb LDLW
              6c7e 0002  ld   $02
              6c7f 002b  ld   $2b         ;14ed STW
              6c80 0036  ld   $36         ;14ed 'Active'
              6c81 00df  ld   $df         ;14ef ALLOC
              6c82 0004  ld   $04
              6c83 00cf  ld   $cf         ;14f1 CALL
              6c84 0038  ld   $38         ;14f1 'Keyword'
              6c85 002c  ld   $2c         ;14f3 ','
              6c86 0000  ld   $00         ;14f4 0
              6c87 0035  ld   $35         ;14f5 BCC
              6c88 0072  ld   $72         ;14f6 NE
              6c89 00c0  ld   $c0
              6c8a 00cf  ld   $cf         ;14f8 CALL
              6c8b 0062  ld   $62         ;14f8 'EndOfLine'
              6c8c 0011  ld   $11         ;14fa LDWI
              6c8d 00a0  ld   $a0
              6c8e 0015  ld   $15
              6c8f 00cf  ld   $cf         ;14fd CALL
              6c90 0018  ld   $18         ;14fd vAC
              6c91 0015  ld   $15         ;| RAM segment address (high byte first)
              6c92 00a0  ld   $a0         ;|
              6c93 0058  ld   $58         ;| Length (1..256)
              6c94 00cf  ld   $cf         ;15a0 CALL
              6c95 0038  ld   $38         ;15a0 'Keyword'
              6c96 0063  ld   $63         ;15a2 'c'
              6c97 006c  ld   $6c         ;15a3 'l'
              6c98 0073  ld   $73         ;15a4 's'
              6c99 0000  ld   $00         ;15a5 0
              6c9a 0035  ld   $35         ;15a6 BCC
              6c9b 003f  ld   $3f         ;15a7 EQ
              6c9c 00cb  ld   $cb
              6c9d 0011  ld   $11         ;15a9 LDWI
              6c9e 0000  ld   $00
              6c9f 0001  ld   $01
              6ca0 00ad  ld   $ad         ;15ac PEEK
              6ca1 005e  ld   $5e         ;15ad ST
              6ca2 0031  ld   $31         ;15ad 'Pos'+1
              6ca3 0059  ld   $59         ;15af LDI
              6ca4 000e  ld   $0e
              6ca5 002b  ld   $2b         ;15b1 STW
              6ca6 006a  ld   $6a         ;15b1 'j'
              6ca7 00cf  ld   $cf         ;15b3 CALL
              6ca8 005a  ld   $5a         ;15b3 'Newline'
              6ca9 0021  ld   $21         ;15b5 LDW
              6caa 006a  ld   $6a         ;15b5 'j'
              6cab 00e6  ld   $e6         ;15b7 SUBI
              6cac 0001  ld   $01
              6cad 0035  ld   $35         ;15b9 BCC
              6cae 004d  ld   $4d         ;15ba GT
              6caf 00af  ld   $af
              6cb0 00cf  ld   $cf         ;15bc CALL
              6cb1 005a  ld   $5a         ;15bc 'Newline'
              6cb2 0011  ld   $11         ;15be LDWI
              6cb3 0000  ld   $00
              6cb4 0001  ld   $01
              6cb5 00ad  ld   $ad         ;15c1 PEEK
              6cb6 008c  ld   $8c         ;15c2 XORI
              6cb7 0008  ld   $08
              6cb8 0035  ld   $35         ;15c4 BCC
              6cb9 0072  ld   $72         ;15c5 NE
              6cba 00ba  ld   $ba
              6cbb 0059  ld   $59         ;15c7 LDI
              6cbc 0008  ld   $08
              6cbd 005e  ld   $5e         ;15c9 ST
              6cbe 0031  ld   $31         ;15c9 'Pos'+1
              6cbf 00cf  ld   $cf         ;15cb CALL
              6cc0 0062  ld   $62         ;15cb 'EndOfLine'
              6cc1 00cf  ld   $cf         ;15cd CALL
              6cc2 0038  ld   $38         ;15cd 'Keyword'
              6cc3 006c  ld   $6c         ;15cf 'l'
              6cc4 0069  ld   $69         ;15d0 'i'
              6cc5 0073  ld   $73         ;15d1 's'
              6cc6 0074  ld   $74         ;15d2 't'
              6cc7 0000  ld   $00         ;15d3 0
              6cc8 0035  ld   $35         ;15d4 BCC
              6cc9 003f  ld   $3f         ;15d5 EQ
              6cca 00d9  ld   $d9
              6ccb 00cf  ld   $cf         ;15d7 CALL
              6ccc 007e  ld   $7e         ;15d7 'List'
              6ccd 00cf  ld   $cf         ;15d9 CALL
              6cce 0062  ld   $62         ;15d9 'EndOfLine'
              6ccf 00cf  ld   $cf         ;15db CALL
              6cd0 0038  ld   $38         ;15db 'Keyword'
              6cd1 0073  ld   $73         ;15dd 's'
              6cd2 0061  ld   $61         ;15de 'a'
              6cd3 0076  ld   $76         ;15df 'v'
              6cd4 0065  ld   $65         ;15e0 'e'
              6cd5 0000  ld   $00         ;15e1 0
              6cd6 0035  ld   $35         ;15e2 BCC
              6cd7 003f  ld   $3f         ;15e3 EQ
              6cd8 00f1  ld   $f1
              6cd9 001a  ld   $1a         ;15e5 LD
              6cda 0021  ld   $21
              6cdb 00e6  ld   $e6         ;15e7 SUBI
              6cdc 0028  ld   $28
              6cdd 0035  ld   $35         ;15e9 BCC
              6cde 0053  ld   $53         ;15ea GE
              6cdf 00ec  ld   $ec
              6ce0 00cf  ld   $cf         ;15ec CALL
              6ce1 0046  ld   $46         ;15ec 'ValueError'
              6ce2 0011  ld   $11         ;15ee LDWI
              6ce3 00a0  ld   $a0
              6ce4 0017  ld   $17
              6ce5 00cf  ld   $cf         ;15f1 CALL
              6ce6 0018  ld   $18         ;15f1 vAC
              6ce7 0011  ld   $11         ;15f3 LDWI
              6ce8 00eb  ld   $eb
              6ce9 000d  ld   $0d
              6cea 00cf  ld   $cf         ;15f6 CALL
              6ceb 0018  ld   $18         ;15f6 vAC
              6cec 0016  ld   $16         ;| RAM segment address (high byte first)
              6ced 00a0  ld   $a0         ;|
              6cee 0060  ld   $60         ;| Length (1..256)
              6cef 00cf  ld   $cf         ;16a0 CALL
              6cf0 0038  ld   $38         ;16a0 'Keyword'
              6cf1 006e  ld   $6e         ;16a2 'n'
              6cf2 0065  ld   $65         ;16a3 'e'
              6cf3 0077  ld   $77         ;16a4 'w'
              6cf4 0000  ld   $00         ;16a5 0
              6cf5 0035  ld   $35         ;16a6 BCC
              6cf6 003f  ld   $3f         ;16a7 EQ
              6cf7 00b0  ld   $b0
              6cf8 00cf  ld   $cf         ;16a9 CALL
              6cf9 0078  ld   $78         ;16a9 'Clear'
              6cfa 002b  ld   $2b         ;16ab STW
              6cfb fe00  bra  ac          ;+-----------------------------------+
              6cfc fcfd  bra  $6cfd       ;|                                   |
              6cfd 1418  ld   $18,y       ;| Trampoline for page $6c00 lookups |
              6cfe e006  jmp  y,$06       ;|                                   |
              6cff c218  st   [$18]       ;+-----------------------------------+
              6d00 0048  ld   $48         ;16ab 'End'
              6d01 00cf  ld   $cf         ;16ad CALL
              6d02 007e  ld   $7e         ;16ad 'List'
              6d03 00cf  ld   $cf         ;16af CALL
              6d04 0056  ld   $56         ;16af 'Prompt'
              6d05 0000  ld   $00         ;16b1 0
              6d06 00cf  ld   $cf         ;16b2 CALL
              6d07 0038  ld   $38         ;16b2 'Keyword'
              6d08 006c  ld   $6c         ;16b4 'l'
              6d09 0065  ld   $65         ;16b5 'e'
              6d0a 0074  ld   $74         ;16b6 't'
              6d0b 0000  ld   $00         ;16b7 0
              6d0c 00cf  ld   $cf         ;16b8 CALL
              6d0d 0042  ld   $42         ;16b8 'Variable'
              6d0e 002b  ld   $2b         ;16ba STW
              6d0f 0068  ld   $68         ;16ba 'Address'
              6d10 00cf  ld   $cf         ;16bc CALL
              6d11 0034  ld   $34         ;16bc 'Spaces'
              6d12 00cf  ld   $cf         ;16be CALL
              6d13 0038  ld   $38         ;16be 'Keyword'
              6d14 0028  ld   $28         ;16c0 40
              6d15 0000  ld   $00         ;16c1 0
              6d16 0035  ld   $35         ;16c2 BCC
              6d17 003f  ld   $3f         ;16c3 EQ
              6d18 00ef  ld   $ef
              6d19 00cf  ld   $cf         ;16c5 CALL
              6d1a 003a  ld   $3a         ;16c5 'Expression'
              6d1b 0035  ld   $35         ;16c7 BCC
              6d1c 0053  ld   $53         ;16c8 GE
              6d1d 00ca  ld   $ca
              6d1e 00cf  ld   $cf         ;16ca CALL
              6d1f 0046  ld   $46         ;16ca 'ValueError'
              6d20 001a  ld   $1a         ;16cc LD
              6d21 0069  ld   $69         ;16cc 'Address'+1
              6d22 00b8  ld   $b8         ;16ce SUBW
              6d23 003c  ld   $3c         ;16ce 'Value'
              6d24 00e6  ld   $e6         ;16d0 SUBI
              6d25 0002  ld   $02
              6d26 005e  ld   $5e         ;16d2 ST
              6d27 0069  ld   $69         ;16d2 'Address'+1
              6d28 0021  ld   $21         ;16d4 LDW
              6d29 0048  ld   $48         ;16d4 'End'
              6d2a 00fc  ld   $fc         ;16d6 XORW
              6d2b 0068  ld   $68         ;16d6 'Address'
              6d2c 0035  ld   $35         ;16d8 BCC
              6d2d 0053  ld   $53         ;16d9 GE
              6d2e 00dd  ld   $dd
              6d2f 0021  ld   $21         ;16db LDW
              6d30 0048  ld   $48         ;16db 'End'
              6d31 0090  ld   $90         ;16dd BRA
              6d32 00e1  ld   $e1
              6d33 0021  ld   $21         ;16df LDW
              6d34 0068  ld   $68         ;16df 'Address'
              6d35 00b8  ld   $b8         ;16e1 SUBW
              6d36 0048  ld   $48         ;16e1 'End'
              6d37 0035  ld   $35         ;16e3 BCC
              6d38 0053  ld   $53         ;16e4 GE
              6d39 00e6  ld   $e6
              6d3a 00cf  ld   $cf         ;16e6 CALL
              6d3b 0046  ld   $46         ;16e6 'ValueError'
              6d3c 00cf  ld   $cf         ;16e8 CALL
              6d3d 0038  ld   $38         ;16e8 'Keyword'
              6d3e 0029  ld   $29         ;16ea 41
              6d3f 0000  ld   $00         ;16eb 0
              6d40 0035  ld   $35         ;16ec BCC
              6d41 0072  ld   $72         ;16ed NE
              6d42 00ef  ld   $ef
              6d43 00cf  ld   $cf         ;16ef CALL
              6d44 004a  ld   $4a         ;16ef 'SyntaxError'
              6d45 00cf  ld   $cf         ;16f1 CALL
              6d46 0038  ld   $38         ;16f1 'Keyword'
              6d47 003d  ld   $3d         ;16f3 '='
              6d48 0000  ld   $00         ;16f4 0
              6d49 0035  ld   $35         ;16f5 BCC
              6d4a 0072  ld   $72         ;16f6 NE
              6d4b 00f8  ld   $f8
              6d4c 00cf  ld   $cf         ;16f8 CALL
              6d4d 004a  ld   $4a         ;16f8 'SyntaxError'
              6d4e 00cf  ld   $cf         ;16fa CALL
              6d4f 003a  ld   $3a         ;16fa 'Expression'
              6d50 00f3  ld   $f3         ;16fc DOKE
              6d51 0068  ld   $68         ;16fc 'Address'
              6d52 00cf  ld   $cf         ;16fe CALL
              6d53 0062  ld   $62         ;16fe 'EndOfLine'
              6d54 0017  ld   $17         ;| RAM segment address (high byte first)
              6d55 00a0  ld   $a0         ;|
              6d56 005f  ld   $5f         ;| Length (1..256)
              6d57 0021  ld   $21         ;17a0 LDW
              6d58 0000  ld   $00
              6d59 005e  ld   $5e         ;17a2 ST
              6d5a 0027  ld   $27
              6d5b 00e6  ld   $e6         ;17a4 SUBI
              6d5c 0060  ld   $60
              6d5d 002b  ld   $2b         ;17a6 STW
              6d5e 0068  ld   $68         ;17a6 'Address'
              6d5f 00cd  ld   $cd         ;17a8 DEF
              6d60 00e8  ld   $e8
              6d61 0075  ld   $75         ;17aa PUSH
              6d62 002b  ld   $2b         ;17ab STW
              6d63 0044  ld   $44         ;17ab 'k'
              6d64 001a  ld   $1a         ;17ad LD
              6d65 0027  ld   $27
              6d66 00e3  ld   $e3         ;17af ADDI
              6d67 0008  ld   $08
              6d68 005e  ld   $5e         ;17b1 ST
              6d69 0027  ld   $27
              6d6a 001a  ld   $1a         ;17b3 LD
              6d6b 0030  ld   $30         ;17b3 'Pos'
              6d6c 00e6  ld   $e6         ;17b5 SUBI
              6d6d 0006  ld   $06
              6d6e 0035  ld   $35         ;17b7 BCC
              6d6f 0053  ld   $53         ;17b8 GE
              6d70 00de  ld   $de
              6d71 0059  ld   $59         ;17ba LDI
              6d72 000a  ld   $0a
              6d73 00f0  ld   $f0         ;17bc POKE
              6d74 0068  ld   $68         ;17bc 'Address'
              6d75 0021  ld   $21         ;17be LDW
              6d76 0068  ld   $68         ;17be 'Address'
              6d77 0088  ld   $88         ;17c0 ORI
              6d78 001f  ld   $1f
              6d79 008c  ld   $8c         ;17c2 XORI
              6d7a 001f  ld   $1f
              6d7b 002b  ld   $2b         ;17c4 STW
              6d7c 0068  ld   $68         ;17c4 'Address'
              6d7d 002b  ld   $2b         ;17c6 STW
              6d7e 0024  ld   $24
              6d7f 0059  ld   $59         ;17c8 LDI
              6d80 0001  ld   $01
              6d81 005e  ld   $5e         ;17ca ST
              6d82 0026  ld   $26
              6d83 0011  ld   $11         ;17cc LDWI
              6d84 0006  ld   $06
              6d85 000b  ld   $0b
              6d86 002b  ld   $2b         ;17cf STW
              6d87 0022  ld   $22         ;17cf '_sysFn'
              6d88 00b4  ld   $b4         ;17d1 SYS
              6d89 00e7  ld   $e7
              6d8a 0035  ld   $35         ;17d3 BCC
              6d8b 003f  ld   $3f         ;17d4 EQ
              6d8c 00da  ld   $da
              6d8d 0059  ld   $59         ;17d6 LDI
              6d8e 0003  ld   $03
              6d8f 005e  ld   $5e         ;17d8 ST
              6d90 000f  ld   $0f
              6d91 00cf  ld   $cf         ;17da CALL
              6d92 0058  ld   $58         ;17da 'TestBreak'
              6d93 0059  ld   $59         ;17dc LDI
              6d94 0008  ld   $08
              6d95 005e  ld   $5e         ;17de ST
              6d96 0027  ld   $27
              6d97 0021  ld   $21         ;17e0 LDW
              6d98 0044  ld   $44         ;17e0 'k'
              6d99 00f0  ld   $f0         ;17e2 POKE
              6d9a 0068  ld   $68         ;17e2 'Address'
              6d9b 0093  ld   $93         ;17e4 INC
              6d9c 0068  ld   $68         ;17e4 'Address'
              6d9d 00cf  ld   $cf         ;17e6 CALL
              6d9e 0054  ld   $54         ;17e6 'PrintCharScreen'
              6d9f 0063  ld   $63         ;17e8 POP
              6da0 00ff  ld   $ff         ;17e9 RET
              6da1 002b  ld   $2b         ;17ea STW
              6da2 0050  ld   $50         ;17ea 'PrintChar'
              6da3 001a  ld   $1a         ;17ec LD
              6da4 000f  ld   $0f
              6da5 008c  ld   $8c         ;17ee XORI
              6da6 00ff  ld   $ff
              6da7 0035  ld   $35         ;17f0 BCC
              6da8 0072  ld   $72         ;17f1 NE
              6da9 00ea  ld   $ea
              6daa 00cf  ld   $cf         ;17f3 CALL
              6dab 007e  ld   $7e         ;17f3 'List'
              6dac 0059  ld   $59         ;17f5 LDI
              6dad 0020  ld   $20
              6dae 00cf  ld   $cf         ;17f7 CALL
              6daf 0050  ld   $50         ;17f7 'PrintChar'
              6db0 0021  ld   $21         ;17f9 LDW
              6db1 0054  ld   $54         ;17f9 'PrintCharScreen'
              6db2 002b  ld   $2b         ;17fb STW
              6db3 0050  ld   $50         ;17fb 'PrintChar'
              6db4 00cf  ld   $cf         ;17fd CALL
              6db5 0062  ld   $62         ;17fd 'EndOfLine'
              6db6 0018  ld   $18         ;| RAM segment address (high byte first)
              6db7 00a0  ld   $a0         ;|
              6db8 0060  ld   $60         ;| Length (1..256)
              6db9 0011  ld   $11         ;18a0 LDWI
              6dba 00e1  ld   $e1
              6dbb 0004  ld   $04
              6dbc 002b  ld   $2b         ;18a3 STW
              6dbd 0022  ld   $22         ;18a3 '_sysFn'
              6dbe 0059  ld   $59         ;18a5 LDI
              6dbf 0000  ld   $00
              6dc0 005e  ld   $5e         ;18a7 ST
              6dc1 0030  ld   $30         ;18a7 'Pos'
              6dc2 005e  ld   $5e         ;18a9 ST
              6dc3 0026  ld   $26
              6dc4 001a  ld   $1a         ;18ab LD
              6dc5 0031  ld   $31         ;18ab 'Pos'+1
              6dc6 00e3  ld   $e3         ;18ad ADDI
              6dc7 000f  ld   $0f
              6dc8 0082  ld   $82         ;18af ANDI
              6dc9 0078  ld   $78
              6dca 0035  ld   $35         ;18b1 BCC
              6dcb 0072  ld   $72         ;18b2 NE
              6dcc 00b4  ld   $b4
              6dcd 0059  ld   $59         ;18b4 LDI
              6dce 0008  ld   $08
              6dcf 005e  ld   $5e         ;18b6 ST
              6dd0 0031  ld   $31         ;18b6 'Pos'+1
              6dd1 0021  ld   $21         ;18b8 LDW
              6dd2 002a  ld   $2a
              6dd3 002b  ld   $2b         ;18ba STW
              6dd4 0024  ld   $24
              6dd5 0021  ld   $21         ;18bc LDW
              6dd6 0030  ld   $30         ;18bc 'Pos'
              6dd7 002b  ld   $2b         ;18be STW
              6dd8 0028  ld   $28
              6dd9 00b4  ld   $b4         ;18c0 SYS
              6dda 00cc  ld   $cc
              6ddb 0093  ld   $93         ;18c2 INC
              6ddc 0028  ld   $28
              6ddd 00b4  ld   $b4         ;18c4 SYS
              6dde 00cc  ld   $cc
              6ddf 0093  ld   $93         ;18c6 INC
              6de0 0028  ld   $28
              6de1 001a  ld   $1a         ;18c8 LD
              6de2 0028  ld   $28
              6de3 008c  ld   $8c         ;18ca XORI
              6de4 00a0  ld   $a0
              6de5 0035  ld   $35         ;18cc BCC
              6de6 0072  ld   $72         ;18cd NE
              6de7 00be  ld   $be
              6de8 0011  ld   $11         ;18cf LDWI
              6de9 0000  ld   $00
              6dea 0001  ld   $01
              6deb 002b  ld   $2b         ;18d2 STW
              6dec 0040  ld   $40         ;18d2 'i'
              6ded 0088  ld   $88         ;18d4 ORI
              6dee 00ff  ld   $ff
              6def 00f6  ld   $f6         ;18d6 DEEK
              6df0 00b8  ld   $b8         ;18d7 SUBW
              6df1 0030  ld   $30         ;18d7 'Pos'
              6df2 001a  ld   $1a         ;18d9 LD
              6df3 0019  ld   $19
              6df4 0035  ld   $35         ;18db BCC
              6df5 0072  ld   $72         ;18dc NE
              6df6 00f9  ld   $f9
              6df7 0021  ld   $21         ;18de LDW
              6df8 0040  ld   $40         ;18de 'i'
              6df9 00e3  ld   $e3         ;18e0 ADDI
              6dfa 0010  ld   $10
              6dfb fe00  bra  ac          ;+-----------------------------------+
              6dfc fcfd  bra  $6dfd       ;|                                   |
              6dfd 1418  ld   $18,y       ;| Trampoline for page $6d00 lookups |
              6dfe e006  jmp  y,$06       ;|                                   |
              6dff c218  st   [$18]       ;+-----------------------------------+
              6e00 002b  ld   $2b         ;18e2 STW
              6e01 0024  ld   $24         ;18e2 '_sysArgs0'
              6e02 00ad  ld   $ad         ;18e4 PEEK
              6e03 005e  ld   $5e         ;18e5 ST
              6e04 0026  ld   $26
              6e05 0021  ld   $21         ;18e7 LDW
              6e06 0040  ld   $40         ;18e7 'i'
              6e07 00ad  ld   $ad         ;18e9 PEEK
              6e08 00f0  ld   $f0         ;18ea POKE
              6e09 0024  ld   $24         ;18ea '_sysArgs0'
              6e0a 001a  ld   $1a         ;18ec LD
              6e0b 0026  ld   $26
              6e0c 00f0  ld   $f0         ;18ee POKE
              6e0d 0040  ld   $40         ;18ee 'i'
              6e0e 0093  ld   $93         ;18f0 INC
              6e0f 0040  ld   $40         ;18f0 'i'
              6e10 0093  ld   $93         ;18f2 INC
              6e11 0040  ld   $40         ;18f2 'i'
              6e12 001a  ld   $1a         ;18f4 LD
              6e13 0040  ld   $40         ;18f4 'i'
              6e14 008c  ld   $8c         ;18f6 XORI
              6e15 00e0  ld   $e0
              6e16 0035  ld   $35         ;18f8 BCC
              6e17 0072  ld   $72         ;18f9 NE
              6e18 00dc  ld   $dc
              6e19 0093  ld   $93         ;18fb INC
              6e1a 0030  ld   $30         ;18fb 'Pos'
              6e1b 0093  ld   $93         ;18fd INC
              6e1c 0030  ld   $30         ;18fd 'Pos'
              6e1d 00ff  ld   $ff         ;18ff RET
              6e1e 0019  ld   $19         ;| RAM segment address (high byte first)
              6e1f 00a0  ld   $a0         ;|
              6e20 0060  ld   $60         ;| Length (1..256)
              6e21 0059  ld   $59         ;19a0 LDI
              6e22 0001  ld   $01
              6e23 002b  ld   $2b         ;19a2 STW
              6e24 0024  ld   $24
              6e25 0011  ld   $11         ;19a4 LDWI
              6e26 0000  ld   $00
              6e27 0001  ld   $01
              6e28 002b  ld   $2b         ;19a7 STW
              6e29 0026  ld   $26
              6e2a 00cf  ld   $cf         ;19a9 CALL
              6e2b 003a  ld   $3a         ;19a9 'Expression'
              6e2c 0075  ld   $75         ;19ab PUSH
              6e2d 00ec  ld   $ec         ;19ac STLW
              6e2e 0000  ld   $00
              6e2f 00cf  ld   $cf         ;19ae CALL
              6e30 0038  ld   $38         ;19ae 'Keyword'
              6e31 002c  ld   $2c         ;19b0 ','
              6e32 0000  ld   $00         ;19b1 0
              6e33 0035  ld   $35         ;19b2 BCC
              6e34 0072  ld   $72         ;19b3 NE
              6e35 00b5  ld   $b5
              6e36 00cf  ld   $cf         ;19b5 CALL
              6e37 004a  ld   $4a         ;19b5 'SyntaxError'
              6e38 00cf  ld   $cf         ;19b7 CALL
              6e39 003a  ld   $3a         ;19b7 'Expression'
              6e3a 002b  ld   $2b         ;19b9 STW
              6e3b 006a  ld   $6a         ;19b9 'j'
              6e3c 0035  ld   $35         ;19bb BCC
              6e3d 0053  ld   $53         ;19bc GE
              6e3e 00c8  ld   $c8
              6e3f 0059  ld   $59         ;19be LDI
              6e40 0000  ld   $00
              6e41 00b8  ld   $b8         ;19c0 952
              6e42 0026  ld   $26         ;19c1 38
              6e43 002b  ld   $2b         ;19c2 STW
              6e44 0026  ld   $26
              6e45 0059  ld   $59         ;19c4 LDI
              6e46 0000  ld   $00
              6e47 00b8  ld   $b8         ;19c6 SUBW
              6e48 006a  ld   $6a         ;19c6 'j'
              6e49 002b  ld   $2b         ;19c8 STW
              6e4a 006a  ld   $6a         ;19c8 'j'
              6e4b 00ee  ld   $ee         ;19ca LDLW
              6e4c 0000  ld   $00
              6e4d 002b  ld   $2b         ;19cc STW
              6e4e 0040  ld   $40         ;19cc 'i'
              6e4f 0035  ld   $35         ;19ce BCC
              6e50 0053  ld   $53         ;19cf GE
              6e51 00db  ld   $db
              6e52 0059  ld   $59         ;19d1 LDI
              6e53 0000  ld   $00
              6e54 00b8  ld   $b8         ;19d3 952
              6e55 0024  ld   $24         ;19d4 36
              6e56 002b  ld   $2b         ;19d5 STW
              6e57 0024  ld   $24
              6e58 0059  ld   $59         ;19d7 LDI
              6e59 0000  ld   $00
              6e5a 00b8  ld   $b8         ;19d9 SUBW
              6e5b 0040  ld   $40         ;19d9 'i'
              6e5c 002b  ld   $2b         ;19db STW
              6e5d 0040  ld   $40         ;19db 'i'
              6e5e 00b8  ld   $b8         ;19dd SUBW
              6e5f 006a  ld   $6a         ;19dd 'j'
              6e60 0035  ld   $35         ;19df BCC
              6e61 0053  ld   $53         ;19e0 GE
              6e62 00f8  ld   $f8
              6e63 0021  ld   $21         ;19e2 LDW
              6e64 0040  ld   $40         ;19e2 'i'
              6e65 002b  ld   $2b         ;19e4 STW
              6e66 004e  ld   $4e         ;19e4 'tmp'
              6e67 0021  ld   $21         ;19e6 LDW
              6e68 006a  ld   $6a         ;19e6 'j'
              6e69 002b  ld   $2b         ;19e8 STW
              6e6a 0040  ld   $40         ;19e8 'i'
              6e6b 0021  ld   $21         ;19ea LDW
              6e6c 004e  ld   $4e         ;19ea 'tmp'
              6e6d 002b  ld   $2b         ;19ec STW
              6e6e 006a  ld   $6a         ;19ec 'j'
              6e6f 0021  ld   $21         ;19ee LDW
              6e70 0024  ld   $24
              6e71 002b  ld   $2b         ;19f0 STW
              6e72 004e  ld   $4e         ;19f0 'tmp'
              6e73 0021  ld   $21         ;19f2 LDW
              6e74 0026  ld   $26
              6e75 002b  ld   $2b         ;19f4 STW
              6e76 0024  ld   $24
              6e77 0021  ld   $21         ;19f6 LDW
              6e78 004e  ld   $4e         ;19f6 'tmp'
              6e79 002b  ld   $2b         ;19f8 STW
              6e7a 0026  ld   $26
              6e7b 0063  ld   $63         ;19fa POP
              6e7c 0011  ld   $11         ;19fb LDWI
              6e7d 00a0  ld   $a0
              6e7e 001a  ld   $1a
              6e7f 00cf  ld   $cf         ;19fe CALL
              6e80 0018  ld   $18         ;19fe vAC
              6e81 001a  ld   $1a         ;| RAM segment address (high byte first)
              6e82 00a0  ld   $a0         ;|
              6e83 0060  ld   $60         ;| Length (1..256)
              6e84 0021  ld   $21         ;1aa0 LDW
              6e85 003c  ld   $3c         ;1aa0 'Value'
              6e86 0035  ld   $35         ;1aa2 BCC
              6e87 0053  ld   $53         ;1aa3 GE
              6e88 00a8  ld   $a8
              6e89 0011  ld   $11         ;1aa5 LDWI
              6e8a 0000  ld   $00
              6e8b 0078  ld   $78
              6e8c 0090  ld   $90         ;1aa8 BRA
              6e8d 00ab  ld   $ab
              6e8e 0011  ld   $11         ;1aaa LDWI
              6e8f 0000  ld   $00
              6e90 0088  ld   $88
              6e91 002b  ld   $2b         ;1aad STW
              6e92 0028  ld   $28
              6e93 0021  ld   $21         ;1aaf LDW
              6e94 0040  ld   $40         ;1aaf 'i'
              6e95 002b  ld   $2b         ;1ab1 STW
              6e96 004e  ld   $4e         ;1ab1 'tmp'
              6e97 002b  ld   $2b         ;1ab3 STW
              6e98 0044  ld   $44         ;1ab3 'k'
              6e99 001a  ld   $1a         ;1ab5 LD
              6e9a 002b  ld   $2b
              6e9b 00f0  ld   $f0         ;1ab7 POKE
              6e9c 0030  ld   $30         ;1ab7 'Pos'
              6e9d 0021  ld   $21         ;1ab9 LDW
              6e9e 004e  ld   $4e         ;1ab9 'tmp'
              6e9f 00e6  ld   $e6         ;1abb SUBI
              6ea0 0001  ld   $01
              6ea1 002b  ld   $2b         ;1abd STW
              6ea2 004e  ld   $4e         ;1abd 'tmp'
              6ea3 0035  ld   $35         ;1abf BCC
              6ea4 0050  ld   $50         ;1ac0 LT
              6ea5 00fc  ld   $fc
              6ea6 0021  ld   $21         ;1ac2 LDW
              6ea7 0044  ld   $44         ;1ac2 'k'
              6ea8 00b8  ld   $b8         ;1ac4 SUBW
              6ea9 006a  ld   $6a         ;1ac4 'j'
              6eaa 00b8  ld   $b8         ;1ac6 SUBW
              6eab 006a  ld   $6a         ;1ac6 'j'
              6eac 002b  ld   $2b         ;1ac8 STW
              6ead 0044  ld   $44         ;1ac8 'k'
              6eae 0035  ld   $35         ;1aca BCC
              6eaf 0053  ld   $53         ;1acb GE
              6eb0 00d7  ld   $d7
              6eb1 0099  ld   $99         ;1acd ADDW
              6eb2 0040  ld   $40         ;1acd 'i'
              6eb3 0099  ld   $99         ;1acf ADDW
              6eb4 0040  ld   $40         ;1acf 'i'
              6eb5 002b  ld   $2b         ;1ad1 STW
              6eb6 0044  ld   $44         ;1ad1 'k'
              6eb7 0021  ld   $21         ;1ad3 LDW
              6eb8 0026  ld   $26
              6eb9 0099  ld   $99         ;1ad5 ADDW
              6eba 0030  ld   $30         ;1ad5 'Pos'
              6ebb 002b  ld   $2b         ;1ad7 STW
              6ebc 0030  ld   $30         ;1ad7 'Pos'
              6ebd 0021  ld   $21         ;1ad9 LDW
              6ebe 0024  ld   $24
              6ebf 0099  ld   $99         ;1adb ADDW
              6ec0 0030  ld   $30         ;1adb 'Pos'
              6ec1 002b  ld   $2b         ;1add STW
              6ec2 0030  ld   $30         ;1add 'Pos'
              6ec3 001a  ld   $1a         ;1adf LD
              6ec4 0030  ld   $30         ;1adf 'Pos'
              6ec5 00e6  ld   $e6         ;1ae1 SUBI
              6ec6 00a0  ld   $a0
              6ec7 0035  ld   $35         ;1ae3 BCC
              6ec8 0050  ld   $50         ;1ae4 LT
              6ec9 00ed  ld   $ed
              6eca 0035  ld   $35         ;1ae6 BCC
              6ecb 0056  ld   $56         ;1ae7 LE
              6ecc 00eb  ld   $eb
              6ecd 0093  ld   $93         ;1ae9 INC
              6ece 0031  ld   $31         ;1ae9 'Pos'+1
              6ecf 00e3  ld   $e3         ;1aeb ADDI
              6ed0 0040  ld   $40
              6ed1 005e  ld   $5e         ;1aed ST
              6ed2 0030  ld   $30         ;1aed 'Pos'
              6ed3 001a  ld   $1a         ;1aef LD
              6ed4 0031  ld   $31         ;1aef 'Pos'+1
              6ed5 0082  ld   $82         ;1af1 ANDI
              6ed6 0078  ld   $78
              6ed7 0035  ld   $35         ;1af3 BCC
              6ed8 0072  ld   $72         ;1af4 NE
              6ed9 00fa  ld   $fa
              6eda 0021  ld   $21         ;1af6 LDW
              6edb 0028  ld   $28
              6edc 0099  ld   $99         ;1af8 ADDW
              6edd 0030  ld   $30         ;1af8 'Pos'
              6ede 002b  ld   $2b         ;1afa STW
              6edf 0030  ld   $30         ;1afa 'Pos'
              6ee0 0090  ld   $90         ;1afc BRA
              6ee1 00b3  ld   $b3
              6ee2 00cf  ld   $cf         ;1afe CALL
              6ee3 0062  ld   $62         ;1afe 'EndOfLine'
              6ee4 001b  ld   $1b         ;| RAM segment address (high byte first)
              6ee5 00a0  ld   $a0         ;|
              6ee6 0006  ld   $06         ;| Length (1..256)
              6ee7 00a0  ld   $a0         ;1ba0 _Buffer
              6ee8 001b  ld   $1b
              6ee9 004e  ld   $4e         ;1ba2 'N'
              6eea 0045  ld   $45         ;1ba3 'E'
              6eeb 0057  ld   $57         ;1ba4 'W'
              6eec 0000  ld   $00         ;1ba5 0
              6eed 0000  ld   $00         ;End of Apps/TinyBASIC/TinyBASIC_v4.gcl, size 3194
                                          ;+-----------------------------------+
                                          ;| Apps/TicTac/LoadTicTac_v1.gcl     |
                                          ;+-----------------------------------+
              6eee 0200  nop              ;13 fillers
              6eef 0200  nop
              6ef0 0200  nop
              * 13 times
              6efb fe00  bra  ac          ;+-----------------------------------+
              6efc fcfd  bra  $6efd       ;|                                   |
              6efd 1418  ld   $18,y       ;| Trampoline for page $6e00 lookups |
              6efe e006  jmp  y,$06       ;|                                   |
              6eff c218  st   [$18]       ;+-----------------------------------+
              6f00 dc54  st   $54,[y,x++] ;'T'
              6f01 dc69  st   $69,[y,x++] ;'i'
              6f02 dc6e  st   $6e,[y,x++] ;'n'
              6f03 dc79  st   $79,[y,x++] ;'y'
              6f04 dc42  st   $42,[y,x++] ;'B'
              6f05 dc41  st   $41,[y,x++] ;'A'
              6f06 dc53  st   $53,[y,x++] ;'S'
              6f07 dc49  st   $49,[y,x++] ;'I'
              6f08 0074  ld   $74
              6f09 c218  st   [$18]
              6f0a 0062  ld   $62
              6f0b 14dd  ld   $dd,y
              6f0c e06f  jmp  y,$6f
              6f0d c219  st   [$19]
TicTac:       6f0e 0002  ld   $02         ;| RAM segment address (high byte first)
              6f0f 0000  ld   $00         ;|
              6f10 0010  ld   $10         ;| Length (1..256)
              6f11 0059  ld   $59         ;0200 LDI
              6f12 00ad  ld   $ad
              6f13 002b  ld   $2b         ;0202 STW
              6f14 0022  ld   $22         ;0202 '_sysFn'
              6f15 0011  ld   $11         ;0204 LDWI
              6f16 00a0  ld   $a0
              6f17 00ff  ld   $ff
              6f18 002b  ld   $2b         ;0207 STW
              6f19 001a  ld   $1a         ;0207 '_vLR'
              6f1a 0011  ld   $11         ;0209 LDWI
              6f1b 0074  ld   $74
              6f1c 0062  ld   $62
              6f1d 002b  ld   $2b         ;020c STW
              6f1e 0024  ld   $24         ;020c '_sysArgs0'
              6f1f 00b4  ld   $b4         ;020e SYS
              6f20 00e3  ld   $e3
              6f21 00ff  ld   $ff         ;| RAM segment address (high byte first)
              6f22 00a0  ld   $a0         ;|
              6f23 000c  ld   $0c         ;| Length (1..256)
              6f24 0011  ld   $11         ;ffa0 LDWI
              6f25 0000  ld   $00
              6f26 0002  ld   $02
              6f27 002b  ld   $2b         ;ffa3 STW
              6f28 001a  ld   $1a         ;ffa3 '_vLR'
              6f29 0011  ld   $11         ;ffa5 LDWI
              6f2a 0031  ld   $31
              6f2b 006f  ld   $6f
              6f2c 002b  ld   $2b         ;ffa8 STW
              6f2d 0024  ld   $24         ;ffa8 '_sysArgs0'
              6f2e 00b4  ld   $b4         ;ffaa SYS
              6f2f 00e3  ld   $e3
              6f30 0000  ld   $00         ;End of Apps/TicTac/LoadTicTac_v1.gcl, size 35
                                          ;+-----------------------------------+
                                          ;| Apps/TicTac/TicTac_v2.gtb         |
                                          ;+-----------------------------------+
TicTacGtb:    6f31 001b  ld   $1b
              6f32 00c0  ld   $c0
              6f33 0019  ld   $19
              6f34 0064  ld   $64
              6f35 0000  ld   $00
              6f36 0027  ld   $27         ;"'"
              6f37 0054  ld   $54         ;'T'
              6f38 0049  ld   $49         ;'I'
              6f39 0043  ld   $43         ;'C'
              6f3a 002d  ld   $2d         ;'-'
              6f3b 0054  ld   $54         ;'T'
              6f3c 0041  ld   $41         ;'A'
              6f3d 0043  ld   $43         ;'C'
              6f3e 002d  ld   $2d         ;'-'
              6f3f 0054  ld   $54         ;'T'
              6f40 004f  ld   $4f         ;'O'
              6f41 0045  ld   $45         ;'E'
              6f42 002e  ld   $2e         ;'.'
              6f43 0020  ld   $20         ;' '
              6f44 0059  ld   $59         ;'Y'
              6f45 004f  ld   $4f         ;'O'
              6f46 0055  ld   $55         ;'U'
              6f47 0020  ld   $20         ;' '
              6f48 0028  ld   $28         ;'('
              6f49 0058  ld   $58         ;'X'
              6f4a 0029  ld   $29         ;')'
              6f4b 0020  ld   $20         ;' '
              6f4c 0000  ld   $00         ;'\x00'
              6f4d 001b  ld   $1b
              6f4e 00e0  ld   $e0
              6f4f 0015  ld   $15
              6f50 00d2  ld   $d2
              6f51 0000  ld   $00
              6f52 003f  ld   $3f         ;'?'
              6f53 0022  ld   $22         ;'"'
              6f54 0054  ld   $54         ;'T'
              6f55 004f  ld   $4f         ;'O'
              6f56 004d  ld   $4d         ;'M'
              6f57 0020  ld   $20         ;' '
              6f58 0050  ld   $50         ;'P'
              6f59 0049  ld   $49         ;'I'
              6f5a 0054  ld   $54         ;'T'
              6f5b 0054  ld   $54         ;'T'
              6f5c 004d  ld   $4d         ;'M'
              6f5d 0041  ld   $41         ;'A'
              6f5e 004e  ld   $4e         ;'N'
              6f5f 0027  ld   $27         ;"'"
              6f60 0053  ld   $53         ;'S'
              6f61 0020  ld   $20         ;' '
              6f62 0022  ld   $22         ;'"'
              6f63 003b  ld   $3b         ;';'
              6f64 0000  ld   $00         ;'\x00'
              6f65 001c  ld   $1c
              6f66 00a0  ld   $a0
              6f67 0012  ld   $12
              6f68 00d3  ld   $d3
              6f69 0000  ld   $00
              6f6a 003f  ld   $3f         ;'?'
              6f6b 0022  ld   $22         ;'"'
              6f6c 0054  ld   $54         ;'T'
              6f6d 0049  ld   $49         ;'I'
              6f6e 0043  ld   $43         ;'C'
              6f6f 002d  ld   $2d         ;'-'
              6f70 0054  ld   $54         ;'T'
              6f71 0041  ld   $41         ;'A'
              6f72 0043  ld   $43         ;'C'
              6f73 002d  ld   $2d         ;'-'
              6f74 0054  ld   $54         ;'T'
              6f75 004f  ld   $4f         ;'O'
              6f76 0045  ld   $45         ;'E'
              6f77 002e  ld   $2e         ;'.'
              6f78 0022  ld   $22         ;'"'
              6f79 0000  ld   $00         ;'\x00'
              6f7a 001c  ld   $1c
              6f7b 00c0  ld   $c0
              6f7c 0012  ld   $12
              6f7d 00d4  ld   $d4
              6f7e 0000  ld   $00
              6f7f 003f  ld   $3f         ;'?'
              6f80 0022  ld   $22         ;'"'
              6f81 0059  ld   $59         ;'Y'
              6f82 004f  ld   $4f         ;'O'
              6f83 0055  ld   $55         ;'U'
              6f84 0020  ld   $20         ;' '
              6f85 0041  ld   $41         ;'A'
              6f86 0047  ld   $47         ;'G'
              6f87 0041  ld   $41         ;'A'
              6f88 0049  ld   $49         ;'I'
              6f89 004e  ld   $4e         ;'N'
              6f8a 0053  ld   $53         ;'S'
              6f8b 0054  ld   $54         ;'T'
              6f8c 0022  ld   $22         ;'"'
              6f8d 003b  ld   $3b         ;';'
              6f8e 0000  ld   $00         ;'\x00'
              6f8f 001c  ld   $1c
              6f90 00e0  ld   $e0
              6f91 0011  ld   $11
              6f92 00d5  ld   $d5
              6f93 0000  ld   $00
              6f94 003f  ld   $3f         ;'?'
              6f95 0022  ld   $22         ;'"'
              6f96 0020  ld   $20         ;' '
              6f97 0054  ld   $54         ;'T'
              6f98 0049  ld   $49         ;'I'
              6f99 004e  ld   $4e         ;'N'
              6f9a 0059  ld   $59         ;'Y'
              6f9b 0020  ld   $20         ;' '
              6f9c 0042  ld   $42         ;'B'
              6f9d 0041  ld   $41         ;'A'
              6f9e 0053  ld   $53         ;'S'
              6f9f 0049  ld   $49         ;'I'
              6fa0 0043  ld   $43         ;'C'
              6fa1 0022  ld   $22         ;'"'
              6fa2 0000  ld   $00         ;'\x00'
              6fa3 001d  ld   $1d
              6fa4 00a0  ld   $a0
              6fa5 0016  ld   $16
              6fa6 00dd  ld   $dd
              6fa7 0000  ld   $00
              6fa8 003f  ld   $3f         ;'?'
              6fa9 0022  ld   $22         ;'"'
              6faa 0059  ld   $59         ;'Y'
              6fab 004f  ld   $4f         ;'O'
              6fac 0055  ld   $55         ;'U'
              6fad 0020  ld   $20         ;' '
              6fae 0041  ld   $41         ;'A'
              6faf 0052  ld   $52         ;'R'
              6fb0 0045  ld   $45         ;'E'
              6fb1 0020  ld   $20         ;' '
              6fb2 0058  ld   $58         ;'X'
              6fb3 002e  ld   $2e         ;'.'
              6fb4 0020  ld   $20         ;' '
              6fb5 0049  ld   $49         ;'I'
              6fb6 0020  ld   $20         ;' '
              6fb7 0041  ld   $41         ;'A'
              6fb8 004d  ld   $4d         ;'M'
              6fb9 0022  ld   $22         ;'"'
              6fba 003b  ld   $3b         ;';'
              6fbb 0000  ld   $00         ;'\x00'
              6fbc 001d  ld   $1d
              6fbd 00c0  ld   $c0
              6fbe 000d  ld   $0d
              6fbf 00de  ld   $de
              6fc0 0000  ld   $00
              6fc1 003f  ld   $3f         ;'?'
              6fc2 0022  ld   $22         ;'"'
              6fc3 0020  ld   $20         ;' '
              6fc4 004f  ld   $4f         ;'O'
              6fc5 002e  ld   $2e         ;'.'
              6fc6 0020  ld   $20         ;' '
              6fc7 0059  ld   $59         ;'Y'
              6fc8 004f  ld   $4f         ;'O'
              6fc9 0055  ld   $55         ;'U'
              6fca 0022  ld   $22         ;'"'
              6fcb 0000  ld   $00         ;'\x00'
              6fcc 001d  ld   $1d
              6fcd 00e0  ld   $e0
              6fce 0010  ld   $10
              6fcf 00e7  ld   $e7
              6fd0 0000  ld   $00
              6fd1 003f  ld   $3f         ;'?'
              6fd2 0022  ld   $22         ;'"'
              6fd3 0050  ld   $50         ;'P'
              6fd4 004c  ld   $4c         ;'L'
              6fd5 0041  ld   $41         ;'A'
              6fd6 0059  ld   $59         ;'Y'
              6fd7 0020  ld   $20         ;' '
              6fd8 0059  ld   $59         ;'Y'
              6fd9 004f  ld   $4f         ;'O'
              6fda 0055  ld   $55         ;'U'
              6fdb 0052  ld   $52         ;'R'
              6fdc 0022  ld   $22         ;'"'
              6fdd 003b  ld   $3b         ;';'
              6fde 0000  ld   $00         ;'\x00'
              6fdf 001e  ld   $1e
              6fe0 00a0  ld   $a0
              6fe1 0015  ld   $15
              6fe2 00e8  ld   $e8
              6fe3 0000  ld   $00
              6fe4 003f  ld   $3f         ;'?'
              6fe5 0022  ld   $22         ;'"'
              6fe6 0020  ld   $20         ;' '
              6fe7 0054  ld   $54         ;'T'
              6fe8 0055  ld   $55         ;'U'
              6fe9 0052  ld   $52         ;'R'
              6fea 004e  ld   $4e         ;'N'
              6feb 0020  ld   $20         ;' '
              6fec 0042  ld   $42         ;'B'
              6fed 0059  ld   $59         ;'Y'
              6fee 0020  ld   $20         ;' '
              6fef 0054  ld   $54         ;'T'
              6ff0 0059  ld   $59         ;'Y'
              6ff1 0050  ld   $50         ;'P'
              6ff2 0049  ld   $49         ;'I'
              6ff3 004e  ld   $4e         ;'N'
              6ff4 0047  ld   $47         ;'G'
              6ff5 0022  ld   $22         ;'"'
              6ff6 0000  ld   $00         ;'\x00'
              6ff7 001e  ld   $1e
              6ff8 00c0  ld   $c0
              6ff9 0016  ld   $16
              6ffa 00e9  ld   $e9
              6ffb fe00  bra  ac          ;+-----------------------------------+
              6ffc fcfd  bra  $6ffd       ;|                                   |
              6ffd 1418  ld   $18,y       ;| Trampoline for page $6f00 lookups |
              6ffe e006  jmp  y,$06       ;|                                   |
              6fff c218  st   [$18]       ;+-----------------------------------+
              7000 0000  ld   $00
              7001 003f  ld   $3f         ;'?'
              7002 0022  ld   $22         ;'"'
              7003 0054  ld   $54         ;'T'
              7004 0048  ld   $48         ;'H'
              7005 0045  ld   $45         ;'E'
              7006 0020  ld   $20         ;' '
              7007 004e  ld   $4e         ;'N'
              7008 0055  ld   $55         ;'U'
              7009 004d  ld   $4d         ;'M'
              700a 0042  ld   $42         ;'B'
              700b 0045  ld   $45         ;'E'
              700c 0052  ld   $52         ;'R'
              700d 0020  ld   $20         ;' '
              700e 004f  ld   $4f         ;'O'
              700f 0046  ld   $46         ;'F'
              7010 0020  ld   $20         ;' '
              7011 0041  ld   $41         ;'A'
              7012 0022  ld   $22         ;'"'
              7013 003b  ld   $3b         ;';'
              7014 0000  ld   $00         ;'\x00'
              7015 001e  ld   $1e
              7016 00e0  ld   $e0
              7017 000e  ld   $0e
              7018 00ea  ld   $ea
              7019 0000  ld   $00
              701a 003f  ld   $3f         ;'?'
              701b 0022  ld   $22         ;'"'
              701c 0020  ld   $20         ;' '
              701d 0053  ld   $53         ;'S'
              701e 0051  ld   $51         ;'Q'
              701f 0055  ld   $55         ;'U'
              7020 0041  ld   $41         ;'A'
              7021 0052  ld   $52         ;'R'
              7022 0045  ld   $45         ;'E'
              7023 002e  ld   $2e         ;'.'
              7024 0022  ld   $22         ;'"'
              7025 0000  ld   $00         ;'\x00'
              7026 001f  ld   $1f
              7027 00a0  ld   $a0
              7028 0006  ld   $06
              7029 00f0  ld   $f0
              702a 0000  ld   $00
              702b 0041  ld   $41         ;'A'
              702c 003d  ld   $3d         ;'='
              702d 0030  ld   $30         ;'0'
              702e 0000  ld   $00         ;'\x00'
              702f 001f  ld   $1f
              7030 00c0  ld   $c0
              7031 0006  ld   $06
              7032 00fa  ld   $fa
              7033 0000  ld   $00
              7034 0042  ld   $42         ;'B'
              7035 003d  ld   $3d         ;'='
              7036 0030  ld   $30         ;'0'
              7037 0000  ld   $00         ;'\x00'
              7038 001f  ld   $1f
              7039 00e0  ld   $e0
              703a 0006  ld   $06
              703b 0004  ld   $04
              703c 0001  ld   $01
              703d 0043  ld   $43         ;'C'
              703e 003d  ld   $3d         ;'='
              703f 0030  ld   $30         ;'0'
              7040 0000  ld   $00         ;'\x00'
              7041 0020  ld   $20
              7042 00a0  ld   $a0
              7043 0006  ld   $06
              7044 000e  ld   $0e
              7045 0001  ld   $01
              7046 0044  ld   $44         ;'D'
              7047 003d  ld   $3d         ;'='
              7048 0030  ld   $30         ;'0'
              7049 0000  ld   $00         ;'\x00'
              704a 0020  ld   $20
              704b 00c0  ld   $c0
              704c 0006  ld   $06
              704d 0018  ld   $18
              704e 0001  ld   $01
              704f 0045  ld   $45         ;'E'
              7050 003d  ld   $3d         ;'='
              7051 0030  ld   $30         ;'0'
              7052 0000  ld   $00         ;'\x00'
              7053 0020  ld   $20
              7054 00e0  ld   $e0
              7055 0006  ld   $06
              7056 0022  ld   $22
              7057 0001  ld   $01
              7058 0046  ld   $46         ;'F'
              7059 003d  ld   $3d         ;'='
              705a 0030  ld   $30         ;'0'
              705b 0000  ld   $00         ;'\x00'
              705c 0021  ld   $21
              705d 00a0  ld   $a0
              705e 0006  ld   $06
              705f 00e8  ld   $e8
              7060 0003  ld   $03
              7061 0046  ld   $46         ;'F'
              7062 003d  ld   $3d         ;'='
              7063 0031  ld   $31         ;'1'
              7064 0000  ld   $00         ;'\x00'
              7065 0021  ld   $21
              7066 00c0  ld   $c0
              7067 0004  ld   $04
              7068 00f2  ld   $f2
              7069 0003  ld   $03
              706a 003f  ld   $3f         ;'?'
              706b 0000  ld   $00         ;'\x00'
              706c 0021  ld   $21
              706d 00e0  ld   $e0
              706e 000f  ld   $0f
              706f 00fc  ld   $fc
              7070 0003  ld   $03
              7071 003f  ld   $3f         ;'?'
              7072 0022  ld   $22         ;'"'
              7073 004e  ld   $4e         ;'N'
              7074 0045  ld   $45         ;'E'
              7075 0057  ld   $57         ;'W'
              7076 0020  ld   $20         ;' '
              7077 0047  ld   $47         ;'G'
              7078 0041  ld   $41         ;'A'
              7079 004d  ld   $4d         ;'M'
              707a 0045  ld   $45         ;'E'
              707b 002e  ld   $2e         ;'.'
              707c 0022  ld   $22         ;'"'
              707d 0000  ld   $00         ;'\x00'
              707e 0022  ld   $22
              707f 00a0  ld   $a0
              7080 0006  ld   $06
              7081 004c  ld   $4c
              7082 0004  ld   $04
              7083 0049  ld   $49         ;'I'
              7084 003d  ld   $3d         ;'='
              7085 0037  ld   $37         ;'7'
              7086 0000  ld   $00         ;'\x00'
              7087 0022  ld   $22
              7088 00c0  ld   $c0
              7089 000f  ld   $0f
              708a 0056  ld   $56
              708b 0004  ld   $04
              708c 0041  ld   $41         ;'A'
              708d 0028  ld   $28         ;'('
              708e 0049  ld   $49         ;'I'
              708f 0029  ld   $29         ;')'
              7090 003d  ld   $3d         ;'='
              7091 0030  ld   $30         ;'0'
              7092 003a  ld   $3a         ;':'
              7093 0049  ld   $49         ;'I'
              7094 003d  ld   $3d         ;'='
              7095 0049  ld   $49         ;'I'
              7096 002b  ld   $2b         ;'+'
              7097 0031  ld   $31         ;'1'
              7098 0000  ld   $00         ;'\x00'
              7099 0022  ld   $22
              709a 00e0  ld   $e0
              709b 0011  ld   $11
              709c 0060  ld   $60
              709d 0004  ld   $04
              709e 0049  ld   $49         ;'I'
              709f 0046  ld   $46         ;'F'
              70a0 0049  ld   $49         ;'I'
              70a1 003c  ld   $3c         ;'<'
              70a2 0031  ld   $31         ;'1'
              70a3 0036  ld   $36         ;'6'
              70a4 0047  ld   $47         ;'G'
              70a5 004f  ld   $4f         ;'O'
              70a6 0054  ld   $54         ;'T'
              70a7 004f  ld   $4f         ;'O'
              70a8 0031  ld   $31         ;'1'
              70a9 0031  ld   $31         ;'1'
              70aa 0031  ld   $31         ;'1'
              70ab 0030  ld   $30         ;'0'
              70ac 0000  ld   $00         ;'\x00'
              70ad 0023  ld   $23
              70ae 00a0  ld   $a0
              70af 0006  ld   $06
              70b0 006a  ld   $6a
              70b1 0004  ld   $04
              70b2 0055  ld   $55         ;'U'
              70b3 003d  ld   $3d         ;'='
              70b4 0039  ld   $39         ;'9'
              70b5 0000  ld   $00         ;'\x00'
              70b6 0023  ld   $23
              70b7 00c0  ld   $c0
              70b8 0006  ld   $06
              70b9 0074  ld   $74
              70ba 0004  ld   $04
              70bb 005a  ld   $5a         ;'Z'
              70bc 003d  ld   $3d         ;'='
              70bd 0030  ld   $30         ;'0'
              70be 0000  ld   $00         ;'\x00'
              70bf 0023  ld   $23
              70c0 00e0  ld   $e0
              70c1 0010  ld   $10
              70c2 007f  ld   $7f
              70c3 0004  ld   $04
              70c4 0049  ld   $49         ;'I'
              70c5 0046  ld   $46         ;'F'
              70c6 0046  ld   $46         ;'F'
              70c7 003d  ld   $3d         ;'='
              70c8 0030  ld   $30         ;'0'
              70c9 0047  ld   $47         ;'G'
              70ca 004f  ld   $4f         ;'O'
              70cb 0054  ld   $54         ;'T'
              70cc 004f  ld   $4f         ;'O'
              70cd 0034  ld   $34         ;'4'
              70ce 0030  ld   $30         ;'0'
              70cf 0031  ld   $31         ;'1'
              70d0 0030  ld   $30         ;'0'
              70d1 0000  ld   $00         ;'\x00'
              70d2 0024  ld   $24
              70d3 00a0  ld   $a0
              70d4 000b  ld   $0b
              70d5 0089  ld   $89
              70d6 0004  ld   $04
              70d7 0047  ld   $47         ;'G'
              70d8 004f  ld   $4f         ;'O'
              70d9 0054  ld   $54         ;'T'
              70da 004f  ld   $4f         ;'O'
              70db 0032  ld   $32         ;'2'
              70dc 0030  ld   $30         ;'0'
              70dd 0031  ld   $31         ;'1'
              70de 0030  ld   $30         ;'0'
              70df 0000  ld   $00         ;'\x00'
              70e0 0024  ld   $24
              70e1 00c0  ld   $c0
              70e2 0006  ld   $06
              70e3 00e6  ld   $e6
              70e4 0005  ld   $05
              70e5 005a  ld   $5a         ;'Z'
              70e6 003d  ld   $3d         ;'='
              70e7 0031  ld   $31         ;'1'
              70e8 0000  ld   $00         ;'\x00'
              70e9 0024  ld   $24
              70ea 00e0  ld   $e0
              70eb 0006  ld   $06
              70ec 00f0  ld   $f0
              70ed 0005  ld   $05
              70ee 0046  ld   $46         ;'F'
              70ef 003d  ld   $3d         ;'='
              70f0 0030  ld   $30         ;'0'
              70f1 0000  ld   $00         ;'\x00'
              70f2 0025  ld   $25
              70f3 00a0  ld   $a0
              70f4 0006  ld   $06
              70f5 00da  ld   $da
              70f6 0007  ld   $07
              70f7 0049  ld   $49         ;'I'
              70f8 003d  ld   $3d         ;'='
              70f9 0036  ld   $36         ;'6'
              70fa 0000  ld   $00         ;'\x00'
              70fb fe00  bra  ac          ;+-----------------------------------+
              70fc fcfd  bra  $70fd       ;|                                   |
              70fd 1418  ld   $18,y       ;| Trampoline for page $7000 lookups |
              70fe e006  jmp  y,$06       ;|                                   |
              70ff c218  st   [$18]       ;+-----------------------------------+
              7100 0025  ld   $25
              7101 00c0  ld   $c0
              7102 0008  ld   $08
              7103 003e  ld   $3e
              7104 0008  ld   $08
              7105 0049  ld   $49         ;'I'
              7106 003d  ld   $3d         ;'='
              7107 0049  ld   $49         ;'I'
              7108 002b  ld   $2b         ;'+'
              7109 0031  ld   $31         ;'1'
              710a 0000  ld   $00         ;'\x00'
              710b 0025  ld   $25
              710c 00e0  ld   $e0
              710d 0008  ld   $08
              710e 0048  ld   $48
              710f 0008  ld   $08
              7110 003f  ld   $3f         ;'?'
              7111 0022  ld   $22         ;'"'
              7112 0020  ld   $20         ;' '
              7113 0022  ld   $22         ;'"'
              7114 003b  ld   $3b         ;';'
              7115 0000  ld   $00         ;'\x00'
              7116 0026  ld   $26
              7117 00a0  ld   $a0
              7118 0013  ld   $13
              7119 0053  ld   $53
              711a 0008  ld   $08
              711b 0047  ld   $47         ;'G'
              711c 004f  ld   $4f         ;'O'
              711d 0054  ld   $54         ;'T'
              711e 004f  ld   $4f         ;'O'
              711f 0041  ld   $41         ;'A'
              7120 0028  ld   $28         ;'('
              7121 0049  ld   $49         ;'I'
              7122 0029  ld   $29         ;')'
              7123 002a  ld   $2a         ;'*'
              7124 0032  ld   $32         ;'2'
              7125 0030  ld   $30         ;'0'
              7126 002b  ld   $2b         ;'+'
              7127 0032  ld   $32         ;'2'
              7128 0032  ld   $32         ;'2'
              7129 0030  ld   $30         ;'0'
              712a 0030  ld   $30         ;'0'
              712b 0000  ld   $00         ;'\x00'
              712c 0026  ld   $26
              712d 00c0  ld   $c0
              712e 0008  ld   $08
              712f 0098  ld   $98
              7130 0008  ld   $08
              7131 003f  ld   $3f         ;'?'
              7132 0049  ld   $49         ;'I'
              7133 002d  ld   $2d         ;'-'
              7134 0036  ld   $36         ;'6'
              7135 003b  ld   $3b         ;';'
              7136 0000  ld   $00         ;'\x00'
              7137 0026  ld   $26
              7138 00e0  ld   $e0
              7139 000b  ld   $0b
              713a 00a2  ld   $a2
              713b 0008  ld   $08
              713c 0047  ld   $47         ;'G'
              713d 004f  ld   $4f         ;'O'
              713e 0054  ld   $54         ;'T'
              713f 004f  ld   $4f         ;'O'
              7140 0032  ld   $32         ;'2'
              7141 0033  ld   $33         ;'3'
              7142 0030  ld   $30         ;'0'
              7143 0030  ld   $30         ;'0'
              7144 0000  ld   $00         ;'\x00'
              7145 0027  ld   $27
              7146 00a0  ld   $a0
              7147 0008  ld   $08
              7148 00ac  ld   $ac
              7149 0008  ld   $08
              714a 003f  ld   $3f         ;'?'
              714b 0022  ld   $22         ;'"'
              714c 0058  ld   $58         ;'X'
              714d 0022  ld   $22         ;'"'
              714e 003b  ld   $3b         ;';'
              714f 0000  ld   $00         ;'\x00'
              7150 0027  ld   $27
              7151 00c0  ld   $c0
              7152 000b  ld   $0b
              7153 00b6  ld   $b6
              7154 0008  ld   $08
              7155 0047  ld   $47         ;'G'
              7156 004f  ld   $4f         ;'O'
              7157 0054  ld   $54         ;'T'
              7158 004f  ld   $4f         ;'O'
              7159 0032  ld   $32         ;'2'
              715a 0033  ld   $33         ;'3'
              715b 0030  ld   $30         ;'0'
              715c 0030  ld   $30         ;'0'
              715d 0000  ld   $00         ;'\x00'
              715e 0027  ld   $27
              715f 00e0  ld   $e0
              7160 0008  ld   $08
              7161 00d4  ld   $d4
              7162 0008  ld   $08
              7163 003f  ld   $3f         ;'?'
              7164 0022  ld   $22         ;'"'
              7165 004f  ld   $4f         ;'O'
              7166 0022  ld   $22         ;'"'
              7167 003b  ld   $3b         ;';'
              7168 0000  ld   $00         ;'\x00'
              7169 0028  ld   $28
              716a 00a0  ld   $a0
              716b 0014  ld   $14
              716c 00fc  ld   $fc
              716d 0008  ld   $08
              716e 0049  ld   $49         ;'I'
              716f 0046  ld   $46         ;'F'
              7170 0049  ld   $49         ;'I'
              7171 002f  ld   $2f         ;'/'
              7172 0033  ld   $33         ;'3'
              7173 002a  ld   $2a         ;'*'
              7174 0033  ld   $33         ;'3'
              7175 003d  ld   $3d         ;'='
              7176 0049  ld   $49         ;'I'
              7177 0047  ld   $47         ;'G'
              7178 004f  ld   $4f         ;'O'
              7179 0054  ld   $54         ;'T'
              717a 004f  ld   $4f         ;'O'
              717b 0032  ld   $32         ;'2'
              717c 0034  ld   $34         ;'4'
              717d 0030  ld   $30         ;'0'
              717e 0030  ld   $30         ;'0'
              717f 0000  ld   $00         ;'\x00'
              7180 0028  ld   $28
              7181 00c0  ld   $c0
              7182 0009  ld   $09
              7183 0006  ld   $06
              7184 0009  ld   $09
              7185 003f  ld   $3f         ;'?'
              7186 0022  ld   $22         ;'"'
              7187 0020  ld   $20         ;' '
              7188 007c  ld   $7c         ;'|'
              7189 0022  ld   $22         ;'"'
              718a 003b  ld   $3b         ;';'
              718b 0000  ld   $00         ;'\x00'
              718c 0028  ld   $28
              718d 00e0  ld   $e0
              718e 000b  ld   $0b
              718f 0010  ld   $10
              7190 0009  ld   $09
              7191 0047  ld   $47         ;'G'
              7192 004f  ld   $4f         ;'O'
              7193 0054  ld   $54         ;'T'
              7194 004f  ld   $4f         ;'O'
              7195 0032  ld   $32         ;'2'
              7196 0031  ld   $31         ;'1'
              7197 0031  ld   $31         ;'1'
              7198 0030  ld   $30         ;'0'
              7199 0000  ld   $00         ;'\x00'
              719a 0029  ld   $29
              719b 00a0  ld   $a0
              719c 0004  ld   $04
              719d 0060  ld   $60
              719e 0009  ld   $09
              719f 003f  ld   $3f         ;'?'
              71a0 0000  ld   $00         ;'\x00'
              71a1 0029  ld   $29
              71a2 00c0  ld   $c0
              71a3 0011  ld   $11
              71a4 0074  ld   $74
              71a5 0009  ld   $09
              71a6 0049  ld   $49         ;'I'
              71a7 0046  ld   $46         ;'F'
              71a8 0049  ld   $49         ;'I'
              71a9 003d  ld   $3d         ;'='
              71aa 0031  ld   $31         ;'1'
              71ab 0035  ld   $35         ;'5'
              71ac 0047  ld   $47         ;'G'
              71ad 004f  ld   $4f         ;'O'
              71ae 0054  ld   $54         ;'T'
              71af 004f  ld   $4f         ;'O'
              71b0 0033  ld   $33         ;'3'
              71b1 0030  ld   $30         ;'0'
              71b2 0030  ld   $30         ;'0'
              71b3 0030  ld   $30         ;'0'
              71b4 0000  ld   $00         ;'\x00'
              71b5 0029  ld   $29
              71b6 00e0  ld   $e0
              71b7 0011  ld   $11
              71b8 007e  ld   $7e
              71b9 0009  ld   $09
              71ba 003f  ld   $3f         ;'?'
              71bb 0022  ld   $22         ;'"'
              71bc 002d  ld   $2d         ;'-'
              71bd 002d  ld   $2d         ;'-'
              71be 002d  ld   $2d         ;'-'
              71bf 002b  ld   $2b         ;'+'
              71c0 002d  ld   $2d         ;'-'
              71c1 002d  ld   $2d         ;'-'
              71c2 002d  ld   $2d         ;'-'
              71c3 002b  ld   $2b         ;'+'
              71c4 002d  ld   $2d         ;'-'
              71c5 002d  ld   $2d         ;'-'
              71c6 002d  ld   $2d         ;'-'
              71c7 0022  ld   $22         ;'"'
              71c8 0000  ld   $00         ;'\x00'
              71c9 002a  ld   $2a
              71ca 00a0  ld   $a0
              71cb 000b  ld   $0b
              71cc 0088  ld   $88
              71cd 0009  ld   $09
              71ce 0047  ld   $47         ;'G'
              71cf 004f  ld   $4f         ;'O'
              71d0 0054  ld   $54         ;'T'
              71d1 004f  ld   $4f         ;'O'
              71d2 0032  ld   $32         ;'2'
              71d3 0031  ld   $31         ;'1'
              71d4 0031  ld   $31         ;'1'
              71d5 0030  ld   $30         ;'0'
              71d6 0000  ld   $00         ;'\x00'
              71d7 002a  ld   $2a
              71d8 00c0  ld   $c0
              71d9 0010  ld   $10
              71da 00b8  ld   $b8
              71db 000b  ld   $0b
              71dc 0049  ld   $49         ;'I'
              71dd 0046  ld   $46         ;'F'
              71de 005a  ld   $5a         ;'Z'
              71df 003d  ld   $3d         ;'='
              71e0 0030  ld   $30         ;'0'
              71e1 0047  ld   $47         ;'G'
              71e2 004f  ld   $4f         ;'O'
              71e3 0054  ld   $54         ;'T'
              71e4 004f  ld   $4f         ;'O'
              71e5 0033  ld   $33         ;'3'
              71e6 0031  ld   $31         ;'1'
              71e7 0030  ld   $30         ;'0'
              71e8 0030  ld   $30         ;'0'
              71e9 0000  ld   $00         ;'\x00'
              71ea 002a  ld   $2a
              71eb 00e0  ld   $e0
              71ec 0010  ld   $10
              71ed 00cc  ld   $cc
              71ee 000b  ld   $0b
              71ef 0049  ld   $49         ;'I'
              71f0 0046  ld   $46         ;'F'
              71f1 0046  ld   $46         ;'F'
              71f2 003d  ld   $3d         ;'='
              71f3 0031  ld   $31         ;'1'
              71f4 0047  ld   $47         ;'G'
              71f5 004f  ld   $4f         ;'O'
              71f6 0054  ld   $54         ;'T'
              71f7 004f  ld   $4f         ;'O'
              71f8 0033  ld   $33         ;'3'
              71f9 0030  ld   $30         ;'0'
              71fa 0035  ld   $35         ;'5'
              71fb fe00  bra  ac          ;+-----------------------------------+
              71fc fcfd  bra  $71fd       ;|                                   |
              71fd 1418  ld   $18,y       ;| Trampoline for page $7100 lookups |
              71fe e006  jmp  y,$06       ;|                                   |
              71ff c218  st   [$18]       ;+-----------------------------------+
              7200 0030  ld   $30         ;'0'
              7201 0000  ld   $00         ;'\x00'
              7202 002b  ld   $2b
              7203 00a0  ld   $a0
              7204 000e  ld   $0e
              7205 00d6  ld   $d6
              7206 000b  ld   $0b
              7207 003f  ld   $3f         ;'?'
              7208 0022  ld   $22         ;'"'
              7209 0059  ld   $59         ;'Y'
              720a 004f  ld   $4f         ;'O'
              720b 0055  ld   $55         ;'U'
              720c 0020  ld   $20         ;' '
              720d 0057  ld   $57         ;'W'
              720e 0049  ld   $49         ;'I'
              720f 004e  ld   $4e         ;'N'
              7210 002e  ld   $2e         ;'.'
              7211 0022  ld   $22         ;'"'
              7212 0000  ld   $00         ;'\x00'
              7213 002b  ld   $2b
              7214 00c0  ld   $c0
              7215 000b  ld   $0b
              7216 00e0  ld   $e0
              7217 000b  ld   $0b
              7218 0047  ld   $47         ;'G'
              7219 004f  ld   $4f         ;'O'
              721a 0054  ld   $54         ;'T'
              721b 004f  ld   $4f         ;'O'
              721c 0031  ld   $31         ;'1'
              721d 0030  ld   $30         ;'0'
              721e 0031  ld   $31         ;'1'
              721f 0030  ld   $30         ;'0'
              7220 0000  ld   $00         ;'\x00'
              7221 002b  ld   $2b
              7222 00e0  ld   $e0
              7223 000c  ld   $0c
              7224 00ea  ld   $ea
              7225 000b  ld   $0b
              7226 003f  ld   $3f         ;'?'
              7227 0022  ld   $22         ;'"'
              7228 0049  ld   $49         ;'I'
              7229 0020  ld   $20         ;' '
              722a 0057  ld   $57         ;'W'
              722b 0049  ld   $49         ;'I'
              722c 004e  ld   $4e         ;'N'
              722d 002e  ld   $2e         ;'.'
              722e 0022  ld   $22         ;'"'
              722f 0000  ld   $00         ;'\x00'
              7230 002c  ld   $2c
              7231 00a0  ld   $a0
              7232 000b  ld   $0b
              7233 00f4  ld   $f4
              7234 000b  ld   $0b
              7235 0047  ld   $47         ;'G'
              7236 004f  ld   $4f         ;'O'
              7237 0054  ld   $54         ;'T'
              7238 004f  ld   $4f         ;'O'
              7239 0031  ld   $31         ;'1'
              723a 0030  ld   $30         ;'0'
              723b 0031  ld   $31         ;'1'
              723c 0030  ld   $30         ;'0'
              723d 0000  ld   $00         ;'\x00'
              723e 002c  ld   $2c
              723f 00c0  ld   $c0
              7240 0010  ld   $10
              7241 001c  ld   $1c
              7242 000c  ld   $0c
              7243 0049  ld   $49         ;'I'
              7244 0046  ld   $46         ;'F'
              7245 0055  ld   $55         ;'U'
              7246 003e  ld   $3e         ;'>'
              7247 0030  ld   $30         ;'0'
              7248 0047  ld   $47         ;'G'
              7249 004f  ld   $4f         ;'O'
              724a 0054  ld   $54         ;'T'
              724b 004f  ld   $4f         ;'O'
              724c 0033  ld   $33         ;'3'
              724d 0032  ld   $32         ;'2'
              724e 0031  ld   $31         ;'1'
              724f 0030  ld   $30         ;'0'
              7250 0000  ld   $00         ;'\x00'
              7251 002c  ld   $2c
              7252 00e0  ld   $e0
              7253 0011  ld   $11
              7254 0026  ld   $26
              7255 000c  ld   $0c
              7256 003f  ld   $3f         ;'?'
              7257 0022  ld   $22         ;'"'
              7258 0043  ld   $43         ;'C'
              7259 0041  ld   $41         ;'A'
              725a 0054  ld   $54         ;'T'
              725b 0027  ld   $27         ;"'"
              725c 0053  ld   $53         ;'S'
              725d 0020  ld   $20         ;' '
              725e 0047  ld   $47         ;'G'
              725f 0041  ld   $41         ;'A'
              7260 004d  ld   $4d         ;'M'
              7261 0045  ld   $45         ;'E'
              7262 002e  ld   $2e         ;'.'
              7263 0022  ld   $22         ;'"'
              7264 0000  ld   $00         ;'\x00'
              7265 002d  ld   $2d
              7266 00a0  ld   $a0
              7267 0008  ld   $08
              7268 0030  ld   $30
              7269 000c  ld   $0c
              726a 0046  ld   $46         ;'F'
              726b 003d  ld   $3d         ;'='
              726c 0031  ld   $31         ;'1'
              726d 002d  ld   $2d         ;'-'
              726e 0046  ld   $46         ;'F'
              726f 0000  ld   $00         ;'\x00'
              7270 002d  ld   $2d
              7271 00c0  ld   $c0
              7272 000b  ld   $0b
              7273 003a  ld   $3a
              7274 000c  ld   $0c
              7275 0047  ld   $47         ;'G'
              7276 004f  ld   $4f         ;'O'
              7277 0054  ld   $54         ;'T'
              7278 004f  ld   $4f         ;'O'
              7279 0031  ld   $31         ;'1'
              727a 0030  ld   $30         ;'0'
              727b 0031  ld   $31         ;'1'
              727c 0030  ld   $30         ;'0'
              727d 0000  ld   $00         ;'\x00'
              727e 002d  ld   $2d
              727f 00e0  ld   $e0
              7280 000f  ld   $0f
              7281 008a  ld   $8a
              7282 000c  ld   $0c
              7283 003f  ld   $3f         ;'?'
              7284 0022  ld   $22         ;'"'
              7285 0059  ld   $59         ;'Y'
              7286 004f  ld   $4f         ;'O'
              7287 0055  ld   $55         ;'U'
              7288 0052  ld   $52         ;'R'
              7289 0020  ld   $20         ;' '
              728a 0050  ld   $50         ;'P'
              728b 004c  ld   $4c         ;'L'
              728c 0041  ld   $41         ;'A'
              728d 0022  ld   $22         ;'"'
              728e 003b  ld   $3b         ;';'
              728f 0000  ld   $00         ;'\x00'
              7290 002e  ld   $2e
              7291 00a0  ld   $a0
              7292 000d  ld   $0d
              7293 0097  ld   $97
              7294 000c  ld   $0c
              7295 0049  ld   $49         ;'I'
              7296 004e  ld   $4e         ;'N'
              7297 0050  ld   $50         ;'P'
              7298 0055  ld   $55         ;'U'
              7299 0054  ld   $54         ;'T'
              729a 0059  ld   $59         ;'Y'
              729b 003a  ld   $3a         ;':'
              729c 0049  ld   $49         ;'I'
              729d 003d  ld   $3d         ;'='
              729e 0059  ld   $59         ;'Y'
              729f 0000  ld   $00         ;'\x00'
              72a0 002e  ld   $2e
              72a1 00c0  ld   $c0
              72a2 0011  ld   $11
              72a3 009f  ld   $9f
              72a4 000c  ld   $0c
              72a5 0049  ld   $49         ;'I'
              72a6 0046  ld   $46         ;'F'
              72a7 0049  ld   $49         ;'I'
              72a8 003c  ld   $3c         ;'<'
              72a9 003d  ld   $3d         ;'='
              72aa 0030  ld   $30         ;'0'
              72ab 0047  ld   $47         ;'G'
              72ac 004f  ld   $4f         ;'O'
              72ad 0054  ld   $54         ;'T'
              72ae 004f  ld   $4f         ;'O'
              72af 0033  ld   $33         ;'3'
              72b0 0032  ld   $32         ;'2'
              72b1 0034  ld   $34         ;'4'
              72b2 0030  ld   $30         ;'0'
              72b3 0000  ld   $00         ;'\x00'
              72b4 002e  ld   $2e
              72b5 00e0  ld   $e0
              72b6 0011  ld   $11
              72b7 00a0  ld   $a0
              72b8 000c  ld   $0c
              72b9 0049  ld   $49         ;'I'
              72ba 0046  ld   $46         ;'F'
              72bb 0049  ld   $49         ;'I'
              72bc 003c  ld   $3c         ;'<'
              72bd 0031  ld   $31         ;'1'
              72be 0030  ld   $30         ;'0'
              72bf 0047  ld   $47         ;'G'
              72c0 004f  ld   $4f         ;'O'
              72c1 0054  ld   $54         ;'T'
              72c2 004f  ld   $4f         ;'O'
              72c3 0033  ld   $33         ;'3'
              72c4 0032  ld   $32         ;'2'
              72c5 0037  ld   $37         ;'7'
              72c6 0030  ld   $30         ;'0'
              72c7 0000  ld   $00         ;'\x00'
              72c8 002f  ld   $2f
              72c9 00a0  ld   $a0
              72ca 0014  ld   $14
              72cb 00a8  ld   $a8
              72cc 000c  ld   $0c
              72cd 003f  ld   $3f         ;'?'
              72ce 0022  ld   $22         ;'"'
              72cf 0050  ld   $50         ;'P'
              72d0 004c  ld   $4c         ;'L'
              72d1 0045  ld   $45         ;'E'
              72d2 0041  ld   $41         ;'A'
              72d3 0053  ld   $53         ;'S'
              72d4 0045  ld   $45         ;'E'
              72d5 0020  ld   $20         ;' '
              72d6 0054  ld   $54         ;'T'
              72d7 0059  ld   $59         ;'Y'
              72d8 0050  ld   $50         ;'P'
              72d9 0045  ld   $45         ;'E'
              72da 0020  ld   $20         ;' '
              72db 0041  ld   $41         ;'A'
              72dc 0022  ld   $22         ;'"'
              72dd 003b  ld   $3b         ;';'
              72de 0000  ld   $00         ;'\x00'
              72df 002f  ld   $2f
              72e0 00c0  ld   $c0
              72e1 000d  ld   $0d
              72e2 00aa  ld   $aa
              72e3 000c  ld   $0c
              72e4 003f  ld   $3f         ;'?'
              72e5 0022  ld   $22         ;'"'
              72e6 0020  ld   $20         ;' '
              72e7 004e  ld   $4e         ;'N'
              72e8 0055  ld   $55         ;'U'
              72e9 004d  ld   $4d         ;'M'
              72ea 0042  ld   $42         ;'B'
              72eb 0045  ld   $45         ;'E'
              72ec 0052  ld   $52         ;'R'
              72ed 0022  ld   $22         ;'"'
              72ee 0000  ld   $00         ;'\x00'
              72ef 002f  ld   $2f
              72f0 00e0  ld   $e0
              72f1 0016  ld   $16
              72f2 00ab  ld   $ab
              72f3 000c  ld   $0c
              72f4 003f  ld   $3f         ;'?'
              72f5 0022  ld   $22         ;'"'
              72f6 0042  ld   $42         ;'B'
              72f7 0045  ld   $45         ;'E'
              72f8 0054  ld   $54         ;'T'
              72f9 0057  ld   $57         ;'W'
              72fa 0045  ld   $45         ;'E'
              72fb fe00  bra  ac          ;+-----------------------------------+
              72fc fcfd  bra  $72fd       ;|                                   |
              72fd 1418  ld   $18,y       ;| Trampoline for page $7200 lookups |
              72fe e006  jmp  y,$06       ;|                                   |
              72ff c218  st   [$18]       ;+-----------------------------------+
              7300 0045  ld   $45         ;'E'
              7301 004e  ld   $4e         ;'N'
              7302 0020  ld   $20         ;' '
              7303 0031  ld   $31         ;'1'
              7304 0020  ld   $20         ;' '
              7305 0041  ld   $41         ;'A'
              7306 004e  ld   $4e         ;'N'
              7307 0044  ld   $44         ;'D'
              7308 0020  ld   $20         ;' '
              7309 0039  ld   $39         ;'9'
              730a 0022  ld   $22         ;'"'
              730b 003b  ld   $3b         ;';'
              730c 0000  ld   $00         ;'\x00'
              730d 0030  ld   $30
              730e 00a0  ld   $a0
              730f 0010  ld   $10
              7310 00b3  ld   $b3
              7311 000c  ld   $0c
              7312 003f  ld   $3f         ;'?'
              7313 0022  ld   $22         ;'"'
              7314 0020  ld   $20         ;' '
              7315 0057  ld   $57         ;'W'
              7316 0048  ld   $48         ;'H'
              7317 0045  ld   $45         ;'E'
              7318 0052  ld   $52         ;'R'
              7319 0045  ld   $45         ;'E'
              731a 0020  ld   $20         ;' '
              731b 0059  ld   $59         ;'Y'
              731c 004f  ld   $4f         ;'O'
              731d 0055  ld   $55         ;'U'
              731e 0022  ld   $22         ;'"'
              731f 0000  ld   $00         ;'\x00'
              7320 0030  ld   $30
              7321 00c0  ld   $c0
              7322 0013  ld   $13
              7323 00b4  ld   $b4
              7324 000c  ld   $0c
              7325 003f  ld   $3f         ;'?'
              7326 0022  ld   $22         ;'"'
              7327 0057  ld   $57         ;'W'
              7328 0049  ld   $49         ;'I'
              7329 0053  ld   $53         ;'S'
              732a 0048  ld   $48         ;'H'
              732b 0020  ld   $20         ;' '
              732c 0054  ld   $54         ;'T'
              732d 004f  ld   $4f         ;'O'
              732e 0020  ld   $20         ;' '
              732f 0050  ld   $50         ;'P'
              7330 004c  ld   $4c         ;'L'
              7331 0041  ld   $41         ;'A'
              7332 0059  ld   $59         ;'Y'
              7333 0022  ld   $22         ;'"'
              7334 003b  ld   $3b         ;';'
              7335 0000  ld   $00         ;'\x00'
              7336 0030  ld   $30
              7337 00e0  ld   $e0
              7338 000d  ld   $0d
              7339 00b5  ld   $b5
              733a 000c  ld   $0c
              733b 003f  ld   $3f         ;'?'
              733c 0022  ld   $22         ;'"'
              733d 0020  ld   $20         ;' '
              733e 0059  ld   $59         ;'Y'
              733f 004f  ld   $4f         ;'O'
              7340 0055  ld   $55         ;'U'
              7341 0052  ld   $52         ;'R'
              7342 0020  ld   $20         ;' '
              7343 0058  ld   $58         ;'X'
              7344 0022  ld   $22         ;'"'
              7345 0000  ld   $00         ;'\x00'
              7346 0031  ld   $31
              7347 00a0  ld   $a0
              7348 000b  ld   $0b
              7349 00bc  ld   $bc
              734a 000c  ld   $0c
              734b 0047  ld   $47         ;'G'
              734c 004f  ld   $4f         ;'O'
              734d 0054  ld   $54         ;'T'
              734e 004f  ld   $4f         ;'O'
              734f 0033  ld   $33         ;'3'
              7350 0032  ld   $32         ;'2'
              7351 0031  ld   $31         ;'1'
              7352 0030  ld   $30         ;'0'
              7353 0000  ld   $00         ;'\x00'
              7354 0031  ld   $31
              7355 00c0  ld   $c0
              7356 0015  ld   $15
              7357 00c6  ld   $c6
              7358 000c  ld   $0c
              7359 0049  ld   $49         ;'I'
              735a 0046  ld   $46         ;'F'
              735b 0041  ld   $41         ;'A'
              735c 0028  ld   $28         ;'('
              735d 0049  ld   $49         ;'I'
              735e 002b  ld   $2b         ;'+'
              735f 0036  ld   $36         ;'6'
              7360 0029  ld   $29         ;')'
              7361 003d  ld   $3d         ;'='
              7362 0030  ld   $30         ;'0'
              7363 0047  ld   $47         ;'G'
              7364 004f  ld   $4f         ;'O'
              7365 0054  ld   $54         ;'T'
              7366 004f  ld   $4f         ;'O'
              7367 0033  ld   $33         ;'3'
              7368 0033  ld   $33         ;'3'
              7369 0031  ld   $31         ;'1'
              736a 0030  ld   $30         ;'0'
              736b 0000  ld   $00         ;'\x00'
              736c 0031  ld   $31
              736d 00e0  ld   $e0
              736e 0015  ld   $15
              736f 00d1  ld   $d1
              7370 000c  ld   $0c
              7371 003f  ld   $3f         ;'?'
              7372 0022  ld   $22         ;'"'
              7373 0054  ld   $54         ;'T'
              7374 0048  ld   $48         ;'H'
              7375 0041  ld   $41         ;'A'
              7376 0054  ld   $54         ;'T'
              7377 0020  ld   $20         ;' '
              7378 0053  ld   $53         ;'S'
              7379 0051  ld   $51         ;'Q'
              737a 0055  ld   $55         ;'U'
              737b 0041  ld   $41         ;'A'
              737c 0052  ld   $52         ;'R'
              737d 0045  ld   $45         ;'E'
              737e 0020  ld   $20         ;' '
              737f 0049  ld   $49         ;'I'
              7380 0053  ld   $53         ;'S'
              7381 0022  ld   $22         ;'"'
              7382 003b  ld   $3b         ;';'
              7383 0000  ld   $00         ;'\x00'
              7384 0032  ld   $32
              7385 00a0  ld   $a0
              7386 0017  ld   $17
              7387 00d2  ld   $d2
              7388 000c  ld   $0c
              7389 003f  ld   $3f         ;'?'
              738a 0022  ld   $22         ;'"'
              738b 0020  ld   $20         ;' '
              738c 0041  ld   $41         ;'A'
              738d 004c  ld   $4c         ;'L'
              738e 0052  ld   $52         ;'R'
              738f 0045  ld   $45         ;'E'
              7390 0041  ld   $41         ;'A'
              7391 0044  ld   $44         ;'D'
              7392 0059  ld   $59         ;'Y'
              7393 0022  ld   $22         ;'"'
              7394 003a  ld   $3a         ;':'
              7395 003f  ld   $3f         ;'?'
              7396 0022  ld   $22         ;'"'
              7397 0054  ld   $54         ;'T'
              7398 0041  ld   $41         ;'A'
              7399 004b  ld   $4b         ;'K'
              739a 0045  ld   $45         ;'E'
              739b 004e  ld   $4e         ;'N'
              739c 0022  ld   $22         ;'"'
              739d 0000  ld   $00         ;'\x00'
              739e 0032  ld   $32
              739f 00c0  ld   $c0
              73a0 000b  ld   $0b
              73a1 00da  ld   $da
              73a2 000c  ld   $0c
              73a3 0047  ld   $47         ;'G'
              73a4 004f  ld   $4f         ;'O'
              73a5 0054  ld   $54         ;'T'
              73a6 004f  ld   $4f         ;'O'
              73a7 0033  ld   $33         ;'3'
              73a8 0032  ld   $32         ;'2'
              73a9 0031  ld   $31         ;'1'
              73aa 0030  ld   $30         ;'0'
              73ab 0000  ld   $00         ;'\x00'
              73ac 0032  ld   $32
              73ad 00e0  ld   $e0
              73ae 0011  ld   $11
              73af 00ee  ld   $ee
              73b0 000c  ld   $0c
              73b1 0041  ld   $41         ;'A'
              73b2 0028  ld   $28         ;'('
              73b3 0049  ld   $49         ;'I'
              73b4 002b  ld   $2b         ;'+'
              73b5 0036  ld   $36         ;'6'
              73b6 0029  ld   $29         ;')'
              73b7 003d  ld   $3d         ;'='
              73b8 0031  ld   $31         ;'1'
              73b9 003a  ld   $3a         ;':'
              73ba 0055  ld   $55         ;'U'
              73bb 003d  ld   $3d         ;'='
              73bc 0055  ld   $55         ;'U'
              73bd 002d  ld   $2d         ;'-'
              73be 0031  ld   $31         ;'1'
              73bf 0000  ld   $00         ;'\x00'
              73c0 0033  ld   $33
              73c1 00a0  ld   $a0
              73c2 0009  ld   $09
              73c3 00f8  ld   $f8
              73c4 000c  ld   $0c
              73c5 0057  ld   $57         ;'W'
              73c6 003d  ld   $3d         ;'='
              73c7 0036  ld   $36         ;'6'
              73c8 0031  ld   $31         ;'1'
              73c9 0030  ld   $30         ;'0'
              73ca 0030  ld   $30         ;'0'
              73cb 0000  ld   $00         ;'\x00'
              73cc 0033  ld   $33
              73cd 00c0  ld   $c0
              73ce 0009  ld   $09
              73cf 0002  ld   $02
              73d0 000d  ld   $0d
              73d1 0047  ld   $47         ;'G'
              73d2 004f  ld   $4f         ;'O'
              73d3 0053  ld   $53         ;'S'
              73d4 0055  ld   $55         ;'U'
              73d5 0042  ld   $42         ;'B'
              73d6 0057  ld   $57         ;'W'
              73d7 0000  ld   $00         ;'\x00'
              73d8 0033  ld   $33
              73d9 00e0  ld   $e0
              73da 0011  ld   $11
              73db 000d  ld   $0d
              73dc 000d  ld   $0d
              73dd 0049  ld   $49         ;'I'
              73de 0046  ld   $46         ;'F'
              73df 004a  ld   $4a         ;'J'
              73e0 003c  ld   $3c         ;'<'
              73e1 003d  ld   $3d         ;'='
              73e2 0030  ld   $30         ;'0'
              73e3 0047  ld   $47         ;'G'
              73e4 004f  ld   $4f         ;'O'
              73e5 0054  ld   $54         ;'T'
              73e6 004f  ld   $4f         ;'O'
              73e7 0033  ld   $33         ;'3'
              73e8 0033  ld   $33         ;'3'
              73e9 0035  ld   $35         ;'5'
              73ea 0030  ld   $30         ;'0'
              73eb 0000  ld   $00         ;'\x00'
              73ec 0034  ld   $34
              73ed 00a0  ld   $a0
              73ee 0014  ld   $14
              73ef 000e  ld   $0e
              73f0 000d  ld   $0d
              73f1 0049  ld   $49         ;'I'
              73f2 0046  ld   $46         ;'F'
              73f3 004c  ld   $4c         ;'L'
              73f4 002a  ld   $2a         ;'*'
              73f5 004d  ld   $4d         ;'M'
              73f6 002a  ld   $2a         ;'*'
              73f7 004e  ld   $4e         ;'N'
              73f8 003d  ld   $3d         ;'='
              73f9 0031  ld   $31         ;'1'
              73fa 0047  ld   $47         ;'G'
              73fb fe00  bra  ac          ;+-----------------------------------+
              73fc fcfd  bra  $73fd       ;|                                   |
              73fd 1418  ld   $18,y       ;| Trampoline for page $7300 lookups |
              73fe e006  jmp  y,$06       ;|                                   |
              73ff c218  st   [$18]       ;+-----------------------------------+
              7400 004f  ld   $4f         ;'O'
              7401 0054  ld   $54         ;'T'
              7402 004f  ld   $4f         ;'O'
              7403 0031  ld   $31         ;'1'
              7404 0035  ld   $35         ;'5'
              7405 0031  ld   $31         ;'1'
              7406 0030  ld   $30         ;'0'
              7407 0000  ld   $00         ;'\x00'
              7408 0034  ld   $34
              7409 00c0  ld   $c0
              740a 000a  ld   $0a
              740b 0016  ld   $16
              740c 000d  ld   $0d
              740d 0057  ld   $57         ;'W'
              740e 003d  ld   $3d         ;'='
              740f 0057  ld   $57         ;'W'
              7410 002b  ld   $2b         ;'+'
              7411 0031  ld   $31         ;'1'
              7412 0030  ld   $30         ;'0'
              7413 0030  ld   $30         ;'0'
              7414 0000  ld   $00         ;'\x00'
              7415 0034  ld   $34
              7416 00e0  ld   $e0
              7417 0013  ld   $13
              7418 0020  ld   $20
              7419 000d  ld   $0d
              741a 0049  ld   $49         ;'I'
              741b 0046  ld   $46         ;'F'
              741c 0057  ld   $57         ;'W'
              741d 003c  ld   $3c         ;'<'
              741e 0036  ld   $36         ;'6'
              741f 0035  ld   $35         ;'5'
              7420 0030  ld   $30         ;'0'
              7421 0030  ld   $30         ;'0'
              7422 0047  ld   $47         ;'G'
              7423 004f  ld   $4f         ;'O'
              7424 0054  ld   $54         ;'T'
              7425 004f  ld   $4f         ;'O'
              7426 0033  ld   $33         ;'3'
              7427 0033  ld   $33         ;'3'
              7428 0033  ld   $33         ;'3'
              7429 0030  ld   $30         ;'0'
              742a 0000  ld   $00         ;'\x00'
              742b 0035  ld   $35
              742c 00a0  ld   $a0
              742d 0010  ld   $10
              742e 0052  ld   $52
              742f 000d  ld   $0d
              7430 0049  ld   $49         ;'I'
              7431 0046  ld   $46         ;'F'
              7432 0055  ld   $55         ;'U'
              7433 003d  ld   $3d         ;'='
              7434 0030  ld   $30         ;'0'
              7435 0047  ld   $47         ;'G'
              7436 004f  ld   $4f         ;'O'
              7437 0054  ld   $54         ;'T'
              7438 004f  ld   $4f         ;'O'
              7439 0032  ld   $32         ;'2'
              743a 0030  ld   $30         ;'0'
              743b 0031  ld   $31         ;'1'
              743c 0030  ld   $30         ;'0'
              743d 0000  ld   $00         ;'\x00'
              743e 0035  ld   $35
              743f 00c0  ld   $c0
              7440 0006  ld   $06
              7441 00aa  ld   $aa
              7442 000f  ld   $0f
              7443 0049  ld   $49         ;'I'
              7444 003d  ld   $3d         ;'='
              7445 0031  ld   $31         ;'1'
              7446 0000  ld   $00         ;'\x00'
              7447 0035  ld   $35
              7448 00e0  ld   $e0
              7449 0007  ld   $07
              744a 00b4  ld   $b4
              744b 000f  ld   $0f
              744c 0054  ld   $54         ;'T'
              744d 003d  ld   $3d         ;'='
              744e 002d  ld   $2d         ;'-'
              744f 0031  ld   $31         ;'1'
              7450 0000  ld   $00         ;'\x00'
              7451 0036  ld   $36
              7452 00a0  ld   $a0
              7453 0006  ld   $06
              7454 00cc  ld   $cc
              7455 0010  ld   $10
              7456 0053  ld   $53         ;'S'
              7457 003d  ld   $3d         ;'='
              7458 0030  ld   $30         ;'0'
              7459 0000  ld   $00         ;'\x00'
              745a 0036  ld   $36
              745b 00c0  ld   $c0
              745c 0015  ld   $15
              745d 00d7  ld   $d7
              745e 0010  ld   $10
              745f 0049  ld   $49         ;'I'
              7460 0046  ld   $46         ;'F'
              7461 0041  ld   $41         ;'A'
              7462 0028  ld   $28         ;'('
              7463 0049  ld   $49         ;'I'
              7464 002b  ld   $2b         ;'+'
              7465 0036  ld   $36         ;'6'
              7466 0029  ld   $29         ;')'
              7467 003e  ld   $3e         ;'>'
              7468 0030  ld   $30         ;'0'
              7469 0047  ld   $47         ;'G'
              746a 004f  ld   $4f         ;'O'
              746b 0054  ld   $54         ;'T'
              746c 004f  ld   $4f         ;'O'
              746d 0034  ld   $34         ;'4'
              746e 0034  ld   $34         ;'4'
              746f 0038  ld   $38         ;'8'
              7470 0030  ld   $30         ;'0'
              7471 0000  ld   $00         ;'\x00'
              7472 0036  ld   $36
              7473 00e0  ld   $e0
              7474 0009  ld   $09
              7475 00e0  ld   $e0
              7476 0010  ld   $10
              7477 0057  ld   $57         ;'W'
              7478 003d  ld   $3d         ;'='
              7479 0036  ld   $36         ;'6'
              747a 0031  ld   $31         ;'1'
              747b 0030  ld   $30         ;'0'
              747c 0030  ld   $30         ;'0'
              747d 0000  ld   $00         ;'\x00'
              747e 0037  ld   $37
              747f 00a0  ld   $a0
              7480 0009  ld   $09
              7481 00ea  ld   $ea
              7482 0010  ld   $10
              7483 0047  ld   $47         ;'G'
              7484 004f  ld   $4f         ;'O'
              7485 0053  ld   $53         ;'S'
              7486 0055  ld   $55         ;'U'
              7487 0042  ld   $42         ;'B'
              7488 0057  ld   $57         ;'W'
              7489 0000  ld   $00         ;'\x00'
              748a 0037  ld   $37
              748b 00c0  ld   $c0
              748c 0010  ld   $10
              748d 00f4  ld   $f4
              748e 0010  ld   $10
              748f 0049  ld   $49         ;'I'
              7490 0046  ld   $46         ;'F'
              7491 004a  ld   $4a         ;'J'
              7492 003d  ld   $3d         ;'='
              7493 0030  ld   $30         ;'0'
              7494 0047  ld   $47         ;'G'
              7495 004f  ld   $4f         ;'O'
              7496 0054  ld   $54         ;'T'
              7497 004f  ld   $4f         ;'O'
              7498 0034  ld   $34         ;'4'
              7499 0034  ld   $34         ;'4'
              749a 0031  ld   $31         ;'1'
              749b 0030  ld   $30         ;'0'
              749c 0000  ld   $00         ;'\x00'
              749d 0037  ld   $37
              749e 00e0  ld   $e0
              749f 000a  ld   $0a
              74a0 00fe  ld   $fe
              74a1 0010  ld   $10
              74a2 004a  ld   $4a         ;'J'
              74a3 003d  ld   $3d         ;'='
              74a4 004c  ld   $4c         ;'L'
              74a5 002b  ld   $2b         ;'+'
              74a6 004d  ld   $4d         ;'M'
              74a7 002b  ld   $2b         ;'+'
              74a8 004e  ld   $4e         ;'N'
              74a9 0000  ld   $00         ;'\x00'
              74aa 0038  ld   $38
              74ab 00a0  ld   $a0
              74ac 0010  ld   $10
              74ad 0009  ld   $09
              74ae 0011  ld   $11
              74af 0049  ld   $49         ;'I'
              74b0 0046  ld   $46         ;'F'
              74b1 004a  ld   $4a         ;'J'
              74b2 003d  ld   $3d         ;'='
              74b3 0034  ld   $34         ;'4'
              74b4 0047  ld   $47         ;'G'
              74b5 004f  ld   $4f         ;'O'
              74b6 0054  ld   $54         ;'T'
              74b7 004f  ld   $4f         ;'O'
              74b8 0034  ld   $34         ;'4'
              74b9 0034  ld   $34         ;'4'
              74ba 0031  ld   $31         ;'1'
              74bb 0030  ld   $30         ;'0'
              74bc 0000  ld   $00         ;'\x00'
              74bd 0038  ld   $38
              74be 00c0  ld   $c0
              74bf 000e  ld   $0e
              74c0 0013  ld   $13
              74c1 0011  ld   $11
              74c2 0049  ld   $49         ;'I'
              74c3 0046  ld   $46         ;'F'
              74c4 004a  ld   $4a         ;'J'
              74c5 003d  ld   $3d         ;'='
              74c6 0032  ld   $32         ;'2'
              74c7 0053  ld   $53         ;'S'
              74c8 003d  ld   $3d         ;'='
              74c9 0053  ld   $53         ;'S'
              74ca 002b  ld   $2b         ;'+'
              74cb 0032  ld   $32         ;'2'
              74cc 0030  ld   $30         ;'0'
              74cd 0000  ld   $00         ;'\x00'
              74ce 0038  ld   $38
              74cf 00e0  ld   $e0
              74d0 000f  ld   $0f
              74d1 001d  ld   $1d
              74d2 0011  ld   $11
              74d3 0049  ld   $49         ;'I'
              74d4 0046  ld   $46         ;'F'
              74d5 004a  ld   $4a         ;'J'
              74d6 003d  ld   $3d         ;'='
              74d7 0036  ld   $36         ;'6'
              74d8 0053  ld   $53         ;'S'
              74d9 003d  ld   $3d         ;'='
              74da 0053  ld   $53         ;'S'
              74db 002b  ld   $2b         ;'+'
              74dc 0031  ld   $31         ;'1'
              74dd 0030  ld   $30         ;'0'
              74de 0030  ld   $30         ;'0'
              74df 0000  ld   $00         ;'\x00'
              74e0 0039  ld   $39
              74e1 00a0  ld   $a0
              74e2 000d  ld   $0d
              74e3 0027  ld   $27
              74e4 0011  ld   $11
              74e5 0049  ld   $49         ;'I'
              74e6 0046  ld   $46         ;'F'
              74e7 004a  ld   $4a         ;'J'
              74e8 003d  ld   $3d         ;'='
              74e9 0030  ld   $30         ;'0'
              74ea 0053  ld   $53         ;'S'
              74eb 003d  ld   $3d         ;'='
              74ec 0053  ld   $53         ;'S'
              74ed 002b  ld   $2b         ;'+'
              74ee 0032  ld   $32         ;'2'
              74ef 0000  ld   $00         ;'\x00'
              74f0 0039  ld   $39
              74f1 00c0  ld   $c0
              74f2 0008  ld   $08
              74f3 0030  ld   $30
              74f4 0011  ld   $11
              74f5 0053  ld   $53         ;'S'
              74f6 003d  ld   $3d         ;'='
              74f7 0053  ld   $53         ;'S'
              74f8 002b  ld   $2b         ;'+'
              74f9 004a  ld   $4a         ;'J'
              74fa 0000  ld   $00         ;'\x00'
              74fb fe00  bra  ac          ;+-----------------------------------+
              74fc fcfd  bra  $74fd       ;|                                   |
              74fd 1418  ld   $18,y       ;| Trampoline for page $7400 lookups |
              74fe e006  jmp  y,$06       ;|                                   |
              74ff c218  st   [$18]       ;+-----------------------------------+
              7500 0039  ld   $39
              7501 00e0  ld   $e0
              7502 000a  ld   $0a
              7503 003a  ld   $3a
              7504 0011  ld   $11
              7505 0057  ld   $57         ;'W'
              7506 003d  ld   $3d         ;'='
              7507 0057  ld   $57         ;'W'
              7508 002b  ld   $2b         ;'+'
              7509 0031  ld   $31         ;'1'
              750a 0030  ld   $30         ;'0'
              750b 0030  ld   $30         ;'0'
              750c 0000  ld   $00         ;'\x00'
              750d 003a  ld   $3a
              750e 00a0  ld   $a0
              750f 0013  ld   $13
              7510 0044  ld   $44
              7511 0011  ld   $11
              7512 0049  ld   $49         ;'I'
              7513 0046  ld   $46         ;'F'
              7514 0057  ld   $57         ;'W'
              7515 003c  ld   $3c         ;'<'
              7516 0036  ld   $36         ;'6'
              7517 0035  ld   $35         ;'5'
              7518 0030  ld   $30         ;'0'
              7519 0030  ld   $30         ;'0'
              751a 0047  ld   $47         ;'G'
              751b 004f  ld   $4f         ;'O'
              751c 0054  ld   $54         ;'T'
              751d 004f  ld   $4f         ;'O'
              751e 0034  ld   $34         ;'4'
              751f 0033  ld   $33         ;'3'
              7520 0033  ld   $33         ;'3'
              7521 0030  ld   $30         ;'0'
              7522 0000  ld   $00         ;'\x00'
              7523 003a  ld   $3a
              7524 00c0  ld   $c0
              7525 0010  ld   $10
              7526 004f  ld   $4f
              7527 0011  ld   $11
              7528 0049  ld   $49         ;'I'
              7529 0046  ld   $46         ;'F'
              752a 0053  ld   $53         ;'S'
              752b 003c  ld   $3c         ;'<'
              752c 0054  ld   $54         ;'T'
              752d 0047  ld   $47         ;'G'
              752e 004f  ld   $4f         ;'O'
              752f 0054  ld   $54         ;'T'
              7530 004f  ld   $4f         ;'O'
              7531 0034  ld   $34         ;'4'
              7532 0034  ld   $34         ;'4'
              7533 0037  ld   $37         ;'7'
              7534 0030  ld   $30         ;'0'
              7535 0000  ld   $00         ;'\x00'
              7536 003a  ld   $3a
              7537 00e0  ld   $e0
              7538 0006  ld   $06
              7539 0058  ld   $58
              753a 0011  ld   $11
              753b 0054  ld   $54         ;'T'
              753c 003d  ld   $3d         ;'='
              753d 0053  ld   $53         ;'S'
              753e 0000  ld   $00         ;'\x00'
              753f 003b  ld   $3b
              7540 00a0  ld   $a0
              7541 0006  ld   $06
              7542 0062  ld   $62
              7543 0011  ld   $11
              7544 0042  ld   $42         ;'B'
              7545 003d  ld   $3d         ;'='
              7546 0049  ld   $49         ;'I'
              7547 0000  ld   $00         ;'\x00'
              7548 003b  ld   $3b
              7549 00c0  ld   $c0
              754a 0008  ld   $08
              754b 0076  ld   $76
              754c 0011  ld   $11
              754d 003f  ld   $3f         ;'?'
              754e 0022  ld   $22         ;'"'
              754f 002e  ld   $2e         ;'.'
              7550 0022  ld   $22         ;'"'
              7551 003b  ld   $3b         ;';'
              7552 0000  ld   $00         ;'\x00'
              7553 003b  ld   $3b
              7554 00e0  ld   $e0
              7555 0008  ld   $08
              7556 0080  ld   $80
              7557 0011  ld   $11
              7558 0049  ld   $49         ;'I'
              7559 003d  ld   $3d         ;'='
              755a 0049  ld   $49         ;'I'
              755b 002b  ld   $2b         ;'+'
              755c 0031  ld   $31         ;'1'
              755d 0000  ld   $00         ;'\x00'
              755e 003c  ld   $3c
              755f 00a0  ld   $a0
              7560 0011  ld   $11
              7561 008a  ld   $8a
              7562 0011  ld   $11
              7563 0049  ld   $49         ;'I'
              7564 0046  ld   $46         ;'F'
              7565 0049  ld   $49         ;'I'
              7566 003c  ld   $3c         ;'<'
              7567 0031  ld   $31         ;'1'
              7568 0030  ld   $30         ;'0'
              7569 0047  ld   $47         ;'G'
              756a 004f  ld   $4f         ;'O'
              756b 0054  ld   $54         ;'T'
              756c 004f  ld   $4f         ;'O'
              756d 0034  ld   $34         ;'4'
              756e 0033  ld   $33         ;'3'
              756f 0030  ld   $30         ;'0'
              7570 0030  ld   $30         ;'0'
              7571 0000  ld   $00         ;'\x00'
              7572 003c  ld   $3c
              7573 00c0  ld   $c0
              7574 000f  ld   $0f
              7575 0094  ld   $94
              7576 0011  ld   $11
              7577 003f  ld   $3f         ;'?'
              7578 0022  ld   $22         ;'"'
              7579 0049  ld   $49         ;'I'
              757a 0020  ld   $20         ;' '
              757b 0050  ld   $50         ;'P'
              757c 004c  ld   $4c         ;'L'
              757d 0041  ld   $41         ;'A'
              757e 0059  ld   $59         ;'Y'
              757f 0020  ld   $20         ;' '
              7580 0022  ld   $22         ;'"'
              7581 003b  ld   $3b         ;';'
              7582 0042  ld   $42         ;'B'
              7583 0000  ld   $00         ;'\x00'
              7584 003c  ld   $3c
              7585 00e0  ld   $e0
              7586 0004  ld   $04
              7587 009e  ld   $9e
              7588 0011  ld   $11
              7589 003f  ld   $3f         ;'?'
              758a 0000  ld   $00         ;'\x00'
              758b 003d  ld   $3d
              758c 00a0  ld   $a0
              758d 000b  ld   $0b
              758e 00a9  ld   $a9
              758f 0011  ld   $11
              7590 0041  ld   $41         ;'A'
              7591 0028  ld   $28         ;'('
              7592 0042  ld   $42         ;'B'
              7593 002b  ld   $2b         ;'+'
              7594 0036  ld   $36         ;'6'
              7595 0029  ld   $29         ;')'
              7596 003d  ld   $3d         ;'='
              7597 0033  ld   $33         ;'3'
              7598 0000  ld   $00         ;'\x00'
              7599 003d  ld   $3d
              759a 00c0  ld   $c0
              759b 0008  ld   $08
              759c 00b2  ld   $b2
              759d 0011  ld   $11
              759e 0055  ld   $55         ;'U'
              759f 003d  ld   $3d         ;'='
              75a0 0055  ld   $55         ;'U'
              75a1 002d  ld   $2d         ;'-'
              75a2 0031  ld   $31         ;'1'
              75a3 0000  ld   $00         ;'\x00'
              75a4 003d  ld   $3d
              75a5 00e0  ld   $e0
              75a6 0012  ld   $12
              75a7 00bd  ld   $bd
              75a8 0011  ld   $11
              75a9 0049  ld   $49         ;'I'
              75aa 0046  ld   $46         ;'F'
              75ab 0054  ld   $54         ;'T'
              75ac 003c  ld   $3c         ;'<'
              75ad 0031  ld   $31         ;'1'
              75ae 0030  ld   $30         ;'0'
              75af 0030  ld   $30         ;'0'
              75b0 0047  ld   $47         ;'G'
              75b1 004f  ld   $4f         ;'O'
              75b2 0054  ld   $54         ;'T'
              75b3 004f  ld   $4f         ;'O'
              75b4 0032  ld   $32         ;'2'
              75b5 0030  ld   $30         ;'0'
              75b6 0031  ld   $31         ;'1'
              75b7 0030  ld   $30         ;'0'
              75b8 0000  ld   $00         ;'\x00'
              75b9 003e  ld   $3e
              75ba 00a0  ld   $a0
              75bb 0006  ld   $06
              75bc 00d0  ld   $d0
              75bd 0011  ld   $11
              75be 0046  ld   $46         ;'F'
              75bf 003d  ld   $3d         ;'='
              75c0 0031  ld   $31         ;'1'
              75c1 0000  ld   $00         ;'\x00'
              75c2 003e  ld   $3e
              75c3 00c0  ld   $c0
              75c4 0006  ld   $06
              75c5 00da  ld   $da
              75c6 0011  ld   $11
              75c7 005a  ld   $5a         ;'Z'
              75c8 003d  ld   $3d         ;'='
              75c9 0031  ld   $31         ;'1'
              75ca 0000  ld   $00         ;'\x00'
              75cb 003e  ld   $3e
              75cc 00e0  ld   $e0
              75cd 000b  ld   $0b
              75ce 00e4  ld   $e4
              75cf 0011  ld   $11
              75d0 0047  ld   $47         ;'G'
              75d1 004f  ld   $4f         ;'O'
              75d2 0054  ld   $54         ;'T'
              75d3 004f  ld   $4f         ;'O'
              75d4 0032  ld   $32         ;'2'
              75d5 0030  ld   $30         ;'0'
              75d6 0031  ld   $31         ;'1'
              75d7 0030  ld   $30         ;'0'
              75d8 0000  ld   $00         ;'\x00'
              75d9 003f  ld   $3f
              75da 00a0  ld   $a0
              75db 0010  ld   $10
              75dc 00d4  ld   $d4
              75dd 0017  ld   $17
              75de 004a  ld   $4a         ;'J'
              75df 003d  ld   $3d         ;'='
              75e0 0028  ld   $28         ;'('
              75e1 0049  ld   $49         ;'I'
              75e2 002d  ld   $2d         ;'-'
              75e3 0031  ld   $31         ;'1'
              75e4 0029  ld   $29         ;')'
              75e5 002f  ld   $2f         ;'/'
              75e6 0033  ld   $33         ;'3'
              75e7 002a  ld   $2a         ;'*'
              75e8 0033  ld   $33         ;'3'
              75e9 002b  ld   $2b         ;'+'
              75ea 0038  ld   $38         ;'8'
              75eb 0000  ld   $00         ;'\x00'
              75ec 003f  ld   $3f
              75ed 00c0  ld   $c0
              75ee 0006  ld   $06
              75ef 00de  ld   $de
              75f0 0017  ld   $17
              75f1 0044  ld   $44         ;'D'
              75f2 003d  ld   $3d         ;'='
              75f3 0031  ld   $31         ;'1'
              75f4 0000  ld   $00         ;'\x00'
              75f5 003f  ld   $3f
              75f6 00e0  ld   $e0
              75f7 000b  ld   $0b
              75f8 00e8  ld   $e8
              75f9 0017  ld   $17
              75fa 0047  ld   $47         ;'G'
              75fb fe00  bra  ac          ;+-----------------------------------+
              75fc fcfd  bra  $75fd       ;|                                   |
              75fd 1418  ld   $18,y       ;| Trampoline for page $7500 lookups |
              75fe e006  jmp  y,$06       ;|                                   |
              75ff c218  st   [$18]       ;+-----------------------------------+
              7600 004f  ld   $4f         ;'O'
              7601 0054  ld   $54         ;'T'
              7602 004f  ld   $4f         ;'O'
              7603 0036  ld   $36         ;'6'
              7604 0035  ld   $35         ;'5'
              7605 0030  ld   $30         ;'0'
              7606 0030  ld   $30         ;'0'
              7607 0000  ld   $00         ;'\x00'
              7608 0040  ld   $40
              7609 00a0  ld   $a0
              760a 0012  ld   $12
              760b 0038  ld   $38
              760c 0018  ld   $18
              760d 004a  ld   $4a         ;'J'
              760e 003d  ld   $3d         ;'='
              760f 0049  ld   $49         ;'I'
              7610 002d  ld   $2d         ;'-'
              7611 0028  ld   $28         ;'('
              7612 0049  ld   $49         ;'I'
              7613 002d  ld   $2d         ;'-'
              7614 0031  ld   $31         ;'1'
              7615 0029  ld   $29         ;')'
              7616 002f  ld   $2f         ;'/'
              7617 0033  ld   $33         ;'3'
              7618 002a  ld   $2a         ;'*'
              7619 0033  ld   $33         ;'3'
              761a 002b  ld   $2b         ;'+'
              761b 0039  ld   $39         ;'9'
              761c 0000  ld   $00         ;'\x00'
              761d 0040  ld   $40
              761e 00c0  ld   $c0
              761f 0006  ld   $06
              7620 0042  ld   $42
              7621 0018  ld   $18
              7622 0044  ld   $44         ;'D'
              7623 003d  ld   $3d         ;'='
              7624 0033  ld   $33         ;'3'
              7625 0000  ld   $00         ;'\x00'
              7626 0040  ld   $40
              7627 00e0  ld   $e0
              7628 000b  ld   $0b
              7629 004c  ld   $4c
              762a 0018  ld   $18
              762b 0047  ld   $47         ;'G'
              762c 004f  ld   $4f         ;'O'
              762d 0054  ld   $54         ;'T'
              762e 004f  ld   $4f         ;'O'
              762f 0036  ld   $36         ;'6'
              7630 0035  ld   $35         ;'5'
              7631 0030  ld   $30         ;'0'
              7632 0030  ld   $30         ;'0'
              7633 0000  ld   $00         ;'\x00'
              7634 0041  ld   $41
              7635 00a0  ld   $a0
              7636 0013  ld   $13
              7637 009c  ld   $9c
              7638 0018  ld   $18
              7639 0049  ld   $49         ;'I'
              763a 0046  ld   $46         ;'F'
              763b 0049  ld   $49         ;'I'
              763c 0025  ld   $25         ;'%'
              763d 0034  ld   $34         ;'4'
              763e 003c  ld   $3c         ;'<'
              763f 003e  ld   $3e         ;'>'
              7640 0031  ld   $31         ;'1'
              7641 0047  ld   $47         ;'G'
              7642 004f  ld   $4f         ;'O'
              7643 0054  ld   $54         ;'T'
              7644 004f  ld   $4f         ;'O'
              7645 0036  ld   $36         ;'6'
              7646 0034  ld   $34         ;'4'
              7647 0034  ld   $34         ;'4'
              7648 0030  ld   $30         ;'0'
              7649 0000  ld   $00         ;'\x00'
              764a 0041  ld   $41
              764b 00c0  ld   $c0
              764c 0006  ld   $06
              764d 00a6  ld   $a6
              764e 0018  ld   $18
              764f 0044  ld   $44         ;'D'
              7650 003d  ld   $3d         ;'='
              7651 0034  ld   $34         ;'4'
              7652 0000  ld   $00         ;'\x00'
              7653 0041  ld   $41
              7654 00e0  ld   $e0
              7655 0007  ld   $07
              7656 00ba  ld   $ba
              7657 0018  ld   $18
              7658 004a  ld   $4a         ;'J'
              7659 003d  ld   $3d         ;'='
              765a 0031  ld   $31         ;'1'
              765b 0031  ld   $31         ;'1'
              765c 0000  ld   $00         ;'\x00'
              765d 0042  ld   $42
              765e 00a0  ld   $a0
              765f 000b  ld   $0b
              7660 00c4  ld   $c4
              7661 0018  ld   $18
              7662 0047  ld   $47         ;'G'
              7663 004f  ld   $4f         ;'O'
              7664 0054  ld   $54         ;'T'
              7665 004f  ld   $4f         ;'O'
              7666 0036  ld   $36         ;'6'
              7667 0035  ld   $35         ;'5'
              7668 0030  ld   $30         ;'0'
              7669 0030  ld   $30         ;'0'
              766a 0000  ld   $00         ;'\x00'
              766b 0042  ld   $42
              766c 00c0  ld   $c0
              766d 0006  ld   $06
              766e 0000  ld   $00
              766f 0019  ld   $19
              7670 0044  ld   $44         ;'D'
              7671 003d  ld   $3d         ;'='
              7672 0032  ld   $32         ;'2'
              7673 0000  ld   $00         ;'\x00'
              7674 0042  ld   $42
              7675 00e0  ld   $e0
              7676 0011  ld   $11
              7677 000b  ld   $0b
              7678 0019  ld   $19
              7679 0049  ld   $49         ;'I'
              767a 0046  ld   $46         ;'F'
              767b 0049  ld   $49         ;'I'
              767c 003c  ld   $3c         ;'<'
              767d 003d  ld   $3d         ;'='
              767e 0031  ld   $31         ;'1'
              767f 0047  ld   $47         ;'G'
              7680 004f  ld   $4f         ;'O'
              7681 0054  ld   $54         ;'T'
              7682 004f  ld   $4f         ;'O'
              7683 0036  ld   $36         ;'6'
              7684 0034  ld   $34         ;'4'
              7685 0034  ld   $34         ;'4'
              7686 0030  ld   $30         ;'0'
              7687 0000  ld   $00         ;'\x00'
              7688 0043  ld   $43
              7689 00a0  ld   $a0
              768a 0011  ld   $11
              768b 000c  ld   $0c
              768c 0019  ld   $19
              768d 0049  ld   $49         ;'I'
              768e 0046  ld   $46         ;'F'
              768f 0049  ld   $49         ;'I'
              7690 003e  ld   $3e         ;'>'
              7691 003d  ld   $3d         ;'='
              7692 0039  ld   $39         ;'9'
              7693 0047  ld   $47         ;'G'
              7694 004f  ld   $4f         ;'O'
              7695 0054  ld   $54         ;'T'
              7696 004f  ld   $4f         ;'O'
              7697 0036  ld   $36         ;'6'
              7698 0034  ld   $34         ;'4'
              7699 0034  ld   $34         ;'4'
              769a 0030  ld   $30         ;'0'
              769b 0000  ld   $00         ;'\x00'
              769c 0043  ld   $43
              769d 00c0  ld   $c0
              769e 0012  ld   $12
              769f 000d  ld   $0d
              76a0 0019  ld   $19
              76a1 0049  ld   $49         ;'I'
              76a2 0046  ld   $46         ;'F'
              76a3 0049  ld   $49         ;'I'
              76a4 0025  ld   $25         ;'%'
              76a5 0032  ld   $32         ;'2'
              76a6 003d  ld   $3d         ;'='
              76a7 0031  ld   $31         ;'1'
              76a8 0047  ld   $47         ;'G'
              76a9 004f  ld   $4f         ;'O'
              76aa 0054  ld   $54         ;'T'
              76ab 004f  ld   $4f         ;'O'
              76ac 0036  ld   $36         ;'6'
              76ad 0033  ld   $33         ;'3'
              76ae 0033  ld   $33         ;'3'
              76af 0030  ld   $30         ;'0'
              76b0 0000  ld   $00         ;'\x00'
              76b1 0043  ld   $43
              76b2 00e0  ld   $e0
              76b3 0006  ld   $06
              76b4 0028  ld   $28
              76b5 0019  ld   $19
              76b6 004a  ld   $4a         ;'J'
              76b7 003d  ld   $3d         ;'='
              76b8 0030  ld   $30         ;'0'
              76b9 0000  ld   $00         ;'\x00'
              76ba 0044  ld   $44
              76bb 00a0  ld   $a0
              76bc 0009  ld   $09
              76bd 0032  ld   $32
              76be 0019  ld   $19
              76bf 0052  ld   $52         ;'R'
              76c0 0045  ld   $45         ;'E'
              76c1 0054  ld   $54         ;'T'
              76c2 0055  ld   $55         ;'U'
              76c3 0052  ld   $52         ;'R'
              76c4 004e  ld   $4e         ;'N'
              76c5 0000  ld   $00         ;'\x00'
              76c6 0044  ld   $44
              76c7 00c0  ld   $c0
              76c8 000b  ld   $0b
              76c9 0064  ld   $64
              76ca 0019  ld   $19
              76cb 004c  ld   $4c         ;'L'
              76cc 003d  ld   $3d         ;'='
              76cd 0041  ld   $41         ;'A'
              76ce 0028  ld   $28         ;'('
              76cf 004a  ld   $4a         ;'J'
              76d0 002d  ld   $2d         ;'-'
              76d1 0044  ld   $44         ;'D'
              76d2 0029  ld   $29         ;')'
              76d3 0000  ld   $00         ;'\x00'
              76d4 0044  ld   $44
              76d5 00e0  ld   $e0
              76d6 0009  ld   $09
              76d7 0066  ld   $66
              76d8 0019  ld   $19
              76d9 004d  ld   $4d         ;'M'
              76da 003d  ld   $3d         ;'='
              76db 0041  ld   $41         ;'A'
              76dc 0028  ld   $28         ;'('
              76dd 004a  ld   $4a         ;'J'
              76de 0029  ld   $29         ;')'
              76df 0000  ld   $00         ;'\x00'
              76e0 0045  ld   $45
              76e1 00a0  ld   $a0
              76e2 000b  ld   $0b
              76e3 006e  ld   $6e
              76e4 0019  ld   $19
              76e5 004e  ld   $4e         ;'N'
              76e6 003d  ld   $3d         ;'='
              76e7 0041  ld   $41         ;'A'
              76e8 0028  ld   $28         ;'('
              76e9 004a  ld   $4a         ;'J'
              76ea 002b  ld   $2b         ;'+'
              76eb 0044  ld   $44         ;'D'
              76ec 0029  ld   $29         ;')'
              76ed 0000  ld   $00         ;'\x00'
              76ee 0045  ld   $45
              76ef 00c0  ld   $c0
              76f0 0009  ld   $09
              76f1 0082  ld   $82
              76f2 0019  ld   $19
              76f3 0052  ld   $52         ;'R'
              76f4 0045  ld   $45         ;'E'
              76f5 0054  ld   $54         ;'T'
              76f6 0055  ld   $55         ;'U'
              76f7 0052  ld   $52         ;'R'
              76f8 004e  ld   $4e         ;'N'
              76f9 0000  ld   $00         ;'\x00'
              76fa 0045  ld   $45
              76fb fe00  bra  ac          ;+-----------------------------------+
              76fc fcfd  bra  $76fd       ;|                                   |
              76fd 1418  ld   $18,y       ;| Trampoline for page $7600 lookups |
              76fe e006  jmp  y,$06       ;|                                   |
              76ff c218  st   [$18]       ;+-----------------------------------+
              7700 00e2  ld   $e2
              7701 0004  ld   $04
              7702 0052  ld   $52         ;'R'
              7703 0055  ld   $55         ;'U'
              7704 004e  ld   $4e         ;'N'
              7705 0000  ld   $00         ;'\x00'
              7706 001b  ld   $1b
              7707 00a0  ld   $a0
              7708 0002  ld   $02
              7709 00e0  ld   $e0
              770a 0045  ld   $45
              770b 0000  ld   $00
              770c 0000  ld   $00         ;End of Apps/TicTac/TicTac_v2.gtb, size 2012
                                          ;+-----------------------------------+
                                          ;| Apps/WozMon/WozMon_v2.gcl         |
                                          ;+-----------------------------------+
              770d dc54  st   $54,[y,x++] ;'T'
              770e dc69  st   $69,[y,x++] ;'i'
              770f dc63  st   $63,[y,x++] ;'c'
              7710 dc54  st   $54,[y,x++] ;'T'
              7711 dc61  st   $61,[y,x++] ;'a'
              7712 dc63  st   $63,[y,x++] ;'c'
              7713 dc00  st   $00,[y,x++] ;'\x00'
              7714 dc00  st   $00,[y,x++] ;'\x00'
              7715 000e  ld   $0e
              7716 c218  st   [$18]
              7717 006f  ld   $6f
              7718 14dd  ld   $dd,y
              7719 e06f  jmp  y,$6f
              771a c219  st   [$19]
WozMon:       771b 0002  ld   $02         ;| RAM segment address (high byte first)
              771c 0000  ld   $00         ;|
              771d 00e2  ld   $e2         ;| Length (1..256)
              771e 00cd  ld   $cd         ;0200 DEF
              771f 000a  ld   $0a
              7720 002a  ld   $2a
              7721 002a  ld   $2a
              7722 0020  ld   $20
              7723 0057  ld   $57
              7724 006f  ld   $6f
              7725 007a  ld   $7a
              7726 004d  ld   $4d
              7727 006f  ld   $6f
              7728 006e  ld   $6e
              7729 0000  ld   $00
              772a 002b  ld   $2b         ;020c STW
              772b 0030  ld   $30         ;020c 'tmp'
              772c 0011  ld   $11         ;020e LDWI
              772d 00df  ld   $df
              772e 0001  ld   $01
              772f 00f6  ld   $f6         ;0211 DEEK
              7730 002b  ld   $2b         ;0212 STW
              7731 0032  ld   $32         ;0212 'Pos'
              7732 00cd  ld   $cd         ;0214 DEF
              7733 0060  ld   $60
              7734 00e6  ld   $e6         ;0216 SUBI
              7735 0052  ld   $52
              7736 0035  ld   $35         ;0218 BCC
              7737 0053  ld   $53         ;0219 GE
              7738 0022  ld   $22
              7739 00e3  ld   $e3         ;021b ADDI
              773a 0032  ld   $32
              773b 002b  ld   $2b         ;021d STW
              773c 0034  ld   $34         ;021d 'i'
              773d 0011  ld   $11         ;021f LDWI
              773e 0000  ld   $00
              773f 0007  ld   $07
              7740 0090  ld   $90         ;0222 BRA
              7741 0027  ld   $27
              7742 002b  ld   $2b         ;0224 STW
              7743 0034  ld   $34         ;0224 'i'
              7744 0011  ld   $11         ;0226 LDWI
              7745 0000  ld   $00
              7746 0008  ld   $08
              7747 002b  ld   $2b         ;0229 STW
              7748 0036  ld   $36         ;0229 'k'
              7749 0021  ld   $21         ;022b LDW
              774a 0034  ld   $34         ;022b 'i'
              774b 00e9  ld   $e9         ;022d LSLW
              774c 00e9  ld   $e9         ;022e LSLW
              774d 0099  ld   $99         ;022f ADDW
              774e 0034  ld   $34         ;022f 'i'
              774f 0099  ld   $99         ;0231 ADDW
              7750 0036  ld   $36         ;0231 'k'
              7751 002b  ld   $2b         ;0233 STW
              7752 0036  ld   $36         ;0233 'k'
              7753 0011  ld   $11         ;0235 LDWI
              7754 00e1  ld   $e1
              7755 0004  ld   $04
              7756 002b  ld   $2b         ;0238 STW
              7757 0022  ld   $22
              7758 0021  ld   $21         ;023a LDW
              7759 002a  ld   $2a
              775a 002b  ld   $2b         ;023c STW
              775b 0024  ld   $24
              775c 0021  ld   $21         ;023e LDW
              775d 0032  ld   $32         ;023e 'Pos'
              775e 002b  ld   $2b         ;0240 STW
              775f 0028  ld   $28
              7760 00ec  ld   $ec         ;0242 STLW
              7761 00fe  ld   $fe
              7762 00e3  ld   $e3         ;0244 ADDI
              7763 0006  ld   $06
              7764 002b  ld   $2b         ;0246 STW
              7765 0032  ld   $32         ;0246 'Pos'
              7766 0059  ld   $59         ;0248 LDI
              7767 0005  ld   $05
              7768 002b  ld   $2b         ;024a STW
              7769 0034  ld   $34         ;024a 'i'
              776a 0021  ld   $21         ;024c LDW
              776b 0036  ld   $36         ;024c 'k'
              776c 007f  ld   $7f         ;024e LUP
              776d 0000  ld   $00
              776e 005e  ld   $5e         ;0250 ST
              776f 0026  ld   $26
              7770 00b4  ld   $b4         ;0252 SYS
              7771 00cc  ld   $cc
              7772 0093  ld   $93         ;0254 INC
              7773 0036  ld   $36         ;0254 'k'
              7774 0093  ld   $93         ;0256 INC
              7775 0028  ld   $28
              7776 0021  ld   $21         ;0258 LDW
              7777 0034  ld   $34         ;0258 'i'
              7778 00e6  ld   $e6         ;025a SUBI
              7779 0001  ld   $01
              777a 0035  ld   $35         ;025c BCC
              777b 004d  ld   $4d         ;025d GT
              777c 0048  ld   $48
              777d 00ee  ld   $ee         ;025f LDLW
              777e 00fe  ld   $fe
              777f 00ff  ld   $ff         ;0261 RET
              7780 002b  ld   $2b         ;0262 STW
              7781 0038  ld   $38         ;0262 'PrintChar'
              7782 00cd  ld   $cd         ;0264 DEF
              7783 00ad  ld   $ad
              7784 001a  ld   $1a         ;0266 LD
              7785 0032  ld   $32         ;0266 'Pos'
              7786 0035  ld   $35         ;0268 BCC
              7787 003f  ld   $3f         ;0269 EQ
              7788 00ac  ld   $ac
              7789 0011  ld   $11         ;026b LDWI
              778a 00e1  ld   $e1
              778b 0004  ld   $04
              778c 002b  ld   $2b         ;026e STW
              778d 0022  ld   $22
              778e 0011  ld   $11         ;0270 LDWI
              778f 0000  ld   $00
              7790 0008  ld   $08
              7791 005e  ld   $5e         ;0273 ST
              7792 0032  ld   $32         ;0273 'Pos'
              7793 0099  ld   $99         ;0275 ADDW
              7794 0032  ld   $32         ;0275 'Pos'
              7795 0035  ld   $35         ;0277 BCC
              7796 0053  ld   $53         ;0278 GE
              7797 007b  ld   $7b
              7798 0011  ld   $11         ;027a LDWI
              7799 0000  ld   $00
              779a 0008  ld   $08
              779b 002b  ld   $2b         ;027d STW
              779c 0032  ld   $32         ;027d 'Pos'
              779d 002b  ld   $2b         ;027f STW
              779e 0028  ld   $28
              779f 005e  ld   $5e         ;0281 ST
              77a0 0026  ld   $26
              77a1 00b4  ld   $b4         ;0283 SYS
              77a2 00cc  ld   $cc
              77a3 0093  ld   $93         ;0285 INC
              77a4 0028  ld   $28
              77a5 001a  ld   $1a         ;0287 LD
              77a6 0028  ld   $28
              77a7 008c  ld   $8c         ;0289 XORI
              77a8 00a0  ld   $a0
              77a9 0035  ld   $35         ;028b BCC
              77aa 0072  ld   $72         ;028c NE
              77ab 0081  ld   $81
              77ac 0011  ld   $11         ;028e LDWI
              77ad 00ee  ld   $ee
              77ae 0001  ld   $01
              77af 002b  ld   $2b         ;0291 STW
              77b0 0034  ld   $34         ;0291 'i'
              77b1 0021  ld   $21         ;0293 LDW
              77b2 0034  ld   $34         ;0293 'i'
              77b3 00ad  ld   $ad         ;0295 PEEK
              77b4 00e6  ld   $e6         ;0296 SUBI
              77b5 0078  ld   $78
              77b6 0035  ld   $35         ;0298 BCC
              77b7 0053  ld   $53         ;0299 GE
              77b8 009d  ld   $9d
              77b9 008c  ld   $8c         ;029b XORI
              77ba 0080  ld   $80
              77bb 0090  ld   $90         ;029d BRA
              77bc 009f  ld   $9f
              77bd 008c  ld   $8c         ;029f XORI
              77be 0008  ld   $08
              77bf 00f0  ld   $f0         ;02a1 POKE
              77c0 0034  ld   $34         ;02a1 'i'
              77c1 0021  ld   $21         ;02a3 LDW
              77c2 0034  ld   $34         ;02a3 'i'
              77c3 00e6  ld   $e6         ;02a5 SUBI
              77c4 0002  ld   $02
              77c5 002b  ld   $2b         ;02a7 STW
              77c6 0034  ld   $34         ;02a7 'i'
              77c7 008c  ld   $8c         ;02a9 XORI
              77c8 00fe  ld   $fe
              77c9 0035  ld   $35         ;02ab BCC
              77ca 0072  ld   $72         ;02ac NE
              77cb 0091  ld   $91
              77cc 00ff  ld   $ff         ;02ae RET
              77cd 002b  ld   $2b         ;02af STW
              77ce 003a  ld   $3a         ;02af 'CNewline'
              77cf 00cd  ld   $cd         ;02b1 DEF
              77d0 00d9  ld   $d9
              77d1 0075  ld   $75         ;02b3 PUSH
              77d2 002b  ld   $2b         ;02b4 STW
              77d3 0030  ld   $30         ;02b4 'tmp'
              77d4 0011  ld   $11         ;02b6 LDWI
              77d5 0052  ld   $52
              77d6 0006  ld   $06
              77d7 002b  ld   $2b         ;02b9 STW
              77d8 0022  ld   $22
              77d9 0021  ld   $21         ;02bb LDW
              77da 0030  ld   $30         ;02bb 'tmp'
              77db 00b4  ld   $b4         ;02bd SYS
              77dc 00f6  ld   $f6
              77dd 00e6  ld   $e6         ;02bf SUBI
              77de 000a  ld   $0a
              77df 0035  ld   $35         ;02c1 BCC
              77e0 0050  ld   $50         ;02c2 LT
              77e1 00c4  ld   $c4
              77e2 00e3  ld   $e3         ;02c4 ADDI
              77e3 0007  ld   $07
              77e4 00e3  ld   $e3         ;02c6 ADDI
              77e5 003a  ld   $3a
              77e6 00cf  ld   $cf         ;02c8 CALL
              77e7 0038  ld   $38         ;02c8 'PrintChar'
              77e8 0021  ld   $21         ;02ca LDW
              77e9 0030  ld   $30         ;02ca 'tmp'
              77ea 0082  ld   $82         ;02cc ANDI
              77eb 000f  ld   $0f
              77ec 00e6  ld   $e6         ;02ce SUBI
              77ed 000a  ld   $0a
              77ee 0035  ld   $35         ;02d0 BCC
              77ef 0050  ld   $50         ;02d1 LT
              77f0 00d3  ld   $d3
              77f1 00e3  ld   $e3         ;02d3 ADDI
              77f2 0007  ld   $07
              77f3 00e3  ld   $e3         ;02d5 ADDI
              77f4 003a  ld   $3a
              77f5 00cf  ld   $cf         ;02d7 CALL
              77f6 0038  ld   $38         ;02d7 'PrintChar'
              77f7 0063  ld   $63         ;02d9 POP
              77f8 00ff  ld   $ff         ;02da RET
              77f9 002b  ld   $2b         ;02db STW
              77fa 003c  ld   $3c         ;02db 'PrintByte'
              77fb fe00  bra  ac          ;+-----------------------------------+
              77fc fcfd  bra  $77fd       ;|                                   |
              77fd 1418  ld   $18,y       ;| Trampoline for page $7700 lookups |
              77fe e006  jmp  y,$06       ;|                                   |
              77ff c218  st   [$18]       ;+-----------------------------------+
              7800 0011  ld   $11         ;02dd LDWI
              7801 0000  ld   $00
              7802 0003  ld   $03
              7803 00cf  ld   $cf         ;02e0 CALL
              7804 0018  ld   $18         ;02e0 vAC
              7805 0003  ld   $03         ;| RAM segment address (high byte first)
              7806 0000  ld   $00         ;|
              7807 00f3  ld   $f3         ;| Length (1..256)
              7808 00cd  ld   $cd         ;0300 DEF
              7809 00d3  ld   $d3
              780a 0075  ld   $75         ;0302 PUSH
              780b 0059  ld   $59         ;0303 LDI
              780c 0080  ld   $80
              780d 002b  ld   $2b         ;0305 STW
              780e 003e  ld   $3e         ;0305 'Buffer'
              780f 00cf  ld   $cf         ;0307 CALL
              7810 003a  ld   $3a         ;0307 'CNewline'
              7811 0093  ld   $93         ;0309 INC
              7812 003e  ld   $3e         ;0309 'Buffer'
              7813 0021  ld   $21         ;030b LDW
              7814 003e  ld   $3e         ;030b 'Buffer'
              7815 00ad  ld   $ad         ;030d PEEK
              7816 0035  ld   $35         ;030e BCC
              7817 003f  ld   $3f         ;030f EQ
              7818 00d1  ld   $d1
              7819 00e6  ld   $e6         ;0311 SUBI
              781a 002e  ld   $2e
              781b 0035  ld   $35         ;0313 BCC
              781c 0050  ld   $50         ;0314 LT
              781d 0007  ld   $07
              781e 0035  ld   $35         ;0316 BCC
              781f 0072  ld   $72         ;0317 NE
              7820 001d  ld   $1d
              7821 0059  ld   $59         ;0319 LDI
              7822 0001  ld   $01
              7823 002b  ld   $2b         ;031b STW
              7824 0040  ld   $40         ;031b 'Mode'
              7825 0090  ld   $90         ;031d BRA
              7826 0007  ld   $07
              7827 00e6  ld   $e6         ;031f SUBI
              7828 000c  ld   $0c
              7829 0035  ld   $35         ;0321 BCC
              782a 0072  ld   $72         ;0322 NE
              782b 0028  ld   $28
              782c 00e6  ld   $e6         ;0324 SUBI
              782d 0001  ld   $01
              782e 002b  ld   $2b         ;0326 STW
              782f 0040  ld   $40         ;0326 'Mode'
              7830 0090  ld   $90         ;0328 BRA
              7831 0007  ld   $07
              7832 00e6  ld   $e6         ;032a SUBI
              7833 0018  ld   $18
              7834 0035  ld   $35         ;032c BCC
              7835 0072  ld   $72         ;032d NE
              7836 0031  ld   $31
              7837 00cf  ld   $cf         ;032f CALL
              7838 0042  ld   $42         ;032f 'Examine'
              7839 0090  ld   $90         ;0331 BRA
              783a 0007  ld   $07
              783b 0059  ld   $59         ;0333 LDI
              783c 0000  ld   $00
              783d 002b  ld   $2b         ;0335 STW
              783e 0030  ld   $30         ;0335 'tmp'
              783f 002b  ld   $2b         ;0337 STW
              7840 0044  ld   $44         ;0337 'Value'
              7841 00e9  ld   $e9         ;0339 LSLW
              7842 00e9  ld   $e9         ;033a LSLW
              7843 00e9  ld   $e9         ;033b LSLW
              7844 00e9  ld   $e9         ;033c LSLW
              7845 002b  ld   $2b         ;033d STW
              7846 0034  ld   $34         ;033d 'i'
              7847 0021  ld   $21         ;033f LDW
              7848 003e  ld   $3e         ;033f 'Buffer'
              7849 00ad  ld   $ad         ;0341 PEEK
              784a 0093  ld   $93         ;0342 INC
              784b 003e  ld   $3e         ;0342 'Buffer'
              784c 00e6  ld   $e6         ;0344 SUBI
              784d 0030  ld   $30
              784e 0035  ld   $35         ;0346 BCC
              784f 0050  ld   $50         ;0347 LT
              7850 0068  ld   $68
              7851 00e6  ld   $e6         ;0349 SUBI
              7852 000a  ld   $0a
              7853 0035  ld   $35         ;034b BCC
              7854 0053  ld   $53         ;034c GE
              7855 0054  ld   $54
              7856 002b  ld   $2b         ;034e STW
              7857 0030  ld   $30         ;034e 'tmp'
              7858 00e3  ld   $e3         ;0350 ADDI
              7859 000a  ld   $0a
              785a 0099  ld   $99         ;0352 ADDW
              785b 0034  ld   $34         ;0352 'i'
              785c 0090  ld   $90         ;0354 BRA
              785d 0035  ld   $35
              785e 00e6  ld   $e6         ;0356 SUBI
              785f 0006  ld   $06
              7860 0082  ld   $82         ;0358 ANDI
              7861 001f  ld   $1f
              7862 0035  ld   $35         ;035a BCC
              7863 0056  ld   $56         ;035b LE
              7864 0068  ld   $68
              7865 00e6  ld   $e6         ;035d SUBI
              7866 0007  ld   $07
              7867 0035  ld   $35         ;035f BCC
              7868 0053  ld   $53         ;0360 GE
              7869 0068  ld   $68
              786a 002b  ld   $2b         ;0362 STW
              786b 0030  ld   $30         ;0362 'tmp'
              786c 00e3  ld   $e3         ;0364 ADDI
              786d 0010  ld   $10
              786e 0099  ld   $99         ;0366 ADDW
              786f 0034  ld   $34         ;0366 'i'
              7870 0090  ld   $90         ;0368 BRA
              7871 0035  ld   $35
              7872 0021  ld   $21         ;036a LDW
              7873 0030  ld   $30         ;036a 'tmp'
              7874 0035  ld   $35         ;036c BCC
              7875 003f  ld   $3f         ;036d EQ
              7876 00cd  ld   $cd
              7877 0021  ld   $21         ;036f LDW
              7878 003e  ld   $3e         ;036f 'Buffer'
              7879 00e6  ld   $e6         ;0371 SUBI
              787a 0002  ld   $02
              787b 002b  ld   $2b         ;0373 STW
              787c 003e  ld   $3e         ;0373 'Buffer'
              787d 0021  ld   $21         ;0375 LDW
              787e 0040  ld   $40         ;0375 'Mode'
              787f 0035  ld   $35         ;0377 BCC
              7880 0053  ld   $53         ;0378 GE
              7881 0084  ld   $84
              7882 0021  ld   $21         ;037a LDW
              7883 0044  ld   $44         ;037a 'Value'
              7884 00f0  ld   $f0         ;037c POKE
              7885 0046  ld   $46         ;037c 'Store'
              7886 0021  ld   $21         ;037e LDW
              7887 0046  ld   $46         ;037e 'Store'
              7888 00e3  ld   $e3         ;0380 ADDI
              7889 0001  ld   $01
              788a 002b  ld   $2b         ;0382 STW
              788b 0046  ld   $46         ;0382 'Store'
              788c 0090  ld   $90         ;0384 BRA
              788d 0007  ld   $07
              788e 0035  ld   $35         ;0386 BCC
              788f 0072  ld   $72         ;0387 NE
              7890 0091  ld   $91
              7891 00cf  ld   $cf         ;0389 CALL
              7892 003a  ld   $3a         ;0389 'CNewline'
              7893 0021  ld   $21         ;038b LDW
              7894 0044  ld   $44         ;038b 'Value'
              7895 002b  ld   $2b         ;038d STW
              7896 0046  ld   $46         ;038d 'Store'
              7897 00e6  ld   $e6         ;038f SUBI
              7898 0001  ld   $01
              7899 002b  ld   $2b         ;0391 STW
              789a 0042  ld   $42         ;0391 'Examine'
              789b 0021  ld   $21         ;0393 LDW
              789c 0042  ld   $42         ;0393 'Examine'
              789d 00b8  ld   $b8         ;0395 SUBW
              789e 0044  ld   $44         ;0395 'Value'
              789f 0035  ld   $35         ;0397 BCC
              78a0 0053  ld   $53         ;0398 GE
              78a1 00c7  ld   $c7
              78a2 0021  ld   $21         ;039a LDW
              78a3 0042  ld   $42         ;039a 'Examine'
              78a4 00e3  ld   $e3         ;039c ADDI
              78a5 0001  ld   $01
              78a6 002b  ld   $2b         ;039e STW
              78a7 0042  ld   $42         ;039e 'Examine'
              78a8 0082  ld   $82         ;03a0 ANDI
              78a9 0007  ld   $07
              78aa 0035  ld   $35         ;03a2 BCC
              78ab 0072  ld   $72         ;03a3 NE
              78ac 00a5  ld   $a5
              78ad 00cf  ld   $cf         ;03a5 CALL
              78ae 003a  ld   $3a         ;03a5 'CNewline'
              78af 001a  ld   $1a         ;03a7 LD
              78b0 0032  ld   $32         ;03a7 'Pos'
              78b1 0035  ld   $35         ;03a9 BCC
              78b2 0072  ld   $72         ;03aa NE
              78b3 00ba  ld   $ba
              78b4 0059  ld   $59         ;03ac LDI
              78b5 0002  ld   $02
              78b6 005e  ld   $5e         ;03ae ST
              78b7 0032  ld   $32         ;03ae 'Pos'
              78b8 001a  ld   $1a         ;03b0 LD
              78b9 0043  ld   $43         ;03b0 'Examine'+1
              78ba 00cf  ld   $cf         ;03b2 CALL
              78bb 003c  ld   $3c         ;03b2 'PrintByte'
              78bc 001a  ld   $1a         ;03b4 LD
              78bd 0042  ld   $42         ;03b4 'Examine'
              78be 00cf  ld   $cf         ;03b6 CALL
              78bf 003c  ld   $3c         ;03b6 'PrintByte'
              78c0 0059  ld   $59         ;03b8 LDI
              78c1 003a  ld   $3a
              78c2 00cf  ld   $cf         ;03ba CALL
              78c3 0038  ld   $38         ;03ba 'PrintChar'
              78c4 0021  ld   $21         ;03bc LDW
              78c5 0032  ld   $32         ;03bc 'Pos'
              78c6 00e3  ld   $e3         ;03be ADDI
              78c7 0004  ld   $04
              78c8 002b  ld   $2b         ;03c0 STW
              78c9 0032  ld   $32         ;03c0 'Pos'
              78ca 0021  ld   $21         ;03c2 LDW
              78cb 0042  ld   $42         ;03c2 'Examine'
              78cc 00ad  ld   $ad         ;03c4 PEEK
              78cd 00cf  ld   $cf         ;03c5 CALL
              78ce 003c  ld   $3c         ;03c5 'PrintByte'
              78cf 0090  ld   $90         ;03c7 BRA
              78d0 0091  ld   $91
              78d1 0059  ld   $59         ;03c9 LDI
              78d2 0000  ld   $00
              78d3 002b  ld   $2b         ;03cb STW
              78d4 0040  ld   $40         ;03cb 'Mode'
              78d5 0090  ld   $90         ;03cd BRA
              78d6 0007  ld   $07
              78d7 0059  ld   $59         ;03cf LDI
              78d8 005c  ld   $5c
              78d9 00cf  ld   $cf         ;03d1 CALL
              78da 0038  ld   $38         ;03d1 'PrintChar'
              78db 0063  ld   $63         ;03d3 POP
              78dc 00ff  ld   $ff         ;03d4 RET
              78dd 002b  ld   $2b         ;03d5 STW
              78de 0048  ld   $48         ;03d5 'ProcessBuffer'
              78df 0093  ld   $93         ;03d7 INC
              78e0 0032  ld   $32         ;03d7 'Pos'
              78e1 0011  ld   $11         ;03d9 LDWI
              78e2 0020  ld   $20
              78e3 000f  ld   $0f
              78e4 002b  ld   $2b         ;03dc STW
              78e5 002a  ld   $2a
              78e6 005e  ld   $5e         ;03de ST
              78e7 0024  ld   $24
              78e8 00cf  ld   $cf         ;03e0 CALL
              78e9 003a  ld   $3a         ;03e0 'CNewline'
              78ea 0059  ld   $59         ;03e2 LDI
              78eb 002a  ld   $2a
              78ec 00cf  ld   $cf         ;03e4 CALL
              78ed 0038  ld   $38         ;03e4 'PrintChar'
              78ee 0021  ld   $21         ;03e6 LDW
              78ef 0030  ld   $30         ;03e6 'tmp'
              78f0 00ad  ld   $ad         ;03e8 PEEK
              78f1 0093  ld   $93         ;03e9 INC
              78f2 0030  ld   $30         ;03e9 'tmp'
              78f3 0035  ld   $35         ;03eb BCC
              78f4 0072  ld   $72         ;03ec NE
              78f5 00e2  ld   $e2
              78f6 0011  ld   $11         ;03ee LDWI
              78f7 0000  ld   $00
              78f8 0004  ld   $04
              78f9 00cf  ld   $cf         ;03f1 CALL
              78fa 0018  ld   $18         ;03f1 vAC
              78fb fe00  bra  ac          ;+-----------------------------------+
              78fc fcfd  bra  $78fd       ;|                                   |
              78fd 1418  ld   $18,y       ;| Trampoline for page $7800 lookups |
              78fe e006  jmp  y,$06       ;|                                   |
              78ff c218  st   [$18]       ;+-----------------------------------+
              7900 0004  ld   $04         ;| RAM segment address (high byte first)
              7901 0000  ld   $00         ;|
              7902 0072  ld   $72         ;| Length (1..256)
              7903 0059  ld   $59         ;0400 LDI
              7904 0081  ld   $81
              7905 002b  ld   $2b         ;0402 STW
              7906 003e  ld   $3e         ;0402 'Buffer'
              7907 00cf  ld   $cf         ;0404 CALL
              7908 003a  ld   $3a         ;0404 'CNewline'
              7909 0059  ld   $59         ;0406 LDI
              790a 007f  ld   $7f
              790b 005e  ld   $5e         ;0408 ST
              790c 002b  ld   $2b
              790d 00cf  ld   $cf         ;040a CALL
              790e 0038  ld   $38         ;040a 'PrintChar'
              790f 002b  ld   $2b         ;040c STW
              7910 0032  ld   $32         ;040c 'Pos'
              7911 001a  ld   $1a         ;040e LD
              7912 000f  ld   $0f
              7913 002b  ld   $2b         ;0410 STW
              7914 0030  ld   $30         ;0410 'tmp'
              7915 001a  ld   $1a         ;0412 LD
              7916 000f  ld   $0f
              7917 00f0  ld   $f0         ;0414 POKE
              7918 003e  ld   $3e         ;0414 'Buffer'
              7919 00fc  ld   $fc         ;0416 XORW
              791a 0030  ld   $30         ;0416 'tmp'
              791b 0035  ld   $35         ;0418 BCC
              791c 0072  ld   $72         ;0419 NE
              791d 001e  ld   $1e
              791e 0021  ld   $21         ;041b LDW
              791f 003e  ld   $3e         ;041b 'Buffer'
              7920 00ad  ld   $ad         ;041d PEEK
              7921 0090  ld   $90         ;041e BRA
              7922 000e  ld   $0e
              7923 0021  ld   $21         ;0420 LDW
              7924 003e  ld   $3e         ;0420 'Buffer'
              7925 00ad  ld   $ad         ;0422 PEEK
              7926 008c  ld   $8c         ;0423 XORI
              7927 000a  ld   $0a
              7928 0035  ld   $35         ;0425 BCC
              7929 003f  ld   $3f         ;0426 EQ
              792a 0060  ld   $60
              792b 008c  ld   $8c         ;0428 XORI
              792c 0075  ld   $75
              792d 0035  ld   $35         ;042a BCC
              792e 0072  ld   $72         ;042b NE
              792f 0042  ld   $42
              7930 0059  ld   $59         ;042d LDI
              7931 0020  ld   $20
              7932 00cf  ld   $cf         ;042f CALL
              7933 0038  ld   $38         ;042f 'PrintChar'
              7934 002b  ld   $2b         ;0431 STW
              7935 0032  ld   $32         ;0431 'Pos'
              7936 001a  ld   $1a         ;0433 LD
              7937 0032  ld   $32         ;0433 'Pos'
              7938 00e6  ld   $e6         ;0435 SUBI
              7939 0006  ld   $06
              793a 0035  ld   $35         ;0437 BCC
              793b 0050  ld   $50         ;0438 LT
              793c 0040  ld   $40
              793d 005e  ld   $5e         ;043a ST
              793e 0032  ld   $32         ;043a 'Pos'
              793f 0021  ld   $21         ;043c LDW
              7940 003e  ld   $3e         ;043c 'Buffer'
              7941 00e6  ld   $e6         ;043e SUBI
              7942 0001  ld   $01
              7943 002b  ld   $2b         ;0440 STW
              7944 003e  ld   $3e         ;0440 'Buffer'
              7945 0090  ld   $90         ;0442 BRA
              7946 0004  ld   $04
              7947 00e6  ld   $e6         ;0444 SUBI
              7948 0060  ld   $60
              7949 0035  ld   $35         ;0446 BCC
              794a 0053  ld   $53         ;0447 GE
              794b 0004  ld   $04
              794c 001a  ld   $1a         ;0449 LD
              794d 0032  ld   $32         ;0449 'Pos'
              794e 008c  ld   $8c         ;044b XORI
              794f 0096  ld   $96
              7950 0035  ld   $35         ;044d BCC
              7951 0072  ld   $72         ;044e NE
              7952 0057  ld   $57
              7953 0059  ld   $59         ;0450 LDI
              7954 005c  ld   $5c
              7955 00cf  ld   $cf         ;0452 CALL
              7956 0038  ld   $38         ;0452 'PrintChar'
              7957 0011  ld   $11         ;0454 LDWI
              7958 0000  ld   $00
              7959 0004  ld   $04
              795a 00cf  ld   $cf         ;0457 CALL
              795b 0018  ld   $18         ;0457 vAC
              795c 0021  ld   $21         ;0459 LDW
              795d 003e  ld   $3e         ;0459 'Buffer'
              795e 00ad  ld   $ad         ;045b PEEK
              795f 00cf  ld   $cf         ;045c CALL
              7960 0038  ld   $38         ;045c 'PrintChar'
              7961 0093  ld   $93         ;045e INC
              7962 003e  ld   $3e         ;045e 'Buffer'
              7963 0090  ld   $90         ;0460 BRA
              7964 0004  ld   $04
              7965 00f0  ld   $f0         ;0462 POKE
              7966 003e  ld   $3e         ;0462 'Buffer'
              7967 002b  ld   $2b         ;0464 STW
              7968 0040  ld   $40         ;0464 'Mode'
              7969 0059  ld   $59         ;0466 LDI
              796a 0020  ld   $20
              796b 00cf  ld   $cf         ;0468 CALL
              796c 0038  ld   $38         ;0468 'PrintChar'
              796d 0059  ld   $59         ;046a LDI
              796e 000f  ld   $0f
              796f 005e  ld   $5e         ;046c ST
              7970 002b  ld   $2b
              7971 00cf  ld   $cf         ;046e CALL
              7972 0048  ld   $48         ;046e 'ProcessBuffer'
              7973 0090  ld   $90         ;0470 BRA
              7974 00fe  ld   $fe
              7975 0000  ld   $00         ;End of Apps/WozMon/WozMon_v2.gcl, size 603
                                          ;+-----------------------------------+
                                          ;| Apps/Apple-1/Apple-1_v2.gt1       |
                                          ;+-----------------------------------+
              7976 dc57  st   $57,[y,x++] ;'W'
              7977 dc6f  st   $6f,[y,x++] ;'o'
              7978 dc7a  st   $7a,[y,x++] ;'z'
              7979 dc4d  st   $4d,[y,x++] ;'M'
              797a dc6f  st   $6f,[y,x++] ;'o'
              797b dc6e  st   $6e,[y,x++] ;'n'
              797c dc00  st   $00,[y,x++] ;'\x00'
              797d dc00  st   $00,[y,x++] ;'\x00'
              797e 001b  ld   $1b
              797f c218  st   [$18]
              7980 0077  ld   $77
              7981 14dd  ld   $dd,y
              7982 e06f  jmp  y,$6f
              7983 c219  st   [$19]
Apple1:       7984 0002  ld   $02
              7985 0000  ld   $00
              7986 0054  ld   $54
              7987 001a  ld   $1a
              7988 0021  ld   $21
              7989 00e6  ld   $e6
              798a 0040  ld   $40
              798b 0035  ld   $35
              798c 0053  ld   $53
              798d 000b  ld   $0b
              798e 0021  ld   $21
              798f 000e  ld   $0e
              7990 00f3  ld   $f3
              7991 0017  ld   $17
              7992 0090  ld   $90
              7993 0005  ld   $05
              7994 0059  ld   $59
              7995 00a0  ld   $a0
              7996 002b  ld   $2b
              7997 0024  ld   $24
              7998 0011  ld   $11
              7999 0060  ld   $60
              799a 007e  ld   $7e
              799b 002b  ld   $2b
              799c 0026  ld   $26
              799d 0011  ld   $11
              799e 0003  ld   $03
              799f 000b  ld   $0b
              79a0 002b  ld   $2b
              79a1 0022  ld   $22
              79a2 00b4  ld   $b4
              79a3 00f3  ld   $f3
              79a4 0011  ld   $11
              79a5 00ee  ld   $ee
              79a6 0001  ld   $01
              79a7 002b  ld   $2b
              79a8 007a  ld   $7a
              79a9 0059  ld   $59
              79aa 007e  ld   $7e
              79ab 00f0  ld   $f0
              79ac 007a  ld   $7a
              79ad 001a  ld   $1a
              79ae 007a  ld   $7a
              79af 00e6  ld   $e6
              79b0 0002  ld   $02
              79b1 005e  ld   $5e
              79b2 007a  ld   $7a
              79b3 0035  ld   $35
              79b4 0053  ld   $53
              79b5 0020  ld   $20
              79b6 0011  ld   $11
              79b7 0001  ld   $01
              79b8 0001  ld   $01
              79b9 002b  ld   $2b
              79ba 007a  ld   $7a
              79bb 0059  ld   $59
              79bc 0060  ld   $60
              79bd 00f0  ld   $f0
              79be 007a  ld   $7a
              79bf 0011  ld   $11
              79c0 00ff  ld   $ff
              79c1 0010  ld   $10
              79c2 002b  ld   $2b
              79c3 007a  ld   $7a
              79c4 0011  ld   $11
              79c5 00f6  ld   $f6
              79c6 0001  ld   $01
              79c7 002b  ld   $2b
              79c8 007c  ld   $7c
              79c9 0011  ld   $11
              79ca 0000  ld   $00
              79cb 005e  ld   $5e
              79cc 00f3  ld   $f3
              79cd 007c  ld   $7c
              79ce 0059  ld   $59
              79cf 00fe  ld   $fe
              79d0 005e  ld   $5e
              79d1 000e  ld   $0e
              79d2 0011  ld   $11
              79d3 0000  ld   $00
              79d4 005f  ld   $5f
              79d5 002b  ld   $2b
              79d6 001a  ld   $1a
              79d7 0011  ld   $11
              79d8 00ac  ld   $ac
              79d9 005e  ld   $5e
              79da 00ff  ld   $ff
              79db 0003  ld   $03
              79dc 0000  ld   $00
              79dd 00cf  ld   $cf
              79de 00a2  ld   $a2
              79df 0024  ld   $24
              79e0 00bd  ld   $bd
              79e1 0093  ld   $93
              79e2 0003  ld   $03
              79e3 0020  ld   $20
              79e4 00ef  ld   $ef
              79e5 00ff  ld   $ff
              79e6 00ca  ld   $ca
              79e7 00d0  ld   $d0
              79e8 00f7  ld   $f7
              79e9 0086  ld   $86
              79ea 00e2  ld   $e2
              79eb 00e6  ld   $e6
              79ec 00e3  ld   $e3
              79ed 00d0  ld   $d0
              79ee 0002  ld   $02
              79ef 00e6  ld   $e6
              79f0 00e4  ld   $e4
              79f1 00ad  ld   $ad
              79f2 0011  ld   $11
              79f3 00d0  ld   $d0
              79f4 0010  ld   $10
              79f5 00f5  ld   $f5
              79f6 0020  ld   $20
              79f7 00c6  ld   $c6
              79f8 0003  ld   $03
              79f9 00e6  ld   $e6
              79fa 00e2  ld   $e2
              79fb fe00  bra  ac          ;+-----------------------------------+
              79fc fcfd  bra  $79fd       ;|                                   |
              79fd 1418  ld   $18,y       ;| Trampoline for page $7900 lookups |
              79fe e006  jmp  y,$06       ;|                                   |
              79ff c218  st   [$18]       ;+-----------------------------------+
              7a00 00a5  ld   $a5
              7a01 00e2  ld   $e2
              7a02 0029  ld   $29
              7a03 000f  ld   $0f
              7a04 00c9  ld   $c9
              7a05 000a  ld   $0a
              7a06 00b0  ld   $b0
              7a07 00f6  ld   $f6
              7a08 0020  ld   $20
              7a09 00c1  ld   $c1
              7a0a 0003  ld   $03
              7a0b 00a5  ld   $a5
              7a0c 00e2  ld   $e2
              7a0d 0020  ld   $20
              7a0e 00dc  ld   $dc
              7a0f 00ff  ld   $ff
              7a10 00a9  ld   $a9
              7a11 00a0  ld   $a0
              7a12 00a8  ld   $a8
              7a13 0020  ld   $20
              7a14 00ef  ld   $ef
              7a15 00ff  ld   $ff
              7a16 00a5  ld   $a5
              7a17 00e3  ld   $e3
              7a18 0085  ld   $85
              7a19 00e5  ld   $e5
              7a1a 00a5  ld   $a5
              7a1b 00e4  ld   $e4
              7a1c 00a2  ld   $a2
              7a1d 0005  ld   $05
              7a1e 0094  ld   $94
              7a1f 00e5  ld   $e5
              7a20 00a0  ld   $a0
              7a21 0003  ld   $03
              7a22 004a  ld   $4a
              7a23 0026  ld   $26
              7a24 00e5  ld   $e5
              7a25 0036  ld   $36
              7a26 00e5  ld   $e5
              7a27 0088  ld   $88
              7a28 00d0  ld   $d0
              7a29 00f8  ld   $f8
              7a2a 00ca  ld   $ca
              7a2b 00d0  ld   $d0
              7a2c 00f1  ld   $f1
              7a2d 0020  ld   $20
              7a2e 00c6  ld   $c6
              7a2f 0003  ld   $03
              7a30 0020  ld   $20
              7a31 00ef  ld   $ef
              7a32 00ff  ld   $ff
              7a33 0049  ld   $49
              7a34 00b0  ld   $b0
              7a35 00c9  ld   $c9
              7a36 0008  ld   $08
              7a37 00b0  ld   $b0
              7a38 00cf  ld   $cf
              7a39 0095  ld   $95
              7a3a 00ef  ld   $ef
              7a3b 00ca  ld   $ca
              7a3c 00e0  ld   $e0
              7a3d 00fb  ld   $fb
              7a3e 00d0  ld   $d0
              7a3f 00ed  ld   $ed
              7a40 00a0  ld   $a0
              7a41 00fb  ld   $fb
              7a42 00a9  ld   $a9
              7a43 00a0  ld   $a0
              7a44 0020  ld   $20
              7a45 00ef  ld   $ef
              7a46 00ff  ld   $ff
              7a47 00b5  ld   $b5
              7a48 00f0  ld   $f0
              7a49 00d5  ld   $d5
              7a4a 00eb  ld   $eb
              7a4b 00d0  ld   $d0
              7a4c 000d  ld   $0d
              7a4d 0094  ld   $94
              7a4e 00eb  ld   $eb
              7a4f 00a9  ld   $a9
              7a50 00ab  ld   $ab
              7a51 0095  ld   $95
              7a52 00f0  ld   $f0
              7a53 00c8  ld   $c8
              7a54 00d0  ld   $d0
              7a55 00ee  ld   $ee
              7a56 00a2  ld   $a2
              7a57 002d  ld   $2d
              7a58 00d0  ld   $d0
              7a59 008b  ld   $8b
              7a5a 00e8  ld   $e8
              7a5b 00d0  ld   $d0
              7a5c 00ea  ld   $ea
              7a5d 00a0  ld   $a0
              7a5e 00fb  ld   $fb
              7a5f 00b6  ld   $b6
              7a60 00f0  ld   $f0
              7a61 008a  ld   $8a
              7a62 00a2  ld   $a2
              7a63 00fb  ld   $fb
              7a64 00d5  ld   $d5
              7a65 00eb  ld   $eb
              7a66 00d0  ld   $d0
              7a67 0007  ld   $07
              7a68 0094  ld   $94
              7a69 00eb  ld   $eb
              7a6a 00a9  ld   $a9
              7a6b 00ad  ld   $ad
              7a6c 0020  ld   $20
              7a6d 00ef  ld   $ef
              7a6e 00ff  ld   $ff
              7a6f 00e8  ld   $e8
              7a70 00d0  ld   $d0
              7a71 00f2  ld   $f2
              7a72 00c8  ld   $c8
              7a73 00d0  ld   $d0
              7a74 00ea  ld   $ea
              7a75 00f0  ld   $f0
              7a76 0087  ld   $87
              7a77 00bf  ld   $bf
              7a78 00d9  ld   $d9
              7a79 00c4  ld   $c4
              7a7a 00c1  ld   $c1
              7a7b 00c5  ld   $c5
              7a7c 00d2  ld   $d2
              7a7d 008d  ld   $8d
              7a7e 008d  ld   $8d
              7a7f 00b7  ld   $b7
              7a80 00ad  ld   $ad
              7a81 00b0  ld   $b0
              7a82 00a0  ld   $a0
              7a83 00cd  ld   $cd
              7a84 00cf  ld   $cf
              7a85 00d2  ld   $d2
              7a86 00c6  ld   $c6
              7a87 00a0  ld   $a0
              7a88 00d3  ld   $d3
              7a89 00d4  ld   $d4
              7a8a 00c9  ld   $c9
              7a8b 00c7  ld   $c7
              7a8c 00c9  ld   $c9
              7a8d 00c4  ld   $c4
              7a8e 00a0  ld   $a0
              7a8f 00c5  ld   $c5
              7a90 00d6  ld   $d6
              7a91 00c9  ld   $c9
              7a92 00c6  ld   $c6
              7a93 00a0  ld   $a0
              7a94 00d3  ld   $d3
              7a95 00d3  ld   $d3
              7a96 00c5  ld   $c5
              7a97 00d5  ld   $d5
              7a98 00c7  ld   $c7
              7a99 008d  ld   $8d
              7a9a 008d  ld   $8d
              7a9b 00ce  ld   $ce
              7a9c 00c9  ld   $c9
              7a9d 00d7  ld   $d7
              7a9e 00a0  ld   $a0
              7a9f 00d5  ld   $d5
              7aa0 00cf  ld   $cf
              7aa1 00d9  ld   $d9
              7aa2 00a0  ld   $a0
              7aa3 00ab  ld   $ab
              7aa4 00a9  ld   $a9
              7aa5 008d  ld   $8d
              7aa6 004c  ld   $4c
              7aa7 00ef  ld   $ef
              7aa8 00ff  ld   $ff
              7aa9 00ad  ld   $ad
              7aaa 0011  ld   $11
              7aab 00d0  ld   $d0
              7aac 0010  ld   $10
              7aad 00fb  ld   $fb
              7aae 00ad  ld   $ad
              7aaf 0010  ld   $10
              7ab0 00d0  ld   $d0
              7ab1 0060  ld   $60
              7ab2 0004  ld   $04
              7ab3 0000  ld   $00
              7ab4 0000  ld   $00
              7ab5 00d8  ld   $d8
              7ab6 00a2  ld   $a2
              7ab7 00ff  ld   $ff
              7ab8 009a  ld   $9a
              7ab9 00a9  ld   $a9
              7aba 002a  ld   $2a
              7abb 0085  ld   $85
              7abc 005a  ld   $5a
              7abd 0020  ld   $20
              7abe 0055  ld   $55
              7abf 0005  ld   $05
              7ac0 00a9  ld   $a9
              7ac1 008b  ld   $8b
              7ac2 0085  ld   $85
              7ac3 0058  ld   $58
              7ac4 00a9  ld   $a9
              7ac5 0006  ld   $06
              7ac6 0085  ld   $85
              7ac7 0059  ld   $59
              7ac8 0020  ld   $20
              7ac9 00ad  ld   $ad
              7aca 0004  ld   $04
              7acb 0020  ld   $20
              7acc 00cb  ld   $cb
              7acd 0004  ld   $04
              7ace 00d0  ld   $d0
              7acf 000e  ld   $0e
              7ad0 00a9  ld   $a9
              7ad1 00be  ld   $be
              7ad2 0085  ld   $85
              7ad3 0058  ld   $58
              7ad4 00a9  ld   $a9
              7ad5 0006  ld   $06
              7ad6 0085  ld   $85
              7ad7 0059  ld   $59
              7ad8 0020  ld   $20
              7ad9 00ad  ld   $ad
              7ada 0004  ld   $04
              7adb 0020  ld   $20
              7adc 00e8  ld   $e8
              7add 0004  ld   $04
              7ade 0020  ld   $20
              7adf 001f  ld   $1f
              7ae0 0006  ld   $06
              7ae1 0020  ld   $20
              7ae2 006a  ld   $6a
              7ae3 0005  ld   $05
              7ae4 0020  ld   $20
              7ae5 00e8  ld   $e8
              7ae6 0004  ld   $04
              7ae7 0020  ld   $20
              7ae8 00a8  ld   $a8
              7ae9 0004  ld   $04
              7aea 0020  ld   $20
              7aeb 0009  ld   $09
              7aec 0005  ld   $05
              7aed 0020  ld   $20
              7aee 0027  ld   $27
              7aef 0005  ld   $05
              7af0 0020  ld   $20
              7af1 00bb  ld   $bb
              7af2 0004  ld   $04
              7af3 00c9  ld   $c9
              7af4 0051  ld   $51
              7af5 00d0  ld   $d0
              7af6 0003  ld   $03
              7af7 004c  ld   $4c
              7af8 009a  ld   $9a
              7af9 0004  ld   $04
              7afa 0020  ld   $20
              7afb fe00  bra  ac          ;+-----------------------------------+
              7afc fcfd  bra  $7afd       ;|                                   |
              7afd 1418  ld   $18,y       ;| Trampoline for page $7a00 lookups |
              7afe e006  jmp  y,$06       ;|                                   |
              7aff c218  st   [$18]       ;+-----------------------------------+
              7b00 009e  ld   $9e
              7b01 0005  ld   $05
              7b02 00a5  ld   $a5
              7b03 0051  ld   $51
              7b04 00c9  ld   $c9
              7b05 0010  ld   $10
              7b06 00d0  ld   $d0
              7b07 000a  ld   $0a
              7b08 00c6  ld   $c6
              7b09 005d  ld   $5d
              7b0a 00f0  ld   $f0
              7b0b 00b6  ld   $b6
              7b0c 0020  ld   $20
              7b0d 0038  ld   $38
              7b0e 0005  ld   $05
              7b0f 004c  ld   $4c
              7b10 003b  ld   $3b
              7b11 0004  ld   $04
              7b12 0020  ld   $20
              7b13 00e8  ld   $e8
              7b14 0004  ld   $04
              7b15 0020  ld   $20
              7b16 00a8  ld   $a8
              7b17 0004  ld   $04
              7b18 0020  ld   $20
              7b19 000c  ld   $0c
              7b1a 0006  ld   $06
              7b1b 00f0  ld   $f0
              7b1c 0003  ld   $03
              7b1d 004c  ld   $4c
              7b1e 0035  ld   $35
              7b1f 0004  ld   $04
              7b20 0020  ld   $20
              7b21 0043  ld   $43
              7b22 0005  ld   $05
              7b23 00a9  ld   $a9
              7b24 008e  ld   $8e
              7b25 0085  ld   $85
              7b26 0058  ld   $58
              7b27 00a9  ld   $a9
              7b28 0007  ld   $07
              7b29 0085  ld   $85
              7b2a 0059  ld   $59
              7b2b 0020  ld   $20
              7b2c 00ad  ld   $ad
              7b2d 0004  ld   $04
              7b2e 00a5  ld   $a5
              7b2f 0055  ld   $55
              7b30 0020  ld   $20
              7b31 00ef  ld   $ef
              7b32 00ff  ld   $ff
              7b33 00a9  ld   $a9
              7b34 00a3  ld   $a3
              7b35 0085  ld   $85
              7b36 0058  ld   $58
              7b37 00a9  ld   $a9
              7b38 0007  ld   $07
              7b39 0085  ld   $85
              7b3a 0059  ld   $59
              7b3b 0020  ld   $20
              7b3c 00ad  ld   $ad
              7b3d 0004  ld   $04
              7b3e 0020  ld   $20
              7b3f 0027  ld   $27
              7b40 0005  ld   $05
              7b41 00a9  ld   $a9
              7b42 00bb  ld   $bb
              7b43 0085  ld   $85
              7b44 0058  ld   $58
              7b45 00a9  ld   $a9
              7b46 0007  ld   $07
              7b47 0085  ld   $85
              7b48 0059  ld   $59
              7b49 0020  ld   $20
              7b4a 00ad  ld   $ad
              7b4b 0004  ld   $04
              7b4c 0020  ld   $20
              7b4d 00cb  ld   $cb
              7b4e 0004  ld   $04
              7b4f 00d0  ld   $d0
              7b50 0003  ld   $03
              7b51 004c  ld   $4c
              7b52 0029  ld   $29
              7b53 0004  ld   $04
              7b54 00a9  ld   $a9
              7b55 00d0  ld   $d0
              7b56 0085  ld   $85
              7b57 0058  ld   $58
              7b58 00a9  ld   $a9
              7b59 0007  ld   $07
              7b5a 0085  ld   $85
              7b5b 0059  ld   $59
              7b5c 0020  ld   $20
              7b5d 00ad  ld   $ad
              7b5e 0004  ld   $04
              7b5f 004c  ld   $4c
              7b60 0000  ld   $00
              7b61 00c1  ld   $c1
              7b62 00a9  ld   $a9
              7b63 000d  ld   $0d
              7b64 004c  ld   $4c
              7b65 00ef  ld   $ef
              7b66 00ff  ld   $ff
              7b67 00a0  ld   $a0
              7b68 0000  ld   $00
              7b69 00b1  ld   $b1
              7b6a 0058  ld   $58
              7b6b 00f0  ld   $f0
              7b6c 0007  ld   $07
              7b6d 0020  ld   $20
              7b6e 00ef  ld   $ef
              7b6f 00ff  ld   $ff
              7b70 00c8  ld   $c8
              7b71 004c  ld   $4c
              7b72 00af  ld   $af
              7b73 0004  ld   $04
              7b74 0060  ld   $60
              7b75 0020  ld   $20
              7b76 00de  ld   $de
              7b77 0004  ld   $04
              7b78 00ad  ld   $ad
              7b79 0011  ld   $11
              7b7a 00d0  ld   $d0
              7b7b 0010  ld   $10
              7b7c 00f8  ld   $f8
              7b7d 00ad  ld   $ad
              7b7e 0010  ld   $10
              7b7f 00d0  ld   $d0
              7b80 0029  ld   $29
              7b81 007f  ld   $7f
              7b82 004c  ld   $4c
              7b83 00ef  ld   $ef
              7b84 00ff  ld   $ff
              7b85 0020  ld   $20
              7b86 00bb  ld   $bb
              7b87 0004  ld   $04
              7b88 00c9  ld   $c9
              7b89 004e  ld   $4e
              7b8a 00f0  ld   $f0
              7b8b 000a  ld   $0a
              7b8c 00c9  ld   $c9
              7b8d 0059  ld   $59
              7b8e 00f0  ld   $f0
              7b8f 0007  ld   $07
              7b90 0020  ld   $20
              7b91 0038  ld   $38
              7b92 0005  ld   $05
              7b93 004c  ld   $4c
              7b94 00cb  ld   $cb
              7b95 0004  ld   $04
              7b96 00ba  ld   $ba
              7b97 0060  ld   $60
              7b98 00a5  ld   $a5
              7b99 005a  ld   $5a
              7b9a 000a  ld   $0a
              7b9b 0090  ld   $90
              7b9c 0002  ld   $02
              7b9d 0049  ld   $49
              7b9e 00a9  ld   $a9
              7b9f 0085  ld   $85
              7ba0 005a  ld   $5a
              7ba1 0060  ld   $60
              7ba2 0020  ld   $20
              7ba3 00a8  ld   $a8
              7ba4 0004  ld   $04
              7ba5 0020  ld   $20
              7ba6 00a8  ld   $a8
              7ba7 0004  ld   $04
              7ba8 00a2  ld   $a2
              7ba9 0000  ld   $00
              7baa 00a0  ld   $a0
              7bab 0004  ld   $04
              7bac 00b5  ld   $b5
              7bad 0040  ld   $40
              7bae 0020  ld   $20
              7baf 00ef  ld   $ef
              7bb0 00ff  ld   $ff
              7bb1 0088  ld   $88
              7bb2 00d0  ld   $d0
              7bb3 0005  ld   $05
              7bb4 00a0  ld   $a0
              7bb5 0004  ld   $04
              7bb6 0020  ld   $20
              7bb7 00a8  ld   $a8
              7bb8 0004  ld   $04
              7bb9 00e8  ld   $e8
              7bba 0005  ld   $05
              7bbb 0000  ld   $00
              7bbc 0000  ld   $00
              7bbd 00e0  ld   $e0
              7bbe 0010  ld   $10
              7bbf 00d0  ld   $d0
              7bc0 00ee  ld   $ee
              7bc1 00a9  ld   $a9
              7bc2 0008  ld   $08
              7bc3 0085  ld   $85
              7bc4 005d  ld   $5d
              7bc5 0060  ld   $60
              7bc6 00e6  ld   $e6
              7bc7 0056  ld   $56
              7bc8 00a5  ld   $a5
              7bc9 0056  ld   $56
              7bca 0029  ld   $29
              7bcb 000f  ld   $0f
              7bcc 00c9  ld   $c9
              7bcd 000a  ld   $0a
              7bce 00b0  ld   $b0
              7bcf 00f6  ld   $f6
              7bd0 00a5  ld   $a5
              7bd1 0056  ld   $56
              7bd2 0038  ld   $38
              7bd3 00e9  ld   $e9
              7bd4 00a0  ld   $a0
              7bd5 0090  ld   $90
              7bd6 000c  ld   $0c
              7bd7 0085  ld   $85
              7bd8 0056  ld   $56
              7bd9 00e6  ld   $e6
              7bda 0057  ld   $57
              7bdb 00a5  ld   $a5
              7bdc 0057  ld   $57
              7bdd 0029  ld   $29
              7bde 000f  ld   $0f
              7bdf 00c9  ld   $c9
              7be0 000a  ld   $0a
              7be1 00b0  ld   $b0
              7be2 00f6  ld   $f6
              7be3 0060  ld   $60
              7be4 00a5  ld   $a5
              7be5 0057  ld   $57
              7be6 00f0  ld   $f0
              7be7 0003  ld   $03
              7be8 0020  ld   $20
              7be9 00dc  ld   $dc
              7bea 00ff  ld   $ff
              7beb 00a5  ld   $a5
              7bec 0056  ld   $56
              7bed 0020  ld   $20
              7bee 00dc  ld   $dc
              7bef 00ff  ld   $ff
              7bf0 00a9  ld   $a9
              7bf1 0020  ld   $20
              7bf2 004c  ld   $4c
              7bf3 00ef  ld   $ef
              7bf4 00ff  ld   $ff
              7bf5 00a9  ld   $a9
              7bf6 007a  ld   $7a
              7bf7 0085  ld   $85
              7bf8 0058  ld   $58
              7bf9 00a9  ld   $a9
              7bfa 0007  ld   $07
              7bfb fe00  bra  ac          ;+-----------------------------------+
              7bfc fcfd  bra  $7bfd       ;|                                   |
              7bfd 1418  ld   $18,y       ;| Trampoline for page $7b00 lookups |
              7bfe e006  jmp  y,$06       ;|                                   |
              7bff c218  st   [$18]       ;+-----------------------------------+
              7c00 0085  ld   $85
              7c01 0059  ld   $59
              7c02 004c  ld   $4c
              7c03 00ad  ld   $ad
              7c04 0004  ld   $04
              7c05 00a5  ld   $a5
              7c06 005a  ld   $5a
              7c07 0029  ld   $29
              7c08 0038  ld   $38
              7c09 00aa  ld   $aa
              7c0a 00bd  ld   $bd
              7c0b 0049  ld   $49
              7c0c 0006  ld   $06
              7c0d 00f0  ld   $f0
              7c0e 0007  ld   $07
              7c0f 0020  ld   $20
              7c10 00ef  ld   $ef
              7c11 00ff  ld   $ff
              7c12 00e8  ld   $e8
              7c13 004c  ld   $4c
              7c14 0048  ld   $48
              7c15 0005  ld   $05
              7c16 0060  ld   $60
              7c17 00a9  ld   $a9
              7c18 0020  ld   $20
              7c19 0085  ld   $85
              7c1a 004f  ld   $4f
              7c1b 00a9  ld   $a9
              7c1c 000f  ld   $0f
              7c1d 0085  ld   $85
              7c1e 0052  ld   $52
              7c1f 00a2  ld   $a2
              7c20 000f  ld   $0f
              7c21 00a0  ld   $a0
              7c22 004f  ld   $4f
              7c23 0098  ld   $98
              7c24 009d  ld   $9d
              7c25 003f  ld   $3f
              7c26 0000  ld   $00
              7c27 0088  ld   $88
              7c28 00ca  ld   $ca
              7c29 00d0  ld   $d0
              7c2a 00f8  ld   $f8
              7c2b 0060  ld   $60
              7c2c 00a9  ld   $a9
              7c2d 0000  ld   $00
              7c2e 0085  ld   $85
              7c2f 0056  ld   $56
              7c30 0085  ld   $85
              7c31 0057  ld   $57
              7c32 0085  ld   $85
              7c33 005c  ld   $5c
              7c34 00a6  ld   $a6
              7c35 0055  ld   $55
              7c36 00bd  ld   $bd
              7c37 0013  ld   $13
              7c38 0006  ld   $06
              7c39 0085  ld   $85
              7c3a 005b  ld   $5b
              7c3b 0020  ld   $20
              7c3c 00de  ld   $de
              7c3d 0004  ld   $04
              7c3e 00a5  ld   $a5
              7c3f 005a  ld   $5a
              7c40 0029  ld   $29
              7c41 000f  ld   $0f
              7c42 0018  ld   $18
              7c43 0069  ld   $69
              7c44 0041  ld   $41
              7c45 00c5  ld   $c5
              7c46 005c  ld   $5c
              7c47 00f0  ld   $f0
              7c48 00f2  ld   $f2
              7c49 0020  ld   $20
              7c4a 009e  ld   $9e
              7c4b 0005  ld   $05
              7c4c 00a5  ld   $a5
              7c4d 0051  ld   $51
              7c4e 00c9  ld   $c9
              7c4f 0010  ld   $10
              7c50 00f0  ld   $f0
              7c51 00e9  ld   $e9
              7c52 00a5  ld   $a5
              7c53 0050  ld   $50
              7c54 0085  ld   $85
              7c55 005c  ld   $5c
              7c56 00c6  ld   $c6
              7c57 005b  ld   $5b
              7c58 00d0  ld   $d0
              7c59 00e1  ld   $e1
              7c5a 0020  ld   $20
              7c5b 000c  ld   $0c
              7c5c 0006  ld   $06
              7c5d 00f0  ld   $f0
              7c5e 00cd  ld   $cd
              7c5f 0060  ld   $60
              7c60 0085  ld   $85
              7c61 0050  ld   $50
              7c62 00c9  ld   $c9
              7c63 0020  ld   $20
              7c64 00f0  ld   $f0
              7c65 003c  ld   $3c
              7c66 00a2  ld   $a2
              7c67 0000  ld   $00
              7c68 00b5  ld   $b5
              7c69 0040  ld   $40
              7c6a 00c5  ld   $c5
              7c6b 0050  ld   $50
              7c6c 00f0  ld   $f0
              7c6d 0008  ld   $08
              7c6e 00e8  ld   $e8
              7c6f 00e0  ld   $e0
              7c70 0010  ld   $10
              7c71 00d0  ld   $d0
              7c72 00f5  ld   $f5
              7c73 004c  ld   $4c
              7c74 00e0  ld   $e0
              7c75 0005  ld   $05
              7c76 0086  ld   $86
              7c77 0051  ld   $51
              7c78 008a  ld   $8a
              7c79 0029  ld   $29
              7c7a 000c  ld   $0c
              7c7b 0085  ld   $85
              7c7c 0053  ld   $53
              7c7d 00a5  ld   $a5
              7c7e 0052  ld   $52
              7c7f 0029  ld   $29
              7c80 000c  ld   $0c
              7c81 00c5  ld   $c5
              7c82 0053  ld   $53
              7c83 00d0  ld   $d0
              7c84 0010  ld   $10
              7c85 008a  ld   $8a
              7c86 0038  ld   $38
              7c87 00e5  ld   $e5
              7c88 0052  ld   $52
              7c89 0010  ld   $10
              7c8a 0005  ld   $05
              7c8b 00a9  ld   $a9
              7c8c 00ff  ld   $ff
              7c8d 004c  ld   $4c
              7c8e 00f2  ld   $f2
              7c8f 0005  ld   $05
              7c90 00a9  ld   $a9
              7c91 0001  ld   $01
              7c92 004c  ld   $4c
              7c93 00f2  ld   $f2
              7c94 0005  ld   $05
              7c95 008a  ld   $8a
              7c96 0029  ld   $29
              7c97 0003  ld   $03
              7c98 0085  ld   $85
              7c99 0053  ld   $53
              7c9a 00a5  ld   $a5
              7c9b 0052  ld   $52
              7c9c 0029  ld   $29
              7c9d 0003  ld   $03
              7c9e 00c5  ld   $c5
              7c9f 0053  ld   $53
              7ca0 00f0  ld   $f0
              7ca1 0005  ld   $05
              7ca2 00a2  ld   $a2
              7ca3 0010  ld   $10
              7ca4 0086  ld   $86
              7ca5 0051  ld   $51
              7ca6 0060  ld   $60
              7ca7 008a  ld   $8a
              7ca8 0038  ld   $38
              7ca9 00e5  ld   $e5
              7caa 0052  ld   $52
              7cab 0010  ld   $10
              7cac 0005  ld   $05
              7cad 00a9  ld   $a9
              7cae 00fc  ld   $fc
              7caf 004c  ld   $4c
              7cb0 00f2  ld   $f2
              7cb1 0005  ld   $05
              7cb2 00a9  ld   $a9
              7cb3 0004  ld   $04
              7cb4 0085  ld   $85
              7cb5 0054  ld   $54
              7cb6 00a5  ld   $a5
              7cb7 0052  ld   $52
              7cb8 00aa  ld   $aa
              7cb9 0018  ld   $18
              7cba 0065  ld   $65
              7cbb 0054  ld   $54
              7cbc 00a8  ld   $a8
              7cbd 00b9  ld   $b9
              7cbe 0040  ld   $40
              7cbf 0000  ld   $00
              7cc0 0095  ld   $95
              7cc1 0040  ld   $40
              7cc2 0006  ld   $06
              7cc3 0000  ld   $00
              7cc4 0000  ld   $00
              7cc5 00a9  ld   $a9
              7cc6 0020  ld   $20
              7cc7 0099  ld   $99
              7cc8 0040  ld   $40
              7cc9 0000  ld   $00
              7cca 0084  ld   $84
              7ccb 0052  ld   $52
              7ccc 00c4  ld   $c4
              7ccd 0051  ld   $51
              7cce 00d0  ld   $d0
              7ccf 00e9  ld   $e9
              7cd0 0060  ld   $60
              7cd1 00a2  ld   $a2
              7cd2 000f  ld   $0f
              7cd3 00a9  ld   $a9
              7cd4 004f  ld   $4f
              7cd5 0085  ld   $85
              7cd6 0053  ld   $53
              7cd7 00bd  ld   $bd
              7cd8 003f  ld   $3f
              7cd9 0000  ld   $00
              7cda 00c5  ld   $c5
              7cdb 0053  ld   $53
              7cdc 00d0  ld   $d0
              7cdd 0005  ld   $05
              7cde 00c6  ld   $c6
              7cdf 0053  ld   $53
              7ce0 00ca  ld   $ca
              7ce1 00d0  ld   $d0
              7ce2 00f4  ld   $f4
              7ce3 0060  ld   $60
              7ce4 00a9  ld   $a9
              7ce5 0060  ld   $60
              7ce6 0085  ld   $85
              7ce7 0058  ld   $58
              7ce8 00a9  ld   $a9
              7ce9 0007  ld   $07
              7cea 0085  ld   $85
              7ceb 0059  ld   $59
              7cec 0020  ld   $20
              7ced 00ad  ld   $ad
              7cee 0004  ld   $04
              7cef 0020  ld   $20
              7cf0 00bb  ld   $bb
              7cf1 0004  ld   $04
              7cf2 0085  ld   $85
              7cf3 0055  ld   $55
              7cf4 00c9  ld   $c9
              7cf5 0031  ld   $31
              7cf6 0010  ld   $10
              7cf7 0003  ld   $03
              7cf8 004c  ld   $4c
              7cf9 003e  ld   $3e
              7cfa 0006  ld   $06
              7cfb fe00  bra  ac          ;+-----------------------------------+
              7cfc fcfd  bra  $7cfd       ;|                                   |
              7cfd 1418  ld   $18,y       ;| Trampoline for page $7c00 lookups |
              7cfe e006  jmp  y,$06       ;|                                   |
              7cff c218  st   [$18]       ;+-----------------------------------+
              7d00 00a9  ld   $a9
              7d01 0035  ld   $35
              7d02 0038  ld   $38
              7d03 00e5  ld   $e5
              7d04 0055  ld   $55
              7d05 0030  ld   $30
              7d06 0001  ld   $01
              7d07 0060  ld   $60
              7d08 0020  ld   $20
              7d09 0038  ld   $38
              7d0a 0005  ld   $05
              7d0b 004c  ld   $4c
              7d0c 002a  ld   $2a
              7d0d 0006  ld   $06
              7d0e 0003  ld   $03
              7d0f 0009  ld   $09
              7d10 0013  ld   $13
              7d11 0023  ld   $23
              7d12 00ff  ld   $ff
              7d13 0048  ld   $48
              7d14 004f  ld   $4f
              7d15 004f  ld   $4f
              7d16 0052  ld   $52
              7d17 0041  ld   $41
              7d18 0059  ld   $59
              7d19 0021  ld   $21
              7d1a 0000  ld   $00
              7d1b 0048  ld   $48
              7d1c 0055  ld   $55
              7d1d 005a  ld   $5a
              7d1e 005a  ld   $5a
              7d1f 0041  ld   $41
              7d20 0048  ld   $48
              7d21 0021  ld   $21
              7d22 0000  ld   $00
              7d23 0057  ld   $57
              7d24 004f  ld   $4f
              7d25 004f  ld   $4f
              7d26 0048  ld   $48
              7d27 004f  ld   $4f
              7d28 004f  ld   $4f
              7d29 0021  ld   $21
              7d2a 0000  ld   $00
              7d2b 0059  ld   $59
              7d2c 0049  ld   $49
              7d2d 0050  ld   $50
              7d2e 0050  ld   $50
              7d2f 0049  ld   $49
              7d30 0045  ld   $45
              7d31 0021  ld   $21
              7d32 0000  ld   $00
              7d33 0053  ld   $53
              7d34 0057  ld   $57
              7d35 0045  ld   $45
              7d36 0045  ld   $45
              7d37 0054  ld   $54
              7d38 0021  ld   $21
              7d39 0000  ld   $00
              7d3a 0000  ld   $00
              7d3b 0043  ld   $43
              7d3c 004f  ld   $4f
              7d3d 004f  ld   $4f
              7d3e 004c  ld   $4c
              7d3f 0021  ld   $21
              7d40 0000  ld   $00
              7d41 0000  ld   $00
              7d42 0000  ld   $00
              7d43 004e  ld   $4e
              7d44 0049  ld   $49
              7d45 0043  ld   $43
              7d46 0045  ld   $45
              7d47 0021  ld   $21
              7d48 0000  ld   $00
              7d49 0000  ld   $00
              7d4a 0000  ld   $00
              7d4b 0047  ld   $47
              7d4c 0041  ld   $41
              7d4d 0044  ld   $44
              7d4e 005a  ld   $5a
              7d4f 004f  ld   $4f
              7d50 004f  ld   $4f
              7d51 004b  ld   $4b
              7d52 0053  ld   $53
              7d53 0021  ld   $21
              7d54 0000  ld   $00
              7d55 000d  ld   $0d
              7d56 000d  ld   $0d
              7d57 0031  ld   $31
              7d58 0035  ld   $35
              7d59 0020  ld   $20
              7d5a 0050  ld   $50
              7d5b 0055  ld   $55
              7d5c 005a  ld   $5a
              7d5d 005a  ld   $5a
              7d5e 004c  ld   $4c
              7d5f 0045  ld   $45
              7d60 0020  ld   $20
              7d61 002d  ld   $2d
              7d62 0020  ld   $20
              7d63 0042  ld   $42
              7d64 0059  ld   $59
              7d65 0020  ld   $20
              7d66 004a  ld   $4a
              7d67 0045  ld   $45
              7d68 0046  ld   $46
              7d69 0046  ld   $46
              7d6a 0020  ld   $20
              7d6b 004a  ld   $4a
              7d6c 0045  ld   $45
              7d6d 0054  ld   $54
              7d6e 0054  ld   $54
              7d6f 004f  ld   $4f
              7d70 004e  ld   $4e
              7d71 000d  ld   $0d
              7d72 000d  ld   $0d
              7d73 0049  ld   $49
              7d74 004e  ld   $4e
              7d75 0053  ld   $53
              7d76 0054  ld   $54
              7d77 0052  ld   $52
              7d78 0055  ld   $55
              7d79 0043  ld   $43
              7d7a 0054  ld   $54
              7d7b 0049  ld   $49
              7d7c 004f  ld   $4f
              7d7d 004e  ld   $4e
              7d7e 0053  ld   $53
              7d7f 0020  ld   $20
              7d80 0028  ld   $28
              7d81 0059  ld   $59
              7d82 002f  ld   $2f
              7d83 004e  ld   $4e
              7d84 0029  ld   $29
              7d85 003f  ld   $3f
              7d86 0020  ld   $20
              7d87 0000  ld   $00
              7d88 000d  ld   $0d
              7d89 000d  ld   $0d
              7d8a 0054  ld   $54
              7d8b 0059  ld   $59
              7d8c 0050  ld   $50
              7d8d 0045  ld   $45
              7d8e 0020  ld   $20
              7d8f 0041  ld   $41
              7d90 0020  ld   $20
              7d91 004c  ld   $4c
              7d92 0045  ld   $45
              7d93 0054  ld   $54
              7d94 0054  ld   $54
              7d95 0045  ld   $45
              7d96 0052  ld   $52
              7d97 0020  ld   $20
              7d98 004f  ld   $4f
              7d99 004e  ld   $4e
              7d9a 0020  ld   $20
              7d9b 0054  ld   $54
              7d9c 0048  ld   $48
              7d9d 0045  ld   $45
              7d9e 0020  ld   $20
              7d9f 0053  ld   $53
              7da0 0041  ld   $41
              7da1 004d  ld   $4d
              7da2 0045  ld   $45
              7da3 000d  ld   $0d
              7da4 0052  ld   $52
              7da5 004f  ld   $4f
              7da6 0057  ld   $57
              7da7 0020  ld   $20
              7da8 004f  ld   $4f
              7da9 0052  ld   $52
              7daa 0020  ld   $20
              7dab 0043  ld   $43
              7dac 004f  ld   $4f
              7dad 004c  ld   $4c
              7dae 0055  ld   $55
              7daf 004d  ld   $4d
              7db0 004e  ld   $4e
              7db1 0020  ld   $20
              7db2 0041  ld   $41
              7db3 0053  ld   $53
              7db4 0020  ld   $20
              7db5 0054  ld   $54
              7db6 0048  ld   $48
              7db7 0045  ld   $45
              7db8 0020  ld   $20
              7db9 0045  ld   $45
              7dba 004d  ld   $4d
              7dbb 0050  ld   $50
              7dbc 0054  ld   $54
              7dbd 0059  ld   $59
              7dbe 000d  ld   $0d
              7dbf 0053  ld   $53
              7dc0 0050  ld   $50
              7dc1 0041  ld   $41
              7dc2 0043  ld   $43
              7dc3 0045  ld   $45
              7dc4 0020  ld   $20
              7dc5 0054  ld   $54
              7dc6 004f  ld   $4f
              7dc7 0020  ld   $20
              7dc8 0053  ld   $53
              7dc9 004c  ld   $4c
              7dca 0007  ld   $07
              7dcb 0000  ld   $00
              7dcc 00d8  ld   $d8
              7dcd 0049  ld   $49
              7dce 0044  ld   $44
              7dcf 0045  ld   $45
              7dd0 0020  ld   $20
              7dd1 0054  ld   $54
              7dd2 0048  ld   $48
              7dd3 0041  ld   $41
              7dd4 0054  ld   $54
              7dd5 0020  ld   $20
              7dd6 004c  ld   $4c
              7dd7 0045  ld   $45
              7dd8 0054  ld   $54
              7dd9 0054  ld   $54
              7dda 0045  ld   $45
              7ddb 0052  ld   $52
              7ddc 000d  ld   $0d
              7ddd 0028  ld   $28
              7dde 0041  ld   $41
              7ddf 004e  ld   $4e
              7de0 0044  ld   $44
              7de1 0020  ld   $20
              7de2 0041  ld   $41
              7de3 004e  ld   $4e
              7de4 0059  ld   $59
              7de5 0020  ld   $20
              7de6 0042  ld   $42
              7de7 0045  ld   $45
              7de8 0054  ld   $54
              7de9 0057  ld   $57
              7dea 0045  ld   $45
              7deb 0045  ld   $45
              7dec 004e  ld   $4e
              7ded 0029  ld   $29
              7dee 0020  ld   $20
              7def 0054  ld   $54
              7df0 004f  ld   $4f
              7df1 0057  ld   $57
              7df2 0041  ld   $41
              7df3 0052  ld   $52
              7df4 0044  ld   $44
              7df5 0053  ld   $53
              7df6 000d  ld   $0d
              7df7 0054  ld   $54
              7df8 0048  ld   $48
              7df9 0045  ld   $45
              7dfa 0020  ld   $20
              7dfb fe00  bra  ac          ;+-----------------------------------+
              7dfc fcfd  bra  $7dfd       ;|                                   |
              7dfd 1418  ld   $18,y       ;| Trampoline for page $7d00 lookups |
              7dfe e006  jmp  y,$06       ;|                                   |
              7dff c218  st   [$18]       ;+-----------------------------------+
              7e00 0053  ld   $53
              7e01 0050  ld   $50
              7e02 0041  ld   $41
              7e03 0043  ld   $43
              7e04 0045  ld   $45
              7e05 002e  ld   $2e
              7e06 0020  ld   $20
              7e07 0054  ld   $54
              7e08 0059  ld   $59
              7e09 0050  ld   $50
              7e0a 0045  ld   $45
              7e0b 0020  ld   $20
              7e0c 0051  ld   $51
              7e0d 0020  ld   $20
              7e0e 0054  ld   $54
              7e0f 004f  ld   $4f
              7e10 0020  ld   $20
              7e11 0051  ld   $51
              7e12 0055  ld   $55
              7e13 0049  ld   $49
              7e14 0054  ld   $54
              7e15 002e  ld   $2e
              7e16 000d  ld   $0d
              7e17 0054  ld   $54
              7e18 0048  ld   $48
              7e19 0049  ld   $49
              7e1a 0053  ld   $53
              7e1b 0020  ld   $20
              7e1c 0049  ld   $49
              7e1d 0053  ld   $53
              7e1e 0020  ld   $20
              7e1f 0054  ld   $54
              7e20 0048  ld   $48
              7e21 0045  ld   $45
              7e22 0020  ld   $20
              7e23 0053  ld   $53
              7e24 004f  ld   $4f
              7e25 004c  ld   $4c
              7e26 0056  ld   $56
              7e27 0045  ld   $45
              7e28 0044  ld   $44
              7e29 0020  ld   $20
              7e2a 0050  ld   $50
              7e2b 0055  ld   $55
              7e2c 005a  ld   $5a
              7e2d 005a  ld   $5a
              7e2e 004c  ld   $4c
              7e2f 0045  ld   $45
              7e30 003a  ld   $3a
              7e31 0000  ld   $00
              7e32 000d  ld   $0d
              7e33 0044  ld   $44
              7e34 0049  ld   $49
              7e35 0046  ld   $46
              7e36 0046  ld   $46
              7e37 0049  ld   $49
              7e38 0043  ld   $43
              7e39 0055  ld   $55
              7e3a 004c  ld   $4c
              7e3b 0054  ld   $54
              7e3c 0059  ld   $59
              7e3d 0020  ld   $20
              7e3e 004c  ld   $4c
              7e3f 0045  ld   $45
              7e40 0056  ld   $56
              7e41 0045  ld   $45
              7e42 004c  ld   $4c
              7e43 0020  ld   $20
              7e44 0028  ld   $28
              7e45 0031  ld   $31
              7e46 002d  ld   $2d
              7e47 0035  ld   $35
              7e48 0029  ld   $29
              7e49 003f  ld   $3f
              7e4a 0020  ld   $20
              7e4b 0000  ld   $00
              7e4c 000d  ld   $0d
              7e4d 0053  ld   $53
              7e4e 004f  ld   $4f
              7e4f 0052  ld   $52
              7e50 0052  ld   $52
              7e51 0059  ld   $59
              7e52 002e  ld   $2e
              7e53 0020  ld   $20
              7e54 0054  ld   $54
              7e55 0052  ld   $52
              7e56 0059  ld   $59
              7e57 0020  ld   $20
              7e58 0041  ld   $41
              7e59 0047  ld   $47
              7e5a 0041  ld   $41
              7e5b 0049  ld   $49
              7e5c 004e  ld   $4e
              7e5d 003a  ld   $3a
              7e5e 0020  ld   $20
              7e5f 0000  ld   $00
              7e60 0020  ld   $20
              7e61 0059  ld   $59
              7e62 004f  ld   $4f
              7e63 0055  ld   $55
              7e64 0020  ld   $20
              7e65 0053  ld   $53
              7e66 004f  ld   $4f
              7e67 004c  ld   $4c
              7e68 0056  ld   $56
              7e69 0045  ld   $45
              7e6a 0044  ld   $44
              7e6b 000d  ld   $0d
              7e6c 0041  ld   $41
              7e6d 0020  ld   $20
              7e6e 004c  ld   $4c
              7e6f 0045  ld   $45
              7e70 0056  ld   $56
              7e71 0045  ld   $45
              7e72 004c  ld   $4c
              7e73 0020  ld   $20
              7e74 0000  ld   $00
              7e75 0020  ld   $20
              7e76 0050  ld   $50
              7e77 0055  ld   $55
              7e78 005a  ld   $5a
              7e79 005a  ld   $5a
              7e7a 004c  ld   $4c
              7e7b 0045  ld   $45
              7e7c 0021  ld   $21
              7e7d 000d  ld   $0d
              7e7e 000d  ld   $0d
              7e7f 0054  ld   $54
              7e80 004f  ld   $4f
              7e81 0054  ld   $54
              7e82 0041  ld   $41
              7e83 004c  ld   $4c
              7e84 0020  ld   $20
              7e85 004d  ld   $4d
              7e86 004f  ld   $4f
              7e87 0056  ld   $56
              7e88 0045  ld   $45
              7e89 0053  ld   $53
              7e8a 003a  ld   $3a
              7e8b 0020  ld   $20
              7e8c 0000  ld   $00
              7e8d 000d  ld   $0d
              7e8e 000d  ld   $0d
              7e8f 0050  ld   $50
              7e90 004c  ld   $4c
              7e91 0041  ld   $41
              7e92 0059  ld   $59
              7e93 0020  ld   $20
              7e94 0041  ld   $41
              7e95 0047  ld   $47
              7e96 0041  ld   $41
              7e97 0049  ld   $49
              7e98 004e  ld   $4e
              7e99 0020  ld   $20
              7e9a 0028  ld   $28
              7e9b 0059  ld   $59
              7e9c 002f  ld   $2f
              7e9d 004e  ld   $4e
              7e9e 0029  ld   $29
              7e9f 003f  ld   $3f
              7ea0 0020  ld   $20
              7ea1 0000  ld   $00
              7ea2 000d  ld   $0d
              7ea3 000d  ld   $0d
              7ea4 0042  ld   $42
              7ea5 0059  ld   $59
              7ea6 0045  ld   $45
              7ea7 0021  ld   $21
              7ea8 000d  ld   $0d
              7ea9 0000  ld   $00
              7eaa 000b  ld   $0b
              7eab 00e5  ld   $e5
              7eac 001b  ld   $1b
              7ead 0020  ld   $20
              7eae 00ef  ld   $ef
              7eaf 00ff  ld   $ff
              7eb0 00e8  ld   $e8
              7eb1 00bd  ld   $bd
              7eb2 00f1  ld   $f1
              7eb3 000b  ld   $0b
              7eb4 00d0  ld   $d0
              7eb5 00f7  ld   $f7
              7eb6 004c  ld   $4c
              7eb7 009d  ld   $9d
              7eb8 000c  ld   $0c
              7eb9 000d  ld   $0d
              7eba 0055  ld   $55
              7ebb 0053  ld   $53
              7ebc 0041  ld   $41
              7ebd 0047  ld   $47
              7ebe 0045  ld   $45
              7ebf 003a  ld   $3a
              7ec0 000d  ld   $0d
              7ec1 0020  ld   $20
              7ec2 0021  ld   $21
              7ec3 0038  ld   $38
              7ec4 0030  ld   $30
              7ec5 0030  ld   $30
              7ec6 003a  ld   $3a
              7ec7 0050  ld   $50
              7ec8 000c  ld   $0c
              7ec9 0000  ld   $00
              7eca 008a  ld   $8a
              7ecb 0048  ld   $48
              7ecc 0041  ld   $41
              7ecd 0020  ld   $20
              7ece 0020  ld   $20
              7ecf 0020  ld   $20
              7ed0 0020  ld   $20
              7ed1 0041  ld   $41
              7ed2 0053  ld   $53
              7ed3 0053  ld   $53
              7ed4 0045  ld   $45
              7ed5 004d  ld   $4d
              7ed6 0042  ld   $42
              7ed7 004c  ld   $4c
              7ed8 0045  ld   $45
              7ed9 0020  ld   $20
              7eda 0031  ld   $31
              7edb 0053  ld   $53
              7edc 0054  ld   $54
              7edd 000d  ld   $0d
              7ede 0020  ld   $20
              7edf 0021  ld   $21
              7ee0 0020  ld   $20
              7ee1 004c  ld   $4c
              7ee2 0044  ld   $44
              7ee3 0041  ld   $41
              7ee4 0020  ld   $20
              7ee5 0023  ld   $23
              7ee6 0031  ld   $31
              7ee7 0020  ld   $20
              7ee8 0020  ld   $20
              7ee9 0020  ld   $20
              7eea 0020  ld   $20
              7eeb 0041  ld   $41
              7eec 0053  ld   $53
              7eed 0053  ld   $53
              7eee 0045  ld   $45
              7eef 004d  ld   $4d
              7ef0 0042  ld   $42
              7ef1 004c  ld   $4c
              7ef2 0045  ld   $45
              7ef3 0020  ld   $20
              7ef4 004e  ld   $4e
              7ef5 0045  ld   $45
              7ef6 0058  ld   $58
              7ef7 0054  ld   $54
              7ef8 000d  ld   $0d
              7ef9 0020  ld   $20
              7efa 0021  ld   $21
              7efb fe00  bra  ac          ;+-----------------------------------+
              7efc fcfd  bra  $7efd       ;|                                   |
              7efd 1418  ld   $18,y       ;| Trampoline for page $7e00 lookups |
              7efe e006  jmp  y,$06       ;|                                   |
              7eff c218  st   [$18]       ;+-----------------------------------+
              7f00 0038  ld   $38
              7f01 0030  ld   $30
              7f02 0030  ld   $30
              7f03 004c  ld   $4c
              7f04 0020  ld   $20
              7f05 0020  ld   $20
              7f06 0020  ld   $20
              * 7 times
              7f0b 0044  ld   $44
              7f0c 0049  ld   $49
              7f0d 0053  ld   $53
              7f0e 0041  ld   $41
              7f0f 0053  ld   $53
              7f10 0053  ld   $53
              7f11 0045  ld   $45
              7f12 004d  ld   $4d
              7f13 0042  ld   $42
              7f14 004c  ld   $4c
              7f15 0045  ld   $45
              7f16 000d  ld   $0d
              7f17 0020  ld   $20
              7f18 0021  ld   $21
              7f19 004c  ld   $4c
              7f1a 0020  ld   $20
              7f1b 0020  ld   $20
              7f1c 0020  ld   $20
              * 10 times
              7f24 004e  ld   $4e
              7f25 0045  ld   $45
              7f26 0058  ld   $58
              7f27 0054  ld   $54
              7f28 0020  ld   $20
              7f29 0053  ld   $53
              7f2a 0043  ld   $43
              7f2b 0052  ld   $52
              7f2c 0045  ld   $45
              7f2d 0045  ld   $45
              7f2e 004e  ld   $4e
              7f2f 000d  ld   $0d
              7f30 0020  ld   $20
              7f31 0021  ld   $21
              7f32 0028  ld   $28
              7f33 0052  ld   $52
              7f34 0045  ld   $45
              7f35 0054  ld   $54
              7f36 0055  ld   $55
              7f37 0052  ld   $52
              7f38 004e  ld   $4e
              7f39 0029  ld   $29
              7f3a 0020  ld   $20
              7f3b 0020  ld   $20
              7f3c 0020  ld   $20
              7f3d 0045  ld   $45
              7f3e 0058  ld   $58
              7f3f 0049  ld   $49
              7f40 0054  ld   $54
              7f41 000d  ld   $0d
              7f42 0020  ld   $20
              7f43 0042  ld   $42
              7f44 0045  ld   $45
              7f45 0045  ld   $45
              7f46 0052  ld   $52
              7f47 0020  ld   $20
              7f48 0020  ld   $20
              7f49 0020  ld   $20
              * 8 times
              7f4f 0053  ld   $53
              7f50 004b  ld   $4b
              7f51 0049  ld   $49
              7f52 0050  ld   $50
              7f53 0020  ld   $20
              7f54 0055  ld   $55
              7f55 0053  ld   $53
              7f56 0041  ld   $41
              7f57 0047  ld   $47
              7f58 0045  ld   $45
              7f59 0000  ld   $00
              7f5a 000c  ld   $0c
              7f5b 008a  ld   $8a
              7f5c 0076  ld   $76
              7f5d 00a9  ld   $a9
              7f5e 000c  ld   $0c
              7f5f 0048  ld   $48
              7f60 0020  ld   $20
              7f61 00fd  ld   $fd
              7f62 000d  ld   $0d
              7f63 0020  ld   $20
              7f64 00f1  ld   $f1
              7f65 000e  ld   $0e
              7f66 0085  ld   $85
              7f67 0044  ld   $44
              7f68 0084  ld   $84
              7f69 0045  ld   $45
              7f6a 0068  ld   $68
              7f6b 0038  ld   $38
              7f6c 00e9  ld   $e9
              7f6d 0001  ld   $01
              7f6e 00d0  ld   $d0
              7f6f 00ef  ld   $ef
              7f70 0020  ld   $20
              7f71 0095  ld   $95
              7f72 000e  ld   $0e
              7f73 008a  ld   $8a
              7f74 00d0  ld   $d0
              7f75 0003  ld   $03
              7f76 004c  ld   $4c
              7f77 001f  ld   $1f
              7f78 00ff  ld   $ff
              7f79 00a0  ld   $a0
              7f7a 0000  ld   $00
              7f7b 0020  ld   $20
              7f7c 00c0  ld   $c0
              7f7d 000e  ld   $0e
              7f7e 0048  ld   $48
              7f7f 008a  ld   $8a
              7f80 00f0  ld   $f0
              7f81 0007  ld   $07
              7f82 00b5  ld   $b5
              7f83 0046  ld   $46
              7f84 0095  ld   $95
              7f85 0044  ld   $44
              7f86 00ca  ld   $ca
              7f87 0010  ld   $10
              7f88 00f9  ld   $f9
              7f89 0068  ld   $68
              7f8a 00c9  ld   $c9
              7f8b 0005  ld   $05
              7f8c 00f0  ld   $f0
              7f8d 00cf  ld   $cf
              7f8e 00c9  ld   $c9
              7f8f 0099  ld   $99
              7f90 00f0  ld   $f0
              7f91 0004  ld   $04
              7f92 00c9  ld   $c9
              7f93 0093  ld   $93
              7f94 00d0  ld   $d0
              7f95 0076  ld   $76
              7f96 00a9  ld   $a9
              7f97 0003  ld   $03
              7f98 0085  ld   $85
              7f99 0047  ld   $47
              7f9a 0020  ld   $20
              7f9b 00b2  ld   $b2
              7f9c 000e  ld   $0e
              7f9d 000a  ld   $0a
              7f9e 00e9  ld   $e9
              7f9f 00be  ld   $be
              7fa0 00c5  ld   $c5
              7fa1 00c2  ld   $c2
              7fa2 0090  ld   $90
              7fa3 0068  ld   $68
              7fa4 000a  ld   $0a
              7fa5 000a  ld   $0a
              7fa6 00a2  ld   $a2
              7fa7 0004  ld   $04
              7fa8 000a  ld   $0a
              7fa9 0026  ld   $26
              7faa 004a  ld   $4a
              7fab 0026  ld   $26
              7fac 004b  ld   $4b
              7fad 00ca  ld   $ca
              7fae 0010  ld   $10
              7faf 00f8  ld   $f8
              7fb0 00c6  ld   $c6
              7fb1 0047  ld   $47
              7fb2 00f0  ld   $f0
              7fb3 00f4  ld   $f4
              7fb4 0010  ld   $10
              7fb5 00e4  ld   $e4
              7fb6 00a2  ld   $a2
              7fb7 0005  ld   $05
              7fb8 0020  ld   $20
              7fb9 00b2  ld   $b2
              7fba 000e  ld   $0e
              7fbb 0084  ld   $84
              7fbc 003a  ld   $3a
              7fbd 00dd  ld   $dd
              7fbe 0052  ld   $52
              7fbf 000f  ld   $0f
              7fc0 00d0  ld   $d0
              7fc1 0013  ld   $13
              7fc2 0020  ld   $20
              7fc3 00b2  ld   $b2
              7fc4 000e  ld   $0e
              7fc5 00dd  ld   $dd
              7fc6 0058  ld   $58
              7fc7 000f  ld   $0f
              7fc8 00f0  ld   $f0
              7fc9 000d  ld   $0d
              7fca 00bd  ld   $bd
              7fcb 0058  ld   $58
              7fcc 000f  ld   $0f
              7fcd 00f0  ld   $f0
              7fce 0007  ld   $07
              7fcf 00c9  ld   $c9
              7fd0 00a4  ld   $a4
              7fd1 00f0  ld   $f0
              7fd2 0003  ld   $03
              7fd3 000d  ld   $0d
              7fd4 0000  ld   $00
              7fd5 0000  ld   $00
              7fd6 00a4  ld   $a4
              7fd7 003a  ld   $3a
              7fd8 0018  ld   $18
              7fd9 0088  ld   $88
              7fda 0026  ld   $26
              7fdb 004c  ld   $4c
              7fdc 00e0  ld   $e0
              7fdd 0003  ld   $03
              7fde 00d0  ld   $d0
              7fdf 000d  ld   $0d
              7fe0 0020  ld   $20
              7fe1 00c0  ld   $c0
              7fe2 000e  ld   $0e
              7fe3 00a5  ld   $a5
              7fe4 0049  ld   $49
              7fe5 00f0  ld   $f0
              7fe6 0001  ld   $01
              7fe7 00e8  ld   $e8
              7fe8 0086  ld   $86
              7fe9 0038  ld   $38
              7fea 00a2  ld   $a2
              7feb 0003  ld   $03
              7fec 0088  ld   $88
              7fed 0086  ld   $86
              7fee 0047  ld   $47
              7fef 00ca  ld   $ca
              7ff0 0010  ld   $10
              7ff1 00c9  ld   $c9
              7ff2 00a5  ld   $a5
              7ff3 004c  ld   $4c
              7ff4 000a  ld   $0a
              7ff5 000a  ld   $0a
              7ff6 0005  ld   $05
              7ff7 0038  ld   $38
              7ff8 00c9  ld   $c9
              7ff9 0020  ld   $20
              7ffa 00b0  ld   $b0
              7ffb fe00  bra  ac          ;+-----------------------------------+
              7ffc fcfd  bra  $7ffd       ;|                                   |
              7ffd 1418  ld   $18,y       ;| Trampoline for page $7f00 lookups |
              7ffe e006  jmp  y,$06       ;|                                   |
              7fff c218  st   [$18]       ;+-----------------------------------+
              8000 0006  ld   $06
              8001 00a6  ld   $a6
              8002 0038  ld   $38
              8003 00f0  ld   $f0
              8004 0002  ld   $02
              8005 0009  ld   $09
              8006 0080  ld   $80
              8007 0085  ld   $85
              8008 004c  ld   $4c
              8009 0084  ld   $84
              800a 003a  ld   $3a
              800b 00b9  ld   $b9
              800c 0000  ld   $00
              800d 0002  ld   $02
              800e 00c9  ld   $c9
              800f 00bb  ld   $bb
              8010 00f0  ld   $f0
              8011 0004  ld   $04
              8012 00c9  ld   $c9
              8013 008d  ld   $8d
              8014 00d0  ld   $d0
              8015 002c  ld   $2c
              8016 00a5  ld   $a5
              8017 0047  ld   $47
              8018 0020  ld   $20
              8019 00b7  ld   $b7
              801a 000d  ld   $0d
              801b 00aa  ld   $aa
              801c 00bd  ld   $bd
              801d 009e  ld   $9e
              801e 000f  ld   $0f
              801f 00c5  ld   $c5
              8020 004a  ld   $4a
              8021 00d0  ld   $d0
              8022 0013  ld   $13
              8023 00bd  ld   $bd
              8024 005e  ld   $5e
              8025 000f  ld   $0f
              8026 00c5  ld   $c5
              8027 004b  ld   $4b
              8028 00d0  ld   $d0
              8029 000c  ld   $0c
              802a 00a5  ld   $a5
              802b 004c  ld   $4c
              802c 00a4  ld   $a4
              802d 0040  ld   $40
              802e 00c0  ld   $c0
              802f 009d  ld   $9d
              8030 00f0  ld   $f0
              8031 0020  ld   $20
              8032 00c5  ld   $c5
              8033 0040  ld   $40
              8034 00f0  ld   $f0
              8035 0037  ld   $37
              8036 00c6  ld   $c6
              8037 0047  ld   $47
              8038 00d0  ld   $d0
              8039 00dc  ld   $dc
              803a 00e6  ld   $e6
              803b 004c  ld   $4c
              803c 00c6  ld   $c6
              803d 0038  ld   $38
              803e 00f0  ld   $f0
              803f 00d6  ld   $d6
              8040 00a4  ld   $a4
              8041 003a  ld   $3a
              8042 0098  ld   $98
              8043 00aa  ld   $aa
              8044 0020  ld   $20
              8045 00bb  ld   $bb
              8046 000e  ld   $0e
              8047 0020  ld   $20
              8048 0079  ld   $79
              8049 000e  ld   $0e
              804a 00a9  ld   $a9
              804b 00de  ld   $de
              804c 0020  ld   $20
              804d 00ef  ld   $ef
              804e 00ff  ld   $ff
              804f 004c  ld   $4c
              8050 009d  ld   $9d
              8051 000c  ld   $0c
              8052 00e9  ld   $e9
              8053 0081  ld   $81
              8054 004a  ld   $4a
              8055 00d0  ld   $d0
              8056 00e9  ld   $e9
              8057 00a4  ld   $a4
              8058 0049  ld   $49
              8059 00a6  ld   $a6
              805a 0048  ld   $48
              805b 00d0  ld   $d0
              805c 0001  ld   $01
              805d 0088  ld   $88
              805e 00ca  ld   $ca
              805f 008a  ld   $8a
              8060 0018  ld   $18
              8061 00e5  ld   $e5
              8062 0044  ld   $44
              8063 0085  ld   $85
              8064 0048  ld   $48
              8065 0010  ld   $10
              8066 0001  ld   $01
              8067 00c8  ld   $c8
              8068 0098  ld   $98
              8069 00e5  ld   $e5
              806a 0045  ld   $45
              806b 00d0  ld   $d0
              806c 0043  ld   $43
              806d 00a4  ld   $a4
              806e 0041  ld   $41
              806f 00b9  ld   $b9
              8070 0047  ld   $47
              8071 0000  ld   $00
              8072 0091  ld   $91
              8073 0044  ld   $44
              8074 0088  ld   $88
              8075 0010  ld   $10
              8076 00f8  ld   $f8
              8077 00a9  ld   $a9
              8078 0001  ld   $01
              8079 004c  ld   $4c
              807a 008c  ld   $8c
              807b 000c  ld   $0c
              807c 00a6  ld   $a6
              807d 0044  ld   $44
              807e 00a4  ld   $a4
              807f 0045  ld   $45
              8080 0020  ld   $20
              8081 00bb  ld   $bb
              8082 000e  ld   $0e
              8083 0020  ld   $20
              8084 006f  ld   $6f
              8085 000e  ld   $0e
              8086 00a0  ld   $a0
              8087 0000  ld   $00
              8088 00a9  ld   $a9
              8089 00ad  ld   $ad
              808a 0020  ld   $20
              808b 00ef  ld   $ef
              808c 00ff  ld   $ff
              808d 0020  ld   $20
              808e 0077  ld   $77
              808f 000e  ld   $0e
              8090 00a1  ld   $a1
              8091 0044  ld   $44
              8092 00a8  ld   $a8
              8093 004a  ld   $4a
              8094 0090  ld   $90
              8095 000b  ld   $0b
              8096 004a  ld   $4a
              8097 00b0  ld   $b0
              8098 0017  ld   $17
              8099 00c9  ld   $c9
              809a 0022  ld   $22
              809b 00f0  ld   $f0
              809c 0013  ld   $13
              809d 0029  ld   $29
              809e 0007  ld   $07
              809f 0009  ld   $09
              80a0 0080  ld   $80
              80a1 004a  ld   $4a
              80a2 00aa  ld   $aa
              80a3 00bd  ld   $bd
              80a4 0000  ld   $00
              80a5 000f  ld   $0f
              80a6 00b0  ld   $b0
              80a7 0004  ld   $04
              80a8 004a  ld   $4a
              80a9 004a  ld   $4a
              80aa 004a  ld   $4a
              80ab 004a  ld   $4a
              80ac 0029  ld   $29
              80ad 000f  ld   $0f
              80ae 00d0  ld   $d0
              80af 0004  ld   $04
              80b0 00a0  ld   $a0
              80b1 0080  ld   $80
              80b2 00a9  ld   $a9
              80b3 0000  ld   $00
              80b4 00aa  ld   $aa
              80b5 00bd  ld   $bd
              80b6 0044  ld   $44
              80b7 000f  ld   $0f
              80b8 0085  ld   $85
              80b9 0040  ld   $40
              80ba 0029  ld   $29
              80bb 0003  ld   $03
              80bc 0085  ld   $85
              80bd 0041  ld   $41
              80be 0098  ld   $98
              80bf 0029  ld   $29
              80c0 008f  ld   $8f
              80c1 00aa  ld   $aa
              80c2 0098  ld   $98
              80c3 00a0  ld   $a0
              80c4 0003  ld   $03
              80c5 00e0  ld   $e0
              80c6 008a  ld   $8a
              80c7 00f0  ld   $f0
              80c8 000b  ld   $0b
              80c9 004a  ld   $4a
              80ca 0090  ld   $90
              80cb 0008  ld   $08
              80cc 004a  ld   $4a
              80cd 004a  ld   $4a
              80ce 0009  ld   $09
              80cf 0020  ld   $20
              80d0 0088  ld   $88
              80d1 00d0  ld   $d0
              80d2 00fa  ld   $fa
              80d3 00c8  ld   $c8
              80d4 0088  ld   $88
              80d5 00d0  ld   $d0
              80d6 00f2  ld   $f2
              80d7 0060  ld   $60
              80d8 0020  ld   $20
              80d9 00a1  ld   $a1
              80da 000d  ld   $0d
              80db 000e  ld   $0e
              80dc 0000  ld   $00
              80dd 0000  ld   $00
              80de 0048  ld   $48
              80df 00b1  ld   $b1
              80e0 0044  ld   $44
              80e1 0020  ld   $20
              80e2 00dc  ld   $dc
              80e3 00ff  ld   $ff
              80e4 00a2  ld   $a2
              80e5 0001  ld   $01
              80e6 0020  ld   $20
              80e7 0079  ld   $79
              80e8 000e  ld   $0e
              80e9 00c4  ld   $c4
              80ea 0041  ld   $41
              80eb 00c8  ld   $c8
              80ec 0090  ld   $90
              80ed 00f1  ld   $f1
              80ee 00a2  ld   $a2
              80ef 0003  ld   $03
              80f0 00c0  ld   $c0
              80f1 0003  ld   $03
              80f2 0090  ld   $90
              80f3 00f2  ld   $f2
              80f4 0068  ld   $68
              80f5 00a8  ld   $a8
              80f6 00b9  ld   $b9
              80f7 005e  ld   $5e
              80f8 000f  ld   $0f
              80f9 0085  ld   $85
              80fa 0042  ld   $42
              80fb fe00  bra  ac          ;+-----------------------------------+
              80fc fcfd  bra  $80fd       ;|                                   |
              80fd 1418  ld   $18,y       ;| Trampoline for page $8000 lookups |
              80fe e006  jmp  y,$06       ;|                                   |
              80ff c218  st   [$18]       ;+-----------------------------------+
              8100 00b9  ld   $b9
              8101 009e  ld   $9e
              8102 000f  ld   $0f
              8103 0085  ld   $85
              8104 0043  ld   $43
              8105 00a9  ld   $a9
              8106 0000  ld   $00
              8107 00a0  ld   $a0
              8108 0005  ld   $05
              8109 0006  ld   $06
              810a 0043  ld   $43
              810b 0026  ld   $26
              810c 0042  ld   $42
              810d 002a  ld   $2a
              810e 0088  ld   $88
              810f 00d0  ld   $d0
              8110 00f8  ld   $f8
              8111 0069  ld   $69
              8112 00bf  ld   $bf
              8113 0020  ld   $20
              8114 00ef  ld   $ef
              8115 00ff  ld   $ff
              8116 00ca  ld   $ca
              8117 00d0  ld   $d0
              8118 00ec  ld   $ec
              8119 0020  ld   $20
              811a 0077  ld   $77
              811b 000e  ld   $0e
              811c 00a2  ld   $a2
              811d 0006  ld   $06
              811e 00e0  ld   $e0
              811f 0003  ld   $03
              8120 00d0  ld   $d0
              8121 0012  ld   $12
              8122 00a4  ld   $a4
              8123 0041  ld   $41
              8124 00f0  ld   $f0
              8125 000e  ld   $0e
              8126 00a5  ld   $a5
              8127 0040  ld   $40
              8128 00c9  ld   $c9
              8129 00e8  ld   $e8
              812a 00b1  ld   $b1
              812b 0044  ld   $44
              812c 00b0  ld   $b0
              812d 001c  ld   $1c
              812e 0020  ld   $20
              812f 00dc  ld   $dc
              8130 00ff  ld   $ff
              8131 0088  ld   $88
              8132 00d0  ld   $d0
              8133 00f2  ld   $f2
              8134 0006  ld   $06
              8135 0040  ld   $40
              8136 0090  ld   $90
              8137 000e  ld   $0e
              8138 00bd  ld   $bd
              8139 0051  ld   $51
              813a 000f  ld   $0f
              813b 0020  ld   $20
              813c 00ef  ld   $ef
              813d 00ff  ld   $ff
              813e 00bd  ld   $bd
              813f 0057  ld   $57
              8140 000f  ld   $0f
              8141 00f0  ld   $f0
              8142 0003  ld   $03
              8143 0020  ld   $20
              8144 00ef  ld   $ef
              8145 00ff  ld   $ff
              8146 00ca  ld   $ca
              8147 00d0  ld   $d0
              8148 00d5  ld   $d5
              8149 0060  ld   $60
              814a 0020  ld   $20
              814b 00f4  ld   $f4
              814c 000e  ld   $0e
              814d 00aa  ld   $aa
              814e 00e8  ld   $e8
              814f 00d0  ld   $d0
              8150 0001  ld   $01
              8151 00c8  ld   $c8
              8152 0098  ld   $98
              8153 0020  ld   $20
              8154 00dc  ld   $dc
              8155 00ff  ld   $ff
              8156 008a  ld   $8a
              8157 004c  ld   $4c
              8158 00dc  ld   $dc
              8159 00ff  ld   $ff
              815a 00a2  ld   $a2
              815b 0001  ld   $01
              815c 00a9  ld   $a9
              815d 00a0  ld   $a0
              815e 0020  ld   $20
              815f 00ef  ld   $ef
              8160 00ff  ld   $ff
              8161 00ca  ld   $ca
              8162 00d0  ld   $d0
              8163 00f8  ld   $f8
              8164 0060  ld   $60
              8165 00c9  ld   $c9
              8166 009b  ld   $9b
              8167 00f0  ld   $f0
              8168 000a  ld   $0a
              8169 0020  ld   $20
              816a 00ef  ld   $ef
              816b 00ff  ld   $ff
              816c 00c9  ld   $c9
              816d 00df  ld   $df
              816e 00f0  ld   $f0
              816f 0012  ld   $12
              8170 00e8  ld   $e8
              8171 0010  ld   $10
              8172 0012  ld   $12
              8173 00a9  ld   $a9
              8174 00dc  ld   $dc
              8175 0020  ld   $20
              8176 00ef  ld   $ef
              8177 00ff  ld   $ff
              8178 0020  ld   $20
              8179 00bb  ld   $bb
              817a 000e  ld   $0e
              817b 00a9  ld   $a9
              817c 00a1  ld   $a1
              817d 0020  ld   $20
              817e 00ef  ld   $ef
              817f 00ff  ld   $ff
              8180 00a2  ld   $a2
              8181 0001  ld   $01
              8182 00ca  ld   $ca
              8183 0030  ld   $30
              8184 00f3  ld   $f3
              8185 002c  ld   $2c
              8186 0011  ld   $11
              8187 00d0  ld   $d0
              8188 0010  ld   $10
              8189 00fb  ld   $fb
              818a 00ad  ld   $ad
              818b 0010  ld   $10
              818c 00d0  ld   $d0
              818d 009d  ld   $9d
              818e 0000  ld   $00
              818f 0002  ld   $02
              8190 00c9  ld   $c9
              8191 008d  ld   $8d
              8192 00d0  ld   $d0
              8193 00d1  ld   $d1
              8194 0060  ld   $60
              8195 00b9  ld   $b9
              8196 0000  ld   $00
              8197 0002  ld   $02
              8198 00c8  ld   $c8
              8199 00c9  ld   $c9
              819a 00a0  ld   $a0
              819b 00f0  ld   $f0
              819c 00f8  ld   $f8
              819d 0060  ld   $60
              819e 00a9  ld   $a9
              819f 008d  ld   $8d
              81a0 004c  ld   $4c
              81a1 00ef  ld   $ef
              81a2 00ff  ld   $ff
              81a3 00a2  ld   $a2
              81a4 0000  ld   $00
              81a5 0086  ld   $86
              81a6 0048  ld   $48
              81a7 0086  ld   $86
              81a8 0049  ld   $49
              81a9 00f0  ld   $f0
              81aa 0015  ld   $15
              81ab 00a2  ld   $a2
              81ac 0003  ld   $03
              81ad 000a  ld   $0a
              81ae 000a  ld   $0a
              81af 000a  ld   $0a
              * 5 times
              81b2 0026  ld   $26
              81b3 0048  ld   $48
              81b4 0026  ld   $26
              81b5 0049  ld   $49
              81b6 00ca  ld   $ca
              81b7 0010  ld   $10
              81b8 00f8  ld   $f8
              81b9 00b5  ld   $b5
              81ba 0049  ld   $49
              81bb 0095  ld   $95
              81bc 0047  ld   $47
              81bd 00e8  ld   $e8
              81be 00f0  ld   $f0
              81bf 00f9  ld   $f9
              81c0 00b9  ld   $b9
              81c1 0000  ld   $00
              81c2 0002  ld   $02
              81c3 00c8  ld   $c8
              81c4 0049  ld   $49
              81c5 00b0  ld   $b0
              81c6 00c9  ld   $c9
              81c7 000a  ld   $0a
              81c8 0090  ld   $90
              81c9 00e1  ld   $e1
              81ca 0069  ld   $69
              81cb 0088  ld   $88
              81cc 00c9  ld   $c9
              81cd 00fa  ld   $fa
              81ce 00b0  ld   $b0
              81cf 00db  ld   $db
              81d0 0060  ld   $60
              81d1 004c  ld   $4c
              81d2 00e9  ld   $e9
              81d3 000b  ld   $0b
              81d4 00a5  ld   $a5
              81d5 0041  ld   $41
              81d6 0038  ld   $38
              81d7 00a4  ld   $a4
              81d8 0045  ld   $45
              81d9 00aa  ld   $aa
              81da 0010  ld   $10
              81db 0001  ld   $01
              81dc 0088  ld   $88
              81dd 0065  ld   $65
              81de 0044  ld   $44
              81df 0090  ld   $90
              81e0 0001  ld   $01
              81e1 00c8  ld   $c8
              81e2 0060  ld   $60
              81e3 000f  ld   $0f
              81e4 0000  ld   $00
              81e5 00de  ld   $de
              81e6 0040  ld   $40
              81e7 0002  ld   $02
              81e8 0045  ld   $45
              81e9 0003  ld   $03
              81ea 00d0  ld   $d0
              81eb 0008  ld   $08
              81ec 0040  ld   $40
              81ed 0009  ld   $09
              81ee 0030  ld   $30
              81ef 0022  ld   $22
              81f0 0045  ld   $45
              81f1 0033  ld   $33
              81f2 00d0  ld   $d0
              81f3 0008  ld   $08
              81f4 0040  ld   $40
              81f5 0009  ld   $09
              81f6 0040  ld   $40
              81f7 0002  ld   $02
              81f8 0045  ld   $45
              81f9 0033  ld   $33
              81fa 00d0  ld   $d0
              81fb fe00  bra  ac          ;+-----------------------------------+
              81fc fcfd  bra  $81fd       ;|                                   |
              81fd 1418  ld   $18,y       ;| Trampoline for page $8100 lookups |
              81fe e006  jmp  y,$06       ;|                                   |
              81ff c218  st   [$18]       ;+-----------------------------------+
              8200 0008  ld   $08
              8201 0040  ld   $40
              8202 0009  ld   $09
              8203 0040  ld   $40
              8204 0002  ld   $02
              8205 0045  ld   $45
              8206 00b3  ld   $b3
              8207 00d0  ld   $d0
              8208 0008  ld   $08
              8209 0040  ld   $40
              820a 0009  ld   $09
              820b 0000  ld   $00
              820c 0022  ld   $22
              820d 0044  ld   $44
              820e 0033  ld   $33
              820f 00d0  ld   $d0
              8210 008c  ld   $8c
              8211 0044  ld   $44
              8212 0000  ld   $00
              8213 0011  ld   $11
              8214 0022  ld   $22
              8215 0044  ld   $44
              8216 0033  ld   $33
              8217 00d0  ld   $d0
              8218 008c  ld   $8c
              8219 0044  ld   $44
              821a 009a  ld   $9a
              821b 0010  ld   $10
              821c 0022  ld   $22
              821d 0044  ld   $44
              821e 0033  ld   $33
              821f 00d0  ld   $d0
              8220 0008  ld   $08
              8221 0040  ld   $40
              8222 0009  ld   $09
              8223 0010  ld   $10
              8224 0022  ld   $22
              8225 0044  ld   $44
              8226 0033  ld   $33
              8227 00d0  ld   $d0
              8228 0008  ld   $08
              8229 0040  ld   $40
              822a 0009  ld   $09
              822b 0062  ld   $62
              822c 0013  ld   $13
              822d 0078  ld   $78
              822e 00a9  ld   $a9
              822f 0000  ld   $00
              8230 0021  ld   $21
              8231 0081  ld   $81
              8232 0082  ld   $82
              8233 0000  ld   $00
              8234 0000  ld   $00
              8235 0059  ld   $59
              8236 004d  ld   $4d
              8237 0091  ld   $91
              8238 0092  ld   $92
              8239 0086  ld   $86
              823a 004a  ld   $4a
              823b 0085  ld   $85
              823c 009d  ld   $9d
              823d 00ac  ld   $ac
              823e 00a9  ld   $a9
              823f 00ac  ld   $ac
              8240 00a3  ld   $a3
              8241 00a8  ld   $a8
              8242 00a4  ld   $a4
              8243 00d9  ld   $d9
              8244 0000  ld   $00
              8245 00d8  ld   $d8
              8246 00a4  ld   $a4
              8247 00a4  ld   $a4
              8248 0000  ld   $00
              8249 001c  ld   $1c
              824a 008a  ld   $8a
              824b 001c  ld   $1c
              824c 0023  ld   $23
              824d 005d  ld   $5d
              824e 008b  ld   $8b
              824f 001b  ld   $1b
              8250 00a1  ld   $a1
              8251 009d  ld   $9d
              8252 008a  ld   $8a
              8253 001d  ld   $1d
              8254 0023  ld   $23
              8255 009d  ld   $9d
              8256 008b  ld   $8b
              8257 001d  ld   $1d
              8258 00a1  ld   $a1
              8259 0000  ld   $00
              825a 0029  ld   $29
              825b 0019  ld   $19
              825c 00ae  ld   $ae
              825d 0069  ld   $69
              825e 00a8  ld   $a8
              825f 0019  ld   $19
              8260 0023  ld   $23
              8261 0024  ld   $24
              8262 0053  ld   $53
              8263 001b  ld   $1b
              8264 0023  ld   $23
              8265 0024  ld   $24
              8266 0053  ld   $53
              8267 0019  ld   $19
              8268 00a1  ld   $a1
              8269 0000  ld   $00
              826a 001a  ld   $1a
              826b 005b  ld   $5b
              826c 005b  ld   $5b
              826d 00a5  ld   $a5
              826e 0069  ld   $69
              826f 0024  ld   $24
              8270 0024  ld   $24
              8271 00ae  ld   $ae
              8272 00ae  ld   $ae
              8273 00a8  ld   $a8
              8274 00ad  ld   $ad
              8275 0029  ld   $29
              8276 0000  ld   $00
              8277 007c  ld   $7c
              8278 0000  ld   $00
              8279 0015  ld   $15
              827a 009c  ld   $9c
              827b 006d  ld   $6d
              827c 009c  ld   $9c
              827d 00a5  ld   $a5
              827e 0069  ld   $69
              827f 0029  ld   $29
              8280 0053  ld   $53
              8281 0084  ld   $84
              8282 0013  ld   $13
              8283 0034  ld   $34
              8284 0011  ld   $11
              8285 00a5  ld   $a5
              8286 0069  ld   $69
              8287 0023  ld   $23
              8288 00a0  ld   $a0
              8289 00d8  ld   $d8
              828a 0062  ld   $62
              828b 005a  ld   $5a
              828c 0048  ld   $48
              828d 0026  ld   $26
              828e 0062  ld   $62
              828f 0094  ld   $94
              8290 0088  ld   $88
              8291 0054  ld   $54
              8292 0044  ld   $44
              8293 00c8  ld   $c8
              8294 0054  ld   $54
              8295 0068  ld   $68
              8296 0044  ld   $44
              8297 00e8  ld   $e8
              8298 0094  ld   $94
              8299 0000  ld   $00
              829a 00b4  ld   $b4
              829b 0008  ld   $08
              829c 0084  ld   $84
              829d 0074  ld   $74
              829e 00b4  ld   $b4
              829f 0028  ld   $28
              82a0 006e  ld   $6e
              82a1 0074  ld   $74
              82a2 00f4  ld   $f4
              82a3 00cc  ld   $cc
              82a4 004a  ld   $4a
              82a5 0072  ld   $72
              82a6 00f2  ld   $f2
              82a7 00a4  ld   $a4
              82a8 008a  ld   $8a
              82a9 0000  ld   $00
              82aa 00aa  ld   $aa
              82ab 00a2  ld   $a2
              82ac 00a2  ld   $a2
              82ad 0074  ld   $74
              82ae 0074  ld   $74
              82af 0074  ld   $74
              82b0 0072  ld   $72
              82b1 0044  ld   $44
              82b2 0068  ld   $68
              82b3 00b2  ld   $b2
              82b4 0032  ld   $32
              82b5 00b2  ld   $b2
              82b6 0000  ld   $00
              82b7 0022  ld   $22
              82b8 0026  ld   $26
              82b9 001a  ld   $1a
              82ba 001a  ld   $1a
              82bb 0026  ld   $26
              82bc 0026  ld   $26
              82bd 0072  ld   $72
              82be 0072  ld   $72
              82bf 0088  ld   $88
              82c0 00c8  ld   $c8
              82c1 00c4  ld   $c4
              82c2 00ca  ld   $ca
              82c3 0026  ld   $26
              82c4 0048  ld   $48
              82c5 0044  ld   $44
              82c6 0044  ld   $44
              82c7 00a2  ld   $a2
              82c8 00c8  ld   $c8
              82c9 005e  ld   $5e
              82ca 0000  ld   $00
              82cb 00e3  ld   $e3
              82cc 0075  ld   $75
              82cd 002b  ld   $2b
              82ce 003e  ld   $3e
              82cf 001a  ld   $1a
              82d0 003d  ld   $3d
              82d1 00fc  ld   $fc
              82d2 000f  ld   $0f
              82d3 0082  ld   $82
              82d4 00ff  ld   $ff
              82d5 0035  ld   $35
              82d6 003f  ld   $3f
              82d7 003b  ld   $3b
              82d8 0011  ld   $11
              82d9 0010  ld   $10
              82da 00d0  ld   $d0
              82db 002b  ld   $2b
              82dc 0030  ld   $30
              82dd 001a  ld   $1a
              82de 000f  ld   $0f
              82df 005e  ld   $5e
              82e0 003d  ld   $3d
              82e1 008c  ld   $8c
              82e2 00ff  ld   $ff
              82e3 0035  ld   $35
              82e4 003f  ld   $3f
              82e5 003b  ld   $3b
              82e6 008c  ld   $8c
              82e7 00ff  ld   $ff
              82e8 00e6  ld   $e6
              82e9 0060  ld   $60
              82ea 0035  ld   $35
              82eb 0050  ld   $50
              82ec 0021  ld   $21
              82ed 00e6  ld   $e6
              82ee 0020  ld   $20
              82ef 00e3  ld   $e3
              82f0 0060  ld   $60
              82f1 008c  ld   $8c
              82f2 000a  ld   $0a
              82f3 0035  ld   $35
              82f4 0072  ld   $72
              82f5 002a  ld   $2a
              82f6 0059  ld   $59
              82f7 0007  ld   $07
              82f8 008c  ld   $8c
              82f9 000a  ld   $0a
              82fa 008c  ld   $8c
              82fb fe00  bra  ac          ;+-----------------------------------+
              82fc fcfd  bra  $82fd       ;|                                   |
              82fd 1418  ld   $18,y       ;| Trampoline for page $8200 lookups |
              82fe e006  jmp  y,$06       ;|                                   |
              82ff c218  st   [$18]       ;+-----------------------------------+
              8300 001a  ld   $1a
              8301 0035  ld   $35
              8302 0072  ld   $72
              8303 0033  ld   $33
              8304 00ec  ld   $ec
              8305 0000  ld   $00
              8306 008c  ld   $8c
              8307 001a  ld   $1a
              8308 0082  ld   $82
              8309 007f  ld   $7f
              830a 00e6  ld   $e6
              830b 0080  ld   $80
              830c 00f3  ld   $f3
              830d 0030  ld   $30
              830e 0011  ld   $11
              830f 0012  ld   $12
              8310 00d0  ld   $d0
              8311 002b  ld   $2b
              8312 0030  ld   $30
              8313 00ad  ld   $ad
              8314 0035  ld   $35
              8315 003f  ld   $3f
              8316 0075  ld   $75
              8317 005e  ld   $5e
              8318 003c  ld   $3c
              8319 0088  ld   $88
              831a 0080  ld   $80
              831b 0085  ld   $85
              831c 000f  ld   $0f
              831d 005f  ld   $5f
              831e 001a  ld   $1a
              831f 001c  ld   $1c
              8320 00e3  ld   $e3
              8321 0002  ld   $02
              8322 00f6  ld   $f6
              8323 00e3  ld   $e3
              8324 0042  ld   $42
              8325 0035  ld   $35
              8326 0072  ld   $72
              8327 005b  ld   $5b
              8328 0021  ld   $21
              8329 007a  ld   $7a
              832a 00e6  ld   $e6
              832b 0002  ld   $02
              832c 002b  ld   $2b
              832d 007a  ld   $7a
              832e 0059  ld   $59
              832f 0000  ld   $00
              8330 00f0  ld   $f0
              8331 0030  ld   $30
              8332 0011  ld   $11
              8333 0010  ld   $10
              8334 00d0  ld   $d0
              8335 002b  ld   $2b
              8336 0030  ld   $30
              8337 00ad  ld   $ad
              8338 0035  ld   $35
              8339 003f  ld   $3f
              833a 006c  ld   $6c
              833b 00fc  ld   $fc
              833c 003c  ld   $3c
              833d 0082  ld   $82
              833e 007f  ld   $7f
              833f 0035  ld   $35
              8340 0072  ld   $72
              8341 0071  ld   $71
              8342 00f3  ld   $f3
              8343 0030  ld   $30
              8344 0059  ld   $59
              8345 001f  ld   $1f
              8346 005e  ld   $5e
              8347 003c  ld   $3c
              8348 001a  ld   $1a
              8349 003c  ld   $3c
              834a 00e6  ld   $e6
              834b 0001  ld   $01
              834c 0035  ld   $35
              834d 0053  ld   $53
              834e 0089  ld   $89
              834f 0059  ld   $59
              8350 00a0  ld   $a0
              8351 0085  ld   $85
              8352 000f  ld   $0f
              8353 005f  ld   $5f
              8354 0021  ld   $21
              8355 007a  ld   $7a
              8356 00e6  ld   $e6
              8357 0006  ld   $06
              8358 002b  ld   $2b
              8359 007a  ld   $7a
              835a 0059  ld   $59
              835b 001e  ld   $1e
              835c 005e  ld   $5e
              835d 003c  ld   $3c
              835e 008c  ld   $8c
              835f 0014  ld   $14
              8360 0035  ld   $35
              8361 0072  ld   $72
              8362 009b  ld   $9b
              8363 0059  ld   $59
              8364 00c0  ld   $c0
              8365 0085  ld   $85
              8366 000f  ld   $0f
              8367 005f  ld   $5f
              8368 0021  ld   $21
              8369 007a  ld   $7a
              836a 00e6  ld   $e6
              836b 0006  ld   $06
              836c 002b  ld   $2b
              836d 007a  ld   $7a
              836e 0011  ld   $11
              836f 0007  ld   $07
              8370 005f  ld   $5f
              8371 002b  ld   $2b
              8372 0030  ld   $30
              8373 0063  ld   $63
              8374 0059  ld   $59
              8375 00ff  ld   $ff
              8376 005e  ld   $5e
              8377 000e  ld   $0e
              8378 0011  ld   $11
              8379 0000  ld   $00
              837a 0004  ld   $04
              837b 007f  ld   $7f
              837c 003e  ld   $3e
              837d 0018  ld   $18
              837e 00a2  ld   $a2
              837f 0000  ld   $00
              8380 00a0  ld   $a0
              8381 000c  ld   $0c
              8382 00b9  ld   $b9
              8383 00ce  ld   $ce
              8384 005e  ld   $5e
              8385 0084  ld   $84
              8386 003a  ld   $3a
              8387 00a0  ld   $a0
              8388 0007  ld   $07
              8389 009d  ld   $9d
              838a 0000  ld   $00
              838b 0001  ld   $01
              838c 0069  ld   $69
              838d 0001  ld   $01
              838e 00e8  ld   $e8
              838f 00e8  ld   $e8
              8390 0088  ld   $88
              8391 00d0  ld   $d0
              8392 00f6  ld   $f6
              8393 00e8  ld   $e8
              8394 00e8  ld   $e8
              8395 00e8  ld   $e8
              8396 00e8  ld   $e8
              8397 00a4  ld   $a4
              8398 003a  ld   $3a
              8399 0088  ld   $88
              839a 0010  ld   $10
              839b 00e6  ld   $e6
              839c 004c  ld   $4c
              839d 0005  ld   $05
              839e 00c1  ld   $c1
              839f 0077  ld   $77
              83a0 0070  ld   $70
              83a1 0056  ld   $56
              83a2 004f  ld   $4f
              83a3 0048  ld   $48
              83a4 0041  ld   $41
              83a5 003a  ld   $3a
              83a6 0033  ld   $33
              83a7 002c  ld   $2c
              83a8 0025  ld   $25
              83a9 001e  ld   $1e
              83aa 0017  ld   $17
              83ab 0010  ld   $10
              83ac 00d8  ld   $d8
              83ad 0058  ld   $58
              83ae 00a2  ld   $a2
              83af 00f7  ld   $f7
              83b0 009a  ld   $9a
              83b1 004c  ld   $4c
              83b2 001a  ld   $1a
              83b3 00ff  ld   $ff
              83b4 005f  ld   $5f
              83b5 0000  ld   $00
              83b6 0000  ld   $00
              83b7 002b  ld   $2b
              83b8 001a  ld   $1a
              83b9 0011  ld   $11
              83ba 000c  ld   $0c
              83bb 000b  ld   $0b
              83bc 002b  ld   $2b
              83bd 0022  ld   $22
              83be 00b4  ld   $b4
              83bf 00e6  ld   $e6
              83c0 0011  ld   $11
              83c1 00fe  ld   $fe
              83c2 00ff  ld   $ff
              83c3 00f6  ld   $f6
              83c4 0090  ld   $90
              83c5 00fe  ld   $fe
              83c6 002b  ld   $2b
              83c7 007c  ld   $7c
              83c8 00df  ld   $df
              83c9 00fa  ld   $fa
              83ca 0021  ld   $21
              83cb 0024  ld   $24
              83cc 00ec  ld   $ec
              83cd 0000  ld   $00
              83ce 0021  ld   $21
              83cf 0026  ld   $26
              83d0 00ec  ld   $ec
              83d1 0002  ld   $02
              83d2 0021  ld   $21
              83d3 0028  ld   $28
              83d4 00ec  ld   $ec
              83d5 0004  ld   $04
              83d6 0011  ld   $11
              83d7 00e1  ld   $e1
              83d8 0004  ld   $04
              83d9 002b  ld   $2b
              83da 0022  ld   $22
              83db 0011  ld   $11
              83dc 0000  ld   $00
              83dd 003f  ld   $3f
              83de 002b  ld   $2b
              83df 0024  ld   $24
              83e0 005e  ld   $5e
              83e1 0026  ld   $26
              83e2 0021  ld   $21
              83e3 007c  ld   $7c
              83e4 005e  ld   $5e
              83e5 0027  ld   $27
              83e6 008c  ld   $8c
              83e7 008d  ld   $8d
              83e8 0035  ld   $35
              83e9 003f  ld   $3f
              83ea 003b  ld   $3b
              83eb 001a  ld   $1a
              83ec 007a  ld   $7a
              83ed 00e6  ld   $e6
              83ee 00fb  ld   $fb
              83ef 0035  ld   $35
              83f0 0056  ld   $56
              83f1 003b  ld   $3b
              83f2 0059  ld   $59
              83f3 0000  ld   $00
              83f4 0035  ld   $35
              83f5 0072  ld   $72
              83f6 0096  ld   $96
              83f7 0021  ld   $21
              83f8 007a  ld   $7a
              83f9 002b  ld   $2b
              83fa 0028  ld   $28
              83fb fe00  bra  ac          ;+-----------------------------------+
              83fc fcfd  bra  $83fd       ;|                                   |
              83fd 1418  ld   $18,y       ;| Trampoline for page $8300 lookups |
              83fe e006  jmp  y,$06       ;|                                   |
              83ff c218  st   [$18]       ;+-----------------------------------+
              8400 0082  ld   $82
              8401 00ff  ld   $ff
              8402 00e6  ld   $e6
              8403 00fb  ld   $fb
              8404 0035  ld   $35
              8405 004d  ld   $4d
              8406 004c  ld   $4c
              8407 0011  ld   $11
              8408 00fb  ld   $fb
              8409 00ff  ld   $ff
              840a 00b4  ld   $b4
              840b 00cb  ld   $cb
              840c 0093  ld   $93
              840d 0028  ld   $28
              840e 00e3  ld   $e3
              840f 0001  ld   $01
              8410 0035  ld   $35
              8411 0050  ld   $50
              8412 004c  ld   $4c
              8413 0059  ld   $59
              8414 0061  ld   $61
              8415 005e  ld   $5e
              8416 007a  ld   $7a
              8417 00e3  ld   $e3
              8418 009f  ld   $9f
              8419 002b  ld   $2b
              841a 007c  ld   $7c
              841b 00ad  ld   $ad
              841c 005e  ld   $5e
              841d 007b  ld   $7b
              841e 0021  ld   $21
              841f 007a  ld   $7a
              8420 00e6  ld   $e6
              8421 0002  ld   $02
              8422 002b  ld   $2b
              8423 0028  ld   $28
              8424 0011  ld   $11
              8425 0000  ld   $00
              8426 0007  ld   $07
              8427 0099  ld   $99
              8428 0028  ld   $28
              8429 00ad  ld   $ad
              842a 0082  ld   $82
              842b 0001  ld   $01
              842c 005e  ld   $5e
              842d 0026  ld   $26
              842e 00b4  ld   $b4
              842f 00cb  ld   $cb
              8430 0093  ld   $93
              8431 0028  ld   $28
              8432 001a  ld   $1a
              8433 0028  ld   $28
              8434 0035  ld   $35
              8435 0072  ld   $72
              8436 0066  ld   $66
              8437 0021  ld   $21
              8438 007c  ld   $7c
              8439 00e3  ld   $e3
              843a 0012  ld   $12
              843b 002b  ld   $2b
              843c 007e  ld   $7e
              843d 00ad  ld   $ad
              843e 005e  ld   $5e
              843f 0026  ld   $26
              8440 0021  ld   $21
              8441 007c  ld   $7c
              8442 00ad  ld   $ad
              8443 00f0  ld   $f0
              8444 007e  ld   $7e
              8445 001a  ld   $1a
              8446 0026  ld   $26
              8447 00f0  ld   $f0
              8448 007c  ld   $7c
              8449 0093  ld   $93
              844a 007c  ld   $7c
              844b 0093  ld   $93
              844c 007c  ld   $7c
              844d 001a  ld   $1a
              844e 007c  ld   $7c
              844f 008c  ld   $8c
              8450 00d8  ld   $d8
              8451 0035  ld   $35
              8452 0072  ld   $72
              8453 0079  ld   $79
              8454 001a  ld   $1a
              8455 0027  ld   $27
              8456 00e6  ld   $e6
              8457 00a0  ld   $a0
              8458 0035  ld   $35
              8459 0050  ld   $50
              845a 00ef  ld   $ef
              845b 00e6  ld   $e6
              845c 0040  ld   $40
              845d 0035  ld   $35
              845e 0050  ld   $50
              845f 00a4  ld   $a4
              8460 00e6  ld   $e6
              8461 0020  ld   $20
              8462 00e3  ld   $e3
              8463 000e  ld   $0e
              8464 0035  ld   $35
              8465 0053  ld   $53
              8466 00b2  ld   $b2
              8467 00e3  ld   $e3
              8468 0032  ld   $32
              8469 002b  ld   $2b
              846a 007c  ld   $7c
              846b 0011  ld   $11
              846c 0000  ld   $00
              846d 0007  ld   $07
              846e 0090  ld   $90
              846f 00b7  ld   $b7
              8470 002b  ld   $2b
              8471 007c  ld   $7c
              8472 0011  ld   $11
              8473 0000  ld   $00
              8474 0008  ld   $08
              8475 002b  ld   $2b
              8476 007e  ld   $7e
              8477 0021  ld   $21
              8478 007c  ld   $7c
              8479 00e9  ld   $e9
              847a 00e9  ld   $e9
              847b 0099  ld   $99
              847c 007c  ld   $7c
              847d 0099  ld   $99
              847e 007e  ld   $7e
              847f 002b  ld   $2b
              8480 007e  ld   $7e
              8481 0021  ld   $21
              8482 007a  ld   $7a
              8483 002b  ld   $2b
              8484 0028  ld   $28
              8485 00e3  ld   $e3
              8486 0006  ld   $06
              8487 002b  ld   $2b
              8488 007a  ld   $7a
              8489 0059  ld   $59
              848a 0005  ld   $05
              848b 002b  ld   $2b
              848c 007c  ld   $7c
              848d 0021  ld   $21
              848e 007e  ld   $7e
              848f 007f  ld   $7f
              8490 0000  ld   $00
              8491 0082  ld   $82
              8492 00fe  ld   $fe
              8493 005e  ld   $5e
              8494 0026  ld   $26
              8495 0011  ld   $11
              8496 0000  ld   $00
              8497 0007  ld   $07
              8498 0099  ld   $99
              8499 0028  ld   $28
              849a 00ad  ld   $ad
              849b 0035  ld   $35
              849c 003f  ld   $3f
              849d 00e2  ld   $e2
              849e 0093  ld   $93
              849f 0026  ld   $26
              84a0 00b4  ld   $b4
              84a1 00cb  ld   $cb
              84a2 0093  ld   $93
              84a3 007e  ld   $7e
              84a4 0093  ld   $93
              84a5 0028  ld   $28
              84a6 0021  ld   $21
              84a7 007c  ld   $7c
              84a8 00e6  ld   $e6
              84a9 0001  ld   $01
              84aa 0035  ld   $35
              84ab 004d  ld   $4d
              84ac 00cd  ld   $cd
              84ad 00ee  ld   $ee
              84ae 0000  ld   $00
              84af 002b  ld   $2b
              84b0 0024  ld   $24
              84b1 00ee  ld   $ee
              84b2 0002  ld   $02
              84b3 002b  ld   $2b
              84b4 0026  ld   $26
              84b5 00ee  ld   $ee
              84b6 0004  ld   $04
              84b7 002b  ld   $2b
              84b8 0028  ld   $28
              84b9 00df  ld   $df
              84ba 0006  ld   $06
              84bb 00ff  ld   $ff
              84bc 00c1  ld   $c1
              84bd 0000  ld   $00
              84be 0058  ld   $58
              84bf 00a9  ld   $a9
              84c0 00aa  ld   $aa
              84c1 0020  ld   $20
              84c2 00ef  ld   $ef
              84c3 00ff  ld   $ff
              84c4 00ae  ld   $ae
              84c5 0000  ld   $00
              84c6 00c2  ld   $c2
              84c7 00bd  ld   $bd
              84c8 0000  ld   $00
              84c9 00c2  ld   $c2
              84ca 0020  ld   $20
              84cb 00ef  ld   $ef
              84cc 00ff  ld   $ff
              84cd 00ca  ld   $ca
              84ce 00d0  ld   $d0
              84cf 00f7  ld   $f7
              84d0 00ae  ld   $ae
              84d1 0025  ld   $25
              84d2 00c1  ld   $c1
              84d3 00bd  ld   $bd
              84d4 0025  ld   $25
              84d5 00c1  ld   $c1
              84d6 0020  ld   $20
              84d7 00ef  ld   $ef
              84d8 00ff  ld   $ff
              84d9 00ca  ld   $ca
              84da 00d0  ld   $d0
              84db 00f7  ld   $f7
              84dc 002c  ld   $2c
              84dd 0012  ld   $12
              84de 00d0  ld   $d0
              84df 0030  ld   $30
              84e0 00fb  ld   $fb
              84e1 004c  ld   $4c
              84e2 0000  ld   $00
              84e3 00ff  ld   $ff
              84e4 0032  ld   $32
              84e5 008d  ld   $8d
              84e6 00ce  ld   $ce
              84e7 00cf  ld   $cf
              84e8 00cd  ld   $cd
              84e9 00da  ld   $da
              84ea 00cf  ld   $cf
              84eb 00d7  ld   $d7
              84ec 00a0  ld   $a0
              84ed 00da  ld   $da
              84ee 00ad  ld   $ad
              84ef 00cc  ld   $cc
              84f0 00d4  ld   $d4
              84f1 00c3  ld   $c3
              84f2 008d  ld   $8d
              84f3 00d4  ld   $d4
              84f4 00d2  ld   $d2
              84f5 00c1  ld   $c1
              84f6 00d4  ld   $d4
              84f7 00d3  ld   $d3
              84f8 00a0  ld   $a0
              84f9 00cd  ld   $cd
              84fa 00d2  ld   $d2
              84fb fe00  bra  ac          ;+-----------------------------------+
              84fc fcfd  bra  $84fd       ;|                                   |
              84fd 1418  ld   $18,y       ;| Trampoline for page $8400 lookups |
              84fe e006  jmp  y,$06       ;|                                   |
              84ff c218  st   [$18]       ;+-----------------------------------+
              8500 00c1  ld   $c1
              8501 00d7  ld   $d7
              8502 00a0  ld   $a0
              8503 00c3  ld   $c3
              8504 00c9  ld   $c9
              8505 00d3  ld   $d3
              8506 00c1  ld   $c1
              8507 00c2  ld   $c2
              8508 00a0  ld   $a0
              8509 00d2  ld   $d2
              850a 00b3  ld   $b3
              850b 00c2  ld   $c2
              850c 00b2  ld   $b2
              850d 00c5  ld   $c5
              850e 008d  ld   $8d
              850f 00c3  ld   $c3
              8510 00c9  ld   $c9
              8511 00d3  ld   $d3
              8512 00c1  ld   $c1
              8513 00c2  ld   $c2
              8514 00a0  ld   $a0
              8515 00d2  ld   $d2
              8516 00c5  ld   $c5
              8517 00c7  ld   $c7
              8518 00c5  ld   $c5
              8519 00d4  ld   $d4
              851a 00ce  ld   $ce
              851b 00c9  ld   $c9
              851c 00c2  ld   $c2
              851d 0000  ld   $00
              851e 005b  ld   $5b
              851f 005a  ld   $5a
              8520 00a0  ld   $a0
              8521 00d2  ld   $d2
              8522 00b0  ld   $b0
              8523 00b0  ld   $b0
              8524 00b0  ld   $b0
              8525 00c5  ld   $c5
              8526 008d  ld   $8d
              8527 00d5  ld   $d5
              8528 00ce  ld   $ce
              8529 00c5  ld   $c5
              852a 00cd  ld   $cd
              852b 00a0  ld   $a0
              852c 00d2  ld   $d2
              852d 00b0  ld   $b0
              852e 00b0  ld   $b0
              852f 00b1  ld   $b1
              8530 00c3  ld   $c3
              8531 008d  ld   $8d
              8532 00d2  ld   $d2
              8533 00c5  ld   $c5
              8534 00cc  ld   $cc
              8535 00c2  ld   $c2
              8536 00cd  ld   $cd
              8537 00c5  ld   $c5
              8538 00d3  ld   $d3
              8539 00d3  ld   $d3
              853a 00c1  ld   $c1
              853b 00ad  ld   $ad
              853c 00c9  ld   $c9
              853d 00ce  ld   $ce
              853e 00c9  ld   $c9
              853f 00cd  ld   $cd
              8540 00a0  ld   $a0
              8541 00a0  ld   $a0
              8542 00d2  ld   $d2
              8543 00c5  ld   $c5
              8544 00c5  ld   $c5
              8545 00c5  ld   $c5
              8546 008d  ld   $8d
              8547 00c5  ld   $c5
              8548 00cc  ld   $cc
              8549 00da  ld   $da
              854a 00da  ld   $da
              854b 00d5  ld   $d5
              854c 00d0  ld   $d0
              854d 00ad  ld   $ad
              854e 00b5  ld   $b5
              854f 00b1  ld   $b1
              8550 00a0  ld   $a0
              8551 00a0  ld   $a0
              8552 00d2  ld   $d2
              8553 00b0  ld   $b0
              8554 00b0  ld   $b0
              8555 00b4  ld   $b4
              8556 008d  ld   $8d
              8557 00c4  ld   $c4
              8558 00ce  ld   $ce
              8559 00c9  ld   $c9
              855a 00cd  ld   $cd
              855b 00d2  ld   $d2
              855c 00c5  ld   $c5
              855d 00d4  ld   $d4
              855e 00d3  ld   $d3
              855f 00c1  ld   $c1
              8560 00cd  ld   $cd
              8561 00a0  ld   $a0
              8562 00a0  ld   $a0
              8563 00d2  ld   $d2
              8564 00b0  ld   $b0
              8565 00b0  ld   $b0
              8566 00b3  ld   $b3
              8567 008d  ld   $8d
              8568 008d  ld   $8d
              8569 00cc  ld   $cc
              856a 00d4  ld   $d4
              856b 00d4  ld   $d4
              856c 00a0  ld   $a0
              856d 00ce  ld   $ce
              856e 00cf  ld   $cf
              856f 00a0  ld   $a0
              8570 00b1  ld   $b1
              8571 00ad  ld   $ad
              8572 00c5  ld   $c5
              8573 00cc  ld   $cc
              8574 00d0  ld   $d0
              8575 00d0  ld   $d0
              8576 00c1  ld   $c1
              8577 008d  ld   $8d
              8578 008d  ld   $8d
              8579 008d  ld   $8d
              857a 00d0  ld   $d0
              857b 0010  ld   $10
              857c 0004  ld   $04
              857d 0000  ld   $00
              857e 0000  ld   $00
              857f 0000  ld   $00
              8580 0000  ld   $00
              8581 00e0  ld   $e0
              8582 0000  ld   $00
              8583 0000  ld   $00
              8584 004c  ld   $4c
              8585 00b0  ld   $b0
              8586 00e2  ld   $e2
              8587 00ad  ld   $ad
              8588 0011  ld   $11
              8589 00d0  ld   $d0
              858a 0010  ld   $10
              858b 00fb  ld   $fb
              858c 00ad  ld   $ad
              858d 0010  ld   $10
              858e 00d0  ld   $d0
              858f 0060  ld   $60
              8590 008a  ld   $8a
              8591 0029  ld   $29
              8592 0020  ld   $20
              8593 00f0  ld   $f0
              8594 0023  ld   $23
              8595 00a9  ld   $a9
              8596 00a0  ld   $a0
              8597 0085  ld   $85
              8598 0044  ld   $44
              8599 004c  ld   $4c
              859a 00c9  ld   $c9
              859b 00e3  ld   $e3
              859c 00a9  ld   $a9
              859d 0020  ld   $20
              859e 00c5  ld   $c5
              859f 0081  ld   $81
              85a0 00b0  ld   $b0
              85a1 000c  ld   $0c
              85a2 00a9  ld   $a9
              85a3 008d  ld   $8d
              85a4 00a0  ld   $a0
              85a5 0007  ld   $07
              85a6 0020  ld   $20
              85a7 00c9  ld   $c9
              85a8 00e3  ld   $e3
              85a9 00a9  ld   $a9
              85aa 00a0  ld   $a0
              85ab 0088  ld   $88
              85ac 00d0  ld   $d0
              85ad 00f8  ld   $f8
              85ae 00a0  ld   $a0
              85af 0000  ld   $00
              85b0 00b1  ld   $b1
              85b1 0042  ld   $42
              85b2 00e6  ld   $e6
              85b3 0042  ld   $42
              85b4 00d0  ld   $d0
              85b5 0002  ld   $02
              85b6 00e6  ld   $e6
              85b7 0043  ld   $43
              85b8 0060  ld   $60
              85b9 0020  ld   $20
              85ba 0015  ld   $15
              85bb 00e7  ld   $e7
              85bc 0020  ld   $20
              85bd 0076  ld   $76
              85be 00e5  ld   $e5
              85bf 00a5  ld   $a5
              85c0 0042  ld   $42
              85c1 00c5  ld   $c5
              85c2 0046  ld   $46
              85c3 00a5  ld   $a5
              85c4 0043  ld   $43
              85c5 00e5  ld   $e5
              85c6 0047  ld   $47
              85c7 00b0  ld   $b0
              85c8 00ef  ld   $ef
              85c9 0020  ld   $20
              85ca 006d  ld   $6d
              85cb 00e0  ld   $e0
              85cc 004c  ld   $4c
              85cd 003b  ld   $3b
              85ce 00e0  ld   $e0
              85cf 00a5  ld   $a5
              85d0 00ca  ld   $ca
              85d1 0085  ld   $85
              85d2 0042  ld   $42
              85d3 00a5  ld   $a5
              85d4 00cb  ld   $cb
              85d5 0085  ld   $85
              85d6 0043  ld   $43
              85d7 00a5  ld   $a5
              85d8 004c  ld   $4c
              85d9 0085  ld   $85
              85da 0046  ld   $46
              85db 00a5  ld   $a5
              85dc 004d  ld   $4d
              85dd 0085  ld   $85
              85de 0047  ld   $47
              85df 00d0  ld   $d0
              85e0 00de  ld   $de
              85e1 0020  ld   $20
              85e2 0015  ld   $15
              85e3 00e7  ld   $e7
              85e4 0020  ld   $20
              85e5 006d  ld   $6d
              85e6 00e5  ld   $e5
              85e7 00a5  ld   $a5
              85e8 0044  ld   $44
              85e9 0085  ld   $85
              85ea 0042  ld   $42
              85eb 00a5  ld   $a5
              85ec 0045  ld   $45
              85ed 0085  ld   $85
              85ee 0043  ld   $43
              85ef 00b0  ld   $b0
              85f0 00c7  ld   $c7
              85f1 0086  ld   $86
              85f2 00d8  ld   $d8
              85f3 00a9  ld   $a9
              85f4 00a0  ld   $a0
              85f5 0085  ld   $85
              85f6 0082  ld   $82
              85f7 0020  ld   $20
              85f8 002a  ld   $2a
              85f9 00e0  ld   $e0
              85fa 0098  ld   $98
              85fb fe00  bra  ac          ;+-----------------------------------+
              85fc fcfd  bra  $85fd       ;|                                   |
              85fd 1418  ld   $18,y       ;| Trampoline for page $8500 lookups |
              85fe e006  jmp  y,$06       ;|                                   |
              85ff c218  st   [$18]       ;+-----------------------------------+
              8600 0085  ld   $85
              8601 0044  ld   $44
              8602 0020  ld   $20
              8603 002a  ld   $2a
              8604 00e0  ld   $e0
              8605 00aa  ld   $aa
              8606 0020  ld   $20
              8607 002a  ld   $2a
              8608 00e0  ld   $e0
              8609 0020  ld   $20
              860a 001b  ld   $1b
              860b 00e5  ld   $e5
              860c 0020  ld   $20
              860d 0018  ld   $18
              860e 00e0  ld   $e0
              860f 0084  ld   $84
              8610 0082  ld   $82
              8611 00aa  ld   $aa
              8612 0010  ld   $10
              8613 0018  ld   $18
              8614 000a  ld   $0a
              8615 0010  ld   $10
              8616 00e9  ld   $e9
              8617 00a5  ld   $a5
              8618 0044  ld   $44
              8619 00d0  ld   $d0
              861a 0003  ld   $03
              861b 0020  ld   $20
              861c 0011  ld   $11
              861d 00e0  ld   $e0
              861e 008a  ld   $8a
              861f 0020  ld   $20
              8620 00c9  ld   $c9
              8621 00e3  ld   $e3
              8622 00a9  ld   $a9
              8623 0025  ld   $25
              8624 0020  ld   $20
              8625 001a  ld   $1a
              8626 00e0  ld   $e0
              8627 00aa  ld   $aa
              8628 0030  ld   $30
              8629 00f5  ld   $f5
              862a 0085  ld   $85
              862b 0044  ld   $44
              862c 00c9  ld   $c9
              862d 0001  ld   $01
              862e 00d0  ld   $d0
              862f 0005  ld   $05
              8630 00a6  ld   $a6
              8631 00d8  ld   $d8
              8632 004c  ld   $4c
              8633 00cd  ld   $cd
              8634 00e3  ld   $e3
              8635 0048  ld   $48
              8636 0084  ld   $84
              8637 00ce  ld   $ce
              8638 00a2  ld   $a2
              8639 00ed  ld   $ed
              863a 0086  ld   $86
              863b 00cf  ld   $cf
              863c 00c9  ld   $c9
              863d 0051  ld   $51
              863e 0090  ld   $90
              863f 0004  ld   $04
              8640 00c6  ld   $c6
              8641 00cf  ld   $cf
              8642 00e9  ld   $e9
              8643 0050  ld   $50
              8644 0048  ld   $48
              8645 00b1  ld   $b1
              8646 00ce  ld   $ce
              8647 00aa  ld   $aa
              8648 0088  ld   $88
              8649 00b1  ld   $b1
              864a 00ce  ld   $ce
              864b 0010  ld   $10
              864c 00fa  ld   $fa
              864d 00e0  ld   $e0
              864e 00c0  ld   $c0
              864f 00b0  ld   $b0
              8650 0004  ld   $04
              8651 00e0  ld   $e0
              8652 0000  ld   $00
              8653 0030  ld   $30
              8654 00f2  ld   $f2
              8655 00aa  ld   $aa
              8656 0068  ld   $68
              8657 00e9  ld   $e9
              8658 0001  ld   $01
              8659 00d0  ld   $d0
              865a 00e9  ld   $e9
              865b 0024  ld   $24
              865c 0044  ld   $44
              865d 0030  ld   $30
              865e 0003  ld   $03
              865f 0020  ld   $20
              8660 00f8  ld   $f8
              8661 00ef  ld   $ef
              8662 00b1  ld   $b1
              8663 00ce  ld   $ce
              8664 0010  ld   $10
              8665 0010  ld   $10
              8666 00aa  ld   $aa
              8667 0029  ld   $29
              8668 003f  ld   $3f
              8669 0085  ld   $85
              866a 0044  ld   $44
              866b 0018  ld   $18
              866c 0069  ld   $69
              866d 00a0  ld   $a0
              866e 0020  ld   $20
              866f 00c9  ld   $c9
              8670 00e3  ld   $e3
              8671 0088  ld   $88
              8672 00e0  ld   $e0
              8673 00c0  ld   $c0
              8674 0090  ld   $90
              8675 00ec  ld   $ec
              8676 0020  ld   $20
              8677 000c  ld   $0c
              8678 00e0  ld   $e0
              8679 0068  ld   $68
              867a 00c9  ld   $c9
              867b 005d  ld   $5d
              867c 00f0  ld   $f0
              867d 00a4  ld   $a4
              867e 00c9  ld   $c9
              867f 0028  ld   $28
              8680 00d0  ld   $d0
              8681 008a  ld   $8a
              8682 00f0  ld   $f0
              8683 009e  ld   $9e
              8684 0020  ld   $20
              8685 0018  ld   $18
              8686 00e1  ld   $e1
              8687 0095  ld   $95
              8688 0050  ld   $50
              8689 00e1  ld   $e1
              868a 0000  ld   $00
              868b 0000  ld   $00
              868c 00d5  ld   $d5
              868d 0088  ld   $88
              868e 0090  ld   $90
              868f 0011  ld   $11
              8690 00a0  ld   $a0
              8691 002b  ld   $2b
              8692 004c  ld   $4c
              8693 00e0  ld   $e0
              8694 00e3  ld   $e3
              8695 0020  ld   $20
              8696 0034  ld   $34
              8697 00ee  ld   $ee
              8698 00d5  ld   $d5
              8699 0050  ld   $50
              869a 0090  ld   $90
              869b 00f4  ld   $f4
              869c 0020  ld   $20
              869d 00e4  ld   $e4
              869e 00ef  ld   $ef
              869f 0095  ld   $95
              86a0 0088  ld   $88
              86a1 004c  ld   $4c
              86a2 0023  ld   $23
              86a3 00e8  ld   $e8
              86a4 0020  ld   $20
              86a5 0034  ld   $34
              86a6 00ee  ld   $ee
              86a7 00f0  ld   $f0
              86a8 00e7  ld   $e7
              86a9 0038  ld   $38
              86aa 00e9  ld   $e9
              86ab 0001  ld   $01
              86ac 0060  ld   $60
              86ad 0020  ld   $20
              86ae 0018  ld   $18
              86af 00e1  ld   $e1
              86b0 0095  ld   $95
              86b1 0050  ld   $50
              86b2 0018  ld   $18
              86b3 00f5  ld   $f5
              86b4 0088  ld   $88
              86b5 004c  ld   $4c
              86b6 0002  ld   $02
              86b7 00e1  ld   $e1
              86b8 00a0  ld   $a0
              86b9 0014  ld   $14
              86ba 00d0  ld   $d0
              86bb 00d6  ld   $d6
              86bc 0020  ld   $20
              86bd 0018  ld   $18
              86be 00e1  ld   $e1
              86bf 00e8  ld   $e8
              86c0 00b5  ld   $b5
              86c1 0050  ld   $50
              86c2 0085  ld   $85
              86c3 00da  ld   $da
              86c4 0065  ld   $65
              86c5 00ce  ld   $ce
              86c6 0048  ld   $48
              86c7 00a8  ld   $a8
              86c8 00b5  ld   $b5
              86c9 0088  ld   $88
              86ca 0085  ld   $85
              86cb 00db  ld   $db
              86cc 0065  ld   $65
              86cd 00cf  ld   $cf
              86ce 0048  ld   $48
              86cf 00c4  ld   $c4
              86d0 00ca  ld   $ca
              86d1 00e5  ld   $e5
              86d2 00cb  ld   $cb
              86d3 00b0  ld   $b0
              86d4 00e3  ld   $e3
              86d5 00a5  ld   $a5
              86d6 00da  ld   $da
              86d7 0069  ld   $69
              86d8 00fe  ld   $fe
              86d9 0085  ld   $85
              86da 00da  ld   $da
              86db 00a9  ld   $a9
              86dc 00ff  ld   $ff
              86dd 00a8  ld   $a8
              86de 0065  ld   $65
              86df 00db  ld   $db
              86e0 0085  ld   $85
              86e1 00db  ld   $db
              86e2 00c8  ld   $c8
              86e3 00b1  ld   $b1
              86e4 00da  ld   $da
              86e5 00d9  ld   $d9
              86e6 00cc  ld   $cc
              86e7 0000  ld   $00
              86e8 00d0  ld   $d0
              86e9 000f  ld   $0f
              86ea 0098  ld   $98
              86eb 00f0  ld   $f0
              86ec 00f5  ld   $f5
              86ed 0068  ld   $68
              86ee 0091  ld   $91
              86ef 00da  ld   $da
              86f0 0099  ld   $99
              86f1 00cc  ld   $cc
              86f2 0000  ld   $00
              86f3 0088  ld   $88
              86f4 0010  ld   $10
              86f5 00f7  ld   $f7
              86f6 00e8  ld   $e8
              86f7 0060  ld   $60
              86f8 00ea  ld   $ea
              86f9 00a0  ld   $a0
              86fa 0080  ld   $80
              86fb fe00  bra  ac          ;+-----------------------------------+
              86fc fcfd  bra  $86fd       ;|                                   |
              86fd 1418  ld   $18,y       ;| Trampoline for page $8600 lookups |
              86fe e006  jmp  y,$06       ;|                                   |
              86ff c218  st   [$18]       ;+-----------------------------------+
              8700 00d0  ld   $d0
              8701 0095  ld   $95
              8702 00a9  ld   $a9
              8703 0000  ld   $00
              8704 0020  ld   $20
              8705 000a  ld   $0a
              8706 00e7  ld   $e7
              8707 00a0  ld   $a0
              8708 0002  ld   $02
              8709 0094  ld   $94
              870a 0088  ld   $88
              870b 0020  ld   $20
              870c 000a  ld   $0a
              870d 00e7  ld   $e7
              870e 00a9  ld   $a9
              870f 00bf  ld   $bf
              8710 0020  ld   $20
              8711 00c9  ld   $c9
              8712 00e3  ld   $e3
              8713 00a0  ld   $a0
              8714 0000  ld   $00
              8715 0020  ld   $20
              8716 009e  ld   $9e
              8717 00e2  ld   $e2
              8718 0094  ld   $94
              8719 0088  ld   $88
              871a 00ea  ld   $ea
              871b 00ea  ld   $ea
              871c 00ea  ld   $ea
              871d 00b5  ld   $b5
              871e 0051  ld   $51
              871f 0085  ld   $85
              8720 00ce  ld   $ce
              8721 00b5  ld   $b5
              8722 0089  ld   $89
              8723 0085  ld   $85
              8724 00cf  ld   $cf
              8725 00e8  ld   $e8
              8726 00e8  ld   $e8
              8727 0020  ld   $20
              8728 00bc  ld   $bc
              8729 00e1  ld   $e1
              872a 00b5  ld   $b5
              872b 004e  ld   $4e
              872c 00d5  ld   $d5
              872d 0086  ld   $86
              872e 00b0  ld   $b0
              872f 0015  ld   $15
              8730 00f6  ld   $f6
              8731 004e  ld   $4e
              8732 00a8  ld   $a8
              8733 00b1  ld   $b1
              8734 00ce  ld   $ce
              8735 00b4  ld   $b4
              8736 0050  ld   $50
              8737 00c4  ld   $c4
              8738 0044  ld   $44
              8739 0090  ld   $90
              873a 0004  ld   $04
              873b 00a0  ld   $a0
              873c 0083  ld   $83
              873d 00d0  ld   $d0
              873e 00c1  ld   $c1
              873f 0091  ld   $91
              8740 00da  ld   $da
              8741 00f6  ld   $f6
              8742 0050  ld   $50
              8743 0090  ld   $90
              8744 00e5  ld   $e5
              8745 00b4  ld   $b4
              8746 0050  ld   $50
              8747 008a  ld   $8a
              8748 0091  ld   $91
              8749 00da  ld   $da
              874a 00e8  ld   $e8
              874b 00e8  ld   $e8
              874c 0060  ld   $60
              874d 00b5  ld   $b5
              874e 0051  ld   $51
              874f 0085  ld   $85
              8750 00da  ld   $da
              8751 0038  ld   $38
              8752 00e9  ld   $e9
              8753 0002  ld   $02
              8754 0085  ld   $85
              8755 0044  ld   $44
              8756 00b5  ld   $b5
              8757 0089  ld   $89
              8758 0085  ld   $85
              8759 00db  ld   $db
              875a 00e9  ld   $e9
              875b 0000  ld   $00
              875c 0085  ld   $85
              875d 0045  ld   $45
              875e 00a0  ld   $a0
              875f 0000  ld   $00
              8760 00b1  ld   $b1
              8761 0044  ld   $44
              8762 0018  ld   $18
              8763 00e5  ld   $e5
              8764 00da  ld   $da
              8765 0085  ld   $85
              8766 0044  ld   $44
              8767 0060  ld   $60
              8768 00b5  ld   $b5
              8769 0053  ld   $53
              876a 0085  ld   $85
              876b 00ce  ld   $ce
              876c 00b5  ld   $b5
              876d 008b  ld   $8b
              876e 0085  ld   $85
              876f 00cf  ld   $cf
              8770 00b5  ld   $b5
              8771 0051  ld   $51
              8772 0085  ld   $85
              8773 00da  ld   $da
              8774 00b5  ld   $b5
              8775 0089  ld   $89
              8776 0085  ld   $85
              8777 00db  ld   $db
              8778 00e8  ld   $e8
              8779 00e8  ld   $e8
              877a 00e8  ld   $e8
              877b 00a0  ld   $a0
              877c 0000  ld   $00
              877d 0094  ld   $94
              877e 0088  ld   $88
              877f 0094  ld   $94
              8780 00a8  ld   $a8
              8781 00c8  ld   $c8
              8782 0094  ld   $94
              8783 0050  ld   $50
              8784 00b5  ld   $b5
              8785 004d  ld   $4d
              8786 00d5  ld   $d5
              8787 0085  ld   $85
              8788 0008  ld   $08
              8789 0048  ld   $48
              878a 00b5  ld   $b5
              878b 004f  ld   $4f
              878c 00d5  ld   $d5
              878d 0087  ld   $87
              878e 0090  ld   $90
              878f 0007  ld   $07
              8790 0068  ld   $68
              8791 00e2  ld   $e2
              8792 0000  ld   $00
              8793 0000  ld   $00
              8794 0028  ld   $28
              8795 00b0  ld   $b0
              8796 0002  ld   $02
              8797 0056  ld   $56
              8798 0050  ld   $50
              8799 0060  ld   $60
              879a 00a8  ld   $a8
              879b 00b1  ld   $b1
              879c 00ce  ld   $ce
              879d 0085  ld   $85
              879e 0044  ld   $44
              879f 0068  ld   $68
              87a0 00a8  ld   $a8
              87a1 0028  ld   $28
              87a2 00b0  ld   $b0
              87a3 00f3  ld   $f3
              87a4 00b1  ld   $b1
              87a5 00da  ld   $da
              87a6 00c5  ld   $c5
              87a7 0044  ld   $44
              87a8 00d0  ld   $d0
              87a9 00ed  ld   $ed
              87aa 00f6  ld   $f6
              87ab 004f  ld   $4f
              87ac 00f6  ld   $f6
              87ad 004d  ld   $4d
              87ae 00b0  ld   $b0
              87af 00d7  ld   $d7
              87b0 0020  ld   $20
              87b1 00d7  ld   $d7
              87b2 00e1  ld   $e1
              87b3 004c  ld   $4c
              87b4 0036  ld   $36
              87b5 00e7  ld   $e7
              87b6 0020  ld   $20
              87b7 0054  ld   $54
              87b8 00e2  ld   $e2
              87b9 0006  ld   $06
              87ba 00ce  ld   $ce
              87bb 0026  ld   $26
              87bc 00cf  ld   $cf
              87bd 0090  ld   $90
              87be 000d  ld   $0d
              87bf 0018  ld   $18
              87c0 00a5  ld   $a5
              87c1 0046  ld   $46
              87c2 0065  ld   $65
              87c3 00da  ld   $da
              87c4 0085  ld   $85
              87c5 0046  ld   $46
              87c6 00a5  ld   $a5
              87c7 0047  ld   $47
              87c8 0065  ld   $65
              87c9 00db  ld   $db
              87ca 0085  ld   $85
              87cb 0047  ld   $47
              87cc 0088  ld   $88
              87cd 00f0  ld   $f0
              87ce 0009  ld   $09
              87cf 0006  ld   $06
              87d0 0046  ld   $46
              87d1 0026  ld   $26
              87d2 0047  ld   $47
              87d3 0010  ld   $10
              87d4 00e4  ld   $e4
              87d5 004c  ld   $4c
              87d6 007e  ld   $7e
              87d7 00e7  ld   $e7
              87d8 00a5  ld   $a5
              87d9 0046  ld   $46
              87da 0020  ld   $20
              87db 0008  ld   $08
              87dc 00e7  ld   $e7
              87dd 00a5  ld   $a5
              87de 0047  ld   $47
              87df 0095  ld   $95
              87e0 00a8  ld   $a8
              87e1 0006  ld   $06
              87e2 0045  ld   $45
              87e3 0090  ld   $90
              87e4 0028  ld   $28
              87e5 004c  ld   $4c
              87e6 006f  ld   $6f
              87e7 00e7  ld   $e7
              87e8 00a9  ld   $a9
              87e9 0055  ld   $55
              87ea 0085  ld   $85
              87eb 0045  ld   $45
              87ec 0020  ld   $20
              87ed 005b  ld   $5b
              87ee 00e2  ld   $e2
              87ef 00a5  ld   $a5
              87f0 00ce  ld   $ce
              87f1 0085  ld   $85
              87f2 00da  ld   $da
              87f3 00a5  ld   $a5
              87f4 00cf  ld   $cf
              87f5 0085  ld   $85
              87f6 00db  ld   $db
              87f7 0020  ld   $20
              87f8 0015  ld   $15
              87f9 00e7  ld   $e7
              87fa 0084  ld   $84
              87fb fe00  bra  ac          ;+-----------------------------------+
              87fc fcfd  bra  $87fd       ;|                                   |
              87fd 1418  ld   $18,y       ;| Trampoline for page $8700 lookups |
              87fe e006  jmp  y,$06       ;|                                   |
              87ff c218  st   [$18]       ;+-----------------------------------+
              8800 0046  ld   $46
              8801 0084  ld   $84
              8802 0047  ld   $47
              8803 00a5  ld   $a5
              8804 00cf  ld   $cf
              8805 0010  ld   $10
              8806 0009  ld   $09
              8807 00ca  ld   $ca
              8808 0006  ld   $06
              8809 0045  ld   $45
              880a 0020  ld   $20
              880b 006f  ld   $6f
              880c 00e7  ld   $e7
              880d 0020  ld   $20
              880e 0015  ld   $15
              880f 00e7  ld   $e7
              8810 00a0  ld   $a0
              8811 0010  ld   $10
              8812 0060  ld   $60
              8813 0020  ld   $20
              8814 006c  ld   $6c
              8815 00ee  ld   $ee
              8816 00f0  ld   $f0
              8817 00c5  ld   $c5
              8818 00ff  ld   $ff
              8819 00c9  ld   $c9
              881a 0084  ld   $84
              881b 00d0  ld   $d0
              881c 0002  ld   $02
              881d 0046  ld   $46
              881e 0078  ld   $78
              881f 00c9  ld   $c9
              8820 00df  ld   $df
              8821 00f0  ld   $f0
              8822 0011  ld   $11
              8823 00c9  ld   $c9
              8824 009b  ld   $9b
              8825 00f0  ld   $f0
              8826 0006  ld   $06
              8827 0099  ld   $99
              8828 0000  ld   $00
              8829 0002  ld   $02
              882a 00c8  ld   $c8
              882b 0010  ld   $10
              882c 000a  ld   $0a
              882d 00a0  ld   $a0
              882e 008b  ld   $8b
              882f 0020  ld   $20
              8830 00c4  ld   $c4
              8831 00e3  ld   $e3
              8832 00a0  ld   $a0
              8833 0001  ld   $01
              8834 0088  ld   $88
              8835 0030  ld   $30
              8836 00f6  ld   $f6
              8837 0020  ld   $20
              8838 0003  ld   $03
              8839 00e0  ld   $e0
              883a 00ea  ld   $ea
              883b 00ea  ld   $ea
              883c 0020  ld   $20
              883d 00c9  ld   $c9
              883e 00e3  ld   $e3
              883f 00c9  ld   $c9
              8840 008d  ld   $8d
              8841 00d0  ld   $d0
              8842 00d6  ld   $d6
              8843 00a9  ld   $a9
              8844 00df  ld   $df
              8845 0099  ld   $99
              8846 0000  ld   $00
              8847 0002  ld   $02
              8848 0060  ld   $60
              8849 0020  ld   $20
              884a 00d3  ld   $d3
              884b 00ef  ld   $ef
              884c 0020  ld   $20
              884d 00cd  ld   $cd
              884e 00e3  ld   $e3
              884f 0046  ld   $46
              8850 00d9  ld   $d9
              8851 00a9  ld   $a9
              8852 00be  ld   $be
              8853 0020  ld   $20
              8854 00c9  ld   $c9
              8855 00e3  ld   $e3
              8856 00a0  ld   $a0
              8857 0000  ld   $00
              8858 0084  ld   $84
              8859 0082  ld   $82
              885a 0024  ld   $24
              885b 0078  ld   $78
              885c 0010  ld   $10
              885d 000c  ld   $0c
              885e 00a6  ld   $a6
              885f 0076  ld   $76
              8860 00a5  ld   $a5
              8861 0077  ld   $77
              8862 0020  ld   $20
              8863 001b  ld   $1b
              8864 00e5  ld   $e5
              8865 00a9  ld   $a9
              8866 00a0  ld   $a0
              8867 0020  ld   $20
              8868 00c9  ld   $c9
              8869 00e3  ld   $e3
              886a 00a2  ld   $a2
              886b 00ff  ld   $ff
              886c 009a  ld   $9a
              886d 0020  ld   $20
              886e 009e  ld   $9e
              886f 00e2  ld   $e2
              8870 0084  ld   $84
              8871 00e9  ld   $e9
              8872 008a  ld   $8a
              8873 0085  ld   $85
              8874 00c8  ld   $c8
              8875 00a2  ld   $a2
              8876 0018  ld   $18
              8877 0020  ld   $20
              8878 0091  ld   $91
              8879 00e4  ld   $e4
              887a 00a5  ld   $a5
              887b 00c8  ld   $c8
              887c 0069  ld   $69
              887d 0000  ld   $00
              887e 0085  ld   $85
              887f 00de  ld   $de
              8880 00a9  ld   $a9
              8881 0000  ld   $00
              8882 00aa  ld   $aa
              8883 0069  ld   $69
              8884 0002  ld   $02
              8885 0085  ld   $85
              8886 00df  ld   $df
              8887 00a1  ld   $a1
              8888 00de  ld   $de
              8889 0029  ld   $29
              888a 00f0  ld   $f0
              888b 00c9  ld   $c9
              888c 00b0  ld   $b0
              888d 00f0  ld   $f0
              888e 0003  ld   $03
              888f 004c  ld   $4c
              8890 0083  ld   $83
              8891 00e8  ld   $e8
              8892 00a0  ld   $a0
              8893 0002  ld   $02
              8894 00b1  ld   $b1
              8895 00de  ld   $de
              8896 0099  ld   $99
              8897 00cd  ld   $cd
              8898 0000  ld   $00
              8899 00e3  ld   $e3
              889a 0000  ld   $00
              889b 0000  ld   $00
              889c 0088  ld   $88
              889d 00d0  ld   $d0
              889e 00f8  ld   $f8
              889f 0020  ld   $20
              88a0 008a  ld   $8a
              88a1 00e3  ld   $e3
              88a2 00a5  ld   $a5
              88a3 00e9  ld   $e9
              88a4 00e5  ld   $e5
              88a5 00c8  ld   $c8
              88a6 00c9  ld   $c9
              88a7 0004  ld   $04
              88a8 00f0  ld   $f0
              88a9 00a8  ld   $a8
              88aa 0091  ld   $91
              88ab 00de  ld   $de
              88ac 00a5  ld   $a5
              88ad 00ca  ld   $ca
              88ae 00f1  ld   $f1
              88af 00de  ld   $de
              88b0 0085  ld   $85
              88b1 0044  ld   $44
              88b2 00a5  ld   $a5
              88b3 00cb  ld   $cb
              88b4 00e9  ld   $e9
              88b5 0000  ld   $00
              88b6 0085  ld   $85
              88b7 0045  ld   $45
              88b8 00a5  ld   $a5
              88b9 0044  ld   $44
              88ba 00c5  ld   $c5
              88bb 00cc  ld   $cc
              88bc 00a5  ld   $a5
              88bd 0045  ld   $45
              88be 00e5  ld   $e5
              88bf 00cd  ld   $cd
              88c0 0090  ld   $90
              88c1 0045  ld   $45
              88c2 00a5  ld   $a5
              88c3 00ca  ld   $ca
              88c4 00f1  ld   $f1
              88c5 00de  ld   $de
              88c6 0085  ld   $85
              88c7 0046  ld   $46
              88c8 00a5  ld   $a5
              88c9 00cb  ld   $cb
              88ca 00e9  ld   $e9
              88cb 0000  ld   $00
              88cc 0085  ld   $85
              88cd 0047  ld   $47
              88ce 00b1  ld   $b1
              88cf 00ca  ld   $ca
              88d0 0091  ld   $91
              88d1 0046  ld   $46
              88d2 00e6  ld   $e6
              88d3 00ca  ld   $ca
              88d4 00d0  ld   $d0
              88d5 0002  ld   $02
              88d6 00e6  ld   $e6
              88d7 00cb  ld   $cb
              88d8 00a5  ld   $a5
              88d9 0042  ld   $42
              88da 00c5  ld   $c5
              88db 00ca  ld   $ca
              88dc 00a5  ld   $a5
              88dd 0043  ld   $43
              88de 00e5  ld   $e5
              88df 00cb  ld   $cb
              88e0 00b0  ld   $b0
              88e1 00e0  ld   $e0
              88e2 00b5  ld   $b5
              88e3 0044  ld   $44
              88e4 0095  ld   $95
              88e5 00ca  ld   $ca
              88e6 00ca  ld   $ca
              88e7 0010  ld   $10
              88e8 00f9  ld   $f9
              88e9 00b1  ld   $b1
              88ea 00de  ld   $de
              88eb 00a8  ld   $a8
              88ec 0088  ld   $88
              88ed 00b1  ld   $b1
              88ee 00de  ld   $de
              88ef 0091  ld   $91
              88f0 0046  ld   $46
              88f1 0098  ld   $98
              88f2 00d0  ld   $d0
              88f3 00f8  ld   $f8
              88f4 0024  ld   $24
              88f5 0078  ld   $78
              88f6 0010  ld   $10
              88f7 0009  ld   $09
              88f8 00b5  ld   $b5
              88f9 0077  ld   $77
              88fa 0075  ld   $75
              88fb fe00  bra  ac          ;+-----------------------------------+
              88fc fcfd  bra  $88fd       ;|                                   |
              88fd 1418  ld   $18,y       ;| Trampoline for page $8800 lookups |
              88fe e006  jmp  y,$06       ;|                                   |
              88ff c218  st   [$18]       ;+-----------------------------------+
              8900 0075  ld   $75
              8901 0095  ld   $95
              8902 0077  ld   $77
              8903 00e8  ld   $e8
              8904 00f0  ld   $f0
              8905 00f7  ld   $f7
              8906 0010  ld   $10
              8907 007e  ld   $7e
              8908 0000  ld   $00
              8909 0000  ld   $00
              890a 0000  ld   $00
              890b 0000  ld   $00
              890c 00a0  ld   $a0
              890d 0014  ld   $14
              890e 00d0  ld   $d0
              890f 0071  ld   $71
              8910 0020  ld   $20
              8911 0015  ld   $15
              8912 00e7  ld   $e7
              8913 00a5  ld   $a5
              8914 0042  ld   $42
              8915 0085  ld   $85
              8916 0046  ld   $46
              8917 00a5  ld   $a5
              8918 0043  ld   $43
              8919 0085  ld   $85
              891a 0047  ld   $47
              891b 0020  ld   $20
              891c 0075  ld   $75
              891d 00e5  ld   $e5
              891e 00a5  ld   $a5
              891f 0042  ld   $42
              8920 0085  ld   $85
              8921 0044  ld   $44
              8922 00a5  ld   $a5
              8923 0043  ld   $43
              8924 0085  ld   $85
              8925 0045  ld   $45
              8926 00d0  ld   $d0
              8927 000e  ld   $0e
              8928 0020  ld   $20
              8929 0015  ld   $15
              892a 00e7  ld   $e7
              892b 0020  ld   $20
              892c 006d  ld   $6d
              892d 00e5  ld   $e5
              892e 00a5  ld   $a5
              892f 0046  ld   $46
              8930 0085  ld   $85
              8931 0042  ld   $42
              8932 00a5  ld   $a5
              8933 0047  ld   $47
              8934 0085  ld   $85
              8935 0043  ld   $43
              8936 00a0  ld   $a0
              8937 0000  ld   $00
              8938 00a5  ld   $a5
              8939 00ca  ld   $ca
              893a 00c5  ld   $c5
              893b 0044  ld   $44
              893c 00a5  ld   $a5
              893d 00cb  ld   $cb
              893e 00e5  ld   $e5
              893f 0045  ld   $45
              8940 00b0  ld   $b0
              8941 0016  ld   $16
              8942 00a5  ld   $a5
              8943 0044  ld   $44
              8944 00d0  ld   $d0
              8945 0002  ld   $02
              8946 00c6  ld   $c6
              8947 0045  ld   $45
              8948 00c6  ld   $c6
              8949 0044  ld   $44
              894a 00a5  ld   $a5
              894b 0046  ld   $46
              894c 00d0  ld   $d0
              894d 0002  ld   $02
              894e 00c6  ld   $c6
              894f 0047  ld   $47
              8950 00c6  ld   $c6
              8951 0046  ld   $46
              8952 00b1  ld   $b1
              8953 0044  ld   $44
              8954 0091  ld   $91
              8955 0046  ld   $46
              8956 0090  ld   $90
              8957 00e0  ld   $e0
              8958 00a5  ld   $a5
              8959 0046  ld   $46
              895a 0085  ld   $85
              895b 00ca  ld   $ca
              895c 00a5  ld   $a5
              895d 0047  ld   $47
              895e 0085  ld   $85
              895f 00cb  ld   $cb
              8960 0060  ld   $60
              8961 0020  ld   $20
              8962 00c9  ld   $c9
              8963 00e3  ld   $e3
              8964 00c8  ld   $c8
              8965 00b9  ld   $b9
              8966 0000  ld   $00
              8967 00eb  ld   $eb
              8968 0030  ld   $30
              8969 00f7  ld   $f7
              896a 00c9  ld   $c9
              896b 008d  ld   $8d
              896c 00d0  ld   $d0
              896d 0006  ld   $06
              896e 00a9  ld   $a9
              896f 0000  ld   $00
              8970 0085  ld   $85
              8971 0081  ld   $81
              8972 00a9  ld   $a9
              8973 008d  ld   $8d
              8974 00e6  ld   $e6
              8975 0081  ld   $81
              8976 004c  ld   $4c
              8977 00ef  ld   $ef
              8978 00ff  ld   $ff
              8979 00ea  ld   $ea
              897a 00ea  ld   $ea
              897b 00ea  ld   $ea
              * 6 times
              897f 00a0  ld   $a0
              8980 0006  ld   $06
              8981 0020  ld   $20
              8982 00d3  ld   $d3
              8983 00ee  ld   $ee
              8984 0024  ld   $24
              8985 00d9  ld   $d9
              8986 0030  ld   $30
              8987 0003  ld   $03
              8988 004c  ld   $4c
              8989 00b6  ld   $b6
              898a 00e2  ld   $e2
              898b 004c  ld   $4c
              898c 009a  ld   $9a
              898d 00eb  ld   $eb
              898e 002a  ld   $2a
              898f 0069  ld   $69
              8990 00a0  ld   $a0
              8991 00dd  ld   $dd
              8992 0000  ld   $00
              8993 0002  ld   $02
              8994 00d0  ld   $d0
              8995 0053  ld   $53
              8996 00b1  ld   $b1
              8997 0086  ld   $86
              8998 000a  ld   $0a
              8999 0030  ld   $30
              899a 0006  ld   $06
              899b 0088  ld   $88
              899c 00b1  ld   $b1
              899d 0086  ld   $86
              899e 0030  ld   $30
              899f 0029  ld   $29
              89a0 00c8  ld   $c8
              89a1 00e4  ld   $e4
              89a2 0000  ld   $00
              89a3 0000  ld   $00
              89a4 0086  ld   $86
              89a5 00c8  ld   $c8
              89a6 0098  ld   $98
              89a7 0048  ld   $48
              89a8 00a2  ld   $a2
              89a9 0000  ld   $00
              89aa 00a1  ld   $a1
              89ab 0086  ld   $86
              89ac 00aa  ld   $aa
              89ad 004a  ld   $4a
              89ae 0049  ld   $49
              89af 0048  ld   $48
              89b0 0011  ld   $11
              89b1 0086  ld   $86
              89b2 00c9  ld   $c9
              89b3 00c0  ld   $c0
              89b4 0090  ld   $90
              89b5 0001  ld   $01
              89b6 00e8  ld   $e8
              89b7 00c8  ld   $c8
              89b8 00d0  ld   $d0
              89b9 00f3  ld   $f3
              89ba 0068  ld   $68
              89bb 00a8  ld   $a8
              89bc 008a  ld   $8a
              89bd 004c  ld   $4c
              89be 00c0  ld   $c0
              89bf 00e4  ld   $e4
              89c0 00e6  ld   $e6
              89c1 00e9  ld   $e9
              89c2 00a6  ld   $a6
              89c3 00e9  ld   $e9
              89c4 00f0  ld   $f0
              89c5 00bc  ld   $bc
              89c6 009d  ld   $9d
              89c7 0000  ld   $00
              89c8 0002  ld   $02
              89c9 0060  ld   $60
              89ca 00a6  ld   $a6
              89cb 00c8  ld   $c8
              89cc 00a9  ld   $a9
              89cd 00a0  ld   $a0
              89ce 00e8  ld   $e8
              89cf 00dd  ld   $dd
              89d0 0000  ld   $00
              89d1 0002  ld   $02
              89d2 00b0  ld   $b0
              89d3 00fa  ld   $fa
              89d4 00b1  ld   $b1
              89d5 0086  ld   $86
              89d6 0029  ld   $29
              89d7 003f  ld   $3f
              89d8 004a  ld   $4a
              89d9 00d0  ld   $d0
              89da 00b6  ld   $b6
              89db 00bd  ld   $bd
              89dc 0000  ld   $00
              89dd 0002  ld   $02
              89de 00b0  ld   $b0
              89df 0006  ld   $06
              89e0 0069  ld   $69
              89e1 003f  ld   $3f
              89e2 00c9  ld   $c9
              89e3 001a  ld   $1a
              89e4 0090  ld   $90
              89e5 006f  ld   $6f
              89e6 0069  ld   $69
              89e7 004f  ld   $4f
              89e8 00c9  ld   $c9
              89e9 000a  ld   $0a
              89ea 0090  ld   $90
              89eb 0069  ld   $69
              89ec 00a6  ld   $a6
              89ed 0085  ld   $85
              89ee 00c8  ld   $c8
              89ef 00b1  ld   $b1
              89f0 0086  ld   $86
              89f1 0029  ld   $29
              89f2 00e0  ld   $e0
              89f3 00c9  ld   $c9
              89f4 0020  ld   $20
              89f5 00f0  ld   $f0
              89f6 007a  ld   $7a
              89f7 00b5  ld   $b5
              89f8 00b0  ld   $b0
              89f9 0085  ld   $85
              89fa 00c8  ld   $c8
              89fb fe00  bra  ac          ;+-----------------------------------+
              89fc fcfd  bra  $89fd       ;|                                   |
              89fd 1418  ld   $18,y       ;| Trampoline for page $8900 lookups |
              89fe e006  jmp  y,$06       ;|                                   |
              89ff c218  st   [$18]       ;+-----------------------------------+
              8a00 00b5  ld   $b5
              8a01 00d1  ld   $d1
              8a02 0085  ld   $85
              8a03 00e9  ld   $e9
              8a04 0088  ld   $88
              8a05 00b1  ld   $b1
              8a06 0086  ld   $86
              8a07 000a  ld   $0a
              8a08 0010  ld   $10
              8a09 00fa  ld   $fa
              8a0a 0088  ld   $88
              8a0b 00b0  ld   $b0
              8a0c 0038  ld   $38
              8a0d 000a  ld   $0a
              8a0e 0030  ld   $30
              8a0f 0035  ld   $35
              8a10 00b4  ld   $b4
              8a11 0058  ld   $58
              8a12 0084  ld   $84
              8a13 0087  ld   $87
              8a14 00b4  ld   $b4
              8a15 0090  ld   $90
              8a16 00e8  ld   $e8
              8a17 0010  ld   $10
              8a18 00da  ld   $da
              8a19 00f0  ld   $f0
              8a1a 00b3  ld   $b3
              8a1b 00c9  ld   $c9
              8a1c 007e  ld   $7e
              8a1d 00b0  ld   $b0
              8a1e 0022  ld   $22
              8a1f 00ca  ld   $ca
              8a20 0010  ld   $10
              8a21 0004  ld   $04
              8a22 00a0  ld   $a0
              8a23 0006  ld   $06
              8a24 0010  ld   $10
              8a25 0029  ld   $29
              8a26 0094  ld   $94
              8a27 0090  ld   $90
              8a28 00a4  ld   $a4
              8a29 0087  ld   $87
              8a2a 0094  ld   $94
              8a2b 0058  ld   $58
              8a2c 00a4  ld   $a4
              8a2d 00c8  ld   $c8
              8a2e 0094  ld   $94
              8a2f 00b0  ld   $b0
              8a30 00a4  ld   $a4
              8a31 00e9  ld   $e9
              8a32 0094  ld   $94
              8a33 00d1  ld   $d1
              8a34 0029  ld   $29
              8a35 001f  ld   $1f
              8a36 00a8  ld   $a8
              8a37 00b9  ld   $b9
              8a38 0020  ld   $20
              8a39 00ec  ld   $ec
              8a3a 000a  ld   $0a
              8a3b 00a8  ld   $a8
              8a3c 00a9  ld   $a9
              8a3d 0076  ld   $76
              8a3e 002a  ld   $2a
              8a3f 0085  ld   $85
              8a40 0087  ld   $87
              8a41 00d0  ld   $d0
              8a42 0001  ld   $01
              8a43 00c8  ld   $c8
              8a44 00c8  ld   $c8
              8a45 0086  ld   $86
              8a46 0085  ld   $85
              8a47 00b1  ld   $b1
              8a48 0086  ld   $86
              8a49 0030  ld   $30
              8a4a 0084  ld   $84
              8a4b 00d0  ld   $d0
              8a4c 0005  ld   $05
              8a4d 00a0  ld   $a0
              8a4e 000e  ld   $0e
              8a4f 004c  ld   $4c
              8a50 00e0  ld   $e0
              8a51 00e3  ld   $e3
              8a52 00c9  ld   $c9
              8a53 0003  ld   $03
              8a54 00b0  ld   $b0
              8a55 00c3  ld   $c3
              8a56 004a  ld   $4a
              8a57 00a6  ld   $a6
              8a58 00c8  ld   $c8
              8a59 00e8  ld   $e8
              8a5a 00bd  ld   $bd
              8a5b 0000  ld   $00
              8a5c 0002  ld   $02
              8a5d 0090  ld   $90
              8a5e 0004  ld   $04
              8a5f 00c9  ld   $c9
              8a60 00a2  ld   $a2
              8a61 00f0  ld   $f0
              8a62 000a  ld   $0a
              8a63 00c9  ld   $c9
              8a64 00df  ld   $df
              8a65 00f0  ld   $f0
              8a66 0006  ld   $06
              8a67 0086  ld   $86
              8a68 00c8  ld   $c8
              8a69 0020  ld   $20
              8a6a 001c  ld   $1c
              8a6b 00e4  ld   $e4
              8a6c 00c8  ld   $c8
              8a6d 0088  ld   $88
              8a6e 00a6  ld   $a6
              8a6f 0085  ld   $85
              8a70 00b1  ld   $b1
              8a71 0086  ld   $86
              8a72 0088  ld   $88
              8a73 000a  ld   $0a
              8a74 0010  ld   $10
              8a75 00cf  ld   $cf
              8a76 00b4  ld   $b4
              8a77 0058  ld   $58
              8a78 0084  ld   $84
              8a79 0087  ld   $87
              8a7a 00b4  ld   $b4
              8a7b 0090  ld   $90
              8a7c 00e8  ld   $e8
              8a7d 00b1  ld   $b1
              8a7e 0086  ld   $86
              8a7f 0029  ld   $29
              8a80 009f  ld   $9f
              8a81 00d0  ld   $d0
              8a82 00ed  ld   $ed
              8a83 0085  ld   $85
              8a84 0072  ld   $72
              8a85 0085  ld   $85
              8a86 0073  ld   $73
              8a87 0098  ld   $98
              8a88 0048  ld   $48
              8a89 0086  ld   $86
              8a8a 0085  ld   $85
              8a8b 00b4  ld   $b4
              8a8c 00d0  ld   $d0
              8a8d 0084  ld   $84
              8a8e 00c9  ld   $c9
              8a8f 0018  ld   $18
              8a90 00a9  ld   $a9
              8a91 000a  ld   $0a
              8a92 0085  ld   $85
              8a93 0079  ld   $79
              8a94 00a2  ld   $a2
              8a95 0000  ld   $00
              8a96 00c8  ld   $c8
              8a97 00b9  ld   $b9
              8a98 0000  ld   $00
              8a99 0002  ld   $02
              8a9a 0029  ld   $29
              8a9b 000f  ld   $0f
              8a9c 0065  ld   $65
              8a9d 0072  ld   $72
              8a9e 0048  ld   $48
              8a9f 008a  ld   $8a
              8aa0 0065  ld   $65
              8aa1 0073  ld   $73
              8aa2 0030  ld   $30
              8aa3 001c  ld   $1c
              8aa4 00aa  ld   $aa
              8aa5 0068  ld   $68
              8aa6 00c6  ld   $c6
              8aa7 0079  ld   $79
              8aa8 00d0  ld   $d0
              8aa9 00e5  ld   $e5
              8aaa 0000  ld   $00
              8aab 0000  ld   $00
              8aac 00f2  ld   $f2
              8aad 0085  ld   $85
              8aae 0072  ld   $72
              8aaf 0086  ld   $86
              8ab0 0073  ld   $73
              8ab1 00c4  ld   $c4
              8ab2 00e9  ld   $e9
              8ab3 00d0  ld   $d0
              8ab4 00de  ld   $de
              8ab5 00a4  ld   $a4
              8ab6 00c9  ld   $c9
              8ab7 00c8  ld   $c8
              8ab8 0084  ld   $84
              8ab9 00e9  ld   $e9
              8aba 0020  ld   $20
              8abb 001c  ld   $1c
              8abc 00e4  ld   $e4
              8abd 0068  ld   $68
              8abe 00a8  ld   $a8
              8abf 00a5  ld   $a5
              8ac0 0073  ld   $73
              8ac1 00b0  ld   $b0
              8ac2 00a9  ld   $a9
              8ac3 00a0  ld   $a0
              8ac4 0000  ld   $00
              8ac5 0010  ld   $10
              8ac6 008b  ld   $8b
              8ac7 0085  ld   $85
              8ac8 0073  ld   $73
              8ac9 0086  ld   $86
              8aca 0072  ld   $72
              8acb 00a2  ld   $a2
              8acc 0004  ld   $04
              8acd 0086  ld   $86
              8ace 00c9  ld   $c9
              8acf 00a9  ld   $a9
              8ad0 00b0  ld   $b0
              8ad1 0085  ld   $85
              8ad2 0079  ld   $79
              8ad3 00a5  ld   $a5
              8ad4 0072  ld   $72
              8ad5 00dd  ld   $dd
              8ad6 0063  ld   $63
              8ad7 00e5  ld   $e5
              8ad8 00a5  ld   $a5
              8ad9 0073  ld   $73
              8ada 00fd  ld   $fd
              8adb 0068  ld   $68
              8adc 00e5  ld   $e5
              8add 0090  ld   $90
              8ade 000d  ld   $0d
              8adf 0085  ld   $85
              8ae0 0073  ld   $73
              8ae1 00a5  ld   $a5
              8ae2 0072  ld   $72
              8ae3 00fd  ld   $fd
              8ae4 0063  ld   $63
              8ae5 00e5  ld   $e5
              8ae6 0085  ld   $85
              8ae7 0072  ld   $72
              8ae8 00e6  ld   $e6
              8ae9 0079  ld   $79
              8aea 00d0  ld   $d0
              8aeb 00e7  ld   $e7
              8aec 00a5  ld   $a5
              8aed 0079  ld   $79
              8aee 00e8  ld   $e8
              8aef 00ca  ld   $ca
              8af0 00f0  ld   $f0
              8af1 000e  ld   $0e
              8af2 00c9  ld   $c9
              8af3 00b0  ld   $b0
              8af4 00f0  ld   $f0
              8af5 0002  ld   $02
              8af6 0085  ld   $85
              8af7 00c9  ld   $c9
              8af8 0024  ld   $24
              8af9 00c9  ld   $c9
              8afa 0030  ld   $30
              8afb fe00  bra  ac          ;+-----------------------------------+
              8afc fcfd  bra  $8afd       ;|                                   |
              8afd 1418  ld   $18,y       ;| Trampoline for page $8a00 lookups |
              8afe e006  jmp  y,$06       ;|                                   |
              8aff c218  st   [$18]       ;+-----------------------------------+
              8b00 0004  ld   $04
              8b01 00a5  ld   $a5
              8b02 0082  ld   $82
              8b03 00f0  ld   $f0
              8b04 000b  ld   $0b
              8b05 0020  ld   $20
              8b06 00c9  ld   $c9
              8b07 00e3  ld   $e3
              8b08 0024  ld   $24
              8b09 0078  ld   $78
              8b0a 0010  ld   $10
              8b0b 0004  ld   $04
              8b0c 0099  ld   $99
              8b0d 0000  ld   $00
              8b0e 0002  ld   $02
              8b0f 00c8  ld   $c8
              8b10 00ca  ld   $ca
              8b11 0010  ld   $10
              8b12 00c1  ld   $c1
              8b13 0060  ld   $60
              8b14 0001  ld   $01
              8b15 000a  ld   $0a
              8b16 0064  ld   $64
              8b17 00e8  ld   $e8
              8b18 0010  ld   $10
              8b19 0000  ld   $00
              8b1a 0000  ld   $00
              8b1b 0000  ld   $00
              8b1c 0003  ld   $03
              8b1d 0027  ld   $27
              8b1e 00a5  ld   $a5
              8b1f 00ca  ld   $ca
              8b20 0085  ld   $85
              8b21 0046  ld   $46
              8b22 00a5  ld   $a5
              8b23 00cb  ld   $cb
              8b24 0085  ld   $85
              8b25 0047  ld   $47
              8b26 00e8  ld   $e8
              8b27 00a5  ld   $a5
              8b28 0047  ld   $47
              8b29 0085  ld   $85
              8b2a 0045  ld   $45
              8b2b 00a5  ld   $a5
              8b2c 0046  ld   $46
              8b2d 0085  ld   $85
              8b2e 0044  ld   $44
              8b2f 00c5  ld   $c5
              8b30 004c  ld   $4c
              8b31 00a5  ld   $a5
              8b32 0045  ld   $45
              8b33 00e5  ld   $e5
              8b34 004d  ld   $4d
              8b35 00b0  ld   $b0
              8b36 0026  ld   $26
              8b37 00a0  ld   $a0
              8b38 0001  ld   $01
              8b39 00b1  ld   $b1
              8b3a 0044  ld   $44
              8b3b 00e5  ld   $e5
              8b3c 00ce  ld   $ce
              8b3d 00c8  ld   $c8
              8b3e 00b1  ld   $b1
              8b3f 0044  ld   $44
              8b40 00e5  ld   $e5
              8b41 00cf  ld   $cf
              8b42 00b0  ld   $b0
              8b43 0019  ld   $19
              8b44 00a0  ld   $a0
              8b45 0000  ld   $00
              8b46 00a5  ld   $a5
              8b47 0046  ld   $46
              8b48 0071  ld   $71
              8b49 0044  ld   $44
              8b4a 0085  ld   $85
              8b4b 0046  ld   $46
              8b4c 0090  ld   $90
              8b4d 0003  ld   $03
              8b4e 00e6  ld   $e6
              8b4f 0047  ld   $47
              8b50 0018  ld   $18
              8b51 00c8  ld   $c8
              8b52 00a5  ld   $a5
              8b53 00ce  ld   $ce
              8b54 00f1  ld   $f1
              8b55 0044  ld   $44
              8b56 00c8  ld   $c8
              8b57 00a5  ld   $a5
              8b58 00cf  ld   $cf
              8b59 00f1  ld   $f1
              8b5a 0044  ld   $44
              8b5b 00b0  ld   $b0
              8b5c 00ca  ld   $ca
              8b5d 0060  ld   $60
              8b5e 0046  ld   $46
              8b5f 0078  ld   $78
              8b60 00a5  ld   $a5
              8b61 004c  ld   $4c
              8b62 0085  ld   $85
              8b63 00ca  ld   $ca
              8b64 00a5  ld   $a5
              8b65 004d  ld   $4d
              8b66 0085  ld   $85
              8b67 00cb  ld   $cb
              8b68 00a5  ld   $a5
              8b69 004a  ld   $4a
              8b6a 0085  ld   $85
              8b6b 00cc  ld   $cc
              8b6c 00a5  ld   $a5
              8b6d 004b  ld   $4b
              8b6e 0085  ld   $85
              8b6f 00cd  ld   $cd
              8b70 00a9  ld   $a9
              8b71 0000  ld   $00
              8b72 0085  ld   $85
              8b73 0083  ld   $83
              8b74 0085  ld   $85
              8b75 0084  ld   $84
              8b76 0085  ld   $85
              8b77 0086  ld   $86
              8b78 00a9  ld   $a9
              8b79 0000  ld   $00
              8b7a 0085  ld   $85
              8b7b 001d  ld   $1d
              8b7c 0060  ld   $60
              8b7d 00a5  ld   $a5
              8b7e 00d0  ld   $d0
              8b7f 0069  ld   $69
              8b80 0005  ld   $05
              8b81 0085  ld   $85
              8b82 00d2  ld   $d2
              8b83 00a5  ld   $a5
              8b84 00d1  ld   $d1
              8b85 0069  ld   $69
              8b86 0000  ld   $00
              8b87 0085  ld   $85
              8b88 00d3  ld   $d3
              8b89 00a5  ld   $a5
              8b8a 00d2  ld   $d2
              8b8b 00c5  ld   $c5
              8b8c 00ca  ld   $ca
              8b8d 00a5  ld   $a5
              8b8e 00d3  ld   $d3
              8b8f 00e5  ld   $e5
              8b90 00cb  ld   $cb
              8b91 0090  ld   $90
              8b92 0003  ld   $03
              8b93 004c  ld   $4c
              8b94 006b  ld   $6b
              8b95 00e3  ld   $e3
              8b96 00a5  ld   $a5
              8b97 00ce  ld   $ce
              8b98 0091  ld   $91
              8b99 00d0  ld   $d0
              8b9a 00a5  ld   $a5
              8b9b 00cf  ld   $cf
              8b9c 00c8  ld   $c8
              8b9d 0091  ld   $91
              8b9e 00d0  ld   $d0
              8b9f 00a5  ld   $a5
              8ba0 00d2  ld   $d2
              8ba1 00c8  ld   $c8
              8ba2 0091  ld   $91
              8ba3 00d0  ld   $d0
              8ba4 00a5  ld   $a5
              8ba5 00d3  ld   $d3
              8ba6 00c8  ld   $c8
              8ba7 0091  ld   $91
              8ba8 00d0  ld   $d0
              8ba9 00a9  ld   $a9
              8baa 0000  ld   $00
              8bab 00c8  ld   $c8
              8bac 0091  ld   $91
              8bad 00d0  ld   $d0
              8bae 00c8  ld   $c8
              8baf 0091  ld   $91
              8bb0 00d0  ld   $d0
              8bb1 00e6  ld   $e6
              8bb2 0000  ld   $00
              8bb3 0000  ld   $00
              8bb4 00a5  ld   $a5
              8bb5 00d2  ld   $d2
              8bb6 0085  ld   $85
              8bb7 00cc  ld   $cc
              8bb8 00a5  ld   $a5
              8bb9 00d3  ld   $d3
              8bba 0085  ld   $85
              8bbb 00cd  ld   $cd
              8bbc 00a5  ld   $a5
              8bbd 00d0  ld   $d0
              8bbe 0090  ld   $90
              8bbf 0043  ld   $43
              8bc0 0085  ld   $85
              8bc1 00ce  ld   $ce
              8bc2 0084  ld   $84
              8bc3 00cf  ld   $cf
              8bc4 0020  ld   $20
              8bc5 00ff  ld   $ff
              8bc6 00e6  ld   $e6
              8bc7 0030  ld   $30
              8bc8 000e  ld   $0e
              8bc9 00c9  ld   $c9
              8bca 0040  ld   $40
              8bcb 00f0  ld   $f0
              8bcc 000a  ld   $0a
              8bcd 004c  ld   $4c
              8bce 0028  ld   $28
              8bcf 00e6  ld   $e6
              8bd0 0006  ld   $06
              8bd1 00c9  ld   $c9
              8bd2 0049  ld   $49
              8bd3 00d0  ld   $d0
              8bd4 0007  ld   $07
              8bd5 00a9  ld   $a9
              8bd6 0049  ld   $49
              8bd7 0085  ld   $85
              8bd8 00cf  ld   $cf
              8bd9 0020  ld   $20
              8bda 00ff  ld   $ff
              8bdb 00e6  ld   $e6
              8bdc 00a5  ld   $a5
              8bdd 004b  ld   $4b
              8bde 0085  ld   $85
              8bdf 00d1  ld   $d1
              8be0 00a5  ld   $a5
              8be1 004a  ld   $4a
              8be2 0085  ld   $85
              8be3 00d0  ld   $d0
              8be4 00c5  ld   $c5
              8be5 00cc  ld   $cc
              8be6 00a5  ld   $a5
              8be7 00d1  ld   $d1
              8be8 00e5  ld   $e5
              8be9 00cd  ld   $cd
              8bea 00b0  ld   $b0
              8beb 0094  ld   $94
              8bec 00b1  ld   $b1
              8bed 00d0  ld   $d0
              8bee 00c8  ld   $c8
              8bef 00c5  ld   $c5
              8bf0 00ce  ld   $ce
              8bf1 00d0  ld   $d0
              8bf2 0006  ld   $06
              8bf3 00b1  ld   $b1
              8bf4 00d0  ld   $d0
              8bf5 00c5  ld   $c5
              8bf6 00cf  ld   $cf
              8bf7 00f0  ld   $f0
              8bf8 000e  ld   $0e
              8bf9 00c8  ld   $c8
              8bfa 00b1  ld   $b1
              8bfb fe00  bra  ac          ;+-----------------------------------+
              8bfc fcfd  bra  $8bfd       ;|                                   |
              8bfd 1418  ld   $18,y       ;| Trampoline for page $8b00 lookups |
              8bfe e006  jmp  y,$06       ;|                                   |
              8bff c218  st   [$18]       ;+-----------------------------------+
              8c00 00d0  ld   $d0
              8c01 0048  ld   $48
              8c02 00c8  ld   $c8
              8c03 00b1  ld   $b1
              8c04 00d0  ld   $d0
              8c05 0085  ld   $85
              8c06 00d1  ld   $d1
              8c07 0068  ld   $68
              8c08 00a0  ld   $a0
              8c09 0000  ld   $00
              8c0a 00f0  ld   $f0
              8c0b 00db  ld   $db
              8c0c 00a5  ld   $a5
              8c0d 00d0  ld   $d0
              8c0e 0069  ld   $69
              8c0f 0003  ld   $03
              8c10 0020  ld   $20
              8c11 000a  ld   $0a
              8c12 00e7  ld   $e7
              8c13 00a5  ld   $a5
              8c14 00d1  ld   $d1
              8c15 0069  ld   $69
              8c16 0000  ld   $00
              8c17 0095  ld   $95
              8c18 0088  ld   $88
              8c19 00a5  ld   $a5
              8c1a 00cf  ld   $cf
              8c1b 00c9  ld   $c9
              8c1c 0040  ld   $40
              8c1d 00d0  ld   $d0
              8c1e 001c  ld   $1c
              8c1f 0088  ld   $88
              8c20 0098  ld   $98
              8c21 0020  ld   $20
              8c22 000a  ld   $0a
              8c23 00e7  ld   $e7
              8c24 0088  ld   $88
              8c25 0094  ld   $94
              8c26 0088  ld   $88
              8c27 00a0  ld   $a0
              8c28 0003  ld   $03
              8c29 00f6  ld   $f6
              8c2a 0088  ld   $88
              8c2b 00c8  ld   $c8
              8c2c 00b1  ld   $b1
              8c2d 00d0  ld   $d0
              8c2e 0030  ld   $30
              8c2f 00f9  ld   $f9
              8c30 0010  ld   $10
              8c31 0009  ld   $09
              8c32 00a9  ld   $a9
              8c33 0000  ld   $00
              8c34 0085  ld   $85
              8c35 00d4  ld   $d4
              8c36 0085  ld   $85
              8c37 00d5  ld   $d5
              8c38 00a2  ld   $a2
              8c39 0018  ld   $18
              8c3a 0048  ld   $48
              8c3b 00a0  ld   $a0
              8c3c 0000  ld   $00
              8c3d 00b1  ld   $b1
              8c3e 00de  ld   $de
              8c3f 0010  ld   $10
              8c40 0018  ld   $18
              8c41 000a  ld   $0a
              8c42 0030  ld   $30
              8c43 0081  ld   $81
              8c44 0020  ld   $20
              8c45 00ff  ld   $ff
              8c46 00e6  ld   $e6
              8c47 0020  ld   $20
              8c48 0008  ld   $08
              8c49 00e7  ld   $e7
              8c4a 0020  ld   $20
              8c4b 00ff  ld   $ff
              8c4c 00e6  ld   $e6
              8c4d 0095  ld   $95
              8c4e 00a8  ld   $a8
              8c4f 0024  ld   $24
              8c50 00d4  ld   $d4
              8c51 0010  ld   $10
              8c52 0001  ld   $01
              8c53 00ca  ld   $ca
              8c54 0020  ld   $20
              8c55 00ff  ld   $ff
              8c56 00e6  ld   $e6
              8c57 00b0  ld   $b0
              8c58 00e6  ld   $e6
              8c59 00c9  ld   $c9
              8c5a 0028  ld   $28
              8c5b 00d0  ld   $d0
              8c5c 001f  ld   $1f
              8c5d 00a5  ld   $a5
              8c5e 00de  ld   $de
              8c5f 0020  ld   $20
              8c60 000a  ld   $0a
              8c61 00e7  ld   $e7
              8c62 00a5  ld   $a5
              8c63 00df  ld   $df
              8c64 0095  ld   $95
              8c65 0088  ld   $88
              8c66 0024  ld   $24
              8c67 00d4  ld   $d4
              8c68 0030  ld   $30
              8c69 000b  ld   $0b
              8c6a 00a9  ld   $a9
              8c6b 0001  ld   $01
              8c6c 0020  ld   $20
              8c6d 000a  ld   $0a
              8c6e 00e7  ld   $e7
              8c6f 00a9  ld   $a9
              8c70 0000  ld   $00
              8c71 0095  ld   $95
              8c72 0088  ld   $88
              8c73 00f6  ld   $f6
              8c74 0088  ld   $88
              8c75 0020  ld   $20
              8c76 00ff  ld   $ff
              8c77 00e6  ld   $e6
              8c78 0030  ld   $30
              8c79 00f9  ld   $f9
              8c7a 00b0  ld   $b0
              8c7b 00d3  ld   $d3
              8c7c 0024  ld   $24
              8c7d 00d4  ld   $d4
              8c7e 0010  ld   $10
              8c7f 0006  ld   $06
              8c80 00c9  ld   $c9
              8c81 0004  ld   $04
              8c82 00b0  ld   $b0
              8c83 00d0  ld   $d0
              8c84 0046  ld   $46
              8c85 00d4  ld   $d4
              8c86 00a8  ld   $a8
              8c87 0085  ld   $85
              8c88 00d6  ld   $d6
              8c89 00b9  ld   $b9
              8c8a 0098  ld   $98
              8c8b 00e9  ld   $e9
              8c8c 0029  ld   $29
              8c8d 0055  ld   $55
              8c8e 000a  ld   $0a
              8c8f 0085  ld   $85
              8c90 00d7  ld   $d7
              8c91 0068  ld   $68
              8c92 00a8  ld   $a8
              8c93 00b9  ld   $b9
              8c94 0098  ld   $98
              8c95 00e9  ld   $e9
              8c96 0029  ld   $29
              8c97 00aa  ld   $aa
              8c98 00c5  ld   $c5
              8c99 00d7  ld   $d7
              8c9a 00b0  ld   $b0
              8c9b 0009  ld   $09
              8c9c 0098  ld   $98
              8c9d 0048  ld   $48
              8c9e 0020  ld   $20
              8c9f 00ff  ld   $ff
              8ca0 00e6  ld   $e6
              8ca1 00a5  ld   $a5
              8ca2 00d6  ld   $d6
              8ca3 0090  ld   $90
              8ca4 0095  ld   $95
              8ca5 00b9  ld   $b9
              8ca6 0010  ld   $10
              8ca7 00ea  ld   $ea
              8ca8 0085  ld   $85
              8ca9 00ce  ld   $ce
              8caa 00b9  ld   $b9
              8cab 0088  ld   $88
              8cac 00ea  ld   $ea
              8cad 0085  ld   $85
              8cae 00cf  ld   $cf
              8caf 0020  ld   $20
              8cb0 00fc  ld   $fc
              8cb1 00e6  ld   $e6
              8cb2 004c  ld   $4c
              8cb3 00d8  ld   $d8
              8cb4 00e6  ld   $e6
              8cb5 006c  ld   $6c
              8cb6 00ce  ld   $ce
              8cb7 0000  ld   $00
              8cb8 00e6  ld   $e6
              8cb9 00e7  ld   $e7
              8cba 0000  ld   $00
              8cbb 0000  ld   $00
              8cbc 00de  ld   $de
              8cbd 00d0  ld   $d0
              8cbe 0002  ld   $02
              8cbf 00e6  ld   $e6
              8cc0 00df  ld   $df
              8cc1 00b1  ld   $b1
              8cc2 00de  ld   $de
              8cc3 0060  ld   $60
              8cc4 0094  ld   $94
              8cc5 0087  ld   $87
              8cc6 00ca  ld   $ca
              8cc7 0030  ld   $30
              8cc8 0003  ld   $03
              8cc9 0095  ld   $95
              8cca 0050  ld   $50
              8ccb 0060  ld   $60
              8ccc 00a0  ld   $a0
              8ccd 0066  ld   $66
              8cce 004c  ld   $4c
              8ccf 00e0  ld   $e0
              8cd0 00e3  ld   $e3
              8cd1 00a0  ld   $a0
              8cd2 0000  ld   $00
              8cd3 00b5  ld   $b5
              8cd4 0050  ld   $50
              8cd5 0085  ld   $85
              8cd6 00ce  ld   $ce
              8cd7 00b5  ld   $b5
              8cd8 00a8  ld   $a8
              8cd9 0085  ld   $85
              8cda 00cf  ld   $cf
              8cdb 00b5  ld   $b5
              8cdc 0088  ld   $88
              8cdd 00f0  ld   $f0
              8cde 000e  ld   $0e
              8cdf 0085  ld   $85
              8ce0 00cf  ld   $cf
              8ce1 00b1  ld   $b1
              8ce2 00ce  ld   $ce
              8ce3 0048  ld   $48
              8ce4 00c8  ld   $c8
              8ce5 00b1  ld   $b1
              8ce6 00ce  ld   $ce
              8ce7 0085  ld   $85
              8ce8 00cf  ld   $cf
              8ce9 0068  ld   $68
              8cea 0085  ld   $85
              8ceb 00ce  ld   $ce
              8cec 0088  ld   $88
              8ced 00e8  ld   $e8
              8cee 0060  ld   $60
              8cef 0020  ld   $20
              8cf0 004a  ld   $4a
              8cf1 00e7  ld   $e7
              8cf2 0020  ld   $20
              8cf3 0015  ld   $15
              8cf4 00e7  ld   $e7
              8cf5 0098  ld   $98
              8cf6 0020  ld   $20
              8cf7 0008  ld   $08
              8cf8 00e7  ld   $e7
              8cf9 0095  ld   $95
              8cfa 00a8  ld   $a8
              8cfb fe00  bra  ac          ;+-----------------------------------+
              8cfc fcfd  bra  $8cfd       ;|                                   |
              8cfd 1418  ld   $18,y       ;| Trampoline for page $8c00 lookups |
              8cfe e006  jmp  y,$06       ;|                                   |
              8cff c218  st   [$18]       ;+-----------------------------------+
              8d00 00c5  ld   $c5
              8d01 00ce  ld   $ce
              8d02 00d0  ld   $d0
              8d03 0006  ld   $06
              8d04 00c5  ld   $c5
              8d05 00cf  ld   $cf
              8d06 00d0  ld   $d0
              8d07 0002  ld   $02
              8d08 00f6  ld   $f6
              8d09 0050  ld   $50
              8d0a 0060  ld   $60
              8d0b 0020  ld   $20
              8d0c 0082  ld   $82
              8d0d 00e7  ld   $e7
              8d0e 0020  ld   $20
              8d0f 0059  ld   $59
              8d10 00e7  ld   $e7
              8d11 0020  ld   $20
              8d12 0015  ld   $15
              8d13 00e7  ld   $e7
              8d14 0024  ld   $24
              8d15 00cf  ld   $cf
              8d16 0030  ld   $30
              8d17 001b  ld   $1b
              8d18 00ca  ld   $ca
              8d19 0060  ld   $60
              8d1a 0020  ld   $20
              8d1b 0015  ld   $15
              8d1c 00e7  ld   $e7
              8d1d 00a5  ld   $a5
              8d1e 00cf  ld   $cf
              8d1f 00d0  ld   $d0
              8d20 0004  ld   $04
              8d21 00a5  ld   $a5
              8d22 00ce  ld   $ce
              8d23 00f0  ld   $f0
              8d24 00f3  ld   $f3
              8d25 00a9  ld   $a9
              8d26 00ff  ld   $ff
              8d27 0020  ld   $20
              8d28 0008  ld   $08
              8d29 00e7  ld   $e7
              8d2a 0095  ld   $95
              8d2b 00a8  ld   $a8
              8d2c 0024  ld   $24
              8d2d 00cf  ld   $cf
              8d2e 0030  ld   $30
              8d2f 00e9  ld   $e9
              8d30 0020  ld   $20
              8d31 0015  ld   $15
              8d32 00e7  ld   $e7
              8d33 0098  ld   $98
              8d34 0038  ld   $38
              8d35 00e5  ld   $e5
              8d36 00ce  ld   $ce
              8d37 0020  ld   $20
              8d38 0008  ld   $08
              8d39 00e7  ld   $e7
              8d3a 0098  ld   $98
              8d3b 00e5  ld   $e5
              8d3c 00cf  ld   $cf
              8d3d 0050  ld   $50
              8d3e 0023  ld   $23
              8d3f 00a0  ld   $a0
              8d40 0000  ld   $00
              8d41 0010  ld   $10
              8d42 0090  ld   $90
              8d43 0020  ld   $20
              8d44 006f  ld   $6f
              8d45 00e7  ld   $e7
              8d46 0020  ld   $20
              8d47 0015  ld   $15
              8d48 00e7  ld   $e7
              8d49 00a5  ld   $a5
              8d4a 00ce  ld   $ce
              8d4b 0085  ld   $85
              8d4c 00da  ld   $da
              8d4d 00a5  ld   $a5
              8d4e 00cf  ld   $cf
              8d4f 0085  ld   $85
              8d50 00db  ld   $db
              8d51 0020  ld   $20
              8d52 0015  ld   $15
              8d53 00e7  ld   $e7
              8d54 0018  ld   $18
              8d55 00a5  ld   $a5
              8d56 00ce  ld   $ce
              8d57 0065  ld   $65
              8d58 00da  ld   $da
              8d59 0020  ld   $20
              8d5a 0008  ld   $08
              8d5b 00e7  ld   $e7
              8d5c 00a5  ld   $a5
              8d5d 00cf  ld   $cf
              8d5e 0065  ld   $65
              8d5f 00db  ld   $db
              8d60 0070  ld   $70
              8d61 00dd  ld   $dd
              8d62 0095  ld   $95
              8d63 00a8  ld   $a8
              8d64 0060  ld   $60
              8d65 0020  ld   $20
              8d66 0015  ld   $15
              8d67 00e7  ld   $e7
              8d68 00a4  ld   $a4
              8d69 00ce  ld   $ce
              8d6a 00f0  ld   $f0
              8d6b 0005  ld   $05
              8d6c 0088  ld   $88
              8d6d 00a5  ld   $a5
              8d6e 00cf  ld   $cf
              8d6f 00f0  ld   $f0
              8d70 000c  ld   $0c
              8d71 0060  ld   $60
              8d72 00a5  ld   $a5
              8d73 0081  ld   $81
              8d74 0009  ld   $09
              8d75 0007  ld   $07
              8d76 00a8  ld   $a8
              8d77 00c8  ld   $c8
              8d78 00a9  ld   $a9
              8d79 00a0  ld   $a0
              8d7a 0020  ld   $20
              8d7b 00c9  ld   $c9
              8d7c 00e3  ld   $e3
              8d7d 00c4  ld   $c4
              8d7e 0081  ld   $81
              8d7f 00b0  ld   $b0
              8d80 00f7  ld   $f7
              8d81 0060  ld   $60
              8d82 0020  ld   $20
              8d83 00b1  ld   $b1
              8d84 00e7  ld   $e7
              8d85 0020  ld   $20
              8d86 0015  ld   $15
              8d87 00e7  ld   $e7
              8d88 00a5  ld   $a5
              8d89 00cf  ld   $cf
              8d8a 0010  ld   $10
              8d8b 000a  ld   $0a
              8d8c 00a9  ld   $a9
              8d8d 00ad  ld   $ad
              8d8e 0020  ld   $20
              8d8f 00c9  ld   $c9
              8d90 00e3  ld   $e3
              8d91 0020  ld   $20
              8d92 0072  ld   $72
              8d93 00e7  ld   $e7
              8d94 0050  ld   $50
              8d95 00ef  ld   $ef
              8d96 0088  ld   $88
              8d97 0084  ld   $84
              8d98 00d5  ld   $d5
              8d99 0086  ld   $86
              8d9a 00cf  ld   $cf
              8d9b 00a6  ld   $a6
              8d9c 00ce  ld   $ce
              8d9d 0020  ld   $20
              8d9e 001b  ld   $1b
              8d9f 00e5  ld   $e5
              8da0 00a6  ld   $a6
              8da1 00cf  ld   $cf
              8da2 0060  ld   $60
              8da3 0020  ld   $20
              8da4 0015  ld   $15
              8da5 00e7  ld   $e7
              8da6 00a5  ld   $a5
              8da7 00ce  ld   $ce
              8da8 0085  ld   $85
              8da9 0076  ld   $76
              8daa 00a5  ld   $a5
              8dab 00cf  ld   $cf
              8dac 0085  ld   $85
              8dad 0077  ld   $77
              8dae 0088  ld   $88
              8daf 0084  ld   $84
              8db0 0078  ld   $78
              8db1 00c8  ld   $c8
              8db2 00a9  ld   $a9
              8db3 000a  ld   $0a
              8db4 0085  ld   $85
              8db5 0074  ld   $74
              8db6 0084  ld   $84
              8db7 0075  ld   $75
              8db8 0060  ld   $60
              8db9 0020  ld   $20
              8dba 0015  ld   $15
              8dbb 00e7  ld   $e7
              8dbc 00a5  ld   $a5
              8dbd 00ce  ld   $ce
              8dbe 00a4  ld   $a4
              8dbf 00cf  ld   $cf
              8dc0 0010  ld   $10
              8dc1 00e8  ld   $e8
              8dc2 0000  ld   $00
              8dc3 0000  ld   $00
              8dc4 00f2  ld   $f2
              8dc5 0020  ld   $20
              8dc6 0015  ld   $15
              8dc7 00e7  ld   $e7
              8dc8 00b5  ld   $b5
              8dc9 0050  ld   $50
              8dca 0085  ld   $85
              8dcb 00da  ld   $da
              8dcc 00b5  ld   $b5
              8dcd 0088  ld   $88
              8dce 0085  ld   $85
              8dcf 00db  ld   $db
              8dd0 00a5  ld   $a5
              8dd1 00ce  ld   $ce
              8dd2 0091  ld   $91
              8dd3 00da  ld   $da
              8dd4 00c8  ld   $c8
              8dd5 00a5  ld   $a5
              8dd6 00cf  ld   $cf
              8dd7 0091  ld   $91
              8dd8 00da  ld   $da
              8dd9 00e8  ld   $e8
              8dda 0060  ld   $60
              8ddb 0068  ld   $68
              8ddc 0068  ld   $68
              8ddd 0024  ld   $24
              8dde 00d5  ld   $d5
              8ddf 0010  ld   $10
              8de0 0005  ld   $05
              8de1 0020  ld   $20
              8de2 00cd  ld   $cd
              8de3 00e3  ld   $e3
              8de4 0046  ld   $46
              8de5 00d5  ld   $d5
              8de6 0060  ld   $60
              8de7 00a0  ld   $a0
              8de8 00ff  ld   $ff
              8de9 0084  ld   $84
              8dea 00d7  ld   $d7
              8deb 0060  ld   $60
              8dec 0020  ld   $20
              8ded 00cd  ld   $cd
              8dee 00ef  ld   $ef
              8def 00f0  ld   $f0
              8df0 0007  ld   $07
              8df1 00a9  ld   $a9
              8df2 0025  ld   $25
              8df3 0085  ld   $85
              8df4 00d6  ld   $d6
              8df5 0088  ld   $88
              8df6 0084  ld   $84
              8df7 00d4  ld   $d4
              8df8 00e8  ld   $e8
              8df9 0060  ld   $60
              8dfa 00a5  ld   $a5
              8dfb fe00  bra  ac          ;+-----------------------------------+
              8dfc fcfd  bra  $8dfd       ;|                                   |
              8dfd 1418  ld   $18,y       ;| Trampoline for page $8d00 lookups |
              8dfe e006  jmp  y,$06       ;|                                   |
              8dff c218  st   [$18]       ;+-----------------------------------+
              8e00 00ca  ld   $ca
              8e01 00a4  ld   $a4
              8e02 00cb  ld   $cb
              8e03 00d0  ld   $d0
              8e04 005a  ld   $5a
              8e05 00a0  ld   $a0
              8e06 0041  ld   $41
              8e07 00a5  ld   $a5
              8e08 0084  ld   $84
              8e09 00c9  ld   $c9
              8e0a 0008  ld   $08
              8e0b 00b0  ld   $b0
              8e0c 005e  ld   $5e
              8e0d 00a8  ld   $a8
              8e0e 00e6  ld   $e6
              8e0f 0084  ld   $84
              8e10 00a5  ld   $a5
              8e11 00de  ld   $de
              8e12 0099  ld   $99
              8e13 0000  ld   $00
              8e14 0011  ld   $11
              8e15 00a5  ld   $a5
              8e16 00df  ld   $df
              8e17 0099  ld   $99
              8e18 0008  ld   $08
              8e19 0011  ld   $11
              8e1a 00a5  ld   $a5
              8e1b 00dc  ld   $dc
              8e1c 0099  ld   $99
              8e1d 0010  ld   $10
              8e1e 0011  ld   $11
              8e1f 00a5  ld   $a5
              8e20 00dd  ld   $dd
              8e21 0099  ld   $99
              8e22 0018  ld   $18
              8e23 0011  ld   $11
              8e24 0020  ld   $20
              8e25 0015  ld   $15
              8e26 00e7  ld   $e7
              8e27 0020  ld   $20
              8e28 006d  ld   $6d
              8e29 00e5  ld   $e5
              8e2a 0090  ld   $90
              8e2b 0004  ld   $04
              8e2c 00a0  ld   $a0
              8e2d 0037  ld   $37
              8e2e 00d0  ld   $d0
              8e2f 003b  ld   $3b
              8e30 00a5  ld   $a5
              8e31 0044  ld   $44
              8e32 00a4  ld   $a4
              8e33 0045  ld   $45
              8e34 0085  ld   $85
              8e35 00dc  ld   $dc
              8e36 0084  ld   $84
              8e37 00dd  ld   $dd
              8e38 002c  ld   $2c
              8e39 0011  ld   $11
              8e3a 00d0  ld   $d0
              8e3b 0030  ld   $30
              8e3c 004f  ld   $4f
              8e3d 0018  ld   $18
              8e3e 0069  ld   $69
              8e3f 0003  ld   $03
              8e40 0090  ld   $90
              8e41 0001  ld   $01
              8e42 00c8  ld   $c8
              8e43 00a2  ld   $a2
              8e44 00ff  ld   $ff
              8e45 0086  ld   $86
              8e46 00d9  ld   $d9
              8e47 009a  ld   $9a
              8e48 0085  ld   $85
              8e49 00de  ld   $de
              8e4a 0084  ld   $84
              8e4b 00df  ld   $df
              8e4c 0020  ld   $20
              8e4d 0079  ld   $79
              8e4e 00e6  ld   $e6
              8e4f 0024  ld   $24
              8e50 00d9  ld   $d9
              8e51 0010  ld   $10
              8e52 0049  ld   $49
              8e53 0018  ld   $18
              8e54 00a0  ld   $a0
              8e55 0000  ld   $00
              8e56 00a5  ld   $a5
              8e57 00dc  ld   $dc
              8e58 0071  ld   $71
              8e59 00dc  ld   $dc
              8e5a 00a4  ld   $a4
              8e5b 00dd  ld   $dd
              8e5c 0090  ld   $90
              8e5d 0001  ld   $01
              8e5e 00c8  ld   $c8
              8e5f 00c5  ld   $c5
              8e60 004c  ld   $4c
              8e61 00d0  ld   $d0
              8e62 00d1  ld   $d1
              8e63 00c4  ld   $c4
              8e64 004d  ld   $4d
              8e65 00d0  ld   $d0
              8e66 00cd  ld   $cd
              8e67 00a0  ld   $a0
              8e68 0034  ld   $34
              8e69 0046  ld   $46
              8e6a 00d9  ld   $d9
              8e6b 004c  ld   $4c
              8e6c 00e0  ld   $e0
              8e6d 00e3  ld   $e3
              8e6e 00a0  ld   $a0
              8e6f 004a  ld   $4a
              8e70 00a5  ld   $a5
              8e71 0084  ld   $84
              8e72 00f0  ld   $f0
              8e73 00f7  ld   $f7
              8e74 00c6  ld   $c6
              8e75 0084  ld   $84
              8e76 00a8  ld   $a8
              8e77 00b9  ld   $b9
              8e78 000f  ld   $0f
              8e79 0011  ld   $11
              8e7a 0085  ld   $85
              8e7b 00dc  ld   $dc
              8e7c 00b9  ld   $b9
              8e7d 0017  ld   $17
              8e7e 0011  ld   $11
              8e7f 0085  ld   $85
              8e80 00dd  ld   $dd
              8e81 00be  ld   $be
              8e82 0087  ld   $87
              8e83 0000  ld   $00
              8e84 00b9  ld   $b9
              8e85 0007  ld   $07
              8e86 0011  ld   $11
              8e87 00a8  ld   $a8
              8e88 008a  ld   $8a
              8e89 004c  ld   $4c
              8e8a 007a  ld   $7a
              8e8b 00e8  ld   $e8
              8e8c 00a0  ld   $a0
              8e8d 0063  ld   $63
              8e8e 0020  ld   $20
              8e8f 00c4  ld   $c4
              8e90 00e3  ld   $e3
              8e91 00a0  ld   $a0
              8e92 0001  ld   $01
              8e93 00b1  ld   $b1
              8e94 00dc  ld   $dc
              8e95 00aa  ld   $aa
              8e96 00c8  ld   $c8
              8e97 00b1  ld   $b1
              8e98 00dc  ld   $dc
              8e99 0020  ld   $20
              8e9a 001b  ld   $1b
              8e9b 00e5  ld   $e5
              8e9c 004c  ld   $4c
              8e9d 00b3  ld   $b3
              8e9e 00e2  ld   $e2
              8e9f 00c6  ld   $c6
              8ea0 0083  ld   $83
              8ea1 00a0  ld   $a0
              8ea2 005b  ld   $5b
              8ea3 00a5  ld   $a5
              8ea4 0083  ld   $83
              8ea5 00f0  ld   $f0
              8ea6 00c4  ld   $c4
              8ea7 00a8  ld   $a8
              8ea8 00b5  ld   $b5
              8ea9 0050  ld   $50
              8eaa 00d9  ld   $d9
              8eab 00ff  ld   $ff
              8eac 0011  ld   $11
              8ead 00d0  ld   $d0
              8eae 00f0  ld   $f0
              8eaf 00b5  ld   $b5
              8eb0 0088  ld   $88
              8eb1 00d9  ld   $d9
              8eb2 0007  ld   $07
              8eb3 0012  ld   $12
              8eb4 00d0  ld   $d0
              8eb5 00e9  ld   $e9
              8eb6 00b9  ld   $b9
              8eb7 000f  ld   $0f
              8eb8 0012  ld   $12
              8eb9 0085  ld   $85
              8eba 00da  ld   $da
              8ebb 00b9  ld   $b9
              8ebc 0017  ld   $17
              8ebd 0012  ld   $12
              8ebe 0085  ld   $85
              8ebf 00db  ld   $db
              8ec0 0020  ld   $20
              8ec1 0015  ld   $15
              8ec2 00e7  ld   $e7
              8ec3 00ca  ld   $ca
              8ec4 0020  ld   $20
              8ec5 0093  ld   $93
              8ec6 00e7  ld   $e7
              8ec7 0020  ld   $20
              8ec8 0001  ld   $01
              8ec9 00e9  ld   $e9
              8eca 0000  ld   $00
              8ecb 0000  ld   $00
              8ecc 00e8  ld   $e8
              8ecd 00ca  ld   $ca
              8ece 00a4  ld   $a4
              8ecf 0083  ld   $83
              8ed0 00b9  ld   $b9
              8ed1 0047  ld   $47
              8ed2 0012  ld   $12
              8ed3 0095  ld   $95
              8ed4 00a7  ld   $a7
              8ed5 00b9  ld   $b9
              8ed6 003f  ld   $3f
              8ed7 0012  ld   $12
              8ed8 00a0  ld   $a0
              8ed9 0000  ld   $00
              8eda 0020  ld   $20
              8edb 0008  ld   $08
              8edc 00e7  ld   $e7
              8edd 0020  ld   $20
              8ede 0082  ld   $82
              8edf 00e7  ld   $e7
              8ee0 0020  ld   $20
              8ee1 0059  ld   $59
              8ee2 00e7  ld   $e7
              8ee3 0020  ld   $20
              8ee4 0015  ld   $15
              8ee5 00e7  ld   $e7
              8ee6 00a4  ld   $a4
              8ee7 0083  ld   $83
              8ee8 00a5  ld   $a5
              8ee9 00ce  ld   $ce
              8eea 00f0  ld   $f0
              8eeb 0005  ld   $05
              8eec 0059  ld   $59
              8eed 0017  ld   $17
              8eee 0012  ld   $12
              8eef 0010  ld   $10
              8ef0 0012  ld   $12
              8ef1 00b9  ld   $b9
              8ef2 001f  ld   $1f
              8ef3 0012  ld   $12
              8ef4 0085  ld   $85
              8ef5 00dc  ld   $dc
              8ef6 00b9  ld   $b9
              8ef7 0027  ld   $27
              8ef8 0012  ld   $12
              8ef9 0085  ld   $85
              8efa 00dd  ld   $dd
              8efb fe00  bra  ac          ;+-----------------------------------+
              8efc fcfd  bra  $8efd       ;|                                   |
              8efd 1418  ld   $18,y       ;| Trampoline for page $8e00 lookups |
              8efe e006  jmp  y,$06       ;|                                   |
              8eff c218  st   [$18]       ;+-----------------------------------+
              8f00 00be  ld   $be
              8f01 002f  ld   $2f
              8f02 0012  ld   $12
              8f03 00b9  ld   $b9
              8f04 0037  ld   $37
              8f05 0012  ld   $12
              8f06 00d0  ld   $d0
              8f07 0087  ld   $87
              8f08 00c6  ld   $c6
              8f09 0083  ld   $83
              8f0a 0060  ld   $60
              8f0b 00a0  ld   $a0
              8f0c 0054  ld   $54
              8f0d 00a5  ld   $a5
              8f0e 0083  ld   $83
              8f0f 00c9  ld   $c9
              8f10 0008  ld   $08
              8f11 00f0  ld   $f0
              8f12 009a  ld   $9a
              8f13 00e6  ld   $e6
              8f14 0083  ld   $83
              8f15 00a8  ld   $a8
              8f16 00b5  ld   $b5
              8f17 0050  ld   $50
              8f18 0099  ld   $99
              8f19 0000  ld   $00
              8f1a 0012  ld   $12
              8f1b 00b5  ld   $b5
              8f1c 0088  ld   $88
              8f1d 0099  ld   $99
              8f1e 0008  ld   $08
              8f1f 0012  ld   $12
              8f20 0060  ld   $60
              8f21 0020  ld   $20
              8f22 0015  ld   $15
              8f23 00e7  ld   $e7
              8f24 00a4  ld   $a4
              8f25 0083  ld   $83
              8f26 00a5  ld   $a5
              8f27 00ce  ld   $ce
              8f28 0099  ld   $99
              8f29 003f  ld   $3f
              8f2a 0012  ld   $12
              8f2b 00a5  ld   $a5
              8f2c 00cf  ld   $cf
              8f2d 0099  ld   $99
              8f2e 0047  ld   $47
              8f2f 0012  ld   $12
              8f30 00a9  ld   $a9
              8f31 0001  ld   $01
              8f32 0099  ld   $99
              8f33 000f  ld   $0f
              8f34 0012  ld   $12
              8f35 00a9  ld   $a9
              8f36 0000  ld   $00
              8f37 0099  ld   $99
              8f38 0017  ld   $17
              8f39 0012  ld   $12
              8f3a 00a5  ld   $a5
              8f3b 00dc  ld   $dc
              8f3c 0099  ld   $99
              8f3d 001f  ld   $1f
              8f3e 0012  ld   $12
              8f3f 00a5  ld   $a5
              8f40 00dd  ld   $dd
              8f41 0099  ld   $99
              8f42 0027  ld   $27
              8f43 0012  ld   $12
              8f44 00a5  ld   $a5
              8f45 00de  ld   $de
              8f46 0099  ld   $99
              8f47 002f  ld   $2f
              8f48 0012  ld   $12
              8f49 00a5  ld   $a5
              8f4a 00df  ld   $df
              8f4b 0099  ld   $99
              8f4c 0037  ld   $37
              8f4d 0012  ld   $12
              8f4e 0060  ld   $60
              8f4f 0020  ld   $20
              8f50 0015  ld   $15
              8f51 00e7  ld   $e7
              8f52 00a4  ld   $a4
              8f53 0083  ld   $83
              8f54 00a5  ld   $a5
              8f55 00ce  ld   $ce
              8f56 0099  ld   $99
              8f57 000f  ld   $0f
              8f58 0012  ld   $12
              8f59 00a5  ld   $a5
              8f5a 00cf  ld   $cf
              8f5b 004c  ld   $4c
              8f5c 0066  ld   $66
              8f5d 00e9  ld   $e9
              8f5e 0000  ld   $00
              8f5f 0000  ld   $00
              8f60 0000  ld   $00
              * 14 times
              8f6c 00ab  ld   $ab
              8f6d 0003  ld   $03
              8f6e 0003  ld   $03
              8f6f 0003  ld   $03
              * 14 times
              8f7b 003f  ld   $3f
              8f7c 003f  ld   $3f
              8f7d 00c0  ld   $c0
              8f7e 00c0  ld   $c0
              8f7f 003c  ld   $3c
              8f80 003c  ld   $3c
              8f81 003c  ld   $3c
              * 7 times
              8f86 0030  ld   $30
              8f87 000f  ld   $0f
              8f88 00c0  ld   $c0
              8f89 00cc  ld   $cc
              8f8a 00ff  ld   $ff
              8f8b 0055  ld   $55
              8f8c 0000  ld   $00
              8f8d 00ab  ld   $ab
              8f8e 00ab  ld   $ab
              8f8f 0003  ld   $03
              8f90 0003  ld   $03
              8f91 00ff  ld   $ff
              8f92 00ff  ld   $ff
              8f93 0055  ld   $55
              8f94 00ff  ld   $ff
              8f95 00ff  ld   $ff
              8f96 0055  ld   $55
              8f97 00cf  ld   $cf
              8f98 00cf  ld   $cf
              8f99 00cf  ld   $cf
              * 5 times
              8f9c 00ff  ld   $ff
              8f9d 0055  ld   $55
              8f9e 00c3  ld   $c3
              8f9f 00c3  ld   $c3
              8fa0 00c3  ld   $c3
              8fa1 0055  ld   $55
              8fa2 00f0  ld   $f0
              8fa3 00f0  ld   $f0
              8fa4 00cf  ld   $cf
              8fa5 0056  ld   $56
              8fa6 0056  ld   $56
              8fa7 0056  ld   $56
              8fa8 0055  ld   $55
              8fa9 00ff  ld   $ff
              8faa 00ff  ld   $ff
              8fab 0055  ld   $55
              8fac 0003  ld   $03
              8fad 0003  ld   $03
              8fae 0003  ld   $03
              * 7 times
              8fb3 00ff  ld   $ff
              8fb4 00ff  ld   $ff
              8fb5 00ff  ld   $ff
              8fb6 0003  ld   $03
              8fb7 0003  ld   $03
              8fb8 0003  ld   $03
              * 16 times
              8fc6 0000  ld   $00
              8fc7 00ab  ld   $ab
              8fc8 0003  ld   $03
              8fc9 0057  ld   $57
              8fca 0003  ld   $03
              8fcb 0003  ld   $03
              8fcc 0003  ld   $03
              8fcd 0003  ld   $03
              8fce 0007  ld   $07
              8fcf 0003  ld   $03
              8fd0 0003  ld   $03
              8fd1 00ea  ld   $ea
              8fd2 0000  ld   $00
              8fd3 0000  ld   $00
              8fd4 0003  ld   $03
              8fd5 0003  ld   $03
              8fd6 0003  ld   $03
              * 10 times
              8fde 00aa  ld   $aa
              8fdf 00ff  ld   $ff
              8fe0 00ff  ld   $ff
              8fe1 00ff  ld   $ff
              * 5 times
              8fe4 0017  ld   $17
              8fe5 00ff  ld   $ff
              8fe6 00ff  ld   $ff
              8fe7 0019  ld   $19
              8fe8 005d  ld   $5d
              8fe9 0035  ld   $35
              8fea 004b  ld   $4b
              8feb 00f2  ld   $f2
              8fec 00ec  ld   $ec
              8fed 0087  ld   $87
              8fee 006f  ld   $6f
              8fef 00ad  ld   $ad
              8ff0 00b7  ld   $b7
              8ff1 00e2  ld   $e2
              8ff2 00f8  ld   $f8
              8ff3 0054  ld   $54
              8ff4 0080  ld   $80
              8ff5 0096  ld   $96
              8ff6 0085  ld   $85
              8ff7 0082  ld   $82
              8ff8 0022  ld   $22
              8ff9 0010  ld   $10
              8ffa 0033  ld   $33
              8ffb fe00  bra  ac          ;+-----------------------------------+
              8ffc fcfd  bra  $8ffd       ;|                                   |
              8ffd 1418  ld   $18,y       ;| Trampoline for page $8f00 lookups |
              8ffe e006  jmp  y,$06       ;|                                   |
              8fff c218  st   [$18]       ;+-----------------------------------+
              9000 004a  ld   $4a
              9001 0013  ld   $13
              9002 0006  ld   $06
              9003 000b  ld   $0b
              9004 004a  ld   $4a
              9005 0001  ld   $01
              9006 0040  ld   $40
              9007 0047  ld   $47
              9008 007a  ld   $7a
              9009 0000  ld   $00
              900a 00ff  ld   $ff
              900b 0023  ld   $23
              900c 0009  ld   $09
              900d 005b  ld   $5b
              900e 0016  ld   $16
              900f 00b6  ld   $b6
              9010 00cb  ld   $cb
              9011 00ff  ld   $ff
              9012 00ff  ld   $ff
              9013 00fb  ld   $fb
              9014 00ff  ld   $ff
              9015 00ff  ld   $ff
              9016 0024  ld   $24
              9017 00f6  ld   $f6
              9018 004e  ld   $4e
              9019 0059  ld   $59
              901a 0050  ld   $50
              901b 0000  ld   $00
              901c 00ff  ld   $ff
              901d 0023  ld   $23
              901e 00a3  ld   $a3
              901f 006f  ld   $6f
              9020 0036  ld   $36
              9021 0023  ld   $23
              9022 00d7  ld   $d7
              9023 001c  ld   $1c
              9024 0022  ld   $22
              9025 00c2  ld   $c2
              9026 00ae  ld   $ae
              9027 00ba  ld   $ba
              9028 0023  ld   $23
              9029 00ff  ld   $ff
              902a 00ff  ld   $ff
              902b 0021  ld   $21
              902c 0030  ld   $30
              902d 001e  ld   $1e
              902e 0003  ld   $03
              902f 00c4  ld   $c4
              9030 0020  ld   $20
              9031 0000  ld   $00
              9032 00c1  ld   $c1
              9033 00ff  ld   $ff
              9034 00ff  ld   $ff
              9035 00ff  ld   $ff
              9036 00a0  ld   $a0
              9037 0030  ld   $30
              9038 001e  ld   $1e
              9039 00a4  ld   $a4
              903a 00d3  ld   $d3
              903b 00b6  ld   $b6
              903c 00bc  ld   $bc
              903d 00aa  ld   $aa
              903e 003a  ld   $3a
              903f 0001  ld   $01
              9040 0050  ld   $50
              9041 007e  ld   $7e
              9042 00d8  ld   $d8
              9043 00d8  ld   $d8
              9044 00a5  ld   $a5
              9045 003c  ld   $3c
              9046 00ff  ld   $ff
              9047 0016  ld   $16
              9048 005b  ld   $5b
              9049 0028  ld   $28
              904a 0003  ld   $03
              904b 00c4  ld   $c4
              904c 001d  ld   $1d
              904d 0000  ld   $00
              904e 000c  ld   $0c
              904f 004e  ld   $4e
              9050 0000  ld   $00
              9051 003e  ld   $3e
              9052 0000  ld   $00
              9053 00a6  ld   $a6
              9054 00b0  ld   $b0
              9055 0000  ld   $00
              9056 00bc  ld   $bc
              9057 00c6  ld   $c6
              9058 0057  ld   $57
              9059 008c  ld   $8c
              905a 0001  ld   $01
              905b 0027  ld   $27
              905c 00ff  ld   $ff
              905d 00ff  ld   $ff
              905e 00ff  ld   $ff
              * 5 times
              9061 00e8  ld   $e8
              9062 00ff  ld   $ff
              9063 00ff  ld   $ff
              9064 00e8  ld   $e8
              9065 00e0  ld   $e0
              9066 00e0  ld   $e0
              9067 00e0  ld   $e0
              9068 00ef  ld   $ef
              9069 00ef  ld   $ef
              906a 00e3  ld   $e3
              906b 00e3  ld   $e3
              906c 00e5  ld   $e5
              906d 00e5  ld   $e5
              906e 00e7  ld   $e7
              906f 00e7  ld   $e7
              9070 00ee  ld   $ee
              9071 00ef  ld   $ef
              9072 00ef  ld   $ef
              9073 00e7  ld   $e7
              9074 00e7  ld   $e7
              9075 00e2  ld   $e2
              9076 00ef  ld   $ef
              9077 00e7  ld   $e7
              9078 00e7  ld   $e7
              9079 00ec  ld   $ec
              907a 00ec  ld   $ec
              907b 00ec  ld   $ec
              907c 00e7  ld   $e7
              907d 00ec  ld   $ec
              907e 00ec  ld   $ec
              907f 00ec  ld   $ec
              9080 00e2  ld   $e2
              9081 0000  ld   $00
              9082 00ff  ld   $ff
              9083 00e8  ld   $e8
              9084 00e1  ld   $e1
              9085 00e8  ld   $e8
              9086 00e8  ld   $e8
              9087 00ef  ld   $ef
              9088 00eb  ld   $eb
              9089 00ff  ld   $ff
              908a 00ff  ld   $ff
              908b 00e0  ld   $e0
              908c 00ff  ld   $ff
              908d 00ff  ld   $ff
              908e 00ef  ld   $ef
              908f 00ee  ld   $ee
              9090 00ef  ld   $ef
              9091 00e7  ld   $e7
              9092 00e7  ld   $e7
              9093 0000  ld   $00
              9094 00ff  ld   $ff
              9095 00e8  ld   $e8
              9096 00e7  ld   $e7
              9097 00e7  ld   $e7
              9098 00e7  ld   $e7
              9099 00e8  ld   $e8
              909a 00e1  ld   $e1
              909b 00e2  ld   $e2
              909c 00ee  ld   $ee
              909d 00ee  ld   $ee
              909e 00ee  ld   $ee
              909f 00ee  ld   $ee
              90a0 00e8  ld   $e8
              90a1 00ff  ld   $ff
              90a2 00ff  ld   $ff
              90a3 00e1  ld   $e1
              90a4 00e1  ld   $e1
              90a5 00ef  ld   $ef
              90a6 00ee  ld   $ee
              90a7 00e7  ld   $e7
              90a8 00e8  ld   $e8
              90a9 00ee  ld   $ee
              90aa 00e7  ld   $e7
              90ab 00ff  ld   $ff
              90ac 00ff  ld   $ff
              90ad 00ff  ld   $ff
              90ae 00ee  ld   $ee
              90af 00e1  ld   $e1
              90b0 00ef  ld   $ef
              90b1 00e7  ld   $e7
              90b2 00e8  ld   $e8
              90b3 00ef  ld   $ef
              90b4 00ef  ld   $ef
              90b5 00eb  ld   $eb
              90b6 00e9  ld   $e9
              90b7 00e8  ld   $e8
              90b8 00e9  ld   $e9
              90b9 00e9  ld   $e9
              90ba 00e8  ld   $e8
              90bb 00e8  ld   $e8
              90bc 00e8  ld   $e8
              90bd 00e8  ld   $e8
              90be 00ff  ld   $ff
              90bf 00e8  ld   $e8
              90c0 00e8  ld   $e8
              90c1 00e8  ld   $e8
              90c2 00ee  ld   $ee
              90c3 00e7  ld   $e7
              90c4 00e8  ld   $e8
              90c5 00ef  ld   $ef
              90c6 00ef  ld   $ef
              90c7 00ee  ld   $ee
              90c8 00ef  ld   $ef
              90c9 00ee  ld   $ee
              90ca 00ef  ld   $ef
              90cb 00ee  ld   $ee
              90cc 00ee  ld   $ee
              90cd 00ef  ld   $ef
              90ce 00ee  ld   $ee
              90cf 00ee  ld   $ee
              90d0 00ee  ld   $ee
              90d1 00e1  ld   $e1
              90d2 00e8  ld   $e8
              90d3 00e8  ld   $e8
              90d4 00ff  ld   $ff
              90d5 00ff  ld   $ff
              90d6 00ff  ld   $ff
              * 5 times
              90d9 00eb  ld   $eb
              90da 0000  ld   $00
              90db 0000  ld   $00
              90dc 00be  ld   $be
              90dd 00b3  ld   $b3
              90de 00b2  ld   $b2
              90df 00b7  ld   $b7
              90e0 00b6  ld   $b6
              90e1 0037  ld   $37
              90e2 00d4  ld   $d4
              90e3 00cf  ld   $cf
              90e4 00cf  ld   $cf
              90e5 00a0  ld   $a0
              90e6 00cc  ld   $cc
              90e7 00cf  ld   $cf
              90e8 00ce  ld   $ce
              90e9 0047  ld   $47
              90ea 00d3  ld   $d3
              90eb 00d9  ld   $d9
              90ec 00ce  ld   $ce
              90ed 00d4  ld   $d4
              90ee 00c1  ld   $c1
              90ef 0058  ld   $58
              90f0 00cd  ld   $cd
              90f1 00c5  ld   $c5
              90f2 00cd  ld   $cd
              90f3 00a0  ld   $a0
              90f4 00c6  ld   $c6
              90f5 00d5  ld   $d5
              90f6 00cc  ld   $cc
              90f7 004c  ld   $4c
              90f8 00d4  ld   $d4
              90f9 00cf  ld   $cf
              90fa 00cf  ld   $cf
              90fb fe00  bra  ac          ;+-----------------------------------+
              90fc fcfd  bra  $90fd       ;|                                   |
              90fd 1418  ld   $18,y       ;| Trampoline for page $9000 lookups |
              90fe e006  jmp  y,$06       ;|                                   |
              90ff c218  st   [$18]       ;+-----------------------------------+
              9100 00a0  ld   $a0
              9101 00cd  ld   $cd
              9102 00c1  ld   $c1
              9103 00ce  ld   $ce
              9104 00d9  ld   $d9
              9105 00a0  ld   $a0
              9106 00d0  ld   $d0
              9107 00c1  ld   $c1
              9108 00d2  ld   $d2
              9109 00c5  ld   $c5
              910a 00ce  ld   $ce
              910b 0053  ld   $53
              910c 00d3  ld   $d3
              910d 00d4  ld   $d4
              910e 00d2  ld   $d2
              910f 00c9  ld   $c9
              9110 00ce  ld   $ce
              9111 0047  ld   $47
              9112 00ce  ld   $ce
              9113 00cf  ld   $cf
              9114 00a0  ld   $a0
              9115 00c5  ld   $c5
              9116 00ce  ld   $ce
              9117 0044  ld   $44
              9118 00c2  ld   $c2
              9119 00c1  ld   $c1
              911a 00c4  ld   $c4
              911b 00a0  ld   $a0
              911c 00c2  ld   $c2
              911d 00d2  ld   $d2
              911e 00c1  ld   $c1
              911f 00ce  ld   $ce
              9120 00c3  ld   $c3
              9121 0048  ld   $48
              9122 00be  ld   $be
              9123 00b8  ld   $b8
              9124 00a0  ld   $a0
              9125 00c7  ld   $c7
              9126 00cf  ld   $cf
              9127 00d3  ld   $d3
              9128 00d5  ld   $d5
              9129 00c2  ld   $c2
              912a 0053  ld   $53
              912b 00c2  ld   $c2
              912c 00c1  ld   $c1
              912d 00c4  ld   $c4
              912e 00a0  ld   $a0
              912f 00d2  ld   $d2
              9130 00c5  ld   $c5
              9131 00d4  ld   $d4
              9132 00d5  ld   $d5
              9133 00d2  ld   $d2
              9134 004e  ld   $4e
              9135 00be  ld   $be
              9136 00b8  ld   $b8
              9137 00a0  ld   $a0
              9138 00c6  ld   $c6
              9139 00cf  ld   $cf
              913a 00d2  ld   $d2
              913b 0053  ld   $53
              913c 00c2  ld   $c2
              913d 00c1  ld   $c1
              913e 00c4  ld   $c4
              913f 00a0  ld   $a0
              9140 00ce  ld   $ce
              9141 00c5  ld   $c5
              9142 00d8  ld   $d8
              9143 0054  ld   $54
              9144 00d3  ld   $d3
              9145 00d4  ld   $d4
              9146 00cf  ld   $cf
              9147 00d0  ld   $d0
              9148 00d0  ld   $d0
              9149 00c5  ld   $c5
              914a 00c4  ld   $c4
              914b 00a0  ld   $a0
              914c 00c1  ld   $c1
              914d 00d4  ld   $d4
              914e 0020  ld   $20
              914f 00aa  ld   $aa
              9150 00aa  ld   $aa
              9151 00aa  ld   $aa
              9152 0020  ld   $20
              9153 00a0  ld   $a0
              9154 00c5  ld   $c5
              9155 00d2  ld   $d2
              9156 00d2  ld   $d2
              9157 000d  ld   $0d
              9158 00be  ld   $be
              9159 00b2  ld   $b2
              915a 00b5  ld   $b5
              915b 0035  ld   $35
              915c 00d2  ld   $d2
              915d 00c1  ld   $c1
              915e 00ce  ld   $ce
              915f 00c7  ld   $c7
              9160 0045  ld   $45
              9161 00c4  ld   $c4
              9162 00c9  ld   $c9
              9163 004d  ld   $4d
              9164 00d3  ld   $d3
              9165 00d4  ld   $d4
              9166 00d2  ld   $d2
              9167 00a0  ld   $a0
              9168 00cf  ld   $cf
              9169 00d6  ld   $d6
              916a 00c6  ld   $c6
              916b 004c  ld   $4c
              916c 00dc  ld   $dc
              916d 000d  ld   $0d
              916e 00d2  ld   $d2
              916f 00c5  ld   $c5
              9170 00d4  ld   $d4
              9171 00d9  ld   $d9
              9172 00d0  ld   $d0
              9173 00c5  ld   $c5
              9174 00a0  ld   $a0
              9175 00cc  ld   $cc
              9176 00c9  ld   $c9
              9177 00ce  ld   $ce
              9178 00c5  ld   $c5
              9179 008d  ld   $8d
              917a 003f  ld   $3f
              917b 0046  ld   $46
              917c 00d9  ld   $d9
              917d 0090  ld   $90
              917e 0003  ld   $03
              917f 004c  ld   $4c
              9180 00c3  ld   $c3
              9181 00e8  ld   $e8
              9182 00a6  ld   $a6
              9183 00cf  ld   $cf
              9184 009a  ld   $9a
              9185 00a6  ld   $a6
              9186 00ce  ld   $ce
              9187 00a0  ld   $a0
              9188 008d  ld   $8d
              9189 00d0  ld   $d0
              918a 0002  ld   $02
              918b 00a0  ld   $a0
              918c 0099  ld   $99
              918d 0020  ld   $20
              918e 00c4  ld   $c4
              918f 00e3  ld   $e3
              9190 0086  ld   $86
              9191 00ce  ld   $ce
              9192 00ba  ld   $ba
              9193 0086  ld   $86
              9194 00cf  ld   $cf
              9195 00a0  ld   $a0
              9196 00fe  ld   $fe
              9197 0084  ld   $84
              9198 00d9  ld   $d9
              9199 00c8  ld   $c8
              919a 0084  ld   $84
              919b 00c8  ld   $c8
              919c 0020  ld   $20
              919d 0099  ld   $99
              919e 00e2  ld   $e2
              919f 0084  ld   $84
              91a0 00e9  ld   $e9
              91a1 00a2  ld   $a2
              91a2 0018  ld   $18
              91a3 00a9  ld   $a9
              91a4 0030  ld   $30
              91a5 0020  ld   $20
              91a6 0091  ld   $91
              91a7 00e4  ld   $e4
              91a8 00e6  ld   $e6
              91a9 00d9  ld   $d9
              91aa 00a6  ld   $a6
              91ab 00ce  ld   $ce
              91ac 00a4  ld   $a4
              91ad 00c8  ld   $c8
              91ae 000a  ld   $0a
              91af 0085  ld   $85
              91b0 00ce  ld   $ce
              91b1 00c8  ld   $c8
              91b2 00b9  ld   $b9
              91b3 0000  ld   $00
              91b4 0002  ld   $02
              91b5 00c9  ld   $c9
              91b6 0074  ld   $74
              91b7 00f0  ld   $f0
              91b8 00d2  ld   $d2
              91b9 0049  ld   $49
              91ba 00b0  ld   $b0
              91bb 00c9  ld   $c9
              91bc 000a  ld   $0a
              91bd 00b0  ld   $b0
              91be 00f0  ld   $f0
              91bf 00c8  ld   $c8
              91c0 00c8  ld   $c8
              91c1 0084  ld   $84
              91c2 00c8  ld   $c8
              91c3 00b9  ld   $b9
              91c4 0000  ld   $00
              91c5 0002  ld   $02
              91c6 0048  ld   $48
              91c7 00b9  ld   $b9
              91c8 00ff  ld   $ff
              91c9 0001  ld   $01
              91ca 00a0  ld   $a0
              91cb 0000  ld   $00
              91cc 0020  ld   $20
              91cd 0008  ld   $08
              91ce 00e7  ld   $e7
              91cf 0068  ld   $68
              91d0 0095  ld   $95
              91d1 00a8  ld   $a8
              91d2 00a5  ld   $a5
              91d3 00ce  ld   $ce
              91d4 00c9  ld   $c9
              91d5 00c7  ld   $c7
              91d6 00d0  ld   $d0
              91d7 0003  ld   $03
              91d8 0020  ld   $20
              91d9 006f  ld   $6f
              91da 00e7  ld   $e7
              91db 004c  ld   $4c
              91dc 0001  ld   $01
              91dd 00e8  ld   $e8
              91de 00ff  ld   $ff
              91df 00ff  ld   $ff
              91e0 00ff  ld   $ff
              91e1 00ec  ld   $ec
              91e2 0000  ld   $00
              91e3 0000  ld   $00
              91e4 0050  ld   $50
              91e5 0020  ld   $20
              91e6 0013  ld   $13
              91e7 00ec  ld   $ec
              91e8 00d0  ld   $d0
              91e9 0015  ld   $15
              91ea 0020  ld   $20
              91eb 000b  ld   $0b
              91ec 00ec  ld   $ec
              91ed 00d0  ld   $d0
              91ee 0010  ld   $10
              91ef 0020  ld   $20
              91f0 0082  ld   $82
              91f1 00e7  ld   $e7
              91f2 0020  ld   $20
              91f3 006f  ld   $6f
              91f4 00e7  ld   $e7
              91f5 0050  ld   $50
              91f6 0003  ld   $03
              91f7 0020  ld   $20
              91f8 0082  ld   $82
              91f9 00e7  ld   $e7
              91fa 0020  ld   $20
              91fb fe00  bra  ac          ;+-----------------------------------+
              91fc fcfd  bra  $91fd       ;|                                   |
              91fd 1418  ld   $18,y       ;| Trampoline for page $9100 lookups |
              91fe e006  jmp  y,$06       ;|                                   |
              91ff c218  st   [$18]       ;+-----------------------------------+
              9200 0059  ld   $59
              9201 00e7  ld   $e7
              9202 0056  ld   $56
              9203 0050  ld   $50
              9204 004c  ld   $4c
              9205 0036  ld   $36
              9206 00e7  ld   $e7
              9207 00ff  ld   $ff
              9208 00ff  ld   $ff
              9209 00c1  ld   $c1
              920a 00ff  ld   $ff
              920b 007f  ld   $7f
              920c 00d1  ld   $d1
              920d 00cc  ld   $cc
              920e 00c7  ld   $c7
              920f 00cf  ld   $cf
              9210 00ce  ld   $ce
              9211 00c5  ld   $c5
              9212 009a  ld   $9a
              9213 0098  ld   $98
              9214 008b  ld   $8b
              9215 0096  ld   $96
              9216 0095  ld   $95
              9217 0093  ld   $93
              9218 00bf  ld   $bf
              9219 00b2  ld   $b2
              921a 0032  ld   $32
              921b 002d  ld   $2d
              921c 002b  ld   $2b
              921d 00bc  ld   $bc
              921e 00b0  ld   $b0
              921f 00ac  ld   $ac
              9220 00be  ld   $be
              9221 0035  ld   $35
              9222 008e  ld   $8e
              9223 0061  ld   $61
              9224 00ff  ld   $ff
              9225 00ff  ld   $ff
              9226 00ff  ld   $ff
              9227 00dd  ld   $dd
              9228 00fb  ld   $fb
              9229 0020  ld   $20
              922a 00c9  ld   $c9
              922b 00ef  ld   $ef
              922c 0015  ld   $15
              922d 004f  ld   $4f
              922e 0010  ld   $10
              922f 0005  ld   $05
              9230 0020  ld   $20
              9231 00c9  ld   $c9
              9232 00ef  ld   $ef
              9233 0035  ld   $35
              9234 004f  ld   $4f
              9235 0095  ld   $95
              9236 0050  ld   $50
              9237 0010  ld   $10
              9238 00cb  ld   $cb
              9239 004c  ld   $4c
              923a 00c9  ld   $c9
              923b 00ef  ld   $ef
              923c 0040  ld   $40
              923d 0060  ld   $60
              923e 008d  ld   $8d
              923f 0060  ld   $60
              9240 008b  ld   $8b
              9241 0000  ld   $00
              9242 007e  ld   $7e
              9243 008c  ld   $8c
              9244 0033  ld   $33
              9245 0000  ld   $00
              9246 0000  ld   $00
              9247 0060  ld   $60
              9248 0003  ld   $03
              9249 00bf  ld   $bf
              924a 0012  ld   $12
              924b 0000  ld   $00
              924c 0040  ld   $40
              924d 0089  ld   $89
              924e 00c9  ld   $c9
              924f 0047  ld   $47
              9250 009d  ld   $9d
              9251 0017  ld   $17
              9252 0068  ld   $68
              9253 009d  ld   $9d
              9254 000a  ld   $0a
              9255 0000  ld   $00
              9256 0040  ld   $40
              9257 0060  ld   $60
              9258 008d  ld   $8d
              9259 0060  ld   $60
              925a 008b  ld   $8b
              925b 0000  ld   $00
              925c 007e  ld   $7e
              925d 008c  ld   $8c
              925e 003c  ld   $3c
              925f 0000  ld   $00
              9260 0000  ld   $00
              9261 0060  ld   $60
              9262 0003  ld   $03
              9263 00bf  ld   $bf
              9264 001b  ld   $1b
              9265 004b  ld   $4b
              9266 0067  ld   $67
              9267 00b4  ld   $b4
              9268 00a1  ld   $a1
              9269 0007  ld   $07
              926a 008c  ld   $8c
              926b 0007  ld   $07
              926c 00ae  ld   $ae
              926d 00a9  ld   $a9
              926e 00ac  ld   $ac
              926f 00a8  ld   $a8
              9270 0067  ld   $67
              9271 008c  ld   $8c
              9272 0007  ld   $07
              9273 00b4  ld   $b4
              9274 00af  ld   $af
              9275 00ac  ld   $ac
              9276 00b0  ld   $b0
              9277 0067  ld   $67
              9278 009d  ld   $9d
              9279 00b2  ld   $b2
              927a 00af  ld   $af
              927b 00ac  ld   $ac
              927c 00af  ld   $af
              927d 00a3  ld   $a3
              927e 0067  ld   $67
              927f 008c  ld   $8c
              9280 0007  ld   $07
              9281 00a5  ld   $a5
              9282 00ab  ld   $ab
              9283 00af  ld   $af
              9284 00b0  ld   $b0
              9285 00f4  ld   $f4
              9286 00ae  ld   $ae
              9287 00a9  ld   $a9
              9288 00b2  ld   $b2
              9289 00b0  ld   $b0
              928a 007f  ld   $7f
              928b 000e  ld   $0e
              928c 0027  ld   $27
              928d 00b4  ld   $b4
              928e 00ae  ld   $ae
              928f 00a9  ld   $a9
              9290 00b2  ld   $b2
              9291 00b0  ld   $b0
              9292 007f  ld   $7f
              9293 000e  ld   $0e
              9294 0028  ld   $28
              9295 00b4  ld   $b4
              9296 00ae  ld   $ae
              9297 00a9  ld   $a9
              9298 00b2  ld   $b2
              9299 00b0  ld   $b0
              929a 0064  ld   $64
              929b 0007  ld   $07
              929c 00a6  ld   $a6
              929d 00a9  ld   $a9
              929e 0067  ld   $67
              929f 00af  ld   $af
              92a0 00b4  ld   $b4
              92a1 00af  ld   $af
              92a2 00a7  ld   $a7
              92a3 0078  ld   $78
              92a4 00b4  ld   $b4
              92a5 00a5  ld   $a5
              92a6 00ac  ld   $ac
              92a7 0078  ld   $78
              92a8 007f  ld   $7f
              92a9 0002  ld   $02
              92aa 00ad  ld   $ad
              92ab 00a5  ld   $a5
              92ac 00b2  ld   $b2
              92ad 0067  ld   $67
              92ae 00a2  ld   $a2
              92af 00b5  ld   $b5
              92b0 00b3  ld   $b3
              92b1 00af  ld   $af
              92b2 00a7  ld   $a7
              92b3 00ee  ld   $ee
              92b4 00b2  ld   $b2
              92b5 00b5  ld   $b5
              92b6 00b4  ld   $b4
              92b7 00a5  ld   $a5
              92b8 00b2  ld   $b2
              92b9 007e  ld   $7e
              92ba 008c  ld   $8c
              92bb 0039  ld   $39
              92bc 00b4  ld   $b4
              92bd 00b8  ld   $b8
              92be 00a5  ld   $a5
              92bf 00ae  ld   $ae
              92c0 0067  ld   $67
              92c1 00b0  ld   $b0
              92c2 00a5  ld   $a5
              92c3 00b4  ld   $b4
              92c4 00b3  ld   $b3
              92c5 0027  ld   $27
              92c6 00af  ld   $af
              92c7 00b4  ld   $b4
              92c8 0007  ld   $07
              92c9 009d  ld   $9d
              92ca 0019  ld   $19
              92cb 00b2  ld   $b2
              92cc 00af  ld   $af
              92cd 00a6  ld   $a6
              92ce 007f  ld   $7f
              92cf 0005  ld   $05
              92d0 0037  ld   $37
              92d1 00b4  ld   $b4
              92d2 00b5  ld   $b5
              92d3 00b0  ld   $b0
              92d4 00ae  ld   $ae
              92d5 00a9  ld   $a9
              92d6 007f  ld   $7f
              92d7 0005  ld   $05
              92d8 0028  ld   $28
              92d9 00b4  ld   $b4
              92da 00b5  ld   $b5
              92db 00b0  ld   $b0
              92dc 00ae  ld   $ae
              92dd 00a9  ld   $a9
              92de 007f  ld   $7f
              92df 0005  ld   $05
              92e0 002a  ld   $2a
              92e1 00b4  ld   $b4
              92e2 00b5  ld   $b5
              92e3 00b0  ld   $b0
              92e4 00ae  ld   $ae
              92e5 00a9  ld   $a9
              92e6 00e4  ld   $e4
              92e7 00ae  ld   $ae
              92e8 00a5  ld   $a5
              92e9 00ed  ld   $ed
              92ea 0000  ld   $00
              92eb 0000  ld   $00
              92ec 0000  ld   $00
              92ed 00ff  ld   $ff
              92ee 00ff  ld   $ff
              92ef 0047  ld   $47
              92f0 00a2  ld   $a2
              92f1 00a1  ld   $a1
              92f2 00b4  ld   $b4
              92f3 007f  ld   $7f
              92f4 000d  ld   $0d
              92f5 0030  ld   $30
              92f6 00ad  ld   $ad
              92f7 00a9  ld   $a9
              92f8 00a4  ld   $a4
              92f9 007f  ld   $7f
              92fa 000d  ld   $0d
              92fb fe00  bra  ac          ;+-----------------------------------+
              92fc fcfd  bra  $92fd       ;|                                   |
              92fd 1418  ld   $18,y       ;| Trampoline for page $9200 lookups |
              92fe e006  jmp  y,$06       ;|                                   |
              92ff c218  st   [$18]       ;+-----------------------------------+
              9300 0023  ld   $23
              9301 00ad  ld   $ad
              9302 00a9  ld   $a9
              9303 00a4  ld   $a4
              9304 0067  ld   $67
              9305 00ac  ld   $ac
              9306 00ac  ld   $ac
              9307 00a1  ld   $a1
              9308 00a3  ld   $a3
              9309 0000  ld   $00
              930a 0040  ld   $40
              930b 0080  ld   $80
              930c 00c0  ld   $c0
              930d 00c1  ld   $c1
              930e 0080  ld   $80
              930f 0000  ld   $00
              9310 0047  ld   $47
              9311 008c  ld   $8c
              9312 0068  ld   $68
              9313 008c  ld   $8c
              9314 00db  ld   $db
              9315 0067  ld   $67
              9316 009b  ld   $9b
              9317 0068  ld   $68
              9318 009b  ld   $9b
              9319 0050  ld   $50
              931a 008c  ld   $8c
              931b 0063  ld   $63
              931c 008c  ld   $8c
              931d 007f  ld   $7f
              931e 0001  ld   $01
              931f 0051  ld   $51
              9320 0007  ld   $07
              9321 0088  ld   $88
              9322 0029  ld   $29
              9323 0084  ld   $84
              9324 0080  ld   $80
              9325 00c4  ld   $c4
              9326 0080  ld   $80
              9327 0057  ld   $57
              9328 0071  ld   $71
              9329 0007  ld   $07
              932a 0088  ld   $88
              932b 0014  ld   $14
              932c 00ed  ld   $ed
              932d 00a5  ld   $a5
              932e 00ad  ld   $ad
              932f 00af  ld   $af
              9330 00ac  ld   $ac
              9331 00ed  ld   $ed
              9332 00a5  ld   $a5
              9333 00ad  ld   $ad
              9334 00a9  ld   $a9
              9335 00a8  ld   $a8
              9336 00f2  ld   $f2
              9337 00af  ld   $af
              9338 00ac  ld   $ac
              9339 00af  ld   $af
              933a 00a3  ld   $a3
              933b 0071  ld   $71
              933c 0008  ld   $08
              933d 0088  ld   $88
              933e 00ae  ld   $ae
              933f 00a5  ld   $a5
              9340 00ac  ld   $ac
              9341 0068  ld   $68
              9342 0083  ld   $83
              9343 0008  ld   $08
              9344 0068  ld   $68
              9345 009d  ld   $9d
              9346 0008  ld   $08
              9347 0071  ld   $71
              9348 0007  ld   $07
              9349 0088  ld   $88
              934a 0060  ld   $60
              934b 0076  ld   $76
              934c 00b4  ld   $b4
              934d 00af  ld   $af
              934e 00ae  ld   $ae
              934f 0076  ld   $76
              9350 008d  ld   $8d
              9351 0076  ld   $76
              9352 008b  ld   $8b
              9353 0051  ld   $51
              9354 0007  ld   $07
              9355 0088  ld   $88
              9356 0019  ld   $19
              9357 00b8  ld   $b8
              9358 00a4  ld   $a4
              9359 00ae  ld   $ae
              935a 00b2  ld   $b2
              935b 00f2  ld   $f2
              935c 00b3  ld   $b3
              935d 00b5  ld   $b5
              935e 00f3  ld   $f3
              935f 00a2  ld   $a2
              9360 00a1  ld   $a1
              9361 00ee  ld   $ee
              9362 00a7  ld   $a7
              9363 00b3  ld   $b3
              9364 00e4  ld   $e4
              9365 00ae  ld   $ae
              9366 00b2  ld   $b2
              9367 00eb  ld   $eb
              9368 00a5  ld   $a5
              9369 00a5  ld   $a5
              936a 00b0  ld   $b0
              936b 0051  ld   $51
              936c 0007  ld   $07
              936d 0088  ld   $88
              936e 0039  ld   $39
              936f 0081  ld   $81
              9370 00c1  ld   $c1
              9371 004f  ld   $4f
              9372 007f  ld   $7f
              9373 000f  ld   $0f
              9374 002f  ld   $2f
              9375 0000  ld   $00
              9376 0051  ld   $51
              9377 0006  ld   $06
              9378 0088  ld   $88
              9379 0029  ld   $29
              937a 00c2  ld   $c2
              937b 000c  ld   $0c
              937c 0082  ld   $82
              937d 0057  ld   $57
              937e 008c  ld   $8c
              937f 006a  ld   $6a
              9380 008c  ld   $8c
              9381 0042  ld   $42
              9382 00ae  ld   $ae
              9383 00a5  ld   $a5
              9384 00a8  ld   $a8
              9385 00b4  ld   $b4
              9386 0060  ld   $60
              9387 00ae  ld   $ae
              9388 00a5  ld   $a5
              9389 00a8  ld   $a8
              938a 00b4  ld   $b4
              938b 004f  ld   $4f
              938c 007e  ld   $7e
              938d 001e  ld   $1e
              938e 0035  ld   $35
              938f 008c  ld   $8c
              9390 0027  ld   $27
              9391 0051  ld   $51
              9392 0007  ld   $07
              9393 0088  ld   $88
              9394 0009  ld   $09
              9395 008b  ld   $8b
              9396 00fe  ld   $fe
              9397 00e4  ld   $e4
              9398 00af  ld   $af
              9399 00ad  ld   $ad
              939a 00f2  ld   $f2
              939b 00af  ld   $af
              939c 00e4  ld   $e4
              939d 00ae  ld   $ae
              939e 00a1  ld   $a1
              939f 00dc  ld   $dc
              93a0 00de  ld   $de
              93a1 009c  ld   $9c
              93a2 00dd  ld   $dd
              93a3 009c  ld   $9c
              93a4 00de  ld   $de
              93a5 00dd  ld   $dd
              93a6 009e  ld   $9e
              93a7 00c3  ld   $c3
              93a8 00dd  ld   $dd
              93a9 00cf  ld   $cf
              93aa 00ca  ld   $ca
              93ab 00cd  ld   $cd
              93ac 00cb  ld   $cb
              93ad 0000  ld   $00
              93ae 0047  ld   $47
              93af 009d  ld   $9d
              93b0 00ad  ld   $ad
              93b1 00a5  ld   $a5
              93b2 00ad  ld   $ad
              93b3 00af  ld   $af
              93b4 00ac  ld   $ac
              93b5 0076  ld   $76
              93b6 009d  ld   $9d
              93b7 00ad  ld   $ad
              93b8 00a5  ld   $a5
              93b9 00ad  ld   $ad
              93ba 00a9  ld   $a9
              93bb 00a8  ld   $a8
              93bc 00e6  ld   $e6
              93bd 00a6  ld   $a6
              93be 00af  ld   $af
              93bf 0060  ld   $60
              93c0 008c  ld   $8c
              93c1 0020  ld   $20
              93c2 00af  ld   $af
              93c3 00b4  ld   $b4
              93c4 00b5  ld   $b5
              93c5 00a1  ld   $a1
              93c6 00f2  ld   $f2
              93c7 00ac  ld   $ac
              93c8 00a3  ld   $a3
              93c9 00f2  ld   $f2
              93ca 00a3  ld   $a3
              93cb 00b3  ld   $b3
              93cc 0060  ld   $60
              93cd 008c  ld   $8c
              93ce 0020  ld   $20
              93cf 00ac  ld   $ac
              93d0 00a5  ld   $a5
              93d1 00a4  ld   $a4
              93d2 00ee  ld   $ee
              93d3 00b5  ld   $b5
              93d4 00b2  ld   $b2
              93d5 0060  ld   $60
              93d6 00ae  ld   $ae
              93d7 00b5  ld   $b5
              93d8 00b2  ld   $b2
              93d9 00f4  ld   $f4
              93da 00b3  ld   $b3
              93db 00a9  ld   $a9
              93dc 00ac  ld   $ac
              93dd 0060  ld   $60
              93de 008c  ld   $8c
              93df 0020  ld   $20
              93e0 00b4  ld   $b4
              93e1 00b3  ld   $b3
              93e2 00a9  ld   $a9
              93e3 00ac  ld   $ac
              93e4 007a  ld   $7a
              93e5 007e  ld   $7e
              93e6 009a  ld   $9a
              93e7 0022  ld   $22
              93e8 0020  ld   $20
              93e9 0000  ld   $00
              93ea 0060  ld   $60
              93eb 0003  ld   $03
              93ec 00bf  ld   $bf
              93ed 0060  ld   $60
              93ee 0003  ld   $03
              93ef 00bf  ld   $bf
              93f0 001f  ld   $1f
              93f1 00ee  ld   $ee
              93f2 0000  ld   $00
              93f3 0000  ld   $00
              93f4 0020  ld   $20
              93f5 00b1  ld   $b1
              93f6 00e7  ld   $e7
              93f7 00e8  ld   $e8
              93f8 00e8  ld   $e8
              93f9 00b5  ld   $b5
              93fa 004f  ld   $4f
              93fb fe00  bra  ac          ;+-----------------------------------+
              93fc fcfd  bra  $93fd       ;|                                   |
              93fd 1418  ld   $18,y       ;| Trampoline for page $9300 lookups |
              93fe e006  jmp  y,$06       ;|                                   |
              93ff c218  st   [$18]       ;+-----------------------------------+
              9400 0085  ld   $85
              9401 00da  ld   $da
              9402 00b5  ld   $b5
              9403 0087  ld   $87
              9404 0085  ld   $85
              9405 00db  ld   $db
              9406 00b4  ld   $b4
              9407 004e  ld   $4e
              9408 0098  ld   $98
              9409 00d5  ld   $d5
              940a 0086  ld   $86
              940b 00b0  ld   $b0
              940c 0009  ld   $09
              940d 00b1  ld   $b1
              940e 00da  ld   $da
              940f 0020  ld   $20
              9410 00c9  ld   $c9
              9411 00e3  ld   $e3
              9412 00c8  ld   $c8
              9413 004c  ld   $4c
              9414 000f  ld   $0f
              9415 00ee  ld   $ee
              9416 00a9  ld   $a9
              9417 00ff  ld   $ff
              9418 0085  ld   $85
              9419 00d5  ld   $d5
              941a 0060  ld   $60
              941b 00e8  ld   $e8
              941c 00a9  ld   $a9
              941d 0000  ld   $00
              941e 0095  ld   $95
              941f 0088  ld   $88
              9420 0095  ld   $95
              9421 00a8  ld   $a8
              9422 00b5  ld   $b5
              9423 0087  ld   $87
              9424 0038  ld   $38
              9425 00f5  ld   $f5
              9426 004f  ld   $4f
              9427 0095  ld   $95
              9428 0050  ld   $50
              9429 004c  ld   $4c
              942a 0023  ld   $23
              942b 00e8  ld   $e8
              942c 00ff  ld   $ff
              942d 0020  ld   $20
              942e 0015  ld   $15
              942f 00e7  ld   $e7
              9430 00a5  ld   $a5
              9431 00cf  ld   $cf
              9432 00d0  ld   $d0
              9433 0028  ld   $28
              9434 00a5  ld   $a5
              9435 00ce  ld   $ce
              9436 0060  ld   $60
              9437 0020  ld   $20
              9438 0034  ld   $34
              9439 00ee  ld   $ee
              943a 00a4  ld   $a4
              943b 00c8  ld   $c8
              943c 00c9  ld   $c9
              943d 0030  ld   $30
              943e 00b0  ld   $b0
              943f 0021  ld   $21
              9440 00c0  ld   $c0
              9441 0028  ld   $28
              9442 00b0  ld   $b0
              9443 001d  ld   $1d
              9444 0060  ld   $60
              9445 00ea  ld   $ea
              9446 00ea  ld   $ea
              9447 0020  ld   $20
              9448 0034  ld   $34
              9449 00ee  ld   $ee
              944a 0060  ld   $60
              944b 00ea  ld   $ea
              944c 008a  ld   $8a
              944d 00a2  ld   $a2
              944e 0001  ld   $01
              944f 00b4  ld   $b4
              9450 00ce  ld   $ce
              9451 0094  ld   $94
              9452 004c  ld   $4c
              9453 00b4  ld   $b4
              9454 0048  ld   $48
              9455 0094  ld   $94
              9456 00ca  ld   $ca
              9457 00ca  ld   $ca
              9458 00f0  ld   $f0
              9459 00f5  ld   $f5
              945a 00aa  ld   $aa
              945b 0060  ld   $60
              945c 00a0  ld   $a0
              945d 0077  ld   $77
              945e 004c  ld   $4c
              945f 00e0  ld   $e0
              9460 00e3  ld   $e3
              9461 00a0  ld   $a0
              9462 007b  ld   $7b
              9463 00d0  ld   $d0
              9464 00f9  ld   $f9
              9465 0020  ld   $20
              9466 0054  ld   $54
              9467 00e2  ld   $e2
              9468 00a5  ld   $a5
              9469 00da  ld   $da
              946a 00d0  ld   $d0
              946b 0007  ld   $07
              946c 00a5  ld   $a5
              946d 00db  ld   $db
              946e 00d0  ld   $d0
              946f 0003  ld   $03
              9470 004c  ld   $4c
              9471 007e  ld   $7e
              9472 00e7  ld   $e7
              9473 0006  ld   $06
              9474 00ce  ld   $ce
              9475 0026  ld   $26
              9476 00cf  ld   $cf
              9477 0026  ld   $26
              9478 0046  ld   $46
              9479 0026  ld   $26
              947a 0047  ld   $47
              947b 00a5  ld   $a5
              947c 0046  ld   $46
              947d 00c5  ld   $c5
              947e 00da  ld   $da
              947f 00a5  ld   $a5
              9480 0047  ld   $47
              9481 00e5  ld   $e5
              9482 00db  ld   $db
              9483 0090  ld   $90
              9484 000a  ld   $0a
              9485 0085  ld   $85
              9486 0047  ld   $47
              9487 00a5  ld   $a5
              9488 0046  ld   $46
              9489 00e5  ld   $e5
              948a 00da  ld   $da
              948b 0085  ld   $85
              948c 0046  ld   $46
              948d 00e6  ld   $e6
              948e 00ce  ld   $ce
              948f 0088  ld   $88
              9490 00d0  ld   $d0
              9491 00e1  ld   $e1
              9492 0060  ld   $60
              9493 00ff  ld   $ff
              9494 00ff  ld   $ff
              9495 00ff  ld   $ff
              * 6 times
              9499 0020  ld   $20
              949a 0015  ld   $15
              949b 00e7  ld   $e7
              949c 006c  ld   $6c
              949d 00ce  ld   $ce
              949e 0000  ld   $00
              949f 00a5  ld   $a5
              94a0 004c  ld   $4c
              94a1 00d0  ld   $d0
              94a2 0002  ld   $02
              94a3 00c6  ld   $c6
              94a4 004d  ld   $4d
              94a5 00c6  ld   $c6
              94a6 004c  ld   $4c
              94a7 00a5  ld   $a5
              94a8 0048  ld   $48
              94a9 00d0  ld   $d0
              94aa 0002  ld   $02
              94ab 00c6  ld   $c6
              94ac 0049  ld   $49
              94ad 00c6  ld   $c6
              94ae 0048  ld   $48
              94af 00a0  ld   $a0
              94b0 0000  ld   $00
              94b1 00b1  ld   $b1
              94b2 004c  ld   $4c
              94b3 0091  ld   $91
              94b4 0048  ld   $48
              94b5 00a5  ld   $a5
              94b6 00ca  ld   $ca
              94b7 00c5  ld   $c5
              94b8 004c  ld   $4c
              94b9 00a5  ld   $a5
              94ba 00cb  ld   $cb
              94bb 00e5  ld   $e5
              94bc 004d  ld   $4d
              94bd 0090  ld   $90
              94be 00e0  ld   $e0
              94bf 004c  ld   $4c
              94c0 0053  ld   $53
              94c1 00ee  ld   $ee
              94c2 00c9  ld   $c9
              94c3 0028  ld   $28
              94c4 00b0  ld   $b0
              94c5 009b  ld   $9b
              94c6 00a8  ld   $a8
              94c7 00a5  ld   $a5
              94c8 00c8  ld   $c8
              94c9 0060  ld   $60
              94ca 00ea  ld   $ea
              94cb 00ea  ld   $ea
              94cc 0098  ld   $98
              94cd 00aa  ld   $aa
              94ce 00a0  ld   $a0
              94cf 006e  ld   $6e
              94d0 0020  ld   $20
              94d1 00c4  ld   $c4
              94d2 00e3  ld   $e3
              94d3 008a  ld   $8a
              94d4 00a8  ld   $a8
              94d5 0020  ld   $20
              94d6 00c4  ld   $c4
              94d7 00e3  ld   $e3
              94d8 00a0  ld   $a0
              94d9 0072  ld   $72
              94da 004c  ld   $4c
              94db 00c4  ld   $c4
              94dc 00e3  ld   $e3
              94dd 0020  ld   $20
              94de 0015  ld   $15
              94df 00e7  ld   $e7
              94e0 0006  ld   $06
              94e1 00ce  ld   $ce
              94e2 0026  ld   $26
              94e3 00cf  ld   $cf
              94e4 0030  ld   $30
              94e5 00fa  ld   $fa
              94e6 00b0  ld   $b0
              94e7 00dc  ld   $dc
              94e8 00d0  ld   $d0
              94e9 0004  ld   $04
              94ea 00c5  ld   $c5
              94eb 00ce  ld   $ce
              94ec 00b0  ld   $b0
              94ed 00d6  ld   $d6
              94ee 0060  ld   $60
              94ef 0020  ld   $20
              94f0 0015  ld   $15
              94f1 00e7  ld   $e7
              94f2 00b1  ld   $b1
              94f3 00ce  ld   $ce
              94f4 0094  ld   $94
              94f5 00a7  ld   $a7
              94f6 004c  ld   $4c
              94f7 0008  ld   $08
              94f8 00e7  ld   $e7
              94f9 00ef  ld   $ef
              94fa 0000  ld   $00
              94fb fe00  bra  ac          ;+-----------------------------------+
              94fc fcfd  bra  $94fd       ;|                                   |
              94fd 1418  ld   $18,y       ;| Trampoline for page $9400 lookups |
              94fe e006  jmp  y,$06       ;|                                   |
              94ff c218  st   [$18]       ;+-----------------------------------+
              9500 0000  ld   $00
              9501 0020  ld   $20
              9502 0034  ld   $34
              9503 00ee  ld   $ee
              9504 00a5  ld   $a5
              9505 00ce  ld   $ce
              9506 0048  ld   $48
              9507 0020  ld   $20
              9508 0015  ld   $15
              9509 00e7  ld   $e7
              950a 0068  ld   $68
              950b 0091  ld   $91
              950c 00ce  ld   $ce
              950d 0060  ld   $60
              950e 00ff  ld   $ff
              950f 00ff  ld   $ff
              9510 00ff  ld   $ff
              9511 0020  ld   $20
              9512 006c  ld   $6c
              9513 00ee  ld   $ee
              9514 00a5  ld   $a5
              9515 00ce  ld   $ce
              9516 0085  ld   $85
              9517 0046  ld   $46
              9518 00a5  ld   $a5
              9519 00cf  ld   $cf
              951a 0085  ld   $85
              951b 0047  ld   $47
              951c 004c  ld   $4c
              951d 0044  ld   $44
              951e 00e2  ld   $e2
              951f 0020  ld   $20
              9520 00e4  ld   $e4
              9521 00ee  ld   $ee
              9522 004c  ld   $4c
              9523 0034  ld   $34
              9524 00e1  ld   $e1
              9525 0020  ld   $20
              9526 00e4  ld   $e4
              9527 00ee  ld   $ee
              9528 00b4  ld   $b4
              9529 0088  ld   $88
              952a 00b5  ld   $b5
              952b 0050  ld   $50
              952c 0069  ld   $69
              952d 00fe  ld   $fe
              952e 00b0  ld   $b0
              952f 0001  ld   $01
              9530 0088  ld   $88
              9531 0085  ld   $85
              9532 00da  ld   $da
              9533 0084  ld   $84
              9534 00db  ld   $db
              9535 0018  ld   $18
              9536 0065  ld   $65
              9537 00ce  ld   $ce
              9538 0095  ld   $95
              9539 0050  ld   $50
              953a 0098  ld   $98
              953b 0065  ld   $65
              953c 00cf  ld   $cf
              953d 0095  ld   $95
              953e 0088  ld   $88
              953f 00a0  ld   $a0
              9540 0000  ld   $00
              9541 00b5  ld   $b5
              9542 0050  ld   $50
              9543 00d1  ld   $d1
              9544 00da  ld   $da
              9545 00c8  ld   $c8
              9546 00b5  ld   $b5
              9547 0088  ld   $88
              9548 00f1  ld   $f1
              9549 00da  ld   $da
              954a 00b0  ld   $b0
              954b 0080  ld   $80
              954c 004c  ld   $4c
              954d 0023  ld   $23
              954e 00e8  ld   $e8
              954f 0020  ld   $20
              9550 0015  ld   $15
              9551 00e7  ld   $e7
              9552 00a5  ld   $a5
              9553 004e  ld   $4e
              9554 0020  ld   $20
              9555 0008  ld   $08
              9556 00e7  ld   $e7
              9557 00a5  ld   $a5
              9558 004f  ld   $4f
              9559 00d0  ld   $d0
              955a 0004  ld   $04
              955b 00c5  ld   $c5
              955c 004e  ld   $4e
              955d 0069  ld   $69
              955e 0000  ld   $00
              955f 0029  ld   $29
              9560 007f  ld   $7f
              9561 0085  ld   $85
              9562 004f  ld   $4f
              9563 0095  ld   $95
              9564 00a8  ld   $a8
              9565 00a0  ld   $a0
              9566 0011  ld   $11
              9567 00a5  ld   $a5
              9568 004f  ld   $4f
              9569 000a  ld   $0a
              956a 0018  ld   $18
              956b 0069  ld   $69
              956c 0040  ld   $40
              956d 000a  ld   $0a
              956e 0026  ld   $26
              956f 004e  ld   $4e
              9570 0026  ld   $26
              9571 004f  ld   $4f
              9572 0088  ld   $88
              9573 00d0  ld   $d0
              9574 00f2  ld   $f2
              9575 00a5  ld   $a5
              9576 00ce  ld   $ce
              9577 0020  ld   $20
              9578 0008  ld   $08
              9579 00e7  ld   $e7
              957a 00a5  ld   $a5
              957b 00cf  ld   $cf
              957c 0095  ld   $95
              957d 00a8  ld   $a8
              957e 004c  ld   $4c
              957f 007a  ld   $7a
              9580 00e2  ld   $e2
              9581 0020  ld   $20
              9582 0015  ld   $15
              9583 00e7  ld   $e7
              9584 00a4  ld   $a4
              9585 00ce  ld   $ce
              9586 00c4  ld   $c4
              9587 004c  ld   $4c
              9588 00a5  ld   $a5
              9589 00cf  ld   $cf
              958a 00e5  ld   $e5
              958b 004d  ld   $4d
              958c 0090  ld   $90
              958d 001f  ld   $1f
              958e 0084  ld   $84
              958f 0048  ld   $48
              9590 00a5  ld   $a5
              9591 00cf  ld   $cf
              9592 0085  ld   $85
              9593 0049  ld   $49
              9594 004c  ld   $4c
              9595 00b6  ld   $b6
              9596 00ee  ld   $ee
              9597 0020  ld   $20
              9598 0015  ld   $15
              9599 00e7  ld   $e7
              959a 00a4  ld   $a4
              959b 00ce  ld   $ce
              959c 00c4  ld   $c4
              959d 00ca  ld   $ca
              959e 00a5  ld   $a5
              959f 00cf  ld   $cf
              95a0 00e5  ld   $e5
              95a1 00cb  ld   $cb
              95a2 00b0  ld   $b0
              95a3 0009  ld   $09
              95a4 0084  ld   $84
              95a5 004a  ld   $4a
              95a6 00a5  ld   $a5
              95a7 00cf  ld   $cf
              95a8 0085  ld   $85
              95a9 004b  ld   $4b
              95aa 004c  ld   $4c
              95ab 00b7  ld   $b7
              95ac 00e5  ld   $e5
              95ad 004c  ld   $4c
              95ae 00cb  ld   $cb
              95af 00ee  ld   $ee
              95b0 00ea  ld   $ea
              95b1 00ea  ld   $ea
              95b2 00ea  ld   $ea
              95b3 00ea  ld   $ea
              95b4 0020  ld   $20
              95b5 00c9  ld   $c9
              95b6 00ef  ld   $ef
              95b7 0020  ld   $20
              95b8 0071  ld   $71
              95b9 00e1  ld   $e1
              95ba 004c  ld   $4c
              95bb 00bf  ld   $bf
              95bc 00ef  ld   $ef
              95bd 0020  ld   $20
              95be 0003  ld   $03
              95bf 00ee  ld   $ee
              95c0 00a9  ld   $a9
              95c1 00ff  ld   $ff
              95c2 0085  ld   $85
              95c3 00c8  ld   $c8
              95c4 00a9  ld   $a9
              95c5 0074  ld   $74
              95c6 008d  ld   $8d
              95c7 0000  ld   $00
              95c8 0002  ld   $02
              95c9 0060  ld   $60
              95ca 0020  ld   $20
              95cb 0036  ld   $36
              95cc 00e7  ld   $e7
              95cd 00e8  ld   $e8
              95ce 0020  ld   $20
              95cf 0036  ld   $36
              95d0 00e7  ld   $e7
              95d1 00b5  ld   $b5
              95d2 0050  ld   $50
              95d3 0060  ld   $60
              95d4 00a9  ld   $a9
              95d5 0000  ld   $00
              95d6 0085  ld   $85
              95d7 004a  ld   $4a
              95d8 0085  ld   $85
              95d9 004c  ld   $4c
              95da 00a9  ld   $a9
              95db 0008  ld   $08
              95dc 0085  ld   $85
              95dd 004b  ld   $4b
              95de 00a9  ld   $a9
              95df 0010  ld   $10
              95e0 0085  ld   $85
              95e1 004d  ld   $4d
              95e2 004c  ld   $4c
              95e3 00ad  ld   $ad
              95e4 00e5  ld   $e5
              95e5 00d5  ld   $d5
              95e6 0088  ld   $88
              95e7 00d0  ld   $d0
              95e8 0001  ld   $01
              95e9 0018  ld   $18
              95ea 004c  ld   $4c
              95eb 0002  ld   $02
              95ec 00e1  ld   $e1
              95ed 0020  ld   $20
              95ee 00b7  ld   $b7
              95ef 00e5  ld   $e5
              95f0 004c  ld   $4c
              95f1 0036  ld   $36
              95f2 00e8  ld   $e8
              95f3 0020  ld   $20
              95f4 00b7  ld   $b7
              95f5 00e5  ld   $e5
              95f6 004c  ld   $4c
              95f7 005b  ld   $5b
              95f8 00e8  ld   $e8
              95f9 00e0  ld   $e0
              95fa 0080  ld   $80
              95fb fe00  bra  ac          ;+-----------------------------------+
              95fc fcfd  bra  $95fd       ;|                                   |
              95fd 1418  ld   $18,y       ;| Trampoline for page $9500 lookups |
              95fe e006  jmp  y,$06       ;|                                   |
              95ff c218  st   [$18]       ;+-----------------------------------+
              9600 00d0  ld   $d0
              9601 0001  ld   $01
              9602 0088  ld   $88
              9603 004c  ld   $4c
              9604 000c  ld   $0c
              9605 00e0  ld   $e0
              9606 00ff  ld   $ff
              9607 0000  ld   $00
              9608 0000  ld   $00
              9609 00d8  ld   $d8
              960a 0058  ld   $58
              960b 00a0  ld   $a0
              960c 007f  ld   $7f
              960d 008c  ld   $8c
              960e 0012  ld   $12
              960f 00d0  ld   $d0
              9610 00a9  ld   $a9
              9611 00a7  ld   $a7
              9612 008d  ld   $8d
              9613 0011  ld   $11
              9614 00d0  ld   $d0
              9615 008d  ld   $8d
              9616 0013  ld   $13
              9617 00d0  ld   $d0
              9618 00c9  ld   $c9
              9619 00df  ld   $df
              961a 00f0  ld   $f0
              961b 0013  ld   $13
              961c 00c9  ld   $c9
              961d 009b  ld   $9b
              961e 00f0  ld   $f0
              961f 0003  ld   $03
              9620 00c8  ld   $c8
              9621 0010  ld   $10
              9622 000f  ld   $0f
              9623 00a9  ld   $a9
              9624 00dc  ld   $dc
              9625 0020  ld   $20
              9626 00ef  ld   $ef
              9627 00ff  ld   $ff
              9628 00a9  ld   $a9
              9629 008d  ld   $8d
              962a 0020  ld   $20
              962b 00ef  ld   $ef
              962c 00ff  ld   $ff
              962d 00a0  ld   $a0
              962e 0001  ld   $01
              962f 0088  ld   $88
              9630 0030  ld   $30
              9631 00f6  ld   $f6
              9632 00ad  ld   $ad
              9633 0011  ld   $11
              9634 00d0  ld   $d0
              9635 0010  ld   $10
              9636 00fb  ld   $fb
              9637 00ad  ld   $ad
              9638 0010  ld   $10
              9639 00d0  ld   $d0
              963a 0099  ld   $99
              963b 0000  ld   $00
              963c 0002  ld   $02
              963d 0020  ld   $20
              963e 00ef  ld   $ef
              963f 00ff  ld   $ff
              9640 00c9  ld   $c9
              9641 008d  ld   $8d
              9642 00d0  ld   $d0
              9643 00d4  ld   $d4
              9644 00a0  ld   $a0
              9645 00ff  ld   $ff
              9646 00a9  ld   $a9
              9647 0000  ld   $00
              9648 00aa  ld   $aa
              9649 000a  ld   $0a
              964a 0085  ld   $85
              964b 003b  ld   $3b
              964c 00c8  ld   $c8
              964d 00b9  ld   $b9
              964e 0000  ld   $00
              964f 0002  ld   $02
              9650 00c9  ld   $c9
              9651 008d  ld   $8d
              9652 00f0  ld   $f0
              9653 00d4  ld   $d4
              9654 00c9  ld   $c9
              9655 00ae  ld   $ae
              9656 0090  ld   $90
              9657 00f4  ld   $f4
              9658 00f0  ld   $f0
              9659 00f0  ld   $f0
              965a 00c9  ld   $c9
              965b 00ba  ld   $ba
              965c 00f0  ld   $f0
              965d 00eb  ld   $eb
              965e 00c9  ld   $c9
              965f 00d2  ld   $d2
              9660 00f0  ld   $f0
              9661 003b  ld   $3b
              9662 0086  ld   $86
              9663 0038  ld   $38
              9664 0086  ld   $86
              9665 0039  ld   $39
              9666 0084  ld   $84
              9667 003a  ld   $3a
              9668 00b9  ld   $b9
              9669 0000  ld   $00
              966a 0002  ld   $02
              966b 0049  ld   $49
              966c 00b0  ld   $b0
              966d 00c9  ld   $c9
              966e 000a  ld   $0a
              966f 0090  ld   $90
              9670 0006  ld   $06
              9671 0069  ld   $69
              9672 0088  ld   $88
              9673 00c9  ld   $c9
              9674 00fa  ld   $fa
              9675 0090  ld   $90
              9676 0011  ld   $11
              9677 000a  ld   $0a
              9678 000a  ld   $0a
              9679 000a  ld   $0a
              967a 000a  ld   $0a
              967b 00a2  ld   $a2
              967c 0004  ld   $04
              967d 000a  ld   $0a
              967e 0026  ld   $26
              967f 0038  ld   $38
              9680 0026  ld   $26
              9681 0039  ld   $39
              9682 00ca  ld   $ca
              9683 00d0  ld   $d0
              9684 00f8  ld   $f8
              9685 00c8  ld   $c8
              9686 00d0  ld   $d0
              9687 00e0  ld   $e0
              9688 00c4  ld   $c4
              9689 003a  ld   $3a
              968a 00f0  ld   $f0
              968b 0097  ld   $97
              968c 0024  ld   $24
              968d 003b  ld   $3b
              968e 0050  ld   $50
              968f 0010  ld   $10
              9690 00a5  ld   $a5
              9691 0038  ld   $38
              9692 0081  ld   $81
              9693 0036  ld   $36
              9694 00e6  ld   $e6
              9695 0036  ld   $36
              9696 00d0  ld   $d0
              9697 00b5  ld   $b5
              9698 00e6  ld   $e6
              9699 0037  ld   $37
              969a 004c  ld   $4c
              969b 0044  ld   $44
              969c 00ff  ld   $ff
              969d 006c  ld   $6c
              969e 0034  ld   $34
              969f 0000  ld   $00
              96a0 0030  ld   $30
              96a1 002b  ld   $2b
              96a2 00a2  ld   $a2
              96a3 0002  ld   $02
              96a4 00b5  ld   $b5
              96a5 0037  ld   $37
              96a6 0095  ld   $95
              96a7 0035  ld   $35
              96a8 0095  ld   $95
              96a9 0033  ld   $33
              96aa 00ca  ld   $ca
              96ab 00d0  ld   $d0
              96ac 00f7  ld   $f7
              96ad 00d0  ld   $d0
              96ae 0014  ld   $14
              96af 00a9  ld   $a9
              96b0 008d  ld   $8d
              96b1 0020  ld   $20
              96b2 00ef  ld   $ef
              96b3 00ff  ld   $ff
              96b4 00a5  ld   $a5
              96b5 0035  ld   $35
              96b6 0020  ld   $20
              96b7 00dc  ld   $dc
              96b8 00ff  ld   $ff
              96b9 00a5  ld   $a5
              96ba 0034  ld   $34
              96bb 0020  ld   $20
              96bc 00dc  ld   $dc
              96bd 00ff  ld   $ff
              96be 00a9  ld   $a9
              96bf 00ba  ld   $ba
              96c0 0020  ld   $20
              96c1 00ef  ld   $ef
              96c2 00ff  ld   $ff
              96c3 00a9  ld   $a9
              96c4 00a0  ld   $a0
              96c5 0020  ld   $20
              96c6 00ef  ld   $ef
              96c7 00ff  ld   $ff
              96c8 00a1  ld   $a1
              96c9 0034  ld   $34
              96ca 0020  ld   $20
              96cb 00dc  ld   $dc
              96cc 00ff  ld   $ff
              96cd 0086  ld   $86
              96ce 003b  ld   $3b
              96cf 00a5  ld   $a5
              96d0 0034  ld   $34
              96d1 00c5  ld   $c5
              96d2 0038  ld   $38
              96d3 00a5  ld   $a5
              96d4 0035  ld   $35
              96d5 00e5  ld   $e5
              96d6 0039  ld   $39
              96d7 00b0  ld   $b0
              96d8 00c1  ld   $c1
              96d9 00e6  ld   $e6
              96da 0034  ld   $34
              96db 00d0  ld   $d0
              96dc 0002  ld   $02
              96dd 00e6  ld   $e6
              96de 0035  ld   $35
              96df 00a5  ld   $a5
              96e0 0034  ld   $34
              96e1 0029  ld   $29
              96e2 0007  ld   $07
              96e3 0010  ld   $10
              96e4 00c8  ld   $c8
              96e5 0048  ld   $48
              96e6 004a  ld   $4a
              96e7 004a  ld   $4a
              96e8 004a  ld   $4a
              96e9 004a  ld   $4a
              96ea 0020  ld   $20
              96eb 00e5  ld   $e5
              96ec 00ff  ld   $ff
              96ed 0068  ld   $68
              96ee 0029  ld   $29
              96ef 000f  ld   $0f
              96f0 0009  ld   $09
              96f1 00b0  ld   $b0
              96f2 00c9  ld   $c9
              96f3 00ba  ld   $ba
              96f4 0090  ld   $90
              96f5 0002  ld   $02
              96f6 0069  ld   $69
              96f7 0006  ld   $06
              96f8 008d  ld   $8d
              96f9 0012  ld   $12
              96fa 00d0  ld   $d0
              96fb fe00  bra  ac          ;+-----------------------------------+
              96fc fcfd  bra  $96fd       ;|                                   |
              96fd 1418  ld   $18,y       ;| Trampoline for page $9600 lookups |
              96fe e006  jmp  y,$06       ;|                                   |
              96ff c218  st   [$18]       ;+-----------------------------------+
              9700 002c  ld   $2c
              9701 0012  ld   $12
              9702 00d0  ld   $d0
              9703 00d0  ld   $d0
              9704 00fb  ld   $fb
              9705 0060  ld   $60
              9706 0000  ld   $00
              9707 0000  ld   $00
              9708 0000  ld   $00
              * 5 times
              970b 00ff  ld   $ff
              970c 00db  ld   $db
              970d 005e  ld   $5e
              970e 0000  ld   $00
              970f 0000  ld   $00         ;End of Apps/Apple-1/Apple-1_v2.gt1, size 7564
                                          ;+-----------------------------------+
                                          ;| Apps/MSBASIC/MSBASIC_v1.gt1       |
                                          ;+-----------------------------------+
              9710 dc41  st   $41,[y,x++] ;'A'
              9711 dc70  st   $70,[y,x++] ;'p'
              9712 dc70  st   $70,[y,x++] ;'p'
              9713 dc6c  st   $6c,[y,x++] ;'l'
              9714 dc65  st   $65,[y,x++] ;'e'
              9715 dc31  st   $31,[y,x++] ;'1'
              9716 dc00  st   $00,[y,x++] ;'\x00'
              9717 dc00  st   $00,[y,x++] ;'\x00'
              9718 0084  ld   $84
              9719 c218  st   [$18]
              971a 0079  ld   $79
              971b 14dd  ld   $dd,y
              971c e06f  jmp  y,$6f
              971d c219  st   [$19]
MSBASIC:      971e 0002  ld   $02
              971f 0000  ld   $00
              9720 0012  ld   $12
              9721 001a  ld   $1a
              9722 0021  ld   $21
              9723 00e6  ld   $e6
              9724 0038  ld   $38
              9725 0035  ld   $35
              9726 0053  ld   $53
              9727 000b  ld   $0b
              9728 0021  ld   $21
              9729 000e  ld   $0e
              972a 00f3  ld   $f3
              972b 0017  ld   $17
              972c 0090  ld   $90
              972d 0005  ld   $05
              972e 0011  ld   $11
              972f 0000  ld   $00
              9730 0024  ld   $24
              9731 00cf  ld   $cf
              9732 0018  ld   $18
              9733 0002  ld   $02
              9734 0018  ld   $18
              9735 00e8  ld   $e8
              9736 0027  ld   $27
              9737 0009  ld   $09
              9738 003e  ld   $3e
              9739 0008  ld   $08
              973a 0090  ld   $90
              973b 000d  ld   $0d
              973c 00e6  ld   $e6
              973d 0009  ld   $09
              973e 0051  ld   $51
              973f 000c  ld   $0c
              9740 00c5  ld   $c5
              9741 0010  ld   $10
              9742 007f  ld   $7f
              9743 000c  ld   $0c
              9744 0093  ld   $93
              9745 000a  ld   $0a
              9746 0093  ld   $93
              9747 0009  ld   $09
              9748 006b  ld   $6b
              9749 0009  ld   $09
              974a 0016  ld   $16
              974b 000a  ld   $0a
              974c 0016  ld   $16
              974d 0009  ld   $09
              974e 0076  ld   $76
              974f 0009  ld   $09
              9750 00c0  ld   $c0
              9751 0009  ld   $09
              9752 0029  ld   $29
              9753 000a  ld   $0a
              9754 0025  ld   $25
              9755 0009  ld   $09
              9756 0039  ld   $39
              9757 000a  ld   $0a
              9758 0071  ld   $71
              9759 0018  ld   $18
              975a 00ff  ld   $ff
              975b 0031  ld   $31
              975c 00ff  ld   $ff
              975d 002f  ld   $2f
              975e 006d  ld   $6d
              975f 000f  ld   $0f
              9760 00ee  ld   $ee
              9761 0013  ld   $13
              9762 0068  ld   $68
              9763 0018  ld   $18
              9764 0078  ld   $78
              9765 000b  ld   $0b
              9766 0051  ld   $51
              9767 0009  ld   $09
              9768 009b  ld   $9b
              9769 0007  ld   $07
              976a 005d  ld   $5d
              976b 0007  ld   $07
              976c 003f  ld   $3f
              976d 000c  ld   $0c
              976e 0041  ld   $41
              976f 0007  ld   $07
              9770 00b1  ld   $b1
              9771 001c  ld   $1c
              9772 0044  ld   $44
              9773 001d  ld   $1d
              9774 00d0  ld   $d0
              9775 001c  ld   $1c
              9776 0038  ld   $38
              9777 0000  ld   $00
              9778 00b8  ld   $b8
              9779 0013  ld   $13
              977a 00d9  ld   $d9
              977b 0013  ld   $13
              977c 00ca  ld   $ca
              977d 001f  ld   $1f
              977e 00eb  ld   $eb
              977f 0020  ld   $20
              9780 0062  ld   $62
              9781 001a  ld   $1a
              9782 0046  ld   $46
              9783 0020  ld   $20
              9784 0040  ld   $40
              9785 0021  ld   $21
              9786 0047  ld   $47
              9787 0021  ld   $21
              9788 0090  ld   $90
              9789 0021  ld   $21
              978a 00fe  ld   $fe
              978b 0021  ld   $21
              978c 004a  ld   $4a
              978d 0018  ld   $18
              978e 00b8  ld   $b8
              978f 0017  ld   $17
              9790 00a1  ld   $a1
              9791 0014  ld   $14
              9792 00e9  ld   $e9
              9793 0017  ld   $17
              9794 00c7  ld   $c7
              9795 0017  ld   $17
              9796 0028  ld   $28
              9797 0017  ld   $17
              9798 003c  ld   $3c
              9799 0017  ld   $17
              979a 0068  ld   $68
              979b 0017  ld   $17
              979c 0073  ld   $73
              979d 0017  ld   $17
              979e 0079  ld   $79
              979f 00e1  ld   $e1
              97a0 0018  ld   $18
              97a1 0079  ld   $79
              97a2 0097  ld   $97
              97a3 0018  ld   $18
              97a4 007b  ld   $7b
              97a5 00a2  ld   $a2
              97a6 001a  ld   $1a
              97a7 007b  ld   $7b
              97a8 0089  ld   $89
              97a9 001b  ld   $1b
              97aa 007f  ld   $7f
              97ab 00d3  ld   $d3
              97ac 001f  ld   $1f
              97ad 0050  ld   $50
              97ae 002d  ld   $2d
              97af 0010  ld   $10
              97b0 0046  ld   $46
              97b1 002a  ld   $2a
              97b2 0010  ld   $10
              97b3 007d  ld   $7d
              97b4 000c  ld   $0c
              97b5 0020  ld   $20
              97b6 005a  ld   $5a
              97b7 0039  ld   $39
              97b8 000f  ld   $0f
              97b9 0064  ld   $64
              97ba 005a  ld   $5a
              97bb 0010  ld   $10
              97bc 0045  ld   $45
              97bd 004e  ld   $4e
              97be 00c4  ld   $c4
              97bf 0046  ld   $46
              97c0 004f  ld   $4f
              97c1 00d2  ld   $d2
              97c2 004e  ld   $4e
              97c3 0045  ld   $45
              97c4 0058  ld   $58
              97c5 00d4  ld   $d4
              97c6 0044  ld   $44
              97c7 0041  ld   $41
              97c8 0054  ld   $54
              97c9 00c1  ld   $c1
              97ca 0049  ld   $49
              97cb 004e  ld   $4e
              97cc 0050  ld   $50
              97cd 0055  ld   $55
              97ce 00d4  ld   $d4
              97cf 0044  ld   $44
              97d0 0049  ld   $49
              97d1 00cd  ld   $cd
              97d2 0052  ld   $52
              97d3 0045  ld   $45
              97d4 0041  ld   $41
              97d5 00c4  ld   $c4
              97d6 004c  ld   $4c
              97d7 0045  ld   $45
              97d8 00d4  ld   $d4
              97d9 0047  ld   $47
              97da 004f  ld   $4f
              97db 0054  ld   $54
              97dc 00cf  ld   $cf
              97dd 0052  ld   $52
              97de 0055  ld   $55
              97df 00ce  ld   $ce
              97e0 0049  ld   $49
              97e1 00c6  ld   $c6
              97e2 0052  ld   $52
              97e3 0045  ld   $45
              97e4 0053  ld   $53
              97e5 0054  ld   $54
              97e6 004f  ld   $4f
              97e7 0052  ld   $52
              97e8 00c5  ld   $c5
              97e9 0047  ld   $47
              97ea 004f  ld   $4f
              97eb 0053  ld   $53
              97ec 0055  ld   $55
              97ed 00c2  ld   $c2
              97ee 0052  ld   $52
              97ef 0045  ld   $45
              97f0 0054  ld   $54
              97f1 0055  ld   $55
              97f2 0052  ld   $52
              97f3 00ce  ld   $ce
              97f4 0052  ld   $52
              97f5 0045  ld   $45
              97f6 00cd  ld   $cd
              97f7 0053  ld   $53
              97f8 0054  ld   $54
              97f9 004f  ld   $4f
              97fa 00d0  ld   $d0
              97fb fe00  bra  ac          ;+-----------------------------------+
              97fc fcfd  bra  $97fd       ;|                                   |
              97fd 1418  ld   $18,y       ;| Trampoline for page $9700 lookups |
              97fe e006  jmp  y,$06       ;|                                   |
              97ff c218  st   [$18]       ;+-----------------------------------+
              9800 004f  ld   $4f
              9801 00ce  ld   $ce
              9802 0057  ld   $57
              9803 0041  ld   $41
              9804 0049  ld   $49
              9805 00d4  ld   $d4
              9806 004c  ld   $4c
              9807 004f  ld   $4f
              9808 0041  ld   $41
              9809 00c4  ld   $c4
              980a 0053  ld   $53
              980b 0041  ld   $41
              980c 0056  ld   $56
              980d 00c5  ld   $c5
              980e 0056  ld   $56
              980f 0045  ld   $45
              9810 0052  ld   $52
              9811 0049  ld   $49
              9812 0046  ld   $46
              9813 00d9  ld   $d9
              9814 0044  ld   $44
              9815 0045  ld   $45
              9816 00c6  ld   $c6
              9817 0050  ld   $50
              9818 004f  ld   $4f
              9819 004b  ld   $4b
              981a 00c5  ld   $c5
              981b 0050  ld   $50
              981c 0052  ld   $52
              981d 0049  ld   $49
              981e 004e  ld   $4e
              981f 00d4  ld   $d4
              9820 0043  ld   $43
              9821 004f  ld   $4f
              9822 004e  ld   $4e
              9823 0003  ld   $03
              9824 0000  ld   $00
              9825 0000  ld   $00
              9826 00d4  ld   $d4
              9827 004c  ld   $4c
              9828 0049  ld   $49
              9829 0053  ld   $53
              982a 00d4  ld   $d4
              982b 0043  ld   $43
              982c 004c  ld   $4c
              982d 00d2  ld   $d2
              982e 0047  ld   $47
              982f 0045  ld   $45
              9830 00d4  ld   $d4
              9831 004e  ld   $4e
              9832 0045  ld   $45
              9833 00d7  ld   $d7
              9834 0054  ld   $54
              9835 0041  ld   $41
              9836 0042  ld   $42
              9837 00a8  ld   $a8
              9838 0054  ld   $54
              9839 00cf  ld   $cf
              983a 0046  ld   $46
              983b 00ce  ld   $ce
              983c 0053  ld   $53
              983d 0050  ld   $50
              983e 0043  ld   $43
              983f 00a8  ld   $a8
              9840 0054  ld   $54
              9841 0048  ld   $48
              9842 0045  ld   $45
              9843 00ce  ld   $ce
              9844 004e  ld   $4e
              9845 004f  ld   $4f
              9846 00d4  ld   $d4
              9847 0053  ld   $53
              9848 0054  ld   $54
              9849 0045  ld   $45
              984a 00d0  ld   $d0
              984b 00ab  ld   $ab
              984c 00ad  ld   $ad
              984d 00aa  ld   $aa
              984e 00af  ld   $af
              984f 00de  ld   $de
              9850 0041  ld   $41
              9851 004e  ld   $4e
              9852 00c4  ld   $c4
              9853 004f  ld   $4f
              9854 00d2  ld   $d2
              9855 00be  ld   $be
              9856 00bd  ld   $bd
              9857 00bc  ld   $bc
              9858 0053  ld   $53
              9859 0047  ld   $47
              985a 00ce  ld   $ce
              985b 0049  ld   $49
              985c 004e  ld   $4e
              985d 00d4  ld   $d4
              985e 0041  ld   $41
              985f 0042  ld   $42
              9860 00d3  ld   $d3
              9861 0055  ld   $55
              9862 0053  ld   $53
              9863 00d2  ld   $d2
              9864 0046  ld   $46
              9865 0052  ld   $52
              9866 00c5  ld   $c5
              9867 0050  ld   $50
              9868 004f  ld   $4f
              9869 00d3  ld   $d3
              986a 0053  ld   $53
              986b 0051  ld   $51
              986c 00d2  ld   $d2
              986d 0052  ld   $52
              986e 004e  ld   $4e
              986f 00c4  ld   $c4
              9870 004c  ld   $4c
              9871 004f  ld   $4f
              9872 00c7  ld   $c7
              9873 0045  ld   $45
              9874 0058  ld   $58
              9875 00d0  ld   $d0
              9876 0043  ld   $43
              9877 004f  ld   $4f
              9878 00d3  ld   $d3
              9879 0053  ld   $53
              987a 0049  ld   $49
              987b 00ce  ld   $ce
              987c 0054  ld   $54
              987d 0041  ld   $41
              987e 00ce  ld   $ce
              987f 0041  ld   $41
              9880 0054  ld   $54
              9881 00ce  ld   $ce
              9882 0050  ld   $50
              9883 0045  ld   $45
              9884 0045  ld   $45
              9885 00cb  ld   $cb
              9886 004c  ld   $4c
              9887 0045  ld   $45
              9888 00ce  ld   $ce
              9889 0053  ld   $53
              988a 0054  ld   $54
              988b 0052  ld   $52
              988c 00a4  ld   $a4
              988d 0056  ld   $56
              988e 0041  ld   $41
              988f 00cc  ld   $cc
              9890 0041  ld   $41
              9891 0053  ld   $53
              9892 00c3  ld   $c3
              9893 0043  ld   $43
              9894 0048  ld   $48
              9895 0052  ld   $52
              9896 00a4  ld   $a4
              9897 004c  ld   $4c
              9898 0045  ld   $45
              9899 0046  ld   $46
              989a 0054  ld   $54
              989b 00a4  ld   $a4
              989c 0052  ld   $52
              989d 0049  ld   $49
              989e 0047  ld   $47
              989f 0048  ld   $48
              98a0 0054  ld   $54
              98a1 00a4  ld   $a4
              98a2 004d  ld   $4d
              98a3 0049  ld   $49
              98a4 0044  ld   $44
              98a5 00a4  ld   $a4
              98a6 0047  ld   $47
              98a7 00cf  ld   $cf
              98a8 0000  ld   $00
              98a9 004e  ld   $4e
              98aa 0045  ld   $45
              98ab 0058  ld   $58
              98ac 0054  ld   $54
              98ad 0020  ld   $20
              98ae 0057  ld   $57
              98af 0049  ld   $49
              98b0 0054  ld   $54
              98b1 0048  ld   $48
              98b2 004f  ld   $4f
              98b3 0055  ld   $55
              98b4 0054  ld   $54
              98b5 0020  ld   $20
              98b6 0046  ld   $46
              98b7 004f  ld   $4f
              98b8 00d2  ld   $d2
              98b9 0053  ld   $53
              98ba 0059  ld   $59
              98bb 004e  ld   $4e
              98bc 0054  ld   $54
              98bd 0041  ld   $41
              98be 00d8  ld   $d8
              98bf 0052  ld   $52
              98c0 0045  ld   $45
              98c1 0054  ld   $54
              98c2 0055  ld   $55
              98c3 0052  ld   $52
              98c4 004e  ld   $4e
              98c5 0020  ld   $20
              98c6 0057  ld   $57
              98c7 0049  ld   $49
              98c8 0054  ld   $54
              98c9 0048  ld   $48
              98ca 004f  ld   $4f
              98cb 0055  ld   $55
              98cc 0054  ld   $54
              98cd 0020  ld   $20
              98ce 0047  ld   $47
              98cf 004f  ld   $4f
              98d0 0053  ld   $53
              98d1 0055  ld   $55
              98d2 00c2  ld   $c2
              98d3 004f  ld   $4f
              98d4 0055  ld   $55
              98d5 0054  ld   $54
              98d6 0020  ld   $20
              98d7 004f  ld   $4f
              98d8 0046  ld   $46
              98d9 0020  ld   $20
              98da 0044  ld   $44
              98db 0041  ld   $41
              98dc 0054  ld   $54
              98dd 00c1  ld   $c1
              98de 0049  ld   $49
              98df 004c  ld   $4c
              98e0 004c  ld   $4c
              98e1 0045  ld   $45
              98e2 0047  ld   $47
              98e3 0041  ld   $41
              98e4 004c  ld   $4c
              98e5 0020  ld   $20
              98e6 0051  ld   $51
              98e7 0055  ld   $55
              98e8 0041  ld   $41
              98e9 004e  ld   $4e
              98ea 0054  ld   $54
              98eb 0049  ld   $49
              98ec 0054  ld   $54
              98ed 00d9  ld   $d9
              98ee 004f  ld   $4f
              98ef 0056  ld   $56
              98f0 0045  ld   $45
              98f1 0052  ld   $52
              98f2 0046  ld   $46
              98f3 004c  ld   $4c
              98f4 004f  ld   $4f
              98f5 00d7  ld   $d7
              98f6 004f  ld   $4f
              98f7 0055  ld   $55
              98f8 0054  ld   $54
              98f9 0020  ld   $20
              98fa 004f  ld   $4f
              98fb fe00  bra  ac          ;+-----------------------------------+
              98fc fcfd  bra  $98fd       ;|                                   |
              98fd 1418  ld   $18,y       ;| Trampoline for page $9800 lookups |
              98fe e006  jmp  y,$06       ;|                                   |
              98ff c218  st   [$18]       ;+-----------------------------------+
              9900 0046  ld   $46
              9901 0020  ld   $20
              9902 004d  ld   $4d
              9903 0045  ld   $45
              9904 004d  ld   $4d
              9905 004f  ld   $4f
              9906 0052  ld   $52
              9907 00d9  ld   $d9
              9908 0055  ld   $55
              9909 004e  ld   $4e
              990a 0044  ld   $44
              990b 0045  ld   $45
              990c 0046  ld   $46
              990d 0027  ld   $27
              990e 0044  ld   $44
              990f 0020  ld   $20
              9910 0053  ld   $53
              9911 0054  ld   $54
              9912 0041  ld   $41
              9913 0054  ld   $54
              9914 0045  ld   $45
              9915 004d  ld   $4d
              9916 0045  ld   $45
              9917 004e  ld   $4e
              9918 00d4  ld   $d4
              9919 0042  ld   $42
              991a 0041  ld   $41
              991b 0044  ld   $44
              991c 0020  ld   $20
              991d 0053  ld   $53
              991e 0055  ld   $55
              991f 0042  ld   $42
              9920 0053  ld   $53
              9921 0043  ld   $43
              9922 0052  ld   $52
              9923 0049  ld   $49
              9924 0050  ld   $50
              9925 00d4  ld   $d4
              9926 0052  ld   $52
              9927 0045  ld   $45
              9928 0044  ld   $44
              9929 0049  ld   $49
              992a 004d  ld   $4d
              992b 0004  ld   $04
              992c 0000  ld   $00
              992d 0000  ld   $00
              992e 0027  ld   $27
              992f 0044  ld   $44
              9930 0020  ld   $20
              9931 0041  ld   $41
              9932 0052  ld   $52
              9933 0052  ld   $52
              9934 0041  ld   $41
              9935 00d9  ld   $d9
              9936 0044  ld   $44
              9937 0049  ld   $49
              9938 0056  ld   $56
              9939 0049  ld   $49
              993a 0053  ld   $53
              993b 0049  ld   $49
              993c 004f  ld   $4f
              993d 004e  ld   $4e
              993e 0020  ld   $20
              993f 0042  ld   $42
              9940 0059  ld   $59
              9941 0020  ld   $20
              9942 005a  ld   $5a
              9943 0045  ld   $45
              9944 0052  ld   $52
              9945 00cf  ld   $cf
              9946 0049  ld   $49
              9947 004c  ld   $4c
              9948 004c  ld   $4c
              9949 0045  ld   $45
              994a 0047  ld   $47
              994b 0041  ld   $41
              994c 004c  ld   $4c
              994d 0020  ld   $20
              994e 0044  ld   $44
              994f 0049  ld   $49
              9950 0052  ld   $52
              9951 0045  ld   $45
              9952 0043  ld   $43
              9953 00d4  ld   $d4
              9954 0054  ld   $54
              9955 0059  ld   $59
              9956 0050  ld   $50
              9957 0045  ld   $45
              9958 0020  ld   $20
              9959 004d  ld   $4d
              995a 0049  ld   $49
              995b 0053  ld   $53
              995c 004d  ld   $4d
              995d 0041  ld   $41
              995e 0054  ld   $54
              995f 0043  ld   $43
              9960 00c8  ld   $c8
              9961 0053  ld   $53
              9962 0054  ld   $54
              9963 0052  ld   $52
              9964 0049  ld   $49
              9965 004e  ld   $4e
              9966 0047  ld   $47
              9967 0020  ld   $20
              9968 0054  ld   $54
              9969 004f  ld   $4f
              996a 004f  ld   $4f
              996b 0020  ld   $20
              996c 004c  ld   $4c
              996d 004f  ld   $4f
              996e 004e  ld   $4e
              996f 00c7  ld   $c7
              9970 0046  ld   $46
              9971 004f  ld   $4f
              9972 0052  ld   $52
              9973 004d  ld   $4d
              9974 0055  ld   $55
              9975 004c  ld   $4c
              9976 0041  ld   $41
              9977 0020  ld   $20
              9978 0054  ld   $54
              9979 004f  ld   $4f
              997a 004f  ld   $4f
              997b 0020  ld   $20
              997c 0043  ld   $43
              997d 004f  ld   $4f
              997e 004d  ld   $4d
              997f 0050  ld   $50
              9980 004c  ld   $4c
              9981 0045  ld   $45
              9982 00d8  ld   $d8
              9983 0043  ld   $43
              9984 0041  ld   $41
              9985 004e  ld   $4e
              9986 0027  ld   $27
              9987 0054  ld   $54
              9988 0020  ld   $20
              9989 0043  ld   $43
              998a 004f  ld   $4f
              998b 004e  ld   $4e
              998c 0054  ld   $54
              998d 0049  ld   $49
              998e 004e  ld   $4e
              998f 0055  ld   $55
              9990 00c5  ld   $c5
              9991 0055  ld   $55
              9992 004e  ld   $4e
              9993 0044  ld   $44
              9994 0045  ld   $45
              9995 0046  ld   $46
              9996 0027  ld   $27
              9997 0044  ld   $44
              9998 0020  ld   $20
              9999 0046  ld   $46
              999a 0055  ld   $55
              999b 004e  ld   $4e
              999c 0043  ld   $43
              999d 0054  ld   $54
              999e 0049  ld   $49
              999f 004f  ld   $4f
              99a0 00ce  ld   $ce
              99a1 0020  ld   $20
              99a2 0000  ld   $00
              99a3 002e  ld   $2e
              99a4 0038  ld   $38
              99a5 004c  ld   $4c
              99a6 00cc  ld   $cc
              99a7 000f  ld   $0f
              99a8 00a0  ld   $a0
              99a9 001b  ld   $1b
              99aa 0018  ld   $18
              99ab 0088  ld   $88
              99ac 0069  ld   $69
              99ad 0006  ld   $06
              99ae 0090  ld   $90
              99af 00fb  ld   $fb
              99b0 0060  ld   $60
              99b1 0020  ld   $20
              99b2 0045  ld   $45
              99b3 0052  ld   $52
              99b4 0052  ld   $52
              99b5 004f  ld   $4f
              99b6 0052  ld   $52
              99b7 0000  ld   $00
              99b8 0020  ld   $20
              99b9 0049  ld   $49
              99ba 004e  ld   $4e
              99bb 0020  ld   $20
              99bc 0000  ld   $00
              99bd 000d  ld   $0d
              99be 000a  ld   $0a
              99bf 0052  ld   $52
              99c0 0045  ld   $45
              99c1 0041  ld   $41
              99c2 0044  ld   $44
              99c3 0059  ld   $59
              99c4 002e  ld   $2e
              99c5 000d  ld   $0d
              99c6 000a  ld   $0a
              99c7 0000  ld   $00
              99c8 000d  ld   $0d
              99c9 000a  ld   $0a
              99ca 0042  ld   $42
              99cb 0052  ld   $52
              99cc 0045  ld   $45
              99cd 0041  ld   $41
              99ce 004b  ld   $4b
              99cf 0000  ld   $00
              99d0 00ba  ld   $ba
              99d1 00e8  ld   $e8
              99d2 00e8  ld   $e8
              99d3 00e8  ld   $e8
              99d4 00e8  ld   $e8
              99d5 00b5  ld   $b5
              99d6 0001  ld   $01
              99d7 00c9  ld   $c9
              99d8 0081  ld   $81
              99d9 00d0  ld   $d0
              99da 001d  ld   $1d
              99db 00a5  ld   $a5
              99dc 007c  ld   $7c
              99dd 00d0  ld   $d0
              99de 0008  ld   $08
              99df 00b5  ld   $b5
              99e0 0002  ld   $02
              99e1 0085  ld   $85
              99e2 007b  ld   $7b
              99e3 00b5  ld   $b5
              99e4 0003  ld   $03
              99e5 0085  ld   $85
              99e6 007c  ld   $7c
              99e7 00d5  ld   $d5
              99e8 0003  ld   $03
              99e9 00d0  ld   $d0
              99ea 0006  ld   $06
              99eb 00a5  ld   $a5
              99ec 007b  ld   $7b
              99ed 00d5  ld   $d5
              99ee 0002  ld   $02
              99ef 00f0  ld   $f0
              99f0 0007  ld   $07
              99f1 008a  ld   $8a
              99f2 0018  ld   $18
              99f3 0069  ld   $69
              99f4 0012  ld   $12
              99f5 00aa  ld   $aa
              99f6 00d0  ld   $d0
              99f7 00dd  ld   $dd
              99f8 0060  ld   $60
              99f9 0020  ld   $20
              99fa 001b  ld   $1b
              99fb fe00  bra  ac          ;+-----------------------------------+
              99fc fcfd  bra  $99fd       ;|                                   |
              99fd 1418  ld   $18,y       ;| Trampoline for page $9900 lookups |
              99fe e006  jmp  y,$06       ;|                                   |
              99ff c218  st   [$18]       ;+-----------------------------------+
              9a00 0005  ld   $05
              9a01 0085  ld   $85
              9a02 0063  ld   $63
              9a03 0084  ld   $84
              9a04 0064  ld   $64
              9a05 0038  ld   $38
              9a06 00a5  ld   $a5
              9a07 008d  ld   $8d
              9a08 00e5  ld   $e5
              9a09 0092  ld   $92
              9a0a 0085  ld   $85
              9a0b 0054  ld   $54
              9a0c 00a8  ld   $a8
              9a0d 00a5  ld   $a5
              9a0e 008e  ld   $8e
              9a0f 00e5  ld   $e5
              9a10 0093  ld   $93
              9a11 00aa  ld   $aa
              9a12 00e8  ld   $e8
              9a13 0098  ld   $98
              9a14 00f0  ld   $f0
              9a15 0023  ld   $23
              9a16 00a5  ld   $a5
              9a17 008d  ld   $8d
              9a18 0038  ld   $38
              9a19 00e5  ld   $e5
              9a1a 0054  ld   $54
              9a1b 0085  ld   $85
              9a1c 008d  ld   $8d
              9a1d 00b0  ld   $b0
              9a1e 0003  ld   $03
              9a1f 00c6  ld   $c6
              9a20 008e  ld   $8e
              9a21 0038  ld   $38
              9a22 00a5  ld   $a5
              9a23 008b  ld   $8b
              9a24 00e5  ld   $e5
              9a25 0054  ld   $54
              9a26 0085  ld   $85
              9a27 008b  ld   $8b
              9a28 00b0  ld   $b0
              9a29 0008  ld   $08
              9a2a 00c6  ld   $c6
              9a2b 008c  ld   $8c
              9a2c 0090  ld   $90
              9a2d 0004  ld   $04
              9a2e 00b1  ld   $b1
              9a2f 008d  ld   $8d
              9a30 0091  ld   $91
              9a31 008b  ld   $8b
              9a32 0088  ld   $88
              9a33 0005  ld   $05
              9a34 0000  ld   $00
              9a35 0000  ld   $00
              9a36 00d0  ld   $d0
              9a37 00f9  ld   $f9
              9a38 00b1  ld   $b1
              9a39 008d  ld   $8d
              9a3a 0091  ld   $91
              9a3b 008b  ld   $8b
              9a3c 00c6  ld   $c6
              9a3d 008e  ld   $8e
              9a3e 00c6  ld   $c6
              9a3f 008c  ld   $8c
              9a40 00ca  ld   $ca
              9a41 00d0  ld   $d0
              9a42 00f2  ld   $f2
              9a43 0060  ld   $60
              9a44 000a  ld   $0a
              9a45 0069  ld   $69
              9a46 00b2  ld   $b2
              9a47 00b0  ld   $b0
              9a48 0035  ld   $35
              9a49 0085  ld   $85
              9a4a 0054  ld   $54
              9a4b 00ba  ld   $ba
              9a4c 00e4  ld   $e4
              9a4d 0054  ld   $54
              9a4e 0090  ld   $90
              9a4f 002e  ld   $2e
              9a50 0060  ld   $60
              9a51 00c4  ld   $c4
              9a52 0066  ld   $66
              9a53 0090  ld   $90
              9a54 0028  ld   $28
              9a55 00d0  ld   $d0
              9a56 0004  ld   $04
              9a57 00c5  ld   $c5
              9a58 0065  ld   $65
              9a59 0090  ld   $90
              9a5a 0022  ld   $22
              9a5b 0048  ld   $48
              9a5c 00a2  ld   $a2
              9a5d 0009  ld   $09
              9a5e 0098  ld   $98
              9a5f 0048  ld   $48
              9a60 00b5  ld   $b5
              9a61 008a  ld   $8a
              9a62 00ca  ld   $ca
              9a63 0010  ld   $10
              9a64 00fa  ld   $fa
              9a65 0020  ld   $20
              9a66 0062  ld   $62
              9a67 0015  ld   $15
              9a68 00a2  ld   $a2
              9a69 00f7  ld   $f7
              9a6a 0068  ld   $68
              9a6b 0095  ld   $95
              9a6c 0094  ld   $94
              9a6d 00e8  ld   $e8
              9a6e 0030  ld   $30
              9a6f 00fa  ld   $fa
              9a70 0068  ld   $68
              9a71 00a8  ld   $a8
              9a72 0068  ld   $68
              9a73 00c4  ld   $c4
              9a74 0066  ld   $66
              9a75 0090  ld   $90
              9a76 0006  ld   $06
              9a77 00d0  ld   $d0
              9a78 0005  ld   $05
              9a79 00c5  ld   $c5
              9a7a 0065  ld   $65
              9a7b 00b0  ld   $b0
              9a7c 0001  ld   $01
              9a7d 0060  ld   $60
              9a7e 00a2  ld   $a2
              9a7f 004d  ld   $4d
              9a80 0046  ld   $46
              9a81 0045  ld   $45
              9a82 0020  ld   $20
              9a83 00ac  ld   $ac
              9a84 000b  ld   $0b
              9a85 0020  ld   $20
              9a86 000f  ld   $0f
              9a87 000c  ld   $0c
              9a88 00bd  ld   $bd
              9a89 0083  ld   $83
              9a8a 0003  ld   $03
              9a8b 0048  ld   $48
              9a8c 0029  ld   $29
              9a8d 007f  ld   $7f
              9a8e 0020  ld   $20
              9a8f 0011  ld   $11
              9a90 000c  ld   $0c
              9a91 00e8  ld   $e8
              9a92 0068  ld   $68
              9a93 0010  ld   $10
              9a94 00f3  ld   $f3
              9a95 0020  ld   $20
              9a96 007a  ld   $7a
              9a97 0007  ld   $07
              9a98 00a9  ld   $a9
              9a99 0083  ld   $83
              9a9a 00a0  ld   $a0
              9a9b 0004  ld   $04
              9a9c 0020  ld   $20
              9a9d 00ef  ld   $ef
              9a9e 000b  ld   $0b
              9a9f 00a4  ld   $a4
              9aa0 006c  ld   $6c
              9aa1 00c8  ld   $c8
              9aa2 00f0  ld   $f0
              9aa3 0003  ld   $03
              9aa4 0020  ld   $20
              9aa5 003a  ld   $3a
              9aa6 001e  ld   $1e
              9aa7 0046  ld   $46
              9aa8 0045  ld   $45
              9aa9 00a9  ld   $a9
              9aaa 008f  ld   $8f
              9aab 00a0  ld   $a0
              9aac 0004  ld   $04
              9aad 0020  ld   $20
              9aae 00ef  ld   $ef
              9aaf 000b  ld   $0b
              9ab0 0020  ld   $20
              9ab1 0057  ld   $57
              9ab2 0006  ld   $06
              9ab3 0086  ld   $86
              9ab4 00a6  ld   $a6
              9ab5 0084  ld   $84
              9ab6 00a7  ld   $a7
              9ab7 0020  ld   $20
              9ab8 006b  ld   $6b
              9ab9 0022  ld   $22
              9aba 00aa  ld   $aa
              9abb 00f0  ld   $f0
              9abc 00f3  ld   $f3
              9abd 00a2  ld   $a2
              9abe 00ff  ld   $ff
              9abf 0086  ld   $86
              9ac0 006c  ld   $6c
              9ac1 0090  ld   $90
              9ac2 0006  ld   $06
              9ac3 0020  ld   $20
              9ac4 007e  ld   $7e
              9ac5 0006  ld   $06
              9ac6 004c  ld   $4c
              9ac7 00de  ld   $de
              9ac8 0008  ld   $08
              9ac9 0020  ld   $20
              9aca 005a  ld   $5a
              9acb 000a  ld   $0a
              9acc 0020  ld   $20
              9acd 007e  ld   $7e
              9ace 0006  ld   $06
              9acf 0084  ld   $84
              9ad0 003d  ld   $3d
              9ad1 0020  ld   $20
              9ad2 0013  ld   $13
              9ad3 0007  ld   $07
              9ad4 0090  ld   $90
              9ad5 0044  ld   $44
              9ad6 00a0  ld   $a0
              9ad7 0001  ld   $01
              9ad8 00b1  ld   $b1
              9ad9 0092  ld   $92
              9ada 0085  ld   $85
              9adb 0055  ld   $55
              9adc 00a5  ld   $a5
              9add 005f  ld   $5f
              9ade 0085  ld   $85
              9adf 0054  ld   $54
              9ae0 00a5  ld   $a5
              9ae1 0093  ld   $93
              9ae2 0085  ld   $85
              9ae3 0057  ld   $57
              9ae4 00a5  ld   $a5
              9ae5 0092  ld   $92
              9ae6 0088  ld   $88
              9ae7 00f1  ld   $f1
              9ae8 0092  ld   $92
              9ae9 0018  ld   $18
              9aea 0065  ld   $65
              9aeb 005f  ld   $5f
              9aec 0085  ld   $85
              9aed 005f  ld   $5f
              9aee 0085  ld   $85
              9aef 0056  ld   $56
              9af0 00a5  ld   $a5
              9af1 0060  ld   $60
              9af2 0069  ld   $69
              9af3 00ff  ld   $ff
              9af4 0085  ld   $85
              9af5 0060  ld   $60
              9af6 00e5  ld   $e5
              9af7 0093  ld   $93
              9af8 00aa  ld   $aa
              9af9 0038  ld   $38
              9afa 00a5  ld   $a5
              9afb fe00  bra  ac          ;+-----------------------------------+
              9afc fcfd  bra  $9afd       ;|                                   |
              9afd 1418  ld   $18,y       ;| Trampoline for page $9a00 lookups |
              9afe e006  jmp  y,$06       ;|                                   |
              9aff c218  st   [$18]       ;+-----------------------------------+
              9b00 0092  ld   $92
              9b01 00e5  ld   $e5
              9b02 005f  ld   $5f
              9b03 00a8  ld   $a8
              9b04 00b0  ld   $b0
              9b05 0003  ld   $03
              9b06 00e8  ld   $e8
              9b07 00c6  ld   $c6
              9b08 0057  ld   $57
              9b09 0018  ld   $18
              9b0a 0065  ld   $65
              9b0b 0054  ld   $54
              9b0c 0090  ld   $90
              9b0d 0003  ld   $03
              9b0e 00c6  ld   $c6
              9b0f 0055  ld   $55
              9b10 0018  ld   $18
              9b11 00b1  ld   $b1
              9b12 0054  ld   $54
              9b13 0091  ld   $91
              9b14 0056  ld   $56
              9b15 00c8  ld   $c8
              9b16 00d0  ld   $d0
              9b17 00f9  ld   $f9
              9b18 00e6  ld   $e6
              9b19 0055  ld   $55
              9b1a 00e6  ld   $e6
              9b1b 0057  ld   $57
              9b1c 00ca  ld   $ca
              9b1d 00d0  ld   $d0
              9b1e 00f2  ld   $f2
              9b1f 0020  ld   $20
              9b20 0059  ld   $59
              9b21 0007  ld   $07
              9b22 0020  ld   $20
              9b23 002a  ld   $2a
              9b24 0006  ld   $06
              9b25 00ad  ld   $ad
              9b26 0005  ld   $05
              9b27 0024  ld   $24
              9b28 00f0  ld   $f0
              9b29 008b  ld   $8b
              9b2a 0018  ld   $18
              9b2b 00a5  ld   $a5
              9b2c 005f  ld   $5f
              9b2d 0085  ld   $85
              9b2e 008d  ld   $8d
              9b2f 0065  ld   $65
              9b30 003d  ld   $3d
              9b31 0085  ld   $85
              9b32 008b  ld   $8b
              9b33 00a4  ld   $a4
              9b34 0060  ld   $60
              9b35 0084  ld   $84
              9b36 008e  ld   $8e
              9b37 0090  ld   $90
              9b38 0001  ld   $01
              9b39 00c8  ld   $c8
              9b3a 0084  ld   $84
              9b3b 0006  ld   $06
              9b3c 0000  ld   $00
              9b3d 0000  ld   $00
              9b3e 008c  ld   $8c
              9b3f 0020  ld   $20
              9b40 00cb  ld   $cb
              9b41 0004  ld   $04
              9b42 00a5  ld   $a5
              9b43 0046  ld   $46
              9b44 00a4  ld   $a4
              9b45 0047  ld   $47
              9b46 008d  ld   $8d
              9b47 0003  ld   $03
              9b48 0024  ld   $24
              9b49 008c  ld   $8c
              9b4a 0004  ld   $04
              9b4b 0024  ld   $24
              9b4c 00a5  ld   $a5
              9b4d 0063  ld   $63
              9b4e 00a4  ld   $a4
              9b4f 0064  ld   $64
              9b50 0085  ld   $85
              9b51 005f  ld   $5f
              9b52 0084  ld   $84
              9b53 0060  ld   $60
              9b54 00a4  ld   $a4
              9b55 003d  ld   $3d
              9b56 0088  ld   $88
              9b57 00b9  ld   $b9
              9b58 0001  ld   $01
              9b59 0024  ld   $24
              9b5a 0091  ld   $91
              9b5b 0092  ld   $92
              9b5c 0088  ld   $88
              9b5d 0010  ld   $10
              9b5e 00f8  ld   $f8
              9b5f 0020  ld   $20
              9b60 0059  ld   $59
              9b61 0007  ld   $07
              9b62 0020  ld   $20
              9b63 002a  ld   $2a
              9b64 0006  ld   $06
              9b65 004c  ld   $4c
              9b66 007a  ld   $7a
              9b67 0005  ld   $05
              9b68 00a5  ld   $a5
              9b69 005d  ld   $5d
              9b6a 00a4  ld   $a4
              9b6b 005e  ld   $5e
              9b6c 0085  ld   $85
              9b6d 0054  ld   $54
              9b6e 0084  ld   $84
              9b6f 0055  ld   $55
              9b70 0018  ld   $18
              9b71 00a0  ld   $a0
              9b72 0001  ld   $01
              9b73 00b1  ld   $b1
              9b74 0054  ld   $54
              9b75 00f0  ld   $f0
              9b76 001d  ld   $1d
              9b77 00a0  ld   $a0
              9b78 0004  ld   $04
              9b79 00c8  ld   $c8
              9b7a 00b1  ld   $b1
              9b7b 0054  ld   $54
              9b7c 00d0  ld   $d0
              9b7d 00fb  ld   $fb
              9b7e 00c8  ld   $c8
              9b7f 0098  ld   $98
              9b80 0065  ld   $65
              9b81 0054  ld   $54
              9b82 00aa  ld   $aa
              9b83 00a0  ld   $a0
              9b84 0000  ld   $00
              9b85 0091  ld   $91
              9b86 0054  ld   $54
              9b87 00a5  ld   $a5
              9b88 0055  ld   $55
              9b89 0069  ld   $69
              9b8a 0000  ld   $00
              9b8b 00c8  ld   $c8
              9b8c 0091  ld   $91
              9b8d 0054  ld   $54
              9b8e 0086  ld   $86
              9b8f 0054  ld   $54
              9b90 0085  ld   $85
              9b91 0055  ld   $55
              9b92 0090  ld   $90
              9b93 00dd  ld   $dd
              9b94 0060  ld   $60
              9b95 00a2  ld   $a2
              9b96 0000  ld   $00
              9b97 0020  ld   $20
              9b98 006e  ld   $6e
              9b99 0006  ld   $06
              9b9a 00c9  ld   $c9
              9b9b 000d  ld   $0d
              9b9c 00f0  ld   $f0
              9b9d 000b  ld   $0b
              9b9e 0020  ld   $20
              9b9f 0000  ld   $00
              9ba0 002f  ld   $2f
              9ba1 00f0  ld   $f0
              9ba2 00f4  ld   $f4
              9ba3 009d  ld   $9d
              9ba4 0005  ld   $05
              9ba5 0024  ld   $24
              9ba6 00e8  ld   $e8
              9ba7 00d0  ld   $d0
              9ba8 00ee  ld   $ee
              9ba9 004c  ld   $4c
              9baa 00a3  ld   $a3
              9bab 000b  ld   $0b
              9bac 0020  ld   $20
              9bad 0000  ld   $00
              9bae 002c  ld   $2c
              9baf 00c9  ld   $c9
              9bb0 000f  ld   $0f
              9bb1 00d0  ld   $d0
              9bb2 0008  ld   $08
              9bb3 0048  ld   $48
              9bb4 00a5  ld   $a5
              9bb5 0045  ld   $45
              9bb6 0049  ld   $49
              9bb7 00ff  ld   $ff
              9bb8 0085  ld   $85
              9bb9 0045  ld   $45
              9bba 0068  ld   $68
              9bbb 0060  ld   $60
              9bbc 00a6  ld   $a6
              9bbd 00a6  ld   $a6
              9bbe 00a0  ld   $a0
              9bbf 0004  ld   $04
              9bc0 0084  ld   $84
              9bc1 0041  ld   $41
              9bc2 00bd  ld   $bd
              9bc3 0000  ld   $00
              9bc4 0024  ld   $24
              9bc5 0010  ld   $10
              9bc6 0007  ld   $07
              9bc7 00c9  ld   $c9
              9bc8 00ff  ld   $ff
              9bc9 00f0  ld   $f0
              9bca 003e  ld   $3e
              9bcb 00e8  ld   $e8
              9bcc 00d0  ld   $d0
              9bcd 00f4  ld   $f4
              9bce 00c9  ld   $c9
              9bcf 0020  ld   $20
              9bd0 00f0  ld   $f0
              9bd1 0037  ld   $37
              9bd2 0085  ld   $85
              9bd3 003c  ld   $3c
              9bd4 00c9  ld   $c9
              9bd5 0022  ld   $22
              9bd6 00f0  ld   $f0
              9bd7 0056  ld   $56
              9bd8 0024  ld   $24
              9bd9 0041  ld   $41
              9bda 0070  ld   $70
              9bdb 002d  ld   $2d
              9bdc 00c9  ld   $c9
              9bdd 003f  ld   $3f
              9bde 00d0  ld   $d0
              9bdf 0004  ld   $04
              9be0 00a9  ld   $a9
              9be1 0097  ld   $97
              9be2 00d0  ld   $d0
              9be3 0025  ld   $25
              9be4 00c9  ld   $c9
              9be5 0030  ld   $30
              9be6 0090  ld   $90
              9be7 0004  ld   $04
              9be8 00c9  ld   $c9
              9be9 003c  ld   $3c
              9bea 0090  ld   $90
              9beb 001d  ld   $1d
              9bec 0084  ld   $84
              9bed 00a4  ld   $a4
              9bee 00a0  ld   $a0
              9bef 0000  ld   $00
              9bf0 0084  ld   $84
              9bf1 003d  ld   $3d
              9bf2 0088  ld   $88
              9bf3 0086  ld   $86
              9bf4 00a6  ld   $a6
              9bf5 00ca  ld   $ca
              9bf6 00c8  ld   $c8
              9bf7 00e8  ld   $e8
              9bf8 00bd  ld   $bd
              9bf9 0000  ld   $00
              9bfa 0024  ld   $24
              9bfb fe00  bra  ac          ;+-----------------------------------+
              9bfc fcfd  bra  $9bfd       ;|                                   |
              9bfd 1418  ld   $18,y       ;| Trampoline for page $9b00 lookups |
              9bfe e006  jmp  y,$06       ;|                                   |
              9bff c218  st   [$18]       ;+-----------------------------------+
              9c00 0038  ld   $38
              9c01 00f9  ld   $f9
              9c02 009e  ld   $9e
              9c03 0002  ld   $02
              9c04 00f0  ld   $f0
              9c05 00f5  ld   $f5
              9c06 00c9  ld   $c9
              9c07 0080  ld   $80
              9c08 00d0  ld   $d0
              9c09 0030  ld   $30
              9c0a 0005  ld   $05
              9c0b 003d  ld   $3d
              9c0c 00a4  ld   $a4
              9c0d 00a4  ld   $a4
              9c0e 00e8  ld   $e8
              9c0f 00c8  ld   $c8
              9c10 0099  ld   $99
              9c11 0000  ld   $00
              9c12 0024  ld   $24
              9c13 00b9  ld   $b9
              9c14 0000  ld   $00
              9c15 0024  ld   $24
              9c16 00f0  ld   $f0
              9c17 0036  ld   $36
              9c18 0038  ld   $38
              9c19 00e9  ld   $e9
              9c1a 003a  ld   $3a
              9c1b 00f0  ld   $f0
              9c1c 0004  ld   $04
              9c1d 00c9  ld   $c9
              9c1e 0049  ld   $49
              9c1f 00d0  ld   $d0
              9c20 0002  ld   $02
              9c21 0085  ld   $85
              9c22 0041  ld   $41
              9c23 0038  ld   $38
              9c24 00e9  ld   $e9
              9c25 0054  ld   $54
              9c26 00d0  ld   $d0
              9c27 009f  ld   $9f
              9c28 0085  ld   $85
              9c29 003c  ld   $3c
              9c2a 00bd  ld   $bd
              9c2b 0000  ld   $00
              9c2c 0024  ld   $24
              9c2d 00f0  ld   $f0
              9c2e 00df  ld   $df
              9c2f 00c5  ld   $c5
              9c30 003c  ld   $3c
              9c31 00f0  ld   $f0
              9c32 00db  ld   $db
              9c33 00c8  ld   $c8
              9c34 0099  ld   $99
              9c35 0000  ld   $00
              9c36 0024  ld   $24
              9c37 00e8  ld   $e8
              9c38 00d0  ld   $d0
              9c39 00f0  ld   $f0
              9c3a 00a6  ld   $a6
              9c3b 00a6  ld   $a6
              9c3c 00e6  ld   $e6
              9c3d 003d  ld   $3d
              9c3e 00c8  ld   $c8
              9c3f 00b9  ld   $b9
              9c40 009d  ld   $9d
              9c41 0002  ld   $02
              9c42 0010  ld   $10
              9c43 0007  ld   $07
              9c44 0000  ld   $00
              9c45 0000  ld   $00
              9c46 00fa  ld   $fa
              9c47 00b9  ld   $b9
              9c48 009e  ld   $9e
              9c49 0002  ld   $02
              9c4a 00d0  ld   $d0
              9c4b 00b4  ld   $b4
              9c4c 00bd  ld   $bd
              9c4d 0000  ld   $00
              9c4e 0024  ld   $24
              9c4f 0010  ld   $10
              9c50 00be  ld   $be
              9c51 0099  ld   $99
              9c52 0002  ld   $02
              9c53 0024  ld   $24
              9c54 00a9  ld   $a9
              9c55 0004  ld   $04
              9c56 0085  ld   $85
              9c57 00a6  ld   $a6
              9c58 0060  ld   $60
              9c59 00a5  ld   $a5
              9c5a 005d  ld   $5d
              9c5b 00a6  ld   $a6
              9c5c 005e  ld   $5e
              9c5d 00a0  ld   $a0
              9c5e 0001  ld   $01
              9c5f 0085  ld   $85
              9c60 0092  ld   $92
              9c61 0086  ld   $86
              9c62 0093  ld   $93
              9c63 00b1  ld   $b1
              9c64 0092  ld   $92
              9c65 00f0  ld   $f0
              9c66 001f  ld   $1f
              9c67 00c8  ld   $c8
              9c68 00c8  ld   $c8
              9c69 00a5  ld   $a5
              9c6a 0047  ld   $47
              9c6b 00d1  ld   $d1
              9c6c 0092  ld   $92
              9c6d 0090  ld   $90
              9c6e 0018  ld   $18
              9c6f 00f0  ld   $f0
              9c70 0003  ld   $03
              9c71 0088  ld   $88
              9c72 00d0  ld   $d0
              9c73 0009  ld   $09
              9c74 00a5  ld   $a5
              9c75 0046  ld   $46
              9c76 0088  ld   $88
              9c77 00d1  ld   $d1
              9c78 0092  ld   $92
              9c79 0090  ld   $90
              9c7a 000c  ld   $0c
              9c7b 00f0  ld   $f0
              9c7c 000a  ld   $0a
              9c7d 0088  ld   $88
              9c7e 00b1  ld   $b1
              9c7f 0092  ld   $92
              9c80 00aa  ld   $aa
              9c81 0088  ld   $88
              9c82 00b1  ld   $b1
              9c83 0092  ld   $92
              9c84 00b0  ld   $b0
              9c85 00d7  ld   $d7
              9c86 0018  ld   $18
              9c87 0060  ld   $60
              9c88 00d0  ld   $d0
              9c89 00fd  ld   $fd
              9c8a 00a9  ld   $a9
              9c8b 0000  ld   $00
              9c8c 00a8  ld   $a8
              9c8d 0091  ld   $91
              9c8e 005d  ld   $5d
              9c8f 00c8  ld   $c8
              9c90 0091  ld   $91
              9c91 005d  ld   $5d
              9c92 00a5  ld   $a5
              9c93 005d  ld   $5d
              9c94 0018  ld   $18
              9c95 0069  ld   $69
              9c96 0002  ld   $02
              9c97 0085  ld   $85
              9c98 005f  ld   $5f
              9c99 00a5  ld   $a5
              9c9a 005e  ld   $5e
              9c9b 0069  ld   $69
              9c9c 0000  ld   $00
              9c9d 0085  ld   $85
              9c9e 0060  ld   $60
              9c9f 0020  ld   $20
              9ca0 008e  ld   $8e
              9ca1 0007  ld   $07
              9ca2 00a9  ld   $a9
              9ca3 0000  ld   $00
              9ca4 00d0  ld   $d0
              9ca5 002d  ld   $2d
              9ca6 00a5  ld   $a5
              9ca7 0069  ld   $69
              9ca8 00a4  ld   $a4
              9ca9 006a  ld   $6a
              9caa 0085  ld   $85
              9cab 0065  ld   $65
              9cac 0084  ld   $84
              9cad 0066  ld   $66
              9cae 0020  ld   $20
              9caf 0000  ld   $00
              9cb0 002e  ld   $2e
              9cb1 00a5  ld   $a5
              9cb2 005f  ld   $5f
              9cb3 00a4  ld   $a4
              9cb4 0060  ld   $60
              9cb5 0085  ld   $85
              9cb6 0061  ld   $61
              9cb7 0084  ld   $84
              9cb8 0062  ld   $62
              9cb9 0085  ld   $85
              9cba 0063  ld   $63
              9cbb 0084  ld   $84
              9cbc 0064  ld   $64
              9cbd 0020  ld   $20
              9cbe 0017  ld   $17
              9cbf 0009  ld   $09
              9cc0 00a2  ld   $a2
              9cc1 004b  ld   $4b
              9cc2 0086  ld   $86
              9cc3 0048  ld   $48
              9cc4 0068  ld   $68
              9cc5 00a8  ld   $a8
              9cc6 0068  ld   $68
              9cc7 00a2  ld   $a2
              9cc8 00ff  ld   $ff
              9cc9 009a  ld   $9a
              9cca 0048  ld   $48
              9ccb 0098  ld   $98
              9ccc 0048  ld   $48
              9ccd 00a9  ld   $a9
              9cce 0000  ld   $00
              9ccf 0085  ld   $85
              9cd0 0070  ld   $70
              9cd1 0085  ld   $85
              9cd2 0042  ld   $42
              9cd3 0060  ld   $60
              9cd4 0018  ld   $18
              9cd5 00a5  ld   $a5
              9cd6 005d  ld   $5d
              9cd7 0069  ld   $69
              9cd8 00ff  ld   $ff
              9cd9 0085  ld   $85
              9cda 00a6  ld   $a6
              9cdb 00a5  ld   $a5
              9cdc 005e  ld   $5e
              9cdd 0069  ld   $69
              9cde 00ff  ld   $ff
              9cdf 0085  ld   $85
              9ce0 00a7  ld   $a7
              9ce1 0060  ld   $60
              9ce2 0090  ld   $90
              9ce3 0006  ld   $06
              9ce4 00f0  ld   $f0
              9ce5 0004  ld   $04
              9ce6 00c9  ld   $c9
              9ce7 00a5  ld   $a5
              9ce8 00d0  ld   $d0
              9ce9 00e9  ld   $e9
              9cea 0020  ld   $20
              9ceb 005a  ld   $5a
              9cec 000a  ld   $0a
              9ced 0020  ld   $20
              9cee 0013  ld   $13
              9cef 0007  ld   $07
              9cf0 0020  ld   $20
              9cf1 0071  ld   $71
              9cf2 0022  ld   $22
              9cf3 00f0  ld   $f0
              9cf4 000c  ld   $0c
              9cf5 00c9  ld   $c9
              9cf6 00a5  ld   $a5
              9cf7 00d0  ld   $d0
              9cf8 008e  ld   $8e
              9cf9 0020  ld   $20
              9cfa 006b  ld   $6b
              9cfb fe00  bra  ac          ;+-----------------------------------+
              9cfc fcfd  bra  $9cfd       ;|                                   |
              9cfd 1418  ld   $18,y       ;| Trampoline for page $9c00 lookups |
              9cfe e006  jmp  y,$06       ;|                                   |
              9cff c218  st   [$18]       ;+-----------------------------------+
              9d00 0022  ld   $22
              9d01 0020  ld   $20
              9d02 005a  ld   $5a
              9d03 000a  ld   $0a
              9d04 00d0  ld   $d0
              9d05 0086  ld   $86
              9d06 0068  ld   $68
              9d07 0068  ld   $68
              9d08 00a5  ld   $a5
              9d09 0046  ld   $46
              9d0a 0005  ld   $05
              9d0b 0047  ld   $47
              9d0c 00d0  ld   $d0
              9d0d 0006  ld   $06
              9d0e 00a9  ld   $a9
              9d0f 00ff  ld   $ff
              9d10 0085  ld   $85
              9d11 0046  ld   $46
              9d12 0085  ld   $85
              9d13 0047  ld   $47
              9d14 00a0  ld   $a0
              9d15 0001  ld   $01
              9d16 0084  ld   $84
              9d17 0041  ld   $41
              9d18 00b1  ld   $b1
              9d19 0092  ld   $92
              9d1a 00f0  ld   $f0
              9d1b 0043  ld   $43
              9d1c 0020  ld   $20
              9d1d 0000  ld   $00
              9d1e 002d  ld   $2d
              9d1f 0020  ld   $20
              9d20 00ac  ld   $ac
              9d21 000b  ld   $0b
              9d22 00c8  ld   $c8
              9d23 00b1  ld   $b1
              9d24 0092  ld   $92
              9d25 00aa  ld   $aa
              9d26 00c8  ld   $c8
              9d27 00b1  ld   $b1
              9d28 0092  ld   $92
              9d29 00c5  ld   $c5
              9d2a 0047  ld   $47
              9d2b 00d0  ld   $d0
              9d2c 0004  ld   $04
              9d2d 00e4  ld   $e4
              9d2e 0046  ld   $46
              9d2f 00f0  ld   $f0
              9d30 0002  ld   $02
              9d31 00b0  ld   $b0
              9d32 002c  ld   $2c
              9d33 0084  ld   $84
              9d34 007b  ld   $7b
              9d35 0020  ld   $20
              9d36 0045  ld   $45
              9d37 001e  ld   $1e
              9d38 00a9  ld   $a9
              9d39 0020  ld   $20
              9d3a 00a4  ld   $a4
              9d3b 007b  ld   $7b
              9d3c 0029  ld   $29
              9d3d 007f  ld   $7f
              9d3e 0020  ld   $20
              9d3f 0011  ld   $11
              9d40 000c  ld   $0c
              9d41 00c9  ld   $c9
              9d42 0022  ld   $22
              9d43 00d0  ld   $d0
              9d44 0006  ld   $06
              9d45 00a5  ld   $a5
              9d46 0041  ld   $41
              9d47 0049  ld   $49
              9d48 00ff  ld   $ff
              9d49 0085  ld   $85
              9d4a 0041  ld   $41
              9d4b 0008  ld   $08
              9d4c 0000  ld   $00
              9d4d 0000  ld   $00
              9d4e 00c8  ld   $c8
              9d4f 00f0  ld   $f0
              9d50 0011  ld   $11
              9d51 00b1  ld   $b1
              9d52 0092  ld   $92
              9d53 00d0  ld   $d0
              9d54 0010  ld   $10
              9d55 00a8  ld   $a8
              9d56 00b1  ld   $b1
              9d57 0092  ld   $92
              9d58 00aa  ld   $aa
              9d59 00c8  ld   $c8
              9d5a 00b1  ld   $b1
              9d5b 0092  ld   $92
              9d5c 0086  ld   $86
              9d5d 0092  ld   $92
              9d5e 0085  ld   $85
              9d5f 0093  ld   $93
              9d60 00d0  ld   $d0
              9d61 00b5  ld   $b5
              9d62 004c  ld   $4c
              9d63 0071  ld   $71
              9d64 0005  ld   $05
              9d65 0010  ld   $10
              9d66 00da  ld   $da
              9d67 00c9  ld   $c9
              9d68 00ff  ld   $ff
              9d69 00f0  ld   $f0
              9d6a 00d6  ld   $d6
              9d6b 0024  ld   $24
              9d6c 0041  ld   $41
              9d6d 0030  ld   $30
              9d6e 00d2  ld   $d2
              9d6f 0038  ld   $38
              9d70 00e9  ld   $e9
              9d71 007f  ld   $7f
              9d72 00aa  ld   $aa
              9d73 0084  ld   $84
              9d74 007b  ld   $7b
              9d75 00a0  ld   $a0
              9d76 00ff  ld   $ff
              9d77 00ca  ld   $ca
              9d78 00f0  ld   $f0
              9d79 0008  ld   $08
              9d7a 00c8  ld   $c8
              9d7b 00b9  ld   $b9
              9d7c 009e  ld   $9e
              9d7d 0002  ld   $02
              9d7e 0010  ld   $10
              9d7f 00fa  ld   $fa
              9d80 0030  ld   $30
              9d81 00f5  ld   $f5
              9d82 00c8  ld   $c8
              9d83 00b9  ld   $b9
              9d84 009e  ld   $9e
              9d85 0002  ld   $02
              9d86 0030  ld   $30
              9d87 00b5  ld   $b5
              9d88 0020  ld   $20
              9d89 0011  ld   $11
              9d8a 000c  ld   $0c
              9d8b 00d0  ld   $d0
              9d8c 00f5  ld   $f5
              9d8d 00a9  ld   $a9
              9d8e 0080  ld   $80
              9d8f 0085  ld   $85
              9d90 0042  ld   $42
              9d91 0020  ld   $20
              9d92 0094  ld   $94
              9d93 000a  ld   $0a
              9d94 0020  ld   $20
              9d95 00a2  ld   $a2
              9d96 0004  ld   $04
              9d97 00d0  ld   $d0
              9d98 0005  ld   $05
              9d99 008a  ld   $8a
              9d9a 0069  ld   $69
              9d9b 000f  ld   $0f
              9d9c 00aa  ld   $aa
              9d9d 009a  ld   $9a
              9d9e 0068  ld   $68
              9d9f 0068  ld   $68
              9da0 00a9  ld   $a9
              9da1 0009  ld   $09
              9da2 0020  ld   $20
              9da3 000e  ld   $0e
              9da4 0005  ld   $05
              9da5 0020  ld   $20
              9da6 00f5  ld   $f5
              9da7 0009  ld   $09
              9da8 0018  ld   $18
              9da9 0098  ld   $98
              9daa 0065  ld   $65
              9dab 00a6  ld   $a6
              9dac 0048  ld   $48
              9dad 00a5  ld   $a5
              9dae 00a7  ld   $a7
              9daf 0069  ld   $69
              9db0 0000  ld   $00
              9db1 0048  ld   $48
              9db2 00a5  ld   $a5
              9db3 006c  ld   $6c
              9db4 0048  ld   $48
              9db5 00a5  ld   $a5
              9db6 006b  ld   $6b
              9db7 0048  ld   $48
              9db8 00a9  ld   $a9
              9db9 009e  ld   $9e
              9dba 0020  ld   $20
              9dbb 0065  ld   $65
              9dbc 000f  ld   $0f
              9dbd 0020  ld   $20
              9dbe 00f9  ld   $f9
              9dbf 000d  ld   $0d
              9dc0 0020  ld   $20
              9dc1 00f6  ld   $f6
              9dc2 000d  ld   $0d
              9dc3 00a5  ld   $a5
              9dc4 0099  ld   $99
              9dc5 0009  ld   $09
              9dc6 007f  ld   $7f
              9dc7 0025  ld   $25
              9dc8 0095  ld   $95
              9dc9 0085  ld   $85
              9dca 0095  ld   $95
              9dcb 00a9  ld   $a9
              9dcc 0088  ld   $88
              9dcd 00a0  ld   $a0
              9dce 0008  ld   $08
              9dcf 0085  ld   $85
              9dd0 0054  ld   $54
              9dd1 0084  ld   $84
              9dd2 0055  ld   $55
              9dd3 004c  ld   $4c
              9dd4 00af  ld   $af
              9dd5 000e  ld   $0e
              9dd6 00a9  ld   $a9
              9dd7 0034  ld   $34
              9dd8 00a0  ld   $a0
              9dd9 001a  ld   $1a
              9dda 0020  ld   $20
              9ddb 001a  ld   $1a
              9ddc 001c  ld   $1c
              9ddd 0020  ld   $20
              9dde 0071  ld   $71
              9ddf 0022  ld   $22
              9de0 00c9  ld   $c9
              9de1 00a3  ld   $a3
              9de2 00d0  ld   $d0
              9de3 0006  ld   $06
              9de4 0020  ld   $20
              9de5 006b  ld   $6b
              9de6 0022  ld   $22
              9de7 0020  ld   $20
              9de8 00f6  ld   $f6
              9de9 000d  ld   $0d
              9dea 0020  ld   $20
              9deb 00a3  ld   $a3
              9dec 001c  ld   $1c
              9ded 0020  ld   $20
              9dee 00a4  ld   $a4
              9def 000e  ld   $0e
              9df0 00a5  ld   $a5
              9df1 007c  ld   $7c
              9df2 0048  ld   $48
              9df3 00a5  ld   $a5
              9df4 007b  ld   $7b
              9df5 0048  ld   $48
              9df6 00a9  ld   $a9
              9df7 0081  ld   $81
              9df8 0048  ld   $48
              9df9 0020  ld   $20
              9dfa 0000  ld   $00
              9dfb fe00  bra  ac          ;+-----------------------------------+
              9dfc fcfd  bra  $9dfd       ;|                                   |
              9dfd 1418  ld   $18,y       ;| Trampoline for page $9d00 lookups |
              9dfe e006  jmp  y,$06       ;|                                   |
              9dff c218  st   [$18]       ;+-----------------------------------+
              9e00 002d  ld   $2d
              9e01 00a5  ld   $a5
              9e02 00a6  ld   $a6
              9e03 00a4  ld   $a4
              9e04 00a7  ld   $a7
              9e05 00c0  ld   $c0
              9e06 0024  ld   $24
              9e07 00ea  ld   $ea
              9e08 00f0  ld   $f0
              9e09 0004  ld   $04
              9e0a 0085  ld   $85
              9e0b 006f  ld   $6f
              9e0c 0084  ld   $84
              9e0d 0070  ld   $70
              9e0e 00a0  ld   $a0
              9e0f 0000  ld   $00
              9e10 00b1  ld   $b1
              9e11 00a6  ld   $a6
              9e12 00d0  ld   $d0
              9e13 0040  ld   $40
              9e14 00a0  ld   $a0
              9e15 0002  ld   $02
              9e16 00b1  ld   $b1
              9e17 00a6  ld   $a6
              9e18 0018  ld   $18
              9e19 00d0  ld   $d0
              9e1a 0003  ld   $03
              9e1b 004c  ld   $4c
              9e1c 0042  ld   $42
              9e1d 0009  ld   $09
              9e1e 00c8  ld   $c8
              9e1f 00b1  ld   $b1
              9e20 00a6  ld   $a6
              9e21 0085  ld   $85
              9e22 006b  ld   $6b
              9e23 00c8  ld   $c8
              9e24 00b1  ld   $b1
              9e25 00a6  ld   $a6
              9e26 0085  ld   $85
              9e27 006c  ld   $6c
              9e28 0098  ld   $98
              9e29 0065  ld   $65
              9e2a 00a6  ld   $a6
              9e2b 0085  ld   $85
              9e2c 00a6  ld   $a6
              9e2d 0090  ld   $90
              9e2e 0002  ld   $02
              9e2f 00e6  ld   $e6
              9e30 00a7  ld   $a7
              9e31 0020  ld   $20
              9e32 006b  ld   $6b
              9e33 0022  ld   $22
              9e34 0020  ld   $20
              9e35 00e7  ld   $e7
              9e36 0008  ld   $08
              9e37 004c  ld   $4c
              9e38 00ab  ld   $ab
              9e39 0008  ld   $08
              9e3a 00f0  ld   $f0
              9e3b 003c  ld   $3c
              9e3c 00e9  ld   $e9
              9e3d 0080  ld   $80
              9e3e 0090  ld   $90
              9e3f 0011  ld   $11
              9e40 00c9  ld   $c9
              9e41 001d  ld   $1d
              9e42 00b0  ld   $b0
              9e43 0017  ld   $17
              9e44 000a  ld   $0a
              9e45 00a8  ld   $a8
              9e46 00b9  ld   $b9
              9e47 0019  ld   $19
              9e48 0002  ld   $02
              9e49 0048  ld   $48
              9e4a 00b9  ld   $b9
              9e4b 0018  ld   $18
              9e4c 0002  ld   $02
              9e4d 0048  ld   $48
              9e4e 004c  ld   $4c
              9e4f 006b  ld   $6b
              9e50 0022  ld   $22
              9e51 004c  ld   $4c
              9e52 0094  ld   $94
              9e53 0009  ld   $09
              9e54 0000  ld   $00
              9e55 0000  ld   $00
              9e56 000a  ld   $0a
              9e57 00c9  ld   $c9
              9e58 003a  ld   $3a
              9e59 00f0  ld   $f0
              9e5a 00d9  ld   $d9
              9e5b 004c  ld   $4c
              9e5c 006e  ld   $6e
              9e5d 000f  ld   $0f
              9e5e 00c9  ld   $c9
              9e5f 0045  ld   $45
              9e60 00d0  ld   $d0
              9e61 00f9  ld   $f9
              9e62 0020  ld   $20
              9e63 006b  ld   $6b
              9e64 0022  ld   $22
              9e65 00a9  ld   $a9
              9e66 009e  ld   $9e
              9e67 0020  ld   $20
              9e68 0065  ld   $65
              9e69 000f  ld   $0f
              9e6a 004c  ld   $4c
              9e6b 0094  ld   $94
              9e6c 0009  ld   $09
              9e6d 0038  ld   $38
              9e6e 00a5  ld   $a5
              9e6f 005d  ld   $5d
              9e70 00e9  ld   $e9
              9e71 0001  ld   $01
              9e72 00a4  ld   $a4
              9e73 005e  ld   $5e
              9e74 00b0  ld   $b0
              9e75 0001  ld   $01
              9e76 0088  ld   $88
              9e77 0085  ld   $85
              9e78 0073  ld   $73
              9e79 0084  ld   $84
              9e7a 0074  ld   $74
              9e7b 0060  ld   $60
              9e7c 00b0  ld   $b0
              9e7d 0001  ld   $01
              9e7e 0018  ld   $18
              9e7f 00d0  ld   $d0
              9e80 0040  ld   $40
              9e81 00a5  ld   $a5
              9e82 00a6  ld   $a6
              9e83 00a4  ld   $a4
              9e84 00a7  ld   $a7
              9e85 00a6  ld   $a6
              9e86 006c  ld   $6c
              9e87 00e8  ld   $e8
              9e88 00f0  ld   $f0
              9e89 000c  ld   $0c
              9e8a 0085  ld   $85
              9e8b 006f  ld   $6f
              9e8c 0084  ld   $84
              9e8d 0070  ld   $70
              9e8e 00a5  ld   $a5
              9e8f 006b  ld   $6b
              9e90 00a4  ld   $a4
              9e91 006c  ld   $6c
              9e92 0085  ld   $85
              9e93 006d  ld   $6d
              9e94 0084  ld   $84
              9e95 006e  ld   $6e
              9e96 0068  ld   $68
              9e97 0068  ld   $68
              9e98 00a9  ld   $a9
              9e99 009a  ld   $9a
              9e9a 00a0  ld   $a0
              9e9b 0004  ld   $04
              9e9c 00a2  ld   $a2
              9e9d 0000  ld   $00
              9e9e 0086  ld   $86
              9e9f 0045  ld   $45
              9ea0 0090  ld   $90
              9ea1 0003  ld   $03
              9ea2 004c  ld   $4c
              9ea3 0066  ld   $66
              9ea4 0005  ld   $05
              9ea5 004c  ld   $4c
              9ea6 0071  ld   $71
              9ea7 0005  ld   $05
              9ea8 00d0  ld   $d0
              9ea9 0017  ld   $17
              9eaa 00a2  ld   $a2
              9eab 00d2  ld   $d2
              9eac 00a4  ld   $a4
              9ead 0070  ld   $70
              9eae 00d0  ld   $d0
              9eaf 0003  ld   $03
              9eb0 004c  ld   $4c
              9eb1 004a  ld   $4a
              9eb2 0005  ld   $05
              9eb3 00a5  ld   $a5
              9eb4 006f  ld   $6f
              9eb5 0085  ld   $85
              9eb6 00a6  ld   $a6
              9eb7 0084  ld   $84
              9eb8 00a7  ld   $a7
              9eb9 00a5  ld   $a5
              9eba 006d  ld   $6d
              9ebb 00a4  ld   $a4
              9ebc 006e  ld   $6e
              9ebd 0085  ld   $85
              9ebe 006b  ld   $6b
              9ebf 0084  ld   $84
              9ec0 006c  ld   $6c
              9ec1 0060  ld   $60
              9ec2 00d0  ld   $d0
              9ec3 0003  ld   $03
              9ec4 004c  ld   $4c
              9ec5 0059  ld   $59
              9ec6 0007  ld   $07
              9ec7 0020  ld   $20
              9ec8 0060  ld   $60
              9ec9 0007  ld   $07
              9eca 004c  ld   $4c
              9ecb 008b  ld   $8b
              9ecc 0009  ld   $09
              9ecd 00a9  ld   $a9
              9ece 0003  ld   $03
              9ecf 0020  ld   $20
              9ed0 000e  ld   $0e
              9ed1 0005  ld   $05
              9ed2 00a5  ld   $a5
              9ed3 00a7  ld   $a7
              9ed4 0048  ld   $48
              9ed5 00a5  ld   $a5
              9ed6 00a6  ld   $a6
              9ed7 0048  ld   $48
              9ed8 00a5  ld   $a5
              9ed9 006c  ld   $6c
              9eda 0048  ld   $48
              9edb 00a5  ld   $a5
              9edc 006b  ld   $6b
              9edd 0048  ld   $48
              9ede 00a9  ld   $a9
              9edf 008c  ld   $8c
              9ee0 0048  ld   $48
              9ee1 0020  ld   $20
              9ee2 0071  ld   $71
              9ee3 0022  ld   $22
              9ee4 0020  ld   $20
              9ee5 0094  ld   $94
              9ee6 0009  ld   $09
              9ee7 004c  ld   $4c
              9ee8 00ab  ld   $ab
              9ee9 0008  ld   $08
              9eea 0020  ld   $20
              9eeb 005a  ld   $5a
              9eec 000a  ld   $0a
              9eed 0020  ld   $20
              9eee 00f8  ld   $f8
              9eef 0009  ld   $09
              9ef0 00a5  ld   $a5
              9ef1 006c  ld   $6c
              9ef2 00c5  ld   $c5
              9ef3 0047  ld   $47
              9ef4 00b0  ld   $b0
              9ef5 000b  ld   $0b
              9ef6 0098  ld   $98
              9ef7 0038  ld   $38
              9ef8 0065  ld   $65
              9ef9 00a6  ld   $a6
              9efa 00a6  ld   $a6
              9efb fe00  bra  ac          ;+-----------------------------------+
              9efc fcfd  bra  $9efd       ;|                                   |
              9efd 1418  ld   $18,y       ;| Trampoline for page $9e00 lookups |
              9efe e006  jmp  y,$06       ;|                                   |
              9eff c218  st   [$18]       ;+-----------------------------------+
              9f00 00a7  ld   $a7
              9f01 0090  ld   $90
              9f02 0007  ld   $07
              9f03 00e8  ld   $e8
              9f04 00b0  ld   $b0
              9f05 0004  ld   $04
              9f06 00a5  ld   $a5
              9f07 005d  ld   $5d
              9f08 00a6  ld   $a6
              9f09 005e  ld   $5e
              9f0a 0020  ld   $20
              9f0b 0017  ld   $17
              9f0c 0007  ld   $07
              9f0d 0090  ld   $90
              9f0e 001e  ld   $1e
              9f0f 00a5  ld   $a5
              9f10 0092  ld   $92
              9f11 00e9  ld   $e9
              9f12 0001  ld   $01
              9f13 0085  ld   $85
              9f14 00a6  ld   $a6
              9f15 00a5  ld   $a5
              9f16 0093  ld   $93
              9f17 00e9  ld   $e9
              9f18 0000  ld   $00
              9f19 0085  ld   $85
              9f1a 00a7  ld   $a7
              9f1b 0060  ld   $60
              9f1c 00d0  ld   $d0
              9f1d 00fd  ld   $fd
              9f1e 00a9  ld   $a9
              9f1f 00ff  ld   $ff
              9f20 0085  ld   $85
              9f21 007c  ld   $7c
              9f22 0020  ld   $20
              9f23 00a2  ld   $a2
              9f24 0004  ld   $04
              9f25 009a  ld   $9a
              9f26 00c9  ld   $c9
              9f27 008c  ld   $8c
              9f28 00f0  ld   $f0
              9f29 000b  ld   $0b
              9f2a 00a2  ld   $a2
              9f2b 0016  ld   $16
              9f2c 002c  ld   $2c
              9f2d 00a2  ld   $a2
              9f2e 005a  ld   $5a
              9f2f 004c  ld   $4c
              9f30 004a  ld   $4a
              9f31 0005  ld   $05
              9f32 004c  ld   $4c
              9f33 006e  ld   $6e
              9f34 000f  ld   $0f
              9f35 0068  ld   $68
              9f36 0068  ld   $68
              9f37 0085  ld   $85
              9f38 006b  ld   $6b
              9f39 0068  ld   $68
              9f3a 0085  ld   $85
              9f3b 006c  ld   $6c
              9f3c 0068  ld   $68
              9f3d 0085  ld   $85
              9f3e 00a6  ld   $a6
              9f3f 0068  ld   $68
              9f40 0085  ld   $85
              9f41 00a7  ld   $a7
              9f42 0020  ld   $20
              9f43 00f5  ld   $f5
              9f44 0009  ld   $09
              9f45 0098  ld   $98
              9f46 0018  ld   $18
              9f47 0065  ld   $65
              9f48 00a6  ld   $a6
              9f49 0085  ld   $85
              9f4a 00a6  ld   $a6
              9f4b 0090  ld   $90
              9f4c 0002  ld   $02
              9f4d 00e6  ld   $e6
              9f4e 00a7  ld   $a7
              9f4f 0060  ld   $60
              9f50 00a2  ld   $a2
              9f51 003a  ld   $3a
              9f52 002c  ld   $2c
              9f53 00a2  ld   $a2
              9f54 0000  ld   $00
              9f55 0086  ld   $86
              9f56 003b  ld   $3b
              9f57 00a0  ld   $a0
              9f58 0000  ld   $00
              9f59 0084  ld   $84
              9f5a 003c  ld   $3c
              9f5b 000a  ld   $0a
              9f5c 0000  ld   $00
              9f5d 0000  ld   $00
              9f5e 00a5  ld   $a5
              9f5f 003c  ld   $3c
              9f60 00a6  ld   $a6
              9f61 003b  ld   $3b
              9f62 0085  ld   $85
              9f63 003b  ld   $3b
              9f64 0086  ld   $86
              9f65 003c  ld   $3c
              9f66 00b1  ld   $b1
              9f67 00a6  ld   $a6
              9f68 00f0  ld   $f0
              9f69 00e8  ld   $e8
              9f6a 00c5  ld   $c5
              9f6b 003c  ld   $3c
              9f6c 00f0  ld   $f0
              9f6d 00e4  ld   $e4
              9f6e 00c8  ld   $c8
              9f6f 00c9  ld   $c9
              9f70 0022  ld   $22
              9f71 00d0  ld   $d0
              9f72 00f3  ld   $f3
              9f73 00f0  ld   $f0
              9f74 00e9  ld   $e9
              9f75 0020  ld   $20
              9f76 000a  ld   $0a
              9f77 000e  ld   $0e
              9f78 0020  ld   $20
              9f79 0071  ld   $71
              9f7a 0022  ld   $22
              9f7b 00c9  ld   $c9
              9f7c 0088  ld   $88
              9f7d 00f0  ld   $f0
              9f7e 0005  ld   $05
              9f7f 00a9  ld   $a9
              9f80 00a1  ld   $a1
              9f81 0020  ld   $20
              9f82 0065  ld   $65
              9f83 000f  ld   $0f
              9f84 00a5  ld   $a5
              9f85 0094  ld   $94
              9f86 00d0  ld   $d0
              9f87 0005  ld   $05
              9f88 0020  ld   $20
              9f89 00f8  ld   $f8
              9f8a 0009  ld   $09
              9f8b 00f0  ld   $f0
              9f8c 00bb  ld   $bb
              9f8d 0020  ld   $20
              9f8e 0071  ld   $71
              9f8f 0022  ld   $22
              9f90 00b0  ld   $b0
              9f91 0003  ld   $03
              9f92 004c  ld   $4c
              9f93 0094  ld   $94
              9f94 0009  ld   $09
              9f95 004c  ld   $4c
              9f96 00e7  ld   $e7
              9f97 0008  ld   $08
              9f98 0020  ld   $20
              9f99 00da  ld   $da
              9f9a 0017  ld   $17
              9f9b 0048  ld   $48
              9f9c 00c9  ld   $c9
              9f9d 008c  ld   $8c
              9f9e 00f0  ld   $f0
              9f9f 0004  ld   $04
              9fa0 00c9  ld   $c9
              9fa1 0088  ld   $88
              9fa2 00d0  ld   $d0
              9fa3 0091  ld   $91
              9fa4 00c6  ld   $c6
              9fa5 0098  ld   $98
              9fa6 00d0  ld   $d0
              9fa7 0004  ld   $04
              9fa8 0068  ld   $68
              9fa9 004c  ld   $4c
              9faa 00e9  ld   $e9
              9fab 0008  ld   $08
              9fac 0020  ld   $20
              9fad 006b  ld   $6b
              9fae 0022  ld   $22
              9faf 0020  ld   $20
              9fb0 005a  ld   $5a
              9fb1 000a  ld   $0a
              9fb2 00c9  ld   $c9
              9fb3 002c  ld   $2c
              9fb4 00f0  ld   $f0
              9fb5 00ee  ld   $ee
              9fb6 0068  ld   $68
              9fb7 0060  ld   $60
              9fb8 00a2  ld   $a2
              9fb9 0000  ld   $00
              9fba 0086  ld   $86
              9fbb 0046  ld   $46
              9fbc 0086  ld   $86
              9fbd 0047  ld   $47
              9fbe 00b0  ld   $b0
              9fbf 00f7  ld   $f7
              9fc0 00e9  ld   $e9
              9fc1 002f  ld   $2f
              9fc2 0085  ld   $85
              9fc3 003b  ld   $3b
              9fc4 00a5  ld   $a5
              9fc5 0047  ld   $47
              9fc6 0085  ld   $85
              9fc7 0054  ld   $54
              9fc8 00c9  ld   $c9
              9fc9 0019  ld   $19
              9fca 00b0  ld   $b0
              9fcb 00d4  ld   $d4
              9fcc 00a5  ld   $a5
              9fcd 0046  ld   $46
              9fce 000a  ld   $0a
              9fcf 0026  ld   $26
              9fd0 0054  ld   $54
              9fd1 000a  ld   $0a
              9fd2 0026  ld   $26
              9fd3 0054  ld   $54
              9fd4 0065  ld   $65
              9fd5 0046  ld   $46
              9fd6 0085  ld   $85
              9fd7 0046  ld   $46
              9fd8 00a5  ld   $a5
              9fd9 0054  ld   $54
              9fda 0065  ld   $65
              9fdb 0047  ld   $47
              9fdc 0085  ld   $85
              9fdd 0047  ld   $47
              9fde 0006  ld   $06
              9fdf 0046  ld   $46
              9fe0 0026  ld   $26
              9fe1 0047  ld   $47
              9fe2 00a5  ld   $a5
              9fe3 0046  ld   $46
              9fe4 0065  ld   $65
              9fe5 003b  ld   $3b
              9fe6 0085  ld   $85
              9fe7 0046  ld   $46
              9fe8 0090  ld   $90
              9fe9 0002  ld   $02
              9fea 00e6  ld   $e6
              9feb 0047  ld   $47
              9fec 0020  ld   $20
              9fed 006b  ld   $6b
              9fee 0022  ld   $22
              9fef 004c  ld   $4c
              9ff0 0060  ld   $60
              9ff1 000a  ld   $0a
              9ff2 0020  ld   $20
              9ff3 00d0  ld   $d0
              9ff4 0010  ld   $10
              9ff5 0085  ld   $85
              9ff6 007b  ld   $7b
              9ff7 0084  ld   $84
              9ff8 007c  ld   $7c
              9ff9 00a9  ld   $a9
              9ffa 00ac  ld   $ac
              9ffb fe00  bra  ac          ;+-----------------------------------+
              9ffc fcfd  bra  $9ffd       ;|                                   |
              9ffd 1418  ld   $18,y       ;| Trampoline for page $9f00 lookups |
              9ffe e006  jmp  y,$06       ;|                                   |
              9fff c218  st   [$18]       ;+-----------------------------------+
              a000 0020  ld   $20
              a001 0065  ld   $65
              a002 000f  ld   $0f
              a003 00a5  ld   $a5
              a004 0040  ld   $40
              a005 0048  ld   $48
              a006 00a5  ld   $a5
              a007 003f  ld   $3f
              a008 0048  ld   $48
              a009 0020  ld   $20
              a00a 000a  ld   $0a
              a00b 000e  ld   $0e
              a00c 0068  ld   $68
              a00d 002a  ld   $2a
              a00e 0020  ld   $20
              a00f 00fc  ld   $fc
              a010 000d  ld   $0d
              a011 00d0  ld   $d0
              a012 0018  ld   $18
              a013 0068  ld   $68
              a014 0010  ld   $10
              a015 0012  ld   $12
              a016 0020  ld   $20
              a017 0093  ld   $93
              a018 001c  ld   $1c
              a019 0020  ld   $20
              a01a 00fd  ld   $fd
              a01b 0011  ld   $11
              a01c 00a0  ld   $a0
              a01d 0000  ld   $00
              a01e 00a5  ld   $a5
              a01f 0097  ld   $97
              a020 0091  ld   $91
              a021 007b  ld   $7b
              a022 00c8  ld   $c8
              a023 00a5  ld   $a5
              a024 0098  ld   $98
              a025 0091  ld   $91
              a026 007b  ld   $7b
              a027 0060  ld   $60
              a028 004c  ld   $4c
              a029 0048  ld   $48
              a02a 001c  ld   $1c
              a02b 0068  ld   $68
              a02c 00a4  ld   $a4
              a02d 007c  ld   $7c
              a02e 00c0  ld   $c0
              a02f 001f  ld   $1f
              a030 00d0  ld   $d0
              a031 0050  ld   $50
              a032 0020  ld   $20
              a033 00e2  ld   $e2
              a034 0016  ld   $16
              a035 00c9  ld   $c9
              a036 0006  ld   $06
              a037 00d0  ld   $d0
              a038 0041  ld   $41
              a039 00a0  ld   $a0
              a03a 0000  ld   $00
              a03b 0084  ld   $84
              a03c 0094  ld   $94
              a03d 0084  ld   $84
              a03e 0099  ld   $99
              a03f 0084  ld   $84
              a040 00a4  ld   $a4
              a041 0020  ld   $20
              a042 0010  ld   $10
              a043 000b  ld   $0b
              a044 0020  ld   $20
              a045 005a  ld   $5a
              a046 001b  ld   $1b
              a047 00e6  ld   $e6
              a048 00a4  ld   $a4
              a049 00a4  ld   $a4
              a04a 00a4  ld   $a4
              a04b 0020  ld   $20
              a04c 0010  ld   $10
              a04d 000b  ld   $0b
              a04e 0020  ld   $20
              a04f 0084  ld   $84
              a050 001c  ld   $1c
              a051 00aa  ld   $aa
              a052 00f0  ld   $f0
              a053 0005  ld   $05
              a054 00e8  ld   $e8
              a055 008a  ld   $8a
              a056 0020  ld   $20
              a057 0065  ld   $65
              a058 001b  ld   $1b
              a059 00a4  ld   $a4
              a05a 00a4  ld   $a4
              a05b 00c8  ld   $c8
              a05c 00c0  ld   $c0
              a05d 0006  ld   $06
              a05e 00d0  ld   $d0
              a05f 00df  ld   $df
              a060 0020  ld   $20
              a061 005a  ld   $5a
              a062 001b  ld   $1b
              a063 000b  ld   $0b
              a064 0000  ld   $00
              a065 0000  ld   $00
              a066 0020  ld   $20
              a067 0013  ld   $13
              a068 001d  ld   $1d
              a069 00a2  ld   $a2
              a06a 0002  ld   $02
              a06b 0078  ld   $78
              a06c 00b5  ld   $b5
              a06d 0096  ld   $96
              a06e 009d  ld   $9d
              a06f 0000  ld   $00
              a070 0002  ld   $02
              a071 00ca  ld   $ca
              a072 0010  ld   $10
              a073 00f8  ld   $f8
              a074 0058  ld   $58
              a075 0060  ld   $60
              a076 00b1  ld   $b1
              a077 0054  ld   $54
              a078 0020  ld   $20
              a079 007d  ld   $7d
              a07a 0022  ld   $22
              a07b 0090  ld   $90
              a07c 0003  ld   $03
              a07d 004c  ld   $4c
              a07e 0082  ld   $82
              a07f 0012  ld   $12
              a080 00e9  ld   $e9
              a081 002f  ld   $2f
              a082 004c  ld   $4c
              a083 00f6  ld   $f6
              a084 001d  ld   $1d
              a085 00a0  ld   $a0
              a086 0002  ld   $02
              a087 00b1  ld   $b1
              a088 0097  ld   $97
              a089 00c5  ld   $c5
              a08a 0066  ld   $66
              a08b 0090  ld   $90
              a08c 0017  ld   $17
              a08d 00d0  ld   $d0
              a08e 0007  ld   $07
              a08f 0088  ld   $88
              a090 00b1  ld   $b1
              a091 0097  ld   $97
              a092 00c5  ld   $c5
              a093 0065  ld   $65
              a094 0090  ld   $90
              a095 000e  ld   $0e
              a096 00a4  ld   $a4
              a097 0098  ld   $98
              a098 00c4  ld   $c4
              a099 0060  ld   $60
              a09a 0090  ld   $90
              a09b 0008  ld   $08
              a09c 00d0  ld   $d0
              a09d 000d  ld   $0d
              a09e 00a5  ld   $a5
              a09f 0097  ld   $97
              a0a0 00c5  ld   $c5
              a0a1 005f  ld   $5f
              a0a2 00b0  ld   $b0
              a0a3 0007  ld   $07
              a0a4 00a5  ld   $a5
              a0a5 0097  ld   $97
              a0a6 00a4  ld   $a4
              a0a7 0098  ld   $98
              a0a8 004c  ld   $4c
              a0a9 005b  ld   $5b
              a0aa 000b  ld   $0b
              a0ab 00a0  ld   $a0
              a0ac 0000  ld   $00
              a0ad 00b1  ld   $b1
              a0ae 0097  ld   $97
              a0af 0020  ld   $20
              a0b0 00b1  ld   $b1
              a0b1 0014  ld   $14
              a0b2 00a5  ld   $a5
              a0b3 0083  ld   $83
              a0b4 00a4  ld   $a4
              a0b5 0084  ld   $84
              a0b6 0085  ld   $85
              a0b7 00a2  ld   $a2
              a0b8 0084  ld   $84
              a0b9 00a3  ld   $a3
              a0ba 0020  ld   $20
              a0bb 00b6  ld   $b6
              a0bc 0016  ld   $16
              a0bd 00a9  ld   $a9
              a0be 0094  ld   $94
              a0bf 00a0  ld   $a0
              a0c0 0000  ld   $00
              a0c1 0085  ld   $85
              a0c2 0083  ld   $83
              a0c3 0084  ld   $84
              a0c4 0084  ld   $84
              a0c5 0020  ld   $20
              a0c6 0017  ld   $17
              a0c7 0017  ld   $17
              a0c8 00a0  ld   $a0
              a0c9 0000  ld   $00
              a0ca 00b1  ld   $b1
              a0cb 0083  ld   $83
              a0cc 0091  ld   $91
              a0cd 007b  ld   $7b
              a0ce 00c8  ld   $c8
              a0cf 00b1  ld   $b1
              a0d0 0083  ld   $83
              a0d1 0091  ld   $91
              a0d2 007b  ld   $7b
              a0d3 00c8  ld   $c8
              a0d4 00b1  ld   $b1
              a0d5 0083  ld   $83
              a0d6 0091  ld   $91
              a0d7 007b  ld   $7b
              a0d8 0060  ld   $60
              a0d9 0020  ld   $20
              a0da 00f2  ld   $f2
              a0db 000b  ld   $0b
              a0dc 0020  ld   $20
              a0dd 0071  ld   $71
              a0de 0022  ld   $22
              a0df 00f0  ld   $f0
              a0e0 0031  ld   $31
              a0e1 00f0  ld   $f0
              a0e2 003b  ld   $3b
              a0e3 00c9  ld   $c9
              a0e4 009d  ld   $9d
              a0e5 00f0  ld   $f0
              a0e6 0049  ld   $49
              a0e7 00c9  ld   $c9
              a0e8 00a0  ld   $a0
              a0e9 0018  ld   $18
              a0ea 00f0  ld   $f0
              a0eb 0044  ld   $44
              a0ec 00c9  ld   $c9
              a0ed 002c  ld   $2c
              a0ee 00f0  ld   $f0
              a0ef 002f  ld   $2f
              a0f0 00c9  ld   $c9
              a0f1 003b  ld   $3b
              a0f2 00f0  ld   $f0
              a0f3 0056  ld   $56
              a0f4 0020  ld   $20
              a0f5 000a  ld   $0a
              a0f6 000e  ld   $0e
              a0f7 0024  ld   $24
              a0f8 003f  ld   $3f
              a0f9 0030  ld   $30
              a0fa 00de  ld   $de
              a0fb fe00  bra  ac          ;+-----------------------------------+
              a0fc fcfd  bra  $a0fd       ;|                                   |
              a0fd 1418  ld   $18,y       ;| Trampoline for page $a000 lookups |
              a0fe e006  jmp  y,$06       ;|                                   |
              a0ff c218  st   [$18]       ;+-----------------------------------+
              a100 0020  ld   $20
              a101 0055  ld   $55
              a102 001e  ld   $1e
              a103 0020  ld   $20
              a104 00c3  ld   $c3
              a105 0014  ld   $14
              a106 0020  ld   $20
              a107 00f2  ld   $f2
              a108 000b  ld   $0b
              a109 0020  ld   $20
              a10a 000c  ld   $0c
              a10b 000c  ld   $0c
              a10c 00d0  ld   $d0
              a10d 00d3  ld   $d3
              a10e 00a9  ld   $a9
              a10f 0000  ld   $00
              a110 009d  ld   $9d
              a111 0005  ld   $05
              a112 0024  ld   $24
              a113 00a2  ld   $a2
              a114 0004  ld   $04
              a115 00a0  ld   $a0
              a116 0024  ld   $24
              a117 00a9  ld   $a9
              a118 000d  ld   $0d
              a119 0020  ld   $20
              a11a 0011  ld   $11
              a11b 000c  ld   $0c
              a11c 00a9  ld   $a9
              a11d 000a  ld   $0a
              a11e 0020  ld   $20
              a11f 0011  ld   $11
              a120 000c  ld   $0c
              a121 0049  ld   $49
              a122 00ff  ld   $ff
              a123 0060  ld   $60
              a124 00a5  ld   $a5
              a125 0030  ld   $30
              a126 0020  ld   $20
              a127 007a  ld   $7a
              a128 0004  ld   $04
              a129 0098  ld   $98
              a12a 0038  ld   $38
              a12b 00e9  ld   $e9
              a12c 000a  ld   $0a
              a12d 00b0  ld   $b0
              a12e 00fc  ld   $fc
              a12f 0049  ld   $49
              a130 00ff  ld   $ff
              a131 0069  ld   $69
              a132 0001  ld   $01
              a133 00d0  ld   $d0
              a134 0015  ld   $15
              a135 0008  ld   $08
              a136 0020  ld   $20
              a137 00d7  ld   $d7
              a138 0017  ld   $17
              a139 00c9  ld   $c9
              a13a 0029  ld   $29
              a13b 00d0  ld   $d0
              a13c 005b  ld   $5b
              a13d 0028  ld   $28
              a13e 0090  ld   $90
              a13f 000b  ld   $0b
              a140 00a5  ld   $a5
              a141 0030  ld   $30
              a142 0020  ld   $20
              a143 007a  ld   $7a
              a144 0004  ld   $04
              a145 008a  ld   $8a
              a146 00e5  ld   $e5
              a147 002b  ld   $2b
              a148 0090  ld   $90
              a149 0005  ld   $05
              a14a 00aa  ld   $aa
              a14b 00e8  ld   $e8
              a14c 00ca  ld   $ca
              a14d 00d0  ld   $d0
              a14e 0006  ld   $06
              a14f 0020  ld   $20
              a150 006b  ld   $6b
              a151 0022  ld   $22
              a152 004c  ld   $4c
              a153 007b  ld   $7b
              a154 000b  ld   $0b
              a155 0020  ld   $20
              a156 000c  ld   $0c
              a157 000c  ld   $0c
              a158 00d0  ld   $d0
              a159 00f2  ld   $f2
              a15a 0020  ld   $20
              a15b 00c3  ld   $c3
              a15c 0014  ld   $14
              a15d 0020  ld   $20
              a15e 00e2  ld   $e2
              a15f 0016  ld   $16
              a160 00aa  ld   $aa
              a161 00a0  ld   $a0
              a162 0000  ld   $00
              a163 00e8  ld   $e8
              a164 00ca  ld   $ca
              a165 00f0  ld   $f0
              a166 00bc  ld   $bc
              a167 00b1  ld   $b1
              a168 0054  ld   $54
              a169 0020  ld   $20
              a16a 0011  ld   $11
              a16b 000c  ld   $0c
              a16c 0000  ld   $00
              a16d 0000  ld   $00
              a16e 000c  ld   $0c
              a16f 00c8  ld   $c8
              a170 00c9  ld   $c9
              a171 000d  ld   $0d
              a172 00d0  ld   $d0
              a173 00f3  ld   $f3
              a174 0020  ld   $20
              a175 00b6  ld   $b6
              a176 000b  ld   $0b
              a177 004c  ld   $4c
              a178 00f9  ld   $f9
              a179 000b  ld   $0b
              a17a 00a9  ld   $a9
              a17b 0020  ld   $20
              a17c 002c  ld   $2c
              a17d 00a9  ld   $a9
              a17e 003f  ld   $3f
              a17f 0024  ld   $24
              a180 0045  ld   $45
              a181 0030  ld   $30
              a182 0003  ld   $03
              a183 0020  ld   $20
              a184 0000  ld   $00
              a185 002b  ld   $2b
              a186 0029  ld   $29
              a187 00ff  ld   $ff
              a188 0060  ld   $60
              a189 00a5  ld   $a5
              a18a 0043  ld   $43
              a18b 00f0  ld   $f0
              a18c 0011  ld   $11
              a18d 0030  ld   $30
              a18e 0004  ld   $04
              a18f 00a0  ld   $a0
              a190 00ff  ld   $ff
              a191 00d0  ld   $d0
              a192 0004  ld   $04
              a193 00a5  ld   $a5
              a194 0071  ld   $71
              a195 00a4  ld   $a4
              a196 0072  ld   $72
              a197 0085  ld   $85
              a198 006b  ld   $6b
              a199 0084  ld   $84
              a19a 006c  ld   $6c
              a19b 004c  ld   $4c
              a19c 006e  ld   $6e
              a19d 000f  ld   $0f
              a19e 00a9  ld   $a9
              a19f 007e  ld   $7e
              a1a0 00a0  ld   $a0
              a1a1 000d  ld   $0d
              a1a2 0020  ld   $20
              a1a3 00ef  ld   $ef
              a1a4 000b  ld   $0b
              a1a5 00a5  ld   $a5
              a1a6 006f  ld   $6f
              a1a7 00a4  ld   $a4
              a1a8 0070  ld   $70
              a1a9 0085  ld   $85
              a1aa 00a6  ld   $a6
              a1ab 0084  ld   $84
              a1ac 00a7  ld   $a7
              a1ad 0060  ld   $60
              a1ae 0020  ld   $20
              a1af 00e2  ld   $e2
              a1b0 0013  ld   $13
              a1b1 00a2  ld   $a2
              a1b2 0006  ld   $06
              a1b3 00a0  ld   $a0
              a1b4 0024  ld   $24
              a1b5 00a9  ld   $a9
              a1b6 0000  ld   $00
              a1b7 008d  ld   $8d
              a1b8 0006  ld   $06
              a1b9 0024  ld   $24
              a1ba 00a9  ld   $a9
              a1bb 0040  ld   $40
              a1bc 0020  ld   $20
              a1bd 0089  ld   $89
              a1be 000c  ld   $0c
              a1bf 0060  ld   $60
              a1c0 0046  ld   $46
              a1c1 0045  ld   $45
              a1c2 00c9  ld   $c9
              a1c3 0022  ld   $22
              a1c4 00d0  ld   $d0
              a1c5 000b  ld   $0b
              a1c6 0020  ld   $20
              a1c7 0023  ld   $23
              a1c8 000f  ld   $0f
              a1c9 00a9  ld   $a9
              a1ca 003b  ld   $3b
              a1cb 0020  ld   $20
              a1cc 0065  ld   $65
              a1cd 000f  ld   $0f
              a1ce 0020  ld   $20
              a1cf 00f2  ld   $f2
              a1d0 000b  ld   $0b
              a1d1 0020  ld   $20
              a1d2 00e2  ld   $e2
              a1d3 0013  ld   $13
              a1d4 00a9  ld   $a9
              a1d5 002c  ld   $2c
              a1d6 008d  ld   $8d
              a1d7 0004  ld   $04
              a1d8 0024  ld   $24
              a1d9 0020  ld   $20
              a1da 0077  ld   $77
              a1db 000c  ld   $0c
              a1dc 00ad  ld   $ad
              a1dd 0005  ld   $05
              a1de 0024  ld   $24
              a1df 00d0  ld   $d0
              a1e0 0014  ld   $14
              a1e1 0018  ld   $18
              a1e2 004c  ld   $4c
              a1e3 0038  ld   $38
              a1e4 0009  ld   $09
              a1e5 0020  ld   $20
              a1e6 000f  ld   $0f
              a1e7 000c  ld   $0c
              a1e8 0020  ld   $20
              a1e9 000c  ld   $0c
              a1ea 000c  ld   $0c
              a1eb 004c  ld   $4c
              a1ec 0057  ld   $57
              a1ed 0006  ld   $06
              a1ee 00a6  ld   $a6
              a1ef 0073  ld   $73
              a1f0 00a4  ld   $a4
              a1f1 0074  ld   $74
              a1f2 00a9  ld   $a9
              a1f3 0098  ld   $98
              a1f4 002c  ld   $2c
              a1f5 00a9  ld   $a9
              a1f6 0000  ld   $00
              a1f7 0085  ld   $85
              a1f8 0043  ld   $43
              a1f9 0086  ld   $86
              a1fa 0075  ld   $75
              a1fb fe00  bra  ac          ;+-----------------------------------+
              a1fc fcfd  bra  $a1fd       ;|                                   |
              a1fd 1418  ld   $18,y       ;| Trampoline for page $a100 lookups |
              a1fe e006  jmp  y,$06       ;|                                   |
              a1ff c218  st   [$18]       ;+-----------------------------------+
              a200 0084  ld   $84
              a201 0076  ld   $76
              a202 0020  ld   $20
              a203 00d0  ld   $d0
              a204 0010  ld   $10
              a205 0085  ld   $85
              a206 007b  ld   $7b
              a207 0084  ld   $84
              a208 007c  ld   $7c
              a209 00a5  ld   $a5
              a20a 00a6  ld   $a6
              a20b 00a4  ld   $a4
              a20c 00a7  ld   $a7
              a20d 0085  ld   $85
              a20e 007d  ld   $7d
              a20f 0084  ld   $84
              a210 007e  ld   $7e
              a211 00a6  ld   $a6
              a212 0075  ld   $75
              a213 00a4  ld   $a4
              a214 0076  ld   $76
              a215 0086  ld   $86
              a216 00a6  ld   $a6
              a217 0084  ld   $84
              a218 00a7  ld   $a7
              a219 0020  ld   $20
              a21a 0071  ld   $71
              a21b 0022  ld   $22
              a21c 00d0  ld   $d0
              a21d 001c  ld   $1c
              a21e 0024  ld   $24
              a21f 0043  ld   $43
              a220 0050  ld   $50
              a221 000c  ld   $0c
              a222 0020  ld   $20
              a223 0000  ld   $00
              a224 002c  ld   $2c
              a225 008d  ld   $8d
              a226 0005  ld   $05
              a227 0024  ld   $24
              a228 00a2  ld   $a2
              a229 0004  ld   $04
              a22a 00a0  ld   $a0
              a22b 0024  ld   $24
              a22c 00d0  ld   $d0
              a22d 0008  ld   $08
              a22e 0030  ld   $30
              a22f 0071  ld   $71
              a230 0020  ld   $20
              a231 000f  ld   $0f
              a232 000c  ld   $0c
              a233 0020  ld   $20
              a234 0077  ld   $77
              a235 000c  ld   $0c
              a236 0086  ld   $86
              a237 00a6  ld   $a6
              a238 0084  ld   $84
              a239 00a7  ld   $a7
              a23a 0020  ld   $20
              a23b 006b  ld   $6b
              a23c 0022  ld   $22
              a23d 0024  ld   $24
              a23e 003f  ld   $3f
              a23f 0010  ld   $10
              a240 0031  ld   $31
              a241 0024  ld   $24
              a242 0043  ld   $43
              a243 0050  ld   $50
              a244 0009  ld   $09
              a245 00e8  ld   $e8
              a246 0086  ld   $86
              a247 00a6  ld   $a6
              a248 00a9  ld   $a9
              a249 0000  ld   $00
              a24a 0085  ld   $85
              a24b 003b  ld   $3b
              a24c 00f0  ld   $f0
              a24d 000c  ld   $0c
              a24e 0085  ld   $85
              a24f 003b  ld   $3b
              a250 00c9  ld   $c9
              a251 0022  ld   $22
              a252 00f0  ld   $f0
              a253 0007  ld   $07
              a254 00a9  ld   $a9
              a255 003a  ld   $3a
              a256 0085  ld   $85
              a257 003b  ld   $3b
              a258 00a9  ld   $a9
              a259 002c  ld   $2c
              a25a 0018  ld   $18
              a25b 0085  ld   $85
              a25c 003c  ld   $3c
              a25d 00a5  ld   $a5
              a25e 00a6  ld   $a6
              a25f 00a4  ld   $a4
              a260 00a7  ld   $a7
              a261 0069  ld   $69
              a262 0000  ld   $00
              a263 0090  ld   $90
              a264 0001  ld   $01
              a265 00c8  ld   $c8
              a266 0020  ld   $20
              a267 00c9  ld   $c9
              a268 0014  ld   $14
              a269 0020  ld   $20
              a26a 001f  ld   $1f
              a26b 0018  ld   $18
              a26c 0020  ld   $20
              a26d 00c9  ld   $c9
              a26e 000a  ld   $0a
              a26f 004c  ld   $4c
              a270 0007  ld   $07
              a271 000d  ld   $0d
              a272 0020  ld   $20
              a273 000d  ld   $0d
              a274 0000  ld   $00
              a275 0000  ld   $00
              a276 006b  ld   $6b
              a277 001d  ld   $1d
              a278 00a5  ld   $a5
              a279 0040  ld   $40
              a27a 0020  ld   $20
              a27b 00b1  ld   $b1
              a27c 000a  ld   $0a
              a27d 0020  ld   $20
              a27e 0071  ld   $71
              a27f 0022  ld   $22
              a280 00f0  ld   $f0
              a281 0007  ld   $07
              a282 00c9  ld   $c9
              a283 002c  ld   $2c
              a284 00f0  ld   $f0
              a285 0003  ld   $03
              a286 004c  ld   $4c
              a287 001b  ld   $1b
              a288 000c  ld   $0c
              a289 00a5  ld   $a5
              a28a 00a6  ld   $a6
              a28b 00a4  ld   $a4
              a28c 00a7  ld   $a7
              a28d 0085  ld   $85
              a28e 0075  ld   $75
              a28f 0084  ld   $84
              a290 0076  ld   $76
              a291 00a5  ld   $a5
              a292 007d  ld   $7d
              a293 00a4  ld   $a4
              a294 007e  ld   $7e
              a295 0085  ld   $85
              a296 00a6  ld   $a6
              a297 0084  ld   $84
              a298 00a7  ld   $a7
              a299 0020  ld   $20
              a29a 0071  ld   $71
              a29b 0022  ld   $22
              a29c 00f0  ld   $f0
              a29d 002c  ld   $2c
              a29e 0020  ld   $20
              a29f 0063  ld   $63
              a2a0 000f  ld   $0f
              a2a1 004c  ld   $4c
              a2a2 008f  ld   $8f
              a2a3 000c  ld   $0c
              a2a4 0020  ld   $20
              a2a5 00f5  ld   $f5
              a2a6 0009  ld   $09
              a2a7 00c8  ld   $c8
              a2a8 00aa  ld   $aa
              a2a9 00d0  ld   $d0
              a2aa 0012  ld   $12
              a2ab 00a2  ld   $a2
              a2ac 002a  ld   $2a
              a2ad 00c8  ld   $c8
              a2ae 00b1  ld   $b1
              a2af 00a6  ld   $a6
              a2b0 00f0  ld   $f0
              a2b1 0069  ld   $69
              a2b2 00c8  ld   $c8
              a2b3 00b1  ld   $b1
              a2b4 00a6  ld   $a6
              a2b5 0085  ld   $85
              a2b6 0071  ld   $71
              a2b7 00c8  ld   $c8
              a2b8 00b1  ld   $b1
              a2b9 00a6  ld   $a6
              a2ba 00c8  ld   $c8
              a2bb 0085  ld   $85
              a2bc 0072  ld   $72
              a2bd 00b1  ld   $b1
              a2be 00a6  ld   $a6
              a2bf 00aa  ld   $aa
              a2c0 0020  ld   $20
              a2c1 00ea  ld   $ea
              a2c2 0009  ld   $09
              a2c3 00e0  ld   $e0
              a2c4 0083  ld   $83
              a2c5 00d0  ld   $d0
              a2c6 00dd  ld   $dd
              a2c7 004c  ld   $4c
              a2c8 00c7  ld   $c7
              a2c9 000c  ld   $0c
              a2ca 00a5  ld   $a5
              a2cb 0075  ld   $75
              a2cc 00a4  ld   $a4
              a2cd 0076  ld   $76
              a2ce 00a6  ld   $a6
              a2cf 0043  ld   $43
              a2d0 0010  ld   $10
              a2d1 0003  ld   $03
              a2d2 004c  ld   $4c
              a2d3 0021  ld   $21
              a2d4 0009  ld   $09
              a2d5 00a0  ld   $a0
              a2d6 0000  ld   $00
              a2d7 00b1  ld   $b1
              a2d8 0075  ld   $75
              a2d9 00f0  ld   $f0
              a2da 0007  ld   $07
              a2db 00a9  ld   $a9
              a2dc 006d  ld   $6d
              a2dd 00a0  ld   $a0
              a2de 000d  ld   $0d
              a2df 004c  ld   $4c
              a2e0 00ef  ld   $ef
              a2e1 000b  ld   $0b
              a2e2 0060  ld   $60
              a2e3 003f  ld   $3f
              a2e4 0045  ld   $45
              a2e5 0058  ld   $58
              a2e6 0054  ld   $54
              a2e7 0052  ld   $52
              a2e8 0041  ld   $41
              a2e9 0020  ld   $20
              a2ea 0049  ld   $49
              a2eb 0047  ld   $47
              a2ec 004e  ld   $4e
              a2ed 004f  ld   $4f
              a2ee 0052  ld   $52
              a2ef 0045  ld   $45
              a2f0 0044  ld   $44
              a2f1 000d  ld   $0d
              a2f2 000a  ld   $0a
              a2f3 0000  ld   $00
              a2f4 003f  ld   $3f
              a2f5 0052  ld   $52
              a2f6 0045  ld   $45
              a2f7 0044  ld   $44
              a2f8 004f  ld   $4f
              a2f9 0020  ld   $20
              a2fa 0046  ld   $46
              a2fb fe00  bra  ac          ;+-----------------------------------+
              a2fc fcfd  bra  $a2fd       ;|                                   |
              a2fd 1418  ld   $18,y       ;| Trampoline for page $a200 lookups |
              a2fe e006  jmp  y,$06       ;|                                   |
              a2ff c218  st   [$18]       ;+-----------------------------------+
              a300 0052  ld   $52
              a301 004f  ld   $4f
              a302 004d  ld   $4d
              a303 0020  ld   $20
              a304 0053  ld   $53
              a305 0054  ld   $54
              a306 0041  ld   $41
              a307 0052  ld   $52
              a308 0054  ld   $54
              a309 000d  ld   $0d
              a30a 000a  ld   $0a
              a30b 0000  ld   $00
              a30c 00d0  ld   $d0
              a30d 0004  ld   $04
              a30e 00a0  ld   $a0
              a30f 0000  ld   $00
              a310 00f0  ld   $f0
              a311 0003  ld   $03
              a312 0020  ld   $20
              a313 00d0  ld   $d0
              a314 0010  ld   $10
              a315 0085  ld   $85
              a316 007b  ld   $7b
              a317 0084  ld   $84
              a318 007c  ld   $7c
              a319 0020  ld   $20
              a31a 00a2  ld   $a2
              a31b 0004  ld   $04
              a31c 00f0  ld   $f0
              a31d 0004  ld   $04
              a31e 00a2  ld   $a2
              a31f 0000  ld   $00
              a320 00f0  ld   $f0
              a321 0060  ld   $60
              a322 009a  ld   $9a
              a323 008a  ld   $8a
              a324 0018  ld   $18
              a325 0069  ld   $69
              a326 0004  ld   $04
              a327 0048  ld   $48
              a328 0069  ld   $69
              a329 0006  ld   $06
              a32a 0085  ld   $85
              a32b 0056  ld   $56
              a32c 0068  ld   $68
              a32d 00a0  ld   $a0
              a32e 0000  ld   $00
              a32f 0020  ld   $20
              a330 001a  ld   $1a
              a331 001c  ld   $1c
              a332 00ba  ld   $ba
              a333 00b5  ld   $b5
              a334 0009  ld   $09
              a335 0085  ld   $85
              a336 0099  ld   $99
              a337 00a5  ld   $a5
              a338 007b  ld   $7b
              a339 00a4  ld   $a4
              a33a 007c  ld   $7c
              a33b 0020  ld   $20
              a33c 00df  ld   $df
              a33d 0018  ld   $18
              a33e 0020  ld   $20
              a33f 0048  ld   $48
              a340 001c  ld   $1c
              a341 00a0  ld   $a0
              a342 0000  ld   $00
              a343 0020  ld   $20
              a344 00d5  ld   $d5
              a345 001c  ld   $1c
              a346 00ba  ld   $ba
              a347 0038  ld   $38
              a348 00f5  ld   $f5
              a349 0009  ld   $09
              a34a 00f0  ld   $f0
              a34b 0013  ld   $13
              a34c 00b5  ld   $b5
              a34d 000f  ld   $0f
              a34e 0085  ld   $85
              a34f 006b  ld   $6b
              a350 00b5  ld   $b5
              a351 0010  ld   $10
              a352 0085  ld   $85
              a353 006c  ld   $6c
              a354 00b5  ld   $b5
              a355 0012  ld   $12
              a356 0085  ld   $85
              a357 00a6  ld   $a6
              a358 00b5  ld   $b5
              a359 0011  ld   $11
              a35a 0085  ld   $85
              a35b 00a7  ld   $a7
              a35c 004c  ld   $4c
              a35d 00ab  ld   $ab
              a35e 0008  ld   $08
              a35f 008a  ld   $8a
              a360 0069  ld   $69
              a361 0011  ld   $11
              a362 00aa  ld   $aa
              a363 009a  ld   $9a
              a364 0020  ld   $20
              a365 0071  ld   $71
              a366 0022  ld   $22
              a367 00c9  ld   $c9
              a368 002c  ld   $2c
              a369 00d0  ld   $d0
              a36a 00f1  ld   $f1
              a36b 0020  ld   $20
              a36c 006b  ld   $6b
              a36d 0022  ld   $22
              a36e 0020  ld   $20
              a36f 0097  ld   $97
              a370 000d  ld   $0d
              a371 0020  ld   $20
              a372 000a  ld   $0a
              a373 000e  ld   $0e
              a374 0018  ld   $18
              a375 0024  ld   $24
              a376 0038  ld   $38
              a377 0024  ld   $24
              a378 003f  ld   $3f
              a379 0030  ld   $30
              a37a 0003  ld   $03
              a37b 000e  ld   $0e
              a37c 0000  ld   $00
              a37d 0000  ld   $00
              a37e 00b0  ld   $b0
              a37f 0003  ld   $03
              a380 0060  ld   $60
              a381 00b0  ld   $b0
              a382 00fd  ld   $fd
              a383 00a2  ld   $a2
              a384 00a3  ld   $a3
              a385 004c  ld   $4c
              a386 004a  ld   $4a
              a387 0005  ld   $05
              a388 00a6  ld   $a6
              a389 00a6  ld   $a6
              a38a 00d0  ld   $d0
              a38b 0002  ld   $02
              a38c 00c6  ld   $c6
              a38d 00a7  ld   $a7
              a38e 00c6  ld   $c6
              a38f 00a6  ld   $a6
              a390 00a2  ld   $a2
              a391 0000  ld   $00
              a392 0024  ld   $24
              a393 0048  ld   $48
              a394 008a  ld   $8a
              a395 0048  ld   $48
              a396 00a9  ld   $a9
              a397 0001  ld   $01
              a398 0020  ld   $20
              a399 000e  ld   $0e
              a39a 0005  ld   $05
              a39b 0020  ld   $20
              a39c 00ef  ld   $ef
              a39d 000e  ld   $0e
              a39e 00a9  ld   $a9
              a39f 0000  ld   $00
              a3a0 0085  ld   $85
              a3a1 007f  ld   $7f
              a3a2 0020  ld   $20
              a3a3 0071  ld   $71
              a3a4 0022  ld   $22
              a3a5 0038  ld   $38
              a3a6 00e9  ld   $e9
              a3a7 00ab  ld   $ab
              a3a8 0090  ld   $90
              a3a9 0017  ld   $17
              a3aa 00c9  ld   $c9
              a3ab 0003  ld   $03
              a3ac 00b0  ld   $b0
              a3ad 0013  ld   $13
              a3ae 00c9  ld   $c9
              a3af 0001  ld   $01
              a3b0 002a  ld   $2a
              a3b1 0049  ld   $49
              a3b2 0001  ld   $01
              a3b3 0045  ld   $45
              a3b4 007f  ld   $7f
              a3b5 00c5  ld   $c5
              a3b6 007f  ld   $7f
              a3b7 0090  ld   $90
              a3b8 0061  ld   $61
              a3b9 0085  ld   $85
              a3ba 007f  ld   $7f
              a3bb 0020  ld   $20
              a3bc 006b  ld   $6b
              a3bd 0022  ld   $22
              a3be 004c  ld   $4c
              a3bf 0027  ld   $27
              a3c0 000e  ld   $0e
              a3c1 00a6  ld   $a6
              a3c2 007f  ld   $7f
              a3c3 00d0  ld   $d0
              a3c4 002c  ld   $2c
              a3c5 00b0  ld   $b0
              a3c6 007b  ld   $7b
              a3c7 0069  ld   $69
              a3c8 0007  ld   $07
              a3c9 0090  ld   $90
              a3ca 0077  ld   $77
              a3cb 0065  ld   $65
              a3cc 003f  ld   $3f
              a3cd 00d0  ld   $d0
              a3ce 0003  ld   $03
              a3cf 004c  ld   $4c
              a3d0 0079  ld   $79
              a3d1 0016  ld   $16
              a3d2 0069  ld   $69
              a3d3 00ff  ld   $ff
              a3d4 0085  ld   $85
              a3d5 0054  ld   $54
              a3d6 000a  ld   $0a
              a3d7 0065  ld   $65
              a3d8 0054  ld   $54
              a3d9 00a8  ld   $a8
              a3da 0068  ld   $68
              a3db 00d9  ld   $d9
              a3dc 0080  ld   $80
              a3dd 0002  ld   $02
              a3de 00b0  ld   $b0
              a3df 0067  ld   $67
              a3e0 0020  ld   $20
              a3e1 00f9  ld   $f9
              a3e2 000d  ld   $0d
              a3e3 0048  ld   $48
              a3e4 0020  ld   $20
              a3e5 008c  ld   $8c
              a3e6 000e  ld   $0e
              a3e7 0068  ld   $68
              a3e8 00a4  ld   $a4
              a3e9 007d  ld   $7d
              a3ea 0010  ld   $10
              a3eb 0017  ld   $17
              a3ec 00aa  ld   $aa
              a3ed 00f0  ld   $f0
              a3ee 0056  ld   $56
              a3ef 00d0  ld   $d0
              a3f0 005f  ld   $5f
              a3f1 0046  ld   $46
              a3f2 003f  ld   $3f
              a3f3 008a  ld   $8a
              a3f4 002a  ld   $2a
              a3f5 00a6  ld   $a6
              a3f6 00a6  ld   $a6
              a3f7 00d0  ld   $d0
              a3f8 0002  ld   $02
              a3f9 00c6  ld   $c6
              a3fa 00a7  ld   $a7
              a3fb fe00  bra  ac          ;+-----------------------------------+
              a3fc fcfd  bra  $a3fd       ;|                                   |
              a3fd 1418  ld   $18,y       ;| Trampoline for page $a300 lookups |
              a3fe e006  jmp  y,$06       ;|                                   |
              a3ff c218  st   [$18]       ;+-----------------------------------+
              a400 00c6  ld   $c6
              a401 00a6  ld   $a6
              a402 00a0  ld   $a0
              a403 001b  ld   $1b
              a404 0085  ld   $85
              a405 007f  ld   $7f
              a406 00d0  ld   $d0
              a407 00d7  ld   $d7
              a408 00d9  ld   $d9
              a409 0080  ld   $80
              a40a 0002  ld   $02
              a40b 00b0  ld   $b0
              a40c 0048  ld   $48
              a40d 0090  ld   $90
              a40e 00d9  ld   $d9
              a40f 00b9  ld   $b9
              a410 0082  ld   $82
              a411 0002  ld   $02
              a412 0048  ld   $48
              a413 00b9  ld   $b9
              a414 0081  ld   $81
              a415 0002  ld   $02
              a416 0048  ld   $48
              a417 0020  ld   $20
              a418 009f  ld   $9f
              a419 000e  ld   $0e
              a41a 00a5  ld   $a5
              a41b 007f  ld   $7f
              a41c 004c  ld   $4c
              a41d 0015  ld   $15
              a41e 000e  ld   $0e
              a41f 004c  ld   $4c
              a420 006e  ld   $6e
              a421 000f  ld   $0f
              a422 00a5  ld   $a5
              a423 0099  ld   $99
              a424 00be  ld   $be
              a425 0080  ld   $80
              a426 0002  ld   $02
              a427 00a8  ld   $a8
              a428 0068  ld   $68
              a429 0085  ld   $85
              a42a 0054  ld   $54
              a42b 00e6  ld   $e6
              a42c 0054  ld   $54
              a42d 0068  ld   $68
              a42e 0085  ld   $85
              a42f 0055  ld   $55
              a430 0098  ld   $98
              a431 0048  ld   $48
              a432 0020  ld   $20
              a433 0093  ld   $93
              a434 001c  ld   $1c
              a435 00a5  ld   $a5
              a436 0098  ld   $98
              a437 0048  ld   $48
              a438 00a5  ld   $a5
              a439 0097  ld   $97
              a43a 0048  ld   $48
              a43b 00a5  ld   $a5
              a43c 0096  ld   $96
              a43d 0048  ld   $48
              a43e 00a5  ld   $a5
              a43f 0095  ld   $95
              a440 0048  ld   $48
              a441 00a5  ld   $a5
              a442 0094  ld   $94
              a443 0048  ld   $48
              a444 006c  ld   $6c
              a445 0054  ld   $54
              a446 0000  ld   $00
              a447 00a0  ld   $a0
              a448 00ff  ld   $ff
              a449 0068  ld   $68
              a44a 00f0  ld   $f0
              a44b 0023  ld   $23
              a44c 00c9  ld   $c9
              a44d 0064  ld   $64
              a44e 00f0  ld   $f0
              a44f 0003  ld   $03
              a450 0020  ld   $20
              a451 00f9  ld   $f9
              a452 000d  ld   $0d
              a453 0084  ld   $84
              a454 007d  ld   $7d
              a455 0068  ld   $68
              a456 004a  ld   $4a
              a457 0085  ld   $85
              a458 0044  ld   $44
              a459 0068  ld   $68
              a45a 0085  ld   $85
              a45b 009c  ld   $9c
              a45c 0068  ld   $68
              a45d 0085  ld   $85
              a45e 009d  ld   $9d
              a45f 0068  ld   $68
              a460 0085  ld   $85
              a461 009e  ld   $9e
              a462 0068  ld   $68
              a463 0085  ld   $85
              a464 009f  ld   $9f
              a465 0068  ld   $68
              a466 0085  ld   $85
              a467 00a0  ld   $a0
              a468 0068  ld   $68
              a469 0085  ld   $85
              a46a 00a1  ld   $a1
              a46b 0045  ld   $45
              a46c 0099  ld   $99
              a46d 0085  ld   $85
              a46e 00a2  ld   $a2
              a46f 00a5  ld   $a5
              a470 0094  ld   $94
              a471 0060  ld   $60
              a472 00a9  ld   $a9
              a473 0000  ld   $00
              a474 0085  ld   $85
              a475 003f  ld   $3f
              a476 0020  ld   $20
              a477 006b  ld   $6b
              a478 0022  ld   $22
              a479 00b0  ld   $b0
              a47a 0003  ld   $03
              a47b 004c  ld   $4c
              a47c 006b  ld   $6b
              a47d 001d  ld   $1d
              a47e 0020  ld   $20
              a47f 005a  ld   $5a
              a480 0011  ld   $11
              a481 00b0  ld   $b0
              a482 007a  ld   $7a
              a483 000f  ld   $0f
              a484 0000  ld   $00
              a485 0000  ld   $00
              a486 00c9  ld   $c9
              a487 00ff  ld   $ff
              a488 00d0  ld   $d0
              a489 000f  ld   $0f
              a48a 00a9  ld   $a9
              a48b 000e  ld   $0e
              a48c 00a0  ld   $a0
              a48d 000f  ld   $0f
              a48e 0020  ld   $20
              a48f 001a  ld   $1a
              a490 001c  ld   $1c
              a491 004c  ld   $4c
              a492 006b  ld   $6b
              a493 0022  ld   $22
              a494 0082  ld   $82
              a495 0049  ld   $49
              a496 000f  ld   $0f
              a497 00da  ld   $da
              a498 00a1  ld   $a1
              a499 00c9  ld   $c9
              a49a 002e  ld   $2e
              a49b 00f0  ld   $f0
              a49c 00e1  ld   $e1
              a49d 00c9  ld   $c9
              a49e 00a5  ld   $a5
              a49f 00f0  ld   $f0
              a4a0 0058  ld   $58
              a4a1 00c9  ld   $c9
              a4a2 00a4  ld   $a4
              a4a3 00f0  ld   $f0
              a4a4 00d4  ld   $d4
              a4a5 00c9  ld   $c9
              a4a6 0022  ld   $22
              a4a7 00d0  ld   $d0
              a4a8 000f  ld   $0f
              a4a9 00a5  ld   $a5
              a4aa 00a6  ld   $a6
              a4ab 00a4  ld   $a4
              a4ac 00a7  ld   $a7
              a4ad 0069  ld   $69
              a4ae 0000  ld   $00
              a4af 0090  ld   $90
              a4b0 0001  ld   $01
              a4b1 00c8  ld   $c8
              a4b2 0020  ld   $20
              a4b3 00c3  ld   $c3
              a4b4 0014  ld   $14
              a4b5 004c  ld   $4c
              a4b6 001f  ld   $1f
              a4b7 0018  ld   $18
              a4b8 00c9  ld   $c9
              a4b9 00a2  ld   $a2
              a4ba 00d0  ld   $d0
              a4bb 0013  ld   $13
              a4bc 00a0  ld   $a0
              a4bd 0018  ld   $18
              a4be 00d0  ld   $d0
              a4bf 003b  ld   $3b
              a4c0 0020  ld   $20
              a4c1 00fd  ld   $fd
              a4c2 0011  ld   $11
              a4c3 00a5  ld   $a5
              a4c4 0098  ld   $98
              a4c5 0049  ld   $49
              a4c6 00ff  ld   $ff
              a4c7 00a8  ld   $a8
              a4c8 00a5  ld   $a5
              a4c9 0097  ld   $97
              a4ca 0049  ld   $49
              a4cb 00ff  ld   $ff
              a4cc 004c  ld   $4c
              a4cd 00cc  ld   $cc
              a4ce 0013  ld   $13
              a4cf 00c9  ld   $c9
              a4d0 009f  ld   $9f
              a4d1 00d0  ld   $d0
              a4d2 0003  ld   $03
              a4d3 004c  ld   $4c
              a4d4 0030  ld   $30
              a4d5 0014  ld   $14
              a4d6 00c9  ld   $c9
              a4d7 00ae  ld   $ae
              a4d8 0090  ld   $90
              a4d9 0003  ld   $03
              a4da 004c  ld   $4c
              a4db 00ec  ld   $ec
              a4dc 000f  ld   $0f
              a4dd 0020  ld   $20
              a4de 0060  ld   $60
              a4df 000f  ld   $0f
              a4e0 0020  ld   $20
              a4e1 000a  ld   $0a
              a4e2 000e  ld   $0e
              a4e3 00a9  ld   $a9
              a4e4 0029  ld   $29
              a4e5 002c  ld   $2c
              a4e6 00a9  ld   $a9
              a4e7 0028  ld   $28
              a4e8 002c  ld   $2c
              a4e9 00a9  ld   $a9
              a4ea 002c  ld   $2c
              a4eb 00a0  ld   $a0
              a4ec 0000  ld   $00
              a4ed 00d1  ld   $d1
              a4ee 00a6  ld   $a6
              a4ef 00d0  ld   $d0
              a4f0 0003  ld   $03
              a4f1 004c  ld   $4c
              a4f2 006b  ld   $6b
              a4f3 0022  ld   $22
              a4f4 00a2  ld   $a2
              a4f5 0010  ld   $10
              a4f6 004c  ld   $4c
              a4f7 004a  ld   $4a
              a4f8 0005  ld   $05
              a4f9 00a0  ld   $a0
              a4fa 0015  ld   $15
              a4fb fe00  bra  ac          ;+-----------------------------------+
              a4fc fcfd  bra  $a4fd       ;|                                   |
              a4fd 1418  ld   $18,y       ;| Trampoline for page $a400 lookups |
              a4fe e006  jmp  y,$06       ;|                                   |
              a4ff c218  st   [$18]       ;+-----------------------------------+
              a500 0068  ld   $68
              a501 0068  ld   $68
              a502 004c  ld   $4c
              a503 0066  ld   $66
              a504 000e  ld   $0e
              a505 0020  ld   $20
              a506 00d0  ld   $d0
              a507 0010  ld   $10
              a508 0085  ld   $85
              a509 0097  ld   $97
              a50a 0084  ld   $84
              a50b 0098  ld   $98
              a50c 00a5  ld   $a5
              a50d 0077  ld   $77
              a50e 00a4  ld   $a4
              a50f 0078  ld   $78
              a510 00a6  ld   $a6
              a511 003f  ld   $3f
              a512 00f0  ld   $f0
              a513 0021  ld   $21
              a514 00a2  ld   $a2
              a515 0000  ld   $00
              a516 0086  ld   $86
              a517 00a3  ld   $a3
              a518 00c9  ld   $c9
              a519 0054  ld   $54
              a51a 00d0  ld   $d0
              a51b 0018  ld   $18
              a51c 00c0  ld   $c0
              a51d 00c9  ld   $c9
              a51e 00d0  ld   $d0
              a51f 0014  ld   $14
              a520 0020  ld   $20
              a521 0073  ld   $73
              a522 0004  ld   $04
              a523 0084  ld   $84
              a524 0091  ld   $91
              a525 0088  ld   $88
              a526 0084  ld   $84
              a527 00a4  ld   $a4
              a528 00a0  ld   $a0
              a529 0006  ld   $06
              a52a 0084  ld   $84
              a52b 0090  ld   $90
              a52c 00a0  ld   $a0
              a52d 0024  ld   $24
              a52e 0020  ld   $20
              a52f 00e0  ld   $e0
              a530 001e  ld   $1e
              a531 004c  ld   $4c
              a532 00ab  ld   $ab
              a533 0014  ld   $14
              a534 0060  ld   $60
              a535 00a6  ld   $a6
              a536 0040  ld   $40
              a537 0010  ld   $10
              a538 000d  ld   $0d
              a539 00a0  ld   $a0
              a53a 0000  ld   $00
              a53b 00b1  ld   $b1
              a53c 0097  ld   $97
              a53d 00aa  ld   $aa
              a53e 00c8  ld   $c8
              a53f 00b1  ld   $b1
              a540 0097  ld   $97
              a541 00a8  ld   $a8
              a542 008a  ld   $8a
              a543 004c  ld   $4c
              a544 00cc  ld   $cc
              a545 0013  ld   $13
              a546 00c9  ld   $c9
              a547 0054  ld   $54
              a548 00d0  ld   $d0
              a549 0019  ld   $19
              a54a 00c0  ld   $c0
              a54b 0049  ld   $49
              a54c 00d0  ld   $d0
              a54d 0022  ld   $22
              a54e 0020  ld   $20
              a54f 0073  ld   $73
              a550 0004  ld   $04
              a551 0098  ld   $98
              a552 00a2  ld   $a2
              a553 00a0  ld   $a0
              a554 004c  ld   $4c
              a555 00c7  ld   $c7
              a556 001c  ld   $1c
              a557 00a9  ld   $a9
              a558 00fe  ld   $fe
              a559 00a0  ld   $a0
              a55a 0001  ld   $01
              a55b 0078  ld   $78
              a55c 0020  ld   $20
              a55d 001a  ld   $1a
              a55e 001c  ld   $1c
              a55f 0058  ld   $58
              a560 0084  ld   $84
              a561 0095  ld   $95
              a562 0060  ld   $60
              a563 00c9  ld   $c9
              a564 0053  ld   $53
              a565 00d0  ld   $d0
              a566 0009  ld   $09
              a567 00c0  ld   $c0
              a568 0054  ld   $54
              a569 00d0  ld   $d0
              a56a 0005  ld   $05
              a56b 00a5  ld   $a5
              a56c 0019  ld   $19
              a56d 004c  ld   $4c
              a56e 00b4  ld   $b4
              a56f 001c  ld   $1c
              a570 00a5  ld   $a5
              a571 0097  ld   $97
              a572 00a4  ld   $a4
              a573 0098  ld   $98
              a574 004c  ld   $4c
              a575 001a  ld   $1a
              a576 001c  ld   $1c
              a577 000a  ld   $0a
              a578 0048  ld   $48
              a579 00aa  ld   $aa
              a57a 0020  ld   $20
              a57b 006b  ld   $6b
              a57c 0022  ld   $22
              a57d 00e0  ld   $e0
              a57e 0083  ld   $83
              a57f 0090  ld   $90
              a580 0020  ld   $20
              a581 0020  ld   $20
              a582 0060  ld   $60
              a583 000f  ld   $0f
              a584 0020  ld   $20
              a585 000a  ld   $0a
              a586 000e  ld   $0e
              a587 0020  ld   $20
              a588 0063  ld   $63
              a589 000f  ld   $0f
              a58a 0020  ld   $20
              a58b 0010  ld   $10
              a58c 0000  ld   $00
              a58d 0000  ld   $00
              a58e 00fb  ld   $fb
              a58f 000d  ld   $0d
              a590 0068  ld   $68
              a591 00aa  ld   $aa
              a592 00a5  ld   $a5
              a593 0098  ld   $98
              a594 0048  ld   $48
              a595 00a5  ld   $a5
              a596 0097  ld   $97
              a597 0048  ld   $48
              a598 008a  ld   $8a
              a599 0048  ld   $48
              a59a 0020  ld   $20
              a59b 00da  ld   $da
              a59c 0017  ld   $17
              a59d 0068  ld   $68
              a59e 00a8  ld   $a8
              a59f 008a  ld   $8a
              a5a0 0048  ld   $48
              a5a1 004c  ld   $4c
              a5a2 001b  ld   $1b
              a5a3 0010  ld   $10
              a5a4 0020  ld   $20
              a5a5 0057  ld   $57
              a5a6 000f  ld   $0f
              a5a7 0068  ld   $68
              a5a8 00a8  ld   $a8
              a5a9 00b9  ld   $b9
              a5aa 00f6  ld   $f6
              a5ab 0001  ld   $01
              a5ac 0085  ld   $85
              a5ad 0088  ld   $88
              a5ae 00b9  ld   $b9
              a5af 00f7  ld   $f7
              a5b0 0001  ld   $01
              a5b1 0085  ld   $85
              a5b2 0089  ld   $89
              a5b3 0020  ld   $20
              a5b4 0087  ld   $87
              a5b5 0000  ld   $00
              a5b6 004c  ld   $4c
              a5b7 00f9  ld   $f9
              a5b8 000d  ld   $0d
              a5b9 00a0  ld   $a0
              a5ba 00ff  ld   $ff
              a5bb 002c  ld   $2c
              a5bc 00a0  ld   $a0
              a5bd 0000  ld   $00
              a5be 0084  ld   $84
              a5bf 003d  ld   $3d
              a5c0 0020  ld   $20
              a5c1 00fd  ld   $fd
              a5c2 0011  ld   $11
              a5c3 00a5  ld   $a5
              a5c4 0097  ld   $97
              a5c5 0045  ld   $45
              a5c6 003d  ld   $3d
              a5c7 0085  ld   $85
              a5c8 003b  ld   $3b
              a5c9 00a5  ld   $a5
              a5ca 0098  ld   $98
              a5cb 0045  ld   $45
              a5cc 003d  ld   $3d
              a5cd 0085  ld   $85
              a5ce 003c  ld   $3c
              a5cf 0020  ld   $20
              a5d0 0074  ld   $74
              a5d1 001c  ld   $1c
              a5d2 0020  ld   $20
              a5d3 00fd  ld   $fd
              a5d4 0011  ld   $11
              a5d5 00a5  ld   $a5
              a5d6 0098  ld   $98
              a5d7 0045  ld   $45
              a5d8 003d  ld   $3d
              a5d9 0025  ld   $25
              a5da 003c  ld   $3c
              a5db 0045  ld   $45
              a5dc 003d  ld   $3d
              a5dd 00a8  ld   $a8
              a5de 00a5  ld   $a5
              a5df 0097  ld   $97
              a5e0 0045  ld   $45
              a5e1 003d  ld   $3d
              a5e2 0025  ld   $25
              a5e3 003b  ld   $3b
              a5e4 0045  ld   $45
              a5e5 003d  ld   $3d
              a5e6 004c  ld   $4c
              a5e7 00cc  ld   $cc
              a5e8 0013  ld   $13
              a5e9 0020  ld   $20
              a5ea 00fc  ld   $fc
              a5eb 000d  ld   $0d
              a5ec 00b0  ld   $b0
              a5ed 0013  ld   $13
              a5ee 00a5  ld   $a5
              a5ef 00a1  ld   $a1
              a5f0 0009  ld   $09
              a5f1 007f  ld   $7f
              a5f2 0025  ld   $25
              a5f3 009d  ld   $9d
              a5f4 0085  ld   $85
              a5f5 009d  ld   $9d
              a5f6 00a9  ld   $a9
              a5f7 009c  ld   $9c
              a5f8 00a0  ld   $a0
              a5f9 0000  ld   $00
              a5fa 0020  ld   $20
              a5fb fe00  bra  ac          ;+-----------------------------------+
              a5fc fcfd  bra  $a5fd       ;|                                   |
              a5fd 1418  ld   $18,y       ;| Trampoline for page $a500 lookups |
              a5fe e006  jmp  y,$06       ;|                                   |
              a5ff c218  st   [$18]       ;+-----------------------------------+
              a600 00d3  ld   $d3
              a601 001c  ld   $1c
              a602 00aa  ld   $aa
              a603 004c  ld   $4c
              a604 00a6  ld   $a6
              a605 0010  ld   $10
              a606 00a9  ld   $a9
              a607 0000  ld   $00
              a608 0085  ld   $85
              a609 003f  ld   $3f
              a60a 00c6  ld   $c6
              a60b 007f  ld   $7f
              a60c 0020  ld   $20
              a60d 00e2  ld   $e2
              a60e 0016  ld   $16
              a60f 0085  ld   $85
              a610 0094  ld   $94
              a611 0086  ld   $86
              a612 0095  ld   $95
              a613 0084  ld   $84
              a614 0096  ld   $96
              a615 00a5  ld   $a5
              a616 009f  ld   $9f
              a617 00a4  ld   $a4
              a618 00a0  ld   $a0
              a619 0020  ld   $20
              a61a 00e6  ld   $e6
              a61b 0016  ld   $16
              a61c 0086  ld   $86
              a61d 009f  ld   $9f
              a61e 0084  ld   $84
              a61f 00a0  ld   $a0
              a620 00aa  ld   $aa
              a621 0038  ld   $38
              a622 00e5  ld   $e5
              a623 0094  ld   $94
              a624 00f0  ld   $f0
              a625 0008  ld   $08
              a626 00a9  ld   $a9
              a627 0001  ld   $01
              a628 0090  ld   $90
              a629 0004  ld   $04
              a62a 00a6  ld   $a6
              a62b 0094  ld   $94
              a62c 00a9  ld   $a9
              a62d 00ff  ld   $ff
              a62e 0085  ld   $85
              a62f 0099  ld   $99
              a630 00a0  ld   $a0
              a631 00ff  ld   $ff
              a632 00e8  ld   $e8
              a633 00c8  ld   $c8
              a634 00ca  ld   $ca
              a635 00d0  ld   $d0
              a636 0007  ld   $07
              a637 00a6  ld   $a6
              a638 0099  ld   $99
              a639 0030  ld   $30
              a63a 000f  ld   $0f
              a63b 0018  ld   $18
              a63c 0090  ld   $90
              a63d 000c  ld   $0c
              a63e 00b1  ld   $b1
              a63f 009f  ld   $9f
              a640 00d1  ld   $d1
              a641 0095  ld   $95
              a642 00f0  ld   $f0
              a643 00ef  ld   $ef
              a644 00a2  ld   $a2
              a645 00ff  ld   $ff
              a646 00b0  ld   $b0
              a647 0002  ld   $02
              a648 00a2  ld   $a2
              a649 0001  ld   $01
              a64a 00e8  ld   $e8
              a64b 008a  ld   $8a
              a64c 002a  ld   $2a
              a64d 0025  ld   $25
              a64e 0044  ld   $44
              a64f 00f0  ld   $f0
              a650 0002  ld   $02
              a651 00a9  ld   $a9
              a652 00ff  ld   $ff
              a653 004c  ld   $4c
              a654 00b4  ld   $b4
              a655 001c  ld   $1c
              a656 0020  ld   $20
              a657 0063  ld   $63
              a658 000f  ld   $0f
              a659 00aa  ld   $aa
              a65a 0020  ld   $20
              a65b 00d5  ld   $d5
              a65c 0010  ld   $10
              a65d 0020  ld   $20
              a65e 0071  ld   $71
              a65f 0022  ld   $22
              a660 00d0  ld   $d0
              a661 00f4  ld   $f4
              a662 0060  ld   $60
              a663 00a2  ld   $a2
              a664 0000  ld   $00
              a665 0020  ld   $20
              a666 0071  ld   $71
              a667 0022  ld   $22
              a668 0086  ld   $86
              a669 003e  ld   $3e
              a66a 0085  ld   $85
              a66b 0077  ld   $77
              a66c 0020  ld   $20
              a66d 0071  ld   $71
              a66e 0022  ld   $22
              a66f 0020  ld   $20
              a670 005a  ld   $5a
              a671 0011  ld   $11
              a672 00b0  ld   $b0
              a673 0003  ld   $03
              a674 004c  ld   $4c
              a675 006e  ld   $6e
              a676 000f  ld   $0f
              a677 00a2  ld   $a2
              a678 0000  ld   $00
              a679 0086  ld   $86
              a67a 003f  ld   $3f
              a67b 0086  ld   $86
              a67c 0040  ld   $40
              a67d 0020  ld   $20
              a67e 006b  ld   $6b
              a67f 0022  ld   $22
              a680 0090  ld   $90
              a681 0005  ld   $05
              a682 0020  ld   $20
              a683 005a  ld   $5a
              a684 0011  ld   $11
              a685 0090  ld   $90
              a686 000b  ld   $0b
              a687 00aa  ld   $aa
              a688 0020  ld   $20
              a689 006b  ld   $6b
              a68a 0022  ld   $22
              a68b 0090  ld   $90
              a68c 00fb  ld   $fb
              a68d 0020  ld   $20
              a68e 005a  ld   $5a
              a68f 0011  ld   $11
              a690 00b0  ld   $b0
              a691 00f6  ld   $f6
              a692 00c9  ld   $c9
              a693 0011  ld   $11
              a694 0000  ld   $00
              a695 0000  ld   $00
              a696 0024  ld   $24
              a697 00d0  ld   $d0
              a698 0006  ld   $06
              a699 00a9  ld   $a9
              a69a 00ff  ld   $ff
              a69b 0085  ld   $85
              a69c 003f  ld   $3f
              a69d 00d0  ld   $d0
              a69e 0010  ld   $10
              a69f 00c9  ld   $c9
              a6a0 0025  ld   $25
              a6a1 00d0  ld   $d0
              a6a2 0013  ld   $13
              a6a3 00a5  ld   $a5
              a6a4 0042  ld   $42
              a6a5 00d0  ld   $d0
              a6a6 00d0  ld   $d0
              a6a7 00a9  ld   $a9
              a6a8 0080  ld   $80
              a6a9 0085  ld   $85
              a6aa 0040  ld   $40
              a6ab 0005  ld   $05
              a6ac 0077  ld   $77
              a6ad 0085  ld   $85
              a6ae 0077  ld   $77
              a6af 008a  ld   $8a
              a6b0 0009  ld   $09
              a6b1 0080  ld   $80
              a6b2 00aa  ld   $aa
              a6b3 0020  ld   $20
              a6b4 006b  ld   $6b
              a6b5 0022  ld   $22
              a6b6 0086  ld   $86
              a6b7 0078  ld   $78
              a6b8 0038  ld   $38
              a6b9 0005  ld   $05
              a6ba 0042  ld   $42
              a6bb 00e9  ld   $e9
              a6bc 0028  ld   $28
              a6bd 00d0  ld   $d0
              a6be 0003  ld   $03
              a6bf 004c  ld   $4c
              a6c0 000f  ld   $0f
              a6c1 0012  ld   $12
              a6c2 00a9  ld   $a9
              a6c3 0000  ld   $00
              a6c4 0085  ld   $85
              a6c5 0042  ld   $42
              a6c6 00a5  ld   $a5
              a6c7 005f  ld   $5f
              a6c8 00a6  ld   $a6
              a6c9 0060  ld   $60
              a6ca 00a0  ld   $a0
              a6cb 0000  ld   $00
              a6cc 0086  ld   $86
              a6cd 0093  ld   $93
              a6ce 0085  ld   $85
              a6cf 0092  ld   $92
              a6d0 00e4  ld   $e4
              a6d1 0062  ld   $62
              a6d2 00d0  ld   $d0
              a6d3 0004  ld   $04
              a6d4 00c5  ld   $c5
              a6d5 0061  ld   $61
              a6d6 00f0  ld   $f0
              a6d7 0022  ld   $22
              a6d8 00a5  ld   $a5
              a6d9 0077  ld   $77
              a6da 00d1  ld   $d1
              a6db 0092  ld   $92
              a6dc 00d0  ld   $d0
              a6dd 0008  ld   $08
              a6de 00a5  ld   $a5
              a6df 0078  ld   $78
              a6e0 00c8  ld   $c8
              a6e1 00d1  ld   $d1
              a6e2 0092  ld   $92
              a6e3 00f0  ld   $f0
              a6e4 007d  ld   $7d
              a6e5 0088  ld   $88
              a6e6 0018  ld   $18
              a6e7 00a5  ld   $a5
              a6e8 0092  ld   $92
              a6e9 0069  ld   $69
              a6ea 0007  ld   $07
              a6eb 0090  ld   $90
              a6ec 00e1  ld   $e1
              a6ed 00e8  ld   $e8
              a6ee 00d0  ld   $d0
              a6ef 00dc  ld   $dc
              a6f0 00c9  ld   $c9
              a6f1 0041  ld   $41
              a6f2 0090  ld   $90
              a6f3 0005  ld   $05
              a6f4 00e9  ld   $e9
              a6f5 005b  ld   $5b
              a6f6 0038  ld   $38
              a6f7 00e9  ld   $e9
              a6f8 00a5  ld   $a5
              a6f9 0060  ld   $60
              a6fa 0068  ld   $68
              a6fb fe00  bra  ac          ;+-----------------------------------+
              a6fc fcfd  bra  $a6fd       ;|                                   |
              a6fd 1418  ld   $18,y       ;| Trampoline for page $a600 lookups |
              a6fe e006  jmp  y,$06       ;|                                   |
              a6ff c218  st   [$18]       ;+-----------------------------------+
              a700 0048  ld   $48
              a701 00c9  ld   $c9
              a702 007c  ld   $7c
              a703 00d0  ld   $d0
              a704 0005  ld   $05
              a705 00a9  ld   $a9
              a706 008b  ld   $8b
              a707 00a0  ld   $a0
              a708 001f  ld   $1f
              a709 0060  ld   $60
              a70a 00a5  ld   $a5
              a70b 0077  ld   $77
              a70c 00a4  ld   $a4
              a70d 0078  ld   $78
              a70e 00c9  ld   $c9
              a70f 0054  ld   $54
              a710 00d0  ld   $d0
              a711 000b  ld   $0b
              a712 00c0  ld   $c0
              a713 00c9  ld   $c9
              a714 00f0  ld   $f0
              a715 00ef  ld   $ef
              a716 00c0  ld   $c0
              a717 0049  ld   $49
              a718 00d0  ld   $d0
              a719 0003  ld   $03
              a71a 004c  ld   $4c
              a71b 006e  ld   $6e
              a71c 000f  ld   $0f
              a71d 00c9  ld   $c9
              a71e 0053  ld   $53
              a71f 00d0  ld   $d0
              a720 0004  ld   $04
              a721 00c0  ld   $c0
              a722 0054  ld   $54
              a723 00f0  ld   $f0
              a724 00f5  ld   $f5
              a725 00a5  ld   $a5
              a726 0061  ld   $61
              a727 00a4  ld   $a4
              a728 0062  ld   $62
              a729 0085  ld   $85
              a72a 0092  ld   $92
              a72b 0084  ld   $84
              a72c 0093  ld   $93
              a72d 00a5  ld   $a5
              a72e 0063  ld   $63
              a72f 00a4  ld   $a4
              a730 0064  ld   $64
              a731 0085  ld   $85
              a732 008d  ld   $8d
              a733 0084  ld   $84
              a734 008e  ld   $8e
              a735 0018  ld   $18
              a736 0069  ld   $69
              a737 0007  ld   $07
              a738 0090  ld   $90
              a739 0001  ld   $01
              a73a 00c8  ld   $c8
              a73b 0085  ld   $85
              a73c 008b  ld   $8b
              a73d 0084  ld   $84
              a73e 008c  ld   $8c
              a73f 0020  ld   $20
              a740 00cb  ld   $cb
              a741 0004  ld   $04
              a742 00a5  ld   $a5
              a743 008b  ld   $8b
              a744 00a4  ld   $a4
              a745 008c  ld   $8c
              a746 00c8  ld   $c8
              a747 0085  ld   $85
              a748 0061  ld   $61
              a749 0084  ld   $84
              a74a 0062  ld   $62
              a74b 00a0  ld   $a0
              a74c 0000  ld   $00
              a74d 00a5  ld   $a5
              a74e 0077  ld   $77
              a74f 0091  ld   $91
              a750 0092  ld   $92
              a751 00c8  ld   $c8
              a752 00a5  ld   $a5
              a753 0078  ld   $78
              a754 0091  ld   $91
              a755 0092  ld   $92
              a756 00a9  ld   $a9
              a757 0000  ld   $00
              a758 00c8  ld   $c8
              a759 0091  ld   $91
              a75a 0092  ld   $92
              a75b 00c8  ld   $c8
              a75c 0091  ld   $91
              a75d 0092  ld   $92
              a75e 00c8  ld   $c8
              a75f 0091  ld   $91
              a760 0092  ld   $92
              a761 00c8  ld   $c8
              a762 0091  ld   $91
              a763 0092  ld   $92
              a764 00c8  ld   $c8
              a765 0091  ld   $91
              a766 0092  ld   $92
              a767 00a5  ld   $a5
              a768 0092  ld   $92
              a769 0018  ld   $18
              a76a 0069  ld   $69
              a76b 0002  ld   $02
              a76c 00a4  ld   $a4
              a76d 0093  ld   $93
              a76e 0090  ld   $90
              a76f 0001  ld   $01
              a770 00c8  ld   $c8
              a771 0085  ld   $85
              a772 0079  ld   $79
              a773 0084  ld   $84
              a774 007a  ld   $7a
              a775 0060  ld   $60
              a776 00a5  ld   $a5
              a777 003d  ld   $3d
              a778 000a  ld   $0a
              a779 0069  ld   $69
              a77a 0005  ld   $05
              a77b 0065  ld   $65
              a77c 0092  ld   $92
              a77d 00a4  ld   $a4
              a77e 0093  ld   $93
              a77f 0090  ld   $90
              a780 0001  ld   $01
              a781 00c8  ld   $c8
              a782 0085  ld   $85
              a783 008b  ld   $8b
              a784 0084  ld   $84
              a785 008c  ld   $8c
              a786 0060  ld   $60
              a787 0090  ld   $90
              a788 0080  ld   $80
              a789 0000  ld   $00
              a78a 0000  ld   $00
              a78b 0020  ld   $20
              a78c 006b  ld   $6b
              a78d 0022  ld   $22
              a78e 0020  ld   $20
              a78f 000a  ld   $0a
              a790 000e  ld   $0e
              a791 0020  ld   $20
              a792 00f9  ld   $f9
              a793 000d  ld   $0d
              a794 00a5  ld   $a5
              a795 0099  ld   $99
              a796 0030  ld   $30
              a797 000d  ld   $0d
              a798 00a5  ld   $a5
              a799 0094  ld   $94
              a79a 00c9  ld   $c9
              a79b 0012  ld   $12
              a79c 0000  ld   $00
              a79d 0000  ld   $00
              a79e 0090  ld   $90
              a79f 0090  ld   $90
              a7a0 0009  ld   $09
              a7a1 00a9  ld   $a9
              a7a2 00ec  ld   $ec
              a7a3 00a0  ld   $a0
              a7a4 0011  ld   $11
              a7a5 0020  ld   $20
              a7a6 00d3  ld   $d3
              a7a7 001c  ld   $1c
              a7a8 00d0  ld   $d0
              a7a9 0076  ld   $76
              a7aa 004c  ld   $4c
              a7ab 0013  ld   $13
              a7ac 001d  ld   $1d
              a7ad 00a5  ld   $a5
              a7ae 003e  ld   $3e
              a7af 0005  ld   $05
              a7b0 0040  ld   $40
              a7b1 0048  ld   $48
              a7b2 00a5  ld   $a5
              a7b3 003f  ld   $3f
              a7b4 0048  ld   $48
              a7b5 00a0  ld   $a0
              a7b6 0000  ld   $00
              a7b7 0098  ld   $98
              a7b8 0048  ld   $48
              a7b9 00a5  ld   $a5
              a7ba 0078  ld   $78
              a7bb 0048  ld   $48
              a7bc 00a5  ld   $a5
              a7bd 0077  ld   $77
              a7be 0048  ld   $48
              a7bf 0020  ld   $20
              a7c0 00f0  ld   $f0
              a7c1 0011  ld   $11
              a7c2 0068  ld   $68
              a7c3 0085  ld   $85
              a7c4 0077  ld   $77
              a7c5 0068  ld   $68
              a7c6 0085  ld   $85
              a7c7 0078  ld   $78
              a7c8 0068  ld   $68
              a7c9 00a8  ld   $a8
              a7ca 00ba  ld   $ba
              a7cb 00b5  ld   $b5
              a7cc 0002  ld   $02
              a7cd 0048  ld   $48
              a7ce 00b5  ld   $b5
              a7cf 0001  ld   $01
              a7d0 0048  ld   $48
              a7d1 00a5  ld   $a5
              a7d2 0097  ld   $97
              a7d3 0095  ld   $95
              a7d4 0002  ld   $02
              a7d5 00a5  ld   $a5
              a7d6 0098  ld   $98
              a7d7 0095  ld   $95
              a7d8 0001  ld   $01
              a7d9 00c8  ld   $c8
              a7da 0020  ld   $20
              a7db 0071  ld   $71
              a7dc 0022  ld   $22
              a7dd 00c9  ld   $c9
              a7de 002c  ld   $2c
              a7df 00f0  ld   $f0
              a7e0 00d6  ld   $d6
              a7e1 0084  ld   $84
              a7e2 003d  ld   $3d
              a7e3 0020  ld   $20
              a7e4 005d  ld   $5d
              a7e5 000f  ld   $0f
              a7e6 0068  ld   $68
              a7e7 0085  ld   $85
              a7e8 003f  ld   $3f
              a7e9 0068  ld   $68
              a7ea 0085  ld   $85
              a7eb 0040  ld   $40
              a7ec 0029  ld   $29
              a7ed 007f  ld   $7f
              a7ee 0085  ld   $85
              a7ef 003e  ld   $3e
              a7f0 00a6  ld   $a6
              a7f1 0061  ld   $61
              a7f2 00a5  ld   $a5
              a7f3 0062  ld   $62
              a7f4 0086  ld   $86
              a7f5 0092  ld   $92
              a7f6 0085  ld   $85
              a7f7 0093  ld   $93
              a7f8 00c5  ld   $c5
              a7f9 0064  ld   $64
              a7fa 00d0  ld   $d0
              a7fb fe00  bra  ac          ;+-----------------------------------+
              a7fc fcfd  bra  $a7fd       ;|                                   |
              a7fd 1418  ld   $18,y       ;| Trampoline for page $a700 lookups |
              a7fe e006  jmp  y,$06       ;|                                   |
              a7ff c218  st   [$18]       ;+-----------------------------------+
              a800 0004  ld   $04
              a801 00e4  ld   $e4
              a802 0063  ld   $63
              a803 00f0  ld   $f0
              a804 0039  ld   $39
              a805 00a0  ld   $a0
              a806 0000  ld   $00
              a807 00b1  ld   $b1
              a808 0092  ld   $92
              a809 00c8  ld   $c8
              a80a 00c5  ld   $c5
              a80b 0077  ld   $77
              a80c 00d0  ld   $d0
              a80d 0006  ld   $06
              a80e 00a5  ld   $a5
              a80f 0078  ld   $78
              a810 00d1  ld   $d1
              a811 0092  ld   $92
              a812 00f0  ld   $f0
              a813 0016  ld   $16
              a814 00c8  ld   $c8
              a815 00b1  ld   $b1
              a816 0092  ld   $92
              a817 0018  ld   $18
              a818 0065  ld   $65
              a819 0092  ld   $92
              a81a 00aa  ld   $aa
              a81b 00c8  ld   $c8
              a81c 00b1  ld   $b1
              a81d 0092  ld   $92
              a81e 0065  ld   $65
              a81f 0093  ld   $93
              a820 0090  ld   $90
              a821 00d7  ld   $d7
              a822 00a2  ld   $a2
              a823 006b  ld   $6b
              a824 002c  ld   $2c
              a825 00a2  ld   $a2
              a826 0035  ld   $35
              a827 004c  ld   $4c
              a828 004a  ld   $4a
              a829 0005  ld   $05
              a82a 00a2  ld   $a2
              a82b 0078  ld   $78
              a82c 00a5  ld   $a5
              a82d 003e  ld   $3e
              a82e 00d0  ld   $d0
              a82f 00f7  ld   $f7
              a830 0020  ld   $20
              a831 00db  ld   $db
              a832 0011  ld   $11
              a833 00a5  ld   $a5
              a834 003d  ld   $3d
              a835 00a0  ld   $a0
              a836 0004  ld   $04
              a837 00d1  ld   $d1
              a838 0092  ld   $92
              a839 00d0  ld   $d0
              a83a 00e7  ld   $e7
              a83b 004c  ld   $4c
              a83c 0025  ld   $25
              a83d 0013  ld   $13
              a83e 0020  ld   $20
              a83f 00db  ld   $db
              a840 0011  ld   $11
              a841 0020  ld   $20
              a842 001b  ld   $1b
              a843 0005  ld   $05
              a844 00a9  ld   $a9
              a845 0000  ld   $00
              a846 00a8  ld   $a8
              a847 0085  ld   $85
              a848 00a5  ld   $a5
              a849 00a2  ld   $a2
              a84a 0005  ld   $05
              a84b 00a5  ld   $a5
              a84c 0077  ld   $77
              a84d 0091  ld   $91
              a84e 0092  ld   $92
              a84f 0010  ld   $10
              a850 0001  ld   $01
              a851 00ca  ld   $ca
              a852 00c8  ld   $c8
              a853 00a5  ld   $a5
              a854 0078  ld   $78
              a855 0091  ld   $91
              a856 0092  ld   $92
              a857 0010  ld   $10
              a858 0002  ld   $02
              a859 00ca  ld   $ca
              a85a 00ca  ld   $ca
              a85b 0086  ld   $86
              a85c 00a4  ld   $a4
              a85d 00a5  ld   $a5
              a85e 003d  ld   $3d
              a85f 00c8  ld   $c8
              a860 00c8  ld   $c8
              a861 00c8  ld   $c8
              a862 0091  ld   $91
              a863 0092  ld   $92
              a864 00a2  ld   $a2
              a865 000b  ld   $0b
              a866 00a9  ld   $a9
              a867 0000  ld   $00
              a868 0024  ld   $24
              a869 003e  ld   $3e
              a86a 0050  ld   $50
              a86b 0008  ld   $08
              a86c 0068  ld   $68
              a86d 0018  ld   $18
              a86e 0069  ld   $69
              a86f 0001  ld   $01
              a870 00aa  ld   $aa
              a871 0068  ld   $68
              a872 0069  ld   $69
              a873 0000  ld   $00
              a874 00c8  ld   $c8
              a875 0091  ld   $91
              a876 0092  ld   $92
              a877 00c8  ld   $c8
              a878 008a  ld   $8a
              a879 0091  ld   $91
              a87a 0092  ld   $92
              a87b 0020  ld   $20
              a87c 0087  ld   $87
              a87d 0013  ld   $13
              a87e 0086  ld   $86
              a87f 00a4  ld   $a4
              a880 0085  ld   $85
              a881 00a5  ld   $a5
              a882 00a4  ld   $a4
              a883 0054  ld   $54
              a884 00c6  ld   $c6
              a885 003d  ld   $3d
              a886 00d0  ld   $d0
              a887 00dc  ld   $dc
              a888 0065  ld   $65
              a889 008c  ld   $8c
              a88a 00b0  ld   $b0
              a88b 005d  ld   $5d
              a88c 0085  ld   $85
              a88d 008c  ld   $8c
              a88e 00a8  ld   $a8
              a88f 008a  ld   $8a
              a890 0065  ld   $65
              a891 008b  ld   $8b
              a892 0090  ld   $90
              a893 0003  ld   $03
              a894 00c8  ld   $c8
              a895 00f0  ld   $f0
              a896 0052  ld   $52
              a897 0020  ld   $20
              a898 001b  ld   $1b
              a899 0005  ld   $05
              a89a 0085  ld   $85
              a89b 0063  ld   $63
              a89c 0084  ld   $84
              a89d 0064  ld   $64
              a89e 00a9  ld   $a9
              a89f 0000  ld   $00
              a8a0 00e6  ld   $e6
              a8a1 00a5  ld   $a5
              a8a2 00a4  ld   $a4
              a8a3 0013  ld   $13
              a8a4 0000  ld   $00
              a8a5 0000  ld   $00
              a8a6 00a4  ld   $a4
              a8a7 00f0  ld   $f0
              a8a8 0005  ld   $05
              a8a9 0088  ld   $88
              a8aa 0091  ld   $91
              a8ab 008b  ld   $8b
              a8ac 00d0  ld   $d0
              a8ad 00fb  ld   $fb
              a8ae 00c6  ld   $c6
              a8af 008c  ld   $8c
              a8b0 00c6  ld   $c6
              a8b1 00a5  ld   $a5
              a8b2 00d0  ld   $d0
              a8b3 00f5  ld   $f5
              a8b4 00e6  ld   $e6
              a8b5 008c  ld   $8c
              a8b6 0038  ld   $38
              a8b7 00a5  ld   $a5
              a8b8 0063  ld   $63
              a8b9 00e5  ld   $e5
              a8ba 0092  ld   $92
              a8bb 00a0  ld   $a0
              a8bc 0002  ld   $02
              a8bd 0091  ld   $91
              a8be 0092  ld   $92
              a8bf 00a5  ld   $a5
              a8c0 0064  ld   $64
              a8c1 00c8  ld   $c8
              a8c2 00e5  ld   $e5
              a8c3 0093  ld   $93
              a8c4 0091  ld   $91
              a8c5 0092  ld   $92
              a8c6 00a5  ld   $a5
              a8c7 003e  ld   $3e
              a8c8 00d0  ld   $d0
              a8c9 0062  ld   $62
              a8ca 00c8  ld   $c8
              a8cb 00b1  ld   $b1
              a8cc 0092  ld   $92
              a8cd 0085  ld   $85
              a8ce 003d  ld   $3d
              a8cf 00a9  ld   $a9
              a8d0 0000  ld   $00
              a8d1 0085  ld   $85
              a8d2 00a4  ld   $a4
              a8d3 0085  ld   $85
              a8d4 00a5  ld   $a5
              a8d5 00c8  ld   $c8
              a8d6 0068  ld   $68
              a8d7 00aa  ld   $aa
              a8d8 0085  ld   $85
              a8d9 0097  ld   $97
              a8da 0068  ld   $68
              a8db 0085  ld   $85
              a8dc 0098  ld   $98
              a8dd 00d1  ld   $d1
              a8de 0092  ld   $92
              a8df 0090  ld   $90
              a8e0 000e  ld   $0e
              a8e1 00d0  ld   $d0
              a8e2 0006  ld   $06
              a8e3 00c8  ld   $c8
              a8e4 008a  ld   $8a
              a8e5 00d1  ld   $d1
              a8e6 0092  ld   $92
              a8e7 0090  ld   $90
              a8e8 0007  ld   $07
              a8e9 004c  ld   $4c
              a8ea 007f  ld   $7f
              a8eb 0012  ld   $12
              a8ec 004c  ld   $4c
              a8ed 0048  ld   $48
              a8ee 0005  ld   $05
              a8ef 00c8  ld   $c8
              a8f0 00a5  ld   $a5
              a8f1 00a5  ld   $a5
              a8f2 0005  ld   $05
              a8f3 00a4  ld   $a4
              a8f4 0018  ld   $18
              a8f5 00f0  ld   $f0
              a8f6 000a  ld   $0a
              a8f7 0020  ld   $20
              a8f8 0087  ld   $87
              a8f9 0013  ld   $13
              a8fa 008a  ld   $8a
              a8fb fe00  bra  ac          ;+-----------------------------------+
              a8fc fcfd  bra  $a8fd       ;|                                   |
              a8fd 1418  ld   $18,y       ;| Trampoline for page $a800 lookups |
              a8fe e006  jmp  y,$06       ;|                                   |
              a8ff c218  st   [$18]       ;+-----------------------------------+
              a900 0065  ld   $65
              a901 0097  ld   $97
              a902 00aa  ld   $aa
              a903 0098  ld   $98
              a904 00a4  ld   $a4
              a905 0054  ld   $54
              a906 0065  ld   $65
              a907 0098  ld   $98
              a908 0086  ld   $86
              a909 00a4  ld   $a4
              a90a 00c6  ld   $c6
              a90b 003d  ld   $3d
              a90c 00d0  ld   $d0
              a90d 00ca  ld   $ca
              a90e 0085  ld   $85
              a90f 00a5  ld   $a5
              a910 00a2  ld   $a2
              a911 0005  ld   $05
              a912 00a5  ld   $a5
              a913 0077  ld   $77
              a914 0010  ld   $10
              a915 0001  ld   $01
              a916 00ca  ld   $ca
              a917 00a5  ld   $a5
              a918 0078  ld   $78
              a919 0010  ld   $10
              a91a 0002  ld   $02
              a91b 00ca  ld   $ca
              a91c 00ca  ld   $ca
              a91d 0086  ld   $86
              a91e 005a  ld   $5a
              a91f 00a9  ld   $a9
              a920 0000  ld   $00
              a921 0020  ld   $20
              a922 0090  ld   $90
              a923 0013  ld   $13
              a924 008a  ld   $8a
              a925 0065  ld   $65
              a926 008b  ld   $8b
              a927 0085  ld   $85
              a928 0079  ld   $79
              a929 0098  ld   $98
              a92a 0065  ld   $65
              a92b 008c  ld   $8c
              a92c 0085  ld   $85
              a92d 007a  ld   $7a
              a92e 00a8  ld   $a8
              a92f 00a5  ld   $a5
              a930 0079  ld   $79
              a931 0060  ld   $60
              a932 0084  ld   $84
              a933 0054  ld   $54
              a934 00b1  ld   $b1
              a935 0092  ld   $92
              a936 0085  ld   $85
              a937 005a  ld   $5a
              a938 0088  ld   $88
              a939 00b1  ld   $b1
              a93a 0092  ld   $92
              a93b 0085  ld   $85
              a93c 005b  ld   $5b
              a93d 00a9  ld   $a9
              a93e 0010  ld   $10
              a93f 0085  ld   $85
              a940 0090  ld   $90
              a941 00a2  ld   $a2
              a942 0000  ld   $00
              a943 00a0  ld   $a0
              a944 0000  ld   $00
              a945 008a  ld   $8a
              a946 000a  ld   $0a
              a947 00aa  ld   $aa
              a948 0098  ld   $98
              a949 002a  ld   $2a
              a94a 00a8  ld   $a8
              a94b 00b0  ld   $b0
              a94c 00a4  ld   $a4
              a94d 0006  ld   $06
              a94e 00a4  ld   $a4
              a94f 0026  ld   $26
              a950 00a5  ld   $a5
              a951 0090  ld   $90
              a952 000b  ld   $0b
              a953 0018  ld   $18
              a954 008a  ld   $8a
              a955 0065  ld   $65
              a956 005a  ld   $5a
              a957 00aa  ld   $aa
              a958 0098  ld   $98
              a959 0065  ld   $65
              a95a 005b  ld   $5b
              a95b 00a8  ld   $a8
              a95c 00b0  ld   $b0
              a95d 0093  ld   $93
              a95e 00c6  ld   $c6
              a95f 0090  ld   $90
              a960 00d0  ld   $d0
              a961 00e3  ld   $e3
              a962 0060  ld   $60
              a963 00a5  ld   $a5
              a964 003f  ld   $3f
              a965 00f0  ld   $f0
              a966 0003  ld   $03
              a967 0020  ld   $20
              a968 00e2  ld   $e2
              a969 0016  ld   $16
              a96a 0020  ld   $20
              a96b 0062  ld   $62
              a96c 0015  ld   $15
              a96d 0038  ld   $38
              a96e 00a5  ld   $a5
              a96f 0065  ld   $65
              a970 00e5  ld   $e5
              a971 0063  ld   $63
              a972 00a8  ld   $a8
              a973 00a5  ld   $a5
              a974 0066  ld   $66
              a975 00e5  ld   $e5
              a976 0064  ld   $64
              a977 00a2  ld   $a2
              a978 0000  ld   $00
              a979 0086  ld   $86
              a97a 003f  ld   $3f
              a97b 0085  ld   $85
              a97c 0095  ld   $95
              a97d 0084  ld   $84
              a97e 0096  ld   $96
              a97f 00a2  ld   $a2
              a980 0090  ld   $90
              a981 004c  ld   $4c
              a982 00bc  ld   $bc
              a983 001c  ld   $1c
              a984 00a5  ld   $a5
              a985 0030  ld   $30
              a986 0020  ld   $20
              a987 007a  ld   $7a
              a988 0004  ld   $04
              a989 00a9  ld   $a9
              a98a 0000  ld   $00
              a98b 00f0  ld   $f0
              a98c 00ea  ld   $ea
              a98d 00a6  ld   $a6
              a98e 006c  ld   $6c
              a98f 00e8  ld   $e8
              a990 00d0  ld   $d0
              a991 009f  ld   $9f
              a992 00a2  ld   $a2
              a993 0095  ld   $95
              a994 002c  ld   $2c
              a995 00a2  ld   $a2
              a996 00e0  ld   $e0
              a997 004c  ld   $4c
              a998 004a  ld   $4a
              a999 0005  ld   $05
              a99a 0020  ld   $20
              a99b 001d  ld   $1d
              a99c 0014  ld   $14
              a99d 0020  ld   $20
              a99e 00e2  ld   $e2
              a99f 0013  ld   $13
              a9a0 0020  ld   $20
              a9a1 0060  ld   $60
              a9a2 000f  ld   $0f
              a9a3 00a9  ld   $a9
              a9a4 0080  ld   $80
              a9a5 0085  ld   $85
              a9a6 0042  ld   $42
              a9a7 0020  ld   $20
              a9a8 00d0  ld   $d0
              a9a9 0010  ld   $10
              a9aa 0020  ld   $20
              a9ab 0014  ld   $14
              a9ac 0000  ld   $00
              a9ad 0000  ld   $00
              a9ae 00f9  ld   $f9
              a9af 000d  ld   $0d
              a9b0 0020  ld   $20
              a9b1 005d  ld   $5d
              a9b2 000f  ld   $0f
              a9b3 00a9  ld   $a9
              a9b4 00ac  ld   $ac
              a9b5 0020  ld   $20
              a9b6 0065  ld   $65
              a9b7 000f  ld   $0f
              a9b8 0048  ld   $48
              a9b9 00a5  ld   $a5
              a9ba 007a  ld   $7a
              a9bb 0048  ld   $48
              a9bc 00a5  ld   $a5
              a9bd 0079  ld   $79
              a9be 0048  ld   $48
              a9bf 00a5  ld   $a5
              a9c0 00a7  ld   $a7
              a9c1 0048  ld   $48
              a9c2 00a5  ld   $a5
              a9c3 00a6  ld   $a6
              a9c4 0048  ld   $48
              a9c5 0020  ld   $20
              a9c6 00e7  ld   $e7
              a9c7 0009  ld   $09
              a9c8 004c  ld   $4c
              a9c9 008b  ld   $8b
              a9ca 0014  ld   $14
              a9cb 00a9  ld   $a9
              a9cc 009f  ld   $9f
              a9cd 0020  ld   $20
              a9ce 0065  ld   $65
              a9cf 000f  ld   $0f
              a9d0 0009  ld   $09
              a9d1 0080  ld   $80
              a9d2 0085  ld   $85
              a9d3 0042  ld   $42
              a9d4 0020  ld   $20
              a9d5 00d7  ld   $d7
              a9d6 0010  ld   $10
              a9d7 0085  ld   $85
              a9d8 0081  ld   $81
              a9d9 0084  ld   $84
              a9da 0082  ld   $82
              a9db 004c  ld   $4c
              a9dc 00f9  ld   $f9
              a9dd 000d  ld   $0d
              a9de 0020  ld   $20
              a9df 001d  ld   $1d
              a9e0 0014  ld   $14
              a9e1 00a5  ld   $a5
              a9e2 0082  ld   $82
              a9e3 0048  ld   $48
              a9e4 00a5  ld   $a5
              a9e5 0081  ld   $81
              a9e6 0048  ld   $48
              a9e7 0020  ld   $20
              a9e8 0057  ld   $57
              a9e9 000f  ld   $0f
              a9ea 0020  ld   $20
              a9eb 00f9  ld   $f9
              a9ec 000d  ld   $0d
              a9ed 0068  ld   $68
              a9ee 0085  ld   $85
              a9ef 0081  ld   $81
              a9f0 0068  ld   $68
              a9f1 0085  ld   $85
              a9f2 0082  ld   $82
              a9f3 00a0  ld   $a0
              a9f4 0002  ld   $02
              a9f5 00b1  ld   $b1
              a9f6 0081  ld   $81
              a9f7 0085  ld   $85
              a9f8 0079  ld   $79
              a9f9 00aa  ld   $aa
              a9fa 00c8  ld   $c8
              a9fb fe00  bra  ac          ;+-----------------------------------+
              a9fc fcfd  bra  $a9fd       ;|                                   |
              a9fd 1418  ld   $18,y       ;| Trampoline for page $a900 lookups |
              a9fe e006  jmp  y,$06       ;|                                   |
              a9ff c218  st   [$18]       ;+-----------------------------------+
              aa00 00b1  ld   $b1
              aa01 0081  ld   $81
              aa02 00f0  ld   $f0
              aa03 0099  ld   $99
              aa04 0085  ld   $85
              aa05 007a  ld   $7a
              aa06 00c8  ld   $c8
              aa07 00b1  ld   $b1
              aa08 0079  ld   $79
              aa09 0048  ld   $48
              aa0a 0088  ld   $88
              aa0b 0010  ld   $10
              aa0c 00fa  ld   $fa
              aa0d 00a4  ld   $a4
              aa0e 007a  ld   $7a
              aa0f 0020  ld   $20
              aa10 004c  ld   $4c
              aa11 001c  ld   $1c
              aa12 00a5  ld   $a5
              aa13 00a7  ld   $a7
              aa14 0048  ld   $48
              aa15 00a5  ld   $a5
              aa16 00a6  ld   $a6
              aa17 0048  ld   $48
              aa18 00b1  ld   $b1
              aa19 0081  ld   $81
              aa1a 0085  ld   $85
              aa1b 00a6  ld   $a6
              aa1c 00c8  ld   $c8
              aa1d 00b1  ld   $b1
              aa1e 0081  ld   $81
              aa1f 0085  ld   $85
              aa20 00a7  ld   $a7
              aa21 00a5  ld   $a5
              aa22 007a  ld   $7a
              aa23 0048  ld   $48
              aa24 00a5  ld   $a5
              aa25 0079  ld   $79
              aa26 0048  ld   $48
              aa27 0020  ld   $20
              aa28 00f6  ld   $f6
              aa29 000d  ld   $0d
              aa2a 0068  ld   $68
              aa2b 0085  ld   $85
              aa2c 0081  ld   $81
              aa2d 0068  ld   $68
              aa2e 0085  ld   $85
              aa2f 0082  ld   $82
              aa30 0020  ld   $20
              aa31 0071  ld   $71
              aa32 0022  ld   $22
              aa33 00f0  ld   $f0
              aa34 0003  ld   $03
              aa35 004c  ld   $4c
              aa36 006e  ld   $6e
              aa37 000f  ld   $0f
              aa38 0068  ld   $68
              aa39 0085  ld   $85
              aa3a 00a6  ld   $a6
              aa3b 0068  ld   $68
              aa3c 0085  ld   $85
              aa3d 00a7  ld   $a7
              aa3e 00a0  ld   $a0
              aa3f 0000  ld   $00
              aa40 0068  ld   $68
              aa41 0091  ld   $91
              aa42 0081  ld   $81
              aa43 0068  ld   $68
              aa44 00c8  ld   $c8
              aa45 0091  ld   $91
              aa46 0081  ld   $81
              aa47 0068  ld   $68
              aa48 00c8  ld   $c8
              aa49 0091  ld   $91
              aa4a 0081  ld   $81
              aa4b 0068  ld   $68
              aa4c 00c8  ld   $c8
              aa4d 0091  ld   $91
              aa4e 0081  ld   $81
              aa4f 0068  ld   $68
              aa50 00c8  ld   $c8
              aa51 0091  ld   $91
              aa52 0081  ld   $81
              aa53 0060  ld   $60
              aa54 0020  ld   $20
              aa55 00f9  ld   $f9
              aa56 000d  ld   $0d
              aa57 00a0  ld   $a0
              aa58 0000  ld   $00
              aa59 0020  ld   $20
              aa5a 0057  ld   $57
              aa5b 001e  ld   $1e
              aa5c 0068  ld   $68
              aa5d 0068  ld   $68
              aa5e 00a9  ld   $a9
              aa5f 0004  ld   $04
              aa60 00a0  ld   $a0
              aa61 0002  ld   $02
              aa62 00d0  ld   $d0
              aa63 0012  ld   $12
              aa64 00a6  ld   $a6
              aa65 0097  ld   $97
              aa66 00a4  ld   $a4
              aa67 0098  ld   $98
              aa68 0086  ld   $86
              aa69 0083  ld   $83
              aa6a 0084  ld   $84
              aa6b 0084  ld   $84
              aa6c 0020  ld   $20
              aa6d 0030  ld   $30
              aa6e 0015  ld   $15
              aa6f 0086  ld   $86
              aa70 0095  ld   $95
              aa71 0084  ld   $84
              aa72 0096  ld   $96
              aa73 0085  ld   $85
              aa74 0094  ld   $94
              aa75 0060  ld   $60
              aa76 00a2  ld   $a2
              aa77 0022  ld   $22
              aa78 0086  ld   $86
              aa79 003b  ld   $3b
              aa7a 0086  ld   $86
              aa7b 003c  ld   $3c
              aa7c 0085  ld   $85
              aa7d 00a2  ld   $a2
              aa7e 0084  ld   $84
              aa7f 00a3  ld   $a3
              aa80 0085  ld   $85
              aa81 0095  ld   $95
              aa82 0084  ld   $84
              aa83 0096  ld   $96
              aa84 00a0  ld   $a0
              aa85 00ff  ld   $ff
              aa86 00c8  ld   $c8
              aa87 00b1  ld   $b1
              aa88 00a2  ld   $a2
              aa89 00f0  ld   $f0
              aa8a 000c  ld   $0c
              aa8b 00c5  ld   $c5
              aa8c 003b  ld   $3b
              aa8d 00f0  ld   $f0
              aa8e 0004  ld   $04
              aa8f 00c5  ld   $c5
              aa90 003c  ld   $3c
              aa91 00d0  ld   $d0
              aa92 00f3  ld   $f3
              aa93 00c9  ld   $c9
              aa94 0022  ld   $22
              aa95 00f0  ld   $f0
              aa96 0001  ld   $01
              aa97 0018  ld   $18
              aa98 0084  ld   $84
              aa99 0094  ld   $94
              aa9a 0098  ld   $98
              aa9b 0065  ld   $65
              aa9c 00a2  ld   $a2
              aa9d 0085  ld   $85
              aa9e 00a4  ld   $a4
              aa9f 00a6  ld   $a6
              aaa0 00a3  ld   $a3
              aaa1 0090  ld   $90
              aaa2 0001  ld   $01
              aaa3 00e8  ld   $e8
              aaa4 0086  ld   $86
              aaa5 00a5  ld   $a5
              aaa6 00a5  ld   $a5
              aaa7 00a3  ld   $a3
              aaa8 00f0  ld   $f0
              aaa9 0004  ld   $04
              aaaa 00c9  ld   $c9
              aaab 0024  ld   $24
              aaac 00d0  ld   $d0
              aaad 000b  ld   $0b
              aaae 0098  ld   $98
              aaaf 0020  ld   $20
              aab0 00b1  ld   $b1
              aab1 0014  ld   $14
              aab2 00a6  ld   $a6
              aab3 0015  ld   $15
              aab4 0000  ld   $00
              aab5 0000  ld   $00
              aab6 00a2  ld   $a2
              aab7 00a4  ld   $a4
              aab8 00a3  ld   $a3
              aab9 0020  ld   $20
              aaba 00c4  ld   $c4
              aabb 0016  ld   $16
              aabc 00a6  ld   $a6
              aabd 0048  ld   $48
              aabe 00e0  ld   $e0
              aabf 0054  ld   $54
              aac0 00d0  ld   $d0
              aac1 0005  ld   $05
              aac2 00a2  ld   $a2
              aac3 00bf  ld   $bf
              aac4 004c  ld   $4c
              aac5 004a  ld   $4a
              aac6 0005  ld   $05
              aac7 00a5  ld   $a5
              aac8 0094  ld   $94
              aac9 0095  ld   $95
              aaca 0000  ld   $00
              aacb 00a5  ld   $a5
              aacc 0095  ld   $95
              aacd 0095  ld   $95
              aace 0001  ld   $01
              aacf 00a5  ld   $a5
              aad0 0096  ld   $96
              aad1 0095  ld   $95
              aad2 0002  ld   $02
              aad3 00a0  ld   $a0
              aad4 0000  ld   $00
              aad5 0086  ld   $86
              aad6 0097  ld   $97
              aad7 0084  ld   $84
              aad8 0098  ld   $98
              aad9 0084  ld   $84
              aada 00a3  ld   $a3
              aadb 0088  ld   $88
              aadc 0084  ld   $84
              aadd 003f  ld   $3f
              aade 0086  ld   $86
              aadf 0049  ld   $49
              aae0 00e8  ld   $e8
              aae1 00e8  ld   $e8
              aae2 00e8  ld   $e8
              aae3 0086  ld   $86
              aae4 0048  ld   $48
              aae5 0060  ld   $60
              aae6 0046  ld   $46
              aae7 0041  ld   $41
              aae8 0048  ld   $48
              aae9 0049  ld   $49
              aaea 00ff  ld   $ff
              aaeb 0038  ld   $38
              aaec 0065  ld   $65
              aaed 0065  ld   $65
              aaee 00a4  ld   $a4
              aaef 0066  ld   $66
              aaf0 00b0  ld   $b0
              aaf1 0001  ld   $01
              aaf2 0088  ld   $88
              aaf3 00c4  ld   $c4
              aaf4 0064  ld   $64
              aaf5 0090  ld   $90
              aaf6 0011  ld   $11
              aaf7 00d0  ld   $d0
              aaf8 0004  ld   $04
              aaf9 00c5  ld   $c5
              aafa 0063  ld   $63
              aafb fe00  bra  ac          ;+-----------------------------------+
              aafc fcfd  bra  $aafd       ;|                                   |
              aafd 1418  ld   $18,y       ;| Trampoline for page $aa00 lookups |
              aafe e006  jmp  y,$06       ;|                                   |
              aaff c218  st   [$18]       ;+-----------------------------------+
              ab00 0090  ld   $90
              ab01 000b  ld   $0b
              ab02 0085  ld   $85
              ab03 0065  ld   $65
              ab04 0084  ld   $84
              ab05 0066  ld   $66
              ab06 0085  ld   $85
              ab07 0067  ld   $67
              ab08 0084  ld   $84
              ab09 0068  ld   $68
              ab0a 00aa  ld   $aa
              ab0b 0068  ld   $68
              ab0c 0060  ld   $60
              ab0d 00a2  ld   $a2
              ab0e 004d  ld   $4d
              ab0f 00a5  ld   $a5
              ab10 0041  ld   $41
              ab11 0030  ld   $30
              ab12 00b6  ld   $b6
              ab13 0020  ld   $20
              ab14 0062  ld   $62
              ab15 0015  ld   $15
              ab16 00a9  ld   $a9
              ab17 0080  ld   $80
              ab18 0085  ld   $85
              ab19 0041  ld   $41
              ab1a 0068  ld   $68
              ab1b 00d0  ld   $d0
              ab1c 00d0  ld   $d0
              ab1d 00a6  ld   $a6
              ab1e 0069  ld   $69
              ab1f 00a5  ld   $a5
              ab20 006a  ld   $6a
              ab21 0086  ld   $86
              ab22 0065  ld   $65
              ab23 0085  ld   $85
              ab24 0066  ld   $66
              ab25 00a0  ld   $a0
              ab26 0000  ld   $00
              ab27 0084  ld   $84
              ab28 0082  ld   $82
              ab29 0084  ld   $84
              ab2a 0081  ld   $81
              ab2b 00a5  ld   $a5
              ab2c 0063  ld   $63
              ab2d 00a6  ld   $a6
              ab2e 0064  ld   $64
              ab2f 0085  ld   $85
              ab30 0092  ld   $92
              ab31 0086  ld   $86
              ab32 0093  ld   $93
              ab33 00a9  ld   $a9
              ab34 004b  ld   $4b
              ab35 00a2  ld   $a2
              ab36 0000  ld   $00
              ab37 0085  ld   $85
              ab38 0054  ld   $54
              ab39 0086  ld   $86
              ab3a 0055  ld   $55
              ab3b 00c5  ld   $c5
              ab3c 0048  ld   $48
              ab3d 00f0  ld   $f0
              ab3e 0005  ld   $05
              ab3f 0020  ld   $20
              ab40 0003  ld   $03
              ab41 0016  ld   $16
              ab42 00f0  ld   $f0
              ab43 00f7  ld   $f7
              ab44 00a9  ld   $a9
              ab45 0007  ld   $07
              ab46 0085  ld   $85
              ab47 0086  ld   $86
              ab48 00a5  ld   $a5
              ab49 005f  ld   $5f
              ab4a 00a6  ld   $a6
              ab4b 0060  ld   $60
              ab4c 0085  ld   $85
              ab4d 0054  ld   $54
              ab4e 0086  ld   $86
              ab4f 0055  ld   $55
              ab50 00e4  ld   $e4
              ab51 0062  ld   $62
              ab52 00d0  ld   $d0
              ab53 0004  ld   $04
              ab54 00c5  ld   $c5
              ab55 0061  ld   $61
              ab56 00f0  ld   $f0
              ab57 0005  ld   $05
              ab58 0020  ld   $20
              ab59 00f9  ld   $f9
              ab5a 0015  ld   $15
              ab5b 00f0  ld   $f0
              ab5c 00f3  ld   $f3
              ab5d 0085  ld   $85
              ab5e 008b  ld   $8b
              ab5f 0086  ld   $86
              ab60 008c  ld   $8c
              ab61 00a9  ld   $a9
              ab62 0003  ld   $03
              ab63 0085  ld   $85
              ab64 0086  ld   $86
              ab65 00a5  ld   $a5
              ab66 008b  ld   $8b
              ab67 00a6  ld   $a6
              ab68 008c  ld   $8c
              ab69 00e4  ld   $e4
              ab6a 0064  ld   $64
              ab6b 00d0  ld   $d0
              ab6c 0007  ld   $07
              ab6d 00c5  ld   $c5
              ab6e 0063  ld   $63
              ab6f 00d0  ld   $d0
              ab70 0003  ld   $03
              ab71 004c  ld   $4c
              ab72 0042  ld   $42
              ab73 0016  ld   $16
              ab74 0085  ld   $85
              ab75 0054  ld   $54
              ab76 0086  ld   $86
              ab77 0055  ld   $55
              ab78 00a0  ld   $a0
              ab79 0000  ld   $00
              ab7a 00b1  ld   $b1
              ab7b 0054  ld   $54
              ab7c 00aa  ld   $aa
              ab7d 00c8  ld   $c8
              ab7e 00b1  ld   $b1
              ab7f 0054  ld   $54
              ab80 0008  ld   $08
              ab81 00c8  ld   $c8
              ab82 00b1  ld   $b1
              ab83 0054  ld   $54
              ab84 0065  ld   $65
              ab85 008b  ld   $8b
              ab86 0085  ld   $85
              ab87 008b  ld   $8b
              ab88 00c8  ld   $c8
              ab89 00b1  ld   $b1
              ab8a 0054  ld   $54
              ab8b 0065  ld   $65
              ab8c 008c  ld   $8c
              ab8d 0085  ld   $85
              ab8e 008c  ld   $8c
              ab8f 0028  ld   $28
              ab90 0010  ld   $10
              ab91 00d3  ld   $d3
              ab92 008a  ld   $8a
              ab93 0030  ld   $30
              ab94 00d0  ld   $d0
              ab95 00c8  ld   $c8
              ab96 00b1  ld   $b1
              ab97 0054  ld   $54
              ab98 00a0  ld   $a0
              ab99 0000  ld   $00
              ab9a 000a  ld   $0a
              ab9b 0069  ld   $69
              ab9c 0005  ld   $05
              ab9d 0065  ld   $65
              ab9e 0054  ld   $54
              ab9f 0085  ld   $85
              aba0 0054  ld   $54
              aba1 0090  ld   $90
              aba2 0002  ld   $02
              aba3 00e6  ld   $e6
              aba4 0055  ld   $55
              aba5 00a6  ld   $a6
              aba6 0055  ld   $55
              aba7 00e4  ld   $e4
              aba8 008c  ld   $8c
              aba9 00d0  ld   $d0
              abaa 0004  ld   $04
              abab 00c5  ld   $c5
              abac 008b  ld   $8b
              abad 00f0  ld   $f0
              abae 00ba  ld   $ba
              abaf 0020  ld   $20
              abb0 0003  ld   $03
              abb1 0016  ld   $16
              abb2 00f0  ld   $f0
              abb3 00f3  ld   $f3
              abb4 00b1  ld   $b1
              abb5 0054  ld   $54
              abb6 0030  ld   $30
              abb7 0035  ld   $35
              abb8 00c8  ld   $c8
              abb9 00b1  ld   $b1
              abba 0054  ld   $54
              abbb 0016  ld   $16
              abbc 0000  ld   $00
              abbd 0000  ld   $00
              abbe 0010  ld   $10
              abbf 0030  ld   $30
              abc0 00c8  ld   $c8
              abc1 00b1  ld   $b1
              abc2 0054  ld   $54
              abc3 00f0  ld   $f0
              abc4 002b  ld   $2b
              abc5 00c8  ld   $c8
              abc6 00b1  ld   $b1
              abc7 0054  ld   $54
              abc8 00aa  ld   $aa
              abc9 00c8  ld   $c8
              abca 00b1  ld   $b1
              abcb 0054  ld   $54
              abcc 00c5  ld   $c5
              abcd 0066  ld   $66
              abce 0090  ld   $90
              abcf 0006  ld   $06
              abd0 00d0  ld   $d0
              abd1 001e  ld   $1e
              abd2 00e4  ld   $e4
              abd3 0065  ld   $65
              abd4 00b0  ld   $b0
              abd5 001a  ld   $1a
              abd6 00c5  ld   $c5
              abd7 0093  ld   $93
              abd8 0090  ld   $90
              abd9 0016  ld   $16
              abda 00d0  ld   $d0
              abdb 0004  ld   $04
              abdc 00e4  ld   $e4
              abdd 0092  ld   $92
              abde 0090  ld   $90
              abdf 0010  ld   $10
              abe0 0086  ld   $86
              abe1 0092  ld   $92
              abe2 0085  ld   $85
              abe3 0093  ld   $93
              abe4 00a5  ld   $a5
              abe5 0054  ld   $54
              abe6 00a6  ld   $a6
              abe7 0055  ld   $55
              abe8 0085  ld   $85
              abe9 0081  ld   $81
              abea 0086  ld   $86
              abeb 0082  ld   $82
              abec 00a5  ld   $a5
              abed 0086  ld   $86
              abee 0085  ld   $85
              abef 0088  ld   $88
              abf0 00a5  ld   $a5
              abf1 0086  ld   $86
              abf2 0018  ld   $18
              abf3 0065  ld   $65
              abf4 0054  ld   $54
              abf5 0085  ld   $85
              abf6 0054  ld   $54
              abf7 0090  ld   $90
              abf8 0002  ld   $02
              abf9 00e6  ld   $e6
              abfa 0055  ld   $55
              abfb fe00  bra  ac          ;+-----------------------------------+
              abfc fcfd  bra  $abfd       ;|                                   |
              abfd 1418  ld   $18,y       ;| Trampoline for page $ab00 lookups |
              abfe e006  jmp  y,$06       ;|                                   |
              abff c218  st   [$18]       ;+-----------------------------------+
              ac00 00a6  ld   $a6
              ac01 0055  ld   $55
              ac02 00a0  ld   $a0
              ac03 0000  ld   $00
              ac04 0060  ld   $60
              ac05 00a5  ld   $a5
              ac06 0082  ld   $82
              ac07 0005  ld   $05
              ac08 0081  ld   $81
              ac09 00f0  ld   $f0
              ac0a 00f5  ld   $f5
              ac0b 00a5  ld   $a5
              ac0c 0088  ld   $88
              ac0d 0029  ld   $29
              ac0e 0004  ld   $04
              ac0f 004a  ld   $4a
              ac10 00a8  ld   $a8
              ac11 0085  ld   $85
              ac12 0088  ld   $88
              ac13 00b1  ld   $b1
              ac14 0081  ld   $81
              ac15 0065  ld   $65
              ac16 0092  ld   $92
              ac17 0085  ld   $85
              ac18 008d  ld   $8d
              ac19 00a5  ld   $a5
              ac1a 0093  ld   $93
              ac1b 0069  ld   $69
              ac1c 0000  ld   $00
              ac1d 0085  ld   $85
              ac1e 008e  ld   $8e
              ac1f 00a5  ld   $a5
              ac20 0065  ld   $65
              ac21 00a6  ld   $a6
              ac22 0066  ld   $66
              ac23 0085  ld   $85
              ac24 008b  ld   $8b
              ac25 0086  ld   $86
              ac26 008c  ld   $8c
              ac27 0020  ld   $20
              ac28 00d2  ld   $d2
              ac29 0004  ld   $04
              ac2a 00a4  ld   $a4
              ac2b 0088  ld   $88
              ac2c 00c8  ld   $c8
              ac2d 00a5  ld   $a5
              ac2e 008b  ld   $8b
              ac2f 0091  ld   $91
              ac30 0081  ld   $81
              ac31 00aa  ld   $aa
              ac32 00e6  ld   $e6
              ac33 008c  ld   $8c
              ac34 00a5  ld   $a5
              ac35 008c  ld   $8c
              ac36 00c8  ld   $c8
              ac37 0091  ld   $91
              ac38 0081  ld   $81
              ac39 004c  ld   $4c
              ac3a 0066  ld   $66
              ac3b 0015  ld   $15
              ac3c 00a5  ld   $a5
              ac3d 0098  ld   $98
              ac3e 0048  ld   $48
              ac3f 00a5  ld   $a5
              ac40 0097  ld   $97
              ac41 0048  ld   $48
              ac42 0020  ld   $20
              ac43 00ef  ld   $ef
              ac44 000e  ld   $0e
              ac45 0020  ld   $20
              ac46 00fb  ld   $fb
              ac47 000d  ld   $0d
              ac48 0068  ld   $68
              ac49 0085  ld   $85
              ac4a 00a2  ld   $a2
              ac4b 0068  ld   $68
              ac4c 0085  ld   $85
              ac4d 00a3  ld   $a3
              ac4e 00a0  ld   $a0
              ac4f 0000  ld   $00
              ac50 00b1  ld   $b1
              ac51 00a2  ld   $a2
              ac52 0018  ld   $18
              ac53 0071  ld   $71
              ac54 0097  ld   $97
              ac55 0090  ld   $90
              ac56 0005  ld   $05
              ac57 00a2  ld   $a2
              ac58 00b0  ld   $b0
              ac59 004c  ld   $4c
              ac5a 004a  ld   $4a
              ac5b 0005  ld   $05
              ac5c 0020  ld   $20
              ac5d 00b1  ld   $b1
              ac5e 0014  ld   $14
              ac5f 0020  ld   $20
              ac60 00b6  ld   $b6
              ac61 0016  ld   $16
              ac62 00a5  ld   $a5
              ac63 0083  ld   $83
              ac64 00a4  ld   $a4
              ac65 0084  ld   $84
              ac66 0020  ld   $20
              ac67 00e6  ld   $e6
              ac68 0016  ld   $16
              ac69 0020  ld   $20
              ac6a 00c8  ld   $c8
              ac6b 0016  ld   $16
              ac6c 00a5  ld   $a5
              ac6d 00a2  ld   $a2
              ac6e 00a4  ld   $a4
              ac6f 00a3  ld   $a3
              ac70 0020  ld   $20
              ac71 00e6  ld   $e6
              ac72 0016  ld   $16
              ac73 0020  ld   $20
              ac74 0006  ld   $06
              ac75 0015  ld   $15
              ac76 004c  ld   $4c
              ac77 0024  ld   $24
              ac78 000e  ld   $0e
              ac79 00a0  ld   $a0
              ac7a 0000  ld   $00
              ac7b 00b1  ld   $b1
              ac7c 00a2  ld   $a2
              ac7d 0048  ld   $48
              ac7e 00c8  ld   $c8
              ac7f 00b1  ld   $b1
              ac80 00a2  ld   $a2
              ac81 00aa  ld   $aa
              ac82 00c8  ld   $c8
              ac83 00b1  ld   $b1
              ac84 00a2  ld   $a2
              ac85 00a8  ld   $a8
              ac86 0068  ld   $68
              ac87 0086  ld   $86
              ac88 0054  ld   $54
              ac89 0084  ld   $84
              ac8a 0055  ld   $55
              ac8b 00a8  ld   $a8
              ac8c 00f0  ld   $f0
              ac8d 000a  ld   $0a
              ac8e 0048  ld   $48
              ac8f 0088  ld   $88
              ac90 00b1  ld   $b1
              ac91 0054  ld   $54
              ac92 0091  ld   $91
              ac93 0067  ld   $67
              ac94 0098  ld   $98
              ac95 00d0  ld   $d0
              ac96 00f8  ld   $f8
              ac97 0068  ld   $68
              ac98 0018  ld   $18
              ac99 0065  ld   $65
              ac9a 0067  ld   $67
              ac9b 0085  ld   $85
              ac9c 0067  ld   $67
              ac9d 0090  ld   $90
              ac9e 0002  ld   $02
              ac9f 00e6  ld   $e6
              aca0 0068  ld   $68
              aca1 0060  ld   $60
              aca2 0020  ld   $20
              aca3 00fb  ld   $fb
              aca4 000d  ld   $0d
              aca5 00a5  ld   $a5
              aca6 0097  ld   $97
              aca7 00a4  ld   $a4
              aca8 0098  ld   $98
              aca9 0085  ld   $85
              acaa 0054  ld   $54
              acab 0084  ld   $84
              acac 0055  ld   $55
              acad 0020  ld   $20
              acae 0017  ld   $17
              acaf 0017  ld   $17
              acb0 0008  ld   $08
              acb1 00a0  ld   $a0
              acb2 0000  ld   $00
              acb3 00b1  ld   $b1
              acb4 0054  ld   $54
              acb5 0048  ld   $48
              acb6 00c8  ld   $c8
              acb7 00b1  ld   $b1
              acb8 0054  ld   $54
              acb9 00aa  ld   $aa
              acba 00c8  ld   $c8
              acbb 00b1  ld   $b1
              acbc 0054  ld   $54
              acbd 00a8  ld   $a8
              acbe 0068  ld   $68
              acbf 0028  ld   $28
              acc0 00d0  ld   $d0
              acc1 0013  ld   $13
              acc2 00c4  ld   $c4
              acc3 0017  ld   $17
              acc4 0000  ld   $00
              acc5 0000  ld   $00
              acc6 0066  ld   $66
              acc7 00d0  ld   $d0
              acc8 000f  ld   $0f
              acc9 00e4  ld   $e4
              acca 0065  ld   $65
              accb 00d0  ld   $d0
              accc 000b  ld   $0b
              accd 0048  ld   $48
              acce 0018  ld   $18
              accf 0065  ld   $65
              acd0 0065  ld   $65
              acd1 0085  ld   $85
              acd2 0065  ld   $65
              acd3 0090  ld   $90
              acd4 0002  ld   $02
              acd5 00e6  ld   $e6
              acd6 0066  ld   $66
              acd7 0068  ld   $68
              acd8 0086  ld   $86
              acd9 0054  ld   $54
              acda 0084  ld   $84
              acdb 0055  ld   $55
              acdc 0060  ld   $60
              acdd 00c4  ld   $c4
              acde 004a  ld   $4a
              acdf 00d0  ld   $d0
              ace0 000c  ld   $0c
              ace1 00c5  ld   $c5
              ace2 0049  ld   $49
              ace3 00d0  ld   $d0
              ace4 0008  ld   $08
              ace5 0085  ld   $85
              ace6 0048  ld   $48
              ace7 00e9  ld   $e9
              ace8 0003  ld   $03
              ace9 0085  ld   $85
              acea 0049  ld   $49
              aceb 00a0  ld   $a0
              acec 0000  ld   $00
              aced 0060  ld   $60
              acee 0020  ld   $20
              acef 00dd  ld   $dd
              acf0 0017  ld   $17
              acf1 008a  ld   $8a
              acf2 0048  ld   $48
              acf3 00a9  ld   $a9
              acf4 0001  ld   $01
              acf5 0020  ld   $20
              acf6 00b9  ld   $b9
              acf7 0014  ld   $14
              acf8 0068  ld   $68
              acf9 00a0  ld   $a0
              acfa 0000  ld   $00
              acfb fe00  bra  ac          ;+-----------------------------------+
              acfc fcfd  bra  $acfd       ;|                                   |
              acfd 1418  ld   $18,y       ;| Trampoline for page $ac00 lookups |
              acfe e006  jmp  y,$06       ;|                                   |
              acff c218  st   [$18]       ;+-----------------------------------+
              ad00 0091  ld   $91
              ad01 0095  ld   $95
              ad02 0068  ld   $68
              ad03 0068  ld   $68
              ad04 004c  ld   $4c
              ad05 0006  ld   $06
              ad06 0015  ld   $15
              ad07 0020  ld   $20
              ad08 009d  ld   $9d
              ad09 0017  ld   $17
              ad0a 00d1  ld   $d1
              ad0b 0083  ld   $83
              ad0c 0098  ld   $98
              ad0d 0090  ld   $90
              ad0e 0004  ld   $04
              ad0f 00b1  ld   $b1
              ad10 0083  ld   $83
              ad11 00aa  ld   $aa
              ad12 0098  ld   $98
              ad13 0048  ld   $48
              ad14 008a  ld   $8a
              ad15 0048  ld   $48
              ad16 0020  ld   $20
              ad17 00b9  ld   $b9
              ad18 0014  ld   $14
              ad19 00a5  ld   $a5
              ad1a 0083  ld   $83
              ad1b 00a4  ld   $a4
              ad1c 0084  ld   $84
              ad1d 0020  ld   $20
              ad1e 00e6  ld   $e6
              ad1f 0016  ld   $16
              ad20 0068  ld   $68
              ad21 00a8  ld   $a8
              ad22 0068  ld   $68
              ad23 0018  ld   $18
              ad24 0065  ld   $65
              ad25 0054  ld   $54
              ad26 0085  ld   $85
              ad27 0054  ld   $54
              ad28 0090  ld   $90
              ad29 0002  ld   $02
              ad2a 00e6  ld   $e6
              ad2b 0055  ld   $55
              ad2c 0098  ld   $98
              ad2d 0020  ld   $20
              ad2e 00c8  ld   $c8
              ad2f 0016  ld   $16
              ad30 004c  ld   $4c
              ad31 0006  ld   $06
              ad32 0015  ld   $15
              ad33 0020  ld   $20
              ad34 009d  ld   $9d
              ad35 0017  ld   $17
              ad36 0018  ld   $18
              ad37 00f1  ld   $f1
              ad38 0083  ld   $83
              ad39 0049  ld   $49
              ad3a 00ff  ld   $ff
              ad3b 004c  ld   $4c
              ad3c 0042  ld   $42
              ad3d 0017  ld   $17
              ad3e 00a9  ld   $a9
              ad3f 00ff  ld   $ff
              ad40 0085  ld   $85
              ad41 0098  ld   $98
              ad42 0020  ld   $20
              ad43 0071  ld   $71
              ad44 0022  ld   $22
              ad45 00c9  ld   $c9
              ad46 0029  ld   $29
              ad47 00f0  ld   $f0
              ad48 0006  ld   $06
              ad49 0020  ld   $20
              ad4a 0063  ld   $63
              ad4b 000f  ld   $0f
              ad4c 0020  ld   $20
              ad4d 00da  ld   $da
              ad4e 0017  ld   $17
              ad4f 0020  ld   $20
              ad50 009d  ld   $9d
              ad51 0017  ld   $17
              ad52 00f0  ld   $f0
              ad53 004b  ld   $4b
              ad54 00ca  ld   $ca
              ad55 008a  ld   $8a
              ad56 0048  ld   $48
              ad57 0018  ld   $18
              ad58 00a2  ld   $a2
              ad59 0000  ld   $00
              ad5a 00f1  ld   $f1
              ad5b 0083  ld   $83
              ad5c 00b0  ld   $b0
              ad5d 00b6  ld   $b6
              ad5e 0049  ld   $49
              ad5f 00ff  ld   $ff
              ad60 00c5  ld   $c5
              ad61 0098  ld   $98
              ad62 0090  ld   $90
              ad63 00b1  ld   $b1
              ad64 00a5  ld   $a5
              ad65 0098  ld   $98
              ad66 00b0  ld   $b0
              ad67 00ad  ld   $ad
              ad68 0020  ld   $20
              ad69 005d  ld   $5d
              ad6a 000f  ld   $0f
              ad6b 0068  ld   $68
              ad6c 00a8  ld   $a8
              ad6d 0068  ld   $68
              ad6e 0085  ld   $85
              ad6f 0088  ld   $88
              ad70 0068  ld   $68
              ad71 0068  ld   $68
              ad72 0068  ld   $68
              ad73 00aa  ld   $aa
              ad74 0068  ld   $68
              ad75 0085  ld   $85
              ad76 0083  ld   $83
              ad77 0068  ld   $68
              ad78 0085  ld   $85
              ad79 0084  ld   $84
              ad7a 00a5  ld   $a5
              ad7b 0088  ld   $88
              ad7c 0048  ld   $48
              ad7d 0098  ld   $98
              ad7e 0048  ld   $48
              ad7f 00a0  ld   $a0
              ad80 0000  ld   $00
              ad81 008a  ld   $8a
              ad82 0060  ld   $60
              ad83 0020  ld   $20
              ad84 00be  ld   $be
              ad85 0017  ld   $17
              ad86 004c  ld   $4c
              ad87 00de  ld   $de
              ad88 0013  ld   $13
              ad89 0020  ld   $20
              ad8a 00df  ld   $df
              ad8b 0016  ld   $16
              ad8c 00a2  ld   $a2
              ad8d 0000  ld   $00
              ad8e 0086  ld   $86
              ad8f 003f  ld   $3f
              ad90 00a8  ld   $a8
              ad91 0060  ld   $60
              ad92 0020  ld   $20
              ad93 00be  ld   $be
              ad94 0017  ld   $17
              ad95 00f0  ld   $f0
              ad96 0008  ld   $08
              ad97 00a0  ld   $a0
              ad98 0000  ld   $00
              ad99 00b1  ld   $b1
              ad9a 0054  ld   $54
              ad9b 00a8  ld   $a8
              ad9c 004c  ld   $4c
              ad9d 00de  ld   $de
              ad9e 0013  ld   $13
              ad9f 004c  ld   $4c
              ada0 0082  ld   $82
              ada1 0012  ld   $12
              ada2 0020  ld   $20
              ada3 006b  ld   $6b
              ada4 0022  ld   $22
              ada5 0020  ld   $20
              ada6 00f6  ld   $f6
              ada7 000d  ld   $0d
              ada8 0020  ld   $20
              ada9 00f6  ld   $f6
              adaa 0011  ld   $11
              adab 00a6  ld   $a6
              adac 0097  ld   $97
              adad 00d0  ld   $d0
              adae 00f0  ld   $f0
              adaf 00a6  ld   $a6
              adb0 0098  ld   $98
              adb1 004c  ld   $4c
              adb2 0071  ld   $71
              adb3 0022  ld   $22
              adb4 0020  ld   $20
              adb5 00be  ld   $be
              adb6 0017  ld   $17
              adb7 00d0  ld   $d0
              adb8 0003  ld   $03
              adb9 004c  ld   $4c
              adba 006f  ld   $6f
              adbb 0019  ld   $19
              adbc 00a6  ld   $a6
              adbd 00a6  ld   $a6
              adbe 00a4  ld   $a4
              adbf 00a7  ld   $a7
              adc0 0086  ld   $86
              adc1 00a4  ld   $a4
              adc2 0084  ld   $84
              adc3 00a5  ld   $a5
              adc4 00a6  ld   $a6
              adc5 0054  ld   $54
              adc6 0086  ld   $86
              adc7 00a6  ld   $a6
              adc8 0018  ld   $18
              adc9 0065  ld   $65
              adca 0054  ld   $54
              adcb 0018  ld   $18
              adcc 0000  ld   $00
              adcd 0000  ld   $00
              adce 0085  ld   $85
              adcf 0056  ld   $56
              add0 00a6  ld   $a6
              add1 0055  ld   $55
              add2 0086  ld   $86
              add3 00a7  ld   $a7
              add4 0090  ld   $90
              add5 0001  ld   $01
              add6 00e8  ld   $e8
              add7 0086  ld   $86
              add8 0057  ld   $57
              add9 00a0  ld   $a0
              adda 0000  ld   $00
              addb 00b1  ld   $b1
              addc 0056  ld   $56
              addd 0048  ld   $48
              adde 00a9  ld   $a9
              addf 0000  ld   $00
              ade0 0091  ld   $91
              ade1 0056  ld   $56
              ade2 0020  ld   $20
              ade3 0071  ld   $71
              ade4 0022  ld   $22
              ade5 0020  ld   $20
              ade6 006b  ld   $6b
              ade7 001d  ld   $1d
              ade8 0068  ld   $68
              ade9 00a0  ld   $a0
              adea 0000  ld   $00
              adeb 0091  ld   $91
              adec 0056  ld   $56
              aded 00a6  ld   $a6
              adee 00a4  ld   $a4
              adef 00a4  ld   $a4
              adf0 00a5  ld   $a5
              adf1 0086  ld   $86
              adf2 00a6  ld   $a6
              adf3 0084  ld   $84
              adf4 00a7  ld   $a7
              adf5 0060  ld   $60
              adf6 0020  ld   $20
              adf7 00f6  ld   $f6
              adf8 000d  ld   $0d
              adf9 0020  ld   $20
              adfa 0034  ld   $34
              adfb fe00  bra  ac          ;+-----------------------------------+
              adfc fcfd  bra  $adfd       ;|                                   |
              adfd 1418  ld   $18,y       ;| Trampoline for page $ad00 lookups |
              adfe e006  jmp  y,$06       ;|                                   |
              adff c218  st   [$18]       ;+-----------------------------------+
              ae00 0018  ld   $18
              ae01 0020  ld   $20
              ae02 0063  ld   $63
              ae03 000f  ld   $0f
              ae04 004c  ld   $4c
              ae05 00da  ld   $da
              ae06 0017  ld   $17
              ae07 00a5  ld   $a5
              ae08 0099  ld   $99
              ae09 0030  ld   $30
              ae0a 009c  ld   $9c
              ae0b 00a5  ld   $a5
              ae0c 0094  ld   $94
              ae0d 00c9  ld   $c9
              ae0e 0091  ld   $91
              ae0f 00b0  ld   $b0
              ae10 0096  ld   $96
              ae11 0020  ld   $20
              ae12 0013  ld   $13
              ae13 001d  ld   $1d
              ae14 00a5  ld   $a5
              ae15 0097  ld   $97
              ae16 00a4  ld   $a4
              ae17 0098  ld   $98
              ae18 0084  ld   $84
              ae19 0046  ld   $46
              ae1a 0085  ld   $85
              ae1b 0047  ld   $47
              ae1c 0060  ld   $60
              ae1d 00a5  ld   $a5
              ae1e 0047  ld   $47
              ae1f 0048  ld   $48
              ae20 00a5  ld   $a5
              ae21 0046  ld   $46
              ae22 0048  ld   $48
              ae23 0020  ld   $20
              ae24 0034  ld   $34
              ae25 0018  ld   $18
              ae26 00a0  ld   $a0
              ae27 0000  ld   $00
              ae28 00ea  ld   $ea
              ae29 00ea  ld   $ea
              ae2a 00ea  ld   $ea
              * 8 times
              ae30 00b1  ld   $b1
              ae31 0046  ld   $46
              ae32 00a8  ld   $a8
              ae33 0068  ld   $68
              ae34 0085  ld   $85
              ae35 0046  ld   $46
              ae36 0068  ld   $68
              ae37 0085  ld   $85
              ae38 0047  ld   $47
              ae39 004c  ld   $4c
              ae3a 00de  ld   $de
              ae3b 0013  ld   $13
              ae3c 0020  ld   $20
              ae3d 0028  ld   $28
              ae3e 0018  ld   $18
              ae3f 008a  ld   $8a
              ae40 00a0  ld   $a0
              ae41 0000  ld   $00
              ae42 0091  ld   $91
              ae43 0046  ld   $46
              ae44 0060  ld   $60
              ae45 0020  ld   $20
              ae46 0028  ld   $28
              ae47 0018  ld   $18
              ae48 0086  ld   $86
              ae49 007b  ld   $7b
              ae4a 00a2  ld   $a2
              ae4b 0000  ld   $00
              ae4c 0020  ld   $20
              ae4d 0071  ld   $71
              ae4e 0022  ld   $22
              ae4f 00f0  ld   $f0
              ae50 0029  ld   $29
              ae51 0020  ld   $20
              ae52 002e  ld   $2e
              ae53 0018  ld   $18
              ae54 0086  ld   $86
              ae55 007c  ld   $7c
              ae56 00a0  ld   $a0
              ae57 0000  ld   $00
              ae58 00b1  ld   $b1
              ae59 0046  ld   $46
              ae5a 0045  ld   $45
              ae5b 007c  ld   $7c
              ae5c 0025  ld   $25
              ae5d 007b  ld   $7b
              ae5e 00f0  ld   $f0
              ae5f 00f8  ld   $f8
              ae60 0060  ld   $60
              ae61 00a9  ld   $a9
              ae62 0089  ld   $89
              ae63 00a0  ld   $a0
              ae64 001f  ld   $1f
              ae65 004c  ld   $4c
              ae66 00df  ld   $df
              ae67 0018  ld   $18
              ae68 0020  ld   $20
              ae69 0004  ld   $04
              ae6a 001b  ld   $1b
              ae6b 00a5  ld   $a5
              ae6c 0099  ld   $99
              ae6d 0049  ld   $49
              ae6e 00ff  ld   $ff
              ae6f 0085  ld   $85
              ae70 0099  ld   $99
              ae71 0045  ld   $45
              ae72 00a1  ld   $a1
              ae73 0085  ld   $85
              ae74 00a2  ld   $a2
              ae75 00a5  ld   $a5
              ae76 0094  ld   $94
              ae77 004c  ld   $4c
              ae78 00e2  ld   $e2
              ae79 0018  ld   $18
              ae7a 00a5  ld   $a5
              ae7b 0046  ld   $46
              ae7c 0049  ld   $49
              ae7d 00e8  ld   $e8
              ae7e 00d0  ld   $d0
              ae7f 0008  ld   $08
              ae80 00a2  ld   $a2
              ae81 0014  ld   $14
              ae82 0045  ld   $45
              ae83 0047  ld   $47
              ae84 0049  ld   $49
              ae85 001c  ld   $1c
              ae86 00f0  ld   $f0
              ae87 000e  ld   $0e
              ae88 00a5  ld   $a5
              ae89 0046  ld   $46
              ae8a 00c9  ld   $c9
              ae8b 0066  ld   $66
              ae8c 00d0  ld   $d0
              ae8d 00c6  ld   $c6
              ae8e 00a5  ld   $a5
              ae8f 0047  ld   $47
              ae90 00e9  ld   $e9
              ae91 0019  ld   $19
              ae92 00d0  ld   $d0
              ae93 00c0  ld   $c0
              ae94 00a2  ld   $a2
              ae95 000a  ld   $0a
              ae96 00bd  ld   $bd
              ae97 00e9  ld   $e9
              ae98 0021  ld   $21
              ae99 0029  ld   $29
              ae9a 003f  ld   $3f
              ae9b 0049  ld   $49
              ae9c 0020  ld   $20
              ae9d 0018  ld   $18
              ae9e 0069  ld   $69
              ae9f 0020  ld   $20
              aea0 0020  ld   $20
              aea1 0000  ld   $00
              aea2 002b  ld   $2b
              aea3 00ca  ld   $ca
              aea4 0049  ld   $49
              aea5 0021  ld   $21
              aea6 00d0  ld   $d0
              aea7 00ee  ld   $ee
              aea8 00c6  ld   $c6
              aea9 007b  ld   $7b
              aeaa 00d0  ld   $d0
              aeab 00e8  ld   $e8
              aeac 0060  ld   $60
              aead 0020  ld   $20
              aeae 0011  ld   $11
              aeaf 001a  ld   $1a
              aeb0 0090  ld   $90
              aeb1 003c  ld   $3c
              aeb2 0020  ld   $20
              aeb3 0004  ld   $04
              aeb4 001b  ld   $1b
              aeb5 00d0  ld   $d0
              aeb6 0003  ld   $03
              aeb7 004c  ld   $4c
              aeb8 0074  ld   $74
              aeb9 001c  ld   $1c
              aeba 00a6  ld   $a6
              aebb 00a3  ld   $a3
              aebc 0086  ld   $86
              aebd 0089  ld   $89
              aebe 00a2  ld   $a2
              aebf 009c  ld   $9c
              aec0 00a5  ld   $a5
              aec1 009c  ld   $9c
              aec2 00a8  ld   $a8
              aec3 00f0  ld   $f0
              aec4 009b  ld   $9b
              aec5 0038  ld   $38
              aec6 00e5  ld   $e5
              aec7 0094  ld   $94
              aec8 00f0  ld   $f0
              aec9 0024  ld   $24
              aeca 0090  ld   $90
              aecb 0012  ld   $12
              aecc 0084  ld   $84
              aecd 0094  ld   $94
              aece 00a4  ld   $a4
              aecf 00a1  ld   $a1
              aed0 0084  ld   $84
              aed1 0099  ld   $99
              aed2 0049  ld   $49
              aed3 0019  ld   $19
              aed4 0000  ld   $00
              aed5 0000  ld   $00
              aed6 00ff  ld   $ff
              aed7 0069  ld   $69
              aed8 0000  ld   $00
              aed9 00a0  ld   $a0
              aeda 0000  ld   $00
              aedb 0084  ld   $84
              aedc 0089  ld   $89
              aedd 00a2  ld   $a2
              aede 0094  ld   $94
              aedf 00d0  ld   $d0
              aee0 0004  ld   $04
              aee1 00a0  ld   $a0
              aee2 0000  ld   $00
              aee3 0084  ld   $84
              aee4 00a3  ld   $a3
              aee5 00c9  ld   $c9
              aee6 00f9  ld   $f9
              aee7 0030  ld   $30
              aee8 00c7  ld   $c7
              aee9 00a8  ld   $a8
              aeea 00a5  ld   $a5
              aeeb 00a3  ld   $a3
              aeec 0056  ld   $56
              aeed 0001  ld   $01
              aeee 0020  ld   $20
              aeef 0028  ld   $28
              aef0 001a  ld   $1a
              aef1 0024  ld   $24
              aef2 00a2  ld   $a2
              aef3 0010  ld   $10
              aef4 0057  ld   $57
              aef5 00a0  ld   $a0
              aef6 0094  ld   $94
              aef7 00e0  ld   $e0
              aef8 009c  ld   $9c
              aef9 00f0  ld   $f0
              aefa 0002  ld   $02
              aefb fe00  bra  ac          ;+-----------------------------------+
              aefc fcfd  bra  $aefd       ;|                                   |
              aefd 1418  ld   $18,y       ;| Trampoline for page $ae00 lookups |
              aefe e006  jmp  y,$06       ;|                                   |
              aeff c218  st   [$18]       ;+-----------------------------------+
              af00 00a0  ld   $a0
              af01 009c  ld   $9c
              af02 0038  ld   $38
              af03 0049  ld   $49
              af04 00ff  ld   $ff
              af05 0065  ld   $65
              af06 0089  ld   $89
              af07 0085  ld   $85
              af08 00a3  ld   $a3
              af09 00b9  ld   $b9
              af0a 0004  ld   $04
              af0b 0000  ld   $00
              af0c 00f5  ld   $f5
              af0d 0004  ld   $04
              af0e 0085  ld   $85
              af0f 0098  ld   $98
              af10 00b9  ld   $b9
              af11 0003  ld   $03
              af12 0000  ld   $00
              af13 00f5  ld   $f5
              af14 0003  ld   $03
              af15 0085  ld   $85
              af16 0097  ld   $97
              af17 00b9  ld   $b9
              af18 0002  ld   $02
              af19 0000  ld   $00
              af1a 00f5  ld   $f5
              af1b 0002  ld   $02
              af1c 0085  ld   $85
              af1d 0096  ld   $96
              af1e 00b9  ld   $b9
              af1f 0001  ld   $01
              af20 0000  ld   $00
              af21 00f5  ld   $f5
              af22 0001  ld   $01
              af23 0085  ld   $85
              af24 0095  ld   $95
              af25 00b0  ld   $b0
              af26 0003  ld   $03
              af27 0020  ld   $20
              af28 00bf  ld   $bf
              af29 0019  ld   $19
              af2a 00a0  ld   $a0
              af2b 0000  ld   $00
              af2c 0098  ld   $98
              af2d 0018  ld   $18
              af2e 00a6  ld   $a6
              af2f 0095  ld   $95
              af30 00d0  ld   $d0
              af31 004a  ld   $4a
              af32 00a6  ld   $a6
              af33 0096  ld   $96
              af34 0086  ld   $86
              af35 0095  ld   $95
              af36 00a6  ld   $a6
              af37 0097  ld   $97
              af38 0086  ld   $86
              af39 0096  ld   $96
              af3a 00a6  ld   $a6
              af3b 0098  ld   $98
              af3c 0086  ld   $86
              af3d 0097  ld   $97
              af3e 00a6  ld   $a6
              af3f 00a3  ld   $a3
              af40 0086  ld   $86
              af41 0098  ld   $98
              af42 0084  ld   $84
              af43 00a3  ld   $a3
              af44 0069  ld   $69
              af45 0008  ld   $08
              af46 00c9  ld   $c9
              af47 0020  ld   $20
              af48 00d0  ld   $d0
              af49 00e4  ld   $e4
              af4a 00a9  ld   $a9
              af4b 0000  ld   $00
              af4c 0085  ld   $85
              af4d 0094  ld   $94
              af4e 0085  ld   $85
              af4f 0099  ld   $99
              af50 0060  ld   $60
              af51 0065  ld   $65
              af52 0089  ld   $89
              af53 0085  ld   $85
              af54 00a3  ld   $a3
              af55 00a5  ld   $a5
              af56 0098  ld   $98
              af57 0065  ld   $65
              af58 00a0  ld   $a0
              af59 0085  ld   $85
              af5a 0098  ld   $98
              af5b 00a5  ld   $a5
              af5c 0097  ld   $97
              af5d 0065  ld   $65
              af5e 009f  ld   $9f
              af5f 0085  ld   $85
              af60 0097  ld   $97
              af61 00a5  ld   $a5
              af62 0096  ld   $96
              af63 0065  ld   $65
              af64 009e  ld   $9e
              af65 0085  ld   $85
              af66 0096  ld   $96
              af67 00a5  ld   $a5
              af68 0095  ld   $95
              af69 0065  ld   $65
              af6a 009d  ld   $9d
              af6b 0085  ld   $85
              af6c 0095  ld   $95
              af6d 004c  ld   $4c
              af6e 00ae  ld   $ae
              af6f 0019  ld   $19
              af70 0069  ld   $69
              af71 0001  ld   $01
              af72 0006  ld   $06
              af73 00a3  ld   $a3
              af74 0026  ld   $26
              af75 0098  ld   $98
              af76 0026  ld   $26
              af77 0097  ld   $97
              af78 0026  ld   $26
              af79 0096  ld   $96
              af7a 0026  ld   $26
              af7b 0095  ld   $95
              af7c 0010  ld   $10
              af7d 00f2  ld   $f2
              af7e 0038  ld   $38
              af7f 00e5  ld   $e5
              af80 0094  ld   $94
              af81 00b0  ld   $b0
              af82 00c7  ld   $c7
              af83 0049  ld   $49
              af84 00ff  ld   $ff
              af85 0069  ld   $69
              af86 0001  ld   $01
              af87 0085  ld   $85
              af88 0094  ld   $94
              af89 0090  ld   $90
              af8a 000e  ld   $0e
              af8b 00e6  ld   $e6
              af8c 0094  ld   $94
              af8d 00f0  ld   $f0
              af8e 0042  ld   $42
              af8f 0066  ld   $66
              af90 0095  ld   $95
              af91 0066  ld   $66
              af92 0096  ld   $96
              af93 0066  ld   $66
              af94 0097  ld   $97
              af95 0066  ld   $66
              af96 0098  ld   $98
              af97 0066  ld   $66
              af98 00a3  ld   $a3
              af99 0060  ld   $60
              af9a 00a5  ld   $a5
              af9b 0099  ld   $99
              af9c 0049  ld   $49
              af9d 00ff  ld   $ff
              af9e 0085  ld   $85
              af9f 0099  ld   $99
              afa0 00a5  ld   $a5
              afa1 0095  ld   $95
              afa2 0049  ld   $49
              afa3 00ff  ld   $ff
              afa4 0085  ld   $85
              afa5 0095  ld   $95
              afa6 00a5  ld   $a5
              afa7 0096  ld   $96
              afa8 0049  ld   $49
              afa9 00ff  ld   $ff
              afaa 0085  ld   $85
              afab 0096  ld   $96
              afac 00a5  ld   $a5
              afad 0097  ld   $97
              afae 0049  ld   $49
              afaf 00ff  ld   $ff
              afb0 0085  ld   $85
              afb1 0097  ld   $97
              afb2 00a5  ld   $a5
              afb3 0098  ld   $98
              afb4 0049  ld   $49
              afb5 00ff  ld   $ff
              afb6 0085  ld   $85
              afb7 0098  ld   $98
              afb8 00a5  ld   $a5
              afb9 00a3  ld   $a3
              afba 0049  ld   $49
              afbb 00ff  ld   $ff
              afbc 0085  ld   $85
              afbd 00a3  ld   $a3
              afbe 00e6  ld   $e6
              afbf 00a3  ld   $a3
              afc0 00d0  ld   $d0
              afc1 000e  ld   $0e
              afc2 00e6  ld   $e6
              afc3 0098  ld   $98
              afc4 00d0  ld   $d0
              afc5 000a  ld   $0a
              afc6 00e6  ld   $e6
              afc7 0097  ld   $97
              afc8 00d0  ld   $d0
              afc9 0006  ld   $06
              afca 00e6  ld   $e6
              afcb 0096  ld   $96
              afcc 00d0  ld   $d0
              afcd 0002  ld   $02
              afce 00e6  ld   $e6
              afcf 0095  ld   $95
              afd0 0060  ld   $60
              afd1 00a2  ld   $a2
              afd2 0045  ld   $45
              afd3 004c  ld   $4c
              afd4 004a  ld   $4a
              afd5 0005  ld   $05
              afd6 00a2  ld   $a2
              afd7 0057  ld   $57
              afd8 00b4  ld   $b4
              afd9 0004  ld   $04
              afda 0084  ld   $84
              afdb 001a  ld   $1a
              afdc 0000  ld   $00
              afdd 0000  ld   $00
              afde 00a3  ld   $a3
              afdf 00b4  ld   $b4
              afe0 0003  ld   $03
              afe1 0094  ld   $94
              afe2 0004  ld   $04
              afe3 00b4  ld   $b4
              afe4 0002  ld   $02
              afe5 0094  ld   $94
              afe6 0003  ld   $03
              afe7 00b4  ld   $b4
              afe8 0001  ld   $01
              afe9 0094  ld   $94
              afea 0002  ld   $02
              afeb 00a4  ld   $a4
              afec 009b  ld   $9b
              afed 0094  ld   $94
              afee 0001  ld   $01
              afef 0069  ld   $69
              aff0 0008  ld   $08
              aff1 0030  ld   $30
              aff2 00e8  ld   $e8
              aff3 00f0  ld   $f0
              aff4 00e6  ld   $e6
              aff5 00e9  ld   $e9
              aff6 0008  ld   $08
              aff7 00a8  ld   $a8
              aff8 00a5  ld   $a5
              aff9 00a3  ld   $a3
              affa 00b0  ld   $b0
              affb fe00  bra  ac          ;+-----------------------------------+
              affc fcfd  bra  $affd       ;|                                   |
              affd 1418  ld   $18,y       ;| Trampoline for page $af00 lookups |
              affe e006  jmp  y,$06       ;|                                   |
              afff c218  st   [$18]       ;+-----------------------------------+
              b000 0014  ld   $14
              b001 0016  ld   $16
              b002 0001  ld   $01
              b003 0090  ld   $90
              b004 0002  ld   $02
              b005 00f6  ld   $f6
              b006 0001  ld   $01
              b007 0076  ld   $76
              b008 0001  ld   $01
              b009 0076  ld   $76
              b00a 0001  ld   $01
              b00b 0076  ld   $76
              b00c 0002  ld   $02
              b00d 0076  ld   $76
              b00e 0003  ld   $03
              b00f 0076  ld   $76
              b010 0004  ld   $04
              b011 006a  ld   $6a
              b012 00c8  ld   $c8
              b013 00d0  ld   $d0
              b014 00ec  ld   $ec
              b015 0018  ld   $18
              b016 0060  ld   $60
              b017 0081  ld   $81
              b018 0000  ld   $00
              b019 0000  ld   $00
              b01a 0000  ld   $00
              b01b 0000  ld   $00
              b01c 0003  ld   $03
              b01d 007f  ld   $7f
              b01e 005e  ld   $5e
              b01f 0056  ld   $56
              b020 00cb  ld   $cb
              b021 0079  ld   $79
              b022 0080  ld   $80
              b023 0013  ld   $13
              b024 009b  ld   $9b
              b025 000b  ld   $0b
              b026 0064  ld   $64
              b027 0080  ld   $80
              b028 0076  ld   $76
              b029 0038  ld   $38
              b02a 0093  ld   $93
              b02b 0016  ld   $16
              b02c 0082  ld   $82
              b02d 0038  ld   $38
              b02e 00aa  ld   $aa
              b02f 003b  ld   $3b
              b030 0020  ld   $20
              b031 0080  ld   $80
              b032 0035  ld   $35
              b033 0004  ld   $04
              b034 00f3  ld   $f3
              b035 0034  ld   $34
              b036 0081  ld   $81
              b037 0035  ld   $35
              b038 0004  ld   $04
              b039 00f3  ld   $f3
              b03a 0034  ld   $34
              b03b 0080  ld   $80
              b03c 0080  ld   $80
              b03d 0000  ld   $00
              b03e 0000  ld   $00
              b03f 0000  ld   $00
              b040 0080  ld   $80
              b041 0031  ld   $31
              b042 0072  ld   $72
              b043 0017  ld   $17
              b044 00f8  ld   $f8
              b045 0020  ld   $20
              b046 00a3  ld   $a3
              b047 001c  ld   $1c
              b048 00f0  ld   $f0
              b049 0002  ld   $02
              b04a 0010  ld   $10
              b04b 0003  ld   $03
              b04c 004c  ld   $4c
              b04d 0082  ld   $82
              b04e 0012  ld   $12
              b04f 00a5  ld   $a5
              b050 0094  ld   $94
              b051 00e9  ld   $e9
              b052 007f  ld   $7f
              b053 0048  ld   $48
              b054 00a9  ld   $a9
              b055 0080  ld   $80
              b056 0085  ld   $85
              b057 0094  ld   $94
              b058 00a9  ld   $a9
              b059 004e  ld   $4e
              b05a 00a0  ld   $a0
              b05b 001a  ld   $1a
              b05c 0020  ld   $20
              b05d 00df  ld   $df
              b05e 0018  ld   $18
              b05f 00a9  ld   $a9
              b060 0053  ld   $53
              b061 00a0  ld   $a0
              b062 001a  ld   $1a
              b063 0020  ld   $20
              b064 0087  ld   $87
              b065 001b  ld   $1b
              b066 00a9  ld   $a9
              b067 0034  ld   $34
              b068 00a0  ld   $a0
              b069 001a  ld   $1a
              b06a 0020  ld   $20
              b06b 0095  ld   $95
              b06c 0018  ld   $18
              b06d 00a9  ld   $a9
              b06e 0039  ld   $39
              b06f 00a0  ld   $a0
              b070 001a  ld   $1a
              b071 0020  ld   $20
              b072 0099  ld   $99
              b073 0020  ld   $20
              b074 00a9  ld   $a9
              b075 0058  ld   $58
              b076 00a0  ld   $a0
              b077 001a  ld   $1a
              b078 0020  ld   $20
              b079 00df  ld   $df
              b07a 0018  ld   $18
              b07b 0068  ld   $68
              b07c 0020  ld   $20
              b07d 00f6  ld   $f6
              b07e 001d  ld   $1d
              b07f 00a9  ld   $a9
              b080 005d  ld   $5d
              b081 00a0  ld   $a0
              b082 001a  ld   $1a
              b083 0020  ld   $20
              b084 0004  ld   $04
              b085 001b  ld   $1b
              b086 00d0  ld   $d0
              b087 0003  ld   $03
              b088 004c  ld   $4c
              b089 0003  ld   $03
              b08a 001b  ld   $1b
              b08b 0020  ld   $20
              b08c 002f  ld   $2f
              b08d 001b  ld   $1b
              b08e 00a9  ld   $a9
              b08f 0000  ld   $00
              b090 0085  ld   $85
              b091 0058  ld   $58
              b092 0085  ld   $85
              b093 0059  ld   $59
              b094 0085  ld   $85
              b095 005a  ld   $5a
              b096 0085  ld   $85
              b097 005b  ld   $5b
              b098 00a5  ld   $a5
              b099 00a3  ld   $a3
              b09a 0020  ld   $20
              b09b 00d1  ld   $d1
              b09c 001a  ld   $1a
              b09d 00a5  ld   $a5
              b09e 0098  ld   $98
              b09f 0020  ld   $20
              b0a0 00d1  ld   $d1
              b0a1 001a  ld   $1a
              b0a2 00a5  ld   $a5
              b0a3 0097  ld   $97
              b0a4 0020  ld   $20
              b0a5 00d1  ld   $d1
              b0a6 001a  ld   $1a
              b0a7 00a5  ld   $a5
              b0a8 0096  ld   $96
              b0a9 0020  ld   $20
              b0aa 00d1  ld   $d1
              b0ab 001a  ld   $1a
              b0ac 00a5  ld   $a5
              b0ad 0095  ld   $95
              b0ae 0020  ld   $20
              b0af 00d6  ld   $d6
              b0b0 001a  ld   $1a
              b0b1 004c  ld   $4c
              b0b2 0007  ld   $07
              b0b3 001c  ld   $1c
              b0b4 00d0  ld   $d0
              b0b5 0003  ld   $03
              b0b6 004c  ld   $4c
              b0b7 00fb  ld   $fb
              b0b8 0019  ld   $19
              b0b9 004a  ld   $4a
              b0ba 0009  ld   $09
              b0bb 0080  ld   $80
              b0bc 00a8  ld   $a8
              b0bd 0090  ld   $90
              b0be 0019  ld   $19
              b0bf 0018  ld   $18
              b0c0 00a5  ld   $a5
              b0c1 005b  ld   $5b
              b0c2 0065  ld   $65
              b0c3 00a0  ld   $a0
              b0c4 0085  ld   $85
              b0c5 005b  ld   $5b
              b0c6 00a5  ld   $a5
              b0c7 005a  ld   $5a
              b0c8 0065  ld   $65
              b0c9 009f  ld   $9f
              b0ca 0085  ld   $85
              b0cb 005a  ld   $5a
              b0cc 00a5  ld   $a5
              b0cd 0059  ld   $59
              b0ce 0065  ld   $65
              b0cf 009e  ld   $9e
              b0d0 0085  ld   $85
              b0d1 0059  ld   $59
              b0d2 00a5  ld   $a5
              b0d3 0058  ld   $58
              b0d4 0065  ld   $65
              b0d5 009d  ld   $9d
              b0d6 0085  ld   $85
              b0d7 0058  ld   $58
              b0d8 0066  ld   $66
              b0d9 0058  ld   $58
              b0da 0066  ld   $66
              b0db 0059  ld   $59
              b0dc 0066  ld   $66
              b0dd 005a  ld   $5a
              b0de 0066  ld   $66
              b0df 005b  ld   $5b
              b0e0 0066  ld   $66
              b0e1 00a3  ld   $a3
              b0e2 0098  ld   $98
              b0e3 001b  ld   $1b
              b0e4 0000  ld   $00
              b0e5 0000  ld   $00
              b0e6 004a  ld   $4a
              b0e7 00d0  ld   $d0
              b0e8 00d6  ld   $d6
              b0e9 0060  ld   $60
              b0ea 0085  ld   $85
              b0eb 0054  ld   $54
              b0ec 0084  ld   $84
              b0ed 0055  ld   $55
              b0ee 00a0  ld   $a0
              b0ef 0004  ld   $04
              b0f0 00b1  ld   $b1
              b0f1 0054  ld   $54
              b0f2 0085  ld   $85
              b0f3 00a0  ld   $a0
              b0f4 0088  ld   $88
              b0f5 00b1  ld   $b1
              b0f6 0054  ld   $54
              b0f7 0085  ld   $85
              b0f8 009f  ld   $9f
              b0f9 0088  ld   $88
              b0fa 00b1  ld   $b1
              b0fb fe00  bra  ac          ;+-----------------------------------+
              b0fc fcfd  bra  $b0fd       ;|                                   |
              b0fd 1418  ld   $18,y       ;| Trampoline for page $b000 lookups |
              b0fe e006  jmp  y,$06       ;|                                   |
              b0ff c218  st   [$18]       ;+-----------------------------------+
              b100 0054  ld   $54
              b101 0085  ld   $85
              b102 009e  ld   $9e
              b103 0088  ld   $88
              b104 00b1  ld   $b1
              b105 0054  ld   $54
              b106 0085  ld   $85
              b107 00a1  ld   $a1
              b108 0045  ld   $45
              b109 0099  ld   $99
              b10a 0085  ld   $85
              b10b 00a2  ld   $a2
              b10c 00a5  ld   $a5
              b10d 00a1  ld   $a1
              b10e 0009  ld   $09
              b10f 0080  ld   $80
              b110 0085  ld   $85
              b111 009d  ld   $9d
              b112 0088  ld   $88
              b113 00b1  ld   $b1
              b114 0054  ld   $54
              b115 0085  ld   $85
              b116 009c  ld   $9c
              b117 00a5  ld   $a5
              b118 0094  ld   $94
              b119 0060  ld   $60
              b11a 00a5  ld   $a5
              b11b 009c  ld   $9c
              b11c 00f0  ld   $f0
              b11d 001f  ld   $1f
              b11e 0018  ld   $18
              b11f 0065  ld   $65
              b120 0094  ld   $94
              b121 0090  ld   $90
              b122 0004  ld   $04
              b123 0030  ld   $30
              b124 001d  ld   $1d
              b125 0018  ld   $18
              b126 002c  ld   $2c
              b127 0010  ld   $10
              b128 0014  ld   $14
              b129 0069  ld   $69
              b12a 0080  ld   $80
              b12b 0085  ld   $85
              b12c 0094  ld   $94
              b12d 00d0  ld   $d0
              b12e 0003  ld   $03
              b12f 004c  ld   $4c
              b130 0073  ld   $73
              b131 0019  ld   $19
              b132 00a5  ld   $a5
              b133 00a2  ld   $a2
              b134 0085  ld   $85
              b135 0099  ld   $99
              b136 0060  ld   $60
              b137 00a5  ld   $a5
              b138 0099  ld   $99
              b139 0049  ld   $49
              b13a 00ff  ld   $ff
              b13b 0030  ld   $30
              b13c 0005  ld   $05
              b13d 0068  ld   $68
              b13e 0068  ld   $68
              b13f 004c  ld   $4c
              b140 006f  ld   $6f
              b141 0019  ld   $19
              b142 004c  ld   $4c
              b143 00f6  ld   $f6
              b144 0019  ld   $19
              b145 0020  ld   $20
              b146 0084  ld   $84
              b147 001c  ld   $1c
              b148 00aa  ld   $aa
              b149 00f0  ld   $f0
              b14a 0010  ld   $10
              b14b 0018  ld   $18
              b14c 0069  ld   $69
              b14d 0002  ld   $02
              b14e 00b0  ld   $b0
              b14f 00f2  ld   $f2
              b150 00a2  ld   $a2
              b151 0000  ld   $00
              b152 0086  ld   $86
              b153 00a2  ld   $a2
              b154 0020  ld   $20
              b155 00ef  ld   $ef
              b156 0018  ld   $18
              b157 00e6  ld   $e6
              b158 0094  ld   $94
              b159 00f0  ld   $f0
              b15a 00e7  ld   $e7
              b15b 0060  ld   $60
              b15c 0084  ld   $84
              b15d 0020  ld   $20
              b15e 0000  ld   $00
              b15f 0000  ld   $00
              b160 0000  ld   $00
              b161 0020  ld   $20
              b162 0084  ld   $84
              b163 001c  ld   $1c
              b164 00a9  ld   $a9
              b165 0071  ld   $71
              b166 00a0  ld   $a0
              b167 001b  ld   $1b
              b168 00a2  ld   $a2
              b169 0000  ld   $00
              b16a 0086  ld   $86
              b16b 00a2  ld   $a2
              b16c 0020  ld   $20
              b16d 001a  ld   $1a
              b16e 001c  ld   $1c
              b16f 004c  ld   $4c
              b170 008a  ld   $8a
              b171 001b  ld   $1b
              b172 0020  ld   $20
              b173 0004  ld   $04
              b174 001b  ld   $1b
              b175 00f0  ld   $f0
              b176 0076  ld   $76
              b177 0020  ld   $20
              b178 0093  ld   $93
              b179 001c  ld   $1c
              b17a 00a9  ld   $a9
              b17b 0000  ld   $00
              b17c 0038  ld   $38
              b17d 00e5  ld   $e5
              b17e 0094  ld   $94
              b17f 0085  ld   $85
              b180 0094  ld   $94
              b181 0020  ld   $20
              b182 002f  ld   $2f
              b183 001b  ld   $1b
              b184 00e6  ld   $e6
              b185 0094  ld   $94
              b186 00f0  ld   $f0
              b187 00ba  ld   $ba
              b188 00a2  ld   $a2
              b189 00fc  ld   $fc
              b18a 00a9  ld   $a9
              b18b 0001  ld   $01
              b18c 00a4  ld   $a4
              b18d 009d  ld   $9d
              b18e 00c4  ld   $c4
              b18f 0095  ld   $95
              b190 00d0  ld   $d0
              b191 0010  ld   $10
              b192 00a4  ld   $a4
              b193 009e  ld   $9e
              b194 00c4  ld   $c4
              b195 0096  ld   $96
              b196 00d0  ld   $d0
              b197 000a  ld   $0a
              b198 00a4  ld   $a4
              b199 009f  ld   $9f
              b19a 00c4  ld   $c4
              b19b 0097  ld   $97
              b19c 00d0  ld   $d0
              b19d 0004  ld   $04
              b19e 00a4  ld   $a4
              b19f 00a0  ld   $a0
              b1a0 00c4  ld   $c4
              b1a1 0098  ld   $98
              b1a2 0008  ld   $08
              b1a3 002a  ld   $2a
              b1a4 0090  ld   $90
              b1a5 0009  ld   $09
              b1a6 00e8  ld   $e8
              b1a7 0095  ld   $95
              b1a8 005b  ld   $5b
              b1a9 00f0  ld   $f0
              b1aa 0032  ld   $32
              b1ab 0010  ld   $10
              b1ac 0034  ld   $34
              b1ad 00a9  ld   $a9
              b1ae 0001  ld   $01
              b1af 0028  ld   $28
              b1b0 00b0  ld   $b0
              b1b1 000e  ld   $0e
              b1b2 0006  ld   $06
              b1b3 00a0  ld   $a0
              b1b4 0026  ld   $26
              b1b5 009f  ld   $9f
              b1b6 0026  ld   $26
              b1b7 009e  ld   $9e
              b1b8 0026  ld   $26
              b1b9 009d  ld   $9d
              b1ba 00b0  ld   $b0
              b1bb 00e6  ld   $e6
              b1bc 0030  ld   $30
              b1bd 00ce  ld   $ce
              b1be 0010  ld   $10
              b1bf 00e2  ld   $e2
              b1c0 00a8  ld   $a8
              b1c1 00a5  ld   $a5
              b1c2 00a0  ld   $a0
              b1c3 00e5  ld   $e5
              b1c4 0098  ld   $98
              b1c5 0085  ld   $85
              b1c6 00a0  ld   $a0
              b1c7 00a5  ld   $a5
              b1c8 009f  ld   $9f
              b1c9 00e5  ld   $e5
              b1ca 0097  ld   $97
              b1cb 0085  ld   $85
              b1cc 009f  ld   $9f
              b1cd 00a5  ld   $a5
              b1ce 009e  ld   $9e
              b1cf 00e5  ld   $e5
              b1d0 0096  ld   $96
              b1d1 0085  ld   $85
              b1d2 009e  ld   $9e
              b1d3 00a5  ld   $a5
              b1d4 009d  ld   $9d
              b1d5 00e5  ld   $e5
              b1d6 0095  ld   $95
              b1d7 0085  ld   $85
              b1d8 009d  ld   $9d
              b1d9 0098  ld   $98
              b1da 004c  ld   $4c
              b1db 00c7  ld   $c7
              b1dc 001b  ld   $1b
              b1dd 00a9  ld   $a9
              b1de 0040  ld   $40
              b1df 00d0  ld   $d0
              b1e0 00ce  ld   $ce
              b1e1 000a  ld   $0a
              b1e2 000a  ld   $0a
              b1e3 000a  ld   $0a
              * 6 times
              b1e7 0085  ld   $85
              b1e8 00a3  ld   $a3
              b1e9 0028  ld   $28
              b1ea 004c  ld   $4c
              b1eb 001c  ld   $1c
              b1ec 0000  ld   $00
              b1ed 0000  ld   $00
              b1ee 0007  ld   $07
              b1ef 001c  ld   $1c
              b1f0 00a2  ld   $a2
              b1f1 0085  ld   $85
              b1f2 004c  ld   $4c
              b1f3 004a  ld   $4a
              b1f4 0005  ld   $05
              b1f5 00a5  ld   $a5
              b1f6 0058  ld   $58
              b1f7 0085  ld   $85
              b1f8 0095  ld   $95
              b1f9 00a5  ld   $a5
              b1fa 0059  ld   $59
              b1fb fe00  bra  ac          ;+-----------------------------------+
              b1fc fcfd  bra  $b1fd       ;|                                   |
              b1fd 1418  ld   $18,y       ;| Trampoline for page $b100 lookups |
              b1fe e006  jmp  y,$06       ;|                                   |
              b1ff c218  st   [$18]       ;+-----------------------------------+
              b200 0085  ld   $85
              b201 0096  ld   $96
              b202 00a5  ld   $a5
              b203 005a  ld   $5a
              b204 0085  ld   $85
              b205 0097  ld   $97
              b206 00a5  ld   $a5
              b207 005b  ld   $5b
              b208 0085  ld   $85
              b209 0098  ld   $98
              b20a 004c  ld   $4c
              b20b 004f  ld   $4f
              b20c 0019  ld   $19
              b20d 0085  ld   $85
              b20e 0054  ld   $54
              b20f 0084  ld   $84
              b210 0055  ld   $55
              b211 00a0  ld   $a0
              b212 0004  ld   $04
              b213 00b1  ld   $b1
              b214 0054  ld   $54
              b215 0085  ld   $85
              b216 0098  ld   $98
              b217 0088  ld   $88
              b218 00b1  ld   $b1
              b219 0054  ld   $54
              b21a 0085  ld   $85
              b21b 0097  ld   $97
              b21c 0088  ld   $88
              b21d 00b1  ld   $b1
              b21e 0054  ld   $54
              b21f 0085  ld   $85
              b220 0096  ld   $96
              b221 0088  ld   $88
              b222 00b1  ld   $b1
              b223 0054  ld   $54
              b224 0085  ld   $85
              b225 0099  ld   $99
              b226 0009  ld   $09
              b227 0080  ld   $80
              b228 0085  ld   $85
              b229 0095  ld   $95
              b22a 0088  ld   $88
              b22b 00b1  ld   $b1
              b22c 0054  ld   $54
              b22d 0085  ld   $85
              b22e 0094  ld   $94
              b22f 0084  ld   $84
              b230 00a3  ld   $a3
              b231 0060  ld   $60
              b232 00a2  ld   $a2
              b233 008f  ld   $8f
              b234 002c  ld   $2c
              b235 00a2  ld   $a2
              b236 008a  ld   $8a
              b237 00a0  ld   $a0
              b238 0000  ld   $00
              b239 00f0  ld   $f0
              b23a 0004  ld   $04
              b23b 00a6  ld   $a6
              b23c 007b  ld   $7b
              b23d 00a4  ld   $a4
              b23e 007c  ld   $7c
              b23f 0020  ld   $20
              b240 0093  ld   $93
              b241 001c  ld   $1c
              b242 0086  ld   $86
              b243 0054  ld   $54
              b244 0084  ld   $84
              b245 0055  ld   $55
              b246 00a0  ld   $a0
              b247 0004  ld   $04
              b248 00a5  ld   $a5
              b249 0098  ld   $98
              b24a 0091  ld   $91
              b24b 0054  ld   $54
              b24c 0088  ld   $88
              b24d 00a5  ld   $a5
              b24e 0097  ld   $97
              b24f 0091  ld   $91
              b250 0054  ld   $54
              b251 0088  ld   $88
              b252 00a5  ld   $a5
              b253 0096  ld   $96
              b254 0091  ld   $91
              b255 0054  ld   $54
              b256 0088  ld   $88
              b257 00a5  ld   $a5
              b258 0099  ld   $99
              b259 0009  ld   $09
              b25a 007f  ld   $7f
              b25b 0025  ld   $25
              b25c 0095  ld   $95
              b25d 0091  ld   $91
              b25e 0054  ld   $54
              b25f 0088  ld   $88
              b260 00a5  ld   $a5
              b261 0094  ld   $94
              b262 0091  ld   $91
              b263 0054  ld   $54
              b264 0084  ld   $84
              b265 00a3  ld   $a3
              b266 0060  ld   $60
              b267 00a5  ld   $a5
              b268 00a1  ld   $a1
              b269 0085  ld   $85
              b26a 0099  ld   $99
              b26b 00a2  ld   $a2
              b26c 0005  ld   $05
              b26d 00b5  ld   $b5
              b26e 009b  ld   $9b
              b26f 0095  ld   $95
              b270 0093  ld   $93
              b271 00ca  ld   $ca
              b272 00d0  ld   $d0
              b273 00f9  ld   $f9
              b274 0086  ld   $86
              b275 00a3  ld   $a3
              b276 0060  ld   $60
              b277 0020  ld   $20
              b278 0093  ld   $93
              b279 001c  ld   $1c
              b27a 00a2  ld   $a2
              b27b 0006  ld   $06
              b27c 00b5  ld   $b5
              b27d 0093  ld   $93
              b27e 0095  ld   $95
              b27f 009b  ld   $9b
              b280 00ca  ld   $ca
              b281 00d0  ld   $d0
              b282 00f9  ld   $f9
              b283 0086  ld   $86
              b284 00a3  ld   $a3
              b285 0060  ld   $60
              b286 00a5  ld   $a5
              b287 0094  ld   $94
              b288 00f0  ld   $f0
              b289 00fb  ld   $fb
              b28a 0006  ld   $06
              b28b 00a3  ld   $a3
              b28c 0090  ld   $90
              b28d 00f7  ld   $f7
              b28e 0020  ld   $20
              b28f 00e7  ld   $e7
              b290 0019  ld   $19
              b291 00d0  ld   $d0
              b292 00f2  ld   $f2
              b293 004c  ld   $4c
              b294 00b0  ld   $b0
              b295 0019  ld   $19
              b296 00a5  ld   $a5
              b297 0094  ld   $94
              b298 00f0  ld   $f0
              b299 0009  ld   $09
              b29a 00a5  ld   $a5
              b29b 0099  ld   $99
              b29c 002a  ld   $2a
              b29d 00a9  ld   $a9
              b29e 00ff  ld   $ff
              b29f 00b0  ld   $b0
              b2a0 0002  ld   $02
              b2a1 00a9  ld   $a9
              b2a2 0001  ld   $01
              b2a3 0060  ld   $60
              b2a4 0020  ld   $20
              b2a5 00a3  ld   $a3
              b2a6 001c  ld   $1c
              b2a7 0085  ld   $85
              b2a8 0095  ld   $95
              b2a9 00a9  ld   $a9
              b2aa 0000  ld   $00
              b2ab 0085  ld   $85
              b2ac 0096  ld   $96
              b2ad 00a2  ld   $a2
              b2ae 0088  ld   $88
              b2af 00a5  ld   $a5
              b2b0 0095  ld   $95
              b2b1 0049  ld   $49
              b2b2 00ff  ld   $ff
              b2b3 002a  ld   $2a
              b2b4 00a9  ld   $a9
              b2b5 0000  ld   $00
              b2b6 0085  ld   $85
              b2b7 0098  ld   $98
              b2b8 0085  ld   $85
              b2b9 0097  ld   $97
              b2ba 0086  ld   $86
              b2bb 0094  ld   $94
              b2bc 0085  ld   $85
              b2bd 00a3  ld   $a3
              b2be 0085  ld   $85
              b2bf 0099  ld   $99
              b2c0 004c  ld   $4c
              b2c1 004a  ld   $4a
              b2c2 0019  ld   $19
              b2c3 0046  ld   $46
              b2c4 0099  ld   $99
              b2c5 0060  ld   $60
              b2c6 0085  ld   $85
              b2c7 0056  ld   $56
              b2c8 0084  ld   $84
              b2c9 0057  ld   $57
              b2ca 00a0  ld   $a0
              b2cb 0000  ld   $00
              b2cc 00b1  ld   $b1
              b2cd 0056  ld   $56
              b2ce 00c8  ld   $c8
              b2cf 00aa  ld   $aa
              b2d0 00f0  ld   $f0
              b2d1 00c4  ld   $c4
              b2d2 00b1  ld   $b1
              b2d3 0056  ld   $56
              b2d4 0045  ld   $45
              b2d5 0099  ld   $99
              b2d6 0030  ld   $30
              b2d7 00c2  ld   $c2
              b2d8 00e4  ld   $e4
              b2d9 0094  ld   $94
              b2da 00d0  ld   $d0
              b2db 0021  ld   $21
              b2dc 00b1  ld   $b1
              b2dd 0056  ld   $56
              b2de 0009  ld   $09
              b2df 0080  ld   $80
              b2e0 00c5  ld   $c5
              b2e1 0095  ld   $95
              b2e2 00d0  ld   $d0
              b2e3 0019  ld   $19
              b2e4 00c8  ld   $c8
              b2e5 00b1  ld   $b1
              b2e6 0056  ld   $56
              b2e7 00c5  ld   $c5
              b2e8 0096  ld   $96
              b2e9 00d0  ld   $d0
              b2ea 0012  ld   $12
              b2eb 00c8  ld   $c8
              b2ec 00b1  ld   $b1
              b2ed 0056  ld   $56
              b2ee 00c5  ld   $c5
              b2ef 0097  ld   $97
              b2f0 00d0  ld   $d0
              b2f1 000b  ld   $0b
              b2f2 00c8  ld   $c8
              b2f3 001d  ld   $1d
              b2f4 0000  ld   $00
              b2f5 0000  ld   $00
              b2f6 00a9  ld   $a9
              b2f7 007f  ld   $7f
              b2f8 00c5  ld   $c5
              b2f9 00a3  ld   $a3
              b2fa 00b1  ld   $b1
              b2fb fe00  bra  ac          ;+-----------------------------------+
              b2fc fcfd  bra  $b2fd       ;|                                   |
              b2fd 1418  ld   $18,y       ;| Trampoline for page $b200 lookups |
              b2fe e006  jmp  y,$06       ;|                                   |
              b2ff c218  st   [$18]       ;+-----------------------------------+
              b300 0056  ld   $56
              b301 00e5  ld   $e5
              b302 0098  ld   $98
              b303 00f0  ld   $f0
              b304 0028  ld   $28
              b305 00a5  ld   $a5
              b306 0099  ld   $99
              b307 0090  ld   $90
              b308 0002  ld   $02
              b309 0049  ld   $49
              b30a 00ff  ld   $ff
              b30b 004c  ld   $4c
              b30c 00a9  ld   $a9
              b30d 001c  ld   $1c
              b30e 00a5  ld   $a5
              b30f 0094  ld   $94
              b310 00f0  ld   $f0
              b311 004a  ld   $4a
              b312 0038  ld   $38
              b313 00e9  ld   $e9
              b314 00a0  ld   $a0
              b315 0024  ld   $24
              b316 0099  ld   $99
              b317 0010  ld   $10
              b318 0009  ld   $09
              b319 00aa  ld   $aa
              b31a 00a9  ld   $a9
              b31b 00ff  ld   $ff
              b31c 0085  ld   $85
              b31d 009b  ld   $9b
              b31e 0020  ld   $20
              b31f 00c5  ld   $c5
              b320 0019  ld   $19
              b321 008a  ld   $8a
              b322 00a2  ld   $a2
              b323 0094  ld   $94
              b324 00c9  ld   $c9
              b325 00f9  ld   $f9
              b326 0010  ld   $10
              b327 0006  ld   $06
              b328 0020  ld   $20
              b329 0011  ld   $11
              b32a 001a  ld   $1a
              b32b 0084  ld   $84
              b32c 009b  ld   $9b
              b32d 0060  ld   $60
              b32e 00a8  ld   $a8
              b32f 00a5  ld   $a5
              b330 0099  ld   $99
              b331 0029  ld   $29
              b332 0080  ld   $80
              b333 0046  ld   $46
              b334 0095  ld   $95
              b335 0005  ld   $05
              b336 0095  ld   $95
              b337 0085  ld   $85
              b338 0095  ld   $95
              b339 0020  ld   $20
              b33a 0028  ld   $28
              b33b 001a  ld   $1a
              b33c 0084  ld   $84
              b33d 009b  ld   $9b
              b33e 0060  ld   $60
              b33f 00a5  ld   $a5
              b340 0094  ld   $94
              b341 00c9  ld   $c9
              b342 00a0  ld   $a0
              b343 00b0  ld   $b0
              b344 0020  ld   $20
              b345 0020  ld   $20
              b346 0013  ld   $13
              b347 001d  ld   $1d
              b348 0084  ld   $84
              b349 00a3  ld   $a3
              b34a 00a5  ld   $a5
              b34b 0099  ld   $99
              b34c 0084  ld   $84
              b34d 0099  ld   $99
              b34e 0049  ld   $49
              b34f 0080  ld   $80
              b350 002a  ld   $2a
              b351 00a9  ld   $a9
              b352 00a0  ld   $a0
              b353 0085  ld   $85
              b354 0094  ld   $94
              b355 00a5  ld   $a5
              b356 0098  ld   $98
              b357 0085  ld   $85
              b358 003b  ld   $3b
              b359 004c  ld   $4c
              b35a 004a  ld   $4a
              b35b 0019  ld   $19
              b35c 0085  ld   $85
              b35d 0095  ld   $95
              b35e 0085  ld   $85
              b35f 0096  ld   $96
              b360 0085  ld   $85
              b361 0097  ld   $97
              b362 0085  ld   $85
              b363 0098  ld   $98
              b364 00a8  ld   $a8
              b365 0060  ld   $60
              b366 00a0  ld   $a0
              b367 0000  ld   $00
              b368 00a2  ld   $a2
              b369 000a  ld   $0a
              b36a 0094  ld   $94
              b36b 0090  ld   $90
              b36c 00ca  ld   $ca
              b36d 0010  ld   $10
              b36e 00fb  ld   $fb
              b36f 0090  ld   $90
              b370 000f  ld   $0f
              b371 00c9  ld   $c9
              b372 002d  ld   $2d
              b373 00d0  ld   $d0
              b374 0004  ld   $04
              b375 0086  ld   $86
              b376 009a  ld   $9a
              b377 00f0  ld   $f0
              b378 0004  ld   $04
              b379 00c9  ld   $c9
              b37a 002b  ld   $2b
              b37b 00d0  ld   $d0
              b37c 0005  ld   $05
              b37d 0020  ld   $20
              b37e 006b  ld   $6b
              b37f 0022  ld   $22
              b380 0090  ld   $90
              b381 005b  ld   $5b
              b382 00c9  ld   $c9
              b383 002e  ld   $2e
              b384 00f0  ld   $f0
              b385 002e  ld   $2e
              b386 00c9  ld   $c9
              b387 0045  ld   $45
              b388 00d0  ld   $d0
              b389 0030  ld   $30
              b38a 0020  ld   $20
              b38b 006b  ld   $6b
              b38c 0022  ld   $22
              b38d 0090  ld   $90
              b38e 0017  ld   $17
              b38f 00c9  ld   $c9
              b390 00a5  ld   $a5
              b391 00f0  ld   $f0
              b392 000e  ld   $0e
              b393 00c9  ld   $c9
              b394 002d  ld   $2d
              b395 00f0  ld   $f0
              b396 000a  ld   $0a
              b397 00c9  ld   $c9
              b398 00a4  ld   $a4
              b399 00f0  ld   $f0
              b39a 0008  ld   $08
              b39b 00c9  ld   $c9
              b39c 002b  ld   $2b
              b39d 00f0  ld   $f0
              b39e 0004  ld   $04
              b39f 00d0  ld   $d0
              b3a0 0007  ld   $07
              b3a1 0066  ld   $66
              b3a2 0093  ld   $93
              b3a3 0020  ld   $20
              b3a4 006b  ld   $6b
              b3a5 0022  ld   $22
              b3a6 0090  ld   $90
              b3a7 005c  ld   $5c
              b3a8 0024  ld   $24
              b3a9 0093  ld   $93
              b3aa 0010  ld   $10
              b3ab 000e  ld   $0e
              b3ac 00a9  ld   $a9
              b3ad 0000  ld   $00
              b3ae 0038  ld   $38
              b3af 00e5  ld   $e5
              b3b0 0091  ld   $91
              b3b1 004c  ld   $4c
              b3b2 00c1  ld   $c1
              b3b3 001d  ld   $1d
              b3b4 0066  ld   $66
              b3b5 0092  ld   $92
              b3b6 0024  ld   $24
              b3b7 0092  ld   $92
              b3b8 0050  ld   $50
              b3b9 00c3  ld   $c3
              b3ba 00a5  ld   $a5
              b3bb 0091  ld   $91
              b3bc 0038  ld   $38
              b3bd 00e5  ld   $e5
              b3be 0090  ld   $90
              b3bf 0085  ld   $85
              b3c0 0091  ld   $91
              b3c1 00f0  ld   $f0
              b3c2 0012  ld   $12
              b3c3 0010  ld   $10
              b3c4 0009  ld   $09
              b3c5 0020  ld   $20
              b3c6 0076  ld   $76
              b3c7 001b  ld   $1b
              b3c8 00e6  ld   $e6
              b3c9 0091  ld   $91
              b3ca 00d0  ld   $d0
              b3cb 00f9  ld   $f9
              b3cc 00f0  ld   $f0
              b3cd 0007  ld   $07
              b3ce 0020  ld   $20
              b3cf 005a  ld   $5a
              b3d0 001b  ld   $1b
              b3d1 00c6  ld   $c6
              b3d2 0091  ld   $91
              b3d3 00d0  ld   $d0
              b3d4 00f9  ld   $f9
              b3d5 00a5  ld   $a5
              b3d6 009a  ld   $9a
              b3d7 0030  ld   $30
              b3d8 0001  ld   $01
              b3d9 0060  ld   $60
              b3da 004c  ld   $4c
              b3db 000d  ld   $0d
              b3dc 0020  ld   $20
              b3dd 0048  ld   $48
              b3de 0024  ld   $24
              b3df 0092  ld   $92
              b3e0 0010  ld   $10
              b3e1 0002  ld   $02
              b3e2 00e6  ld   $e6
              b3e3 0090  ld   $90
              b3e4 0020  ld   $20
              b3e5 005a  ld   $5a
              b3e6 001b  ld   $1b
              b3e7 0068  ld   $68
              b3e8 0038  ld   $38
              b3e9 00e9  ld   $e9
              b3ea 0030  ld   $30
              b3eb 0020  ld   $20
              b3ec 00f6  ld   $f6
              b3ed 001d  ld   $1d
              b3ee 004c  ld   $4c
              b3ef 0082  ld   $82
              b3f0 001d  ld   $1d
              b3f1 0048  ld   $48
              b3f2 0020  ld   $20
              b3f3 0084  ld   $84
              b3f4 001c  ld   $1c
              b3f5 0068  ld   $68
              b3f6 0020  ld   $20
              b3f7 00b4  ld   $b4
              b3f8 001c  ld   $1c
              b3f9 00a5  ld   $a5
              b3fa 00a1  ld   $a1
              b3fb fe00  bra  ac          ;+-----------------------------------+
              b3fc fcfd  bra  $b3fd       ;|                                   |
              b3fd 1418  ld   $18,y       ;| Trampoline for page $b300 lookups |
              b3fe e006  jmp  y,$06       ;|                                   |
              b3ff c218  st   [$18]       ;+-----------------------------------+
              b400 001e  ld   $1e
              b401 0000  ld   $00
              b402 0000  ld   $00
              b403 0045  ld   $45
              b404 0099  ld   $99
              b405 0085  ld   $85
              b406 00a2  ld   $a2
              b407 00a6  ld   $a6
              b408 0094  ld   $94
              b409 004c  ld   $4c
              b40a 00e2  ld   $e2
              b40b 0018  ld   $18
              b40c 00a5  ld   $a5
              b40d 0091  ld   $91
              b40e 00c9  ld   $c9
              b40f 000a  ld   $0a
              b410 0090  ld   $90
              b411 0009  ld   $09
              b412 00a9  ld   $a9
              b413 0064  ld   $64
              b414 0024  ld   $24
              b415 0093  ld   $93
              b416 0030  ld   $30
              b417 0011  ld   $11
              b418 004c  ld   $4c
              b419 00f6  ld   $f6
              b41a 0019  ld   $19
              b41b 000a  ld   $0a
              b41c 000a  ld   $0a
              b41d 0018  ld   $18
              b41e 0065  ld   $65
              b41f 0091  ld   $91
              b420 000a  ld   $0a
              b421 0018  ld   $18
              b422 00a0  ld   $a0
              b423 0000  ld   $00
              b424 0071  ld   $71
              b425 00a6  ld   $a6
              b426 0038  ld   $38
              b427 00e9  ld   $e9
              b428 0030  ld   $30
              b429 0085  ld   $85
              b42a 0091  ld   $91
              b42b 004c  ld   $4c
              b42c 00a8  ld   $a8
              b42d 001d  ld   $1d
              b42e 009b  ld   $9b
              b42f 003e  ld   $3e
              b430 00bc  ld   $bc
              b431 001f  ld   $1f
              b432 00fd  ld   $fd
              b433 009e  ld   $9e
              b434 006e  ld   $6e
              b435 006b  ld   $6b
              b436 0027  ld   $27
              b437 00fd  ld   $fd
              b438 009e  ld   $9e
              b439 006e  ld   $6e
              b43a 006b  ld   $6b
              b43b 0028  ld   $28
              b43c 0000  ld   $00
              b43d 00a9  ld   $a9
              b43e 008a  ld   $8a
              b43f 00a0  ld   $a0
              b440 0004  ld   $04
              b441 0020  ld   $20
              b442 0052  ld   $52
              b443 001e  ld   $1e
              b444 00a5  ld   $a5
              b445 006c  ld   $6c
              b446 00a6  ld   $a6
              b447 006b  ld   $6b
              b448 0085  ld   $85
              b449 0095  ld   $95
              b44a 0086  ld   $86
              b44b 0096  ld   $96
              b44c 00a2  ld   $a2
              b44d 0090  ld   $90
              b44e 0038  ld   $38
              b44f 0020  ld   $20
              b450 00c1  ld   $c1
              b451 001c  ld   $1c
              b452 0020  ld   $20
              b453 0055  ld   $55
              b454 001e  ld   $1e
              b455 004c  ld   $4c
              b456 00ef  ld   $ef
              b457 000b  ld   $0b
              b458 00a0  ld   $a0
              b459 0001  ld   $01
              b45a 00a9  ld   $a9
              b45b 0020  ld   $20
              b45c 0024  ld   $24
              b45d 0099  ld   $99
              b45e 0010  ld   $10
              b45f 0002  ld   $02
              b460 00a9  ld   $a9
              b461 002d  ld   $2d
              b462 0099  ld   $99
              b463 0004  ld   $04
              b464 0002  ld   $02
              b465 0085  ld   $85
              b466 0099  ld   $99
              b467 0084  ld   $84
              b468 00a4  ld   $a4
              b469 00c8  ld   $c8
              b46a 00a9  ld   $a9
              b46b 0030  ld   $30
              b46c 00a6  ld   $a6
              b46d 0094  ld   $94
              b46e 00d0  ld   $d0
              b46f 0003  ld   $03
              b470 004c  ld   $4c
              b471 007c  ld   $7c
              b472 001f  ld   $1f
              b473 00a9  ld   $a9
              b474 0000  ld   $00
              b475 00e0  ld   $e0
              b476 0080  ld   $80
              b477 00f0  ld   $f0
              b478 0002  ld   $02
              b479 00b0  ld   $b0
              b47a 0009  ld   $09
              b47b 00a9  ld   $a9
              b47c 0035  ld   $35
              b47d 00a0  ld   $a0
              b47e 001e  ld   $1e
              b47f 0020  ld   $20
              b480 00a0  ld   $a0
              b481 001a  ld   $1a
              b482 00a9  ld   $a9
              b483 00f7  ld   $f7
              b484 0085  ld   $85
              b485 0090  ld   $90
              b486 00a9  ld   $a9
              b487 0030  ld   $30
              b488 00a0  ld   $a0
              b489 001e  ld   $1e
              b48a 0020  ld   $20
              b48b 00d3  ld   $d3
              b48c 001c  ld   $1c
              b48d 00f0  ld   $f0
              b48e 001e  ld   $1e
              b48f 0010  ld   $10
              b490 0012  ld   $12
              b491 00a9  ld   $a9
              b492 002b  ld   $2b
              b493 00a0  ld   $a0
              b494 001e  ld   $1e
              b495 0020  ld   $20
              b496 00d3  ld   $d3
              b497 001c  ld   $1c
              b498 00f0  ld   $f0
              b499 0002  ld   $02
              b49a 0010  ld   $10
              b49b 000e  ld   $0e
              b49c 0020  ld   $20
              b49d 005a  ld   $5a
              b49e 001b  ld   $1b
              b49f 00c6  ld   $c6
              b4a0 0090  ld   $90
              b4a1 00d0  ld   $d0
              b4a2 00ee  ld   $ee
              b4a3 0020  ld   $20
              b4a4 0076  ld   $76
              b4a5 001b  ld   $1b
              b4a6 00e6  ld   $e6
              b4a7 0090  ld   $90
              b4a8 00d0  ld   $d0
              b4a9 00dc  ld   $dc
              b4aa 0020  ld   $20
              b4ab 008e  ld   $8e
              b4ac 0018  ld   $18
              b4ad 0020  ld   $20
              b4ae 0013  ld   $13
              b4af 001d  ld   $1d
              b4b0 00a2  ld   $a2
              b4b1 0001  ld   $01
              b4b2 00a5  ld   $a5
              b4b3 0090  ld   $90
              b4b4 0018  ld   $18
              b4b5 0069  ld   $69
              b4b6 000a  ld   $0a
              b4b7 0030  ld   $30
              b4b8 0009  ld   $09
              b4b9 00c9  ld   $c9
              b4ba 000b  ld   $0b
              b4bb 00b0  ld   $b0
              b4bc 0006  ld   $06
              b4bd 0069  ld   $69
              b4be 00ff  ld   $ff
              b4bf 00aa  ld   $aa
              b4c0 00a9  ld   $a9
              b4c1 0002  ld   $02
              b4c2 0038  ld   $38
              b4c3 00e9  ld   $e9
              b4c4 0002  ld   $02
              b4c5 0085  ld   $85
              b4c6 0091  ld   $91
              b4c7 0086  ld   $86
              b4c8 0090  ld   $90
              b4c9 008a  ld   $8a
              b4ca 00f0  ld   $f0
              b4cb 0002  ld   $02
              b4cc 0010  ld   $10
              b4cd 0013  ld   $13
              b4ce 00a4  ld   $a4
              b4cf 00a4  ld   $a4
              b4d0 00a9  ld   $a9
              b4d1 002e  ld   $2e
              b4d2 00c8  ld   $c8
              b4d3 0099  ld   $99
              b4d4 0004  ld   $04
              b4d5 0002  ld   $02
              b4d6 008a  ld   $8a
              b4d7 00f0  ld   $f0
              b4d8 0006  ld   $06
              b4d9 00a9  ld   $a9
              b4da 0030  ld   $30
              b4db 00c8  ld   $c8
              b4dc 0099  ld   $99
              b4dd 0004  ld   $04
              b4de 0002  ld   $02
              b4df 0084  ld   $84
              b4e0 00a4  ld   $a4
              b4e1 00a0  ld   $a0
              b4e2 0000  ld   $00
              b4e3 00a2  ld   $a2
              b4e4 0080  ld   $80
              b4e5 00a5  ld   $a5
              b4e6 0098  ld   $98
              b4e7 0018  ld   $18
              b4e8 0079  ld   $79
              b4e9 0091  ld   $91
              b4ea 001f  ld   $1f
              b4eb 0085  ld   $85
              b4ec 0098  ld   $98
              b4ed 00a5  ld   $a5
              b4ee 0097  ld   $97
              b4ef 0079  ld   $79
              b4f0 0090  ld   $90
              b4f1 001f  ld   $1f
              b4f2 0085  ld   $85
              b4f3 0097  ld   $97
              b4f4 00a5  ld   $a5
              b4f5 0096  ld   $96
              b4f6 0079  ld   $79
              b4f7 008f  ld   $8f
              b4f8 001f  ld   $1f
              b4f9 0085  ld   $85
              b4fa 0096  ld   $96
              b4fb fe00  bra  ac          ;+-----------------------------------+
              b4fc fcfd  bra  $b4fd       ;|                                   |
              b4fd 1418  ld   $18,y       ;| Trampoline for page $b400 lookups |
              b4fe e006  jmp  y,$06       ;|                                   |
              b4ff c218  st   [$18]       ;+-----------------------------------+
              b500 00a5  ld   $a5
              b501 0095  ld   $95
              b502 0079  ld   $79
              b503 008e  ld   $8e
              b504 001f  ld   $1f
              b505 0085  ld   $85
              b506 0095  ld   $95
              b507 00e8  ld   $e8
              b508 001f  ld   $1f
              b509 0000  ld   $00
              b50a 0000  ld   $00
              b50b 00b0  ld   $b0
              b50c 0004  ld   $04
              b50d 0010  ld   $10
              b50e 00de  ld   $de
              b50f 0030  ld   $30
              b510 0002  ld   $02
              b511 0030  ld   $30
              b512 00da  ld   $da
              b513 008a  ld   $8a
              b514 0090  ld   $90
              b515 0004  ld   $04
              b516 0049  ld   $49
              b517 00ff  ld   $ff
              b518 0069  ld   $69
              b519 000a  ld   $0a
              b51a 0069  ld   $69
              b51b 002f  ld   $2f
              b51c 00c8  ld   $c8
              b51d 00c8  ld   $c8
              b51e 00c8  ld   $c8
              b51f 00c8  ld   $c8
              b520 0084  ld   $84
              b521 0079  ld   $79
              b522 00a4  ld   $a4
              b523 00a4  ld   $a4
              b524 00c8  ld   $c8
              b525 00aa  ld   $aa
              b526 0029  ld   $29
              b527 007f  ld   $7f
              b528 0099  ld   $99
              b529 0004  ld   $04
              b52a 0002  ld   $02
              b52b 00c6  ld   $c6
              b52c 0090  ld   $90
              b52d 00d0  ld   $d0
              b52e 0006  ld   $06
              b52f 00a9  ld   $a9
              b530 002e  ld   $2e
              b531 00c8  ld   $c8
              b532 0099  ld   $99
              b533 0004  ld   $04
              b534 0002  ld   $02
              b535 0084  ld   $84
              b536 00a4  ld   $a4
              b537 00a4  ld   $a4
              b538 0079  ld   $79
              b539 008a  ld   $8a
              b53a 0049  ld   $49
              b53b 00ff  ld   $ff
              b53c 0029  ld   $29
              b53d 0080  ld   $80
              b53e 00aa  ld   $aa
              b53f 00c0  ld   $c0
              b540 0024  ld   $24
              b541 00f0  ld   $f0
              b542 0004  ld   $04
              b543 00c0  ld   $c0
              b544 003c  ld   $3c
              b545 00d0  ld   $d0
              b546 00a6  ld   $a6
              b547 00a4  ld   $a4
              b548 00a4  ld   $a4
              b549 00b9  ld   $b9
              b54a 0004  ld   $04
              b54b 0002  ld   $02
              b54c 0088  ld   $88
              b54d 00c9  ld   $c9
              b54e 0030  ld   $30
              b54f 00f0  ld   $f0
              b550 00f8  ld   $f8
              b551 00c9  ld   $c9
              b552 002e  ld   $2e
              b553 00f0  ld   $f0
              b554 0001  ld   $01
              b555 00c8  ld   $c8
              b556 00a9  ld   $a9
              b557 002b  ld   $2b
              b558 00a6  ld   $a6
              b559 0091  ld   $91
              b55a 00f0  ld   $f0
              b55b 002e  ld   $2e
              b55c 0010  ld   $10
              b55d 0008  ld   $08
              b55e 00a9  ld   $a9
              b55f 0000  ld   $00
              b560 0038  ld   $38
              b561 00e5  ld   $e5
              b562 0091  ld   $91
              b563 00aa  ld   $aa
              b564 00a9  ld   $a9
              b565 002d  ld   $2d
              b566 0099  ld   $99
              b567 0006  ld   $06
              b568 0002  ld   $02
              b569 00a9  ld   $a9
              b56a 0045  ld   $45
              b56b 0099  ld   $99
              b56c 0005  ld   $05
              b56d 0002  ld   $02
              b56e 008a  ld   $8a
              b56f 00a2  ld   $a2
              b570 002f  ld   $2f
              b571 0038  ld   $38
              b572 00e8  ld   $e8
              b573 00e9  ld   $e9
              b574 000a  ld   $0a
              b575 00b0  ld   $b0
              b576 00fb  ld   $fb
              b577 0069  ld   $69
              b578 003a  ld   $3a
              b579 0099  ld   $99
              b57a 0008  ld   $08
              b57b 0002  ld   $02
              b57c 008a  ld   $8a
              b57d 0099  ld   $99
              b57e 0007  ld   $07
              b57f 0002  ld   $02
              b580 00a9  ld   $a9
              b581 0000  ld   $00
              b582 0099  ld   $99
              b583 0009  ld   $09
              b584 0002  ld   $02
              b585 00f0  ld   $f0
              b586 0008  ld   $08
              b587 0099  ld   $99
              b588 0004  ld   $04
              b589 0002  ld   $02
              b58a 00a9  ld   $a9
              b58b 0000  ld   $00
              b58c 0099  ld   $99
              b58d 0005  ld   $05
              b58e 0002  ld   $02
              b58f 00a9  ld   $a9
              b590 0005  ld   $05
              b591 00a0  ld   $a0
              b592 0002  ld   $02
              b593 0060  ld   $60
              b594 0080  ld   $80
              b595 0000  ld   $00
              b596 0000  ld   $00
              b597 0000  ld   $00
              b598 0000  ld   $00
              b599 00fa  ld   $fa
              b59a 000a  ld   $0a
              b59b 001f  ld   $1f
              b59c 0000  ld   $00
              b59d 0000  ld   $00
              b59e 0098  ld   $98
              b59f 0096  ld   $96
              b5a0 0080  ld   $80
              b5a1 00ff  ld   $ff
              b5a2 00f0  ld   $f0
              b5a3 00bd  ld   $bd
              b5a4 00c0  ld   $c0
              b5a5 0000  ld   $00
              b5a6 0001  ld   $01
              b5a7 0086  ld   $86
              b5a8 00a0  ld   $a0
              b5a9 00ff  ld   $ff
              b5aa 00ff  ld   $ff
              b5ab 00d8  ld   $d8
              b5ac 00f0  ld   $f0
              b5ad 0000  ld   $00
              b5ae 0000  ld   $00
              b5af 0003  ld   $03
              b5b0 00e8  ld   $e8
              b5b1 00ff  ld   $ff
              b5b2 00ff  ld   $ff
              b5b3 00ff  ld   $ff
              b5b4 009c  ld   $9c
              b5b5 0000  ld   $00
              b5b6 0000  ld   $00
              b5b7 0000  ld   $00
              b5b8 000a  ld   $0a
              b5b9 00ff  ld   $ff
              b5ba 00ff  ld   $ff
              b5bb 00ff  ld   $ff
              * 5 times
              b5be 00df  ld   $df
              b5bf 000a  ld   $0a
              b5c0 0080  ld   $80
              b5c1 0000  ld   $00
              b5c2 0003  ld   $03
              b5c3 004b  ld   $4b
              b5c4 00c0  ld   $c0
              b5c5 00ff  ld   $ff
              b5c6 00ff  ld   $ff
              b5c7 0073  ld   $73
              b5c8 0060  ld   $60
              b5c9 0000  ld   $00
              b5ca 0000  ld   $00
              b5cb 000e  ld   $0e
              b5cc 0010  ld   $10
              b5cd 00ff  ld   $ff
              b5ce 00ff  ld   $ff
              b5cf 00fd  ld   $fd
              b5d0 00a8  ld   $a8
              b5d1 0000  ld   $00
              b5d2 0000  ld   $00
              b5d3 0000  ld   $00
              b5d4 003c  ld   $3c
              b5d5 0020  ld   $20
              b5d6 0084  ld   $84
              b5d7 001c  ld   $1c
              b5d8 00a9  ld   $a9
              b5d9 0089  ld   $89
              b5da 00a0  ld   $a0
              b5db 001f  ld   $1f
              b5dc 0020  ld   $20
              b5dd 001a  ld   $1a
              b5de 001c  ld   $1c
              b5df 00f0  ld   $f0
              b5e0 0070  ld   $70
              b5e1 00a5  ld   $a5
              b5e2 009c  ld   $9c
              b5e3 00d0  ld   $d0
              b5e4 0003  ld   $03
              b5e5 004c  ld   $4c
              b5e6 0071  ld   $71
              b5e7 0019  ld   $19
              b5e8 00a2  ld   $a2
              b5e9 0081  ld   $81
              b5ea 00a0  ld   $a0
              b5eb 0000  ld   $00
              b5ec 0020  ld   $20
              b5ed 004c  ld   $4c
              b5ee 001c  ld   $1c
              b5ef 00a5  ld   $a5
              b5f0 00a1  ld   $a1
              b5f1 0010  ld   $10
              b5f2 000f  ld   $0f
              b5f3 0020  ld   $20
              b5f4 0044  ld   $44
              b5f5 001d  ld   $1d
              b5f6 00a9  ld   $a9
              b5f7 0081  ld   $81
              b5f8 00a0  ld   $a0
              b5f9 0000  ld   $00
              b5fa 0020  ld   $20
              b5fb fe00  bra  ac          ;+-----------------------------------+
              b5fc fcfd  bra  $b5fd       ;|                                   |
              b5fd 1418  ld   $18,y       ;| Trampoline for page $b500 lookups |
              b5fe e006  jmp  y,$06       ;|                                   |
              b5ff c218  st   [$18]       ;+-----------------------------------+
              b600 00d3  ld   $d3
              b601 001c  ld   $1c
              b602 00d0  ld   $d0
              b603 0003  ld   $03
              b604 0098  ld   $98
              b605 00a4  ld   $a4
              b606 003b  ld   $3b
              b607 0020  ld   $20
              b608 0076  ld   $76
              b609 001c  ld   $1c
              b60a 0098  ld   $98
              b60b 0048  ld   $48
              b60c 0020  ld   $20
              b60d 0062  ld   $62
              b60e 001a  ld   $1a
              b60f 00a9  ld   $a9
              b610 0020  ld   $20
              b611 0000  ld   $00
              b612 0000  ld   $00
              b613 0081  ld   $81
              b614 00a0  ld   $a0
              b615 0000  ld   $00
              b616 0020  ld   $20
              b617 00a0  ld   $a0
              b618 001a  ld   $1a
              b619 0020  ld   $20
              b61a 0046  ld   $46
              b61b 0020  ld   $20
              b61c 0068  ld   $68
              b61d 004a  ld   $4a
              b61e 0090  ld   $90
              b61f 000a  ld   $0a
              b620 00a5  ld   $a5
              b621 0094  ld   $94
              b622 00f0  ld   $f0
              b623 0006  ld   $06
              b624 00a5  ld   $a5
              b625 0099  ld   $99
              b626 0049  ld   $49
              b627 00ff  ld   $ff
              b628 0085  ld   $85
              b629 0099  ld   $99
              b62a 0060  ld   $60
              b62b 0081  ld   $81
              b62c 0038  ld   $38
              b62d 00aa  ld   $aa
              b62e 003b  ld   $3b
              b62f 0029  ld   $29
              b630 0007  ld   $07
              b631 0071  ld   $71
              b632 0034  ld   $34
              b633 0058  ld   $58
              b634 003e  ld   $3e
              b635 0056  ld   $56
              b636 0074  ld   $74
              b637 0016  ld   $16
              b638 007e  ld   $7e
              b639 00b3  ld   $b3
              b63a 001b  ld   $1b
              b63b 0077  ld   $77
              b63c 002f  ld   $2f
              b63d 00ee  ld   $ee
              b63e 00e3  ld   $e3
              b63f 0085  ld   $85
              b640 007a  ld   $7a
              b641 001d  ld   $1d
              b642 0084  ld   $84
              b643 001c  ld   $1c
              b644 002a  ld   $2a
              b645 007c  ld   $7c
              b646 0063  ld   $63
              b647 0059  ld   $59
              b648 0058  ld   $58
              b649 000a  ld   $0a
              b64a 007e  ld   $7e
              b64b 0075  ld   $75
              b64c 00fd  ld   $fd
              b64d 00e7  ld   $e7
              b64e 00c6  ld   $c6
              b64f 0080  ld   $80
              b650 0031  ld   $31
              b651 0072  ld   $72
              b652 0018  ld   $18
              b653 0010  ld   $10
              b654 0081  ld   $81
              b655 0000  ld   $00
              b656 0000  ld   $00
              b657 0000  ld   $00
              b658 0000  ld   $00
              b659 00a9  ld   $a9
              b65a 0018  ld   $18
              b65b 00a0  ld   $a0
              b65c 0020  ld   $20
              b65d 0020  ld   $20
              b65e 00a0  ld   $a0
              b65f 001a  ld   $1a
              b660 00a5  ld   $a5
              b661 00a3  ld   $a3
              b662 0069  ld   $69
              b663 0050  ld   $50
              b664 0090  ld   $90
              b665 0003  ld   $03
              b666 0020  ld   $20
              b667 009b  ld   $9b
              b668 001c  ld   $1c
              b669 0085  ld   $85
              b66a 0089  ld   $89
              b66b 0020  ld   $20
              b66c 0087  ld   $87
              b66d 001c  ld   $1c
              b66e 00a5  ld   $a5
              b66f 0094  ld   $94
              b670 00c9  ld   $c9
              b671 0088  ld   $88
              b672 0090  ld   $90
              b673 0003  ld   $03
              b674 0020  ld   $20
              b675 004c  ld   $4c
              b676 001b  ld   $1b
              b677 0020  ld   $20
              b678 0044  ld   $44
              b679 001d  ld   $1d
              b67a 00a5  ld   $a5
              b67b 003b  ld   $3b
              b67c 0018  ld   $18
              b67d 0069  ld   $69
              b67e 0081  ld   $81
              b67f 00f0  ld   $f0
              b680 00f3  ld   $f3
              b681 0038  ld   $38
              b682 00e9  ld   $e9
              b683 0001  ld   $01
              b684 0048  ld   $48
              b685 00a2  ld   $a2
              b686 0005  ld   $05
              b687 00b5  ld   $b5
              b688 009c  ld   $9c
              b689 00b4  ld   $b4
              b68a 0094  ld   $94
              b68b 0095  ld   $95
              b68c 0094  ld   $94
              b68d 0094  ld   $94
              b68e 009c  ld   $9c
              b68f 00ca  ld   $ca
              b690 0010  ld   $10
              b691 00f5  ld   $f5
              b692 00a5  ld   $a5
              b693 0089  ld   $89
              b694 0085  ld   $85
              b695 00a3  ld   $a3
              b696 0020  ld   $20
              b697 0098  ld   $98
              b698 0018  ld   $18
              b699 0020  ld   $20
              b69a 000d  ld   $0d
              b69b 0020  ld   $20
              b69c 00a9  ld   $a9
              b69d 001d  ld   $1d
              b69e 00a0  ld   $a0
              b69f 0020  ld   $20
              b6a0 0020  ld   $20
              b6a1 00af  ld   $af
              b6a2 0020  ld   $20
              b6a3 00a9  ld   $a9
              b6a4 0000  ld   $00
              b6a5 0085  ld   $85
              b6a6 00a2  ld   $a2
              b6a7 0068  ld   $68
              b6a8 0020  ld   $20
              b6a9 0031  ld   $31
              b6aa 001b  ld   $1b
              b6ab 0060  ld   $60
              b6ac 0085  ld   $85
              b6ad 00a4  ld   $a4
              b6ae 0084  ld   $84
              b6af 00a5  ld   $a5
              b6b0 0020  ld   $20
              b6b1 0042  ld   $42
              b6b2 001c  ld   $1c
              b6b3 00a9  ld   $a9
              b6b4 008a  ld   $8a
              b6b5 0020  ld   $20
              b6b6 00a0  ld   $a0
              b6b7 001a  ld   $1a
              b6b8 0020  ld   $20
              b6b9 00b3  ld   $b3
              b6ba 0020  ld   $20
              b6bb 00a9  ld   $a9
              b6bc 008a  ld   $8a
              b6bd 00a0  ld   $a0
              b6be 0000  ld   $00
              b6bf 004c  ld   $4c
              b6c0 00a0  ld   $a0
              b6c1 001a  ld   $1a
              b6c2 0085  ld   $85
              b6c3 00a4  ld   $a4
              b6c4 0084  ld   $84
              b6c5 00a5  ld   $a5
              b6c6 0020  ld   $20
              b6c7 003f  ld   $3f
              b6c8 001c  ld   $1c
              b6c9 00b1  ld   $b1
              b6ca 00a4  ld   $a4
              b6cb 0085  ld   $85
              b6cc 009a  ld   $9a
              b6cd 00a4  ld   $a4
              b6ce 00a4  ld   $a4
              b6cf 00c8  ld   $c8
              b6d0 0098  ld   $98
              b6d1 00d0  ld   $d0
              b6d2 0002  ld   $02
              b6d3 00e6  ld   $e6
              b6d4 00a5  ld   $a5
              b6d5 0085  ld   $85
              b6d6 00a4  ld   $a4
              b6d7 00a4  ld   $a4
              b6d8 00a5  ld   $a5
              b6d9 0020  ld   $20
              b6da 00a0  ld   $a0
              b6db 001a  ld   $1a
              b6dc 00a5  ld   $a5
              b6dd 00a4  ld   $a4
              b6de 00a4  ld   $a4
              b6df 00a5  ld   $a5
              b6e0 0018  ld   $18
              b6e1 0069  ld   $69
              b6e2 0005  ld   $05
              b6e3 0090  ld   $90
              b6e4 0001  ld   $01
              b6e5 00c8  ld   $c8
              b6e6 0085  ld   $85
              b6e7 00a4  ld   $a4
              b6e8 0084  ld   $84
              b6e9 00a5  ld   $a5
              b6ea 0020  ld   $20
              b6eb 00df  ld   $df
              b6ec 0018  ld   $18
              b6ed 00a9  ld   $a9
              b6ee 008f  ld   $8f
              b6ef 00a0  ld   $a0
              b6f0 0000  ld   $00
              b6f1 00c6  ld   $c6
              b6f2 009a  ld   $9a
              b6f3 00d0  ld   $d0
              b6f4 00e4  ld   $e4
              b6f5 0060  ld   $60
              b6f6 0098  ld   $98
              b6f7 0035  ld   $35
              b6f8 0044  ld   $44
              b6f9 007a  ld   $7a
              b6fa 0068  ld   $68
              b6fb fe00  bra  ac          ;+-----------------------------------+
              b6fc fcfd  bra  $b6fd       ;|                                   |
              b6fd 1418  ld   $18,y       ;| Trampoline for page $b600 lookups |
              b6fe e006  jmp  y,$06       ;|                                   |
              b6ff c218  st   [$18]       ;+-----------------------------------+
              b700 0028  ld   $28
              b701 00b1  ld   $b1
              b702 0046  ld   $46
              b703 0020  ld   $20
              b704 00a3  ld   $a3
              b705 001c  ld   $1c
              b706 0030  ld   $30
              b707 002a  ld   $2a
              b708 00d0  ld   $d0
              b709 0013  ld   $13
              b70a 00a5  ld   $a5
              b70b 0006  ld   $06
              b70c 0085  ld   $85
              b70d 0095  ld   $95
              b70e 00a5  ld   $a5
              b70f 000a  ld   $0a
              b710 0085  ld   $85
              b711 0096  ld   $96
              b712 00a5  ld   $a5
              b713 0007  ld   $07
              b714 0085  ld   $85
              b715 0097  ld   $97
              b716 00a5  ld   $a5
              b717 000b  ld   $0b
              b718 0021  ld   $21
              b719 0000  ld   $00
              b71a 0000  ld   $00
              b71b 0085  ld   $85
              b71c 0098  ld   $98
              b71d 004c  ld   $4c
              b71e 002a  ld   $2a
              b71f 0021  ld   $21
              b720 00a9  ld   $a9
              b721 0088  ld   $88
              b722 00a0  ld   $a0
              b723 0022  ld   $22
              b724 0020  ld   $20
              b725 001a  ld   $1a
              b726 001c  ld   $1c
              b727 00a9  ld   $a9
              b728 00e3  ld   $e3
              b729 00a0  ld   $a0
              b72a 0020  ld   $20
              b72b 0020  ld   $20
              b72c 00a0  ld   $a0
              b72d 001a  ld   $1a
              b72e 00a9  ld   $a9
              b72f 00e7  ld   $e7
              b730 00a0  ld   $a0
              b731 0020  ld   $20
              b732 0020  ld   $20
              b733 00df  ld   $df
              b734 0018  ld   $18
              b735 00a6  ld   $a6
              b736 0098  ld   $98
              b737 00a5  ld   $a5
              b738 0095  ld   $95
              b739 0085  ld   $85
              b73a 0098  ld   $98
              b73b 0086  ld   $86
              b73c 0095  ld   $95
              b73d 00a6  ld   $a6
              b73e 0096  ld   $96
              b73f 00a5  ld   $a5
              b740 0097  ld   $97
              b741 0085  ld   $85
              b742 0096  ld   $96
              b743 0086  ld   $86
              b744 0097  ld   $97
              b745 00a9  ld   $a9
              b746 0000  ld   $00
              b747 0085  ld   $85
              b748 0099  ld   $99
              b749 00a5  ld   $a5
              b74a 0094  ld   $94
              b74b 0085  ld   $85
              b74c 00a3  ld   $a3
              b74d 00a9  ld   $a9
              b74e 0080  ld   $80
              b74f 0085  ld   $85
              b750 0094  ld   $94
              b751 0020  ld   $20
              b752 004f  ld   $4f
              b753 0019  ld   $19
              b754 00a2  ld   $a2
              b755 0088  ld   $88
              b756 00a0  ld   $a0
              b757 0022  ld   $22
              b758 004c  ld   $4c
              b759 004c  ld   $4c
              b75a 001c  ld   $1c
              b75b 00a9  ld   $a9
              b75c 00bc  ld   $bc
              b75d 00a0  ld   $a0
              b75e 0021  ld   $21
              b75f 0020  ld   $20
              b760 00df  ld   $df
              b761 0018  ld   $18
              b762 0020  ld   $20
              b763 0084  ld   $84
              b764 001c  ld   $1c
              b765 00a9  ld   $a9
              b766 00c1  ld   $c1
              b767 00a0  ld   $a0
              b768 0021  ld   $21
              b769 00a6  ld   $a6
              b76a 00a1  ld   $a1
              b76b 0020  ld   $20
              b76c 007f  ld   $7f
              b76d 001b  ld   $1b
              b76e 0020  ld   $20
              b76f 0084  ld   $84
              b770 001c  ld   $1c
              b771 0020  ld   $20
              b772 0044  ld   $44
              b773 001d  ld   $1d
              b774 00a9  ld   $a9
              b775 0000  ld   $00
              b776 0085  ld   $85
              b777 00a2  ld   $a2
              b778 0020  ld   $20
              b779 0098  ld   $98
              b77a 0018  ld   $18
              b77b 00a9  ld   $a9
              b77c 00c6  ld   $c6
              b77d 00a0  ld   $a0
              b77e 0021  ld   $21
              b77f 0020  ld   $20
              b780 0095  ld   $95
              b781 0018  ld   $18
              b782 00a5  ld   $a5
              b783 0099  ld   $99
              b784 0048  ld   $48
              b785 0010  ld   $10
              b786 000d  ld   $0d
              b787 0020  ld   $20
              b788 008e  ld   $8e
              b789 0018  ld   $18
              b78a 00a5  ld   $a5
              b78b 0099  ld   $99
              b78c 0030  ld   $30
              b78d 0009  ld   $09
              b78e 00a5  ld   $a5
              b78f 0044  ld   $44
              b790 0049  ld   $49
              b791 00ff  ld   $ff
              b792 0085  ld   $85
              b793 0044  ld   $44
              b794 0020  ld   $20
              b795 000d  ld   $0d
              b796 0020  ld   $20
              b797 00a9  ld   $a9
              b798 00c6  ld   $c6
              b799 00a0  ld   $a0
              b79a 0021  ld   $21
              b79b 0020  ld   $20
              b79c 00df  ld   $df
              b79d 0018  ld   $18
              b79e 0068  ld   $68
              b79f 0010  ld   $10
              b7a0 0003  ld   $03
              b7a1 0020  ld   $20
              b7a2 000d  ld   $0d
              b7a3 0020  ld   $20
              b7a4 00a9  ld   $a9
              b7a5 00cb  ld   $cb
              b7a6 00a0  ld   $a0
              b7a7 0021  ld   $21
              b7a8 004c  ld   $4c
              b7a9 0099  ld   $99
              b7aa 0020  ld   $20
              b7ab 0020  ld   $20
              b7ac 0042  ld   $42
              b7ad 001c  ld   $1c
              b7ae 00a9  ld   $a9
              b7af 0000  ld   $00
              b7b0 0085  ld   $85
              b7b1 0044  ld   $44
              b7b2 0020  ld   $20
              b7b3 0047  ld   $47
              b7b4 0021  ld   $21
              b7b5 00a2  ld   $a2
              b7b6 0081  ld   $81
              b7b7 00a0  ld   $a0
              b7b8 0000  ld   $00
              b7b9 0020  ld   $20
              b7ba 003d  ld   $3d
              b7bb 0021  ld   $21
              b7bc 00a9  ld   $a9
              b7bd 008a  ld   $8a
              b7be 00a0  ld   $a0
              b7bf 0000  ld   $00
              b7c0 0020  ld   $20
              b7c1 001a  ld   $1a
              b7c2 001c  ld   $1c
              b7c3 00a9  ld   $a9
              b7c4 0000  ld   $00
              b7c5 0085  ld   $85
              b7c6 0099  ld   $99
              b7c7 00a5  ld   $a5
              b7c8 0044  ld   $44
              b7c9 0020  ld   $20
              b7ca 00b8  ld   $b8
              b7cb 0021  ld   $21
              b7cc 00a9  ld   $a9
              b7cd 0081  ld   $81
              b7ce 00a0  ld   $a0
              b7cf 0000  ld   $00
              b7d0 004c  ld   $4c
              b7d1 0087  ld   $87
              b7d2 001b  ld   $1b
              b7d3 0048  ld   $48
              b7d4 004c  ld   $4c
              b7d5 0079  ld   $79
              b7d6 0021  ld   $21
              b7d7 0081  ld   $81
              b7d8 0049  ld   $49
              b7d9 000f  ld   $0f
              b7da 00da  ld   $da
              b7db 00a2  ld   $a2
              b7dc 0083  ld   $83
              b7dd 0049  ld   $49
              b7de 000f  ld   $0f
              b7df 00da  ld   $da
              b7e0 00a2  ld   $a2
              b7e1 007f  ld   $7f
              b7e2 0000  ld   $00
              b7e3 0000  ld   $00
              b7e4 0000  ld   $00
              b7e5 0000  ld   $00
              b7e6 0005  ld   $05
              b7e7 0084  ld   $84
              b7e8 00e6  ld   $e6
              b7e9 001a  ld   $1a
              b7ea 002d  ld   $2d
              b7eb 001b  ld   $1b
              b7ec 0086  ld   $86
              b7ed 0028  ld   $28
              b7ee 0007  ld   $07
              b7ef 00fb  ld   $fb
              b7f0 00f8  ld   $f8
              b7f1 0087  ld   $87
              b7f2 0099  ld   $99
              b7f3 0068  ld   $68
              b7f4 0089  ld   $89
              b7f5 0001  ld   $01
              b7f6 0087  ld   $87
              b7f7 0023  ld   $23
              b7f8 0035  ld   $35
              b7f9 00df  ld   $df
              b7fa 00e1  ld   $e1
              b7fb fe00  bra  ac          ;+-----------------------------------+
              b7fc fcfd  bra  $b7fd       ;|                                   |
              b7fd 1418  ld   $18,y       ;| Trampoline for page $b700 lookups |
              b7fe e006  jmp  y,$06       ;|                                   |
              b7ff c218  st   [$18]       ;+-----------------------------------+
              b800 0086  ld   $86
              b801 00a5  ld   $a5
              b802 005d  ld   $5d
              b803 00e7  ld   $e7
              b804 0028  ld   $28
              b805 0083  ld   $83
              b806 0049  ld   $49
              b807 000f  ld   $0f
              b808 00da  ld   $da
              b809 00a2  ld   $a2
              b80a 00a1  ld   $a1
              b80b 0054  ld   $54
              b80c 0046  ld   $46
              b80d 008f  ld   $8f
              b80e 0013  ld   $13
              b80f 008f  ld   $8f
              b810 0052  ld   $52
              b811 0043  ld   $43
              b812 0089  ld   $89
              b813 00cd  ld   $cd
              b814 00e1  ld   $e1
              b815 004e  ld   $4e
              b816 008f  ld   $8f
              b817 0092  ld   $92
              b818 0014  ld   $14
              b819 00ad  ld   $ad
              b81a 0081  ld   $81
              b81b 0047  ld   $47
              b81c 0089  ld   $89
              b81d 00c7  ld   $c7
              b81e 00a5  ld   $a5
              b81f 0099  ld   $99
              b820 0022  ld   $22
              b821 0000  ld   $00
              b822 0000  ld   $00
              b823 0048  ld   $48
              b824 0010  ld   $10
              b825 0003  ld   $03
              b826 0020  ld   $20
              b827 000d  ld   $0d
              b828 0020  ld   $20
              b829 00a5  ld   $a5
              b82a 0094  ld   $94
              b82b 0048  ld   $48
              b82c 00c9  ld   $c9
              b82d 0081  ld   $81
              b82e 0090  ld   $90
              b82f 0007  ld   $07
              b830 00a9  ld   $a9
              b831 0034  ld   $34
              b832 00a0  ld   $a0
              b833 001a  ld   $1a
              b834 0020  ld   $20
              b835 0087  ld   $87
              b836 001b  ld   $1b
              b837 00a9  ld   $a9
              b838 002e  ld   $2e
              b839 00a0  ld   $a0
              b83a 0022  ld   $22
              b83b 0020  ld   $20
              b83c 0099  ld   $99
              b83d 0020  ld   $20
              b83e 0068  ld   $68
              b83f 00c9  ld   $c9
              b840 0081  ld   $81
              b841 0090  ld   $90
              b842 0007  ld   $07
              b843 00a9  ld   $a9
              b844 00bc  ld   $bc
              b845 00a0  ld   $a0
              b846 0021  ld   $21
              b847 0020  ld   $20
              b848 0095  ld   $95
              b849 0018  ld   $18
              b84a 0068  ld   $68
              b84b 0010  ld   $10
              b84c 0003  ld   $03
              b84d 004c  ld   $4c
              b84e 000d  ld   $0d
              b84f 0020  ld   $20
              b850 0060  ld   $60
              b851 000b  ld   $0b
              b852 0076  ld   $76
              b853 00b3  ld   $b3
              b854 0083  ld   $83
              b855 00bd  ld   $bd
              b856 00d3  ld   $d3
              b857 0079  ld   $79
              b858 001e  ld   $1e
              b859 00f4  ld   $f4
              b85a 00a6  ld   $a6
              b85b 00f5  ld   $f5
              b85c 007b  ld   $7b
              b85d 0083  ld   $83
              b85e 00fc  ld   $fc
              b85f 00b0  ld   $b0
              b860 0010  ld   $10
              b861 007c  ld   $7c
              b862 000c  ld   $0c
              b863 001f  ld   $1f
              b864 0067  ld   $67
              b865 00ca  ld   $ca
              b866 007c  ld   $7c
              b867 00de  ld   $de
              b868 0053  ld   $53
              b869 00cb  ld   $cb
              b86a 00c1  ld   $c1
              b86b 007d  ld   $7d
              b86c 0014  ld   $14
              b86d 0064  ld   $64
              b86e 0070  ld   $70
              b86f 004c  ld   $4c
              b870 007d  ld   $7d
              b871 00b7  ld   $b7
              b872 00ea  ld   $ea
              b873 0051  ld   $51
              b874 007a  ld   $7a
              b875 007d  ld   $7d
              b876 0063  ld   $63
              b877 0030  ld   $30
              b878 0088  ld   $88
              b879 007e  ld   $7e
              b87a 007e  ld   $7e
              b87b 0092  ld   $92
              b87c 0044  ld   $44
              b87d 0099  ld   $99
              b87e 003a  ld   $3a
              b87f 007e  ld   $7e
              b880 004c  ld   $4c
              b881 00cc  ld   $cc
              b882 0091  ld   $91
              b883 00c7  ld   $c7
              b884 007f  ld   $7f
              b885 00aa  ld   $aa
              b886 00aa  ld   $aa
              b887 00aa  ld   $aa
              b888 0013  ld   $13
              b889 0081  ld   $81
              b88a 0000  ld   $00
              b88b 0000  ld   $00
              b88c 0000  ld   $00
              b88d 0000  ld   $00
              b88e 00e6  ld   $e6
              b88f 00a6  ld   $a6
              b890 00d0  ld   $d0
              b891 0002  ld   $02
              b892 00e6  ld   $e6
              b893 00a7  ld   $a7
              b894 0084  ld   $84
              b895 0019  ld   $19
              b896 00a0  ld   $a0
              b897 0000  ld   $00
              b898 00b1  ld   $b1
              b899 00a6  ld   $a6
              b89a 00a4  ld   $a4
              b89b 0019  ld   $19
              b89c 00c9  ld   $c9
              b89d 003a  ld   $3a
              b89e 00b0  ld   $b0
              b89f 000a  ld   $0a
              b8a0 00c9  ld   $c9
              b8a1 0020  ld   $20
              b8a2 00f0  ld   $f0
              b8a3 00ea  ld   $ea
              b8a4 0038  ld   $38
              b8a5 00e9  ld   $e9
              b8a6 0030  ld   $30
              b8a7 0038  ld   $38
              b8a8 00e9  ld   $e9
              b8a9 00d0  ld   $d0
              b8aa 0060  ld   $60
              b8ab 0080  ld   $80
              b8ac 004f  ld   $4f
              b8ad 00c7  ld   $c7
              b8ae 0052  ld   $52
              b8af 0058  ld   $58
              b8b0 00a2  ld   $a2
              b8b1 00fb  ld   $fb
              b8b2 009a  ld   $9a
              b8b3 00a9  ld   $a9
              b8b4 004c  ld   $4c
              b8b5 0085  ld   $85
              b8b6 0087  ld   $87
              b8b7 0085  ld   $85
              b8b8 0038  ld   $38
              b8b9 00a9  ld   $a9
              b8ba 0082  ld   $82
              b8bb 00a0  ld   $a0
              b8bc 0012  ld   $12
              b8bd 0085  ld   $85
              b8be 0039  ld   $39
              b8bf 0084  ld   $84
              b8c0 003a  ld   $3a
              b8c1 00a9  ld   $a9
              b8c2 0028  ld   $28
              b8c3 0085  ld   $85
              b8c4 0019  ld   $19
              b8c5 00a9  ld   $a9
              b8c6 001e  ld   $1e
              b8c7 0085  ld   $85
              b8c8 0019  ld   $19
              b8c9 00a2  ld   $a2
              b8ca 0000  ld   $00
              b8cb 00a9  ld   $a9
              b8cc 0003  ld   $03
              b8cd 0085  ld   $85
              b8ce 0086  ld   $86
              b8cf 008a  ld   $8a
              b8d0 0085  ld   $85
              b8d1 009b  ld   $9b
              b8d2 0085  ld   $85
              b8d3 0019  ld   $19
              b8d4 0085  ld   $85
              b8d5 004a  ld   $4a
              b8d6 0048  ld   $48
              b8d7 0085  ld   $85
              b8d8 0045  ld   $45
              b8d9 00e8  ld   $e8
              b8da 008e  ld   $8e
              b8db 0002  ld   $02
              b8dc 0024  ld   $24
              b8dd 008e  ld   $8e
              b8de 0001  ld   $01
              b8df 0024  ld   $24
              b8e0 00a2  ld   $a2
              b8e1 004b  ld   $4b
              b8e2 0086  ld   $86
              b8e3 0048  ld   $48
              b8e4 00a0  ld   $a0
              b8e5 0071  ld   $71
              b8e6 0085  ld   $85
              b8e7 005d  ld   $5d
              b8e8 0084  ld   $84
              b8e9 005e  ld   $5e
              b8ea 0085  ld   $85
              b8eb 0046  ld   $46
              b8ec 0084  ld   $84
              b8ed 0047  ld   $47
              b8ee 00a8  ld   $a8
              b8ef 00e6  ld   $e6
              b8f0 0046  ld   $46
              b8f1 00d0  ld   $d0
              b8f2 0004  ld   $04
              b8f3 00e6  ld   $e6
              b8f4 0047  ld   $47
              b8f5 0030  ld   $30
              b8f6 000f  ld   $0f
              b8f7 00a9  ld   $a9
              b8f8 0055  ld   $55
              b8f9 0091  ld   $91
              b8fa 0046  ld   $46
              b8fb fe00  bra  ac          ;+-----------------------------------+
              b8fc fcfd  bra  $b8fd       ;|                                   |
              b8fd 1418  ld   $18,y       ;| Trampoline for page $b800 lookups |
              b8fe e006  jmp  y,$06       ;|                                   |
              b8ff c218  st   [$18]       ;+-----------------------------------+
              b900 00d1  ld   $d1
              b901 0046  ld   $46
              b902 00d0  ld   $d0
              b903 0007  ld   $07
              b904 000a  ld   $0a
              b905 0091  ld   $91
              b906 0046  ld   $46
              b907 00d1  ld   $d1
              b908 0046  ld   $46
              b909 00f0  ld   $f0
              b90a 00e9  ld   $e9
              b90b 00a5  ld   $a5
              b90c 0001  ld   $01
              b90d 00c9  ld   $c9
              b90e 0001  ld   $01
              b90f 00e9  ld   $e9
              b910 0000  ld   $00
              b911 0085  ld   $85
              b912 0047  ld   $47
              b913 00a5  ld   $a5
              b914 0046  ld   $46
              b915 00a4  ld   $a4
              b916 0047  ld   $47
              b917 0085  ld   $85
              b918 0069  ld   $69
              b919 0084  ld   $84
              b91a 006a  ld   $6a
              b91b 0085  ld   $85
              b91c 0065  ld   $65
              b91d 0084  ld   $84
              b91e 0066  ld   $66
              b91f 00a2  ld   $a2
              b920 0000  ld   $00
              b921 00a0  ld   $a0
              b922 0071  ld   $71
              b923 0086  ld   $86
              b924 005d  ld   $5d
              b925 0084  ld   $84
              b926 005e  ld   $5e
              b927 00a0  ld   $a0
              b928 0023  ld   $23
              b929 0000  ld   $00
              b92a 004e  ld   $4e
              b92b 0000  ld   $00
              b92c 0098  ld   $98
              b92d 0091  ld   $91
              b92e 005d  ld   $5d
              b92f 00e6  ld   $e6
              b930 005d  ld   $5d
              b931 00a5  ld   $a5
              b932 005d  ld   $5d
              b933 00a4  ld   $a4
              b934 005e  ld   $5e
              b935 0020  ld   $20
              b936 001b  ld   $1b
              b937 0005  ld   $05
              b938 00a9  ld   $a9
              b939 003b  ld   $3b
              b93a 00a0  ld   $a0
              b93b 0023  ld   $23
              b93c 0020  ld   $20
              b93d 00ef  ld   $ef
              b93e 000b  ld   $0b
              b93f 00a5  ld   $a5
              b940 0069  ld   $69
              b941 0038  ld   $38
              b942 00e5  ld   $e5
              b943 005d  ld   $5d
              b944 00aa  ld   $aa
              b945 00a5  ld   $a5
              b946 006a  ld   $6a
              b947 00e5  ld   $e5
              b948 005e  ld   $5e
              b949 0020  ld   $20
              b94a 0045  ld   $45
              b94b 001e  ld   $1e
              b94c 00a9  ld   $a9
              b94d 002e  ld   $2e
              b94e 00a0  ld   $a0
              b94f 0023  ld   $23
              b950 0020  ld   $20
              b951 00ef  ld   $ef
              b952 000b  ld   $0b
              b953 0020  ld   $20
              b954 0044  ld   $44
              b955 0007  ld   $07
              b956 004c  ld   $4c
              b957 0071  ld   $71
              b958 0005  ld   $05
              b959 0020  ld   $20
              b95a 0042  ld   $42
              b95b 0059  ld   $59
              b95c 0054  ld   $54
              b95d 0045  ld   $45
              b95e 0053  ld   $53
              b95f 0020  ld   $20
              b960 0046  ld   $46
              b961 0052  ld   $52
              b962 0045  ld   $45
              b963 0045  ld   $45
              b964 000d  ld   $0d
              b965 0000  ld   $00
              b966 0023  ld   $23
              b967 0023  ld   $23
              b968 0023  ld   $23
              b969 0020  ld   $20
              b96a 004d  ld   $4d
              b96b 0053  ld   $53
              b96c 0020  ld   $20
              b96d 0042  ld   $42
              b96e 0041  ld   $41
              b96f 0053  ld   $53
              b970 0049  ld   $49
              b971 0043  ld   $43
              b972 0020  ld   $20
              b973 0023  ld   $23
              b974 0023  ld   $23
              b975 0023  ld   $23
              b976 000d  ld   $0d
              b977 000d  ld   $0d
              b978 0000  ld   $00
              b979 0024  ld   $24
              b97a 0000  ld   $00
              b97b 0038  ld   $38
              b97c 0011  ld   $11
              b97d 0000  ld   $00
              b97e 000b  ld   $0b
              b97f 002b  ld   $2b
              b980 0022  ld   $22
              b981 0059  ld   $59
              b982 0003  ld   $03
              b983 00b4  ld   $b4
              b984 00e6  ld   $e6
              b985 0011  ld   $11
              b986 0000  ld   $00
              b987 0002  ld   $02
              b988 002b  ld   $2b
              b989 0030  ld   $30
              b98a 0059  ld   $59
              b98b 0000  ld   $00
              b98c 00f3  ld   $f3
              b98d 0030  ld   $30
              b98e 0093  ld   $93
              b98f 0030  ld   $30
              b990 0093  ld   $93
              b991 0030  ld   $30
              b992 00f3  ld   $f3
              b993 0030  ld   $30
              b994 0011  ld   $11
              b995 0000  ld   $00
              b996 0001  ld   $01
              b997 002b  ld   $2b
              b998 0030  ld   $30
              b999 0011  ld   $11
              b99a 0000  ld   $00
              b99b 0027  ld   $27
              b99c 002b  ld   $2b
              b99d 0032  ld   $32
              b99e 0011  ld   $11
              b99f 0000  ld   $00
              b9a0 00a0  ld   $a0
              b9a1 002b  ld   $2b
              b9a2 0024  ld   $24
              b9a3 0011  ld   $11
              b9a4 0060  ld   $60
              b9a5 0070  ld   $70
              b9a6 002b  ld   $2b
              b9a7 0026  ld   $26
              b9a8 0011  ld   $11
              b9a9 0003  ld   $03
              b9aa 000b  ld   $0b
              b9ab 002b  ld   $2b
              b9ac 0022  ld   $22
              b9ad 00b4  ld   $b4
              b9ae 00f3  ld   $f3
              b9af 0011  ld   $11
              b9b0 0000  ld   $00
              b9b1 0025  ld   $25
              b9b2 00cf  ld   $cf
              b9b3 0018  ld   $18
              b9b4 0025  ld   $25
              b9b5 0000  ld   $00
              b9b6 0054  ld   $54
              b9b7 0011  ld   $11
              b9b8 0000  ld   $00
              b9b9 0001  ld   $01
              b9ba 002b  ld   $2b
              b9bb 0030  ld   $30
              b9bc 0011  ld   $11
              b9bd 00e0  ld   $e0
              b9be 0001  ld   $01
              b9bf 002b  ld   $2b
              b9c0 0034  ld   $34
              b9c1 0059  ld   $59
              b9c2 0023  ld   $23
              b9c3 002b  ld   $2b
              b9c4 0036  ld   $36
              b9c5 0021  ld   $21
              b9c6 0034  ld   $34
              b9c7 0035  ld   $35
              b9c8 0050  ld   $50
              b9c9 001b  ld   $1b
              b9ca 0021  ld   $21
              b9cb 0036  ld   $36
              b9cc 00f0  ld   $f0
              b9cd 0030  ld   $30
              b9ce 0093  ld   $93
              b9cf 0036  ld   $36
              b9d0 0021  ld   $21
              b9d1 0034  ld   $34
              b9d2 0090  ld   $90
              b9d3 0023  ld   $23
              b9d4 0059  ld   $59
              b9d5 0070  ld   $70
              b9d6 00f0  ld   $f0
              b9d7 0030  ld   $30
              b9d8 0021  ld   $21
              b9d9 0034  ld   $34
              b9da 00e3  ld   $e3
              b9db 0010  ld   $10
              b9dc 00e9  ld   $e9
              b9dd 002b  ld   $2b
              b9de 0034  ld   $34
              b9df 0093  ld   $93
              b9e0 0030  ld   $30
              b9e1 0093  ld   $93
              b9e2 0030  ld   $30
              b9e3 001a  ld   $1a
              b9e4 0030  ld   $30
              b9e5 008c  ld   $8c
              b9e6 00f0  ld   $f0
              b9e7 0035  ld   $35
              b9e8 0072  ld   $72
              b9e9 000c  ld   $0c
              b9ea 0011  ld   $11
              b9eb 0001  ld   $01
              b9ec 0001  ld   $01
              b9ed 002b  ld   $2b
              b9ee 0030  ld   $30
              b9ef 0059  ld   $59
              b9f0 0060  ld   $60
              b9f1 00f0  ld   $f0
              b9f2 0030  ld   $30
              b9f3 0059  ld   $59
              b9f4 0006  ld   $06
              b9f5 005e  ld   $5e
              b9f6 002a  ld   $2a
              b9f7 0059  ld   $59
              b9f8 000d  ld   $0d
              b9f9 00cf  ld   $cf
              b9fa 0032  ld   $32
              b9fb fe00  bra  ac          ;+-----------------------------------+
              b9fc fcfd  bra  $b9fd       ;|                                   |
              b9fd 1418  ld   $18,y       ;| Trampoline for page $b900 lookups |
              b9fe e006  jmp  y,$06       ;|                                   |
              b9ff c218  st   [$18]       ;+-----------------------------------+
              ba00 001a  ld   $1a
              ba01 002a  ld   $2a
              ba02 00e6  ld   $e6
              ba03 0001  ld   $01
              ba04 0035  ld   $35
              ba05 004d  ld   $4d
              ba06 003c  ld   $3c
              ba07 0011  ld   $11
              ba08 0000  ld   $00
              ba09 0026  ld   $26
              ba0a 002b  ld   $2b
              ba0b 001a  ld   $1a
              ba0c 0011  ld   $11
              ba0d 008d  ld   $8d
              ba0e 0022  ld   $22
              ba0f 00ff  ld   $ff
              ba10 0026  ld   $26
              ba11 0000  ld   $00
              ba12 0047  ld   $47
              ba13 002b  ld   $2b
              ba14 001a  ld   $1a
              ba15 0011  ld   $11
              ba16 000c  ld   $0c
              ba17 000b  ld   $0b
              ba18 002b  ld   $2b
              ba19 0022  ld   $22
              ba1a 00b4  ld   $b4
              ba1b 00e6  ld   $e6
              ba1c 0075  ld   $75
              ba1d 00cf  ld   $cf
              ba1e 0032  ld   $32
              ba1f 0063  ld   $63
              ba20 0090  ld   $90
              ba21 0000  ld   $00
              ba22 0011  ld   $11
              ba23 00e1  ld   $e1
              ba24 0004  ld   $04
              ba25 002b  ld   $2b
              ba26 0022  ld   $22
              ba27 0011  ld   $11
              ba28 0000  ld   $00
              ba29 000b  ld   $0b
              ba2a 002b  ld   $2b
              ba2b 0024  ld   $24
              ba2c 0021  ld   $21
              ba2d 0030  ld   $30
              ba2e 002b  ld   $2b
              ba2f 0028  ld   $28
              ba30 00e3  ld   $e3
              ba31 0006  ld   $06
              ba32 002b  ld   $2b
              ba33 0030  ld   $30
              ba34 0059  ld   $59
              ba35 0005  ld   $05
              ba36 002b  ld   $2b
              ba37 0034  ld   $34
              ba38 0021  ld   $21
              ba39 0036  ld   $36
              ba3a 007f  ld   $7f
              ba3b 0000  ld   $00
              ba3c 0082  ld   $82
              ba3d 00fe  ld   $fe
              ba3e 005e  ld   $5e
              ba3f 0026  ld   $26
              ba40 0011  ld   $11
              ba41 0000  ld   $00
              ba42 0007  ld   $07
              ba43 0099  ld   $99
              ba44 0028  ld   $28
              ba45 00ad  ld   $ad
              ba46 0035  ld   $35
              ba47 003f  ld   $3f
              ba48 0036  ld   $36
              ba49 0093  ld   $93
              ba4a 0026  ld   $26
              ba4b 00b4  ld   $b4
              ba4c 00cb  ld   $cb
              ba4d 0093  ld   $93
              ba4e 0036  ld   $36
              ba4f 0093  ld   $93
              ba50 0028  ld   $28
              ba51 0021  ld   $21
              ba52 0034  ld   $34
              ba53 00e6  ld   $e6
              ba54 0001  ld   $01
              ba55 0035  ld   $35
              ba56 004d  ld   $4d
              ba57 0021  ld   $21
              ba58 0063  ld   $63
              ba59 00ff  ld   $ff
              ba5a 0027  ld   $27
              ba5b 0000  ld   $00
              ba5c 0059  ld   $59
              ba5d 0075  ld   $75
              ba5e 00e6  ld   $e6
              ba5f 00ff  ld   $ff
              ba60 0035  ld   $35
              ba61 003f  ld   $3f
              ba62 0041  ld   $41
              ba63 00e3  ld   $e3
              ba64 00df  ld   $df
              ba65 0035  ld   $35
              ba66 0053  ld   $53
              ba67 001a  ld   $1a
              ba68 002b  ld   $2b
              ba69 0024  ld   $24
              ba6a 0011  ld   $11
              ba6b 0000  ld   $00
              ba6c 0029  ld   $29
              ba6d 00cf  ld   $cf
              ba6e 0018  ld   $18
              ba6f 0035  ld   $35
              ba70 0072  ld   $72
              ba71 0015  ld   $15
              ba72 0063  ld   $63
              ba73 00ff  ld   $ff
              ba74 0011  ld   $11
              ba75 009b  ld   $9b
              ba76 0007  ld   $07
              ba77 0090  ld   $90
              ba78 003f  ld   $3f
              ba79 00e6  ld   $e6
              ba7a 005f  ld   $5f
              ba7b 0035  ld   $35
              ba7c 0056  ld   $56
              ba7d 0022  ld   $22
              ba7e 0011  ld   $11
              ba7f 00c0  ld   $c0
              ba80 00ff  ld   $ff
              ba81 00e3  ld   $e3
              ba82 002d  ld   $2d
              ba83 0035  ld   $35
              ba84 0053  ld   $53
              ba85 0030  ld   $30
              ba86 00e3  ld   $e3
              ba87 0032  ld   $32
              ba88 002b  ld   $2b
              ba89 0034  ld   $34
              ba8a 0011  ld   $11
              ba8b 0000  ld   $00
              ba8c 0007  ld   $07
              ba8d 0090  ld   $90
              ba8e 0035  ld   $35
              ba8f 002b  ld   $2b
              ba90 0034  ld   $34
              ba91 0011  ld   $11
              ba92 0000  ld   $00
              ba93 0008  ld   $08
              ba94 002b  ld   $2b
              ba95 0036  ld   $36
              ba96 0021  ld   $21
              ba97 0034  ld   $34
              ba98 00e9  ld   $e9
              ba99 00e9  ld   $e9
              ba9a 0099  ld   $99
              ba9b 0034  ld   $34
              ba9c 0099  ld   $99
              ba9d 0036  ld   $36
              ba9e 0090  ld   $90
              ba9f 0044  ld   $44
              baa0 0011  ld   $11
              baa1 000c  ld   $0c
              baa2 0008  ld   $08
              baa3 002b  ld   $2b
              baa4 0036  ld   $36
              baa5 001a  ld   $1a
              baa6 0030  ld   $30
              baa7 00e6  ld   $e6
              baa8 00fb  ld   $fb
              baa9 0035  ld   $35
              baaa 0056  ld   $56
              baab 0052  ld   $52
              baac 0011  ld   $11
              baad 0000  ld   $00
              baae 0028  ld   $28
              baaf 00cf  ld   $cf
              bab0 0018  ld   $18
              bab1 0011  ld   $11
              bab2 000f  ld   $0f
              bab3 0026  ld   $26
              bab4 00cf  ld   $cf
              bab5 0018  ld   $18
              bab6 0028  ld   $28
              bab7 0000  ld   $00
              bab8 004c  ld   $4c
              bab9 0011  ld   $11
              baba 00e1  ld   $e1
              babb 0004  ld   $04
              babc 002b  ld   $2b
              babd 0022  ld   $22
              babe 0011  ld   $11
              babf 0000  ld   $00
              bac0 000b  ld   $0b
              bac1 002b  ld   $2b
              bac2 0024  ld   $24
              bac3 0059  ld   $59
              bac4 0062  ld   $62
              bac5 005e  ld   $5e
              bac6 0030  ld   $30
              bac7 00e3  ld   $e3
              bac8 009e  ld   $9e
              bac9 002b  ld   $2b
              baca 0034  ld   $34
              bacb 00ad  ld   $ad
              bacc 005e  ld   $5e
              bacd 0031  ld   $31
              bace 0021  ld   $21
              bacf 0030  ld   $30
              bad0 00e6  ld   $e6
              bad1 0002  ld   $02
              bad2 002b  ld   $2b
              bad3 0028  ld   $28
              bad4 0011  ld   $11
              bad5 0000  ld   $00
              bad6 0007  ld   $07
              bad7 0099  ld   $99
              bad8 0028  ld   $28
              bad9 00ad  ld   $ad
              bada 0082  ld   $82
              badb 0001  ld   $01
              badc 005e  ld   $5e
              badd 0026  ld   $26
              bade 00b4  ld   $b4
              badf 00cb  ld   $cb
              bae0 0093  ld   $93
              bae1 0028  ld   $28
              bae2 001a  ld   $1a
              bae3 0028  ld   $28
              bae4 0035  ld   $35
              bae5 0072  ld   $72
              bae6 0019  ld   $19
              bae7 0021  ld   $21
              bae8 0034  ld   $34
              bae9 00e3  ld   $e3
              baea 0016  ld   $16
              baeb 002b  ld   $2b
              baec 0028  ld   $28
              baed 00ad  ld   $ad
              baee 005e  ld   $5e
              baef 0026  ld   $26
              baf0 0021  ld   $21
              baf1 0034  ld   $34
              baf2 00ad  ld   $ad
              baf3 00f0  ld   $f0
              baf4 0028  ld   $28
              baf5 001a  ld   $1a
              baf6 0026  ld   $26
              baf7 00f0  ld   $f0
              baf8 0034  ld   $34
              baf9 0093  ld   $93
              bafa 0034  ld   $34
              bafb fe00  bra  ac          ;+-----------------------------------+
              bafc fcfd  bra  $bafd       ;|                                   |
              bafd 1418  ld   $18,y       ;| Trampoline for page $ba00 lookups |
              bafe e006  jmp  y,$06       ;|                                   |
              baff c218  st   [$18]       ;+-----------------------------------+
              bb00 0093  ld   $93
              bb01 0034  ld   $34
              bb02 001a  ld   $1a
              bb03 0034  ld   $34
              bb04 008c  ld   $8c
              bb05 00da  ld   $da
              bb06 0035  ld   $35
              bb07 0072  ld   $72
              bb08 002c  ld   $2c
              bb09 00ff  ld   $ff
              bb0a 0029  ld   $29
              bb0b 0000  ld   $00
              bb0c 001f  ld   $1f
              bb0d 0021  ld   $21
              bb0e 0024  ld   $24
              bb0f 00e3  ld   $e3
              bb10 0013  ld   $13
              bb11 0035  ld   $35
              bb12 0072  ld   $72
              bb13 000d  ld   $0d
              bb14 0075  ld   $75
              bb15 0011  ld   $11
              bb16 0000  ld   $00
              bb17 0028  ld   $28
              bb18 00cf  ld   $cf
              bb19 0018  ld   $18
              bb1a 0063  ld   $63
              bb1b 00ff  ld   $ff
              bb1c 00e3  ld   $e3
              bb1d 0003  ld   $03
              bb1e 0035  ld   $35
              bb1f 003f  ld   $3f
              bb20 001c  ld   $1c
              bb21 00e3  ld   $e3
              bb22 0003  ld   $03
              bb23 0035  ld   $35
              bb24 0072  ld   $72
              bb25 001c  ld   $1c
              bb26 0059  ld   $59
              bb27 0006  ld   $06
              bb28 005e  ld   $5e
              bb29 002c  ld   $2c
              bb2a 0063  ld   $63
              bb2b 00ff  ld   $ff
              bb2c 002a  ld   $2a
              bb2d 0000  ld   $00
              bb2e 003e  ld   $3e
              bb2f 00a5  ld   $a5
              bb30 000f  ld   $0f
              bb31 0085  ld   $85
              bb32 003e  ld   $3e
              bb33 00a5  ld   $a5
              bb34 000f  ld   $0f
              bb35 00c5  ld   $c5
              bb36 003e  ld   $3e
              bb37 00d0  ld   $d0
              bb38 001b  ld   $1b
              bb39 00a5  ld   $a5
              bb3a 000e  ld   $0e
              bb3b 0029  ld   $29
              bb3c 000f  ld   $0f
              bb3d 00d0  ld   $d0
              bb3e 00f4  ld   $f4
              bb3f 00a5  ld   $a5
              bb40 000e  ld   $0e
              bb41 0029  ld   $29
              bb42 0010  ld   $10
              bb43 00d0  ld   $d0
              bb44 0003  ld   $03
              bb45 00a9  ld   $a9
              bb46 0020  ld   $20
              bb47 002c  ld   $2c
              bb48 00a9  ld   $a9
              bb49 007f  ld   $7f
              bb4a 0000  ld   $00
              bb4b 0020  ld   $20
              bb4c 0032  ld   $32
              bb4d 002a  ld   $2a
              bb4e 0020  ld   $20
              bb4f 0000  ld   $00
              bb50 002e  ld   $2e
              bb51 004c  ld   $4c
              bb52 0004  ld   $04
              bb53 002a  ld   $2a
              bb54 00c9  ld   $c9
              bb55 00ff  ld   $ff
              bb56 00f0  ld   $f0
              bb57 00d9  ld   $d9
              bb58 0048  ld   $48
              bb59 00a9  ld   $a9
              bb5a 0020  ld   $20
              bb5b 0000  ld   $00
              bb5c 0020  ld   $20
              bb5d 0032  ld   $32
              bb5e 002a  ld   $2a
              bb5f 0068  ld   $68
              bb60 0060  ld   $60
              bb61 00a5  ld   $a5
              bb62 0030  ld   $30
              bb63 0038  ld   $38
              bb64 00e9  ld   $e9
              bb65 0006  ld   $06
              bb66 00c9  ld   $c9
              bb67 0060  ld   $60
              bb68 0090  ld   $90
              bb69 0002  ld   $02
              bb6a 0085  ld   $85
              bb6b 0030  ld   $30
              bb6c 0060  ld   $60
              bb6d 002b  ld   $2b
              bb6e 0000  ld   $00
              bb6f 0013  ld   $13
              bb70 0085  ld   $85
              bb71 0043  ld   $43
              bb72 0048  ld   $48
              bb73 0008  ld   $08
              bb74 008a  ld   $8a
              bb75 0048  ld   $48
              bb76 0098  ld   $98
              bb77 0048  ld   $48
              bb78 00a5  ld   $a5
              bb79 0043  ld   $43
              bb7a 0000  ld   $00
              bb7b 0068  ld   $68
              bb7c 00a8  ld   $a8
              bb7d 0068  ld   $68
              bb7e 00aa  ld   $aa
              bb7f 0028  ld   $28
              bb80 0068  ld   $68
              bb81 0018  ld   $18
              bb82 0060  ld   $60
              bb83 002c  ld   $2c
              bb84 0000  ld   $00
              bb85 0041  ld   $41
              bb86 0024  ld   $24
              bb87 0043  ld   $43
              bb88 0050  ld   $50
              bb89 0018  ld   $18
              bb8a 00a5  ld   $a5
              bb8b 000f  ld   $0f
              bb8c 00c9  ld   $c9
              bb8d 00ff  ld   $ff
              bb8e 0069  ld   $69
              bb8f 0000  ld   $00
              bb90 00c9  ld   $c9
              bb91 0060  ld   $60
              bb92 00d0  ld   $d0
              bb93 0002  ld   $02
              bb94 00a9  ld   $a9
              bb95 001f  ld   $1f
              bb96 0090  ld   $90
              bb97 0002  ld   $02
              bb98 00e9  ld   $e9
              bb99 0020  ld   $20
              bb9a 00c9  ld   $c9
              bb9b 000a  ld   $0a
              bb9c 00d0  ld   $d0
              bb9d 0002  ld   $02
              bb9e 00a9  ld   $a9
              bb9f 000d  ld   $0d
              bba0 0018  ld   $18
              bba1 0060  ld   $60
              bba2 008a  ld   $8a
              bba3 0048  ld   $48
              bba4 0098  ld   $98
              bba5 0048  ld   $48
              bba6 0020  ld   $20
              bba7 0000  ld   $00
              bba8 002a  ld   $2a
              bba9 0020  ld   $20
              bbaa 000a  ld   $0a
              bbab 002c  ld   $2c
              bbac 00c9  ld   $c9
              bbad 0007  ld   $07
              bbae 00d0  ld   $d0
              bbaf 0004  ld   $04
              bbb0 0000  ld   $00
              bbb1 004c  ld   $4c
              bbb2 0020  ld   $20
              bbb3 002c  ld   $2c
              bbb4 00c9  ld   $c9
              bbb5 000d  ld   $0d
              bbb6 0090  ld   $90
              bbb7 00ee  ld   $ee
              bbb8 00f0  ld   $f0
              bbb9 0003  ld   $03
              bbba 0048  ld   $48
              bbbb 0000  ld   $00
              bbbc 0068  ld   $68
              bbbd 0085  ld   $85
              bbbe 003e  ld   $3e
              bbbf 0068  ld   $68
              bbc0 00a8  ld   $a8
              bbc1 0068  ld   $68
              bbc2 00aa  ld   $aa
              bbc3 00a5  ld   $a5
              bbc4 003e  ld   $3e
              bbc5 0018  ld   $18
              bbc6 0060  ld   $60
              bbc7 002d  ld   $2d
              bbc8 0000  ld   $00
              bbc9 0018  ld   $18
              bbca 00a5  ld   $a5
              bbcb 000f  ld   $0f
              bbcc 00c9  ld   $c9
              bbcd 0003  ld   $03
              bbce 00d0  ld   $d0
              bbcf 0003  ld   $03
              bbd0 004c  ld   $4c
              bbd1 0026  ld   $26
              bbd2 0009  ld   $09
              bbd3 00a5  ld   $a5
              bbd4 000e  ld   $0e
              bbd5 00cd  ld   $cd
              bbd6 0003  ld   $03
              bbd7 0002  ld   $02
              bbd8 0010  ld   $10
              bbd9 0007  ld   $07
              bbda 0084  ld   $84
              bbdb 003e  ld   $3e
              bbdc 0020  ld   $20
              bbdd 0000  ld   $00
              bbde 002e  ld   $2e
              bbdf 00a4  ld   $a4
              bbe0 003e  ld   $3e
              bbe1 0060  ld   $60
              bbe2 002e  ld   $2e
              bbe3 0000  ld   $00
              bbe4 0036  ld   $36
              bbe5 00a5  ld   $a5
              bbe6 000e  ld   $0e
              bbe7 00a8  ld   $a8
              bbe8 0038  ld   $38
              bbe9 00ed  ld   $ed
              bbea 0003  ld   $03
              bbeb 0002  ld   $02
              bbec 008c  ld   $8c
              bbed 0003  ld   $03
              bbee 0002  ld   $02
              bbef 0018  ld   $18
              bbf0 006d  ld   $6d
              bbf1 0002  ld   $02
              bbf2 0002  ld   $02
              bbf3 008d  ld   $8d
              bbf4 0002  ld   $02
              bbf5 0002  ld   $02
              bbf6 00a9  ld   $a9
              bbf7 0000  ld   $00
              bbf8 006d  ld   $6d
              bbf9 0001  ld   $01
              bbfa 0002  ld   $02
              bbfb fe00  bra  ac          ;+-----------------------------------+
              bbfc fcfd  bra  $bbfd       ;|                                   |
              bbfd 1418  ld   $18,y       ;| Trampoline for page $bb00 lookups |
              bbfe e006  jmp  y,$06       ;|                                   |
              bbff c218  st   [$18]       ;+-----------------------------------+
              bc00 008d  ld   $8d
              bc01 0001  ld   $01
              bc02 0002  ld   $02
              bc03 00a9  ld   $a9
              bc04 0000  ld   $00
              bc05 006d  ld   $6d
              bc06 0000  ld   $00
              bc07 0002  ld   $02
              bc08 008d  ld   $8d
              bc09 0000  ld   $00
              bc0a 0002  ld   $02
              bc0b 00ad  ld   $ad
              bc0c 0001  ld   $01
              bc0d 0002  ld   $02
              bc0e 00c9  ld   $c9
              bc0f 001a  ld   $1a
              bc10 00ad  ld   $ad
              bc11 0000  ld   $00
              bc12 0002  ld   $02
              bc13 00e9  ld   $e9
              bc14 004f  ld   $4f
              bc15 0090  ld   $90
              bc16 0008  ld   $08
              bc17 00a9  ld   $a9
              bc18 0000  ld   $00
              bc19 008d  ld   $8d
              bc1a 0000  ld   $00
              bc1b 0002  ld   $02
              bc1c 008d  ld   $8d
              bc1d 0001  ld   $01
              bc1e 0002  ld   $02
              bc1f 0060  ld   $60
              bc20 002f  ld   $2f
              bc21 0000  ld   $00
              bc22 002a  ld   $2a
              bc23 00c9  ld   $c9
              bc24 005f  ld   $5f
              bc25 00f0  ld   $f0
              bc26 0005  ld   $05
              bc27 00e0  ld   $e0
              bc28 005a  ld   $5a
              bc29 00b0  ld   $b0
              bc2a 0011  ld   $11
              bc2b 0060  ld   $60
              bc2c 008a  ld   $8a
              bc2d 0048  ld   $48
              bc2e 0020  ld   $20
              bc2f 0032  ld   $32
              bc30 002a  ld   $2a
              bc31 00a9  ld   $a9
              bc32 0020  ld   $20
              bc33 0000  ld   $00
              bc34 0020  ld   $20
              bc35 0032  ld   $32
              bc36 002a  ld   $2a
              bc37 0068  ld   $68
              bc38 00aa  ld   $aa
              bc39 00f0  ld   $f0
              bc3a 0008  ld   $08
              bc3b 00ca  ld   $ca
              bc3c 0020  ld   $20
              bc3d 0032  ld   $32
              bc3e 002a  ld   $2a
              bc3f 0090  ld   $90
              bc40 0003  ld   $03
              bc41 00a9  ld   $a9
              bc42 0000  ld   $00
              bc43 0060  ld   $60
              bc44 00a9  ld   $a9
              bc45 003f  ld   $3f
              bc46 0000  ld   $00
              bc47 00a9  ld   $a9
              bc48 000d  ld   $0d
              bc49 0000  ld   $00
              bc4a 00a2  ld   $a2
              bc4b 0000  ld   $00
              bc4c 0060  ld   $60
              bc4d 0030  ld   $30
              bc4e 0000  ld   $00
              bc4f 0050  ld   $50
              bc50 0008  ld   $08
              bc51 0048  ld   $48
              bc52 00a0  ld   $a0
              bc53 0000  ld   $00
              bc54 00b9  ld   $b9
              bc55 002a  ld   $2a
              bc56 0030  ld   $30
              bc57 00c8  ld   $c8
              bc58 0020  ld   $20
              bc59 0000  ld   $00
              bc5a 002b  ld   $2b
              bc5b 00d0  ld   $d0
              bc5c 00f7  ld   $f7
              bc5d 00a9  ld   $a9
              bc5e 0005  ld   $05
              bc5f 00a0  ld   $a0
              bc60 0024  ld   $24
              bc61 0085  ld   $85
              bc62 0034  ld   $34
              bc63 0084  ld   $84
              bc64 0035  ld   $35
              bc65 00a9  ld   $a9
              bc66 0000  ld   $00
              bc67 0085  ld   $85
              bc68 0036  ld   $36
              bc69 00a9  ld   $a9
              bc6a 000a  ld   $0a
              bc6b 0085  ld   $85
              bc6c 0037  ld   $37
              bc6d 00a9  ld   $a9
              bc6e 00fe  ld   $fe
              bc6f 00a0  ld   $a0
              bc70 0030  ld   $30
              bc71 0085  ld   $85
              bc72 0016  ld   $16
              bc73 0084  ld   $84
              bc74 0017  ld   $17
              bc75 0068  ld   $68
              bc76 0028  ld   $28
              bc77 004c  ld   $4c
              bc78 009c  ld   $9c
              bc79 0007  ld   $07
              bc7a 000d  ld   $0d
              bc7b 0053  ld   $53
              bc7c 0045  ld   $45
              bc7d 004e  ld   $4e
              bc7e 0044  ld   $44
              bc7f 0049  ld   $49
              bc80 004e  ld   $4e
              bc81 0047  ld   $47
              bc82 0020  ld   $20
              bc83 0054  ld   $54
              bc84 004f  ld   $4f
              bc85 0020  ld   $20
              bc86 0042  ld   $42
              bc87 0041  ld   $41
              bc88 0042  ld   $42
              bc89 0045  ld   $45
              bc8a 004c  ld   $4c
              bc8b 0046  ld   $46
              bc8c 0049  ld   $49
              bc8d 0053  ld   $53
              bc8e 0048  ld   $48
              bc8f 000d  ld   $0d
              bc90 0000  ld   $00
              bc91 0021  ld   $21
              bc92 0034  ld   $34
              bc93 00ad  ld   $ad
              bc94 00cf  ld   $cf
              bc95 0032  ld   $32
              bc96 0011  ld   $11
              bc97 0000  ld   $00
              bc98 0026  ld   $26
              bc99 002b  ld   $2b
              bc9a 001a  ld   $1a
              bc9b 00ee  ld   $ee
              bc9c 0000  ld   $00
              bc9d 00df  ld   $df
              bc9e 0002  ld   $02
              bc9f 00ff  ld   $ff
              bca0 0031  ld   $31
              bca1 0000  ld   $00
              bca2 005a  ld   $5a
              bca3 00ee  ld   $ee
              bca4 0003  ld   $03
              bca5 00f0  ld   $f0
              bca6 0034  ld   $34
              bca7 001a  ld   $1a
              bca8 0037  ld   $37
              bca9 008c  ld   $8c
              bcaa 000a  ld   $0a
              bcab 0035  ld   $35
              bcac 0072  ld   $72
              bcad 0017  ld   $17
              bcae 0021  ld   $21
              bcaf 0034  ld   $34
              bcb0 00ad  ld   $ad
              bcb1 00e6  ld   $e6
              bcb2 0020  ld   $20
              bcb3 0035  ld   $35
              bcb4 0056  ld   $56
              bcb5 0017  ld   $17
              bcb6 0075  ld   $75
              bcb7 0011  ld   $11
              bcb8 0041  ld   $41
              bcb9 0030  ld   $30
              bcba 00cf  ld   $cf
              bcbb 0018  ld   $18
              bcbc 001a  ld   $1a
              bcbd 0036  ld   $36
              bcbe 00e3  ld   $e3
              bcbf 0008  ld   $08
              bcc0 005e  ld   $5e
              bcc1 0036  ld   $36
              bcc2 0021  ld   $21
              bcc3 0034  ld   $34
              bcc4 00ad  ld   $ad
              bcc5 005e  ld   $5e
              bcc6 0037  ld   $37
              bcc7 0093  ld   $93
              bcc8 0034  ld   $34
              bcc9 008c  ld   $8c
              bcca 000a  ld   $0a
              bccb 0035  ld   $35
              bccc 003f  ld   $3f
              bccd 002b  ld   $2b
              bcce 001a  ld   $1a
              bccf 0036  ld   $36
              bcd0 0035  ld   $35
              bcd1 0072  ld   $72
              bcd2 004f  ld   $4f
              bcd3 0011  ld   $11
              bcd4 0005  ld   $05
              bcd5 0024  ld   $24
              bcd6 002b  ld   $2b
              bcd7 0034  ld   $34
              bcd8 002b  ld   $2b
              bcd9 0024  ld   $24
              bcda 0059  ld   $59
              bcdb 0001  ld   $01
              bcdc 005e  ld   $5e
              bcdd 0026  ld   $26
              bcde 001a  ld   $1a
              bcdf 0036  ld   $36
              bce0 005e  ld   $5e
              bce1 0027  ld   $27
              bce2 0011  ld   $11
              bce3 0006  ld   $06
              bce4 000b  ld   $0b
              bce5 002b  ld   $2b
              bce6 0022  ld   $22
              bce7 00b4  ld   $b4
              bce8 00e6  ld   $e6
              bce9 0035  ld   $35
              bcea 003f  ld   $3f
              bceb 004b  ld   $4b
              bcec 0059  ld   $59
              bced 0003  ld   $03
              bcee 005e  ld   $5e
              bcef 000f  ld   $0f
              bcf0 0059  ld   $59
              bcf1 0000  ld   $00
              bcf2 005e  ld   $5e
              bcf3 0036  ld   $36
              bcf4 0011  ld   $11
              bcf5 000c  ld   $0c
              bcf6 000b  ld   $0b
              bcf7 002b  ld   $2b
              bcf8 0022  ld   $22
              bcf9 00b4  ld   $b4
              bcfa 00e6  ld   $e6
              bcfb fe00  bra  ac          ;+-----------------------------------+
              bcfc fcfd  bra  $bcfd       ;|                                   |
              bcfd 1418  ld   $18,y       ;| Trampoline for page $bc00 lookups |
              bcfe e006  jmp  y,$06       ;|                                   |
              bcff c218  st   [$18]       ;+-----------------------------------+
              bd00 0090  ld   $90
              bd01 00fe  ld   $fe
              bd02 0032  ld   $32
              bd03 0000  ld   $00
              bd04 0025  ld   $25
              bd05 00a0  ld   $a0
              bd06 0000  ld   $00
              bd07 00b9  ld   $b9
              bd08 000e  ld   $0e
              bd09 0032  ld   $32
              bd0a 00c8  ld   $c8
              bd0b 0020  ld   $20
              bd0c 0000  ld   $00
              bd0d 002b  ld   $2b
              bd0e 00d0  ld   $d0
              bd0f 00f7  ld   $f7
              bd10 004c  ld   $4c
              bd11 0026  ld   $26
              bd12 0009  ld   $09
              bd13 000d  ld   $0d
              bd14 0055  ld   $55
              bd15 0053  ld   $53
              bd16 0045  ld   $45
              bd17 0020  ld   $20
              bd18 0042  ld   $42
              bd19 0041  ld   $41
              bd1a 0042  ld   $42
              bd1b 0045  ld   $45
              bd1c 004c  ld   $4c
              bd1d 0046  ld   $46
              bd1e 0049  ld   $49
              bd1f 0053  ld   $53
              bd20 0048  ld   $48
              bd21 0020  ld   $20
              bd22 0054  ld   $54
              bd23 004f  ld   $4f
              bd24 0020  ld   $20
              bd25 004c  ld   $4c
              bd26 004f  ld   $4f
              bd27 0041  ld   $41
              bd28 0044  ld   $44
              bd29 0000  ld   $00
              bd2a 0000  ld   $00
              bd2b 0000  ld   $00         ;End of Apps/MSBASIC/MSBASIC_v1.gt1, size 9742
                                          ;+-----------------------------------+
                                          ;| Apps/Horizon/Horizon_at67_v1.gt1  |
                                          ;+-----------------------------------+
              bd2c dc4d  st   $4d,[y,x++] ;'M'
              bd2d dc53  st   $53,[y,x++] ;'S'
              bd2e dc42  st   $42,[y,x++] ;'B'
              bd2f dc41  st   $41,[y,x++] ;'A'
              bd30 dc53  st   $53,[y,x++] ;'S'
              bd31 dc49  st   $49,[y,x++] ;'I'
              bd32 dc43  st   $43,[y,x++] ;'C'
              bd33 dc00  st   $00,[y,x++] ;'\x00'
              bd34 001e  ld   $1e
              bd35 c218  st   [$18]
              bd36 0097  ld   $97
              bd37 14dd  ld   $dd,y
              bd38 e06f  jmp  y,$6f
              bd39 c219  st   [$19]
Egg:          bd3a 0002  ld   $02
              bd3b 0000  ld   $00
              bd3c 00c0  ld   $c0
              bd3d 0011  ld   $11
              bd3e 00b4  ld   $b4
              bd3f 0026  ld   $26
              bd40 002b  ld   $2b
              bd41 00dc  ld   $dc
              bd42 0011  ld   $11
              bd43 00bd  ld   $bd
              bd44 0026  ld   $26
              bd45 002b  ld   $2b
              bd46 00d0  ld   $d0
              bd47 0011  ld   $11
              bd48 00c6  ld   $c6
              bd49 0026  ld   $26
              bd4a 002b  ld   $2b
              bd4b 00d2  ld   $d2
              bd4c 0011  ld   $11
              bd4d 00cf  ld   $cf
              bd4e 0026  ld   $26
              bd4f 002b  ld   $2b
              bd50 00d4  ld   $d4
              bd51 0011  ld   $11
              bd52 00d8  ld   $d8
              bd53 0026  ld   $26
              bd54 002b  ld   $2b
              bd55 00d6  ld   $d6
              bd56 0011  ld   $11
              bd57 00e1  ld   $e1
              bd58 0026  ld   $26
              bd59 002b  ld   $2b
              bd5a 00d8  ld   $d8
              bd5b 0011  ld   $11
              bd5c 00ea  ld   $ea
              bd5d 0026  ld   $26
              bd5e 002b  ld   $2b
              bd5f 00da  ld   $da
              bd60 0011  ld   $11
              bd61 0020  ld   $20
              bd62 000f  ld   $0f
              bd63 002b  ld   $2b
              bd64 00a2  ld   $a2
              bd65 0011  ld   $11
              bd66 0001  ld   $01
              bd67 0000  ld   $00
              bd68 002b  ld   $2b
              bd69 00ac  ld   $ac
              bd6a 0011  ld   $11
              bd6b 0000  ld   $00
              bd6c 00ff  ld   $ff
              bd6d 002b  ld   $2b
              bd6e 00ae  ld   $ae
              bd6f 0011  ld   $11
              bd70 0000  ld   $00
              bd71 0000  ld   $00
              bd72 002b  ld   $2b
              bd73 00a6  ld   $a6
              bd74 0059  ld   $59
              bd75 0000  ld   $00
              bd76 005e  ld   $5e
              bd77 002c  ld   $2c
              bd78 0011  ld   $11
              bd79 00a0  ld   $a0
              bd7a 0025  ld   $25
              bd7b 00cf  ld   $cf
              bd7c 0018  ld   $18
              bd7d 0011  ld   $11
              bd7e 00c3  ld   $c3
              bd7f 0025  ld   $25
              bd80 00cf  ld   $cf
              bd81 0018  ld   $18
              bd82 0059  ld   $59
              bd83 0000  ld   $00
              bd84 002b  ld   $2b
              bd85 0030  ld   $30
              bd86 002b  ld   $2b
              bd87 0032  ld   $32
              bd88 002b  ld   $2b
              bd89 0034  ld   $34
              bd8a 002b  ld   $2b
              bd8b 0036  ld   $36
              bd8c 002b  ld   $2b
              bd8d 0038  ld   $38
              bd8e 002b  ld   $2b
              bd8f 003a  ld   $3a
              bd90 002b  ld   $2b
              bd91 003c  ld   $3c
              bd92 0059  ld   $59
              bd93 003f  ld   $3f
              bd94 002b  ld   $2b
              bd95 003e  ld   $3e
              bd96 0059  ld   $59
              bd97 0003  ld   $03
              bd98 002b  ld   $2b
              bd99 0040  ld   $40
              bd9a 0059  ld   $59
              bd9b 0020  ld   $20
              bd9c 002b  ld   $2b
              bd9d 0042  ld   $42
              bd9e 0011  ld   $11
              bd9f 00a0  ld   $a0
              bda0 0026  ld   $26
              bda1 002b  ld   $2b
              bda2 0084  ld   $84
              bda3 0059  ld   $59
              bda4 003f  ld   $3f
              bda5 00f3  ld   $f3
              bda6 0084  ld   $84
              bda7 0011  ld   $11
              bda8 00a2  ld   $a2
              bda9 0026  ld   $26
              bdaa 002b  ld   $2b
              bdab 0084  ld   $84
              bdac 0059  ld   $59
              bdad 002a  ld   $2a
              bdae 00f3  ld   $f3
              bdaf 0084  ld   $84
              bdb0 0011  ld   $11
              bdb1 00a4  ld   $a4
              bdb2 0026  ld   $26
              bdb3 002b  ld   $2b
              bdb4 0084  ld   $84
              bdb5 0059  ld   $59
              bdb6 0015  ld   $15
              bdb7 00f3  ld   $f3
              bdb8 0084  ld   $84
              bdb9 0011  ld   $11
              bdba 00a6  ld   $a6
              bdbb 0026  ld   $26
              bdbc 002b  ld   $2b
              bdbd 0084  ld   $84
              bdbe 0059  ld   $59
              bdbf 0000  ld   $00
              bdc0 00f3  ld   $f3
              bdc1 0084  ld   $84
              bdc2 0011  ld   $11
              bdc3 00aa  ld   $aa
              bdc4 0026  ld   $26
              bdc5 002b  ld   $2b
              bdc6 0084  ld   $84
              bdc7 0059  ld   $59
              bdc8 0003  ld   $03
              bdc9 00f3  ld   $f3
              bdca 0084  ld   $84
              bdcb 0011  ld   $11
              bdcc 00ac  ld   $ac
              bdcd 0026  ld   $26
              bdce 002b  ld   $2b
              bdcf 0084  ld   $84
              bdd0 0059  ld   $59
              bdd1 0002  ld   $02
              bdd2 00f3  ld   $f3
              bdd3 0084  ld   $84
              bdd4 0011  ld   $11
              bdd5 00ae  ld   $ae
              bdd6 0026  ld   $26
              bdd7 002b  ld   $2b
              bdd8 0084  ld   $84
              bdd9 0059  ld   $59
              bdda 0001  ld   $01
              bddb 00f3  ld   $f3
              bddc 0084  ld   $84
              bddd 0011  ld   $11
              bdde 00b0  ld   $b0
              bddf 0026  ld   $26
              bde0 002b  ld   $2b
              bde1 0084  ld   $84
              bde2 0059  ld   $59
              bde3 0000  ld   $00
              bde4 00f3  ld   $f3
              bde5 0084  ld   $84
              bde6 0059  ld   $59
              bde7 0000  ld   $00
              bde8 002b  ld   $2b
              bde9 0044  ld   $44
              bdea 002b  ld   $2b
              bdeb 0046  ld   $46
              bdec 0059  ld   $59
              bded 0036  ld   $36
              bdee 002b  ld   $2b
              bdef 0048  ld   $48
              bdf0 0059  ld   $59
              bdf1 0077  ld   $77
              bdf2 002b  ld   $2b
              bdf3 0030  ld   $30
              bdf4 0021  ld   $21
              bdf5 0042  ld   $42
              bdf6 002b  ld   $2b
              bdf7 00b0  ld   $b0
              bdf8 0011  ld   $11
              bdf9 00ff  ld   $ff
              bdfa 00ff  ld   $ff
              bdfb fe00  bra  ac          ;+-----------------------------------+
              bdfc fcfd  bra  $bdfd       ;|                                   |
              bdfd 1418  ld   $18,y       ;| Trampoline for page $bd00 lookups |
              bdfe e006  jmp  y,$06       ;|                                   |
              bdff c218  st   [$18]       ;+-----------------------------------+
              be00 002b  ld   $2b
              be01 00b2  ld   $b2
              be02 0002  ld   $02
              be03 00c0  ld   $c0
              be04 0037  ld   $37
              be05 0011  ld   $11
              be06 00a0  ld   $a0
              be07 0026  ld   $26
              be08 0099  ld   $99
              be09 0046  ld   $46
              be0a 0099  ld   $99
              be0b 0046  ld   $46
              be0c 00f6  ld   $f6
              be0d 002b  ld   $2b
              be0e 003e  ld   $3e
              be0f 0011  ld   $11
              be10 00aa  ld   $aa
              be11 0026  ld   $26
              be12 0099  ld   $99
              be13 0046  ld   $46
              be14 0099  ld   $99
              be15 0046  ld   $46
              be16 00f6  ld   $f6
              be17 002b  ld   $2b
              be18 0040  ld   $40
              be19 0021  ld   $21
              be1a 0044  ld   $44
              be1b 00e3  ld   $e3
              be1c 0001  ld   $01
              be1d 002b  ld   $2b
              be1e 0044  ld   $44
              be1f 0021  ld   $21
              be20 0044  ld   $44
              be21 00b8  ld   $b8
              be22 0048  ld   $48
              be23 0035  ld   $35
              be24 003f  ld   $3f
              be25 00e4  ld   $e4
              be26 0011  ld   $11
              be27 000d  ld   $0d
              be28 0003  ld   $03
              be29 00cf  ld   $cf
              be2a 0018  ld   $18
              be2b 0021  ld   $21
              be2c 0046  ld   $46
              be2d 00e3  ld   $e3
              be2e 0001  ld   $01
              be2f 002b  ld   $2b
              be30 0046  ld   $46
              be31 0059  ld   $59
              be32 0000  ld   $00
              be33 002b  ld   $2b
              be34 0044  ld   $44
              be35 002b  ld   $2b
              be36 00de  ld   $de
              be37 0011  ld   $11
              be38 0000  ld   $00
              be39 0003  ld   $03
              be3a 00cf  ld   $cf
              be3b 0018  ld   $18
              be3c 0003  ld   $03
              be3d 0000  ld   $00
              be3e 000d  ld   $0d
              be3f 0021  ld   $21
              be40 00de  ld   $de
              be41 0021  ld   $21
              be42 0048  ld   $48
              be43 002b  ld   $2b
              be44 0098  ld   $98
              be45 0011  ld   $11
              be46 00f3  ld   $f3
              be47 0026  ld   $26
              be48 00cf  ld   $cf
              be49 0018  ld   $18
              be4a 002b  ld   $2b
              be4b 0048  ld   $48
              be4c 0003  ld   $03
              be4d 000d  ld   $0d
              be4e 002c  ld   $2c
              be4f 0021  ld   $21
              be50 0030  ld   $30
              be51 002b  ld   $2b
              be52 003c  ld   $3c
              be53 0011  ld   $11
              be54 00a7  ld   $a7
              be55 0004  ld   $04
              be56 00cf  ld   $cf
              be57 0018  ld   $18
              be58 0021  ld   $21
              be59 0030  ld   $30
              be5a 00b8  ld   $b8
              be5b 0042  ld   $42
              be5c 00e3  ld   $e3
              be5d 0028  ld   $28
              be5e 002b  ld   $2b
              be5f 00c0  ld   $c0
              be60 0011  ld   $11
              be61 0090  ld   $90
              be62 0001  ld   $01
              be63 002b  ld   $2b
              be64 0082  ld   $82
              be65 0021  ld   $21
              be66 00c0  ld   $c0
              be67 002b  ld   $2b
              be68 0084  ld   $84
              be69 0011  ld   $11
              be6a 00a0  ld   $a0
              be6b 0024  ld   $24
              be6c 00cf  ld   $cf
              be6d 0018  ld   $18
              be6e 0082  ld   $82
              be6f 0001  ld   $01
              be70 0035  ld   $35
              be71 0072  ld   $72
              be72 0037  ld   $37
              be73 0021  ld   $21
              be74 003e  ld   $3e
              be75 00fc  ld   $fc
              be76 0040  ld   $40
              be77 002b  ld   $2b
              be78 0036  ld   $36
              be79 0090  ld   $90
              be7a 003b  ld   $3b
              be7b 0003  ld   $03
              be7c 0039  ld   $39
              be7d 0004  ld   $04
              be7e 0059  ld   $59
              be7f 0000  ld   $00
              be80 002b  ld   $2b
              be81 0036  ld   $36
              be82 0003  ld   $03
              be83 003d  ld   $3d
              be84 0029  ld   $29
              be85 0059  ld   $59
              be86 0050  ld   $50
              be87 002b  ld   $2b
              be88 0082  ld   $82
              be89 0021  ld   $21
              be8a 003a  ld   $3a
              be8b 002b  ld   $2b
              be8c 0084  ld   $84
              be8d 0011  ld   $11
              be8e 00a0  ld   $a0
              be8f 0024  ld   $24
              be90 00cf  ld   $cf
              be91 0018  ld   $18
              be92 0021  ld   $21
              be93 0092  ld   $92
              be94 002b  ld   $2b
              be95 0034  ld   $34
              be96 0021  ld   $21
              be97 0030  ld   $30
              be98 00e3  ld   $e3
              be99 0008  ld   $08
              be9a 002b  ld   $2b
              be9b 00c0  ld   $c0
              be9c 001a  ld   $1a
              be9d 00c0  ld   $c0
              be9e 005e  ld   $5e
              be9f 0039  ld   $39
              bea0 0059  ld   $59
              bea1 0000  ld   $00
              bea2 002b  ld   $2b
              bea3 0032  ld   $32
              bea4 0021  ld   $21
              bea5 003a  ld   $3a
              bea6 00e3  ld   $e3
              bea7 009f  ld   $9f
              bea8 002b  ld   $2b
              bea9 00b4  ld   $b4
              beaa 0059  ld   $59
              beab 0001  ld   $01
              beac 002b  ld   $2b
              bead 00b6  ld   $b6
              beae 0003  ld   $03
              beaf 0066  ld   $66
              beb0 000d  ld   $0d
              beb1 0021  ld   $21
              beb2 0034  ld   $34
              beb3 0035  ld   $35
              beb4 0072  ld   $72
              beb5 0071  ld   $71
              beb6 0021  ld   $21
              beb7 003a  ld   $3a
              beb8 00e6  ld   $e6
              beb9 0001  ld   $01
              beba 002b  ld   $2b
              bebb 0034  ld   $34
              bebc 0090  ld   $90
              bebd 0077  ld   $77
              bebe 0003  ld   $03
              bebf 0073  ld   $73
              bec0 0006  ld   $06
              bec1 0021  ld   $21
              bec2 0034  ld   $34
              bec3 00e6  ld   $e6
              bec4 0001  ld   $01
              bec5 002b  ld   $2b
              bec6 0034  ld   $34
              bec7 0003  ld   $03
              bec8 0079  ld   $79
              bec9 0011  ld   $11
              beca 0021  ld   $21
              becb 0034  ld   $34
              becc 0099  ld   $99
              becd 0034  ld   $34
              bece 00b8  ld   $b8
              becf 003a  ld   $3a
              bed0 0035  ld   $35
              bed1 0050  ld   $50
              bed2 0088  ld   $88
              bed3 0021  ld   $21
              bed4 003e  ld   $3e
              bed5 00fc  ld   $fc
              bed6 0036  ld   $36
              bed7 002b  ld   $2b
              bed8 004a  ld   $4a
              bed9 0090  ld   $90
              beda 008e  ld   $8e
              bedb 0003  ld   $03
              bedc 008a  ld   $8a
              bedd 0006  ld   $06
              bede 0021  ld   $21
              bedf 0040  ld   $40
              bee0 00fc  ld   $fc
              bee1 0036  ld   $36
              bee2 002b  ld   $2b
              bee3 004a  ld   $4a
              bee4 0003  ld   $03
              bee5 0090  ld   $90
              bee6 004a  ld   $4a
              bee7 0021  ld   $21
              bee8 0038  ld   $38
              bee9 0099  ld   $99
              beea 0032  ld   $32
              beeb 002b  ld   $2b
              beec 00c0  ld   $c0
              beed 0021  ld   $21
              beee 004a  ld   $4a
              beef 00f0  ld   $f0
              bef0 00c0  ld   $c0
              bef1 0021  ld   $21
              bef2 0032  ld   $32
              bef3 0099  ld   $99
              bef4 00b6  ld   $b6
              bef5 002b  ld   $2b
              bef6 0032  ld   $32
              bef7 00b8  ld   $b8
              bef8 00b4  ld   $b4
              bef9 0035  ld   $35
              befa 004d  ld   $4d
              befb fe00  bra  ac          ;+-----------------------------------+
              befc fcfd  bra  $befd       ;|                                   |
              befd 1418  ld   $18,y       ;| Trampoline for page $be00 lookups |
              befe e006  jmp  y,$06       ;|                                   |
              beff c218  st   [$18]       ;+-----------------------------------+
              bf00 00a8  ld   $a8
              bf01 0011  ld   $11
              bf02 0066  ld   $66
              bf03 0003  ld   $03
              bf04 00cf  ld   $cf
              bf05 0018  ld   $18
              bf06 0021  ld   $21
              bf07 0030  ld   $30
              bf08 0099  ld   $99
              bf09 0030  ld   $30
              bf0a 002b  ld   $2b
              bf0b 00c0  ld   $c0
              bf0c 0011  ld   $11
              bf0d 00f9  ld   $f9
              bf0e 0001  ld   $01
              bf0f 002b  ld   $2b
              bf10 0082  ld   $82
              bf11 0021  ld   $21
              bf12 00c0  ld   $c0
              bf13 00f0  ld   $f0
              bf14 0082  ld   $82
              bf15 0021  ld   $21
              bf16 0030  ld   $30
              bf17 0099  ld   $99
              bf18 00b2  ld   $b2
              bf19 002b  ld   $2b
              bf1a 0030  ld   $30
              bf1b 00b8  ld   $b8
              bf1c 00b0  ld   $b0
              bf1d 0035  ld   $35
              bf1e 0050  ld   $50
              bf1f 00c7  ld   $c7
              bf20 0011  ld   $11
              bf21 00c0  ld   $c0
              bf22 0002  ld   $02
              bf23 00cf  ld   $cf
              bf24 0018  ld   $18
              bf25 0011  ld   $11
              bf26 00f9  ld   $f9
              bf27 0001  ld   $01
              bf28 002b  ld   $2b
              bf29 0082  ld   $82
              bf2a 0059  ld   $59
              bf2b 0000  ld   $00
              bf2c 00f0  ld   $f0
              bf2d 0082  ld   $82
              bf2e 0059  ld   $59
              bf2f 0000  ld   $00
              bf30 002b  ld   $2b
              bf31 0032  ld   $32
              bf32 0059  ld   $59
              bf33 0008  ld   $08
              bf34 002b  ld   $2b
              bf35 004c  ld   $4c
              bf36 0003  ld   $03
              bf37 00da  ld   $da
              bf38 001f  ld   $1f
              bf39 0021  ld   $21
              bf3a 0032  ld   $32
              bf3b 0082  ld   $82
              bf3c 00ff  ld   $ff
              bf3d 002b  ld   $2b
              bf3e 0034  ld   $34
              bf3f 0059  ld   $59
              bf40 0000  ld   $00
              bf41 002b  ld   $2b
              bf42 0036  ld   $36
              bf43 0011  ld   $11
              bf44 00f0  ld   $f0
              bf45 0001  ld   $01
              bf46 002b  ld   $2b
              bf47 004e  ld   $4e
              bf48 0021  ld   $21
              bf49 0042  ld   $42
              bf4a 002b  ld   $2b
              bf4b 003c  ld   $3c
              bf4c 0011  ld   $11
              bf4d 00a7  ld   $a7
              bf4e 0004  ld   $04
              bf4f 00cf  ld   $cf
              bf50 0018  ld   $18
              bf51 002b  ld   $2b
              bf52 00de  ld   $de
              bf53 0011  ld   $11
              bf54 0000  ld   $00
              bf55 0004  ld   $04
              bf56 00cf  ld   $cf
              bf57 0018  ld   $18
              bf58 0004  ld   $04
              bf59 0000  ld   $00
              bf5a 000e  ld   $0e
              bf5b 0021  ld   $21
              bf5c 00de  ld   $de
              bf5d 0059  ld   $59
              bf5e 0000  ld   $00
              bf5f 002b  ld   $2b
              bf60 0030  ld   $30
              bf61 0021  ld   $21
              bf62 003a  ld   $3a
              bf63 002b  ld   $2b
              bf64 00b0  ld   $b0
              bf65 0059  ld   $59
              bf66 0001  ld   $01
              bf67 002b  ld   $2b
              bf68 00b2  ld   $b2
              bf69 0004  ld   $04
              bf6a 000e  ld   $0e
              bf6b 002e  ld   $2e
              bf6c 0021  ld   $21
              bf6d 0036  ld   $36
              bf6e 0099  ld   $99
              bf6f 0034  ld   $34
              bf70 002b  ld   $2b
              bf71 0036  ld   $36
              bf72 0021  ld   $21
              bf73 0030  ld   $30
              bf74 0099  ld   $99
              bf75 00b2  ld   $b2
              bf76 002b  ld   $2b
              bf77 0030  ld   $30
              bf78 00b8  ld   $b8
              bf79 00b0  ld   $b0
              bf7a 0035  ld   $35
              bf7b 004d  ld   $4d
              bf7c 0022  ld   $22
              bf7d 0011  ld   $11
              bf7e 000e  ld   $0e
              bf7f 0004  ld   $04
              bf80 00cf  ld   $cf
              bf81 0018  ld   $18
              bf82 0021  ld   $21
              bf83 0034  ld   $34
              bf84 0099  ld   $99
              bf85 0034  ld   $34
              bf86 002b  ld   $2b
              bf87 0034  ld   $34
              bf88 0011  ld   $11
              bf89 0001  ld   $01
              bf8a 0001  ld   $01
              bf8b 0099  ld   $99
              bf8c 0042  ld   $42
              bf8d 0099  ld   $99
              bf8e 0042  ld   $42
              bf8f 002b  ld   $2b
              bf90 004a  ld   $4a
              bf91 0059  ld   $59
              bf92 0001  ld   $01
              bf93 002b  ld   $2b
              bf94 0082  ld   $82
              bf95 0011  ld   $11
              bf96 00a0  ld   $a0
              bf97 0023  ld   $23
              bf98 00cf  ld   $cf
              bf99 0018  ld   $18
              bf9a 0004  ld   $04
              bf9b 003c  ld   $3c
              bf9c 0035  ld   $35
              bf9d 001a  ld   $1a
              bf9e 0037  ld   $37
              bf9f 00f0  ld   $f0
              bfa0 004a  ld   $4a
              bfa1 0021  ld   $21
              bfa2 0036  ld   $36
              bfa3 0082  ld   $82
              bfa4 00ff  ld   $ff
              bfa5 0099  ld   $99
              bfa6 0034  ld   $34
              bfa7 002b  ld   $2b
              bfa8 0036  ld   $36
              bfa9 0021  ld   $21
              bfaa 004a  ld   $4a
              bfab 00e3  ld   $e3
              bfac 0004  ld   $04
              bfad 002b  ld   $2b
              bfae 004a  ld   $4a
              bfaf 00b8  ld   $b8
              bfb0 004e  ld   $4e
              bfb1 0035  ld   $35
              bfb2 0053  ld   $53
              bfb3 0056  ld   $56
              bfb4 0011  ld   $11
              bfb5 003c  ld   $3c
              bfb6 0004  ld   $04
              bfb7 00cf  ld   $cf
              bfb8 0018  ld   $18
              bfb9 0059  ld   $59
              bfba 0011  ld   $11
              bfbb 00ad  ld   $ad
              bfbc 002b  ld   $2b
              bfbd 0082  ld   $82
              bfbe 0059  ld   $59
              bfbf 0000  ld   $00
              bfc0 002b  ld   $2b
              bfc1 0084  ld   $84
              bfc2 0011  ld   $11
              bfc3 00bb  ld   $bb
              bfc4 0023  ld   $23
              bfc5 00cf  ld   $cf
              bfc6 0018  ld   $18
              bfc7 0021  ld   $21
              bfc8 0032  ld   $32
              bfc9 0099  ld   $99
              bfca 004c  ld   $4c
              bfcb 002b  ld   $2b
              bfcc 0032  ld   $32
              bfcd 0011  ld   $11
              bfce 00da  ld   $da
              bfcf 0003  ld   $03
              bfd0 00cf  ld   $cf
              bfd1 0018  ld   $18
              bfd2 0004  ld   $04
              bfd3 0071  ld   $71
              bfd4 0010  ld   $10
              bfd5 0075  ld   $75
              bfd6 0021  ld   $21
              bfd7 004c  ld   $4c
              bfd8 00e3  ld   $e3
              bfd9 0001  ld   $01
              bfda 002b  ld   $2b
              bfdb 004c  ld   $4c
              bfdc 00e6  ld   $e6
              bfdd 0020  ld   $20
              bfde 0035  ld   $35
              bfdf 0056  ld   $56
              bfe0 007f  ld   $7f
              bfe1 0059  ld   $59
              bfe2 0020  ld   $20
              bfe3 002b  ld   $2b
              bfe4 004c  ld   $4c
              bfe5 0004  ld   $04
              bfe6 0081  ld   $81
              bfe7 0002  ld   $02
              bfe8 0063  ld   $63
              bfe9 00ff  ld   $ff
              bfea 0004  ld   $04
              bfeb 0083  ld   $83
              bfec 0014  ld   $14
              bfed 0075  ld   $75
              bfee 0021  ld   $21
              bfef 004c  ld   $4c
              bff0 00e6  ld   $e6
              bff1 0001  ld   $01
              bff2 002b  ld   $2b
              bff3 004c  ld   $4c
              bff4 0011  ld   $11
              bff5 00e0  ld   $e0
              bff6 00ff  ld   $ff
              bff7 00b8  ld   $b8
              bff8 004c  ld   $4c
              bff9 0035  ld   $35
              bffa 0050  ld   $50
              bffb fe00  bra  ac          ;+-----------------------------------+
              bffc fcfd  bra  $bffd       ;|                                   |
              bffd 1418  ld   $18,y       ;| Trampoline for page $bf00 lookups |
              bffe e006  jmp  y,$06       ;|                                   |
              bfff c218  st   [$18]       ;+-----------------------------------+
              c000 0095  ld   $95
              c001 0011  ld   $11
              c002 00e0  ld   $e0
              c003 00ff  ld   $ff
              c004 002b  ld   $2b
              c005 004c  ld   $4c
              c006 0004  ld   $04
              c007 0097  ld   $97
              c008 0002  ld   $02
              c009 0063  ld   $63
              c00a 00ff  ld   $ff
              c00b 0004  ld   $04
              c00c 0099  ld   $99
              c00d 0007  ld   $07
              c00e 0075  ld   $75
              c00f 0059  ld   $59
              c010 0000  ld   $00
              c011 002b  ld   $2b
              c012 004c  ld   $4c
              c013 0063  ld   $63
              c014 00ff  ld   $ff
              c015 0004  ld   $04
              c016 00a0  ld   $a0
              c017 0007  ld   $07
              c018 0075  ld   $75
              c019 0059  ld   $59
              c01a 0000  ld   $00
              c01b 002b  ld   $2b
              c01c 004c  ld   $4c
              c01d 0063  ld   $63
              c01e 00ff  ld   $ff
              c01f 0004  ld   $04
              c020 00a7  ld   $a7
              c021 0017  ld   $17
              c022 0075  ld   $75
              c023 0011  ld   $11
              c024 00e9  ld   $e9
              c025 00ff  ld   $ff
              c026 0099  ld   $99
              c027 003c  ld   $3c
              c028 002b  ld   $2b
              c029 003a  ld   $3a
              c02a 0021  ld   $21
              c02b 003a  ld   $3a
              c02c 00e3  ld   $e3
              c02d 0001  ld   $01
              c02e 002b  ld   $2b
              c02f 00c0  ld   $c0
              c030 0011  ld   $11
              c031 00fe  ld   $fe
              c032 00ff  ld   $ff
              c033 00f8  ld   $f8
              c034 00c0  ld   $c0
              c035 002b  ld   $2b
              c036 003a  ld   $3a
              c037 0063  ld   $63
              c038 00ff  ld   $ff
              c039 0004  ld   $04
              c03a 00be  ld   $be
              c03b 0002  ld   $02
              c03c 0090  ld   $90
              c03d 00bc  ld   $bc
              c03e 0022  ld   $22
              c03f 00a0  ld   $a0
              c040 0008  ld   $08
              c041 0071  ld   $71
              c042 0004  ld   $04
              c043 0083  ld   $83
              c044 0004  ld   $04
              c045 0099  ld   $99
              c046 0004  ld   $04
              c047 00a0  ld   $a0
              c048 0004  ld   $04
              c049 0022  ld   $22
              c04a 00a8  ld   $a8
              c04b 001f  ld   $1f
              c04c 0075  ld   $75
              c04d 0059  ld   $59
              c04e 0008  ld   $08
              c04f 002b  ld   $2b
              c050 0098  ld   $98
              c051 0011  ld   $11
              c052 0000  ld   $00
              c053 0001  ld   $01
              c054 002b  ld   $2b
              c055 009a  ld   $9a
              c056 00cf  ld   $cf
              c057 00dc  ld   $dc
              c058 0021  ld   $21
              c059 0098  ld   $98
              c05a 00f3  ld   $f3
              c05b 009a  ld   $9a
              c05c 0093  ld   $93
              c05d 009a  ld   $9a
              c05e 0093  ld   $93
              c05f 009a  ld   $9a
              c060 0093  ld   $93
              c061 0098  ld   $98
              c062 001a  ld   $1a
              c063 0098  ld   $98
              c064 00e6  ld   $e6
              c065 0080  ld   $80
              c066 0035  ld   $35
              c067 0050  ld   $50
              c068 00b0  ld   $b0
              c069 0063  ld   $63
              c06a 00ff  ld   $ff
              c06b 0023  ld   $23
              c06c 00a0  ld   $a0
              c06d 001b  ld   $1b
              c06e 0021  ld   $21
              c06f 0082  ld   $82
              c070 00e6  ld   $e6
              c071 0001  ld   $01
              c072 002b  ld   $2b
              c073 0082  ld   $82
              c074 0035  ld   $35
              c075 0053  ld   $53
              c076 00a8  ld   $a8
              c077 00ff  ld   $ff
              c078 001a  ld   $1a
              c079 000e  ld   $0e
              c07a 00b8  ld   $b8
              c07b 00aa  ld   $aa
              c07c 0035  ld   $35
              c07d 003f  ld   $3f
              c07e 00a8  ld   $a8
              c07f 001a  ld   $1a
              c080 000e  ld   $0e
              c081 002b  ld   $2b
              c082 00aa  ld   $aa
              c083 0075  ld   $75
              c084 00cf  ld   $cf
              c085 00dc  ld   $dc
              c086 0063  ld   $63
              c087 0090  ld   $90
              c088 009e  ld   $9e
              c089 0023  ld   $23
              c08a 00bb  ld   $bb
              c08b 003a  ld   $3a
              c08c 0075  ld   $75
              c08d 0011  ld   $11
              c08e 00f5  ld   $f5
              c08f 0023  ld   $23
              c090 002b  ld   $2b
              c091 0086  ld   $86
              c092 002b  ld   $2b
              c093 0092  ld   $92
              c094 0011  ld   $11
              c095 00a0  ld   $a0
              c096 0022  ld   $22
              c097 002b  ld   $2b
              c098 0088  ld   $88
              c099 0021  ld   $21
              c09a 0092  ld   $92
              c09b 00f6  ld   $f6
              c09c 002b  ld   $2b
              c09d 0094  ld   $94
              c09e 001a  ld   $1a
              c09f 0095  ld   $95
              c0a0 0082  ld   $82
              c0a1 0080  ld   $80
              c0a2 0035  ld   $35
              c0a3 003f  ld   $3f
              c0a4 00db  ld   $db
              c0a5 0021  ld   $21
              c0a6 0084  ld   $84
              c0a7 0035  ld   $35
              c0a8 003f  ld   $3f
              c0a9 00d9  ld   $d9
              c0aa 00cf  ld   $cf
              c0ab 0084  ld   $84
              c0ac 0063  ld   $63
              c0ad 00ff  ld   $ff
              c0ae 0021  ld   $21
              c0af 0094  ld   $94
              c0b0 00b8  ld   $b8
              c0b1 0082  ld   $82
              c0b2 0035  ld   $35
              c0b3 003f  ld   $3f
              c0b4 00e8  ld   $e8
              c0b5 0093  ld   $93
              c0b6 0092  ld   $92
              c0b7 0093  ld   $93
              c0b8 0092  ld   $92
              c0b9 0090  ld   $90
              c0ba 00c6  ld   $c6
              c0bb 0021  ld   $21
              c0bc 0092  ld   $92
              c0bd 00b8  ld   $b8
              c0be 0086  ld   $86
              c0bf 0099  ld   $99
              c0c0 0088  ld   $88
              c0c1 00f6  ld   $f6
              c0c2 00cf  ld   $cf
              c0c3 0018  ld   $18
              c0c4 0063  ld   $63
              c0c5 00ff  ld   $ff
              c0c6 0023  ld   $23
              c0c7 00f5  ld   $f5
              c0c8 000a  ld   $0a
              c0c9 00fe  ld   $fe
              c0ca 0000  ld   $00
              c0cb 00fd  ld   $fd
              c0cc 0000  ld   $00
              c0cd 00bf  ld   $bf
              c0ce 0000  ld   $00
              c0cf 007f  ld   $7f
              c0d0 0000  ld   $00
              c0d1 00ff  ld   $ff
              c0d2 00ff  ld   $ff
              c0d3 0024  ld   $24
              c0d4 00a0  ld   $a0
              c0d5 005a  ld   $5a
              c0d6 0021  ld   $21
              c0d7 0082  ld   $82
              c0d8 00fc  ld   $fc
              c0d9 0084  ld   $84
              c0da 002b  ld   $2b
              c0db 0094  ld   $94
              c0dc 0021  ld   $21
              c0dd 0082  ld   $82
              c0de 0035  ld   $35
              c0df 0053  ld   $53
              c0e0 00af  ld   $af
              c0e1 0059  ld   $59
              c0e2 0000  ld   $00
              c0e3 00b8  ld   $b8
              c0e4 0082  ld   $82
              c0e5 002b  ld   $2b
              c0e6 0082  ld   $82
              c0e7 0021  ld   $21
              c0e8 0084  ld   $84
              c0e9 0035  ld   $35
              c0ea 0053  ld   $53
              c0eb 00ba  ld   $ba
              c0ec 0059  ld   $59
              c0ed 0000  ld   $00
              c0ee 00b8  ld   $b8
              c0ef 0084  ld   $84
              c0f0 002b  ld   $2b
              c0f1 0084  ld   $84
              c0f2 0059  ld   $59
              c0f3 0000  ld   $00
              c0f4 002b  ld   $2b
              c0f5 0092  ld   $92
              c0f6 002b  ld   $2b
              c0f7 0096  ld   $96
              c0f8 0021  ld   $21
              c0f9 0092  ld   $92
              c0fa 0099  ld   $99
              c0fb fe00  bra  ac          ;+-----------------------------------+
              c0fc fcfd  bra  $c0fd       ;|                                   |
              c0fd 1418  ld   $18,y       ;| Trampoline for page $c000 lookups |
              c0fe e006  jmp  y,$06       ;|                                   |
              c0ff c218  st   [$18]       ;+-----------------------------------+
              c100 0092  ld   $92
              c101 002b  ld   $2b
              c102 0092  ld   $92
              c103 0021  ld   $21
              c104 0082  ld   $82
              c105 0035  ld   $35
              c106 0053  ld   $53
              c107 00cd  ld   $cd
              c108 0093  ld   $93
              c109 0092  ld   $92
              c10a 0021  ld   $21
              c10b 0082  ld   $82
              c10c 0099  ld   $99
              c10d 0082  ld   $82
              c10e 002b  ld   $2b
              c10f 0082  ld   $82
              c110 0021  ld   $21
              c111 0092  ld   $92
              c112 00b8  ld   $b8
              c113 0084  ld   $84
              c114 0035  ld   $35
              c115 0050  ld   $50
              c116 00de  ld   $de
              c117 002b  ld   $2b
              c118 0092  ld   $92
              c119 0093  ld   $93
              c11a 0082  ld   $82
              c11b 0075  ld   $75
              c11c 00cf  ld   $cf
              c11d 00dc  ld   $dc
              c11e 0063  ld   $63
              c11f 0021  ld   $21
              c120 0096  ld   $96
              c121 00e3  ld   $e3
              c122 0001  ld   $01
              c123 0082  ld   $82
              c124 000f  ld   $0f
              c125 0035  ld   $35
              c126 0072  ld   $72
              c127 00be  ld   $be
              c128 0021  ld   $21
              c129 0094  ld   $94
              c12a 0035  ld   $35
              c12b 0053  ld   $53
              c12c 00f5  ld   $f5
              c12d 0059  ld   $59
              c12e 0000  ld   $00
              c12f 00b8  ld   $b8
              c130 0082  ld   $82
              c131 00ff  ld   $ff
              c132 0021  ld   $21
              c133 0082  ld   $82
              c134 00ff  ld   $ff
              c135 0025  ld   $25
              c136 00a0  ld   $a0
              c137 0023  ld   $23
              c138 0075  ld   $75
              c139 0011  ld   $11
              c13a 00a8  ld   $a8
              c13b 0022  ld   $22
              c13c 00cf  ld   $cf
              c13d 0018  ld   $18
              c13e 0011  ld   $11
              c13f 0002  ld   $02
              c140 0000  ld   $00
              c141 002b  ld   $2b
              c142 00a4  ld   $a4
              c143 0011  ld   $11
              c144 00ff  ld   $ff
              c145 007f  ld   $7f
              c146 00f8  ld   $f8
              c147 00ac  ld   $ac
              c148 002b  ld   $2b
              c149 00ac  ld   $ac
              c14a 001a  ld   $1a
              c14b 00a2  ld   $a2
              c14c 005e  ld   $5e
              c14d 0024  ld   $24
              c14e 005e  ld   $5e
              c14f 0025  ld   $25
              c150 005e  ld   $5e
              c151 0026  ld   $26
              c152 005e  ld   $5e
              c153 0027  ld   $27
              c154 0011  ld   $11
              c155 00d4  ld   $d4
              c156 0004  ld   $04
              c157 002b  ld   $2b
              c158 0022  ld   $22
              c159 0063  ld   $63
              c15a 00ff  ld   $ff
              c15b 0025  ld   $25
              c15c 00c3  ld   $c3
              c15d 003a  ld   $3a
              c15e 0075  ld   $75
              c15f 0011  ld   $11
              c160 00a0  ld   $a0
              c161 0025  ld   $25
              c162 00cf  ld   $cf
              c163 0018  ld   $18
              c164 0011  ld   $11
              c165 0000  ld   $00
              c166 0008  ld   $08
              c167 002b  ld   $2b
              c168 0028  ld   $28
              c169 001a  ld   $1a
              c16a 0029  ld   $29
              c16b 005e  ld   $5e
              c16c 0094  ld   $94
              c16d 00cf  ld   $cf
              c16e 00dc  ld   $dc
              c16f 001a  ld   $1a
              c170 0094  ld   $94
              c171 005e  ld   $5e
              c172 0029  ld   $29
              c173 00b4  ld   $b4
              c174 00ff  ld   $ff
              c175 0011  ld   $11
              c176 0087  ld   $87
              c177 0000  ld   $00
              c178 00b8  ld   $b8
              c179 0094  ld   $94
              c17a 005e  ld   $5e
              c17b 0029  ld   $29
              c17c 00b4  ld   $b4
              c17d 00ff  ld   $ff
              c17e 001a  ld   $1a
              c17f 0028  ld   $28
              c180 00e3  ld   $e3
              c181 0004  ld   $04
              c182 005e  ld   $5e
              c183 0028  ld   $28
              c184 00e6  ld   $e6
              c185 00a0  ld   $a0
              c186 0035  ld   $35
              c187 0050  ld   $50
              c188 00d0  ld   $d0
              c189 0059  ld   $59
              c18a 0000  ld   $00
              c18b 005e  ld   $5e
              c18c 0028  ld   $28
              c18d 0093  ld   $93
              c18e 0094  ld   $94
              c18f 001a  ld   $1a
              c190 0094  ld   $94
              c191 00e6  ld   $e6
              c192 0044  ld   $44
              c193 0035  ld   $35
              c194 0050  ld   $50
              c195 00d0  ld   $d0
              c196 0063  ld   $63
              c197 00ff  ld   $ff
              c198 0026  ld   $26
              c199 00a0  ld   $a0
              c19a 000a  ld   $0a
              c19b 0000  ld   $00
              c19c 0000  ld   $00
              c19d 0000  ld   $00
              * 10 times
              c1a5 0026  ld   $26
              c1a6 00aa  ld   $aa
              c1a7 000a  ld   $0a
              c1a8 0000  ld   $00
              c1a9 0000  ld   $00
              c1aa 0000  ld   $00
              * 10 times
              c1b2 0026  ld   $26
              c1b3 00b4  ld   $b4
              c1b4 0009  ld   $09
              c1b5 0075  ld   $75
              c1b6 0011  ld   $11
              c1b7 00bc  ld   $bc
              c1b8 0026  ld   $26
              c1b9 00cf  ld   $cf
              c1ba 0018  ld   $18
              c1bb 0063  ld   $63
              c1bc 00ff  ld   $ff
              c1bd 00ff  ld   $ff
              c1be 0026  ld   $26
              c1bf 00bd  ld   $bd
              c1c0 0009  ld   $09
              c1c1 0035  ld   $35
              c1c2 003f  ld   $3f
              c1c3 00c1  ld   $c1
              c1c4 0059  ld   $59
              c1c5 0000  ld   $00
              c1c6 00ff  ld   $ff
              c1c7 0059  ld   $59
              c1c8 0001  ld   $01
              c1c9 00ff  ld   $ff
              c1ca 0026  ld   $26
              c1cb 00c6  ld   $c6
              c1cc 0009  ld   $09
              c1cd 0035  ld   $35
              c1ce 0072  ld   $72
              c1cf 00ca  ld   $ca
              c1d0 0059  ld   $59
              c1d1 0000  ld   $00
              c1d2 00ff  ld   $ff
              c1d3 0059  ld   $59
              c1d4 0001  ld   $01
              c1d5 00ff  ld   $ff
              c1d6 0026  ld   $26
              c1d7 00cf  ld   $cf
              c1d8 0009  ld   $09
              c1d9 0035  ld   $35
              c1da 0056  ld   $56
              c1db 00d3  ld   $d3
              c1dc 0059  ld   $59
              c1dd 0000  ld   $00
              c1de 00ff  ld   $ff
              c1df 0059  ld   $59
              c1e0 0001  ld   $01
              c1e1 00ff  ld   $ff
              c1e2 0026  ld   $26
              c1e3 00d8  ld   $d8
              c1e4 0009  ld   $09
              c1e5 0035  ld   $35
              c1e6 0053  ld   $53
              c1e7 00dc  ld   $dc
              c1e8 0059  ld   $59
              c1e9 0000  ld   $00
              c1ea 00ff  ld   $ff
              c1eb 0059  ld   $59
              c1ec 0001  ld   $01
              c1ed 00ff  ld   $ff
              c1ee 0026  ld   $26
              c1ef 00e1  ld   $e1
              c1f0 0009  ld   $09
              c1f1 0035  ld   $35
              c1f2 0050  ld   $50
              c1f3 00e5  ld   $e5
              c1f4 0059  ld   $59
              c1f5 0000  ld   $00
              c1f6 00ff  ld   $ff
              c1f7 0059  ld   $59
              c1f8 0001  ld   $01
              c1f9 00ff  ld   $ff
              c1fa 0026  ld   $26
              c1fb fe00  bra  ac          ;+-----------------------------------+
              c1fc fcfd  bra  $c1fd       ;|                                   |
              c1fd 1418  ld   $18,y       ;| Trampoline for page $c100 lookups |
              c1fe e006  jmp  y,$06       ;|                                   |
              c1ff c218  st   [$18]       ;+-----------------------------------+
              c200 00ea  ld   $ea
              c201 0009  ld   $09
              c202 0035  ld   $35
              c203 004d  ld   $4d
              c204 00ee  ld   $ee
              c205 0059  ld   $59
              c206 0000  ld   $00
              c207 00ff  ld   $ff
              c208 0059  ld   $59
              c209 0001  ld   $01
              c20a 00ff  ld   $ff
              c20b 0026  ld   $26
              c20c 00f3  ld   $f3
              c20d 000a  ld   $0a
              c20e 0011  ld   $11
              c20f 0000  ld   $00
              c210 0006  ld   $06
              c211 002b  ld   $2b
              c212 0022  ld   $22
              c213 0021  ld   $21
              c214 0098  ld   $98
              c215 00b4  ld   $b4
              c216 00f6  ld   $f6
              c217 00ff  ld   $ff
              c218 0000  ld   $00
              c219 0000  ld   $00         ;End of Apps/Horizon/Horizon_at67_v1.gt1, size 1248
                                          ;+-----------------------------------+
                                          ;| gbas/browser/Browser_SDCard_ROMvX0.gt1 |
                                          ;+-----------------------------------+
              c21a dc45  st   $45,[y,x++] ;'E'
              c21b dc67  st   $67,[y,x++] ;'g'
              c21c dc67  st   $67,[y,x++] ;'g'
              c21d dc00  st   $00,[y,x++] ;'\x00'
              c21e dc00  st   $00,[y,x++] ;'\x00'
              c21f dc00  st   $00,[y,x++] ;'\x00'
              c220 dc00  st   $00,[y,x++] ;'\x00'
              c221 dc00  st   $00,[y,x++] ;'\x00'
              c222 003a  ld   $3a
              c223 c218  st   [$18]
              c224 00bd  ld   $bd
              c225 14dd  ld   $dd,y
              c226 e06f  jmp  y,$6f
              c227 c219  st   [$19]
SDCard:       c228 0000  ld   $00
              c229 007e  ld   $7e
              c22a 0002  ld   $02
              c22b 0050  ld   $50
              c22c 0044  ld   $44
              c22d 0002  ld   $02
              c22e 0000  ld   $00
              c22f 00fa  ld   $fa
              c230 0059  ld   $59
              c231 0080  ld   $80
              c232 002b  ld   $2b
              c233 0082  ld   $82
              c234 0011  ld   $11
              c235 00d6  ld   $d6
              c236 0064  ld   $64
              c237 00cf  ld   $cf
              c238 0018  ld   $18
              c239 0011  ld   $11
              c23a 0020  ld   $20
              c23b 000f  ld   $0f
              c23c 002b  ld   $2b
              c23d 00a2  ld   $a2
              c23e 005b  ld   $5b
              c23f 0002  ld   $02
              c240 00aa  ld   $aa
              c241 005b  ld   $5b
              c242 0000  ld   $00
              c243 00d6  ld   $d6
              c244 005b  ld   $5b
              c245 0000  ld   $00
              c246 00a6  ld   $a6
              c247 0085  ld   $85
              c248 00db  ld   $db
              c249 0061  ld   $61
              c24a 0011  ld   $11
              c24b 00fe  ld   $fe
              c24c 007c  ld   $7c
              c24d 002b  ld   $2b
              c24e 0084  ld   $84
              c24f 0011  ld   $11
              c250 00a0  ld   $a0
              c251 007d  ld   $7d
              c252 0085  ld   $85
              c253 00eb  ld   $eb
              c254 0061  ld   $61
              c255 0011  ld   $11
              c256 00fe  ld   $fe
              c257 007c  ld   $7c
              c258 002b  ld   $2b
              c259 0084  ld   $84
              c25a 0011  ld   $11
              c25b 00a0  ld   $a0
              c25c 007b  ld   $7b
              c25d 0085  ld   $85
              c25e 00eb  ld   $eb
              c25f 0061  ld   $61
              c260 0011  ld   $11
              c261 00fe  ld   $fe
              c262 007c  ld   $7c
              c263 002b  ld   $2b
              c264 0084  ld   $84
              c265 0011  ld   $11
              c266 00a0  ld   $a0
              c267 007a  ld   $7a
              c268 0085  ld   $85
              c269 00eb  ld   $eb
              c26a 0061  ld   $61
              c26b 0085  ld   $85
              c26c 0077  ld   $77
              c26d 0002  ld   $02
              c26e 0085  ld   $85
              c26f 00f7  ld   $f7
              c270 000a  ld   $0a
              c271 0085  ld   $85
              c272 00b9  ld   $b9
              c273 000a  ld   $0a
              c274 0085  ld   $85
              c275 00e6  ld   $e6
              c276 000a  ld   $0a
              c277 0085  ld   $85
              c278 0031  ld   $31
              c279 0005  ld   $05
              c27a 0085  ld   $85
              c27b 00ca  ld   $ca
              c27c 000a  ld   $0a
              c27d 0085  ld   $85
              c27e 00f2  ld   $f2
              c27f 0002  ld   $02
              c280 0085  ld   $85
              c281 0047  ld   $47
              c282 0003  ld   $03
              c283 0021  ld   $21
              c284 0040  ld   $40
              c285 0035  ld   $35
              c286 003f  ld   $3f
              c287 0048  ld   $48
              c288 0085  ld   $85
              c289 00d8  ld   $d8
              c28a 000a  ld   $0a
              c28b 0085  ld   $85
              c28c 0095  ld   $95
              c28d 0003  ld   $03
              c28e 005b  ld   $5b
              c28f 0000  ld   $00
              c290 004a  ld   $4a
              c291 005b  ld   $5b
              c292 00ff  ld   $ff
              c293 004c  ld   $4c
              c294 0085  ld   $85
              c295 00df  ld   $df
              c296 0062  ld   $62
              c297 0085  ld   $85
              c298 00f6  ld   $f6
              c299 0005  ld   $05
              c29a 0021  ld   $21
              c29b 0046  ld   $46
              c29c 0035  ld   $35
              c29d 003f  ld   $3f
              c29e 006f  ld   $6f
              c29f 0090  ld   $90
              c2a0 003c  ld   $3c
              c2a1 0093  ld   $93
              c2a2 004a  ld   $4a
              c2a3 0090  ld   $90
              c2a4 0062  ld   $62
              c2a5 00b4  ld   $b4
              c2a6 0080  ld   $80
              c2a7 0075  ld   $75
              c2a8 005b  ld   $5b
              c2a9 0000  ld   $00
              c2aa 0030  ld   $30
              c2ab 0021  ld   $21
              c2ac 0030  ld   $30
              c2ad 002b  ld   $2b
              c2ae 0082  ld   $82
              c2af 0085  ld   $85
              c2b0 00a0  ld   $a0
              c2b1 0063  ld   $63
              c2b2 002b  ld   $2b
              c2b3 0030  ld   $30
              c2b4 0021  ld   $21
              c2b5 0030  ld   $30
              c2b6 00bb  ld   $bb
              c2b7 00c4  ld   $c4
              c2b8 0002  ld   $02
              c2b9 0011  ld   $11
              c2ba 00a0  ld   $a0
              c2bb 007b  ld   $7b
              c2bc 0025  ld   $25
              c2bd 0006  ld   $06
              c2be 005b  ld   $5b
              c2bf 0024  ld   $24
              c2c0 004e  ld   $4e
              c2c1 0011  ld   $11
              c2c2 00a0  ld   $a0
              c2c3 007b  ld   $7b
              c2c4 0099  ld   $99
              c2c5 004e  ld   $4e
              c2c6 00e6  ld   $e6
              c2c7 0023  ld   $23
              c2c8 002b  ld   $2b
              c2c9 00e8  ld   $e8
              c2ca 0039  ld   $39
              c2cb 004e  ld   $4e
              c2cc 00f0  ld   $f0
              c2cd 00e8  ld   $e8
              c2ce 00a7  ld   $a7
              c2cf 002b  ld   $2b
              c2d0 004e  ld   $4e
              c2d1 0093  ld   $93
              c2d2 004e  ld   $4e
              c2d3 00bd  ld   $bd
              c2d4 008f  ld   $8f
              c2d5 0002  ld   $02
              c2d6 0011  ld   $11
              c2d7 00a0  ld   $a0
              c2d8 007b  ld   $7b
              c2d9 002b  ld   $2b
              c2da 0084  ld   $84
              c2db 005b  ld   $5b
              c2dc 0006  ld   $06
              c2dd 0082  ld   $82
              c2de 0011  ld   $11
              c2df 00a0  ld   $a0
              c2e0 007e  ld   $7e
              c2e1 0085  ld   $85
              c2e2 00a4  ld   $a4
              c2e3 0066  ld   $66
              c2e4 0011  ld   $11
              c2e5 00a0  ld   $a0
              c2e6 007e  ld   $7e
              c2e7 002b  ld   $2b
              c2e8 0084  ld   $84
              c2e9 0011  ld   $11
              c2ea 00a6  ld   $a6
              c2eb 007c  ld   $7c
              c2ec 0085  ld   $85
              c2ed 00cf  ld   $cf
              c2ee 0065  ld   $65
              c2ef 0082  ld   $82
              c2f0 0001  ld   $01
              c2f1 00bb  ld   $bb
              c2f2 00c4  ld   $c4
              c2f3 0002  ld   $02
              c2f4 0063  ld   $63
              c2f5 00ff  ld   $ff
              c2f6 0021  ld   $21
              c2f7 0030  ld   $30
              c2f8 00bd  ld   $bd
              c2f9 0079  ld   $79
              c2fa 0002  ld   $02
              c2fb fe00  bra  ac          ;+-----------------------------------+
              c2fc fcfd  bra  $c2fd       ;|                                   |
              c2fd 1418  ld   $18,y       ;| Trampoline for page $c200 lookups |
              c2fe e006  jmp  y,$06       ;|                                   |
              c2ff c218  st   [$18]       ;+-----------------------------------+
              c300 0011  ld   $11
              c301 00b1  ld   $b1
              c302 0069  ld   $69
              c303 0085  ld   $85
              c304 00a8  ld   $a8
              c305 0063  ld   $63
              c306 0085  ld   $85
              c307 00c1  ld   $c1
              c308 0067  ld   $67
              c309 00b4  ld   $b4
              c30a 0080  ld   $80
              c30b 0063  ld   $63
              c30c 00ff  ld   $ff
              c30d 0075  ld   $75
              c30e 0011  ld   $11
              c30f 0006  ld   $06
              c310 000b  ld   $0b
              c311 002b  ld   $2b
              c312 0022  ld   $22
              c313 0021  ld   $21
              c314 0032  ld   $32
              c315 002b  ld   $2b
              c316 0024  ld   $24
              c317 005b  ld   $5b
              c318 0001  ld   $01
              c319 0026  ld   $26
              c31a 001a  ld   $1a
              c31b 0034  ld   $34
              c31c 00e9  ld   $e9
              c31d 00e9  ld   $e9
              c31e 00e9  ld   $e9
              c31f 002b  ld   $2b
              c320 0027  ld   $27
              c321 00b4  ld   $b4
              c322 00e6  ld   $e6
              c323 002b  ld   $2b
              c324 0036  ld   $36
              c325 0063  ld   $63
              c326 00ff  ld   $ff
              c327 0075  ld   $75
              c328 0021  ld   $21
              c329 006e  ld   $6e
              c32a 002b  ld   $2b
              c32b 0022  ld   $22
              c32c 0085  ld   $85
              c32d 0000  ld   $00
              c32e 0003  ld   $03
              c32f 0003  ld   $03
              c330 0000  ld   $00
              c331 00f8  ld   $f8
              c332 0011  ld   $11
              c333 00ae  ld   $ae
              c334 007c  ld   $7c
              c335 002b  ld   $2b
              c336 0028  ld   $28
              c337 0021  ld   $21
              c338 0028  ld   $28
              c339 002b  ld   $2b
              c33a 0024  ld   $24
              c33b 0016  ld   $16
              c33c 00cf  ld   $cf
              c33d 0027  ld   $27
              c33e 00b4  ld   $b4
              c33f 00fe  ld   $fe
              c340 0039  ld   $39
              c341 0028  ld   $28
              c342 008c  ld   $8c
              c343 00ff  ld   $ff
              c344 00bb  ld   $bb
              c345 0003  ld   $03
              c346 0003  ld   $03
              c347 0016  ld   $16
              c348 00db  ld   $db
              c349 0027  ld   $27
              c34a 00b4  ld   $b4
              c34b 00fe  ld   $fe
              c34c 0016  ld   $16
              c34d 00eb  ld   $eb
              c34e 0027  ld   $27
              c34f 00b4  ld   $b4
              c350 00fe  ld   $fe
              c351 0016  ld   $16
              c352 00fb  ld   $fb
              c353 0027  ld   $27
              c354 00b4  ld   $b4
              c355 00fe  ld   $fe
              c356 0016  ld   $16
              c357 003c  ld   $3c
              c358 0028  ld   $28
              c359 0016  ld   $16
              c35a 0002  ld   $02
              c35b 0027  ld   $27
              c35c 00b4  ld   $b4
              c35d 00fe  ld   $fe
              c35e 002d  ld   $2d
              c35f 0004  ld   $04
              c360 0027  ld   $27
              c361 0032  ld   $32
              c362 0028  ld   $28
              c363 0028  ld   $28
              c364 0016  ld   $16
              c365 00b9  ld   $b9
              c366 0027  ld   $27
              c367 00b4  ld   $b4
              c368 00fe  ld   $fe
              c369 0011  ld   $11
              c36a 00ae  ld   $ae
              c36b 007c  ld   $7c
              c36c 00ad  ld   $ad
              c36d 002b  ld   $2b
              c36e 0040  ld   $40
              c36f 0011  ld   $11
              c370 00af  ld   $af
              c371 007c  ld   $7c
              c372 00ad  ld   $ad
              c373 0082  ld   $82
              c374 003f  ld   $3f
              c375 002b  ld   $2b
              c376 0042  ld   $42
              c377 0063  ld   $63
              c378 00ff  ld   $ff
              c379 0075  ld   $75
              c37a 005b  ld   $5b
              c37b 0002  ld   $02
              c37c 0050  ld   $50
              c37d 0021  ld   $21
              c37e 0042  ld   $42
              c37f 00bd  ld   $bd
              c380 0050  ld   $50
              c381 0003  ld   $03
              c382 0063  ld   $63
              c383 00ff  ld   $ff
              c384 0021  ld   $21
              c385 0038  ld   $38
              c386 008c  ld   $8c
              c387 0064  ld   $64
              c388 00bd  ld   $bd
              c389 0059  ld   $59
              c38a 0003  ld   $03
              c38b 0063  ld   $63
              c38c 00ff  ld   $ff
              c38d 005b  ld   $5b
              c38e 0000  ld   $00
              c38f 0052  ld   $52
              c390 0011  ld   $11
              c391 00ae  ld   $ae
              c392 007c  ld   $7c
              c393 0099  ld   $99
              c394 0050  ld   $50
              c395 00ad  ld   $ad
              c396 002b  ld   $2b
              c397 0054  ld   $54
              c398 0021  ld   $21
              c399 0038  ld   $38
              c39a 002b  ld   $2b
              c39b 0096  ld   $96
              c39c 0021  ld   $21
              c39d 0052  ld   $52
              c39e 002b  ld   $2b
              c39f 0098  ld   $98
              c3a0 0011  ld   $11
              c3a1 0038  ld   $38
              c3a2 0006  ld   $06
              c3a3 0085  ld   $85
              c3a4 00e3  ld   $e3
              c3a5 0061  ld   $61
              c3a6 0069  ld   $69
              c3a7 0054  ld   $54
              c3a8 0093  ld   $93
              c3a9 0050  ld   $50
              c3aa 0093  ld   $93
              c3ab 0052  ld   $52
              c3ac 0021  ld   $21
              c3ad 0054  ld   $54
              c3ae 00bd  ld   $bd
              c3af 005c  ld   $5c
              c3b0 0003  ld   $03
              c3b1 0093  ld   $93
              c3b2 0038  ld   $38
              c3b3 0021  ld   $21
              c3b4 0038  ld   $38
              c3b5 008c  ld   $8c
              c3b6 0064  ld   $64
              c3b7 00bd  ld   $bd
              c3b8 0088  ld   $88
              c3b9 0003  ld   $03
              c3ba 0063  ld   $63
              c3bb 00ff  ld   $ff
              c3bc 0021  ld   $21
              c3bd 0050  ld   $50
              c3be 00e6  ld   $e6
              c3bf 0002  ld   $02
              c3c0 00fc  ld   $fc
              c3c1 0042  ld   $42
              c3c2 00bd  ld   $bd
              c3c3 0059  ld   $59
              c3c4 0003  ld   $03
              c3c5 0063  ld   $63
              c3c6 00ff  ld   $ff
              c3c7 0075  ld   $75
              c3c8 0021  ld   $21
              c3c9 0038  ld   $38
              c3ca 00e6  ld   $e6
              c3cb 000f  ld   $0f
              c3cc 002b  ld   $2b
              c3cd 00e8  ld   $e8
              c3ce 0021  ld   $21
              c3cf 003a  ld   $3a
              c3d0 002b  ld   $2b
              c3d1 0082  ld   $82
              c3d2 0021  ld   $21
              c3d3 00e8  ld   $e8
              c3d4 0085  ld   $85
              c3d5 00d0  ld   $d0
              c3d6 0062  ld   $62
              c3d7 002b  ld   $2b
              c3d8 0082  ld   $82
              c3d9 0059  ld   $59
              c3da 0000  ld   $00
              c3db 0085  ld   $85
              c3dc 00c1  ld   $c1
              c3dd 0062  ld   $62
              c3de 002b  ld   $2b
              c3df 0056  ld   $56
              c3e0 0021  ld   $21
              c3e1 003a  ld   $3a
              c3e2 00e3  ld   $e3
              c3e3 000e  ld   $0e
              c3e4 002b  ld   $2b
              c3e5 00e8  ld   $e8
              c3e6 0021  ld   $21
              c3e7 0038  ld   $38
              c3e8 00e6  ld   $e6
              c3e9 0001  ld   $01
              c3ea 002b  ld   $2b
              c3eb 00ea  ld   $ea
              c3ec 0021  ld   $21
              c3ed 00e8  ld   $e8
              c3ee 002b  ld   $2b
              c3ef 0082  ld   $82
              c3f0 0021  ld   $21
              c3f1 00ea  ld   $ea
              c3f2 0085  ld   $85
              c3f3 00d0  ld   $d0
              c3f4 0062  ld   $62
              c3f5 002b  ld   $2b
              c3f6 0058  ld   $58
              c3f7 0021  ld   $21
              c3f8 0058  ld   $58
              c3f9 002b  ld   $2b
              c3fa 00d8  ld   $d8
              c3fb fe00  bra  ac          ;+-----------------------------------+
              c3fc fcfd  bra  $c3fd       ;|                                   |
              c3fd 1418  ld   $18,y       ;| Trampoline for page $c300 lookups |
              c3fe e006  jmp  y,$06       ;|                                   |
              c3ff c218  st   [$18]       ;+-----------------------------------+
              c400 005b  ld   $5b
              c401 0000  ld   $00
              c402 005a  ld   $5a
              c403 0021  ld   $21
              c404 005a  ld   $5a
              c405 002b  ld   $2b
              c406 0096  ld   $96
              c407 005b  ld   $5b
              c408 0000  ld   $00
              c409 0098  ld   $98
              c40a 0011  ld   $11
              c40b 0038  ld   $38
              c40c 0006  ld   $06
              c40d 0085  ld   $85
              c40e 00e3  ld   $e3
              c40f 0061  ld   $61
              c410 00e3  ld   $e3
              c411 0001  ld   $01
              c412 002b  ld   $2b
              c413 005c  ld   $5c
              c414 0039  ld   $39
              c415 005c  ld   $5c
              c416 002b  ld   $2b
              c417 005e  ld   $5e
              c418 0021  ld   $21
              c419 005c  ld   $5c
              c41a 00e6  ld   $e6
              c41b 0001  ld   $01
              c41c 00ad  ld   $ad
              c41d 002b  ld   $2b
              c41e 0060  ld   $60
              c41f 0021  ld   $21
              c420 005a  ld   $5a
              c421 00b8  ld   $b8
              c422 003a  ld   $3a
              c423 00fc  ld   $fc
              c424 003c  ld   $3c
              c425 00bd  ld   $bd
              c426 0015  ld   $15
              c427 0004  ld   $04
              c428 0021  ld   $21
              c429 0060  ld   $60
              c42a 008c  ld   $8c
              c42b 0001  ld   $01
              c42c 0085  ld   $85
              c42d 0000  ld   $00
              c42e 0004  ld   $04
              c42f 0004  ld   $04
              c430 0000  ld   $00
              c431 00fa  ld   $fa
              c432 00bd  ld   $bd
              c433 0009  ld   $09
              c434 0004  ld   $04
              c435 0011  ld   $11
              c436 003f  ld   $3f
              c437 0020  ld   $20
              c438 002b  ld   $2b
              c439 00a2  ld   $a2
              c43a 0085  ld   $85
              c43b 0010  ld   $10
              c43c 0004  ld   $04
              c43d 0011  ld   $11
              c43e 002a  ld   $2a
              c43f 0020  ld   $20
              c440 002b  ld   $2b
              c441 00a2  ld   $a2
              c442 0021  ld   $21
              c443 005c  ld   $5c
              c444 002b  ld   $2b
              c445 0044  ld   $44
              c446 0085  ld   $85
              c447 002b  ld   $2b
              c448 0004  ld   $04
              c449 0021  ld   $21
              c44a 0060  ld   $60
              c44b 008c  ld   $8c
              c44c 0001  ld   $01
              c44d 00bd  ld   $bd
              c44e 0024  ld   $24
              c44f 0004  ld   $04
              c450 0011  ld   $11
              c451 0020  ld   $20
              c452 003f  ld   $3f
              c453 002b  ld   $2b
              c454 00a2  ld   $a2
              c455 0085  ld   $85
              c456 002b  ld   $2b
              c457 0004  ld   $04
              c458 0011  ld   $11
              c459 0020  ld   $20
              c45a 002a  ld   $2a
              c45b 002b  ld   $2b
              c45c 00a2  ld   $a2
              c45d 0021  ld   $21
              c45e 005a  ld   $5a
              c45f 00b8  ld   $b8
              c460 003a  ld   $3a
              c461 00bf  ld   $bf
              c462 004b  ld   $4b
              c463 0004  ld   $04
              c464 0016  ld   $16
              c465 0002  ld   $02
              c466 00a4  ld   $a4
              c467 0021  ld   $21
              c468 005a  ld   $5a
              c469 00b8  ld   $b8
              c46a 003a  ld   $3a
              c46b 00e9  ld   $e9
              c46c 00e9  ld   $e9
              c46d 00e9  ld   $e9
              c46e 005e  ld   $5e
              c46f 00a5  ld   $a5
              c470 0085  ld   $85
              c471 00a5  ld   $a5
              c472 0067  ld   $67
              c473 0021  ld   $21
              c474 005c  ld   $5c
              c475 0085  ld   $85
              c476 00a8  ld   $a8
              c477 0063  ld   $63
              c478 0059  ld   $59
              c479 000c  ld   $0c
              c47a 00b8  ld   $b8
              c47b 005e  ld   $5e
              c47c 0085  ld   $85
              c47d 00a0  ld   $a0
              c47e 0064  ld   $64
              c47f 0079  ld   $79
              c480 005a  ld   $5a
              c481 0021  ld   $21
              c482 005a  ld   $5a
              c483 00b8  ld   $b8
              c484 00d8  ld   $d8
              c485 00c3  ld   $c3
              c486 00ca  ld   $ca
              c487 0003  ld   $03
              c488 0063  ld   $63
              c489 00ff  ld   $ff
              c48a 0075  ld   $75
              c48b 0021  ld   $21
              c48c 0038  ld   $38
              c48d 00e6  ld   $e6
              c48e 000f  ld   $0f
              c48f 002b  ld   $2b
              c490 00e8  ld   $e8
              c491 0021  ld   $21
              c492 003a  ld   $3a
              c493 002b  ld   $2b
              c494 0082  ld   $82
              c495 0021  ld   $21
              c496 00e8  ld   $e8
              c497 0085  ld   $85
              c498 00d0  ld   $d0
              c499 0062  ld   $62
              c49a 002b  ld   $2b
              c49b 0082  ld   $82
              c49c 0059  ld   $59
              c49d 0000  ld   $00
              c49e 0085  ld   $85
              c49f 00c1  ld   $c1
              c4a0 0062  ld   $62
              c4a1 002b  ld   $2b
              c4a2 0056  ld   $56
              c4a3 0021  ld   $21
              c4a4 0056  ld   $56
              c4a5 0099  ld   $99
              c4a6 003e  ld   $3e
              c4a7 002b  ld   $2b
              c4a8 0062  ld   $62
              c4a9 0021  ld   $21
              c4aa 0062  ld   $62
              c4ab 002b  ld   $2b
              c4ac 0096  ld   $96
              c4ad 005b  ld   $5b
              c4ae 0000  ld   $00
              c4af 0098  ld   $98
              c4b0 0011  ld   $11
              c4b1 0038  ld   $38
              c4b2 0006  ld   $06
              c4b3 0085  ld   $85
              c4b4 00e3  ld   $e3
              c4b5 0061  ld   $61
              c4b6 00e3  ld   $e3
              c4b7 0001  ld   $01
              c4b8 002b  ld   $2b
              c4b9 0064  ld   $64
              c4ba 0039  ld   $39
              c4bb 0064  ld   $64
              c4bc 002b  ld   $2b
              c4bd 0066  ld   $66
              c4be 0021  ld   $21
              c4bf 0064  ld   $64
              c4c0 00e6  ld   $e6
              c4c1 0001  ld   $01
              c4c2 00ad  ld   $ad
              c4c3 002b  ld   $2b
              c4c4 0060  ld   $60
              c4c5 0021  ld   $21
              c4c6 0060  ld   $60
              c4c7 008c  ld   $8c
              c4c8 0001  ld   $01
              c4c9 00bd  ld   $bd
              c4ca 00a0  ld   $a0
              c4cb 0004  ld   $04
              c4cc 0011  ld   $11
              c4cd 0020  ld   $20
              c4ce 003f  ld   $3f
              c4cf 002b  ld   $2b
              c4d0 00a2  ld   $a2
              c4d1 0085  ld   $85
              c4d2 00a7  ld   $a7
              c4d3 0004  ld   $04
              c4d4 0011  ld   $11
              c4d5 0020  ld   $20
              c4d6 002a  ld   $2a
              c4d7 002b  ld   $2b
              c4d8 00a2  ld   $a2
              c4d9 0016  ld   $16
              c4da 0002  ld   $02
              c4db 00a4  ld   $a4
              c4dc 0021  ld   $21
              c4dd 0062  ld   $62
              c4de 00b8  ld   $b8
              c4df 0056  ld   $56
              c4e0 00e9  ld   $e9
              c4e1 00e9  ld   $e9
              c4e2 00e9  ld   $e9
              c4e3 005e  ld   $5e
              c4e4 00a5  ld   $a5
              c4e5 0085  ld   $85
              c4e6 00a5  ld   $a5
              c4e7 0067  ld   $67
              c4e8 0021  ld   $21
              c4e9 0064  ld   $64
              c4ea 0085  ld   $85
              c4eb 00a8  ld   $a8
              c4ec 0063  ld   $63
              c4ed 0059  ld   $59
              c4ee 000c  ld   $0c
              c4ef 00b8  ld   $b8
              c4f0 0066  ld   $66
              c4f1 0085  ld   $85
              c4f2 00a0  ld   $a0
              c4f3 0064  ld   $64
              c4f4 0021  ld   $21
              c4f5 003c  ld   $3c
              c4f6 002b  ld   $2b
              c4f7 003e  ld   $3e
              c4f8 0021  ld   $21
              c4f9 0056  ld   $56
              c4fa 0099  ld   $99
              c4fb fe00  bra  ac          ;+-----------------------------------+
              c4fc fcfd  bra  $c4fd       ;|                                   |
              c4fd 1418  ld   $18,y       ;| Trampoline for page $c400 lookups |
              c4fe e006  jmp  y,$06       ;|                                   |
              c4ff c218  st   [$18]       ;+-----------------------------------+
              c500 003c  ld   $3c
              c501 002b  ld   $2b
              c502 0068  ld   $68
              c503 0021  ld   $21
              c504 0068  ld   $68
              c505 002b  ld   $2b
              c506 0096  ld   $96
              c507 005b  ld   $5b
              c508 0000  ld   $00
              c509 0098  ld   $98
              c50a 0011  ld   $11
              c50b 0038  ld   $38
              c50c 0006  ld   $06
              c50d 0085  ld   $85
              c50e 00e3  ld   $e3
              c50f 0061  ld   $61
              c510 00e3  ld   $e3
              c511 0001  ld   $01
              c512 002b  ld   $2b
              c513 006a  ld   $6a
              c514 0039  ld   $39
              c515 006a  ld   $6a
              c516 002b  ld   $2b
              c517 006c  ld   $6c
              c518 0021  ld   $21
              c519 006a  ld   $6a
              c51a 00e6  ld   $e6
              c51b 0001  ld   $01
              c51c 00ad  ld   $ad
              c51d 002b  ld   $2b
              c51e 0060  ld   $60
              c51f 0021  ld   $21
              c520 0060  ld   $60
              c521 008c  ld   $8c
              c522 0001  ld   $01
              c523 00bd  ld   $bd
              c524 00fe  ld   $fe
              c525 0005  ld   $05
              c526 0011  ld   $11
              c527 003f  ld   $3f
              c528 0020  ld   $20
              c529 002b  ld   $2b
              c52a 00a2  ld   $a2
              c52b 0085  ld   $85
              c52c 0005  ld   $05
              c52d 0005  ld   $05
              c52e 0085  ld   $85
              c52f 0000  ld   $00
              c530 0005  ld   $05
              c531 0005  ld   $05
              c532 0000  ld   $00
              c533 0000  ld   $00
              c534 0011  ld   $11
              c535 002a  ld   $2a
              c536 0020  ld   $20
              c537 002b  ld   $2b
              c538 00a2  ld   $a2
              c539 0016  ld   $16
              c53a 0002  ld   $02
              c53b 00a4  ld   $a4
              c53c 0021  ld   $21
              c53d 0068  ld   $68
              c53e 00b8  ld   $b8
              c53f 0056  ld   $56
              c540 00e9  ld   $e9
              c541 00e9  ld   $e9
              c542 00e9  ld   $e9
              c543 005e  ld   $5e
              c544 00a5  ld   $a5
              c545 0085  ld   $85
              c546 00a5  ld   $a5
              c547 0067  ld   $67
              c548 0021  ld   $21
              c549 006a  ld   $6a
              c54a 0085  ld   $85
              c54b 00a8  ld   $a8
              c54c 0063  ld   $63
              c54d 0059  ld   $59
              c54e 000c  ld   $0c
              c54f 00b8  ld   $b8
              c550 006c  ld   $6c
              c551 0085  ld   $85
              c552 00a0  ld   $a0
              c553 0064  ld   $64
              c554 0021  ld   $21
              c555 006a  ld   $6a
              c556 002b  ld   $2b
              c557 0044  ld   $44
              c558 0063  ld   $63
              c559 00ff  ld   $ff
              c55a 0075  ld   $75
              c55b 005b  ld   $5b
              c55c 0000  ld   $00
              c55d 006e  ld   $6e
              c55e 0011  ld   $11
              c55f 006d  ld   $6d
              c560 001a  ld   $1a
              c561 002b  ld   $2b
              c562 006e  ld   $6e
              c563 0063  ld   $63
              c564 00ff  ld   $ff
              c565 0075  ld   $75
              c566 0011  ld   $11
              c567 00ef  ld   $ef
              c568 007c  ld   $7c
              c569 0025  ld   $25
              c56a 0003  ld   $03
              c56b 0011  ld   $11
              c56c 00a0  ld   $a0
              c56d 007a  ld   $7a
              c56e 00ad  ld   $ad
              c56f 002b  ld   $2b
              c570 0070  ld   $70
              c571 0059  ld   $59
              c572 0001  ld   $01
              c573 0099  ld   $99
              c574 0070  ld   $70
              c575 00e3  ld   $e3
              c576 0001  ld   $01
              c577 002b  ld   $2b
              c578 0034  ld   $34
              c579 0021  ld   $21
              c57a 0070  ld   $70
              c57b 00c3  ld   $c3
              c57c 0072  ld   $72
              c57d 0005  ld   $05
              c57e 0021  ld   $21
              c57f 0070  ld   $70
              c580 00e3  ld   $e3
              c581 0001  ld   $01
              c582 002b  ld   $2b
              c583 00e8  ld   $e8
              c584 0021  ld   $21
              c585 0070  ld   $70
              c586 00e3  ld   $e3
              c587 0001  ld   $01
              c588 002b  ld   $2b
              c589 00d8  ld   $d8
              c58a 005b  ld   $5b
              c58b 0001  ld   $01
              c58c 005a  ld   $5a
              c58d 0011  ld   $11
              c58e 00ef  ld   $ef
              c58f 007c  ld   $7c
              c590 0099  ld   $99
              c591 005a  ld   $5a
              c592 002b  ld   $2b
              c593 00e8  ld   $e8
              c594 0011  ld   $11
              c595 00a0  ld   $a0
              c596 007a  ld   $7a
              c597 0099  ld   $99
              c598 005a  ld   $5a
              c599 00ad  ld   $ad
              c59a 00f0  ld   $f0
              c59b 00e8  ld   $e8
              c59c 0079  ld   $79
              c59d 005a  ld   $5a
              c59e 0021  ld   $21
              c59f 005a  ld   $5a
              c5a0 00b8  ld   $b8
              c5a1 00d8  ld   $d8
              c5a2 00c3  ld   $c3
              c5a3 0057  ld   $57
              c5a4 0005  ld   $05
              c5a5 0085  ld   $85
              c5a6 0079  ld   $79
              c5a7 0005  ld   $05
              c5a8 0011  ld   $11
              c5a9 00f0  ld   $f0
              c5aa 007c  ld   $7c
              c5ab 0025  ld   $25
              c5ac 0000  ld   $00
              c5ad 0085  ld   $85
              c5ae 00d8  ld   $d8
              c5af 0002  ld   $02
              c5b0 0085  ld   $85
              c5b1 00fc  ld   $fc
              c5b2 0009  ld   $09
              c5b3 0011  ld   $11
              c5b4 00fe  ld   $fe
              c5b5 007c  ld   $7c
              c5b6 002b  ld   $2b
              c5b7 0084  ld   $84
              c5b8 0011  ld   $11
              c5b9 00a0  ld   $a0
              c5ba 007a  ld   $7a
              c5bb 0085  ld   $85
              c5bc 00eb  ld   $eb
              c5bd 0061  ld   $61
              c5be 0063  ld   $63
              c5bf 00ff  ld   $ff
              c5c0 0075  ld   $75
              c5c1 0085  ld   $85
              c5c2 00b9  ld   $b9
              c5c3 000a  ld   $0a
              c5c4 0011  ld   $11
              c5c5 00ef  ld   $ef
              c5c6 007c  ld   $7c
              c5c7 0025  ld   $25
              c5c8 0002  ld   $02
              c5c9 0021  ld   $21
              c5ca 0044  ld   $44
              c5cb 002b  ld   $2b
              c5cc 0084  ld   $84
              c5cd 0011  ld   $11
              c5ce 00a0  ld   $a0
              c5cf 007d  ld   $7d
              c5d0 0085  ld   $85
              c5d1 00eb  ld   $eb
              c5d2 0061  ld   $61
              c5d3 0011  ld   $11
              c5d4 00a0  ld   $a0
              c5d5 007d  ld   $7d
              c5d6 00ad  ld   $ad
              c5d7 002b  ld   $2b
              c5d8 0070  ld   $70
              c5d9 0021  ld   $21
              c5da 0070  ld   $70
              c5db 00e3  ld   $e3
              c5dc 0001  ld   $01
              c5dd 002b  ld   $2b
              c5de 00e8  ld   $e8
              c5df 0021  ld   $21
              c5e0 0070  ld   $70
              c5e1 00e3  ld   $e3
              c5e2 0001  ld   $01
              c5e3 002b  ld   $2b
              c5e4 00d8  ld   $d8
              c5e5 005b  ld   $5b
              c5e6 0001  ld   $01
              c5e7 005a  ld   $5a
              c5e8 0011  ld   $11
              c5e9 00ef  ld   $ef
              c5ea 007c  ld   $7c
              c5eb 0099  ld   $99
              c5ec 005a  ld   $5a
              c5ed 002b  ld   $2b
              c5ee 00e8  ld   $e8
              c5ef 0011  ld   $11
              c5f0 00a0  ld   $a0
              c5f1 007d  ld   $7d
              c5f2 0099  ld   $99
              c5f3 005a  ld   $5a
              c5f4 00ad  ld   $ad
              c5f5 00f0  ld   $f0
              c5f6 00e8  ld   $e8
              c5f7 0079  ld   $79
              c5f8 005a  ld   $5a
              c5f9 0021  ld   $21
              c5fa 005a  ld   $5a
              c5fb fe00  bra  ac          ;+-----------------------------------+
              c5fc fcfd  bra  $c5fd       ;|                                   |
              c5fd 1418  ld   $18,y       ;| Trampoline for page $c500 lookups |
              c5fe e006  jmp  y,$06       ;|                                   |
              c5ff c218  st   [$18]       ;+-----------------------------------+
              c600 00b8  ld   $b8
              c601 00d8  ld   $d8
              c602 00c3  ld   $c3
              c603 00b2  ld   $b2
              c604 0005  ld   $05
              c605 0011  ld   $11
              c606 0020  ld   $20
              c607 000f  ld   $0f
              c608 002b  ld   $2b
              c609 00a2  ld   $a2
              c60a 0085  ld   $85
              c60b 00e5  ld   $e5
              c60c 0063  ld   $63
              c60d 0085  ld   $85
              c60e 00a5  ld   $a5
              c60f 0065  ld   $65
              c610 0011  ld   $11
              c611 00a5  ld   $a5
              c612 0069  ld   $69
              c613 0085  ld   $85
              c614 00a8  ld   $a8
              c615 0063  ld   $63
              c616 0085  ld   $85
              c617 00c1  ld   $c1
              c618 0067  ld   $67
              c619 0059  ld   $59
              c61a 0001  ld   $01
              c61b 0099  ld   $99
              c61c 0070  ld   $70
              c61d 00e3  ld   $e3
              c61e 0001  ld   $01
              c61f 002b  ld   $2b
              c620 0034  ld   $34
              c621 0085  ld   $85
              c622 00d8  ld   $d8
              c623 0002  ld   $02
              c624 0021  ld   $21
              c625 0030  ld   $30
              c626 002b  ld   $2b
              c627 0024  ld   $24
              c628 0059  ld   $59
              c629 00a8  ld   $a8
              c62a 0085  ld   $85
              c62b 00d4  ld   $d4
              c62c 0061  ld   $61
              c62d 0063  ld   $63
              c62e 00ff  ld   $ff
              c62f 0075  ld   $75
              c630 001a  ld   $1a
              c631 000f  ld   $0f
              c632 002b  ld   $2b
              c633 0072  ld   $72
              c634 0021  ld   $21
              c635 0072  ld   $72
              c636 0085  ld   $85
              c637 0000  ld   $00
              c638 0006  ld   $06
              c639 0006  ld   $06
              c63a 0000  ld   $00
              c63b 0036  ld   $36
              c63c 00fc  ld   $fc
              c63d 004c  ld   $4c
              c63e 00bb  ld   $bb
              c63f 0014  ld   $14
              c640 0006  ld   $06
              c641 005b  ld   $5b
              c642 0000  ld   $00
              c643 004a  ld   $4a
              c644 0021  ld   $21
              c645 0072  ld   $72
              c646 002b  ld   $2b
              c647 004c  ld   $4c
              c648 0021  ld   $21
              c649 0072  ld   $72
              c64a 002b  ld   $2b
              c64b 0082  ld   $82
              c64c 005b  ld   $5b
              c64d 0000  ld   $00
              c64e 0084  ld   $84
              c64f 0085  ld   $85
              c650 00cf  ld   $cf
              c651 0066  ld   $66
              c652 0021  ld   $21
              c653 004a  ld   $4a
              c654 00e6  ld   $e6
              c655 0014  ld   $14
              c656 00c3  ld   $c3
              c657 002e  ld   $2e
              c658 0006  ld   $06
              c659 0021  ld   $21
              c65a 004a  ld   $4a
              c65b 00d3  ld   $d3
              c65c 0018  ld   $18
              c65d 0082  ld   $82
              c65e 0001  ld   $01
              c65f 00bb  ld   $bb
              c660 002e  ld   $2e
              c661 0006  ld   $06
              c662 0021  ld   $21
              c663 0072  ld   $72
              c664 002b  ld   $2b
              c665 0082  ld   $82
              c666 005b  ld   $5b
              c667 0000  ld   $00
              c668 0084  ld   $84
              c669 0085  ld   $85
              c66a 00cf  ld   $cf
              c66b 0066  ld   $66
              c66c 0063  ld   $63
              c66d 00ff  ld   $ff
              c66e 0075  ld   $75
              c66f 0085  ld   $85
              c670 00a0  ld   $a0
              c671 0008  ld   $08
              c672 0006  ld   $06
              c673 0038  ld   $38
              c674 00c8  ld   $c8
              c675 00f1  ld   $f1
              c676 0079  ld   $79
              c677 00e2  ld   $e2
              c678 0079  ld   $79
              c679 00d3  ld   $d3
              c67a 0079  ld   $79
              c67b 00c4  ld   $c4
              c67c 0079  ld   $79
              c67d 00b5  ld   $b5
              c67e 0079  ld   $79
              c67f 00a6  ld   $a6
              c680 0079  ld   $79
              c681 00f1  ld   $f1
              c682 0078  ld   $78
              c683 00e2  ld   $e2
              c684 0078  ld   $78
              c685 00d3  ld   $d3
              c686 0078  ld   $78
              c687 00c4  ld   $c4
              c688 0078  ld   $78
              c689 00b5  ld   $b5
              c68a 0078  ld   $78
              c68b 00a6  ld   $a6
              c68c 0078  ld   $78
              c68d 00f1  ld   $f1
              c68e 0077  ld   $77
              c68f 00e2  ld   $e2
              c690 0077  ld   $77
              c691 00d3  ld   $d3
              c692 0077  ld   $77
              c693 00c4  ld   $c4
              c694 0077  ld   $77
              c695 00b5  ld   $b5
              c696 0077  ld   $77
              c697 00a6  ld   $a6
              c698 0077  ld   $77
              c699 00f1  ld   $f1
              c69a 0076  ld   $76
              c69b 00e2  ld   $e2
              c69c 0076  ld   $76
              c69d 00d3  ld   $d3
              c69e 0076  ld   $76
              c69f 00c4  ld   $c4
              c6a0 0076  ld   $76
              c6a1 00b5  ld   $b5
              c6a2 0076  ld   $76
              c6a3 00a6  ld   $a6
              c6a4 0076  ld   $76
              c6a5 00f1  ld   $f1
              c6a6 0075  ld   $75
              c6a7 00e2  ld   $e2
              c6a8 0075  ld   $75
              c6a9 00d3  ld   $d3
              c6aa 0075  ld   $75
              c6ab 00c4  ld   $c4
              c6ac 0075  ld   $75
              c6ad 00b5  ld   $b5
              c6ae 0075  ld   $75
              c6af 00a6  ld   $a6
              c6b0 0075  ld   $75
              c6b1 00f1  ld   $f1
              c6b2 0074  ld   $74
              c6b3 00e2  ld   $e2
              c6b4 0074  ld   $74
              c6b5 00d3  ld   $d3
              c6b6 0074  ld   $74
              c6b7 00c4  ld   $c4
              c6b8 0074  ld   $74
              c6b9 00b5  ld   $b5
              c6ba 0074  ld   $74
              c6bb 00a6  ld   $a6
              c6bc 0074  ld   $74
              c6bd 00f1  ld   $f1
              c6be 0073  ld   $73
              c6bf 00e2  ld   $e2
              c6c0 0073  ld   $73
              c6c1 00d3  ld   $d3
              c6c2 0073  ld   $73
              c6c3 00c4  ld   $c4
              c6c4 0073  ld   $73
              c6c5 00b5  ld   $b5
              c6c6 0073  ld   $73
              c6c7 00a6  ld   $a6
              c6c8 0073  ld   $73
              c6c9 00f1  ld   $f1
              c6ca 0072  ld   $72
              c6cb 00e2  ld   $e2
              c6cc 0072  ld   $72
              c6cd 00d3  ld   $d3
              c6ce 0072  ld   $72
              c6cf 00c4  ld   $c4
              c6d0 0072  ld   $72
              c6d1 00b5  ld   $b5
              c6d2 0072  ld   $72
              c6d3 00a6  ld   $a6
              c6d4 0072  ld   $72
              c6d5 00f1  ld   $f1
              c6d6 0071  ld   $71
              c6d7 00e2  ld   $e2
              c6d8 0071  ld   $71
              c6d9 00d3  ld   $d3
              c6da 0071  ld   $71
              c6db 00c4  ld   $c4
              c6dc 0071  ld   $71
              c6dd 00b5  ld   $b5
              c6de 0071  ld   $71
              c6df 00a6  ld   $a6
              c6e0 0071  ld   $71
              c6e1 00f1  ld   $f1
              c6e2 0070  ld   $70
              c6e3 00e2  ld   $e2
              c6e4 0070  ld   $70
              c6e5 00d3  ld   $d3
              c6e6 0070  ld   $70
              c6e7 00c4  ld   $c4
              c6e8 0070  ld   $70
              c6e9 00b5  ld   $b5
              c6ea 0070  ld   $70
              c6eb 00a6  ld   $a6
              c6ec 0070  ld   $70
              c6ed 00f1  ld   $f1
              c6ee 006f  ld   $6f
              c6ef 00e2  ld   $e2
              c6f0 006f  ld   $6f
              c6f1 00d3  ld   $d3
              c6f2 006f  ld   $6f
              c6f3 00c4  ld   $c4
              c6f4 006f  ld   $6f
              c6f5 00b5  ld   $b5
              c6f6 006f  ld   $6f
              c6f7 00a6  ld   $a6
              c6f8 006f  ld   $6f
              c6f9 00f1  ld   $f1
              c6fa 006e  ld   $6e
              c6fb fe00  bra  ac          ;+-----------------------------------+
              c6fc fcfd  bra  $c6fd       ;|                                   |
              c6fd 1418  ld   $18,y       ;| Trampoline for page $c600 lookups |
              c6fe e006  jmp  y,$06       ;|                                   |
              c6ff c218  st   [$18]       ;+-----------------------------------+
              c700 00e2  ld   $e2
              c701 006e  ld   $6e
              c702 00d3  ld   $d3
              c703 006e  ld   $6e
              c704 00c4  ld   $c4
              c705 006e  ld   $6e
              c706 00b5  ld   $b5
              c707 006e  ld   $6e
              c708 00a6  ld   $a6
              c709 006e  ld   $6e
              c70a 00f1  ld   $f1
              c70b 006d  ld   $6d
              c70c 00e2  ld   $e2
              c70d 006d  ld   $6d
              c70e 00d3  ld   $d3
              c70f 006d  ld   $6d
              c710 00c4  ld   $c4
              c711 006d  ld   $6d
              c712 00b5  ld   $b5
              c713 006d  ld   $6d
              c714 00a6  ld   $a6
              c715 006d  ld   $6d
              c716 00f1  ld   $f1
              c717 006c  ld   $6c
              c718 00e2  ld   $e2
              c719 006c  ld   $6c
              c71a 00d3  ld   $d3
              c71b 006c  ld   $6c
              c71c 00c4  ld   $c4
              c71d 006c  ld   $6c
              c71e 00b5  ld   $b5
              c71f 006c  ld   $6c
              c720 00a6  ld   $a6
              c721 006c  ld   $6c
              c722 00f1  ld   $f1
              c723 006b  ld   $6b
              c724 00e2  ld   $e2
              c725 006b  ld   $6b
              c726 00d3  ld   $d3
              c727 006b  ld   $6b
              c728 00c4  ld   $c4
              c729 006b  ld   $6b
              c72a 00b5  ld   $b5
              c72b 006b  ld   $6b
              c72c 00a6  ld   $a6
              c72d 006b  ld   $6b
              c72e 00f1  ld   $f1
              c72f 006a  ld   $6a
              c730 00e2  ld   $e2
              c731 006a  ld   $6a
              c732 00d3  ld   $d3
              c733 006a  ld   $6a
              c734 00c4  ld   $c4
              c735 006a  ld   $6a
              c736 00b5  ld   $b5
              c737 006a  ld   $6a
              c738 00a6  ld   $a6
              c739 006a  ld   $6a
              c73a 00f1  ld   $f1
              c73b 0069  ld   $69
              c73c 00e2  ld   $e2
              c73d 0069  ld   $69
              c73e 00d3  ld   $d3
              c73f 0069  ld   $69
              c740 00c4  ld   $c4
              c741 0069  ld   $69
              c742 0008  ld   $08
              c743 00a0  ld   $a0
              c744 0060  ld   $60
              c745 0085  ld   $85
              c746 00bc  ld   $bc
              c747 0009  ld   $09
              c748 0063  ld   $63
              c749 00ff  ld   $ff
              c74a 0075  ld   $75
              c74b 0085  ld   $85
              c74c 00bc  ld   $bc
              c74d 0009  ld   $09
              c74e 0063  ld   $63
              c74f 00ff  ld   $ff
              c750 0075  ld   $75
              c751 0042  ld   $42
              c752 000f  ld   $0f
              c753 003a  ld   $3a
              c754 0021  ld   $21
              c755 0038  ld   $38
              c756 00e6  ld   $e6
              c757 000f  ld   $0f
              c758 002b  ld   $2b
              c759 00e8  ld   $e8
              c75a 0021  ld   $21
              c75b 003a  ld   $3a
              c75c 002b  ld   $2b
              c75d 0082  ld   $82
              c75e 0021  ld   $21
              c75f 00e8  ld   $e8
              c760 0085  ld   $85
              c761 00d0  ld   $d0
              c762 0062  ld   $62
              c763 002b  ld   $2b
              c764 0082  ld   $82
              c765 0059  ld   $59
              c766 0000  ld   $00
              c767 0085  ld   $85
              c768 00c1  ld   $c1
              c769 0062  ld   $62
              c76a 002b  ld   $2b
              c76b 003a  ld   $3a
              c76c 0085  ld   $85
              c76d 0095  ld   $95
              c76e 0003  ld   $03
              c76f 0063  ld   $63
              c770 00ff  ld   $ff
              c771 0075  ld   $75
              c772 0044  ld   $44
              c773 000f  ld   $0f
              c774 003a  ld   $3a
              c775 0021  ld   $21
              c776 003a  ld   $3a
              c777 002b  ld   $2b
              c778 0082  ld   $82
              c779 0059  ld   $59
              c77a 0000  ld   $00
              c77b 0085  ld   $85
              c77c 00c1  ld   $c1
              c77d 0062  ld   $62
              c77e 002b  ld   $2b
              c77f 003a  ld   $3a
              c780 0085  ld   $85
              c781 0095  ld   $95
              c782 0003  ld   $03
              c783 0063  ld   $63
              c784 00ff  ld   $ff
              c785 0075  ld   $75
              c786 0093  ld   $93
              c787 003c  ld   $3c
              c788 0021  ld   $21
              c789 0038  ld   $38
              c78a 00e6  ld   $e6
              c78b 0001  ld   $01
              c78c 002b  ld   $2b
              c78d 0082  ld   $82
              c78e 0059  ld   $59
              c78f 000e  ld   $0e
              c790 0085  ld   $85
              c791 00d0  ld   $d0
              c792 0062  ld   $62
              c793 002b  ld   $2b
              c794 00ea  ld   $ea
              c795 0021  ld   $21
              c796 003c  ld   $3c
              c797 00b8  ld   $b8
              c798 00ea  ld   $ea
              c799 00c3  ld   $c3
              c79a 00f8  ld   $f8
              c79b 0008  ld   $08
              c79c 005b  ld   $5b
              c79d 0000  ld   $00
              c79e 003c  ld   $3c
              c79f 0085  ld   $85
              c7a0 0058  ld   $58
              c7a1 0004  ld   $04
              c7a2 0085  ld   $85
              c7a3 00a0  ld   $a0
              c7a4 0009  ld   $09
              c7a5 0009  ld   $09
              c7a6 00a0  ld   $a0
              c7a7 0060  ld   $60
              c7a8 0063  ld   $63
              c7a9 00ff  ld   $ff
              c7aa 0075  ld   $75
              c7ab 007b  ld   $7b
              c7ac 003c  ld   $3c
              c7ad 0021  ld   $21
              c7ae 003c  ld   $3c
              c7af 00c5  ld   $c5
              c7b0 00b5  ld   $b5
              c7b1 0009  ld   $09
              c7b2 0021  ld   $21
              c7b3 0038  ld   $38
              c7b4 00e6  ld   $e6
              c7b5 0001  ld   $01
              c7b6 002b  ld   $2b
              c7b7 0082  ld   $82
              c7b8 0059  ld   $59
              c7b9 000e  ld   $0e
              c7ba 0085  ld   $85
              c7bb 00d0  ld   $d0
              c7bc 0062  ld   $62
              c7bd 002b  ld   $2b
              c7be 003c  ld   $3c
              c7bf 0085  ld   $85
              c7c0 0058  ld   $58
              c7c1 0004  ld   $04
              c7c2 0063  ld   $63
              c7c3 00ff  ld   $ff
              c7c4 0075  ld   $75
              c7c5 0021  ld   $21
              c7c6 0044  ld   $44
              c7c7 00e6  ld   $e6
              c7c8 0001  ld   $01
              c7c9 00ad  ld   $ad
              c7ca 002b  ld   $2b
              c7cb 0074  ld   $74
              c7cc 0021  ld   $21
              c7cd 0074  ld   $74
              c7ce 008c  ld   $8c
              c7cf 0001  ld   $01
              c7d0 00bd  ld   $bd
              c7d1 00cf  ld   $cf
              c7d2 0009  ld   $09
              c7d3 005b  ld   $5b
              c7d4 0000  ld   $00
              c7d5 0046  ld   $46
              c7d6 0085  ld   $85
              c7d7 008c  ld   $8c
              c7d8 0005  ld   $05
              c7d9 0021  ld   $21
              c7da 0074  ld   $74
              c7db 008c  ld   $8c
              c7dc 0003  ld   $03
              c7dd 00bd  ld   $bd
              c7de 00e4  ld   $e4
              c7df 0009  ld   $09
              c7e0 005b  ld   $5b
              c7e1 0002  ld   $02
              c7e2 0046  ld   $46
              c7e3 0011  ld   $11
              c7e4 00fe  ld   $fe
              c7e5 007c  ld   $7c
              c7e6 002b  ld   $2b
              c7e7 0084  ld   $84
              c7e8 0011  ld   $11
              c7e9 00a0  ld   $a0
              c7ea 007a  ld   $7a
              c7eb 0085  ld   $85
              c7ec 00eb  ld   $eb
              c7ed 0061  ld   $61
              c7ee 0021  ld   $21
              c7ef 0074  ld   $74
              c7f0 008c  ld   $8c
              c7f1 0002  ld   $02
              c7f2 00bd  ld   $bd
              c7f3 00f8  ld   $f8
              c7f4 0009  ld   $09
              c7f5 005b  ld   $5b
              c7f6 0001  ld   $01
              c7f7 0046  ld   $46
              c7f8 0021  ld   $21
              c7f9 0044  ld   $44
              c7fa 002b  ld   $2b
              c7fb fe00  bra  ac          ;+-----------------------------------+
              c7fc fcfd  bra  $c7fd       ;|                                   |
              c7fd 1418  ld   $18,y       ;| Trampoline for page $c700 lookups |
              c7fe e006  jmp  y,$06       ;|                                   |
              c7ff c218  st   [$18]       ;+-----------------------------------+
              c800 0084  ld   $84
              c801 0011  ld   $11
              c802 00a0  ld   $a0
              c803 007a  ld   $7a
              c804 0085  ld   $85
              c805 00eb  ld   $eb
              c806 0061  ld   $61
              c807 0063  ld   $63
              c808 00ff  ld   $ff
              c809 0075  ld   $75
              c80a 0085  ld   $85
              c80b 00a0  ld   $a0
              c80c 000a  ld   $0a
              c80d 000a  ld   $0a
              c80e 00a0  ld   $a0
              c80f 005e  ld   $5e
              c810 0021  ld   $21
              c811 006e  ld   $6e
              c812 002b  ld   $2b
              c813 0022  ld   $22
              c814 005b  ld   $5b
              c815 0048  ld   $48
              c816 0024  ld   $24
              c817 0016  ld   $16
              c818 00cf  ld   $cf
              c819 0027  ld   $27
              c81a 00b4  ld   $b4
              c81b 00fe  ld   $fe
              c81c 001a  ld   $1a
              c81d 0048  ld   $48
              c81e 00bd  ld   $bd
              c81f 00a2  ld   $a2
              c820 000a  ld   $0a
              c821 005b  ld   $5b
              c822 0002  ld   $02
              c823 0082  ld   $82
              c824 0085  ld   $85
              c825 00b2  ld   $b2
              c826 0062  ld   $62
              c827 0063  ld   $63
              c828 00ff  ld   $ff
              c829 0075  ld   $75
              c82a 005b  ld   $5b
              c82b 0001  ld   $01
              c82c 0034  ld   $34
              c82d 0011  ld   $11
              c82e 00ef  ld   $ef
              c82f 007c  ld   $7c
              c830 0025  ld   $25
              c831 0006  ld   $06
              c832 0085  ld   $85
              c833 00d8  ld   $d8
              c834 0002  ld   $02
              c835 0085  ld   $85
              c836 00df  ld   $df
              c837 0062  ld   $62
              c838 0063  ld   $63
              c839 00ff  ld   $ff
              c83a 0075  ld   $75
              c83b 005b  ld   $5b
              c83c 0001  ld   $01
              c83d 0034  ld   $34
              c83e 0011  ld   $11
              c83f 00ef  ld   $ef
              c840 007c  ld   $7c
              c841 0025  ld   $25
              c842 0001  ld   $01
              c843 0085  ld   $85
              c844 00d8  ld   $d8
              c845 0002  ld   $02
              c846 0063  ld   $63
              c847 00ff  ld   $ff
              c848 0075  ld   $75
              c849 005b  ld   $5b
              c84a 0001  ld   $01
              c84b 0034  ld   $34
              c84c 0011  ld   $11
              c84d 00ef  ld   $ef
              c84e 007c  ld   $7c
              c84f 0025  ld   $25
              c850 0004  ld   $04
              c851 0085  ld   $85
              c852 00d8  ld   $d8
              c853 0002  ld   $02
              c854 0063  ld   $63
              c855 00ff  ld   $ff
              c856 0075  ld   $75
              c857 005b  ld   $5b
              c858 0001  ld   $01
              c859 0034  ld   $34
              c85a 0011  ld   $11
              c85b 00ef  ld   $ef
              c85c 007c  ld   $7c
              c85d 0025  ld   $25
              c85e 0005  ld   $05
              c85f 0085  ld   $85
              c860 00d8  ld   $d8
              c861 0002  ld   $02
              c862 0085  ld   $85
              c863 00fc  ld   $fc
              c864 0009  ld   $09
              c865 0063  ld   $63
              c866 00ff  ld   $ff
              c867 0075  ld   $75
              c868 005b  ld   $5b
              c869 0034  ld   $34
              c86a 009c  ld   $9c
              c86b 0085  ld   $85
              c86c 00a0  ld   $a0
              c86d 000b  ld   $0b
              c86e 000b  ld   $0b
              c86f 00a0  ld   $a0
              c870 0020  ld   $20
              c871 0085  ld   $85
              c872 00ef  ld   $ef
              c873 0062  ld   $62
              c874 0085  ld   $85
              c875 0026  ld   $26
              c876 0005  ld   $05
              c877 0011  ld   $11
              c878 00ef  ld   $ef
              c879 007c  ld   $7c
              c87a 002b  ld   $2b
              c87b 0032  ld   $32
              c87c 005b  ld   $5b
              c87d 0002  ld   $02
              c87e 0082  ld   $82
              c87f 0085  ld   $85
              c880 00f5  ld   $f5
              c881 0061  ld   $61
              c882 0011  ld   $11
              c883 0020  ld   $20
              c884 003f  ld   $3f
              c885 002b  ld   $2b
              c886 00a2  ld   $a2
              c887 0085  ld   $85
              c888 00e5  ld   $e5
              c889 0063  ld   $63
              c88a 0085  ld   $85
              c88b 00a5  ld   $a5
              c88c 0065  ld   $65
              c88d 0063  ld   $63
              c88e 00ff  ld   $ff
              c88f 00b4  ld   $b4
              c890 0080  ld   $80
              c891 0061  ld   $61
              c892 00d4  ld   $d4
              c893 002b  ld   $2b
              c894 002b  ld   $2b
              c895 001a  ld   $1a
              c896 005b  ld   $5b
              c897 00ad  ld   $ad
              c898 0022  ld   $22
              c899 00b4  ld   $b4
              c89a 00e2  ld   $e2
              c89b 005b  ld   $5b
              c89c 0002  ld   $02
              c89d 00a4  ld   $a4
              c89e 00c7  ld   $c7
              c89f 00fb  ld   $fb
              c8a0 0067  ld   $67
              c8a1 00aa  ld   $aa
              c8a2 00ff  ld   $ff
              c8a3 0099  ld   $99
              c8a4 0096  ld   $96
              c8a5 0099  ld   $99
              c8a6 0096  ld   $96
              c8a7 00f6  ld   $f6
              c8a8 0099  ld   $99
              c8a9 0098  ld   $98
              c8aa 00ff  ld   $ff
              c8ab 002b  ld   $2b
              c8ac 0086  ld   $86
              c8ad 0023  ld   $23
              c8ae 0084  ld   $84
              c8af 00d1  ld   $d1
              c8b0 0086  ld   $86
              c8b1 0035  ld   $35
              c8b2 0072  ld   $72
              c8b3 00eb  ld   $eb
              c8b4 00ff  ld   $ff
              c8b5 0011  ld   $11
              c8b6 0000  ld   $00
              c8b7 000b  ld   $0b
              c8b8 002b  ld   $2b
              c8b9 0022  ld   $22
              c8ba 0021  ld   $21
              c8bb 0082  ld   $82
              c8bc 00b4  ld   $b4
              c8bd 00e6  ld   $e6
              c8be 00ff  ld   $ff
              c8bf 0062  ld   $62
              c8c0 00a4  ld   $a4
              c8c1 0046  ld   $46
              c8c2 0075  ld   $75
              c8c3 0085  ld   $85
              c8c4 00db  ld   $db
              c8c5 0061  ld   $61
              c8c6 0011  ld   $11
              c8c7 0003  ld   $03
              c8c8 000b  ld   $0b
              c8c9 002b  ld   $2b
              c8ca 0022  ld   $22
              c8cb 0065  ld   $65
              c8cc 0025  ld   $25
              c8cd 00a2  ld   $a2
              c8ce 0063  ld   $63
              c8cf 00ff  ld   $ff
              c8d0 0075  ld   $75
              c8d1 007b  ld   $7b
              c8d2 0082  ld   $82
              c8d3 0021  ld   $21
              c8d4 0082  ld   $82
              c8d5 0035  ld   $35
              c8d6 0053  ld   $53
              c8d7 00ba  ld   $ba
              c8d8 0063  ld   $63
              c8d9 00ff  ld   $ff
              c8da 0085  ld   $85
              c8db 00df  ld   $df
              c8dc 0062  ld   $62
              c8dd 0090  ld   $90
              c8de 00b1  ld   $b1
              c8df 002b  ld   $2b
              c8e0 0084  ld   $84
              c8e1 0021  ld   $21
              c8e2 0082  ld   $82
              c8e3 00b8  ld   $b8
              c8e4 0084  ld   $84
              c8e5 0035  ld   $35
              c8e6 0053  ld   $53
              c8e7 00cb  ld   $cb
              c8e8 0021  ld   $21
              c8e9 0084  ld   $84
              c8ea 00ff  ld   $ff
              c8eb 0021  ld   $21
              c8ec 0082  ld   $82
              c8ed 00ff  ld   $ff
              c8ee 002b  ld   $2b
              c8ef 0084  ld   $84
              c8f0 0021  ld   $21
              c8f1 0082  ld   $82
              c8f2 00b8  ld   $b8
              c8f3 0084  ld   $84
              c8f4 0035  ld   $35
              c8f5 0056  ld   $56
              c8f6 00da  ld   $da
              c8f7 0021  ld   $21
              c8f8 0084  ld   $84
              c8f9 00ff  ld   $ff
              c8fa 0021  ld   $21
              c8fb fe00  bra  ac          ;+-----------------------------------+
              c8fc fcfd  bra  $c8fd       ;|                                   |
              c8fd 1418  ld   $18,y       ;| Trampoline for page $c800 lookups |
              c8fe e006  jmp  y,$06       ;|                                   |
              c8ff c218  st   [$18]       ;+-----------------------------------+
              c900 0082  ld   $82
              c901 00ff  ld   $ff
              c902 001a  ld   $1a
              c903 000e  ld   $0e
              c904 00fc  ld   $fc
              c905 00d6  ld   $d6
              c906 0035  ld   $35
              c907 003f  ld   $3f
              c908 00dd  ld   $dd
              c909 0065  ld   $65
              c90a 00d6  ld   $d6
              c90b 000e  ld   $0e
              c90c 00ff  ld   $ff
              c90d 0062  ld   $62
              c90e 00ef  ld   $ef
              c90f 0010  ld   $10
              c910 0059  ld   $59
              c911 0080  ld   $80
              c912 00b8  ld   $b8
              c913 009c  ld   $9c
              c914 002b  ld   $2b
              c915 009e  ld   $9e
              c916 0018  ld   $18
              c917 009e  ld   $9e
              c918 0059  ld   $59
              c919 0000  ld   $00
              c91a 0046  ld   $46
              c91b 009c  ld   $9c
              c91c 0032  ld   $32
              c91d 00f7  ld   $f7
              c91e 009e  ld   $9e
              c91f 00ff  ld   $ff
              c920 0063  ld   $63
              c921 00a0  ld   $a0
              c922 005f  ld   $5f
              c923 005b  ld   $5b
              c924 00ef  ld   $ef
              c925 0022  ld   $22
              c926 0021  ld   $21
              c927 0082  ld   $82
              c928 00b4  ld   $b4
              c929 00e6  ld   $e6
              c92a 00ff  ld   $ff
              c92b 0075  ld   $75
              c92c 002b  ld   $2b
              c92d 0082  ld   $82
              c92e 0085  ld   $85
              c92f 00bc  ld   $bc
              c930 0063  ld   $63
              c931 0093  ld   $93
              c932 0082  ld   $82
              c933 0023  ld   $23
              c934 0082  ld   $82
              c935 0035  ld   $35
              c936 003f  ld   $3f
              c937 00b8  ld   $b8
              c938 0085  ld   $85
              c939 00a3  ld   $a3
              c93a 0068  ld   $68
              c93b 0090  ld   $90
              c93c 00ae  ld   $ae
              c93d 0063  ld   $63
              c93e 00ff  ld   $ff
              c93f 0011  ld   $11
              c940 00e1  ld   $e1
              c941 0004  ld   $04
              c942 002b  ld   $2b
              c943 0022  ld   $22
              c944 0021  ld   $21
              c945 00a2  ld   $a2
              c946 002b  ld   $2b
              c947 0024  ld   $24
              c948 001a  ld   $1a
              c949 00a5  ld   $a5
              c94a 00e9  ld   $e9
              c94b 0093  ld   $93
              c94c 0019  ld   $19
              c94d 0067  ld   $67
              c94e 0029  ld   $29
              c94f 0065  ld   $65
              c950 0028  ld   $28
              c951 00a4  ld   $a4
              c952 00ff  ld   $ff
              c953 002d  ld   $2d
              c954 0006  ld   $06
              c955 00a4  ld   $a4
              c956 00a7  ld   $a7
              c957 009a  ld   $9a
              c958 00a4  ld   $a4
              c959 0035  ld   $35
              c95a 0056  ld   $56
              c95b 00e2  ld   $e2
              c95c 009e  ld   $9e
              c95d 0008  ld   $08
              c95e 00aa  ld   $aa
              c95f 0035  ld   $35
              c960 0072  ld   $72
              c961 00e2  ld   $e2
              c962 0075  ld   $75
              c963 0085  ld   $85
              c964 00c1  ld   $c1
              c965 0067  ld   $67
              c966 0063  ld   $63
              c967 00ff  ld   $ff
              c968 0075  ld   $75
              c969 005b  ld   $5b
              c96a 0008  ld   $08
              c96b 0098  ld   $98
              c96c 0011  ld   $11
              c96d 0000  ld   $00
              c96e 0001  ld   $01
              c96f 002b  ld   $2b
              c970 009a  ld   $9a
              c971 0016  ld   $16
              c972 0078  ld   $78
              c973 0096  ld   $96
              c974 0021  ld   $21
              c975 0098  ld   $98
              c976 0046  ld   $46
              c977 009a  ld   $9a
              c978 0093  ld   $93
              c979 0098  ld   $98
              c97a 0032  ld   $32
              c97b 00ef  ld   $ef
              c97c 0096  ld   $96
              c97d 0085  ld   $85
              c97e 00db  ld   $db
              c97f 0061  ld   $61
              c980 0063  ld   $63
              c981 00ff  ld   $ff
              c982 0064  ld   $64
              c983 00a0  ld   $a0
              c984 005f  ld   $5f
              c985 0075  ld   $75
              c986 0035  ld   $35
              c987 003f  ld   $3f
              c988 00af  ld   $af
              c989 005e  ld   $5e
              c98a 0084  ld   $84
              c98b 0085  ld   $85
              c98c 00bc  ld   $bc
              c98d 0063  ld   $63
              c98e 0059  ld   $59
              c98f 0020  ld   $20
              c990 0085  ld   $85
              c991 00a3  ld   $a3
              c992 0068  ld   $68
              c993 0032  ld   $32
              c994 00a7  ld   $a7
              c995 0084  ld   $84
              c996 0063  ld   $63
              c997 00ff  ld   $ff
              c998 0075  ld   $75
              c999 0011  ld   $11
              c99a 0003  ld   $03
              c99b 000b  ld   $0b
              c99c 002b  ld   $2b
              c99d 0022  ld   $22
              c99e 0065  ld   $65
              c99f 0025  ld   $25
              c9a0 00a2  ld   $a2
              c9a1 0011  ld   $11
              c9a2 0000  ld   $00
              c9a3 0001  ld   $01
              c9a4 0067  ld   $67
              c9a5 0027  ld   $27
              c9a6 005b  ld   $5b
              c9a7 0008  ld   $08
              c9a8 009e  ld   $9e
              c9a9 0016  ld   $16
              c9aa 00a0  ld   $a0
              c9ab 0024  ld   $24
              c9ac 0016  ld   $16
              c9ad 0000  ld   $00
              c9ae 0026  ld   $26
              c9af 00b4  ld   $b4
              c9b0 00f3  ld   $f3
              c9b1 0093  ld   $93
              c9b2 0027  ld   $27
              c9b3 0032  ld   $32
              c9b4 00c2  ld   $c2
              c9b5 009e  ld   $9e
              c9b6 0085  ld   $85
              c9b7 00bc  ld   $bc
              c9b8 0063  ld   $63
              c9b9 0063  ld   $63
              c9ba 00ff  ld   $ff
              c9bb 001a  ld   $1a
              c9bc 0021  ld   $21
              c9bd 0082  ld   $82
              c9be 00fc  ld   $fc
              c9bf 002b  ld   $2b
              c9c0 0084  ld   $84
              c9c1 00b8  ld   $b8
              c9c2 0082  ld   $82
              c9c3 0035  ld   $35
              c9c4 003f  ld   $3f
              c9c5 00fc  ld   $fc
              c9c6 0021  ld   $21
              c9c7 0082  ld   $82
              c9c8 00e6  ld   $e6
              c9c9 0080  ld   $80
              c9ca 0035  ld   $35
              c9cb 0072  ld   $72
              c9cc 00ef  ld   $ef
              c9cd 0021  ld   $21
              c9ce 0084  ld   $84
              c9cf 00b8  ld   $b8
              c9d0 0082  ld   $82
              c9d1 0035  ld   $35
              c9d2 003f  ld   $3f
              c9d3 00fc  ld   $fc
              c9d4 0090  ld   $90
              c9d5 00f6  ld   $f6
              c9d6 0021  ld   $21
              c9d7 0084  ld   $84
              c9d8 00b8  ld   $b8
              c9d9 0082  ld   $82
              c9da 0035  ld   $35
              c9db 004d  ld   $4d
              c9dc 00fc  ld   $fc
              c9dd 001a  ld   $1a
              c9de 000e  ld   $0e
              c9df 00f0  ld   $f0
              c9e0 007e  ld   $7e
              c9e1 0090  ld   $90
              c9e2 00f6  ld   $f6
              c9e3 00ff  ld   $ff
              c9e4 0065  ld   $65
              c9e5 00a5  ld   $a5
              c9e6 005a  ld   $5a
              c9e7 0075  ld   $75
              c9e8 0085  ld   $85
              c9e9 00a4  ld   $a4
              c9ea 0062  ld   $62
              c9eb 005b  ld   $5b
              c9ec 0008  ld   $08
              c9ed 0094  ld   $94
              c9ee 0016  ld   $16
              c9ef 003c  ld   $3c
              c9f0 009e  ld   $9e
              c9f1 0016  ld   $16
              c9f2 00a0  ld   $a0
              c9f3 0024  ld   $24
              c9f4 0016  ld   $16
              c9f5 0000  ld   $00
              c9f6 0026  ld   $26
              c9f7 0065  ld   $65
              c9f8 0027  ld   $27
              c9f9 0094  ld   $94
              c9fa 00b4  ld   $b4
              c9fb fe00  bra  ac          ;+-----------------------------------+
              c9fc fcfd  bra  $c9fd       ;|                                   |
              c9fd 1418  ld   $18,y       ;| Trampoline for page $c900 lookups |
              c9fe e006  jmp  y,$06       ;|                                   |
              c9ff c218  st   [$18]       ;+-----------------------------------+
              ca00 00f3  ld   $f3
              ca01 0016  ld   $16
              ca02 00a0  ld   $a0
              ca03 0024  ld   $24
              ca04 0016  ld   $16
              ca05 0000  ld   $00
              ca06 0026  ld   $26
              ca07 0059  ld   $59
              ca08 0087  ld   $87
              ca09 00b8  ld   $b8
              ca0a 0094  ld   $94
              ca0b 005e  ld   $5e
              ca0c 0027  ld   $27
              ca0d 00b4  ld   $b4
              ca0e 00f3  ld   $f3
              ca0f 0093  ld   $93
              ca10 0094  ld   $94
              ca11 0032  ld   $32
              ca12 00ad  ld   $ad
              ca13 009e  ld   $9e
              ca14 0063  ld   $63
              ca15 00ff  ld   $ff
              ca16 002b  ld   $2b
              ca17 0094  ld   $94
              ca18 0023  ld   $23
              ca19 0084  ld   $84
              ca1a 002b  ld   $2b
              ca1b 0088  ld   $88
              ca1c 0023  ld   $23
              ca1d 0094  ld   $94
              ca1e 002b  ld   $2b
              ca1f 009c  ld   $9c
              ca20 0023  ld   $23
              ca21 0084  ld   $84
              ca22 0035  ld   $35
              ca23 003f  ld   $3f
              ca24 00ed  ld   $ed
              ca25 002b  ld   $2b
              ca26 0082  ld   $82
              ca27 0023  ld   $23
              ca28 0094  ld   $94
              ca29 00b8  ld   $b8
              ca2a 0082  ld   $82
              ca2b 0035  ld   $35
              ca2c 0050  ld   $50
              ca2d 00fa  ld   $fa
              ca2e 0035  ld   $35
              ca2f 004d  ld   $4d
              ca30 00ea  ld   $ea
              ca31 0090  ld   $90
              ca32 00d7  ld   $d7
              ca33 0059  ld   $59
              ca34 0000  ld   $00
              ca35 00ff  ld   $ff
              ca36 0021  ld   $21
              ca37 0088  ld   $88
              ca38 00b8  ld   $b8
              ca39 009c  ld   $9c
              ca3a 0035  ld   $35
              ca3b 0050  ld   $50
              ca3c 00ea  ld   $ea
              ca3d 0035  ld   $35
              ca3e 004d  ld   $4d
              ca3f 00fa  ld   $fa
              ca40 0059  ld   $59
              ca41 0001  ld   $01
              ca42 00ff  ld   $ff
              ca43 0059  ld   $59
              ca44 0002  ld   $02
              ca45 00ff  ld   $ff
              ca46 0066  ld   $66
              ca47 00a4  ld   $a4
              ca48 005b  ld   $5b
              ca49 002b  ld   $2b
              ca4a 0086  ld   $86
              ca4b 001a  ld   $1a
              ca4c 0082  ld   $82
              ca4d 0035  ld   $35
              ca4e 003f  ld   $3f
              ca4f 00c8  ld   $c8
              ca50 00f0  ld   $f0
              ca51 0086  ld   $86
              ca52 0039  ld   $39
              ca53 0084  ld   $84
              ca54 0035  ld   $35
              ca55 003f  ld   $3f
              ca56 00c8  ld   $c8
              ca57 002b  ld   $2b
              ca58 0088  ld   $88
              ca59 00b8  ld   $b8
              ca5a 0082  ld   $82
              ca5b 0035  ld   $35
              ca5c 0053  ld   $53
              ca5d 00bd  ld   $bd
              ca5e 001a  ld   $1a
              ca5f 0088  ld   $88
              ca60 002b  ld   $2b
              ca61 0082  ld   $82
              ca62 00f0  ld   $f0
              ca63 0086  ld   $86
              ca64 0093  ld   $93
              ca65 0084  ld   $84
              ca66 0093  ld   $93
              ca67 0086  ld   $86
              ca68 0023  ld   $23
              ca69 0084  ld   $84
              ca6a 00d1  ld   $d1
              ca6b 0086  ld   $86
              ca6c 0032  ld   $32
              ca6d 00c1  ld   $c1
              ca6e 0082  ld   $82
              ca6f 0059  ld   $59
              ca70 0000  ld   $00
              ca71 00f0  ld   $f0
              ca72 0086  ld   $86
              ca73 00ff  ld   $ff
              ca74 0075  ld   $75
              ca75 0011  ld   $11
              ca76 00f2  ld   $f2
              ca77 0068  ld   $68
              ca78 002b  ld   $2b
              ca79 0086  ld   $86
              ca7a 002b  ld   $2b
              ca7b 0092  ld   $92
              ca7c 0011  ld   $11
              ca7d 00e6  ld   $e6
              ca7e 0068  ld   $68
              ca7f 002b  ld   $2b
              ca80 0088  ld   $88
              ca81 003b  ld   $3b
              ca82 0092  ld   $92
              ca83 0035  ld   $35
              ca84 0072  ld   $72
              ca85 00e8  ld   $e8
              ca86 0021  ld   $21
              ca87 0084  ld   $84
              ca88 0035  ld   $35
              ca89 003f  ld   $3f
              ca8a 00e6  ld   $e6
              ca8b 00cf  ld   $cf
              ca8c 0084  ld   $84
              ca8d 0063  ld   $63
              ca8e 00ff  ld   $ff
              ca8f 00b8  ld   $b8
              ca90 0082  ld   $82
              ca91 0035  ld   $35
              ca92 003f  ld   $3f
              ca93 00f2  ld   $f2
              ca94 002d  ld   $2d
              ca95 0002  ld   $02
              ca96 0092  ld   $92
              ca97 0090  ld   $90
              ca98 00da  ld   $da
              ca99 0021  ld   $21
              ca9a 0092  ld   $92
              ca9b 00b8  ld   $b8
              ca9c 0086  ld   $86
              ca9d 0099  ld   $99
              ca9e 0088  ld   $88
              ca9f 00f6  ld   $f6
              caa0 00cf  ld   $cf
              caa1 0018  ld   $18
              caa2 0063  ld   $63
              caa3 00ff  ld   $ff
              caa4 0067  ld   $67
              caa5 00a5  ld   $a5
              caa6 005a  ld   $5a
              caa7 00a7  ld   $a7
              caa8 009a  ld   $9a
              caa9 00a4  ld   $a4
              caaa 0035  ld   $35
              caab 0056  ld   $56
              caac 00ac  ld   $ac
              caad 0016  ld   $16
              caae 0000  ld   $00
              caaf 00a4  ld   $a4
              cab0 00a7  ld   $a7
              cab1 0070  ld   $70
              cab2 00a5  ld   $a5
              cab3 0035  ld   $35
              cab4 0050  ld   $50
              cab5 00ba  ld   $ba
              cab6 0016  ld   $16
              cab7 0070  ld   $70
              cab8 00a5  ld   $a5
              cab9 00c7  ld   $c7
              caba 0004  ld   $04
              cabb 006a  ld   $6a
              cabc 00aa  ld   $aa
              cabd 00ff  ld   $ff
              cabe 00c7  ld   $c7
              cabf 00fb  ld   $fb
              cac0 0067  ld   $67
              cac1 00aa  ld   $aa
              cac2 00ff  ld   $ff
              cac3 0059  ld   $59
              cac4 0002  ld   $02
              cac5 005e  ld   $5e
              cac6 00a4  ld   $a4
              cac7 005e  ld   $5e
              cac8 0028  ld   $28
              cac9 009e  ld   $9e
              caca 0002  ld   $02
              cacb 00aa  ld   $aa
              cacc 0035  ld   $35
              cacd 0072  ld   $72
              cace 00cc  ld   $cc
              cacf 00ff  ld   $ff
              cad0 0075  ld   $75
              cad1 009e  ld   $9e
              cad2 0004  ld   $04
              cad3 00aa  ld   $aa
              cad4 0035  ld   $35
              cad5 0072  ld   $72
              cad6 00df  ld   $df
              cad7 002d  ld   $2d
              cad8 0008  ld   $08
              cad9 00a5  ld   $a5
              cada 00a7  ld   $a7
              cadb 0078  ld   $78
              cadc 00a5  ld   $a5
              cadd 0035  ld   $35
              cade 0050  ld   $50
              cadf 00f8  ld   $f8
              cae0 0016  ld   $16
              cae1 0070  ld   $70
              cae2 00a5  ld   $a5
              cae3 0085  ld   $85
              cae4 00b3  ld   $b3
              cae5 0064  ld   $64
              cae6 0011  ld   $11
              cae7 0000  ld   $00
              cae8 0001  ld   $01
              cae9 002b  ld   $2b
              caea 0026  ld   $26
              caeb 0016  ld   $16
              caec 0008  ld   $08
              caed 0024  ld   $24
              caee 0016  ld   $16
              caef 0078  ld   $78
              caf0 0025  ld   $25
              caf1 0011  ld   $11
              caf2 00c0  ld   $c0
              caf3 0020  ld   $20
              caf4 002b  ld   $2b
              caf5 0022  ld   $22
              caf6 00b4  ld   $b4
              caf7 00fb  ld   $fb
              caf8 00c7  ld   $c7
              caf9 0004  ld   $04
              cafa 006a  ld   $6a
              cafb fe00  bra  ac          ;+-----------------------------------+
              cafc fcfd  bra  $cafd       ;|                                   |
              cafd 1418  ld   $18,y       ;| Trampoline for page $ca00 lookups |
              cafe e006  jmp  y,$06       ;|                                   |
              caff c218  st   [$18]       ;+-----------------------------------+
              cb00 00aa  ld   $aa
              cb01 0085  ld   $85
              cb02 00bc  ld   $bc
              cb03 0063  ld   $63
              cb04 0063  ld   $63
              cb05 00ff  ld   $ff
              cb06 0068  ld   $68
              cb07 00a3  ld   $a3
              cb08 005d  ld   $5d
              cb09 0082  ld   $82
              cb0a 007f  ld   $7f
              cb0b 00e6  ld   $e6
              cb0c 0052  ld   $52
              cb0d 0035  ld   $35
              cb0e 0053  ld   $53
              cb0f 00b4  ld   $b4
              cb10 00e3  ld   $e3
              cb11 0032  ld   $32
              cb12 0035  ld   $35
              cb13 0050  ld   $50
              cb14 00e3  ld   $e3
              cb15 002b  ld   $2b
              cb16 0092  ld   $92
              cb17 0011  ld   $11
              cb18 0000  ld   $00
              cb19 0007  ld   $07
              cb1a 0090  ld   $90
              cb1b 00b9  ld   $b9
              cb1c 002b  ld   $2b
              cb1d 0092  ld   $92
              cb1e 0011  ld   $11
              cb1f 0000  ld   $00
              cb20 0008  ld   $08
              cb21 002b  ld   $2b
              cb22 0094  ld   $94
              cb23 001a  ld   $1a
              cb24 0092  ld   $92
              cb25 00e9  ld   $e9
              cb26 00e9  ld   $e9
              cb27 0099  ld   $99
              cb28 0092  ld   $92
              cb29 0099  ld   $99
              cb2a 0094  ld   $94
              cb2b 002b  ld   $2b
              cb2c 0094  ld   $94
              cb2d 0016  ld   $16
              cb2e 0005  ld   $05
              cb2f 0096  ld   $96
              cb30 0021  ld   $21
              cb31 0094  ld   $94
              cb32 007f  ld   $7f
              cb33 0000  ld   $00
              cb34 005e  ld   $5e
              cb35 0026  ld   $26
              cb36 00b4  ld   $b4
              cb37 00cb  ld   $cb
              cb38 0093  ld   $93
              cb39 0094  ld   $94
              cb3a 0093  ld   $93
              cb3b 0028  ld   $28
              cb3c 0032  ld   $32
              cb3d 00c8  ld   $c8
              cb3e 0096  ld   $96
              cb3f 0016  ld   $16
              cb40 0000  ld   $00
              cb41 0026  ld   $26
              cb42 00b4  ld   $b4
              cb43 00cb  ld   $cb
              cb44 0093  ld   $93
              cb45 0028  ld   $28
              cb46 0075  ld   $75
              cb47 0085  ld   $85
              cb48 00d0  ld   $d0
              cb49 0063  ld   $63
              cb4a 0063  ld   $63
              cb4b 00ff  ld   $ff
              cb4c 0032  ld   $32
              cb4d 0006  ld   $06
              cb4e 00a5  ld   $a5
              cb4f 0008  ld   $08
              cb50 00ab  ld   $ab
              cb51 0008  ld   $08
              cb52 00cc  ld   $cc
              cb53 0008  ld   $08
              cb54 00e0  ld   $e0
              cb55 0008  ld   $08
              cb56 00a2  ld   $a2
              cb57 0009  ld   $09
              cb58 007f  ld   $7f
              cb59 0000  ld   $00
              cb5a 000a  ld   $0a
              cb5b 0000  ld   $00
              cb5c 00fe  ld   $fe
              cb5d 0000  ld   $00
              cb5e 00fd  ld   $fd
              cb5f 0000  ld   $00
              cb60 00fb  ld   $fb
              cb61 0000  ld   $00
              cb62 00f7  ld   $f7
              cb63 0000  ld   $00
              cb64 0000  ld   $00
              cb65 0000  ld   $00
              cb66 0069  ld   $69
              cb67 00a5  ld   $a5
              cb68 001f  ld   $1f
              cb69 000a  ld   $0a
              cb6a 004c  ld   $4c
              cb6b 006f  ld   $6f
              cb6c 0061  ld   $61
              cb6d 0064  ld   $64
              cb6e 0069  ld   $69
              cb6f 006e  ld   $6e
              cb70 0067  ld   $67
              cb71 002e  ld   $2e
              cb72 002e  ld   $2e
              cb73 002e  ld   $2e
              cb74 0000  ld   $00
              cb75 0011  ld   $11
              cb76 004c  ld   $4c
              cb77 006f  ld   $6f
              cb78 0061  ld   $61
              cb79 0064  ld   $64
              cb7a 0065  ld   $65
              cb7b 0072  ld   $72
              cb7c 0020  ld   $20
              cb7d 006e  ld   $6e
              cb7e 006f  ld   $6f
              cb7f 0074  ld   $74
              cb80 0020  ld   $20
              cb81 0066  ld   $66
              cb82 006f  ld   $6f
              cb83 0075  ld   $75
              cb84 006e  ld   $6e
              cb85 0064  ld   $64
              cb86 0021  ld   $21
              cb87 0000  ld   $00
              cb88 007a  ld   $7a
              cb89 00a0  ld   $a0
              cb8a 0002  ld   $02
              cb8b 0000  ld   $00
              cb8c 0000  ld   $00
              cb8d 007b  ld   $7b
              cb8e 00a0  ld   $a0
              cb8f 0002  ld   $02
              cb90 0000  ld   $00
              cb91 0000  ld   $00
              cb92 007c  ld   $7c
              cb93 00a6  ld   $a6
              cb94 005a  ld   $5a
              cb95 0006  ld   $06
              cb96 004c  ld   $4c
              cb97 006f  ld   $6f
              cb98 0061  ld   $61
              cb99 0064  ld   $64
              cb9a 0065  ld   $65
              cb9b 0072  ld   $72
              cb9c 0000  ld   $00
              cb9d 0000  ld   $00
              cb9e 0000  ld   $00
              * 83 times
              cbef 007d  ld   $7d
              cbf0 00a0  ld   $a0
              cbf1 0002  ld   $02
              cbf2 0000  ld   $00
              cbf3 0000  ld   $00
              cbf4 0000  ld   $00
              cbf5 0000  ld   $00         ;End of gbas/browser/Browser_SDCard_ROMvX0.gt1, size 2510
                                          ;+-----------------------------------+
                                          ;| gasm/Loader/Loader_ROMvX0.gt1     |
                                          ;+-----------------------------------+
              cbf6 0200  nop              ;5 fillers
              cbf7 0200  nop
              cbf8 0200  nop
              * 5 times
              cbfb fe00  bra  ac          ;+-----------------------------------+
              cbfc fcfd  bra  $cbfd       ;|                                   |
              cbfd 1418  ld   $18,y       ;| Trampoline for page $cb00 lookups |
              cbfe e006  jmp  y,$06       ;|                                   |
              cbff c218  st   [$18]       ;+-----------------------------------+
              cc00 dc53  st   $53,[y,x++] ;'S'
              cc01 dc44  st   $44,[y,x++] ;'D'
              cc02 dc43  st   $43,[y,x++] ;'C'
              cc03 dc61  st   $61,[y,x++] ;'a'
              cc04 dc72  st   $72,[y,x++] ;'r'
              cc05 dc64  st   $64,[y,x++] ;'d'
              cc06 dc00  st   $00,[y,x++] ;'\x00'
              cc07 dc00  st   $00,[y,x++] ;'\x00'
              cc08 0028  ld   $28
              cc09 c218  st   [$18]
              cc0a 00c2  ld   $c2
              cc0b 14dd  ld   $dd,y
              cc0c e06f  jmp  y,$6f
              cc0d c219  st   [$19]
Loader:       cc0e 0000  ld   $00
              cc0f 00a8  ld   $a8
              cc10 0015  ld   $15
              cc11 0011  ld   $11
              cc12 0080  ld   $80
              cc13 0030  ld   $30
              cc14 002b  ld   $2b
              cc15 0022  ld   $22
              cc16 0016  ld   $16
              cc17 00b8  ld   $b8
              cc18 0024  ld   $24
              cc19 0016  ld   $16
              cc1a 0026  ld   $26
              cc1b 0025  ld   $25
              cc1c 00b4  ld   $b4
              cc1d 00f1  ld   $f1
              cc1e 0000  ld   $00
              cc1f 0000  ld   $00
              cc20 0000  ld   $00
              cc21 00cf  ld   $cf
              cc22 00db  ld   $db
              cc23 00eb  ld   $eb
              cc24 00fb  ld   $fb
              cc25 0002  ld   $02
              cc26 0000  ld   $00
              cc27 0000  ld   $00         ;End of gasm/Loader/Loader_ROMvX0.gt1, size 26
                                          ;+-----------------------------------+
                                          ;| Apps/CardBoot/CardBoot.gt1        |
                                          ;+-----------------------------------+
              cc28 dc4c  st   $4c,[y,x++] ;'L'
              cc29 dc6f  st   $6f,[y,x++] ;'o'
              cc2a dc61  st   $61,[y,x++] ;'a'
              cc2b dc64  st   $64,[y,x++] ;'d'
              cc2c dc65  st   $65,[y,x++] ;'e'
              cc2d dc72  st   $72,[y,x++] ;'r'
              cc2e dc00  st   $00,[y,x++] ;'\x00'
              cc2f dc00  st   $00,[y,x++] ;'\x00'
              cc30 000e  ld   $0e
              cc31 c218  st   [$18]
              cc32 00cc  ld   $cc
              cc33 14dd  ld   $dd,y
              cc34 e06f  jmp  y,$6f
              cc35 c219  st   [$19]
Boot:         cc36 0002  ld   $02
              cc37 0000  ld   $00
              cc38 004c  ld   $4c
              cc39 001a  ld   $1a
              cc3a 0021  ld   $21
              cc3b 00e6  ld   $e6
              cc3c 0040  ld   $40
              cc3d 0035  ld   $35
              cc3e 0053  ld   $53
              cc3f 000b  ld   $0b
              cc40 0021  ld   $21
              cc41 000e  ld   $0e
              cc42 00f3  ld   $f3
              cc43 0017  ld   $17
              cc44 0090  ld   $90
              cc45 0005  ld   $05
              cc46 0011  ld   $11
              cc47 0000  ld   $00
              cc48 007d  ld   $7d
              cc49 002b  ld   $2b
              cc4a 0030  ld   $30
              cc4b 0011  ld   $11
              cc4c 00f9  ld   $f9
              cc4d 0001  ld   $01
              cc4e 002b  ld   $2b
              cc4f 0032  ld   $32
              cc50 0059  ld   $59
              cc51 0000  ld   $00
              cc52 0085  ld   $85
              cc53 00b1  ld   $b1
              cc54 0072  ld   $72
              cc55 0059  ld   $59
              cc56 0020  ld   $20
              cc57 00f0  ld   $f0
              cc58 0032  ld   $32
              cc59 0011  ld   $11
              cc5a 00e8  ld   $e8
              cc5b 0001  ld   $01
              cc5c 002b  ld   $2b
              cc5d 0034  ld   $34
              cc5e 0059  ld   $59
              cc5f 007b  ld   $7b
              cc60 00f0  ld   $f0
              cc61 0034  ld   $34
              cc62 0021  ld   $21
              cc63 0034  ld   $34
              cc64 00e3  ld   $e3
              cc65 0002  ld   $02
              cc66 002b  ld   $2b
              cc67 0034  ld   $34
              cc68 0011  ld   $11
              cc69 00f0  ld   $f0
              cc6a 0001  ld   $01
              cc6b 00fc  ld   $fc
              cc6c 0034  ld   $34
              cc6d 0035  ld   $35
              cc6e 0072  ld   $72
              cc6f 0023  ld   $23
              cc70 0011  ld   $11
              cc71 007c  ld   $7c
              cc72 0000  ld   $00
              cc73 005e  ld   $5e
              cc74 0027  ld   $27
              cc75 0059  ld   $59
              cc76 00ff  ld   $ff
              cc77 002b  ld   $2b
              cc78 0025  ld   $25
              cc79 0059  ld   $59
              cc7a 0000  ld   $00
              cc7b 005e  ld   $5e
              cc7c 0024  ld   $24
              cc7d 00b4  ld   $b4
              cc7e 00f3  ld   $f3
              cc7f 0011  ld   $11
              cc80 00a0  ld   $a0
              cc81 0058  ld   $58
              cc82 002b  ld   $2b
              cc83 001a  ld   $1a
              cc84 00ff  ld   $ff
              cc85 0058  ld   $58
              cc86 00a0  ld   $a0
              cc87 0042  ld   $42
              cc88 00cd  ld   $cd
              cc89 00c8  ld   $c8
              cc8a 0075  ld   $75
              cc8b 0059  ld   $59
              cc8c 0000  ld   $00
              cc8d 002b  ld   $2b
              cc8e 0036  ld   $36
              cc8f 0059  ld   $59
              cc90 000a  ld   $0a
              cc91 002b  ld   $2b
              cc92 0034  ld   $34
              cc93 0085  ld   $85
              cc94 00bc  ld   $bc
              cc95 005d  ld   $5d
              cc96 0021  ld   $21
              cc97 0034  ld   $34
              cc98 00e6  ld   $e6
              cc99 0001  ld   $01
              cc9a 0035  ld   $35
              cc9b 004d  ld   $4d
              cc9c 00a7  ld   $a7
              cc9d 0085  ld   $85
              cc9e 00a2  ld   $a2
              cc9f 005d  ld   $5d
              cca0 00cd  ld   $cd
              cca1 00be  ld   $be
              cca2 0040  ld   $40
              cca3 0000  ld   $00
              cca4 0000  ld   $00
              cca5 0000  ld   $00
              cca6 0000  ld   $00
              cca7 0095  ld   $95
              cca8 0085  ld   $85
              cca9 00a2  ld   $a2
              ccaa 005f  ld   $5f
              ccab 0085  ld   $85
              ccac 00da  ld   $da
              ccad 005f  ld   $5f
              ccae 008c  ld   $8c
              ccaf 0001  ld   $01
              ccb0 0063  ld   $63
              ccb1 00ff  ld   $ff
              ccb2 00cd  ld   $cd
              ccb3 00dd  ld   $dd
              ccb4 0075  ld   $75
              ccb5 0085  ld   $85
              ccb6 00a2  ld   $a2
              ccb7 0058  ld   $58
              ccb8 0035  ld   $35
              ccb9 003f  ld   $3f
              ccba 00db  ld   $db
              ccbb 0085  ld   $85
              ccbc 00af  ld   $af
              ccbd 005d  ld   $5d
              ccbe 001a  ld   $1a
              ccbf 000e  ld   $0e
              ccc0 00e6  ld   $e6
              ccc1 003c  ld   $3c
              ccc2 0035  ld   $35
              ccc3 0050  ld   $50
              ccc4 00cb  ld   $cb
              ccc5 0063  ld   $63
              ccc6 00ff  ld   $ff
              ccc7 0093  ld   $93
              ccc8 001b  ld   $1b
              ccc9 00ff  ld   $ff
              ccca 0059  ld   $59
              cccb 00a0  ld   $a0
              cccc 0044  ld   $44
              cccd 00cd  ld   $cd
              ccce 00df  ld   $df
              cccf 0075  ld   $75
              ccd0 0085  ld   $85
              ccd1 00a2  ld   $a2
              ccd2 005d  ld   $5d
              ccd3 00cd  ld   $cd
              ccd4 00ac  ld   $ac
              ccd5 0048  ld   $48
              ccd6 0000  ld   $00
              ccd7 0000  ld   $00
              ccd8 0001  ld   $01
              ccd9 00aa  ld   $aa
              ccda 0087  ld   $87
              ccdb 0085  ld   $85
              ccdc 00a2  ld   $a2
              ccdd 005f  ld   $5f
              ccde 0085  ld   $85
              ccdf 00da  ld   $da
              cce0 005f  ld   $5f
              cce1 008c  ld   $8c
              cce2 00ff  ld   $ff
              cce3 0035  ld   $35
              cce4 003f  ld   $3f
              cce5 00d9  ld   $d9
              cce6 0021  ld   $21
              cce7 0038  ld   $38
              cce8 0082  ld   $82
              cce9 0004  ld   $04
              ccea 0035  ld   $35
              cceb 003f  ld   $3f
              ccec 00c4  ld   $c4
              cced 0059  ld   $59
              ccee 0001  ld   $01
              ccef 002b  ld   $2b
              ccf0 0036  ld   $36
              ccf1 0090  ld   $90
              ccf2 00d9  ld   $d9
              ccf3 0085  ld   $85
              ccf4 00bc  ld   $bc
              ccf5 005d  ld   $5d
              ccf6 0085  ld   $85
              ccf7 00bc  ld   $bc
              ccf8 005d  ld   $5d
              ccf9 0085  ld   $85
              ccfa 00bc  ld   $bc
              ccfb fe00  bra  ac          ;+-----------------------------------+
              ccfc fcfd  bra  $ccfd       ;|                                   |
              ccfd 1418  ld   $18,y       ;| Trampoline for page $cc00 lookups |
              ccfe e006  jmp  y,$06       ;|                                   |
              ccff c218  st   [$18]       ;+-----------------------------------+
              cd00 005d  ld   $5d
              cd01 0085  ld   $85
              cd02 00bc  ld   $bc
              cd03 005d  ld   $5d
              cd04 008c  ld   $8c
              cd05 00aa  ld   $aa
              cd06 0035  ld   $35
              cd07 0072  ld   $72
              cd08 00d9  ld   $d9
              cd09 0059  ld   $59
              cd0a 0002  ld   $02
              cd0b 002b  ld   $2b
              cd0c 0036  ld   $36
              cd0d 0021  ld   $21
              cd0e 0038  ld   $38
              cd0f 0082  ld   $82
              cd10 00fa  ld   $fa
              cd11 0063  ld   $63
              cd12 00ff  ld   $ff
              cd13 0093  ld   $93
              cd14 001b  ld   $1b
              cd15 00ff  ld   $ff
              cd16 005a  ld   $5a
              cd17 00a0  ld   $a0
              cd18 0044  ld   $44
              cd19 00cd  ld   $cd
              cd1a 00ca  ld   $ca
              cd1b 0075  ld   $75
              cd1c 0085  ld   $85
              cd1d 00a2  ld   $a2
              cd1e 005d  ld   $5d
              cd1f 00cd  ld   $cd
              cd20 00ac  ld   $ac
              cd21 007a  ld   $7a
              cd22 0000  ld   $00
              cd23 0000  ld   $00
              cd24 0000  ld   $00
              * 5 times
              cd27 0085  ld   $85
              cd28 00a2  ld   $a2
              cd29 005f  ld   $5f
              cd2a 0085  ld   $85
              cd2b 00da  ld   $da
              cd2c 005f  ld   $5f
              cd2d 0085  ld   $85
              cd2e 00bc  ld   $bc
              cd2f 005d  ld   $5d
              cd30 0082  ld   $82
              cd31 0040  ld   $40
              cd32 0035  ld   $35
              cd33 003f  ld   $3f
              cd34 00be  ld   $be
              cd35 0059  ld   $59
              cd36 0004  ld   $04
              cd37 002b  ld   $2b
              cd38 0036  ld   $36
              cd39 0085  ld   $85
              cd3a 00bc  ld   $bc
              cd3b 005d  ld   $5d
              cd3c 0085  ld   $85
              cd3d 00bc  ld   $bc
              cd3e 005d  ld   $5d
              cd3f 0021  ld   $21
              cd40 0038  ld   $38
              cd41 0082  ld   $82
              cd42 00fe  ld   $fe
              cd43 0063  ld   $63
              cd44 00ff  ld   $ff
              cd45 00cd  ld   $cd
              cd46 00df  ld   $df
              cd47 0075  ld   $75
              cd48 00cd  ld   $cd
              cd49 00d5  ld   $d5
              cd4a 0077  ld   $77
              cd4b 0000  ld   $00
              cd4c 0000  ld   $00
              cd4d 0000  ld   $00
              * 5 times
              cd50 0085  ld   $85
              cd51 00a2  ld   $a2
              cd52 005f  ld   $5f
              cd53 0085  ld   $85
              cd54 00da  ld   $da
              cd55 005f  ld   $5f
              cd56 0082  ld   $82
              cd57 00fe  ld   $fe
              cd58 0063  ld   $63
              cd59 00ff  ld   $ff
              cd5a 0093  ld   $93
              cd5b 001b  ld   $1b
              cd5c 00ff  ld   $ff
              cd5d 005b  ld   $5b
              cd5e 00a0  ld   $a0
              cd5f 0055  ld   $55
              cd60 00cd  ld   $cd
              cd61 00c4  ld   $c4
              cd62 0075  ld   $75
              cd63 0021  ld   $21
              cd64 0036  ld   $36
              cd65 008c  ld   $8c
              cd66 0001  ld   $01
              cd67 0035  ld   $35
              cd68 0072  ld   $72
              cd69 00b2  ld   $b2
              cd6a 00cd  ld   $cd
              cd6b 00b0  ld   $b0
              cd6c 0069  ld   $69
              cd6d 0000  ld   $00
              cd6e 0000  ld   $00
              cd6f 0000  ld   $00
              * 5 times
              cd72 0090  ld   $90
              cd73 00ba  ld   $ba
              cd74 00cd  ld   $cd
              cd75 00ba  ld   $ba
              cd76 0069  ld   $69
              cd77 0040  ld   $40
              cd78 0000  ld   $00
              cd79 0000  ld   $00
              cd7a 0000  ld   $00
              cd7b 0000  ld   $00
              cd7c 0085  ld   $85
              cd7d 00a2  ld   $a2
              cd7e 005f  ld   $5f
              cd7f 0085  ld   $85
              cd80 00da  ld   $da
              cd81 005f  ld   $5f
              cd82 0082  ld   $82
              cd83 00fe  ld   $fe
              cd84 0063  ld   $63
              cd85 00ff  ld   $ff
              cd86 00cd  ld   $cd
              cd87 00db  ld   $db
              cd88 0075  ld   $75
              cd89 0085  ld   $85
              cd8a 00ce  ld   $ce
              cd8b 005a  ld   $5a
              cd8c 0085  ld   $85
              cd8d 00a2  ld   $a2
              cd8e 005b  ld   $5b
              cd8f 0021  ld   $21
              cd90 0038  ld   $38
              cd91 0035  ld   $35
              cd92 003f  ld   $3f
              cd93 00d9  ld   $d9
              cd94 001a  ld   $1a
              cd95 000e  ld   $0e
              cd96 00e6  ld   $e6
              cd97 0078  ld   $78
              cd98 0035  ld   $35
              cd99 0050  ld   $50
              cd9a 00c7  ld   $c7
              cd9b 0063  ld   $63
              cd9c 00ff  ld   $ff
              cd9d 00cd  ld   $cd
              cd9e 00f0  ld   $f0
              cd9f 0075  ld   $75
              cda0 00cd  ld   $cd
              cda1 00e6  ld   $e6
              cda2 0050  ld   $50
              cda3 0000  ld   $00
              cda4 0000  ld   $00
              cda5 0002  ld   $02
              cda6 0000  ld   $00
              cda7 0000  ld   $00
              cda8 0085  ld   $85
              cda9 00a2  ld   $a2
              cdaa 005f  ld   $5f
              cdab 0085  ld   $85
              cdac 00da  ld   $da
              cdad 005f  ld   $5f
              cdae 0082  ld   $82
              cdaf 00fe  ld   $fe
              cdb0 0063  ld   $63
              cdb1 00ff  ld   $ff
              cdb2 0093  ld   $93
              cdb3 001b  ld   $1b
              cdb4 00ff  ld   $ff
              cdb5 005c  ld   $5c
              cdb6 00a0  ld   $a0
              cdb7 0041  ld   $41
              cdb8 00cd  ld   $cd
              cdb9 00dc  ld   $dc
              cdba 0075  ld   $75
              cdbb 00cd  ld   $cd
              cdbc 00a9  ld   $a9
              cdbd 0051  ld   $51
              cdbe 0000  ld   $00
              cdbf 0000  ld   $00
              cdc0 0000  ld   $00
              * 5 times
              cdc3 002b  ld   $2b
              cdc4 003a  ld   $3a
              cdc5 002b  ld   $2b
              cdc6 003c  ld   $3c
              cdc7 001a  ld   $1a
              cdc8 003f  ld   $3f
              cdc9 0093  ld   $93
              cdca 003c  ld   $3c
              cdcb 00f0  ld   $f0
              cdcc 003c  ld   $3c
              cdcd 001a  ld   $1a
              cdce 003e  ld   $3e
              cdcf 0093  ld   $93
              cdd0 003c  ld   $3c
              cdd1 00f0  ld   $f0
              cdd2 003c  ld   $3c
              cdd3 001a  ld   $1a
              cdd4 0041  ld   $41
              cdd5 0093  ld   $93
              cdd6 003c  ld   $3c
              cdd7 00f0  ld   $f0
              cdd8 003c  ld   $3c
              cdd9 001a  ld   $1a
              cdda 0040  ld   $40
              cddb 0093  ld   $93
              cddc 003c  ld   $3c
              cddd 00f0  ld   $f0
              cdde 003c  ld   $3c
              cddf 0021  ld   $21
              cde0 003a  ld   $3a
              cde1 0085  ld   $85
              cde2 00a2  ld   $a2
              cde3 005f  ld   $5f
              cde4 0085  ld   $85
              cde5 00da  ld   $da
              cde6 005f  ld   $5f
              cde7 0082  ld   $82
              cde8 00fe  ld   $fe
              cde9 0035  ld   $35
              cdea 0072  ld   $72
              cdeb 00da  ld   $da
              cdec 0085  ld   $85
              cded 00bc  ld   $bc
              cdee 005d  ld   $5d
              cdef 008c  ld   $8c
              cdf0 00ff  ld   $ff
              cdf1 0035  ld   $35
              cdf2 003f  ld   $3f
              cdf3 00d2  ld   $d2
              cdf4 0063  ld   $63
              cdf5 00ff  ld   $ff
              cdf6 0093  ld   $93
              cdf7 001b  ld   $1b
              cdf8 00ff  ld   $ff
              cdf9 005d  ld   $5d
              cdfa 00a0  ld   $a0
              cdfb fe00  bra  ac          ;+-----------------------------------+
              cdfc fcfd  bra  $cdfd       ;|                                   |
              cdfd 1418  ld   $18,y       ;| Trampoline for page $cd00 lookups |
              cdfe e006  jmp  y,$06       ;|                                   |
              cdff c218  st   [$18]       ;+-----------------------------------+
              ce00 0035  ld   $35
              ce01 00cd  ld   $cd
              ce02 00ab  ld   $ab
              ce03 0011  ld   $11
              ce04 0009  ld   $09
              ce05 000b  ld   $0b
              ce06 002b  ld   $2b
              ce07 0022  ld   $22
              ce08 0011  ld   $11
              ce09 0078  ld   $78
              ce0a 0080  ld   $80
              ce0b 00b4  ld   $b4
              ce0c 00fa  ld   $fa
              ce0d 00ff  ld   $ff
              ce0e 00cd  ld   $cd
              ce0f 00b8  ld   $b8
              ce10 0011  ld   $11
              ce11 0009  ld   $09
              ce12 000b  ld   $0b
              ce13 002b  ld   $2b
              ce14 0022  ld   $22
              ce15 0011  ld   $11
              ce16 007c  ld   $7c
              ce17 0080  ld   $80
              ce18 00b4  ld   $b4
              ce19 00fa  ld   $fa
              ce1a 00ff  ld   $ff
              ce1b 00cd  ld   $cd
              ce1c 00d0  ld   $d0
              ce1d 0059  ld   $59
              ce1e 00ff  ld   $ff
              ce1f 005e  ld   $5e
              ce20 002a  ld   $2a
              ce21 0059  ld   $59
              ce22 002a  ld   $2a
              ce23 002b  ld   $2b
              ce24 0024  ld   $24
              ce25 00e3  ld   $e3
              ce26 0001  ld   $01
              ce27 002b  ld   $2b
              ce28 0026  ld   $26
              ce29 0011  ld   $11
              ce2a 0015  ld   $15
              ce2b 000b  ld   $0b
              ce2c 002b  ld   $2b
              ce2d 0022  ld   $22
              ce2e 00b4  ld   $b4
              ce2f 00cb  ld   $cb
              ce30 001a  ld   $1a
              ce31 002a  ld   $2a
              ce32 00ff  ld   $ff
              ce33 0093  ld   $93
              ce34 001b  ld   $1b
              ce35 00ff  ld   $ff
              ce36 005e  ld   $5e
              ce37 00a0  ld   $a0
              ce38 0029  ld   $29
              ce39 00cd  ld   $cd
              ce3a 00c4  ld   $c4
              ce3b 00fc  ld   $fc
              ce3c 0043  ld   $43
              ce3d 005e  ld   $5e
              ce3e 0043  ld   $43
              ce3f 0059  ld   $59
              ce40 0008  ld   $08
              ce41 002b  ld   $2b
              ce42 0034  ld   $34
              ce43 0021  ld   $21
              ce44 0042  ld   $42
              ce45 0035  ld   $35
              ce46 0053  ld   $53
              ce47 00b8  ld   $b8
              ce48 0099  ld   $99
              ce49 0042  ld   $42
              ce4a 002b  ld   $2b
              ce4b 0042  ld   $42
              ce4c 0011  ld   $11
              ce4d 0021  ld   $21
              ce4e 0010  ld   $10
              ce4f 00fc  ld   $fc
              ce50 0042  ld   $42
              ce51 0090  ld   $90
              ce52 00ba  ld   $ba
              ce53 0099  ld   $99
              ce54 0042  ld   $42
              ce55 002b  ld   $2b
              ce56 0042  ld   $42
              ce57 0021  ld   $21
              ce58 0034  ld   $34
              ce59 00e6  ld   $e6
              ce5a 0001  ld   $01
              ce5b 0035  ld   $35
              ce5c 004d  ld   $4d
              ce5d 00a6  ld   $a6
              ce5e 00ff  ld   $ff
              ce5f 0093  ld   $93
              ce60 001b  ld   $1b
              ce61 00ff  ld   $ff
              ce62 005f  ld   $5f
              ce63 00a0  ld   $a0
              ce64 0057  ld   $57
              ce65 00cd  ld   $cd
              ce66 00d6  ld   $d6
              ce67 0075  ld   $75
              ce68 002b  ld   $2b
              ce69 003a  ld   $3a
              ce6a 0021  ld   $21
              ce6b 0044  ld   $44
              ce6c 002b  ld   $2b
              ce6d 003c  ld   $3c
              ce6e 0059  ld   $59
              ce6f 00ff  ld   $ff
              ce70 00f0  ld   $f0
              ce71 003c  ld   $3c
              ce72 0093  ld   $93
              ce73 003c  ld   $3c
              ce74 00f0  ld   $f0
              ce75 003c  ld   $3c
              ce76 0093  ld   $93
              ce77 003c  ld   $3c
              ce78 0059  ld   $59
              ce79 0006  ld   $06
              ce7a 002b  ld   $2b
              ce7b 0034  ld   $34
              ce7c 0021  ld   $21
              ce7d 003a  ld   $3a
              ce7e 00ad  ld   $ad
              ce7f 0093  ld   $93
              ce80 003a  ld   $3a
              ce81 00f0  ld   $f0
              ce82 003c  ld   $3c
              ce83 0093  ld   $93
              ce84 003c  ld   $3c
              ce85 0021  ld   $21
              ce86 0034  ld   $34
              ce87 00e6  ld   $e6
              ce88 0001  ld   $01
              ce89 0035  ld   $35
              ce8a 004d  ld   $4d
              ce8b 00b3  ld   $b3
              ce8c 0021  ld   $21
              ce8d 0044  ld   $44
              ce8e 002b  ld   $2b
              ce8f 0024  ld   $24
              ce90 00e3  ld   $e3
              ce91 0008  ld   $08
              ce92 002b  ld   $2b
              ce93 0026  ld   $26
              ce94 0011  ld   $11
              ce95 0015  ld   $15
              ce96 000b  ld   $0b
              ce97 002b  ld   $2b
              ce98 0022  ld   $22
              ce99 00b4  ld   $b4
              ce9a 00cb  ld   $cb
              ce9b 0063  ld   $63
              ce9c 00ff  ld   $ff
              ce9d 00cd  ld   $cd
              ce9e 00f2  ld   $f2
              ce9f 0075  ld   $75
              cea0 0059  ld   $59
              cea1 0008  ld   $08
              cea2 002b  ld   $2b
              cea3 0034  ld   $34
              cea4 0085  ld   $85
              cea5 00bc  ld   $bc
              cea6 005d  ld   $5d
              cea7 0082  ld   $82
              cea8 0080  ld   $80
              cea9 0035  ld   $35
              ceaa 003f  ld   $3f
              ceab 00ec  ld   $ec
              ceac 0021  ld   $21
              cead 0034  ld   $34
              ceae 00e6  ld   $e6
              ceaf 0001  ld   $01
              ceb0 0035  ld   $35
              ceb1 004d  ld   $4d
              ceb2 00db  ld   $db
              ceb3 001a  ld   $1a
              ceb4 002a  ld   $2a
              ceb5 002b  ld   $2b
              ceb6 0038  ld   $38
              ceb7 0063  ld   $63
              ceb8 00ff  ld   $ff
              ceb9 0093  ld   $93
              ceba 001b  ld   $1b
              cebb 00ff  ld   $ff
              cebc 0060  ld   $60
              cebd 00a0  ld   $a0
              cebe 004f  ld   $4f
              cebf 00cd  ld   $cd
              cec0 00c3  ld   $c3
              cec1 0075  ld   $75
              cec2 0085  ld   $85
              cec3 00cc  ld   $cc
              cec4 0058  ld   $58
              cec5 0085  ld   $85
              cec6 00a2  ld   $a2
              cec7 0059  ld   $59
              cec8 0085  ld   $85
              cec9 00c8  ld   $c8
              ceca 005b  ld   $5b
              cecb 0021  ld   $21
              cecc 0036  ld   $36
              cecd 00e6  ld   $e6
              cece 0002  ld   $02
              cecf 0035  ld   $35
              ced0 0072  ld   $72
              ced1 00b4  ld   $b4
              ced2 0085  ld   $85
              ced3 00a2  ld   $a2
              ced4 005a  ld   $5a
              ced5 0021  ld   $21
              ced6 0036  ld   $36
              ced7 00e6  ld   $e6
              ced8 0002  ld   $02
              ced9 0035  ld   $35
              ceda 004d  ld   $4d
              cedb 00be  ld   $be
              cedc 0085  ld   $85
              cedd 00df  ld   $df
              cede 005b  ld   $5b
              cedf 0085  ld   $85
              cee0 00af  ld   $af
              cee1 005d  ld   $5d
              cee2 0063  ld   $63
              cee3 00ff  ld   $ff
              cee4 00cd  ld   $cd
              cee5 00ea  ld   $ea
              cee6 0075  ld   $75
              cee7 0085  ld   $85
              cee8 00a2  ld   $a2
              cee9 0063  ld   $63
              ceea 00cd  ld   $cd
              ceeb 00d3  ld   $d3
              ceec 0056  ld   $56
              ceed 006f  ld   $6f
              ceee 006c  ld   $6c
              ceef 002e  ld   $2e
              cef0 0049  ld   $49
              cef1 0044  ld   $44
              cef2 0020  ld   $20
              cef3 0000  ld   $00
              cef4 0085  ld   $85
              cef5 00a2  ld   $a2
              cef6 0069  ld   $69
              cef7 0059  ld   $59
              cef8 000b  ld   $0b
              cef9 0099  ld   $99
              cefa 0030  ld   $30
              cefb fe00  bra  ac          ;+-----------------------------------+
              cefc fcfd  bra  $cefd       ;|                                   |
              cefd 1418  ld   $18,y       ;| Trampoline for page $ce00 lookups |
              cefe e006  jmp  y,$06       ;|                                   |
              ceff c218  st   [$18]       ;+-----------------------------------+
              cf00 00f6  ld   $f6
              cf01 002b  ld   $2b
              cf02 0046  ld   $46
              cf03 0085  ld   $85
              cf04 00ce  ld   $ce
              cf05 0067  ld   $67
              cf06 0011  ld   $11
              cf07 0000  ld   $00
              cf08 0002  ld   $02
              cf09 00fc  ld   $fc
              cf0a 0046  ld   $46
              cf0b 0085  ld   $85
              cf0c 00bb  ld   $bb
              cf0d 0068  ld   $68
              cf0e 0063  ld   $63
              cf0f 00ff  ld   $ff
              cf10 0093  ld   $93
              cf11 001b  ld   $1b
              cf12 00ff  ld   $ff
              cf13 0061  ld   $61
              cf14 00a0  ld   $a0
              cf15 005e  ld   $5e
              cf16 00cd  ld   $cd
              cf17 00ea  ld   $ea
              cf18 0075  ld   $75
              cf19 0059  ld   $59
              cf1a 0000  ld   $00
              cf1b 002b  ld   $2b
              cf1c 0040  ld   $40
              cf1d 002b  ld   $2b
              cf1e 003e  ld   $3e
              cf1f 0085  ld   $85
              cf20 00a2  ld   $a2
              cf21 0063  ld   $63
              cf22 00cd  ld   $cd
              cf23 00b1  ld   $b1
              cf24 004d  ld   $4d
              cf25 0042  ld   $42
              cf26 0052  ld   $52
              cf27 0020  ld   $20
              cf28 0000  ld   $00
              cf29 0085  ld   $85
              cf2a 00a2  ld   $a2
              cf2b 0069  ld   $69
              cf2c 0011  ld   $11
              cf2d 00fe  ld   $fe
              cf2e 0001  ld   $01
              cf2f 0099  ld   $99
              cf30 0030  ld   $30
              cf31 00f6  ld   $f6
              cf32 002b  ld   $2b
              cf33 0046  ld   $46
              cf34 0011  ld   $11
              cf35 0055  ld   $55
              cf36 00aa  ld   $aa
              cf37 00fc  ld   $fc
              cf38 0046  ld   $46
              cf39 0035  ld   $35
              cf3a 0072  ld   $72
              cf3b 00e8  ld   $e8
              cf3c 0011  ld   $11
              cf3d 00c6  ld   $c6
              cf3e 0001  ld   $01
              cf3f 0099  ld   $99
              cf40 0030  ld   $30
              cf41 00f6  ld   $f6
              cf42 002b  ld   $2b
              cf43 0040  ld   $40
              cf44 0011  ld   $11
              cf45 00c8  ld   $c8
              cf46 0001  ld   $01
              cf47 0099  ld   $99
              cf48 0030  ld   $30
              cf49 00f6  ld   $f6
              cf4a 002b  ld   $2b
              cf4b 003e  ld   $3e
              cf4c 0011  ld   $11
              cf4d 00c2  ld   $c2
              cf4e 0001  ld   $01
              cf4f 0099  ld   $99
              cf50 0030  ld   $30
              cf51 00ad  ld   $ad
              cf52 002b  ld   $2b
              cf53 0046  ld   $46
              cf54 0085  ld   $85
              cf55 00a2  ld   $a2
              cf56 0068  ld   $68
              cf57 0059  ld   $59
              cf58 000b  ld   $0b
              cf59 00fc  ld   $fc
              cf5a 0046  ld   $46
              cf5b 0035  ld   $35
              cf5c 003f  ld   $3f
              cf5d 00e8  ld   $e8
              cf5e 008c  ld   $8c
              cf5f 0007  ld   $07
              cf60 0063  ld   $63
              cf61 00ff  ld   $ff
              cf62 00cd  ld   $cd
              cf63 00f9  ld   $f9
              cf64 002b  ld   $2b
              cf65 0048  ld   $48
              cf66 0099  ld   $99
              cf67 0048  ld   $48
              cf68 00e6  ld   $e6
              cf69 0001  ld   $01
              cf6a 005e  ld   $5e
              cf6b 0019  ld   $19
              cf6c 0088  ld   $88
              cf6d 00ff  ld   $ff
              cf6e 002b  ld   $2b
              cf6f 004a  ld   $4a
              cf70 00ff  ld   $ff
              cf71 0093  ld   $93
              cf72 001b  ld   $1b
              cf73 00ff  ld   $ff
              cf74 0062  ld   $62
              cf75 00a0  ld   $a0
              cf76 0060  ld   $60
              cf77 00cd  ld   $cd
              cf78 00fb  ld   $fb
              cf79 0075  ld   $75
              cf7a 0059  ld   $59
              cf7b 000d  ld   $0d
              cf7c 0099  ld   $99
              cf7d 0030  ld   $30
              cf7e 00ad  ld   $ad
              cf7f 0085  ld   $85
              cf80 00ee  ld   $ee
              cf81 0061  ld   $61
              cf82 0021  ld   $21
              cf83 0040  ld   $40
              cf84 002b  ld   $2b
              cf85 004c  ld   $4c
              cf86 0021  ld   $21
              cf87 003e  ld   $3e
              cf88 002b  ld   $2b
              cf89 004e  ld   $4e
              cf8a 0059  ld   $59
              cf8b 000e  ld   $0e
              cf8c 0099  ld   $99
              cf8d 0030  ld   $30
              cf8e 00f6  ld   $f6
              cf8f 002b  ld   $2b
              cf90 0050  ld   $50
              cf91 0085  ld   $85
              cf92 00d2  ld   $d2
              cf93 0066  ld   $66
              cf94 002b  ld   $2b
              cf95 0052  ld   $52
              cf96 0021  ld   $21
              cf97 004e  ld   $4e
              cf98 002b  ld   $2b
              cf99 0054  ld   $54
              cf9a 0059  ld   $59
              cf9b 0024  ld   $24
              cf9c 0099  ld   $99
              cf9d 0030  ld   $30
              cf9e 00f6  ld   $f6
              cf9f 002b  ld   $2b
              cfa0 0050  ld   $50
              cfa1 0059  ld   $59
              cfa2 0026  ld   $26
              cfa3 0099  ld   $99
              cfa4 0030  ld   $30
              cfa5 00f6  ld   $f6
              cfa6 002b  ld   $2b
              cfa7 0056  ld   $56
              cfa8 0085  ld   $85
              cfa9 00d6  ld   $d6
              cfaa 0066  ld   $66
              cfab 0085  ld   $85
              cfac 00d6  ld   $d6
              cfad 0066  ld   $66
              cfae 0059  ld   $59
              cfaf 0000  ld   $00
              cfb0 00b8  ld   $b8
              cfb1 0048  ld   $48
              cfb2 00b8  ld   $b8
              cfb3 0048  ld   $48
              cfb4 002b  ld   $2b
              cfb5 0050  ld   $50
              cfb6 0011  ld   $11
              cfb7 00ff  ld   $ff
              cfb8 00ff  ld   $ff
              cfb9 002b  ld   $2b
              cfba 0056  ld   $56
              cfbb 0085  ld   $85
              cfbc 00d6  ld   $d6
              cfbd 0066  ld   $66
              cfbe 002b  ld   $2b
              cfbf 0058  ld   $58
              cfc0 0021  ld   $21
              cfc1 004e  ld   $4e
              cfc2 002b  ld   $2b
              cfc3 005a  ld   $5a
              cfc4 0059  ld   $59
              cfc5 002c  ld   $2c
              cfc6 0099  ld   $99
              cfc7 0030  ld   $30
              cfc8 00f6  ld   $f6
              cfc9 002b  ld   $2b
              cfca 005c  ld   $5c
              cfcb 0059  ld   $59
              cfcc 002e  ld   $2e
              cfcd 0099  ld   $99
              cfce 0030  ld   $30
              cfcf 00f6  ld   $f6
              cfd0 002b  ld   $2b
              cfd1 005e  ld   $5e
              cfd2 0063  ld   $63
              cfd3 00ff  ld   $ff
              cfd4 0093  ld   $93
              cfd5 001b  ld   $1b
              cfd6 00ff  ld   $ff
              cfd7 0063  ld   $63
              cfd8 00a0  ld   $a0
              cfd9 003e  ld   $3e
              cfda 00cd  ld   $cd
              cfdb 00d9  ld   $d9
              cfdc 0075  ld   $75
              cfdd 0085  ld   $85
              cfde 00a2  ld   $a2
              cfdf 005d  ld   $5d
              cfe0 0021  ld   $21
              cfe1 0036  ld   $36
              cfe2 00e6  ld   $e6
              cfe3 0002  ld   $02
              cfe4 0035  ld   $35
              cfe5 004d  ld   $4d
              cfe6 00ae  ld   $ae
              cfe7 0085  ld   $85
              cfe8 00a2  ld   $a2
              cfe9 0066  ld   $66
              cfea 0085  ld   $85
              cfeb 00a2  ld   $a2
              cfec 005c  ld   $5c
              cfed 001a  ld   $1a
              cfee 002a  ld   $2a
              cfef 008c  ld   $8c
              cff0 00fe  ld   $fe
              cff1 0035  ld   $35
              cff2 0072  ld   $72
              cff3 00d7  ld   $d7
              cff4 0011  ld   $11
              cff5 0015  ld   $15
              cff6 000b  ld   $0b
              cff7 002b  ld   $2b
              cff8 0022  ld   $22
              cff9 0011  ld   $11
              cffa 0000  ld   $00
              cffb fe00  bra  ac          ;+-----------------------------------+
              cffc fcfd  bra  $cffd       ;|                                   |
              cffd 1418  ld   $18,y       ;| Trampoline for page $cf00 lookups |
              cffe e006  jmp  y,$06       ;|                                   |
              cfff c218  st   [$18]       ;+-----------------------------------+
              d000 007c  ld   $7c
              d001 002b  ld   $2b
              d002 0024  ld   $24
              d003 0021  ld   $21
              d004 0030  ld   $30
              d005 002b  ld   $2b
              d006 0026  ld   $26
              d007 00b4  ld   $b4
              d008 00cb  ld   $cb
              d009 0093  ld   $93
              d00a 0027  ld   $27
              d00b 00b4  ld   $b4
              d00c 00cb  ld   $cb
              d00d 0085  ld   $85
              d00e 00bc  ld   $bc
              d00f 005d  ld   $5d
              d010 0085  ld   $85
              d011 00bc  ld   $bc
              d012 005d  ld   $5d
              d013 0085  ld   $85
              d014 00af  ld   $af
              d015 005d  ld   $5d
              d016 0059  ld   $59
              d017 0000  ld   $00
              d018 0063  ld   $63
              d019 00ff  ld   $ff
              d01a 0093  ld   $93
              d01b 001b  ld   $1b
              d01c 00ff  ld   $ff
              d01d 0064  ld   $64
              d01e 00a0  ld   $a0
              d01f 0050  ld   $50
              d020 00cd  ld   $cd
              d021 00eb  ld   $eb
              d022 0075  ld   $75
              d023 0021  ld   $21
              d024 0060  ld   $60
              d025 00fc  ld   $fc
              d026 0062  ld   $62
              d027 0035  ld   $35
              d028 0072  ld   $72
              d029 00ae  ld   $ae
              d02a 0021  ld   $21
              d02b 0064  ld   $64
              d02c 00fc  ld   $fc
              d02d 0066  ld   $66
              d02e 001a  ld   $1a
              d02f 0019  ld   $19
              d030 0035  ld   $35
              d031 0072  ld   $72
              d032 00b5  ld   $b5
              d033 0021  ld   $21
              d034 0066  ld   $66
              d035 0090  ld   $90
              d036 00bb  ld   $bb
              d037 0021  ld   $21
              d038 0064  ld   $64
              d039 0088  ld   $88
              d03a 00ff  ld   $ff
              d03b 00e3  ld   $e3
              d03c 0001  ld   $01
              d03d 00b8  ld   $b8
              d03e 0064  ld   $64
              d03f 002b  ld   $2b
              d040 0068  ld   $68
              d041 0035  ld   $35
              d042 003f  ld   $3f
              d043 00e5  ld   $e5
              d044 0011  ld   $11
              d045 00ff  ld   $ff
              d046 0001  ld   $01
              d047 00f8  ld   $f8
              d048 0064  ld   $64
              d049 0035  ld   $35
              d04a 003f  ld   $3f
              d04b 00ce  ld   $ce
              d04c 0099  ld   $99
              d04d 0030  ld   $30
              d04e 0090  ld   $90
              d04f 00e5  ld   $e5
              d050 0085  ld   $85
              d051 00a2  ld   $a2
              d052 0063  ld   $63
              d053 0035  ld   $35
              d054 0072  ld   $72
              d055 00db  ld   $db
              d056 0085  ld   $85
              d057 00a2  ld   $a2
              d058 0075  ld   $75
              d059 0021  ld   $21
              d05a 0030  ld   $30
              d05b 0090  ld   $90
              d05c 00e5  ld   $e5
              d05d 0021  ld   $21
              d05e 0060  ld   $60
              d05f 002b  ld   $2b
              d060 0062  ld   $62
              d061 0021  ld   $21
              d062 0064  ld   $64
              d063 002b  ld   $2b
              d064 0066  ld   $66
              d065 0059  ld   $59
              d066 0000  ld   $00
              d067 002b  ld   $2b
              d068 006a  ld   $6a
              d069 0021  ld   $21
              d06a 0068  ld   $68
              d06b 0063  ld   $63
              d06c 00ff  ld   $ff
              d06d 0093  ld   $93
              d06e 001b  ld   $1b
              d06f 00ff  ld   $ff
              d070 0065  ld   $65
              d071 00a0  ld   $a0
              d072 0060  ld   $60
              d073 00cd  ld   $cd
              d074 00cb  ld   $cb
              d075 0075  ld   $75
              d076 0059  ld   $59
              d077 0000  ld   $00
              d078 002b  ld   $2b
              d079 0064  ld   $64
              d07a 002b  ld   $2b
              d07b 0060  ld   $60
              d07c 0021  ld   $21
              d07d 003a  ld   $3a
              d07e 00e3  ld   $e3
              d07f 001c  ld   $1c
              d080 00f6  ld   $f6
              d081 002b  ld   $2b
              d082 0066  ld   $66
              d083 0021  ld   $21
              d084 003a  ld   $3a
              d085 00e3  ld   $e3
              d086 001e  ld   $1e
              d087 00f6  ld   $f6
              d088 002b  ld   $2b
              d089 0062  ld   $62
              d08a 0021  ld   $21
              d08b 003a  ld   $3a
              d08c 00e3  ld   $e3
              d08d 001a  ld   $1a
              d08e 00f6  ld   $f6
              d08f 002b  ld   $2b
              d090 004c  ld   $4c
              d091 0021  ld   $21
              d092 003a  ld   $3a
              d093 00e3  ld   $e3
              d094 0014  ld   $14
              d095 00f6  ld   $f6
              d096 002b  ld   $2b
              d097 004e  ld   $4e
              d098 0085  ld   $85
              d099 00a2  ld   $a2
              d09a 0076  ld   $76
              d09b 0085  ld   $85
              d09c 00cf  ld   $cf
              d09d 0065  ld   $65
              d09e 0063  ld   $63
              d09f 00ff  ld   $ff
              d0a0 00cd  ld   $cd
              d0a1 00fb  ld   $fb
              d0a2 0075  ld   $75
              d0a3 001a  ld   $1a
              d0a4 004f  ld   $4f
              d0a5 0082  ld   $82
              d0a6 000f  ld   $0f
              d0a7 005e  ld   $5e
              d0a8 004f  ld   $4f
              d0a9 0059  ld   $59
              d0aa 0001  ld   $01
              d0ab 002b  ld   $2b
              d0ac 0046  ld   $46
              d0ad 00b8  ld   $b8
              d0ae 0048  ld   $48
              d0af 0035  ld   $35
              d0b0 0053  ld   $53
              d0b1 00e6  ld   $e6
              d0b2 0085  ld   $85
              d0b3 00c2  ld   $c2
              d0b4 0066  ld   $66
              d0b5 0021  ld   $21
              d0b6 0046  ld   $46
              d0b7 0099  ld   $99
              d0b8 0046  ld   $46
              d0b9 0090  ld   $90
              d0ba 00d6  ld   $d6
              d0bb 0021  ld   $21
              d0bc 0058  ld   $58
              d0bd 002b  ld   $2b
              d0be 0050  ld   $50
              d0bf 0021  ld   $21
              d0c0 005a  ld   $5a
              d0c1 002b  ld   $2b
              d0c2 0056  ld   $56
              d0c3 0085  ld   $85
              d0c4 00d6  ld   $d6
              d0c5 0066  ld   $66
              d0c6 0021  ld   $21
              d0c7 004c  ld   $4c
              d0c8 002b  ld   $2b
              d0c9 0040  ld   $40
              d0ca 0021  ld   $21
              d0cb 004e  ld   $4e
              d0cc 002b  ld   $2b
              d0cd 003e  ld   $3e
              d0ce 0063  ld   $63
              d0cf 00ff  ld   $ff
              d0d0 0093  ld   $93
              d0d1 001b  ld   $1b
              d0d2 00ff  ld   $ff
              d0d3 0066  ld   $66
              d0d4 00a0  ld   $a0
              d0d5 005f  ld   $5f
              d0d6 00cd  ld   $cd
              d0d7 00be  ld   $be
              d0d8 0075  ld   $75
              d0d9 0059  ld   $59
              d0da 0000  ld   $00
              d0db 005e  ld   $5e
              d0dc 0050  ld   $50
              d0dd 001a  ld   $1a
              d0de 004c  ld   $4c
              d0df 005e  ld   $5e
              d0e0 0051  ld   $51
              d0e1 001a  ld   $1a
              d0e2 004d  ld   $4d
              d0e3 005e  ld   $5e
              d0e4 0056  ld   $56
              d0e5 001a  ld   $1a
              d0e6 004e  ld   $4e
              d0e7 005e  ld   $5e
              d0e8 0057  ld   $57
              d0e9 0021  ld   $21
              d0ea 0050  ld   $50
              d0eb 002b  ld   $2b
              d0ec 004c  ld   $4c
              d0ed 0021  ld   $21
              d0ee 0056  ld   $56
              d0ef 002b  ld   $2b
              d0f0 004e  ld   $4e
              d0f1 0085  ld   $85
              d0f2 00d6  ld   $d6
              d0f3 0066  ld   $66
              d0f4 0063  ld   $63
              d0f5 00ff  ld   $ff
              d0f6 00cd  ld   $cd
              d0f7 00fa  ld   $fa
              d0f8 0075  ld   $75
              d0f9 0021  ld   $21
              d0fa 004c  ld   $4c
              d0fb fe00  bra  ac          ;+-----------------------------------+
              d0fc fcfd  bra  $d0fd       ;|                                   |
              d0fd 1418  ld   $18,y       ;| Trampoline for page $d000 lookups |
              d0fe e006  jmp  y,$06       ;|                                   |
              d0ff c218  st   [$18]       ;+-----------------------------------+
              d100 002b  ld   $2b
              d101 0050  ld   $50
              d102 0021  ld   $21
              d103 004e  ld   $4e
              d104 002b  ld   $2b
              d105 0056  ld   $56
              d106 0085  ld   $85
              d107 00d6  ld   $d6
              d108 0066  ld   $66
              d109 0021  ld   $21
              d10a 0056  ld   $56
              d10b 0063  ld   $63
              d10c 00ff  ld   $ff
              d10d 0059  ld   $59
              d10e 0000  ld   $00
              d10f 002b  ld   $2b
              d110 0056  ld   $56
              d111 0021  ld   $21
              d112 004c  ld   $4c
              d113 00fc  ld   $fc
              d114 0050  ld   $50
              d115 0035  ld   $35
              d116 0053  ld   $53
              d117 00df  ld   $df
              d118 0021  ld   $21
              d119 004c  ld   $4c
              d11a 0090  ld   $90
              d11b 00e2  ld   $e2
              d11c 0011  ld   $11
              d11d 0000  ld   $00
              d11e 0080  ld   $80
              d11f 0099  ld   $99
              d120 0050  ld   $50
              d121 0035  ld   $35
              d122 0050  ld   $50
              d123 00ed  ld   $ed
              d124 0021  ld   $21
              d125 004e  ld   $4e
              d126 00e3  ld   $e3
              d127 0001  ld   $01
              d128 002b  ld   $2b
              d129 004e  ld   $4e
              d12a 0021  ld   $21
              d12b 004e  ld   $4e
              d12c 0099  ld   $99
              d12d 0056  ld   $56
              d12e 002b  ld   $2b
              d12f 004e  ld   $4e
              d130 0021  ld   $21
              d131 004c  ld   $4c
              d132 0099  ld   $99
              d133 0050  ld   $50
              d134 002b  ld   $2b
              d135 004c  ld   $4c
              d136 00ff  ld   $ff
              d137 0093  ld   $93
              d138 001b  ld   $1b
              d139 00ff  ld   $ff
              d13a 0067  ld   $67
              d13b 00a0  ld   $a0
              d13c 0040  ld   $40
              d13d 00cd  ld   $cd
              d13e 00b8  ld   $b8
              d13f 0075  ld   $75
              d140 00e6  ld   $e6
              d141 0020  ld   $20
              d142 0035  ld   $35
              d143 0053  ld   $53
              d144 00aa  ld   $aa
              d145 0059  ld   $59
              d146 007f  ld   $7f
              d147 0090  ld   $90
              d148 00b1  ld   $b1
              d149 00e6  ld   $e6
              d14a 0060  ld   $60
              d14b 0035  ld   $35
              d14c 0050  ld   $50
              d14d 00b1  ld   $b1
              d14e 0059  ld   $59
              d14f 007f  ld   $7f
              d150 0082  ld   $82
              d151 007f  ld   $7f
              d152 0085  ld   $85
              d153 00a2  ld   $a2
              d154 006e  ld   $6e
              d155 0063  ld   $63
              d156 00ff  ld   $ff
              d157 00cd  ld   $cd
              d158 00ca  ld   $ca
              d159 0075  ld   $75
              d15a 0021  ld   $21
              d15b 004e  ld   $4e
              d15c 0085  ld   $85
              d15d 00ce  ld   $ce
              d15e 0067  ld   $67
              d15f 0021  ld   $21
              d160 004c  ld   $4c
              d161 0085  ld   $85
              d162 00ce  ld   $ce
              d163 0067  ld   $67
              d164 0085  ld   $85
              d165 00a2  ld   $a2
              d166 006d  ld   $6d
              d167 0063  ld   $63
              d168 00ff  ld   $ff
              d169 00cd  ld   $cd
              d16a 00db  ld   $db
              d16b 0075  ld   $75
              d16c 002b  ld   $2b
              d16d 0046  ld   $46
              d16e 001a  ld   $1a
              d16f 0047  ld   $47
              d170 0085  ld   $85
              d171 00a2  ld   $a2
              d172 0068  ld   $68
              d173 001a  ld   $1a
              d174 0046  ld   $46
              d175 0085  ld   $85
              d176 00a2  ld   $a2
              d177 0068  ld   $68
              d178 0063  ld   $63
              d179 00ff  ld   $ff
              d17a 0093  ld   $93
              d17b 001b  ld   $1b
              d17c 00ff  ld   $ff
              d17d 0068  ld   $68
              d17e 00a0  ld   $a0
              d17f 0054  ld   $54
              d180 00cd  ld   $cd
              d181 00b7  ld   $b7
              d182 0075  ld   $75
              d183 00df  ld   $df
              d184 00fe  ld   $fe
              d185 00ec  ld   $ec
              d186 0000  ld   $00
              d187 00e9  ld   $e9
              d188 00e9  ld   $e9
              d189 00e9  ld   $e9
              d18a 00e9  ld   $e9
              d18b 001a  ld   $1a
              d18c 0019  ld   $19
              d18d 0085  ld   $85
              d18e 00de  ld   $de
              d18f 0068  ld   $68
              d190 00ee  ld   $ee
              d191 0000  ld   $00
              d192 00df  ld   $df
              d193 0002  ld   $02
              d194 0085  ld   $85
              d195 00de  ld   $de
              d196 0068  ld   $68
              d197 0063  ld   $63
              d198 00ff  ld   $ff
              d199 00cd  ld   $cd
              d19a 00da  ld   $da
              d19b 0075  ld   $75
              d19c 002b  ld   $2b
              d19d 0046  ld   $46
              d19e 0035  ld   $35
              d19f 0072  ld   $72
              d1a0 00c8  ld   $c8
              d1a1 00cd  ld   $cd
              d1a2 00c6  ld   $c6
              d1a3 0020  ld   $20
              d1a4 004f  ld   $4f
              d1a5 004b  ld   $4b
              d1a6 000a  ld   $0a
              d1a7 0000  ld   $00
              d1a8 0090  ld   $90
              d1a9 00d3  ld   $d3
              d1aa 00cd  ld   $cd
              d1ab 00d3  ld   $d3
              d1ac 0020  ld   $20
              d1ad 0046  ld   $46
              d1ae 0041  ld   $41
              d1af 0049  ld   $49
              d1b0 004c  ld   $4c
              d1b1 0045  ld   $45
              d1b2 0044  ld   $44
              d1b3 000a  ld   $0a
              d1b4 0000  ld   $00
              d1b5 0085  ld   $85
              d1b6 00a2  ld   $a2
              d1b7 0069  ld   $69
              d1b8 0021  ld   $21
              d1b9 0046  ld   $46
              d1ba 0063  ld   $63
              d1bb 00ff  ld   $ff
              d1bc 00cd  ld   $cd
              d1bd 00ef  ld   $ef
              d1be 0075  ld   $75
              d1bf 0082  ld   $82
              d1c0 000f  ld   $0f
              d1c1 00e6  ld   $e6
              d1c2 000a  ld   $0a
              d1c3 0035  ld   $35
              d1c4 0053  ld   $53
              d1c5 00e8  ld   $e8
              d1c6 00e3  ld   $e3
              d1c7 003a  ld   $3a
              d1c8 0090  ld   $90
              d1c9 00ea  ld   $ea
              d1ca 00e3  ld   $e3
              d1cb 0041  ld   $41
              d1cc 0085  ld   $85
              d1cd 00a2  ld   $a2
              d1ce 006e  ld   $6e
              d1cf 0063  ld   $63
              d1d0 00ff  ld   $ff
              d1d1 0093  ld   $93
              d1d2 001b  ld   $1b
              d1d3 00ff  ld   $ff
              d1d4 0069  ld   $69
              d1d5 00a0  ld   $a0
              d1d6 004f  ld   $4f
              d1d7 00cd  ld   $cd
              d1d8 00be  ld   $be
              d1d9 0075  ld   $75
              d1da 002b  ld   $2b
              d1db 003c  ld   $3c
              d1dc 0021  ld   $21
              d1dd 003c  ld   $3c
              d1de 00ad  ld   $ad
              d1df 0035  ld   $35
              d1e0 003f  ld   $3f
              d1e1 00bc  ld   $bc
              d1e2 008c  ld   $8c
              d1e3 000a  ld   $0a
              d1e4 0035  ld   $35
              d1e5 003f  ld   $3f
              d1e6 00b5  ld   $b5
              d1e7 008c  ld   $8c
              d1e8 000a  ld   $0a
              d1e9 0085  ld   $85
              d1ea 00a2  ld   $a2
              d1eb 006e  ld   $6e
              d1ec 0090  ld   $90
              d1ed 00b8  ld   $b8
              d1ee 0085  ld   $85
              d1ef 00a2  ld   $a2
              d1f0 006d  ld   $6d
              d1f1 0093  ld   $93
              d1f2 003c  ld   $3c
              d1f3 0090  ld   $90
              d1f4 00a3  ld   $a3
              d1f5 0063  ld   $63
              d1f6 00ff  ld   $ff
              d1f7 00cd  ld   $cd
              d1f8 00ea  ld   $ea
              d1f9 0075  ld   $75
              d1fa 00cd  ld   $cd
              d1fb fe00  bra  ac          ;+-----------------------------------+
              d1fc fcfd  bra  $d1fd       ;|                                   |
              d1fd 1418  ld   $18,y       ;| Trampoline for page $d100 lookups |
              d1fe e006  jmp  y,$06       ;|                                   |
              d1ff c218  st   [$18]       ;+-----------------------------------+
              d200 00cb  ld   $cb
              d201 0056  ld   $56
              d202 006f  ld   $6f
              d203 006c  ld   $6c
              d204 0075  ld   $75
              d205 006d  ld   $6d
              d206 0065  ld   $65
              d207 0020  ld   $20
              d208 0000  ld   $00
              d209 0085  ld   $85
              d20a 00a2  ld   $a2
              d20b 0069  ld   $69
              d20c 0021  ld   $21
              d20d 003a  ld   $3a
              d20e 002b  ld   $2b
              d20f 003c  ld   $3c
              d210 0059  ld   $59
              d211 000b  ld   $0b
              d212 002b  ld   $2b
              d213 0046  ld   $46
              d214 0021  ld   $21
              d215 003c  ld   $3c
              d216 00ad  ld   $ad
              d217 0093  ld   $93
              d218 003c  ld   $3c
              d219 0085  ld   $85
              d21a 00a2  ld   $a2
              d21b 0067  ld   $67
              d21c 0021  ld   $21
              d21d 0046  ld   $46
              d21e 00e6  ld   $e6
              d21f 0001  ld   $01
              d220 0035  ld   $35
              d221 004d  ld   $4d
              d222 00d4  ld   $d4
              d223 0085  ld   $85
              d224 00a2  ld   $a2
              d225 006d  ld   $6d
              d226 0063  ld   $63
              d227 00ff  ld   $ff
              d228 0093  ld   $93
              d229 001b  ld   $1b
              d22a 00ff  ld   $ff
              d22b 006a  ld   $6a
              d22c 00a0  ld   $a0
              d22d 0050  ld   $50
              d22e 00cd  ld   $cd
              d22f 00b5  ld   $b5
              d230 0075  ld   $75
              d231 002b  ld   $2b
              d232 006c  ld   $6c
              d233 0059  ld   $59
              d234 0030  ld   $30
              d235 002b  ld   $2b
              d236 0046  ld   $46
              d237 0059  ld   $59
              d238 000a  ld   $0a
              d239 0085  ld   $85
              d23a 00a2  ld   $a2
              d23b 006c  ld   $6c
              d23c 0021  ld   $21
              d23d 006c  ld   $6c
              d23e 00e3  ld   $e3
              d23f 0030  ld   $30
              d240 0085  ld   $85
              d241 00a2  ld   $a2
              d242 006e  ld   $6e
              d243 0063  ld   $63
              d244 00ff  ld   $ff
              d245 00cd  ld   $cd
              d246 00eb  ld   $eb
              d247 0075  ld   $75
              d248 0011  ld   $11
              d249 0000  ld   $00
              d24a 0006  ld   $06
              d24b 002b  ld   $2b
              d24c 0022  ld   $22
              d24d 0021  ld   $21
              d24e 003a  ld   $3a
              d24f 00e3  ld   $e3
              d250 0011  ld   $11
              d251 00ad  ld   $ad
              d252 00b4  ld   $b4
              d253 00f6  ld   $f6
              d254 00e6  ld   $e6
              d255 0014  ld   $14
              d256 0035  ld   $35
              d257 0053  ld   $53
              d258 00cb  ld   $cb
              d259 00e3  ld   $e3
              d25a 0064  ld   $64
              d25b 0085  ld   $85
              d25c 00a2  ld   $a2
              d25d 006a  ld   $6a
              d25e 0011  ld   $11
              d25f 006d  ld   $6d
              d260 0006  ld   $06
              d261 002b  ld   $2b
              d262 0022  ld   $22
              d263 0021  ld   $21
              d264 003a  ld   $3a
              d265 00e3  ld   $e3
              d266 0010  ld   $10
              d267 00f6  ld   $f6
              d268 00b4  ld   $b4
              d269 00f5  ld   $f5
              d26a 0082  ld   $82
              d26b 000f  ld   $0f
              d26c 0085  ld   $85
              d26d 00a2  ld   $a2
              d26e 006a  ld   $6a
              d26f 0021  ld   $21
              d270 003a  ld   $3a
              d271 00e3  ld   $e3
              d272 0010  ld   $10
              d273 00ad  ld   $ad
              d274 0082  ld   $82
              d275 001f  ld   $1f
              d276 0085  ld   $85
              d277 00a2  ld   $a2
              d278 006a  ld   $6a
              d279 0063  ld   $63
              d27a 00ff  ld   $ff
              d27b 0093  ld   $93
              d27c 001b  ld   $1b
              d27d 00ff  ld   $ff
              d27e 006b  ld   $6b
              d27f 00a0  ld   $a0
              d280 0055  ld   $55
              d281 00cd  ld   $cd
              d282 00bb  ld   $bb
              d283 0075  ld   $75
              d284 0085  ld   $85
              d285 00b9  ld   $b9
              d286 006a  ld   $6a
              d287 0059  ld   $59
              d288 0004  ld   $04
              d289 0099  ld   $99
              d28a 006e  ld   $6e
              d28b 002b  ld   $2b
              d28c 006e  ld   $6e
              d28d 0085  ld   $85
              d28e 00a2  ld   $a2
              d28f 0070  ld   $70
              d290 0059  ld   $59
              d291 0004  ld   $04
              d292 0099  ld   $99
              d293 006e  ld   $6e
              d294 002b  ld   $2b
              d295 006e  ld   $6e
              d296 0085  ld   $85
              d297 00bf  ld   $bf
              d298 006b  ld   $6b
              d299 0085  ld   $85
              d29a 00a2  ld   $a2
              d29b 006d  ld   $6d
              d29c 0063  ld   $63
              d29d 00ff  ld   $ff
              d29e 00cd  ld   $cd
              d29f 00f0  ld   $f0
              d2a0 0075  ld   $75
              d2a1 0021  ld   $21
              d2a2 003a  ld   $3a
              d2a3 002b  ld   $2b
              d2a4 003c  ld   $3c
              d2a5 0059  ld   $59
              d2a6 000b  ld   $0b
              d2a7 002b  ld   $2b
              d2a8 0046  ld   $46
              d2a9 008c  ld   $8c
              d2aa 0003  ld   $03
              d2ab 0035  ld   $35
              d2ac 0072  ld   $72
              d2ad 00d8  ld   $d8
              d2ae 0021  ld   $21
              d2af 003c  ld   $3c
              d2b0 00ad  ld   $ad
              d2b1 008c  ld   $8c
              d2b2 0020  ld   $20
              d2b3 0035  ld   $35
              d2b4 003f  ld   $3f
              d2b5 00d8  ld   $d8
              d2b6 0059  ld   $59
              d2b7 002e  ld   $2e
              d2b8 0085  ld   $85
              d2b9 00a2  ld   $a2
              d2ba 006e  ld   $6e
              d2bb 0021  ld   $21
              d2bc 003c  ld   $3c
              d2bd 00ad  ld   $ad
              d2be 0093  ld   $93
              d2bf 003c  ld   $3c
              d2c0 008c  ld   $8c
              d2c1 0020  ld   $20
              d2c2 0035  ld   $35
              d2c3 003f  ld   $3f
              d2c4 00e7  ld   $e7
              d2c5 008c  ld   $8c
              d2c6 0020  ld   $20
              d2c7 0085  ld   $85
              d2c8 00a2  ld   $a2
              d2c9 0067  ld   $67
              d2ca 0021  ld   $21
              d2cb 0046  ld   $46
              d2cc 00e6  ld   $e6
              d2cd 0001  ld   $01
              d2ce 0035  ld   $35
              d2cf 004d  ld   $4d
              d2d0 00c4  ld   $c4
              d2d1 0063  ld   $63
              d2d2 00ff  ld   $ff
              d2d3 0093  ld   $93
              d2d4 001b  ld   $1b
              d2d5 00ff  ld   $ff
              d2d6 006c  ld   $6c
              d2d7 00a0  ld   $a0
              d2d8 002c  ld   $2c
              d2d9 00cd  ld   $cd
              d2da 00c7  ld   $c7
              d2db 0075  ld   $75
              d2dc 002b  ld   $2b
              d2dd 0034  ld   $34
              d2de 0021  ld   $21
              d2df 006c  ld   $6c
              d2e0 00b8  ld   $b8
              d2e1 0034  ld   $34
              d2e2 0035  ld   $35
              d2e3 0050  ld   $50
              d2e4 00b0  ld   $b0
              d2e5 002b  ld   $2b
              d2e6 006c  ld   $6c
              d2e7 0093  ld   $93
              d2e8 0046  ld   $46
              d2e9 0090  ld   $90
              d2ea 00a5  ld   $a5
              d2eb 0021  ld   $21
              d2ec 0046  ld   $46
              d2ed 0035  ld   $35
              d2ee 0072  ld   $72
              d2ef 00bc  ld   $bc
              d2f0 0059  ld   $59
              d2f1 0020  ld   $20
              d2f2 0085  ld   $85
              d2f3 00a2  ld   $a2
              d2f4 006e  ld   $6e
              d2f5 0090  ld   $90
              d2f6 00c5  ld   $c5
              d2f7 0088  ld   $88
              d2f8 0030  ld   $30
              d2f9 0085  ld   $85
              d2fa 00a2  ld   $a2
              d2fb fe00  bra  ac          ;+-----------------------------------+
              d2fc fcfd  bra  $d2fd       ;|                                   |
              d2fd 1418  ld   $18,y       ;| Trampoline for page $d200 lookups |
              d2fe e006  jmp  y,$06       ;|                                   |
              d2ff c218  st   [$18]       ;+-----------------------------------+
              d300 006e  ld   $6e
              d301 0059  ld   $59
              d302 0030  ld   $30
              d303 002b  ld   $2b
              d304 0046  ld   $46
              d305 0063  ld   $63
              d306 00ff  ld   $ff
              d307 0093  ld   $93
              d308 001b  ld   $1b
              d309 00ff  ld   $ff
              d30a 006d  ld   $6d
              d30b 00a0  ld   $a0
              d30c 004c  ld   $4c
              d30d 00cd  ld   $cd
              d30e 00e7  ld   $e7
              d30f 0011  ld   $11
              d310 0000  ld   $00
              d311 003f  ld   $3f
              d312 002b  ld   $2b
              d313 0024  ld   $24
              d314 0059  ld   $59
              d315 0000  ld   $00
              d316 005e  ld   $5e
              d317 006e  ld   $6e
              d318 0011  ld   $11
              d319 0020  ld   $20
              d31a 0001  ld   $01
              d31b 00ad  ld   $ad
              d31c 005e  ld   $5e
              d31d 006f  ld   $6f
              d31e 0021  ld   $21
              d31f 006e  ld   $6e
              d320 002b  ld   $2b
              d321 0028  ld   $28
              d322 005e  ld   $5e
              d323 0026  ld   $26
              d324 0011  ld   $11
              d325 00e1  ld   $e1
              d326 0004  ld   $04
              d327 002b  ld   $2b
              d328 0022  ld   $22
              d329 00b4  ld   $b4
              d32a 00cb  ld   $cb
              d32b 0093  ld   $93
              d32c 0028  ld   $28
              d32d 001a  ld   $1a
              d32e 0028  ld   $28
              d32f 008c  ld   $8c
              d330 00a0  ld   $a0
              d331 0035  ld   $35
              d332 0072  ld   $72
              d333 00b5  ld   $b5
              d334 0059  ld   $59
              d335 0001  ld   $01
              d336 005e  ld   $5e
              d337 0035  ld   $35
              d338 0059  ld   $59
              d339 00c0  ld   $c0
              d33a 00e3  ld   $e3
              d33b 001e  ld   $1e
              d33c 005e  ld   $5e
              d33d 0034  ld   $34
              d33e 0021  ld   $21
              d33f 0034  ld   $34
              d340 00ad  ld   $ad
              d341 00e6  ld   $e6
              d342 0070  ld   $70
              d343 0035  ld   $35
              d344 0053  ld   $53
              d345 00db  ld   $db
              d346 00e3  ld   $e3
              d347 0078  ld   $78
              d348 0090  ld   $90
              d349 00dd  ld   $dd
              d34a 00e3  ld   $e3
              d34b 0018  ld   $18
              d34c 00f0  ld   $f0
              d34d 0034  ld   $34
              d34e 001a  ld   $1a
              d34f 0034  ld   $34
              d350 00e6  ld   $e6
              d351 0020  ld   $20
              d352 0035  ld   $35
              d353 004d  ld   $4d
              d354 00cb  ld   $cb
              d355 00ff  ld   $ff
              d356 0093  ld   $93
              d357 001b  ld   $1b
              d358 00ff  ld   $ff
              d359 006e  ld   $6e
              d35a 00a0  ld   $a0
              d35b 004e  ld   $4e
              d35c 00cd  ld   $cd
              d35d 00e9  ld   $e9
              d35e 00e6  ld   $e6
              d35f 0052  ld   $52
              d360 0035  ld   $35
              d361 0053  ld   $53
              d362 00ae  ld   $ae
              d363 00e3  ld   $e3
              d364 0032  ld   $32
              d365 002b  ld   $2b
              d366 0034  ld   $34
              d367 0011  ld   $11
              d368 0000  ld   $00
              d369 0007  ld   $07
              d36a 0090  ld   $90
              d36b 00b3  ld   $b3
              d36c 002b  ld   $2b
              d36d 0034  ld   $34
              d36e 0011  ld   $11
              d36f 0000  ld   $00
              d370 0008  ld   $08
              d371 002b  ld   $2b
              d372 0070  ld   $70
              d373 0021  ld   $21
              d374 0034  ld   $34
              d375 00e9  ld   $e9
              d376 00e9  ld   $e9
              d377 0099  ld   $99
              d378 0034  ld   $34
              d379 0099  ld   $99
              d37a 0070  ld   $70
              d37b 002b  ld   $2b
              d37c 0070  ld   $70
              d37d 0011  ld   $11
              d37e 0000  ld   $00
              d37f 003f  ld   $3f
              d380 002b  ld   $2b
              d381 0024  ld   $24
              d382 0021  ld   $21
              d383 006e  ld   $6e
              d384 002b  ld   $2b
              d385 0028  ld   $28
              d386 00e3  ld   $e3
              d387 0006  ld   $06
              d388 002b  ld   $2b
              d389 006e  ld   $6e
              d38a 0011  ld   $11
              d38b 00e1  ld   $e1
              d38c 0004  ld   $04
              d38d 002b  ld   $2b
              d38e 0022  ld   $22
              d38f 0059  ld   $59
              d390 0005  ld   $05
              d391 002b  ld   $2b
              d392 0034  ld   $34
              d393 0021  ld   $21
              d394 0070  ld   $70
              d395 007f  ld   $7f
              d396 0000  ld   $00
              d397 005e  ld   $5e
              d398 0026  ld   $26
              d399 00b4  ld   $b4
              d39a 00cb  ld   $cb
              d39b 0093  ld   $93
              d39c 0070  ld   $70
              d39d 0093  ld   $93
              d39e 0028  ld   $28
              d39f 0021  ld   $21
              d3a0 0034  ld   $34
              d3a1 00e6  ld   $e6
              d3a2 0001  ld   $01
              d3a3 0035  ld   $35
              d3a4 004d  ld   $4d
              d3a5 00d3  ld   $d3
              d3a6 00ff  ld   $ff
              d3a7 0093  ld   $93
              d3a8 001b  ld   $1b
              d3a9 00ff  ld   $ff
              d3aa 006f  ld   $6f
              d3ab 00a0  ld   $a0
              d3ac 004f  ld   $4f
              d3ad 00cd  ld   $cd
              d3ae 00ea  ld   $ea
              d3af 0075  ld   $75
              d3b0 0085  ld   $85
              d3b1 00a2  ld   $a2
              d3b2 0064  ld   $64
              d3b3 0021  ld   $21
              d3b4 006a  ld   $6a
              d3b5 002b  ld   $2b
              d3b6 003a  ld   $3a
              d3b7 00ad  ld   $ad
              d3b8 0035  ld   $35
              d3b9 003f  ld   $3f
              d3ba 00e8  ld   $e8
              d3bb 008c  ld   $8c
              d3bc 00e5  ld   $e5
              d3bd 0035  ld   $35
              d3be 003f  ld   $3f
              d3bf 00e1  ld   $e1
              d3c0 0021  ld   $21
              d3c1 003a  ld   $3a
              d3c2 00e3  ld   $e3
              d3c3 000b  ld   $0b
              d3c4 00ad  ld   $ad
              d3c5 002b  ld   $2b
              d3c6 0046  ld   $46
              d3c7 008c  ld   $8c
              d3c8 000f  ld   $0f
              d3c9 0035  ld   $35
              d3ca 003f  ld   $3f
              d3cb 00e1  ld   $e1
              d3cc 0082  ld   $82
              d3cd 0002  ld   $02
              d3ce 0035  ld   $35
              d3cf 003f  ld   $3f
              d3d0 00e1  ld   $e1
              d3d1 0021  ld   $21
              d3d2 0046  ld   $46
              d3d3 0082  ld   $82
              d3d4 0008  ld   $08
              d3d5 0035  ld   $35
              d3d6 003f  ld   $3f
              d3d7 00ce  ld   $ce
              d3d8 0085  ld   $85
              d3d9 00c2  ld   $c2
              d3da 0069  ld   $69
              d3db 0090  ld   $90
              d3dc 00e1  ld   $e1
              d3dd 0085  ld   $85
              d3de 00a2  ld   $a2
              d3df 006b  ld   $6b
              d3e0 0085  ld   $85
              d3e1 00a2  ld   $a2
              d3e2 0074  ld   $74
              d3e3 0035  ld   $35
              d3e4 0072  ld   $72
              d3e5 00e1  ld   $e1
              d3e6 0059  ld   $59
              d3e7 00d0  ld   $d0
              d3e8 00f0  ld   $f0
              d3e9 0032  ld   $32
              d3ea 0085  ld   $85
              d3eb 00a2  ld   $a2
              d3ec 0073  ld   $73
              d3ed 0085  ld   $85
              d3ee 00cd  ld   $cd
              d3ef 0074  ld   $74
              d3f0 0059  ld   $59
              d3f1 0020  ld   $20
              d3f2 0085  ld   $85
              d3f3 00c6  ld   $c6
              d3f4 0075  ld   $75
              d3f5 0090  ld   $90
              d3f6 00a1  ld   $a1
              d3f7 0063  ld   $63
              d3f8 00ff  ld   $ff
              d3f9 0093  ld   $93
              d3fa 001b  ld   $1b
              d3fb fe00  bra  ac          ;+-----------------------------------+
              d3fc fcfd  bra  $d3fd       ;|                                   |
              d3fd 1418  ld   $18,y       ;| Trampoline for page $d300 lookups |
              d3fe e006  jmp  y,$06       ;|                                   |
              d3ff c218  st   [$18]       ;+-----------------------------------+
              d400 00ff  ld   $ff
              d401 0070  ld   $70
              d402 00a0  ld   $a0
              d403 005e  ld   $5e
              d404 00cd  ld   $cd
              d405 00f9  ld   $f9
              d406 0075  ld   $75
              d407 0021  ld   $21
              d408 003a  ld   $3a
              d409 00e3  ld   $e3
              d40a 000b  ld   $0b
              d40b 00ad  ld   $ad
              d40c 0082  ld   $82
              d40d 0010  ld   $10
              d40e 0035  ld   $35
              d40f 003f  ld   $3f
              d410 00b7  ld   $b7
              d411 00cd  ld   $cd
              d412 00b5  ld   $b5
              d413 0020  ld   $20
              d414 0020  ld   $20
              d415 003c  ld   $3c
              d416 0044  ld   $44
              d417 0049  ld   $49
              d418 0052  ld   $52
              d419 003e  ld   $3e
              d41a 0000  ld   $00
              d41b 0090  ld   $90
              d41c 00f4  ld   $f4
              d41d 0021  ld   $21
              d41e 003a  ld   $3a
              d41f 00e3  ld   $e3
              d420 001c  ld   $1c
              d421 00f6  ld   $f6
              d422 002b  ld   $2b
              d423 004c  ld   $4c
              d424 0021  ld   $21
              d425 003a  ld   $3a
              d426 00e3  ld   $e3
              d427 001e  ld   $1e
              d428 00f6  ld   $f6
              d429 002b  ld   $2b
              d42a 004e  ld   $4e
              d42b 0085  ld   $85
              d42c 00a2  ld   $a2
              d42d 0071  ld   $71
              d42e 0059  ld   $59
              d42f 0000  ld   $00
              d430 002b  ld   $2b
              d431 0070  ld   $70
              d432 0059  ld   $59
              d433 0008  ld   $08
              d434 002b  ld   $2b
              d435 0034  ld   $34
              d436 0021  ld   $21
              d437 003c  ld   $3c
              d438 00ad  ld   $ad
              d439 008c  ld   $8c
              d43a 0030  ld   $30
              d43b 0035  ld   $35
              d43c 0072  ld   $72
              d43d 00f0  ld   $f0
              d43e 0021  ld   $21
              d43f 0034  ld   $34
              d440 00e6  ld   $e6
              d441 0006  ld   $06
              d442 0035  ld   $35
              d443 0053  ld   $53
              d444 00e5  ld   $e5
              d445 0059  ld   $59
              d446 0020  ld   $20
              d447 00f0  ld   $f0
              d448 003c  ld   $3c
              d449 0090  ld   $90
              d44a 00e7  ld   $e7
              d44b 0093  ld   $93
              d44c 0070  ld   $70
              d44d 0093  ld   $93
              d44e 003c  ld   $3c
              d44f 0021  ld   $21
              d450 0034  ld   $34
              d451 00e6  ld   $e6
              d452 0001  ld   $01
              d453 0035  ld   $35
              d454 0053  ld   $53
              d455 00ce  ld   $ce
              d456 0021  ld   $21
              d457 0044  ld   $44
              d458 0099  ld   $99
              d459 0070  ld   $70
              d45a 0085  ld   $85
              d45b 00a2  ld   $a2
              d45c 0069  ld   $69
              d45d 0063  ld   $63
              d45e 00ff  ld   $ff
              d45f 0093  ld   $93
              d460 001b  ld   $1b
              d461 00ff  ld   $ff
              d462 0071  ld   $71
              d463 00a0  ld   $a0
              d464 0060  ld   $60
              d465 00cd  ld   $cd
              d466 00fb  ld   $fb
              d467 0075  ld   $75
              d468 0059  ld   $59
              d469 0009  ld   $09
              d46a 002b  ld   $2b
              d46b 0034  ld   $34
              d46c 0021  ld   $21
              d46d 0044  ld   $44
              d46e 0099  ld   $99
              d46f 0034  ld   $34
              d470 002b  ld   $2b
              d471 003c  ld   $3c
              d472 0059  ld   $59
              d473 0030  ld   $30
              d474 00f0  ld   $f0
              d475 003c  ld   $3c
              d476 0021  ld   $21
              d477 0034  ld   $34
              d478 00e6  ld   $e6
              d479 0001  ld   $01
              d47a 0035  ld   $35
              d47b 0053  ld   $53
              d47c 00a3  ld   $a3
              d47d 0059  ld   $59
              d47e 001f  ld   $1f
              d47f 002b  ld   $2b
              d480 0070  ld   $70
              d481 0085  ld   $85
              d482 00c2  ld   $c2
              d483 0066  ld   $66
              d484 0035  ld   $35
              d485 0050  ld   $50
              d486 00c4  ld   $c4
              d487 0059  ld   $59
              d488 006a  ld   $6a
              d489 0090  ld   $90
              d48a 00c6  ld   $c6
              d48b 0059  ld   $59
              d48c 0069  ld   $69
              d48d 002b  ld   $2b
              d48e 0046  ld   $46
              d48f 0059  ld   $59
              d490 0009  ld   $09
              d491 002b  ld   $2b
              d492 0034  ld   $34
              d493 0021  ld   $21
              d494 0044  ld   $44
              d495 0099  ld   $99
              d496 0034  ld   $34
              d497 002b  ld   $2b
              d498 003c  ld   $3c
              d499 0021  ld   $21
              d49a 003c  ld   $3c
              d49b 00ad  ld   $ad
              d49c 00e9  ld   $e9
              d49d 00b8  ld   $b8
              d49e 0046  ld   $46
              d49f 0035  ld   $35
              d4a0 0053  ld   $53
              d4a1 00e3  ld   $e3
              d4a2 00e3  ld   $e3
              d4a3 003a  ld   $3a
              d4a4 00f0  ld   $f0
              d4a5 003c  ld   $3c
              d4a6 0059  ld   $59
              d4a7 006a  ld   $6a
              d4a8 0090  ld   $90
              d4a9 00e9  ld   $e9
              d4aa 00e3  ld   $e3
              d4ab 0030  ld   $30
              d4ac 00f0  ld   $f0
              d4ad 003c  ld   $3c
              d4ae 0059  ld   $59
              d4af 0069  ld   $69
              d4b0 002b  ld   $2b
              d4b1 0046  ld   $46
              d4b2 0021  ld   $21
              d4b3 0034  ld   $34
              d4b4 00e6  ld   $e6
              d4b5 0001  ld   $01
              d4b6 0035  ld   $35
              d4b7 0053  ld   $53
              d4b8 00ca  ld   $ca
              d4b9 0021  ld   $21
              d4ba 0070  ld   $70
              d4bb 00e6  ld   $e6
              d4bc 0001  ld   $01
              d4bd 0035  ld   $35
              d4be 0053  ld   $53
              d4bf 00b8  ld   $b8
              d4c0 0063  ld   $63
              d4c1 00ff  ld   $ff
              d4c2 0093  ld   $93
              d4c3 001b  ld   $1b
              d4c4 00ff  ld   $ff
              d4c5 0072  ld   $72
              d4c6 00a0  ld   $a0
              d4c7 004f  ld   $4f
              d4c8 00cd  ld   $cd
              d4c9 00ab  ld   $ab
              d4ca 002d  ld   $2d
              d4cb 002d  ld   $2d
              d4cc 002d  ld   $2d
              * 10 times
              d4d4 0000  ld   $00
              d4d5 002b  ld   $2b
              d4d6 0044  ld   $44
              d4d7 00cd  ld   $cd
              d4d8 00ea  ld   $ea
              d4d9 0075  ld   $75
              d4da 005e  ld   $5e
              d4db 0025  ld   $25
              d4dc 0011  ld   $11
              d4dd 0003  ld   $03
              d4de 000b  ld   $0b
              d4df 002b  ld   $2b
              d4e0 0022  ld   $22
              d4e1 0059  ld   $59
              d4e2 0018  ld   $18
              d4e3 002b  ld   $2b
              d4e4 0034  ld   $34
              d4e5 0011  ld   $11
              d4e6 0020  ld   $20
              d4e7 0001  ld   $01
              d4e8 002b  ld   $2b
              d4e9 0046  ld   $46
              d4ea 0021  ld   $21
              d4eb 0034  ld   $34
              d4ec 00f0  ld   $f0
              d4ed 0046  ld   $46
              d4ee 005e  ld   $5e
              d4ef 0027  ld   $27
              d4f0 0059  ld   $59
              d4f1 0000  ld   $00
              d4f2 005e  ld   $5e
              d4f3 0026  ld   $26
              d4f4 0059  ld   $59
              d4f5 00a0  ld   $a0
              d4f6 005e  ld   $5e
              d4f7 0024  ld   $24
              d4f8 00b4  ld   $b4
              d4f9 00f3  ld   $f3
              d4fa 0059  ld   $59
              d4fb fe00  bra  ac          ;+-----------------------------------+
              d4fc fcfd  bra  $d4fd       ;|                                   |
              d4fd 1418  ld   $18,y       ;| Trampoline for page $d400 lookups |
              d4fe e006  jmp  y,$06       ;|                                   |
              d4ff c218  st   [$18]       ;+-----------------------------------+
              d500 0001  ld   $01
              d501 0099  ld   $99
              d502 0034  ld   $34
              d503 002b  ld   $2b
              d504 0034  ld   $34
              d505 0059  ld   $59
              d506 0002  ld   $02
              d507 0099  ld   $99
              d508 0046  ld   $46
              d509 002b  ld   $2b
              d50a 0046  ld   $46
              d50b 0011  ld   $11
              d50c 00f0  ld   $f0
              d50d 0001  ld   $01
              d50e 00fc  ld   $fc
              d50f 0046  ld   $46
              d510 0035  ld   $35
              d511 0072  ld   $72
              d512 00c0  ld   $c0
              d513 0059  ld   $59
              d514 0000  ld   $00
              d515 00f0  ld   $f0
              d516 0032  ld   $32
              d517 0063  ld   $63
              d518 00ff  ld   $ff
              d519 0093  ld   $93
              d51a 001b  ld   $1b
              d51b 00ff  ld   $ff
              d51c 0073  ld   $73
              d51d 00a0  ld   $a0
              d51e 0056  ld   $56
              d51f 00cd  ld   $cd
              d520 00f1  ld   $f1
              d521 0075  ld   $75
              d522 00cd  ld   $cd
              d523 00ac  ld   $ac
              d524 004c  ld   $4c
              d525 006f  ld   $6f
              d526 0061  ld   $61
              d527 0064  ld   $64
              d528 0069  ld   $69
              d529 006e  ld   $6e
              d52a 0067  ld   $67
              d52b 0020  ld   $20
              d52c 0000  ld   $00
              d52d 0085  ld   $85
              d52e 00a2  ld   $a2
              d52f 0069  ld   $69
              d530 0085  ld   $85
              d531 00bf  ld   $bf
              d532 006b  ld   $6b
              d533 0085  ld   $85
              d534 00a2  ld   $a2
              d535 0065  ld   $65
              d536 0085  ld   $85
              d537 00de  ld   $de
              d538 0075  ld   $75
              d539 005e  ld   $5e
              d53a 0073  ld   $73
              d53b 0085  ld   $85
              d53c 00de  ld   $de
              d53d 0075  ld   $75
              d53e 005e  ld   $5e
              d53f 0072  ld   $72
              d540 0085  ld   $85
              d541 00de  ld   $de
              d542 0075  ld   $75
              d543 00e6  ld   $e6
              d544 0001  ld   $01
              d545 0082  ld   $82
              d546 00ff  ld   $ff
              d547 00e3  ld   $e3
              d548 0001  ld   $01
              d549 002b  ld   $2b
              d54a 0074  ld   $74
              d54b 0085  ld   $85
              d54c 00a2  ld   $a2
              d54d 0078  ld   $78
              d54e 0021  ld   $21
              d54f 0074  ld   $74
              d550 0035  ld   $35
              d551 0072  ld   $72
              d552 00d8  ld   $d8
              d553 0085  ld   $85
              d554 00de  ld   $de
              d555 0075  ld   $75
              d556 0035  ld   $35
              d557 0072  ld   $72
              d558 00b8  ld   $b8
              d559 0085  ld   $85
              d55a 00de  ld   $de
              d55b 0075  ld   $75
              d55c 005e  ld   $5e
              d55d 0073  ld   $73
              d55e 0085  ld   $85
              d55f 00de  ld   $de
              d560 0075  ld   $75
              d561 005e  ld   $5e
              d562 0072  ld   $72
              d563 0085  ld   $85
              d564 00de  ld   $de
              d565 0075  ld   $75
              d566 0035  ld   $35
              d567 0050  ld   $50
              d568 00ec  ld   $ec
              d569 0059  ld   $59
              d56a 0000  ld   $00
              d56b 002b  ld   $2b
              d56c 0072  ld   $72
              d56d 0085  ld   $85
              d56e 00af  ld   $af
              d56f 005d  ld   $5d
              d570 0063  ld   $63
              d571 00ff  ld   $ff
              d572 0093  ld   $93
              d573 001b  ld   $1b
              d574 00ff  ld   $ff
              d575 0074  ld   $74
              d576 00a0  ld   $a0
              d577 003c  ld   $3c
              d578 00cd  ld   $cd
              d579 00c9  ld   $c9
              d57a 00cd  ld   $cd
              d57b 00ae  ld   $ae
              d57c 0053  ld   $53
              d57d 0059  ld   $59
              d57e 0053  ld   $53
              d57f 0054  ld   $54
              d580 0045  ld   $45
              d581 004d  ld   $4d
              d582 0020  ld   $20
              d583 0020  ld   $20
              d584 0047  ld   $47
              d585 0054  ld   $54
              d586 0031  ld   $31
              d587 0000  ld   $00
              d588 002b  ld   $2b
              d589 003c  ld   $3c
              d58a 0021  ld   $21
              d58b 003a  ld   $3a
              d58c 002b  ld   $2b
              d58d 0034  ld   $34
              d58e 0021  ld   $21
              d58f 003c  ld   $3c
              d590 00ad  ld   $ad
              d591 0093  ld   $93
              d592 003c  ld   $3c
              d593 0035  ld   $35
              d594 003f  ld   $3f
              d595 00c8  ld   $c8
              d596 002b  ld   $2b
              d597 0070  ld   $70
              d598 0021  ld   $21
              d599 0034  ld   $34
              d59a 00ad  ld   $ad
              d59b 0093  ld   $93
              d59c 0034  ld   $34
              d59d 00fc  ld   $fc
              d59e 0070  ld   $70
              d59f 0035  ld   $35
              d5a0 003f  ld   $3f
              d5a1 00b4  ld   $b4
              d5a2 00ff  ld   $ff
              d5a3 00cd  ld   $cd
              d5a4 00d7  ld   $d7
              d5a5 0059  ld   $59
              d5a6 0020  ld   $20
              d5a7 0085  ld   $85
              d5a8 00b1  ld   $b1
              d5a9 0072  ld   $72
              d5aa 0021  ld   $21
              d5ab 0072  ld   $72
              d5ac 0035  ld   $35
              d5ad 003f  ld   $3f
              d5ae 00d2  ld   $d2
              d5af 00cf  ld   $cf
              d5b0 0018  ld   $18
              d5b1 0093  ld   $93
              d5b2 001b  ld   $1b
              d5b3 00ff  ld   $ff
              d5b4 0075  ld   $75
              d5b5 00a0  ld   $a0
              d5b6 0059  ld   $59
              d5b7 00cd  ld   $cd
              d5b8 00c2  ld   $c2
              d5b9 0075  ld   $75
              d5ba 0093  ld   $93
              d5bb 0040  ld   $40
              d5bc 0011  ld   $11
              d5bd 0000  ld   $00
              d5be 0002  ld   $02
              d5bf 0099  ld   $99
              d5c0 0064  ld   $64
              d5c1 00f8  ld   $f8
              d5c2 004a  ld   $4a
              d5c3 0035  ld   $35
              d5c4 0072  ld   $72
              d5c5 00c0  ld   $c0
              d5c6 0021  ld   $21
              d5c7 0076  ld   $76
              d5c8 00e3  ld   $e3
              d5c9 0004  ld   $04
              d5ca 002b  ld   $2b
              d5cb 0076  ld   $76
              d5cc 00f6  ld   $f6
              d5cd 002b  ld   $2b
              d5ce 004c  ld   $4c
              d5cf 0021  ld   $21
              d5d0 0076  ld   $76
              d5d1 00e3  ld   $e3
              d5d2 0002  ld   $02
              d5d3 00f6  ld   $f6
              d5d4 002b  ld   $2b
              d5d5 004e  ld   $4e
              d5d6 0085  ld   $85
              d5d7 00cf  ld   $cf
              d5d8 0065  ld   $65
              d5d9 0063  ld   $63
              d5da 00ff  ld   $ff
              d5db 00cd  ld   $cd
              d5dc 00da  ld   $da
              d5dd 002b  ld   $2b
              d5de 0034  ld   $34
              d5df 0099  ld   $99
              d5e0 0064  ld   $64
              d5e1 002b  ld   $2b
              d5e2 0064  ld   $64
              d5e3 0035  ld   $35
              d5e4 0072  ld   $72
              d5e5 00d3  ld   $d3
              d5e6 0059  ld   $59
              d5e7 0001  ld   $01
              d5e8 0099  ld   $99
              d5e9 0060  ld   $60
              d5ea 002b  ld   $2b
              d5eb 0060  ld   $60
              d5ec 0021  ld   $21
              d5ed 0068  ld   $68
              d5ee 00b8  ld   $b8
              d5ef 0034  ld   $34
              d5f0 002b  ld   $2b
              d5f1 0068  ld   $68
              d5f2 00ff  ld   $ff
              d5f3 00cd  ld   $cd
              d5f4 00f4  ld   $f4
              d5f5 0075  ld   $75
              d5f6 0085  ld   $85
              d5f7 00a2  ld   $a2
              d5f8 0064  ld   $64
              d5f9 0035  ld   $35
              d5fa 0056  ld   $56
              d5fb fe00  bra  ac          ;+-----------------------------------+
              d5fc fcfd  bra  $d5fd       ;|                                   |
              d5fd 1418  ld   $18,y       ;| Trampoline for page $d500 lookups |
              d5fe e006  jmp  y,$06       ;|                                   |
              d5ff c218  st   [$18]       ;+-----------------------------------+
              d600 00ef  ld   $ef
              d601 0059  ld   $59
              d602 0001  ld   $01
              d603 0085  ld   $85
              d604 00c6  ld   $c6
              d605 0075  ld   $75
              d606 0021  ld   $21
              d607 006a  ld   $6a
              d608 00ad  ld   $ad
              d609 0093  ld   $93
              d60a 006a  ld   $6a
              d60b 0090  ld   $90
              d60c 00f2  ld   $f2
              d60d 0011  ld   $11
              d60e 00ff  ld   $ff
              d60f 00ff  ld   $ff
              d610 0063  ld   $63
              d611 00ff  ld   $ff
              d612 0093  ld   $93
              d613 001b  ld   $1b
              d614 00ff  ld   $ff
              d615 0076  ld   $76
              d616 00a0  ld   $a0
              d617 0044  ld   $44
              d618 00cd  ld   $cd
              d619 00df  ld   $df
              d61a 0075  ld   $75
              d61b 0011  ld   $11
              d61c 0000  ld   $00
              d61d 007f  ld   $7f
              d61e 002b  ld   $2b
              d61f 0076  ld   $76
              d620 0021  ld   $21
              d621 004c  ld   $4c
              d622 00f3  ld   $f3
              d623 0076  ld   $76
              d624 0093  ld   $93
              d625 0076  ld   $76
              d626 0093  ld   $93
              d627 0076  ld   $76
              d628 0021  ld   $21
              d629 004e  ld   $4e
              d62a 00f3  ld   $f3
              d62b 0076  ld   $76
              d62c 0093  ld   $93
              d62d 0076  ld   $76
              d62e 0093  ld   $93
              d62f 0076  ld   $76
              d630 0011  ld   $11
              d631 0000  ld   $00
              d632 00f0  ld   $f0
              d633 00fa  ld   $fa
              d634 004e  ld   $4e
              d635 00e3  ld   $e3
              d636 0001  ld   $01
              d637 0035  ld   $35
              d638 0072  ld   $72
              d639 00c6  ld   $c6
              d63a 0059  ld   $59
              d63b 0007  ld   $07
              d63c 00fa  ld   $fa
              d63d 004c  ld   $4c
              d63e 00e3  ld   $e3
              d63f 0001  ld   $01
              d640 0035  ld   $35
              d641 003f  ld   $3f
              d642 00ce  ld   $ce
              d643 0085  ld   $85
              d644 00a2  ld   $a2
              d645 0077  ld   $77
              d646 0090  ld   $90
              d647 00a6  ld   $a6
              d648 0011  ld   $11
              d649 0000  ld   $00
              d64a 007f  ld   $7f
              d64b 002b  ld   $2b
              d64c 0076  ld   $76
              d64d 00f6  ld   $f6
              d64e 002b  ld   $2b
              d64f 004c  ld   $4c
              d650 0021  ld   $21
              d651 0076  ld   $76
              d652 00e3  ld   $e3
              d653 0002  ld   $02
              d654 00f6  ld   $f6
              d655 002b  ld   $2b
              d656 004e  ld   $4e
              d657 0063  ld   $63
              d658 00ff  ld   $ff
              d659 0093  ld   $93
              d65a 001b  ld   $1b
              d65b 00ff  ld   $ff
              d65c 0077  ld   $77
              d65d 00a0  ld   $a0
              d65e 005d  ld   $5d
              d65f 00cd  ld   $cd
              d660 00f8  ld   $f8
              d661 0075  ld   $75
              d662 001a  ld   $1a
              d663 004d  ld   $4d
              d664 005e  ld   $5e
              d665 0050  ld   $50
              d666 001a  ld   $1a
              d667 004e  ld   $4e
              d668 005e  ld   $5e
              d669 0051  ld   $51
              d66a 001a  ld   $1a
              d66b 004f  ld   $4f
              d66c 002b  ld   $2b
              d66d 0056  ld   $56
              d66e 001a  ld   $1a
              d66f 004c  ld   $4c
              d670 002b  ld   $2b
              d671 0078  ld   $78
              d672 0082  ld   $82
              d673 0080  ld   $80
              d674 00ad  ld   $ad
              d675 002b  ld   $2b
              d676 004c  ld   $4c
              d677 0059  ld   $59
              d678 0000  ld   $00
              d679 002b  ld   $2b
              d67a 004e  ld   $4e
              d67b 0085  ld   $85
              d67c 00d6  ld   $d6
              d67d 0066  ld   $66
              d67e 0085  ld   $85
              d67f 00d6  ld   $d6
              d680 0066  ld   $66
              d681 0021  ld   $21
              d682 0052  ld   $52
              d683 002b  ld   $2b
              d684 0050  ld   $50
              d685 0021  ld   $21
              d686 0054  ld   $54
              d687 002b  ld   $2b
              d688 0056  ld   $56
              d689 0085  ld   $85
              d68a 00d6  ld   $d6
              d68b 0066  ld   $66
              d68c 00fc  ld   $fc
              d68d 0040  ld   $40
              d68e 0035  ld   $35
              d68f 0072  ld   $72
              d690 00d4  ld   $d4
              d691 0021  ld   $21
              d692 004e  ld   $4e
              d693 00fc  ld   $fc
              d694 003e  ld   $3e
              d695 0035  ld   $35
              d696 003f  ld   $3f
              d697 00e2  ld   $e2
              d698 0021  ld   $21
              d699 004c  ld   $4c
              d69a 002b  ld   $2b
              d69b 0040  ld   $40
              d69c 0021  ld   $21
              d69d 004e  ld   $4e
              d69e 002b  ld   $2b
              d69f 003e  ld   $3e
              d6a0 0085  ld   $85
              d6a1 00a2  ld   $a2
              d6a2 0063  ld   $63
              d6a3 0021  ld   $21
              d6a4 0078  ld   $78
              d6a5 0082  ld   $82
              d6a6 007f  ld   $7f
              d6a7 00e9  ld   $e9
              d6a8 00e9  ld   $e9
              d6a9 0099  ld   $99
              d6aa 0030  ld   $30
              d6ab 002b  ld   $2b
              d6ac 0078  ld   $78
              d6ad 00f6  ld   $f6
              d6ae 002b  ld   $2b
              d6af 004c  ld   $4c
              d6b0 0021  ld   $21
              d6b1 0078  ld   $78
              d6b2 00e3  ld   $e3
              d6b3 0002  ld   $02
              d6b4 00f6  ld   $f6
              d6b5 002b  ld   $2b
              d6b6 004e  ld   $4e
              d6b7 0063  ld   $63
              d6b8 00ff  ld   $ff
              d6b9 0093  ld   $93
              d6ba 001b  ld   $1b
              d6bb 00ff  ld   $ff
              d6bc 0078  ld   $78
              d6bd 00a0  ld   $a0
              d6be 0038  ld   $38
              d6bf 00cd  ld   $cd
              d6c0 00d3  ld   $d3
              d6c1 0075  ld   $75
              d6c2 0085  ld   $85
              d6c3 00a2  ld   $a2
              d6c4 0064  ld   $64
              d6c5 0035  ld   $35
              d6c6 0056  ld   $56
              d6c7 00d1  ld   $d1
              d6c8 00b8  ld   $b8
              d6c9 0074  ld   $74
              d6ca 0035  ld   $35
              d6cb 0056  ld   $56
              d6cc 00ae  ld   $ae
              d6cd 0059  ld   $59
              d6ce 0000  ld   $00
              d6cf 0099  ld   $99
              d6d0 0074  ld   $74
              d6d1 0085  ld   $85
              d6d2 00c6  ld   $c6
              d6d3 0075  ld   $75
              d6d4 0021  ld   $21
              d6d5 006a  ld   $6a
              d6d6 002b  ld   $2b
              d6d7 0026  ld   $26
              d6d8 0021  ld   $21
              d6d9 0072  ld   $72
              d6da 002b  ld   $2b
              d6db 0024  ld   $24
              d6dc 0099  ld   $99
              d6dd 0034  ld   $34
              d6de 002b  ld   $2b
              d6df 0072  ld   $72
              d6e0 0011  ld   $11
              d6e1 00e9  ld   $e9
              d6e2 0000  ld   $00
              d6e3 002b  ld   $2b
              d6e4 0022  ld   $22
              d6e5 0021  ld   $21
              d6e6 0034  ld   $34
              d6e7 00b4  ld   $b4
              d6e8 00e6  ld   $e6
              d6e9 0021  ld   $21
              d6ea 0074  ld   $74
              d6eb 00b8  ld   $b8
              d6ec 0034  ld   $34
              d6ed 002b  ld   $2b
              d6ee 0074  ld   $74
              d6ef 0035  ld   $35
              d6f0 004d  ld   $4d
              d6f1 00a1  ld   $a1
              d6f2 0063  ld   $63
              d6f3 00ff  ld   $ff
              d6f4 0093  ld   $93
              d6f5 001b  ld   $1b
              d6f6 00ff  ld   $ff
              d6f7 0079  ld   $79
              d6f8 00a0  ld   $a0
              d6f9 0040  ld   $40
              d6fa 00cd  ld   $cd
              d6fb fe00  bra  ac          ;+-----------------------------------+
              d6fc fcfd  bra  $d6fd       ;|                                   |
              d6fd 1418  ld   $18,y       ;| Trampoline for page $d600 lookups |
              d6fe e006  jmp  y,$06       ;|                                   |
              d6ff c218  st   [$18]       ;+-----------------------------------+
              d700 00bf  ld   $bf
              d701 0075  ld   $75
              d702 0059  ld   $59
              d703 0000  ld   $00
              d704 002b  ld   $2b
              d705 0064  ld   $64
              d706 002b  ld   $2b
              d707 0060  ld   $60
              d708 0059  ld   $59
              d709 0000  ld   $00
              d70a 002b  ld   $2b
              d70b 0066  ld   $66
              d70c 0059  ld   $59
              d70d 0001  ld   $01
              d70e 002b  ld   $2b
              d70f 0062  ld   $62
              d710 0021  ld   $21
              d711 005c  ld   $5c
              d712 002b  ld   $2b
              d713 004c  ld   $4c
              d714 0021  ld   $21
              d715 005e  ld   $5e
              d716 002b  ld   $2b
              d717 004e  ld   $4e
              d718 0085  ld   $85
              d719 00a2  ld   $a2
              d71a 0076  ld   $76
              d71b 0085  ld   $85
              d71c 00cf  ld   $cf
              d71d 0065  ld   $65
              d71e 0063  ld   $63
              d71f 00ff  ld   $ff
              d720 00cd  ld   $cd
              d721 00db  ld   $db
              d722 0075  ld   $75
              d723 00cd  ld   $cd
              d724 00ce  ld   $ce
              d725 0043  ld   $43
              d726 0061  ld   $61
              d727 0072  ld   $72
              d728 0064  ld   $64
              d729 0054  ld   $54
              d72a 0079  ld   $79
              d72b 0070  ld   $70
              d72c 0065  ld   $65
              d72d 0020  ld   $20
              d72e 0000  ld   $00
              d72f 0085  ld   $85
              d730 00a2  ld   $a2
              d731 0069  ld   $69
              d732 0021  ld   $21
              d733 0036  ld   $36
              d734 0085  ld   $85
              d735 00a2  ld   $a2
              d736 0068  ld   $68
              d737 0085  ld   $85
              d738 00a2  ld   $a2
              d739 006d  ld   $6d
              d73a 0063  ld   $63
              d73b 00ff  ld   $ff
              d73c 0093  ld   $93
              d73d 001b  ld   $1b
              d73e 00ff  ld   $ff
              d73f 007a  ld   $7a
              d740 00a0  ld   $a0
              d741 0057  ld   $57
              d742 00cd  ld   $cd
              d743 00af  ld   $af
              d744 000a  ld   $0a
              d745 002a  ld   $2a
              d746 002a  ld   $2a
              d747 002a  ld   $2a
              d748 0020  ld   $20
              d749 0043  ld   $43
              d74a 0061  ld   $61
              d74b 0072  ld   $72
              d74c 0064  ld   $64
              d74d 0042  ld   $42
              d74e 006f  ld   $6f
              d74f 006f  ld   $6f
              d750 0074  ld   $74
              d751 000a  ld   $0a
              d752 0000  ld   $00
              d753 0085  ld   $85
              d754 00a2  ld   $a2
              d755 0069  ld   $69
              d756 0059  ld   $59
              d757 0000  ld   $00
              d758 005e  ld   $5e
              d759 000e  ld   $0e
              d75a 0085  ld   $85
              d75b 00a2  ld   $a2
              d75c 0060  ld   $60
              d75d 0085  ld   $85
              d75e 00c3  ld   $c3
              d75f 0079  ld   $79
              d760 0085  ld   $85
              d761 00a2  ld   $a2
              d762 0061  ld   $61
              d763 0085  ld   $85
              d764 00bb  ld   $bb
              d765 0068  ld   $68
              d766 0085  ld   $85
              d767 00c7  ld   $c7
              d768 0060  ld   $60
              d769 0035  ld   $35
              d76a 0072  ld   $72
              d76b 00d1  ld   $d1
              d76c 0085  ld   $85
              d76d 00a2  ld   $a2
              d76e 0062  ld   $62
              d76f 0085  ld   $85
              d770 00a2  ld   $a2
              d771 0079  ld   $79
              d772 0085  ld   $85
              d773 00a2  ld   $a2
              d774 006f  ld   $6f
              d775 0059  ld   $59
              d776 0020  ld   $20
              d777 00f0  ld   $f0
              d778 0032  ld   $32
              d779 0085  ld   $85
              d77a 00a2  ld   $a2
              d77b 006d  ld   $6d
              d77c 00cd  ld   $cd
              d77d 00f0  ld   $f0
              d77e 0053  ld   $53
              d77f 0059  ld   $59
              d780 0053  ld   $53
              d781 0054  ld   $54
              d782 0045  ld   $45
              d783 004d  ld   $4d
              d784 002e  ld   $2e
              d785 0047  ld   $47
              d786 0054  ld   $54
              d787 0031  ld   $31
              d788 0020  ld   $20
              d789 006e  ld   $6e
              d78a 006f  ld   $6f
              d78b 0074  ld   $74
              d78c 0020  ld   $20
              d78d 0066  ld   $66
              d78e 006f  ld   $6f
              d78f 0075  ld   $75
              d790 006e  ld   $6e
              d791 0064  ld   $64
              d792 0021  ld   $21
              d793 0000  ld   $00
              d794 0085  ld   $85
              d795 00a2  ld   $a2
              d796 0069  ld   $69
              d797 00b4  ld   $b4
              d798 0080  ld   $80
              d799 0000  ld   $00
              d79a 0000  ld   $00         ;End of Apps/CardBoot/CardBoot.gt1, size 2917
                                          ;+-----------------------------------+
                                          ;| Apps/MainMenu/MainMenu_vX0.gcl    |
                                          ;+-----------------------------------+
              d79b dc42  st   $42,[y,x++] ;'B'
              d79c dc6f  st   $6f,[y,x++] ;'o'
              d79d dc6f  st   $6f,[y,x++] ;'o'
              d79e dc74  st   $74,[y,x++] ;'t'
              d79f dc00  st   $00,[y,x++] ;'\x00'
              d7a0 dc00  st   $00,[y,x++] ;'\x00'
              d7a1 dc00  st   $00,[y,x++] ;'\x00'
              d7a2 dc00  st   $00,[y,x++] ;'\x00'
              d7a3 0036  ld   $36
              d7a4 c218  st   [$18]
              d7a5 00cc  ld   $cc
              d7a6 14dd  ld   $dd,y
              d7a7 e06f  jmp  y,$6f
              d7a8 c219  st   [$19]
Main:         d7a9 0002  ld   $02         ;| RAM segment address (high byte first)
              d7aa 0000  ld   $00         ;|
              d7ab 00dd  ld   $dd         ;| Length (1..256)
              d7ac 0021  ld   $21         ;0200 LDW
              d7ad 0011  ld   $11
              d7ae 0035  ld   $35         ;0202 BCC
              d7af 0056  ld   $56         ;0203 LE
              d7b0 000f  ld   $0f
              d7b1 0082  ld   $82         ;0205 ANDI
              d7b2 0010  ld   $10
              d7b3 0035  ld   $35         ;0207 BCC
              d7b4 0072  ld   $72         ;0208 NE
              d7b5 000f  ld   $0f
              d7b6 0011  ld   $11         ;020a LDWI
              d7b7 003a  ld   $3a
              d7b8 00bd  ld   $bd
              d7b9 002b  ld   $2b         ;020d STW
              d7ba 0024  ld   $24         ;020d '_sysArgs0'
              d7bb 00b4  ld   $b4         ;020f SYS
              d7bc 00e3  ld   $e3
              d7bd 00cd  ld   $cd         ;0211 DEF
              d7be 005f  ld   $5f
              d7bf 0021  ld   $21         ;0213 LDW
              d7c0 0030  ld   $30         ;0213 'Char'
              d7c1 00e6  ld   $e6         ;0215 SUBI
              d7c2 0052  ld   $52
              d7c3 0035  ld   $35         ;0217 BCC
              d7c4 0053  ld   $53         ;0218 GE
              d7c5 0021  ld   $21
              d7c6 00e3  ld   $e3         ;021a ADDI
              d7c7 0032  ld   $32
              d7c8 002b  ld   $2b         ;021c STW
              d7c9 0032  ld   $32         ;021c 'i'
              d7ca 0011  ld   $11         ;021e LDWI
              d7cb 0000  ld   $00
              d7cc 0007  ld   $07
              d7cd 0090  ld   $90         ;0221 BRA
              d7ce 0026  ld   $26
              d7cf 002b  ld   $2b         ;0223 STW
              d7d0 0032  ld   $32         ;0223 'i'
              d7d1 0011  ld   $11         ;0225 LDWI
              d7d2 0000  ld   $00
              d7d3 0008  ld   $08
              d7d4 002b  ld   $2b         ;0228 STW
              d7d5 0034  ld   $34         ;0228 'fontData'
              d7d6 0021  ld   $21         ;022a LDW
              d7d7 0032  ld   $32         ;022a 'i'
              d7d8 00e9  ld   $e9         ;022c LSLW
              d7d9 00e9  ld   $e9         ;022d LSLW
              d7da 0099  ld   $99         ;022e ADDW
              d7db 0032  ld   $32         ;022e 'i'
              d7dc 0099  ld   $99         ;0230 ADDW
              d7dd 0034  ld   $34         ;0230 'fontData'
              d7de 002b  ld   $2b         ;0232 STW
              d7df 0034  ld   $34         ;0232 'fontData'
              d7e0 0059  ld   $59         ;0234 LDI
              d7e1 0020  ld   $20
              d7e2 005e  ld   $5e         ;0236 ST
              d7e3 0024  ld   $24
              d7e4 0021  ld   $21         ;0238 LDW
              d7e5 0036  ld   $36         ;0238 'Color'
              d7e6 005e  ld   $5e         ;023a ST
              d7e7 0025  ld   $25
              d7e8 0021  ld   $21         ;023c LDW
              d7e9 0038  ld   $38         ;023c 'Pos'
              d7ea 002b  ld   $2b         ;023e STW
              d7eb 0028  ld   $28
              d7ec 00e3  ld   $e3         ;0240 ADDI
              d7ed 0006  ld   $06
              d7ee 002b  ld   $2b         ;0242 STW
              d7ef 0038  ld   $38         ;0242 'Pos'
              d7f0 0011  ld   $11         ;0244 LDWI
              d7f1 00e1  ld   $e1
              d7f2 0004  ld   $04
              d7f3 002b  ld   $2b         ;0247 STW
              d7f4 0022  ld   $22
              d7f5 0059  ld   $59         ;0249 LDI
              d7f6 00fb  ld   $fb
              d7f7 002b  ld   $2b         ;024b STW
              d7f8 0032  ld   $32         ;024b 'i'
              d7f9 0021  ld   $21         ;024d LDW
              d7fa 0034  ld   $34         ;024d 'fontData'
              d7fb fe00  bra  ac          ;+-----------------------------------+
              d7fc fcfd  bra  $d7fd       ;|                                   |
              d7fd 1418  ld   $18,y       ;| Trampoline for page $d700 lookups |
              d7fe e006  jmp  y,$06       ;|                                   |
              d7ff c218  st   [$18]       ;+-----------------------------------+
              d800 007f  ld   $7f         ;024f LUP
              d801 0000  ld   $00
              d802 0093  ld   $93         ;0251 INC
              d803 0034  ld   $34         ;0251 'fontData'
              d804 005e  ld   $5e         ;0253 ST
              d805 0026  ld   $26
              d806 00b4  ld   $b4         ;0255 SYS
              d807 00cc  ld   $cc
              d808 0093  ld   $93         ;0257 INC
              d809 0028  ld   $28
              d80a 0093  ld   $93         ;0259 INC
              d80b 0032  ld   $32         ;0259 'i'
              d80c 0021  ld   $21         ;025b LDW
              d80d 0032  ld   $32         ;025b 'i'
              d80e 0035  ld   $35         ;025d BCC
              d80f 0072  ld   $72         ;025e NE
              d810 004b  ld   $4b
              d811 00ff  ld   $ff         ;0260 RET
              d812 002b  ld   $2b         ;0261 STW
              d813 003a  ld   $3a         ;0261 'PrintChar'
              d814 00cd  ld   $cd         ;0263 DEF
              d815 008c  ld   $8c
              d816 0075  ld   $75         ;0265 PUSH
              d817 002b  ld   $2b         ;0266 STW
              d818 003c  ld   $3c         ;0266 'Text'
              d819 0021  ld   $21         ;0268 LDW
              d81a 003c  ld   $3c         ;0268 'Text'
              d81b 00ad  ld   $ad         ;026a PEEK
              d81c 0035  ld   $35         ;026b BCC
              d81d 003f  ld   $3f         ;026c EQ
              d81e 008a  ld   $8a
              d81f 002b  ld   $2b         ;026e STW
              d820 0030  ld   $30         ;026e 'Char'
              d821 0093  ld   $93         ;0270 INC
              d822 003c  ld   $3c         ;0270 'Text'
              d823 008c  ld   $8c         ;0272 XORI
              d824 0009  ld   $09
              d825 0035  ld   $35         ;0274 BCC
              d826 0072  ld   $72         ;0275 NE
              d827 007d  ld   $7d
              d828 0021  ld   $21         ;0277 LDW
              d829 0038  ld   $38         ;0277 'Pos'
              d82a 00e3  ld   $e3         ;0279 ADDI
              d82b 0012  ld   $12
              d82c 002b  ld   $2b         ;027b STW
              d82d 0038  ld   $38         ;027b 'Pos'
              d82e 0090  ld   $90         ;027d BRA
              d82f 0066  ld   $66
              d830 008c  ld   $8c         ;027f XORI
              d831 0003  ld   $03
              d832 0035  ld   $35         ;0281 BCC
              d833 0072  ld   $72         ;0282 NE
              d834 0086  ld   $86
              d835 00cf  ld   $cf         ;0284 CALL
              d836 003e  ld   $3e         ;0284 'Newline'
              d837 0090  ld   $90         ;0286 BRA
              d838 0066  ld   $66
              d839 00cf  ld   $cf         ;0288 CALL
              d83a 003a  ld   $3a         ;0288 'PrintChar'
              d83b 0090  ld   $90         ;028a BRA
              d83c 0066  ld   $66
              d83d 0063  ld   $63         ;028c POP
              d83e 00ff  ld   $ff         ;028d RET
              d83f 002b  ld   $2b         ;028e STW
              d840 0040  ld   $40         ;028e 'PrintText'
              d841 00cd  ld   $cd         ;0290 DEF
              d842 00a6  ld   $a6
              d843 0075  ld   $75         ;0292 PUSH
              d844 0059  ld   $59         ;0293 LDI
              d845 002d  ld   $2d
              d846 002b  ld   $2b         ;0295 STW
              d847 0030  ld   $30         ;0295 'Char'
              d848 0059  ld   $59         ;0297 LDI
              d849 001a  ld   $1a
              d84a 002b  ld   $2b         ;0299 STW
              d84b 0042  ld   $42         ;0299 'j'
              d84c 00cf  ld   $cf         ;029b CALL
              d84d 003a  ld   $3a         ;029b 'PrintChar'
              d84e 0021  ld   $21         ;029d LDW
              d84f 0042  ld   $42         ;029d 'j'
              d850 00e6  ld   $e6         ;029f SUBI
              d851 0001  ld   $01
              d852 0035  ld   $35         ;02a1 BCC
              d853 004d  ld   $4d         ;02a2 GT
              d854 0097  ld   $97
              d855 00cf  ld   $cf         ;02a4 CALL
              d856 003e  ld   $3e         ;02a4 'Newline'
              d857 0063  ld   $63         ;02a6 POP
              d858 00ff  ld   $ff         ;02a7 RET
              d859 002b  ld   $2b         ;02a8 STW
              d85a 0044  ld   $44         ;02a8 'PrintDivider'
              d85b 00cd  ld   $cd         ;02aa DEF
              d85c 00d6  ld   $d6
              d85d 0075  ld   $75         ;02ac PUSH
              d85e 0021  ld   $21         ;02ad LDW
              d85f 0046  ld   $46         ;02ad 'MenuItem'
              d860 00e6  ld   $e6         ;02af SUBI
              d861 0005  ld   $05
              d862 0035  ld   $35         ;02b1 BCC
              d863 0053  ld   $53         ;02b2 GE
              d864 00b7  ld   $b7
              d865 0011  ld   $11         ;02b4 LDWI
              d866 000b  ld   $0b
              d867 0020  ld   $20
              d868 0090  ld   $90         ;02b7 BRA
              d869 00ba  ld   $ba
              d86a 0011  ld   $11         ;02b9 LDWI
              d86b 0059  ld   $59
              d86c 00f8  ld   $f8
              d86d 002b  ld   $2b         ;02bc STW
              d86e 0038  ld   $38         ;02bc 'Pos'
              d86f 0021  ld   $21         ;02be LDW
              d870 0046  ld   $46         ;02be 'MenuItem'
              d871 002b  ld   $2b         ;02c0 STW
              d872 0042  ld   $42         ;02c0 'j'
              d873 0011  ld   $11         ;02c2 LDWI
              d874 0000  ld   $00
              d875 0008  ld   $08
              d876 0099  ld   $99         ;02c5 ADDW
              d877 0038  ld   $38         ;02c5 'Pos'
              d878 002b  ld   $2b         ;02c7 STW
              d879 0038  ld   $38         ;02c7 'Pos'
              d87a 0021  ld   $21         ;02c9 LDW
              d87b 0042  ld   $42         ;02c9 'j'
              d87c 00e6  ld   $e6         ;02cb SUBI
              d87d 0001  ld   $01
              d87e 0035  ld   $35         ;02cd BCC
              d87f 0053  ld   $53         ;02ce GE
              d880 00be  ld   $be
              d881 0059  ld   $59         ;02d0 LDI
              d882 0082  ld   $82
              d883 002b  ld   $2b         ;02d2 STW
              d884 0030  ld   $30         ;02d2 'Char'
              d885 00cf  ld   $cf         ;02d4 CALL
              d886 003a  ld   $3a         ;02d4 'PrintChar'
              d887 0063  ld   $63         ;02d6 POP
              d888 00ff  ld   $ff         ;02d7 RET
              d889 002b  ld   $2b         ;02d8 STW
              d88a 0048  ld   $48         ;02d8 'PrintArrow'
              d88b 0093  ld   $93         ;02da INC
              d88c 001b  ld   $1b         ;02da '_vLR'+1
              d88d 00ff  ld   $ff         ;02dc RET
              d88e 0003  ld   $03         ;| RAM segment address (high byte first)
              d88f 0000  ld   $00         ;|
              d890 00a0  ld   $a0         ;| Length (1..256)
              d891 00cd  ld   $cd         ;0300 DEF
              d892 0099  ld   $99
              d893 0075  ld   $75         ;0302 PUSH
              d894 001a  ld   $1a         ;0303 LD
              d895 000e  ld   $0e
              d896 002b  ld   $2b         ;0305 STW
              d897 0036  ld   $36         ;0305 'Color'
              d898 00cf  ld   $cf         ;0307 CALL
              d899 0048  ld   $48         ;0307 'PrintArrow'
              d89a 001a  ld   $1a         ;0309 LD
              d89b 0011  ld   $11
              d89c 008c  ld   $8c         ;030b XORI
              d89d 00fe  ld   $fe
              d89e 0035  ld   $35         ;030d BCC
              d89f 0072  ld   $72         ;030e NE
              d8a0 001f  ld   $1f
              d8a1 00cf  ld   $cf         ;0310 CALL
              d8a2 004a  ld   $4a         ;0310 'WipeOutArrow'
              d8a3 0021  ld   $21         ;0312 LDW
              d8a4 0046  ld   $46         ;0312 'MenuItem'
              d8a5 00e6  ld   $e6         ;0314 SUBI
              d8a6 0004  ld   $04
              d8a7 0035  ld   $35         ;0316 BCC
              d8a8 004d  ld   $4d         ;0317 GT
              d8a9 001b  ld   $1b
              d8aa 00e3  ld   $e3         ;0319 ADDI
              d8ab 0009  ld   $09
              d8ac 002b  ld   $2b         ;031b STW
              d8ad 0046  ld   $46         ;031b 'MenuItem'
              d8ae 0059  ld   $59         ;031d LDI
              d8af 00ef  ld   $ef
              d8b0 005e  ld   $5e         ;031f ST
              d8b1 0011  ld   $11
              d8b2 001a  ld   $1a         ;0321 LD
              d8b3 0011  ld   $11
              d8b4 008c  ld   $8c         ;0323 XORI
              d8b5 00fd  ld   $fd
              d8b6 0035  ld   $35         ;0325 BCC
              d8b7 0072  ld   $72         ;0326 NE
              d8b8 0035  ld   $35
              d8b9 00cf  ld   $cf         ;0328 CALL
              d8ba 004a  ld   $4a         ;0328 'WipeOutArrow'
              d8bb 0021  ld   $21         ;032a LDW
              d8bc 0046  ld   $46         ;032a 'MenuItem'
              d8bd 00e6  ld   $e6         ;032c SUBI
              d8be 0005  ld   $05
              d8bf 0035  ld   $35         ;032e BCC
              d8c0 0050  ld   $50         ;032f LT
              d8c1 0031  ld   $31
              d8c2 002b  ld   $2b         ;0331 STW
              d8c3 0046  ld   $46         ;0331 'MenuItem'
              d8c4 0059  ld   $59         ;0333 LDI
              d8c5 00ef  ld   $ef
              d8c6 005e  ld   $5e         ;0335 ST
              d8c7 0011  ld   $11
              d8c8 001a  ld   $1a         ;0337 LD
              d8c9 0011  ld   $11
              d8ca 008c  ld   $8c         ;0339 XORI
              d8cb 00fb  ld   $fb
              d8cc 0035  ld   $35         ;033b BCC
              d8cd 0072  ld   $72         ;033c NE
              d8ce 0050  ld   $50
              d8cf 00cf  ld   $cf         ;033e CALL
              d8d0 004a  ld   $4a         ;033e 'WipeOutArrow'
              d8d1 0021  ld   $21         ;0340 LDW
              d8d2 0046  ld   $46         ;0340 'MenuItem'
              d8d3 00e6  ld   $e6         ;0342 SUBI
              d8d4 0004  ld   $04
              d8d5 0035  ld   $35         ;0344 BCC
              d8d6 003f  ld   $3f         ;0345 EQ
              d8d7 004c  ld   $4c
              d8d8 00e6  ld   $e6         ;0347 SUBI
              d8d9 0005  ld   $05
              d8da 0035  ld   $35         ;0349 BCC
              d8db 003f  ld   $3f         ;034a EQ
              d8dc 004c  ld   $4c
              d8dd 0093  ld   $93         ;034c INC
              d8de 0046  ld   $46         ;034c 'MenuItem'
              d8df 0059  ld   $59         ;034e LDI
              d8e0 00ef  ld   $ef
              d8e1 005e  ld   $5e         ;0350 ST
              d8e2 0011  ld   $11
              d8e3 001a  ld   $1a         ;0352 LD
              d8e4 0011  ld   $11
              d8e5 008c  ld   $8c         ;0354 XORI
              d8e6 00f7  ld   $f7
              d8e7 0035  ld   $35         ;0356 BCC
              d8e8 0072  ld   $72         ;0357 NE
              d8e9 006d  ld   $6d
              d8ea 00cf  ld   $cf         ;0359 CALL
              d8eb 004a  ld   $4a         ;0359 'WipeOutArrow'
              d8ec 0021  ld   $21         ;035b LDW
              d8ed 0046  ld   $46         ;035b 'MenuItem'
              d8ee 0035  ld   $35         ;035d BCC
              d8ef 003f  ld   $3f         ;035e EQ
              d8f0 0069  ld   $69
              d8f1 00e6  ld   $e6         ;0360 SUBI
              d8f2 0005  ld   $05
              d8f3 0035  ld   $35         ;0362 BCC
              d8f4 003f  ld   $3f         ;0363 EQ
              d8f5 0069  ld   $69
              d8f6 0021  ld   $21         ;0365 LDW
              d8f7 0046  ld   $46         ;0365 'MenuItem'
              d8f8 00e6  ld   $e6         ;0367 SUBI
              d8f9 0001  ld   $01
              d8fa 002b  ld   $2b         ;0369 STW
              d8fb fe00  bra  ac          ;+-----------------------------------+
              d8fc fcfd  bra  $d8fd       ;|                                   |
              d8fd 1418  ld   $18,y       ;| Trampoline for page $d800 lookups |
              d8fe e006  jmp  y,$06       ;|                                   |
              d8ff c218  st   [$18]       ;+-----------------------------------+
              d900 0046  ld   $46         ;0369 'MenuItem'
              d901 0059  ld   $59         ;036b LDI
              d902 00ef  ld   $ef
              d903 005e  ld   $5e         ;036d ST
              d904 0011  ld   $11
              d905 001a  ld   $1a         ;036f LD
              d906 0011  ld   $11
              d907 0082  ld   $82         ;0371 ANDI
              d908 0080  ld   $80
              d909 0035  ld   $35         ;0373 BCC
              d90a 0072  ld   $72         ;0374 NE
              d90b 0001  ld   $01
              d90c 0059  ld   $59         ;0376 LDI
              d90d 002a  ld   $2a
              d90e 002b  ld   $2b         ;0378 STW
              d90f 0036  ld   $36         ;0378 'Color'
              d910 00cf  ld   $cf         ;037a CALL
              d911 0048  ld   $48         ;037a 'PrintArrow'
              d912 00cd  ld   $cd         ;037c DEF
              d913 0090  ld   $90
              d914 0028  ld   $28
              d915 00c2  ld   $c2
              d916 0089  ld   $89
              d917 004c  ld   $4c
              d918 00e3  ld   $e3
              d919 0053  ld   $53
              d91a 00d8  ld   $d8
              d91b 0058  ld   $58
              d91c 000e  ld   $0e
              d91d 00cc  ld   $cc
              d91e 003c  ld   $3c
              d91f 005b  ld   $5b
              d920 000e  ld   $0e
              d921 006f  ld   $6f
              d922 0074  ld   $74
              d923 0062  ld   $62
              d924 001e  ld   $1e
              d925 0097  ld   $97
              d926 0084  ld   $84
              d927 0079  ld   $79
              d928 0099  ld   $99         ;0392 ADDW
              d929 0046  ld   $46         ;0392 'MenuItem'
              d92a 0099  ld   $99         ;0394 ADDW
              d92b 0046  ld   $46         ;0394 'MenuItem'
              d92c 00f6  ld   $f6         ;0396 DEEK
              d92d 002b  ld   $2b         ;0397 STW
              d92e 004c  ld   $4c         ;0397 'Program'
              d92f 0063  ld   $63         ;0399 POP
              d930 00ff  ld   $ff         ;039a RET
              d931 002b  ld   $2b         ;039b STW
              d932 004e  ld   $4e         ;039b 'SelectMenu'
              d933 0093  ld   $93         ;039d INC
              d934 001b  ld   $1b         ;039d '_vLR'+1
              d935 00ff  ld   $ff         ;039f RET
              d936 0004  ld   $04         ;| RAM segment address (high byte first)
              d937 0000  ld   $00         ;|
              d938 00c3  ld   $c3         ;| Length (1..256)
              d939 00cd  ld   $cd         ;0400 DEF
              d93a 000b  ld   $0b
              d93b 001a  ld   $1a         ;0402 LD
              d93c 0039  ld   $39         ;0402 'Pos'+1
              d93d 00e3  ld   $e3         ;0404 ADDI
              d93e 0008  ld   $08
              d93f 005e  ld   $5e         ;0406 ST
              d940 0039  ld   $39         ;0406 'Pos'+1
              d941 0059  ld   $59         ;0408 LDI
              d942 0002  ld   $02
              d943 005e  ld   $5e         ;040a ST
              d944 0038  ld   $38         ;040a 'Pos'
              d945 00ff  ld   $ff         ;040c RET
              d946 002b  ld   $2b         ;040d STW
              d947 003e  ld   $3e         ;040d 'Newline'
              d948 00cd  ld   $cd         ;040f DEF
              d949 006e  ld   $6e
              d94a 0009  ld   $09         ;0411 9
              d94b 0053  ld   $53         ;0412 'S'
              d94c 0044  ld   $44         ;0413 'D'
              d94d 0043  ld   $43         ;0414 'C'
              d94e 0061  ld   $61         ;0415 'a'
              d94f 0072  ld   $72         ;0416 'r'
              d950 0064  ld   $64         ;0417 'd'
              d951 0009  ld   $09         ;0418 9
              d952 0020  ld   $20         ;0419 ' '
              d953 0009  ld   $09         ;041a 9
              d954 0053  ld   $53         ;041b 'S'
              d955 006e  ld   $6e         ;041c 'n'
              d956 0061  ld   $61         ;041d 'a'
              d957 006b  ld   $6b         ;041e 'k'
              d958 0065  ld   $65         ;041f 'e'
              d959 000a  ld   $0a         ;0420 10
              d95a 0009  ld   $09         ;0421 9
              d95b 0052  ld   $52         ;0422 'R'
              d95c 0061  ld   $61         ;0423 'a'
              d95d 0063  ld   $63         ;0424 'c'
              d95e 0065  ld   $65         ;0425 'e'
              d95f 0072  ld   $72         ;0426 'r'
              d960 0009  ld   $09         ;0427 9
              d961 0020  ld   $20         ;0428 ' '
              d962 0020  ld   $20         ;0429 ' '
              d963 0009  ld   $09         ;042a 9
              d964 0054  ld   $54         ;042b 'T'
              d965 0069  ld   $69         ;042c 'i'
              d966 0063  ld   $63         ;042d 'c'
              d967 0054  ld   $54         ;042e 'T'
              d968 0061  ld   $61         ;042f 'a'
              d969 0063  ld   $63         ;0430 'c'
              d96a 0054  ld   $54         ;0431 'T'
              d96b 006f  ld   $6f         ;0432 'o'
              d96c 0065  ld   $65         ;0433 'e'
              d96d 000a  ld   $0a         ;0434 10
              d96e 0009  ld   $09         ;0435 9
              d96f 004d  ld   $4d         ;0436 'M'
              d970 0061  ld   $61         ;0437 'a'
              d971 006e  ld   $6e         ;0438 'n'
              d972 0064  ld   $64         ;0439 'd'
              d973 0065  ld   $65         ;043a 'e'
              d974 006c  ld   $6c         ;043b 'l'
              d975 0062  ld   $62         ;043c 'b'
              d976 0072  ld   $72         ;043d 'r'
              d977 006f  ld   $6f         ;043e 'o'
              d978 0074  ld   $74         ;043f 't'
              d979 0009  ld   $09         ;0440 9
              d97a 0042  ld   $42         ;0441 'B'
              d97b 0041  ld   $41         ;0442 'A'
              d97c 0053  ld   $53         ;0443 'S'
              d97d 0049  ld   $49         ;0444 'I'
              d97e 0043  ld   $43         ;0445 'C'
              d97f 000a  ld   $0a         ;0446 10
              d980 0009  ld   $09         ;0447 9
              d981 0043  ld   $43         ;0448 'C'
              d982 0072  ld   $72         ;0449 'r'
              d983 0065  ld   $65         ;044a 'e'
              d984 0064  ld   $64         ;044b 'd'
              d985 0069  ld   $69         ;044c 'i'
              d986 0074  ld   $74         ;044d 't'
              d987 0073  ld   $73         ;044e 's'
              d988 0009  ld   $09         ;044f 9
              d989 0009  ld   $09         ;0450 9
              d98a 004d  ld   $4d         ;0451 'M'
              d98b 0053  ld   $53         ;0452 'S'
              d98c 0020  ld   $20         ;0453 ' '
              d98d 0042  ld   $42         ;0454 'B'
              d98e 0041  ld   $41         ;0455 'A'
              d98f 0053  ld   $53         ;0456 'S'
              d990 0049  ld   $49         ;0457 'I'
              d991 0043  ld   $43         ;0458 'C'
              d992 000a  ld   $0a         ;0459 10
              d993 0009  ld   $09         ;045a 9
              d994 004c  ld   $4c         ;045b 'L'
              d995 006f  ld   $6f         ;045c 'o'
              d996 0061  ld   $61         ;045d 'a'
              d997 0064  ld   $64         ;045e 'd'
              d998 0065  ld   $65         ;045f 'e'
              d999 0072  ld   $72         ;0460 'r'
              d99a 0009  ld   $09         ;0461 9
              d99b 0020  ld   $20         ;0462 ' '
              d99c 0009  ld   $09         ;0463 9
              d99d 0041  ld   $41         ;0464 'A'
              d99e 0070  ld   $70         ;0465 'p'
              d99f 0070  ld   $70         ;0466 'p'
              d9a0 006c  ld   $6c         ;0467 'l'
              d9a1 0065  ld   $65         ;0468 'e'
              d9a2 002d  ld   $2d         ;0469 '-'
              d9a3 0031  ld   $31         ;046a '1'
              d9a4 000a  ld   $0a         ;046b 10
              d9a5 0009  ld   $09         ;046c 9
              d9a6 0009  ld   $09         ;046d 9
              d9a7 000a  ld   $0a         ;046e 10
              d9a8 0000  ld   $00         ;046f 0
              d9a9 002b  ld   $2b         ;0470 STW
              d9aa 0050  ld   $50         ;0470 'MainMenu'
              d9ab 00cd  ld   $cd         ;0472 DEF
              d9ac 00bc  ld   $bc
              d9ad 0055  ld   $55         ;0474 'U'
              d9ae 0073  ld   $73         ;0475 's'
              d9af 0065  ld   $65         ;0476 'e'
              d9b0 0020  ld   $20         ;0477 ' '
              d9b1 005b  ld   $5b         ;0478 91
              d9b2 0041  ld   $41         ;0479 'A'
              d9b3 0072  ld   $72         ;047a 'r'
              d9b4 0072  ld   $72         ;047b 'r'
              d9b5 006f  ld   $6f         ;047c 'o'
              d9b6 0077  ld   $77         ;047d 'w'
              d9b7 0073  ld   $73         ;047e 's'
              d9b8 005d  ld   $5d         ;047f 93
              d9b9 0020  ld   $20         ;0480 ' '
              d9ba 0074  ld   $74         ;0481 't'
              d9bb 006f  ld   $6f         ;0482 'o'
              d9bc 0020  ld   $20         ;0483 ' '
              d9bd 0073  ld   $73         ;0484 's'
              d9be 0065  ld   $65         ;0485 'e'
              d9bf 006c  ld   $6c         ;0486 'l'
              d9c0 0065  ld   $65         ;0487 'e'
              d9c1 0063  ld   $63         ;0488 'c'
              d9c2 0074  ld   $74         ;0489 't'
              d9c3 000a  ld   $0a         ;048a 10
              d9c4 0050  ld   $50         ;048b 'P'
              d9c5 0072  ld   $72         ;048c 'r'
              d9c6 0065  ld   $65         ;048d 'e'
              d9c7 0073  ld   $73         ;048e 's'
              d9c8 0073  ld   $73         ;048f 's'
              d9c9 0020  ld   $20         ;0490 ' '
              d9ca 005b  ld   $5b         ;0491 91
              d9cb 0041  ld   $41         ;0492 'A'
              d9cc 005d  ld   $5d         ;0493 93
              d9cd 0020  ld   $20         ;0494 ' '
              d9ce 0074  ld   $74         ;0495 't'
              d9cf 006f  ld   $6f         ;0496 'o'
              d9d0 0020  ld   $20         ;0497 ' '
              d9d1 0073  ld   $73         ;0498 's'
              d9d2 0074  ld   $74         ;0499 't'
              d9d3 0061  ld   $61         ;049a 'a'
              d9d4 0072  ld   $72         ;049b 'r'
              d9d5 0074  ld   $74         ;049c 't'
              d9d6 0020  ld   $20         ;049d ' '
              d9d7 0070  ld   $70         ;049e 'p'
              d9d8 0072  ld   $72         ;049f 'r'
              d9d9 006f  ld   $6f         ;04a0 'o'
              d9da 0067  ld   $67         ;04a1 'g'
              d9db 0072  ld   $72         ;04a2 'r'
              d9dc 0061  ld   $61         ;04a3 'a'
              d9dd 006d  ld   $6d         ;04a4 'm'
              d9de 000a  ld   $0a         ;04a5 10
              d9df 000a  ld   $0a         ;04a6 10
              d9e0 0048  ld   $48         ;04a7 'H'
              d9e1 006f  ld   $6f         ;04a8 'o'
              d9e2 006c  ld   $6c         ;04a9 'l'
              d9e3 0064  ld   $64         ;04aa 'd'
              d9e4 0020  ld   $20         ;04ab ' '
              d9e5 005b  ld   $5b         ;04ac 91
              d9e6 0053  ld   $53         ;04ad 'S'
              d9e7 0074  ld   $74         ;04ae 't'
              d9e8 0061  ld   $61         ;04af 'a'
              d9e9 0072  ld   $72         ;04b0 'r'
              d9ea 0074  ld   $74         ;04b1 't'
              d9eb 005d  ld   $5d         ;04b2 93
              d9ec 0020  ld   $20         ;04b3 ' '
              d9ed 0066  ld   $66         ;04b4 'f'
              d9ee 006f  ld   $6f         ;04b5 'o'
              d9ef 0072  ld   $72         ;04b6 'r'
              d9f0 0020  ld   $20         ;04b7 ' '
              d9f1 0072  ld   $72         ;04b8 'r'
              d9f2 0065  ld   $65         ;04b9 'e'
              d9f3 0073  ld   $73         ;04ba 's'
              d9f4 0065  ld   $65         ;04bb 'e'
              d9f5 0074  ld   $74         ;04bc 't'
              d9f6 0000  ld   $00         ;04bd 0
              d9f7 002b  ld   $2b         ;04be STW
              d9f8 0052  ld   $52         ;04be 'HelpText'
              d9f9 0093  ld   $93         ;04c0 INC
              d9fa 001b  ld   $1b         ;04c0 '_vLR'+1
              d9fb fe00  bra  ac          ;+-----------------------------------+
              d9fc fcfd  bra  $d9fd       ;|                                   |
              d9fd 1418  ld   $18,y       ;| Trampoline for page $d900 lookups |
              d9fe e006  jmp  y,$06       ;|                                   |
              d9ff c218  st   [$18]       ;+-----------------------------------+
              da00 00ff  ld   $ff         ;04c2 RET
              da01 0005  ld   $05         ;| RAM segment address (high byte first)
              da02 0000  ld   $00         ;|
              da03 0078  ld   $78         ;| Length (1..256)
              da04 00cd  ld   $cd         ;0500 DEF
              da05 0011  ld   $11
              da06 0075  ld   $75         ;0502 PUSH
              da07 0021  ld   $21         ;0503 LDW
              da08 0038  ld   $38         ;0503 'Pos'
              da09 00e6  ld   $e6         ;0505 SUBI
              da0a 000c  ld   $0c
              da0b 002b  ld   $2b         ;0507 STW
              da0c 0038  ld   $38         ;0507 'Pos'
              da0d 0059  ld   $59         ;0509 LDI
              da0e 0020  ld   $20
              da0f 002b  ld   $2b         ;050b STW
              da10 0030  ld   $30         ;050b 'Char'
              da11 00cf  ld   $cf         ;050d CALL
              da12 003a  ld   $3a         ;050d 'PrintChar'
              da13 00cf  ld   $cf         ;050f CALL
              da14 003a  ld   $3a         ;050f 'PrintChar'
              da15 0063  ld   $63         ;0511 POP
              da16 00ff  ld   $ff         ;0512 RET
              da17 002b  ld   $2b         ;0513 STW
              da18 004a  ld   $4a         ;0513 'WipeOutArrow'
              da19 00cd  ld   $cd         ;0515 DEF
              da1a 0030  ld   $30
              da1b 0075  ld   $75         ;0517 PUSH
              da1c 0059  ld   $59         ;0518 LDI
              da1d 002a  ld   $2a
              da1e 002b  ld   $2b         ;051a STW
              da1f 0036  ld   $36         ;051a 'Color'
              da20 00cf  ld   $cf         ;051c CALL
              da21 0044  ld   $44         ;051c 'PrintDivider'
              da22 0059  ld   $59         ;051e LDI
              da23 000f  ld   $0f
              da24 002b  ld   $2b         ;0520 STW
              da25 0036  ld   $36         ;0520 'Color'
              da26 0021  ld   $21         ;0522 LDW
              da27 0050  ld   $50         ;0522 'MainMenu'
              da28 00cf  ld   $cf         ;0524 CALL
              da29 0040  ld   $40         ;0524 'PrintText'
              da2a 0059  ld   $59         ;0526 LDI
              da2b 002a  ld   $2a
              da2c 002b  ld   $2b         ;0528 STW
              da2d 0036  ld   $36         ;0528 'Color'
              da2e 00cf  ld   $cf         ;052a CALL
              da2f 0044  ld   $44         ;052a 'PrintDivider'
              da30 0021  ld   $21         ;052c LDW
              da31 0052  ld   $52         ;052c 'HelpText'
              da32 00cf  ld   $cf         ;052e CALL
              da33 0040  ld   $40         ;052e 'PrintText'
              da34 0063  ld   $63         ;0530 POP
              da35 00ff  ld   $ff         ;0531 RET
              da36 002b  ld   $2b         ;0532 STW
              da37 0054  ld   $54         ;0532 'PrintMenu'
              da38 001a  ld   $1a         ;0534 LD
              da39 0021  ld   $21
              da3a 0088  ld   $88         ;0536 ORI
              da3b 0003  ld   $03
              da3c 005e  ld   $5e         ;0538 ST
              da3d 0021  ld   $21
              da3e 0059  ld   $59         ;053a LDI
              da3f 005a  ld   $5a
              da40 005e  ld   $5e         ;053c ST
              da41 002c  ld   $2c
              da42 0011  ld   $11         ;053e LDWI
              da43 0002  ld   $02
              da44 0020  ld   $20
              da45 002b  ld   $2b         ;0541 STW
              da46 0038  ld   $38         ;0541 'Pos'
              da47 00cf  ld   $cf         ;0543 CALL
              da48 0054  ld   $54         ;0543 'PrintMenu'
              da49 0059  ld   $59         ;0545 LDI
              da4a 0000  ld   $00
              da4b 002b  ld   $2b         ;0547 STW
              da4c 0046  ld   $46         ;0547 'MenuItem'
              da4d 00cf  ld   $cf         ;0549 CALL
              da4e 004e  ld   $4e         ;0549 'SelectMenu'
              da4f 0059  ld   $59         ;054b LDI
              da50 00ad  ld   $ad
              da51 002b  ld   $2b         ;054d STW
              da52 0022  ld   $22         ;054d '_sysFn'
              da53 0021  ld   $21         ;054f LDW
              da54 004c  ld   $4c         ;054f 'Program'
              da55 002b  ld   $2b         ;0551 STW
              da56 0024  ld   $24         ;0551 '_sysArgs0'
              da57 0011  ld   $11         ;0553 LDWI
              da58 0000  ld   $00
              da59 0002  ld   $02
              da5a 002b  ld   $2b         ;0556 STW
              da5b 001a  ld   $1a         ;0556 '_vLR'
              da5c 0011  ld   $11         ;0558 LDWI
              da5d 000e  ld   $0e
              da5e 00cc  ld   $cc
              da5f 00b8  ld   $b8         ;055b SUBW
              da60 004c  ld   $4c         ;055b 'Program'
              da61 0035  ld   $35         ;055d BCC
              da62 0072  ld   $72         ;055e NE
              da63 0062  ld   $62
              da64 0059  ld   $59         ;0560 LDI
              da65 00a8  ld   $a8
              da66 002b  ld   $2b         ;0562 STW
              da67 001a  ld   $1a         ;0562 '_vLR'
              da68 0021  ld   $21         ;0564 LDW
              da69 0046  ld   $46         ;0564 'MenuItem'
              da6a 00e6  ld   $e6         ;0566 SUBI
              da6b 0008  ld   $08
              da6c 0035  ld   $35         ;0568 BCC
              da6d 003f  ld   $3f         ;0569 EQ
              da6e 006b  ld   $6b
              da6f 00e6  ld   $e6         ;056b SUBI
              da70 0001  ld   $01
              da71 0035  ld   $35         ;056d BCC
              da72 0072  ld   $72         ;056e NE
              da73 0074  ld   $74
              da74 001a  ld   $1a         ;0570 LD
              da75 0021  ld   $21
              da76 0082  ld   $82         ;0572 ANDI
              da77 00f8  ld   $f8
              da78 005e  ld   $5e         ;0574 ST
              da79 0021  ld   $21
              da7a 00b4  ld   $b4         ;0576 SYS
              da7b 00e3  ld   $e3
              da7c 0000  ld   $00         ;End of Apps/MainMenu/MainMenu_vX0.gcl, size 724
                                          ;+-----------------------------------+
                                          ;| Core/Reset_vX0.gcl                |
                                          ;+-----------------------------------+
              da7d dc4d  st   $4d,[y,x++] ;'M'
              da7e dc61  st   $61,[y,x++] ;'a'
              da7f dc69  st   $69,[y,x++] ;'i'
              da80 dc6e  st   $6e,[y,x++] ;'n'
              da81 dc00  st   $00,[y,x++] ;'\x00'
              da82 dc00  st   $00,[y,x++] ;'\x00'
              da83 dc00  st   $00,[y,x++] ;'\x00'
              da84 dc00  st   $00,[y,x++] ;'\x00'
              da85 00a9  ld   $a9
              da86 c218  st   [$18]
              da87 00d7  ld   $d7
              da88 14dd  ld   $dd,y
              da89 e06f  jmp  y,$6f
              da8a c219  st   [$19]
Reset:        da8b 0002  ld   $02         ;| RAM segment address (high byte first)
              da8c 0000  ld   $00         ;|
              da8d 00f3  ld   $f3         ;| Length (1..256)
              da8e 0011  ld   $11         ;0200 LDWI
              da8f 00f8  ld   $f8
              da90 0001  ld   $01
              da91 002b  ld   $2b         ;0203 STW
              da92 0030  ld   $30         ;0203 'CtrlBits'
              da93 00cd  ld   $cd         ;0205 DEF
              da94 0075  ld   $75
              da95 0075  ld   $75         ;0207 PUSH
              da96 001a  ld   $1a         ;0208 LD
              da97 0001  ld   $01
              da98 00e6  ld   $e6         ;020a SUBI
              da99 0001  ld   $01
              da9a 0082  ld   $82         ;020c ANDI
              da9b 00ff  ld   $ff
              da9c 00e3  ld   $e3         ;020e ADDI
              da9d 0001  ld   $01
              da9e 002b  ld   $2b         ;0210 STW
              da9f 0032  ld   $32         ;0210 'i'
              daa0 0011  ld   $11         ;0212 LDWI
              daa1 0009  ld   $09
              daa2 000b  ld   $0b
              daa3 002b  ld   $2b         ;0215 STW
              daa4 0022  ld   $22         ;0215 '_sysFn'
              daa5 0059  ld   $59         ;0217 LDI
              daa6 00aa  ld   $aa
              daa7 005e  ld   $5e         ;0219 ST
              daa8 007c  ld   $7c
              daa9 0059  ld   $59         ;021b LDI
              daaa 007c  ld   $7c
              daab 00b4  ld   $b4         ;021d SYS
              daac 00fb  ld   $fb
              daad 001a  ld   $1a         ;021f LD
              daae 007c  ld   $7c
              daaf 008c  ld   $8c         ;0221 XORI
              dab0 00aa  ld   $aa
              dab1 0035  ld   $35         ;0223 BCC
              dab2 003f  ld   $3f         ;0224 EQ
              dab3 002a  ld   $2a
              dab4 0059  ld   $59         ;0226 LDI
              dab5 0000  ld   $00
              dab6 00f0  ld   $f0         ;0228 POKE
              dab7 0030  ld   $30         ;0228 'CtrlBits'
              dab8 0090  ld   $90         ;022a BRA
              dab9 0054  ld   $54
              daba 0011  ld   $11         ;022c LDWI
              dabb 0024  ld   $24
              dabc 0080  ld   $80
              dabd 002b  ld   $2b         ;022f STW
              dabe 0034  ld   $34         ;022f 'q'
              dabf 0059  ld   $59         ;0231 LDI
              dac0 00bc  ld   $bc
              dac1 00b4  ld   $b4         ;0233 SYS
              dac2 00fb  ld   $fb
              dac3 0021  ld   $21         ;0235 LDW
              dac4 0034  ld   $34         ;0235 'q'
              dac5 00ad  ld   $ad         ;0237 PEEK
              dac6 008c  ld   $8c         ;0238 XORI
              dac7 00ff  ld   $ff
              dac8 00f0  ld   $f0         ;023a POKE
              dac9 0034  ld   $34         ;023a 'q'
              daca 002b  ld   $2b         ;023c STW
              dacb 0024  ld   $24         ;023c '_sysArgs0'
              dacc 008c  ld   $8c         ;023e XORI
              dacd 00ff  ld   $ff
              dace 00f0  ld   $f0         ;0240 POKE
              dacf 0034  ld   $34         ;0240 'q'
              dad0 00fc  ld   $fc         ;0242 XORW
              dad1 0024  ld   $24         ;0242 '_sysArgs0'
              dad2 0035  ld   $35         ;0244 BCC
              dad3 003f  ld   $3f         ;0245 EQ
              dad4 004f  ld   $4f
              dad5 0059  ld   $59         ;0247 LDI
              dad6 0031  ld   $31
              dad7 002b  ld   $2b         ;0249 STW
              dad8 0036  ld   $36         ;0249 'Char'
              dad9 00cf  ld   $cf         ;024b CALL
              dada 0038  ld   $38         ;024b 'PrintChar'
              dadb 0059  ld   $59         ;024d LDI
              dadc 0070  ld   $70
              dadd 002b  ld   $2b         ;024f STW
              dade 0032  ld   $32         ;024f 'i'
              dadf 0011  ld   $11         ;0251 LDWI
              dae0 007c  ld   $7c
              dae1 0080  ld   $80
              dae2 00b4  ld   $b4         ;0254 SYS
              dae3 00fb  ld   $fb
              dae4 0011  ld   $11         ;0256 LDWI
              dae5 002f  ld   $2f
              dae6 002f  ld   $2f
              dae7 002b  ld   $2b         ;0259 STW
              dae8 0036  ld   $36         ;0259 'Char'
              dae9 0021  ld   $21         ;025b LDW
              daea 0032  ld   $32         ;025b 'i'
              daeb 0093  ld   $93         ;025d INC
              daec 0036  ld   $36         ;025d 'Char'
              daed 00e6  ld   $e6         ;025f SUBI
              daee 0028  ld   $28
              daef 0035  ld   $35         ;0261 BCC
              daf0 0053  ld   $53         ;0262 GE
              daf1 005b  ld   $5b
              daf2 00e3  ld   $e3         ;0264 ADDI
              daf3 0028  ld   $28
              daf4 0093  ld   $93         ;0266 INC
              daf5 0037  ld   $37         ;0266 'Char'+1
              daf6 00e6  ld   $e6         ;0268 SUBI
              daf7 0004  ld   $04
              daf8 0035  ld   $35         ;026a BCC
              daf9 0053  ld   $53         ;026b GE
              dafa 0064  ld   $64
              dafb fe00  bra  ac          ;+-----------------------------------+
              dafc fcfd  bra  $dafd       ;|                                   |
              dafd 1418  ld   $18,y       ;| Trampoline for page $da00 lookups |
              dafe e006  jmp  y,$06       ;|                                   |
              daff c218  st   [$18]       ;+-----------------------------------+
              db00 00cf  ld   $cf         ;026d CALL
              db01 0038  ld   $38         ;026d 'PrintChar'
              db02 001a  ld   $1a         ;026f LD
              db03 0037  ld   $37         ;026f 'Char'+1
              db04 002b  ld   $2b         ;0271 STW
              db05 0036  ld   $36         ;0271 'Char'
              db06 00cf  ld   $cf         ;0273 CALL
              db07 0038  ld   $38         ;0273 'PrintChar'
              db08 0063  ld   $63         ;0275 POP
              db09 00ff  ld   $ff         ;0276 RET
              db0a 002b  ld   $2b         ;0277 STW
              db0b 003a  ld   $3a         ;0277 'CheckMemory'
              db0c 00cd  ld   $cd         ;0279 DEF
              db0d 009d  ld   $9d
              db0e 0075  ld   $75         ;027b PUSH
              db0f 002b  ld   $2b         ;027c STW
              db10 003c  ld   $3c         ;027c 'Text'
              db11 0021  ld   $21         ;027e LDW
              db12 003c  ld   $3c         ;027e 'Text'
              db13 00ad  ld   $ad         ;0280 PEEK
              db14 0035  ld   $35         ;0281 BCC
              db15 003f  ld   $3f         ;0282 EQ
              db16 009b  ld   $9b
              db17 002b  ld   $2b         ;0284 STW
              db18 0036  ld   $36         ;0284 'Char'
              db19 008c  ld   $8c         ;0286 XORI
              db1a 000a  ld   $0a
              db1b 0035  ld   $35         ;0288 BCC
              db1c 003f  ld   $3f         ;0289 EQ
              db1d 008d  ld   $8d
              db1e 00cf  ld   $cf         ;028b CALL
              db1f 0038  ld   $38         ;028b 'PrintChar'
              db20 0090  ld   $90         ;028d BRA
              db21 0097  ld   $97
              db22 0059  ld   $59         ;028f LDI
              db23 0002  ld   $02
              db24 005e  ld   $5e         ;0291 ST
              db25 003e  ld   $3e         ;0291 'Pos'
              db26 001a  ld   $1a         ;0293 LD
              db27 003f  ld   $3f         ;0293 'Pos'+1
              db28 00e3  ld   $e3         ;0295 ADDI
              db29 0008  ld   $08
              db2a 005e  ld   $5e         ;0297 ST
              db2b 003f  ld   $3f         ;0297 'Pos'+1
              db2c 0093  ld   $93         ;0299 INC
              db2d 003c  ld   $3c         ;0299 'Text'
              db2e 0090  ld   $90         ;029b BRA
              db2f 007c  ld   $7c
              db30 0063  ld   $63         ;029d POP
              db31 00ff  ld   $ff         ;029e RET
              db32 002b  ld   $2b         ;029f STW
              db33 0040  ld   $40         ;029f 'PrintS'
              db34 00cd  ld   $cd         ;02a1 DEF
              db35 00ec  ld   $ec
              db36 001a  ld   $1a         ;02a3 LD
              db37 0036  ld   $36         ;02a3 'Char'
              db38 00e6  ld   $e6         ;02a5 SUBI
              db39 0052  ld   $52
              db3a 0035  ld   $35         ;02a7 BCC
              db3b 0053  ld   $53         ;02a8 GE
              db3c 00b1  ld   $b1
              db3d 00e3  ld   $e3         ;02aa ADDI
              db3e 0032  ld   $32
              db3f 002b  ld   $2b         ;02ac STW
              db40 0032  ld   $32         ;02ac 'i'
              db41 0011  ld   $11         ;02ae LDWI
              db42 0000  ld   $00
              db43 0007  ld   $07
              db44 0090  ld   $90         ;02b1 BRA
              db45 00b6  ld   $b6
              db46 002b  ld   $2b         ;02b3 STW
              db47 0032  ld   $32         ;02b3 'i'
              db48 0011  ld   $11         ;02b5 LDWI
              db49 0000  ld   $00
              db4a 0008  ld   $08
              db4b 002b  ld   $2b         ;02b8 STW
              db4c 0042  ld   $42         ;02b8 'j'
              db4d 0021  ld   $21         ;02ba LDW
              db4e 0032  ld   $32         ;02ba 'i'
              db4f 00e9  ld   $e9         ;02bc LSLW
              db50 00e9  ld   $e9         ;02bd LSLW
              db51 0099  ld   $99         ;02be ADDW
              db52 0032  ld   $32         ;02be 'i'
              db53 0099  ld   $99         ;02c0 ADDW
              db54 0042  ld   $42         ;02c0 'j'
              db55 002b  ld   $2b         ;02c2 STW
              db56 0042  ld   $42         ;02c2 'j'
              db57 0011  ld   $11         ;02c4 LDWI
              db58 00e1  ld   $e1
              db59 0004  ld   $04
              db5a 002b  ld   $2b         ;02c7 STW
              db5b 0022  ld   $22         ;02c7 '_sysFn'
              db5c 0011  ld   $11         ;02c9 LDWI
              db5d 0020  ld   $20
              db5e 003f  ld   $3f
              db5f 002b  ld   $2b         ;02cc STW
              db60 0024  ld   $24
              db61 0021  ld   $21         ;02ce LDW
              db62 003e  ld   $3e         ;02ce 'Pos'
              db63 002b  ld   $2b         ;02d0 STW
              db64 0028  ld   $28
              db65 00e3  ld   $e3         ;02d2 ADDI
              db66 0006  ld   $06
              db67 002b  ld   $2b         ;02d4 STW
              db68 003e  ld   $3e         ;02d4 'Pos'
              db69 0059  ld   $59         ;02d6 LDI
              db6a 0005  ld   $05
              db6b 002b  ld   $2b         ;02d8 STW
              db6c 0032  ld   $32         ;02d8 'i'
              db6d 0021  ld   $21         ;02da LDW
              db6e 0042  ld   $42         ;02da 'j'
              db6f 007f  ld   $7f         ;02dc LUP
              db70 0000  ld   $00
              db71 005e  ld   $5e         ;02de ST
              db72 0026  ld   $26
              db73 00b4  ld   $b4         ;02e0 SYS
              db74 00cc  ld   $cc
              db75 0093  ld   $93         ;02e2 INC
              db76 0042  ld   $42         ;02e2 'j'
              db77 0093  ld   $93         ;02e4 INC
              db78 0028  ld   $28
              db79 0021  ld   $21         ;02e6 LDW
              db7a 0032  ld   $32         ;02e6 'i'
              db7b 00e6  ld   $e6         ;02e8 SUBI
              db7c 0001  ld   $01
              db7d 0035  ld   $35         ;02ea BCC
              db7e 004d  ld   $4d         ;02eb GT
              db7f 00d6  ld   $d6
              db80 00ff  ld   $ff         ;02ed RET
              db81 002b  ld   $2b         ;02ee STW
              db82 0038  ld   $38         ;02ee 'PrintChar'
              db83 0093  ld   $93         ;02f0 INC
              db84 001b  ld   $1b
              db85 00ff  ld   $ff         ;02f2 RET
              db86 0003  ld   $03         ;| RAM segment address (high byte first)
              db87 0000  ld   $00         ;|
              db88 00ea  ld   $ea         ;| Length (1..256)
              db89 00cd  ld   $cd         ;0300 DEF
              db8a 0037  ld   $37
              db8b 002b  ld   $2b         ;0302 STW
              db8c 0032  ld   $32         ;0302 'i'
              db8d 0088  ld   $88         ;0304 ORI
              db8e 00ff  ld   $ff
              db8f 008c  ld   $8c         ;0306 XORI
              db90 00ff  ld   $ff
              db91 0088  ld   $88         ;0308 ORI
              db92 00fa  ld   $fa
              db93 002b  ld   $2b         ;030a STW
              db94 0044  ld   $44         ;030a 'p'
              db95 001a  ld   $1a         ;030c LD
              db96 0032  ld   $32         ;030c 'i'
              db97 002b  ld   $2b         ;030e STW
              db98 0032  ld   $32         ;030e 'i'
              db99 0059  ld   $59         ;0310 LDI
              db9a 0000  ld   $00
              db9b 00f0  ld   $f0         ;0312 POKE
              db9c 0044  ld   $44         ;0312 'p'
              db9d 0093  ld   $93         ;0314 INC
              db9e 0044  ld   $44         ;0314 'p'
              db9f 0059  ld   $59         ;0316 LDI
              dba0 0003  ld   $03
              dba1 00f0  ld   $f0         ;0318 POKE
              dba2 0044  ld   $44         ;0318 'p'
              dba3 0093  ld   $93         ;031a INC
              dba4 0044  ld   $44         ;031a 'p'
              dba5 0011  ld   $11         ;031c LDWI
              dba6 0000  ld   $00
              dba7 0009  ld   $09
              dba8 0099  ld   $99         ;031f ADDW
              dba9 0032  ld   $32         ;031f 'i'
              dbaa 007f  ld   $7f         ;0321 LUP
              dbab 0000  ld   $00
              dbac 00f0  ld   $f0         ;0323 POKE
              dbad 0044  ld   $44         ;0323 'p'
              dbae 0093  ld   $93         ;0325 INC
              dbaf 0044  ld   $44         ;0325 'p'
              dbb0 0011  ld   $11         ;0327 LDWI
              dbb1 0000  ld   $00
              dbb2 0009  ld   $09
              dbb3 0099  ld   $99         ;032a ADDW
              dbb4 0032  ld   $32         ;032a 'i'
              dbb5 007f  ld   $7f         ;032c LUP
              dbb6 0001  ld   $01
              dbb7 00f0  ld   $f0         ;032e POKE
              dbb8 0044  ld   $44         ;032e 'p'
              dbb9 0093  ld   $93         ;0330 INC
              dbba 0044  ld   $44         ;0330 'p'
              dbbb 00f0  ld   $f0         ;0332 POKE
              dbbc 0044  ld   $44         ;0332 'p'
              dbbd 0093  ld   $93         ;0334 INC
              dbbe 0044  ld   $44         ;0334 'p'
              dbbf 00f0  ld   $f0         ;0336 POKE
              dbc0 0044  ld   $44         ;0336 'p'
              dbc1 00ff  ld   $ff         ;0338 RET
              dbc2 002b  ld   $2b         ;0339 STW
              dbc3 0046  ld   $46         ;0339 'SetupChannel'
              dbc4 00cd  ld   $cd         ;033b DEF
              dbc5 00c9  ld   $c9
              dbc6 0075  ld   $75         ;033d PUSH
              dbc7 0059  ld   $59         ;033e LDI
              dbc8 0010  ld   $10
              dbc9 002b  ld   $2b         ;0340 STW
              dbca 0042  ld   $42         ;0340 'j'
              dbcb 0059  ld   $59         ;0342 LDI
              dbcc 000a  ld   $0a
              dbcd 002b  ld   $2b         ;0344 STW
              dbce 0032  ld   $32         ;0344 'i'
              dbcf 00cf  ld   $cf         ;0346 CALL
              dbd0 0048  ld   $48         ;0346 'SendOnesToCard'
              dbd1 0021  ld   $21         ;0348 LDW
              dbd2 0032  ld   $32         ;0348 'i'
              dbd3 00e6  ld   $e6         ;034a SUBI
              dbd4 0001  ld   $01
              dbd5 0035  ld   $35         ;034c BCC
              dbd6 004d  ld   $4d         ;034d GT
              dbd7 0042  ld   $42
              dbd8 0011  ld   $11         ;034f LDWI
              dbd9 0009  ld   $09
              dbda 000b  ld   $0b
              dbdb 002b  ld   $2b         ;0352 STW
              dbdc 0022  ld   $22         ;0352 '_sysFn'
              dbdd 0011  ld   $11         ;0354 LDWI
              dbde 0078  ld   $78
              dbdf 0080  ld   $80
              dbe0 00b4  ld   $b4         ;0357 SYS
              dbe1 00fb  ld   $fb
              dbe2 00cd  ld   $cd         ;0359 DEF
              dbe3 0061  ld   $61
              dbe4 00ff  ld   $ff         ;035b 255
              dbe5 00ff  ld   $ff         ;035c 255
              dbe6 0040  ld   $40         ;035d 64
              dbe7 0000  ld   $00         ;035e 0
              dbe8 0000  ld   $00         ;035f 0
              dbe9 0000  ld   $00         ;0360 0
              dbea 0000  ld   $00         ;0361 0
              dbeb 0095  ld   $95         ;0362 149
              dbec 002b  ld   $2b         ;0363 STW
              dbed 0044  ld   $44         ;0363 'p'
              dbee 0059  ld   $59         ;0365 LDI
              dbef 0081  ld   $81
              dbf0 002b  ld   $2b         ;0367 STW
              dbf1 0034  ld   $34         ;0367 'q'
              dbf2 0059  ld   $59         ;0369 LDI
              dbf3 0008  ld   $08
              dbf4 002b  ld   $2b         ;036b STW
              dbf5 0032  ld   $32         ;036b 'i'
              dbf6 0021  ld   $21         ;036d LDW
              dbf7 0044  ld   $44         ;036d 'p'
              dbf8 00ad  ld   $ad         ;036f PEEK
              dbf9 0093  ld   $93         ;0370 INC
              dbfa 0044  ld   $44         ;0370 'p'
              dbfb fe00  bra  ac          ;+-----------------------------------+
              dbfc fcfd  bra  $dbfd       ;|                                   |
              dbfd 1418  ld   $18,y       ;| Trampoline for page $db00 lookups |
              dbfe e006  jmp  y,$06       ;|                                   |
              dbff c218  st   [$18]       ;+-----------------------------------+
              dc00 00f0  ld   $f0         ;0372 POKE
              dc01 0034  ld   $34         ;0372 'q'
              dc02 0093  ld   $93         ;0374 INC
              dc03 0034  ld   $34         ;0374 'q'
              dc04 0021  ld   $21         ;0376 LDW
              dc05 0032  ld   $32         ;0376 'i'
              dc06 00e6  ld   $e6         ;0378 SUBI
              dc07 0001  ld   $01
              dc08 0035  ld   $35         ;037a BCC
              dc09 004d  ld   $4d         ;037b GT
              dc0a 0069  ld   $69
              dc0b 0059  ld   $59         ;037d LDI
              dc0c 0081  ld   $81
              dc0d 002b  ld   $2b         ;037f STW
              dc0e 0024  ld   $24         ;037f '_sysArgs0'
              dc0f 00e3  ld   $e3         ;0381 ADDI
              dc10 0008  ld   $08
              dc11 002b  ld   $2b         ;0383 STW
              dc12 0026  ld   $26         ;0383 '_sysArgs2'
              dc13 0011  ld   $11         ;0385 LDWI
              dc14 0015  ld   $15
              dc15 000b  ld   $0b
              dc16 002b  ld   $2b         ;0388 STW
              dc17 0022  ld   $22         ;0388 '_sysFn'
              dc18 00b4  ld   $b4         ;038a SYS
              dc19 00cc  ld   $cc
              dc1a 0059  ld   $59         ;038c LDI
              dc1b 0010  ld   $10
              dc1c 002b  ld   $2b         ;038e STW
              dc1d 0032  ld   $32         ;038e 'i'
              dc1e 00cf  ld   $cf         ;0390 CALL
              dc1f 0048  ld   $48         ;0390 'SendOnesToCard'
              dc20 0082  ld   $82         ;0392 ANDI
              dc21 0080  ld   $80
              dc22 0035  ld   $35         ;0394 BCC
              dc23 003f  ld   $3f         ;0395 EQ
              dc24 009c  ld   $9c
              dc25 0021  ld   $21         ;0397 LDW
              dc26 0032  ld   $32         ;0397 'i'
              dc27 00e6  ld   $e6         ;0399 SUBI
              dc28 0001  ld   $01
              dc29 0035  ld   $35         ;039b BCC
              dc2a 004d  ld   $4d         ;039c GT
              dc2b 008c  ld   $8c
              dc2c 0011  ld   $11         ;039e LDWI
              dc2d 0009  ld   $09
              dc2e 000b  ld   $0b
              dc2f 002b  ld   $2b         ;03a1 STW
              dc30 0022  ld   $22         ;03a1 '_sysFn'
              dc31 0011  ld   $11         ;03a3 LDWI
              dc32 007c  ld   $7c
              dc33 0080  ld   $80
              dc34 00b4  ld   $b4         ;03a6 SYS
              dc35 00fb  ld   $fb
              dc36 001a  ld   $1a         ;03a8 LD
              dc37 002a  ld   $2a
              dc38 0035  ld   $35         ;03aa BCC
              dc39 003f  ld   $3f         ;03ab EQ
              dc3a 00c7  ld   $c7
              dc3b 008c  ld   $8c         ;03ad XORI
              dc3c 0001  ld   $01
              dc3d 0035  ld   $35         ;03af BCC
              dc3e 0072  ld   $72         ;03b0 NE
              dc3f 00c0  ld   $c0
              dc40 0011  ld   $11         ;03b2 LDWI
              dc41 0036  ld   $36
              dc42 00cc  ld   $cc
              dc43 002b  ld   $2b         ;03b5 STW
              dc44 0024  ld   $24         ;03b5 '_sysArgs0'
              dc45 0011  ld   $11         ;03b7 LDWI
              dc46 0000  ld   $00
              dc47 0002  ld   $02
              dc48 002b  ld   $2b         ;03ba STW
              dc49 001a  ld   $1a         ;03ba '_vLR'
              dc4a 0059  ld   $59         ;03bc LDI
              dc4b 00ad  ld   $ad
              dc4c 002b  ld   $2b         ;03be STW
              dc4d 0022  ld   $22         ;03be '_sysFn'
              dc4e 00b4  ld   $b4         ;03c0 SYS
              dc4f 00e3  ld   $e3
              dc50 0021  ld   $21         ;03c2 LDW
              dc51 0042  ld   $42         ;03c2 'j'
              dc52 00e6  ld   $e6         ;03c4 SUBI
              dc53 0001  ld   $01
              dc54 0035  ld   $35         ;03c6 BCC
              dc55 004d  ld   $4d         ;03c7 GT
              dc56 003e  ld   $3e
              dc57 0063  ld   $63         ;03c9 POP
              dc58 00ff  ld   $ff         ;03ca RET
              dc59 002b  ld   $2b         ;03cb STW
              dc5a 004a  ld   $4a         ;03cb 'CheckCard'
              dc5b 00cd  ld   $cd         ;03cd DEF
              dc5c 00e3  ld   $e3
              dc5d 0059  ld   $59         ;03cf LDI
              dc5e 00ff  ld   $ff
              dc5f 005e  ld   $5e         ;03d1 ST
              dc60 002a  ld   $2a
              dc61 0059  ld   $59         ;03d3 LDI
              dc62 002a  ld   $2a
              dc63 002b  ld   $2b         ;03d5 STW
              dc64 0024  ld   $24         ;03d5 '_sysArgs0'
              dc65 00e3  ld   $e3         ;03d7 ADDI
              dc66 0001  ld   $01
              dc67 002b  ld   $2b         ;03d9 STW
              dc68 0026  ld   $26         ;03d9 '_sysArgs2'
              dc69 0011  ld   $11         ;03db LDWI
              dc6a 0015  ld   $15
              dc6b 000b  ld   $0b
              dc6c 002b  ld   $2b         ;03de STW
              dc6d 0022  ld   $22         ;03de '_sysFn'
              dc6e 00b4  ld   $b4         ;03e0 SYS
              dc6f 00cc  ld   $cc
              dc70 001a  ld   $1a         ;03e2 LD
              dc71 002a  ld   $2a
              dc72 00ff  ld   $ff         ;03e4 RET
              dc73 002b  ld   $2b         ;03e5 STW
              dc74 0048  ld   $48         ;03e5 'SendOnesToCard'
              dc75 0093  ld   $93         ;03e7 INC
              dc76 001b  ld   $1b
              dc77 00ff  ld   $ff         ;03e9 RET
              dc78 0004  ld   $04         ;| RAM segment address (high byte first)
              dc79 0000  ld   $00         ;|
              dc7a 00d5  ld   $d5         ;| Length (1..256)
              dc7b 0011  ld   $11         ;0400 LDWI
              dc7c 000f  ld   $0f
              dc7d 000b  ld   $0b
              dc7e 002b  ld   $2b         ;0403 STW
              dc7f 0022  ld   $22
              dc80 0059  ld   $59         ;0405 LDI
              dc81 0000  ld   $00
              dc82 00b4  ld   $b4         ;0407 SYS
              dc83 00f6  ld   $f6
              dc84 0011  ld   $11         ;0409 LDWI
              dc85 0012  ld   $12
              dc86 000b  ld   $0b
              dc87 002b  ld   $2b         ;040c STW
              dc88 0022  ld   $22
              dc89 0059  ld   $59         ;040e LDI
              dc8a 0000  ld   $00
              dc8b 00b4  ld   $b4         ;0410 SYS
              dc8c 00f8  ld   $f8
              dc8d 00b4  ld   $b4         ;0412 SYS
              dc8e 00f8  ld   $f8
              dc8f 00b4  ld   $b4         ;0414 SYS
              dc90 00f8  ld   $f8
              dc91 00b4  ld   $b4         ;0416 SYS
              dc92 00f8  ld   $f8
              dc93 0011  ld   $11         ;0418 LDWI
              dc94 0058  ld   $58
              dc95 0001  ld   $01
              dc96 00cf  ld   $cf         ;041b CALL
              dc97 0046  ld   $46         ;041b 'SetupChannel'
              dc98 0011  ld   $11         ;041d LDWI
              dc99 0070  ld   $70
              dc9a 0002  ld   $02
              dc9b 00cf  ld   $cf         ;0420 CALL
              dc9c 0046  ld   $46         ;0420 'SetupChannel'
              dc9d 0011  ld   $11         ;0422 LDWI
              dc9e 0078  ld   $78
              dc9f 0003  ld   $03
              dca0 00cf  ld   $cf         ;0425 CALL
              dca1 0046  ld   $46         ;0425 'SetupChannel'
              dca2 0011  ld   $11         ;0427 LDWI
              dca3 007e  ld   $7e
              dca4 0004  ld   $04
              dca5 00cf  ld   $cf         ;042a CALL
              dca6 0046  ld   $46         ;042a 'SetupChannel'
              dca7 0011  ld   $11         ;042c LDWI
              dca8 0000  ld   $00
              dca9 0001  ld   $01
              dcaa 002b  ld   $2b         ;042f STW
              dcab 0044  ld   $44         ;042f 'p'
              dcac 0011  ld   $11         ;0431 LDWI
              dcad 0000  ld   $00
              dcae 0008  ld   $08
              dcaf 002b  ld   $2b         ;0434 STW
              dcb0 0034  ld   $34         ;0434 'q'
              dcb1 001a  ld   $1a         ;0436 LD
              dcb2 0035  ld   $35         ;0436 'q'+1
              dcb3 00f0  ld   $f0         ;0438 POKE
              dcb4 0044  ld   $44         ;0438 'p'
              dcb5 0093  ld   $93         ;043a INC
              dcb6 0044  ld   $44         ;043a 'p'
              dcb7 0059  ld   $59         ;043c LDI
              dcb8 0000  ld   $00
              dcb9 00f0  ld   $f0         ;043e POKE
              dcba 0044  ld   $44         ;043e 'p'
              dcbb 0093  ld   $93         ;0440 INC
              dcbc 0044  ld   $44         ;0440 'p'
              dcbd 0093  ld   $93         ;0442 INC
              dcbe 0035  ld   $35         ;0442 'q'+1
              dcbf 0021  ld   $21         ;0444 LDW
              dcc0 0034  ld   $34         ;0444 'q'
              dcc1 0035  ld   $35         ;0446 BCC
              dcc2 004d  ld   $4d         ;0447 GT
              dcc3 0034  ld   $34
              dcc4 0011  ld   $11         ;0449 LDWI
              dcc5 0003  ld   $03
              dcc6 000b  ld   $0b
              dcc7 002b  ld   $2b         ;044c STW
              dcc8 0022  ld   $22         ;044c '_sysFn'
              dcc9 0059  ld   $59         ;044e LDI
              dcca 0020  ld   $20
              dccb 005e  ld   $5e         ;0450 ST
              dccc 0025  ld   $25
              dccd 0011  ld   $11         ;0452 LDWI
              dcce 0000  ld   $00
              dccf 0008  ld   $08
              dcd0 002b  ld   $2b         ;0455 STW
              dcd1 0044  ld   $44         ;0455 'p'
              dcd2 002b  ld   $2b         ;0457 STW
              dcd3 0026  ld   $26         ;0457 '_sysArgs2'
              dcd4 0059  ld   $59         ;0459 LDI
              dcd5 00a0  ld   $a0
              dcd6 005e  ld   $5e         ;045b ST
              dcd7 0024  ld   $24
              dcd8 00b4  ld   $b4         ;045d SYS
              dcd9 00f4  ld   $f4
              dcda 0011  ld   $11         ;045f LDWI
              dcdb 0000  ld   $00
              dcdc 0001  ld   $01
              dcdd 0099  ld   $99         ;0462 ADDW
              dcde 0044  ld   $44         ;0462 'p'
              dcdf 0035  ld   $35         ;0464 BCC
              dce0 004d  ld   $4d         ;0465 GT
              dce1 0053  ld   $53
              dce2 001a  ld   $1a         ;0467 LD
              dce3 002e  ld   $2e
              dce4 0082  ld   $82         ;0469 ANDI
              dce5 0080  ld   $80
              dce6 0035  ld   $35         ;046b BCC
              dce7 0072  ld   $72         ;046c NE
              dce8 0070  ld   $70
              dce9 005e  ld   $5e         ;046e ST
              dcea 002e  ld   $2e
              dceb 005e  ld   $5e         ;0470 ST
              dcec 002d  ld   $2d
              dced 0059  ld   $59         ;0472 LDI
              dcee 0009  ld   $09
              dcef 005e  ld   $5e         ;0474 ST
              dcf0 002f  ld   $2f
              dcf1 0011  ld   $11         ;0476 LDWI
              dcf2 0014  ld   $14
              dcf3 0008  ld   $08
              dcf4 002b  ld   $2b         ;0479 STW
              dcf5 003e  ld   $3e         ;0479 'Pos'
              dcf6 00cd  ld   $cd         ;047b DEF
              dcf7 0089  ld   $89
              dcf8 002a  ld   $2a         ;047d '*'
              dcf9 002a  ld   $2a         ;047e '*'
              dcfa 002a  ld   $2a         ;047f '*'
              dcfb fe00  bra  ac          ;+-----------------------------------+
              dcfc fcfd  bra  $dcfd       ;|                                   |
              dcfd 1418  ld   $18,y       ;| Trampoline for page $dc00 lookups |
              dcfe e006  jmp  y,$06       ;|                                   |
              dcff c218  st   [$18]       ;+-----------------------------------+
              dd00 0020  ld   $20         ;0480 ' '
              dd01 0047  ld   $47         ;0481 'G'
              dd02 0069  ld   $69         ;0482 'i'
              dd03 0067  ld   $67         ;0483 'g'
              dd04 0061  ld   $61         ;0484 'a'
              dd05 0074  ld   $74         ;0485 't'
              dd06 0072  ld   $72         ;0486 'r'
              dd07 006f  ld   $6f         ;0487 'o'
              dd08 006e  ld   $6e         ;0488 'n'
              dd09 0020  ld   $20         ;0489 ' '
              dd0a 0000  ld   $00         ;048a 0
              dd0b 00cf  ld   $cf         ;048b CALL
              dd0c 0040  ld   $40         ;048b 'PrintS'
              dd0d 00cf  ld   $cf         ;048d CALL
              dd0e 003a  ld   $3a         ;048d 'CheckMemory'
              dd0f 00cd  ld   $cd         ;048f DEF
              dd10 00b0  ld   $b0
              dd11 004b  ld   $4b         ;0491 'K'
              dd12 0020  ld   $20         ;0492 ' '
              dd13 002a  ld   $2a         ;0493 '*'
              dd14 002a  ld   $2a         ;0494 '*'
              dd15 002a  ld   $2a         ;0495 '*'
              dd16 0020  ld   $20         ;0496 ' '
              dd17 000a  ld   $0a         ;0497 10
              dd18 0020  ld   $20         ;0498 ' '
              dd19 0054  ld   $54         ;0499 'T'
              dd1a 0054  ld   $54         ;049a 'T'
              dd1b 004c  ld   $4c         ;049b 'L'
              dd1c 0020  ld   $20         ;049c ' '
              dd1d 006d  ld   $6d         ;049d 'm'
              dd1e 0069  ld   $69         ;049e 'i'
              dd1f 0063  ld   $63         ;049f 'c'
              dd20 0072  ld   $72         ;04a0 'r'
              dd21 006f  ld   $6f         ;04a1 'o'
              dd22 0063  ld   $63         ;04a2 'c'
              dd23 006f  ld   $6f         ;04a3 'o'
              dd24 006d  ld   $6d         ;04a4 'm'
              dd25 0070  ld   $70         ;04a5 'p'
              dd26 0075  ld   $75         ;04a6 'u'
              dd27 0074  ld   $74         ;04a7 't'
              dd28 0065  ld   $65         ;04a8 'e'
              dd29 0072  ld   $72         ;04a9 'r'
              dd2a 0020  ld   $20         ;04aa ' '
              dd2b 0052  ld   $52         ;04ab 'R'
              dd2c 004f  ld   $4f         ;04ac 'O'
              dd2d 004d  ld   $4d         ;04ad 'M'
              dd2e 0076  ld   $76         ;04ae 'v'
              dd2f 0058  ld   $58         ;04af 'X'
              dd30 0030  ld   $30         ;04b0 '0'
              dd31 0000  ld   $00         ;04b1 0
              dd32 00cf  ld   $cf         ;04b2 CALL
              dd33 0040  ld   $40         ;04b2 'PrintS'
              dd34 0011  ld   $11         ;04b4 LDWI
              dd35 0000  ld   $00
              dd36 000b  ld   $0b
              dd37 002b  ld   $2b         ;04b7 STW
              dd38 0022  ld   $22         ;04b7 '_sysFn'
              dd39 0059  ld   $59         ;04b9 LDI
              dd3a 0001  ld   $01
              dd3b 00b4  ld   $b4         ;04bb SYS
              dd3c 00e7  ld   $e7
              dd3d 0021  ld   $21         ;04bd LDW
              dd3e 0030  ld   $30         ;04bd 'CtrlBits'
              dd3f 00ad  ld   $ad         ;04bf PEEK
              dd40 0035  ld   $35         ;04c0 BCC
              dd41 003f  ld   $3f         ;04c1 EQ
              dd42 00c3  ld   $c3
              dd43 00cf  ld   $cf         ;04c3 CALL
              dd44 004a  ld   $4a         ;04c3 'CheckCard'
              dd45 0011  ld   $11         ;04c5 LDWI
              dd46 00a9  ld   $a9
              dd47 00d7  ld   $d7
              dd48 002b  ld   $2b         ;04c8 STW
              dd49 0024  ld   $24         ;04c8 '_sysArgs0'
              dd4a 0011  ld   $11         ;04ca LDWI
              dd4b 0000  ld   $00
              dd4c 0002  ld   $02
              dd4d 002b  ld   $2b         ;04cd STW
              dd4e 001a  ld   $1a         ;04cd '_vLR'
              dd4f 0059  ld   $59         ;04cf LDI
              dd50 00ad  ld   $ad
              dd51 002b  ld   $2b         ;04d1 STW
              dd52 0022  ld   $22         ;04d1 '_sysFn'
              dd53 00b4  ld   $b4         ;04d3 SYS
              dd54 00e3  ld   $e3
              dd55 0000  ld   $00         ;End of Core/Reset_vX0.gcl, size 715
sys_ReadRomDir:
              dd56 f05c  beq  .sysDir#20
              dd57 1024  ld   $24,x
              dd58 1600  ld   ac,y
              dd59 0118  ld   [$18]
              dd5a a00e  suba $0e
              dd5b e200  jmp  y,ac
.sysDir#20:   dd5c 1400  ld   $00,y
              dd5d 0061  ld   $61
              dd5e 14dd  ld   $dd,y
              dd5f e200  jmp  y,ac
              dd60 1400  ld   $00,y
.sysDir#25:   dd61 dc52  st   $52,[y,x++] ;'R'
              dd62 dc65  st   $65,[y,x++] ;'e'
              dd63 dc73  st   $73,[y,x++] ;'s'
              dd64 dc65  st   $65,[y,x++] ;'e'
              dd65 dc74  st   $74,[y,x++] ;'t'
              dd66 dc00  st   $00,[y,x++] ;'\x00'
              dd67 dc00  st   $00,[y,x++] ;'\x00'
              dd68 dc00  st   $00,[y,x++] ;'\x00'
              dd69 008b  ld   $8b
              dd6a c218  st   [$18]
              dd6b 00da  ld   $da
              dd6c 14dd  ld   $dd,y
              dd6d e06f  jmp  y,$6f
              dd6e c219  st   [$19]
.sysDir#39:   dd6f 1403  ld   $03,y
              dd70 e0cb  jmp  y,$cb
              dd71 00ea  ld   $ea
              dd72 0200  nop              ;137 fillers
              dd73 0200  nop
              dd74 0200  nop
              * 137 times
              ddfb fe00  bra  ac          ;+-----------------------------------+
              ddfc fcfd  bra  $ddfd       ;|                                   |
              ddfd 1418  ld   $18,y       ;| Trampoline for page $dd00 lookups |
              ddfe e006  jmp  y,$06       ;|                                   |
              ddff c218  st   [$18]       ;+-----------------------------------+
              de00
