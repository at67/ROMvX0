* source: Core/ROMvX0.asm.py
                                          163   enableListing()
                                          164   #-----------------------------------------------------------------------
                                          165   #
                                          166   #  Start of core
                                          167   #
                                          168   #-----------------------------------------------------------------------
                                          169
                                          170   # Pre-loading the formal interface as a way to get warnings when
                                          171   # accidentally redefined with a different value
                                          172   loadBindings('ROMvX0_interface.json')
                                          173   loadBindings('Core/interface-dev.json') # Provisional values for DEVROM
                                          174
                                          175   # Gigatron clock
                                          176   cpuClock = 6.250e+06
                                          177
                                          178   # Output pin assignment for VGA
                                          179   R, G, B, hSync, vSync = 1, 4, 16, 64, 128
                                          180   syncBits = hSync+vSync # Both pulses negative
                                          181
                                          182   # When the XOUT register is in the circuit, the rising edge triggers its update.
                                          183   # The loop can therefore not be agnostic to the horizontal pulse polarity.
                                          184   assert syncBits & hSync != 0
                                          185
                                          186   # VGA 640x480 defaults (to be adjusted below!)
                                          187   vFront = 10     # Vertical front porch
                                          188   vPulse = 2      # Vertical sync pulse
                                          189   vBack  = 33     # Vertical back porch
                                          190   vgaLines = vFront + vPulse + vBack + 480
                                          191   vgaClock = 25.175e+06
                                          192
                                          193   # Video adjustments for Gigatron
                                          194   # 1. Our clock is (slightly) slower than 1/4th VGA clock. Not all monitors will
                                          195   #    accept the decreased frame rate, so we restore the frame rate to above
                                          196   #    minimum 59.94 Hz by cutting some lines from the vertical front porch.
                                          197   vFrontAdjust = vgaLines - int(4 * cpuClock / vgaClock * vgaLines)
                                          198   vFront -= vFrontAdjust
                                          199   # 2. Extend vertical sync pulse so we can feed the game controller the same
                                          200   #    signal. This is needed for controllers based on the 4021 instead of 74165
                                          201   vPulseExtension = max(0, 8-vPulse)
                                          202   vPulse += vPulseExtension
                                          203   # 3. Borrow these lines from the back porch so the refresh rate remains
                                          204   #    unaffected
                                          205   vBack -= vPulseExtension
                                          206
                                          207   # Start value of vertical blank counter
                                          208   videoYline0 = 1-2*(vFront+vPulse+vBack-2)
                                          209
                                          210   # Mismatch between video lines and sound channels
                                          211   soundDiscontinuity = (vFront+vPulse+vBack) % 4
                                          212
                                          213   # QQVGA resolution
                                          214   qqVgaWidth      = 160
                                          215   qqVgaHeight     = 120
                                          216
                                          217   # Game controller bits (actual controllers in kit have negative output)
                                          218   # +----------------------------------------+
                                          219   # |       Up                        B*     |
                                          220   # |  Left    Right               B     A*  |
                                          221   # |      Down      Select Start     A      |
                                          222   # +----------------------------------------+ *=Auto fire
                                          223   buttonRight     = 1
                                          224   buttonLeft      = 2
                                          225   buttonDown      = 4
                                          226   buttonUp        = 8
                                          227   buttonStart     = 16
                                          228   buttonSelect    = 32
                                          229   buttonB         = 64
                                          230   buttonA         = 128
                                          231
                                          232   #-----------------------------------------------------------------------
                                          233   #
                                          234   #  RAM page 0: zero-page variables
                                          235   #
                                          236   #-----------------------------------------------------------------------
                                          237
                                          238   # Memory size in pages from auto-detect
                                          239   memSize         = zpByte()
                                          240
                                          241   # Active interpreter page, swapped with channel, so that we can do a one
                                          242   # instruction vCpuSelect reset, i.e. st(vCpuSelect,[vCpuSelect])
                                          243   vCpuSelect      = zpByte()
                                          244
                                          245   # Next sound sample being synthesized
                                          246   sample          = zpByte()
                                          247   # To save one instruction in the critical inner loop, `sample' is always
                                          248   # reset with its own address instead of, for example, the value 0. Compare:
                                          249   # 1 instruction reset
                                          250   #       st sample,[sample]
                                          251   # 2 instruction reset:
                                          252   #       ld 0
                                          253   #       st [sample]
                                          254   # The difference is not audible. This is fine when the reset/address
                                          255   # value is low and doesn't overflow with 4 channels added to it.
                                          256   # There is an alternative, but it requires pull-down diodes on the data bus:
                                          257   #       st [sample],[sample]
                                          258   assert 4*63 + sample < 256
                                          259   # We pin this reset/address value to 3, so `sample' swings from 3 to 255
                                          260   assert sample == 3
                                          261
                                          262   # Former bootCount and bootCheck (<= ROMv3)
                                          263   vSPH             = zpByte()
                                          264   #zpReserved      = zpByte() # Recycled and still unused. Candidate future uses:
                                          265                              # - Video driver high address (for alternative video modes)
                                          266                              # - v6502: ADH offset ("MMU")
                                          267                              # - v8080: ???
                                          268
                                          269   # The current channel number for sound generation. Advanced every scan line
                                          270   # and independent of the vertical refresh to maintain constant oscillation.
                                          271   channel         = zpByte()
                                          272
                                          273   # Entropy harvested from SRAM startup and controller input
                                          274   entropy         = zpByte(3)
                                          275
                                          276   # Visible video
                                          277   videoY          = zpByte() # Counts up from 0 to 238 in steps of 2
                                          278                              # Counts up (and is odd) during vertical blank
                                          279   videoModeB      = zpByte() # Handler for every 2nd line (pixel burst or vCPU)
                                          280   videoModeC      = zpByte() # Handler for every 3rd line (pixel burst or vCPU)
                                          281   videoModeD      = zpByte() # Handler for every 4th line (pixel burst or vCPU)
                                          282
                                          283   nextVideo       = zpByte() # Jump offset to scan line handler (videoA, B, C...)
                                          284   videoPulse      = nextVideo # Used for pulse width modulation
                                          285
                                          286   # Frame counter is good enough as system clock
                                          287   frameCount      = zpByte(1)
                                          288
                                          289   # Serial input (game controller)
                                          290   serialRaw       = zpByte() # New raw serial read
                                          291   serialLast      = zpByte() # Previous serial read
                                          292   buttonState     = zpByte() # Clearable button state
                                          293   resetTimer      = zpByte() # After 2 seconds of holding 'Start', do a soft reset
                                          294                              # XXX move to page 1 to free up space
                                          295
                                          296   # Extended output (blinkenlights in bit 0:3 and audio in bit 4:7). This
                                          297   # value must be present in AC during a rising hSync edge. It then gets
                                          298   # copied to the XOUT register by the hardware. The XOUT register is only
                                          299   # accessible in this indirect manner because it isn't part of the core
                                          300   # CPU architecture.
                                          301   xout            = zpByte()
                                          302   xoutMask        = zpByte() # The blinkenlights and sound on/off state
                                          303
                                          304   # vCPU interpreter
                                          305   vTicks          = zpByte()  # Interpreter ticks are units of 2 clocks
                                          306   vPC             = zpByte(2) # Interpreter program counter, points into RAM
                                          307   vAC             = zpByte(2) # Interpreter accumulator, 16-bits
                                          308   vLR             = zpByte(2) # Return address, for returning after CALL
                                          309   vSP             = zpByte(1) # Stack pointer
                                          310   vTmp            = zpByte()
                                          311   vReturn         = zpByte()  # Return into video loop (in page of vBlankStart)
                                          312
                                          313   # Scratch
                                          314   frameX          = zpByte() # Starting byte within page
                                          315   frameY          = zpByte() # Page of current pixel line (updated by videoA)
                                          316
                                          317   # Vertical blank (reuse some variables used in the visible part)
                                          318   videoSync0      = frameX   # Vertical sync type on current line (0xc0 or 0x40)
                                          319   videoSync1      = frameY   # Same during horizontal pulse (0x80 or 0x00)
                                          320
                                          321   # Versioning for GT1 compatibility
                                          322   # Please refer to Docs/GT1-files.txt for interpreting this variable
                                          323   romType         = zpByte(1)
                                          324
                                          325   # The low 3 bits are repurposed to select the actively updated sound channels.
                                          326   # Valid bit combinations are:
                                          327   #  xxxxx011     Default after reset: 4 channels (page 1,2,3,4)
                                          328   #  xxxxx001     2 channels at double update rate (page 1,2)
                                          329   #  xxxxx000     1 channel at quadruple update rate (page 1)
                                          330   # The main application for this is to free up the high bytes of page 2,3,4.
                                          331   channelMask = symbol('channelMask_v4')
                                          332   assert romType == channelMask
                                          333
                                          334   # SYS function arguments and results/scratch
                                          335   sysFn           = zpByte(2)
                                          336   sysArgs         = zpByte(8)
                                          337
                                          338   # Play sound if non-zero, count down and stop sound when zero
                                          339   soundTimer      = zpByte()
                                          340
                                          341   # Fow now the LED state machine itself is hard-coded in the program ROM
                                          342   ledTimer        = zpByte() # Number of ticks until next LED change
                                          343   ledState_v2     = zpByte() # Current LED state
                                          344   ledTempo        = zpByte() # Next value for ledTimer after LED state change
                                          345
                                          346   # All bytes above, except 0x80, are free for temporary/scratch/stacks etc
                                          347   userVars        = zpByte(0)
                                          348
                                          349   #-----------------------------------------------------------------------
                                          350   #
                                          351   #  RAM page 1: video line table
                                          352   #
                                          353   #-----------------------------------------------------------------------
                                          354
                                          355   # Byte 0-239 define the video lines
                                          356   videoTable      = 0x0100 # Indirection table: Y[0] dX[0]  ..., Y[119] dX[119]
                                          357
                                          358   vReset          = 0x01f0
                                          359   vIRQ_v5         = 0x01f6
                                          360   ctrlBits        = 0x01f8
                                          361   videoTop_v5     = 0x01f9 # Number of skip lines
                                          362
                                          363   # Highest bytes are for sound channel variables
                                          364   wavA = 250      # Waveform modulation with `adda'
                                          365   wavX = 251      # Waveform modulation with `xora'
                                          366   keyL = 252      # Frequency low 7 bits (bit7 == 0)
                                          367   keyH = 253      # Frequency high 8 bits
                                          368   oscL = 254      # Phase low 7 bits
                                          369   oscH = 255      # Phase high 8 bits
                                          370
                                          371   #-----------------------------------------------------------------------
                                          372   #  Memory layout
                                          373   #-----------------------------------------------------------------------
                                          374
                                          375   userCode = 0x0200       # Application vCPU code
                                          376   soundTable = 0x0700     # Wave form tables (doubles as right-shift-2 table)
                                          377   screenMemory = 0x0800   # Default start of screen memory: 0x0800 to 0x7fff
                                          378
                                          379   #-----------------------------------------------------------------------
                                          380   #  Application definitions
                                          381   #-----------------------------------------------------------------------
                                          382
                                          383   maxTicks = 30//2                 # Duration of vCPU's slowest virtual opcode (ticks)
                                          384   minTicks = 14//2                 # vcPU's fastest instruction
                                          385   v6502_maxTicks = 38//2           # Max duration of v6502 processing phase (ticks)
                                          386
                                          387   runVcpu_overhead = 5            # Caller overhead (cycles)
                                          388   vCPU_overhead = 9               # Callee overhead of jumping in and out (cycles)
                                          389   v6502_overhead = 11             # Callee overhead for v6502 (cycles)
                                          390
                                          391   v6502_adjust = (v6502_maxTicks - maxTicks) + (v6502_overhead - vCPU_overhead)//2
                                          392   assert v6502_adjust >= 0        # v6502's overhead is a bit more than vCPU
                                          393
                                          394   def runVcpu(n, ref=None, returnTo=None):
                                          395     """Macro to run interpreter for exactly n cycles. Returns 0 in AC.
                                          396
                                          397     - `n' is the number of available Gigatron cycles including overhead.
                                          398       This is converted into interpreter ticks and takes into account
                                          399       the vCPU calling overheads. A `nop' is inserted when necessary
                                          400       for alignment between cycles and ticks.
                                          401     - `returnTo' is where program flow continues after return. If not set
                                          402        explicitely, it will be the first instruction behind the expansion.
                                          403     - If another interpreter than vCPU is active (v6502...), that one
                                          404       must adjust for the timing differences, because runVcpu wouldn't know."""
                                          405
                                          406     overhead = runVcpu_overhead + vCPU_overhead
                                          407     if returnTo == 0x100:         # Special case for videoZ
                                          408       overhead -= 2
                                          409
                                          410     if n is None:
                                          411       # (Clumsily) create a maximum time slice, corresponding to a vTicks
                                          412       # value of 127 (giving 282 cycles). A higher value doesn't work because
                                          413       # then SYS functions that just need 28 cycles (0 excess) won't start.
                                          414       n = (127 + maxTicks) * 2 + overhead
                                          415
                                          416     n -= overhead
                                          417     assert n > 0
                                          418
                                          419     if n % 2 == 1:
                                          420       nop()                       # Tick alignment
                                          421       n -= 1
                                          422     assert n % 2 == 0
                                          423
                                          424     print('runVcpu at $%04x net cycles %3s info %s' % (pc(), n, ref))
                                          425
                                          426     if returnTo != 0x100:
                                          427       if returnTo is None:
                                          428         returnTo = pc() + 5       # Next instruction
                                          429       ld(lo(returnTo))            #0
                                          430       st([vReturn])               #1
                                          431
                                          432     n //= 2
                                          433     n -= maxTicks                 # First instruction always runs
                                          434     assert n < 128
                                          435     assert n >= v6502_adjust
                                          436
                                          437     ld([vCpuSelect],Y)            #2
                                          438     jmp(Y,'ENTER')                #3
                                          439     ld(n)                         #4
                                          440   assert runVcpu_overhead ==       5
                                          441
                                          442   #-----------------------------------------------------------------------
                                          443   #       v6502 definitions
                                          444   #-----------------------------------------------------------------------
                                          445
                                          446   # Registers are zero page variables
                                          447   v6502_PC        = vLR           # Program Counter
                                          448   v6502_PCL       = vLR+0         # Program Counter Low
                                          449   v6502_PCH       = vLR+1         # Program Counter High
                                          450   v6502_S         = vSP           # Stack Pointer (kept as "S+1")
                                          451   v6502_A         = vAC+0         # Accumulator
                                          452   v6502_BI        = vAC+1         # B Input Register (used by SBC)
                                          453   v6502_ADL       = sysArgs+0     # Low Address Register
                                          454   v6502_ADH       = sysArgs+1     # High Address Register
                                          455   v6502_IR        = sysArgs+2     # Instruction Register
                                          456   v6502_P         = sysArgs+3     # Processor Status Register (V flag in bit 7)
                                          457   v6502_Qz        = sysArgs+4     # Quick Status Register for Z flag
                                          458   v6502_Qn        = sysArgs+5     # Quick Status Register for N flag
                                          459   v6502_X         = sysArgs+6     # Index Register X
                                          460   v6502_Y         = sysArgs+7     # Index Register Y
                                          461   v6502_Tmp       = vTmp          # Scratch (may be clobbered outside v6502)
                                          462
                                          463   # MOS 6502 definitions for P register
                                          464   v6502_Cflag = 1                 # Carry Flag (unsigned overflow)
                                          465   v6502_Zflag = 2                 # Zero Flag (all bits zero)
                                          466   v6502_Iflag = 4                 # Interrupt Enable Flag (1=Disable)
                                          467   v6502_Dflag = 8                 # Decimal Enable Flag (aka BCD mode, 1=Enable)
                                          468   v6502_Bflag = 16                # Break (or PHP) Instruction Flag
                                          469   v6502_Uflag = 32                # Unused (always 1)
                                          470   v6502_Vflag = 64                # Overflow Flag (signed overflow)
                                          471   v6502_Nflag = 128               # Negative Flag (bit 7 of result)
                                          472
                                          473   # In emulation it is much faster to keep the V flag in bit 7
                                          474   # This can be corrected when importing/exporting with PHP, PLP, etc
                                          475   v6502_Vemu = 128
                                          476
                                          477   # On overflow:
                                          478   #       """Overflow is set if two inputs with the same sign produce
                                          479   #          a result with a different sign. Otherwise it is clear."""
                                          480   # Formula (without carry/borrow in!):
                                          481   #       (A ^ (A+B)) & (B ^ (A+B)) & 0x80
                                          482   # References:
                                          483   #       http://www.righto.com/2012/12/the-6502-overflow-flag-explained.html
                                          484   #       http://6502.org/tutorials/vflag.html
                                          485
                                          486   # Memory layout
                                          487   v6502_Stack     = 0x0000        # 0x0100 is already used in the Gigatron
                                          488   #v6502_NMI      = 0xfffa
                                          489   #v6502_RESET    = 0xfffc
                                          490   #v6502_IRQ      = 0xfffe
                                          491
                                          492   #-----------------------------------------------------------------------
                                          493   #
                                          494   #  $0000 ROM page 0: Boot
                                          495   #
                                          496   #-----------------------------------------------------------------------
                                          497
                                          498   align(0x100, size=0x80)
                                          499
                                          500   # Give a first sign of life that can be checked with a voltmeter
              address
              |    encoding
              |    |     instruction
              |    |     |    operands
              |    |     |    |
              V    V     V    V
              0000 0000  ld   $00         501   ld(0b0000)                      # LEDs |OOOO|
              0001 1880  ld   $80,out     502   ld(syncBits^hSync,OUT)          # Prepare XOUT update, hSync goes down, RGB to black
              0002 18c0  ld   $c0,out     503   ld(syncBits,OUT)                # hSync goes up, updating XOUT
                                          504
                                          505   # Setup I/O and RAM expander
              0003 c17c  ctrl $7c         506   ctrl(0b01111100)                # Disable SPI slaves, enable RAM, bank 1
                                          507   #      ^^^^^^^^
                                          508   #      |||||||`-- SCLK
                                          509   #      ||||||`--- Not connected
                                          510   #      |||||`---- /SS0
                                          511   #      ||||`----- /SS1
                                          512   #      |||`------ /SS2
                                          513   #      ||`------- /SS3
                                          514   #      |`-------- B0
                                          515   #      `--------- B1
                                          516   # bit15 --------- MOSI = 0
                                          517
                                          518   # Simple RAM test and size check by writing to [1<<n] and see if [0] changes or not.
              0004 0001  ld   $01         519   ld(1)                           # Quick RAM test and count
                                          520   label('.countMem0')
.countMem0:   0005 d601  st   [$01],y     521   st([memSize],Y)                 # Store in RAM and load AC in Y
              0006 00ff  ld   $ff         522   ld(255)
              0007 6900  xora [y,$00]     523   xora([Y,0])                     # Invert value from memory
              0008 ca00  st   [y,$00]     524   st([Y,0])                       # Test RAM by writing the new value
              0009 c200  st   [$00]       525   st([0])                         # Copy result in [0]
              000a 6900  xora [y,$00]     526   xora([Y,0])                     # Read back and compare if written ok
              000b ec0b  bne  $000b       527   bne(pc())                       # Loop forever on RAM failure here
              000c 00ff  ld   $ff         528   ld(255)
              000d 6900  xora [y,$00]     529   xora([Y,0])                     # Invert memory value again
              000e ca00  st   [y,$00]     530   st([Y,0])                       # To restore original value
              000f 6100  xora [$00]       531   xora([0])                       # Compare with inverted copy
              0010 f014  beq  .countMem1  532   beq('.countMem1')               # If equal, we wrapped around
              0011 0101  ld   [$01]       533   ld([memSize])
              0012 fc05  bra  .countMem0  534   bra('.countMem0')               # Loop to test next address line
              0013 8200  adda ac          535   adda(AC)                        # Executes in the branch delay slot!
                                          536   label('.countMem1')
                                          537
                                          538   # Momentarily wait to allow for debouncing of the reset switch by spinning
                                          539   # roughly 2^15 times at 2 clocks per loop: 6.5ms@10MHz to 10ms@6.3MHz
                                          540   # Real-world switches normally bounce shorter than that.
                                          541   # "[...] 16 switches exhibited an average 1557 usec of bouncing, with,
                                          542   #  as I said, a max of 6200 usec" (From: http://www.ganssle.com/debouncing.htm)
                                          543   # Relevant for the breadboard version, as the kit doesn't have a reset switch.
                                          544
.countMem1:   0014 00ff  ld   $ff         545   ld(255)                         # Debounce reset button
                                          546   label('.debounce')
.debounce:    0015 c200  st   [$00]       547   st([0])
              0016 ec16  bne  $0016       548   bne(pc())
              0017 a001  suba $01         549   suba(1)                         # Branch delay slot
              0018 0100  ld   [$00]       550   ld([0])
              0019 ec15  bne  .debounce   551   bne('.debounce')
              001a a001  suba $01         552   suba(1)                         # Branch delay slot
                                          553
                                          554   # Update LEDs (memory is present and counted, reset is stable)
              001b 0001  ld   $01         555   ld(0b0001)                      # LEDs |*OOO|
              001c 1880  ld   $80,out     556   ld(syncBits^hSync,OUT)
              001d 18c0  ld   $c0,out     557   ld(syncBits,OUT)
                                          558
                                          559   # Scan the entire RAM space to collect entropy for a random number generator.
                                          560   # The 16-bit address space is scanned, even if less RAM was detected.
              001e 0000  ld   $00         561   ld(0)                           # Collect entropy from RAM
              001f d218  st   [$18],x     562   st([vAC+0],X)
              0020 d619  st   [$19],y     563   st([vAC+1],Y)
                                          564   label('.initEnt0')
.initEnt0:    0021 0106  ld   [$06]       565   ld([entropy+0])
              0022 f425  bge  .initEnt1   566   bpl('.initEnt1')
              0023 8d00  adda [y,x]       567   adda([Y,X])
              0024 60bf  xora $bf         568   xora(191)
                                          569   label('.initEnt1')
.initEnt1:    0025 c206  st   [$06]       570   st([entropy+0])
              0026 0107  ld   [$07]       571   ld([entropy+1])
              0027 f42a  bge  .initEnt2   572   bpl('.initEnt2')
              0028 8106  adda [$06]       573   adda([entropy+0])
              0029 60c1  xora $c1         574   xora(193)
                                          575   label('.initEnt2')
.initEnt2:    002a c207  st   [$07]       576   st([entropy+1])
              002b 8108  adda [$08]       577   adda([entropy+2])
              002c c208  st   [$08]       578   st([entropy+2])
              002d 0118  ld   [$18]       579   ld([vAC+0])
              002e 8001  adda $01         580   adda(1)
              002f ec21  bne  .initEnt0   581   bne('.initEnt0')
              0030 d218  st   [$18],x     582   st([vAC+0],X)
              0031 0119  ld   [$19]       583   ld([vAC+1])
              0032 8001  adda $01         584   adda(1)
              0033 ec21  bne  .initEnt0   585   bne('.initEnt0')
              0034 d619  st   [$19],y     586   st([vAC+1],Y)
                                          587
                                          588   # Update LEDs
              0035 0003  ld   $03         589   ld(0b0011)                      # LEDs |**OO|
              0036 1880  ld   $80,out     590   ld(syncBits^hSync,OUT)
              0037 18c0  ld   $c0,out     591   ld(syncBits,OUT)
                                          592
                                          593   # vCPU reset handler
              0038 00ee  ld   $ee         594   ld((vReset&255)-2)              # Setup vCPU reset handler
              0039 c216  st   [$16]       595   st([vPC])
              003a 9002  adda $02,x       596   adda(2,X)
              003b 0001  ld   $01         597   ld(vReset>>8)
              003c d617  st   [$17],y     598   st([vPC+1],Y)
              003d dc59  st   $59,[y,x++] 599   st('LDI',             [Y,Xpp])
              003e dc5e  st   $5e,[y,x++] 600   st('SYS_Reset_88',    [Y,Xpp])
              003f dc2b  st   $2b,[y,x++] 601   st('STW',             [Y,Xpp])
              0040 dc22  st   $22,[y,x++] 602   st(sysFn,             [Y,Xpp])
              0041 dcb4  st   $b4,[y,x++] 603   st('SYS',             [Y,Xpp])  # SYS -> SYS_Reset_88 -> SYS_Exec_88
              0042 dce3  st   $e3,[y,x++] 604   st(256-88//2+maxTicks,[Y,Xpp])
              0043 dc00  st   $00,[y,x++] 605   st(0,                 [Y,Xpp])  # vIRQ_v5: Disable interrupts
              0044 dc00  st   $00,[y,x++] 606   st(0,                 [Y,Xpp])  # vIRQ_v5
              0045 dcfc  st   $fc,[y,x++] 607   st(0b11111100,        [Y,Xpp])  # Control register
              0046 dc00  st   $00,[y,x++] 608   st(0,                 [Y,Xpp])  # videoTop
                                          609
              0047 0002  ld   $02         610   ld(hi('ENTER'))                 # Active interpreter (vCPU,v6502) = vCPU
              0048 c202  st   [$02]       611   st([vCpuSelect])
                                          612
              0049 00ff  ld   $ff         613   ld(255)                         # Setup serial input
              004a c20e  st   [$0e]       614   st([frameCount])
              004b c20f  st   [$0f]       615   st([serialRaw])
              004c c210  st   [$10]       616   st([serialLast])
              004d c211  st   [$11]       617   st([buttonState])
              004e c212  st   [$12]       618   st([resetTimer])                # resetTimer<0 when entering Main.gcl
                                          619
              004f 0007  ld   $07         620   ld(0b0111)                      # LEDs |***O|
              0050 1880  ld   $80,out     621   ld(syncBits^hSync,OUT)
              0051 18c0  ld   $c0,out     622   ld(syncBits,OUT)
                                          623
              0052 0000  ld   $00         624   ld(0)
              0053 c200  st   [$00]       625   st([0])                         # Carry lookup ([0x80] in 1st line of vBlank)
              0054 c205  st   [$05]       626   st([channel])
              0055 c22c  st   [$2c]       627   st([soundTimer])
                                          628
              0056 000f  ld   $0f         629   ld(0b1111)                      # LEDs |****|
              0057 1880  ld   $80,out     630   ld(syncBits^hSync,OUT)
              0058 18c0  ld   $c0,out     631   ld(syncBits,OUT)
              0059 c213  st   [$13]       632   st([xout])                      # Setup for control by video loop
              005a c214  st   [$14]       633   st([xoutMask])
                                          634
              005b 1401  ld   $01,y       635   ld(hi('startVideo'),Y)          # Enter video loop at vertical blank
              005c e003  jmp  y,$03       636   jmp(Y,'startVideo')
              005d c22e  st   [$2e]       637   st([ledState_v2])               # Setting to 1..126 means "stopped"
                                          638
                                          639   #-----------------------------------------------------------------------
                                          640   # Extension SYS_Reset_88: Soft reset
                                          641   #-----------------------------------------------------------------------
                                          642
                                          643   # SYS_Reset_88 initiates an immediate Gigatron reset from within the vCPU.
                                          644   # The reset sequence itself is mostly implemented in GCL by Reset.gcl,
                                          645   # which must first be loaded into RAM. But as that takes more than 1 scanline,
                                          646   # some vCPU bootstrapping code gets loaded with SYS_Exec_88.
                                          647   # !!! This function was REMOVED from interface.json
                                          648   # !!! Better use vReset as generic entry point for soft reset
                                          649
                                          650   # ROM type (see also Docs/GT1-files.txt)
                                          651   romTypeValue = symbol('romTypeValue_ROMvX0')
                                          652
                                          653   label('SYS_Reset_88')
                                          654   assert pc()>>8 == 0
                                          655   assert (romTypeValue & 7) == 0
SYS_Reset_88: 005e 141f  ld   $1f,y       656   ld(hi('sys_Reset_88'),Y)        #15
              005f e041  jmp  y,$41       657   jmp(Y,'sys_Reset_88')           #16
              0060 0080  ld   $80         658   ld(romTypeValue)                #17 Set ROM type/version and clear channel mask
                                          659
                                          660
                                          661   # STPX implementation
                                          662   label('stpx#13')
stpx#13:      0061 0500  ld   [x]         663   ld([X])                         #13,
              0062 c21d  st   [$1d]       664   st([vTmp])                      #14,
              0063 de00  st   [y,x++]     665   st([Y,Xpp])                     #15, relies on being in page 0!
              0064 0500  ld   [x]         666   ld([X])                         #16, y
              0065 8500  adda [x]         667   adda([X])                       #17, y*2
              0066 1200  ld   ac,x        668   ld(AC,X)                        #18,
              0067 1401  ld   $01,y       669   ld(1,Y)                         #19, Y,X = 0x0100 + 2*y, (0 >= y <= 127)
              0068 0d00  ld   [y,x]       670   ld([Y,X])                       #20,
              0069 1600  ld   ac,y        671   ld(AC,Y)                        #21, Y = [Y,X]
              006a 112b  ld   [$2b],x     672   ld([sysArgs+7],X)               #22,
              006b 0500  ld   [x]         673   ld([X])                         #23, colour
              006c 111d  ld   [$1d],x     674   ld([vTmp],X)                    #24,
              006d ce00  st   [y,x]       675   st([Y,X])                       #25, [Y,X] = colour
              006e 1403  ld   $03,y       676   ld(hi('NEXTY'),Y)               #26,
              006f e000  jmp  y,$00       677   jmp(Y,'NEXTY')                  #27,
              0070 00f1  ld   $f1         678   ld(-30/2)                       #28,
                                          679
                                          680
              0071 0200  nop              681   align(0x80, size=0x80)
              0072 0200  nop
              0073 0200  nop
              * 15 times
                                          682   assert pc() == 0x80
                                          683
                                          684
                                          685   # ADDW moved to page0 to free up room for more instruction slots in page3
                                          686   # This implemetation of ADDW relies on Y=0 and hence cannot be dispatched from any other page
                                          687   label('addw#13')
addw#13:      0080 0118  ld   [$18]       688   ld([vAC])                       #13 Low byte
              0081 c21d  st   [$1d]       689   st([vTmp])                      #14 Store low result
              0082 8500  adda [x]         690   adda([X])                       #15
              0083 c218  st   [$18]       691   st([vAC])                       #16
              0084 e88f  blt  .addw#19    692   bmi('.addw#19')                 #17 Now figure out if there was a carry
              0085 0500  ld   [x]         693   ld([X])                         #18
              0086 de00  st   [y,x++]     694   st([Y,Xpp])                     #29
              0087 411d  ora  [$1d]       695   ora([vTmp])                     #20
              0088 e898  blt  .addw#23    696   bmi('.addw#23')                 #21 If Carry == 1
              0089 0500  ld   [x]         697   ld([X])                         #22
              008a 8119  adda [$19]       698   adda([vAC+1])                   #23
              008b c219  st   [$19]       699   st([vAC+1])                     #24 Store high result
              008c 1403  ld   $03,y       700   ld(hi('REENTER'),Y)             #25
              008d e0cb  jmp  y,$cb       701   jmp(Y,'REENTER')                #26
              008e 00f1  ld   $f1         702   ld(-30/2)                       #27
                                          703   label('.addw#19')
.addw#19:     008f de00  st   [y,x++]     704   st([Y,Xpp])                     #19
              0090 211d  anda [$1d]       705   anda([vTmp])                    #20
              0091 e898  blt  .addw#23    706   bmi('.addw#23')                 #21 If Carry == 1
              0092 0500  ld   [x]         707   ld([X])                         #22
              0093 8119  adda [$19]       708   adda([vAC+1])                   #23
              0094 c219  st   [$19]       709   st([vAC+1])                     #24 Store high result
              0095 1403  ld   $03,y       710   ld(hi('REENTER'),Y)             #25
              0096 e0cb  jmp  y,$cb       711   jmp(Y,'REENTER')                #26
              0097 00f1  ld   $f1         712   ld(-30/2)                       #27
                                          713   label('.addw#23')
.addw#23:     0098 8001  adda $01         714   adda(1)                         #23
              0099 8119  adda [$19]       715   adda([vAC+1])                   #24
              009a c219  st   [$19]       716   st([vAC+1])                     #25 Store high result
              009b 1403  ld   $03,y       717   ld(hi('NEXTY'),Y)               #26
              009c e000  jmp  y,$00       718   jmp(Y,'NEXTY')                  #27
              009d 00f1  ld   $f1         719   ld(-30/2)                       #28
                                          720
                                          721
                                          722   #-----------------------------------------------------------------------
                                          723   # Placeholders for future SYS functions. This works as a kind of jump
                                          724   # table. The indirection allows SYS implementations to be moved around
                                          725   # between ROM versions, at the expense of 2 clock cycles (or 1). When
                                          726   # the function is not present it just acts as a NOP. Of course, when a
                                          727   # SYS function must be patched or extended it needs to have budget for
                                          728   # that in its declared maximum cycle count.
                                          729   #
                                          730   # Technically the same goal can be achieved by starting each function
                                          731   # with 2 nop's, or by overdeclaring their duration in the first place
                                          732   # (a bit is still wise to do). But this can result in fragmentation
                                          733   # of future ROM images. The indirection avoids that.
                                          734   #
                                          735   # An added advantage of having these in ROM page 0 is that it saves one
                                          736   # byte when setting sysFn: LDI+STW (4 bytes) instead of LDWI+STW (5 bytes)
                                          737   #-----------------------------------------------------------------------
                                          738
                                          739   label('SYS_Multiply_s16_vX_66')
SYS_Multiply_s16_vX_66:
              009e 1419  ld   $19,y       740   ld(hi('sys_Multiply_s16'),Y)    #15 slot 0x9e
              009f e000  jmp  y,$00       741   jmp(Y,'sys_Multiply_s16')       #16
              00a0 012a  ld   [$2a]       742   ld([sysArgs+6])                 #17 load mask.lo
                                          743
                                          744   label('SYS_Divide_s16_vX_80')
SYS_Divide_s16_vX_80:
              00a1 1419  ld   $19,y       745   ld(hi('sys_Divide_s16'),Y)      #15 slot 0xa1
              00a2 e038  jmp  y,$38       746   jmp(Y,'sys_Divide_s16')         #16
              00a3 0128  ld   [$28]       747   ld([sysArgs+4])                 #17
                                          748
                                          749   label('SYS_DrawLine_vX_86')
SYS_DrawLine_vX_86:
              00a4 1419  ld   $19,y       750   ld(hi('sys_DrawLine'),Y)        #15 slot 0xa4
              00a5 e07f  jmp  y,$7f       751   jmp(Y,'sys_DrawLine')           #16
              00a6 01a3  ld   [$a3]       752   ld([0xA3])                      #17 fgcolour
                                          753
              00a7 1403  ld   $03,y       754   ld(hi('REENTER'),Y)             #15 slot 0xa7
              00a8 e0cb  jmp  y,$cb       755   jmp(Y,'REENTER')                #16
              00a9 00f6  ld   $f6         756   ld(-20/2)                       #17
                                          757
                                          758   label('SYS_WaitVBlank_vX_28')
SYS_WaitVBlank_vX_28:
              00aa 141a  ld   $1a,y       759   ld(hi('sys_WaitVBlank'),Y)      #15 slot 0xaa
              00ab e000  jmp  y,$00       760   jmp(Y,'sys_WaitVBlank')         #16
              00ac 0109  ld   [$09]       761   ld([videoY])                    #17 scanline Y
                                          762
                                          763   #-----------------------------------------------------------------------
                                          764   # Extension SYS_Exec_88: Load code from ROM into memory and execute it
                                          765   #-----------------------------------------------------------------------
                                          766   #
                                          767   # This loads the vCPU code with consideration of the current vSP
                                          768   # Used during reset, but also for switching between applications or for
                                          769   # loading data from ROM from within an application (overlays).
                                          770   #
                                          771   # ROM stream format is [<addrH> <addrL> <n&255> n*<byte>]* 0
                                          772   # on top of lookup tables.
                                          773   #
                                          774   # Variables:
                                          775   #       sysArgs[0:1]    ROM pointer (in)
                                          776   #       sysArgs[2:3]    RAM pointer (changed)
                                          777   #       sysArgs[4]      State counter (changed)
                                          778   #       vLR             vCPU continues here (in)
                                          779
                                          780   label('SYS_Exec_88')
SYS_Exec_88:  00ad 1412  ld   $12,y       781   ld(hi('sys_Exec'),Y)            #15 slot 0xad
              00ae e04f  jmp  y,$4f       782   jmp(Y,'sys_Exec')               #16
              00af 0000  ld   $00         783   ld(0)                           #17 Address of loader on zero page
                                          784
              00b0 1403  ld   $03,y       785   ld(hi('REENTER'),Y)             #15 slot 0xb0
              00b1 e0cb  jmp  y,$cb       786   jmp(Y,'REENTER')                #16
              00b2 00f6  ld   $f6         787   ld(-20/2)                       #17
                                          788
              00b3 1403  ld   $03,y       789   ld(hi('REENTER'),Y)             #15 slot 0xb3
              00b4 e0cb  jmp  y,$cb       790   jmp(Y,'REENTER')                #16
              00b5 00f6  ld   $f6         791   ld(-20/2)                       #17
                                          792
                                          793   label('SYS_SpritePattern_vX_134')
SYS_SpritePattern_vX_134:
              00b6 141e  ld   $1e,y       794   ld(hi('sys_SpritePattern'),Y)   #15 slot 0xb6
              00b7 e000  jmp  y,$00       795   jmp(Y,'sys_SpritePattern')      #16
              00b8 1124  ld   [$24],x     796   ld([sysArgs+0],X)               #17 src.lo
                                          797
                                          798   label('SYS_SortUint8Array_vX_52')
SYS_SortUint8Array_vX_52:
              00b9 141a  ld   $1a,y       799   ld(hi('sys_SortUint8Array'),Y)  #15 slot 0xb9
              00ba e00b  jmp  y,$0b       800   jmp(Y,'sys_SortUint8Array')     #16
              00bb 1525  ld   [$25],y     801   ld([sysArgs+1],Y)               #17 array pointer is in sysArgs0
                                          802
                                          803   label('SYS_SortSprites_vX_62')
SYS_SortSprites_vX_62:
              00bc 141c  ld   $1c,y       804   ld(hi('sys_SortSprites'),Y)     #15 slot 0xbc
              00bd e000  jmp  y,$00       805   jmp(Y,'sys_SortSprites')        #16
              00be 1525  ld   [$25],y     806   ld([sysArgs+1],Y)               #17 array pointer is in sysArgs0
                                          807
                                          808   label('SYS_SortViaIndices_vX_44')
SYS_SortViaIndices_vX_44:
              00bf 141a  ld   $1a,y       809   ld(hi('sys_SortViaIndices'),Y)  #15 slot 0xbf
              00c0 e052  jmp  y,$52       810   jmp(Y,'sys_SortViaIndices')     #16
              00c1 1525  ld   [$25],y     811   ld([sysArgs+1],Y)               #17 src pointer
                                          812
                                          813   label('SYS_MemCopyByte_vX_40')
SYS_MemCopyByte_vX_40:
              00c2 141b  ld   $1b,y       814   ld(hi('sys_MemCopyByte'),Y)     #15 slot 0xc2
              00c3 e000  jmp  y,$00       815   jmp(Y,'sys_MemCopyByte')        #16
              00c4 1525  ld   [$25],y     816   ld([sysArgs+1],Y)               #17 src pointer
                                          817
                                          818   label('SYS_MemCopyWord_vX_48')
SYS_MemCopyWord_vX_48:
              00c5 141b  ld   $1b,y       819   ld(hi('sys_MemCopyWord'),Y)     #15 slot 0xc5
              00c6 e018  jmp  y,$18       820   jmp(Y,'sys_MemCopyWord')        #16
              00c7 1525  ld   [$25],y     821   ld([sysArgs+1],Y)               #17 src pointer
                                          822
                                          823   label('SYS_MemCopyDWord_vX_58')
SYS_MemCopyDWord_vX_58:
              00c8 141b  ld   $1b,y       824   ld(hi('sys_MemCopyDWord'),Y)    #15 slot 0xc8
              00c9 e037  jmp  y,$37       825   jmp(Y,'sys_MemCopyDWord')       #16
              00ca 1525  ld   [$25],y     826   ld([sysArgs+1],Y)               #17 src pointer
                                          827
                                          828   label('SYS_DrawVLine_vX_66')
SYS_DrawVLine_vX_66:
              00cb 141d  ld   $1d,y       829   ld(hi('sys_DrawVLine'),Y)       #15 slot 0xcb
              00cc e085  jmp  y,$85       830   jmp(Y,'sys_DrawVLine')          #16
              00cd 1527  ld   [$27],y     831   ld([sysArgs+3],Y)               #17
                                          832
                                          833   label('SYS_DrawSprite_vX_132')
SYS_DrawSprite_vX_132:
              00ce 141d  ld   $1d,y       834   ld(hi('sys_DrawSprite'),Y)      #15 slot 0xce
              00cf e000  jmp  y,$00       835   jmp(Y,'sys_DrawSprite')         #16
              00d0 1182  ld   [$82],x     836   ld([0x82],X)                    #17 spriteX
                                          837
                                          838   label('SYS_DrawBullet_vX_140')
SYS_DrawBullet_vX_140:
              00d1 141e  ld   $1e,y       839   ld(hi('sys_DrawBullet'),Y)      #15 slot 0xd1
              00d2 e076  jmp  y,$76       840   jmp(Y,'sys_DrawBullet')         #16
              00d3 1182  ld   [$82],x     841   ld([0x82],X)                    #17, bulletX
                                          842
                                          843   label('SYS_CmpByteBounds_vX_54')
SYS_CmpByteBounds_vX_54:
              00d4 141f  ld   $1f,y       844   ld(hi('sys_CmpByteBounds'),Y)   #15 slot 0xd4
              00d5 e000  jmp  y,$00       845   jmp(Y,'sys_CmpByteBounds')      #16
              00d6 01bf  ld   [$bf]       846   ld([0xBF])                      #17 count
                                          847
                                          848   label('SYS_Divide_u168_vX_56')
SYS_Divide_u168_vX_56:
              00d7 141f  ld   $1f,y       849   ld(hi('sys_Divide_u168'),Y)     #15 slot 0xd7
              00d8 e05d  jmp  y,$5d       850   jmp(Y,'sys_Divide_u168')        #16
              00d9 0125  ld   [$25]       851   ld([sysArgs+1])                 #17
                                          852
                                          853   label('SYS_ReadPixel_vX_32')
SYS_ReadPixel_vX_32:
              00da 141b  ld   $1b,y       854   ld(hi('sys_ReadPixel'),Y)       #15 slot 0xda
              00db e060  jmp  y,$60       855   jmp(Y,'sys_ReadPixel')          #16
              00dc 0119  ld   [$19]       856   ld([vAC+1])                     #17 y
                                          857
                                          858   label('SYS_DrawPixel_vX_30')
SYS_DrawPixel_vX_30:
              00dd 141b  ld   $1b,y       859   ld(hi('sys_DrawPixel'),Y)       #15 slot 0xdd
              00de e06d  jmp  y,$6d       860   jmp(Y,'sys_DrawPixel')          #16
              00df 0125  ld   [$25]       861   ld([sysArgs+1])                 #17 y
                                          862
              00e0 1403  ld   $03,y       863   ld(hi('REENTER'),Y)             #15 slot 0xe0
              00e1 e0cb  jmp  y,$cb       864   jmp(Y,'REENTER')                #16
              00e2 00f6  ld   $f6         865   ld(-20/2)                       #17
                                          866
                                          867   #-----------------------------------------------------------------------
                                          868   # Extension SYS_ScanMemoryExt_vX_50
                                          869   #-----------------------------------------------------------------------
                                          870
                                          871   # SYS function for searching a byte in a 0 to 256 bytes string located
                                          872   # in a different bank. Doesn't cross page boundaries. Returns a
                                          873   # pointer to the target if found or zero. Temporarily deselects SPI
                                          874   # devices.
                                          875   #
                                          876   # sysArgs[0:1]            Start address
                                          877   # sysArgs[2], sysArgs[3]  Bytes to locate in the string
                                          878   # vACL                    Length of the string (0 means 256)
                                          879   # vACH                    Bit 6 and 7 contain the bank number
                                          880
                                          881   label('SYS_ScanMemoryExt_vX_50')
SYS_ScanMemoryExt_vX_50:
              00e3 1430  ld   $30,y       882   ld(hi('sys_ScanMemoryExt'),Y)   #15 slot 0xe3
              00e4 e027  jmp  y,$27       883   jmp(Y,'sys_ScanMemoryExt')      #16
              00e5 0119  ld   [$19]       884   ld([vAC+1])                     #17
                                          885
                                          886
                                          887   #-----------------------------------------------------------------------
                                          888   # Extension SYS_ScanMemory_vX_50
                                          889   #-----------------------------------------------------------------------
                                          890
                                          891   # SYS function for searching a byte in a 0 to 256 bytes string.
                                          892   # Returns a pointer to the target if found or zero.  Doesn't cross
                                          893   # page boundaries.
                                          894
                                          895   #
                                          896   # sysArgs[0:1]            Start address
                                          897   # sysArgs[2], sysArgs[3]  Bytes to locate in the string
                                          898   # vACL                    Length of the string (0 means 256)
                                          899
                                          900   label('SYS_ScanMemory_vX_50')
SYS_ScanMemory_vX_50:
              00e6 1430  ld   $30,y       901   ld(hi('sys_ScanMemory'),Y)      #15 slot 0xe6
              00e7 e000  jmp  y,$00       902   jmp(Y,'sys_ScanMemory')         #16
              00e8 1525  ld   [$25],y     903   ld([sysArgs+1],Y)               #17
                                          904
                                          905   #-----------------------------------------------------------------------
                                          906   # Extension SYS_CopyMemory_vX_80
                                          907   #-----------------------------------------------------------------------
                                          908
                                          909   # SYS function for copying 1..256 bytes
                                          910   #
                                          911   # sysArgs[0:1]    Destination address
                                          912   # sysArgs[2:3]    Source address
                                          913   # vAC[0]          Count (0 means 256)
                                          914   #
                                          915   # Doesn't cross page boundaries.
                                          916   # Overwrites sysArgs[4:7] and vLR.
                                          917
                                          918   label('SYS_CopyMemory_vX_80')
SYS_CopyMemory_vX_80:
              00e9 142f  ld   $2f,y       919   ld(hi('sys_CopyMemory'),Y)       # 15 slot 0xe9
              00ea e000  jmp  y,$00       920   jmp(Y, 'sys_CopyMemory')         # 16
              00eb 0118  ld   [$18]       921   ld([vAC])                        # 17
                                          922
                                          923   #-----------------------------------------------------------------------
                                          924   # Extension SYS_CopyMemoryExt_vX_100
                                          925   #-----------------------------------------------------------------------
                                          926
                                          927   # SYS function for copying 1..256 bytes across banks
                                          928   #
                                          929   # sysArgs[0:1]  Destination address
                                          930   # sysArgs[2:3]  Source address
                                          931   # vAC[0]        Count (0 means 256)
                                          932   # vAC[1]        Bits 7 and 6 contain the destination bank number,
                                          933   #               and bits 5 and 4 the source bank number.
                                          934   #
                                          935   # Doesn't cross page boundaries.
                                          936   # Overwrites sysArgs[4:7], vLR, and vTmp.
                                          937   # Temporarily deselect all SPI devices.
                                          938   # Should not call without expansion board
                                          939
                                          940   label('SYS_CopyMemoryExt_vX_100')
SYS_CopyMemoryExt_vX_100:
              00ec 142f  ld   $2f,y       941   ld(hi('sys_CopyMemoryExt'),Y)    # 15 slot 0xec
              00ed e078  jmp  y,$78       942   jmp(Y, 'sys_CopyMemoryExt')      # 16
              00ee 0119  ld   [$19]       943   ld([vAC+1])                      # 17
                                          944
                                          945   #-----------------------------------------------------------------------
                                          946   # Extension SYS_ReadRomDir_v5_80
                                          947   #-----------------------------------------------------------------------
                                          948
                                          949   # Get next entry from ROM file system. Use vAC=0 to get the first entry.
                                          950
                                          951   # Variables:
                                          952   #       vAC             Start address of current entry (inout)
                                          953   #       sysArgs[0:7]    File name, padded with zeroes (out)
                                          954
                                          955   label('SYS_ReadRomDir_v5_80')
SYS_ReadRomDir_v5_80:
              00ef 14e0  ld   $e0,y       956   ld(hi('sys_ReadRomDir'),Y)      #15
              00f0 e058  jmp  y,$58       957   jmp(Y,'sys_ReadRomDir')         #16
              00f1 0119  ld   [$19]       958   ld([vAC+1])                     #17
                                          959
              00f2 0200  nop              960   fillers(until=symbol('SYS_Out_22') & 255)
              00f3 0200  nop
                                          961
                                          962   #-----------------------------------------------------------------------
                                          963   # Extension SYS_Out_22
                                          964   #-----------------------------------------------------------------------
                                          965
                                          966   # Send byte to output port
                                          967   #
                                          968   # Variables:
                                          969   #       vAC
                                          970
                                          971   label('SYS_Out_22')
SYS_Out_22:   00f4 1924  ld   [$24],out   972   ld([sysArgs+0],OUT)             #15
              00f5 0200  nop              973   nop()                           #16
              00f6 1403  ld   $03,y       974   ld(hi('REENTER'),Y)             #17
              00f7 e0cb  jmp  y,$cb       975   jmp(Y,'REENTER')                #18
              00f8 00f5  ld   $f5         976   ld(-22/2)                       #19
                                          977
                                          978   #-----------------------------------------------------------------------
                                          979   # Extension SYS_In_24
                                          980   #-----------------------------------------------------------------------
                                          981
                                          982   # Read a byte from the input port
                                          983   #
                                          984   # Variables:
                                          985   #       vAC
                                          986
                                          987   label('SYS_In_24')
SYS_In_24:    00f9 c318  st   in,[$18]    988   st(IN, [vAC])                   #15
              00fa 0000  ld   $00         989   ld(0)                           #16
              00fb c219  st   [$19]       990   st([vAC+1])                     #17
              00fc 0200  nop              991   nop()                           #18
              00fd 1403  ld   $03,y       992   ld(hi('REENTER'),Y)             #19
              00fe e0cb  jmp  y,$cb       993   jmp(Y,'REENTER')                #20
              00ff 00f4  ld   $f4         994   ld(-24/2)                       #21
                                          995
                                          996   assert pc()&255 == 0
                                          997
                                          998   #-----------------------------------------------------------------------
                                          999   #
                                          1000  #  $0100 ROM page 1: Video loop vertical blank
                                          1001  #
                                          1002  #-----------------------------------------------------------------------
                                          1003  align(0x100, size=0x100)
                                          1004
                                          1005  # Video off mode (also no sound, serial, timer, blinkenlights, ...).
                                          1006  # For benchmarking purposes. This still has the overhead for the vTicks
                                          1007  # administration, time slice granularity etc.
                                          1008  label('videoZ')
                                          1009  videoZ = pc()
videoZ:       0100 1502  ld   [$02],y     1010  runVcpu(None, '---- novideo', returnTo=videoZ)
              0101 e0ff  jmp  y,$ff
              0102 007f  ld   $7f
                                          1011
                                          1012  label('startVideo')             # (Re)start of video signal from idle state
startVideo:   0103 00c0  ld   $c0         1013  ld(syncBits)
                                          1014
                                          1015  # Start of vertical blank interval
                                          1016  label('vBlankStart')
vBlankStart:  0104 c21f  st   [$1f]       1017  st([videoSync0])                #32 Start of vertical blank interval
              0105 0080  ld   $80         1018  ld(syncBits^hSync)              #33
              0106 c220  st   [$20]       1019  st([videoSync1])                #34
                                          1020
                                          1021  # Reset line counter before vCPU can see it
              0107 00b3  ld   $b3         1022  ld(videoYline0)                 #35
              0108 c209  st   [$09]       1023  st([videoY])                    #36
                                          1024
                                          1025  # Update frame count and [0x80] (4 cycles)
              0109 0001  ld   $01         1026  ld(1)                           #37 Reinitialize carry lookup, for robustness
              010a c280  st   [$80]       1027  st([0x80])                      #38
              010b 810e  adda [$0e]       1028  adda([frameCount])              #39 Frame counter
              010c c20e  st   [$0e]       1029  st([frameCount])                #40
                                          1030
                                          1031  # Mix entropy (11 cycles)
              010d 6107  xora [$07]       1032  xora([entropy+1])               #41 Mix entropy
              010e 610f  xora [$0f]       1033  xora([serialRaw])               #42 Mix in serial input
              010f 8106  adda [$06]       1034  adda([entropy+0])               #43
              0110 c206  st   [$06]       1035  st([entropy+0])                 #44
              0111 8108  adda [$08]       1036  adda([entropy+2])               #45 Some hidden state
              0112 c208  st   [$08]       1037  st([entropy+2])                 #46
              0113 e816  blt  $0116       1038  bmi(pc()+3)                     #47
              0114 fc17  bra  $0117       1039  bra(pc()+3)                     #48
              0115 6053  xora $53         1040  xora(64+16+2+1)                 #49
              0116 606c  xora $6c         1041  xora(64+32+8+4)                 #49(!)
              0117 8107  adda [$07]       1042  adda([entropy+1])               #50
              0118 c207  st   [$07]       1043  st([entropy+1])                 #51
                                          1044
                                          1045  # LED sequencer (18 cycles)
              0119 012d  ld   [$2d]       1046  ld([ledTimer])                  #52 Blinkenlight sequencer
              011a f01d  beq  $011d       1047  beq(pc()+3)                     #53
              011b fc1e  bra  $011e       1048  bra(pc()+3)                     #54
              011c a001  suba $01         1049  suba(1)                         #55
              011d 012f  ld   [$2f]       1050  ld([ledTempo])                  #55(!)
              011e c22d  st   [$2d]       1051  st([ledTimer])                  #56
              011f f022  beq  $0122       1052  beq(pc()+3)                     #57
              0120 fc23  bra  $0123       1053  bra(pc()+3)                     #58
              0121 0000  ld   $00         1054  ld(0)                           #59 Don't advance state
              0122 0001  ld   $01         1055  ld(1)                           #59(!) Advance state when timer passes through 0
              0123 812e  adda [$2e]       1056  adda([ledState_v2])             #60
              0124 ec27  bne  $0127       1057  bne(pc()+3)                     #61
              0125 fc28  bra  $0128       1058  bra(pc()+3)                     #62
              0126 00e8  ld   $e8         1059  ld(-24)                         #63 State 0 becomes -24, start of sequence
              0127 e42c  bgt  .leds#65    1060  bgt('.leds#65')                 #63(!) Catch the stopped state (>0)
              0128 c22e  st   [$2e]       1061  st([ledState_v2])               #64
              0129 8048  adda $48         1062  adda('.leds#69')                #65
              012a fe00  bra  ac          1063  bra(AC)                         #66 Jump to lookup table
              012b fc48  bra  .leds#69    1064  bra('.leds#69')                 #67 Single-instruction subroutine
                                          1065
                                          1066  label('.leds#65')
.leds#65:     012c 000f  ld   $0f         1067  ld(0x0f)                        #65 Maintain stopped state
              012d c22e  st   [$2e]       1068  st([ledState_v2])               #66
              012e fc48  bra  .leds#69    1069  bra('.leds#69')                 #67
              012f 2114  anda [$14]       1070  anda([xoutMask])                #68 Always clear sound bits (this is why AC=0x0f)
                                          1071
              0130 000f  ld   $0f         1072  ld(0b1111)                      #68 LEDs |****| offset -24 Low 4 bits are the LED output
              0131 0007  ld   $07         1073  ld(0b0111)                      #68 LEDs |***O|
              0132 0003  ld   $03         1074  ld(0b0011)                      #68 LEDs |**OO|
              0133 0001  ld   $01         1075  ld(0b0001)                      #68 LEDs |*OOO|
              0134 0002  ld   $02         1076  ld(0b0010)                      #68 LEDs |O*OO|
              0135 0004  ld   $04         1077  ld(0b0100)                      #68 LEDs |OO*O|
              0136 0008  ld   $08         1078  ld(0b1000)                      #68 LEDs |OOO*|
              0137 0004  ld   $04         1079  ld(0b0100)                      #68 LEDs |OO*O|
              0138 0002  ld   $02         1080  ld(0b0010)                      #68 LEDs |O*OO|
              0139 0001  ld   $01         1081  ld(0b0001)                      #68 LEDs |*OOO|
              013a 0003  ld   $03         1082  ld(0b0011)                      #68 LEDs |**OO|
              013b 0007  ld   $07         1083  ld(0b0111)                      #68 LEDs |***O|
              013c 000f  ld   $0f         1084  ld(0b1111)                      #68 LEDs |****|
              013d 000e  ld   $0e         1085  ld(0b1110)                      #68 LEDs |O***|
              013e 000c  ld   $0c         1086  ld(0b1100)                      #68 LEDs |OO**|
              013f 0008  ld   $08         1087  ld(0b1000)                      #68 LEDs |OOO*|
              0140 0004  ld   $04         1088  ld(0b0100)                      #68 LEDs |OO*O|
              0141 0002  ld   $02         1089  ld(0b0010)                      #68 LEDs |O*OO|
              0142 0001  ld   $01         1090  ld(0b0001)                      #68 LEDs |*OOO|
              0143 0002  ld   $02         1091  ld(0b0010)                      #68 LEDs |O*OO|
              0144 0004  ld   $04         1092  ld(0b0100)                      #68 LEDs |OO*O|
              0145 0008  ld   $08         1093  ld(0b1000)                      #68 LEDs |OOO*|
              0146 000c  ld   $0c         1094  ld(0b1100)                      #68 LEDs |OO**|
              0147 000e  ld   $0e         1095  ld(0b1110)                      #68 LEDs |O***| offset -1
                                          1096  label('.leds#69')
.leds#69:     0148 c214  st   [$14]       1097  st([xoutMask])                  #69 Sound bits will be re-enabled below
              0149 0010  ld   $10         1098  ld(vPulse*2)                    #70 vPulse default length when not modulated
              014a c20d  st   [$0d]       1099  st([videoPulse])                #71
                                          1100
                                          1101  # When the total number of scan lines per frame is not an exact multiple of the
                                          1102  # (4) channels, there will be an audible discontinuity if no measure is taken.
                                          1103  # This static noise can be suppressed by swallowing the first `lines mod 4'
                                          1104  # partial samples after transitioning into vertical blank. This is easiest if
                                          1105  # the modulo is 0 (do nothing), 1 (reset sample when entering the last visible
                                          1106  # scan line), or 2 (reset sample while in the first blank scan line). For the
                                          1107  # last case there is no solution yet: give a warning.
                                          1108  extra = 0
                                          1109  if soundDiscontinuity == 2:
                                          1110    st(sample, [sample])          # Sound continuity
                                          1111    extra += 1
                                          1112  if soundDiscontinuity > 2:
                                          1113    highlight('Warning: sound discontinuity not suppressed')
                                          1114
                                          1115  # vCPU interrupt
              014b 010e  ld   [$0e]       1116  ld([frameCount])                #72
                                          1117  beq('vBlankFirst#75')           #73
              014c f052  beq  vBlankFirst#75
                                          1118
              014d 0055  ld   $55         1119  runVcpu(186-74-extra,           #74 Application cycles (scan line 0)
              014e c21e  st   [$1e]
              014f 1502  ld   [$02],y
              0150 e0ff  jmp  y,$ff
              0151 0022  ld   $22
                                          1120      '---D line 0 no timeout',
                                          1121      returnTo='vBlankFirst#186')
                                          1122
                                          1123  label('vBlankFirst#75')
vBlankFirst#75:
              0152 1412  ld   $12,y       1124  ld(hi('vBlankFirst#78'),Y)      #75
              0153 e000  jmp  y,$00       1125  jmp(Y,'vBlankFirst#78')         #76
              0154 1401  ld   $01,y       1126  ld(hi(vIRQ_v5),Y)               #77
                                          1127  label('vBlankFirst#186')
                                          1128
                                          1129  # Mitigation for rogue channelMask (3 cycles)
vBlankFirst#186:
              0155 0121  ld   [$21]       1130  ld([channelMask])               #186 Normalize channelMask, for robustness
              0156 20fb  anda $fb         1131  anda(0b11111011)                #187
              0157 c221  st   [$21]       1132  st([channelMask])               #188
                                          1133
                                          1134  # Sound on/off (6 cycles)
              0158 012c  ld   [$2c]       1135  ld([soundTimer])                #189 Sound on/off
              0159 ec5c  bne  $015c       1136  bne(pc()+3)                     #190
              015a fc5d  bra  $015d       1137  bra(pc()+3)                     #191
              015b 0000  ld   $00         1138  ld(0)                           #192 Keeps sound unchanged (should be off here)
              015c 00f0  ld   $f0         1139  ld(0xf0)                        #192(!) Turns sound back on
              015d 4114  ora  [$14]       1140  ora([xoutMask])                 #193
              015e c214  st   [$14]       1141  st([xoutMask])                  #194
                                          1142
                                          1143  # Sound timer count down (5 cycles)
              015f 012c  ld   [$2c]       1144  ld([soundTimer])                #195 Sound timer
              0160 f063  beq  $0163       1145  beq(pc()+3)                     #196
              0161 fc64  bra  $0164       1146  bra(pc()+3)                     #197
              0162 a001  suba $01         1147  suba(1)                         #198
              0163 0000  ld   $00         1148  ld(0)                           #198
              0164 c22c  st   [$2c]       1149  st([soundTimer])                #199
                                          1150
              0165 191f  ld   [$1f],out   1151  ld([videoSync0],OUT)            #0 <New scan line start>
                                          1152  label('sound1')
sound1:       0166 0105  ld   [$05]       1153  ld([channel])                   #1 Advance to next sound channel
              0167 2121  anda [$21]       1154  anda([channelMask])             #2
              0168 8001  adda $01         1155  adda(1)                         #3
              0169 1920  ld   [$20],out   1156  ld([videoSync1],OUT)            #4 Start horizontal pulse
              016a d605  st   [$05],y     1157  st([channel],Y)                 #5
              016b 007f  ld   $7f         1158  ld(0x7f)                        #6 Update sound channel
              016c 29fe  anda [y,$fe]     1159  anda([Y,oscL])                  #7
              016d 89fc  adda [y,$fc]     1160  adda([Y,keyL])                  #8
              016e cafe  st   [y,$fe]     1161  st([Y,oscL])                    #9
              016f 3080  anda $80,x       1162  anda(0x80,X)                    #10
              0170 0500  ld   [x]         1163  ld([X])                         #11
              0171 89ff  adda [y,$ff]     1164  adda([Y,oscH])                  #12
              0172 89fd  adda [y,$fd]     1165  adda([Y,keyH])                  #13
              0173 caff  st   [y,$ff]     1166  st([Y,oscH])                    #14
              0174 20fc  anda $fc         1167  anda(0xfc)                      #15
              0175 69fb  xora [y,$fb]     1168  xora([Y,wavX])                  #16
              0176 1200  ld   ac,x        1169  ld(AC,X)                        #17
              0177 09fa  ld   [y,$fa]     1170  ld([Y,wavA])                    #18
              0178 1407  ld   $07,y       1171  ld(soundTable>>8,Y)             #19
              0179 8d00  adda [y,x]       1172  adda([Y,X])                     #20
              017a e87d  blt  $017d       1173  bmi(pc()+3)                     #21
              017b fc7e  bra  $017e       1174  bra(pc()+3)                     #22
              017c 203f  anda $3f         1175  anda(63)                        #23
              017d 003f  ld   $3f         1176  ld(63)                          #23(!)
              017e 8103  adda [$03]       1177  adda([sample])                  #24
              017f c203  st   [$03]       1178  st([sample])                    #25
                                          1179
              0180 0113  ld   [$13]       1180  ld([xout])                      #26 Gets copied to XOUT
              0181 1412  ld   $12,y       1181  ld(hi('vBlankLast#34'),Y)       #27 Prepare jumping out of page in last line
              0182 191f  ld   [$1f],out   1182  ld([videoSync0],OUT)            #28 End horizontal pulse
                                          1183
                                          1184  # Count through the vertical blank interval until its last scan line
              0183 0109  ld   [$09]       1185  ld([videoY])                    #29
                                          1186  bpl('.vBlankLast#32')           #30
              0184 f4b1  bge  .vBlankLast#32
              0185 8002  adda $02         1187  adda(2)                         #31
              0186 c209  st   [$09]       1188  st([videoY])                    #32
                                          1189
                                          1190  # Determine if we're in the vertical sync pulse
              0187 a0bd  suba $bd         1191  suba(1-2*(vBack+vPulse-1))      #33 Prepare sync values
              0188 ec8d  bne  .prepSync36 1192  bne('.prepSync36')              #34 Tests for start of vPulse
              0189 a10d  suba [$0d]       1193  suba([videoPulse])              #35
              018a 0040  ld   $40         1194  ld(syncBits^vSync)              #36 Entering vertical sync pulse
              018b fc92  bra  .prepSync39 1195  bra('.prepSync39')              #37
              018c c21f  st   [$1f]       1196  st([videoSync0])                #38
                                          1197  label('.prepSync36')
.prepSync36:  018d ec91  bne  .prepSync38 1198  bne('.prepSync38')              #36 Tests for end of vPulse
              018e 00c0  ld   $c0         1199  ld(syncBits)                    #37
              018f fc93  bra  .prepSync40 1200  bra('.prepSync40')              #38 Entering vertical back porch
              0190 c21f  st   [$1f]       1201  st([videoSync0])                #39
                                          1202  label('.prepSync38')
.prepSync38:  0191 011f  ld   [$1f]       1203  ld([videoSync0])                #38 Load current value
                                          1204  label('.prepSync39')
.prepSync39:  0192 0200  nop              1205  nop()                           #39
                                          1206  label('.prepSync40')
.prepSync40:  0193 6040  xora $40         1207  xora(hSync)                     #40 Precompute, as during the pulse there is no time
              0194 c220  st   [$20]       1208  st([videoSync1])                #41
                                          1209
                                          1210  # Capture the serial input before the '595 shifts it out
              0195 0109  ld   [$09]       1211  ld([videoY])                    #42 Capture serial input
              0196 60cf  xora $cf         1212  xora(1-2*(vBack-1-1))           #43 Exactly when the 74HC595 has captured all 8 controller bits
              0197 ec9a  bne  $019a       1213  bne(pc()+3)                     #44
              0198 fc9b  bra  $019b       1214  bra(pc()+3)                     #45
              0199 c30f  st   in,[$0f]    1215  st(IN, [serialRaw])             #46
              019a c000  st   $00,[$00]   1216  st(0,[0])                       #46(!) Reinitialize carry lookup, for robustness
                                          1217
                                          1218  # Update [xout] with the next sound sample every 4 scan lines.
                                          1219  # Keep doing this on 'videoC equivalent' scan lines in vertical blank.
              019b 0109  ld   [$09]       1220  ld([videoY])                    #47
              019c 2006  anda $06         1221  anda(6)                         #48
                                          1222  beq('vBlankSample')             #49
              019d f0a6  beq  vBlankSample
              019e 0103  ld   [$03]       1223  ld([sample])                    #50
                                          1224
                                          1225  label('vBlankNormal')
vBlankNormal: 019f 00a4  ld   $a4         1226  runVcpu(199-51, 'AB-D line 1-36')#51 Application cycles (vBlank scan lines without sound sample update)
              01a0 c21e  st   [$1e]
              01a1 1502  ld   [$02],y
              01a2 e0ff  jmp  y,$ff
              01a3 0034  ld   $34
              01a4 fc66  bra  sound1      1227  bra('sound1')                   #199
              01a5 191f  ld   [$1f],out   1228  ld([videoSync0],OUT)            #0 <New scan line start>
                                          1229
                                          1230  label('vBlankSample')
vBlankSample: 01a6 400f  ora  $0f         1231  ora(0x0f)                       #51 New sound sample is ready
              01a7 2114  anda [$14]       1232  anda([xoutMask])                #52
              01a8 c213  st   [$13]       1233  st([xout])                      #53
              01a9 c003  st   $03,[$03]   1234  st(sample, [sample])            #54 Reset for next sample
                                          1235
              01aa 00af  ld   $af         1236  runVcpu(199-55, '--C- line 3-39')#55 Application cycles (vBlank scan lines with sound sample update)
              01ab c21e  st   [$1e]
              01ac 1502  ld   [$02],y
              01ad e0ff  jmp  y,$ff
              01ae 0032  ld   $32
              01af fc66  bra  sound1      1237  bra('sound1')                   #199
              01b0 191f  ld   [$1f],out   1238  ld([videoSync0],OUT)            #0 <New scan line start>
                                          1239
                                          1240  #-----------------------------------------------------------------------
                                          1241
                                          1242  label('.vBlankLast#32')
.vBlankLast#32:
              01b1 e032  jmp  y,$32       1243  jmp(Y,'vBlankLast#34')          #32 Jump out of page for space reasons
                                          1244  #assert hi(controllerType) == hi(pc()) # Assume these share the high address
              01b2 1401  ld   $01,y       1245  ld(hi(pc()),Y)                  #33
                                          1246
                                          1247  label('vBlankLast#52')
                                          1248
                                          1249  # Respond to reset button (14 cycles)
                                          1250  # - ResetTimer decrements as long as just [Start] is pressed down
                                          1251  # - Reaching 0 (normal) or 128 (extended) triggers the soft reset sequence
                                          1252  # - Initial value is 128 (or 255 at boot), first decrement, then check
                                          1253  # - This starts vReset -> SYS_Reset_88 -> SYS_Exec_88 -> Reset.gcl -> Main.gcl
                                          1254  # - Main.gcl then recognizes extended presses if resetTimer is 0..127 ("paasei")
                                          1255  # - This requires a full cycle (4s) in the warm boot scenario
                                          1256  # - Or a half cycle (2s) when pressing [Select] down during hard reset
                                          1257  # - This furthermore requires >=1 frame (and <=128) to have passed between
                                          1258  #   reaching 128 and getting through Reset and the start of Main, while [Start]
                                          1259  #   was still pressed so the count reaches <128. Two reasonable expectations.
                                          1260  # - The unintended power-up scenarios of ROMv1 (pulling SER_DATA low, or
                                          1261  #   pressing [Select] together with another button) now don't trigger anymore.
                                          1262
vBlankLast#52:
              01b3 0111  ld   [$11]       1263  ld([buttonState])               #52 Check [Start] for soft reset
              01b4 60ef  xora $ef         1264  xora(~buttonStart)              #53
              01b5 ecbe  bne  .restart#56 1265  bne('.restart#56')              #54
              01b6 0112  ld   [$12]       1266  ld([resetTimer])                #55 As long as button pressed
              01b7 a001  suba $01         1267  suba(1)                         #56 ... count down the timer
              01b8 c212  st   [$12]       1268  st([resetTimer])                #57
              01b9 207f  anda $7f         1269  anda(127)                       #58
              01ba f0c6  beq  .restart#61 1270  beq('.restart#61')              #59 Reset at 0 (normal 2s) or 128 (extended 4s)
              01bb 00ee  ld   $ee         1271  ld((vReset&255)-2)              #60 Start force reset when hitting 0
              01bc fcc5  bra  .restart#63 1272  bra('.restart#63')              #61 ... otherwise do nothing yet
              01bd fcc4  bra  .restart#64 1273  bra('.restart#64')              #62
                                          1274  label('.restart#56')
.restart#56:  01be 0001  ld   $01         1275  wait(62-56)                     #56
              01bf ecbf  bne  $01bf
              01c0 a001  suba $01
              01c1 0200  nop
              01c2 0080  ld   $80         1276  ld(128)                         #62 Not pressed, reset the timer
              01c3 c212  st   [$12]       1277  st([resetTimer])                #63
                                          1278  label('.restart#64')
.restart#64:  01c4 fccb  bra  .restart#66 1279  bra('.restart#66')              #64
                                          1280  label('.restart#63')
.restart#63:  01c5 0200  nop              1281  nop()                           #63,65
                                          1282  label('.restart#61')
.restart#61:  01c6 c216  st   [$16]       1283  st([vPC])                       #61 Point vPC at vReset
              01c7 0001  ld   $01         1284  ld(vReset>>8)                   #62
              01c8 c217  st   [$17]       1285  st([vPC+1])                     #63
              01c9 0002  ld   $02         1286  ld(hi('ENTER'))                 #64 Set active interpreter to vCPU
              01ca c202  st   [$02]       1287  st([vCpuSelect])                #65
                                          1288  label('.restart#66')
                                          1289
                                          1290  # Switch video mode when (only) select is pressed (16 cycles)
                                          1291  # XXX We could make this a vCPU interrupt
.restart#66:  01cb 0111  ld   [$11]       1292  ld([buttonState])               #66 Check [Select] to switch modes
              01cc 60df  xora $df         1293  xora(~buttonSelect)             #67 Only trigger when just [Select] is pressed
              01cd ece2  bne  .select#70  1294  bne('.select#70')               #68
              01ce 010b  ld   [$0b]       1295  ld([videoModeC])                #69
              01cf e8d5  blt  .select#72  1296  bmi('.select#72')               #70 Branch when line C is off
              01d0 010a  ld   [$0a]       1297  ld([videoModeB])                #71 Rotate: Off->D->B->C
              01d1 c20b  st   [$0b]       1298  st([videoModeC])                #72
              01d2 010c  ld   [$0c]       1299  ld([videoModeD])                #73
              01d3 c20a  st   [$0a]       1300  st([videoModeB])                #74
              01d4 fcda  bra  .select#77  1301  bra('.select#77')               #75
                                          1302  label('.select#72')
.select#72:   01d5 00f6  ld   $f6         1303  ld('nopixels')                  #72,76
              01d6 000a  ld   $0a         1304  ld('pixels')                    #73 Reset: On->D->B->C
              01d7 c20b  st   [$0b]       1305  st([videoModeC])                #74
              01d8 c20a  st   [$0a]       1306  st([videoModeB])                #75
              01d9 0200  nop              1307  nop()                           #76
                                          1308  label('.select#77')
.select#77:   01da c20c  st   [$0c]       1309  st([videoModeD])                #77
              01db 0035  ld   $35         1310  wait(188-78)                    #78 Don't waste code space expanding runVcpu here
              01dc ecdc  bne  $01dc
              01dd a001  suba $01
              01de 0200  nop
                                          1311  # AC==255 now
              01df c211  st   [$11]       1312  st([buttonState])               #188
                                          1313  bra('vBlankEnd#191')            #189
              01e0 fcea  bra  vBlankEnd#191
              01e1 0000  ld   $00         1314  ld(0)                           #190
                                          1315  label('.select#70')
                                          1316
                                          1317  # Mitigation of runaway channel variable
.select#70:   01e2 0105  ld   [$05]       1318  ld([channel])                   #70 Normalize channel, for robustness
              01e3 2003  anda $03         1319  anda(0b00000011)                #71
              01e4 c205  st   [$05]       1320  st([channel])                   #72 Stop wild channel updates
                                          1321
              01e5 00ea  ld   $ea         1322  runVcpu(191-73, '---D line 40') #73 Application cycles (scan line 40)
              01e6 c21e  st   [$1e]
              01e7 1502  ld   [$02],y
              01e8 e0ff  jmp  y,$ff
              01e9 0025  ld   $25
                                          1323
                                          1324  # AC==0 now
                                          1325  label('vBlankEnd#191')
vBlankEnd#191:
              01ea 1401  ld   $01,y       1326  ld(videoTop_v5>>8,Y)            #191
              01eb 09f9  ld   [y,$f9]     1327  ld([Y,videoTop_v5])             #192
              01ec c209  st   [$09]       1328  st([videoY])                    #193
              01ed c21f  st   [$1f]       1329  st([frameX])                    #194
              01ee ecf1  bne  $01f1       1330  bne(pc()+3)                     #195
              01ef fcf2  bra  $01f2       1331  bra(pc()+3)                     #196
              01f0 0001  ld   $01         1332  ld('videoA')                    #197
              01f1 00ec  ld   $ec         1333  ld('videoF')                    #197(!)
              01f2 c20d  st   [$0d]       1334  st([nextVideo])                 #198
              01f3 0105  ld   [$05]       1335  ld([channel])                   #199 Advance to next sound channel
              01f4 2121  anda [$21]       1336  anda([channelMask])             #0 <New scan line start>
              01f5 8001  adda $01         1337  adda(1)                         #1
              01f6 1402  ld   $02,y       1338  ld(hi('sound2'),Y)              #2
              01f7 e0b1  jmp  y,$b1       1339  jmp(Y,'sound2')                 #3
              01f8 1880  ld   $80,out     1340  ld(syncBits^hSync,OUT)          #4 Start horizontal pulse
                                          1341
              01f9 0200  nop              1342  fillers(until=0xff)
              01fa 0200  nop
              01fb 0200  nop
              * 6 times
                                          1343
                                          1344  #-----------------------------------------------------------------------
                                          1345  # Return point for vCPU slices during visible screen area
                                          1346  #-----------------------------------------------------------------------
                                          1347
                                          1348  assert pc() == 0x1ff            # Enables runVcpu() to re-enter into the next page
              01ff fcae  bra  sound3      1349  bra('sound3')                   #200,0 <New scan line start>
                                          1350
                                          1351  #-----------------------------------------------------------------------
                                          1352  #
                                          1353  #  $0200 ROM page 2: Video loop visible scanlines
                                          1354  #
                                          1355  #-----------------------------------------------------------------------
                                          1356  align(0x100, size=0x100)
              0200 0105  ld   [$05]       1357  ld([channel])                   #1 Advance to next sound channel
                                          1358
                                          1359  # Back porch A: first of 4 repeated scan lines
                                          1360  # - Fetch next Yi and store it for retrieval in the next scan lines
                                          1361  # - Calculate Xi from dXi, but there is no cycle time left to store it as well
                                          1362  label('videoA')
videoA:       0201 00ca  ld   $ca         1363  ld('videoB')                    #29 1st scanline of 4 (always visible)
              0202 c20d  st   [$0d]       1364  st([nextVideo])                 #30
              0203 1401  ld   $01,y       1365  ld(videoTable>>8,Y)             #31
              0204 1109  ld   [$09],x     1366  ld([videoY],X)                  #32
              0205 0d00  ld   [y,x]       1367  ld([Y,X])                       #33
              0206 de00  st   [y,x++]     1368  st([Y,Xpp])                     #34 Just X++
              0207 c220  st   [$20]       1369  st([frameY])                    #35
              0208 0d00  ld   [y,x]       1370  ld([Y,X])                       #36
              0209 911f  adda [$1f],x     1371  adda([frameX],X)                #37
                                          1372  label('pixels')
pixels:       020a 1520  ld   [$20],y     1373  ld([frameY],Y)                  #38
              020b 00c0  ld   $c0         1374  ld(syncBits)                    #39
                                          1375
                                          1376  # Stream 160 pixels from memory location <Yi,Xi> onwards
                                          1377  # Superimpose the sync signal bits to be robust against misprogramming
                                          1378  for i in range(qqVgaWidth):
              020c 5d00  ora  [y,x++],out 1379    ora([Y,Xpp],OUT)              #40-199 Pixel burst
              020d 5d00  ora  [y,x++],out
              020e 5d00  ora  [y,x++],out
              * 160 times
              02ac 18c0  ld   $c0,out     1380  ld(syncBits,OUT)                #0 <New scan line start> Back to black
                                          1381
                                          1382  # Front porch
              02ad 0105  ld   [$05]       1383  ld([channel])                   #1 Advance to next sound channel
                                          1384  label('sound3')                 # Return from vCPU interpreter
sound3:       02ae 2121  anda [$21]       1385  anda([channelMask])             #2
              02af 8001  adda $01         1386  adda(1)                         #3
              02b0 1880  ld   $80,out     1387  ld(syncBits^hSync,OUT)          #4 Start horizontal pulse
                                          1388
                                          1389  # Horizontal sync and sound channel update for scanlines outside vBlank
                                          1390  label('sound2')
sound2:       02b1 d605  st   [$05],y     1391  st([channel],Y)                 #5
              02b2 007f  ld   $7f         1392  ld(0x7f)                        #6
              02b3 29fe  anda [y,$fe]     1393  anda([Y,oscL])                  #7
              02b4 89fc  adda [y,$fc]     1394  adda([Y,keyL])                  #8
              02b5 cafe  st   [y,$fe]     1395  st([Y,oscL])                    #9
              02b6 3080  anda $80,x       1396  anda(0x80,X)                    #10
              02b7 0500  ld   [x]         1397  ld([X])                         #11
              02b8 89ff  adda [y,$ff]     1398  adda([Y,oscH])                  #12
              02b9 89fd  adda [y,$fd]     1399  adda([Y,keyH])                  #13
              02ba caff  st   [y,$ff]     1400  st([Y,oscH] )                   #14
              02bb 20fc  anda $fc         1401  anda(0xfc)                      #15
              02bc 69fb  xora [y,$fb]     1402  xora([Y,wavX])                  #16
              02bd 1200  ld   ac,x        1403  ld(AC,X)                        #17
              02be 09fa  ld   [y,$fa]     1404  ld([Y,wavA])                    #18
              02bf 1407  ld   $07,y       1405  ld(soundTable>>8,Y)             #19
              02c0 8d00  adda [y,x]       1406  adda([Y,X])                     #20
              02c1 e8c4  blt  $02c4       1407  bmi(pc()+3)                     #21
              02c2 fcc5  bra  $02c5       1408  bra(pc()+3)                     #22
              02c3 203f  anda $3f         1409  anda(63)                        #23
              02c4 003f  ld   $3f         1410  ld(63)                          #23(!)
              02c5 8103  adda [$03]       1411  adda([sample])                  #24
              02c6 c203  st   [$03]       1412  st([sample])                    #25
                                          1413
              02c7 0113  ld   [$13]       1414  ld([xout])                      #26 Gets copied to XOUT
              02c8 fd0d  bra  [$0d]       1415  bra([nextVideo])                #27
              02c9 18c0  ld   $c0,out     1416  ld(syncBits,OUT)                #28 End horizontal pulse
                                          1417
                                          1418  # Back porch B: second of 4 repeated scan lines
                                          1419  # - Recompute Xi from dXi and store for retrieval in the next scan lines
                                          1420  label('videoB')
videoB:       02ca 00d3  ld   $d3         1421  ld('videoC')                    #29 2nd scanline of 4
              02cb c20d  st   [$0d]       1422  st([nextVideo])                 #30
              02cc 1401  ld   $01,y       1423  ld(videoTable>>8,Y)             #31
              02cd 0109  ld   [$09]       1424  ld([videoY])                    #32
              02ce 9001  adda $01,x       1425  adda(1,X)                       #33
              02cf 011f  ld   [$1f]       1426  ld([frameX])                    #34
              02d0 8d00  adda [y,x]       1427  adda([Y,X])                     #35
              02d1 fd0a  bra  [$0a]       1428  bra([videoModeB])               #36
              02d2 d21f  st   [$1f],x     1429  st([frameX],X)                  #37 Store in RAM and X
                                          1430
                                          1431  # Back porch C: third of 4 repeated scan lines
                                          1432  # - Nothing new to for video do as Yi and Xi are known,
                                          1433  # - This is the time to emit and reset the next sound sample
                                          1434  label('videoC')
videoC:       02d3 00dc  ld   $dc         1435  ld('videoD')                    #29 3rd scanline of 4
              02d4 c20d  st   [$0d]       1436  st([nextVideo])                 #30
              02d5 0103  ld   [$03]       1437  ld([sample])                    #31 New sound sample is ready (didn't fit in the audio loop)
              02d6 400f  ora  $0f         1438  ora(0x0f)                       #32
              02d7 2114  anda [$14]       1439  anda([xoutMask])                #33
              02d8 c213  st   [$13]       1440  st([xout])                      #34 Update [xout] with new sample (4 channels just updated)
              02d9 c003  st   $03,[$03]   1441  st(sample, [sample])            #35 Reset for next sample
              02da fd0b  bra  [$0b]       1442  bra([videoModeC])               #36
              02db 111f  ld   [$1f],x     1443  ld([frameX],X)                  #37
                                          1444
                                          1445  # Back porch D: last of 4 repeated scan lines
                                          1446  # - Calculate the next frame index
                                          1447  # - Decide if this is the last line or not
                                          1448  label('videoD')                 # Default video mode
videoD:       02dc 111f  ld   [$1f],x     1449  ld([frameX], X)                 #29 4th scanline of 4
              02dd 0109  ld   [$09]       1450  ld([videoY])                    #30
              02de a0ee  suba $ee         1451  suba((120-1)*2)                 #31
                                          1452  beq('.lastpixels#34')           #32
              02df f0e5  beq  .lastpixels#34
              02e0 80f0  adda $f0         1453  adda(120*2)                     #33 More pixel lines to go
              02e1 c209  st   [$09]       1454  st([videoY])                    #34
              02e2 0001  ld   $01         1455  ld('videoA')                    #35
              02e3 fd0c  bra  [$0c]       1456  bra([videoModeD])               #36
              02e4 c20d  st   [$0d]       1457  st([nextVideo])                 #37
                                          1458
                                          1459  label('.lastpixels#34')
                                          1460  if soundDiscontinuity == 1:
.lastpixels#34:
              02e5 c003  st   $03,[$03]   1461    st(sample, [sample])          #34 Sound continuity
                                          1462  else:
                                          1463    nop()                         #34
              02e6 00e9  ld   $e9         1464  ld('videoE')                    #35 No more pixel lines to go
              02e7 fd0c  bra  [$0c]       1465  bra([videoModeD])               #36
              02e8 c20d  st   [$0d]       1466  st([nextVideo])                 #37
                                          1467
                                          1468  # Back porch "E": after the last line
                                          1469  # - Go back and and enter vertical blank (program page 2)
                                          1470  label('videoE') # Exit visible area
videoE:       02e9 1401  ld   $01,y       1471  ld(hi('vBlankStart'),Y)         #29 Return to vertical blank interval
              02ea e004  jmp  y,$04       1472  jmp(Y,'vBlankStart')            #30
              02eb 00c0  ld   $c0         1473  ld(syncBits)                    #31
                                          1474
                                          1475  # Video mode that blacks out one or more pixel lines from the top of screen.
                                          1476  # This yields some speed, but also frees up screen memory for other purposes.
                                          1477  # Note: Sound output becomes choppier the more pixel lines are skipped
                                          1478  # Note: The vertical blank driver leaves 0x80 behind in [videoSync1]
                                          1479  label('videoF')
videoF:       02ec 0120  ld   [$20]       1480  ld([videoSync1])                #29 Completely black pixel line
              02ed 8080  adda $80         1481  adda(0x80)                      #30
              02ee d220  st   [$20],x     1482  st([videoSync1],X)              #31
              02ef 011f  ld   [$1f]       1483  ld([frameX])                    #32
              02f0 a500  suba [x]         1484  suba([X])                       #33 Decrements every two VGA scanlines
              02f1 f0f4  beq  .videoF#36  1485  beq('.videoF#36')               #34
              02f2 c21f  st   [$1f]       1486  st([frameX])                    #35
              02f3 fcf6  bra  nopixels    1487  bra('nopixels')                 #36
                                          1488  label('.videoF#36')
.videoF#36:   02f4 0001  ld   $01         1489  ld('videoA')                    #36,37 Transfer to visible screen area
              02f5 c20d  st   [$0d]       1490  st([nextVideo])                 #37
                                          1491  #
                                          1492  # Alternative for pixel burst: faster application mode
                                          1493  label('nopixels')
nopixels:     02f6 00ff  ld   $ff         1494  runVcpu(200-38, 'ABCD line 40-520',
              02f7 c21e  st   [$1e]
              02f8 1502  ld   [$02],y
              02f9 e0ff  jmp  y,$ff
              02fa 003b  ld   $3b
                                          1495    returnTo=0x1ff)               #38 Application interpreter (black scanlines)
                                          1496
                                          1497  #-----------------------------------------------------------------------
                                          1498  #
                                          1499  #  $0300 ROM page 3: Application interpreter primary page
                                          1500  #
                                          1501  #-----------------------------------------------------------------------
                                          1502
                                          1503  # Enter the timing-aware application interpreter (aka virtual CPU, vCPU)
                                          1504  #
                                          1505  # This routine will execute as many as possible instructions in the
                                          1506  # allotted time. When time runs out, it synchronizes such that the total
                                          1507  # duration matches the caller's request. Durations are counted in `ticks',
                                          1508  # which are multiples of 2 clock cycles.
                                          1509  #
                                          1510  # Synopsis: Use the runVcpu() macro as entry point
                                          1511
                                          1512  # We let 'ENTER' begin one word before the page boundary, for a bit extra
                                          1513  # precious space in the packed interpreter code page. Although ENTER's
                                          1514  # first instruction is bra() which normally doesn't cross page boundaries,
                                          1515  # in this case it will still jump into the right space, because branches
                                          1516  # from $xxFF land in the next page anyway.
                                          1517  while pc()&255 < 255:
              02fb 0200  nop              1518    nop()
              02fc 0200  nop
              02fd 0200  nop
              02fe 0200  nop
                                          1519  label('ENTER')
ENTER:        02ff fc03  bra  .next2      1520  bra('.next2')                   #0 Enter at '.next2' (so no startup overhead)
                                          1521  # --- Page boundary ---
                                          1522  align(0x100,size=0x100)
                                          1523  label('NEXTY')                  # Alternative for REENTER
NEXTY:        0300 1517  ld   [$17],y     1524  ld([vPC+1],Y)                   #1
                                          1525
                                          1526  # Fetch next instruction and execute it, but only if there are sufficient
                                          1527  # ticks left for the slowest instruction.
                                          1528  label('NEXT')
NEXT:         0301 8115  adda [$15]       1529  adda([vTicks])                  #0 Track elapsed ticks (actually counting down: AC<0)
              0302 e80b  blt  EXIT        1530  blt('EXIT')                     #1 Escape near time out
                                          1531  label('.next2')
.next2:       0303 c215  st   [$15]       1532  st([vTicks])                    #2
              0304 0116  ld   [$16]       1533  ld([vPC])                       #3 Advance vPC
              0305 8002  adda $02         1534  adda(2)                         #4
              0306 d216  st   [$16],x     1535  st([vPC],X)                     #5
              0307 0d00  ld   [y,x]       1536  ld([Y,X])                       #6 Fetch opcode (actually a branch target)
              0308 de00  st   [y,x++]     1537  st([Y,Xpp])                     #7 Just X++
              0309 fe00  bra  ac          1538  bra(AC)                         #8 Dispatch
              030a 0d00  ld   [y,x]       1539  ld([Y,X])                       #9 Prefetch operand
                                          1540
                                          1541  # Resync with video driver and transfer control
                                          1542  label('EXIT')
EXIT:         030b 800f  adda $0f         1543  adda(maxTicks)                  #3
                                          1544  label('RESYNC')
RESYNC:       030c e40c  bgt  RESYNC      1545  bgt(pc()&255)                   #4 Resync
              030d a001  suba $01         1546  suba(1)                         #5
              030e 1401  ld   $01,y       1547  ld(hi('vBlankStart'),Y)         #6
              030f e11e  jmp  y,[$1e]     1548  jmp(Y,[vReturn])                #7 To video driver
              0310 0000  ld   $00         1549  ld(0)                           #8 AC should be 0 already. Still..
                                          1550  assert vCPU_overhead ==          9
                                          1551
                                          1552  # pc = 0x0311, Opcode = 0x11
                                          1553  # Instruction LDWI: Load immediate word constant (vAC=D), 24 cycles
                                          1554  label('LDWI')
LDWI:         0311 1417  ld   $17,y       1555  ld(hi('ldwi#13'),Y)             #10
              0312 e000  jmp  y,$00       1556  jmp(Y,'ldwi#13')                #11
              0313 1517  ld   [$17],y     1557  ld([vPC+1],Y)                   #12
                                          1558
                                          1559  # pc = 0x0314, Opcode = 0x14
                                          1560  # Instruction DEC: Decrement byte var ([D]--), 22 cycles
                                          1561  label('DEC')
DEC:          0314 1416  ld   $16,y       1562  ld(hi('dec#13'),Y)              #10
              0315 e007  jmp  y,$07       1563  jmp(Y,'dec#13')                 #11
                                          1564  #dummy                          #12 Overlap
                                          1565  #
                                          1566  # pc = 0x0316, Opcode = 0x16
                                          1567  # Instruction MOVQB: Load a byte var with a small constant 0..255, 28 cycles
                                          1568  label('MOVQB')
MOVQB:        0316 1416  ld   $16,y       1569  ld(hi('movqb#13'),Y)            #10 #12
              0317 e061  jmp  y,$61       1570  jmp(Y,'movqb#13')               #11
                                          1571  #dummy                          #12 Overlap
                                          1572  #
                                          1573  # pc = 0x0318, Opcode = 0x18
                                          1574  # Instruction LSRB: Logical shift right on a byte var, 28 cycles
                                          1575  label('LSRB')
LSRB:         0318 1416  ld   $16,y       1576  ld(hi('lsrb#13'),Y)             #10 #12
              0319 e07e  jmp  y,$7e       1577  jmp(Y,'lsrb#13')                #11
                                          1578  #dummy                          #12 Overlap
                                          1579  #
                                          1580  # pc = 0x031a, Opcode = 0x1a
                                          1581  # Instruction LD: Load byte from zero page (vAC=[D]), 22 cycles
                                          1582  label('LD')
LD:           031a 1416  ld   $16,y       1583  ld(hi('ld#13'),Y)               #10 #12
              031b e00e  jmp  y,$0e       1584  jmp(Y,'ld#13')                  #11
                                          1585  #dummy                          #12 Overlap
                                          1586  #
                                          1587  # pc = 0x031c, Opcode = 0x1c
                                          1588  # Instruction LOKEQI: Loke immediate unsigned word into address contained in [vAC], 34 cycles
                                          1589  label('LOKEQI')
LOKEQI:       031c 142d  ld   $2d,y       1590  ld(hi('lokeqi#13'),Y)           #10 #12
              031d e0b4  jmp  y,$b4       1591  jmp(Y,'lokeqi#13')              #11
              031e c21d  st   [$1d]       1592  st([vTmp])                      #12 imm.1
                                          1593
                                          1594  # pc = 0x031f, Opcode = 0x1f
                                          1595  # Instruction CMPHS: Adjust high byte for signed compare (vACH=XXX), 28 cycles
                                          1596  label('CMPHS')
CMPHS:        031f 140b  ld   $0b,y       1597  ld(hi('cmphs#13'),Y)            #10
              0320 e0e4  jmp  y,$e4       1598  jmp(Y,'cmphs#13')               #11
                                          1599  #dummy                          #12 Overlap, not dependent on ld(AC,X) anymore
                                          1600  #
                                          1601  # pc = 0x0321, Opcode = 0x21
                                          1602  # Instruction LDW: Load word from zero page (vAC=[D]+256*[D+1]), 24 cycles
                                          1603  label('LDW')
LDW:          0321 1416  ld   $16,y       1604  ld(hi('ldw#13'),Y)              #10 #12
              0322 e0b9  jmp  y,$b9       1605  jmp(Y,'ldw#13')                 #11
                                          1606  #dummy                          #12 Overlap
                                          1607  #
                                          1608  # pc = 0x0323, Opcode = 0x23
                                          1609  # Instruction PEEK+: Peek byte at address contained in var, inc var, 30 cycles
                                          1610  label('PEEK+')
PEEK+:        0323 1404  ld   $04,y       1611  ld(hi('peek+#13'),Y)            #10 #12
              0324 e08f  jmp  y,$8f       1612  jmp(Y,'peek+#13')               #11
                                          1613  #dummy                          #12 Overlap
                                          1614  #
                                          1615  # pc = 0x0325, Opcode = 0x25
                                          1616  # Instruction POKEI: Poke immediate byte into address contained in [vAC], 20 cycles
                                          1617  label('POKEI')
POKEI:        0325 1417  ld   $17,y       1618  ld(hi('pokei#13'),Y)            #10 #12
              0326 e0d4  jmp  y,$d4       1619  jmp(Y,'pokei#13')               #11
                                          1620  #dummy                          #12 Overlap
                                          1621  #
                                          1622  # pc = 0x0327, Opcode = 0x27
                                          1623  # Instruction LSLV: Logical shift left word var, 28 cycles
                                          1624  label('LSLV')
LSLV:         0327 1416  ld   $16,y       1625  ld(hi('lslv#13'),Y)             #10 #12
              0328 e0a5  jmp  y,$a5       1626  jmp(Y,'lslv#13')                #11
                                          1627  #dummy                          #12 Overlap
                                          1628  #
                                          1629  # pc = 0x0329, Opcode = 0x29
                                          1630  # Instruction ADDBA: vAC += var.lo, 28 cycles
                                          1631  label('ADDBA')
ADDBA:        0329 1417  ld   $17,y       1632  ld(hi('addba#13'),Y)            #10 #12
              032a e090  jmp  y,$90       1633  jmp(Y,'addba#13')               #11
                                          1634  #dummy                          #12 Overlap
                                          1635  #
                                          1636  # pc = 0x032b, Opcode = 0x2b
                                          1637  # Instruction STW: Store word in zero page ([D],[D+1]=vAC&255,vAC>>8), 24 cycles
                                          1638  label('STW')
STW:          032b 1416  ld   $16,y       1639  ld(hi('stw#13'),Y)              #10 #12
              032c e0c3  jmp  y,$c3       1640  jmp(Y,'stw#13')                 #11
                                          1641  #dummy                          #12 Overlap
                                          1642  #
                                          1643  # pc = 0x032d, Opcode = 0x2d
                                          1644  # Instruction ADDBI: Add a constant 0..255 to byte var, 28 cycles
                                          1645  label('ADDBI')
ADDBI:        032d 1416  ld   $16,y       1646  ld(hi('addbi#13'),Y)            #10 #12
              032e e0da  jmp  y,$da       1647  jmp(Y,'addbi#13')               #11
                                          1648  #dummy                          #12 Overlap
                                          1649  #
                                          1650  # pc = 0x032f, Opcode = 0x2f
                                          1651  # Instruction PREFX2
                                          1652  label('PREFX2')
PREFX2:       032f 1414  ld   $14,y       1653  ld(hi('prefx2#13'),Y)           #10 #12
              0330 e0ed  jmp  y,$ed       1654  jmp(Y,'prefx2#13')              #11
              0331 c22b  st   [$2b]       1655  st([sysArgs+7])                 #12 Operand
                                          1656
                                          1657  # pc = 0x0332, Opcode = 0x32
                                          1658  # Instruction DBNE:  Decrement byte var and branch if not zero, 28 cycles
                                          1659  label('DBNE')
DBNE:         0332 1415  ld   $15,y       1660  ld(hi('dbne#13'),Y)             #10
              0333 e053  jmp  y,$53       1661  jmp(Y,'dbne#13')                #11
              0334 1517  ld   [$17],y     1662  ld([vPC+1],Y)                   #12 vPC.hi
                                          1663
                                          1664  # pc = 0x0335, Opcode = 0x35
                                          1665  # Instruction BCC: Test AC sign and branch conditionally, variable, (24-26), cycles
                                          1666  label('BCC')
BCC:          0335 fe00  bra  ac          1667  bra(AC)                         #10 AC is the conditional operand
              0336 de00  st   [y,x++]     1668  st([Y,Xpp])                     #11 X++
                                          1669
                                          1670  # pc = 0x0337, Opcode = 0x37
                                          1671  # Instruction DOKEI: Doke immediate word into address contained in [vAC], 30 cycles
                                          1672  label('DOKEI')
DOKEI:        0337 1417  ld   $17,y       1673  ld(hi('dokei#13'),Y)            #10
              0338 e0da  jmp  y,$da       1674  jmp(Y,'dokei#13')               #11
                                          1675  #dummy                          #12 Overlap
                                          1676  #
                                          1677  # pc = 0x0339, Opcode = 0x39
                                          1678  # Instruction PEEKV: Read byte from address contained in var, 30 cycles
                                          1679  label('PEEKV')
PEEKV:        0339 1416  ld   $16,y       1680  ld(hi('peekv#13'),Y)            #10
              033a e086  jmp  y,$86       1681  jmp(Y,'peekv#13')               #11
                                          1682  #dummy                          #12 Overlap
                                          1683  #
                                          1684  # pc = 0x033b, Opcode = 0x3b
                                          1685  # Instruction DEEKV: Read word from address contained in var, 28 cycles
                                          1686  label('DEEKV')
DEEKV:        033b 1416  ld   $16,y       1687  ld(hi('deekv#13'),Y)            #10 #12
              033c e095  jmp  y,$95       1688  jmp(Y,'deekv#13')               #11
                                          1689  #dummy                          #12 Overlap
                                          1690  #
                                          1691  # pc = 0x033d, Opcode = 0x3d
                                          1692  # Instruction LOKEI: Loke immediate long into address contained in [vAC], 42 cycles
                                          1693  label('LOKEI')
LOKEI:        033d 142d  ld   $2d,y       1694  ld(hi('lokei#13'),Y)            #10
              033e e0ce  jmp  y,$ce       1695  jmp(Y,'lokei#13')               #11
                                          1696  #dummy                          #12 Overlap
                                          1697  #
                                          1698  # pc = 0x033f, Opcode = 0x3f
                                          1699  # Conditional EQ: Branch if zero (if(vACL==0)vPCL=D)
              033f 1417  ld   $17,y       1700  ld(hi('beq#15'),Y)              #12 #12
              0340 e031  jmp  y,$31       1701  jmp(Y,'beq#15')                 #13
              0341 1517  ld   [$17],y     1702  ld([vPC+1],Y)                   #14 vPC.hi
                                          1703
                                          1704  # pc = 0x0342, Opcode = 0x42
                                          1705  # Instruction ADDVI: Add 8bit immediate to 16bit zero page var, var += imm, vAC = var, 50 cycles
                                          1706  label('ADDVI')
ADDVI:        0342 1428  ld   $28,y       1707  ld(hi('addvi#13'),Y)            #10
              0343 e000  jmp  y,$00       1708  jmp(Y,'addvi#13')               #11
                                          1709  #dummy                          #12 Overlap
                                          1710
                                          1711  # pc = 0x0344, Opcode = 0x44
                                          1712  # Instruction SUBVI: Subtract 8bit immediate from 16bit zero page var, var -= imm, vAC = var, 50 cycles
                                          1713  label('SUBVI')
SUBVI:        0344 1428  ld   $28,y       1714  ld(hi('subvi#13'),Y)            #10
              0345 e039  jmp  y,$39       1715  jmp(Y,'subvi#13')               #11
                                          1716  #dummy                          #12 Overlap
                                          1717
                                          1718  # pc = 0x0346, Opcode = 0x46
                                          1719  # Instruction DOKE+: doke word in vAC to address contained in var, var += 2, 30 cycles
                                          1720  label('DOKE+')
DOKE+:        0346 1418  ld   $18,y       1721  ld(hi('doke+#13'),Y)            #10 #12
              0347 e012  jmp  y,$12       1722  jmp(Y,'doke+#13')               #11
                                          1723  #dummy                          #12 Overlap
                                          1724  #
                                          1725  # pc = 0x0348, Opcode = 0x48
                                          1726  # Instruction NOTB: var.lo = ~var.lo, 22 cycles
                                          1727  label('NOTB')
NOTB:         0348 1418  ld   $18,y       1728  ld(hi('notb#13'),Y)             #10 #12
              0349 e00b  jmp  y,$0b       1729  jmp(Y,'notb#13')                #11
                                          1730  #dummy                          #12 Overlap
                                          1731  #
                                          1732  # pc = 0x034a, Opcode = 0x4a
                                          1733  # Instruction DJGE:
                                          1734  label('DJGE')
DJGE:         034a 142b  ld   $2b,y       1735  ld(hi('djge#13'),Y)             #10 #12
              034b e000  jmp  y,$00       1736  jmp(Y,'djge#13')                #11
              034c 1517  ld   [$17],y     1737  ld([vPC+1],Y)                   #12
                                          1738
                                          1739  # pc = 0x034d, Opcode = 0x4d
                                          1740  # Conditional GT: Branch if positive (if(vACL>0)vPCL=D)
              034d 1417  ld   $17,y       1741  ld(hi('bgt#15'),Y)              #12
              034e e04d  jmp  y,$4d       1742  jmp(Y,'bgt#15')                 #13
              034f 1517  ld   [$17],y     1743  ld([vPC+1],Y)                   #14 vPC.hi
                                          1744
                                          1745  # pc = 0x0350, Opcode = 0x50
                                          1746  # Conditional LT: Branch if negative (if(vACL<0)vPCL=D)
              0350 1417  ld   $17,y       1747  ld(hi('blt#15'),Y)              #12
              0351 e062  jmp  y,$62       1748  jmp(Y,'blt#15')                 #13
              0352 1517  ld   [$17],y     1749  ld([vPC+1],Y)                   #14 vPC.hi
                                          1750
                                          1751  # pc = 0x0353, Opcode = 0x53
                                          1752  # Conditional GE: Branch if positive or zero (if(vACL>=0)vPCL=D)
              0353 1417  ld   $17,y       1753  ld(hi('bge#15'),Y)              #12
              0354 e06f  jmp  y,$6f       1754  jmp(Y,'bge#15')                 #13
              0355 1517  ld   [$17],y     1755  ld([vPC+1],Y)                   #14 vPC.hi
                                          1756
                                          1757  # pc = 0x0356, Opcode = 0x56
                                          1758  # Conditional LE: Branch if negative or zero (if(vACL<=0)vPCL=D)
              0356 1417  ld   $17,y       1759  ld(hi('ble#15'),Y)              #12
              0357 e07c  jmp  y,$7c       1760  jmp(Y,'ble#15')                 #13
              0358 1517  ld   [$17],y     1761  ld([vPC+1],Y)                   #14 vPC.hi
                                          1762
                                          1763  # pc = 0x0359, Opcode = 0x59
                                          1764  # Instruction LDI: Load immediate small positive constant (vAC=D), 20 cycles
                                          1765  label('LDI')
LDI:          0359 1416  ld   $16,y       1766  ld(hi('ldi#13'),Y)              #10
              035a e016  jmp  y,$16       1767  jmp(Y,'ldi#13')                 #11
                                          1768  #dummy                          #12 Overlap
                                          1769  #
                                          1770  # pc = 0x035b, Opcode = 0x5b
                                          1771  # Instruction MOVQW: Load a word var with a small constant 0..255, 30 cycles
                                          1772  label('MOVQW')
MOVQW:        035b 1416  ld   $16,y       1773  ld(hi('movqw#13'),Y)            #10 #12
              035c e06e  jmp  y,$6e       1774  jmp(Y,'movqw#13')               #11
              035d 1517  ld   [$17],y     1775  ld([vPC+1],Y)                   #12 vPC.hi
                                          1776
                                          1777  # pc = 0x035e, Opcode = 0x5e
                                          1778  # Instruction ST: Store byte in zero page ([D]=vAC&255), 20 cycles
                                          1779  label('ST')
ST:           035e 1416  ld   $16,y       1780  ld(hi('st#13'),Y)               #10
              035f e01c  jmp  y,$1c       1781  jmp(Y,'st#13')                  #11
                                          1782  #dummy                          #12 Overlap
                                          1783  #
                                          1784  # pc = 0x0360, Opcode = 0x60
                                          1785  # Instruction DEEK+: Deek word at address contained in var, var += 2, 30 cycles
                                          1786  label('DEEK+')
DEEK+:        0360 1417  ld   $17,y       1787  ld(hi('deek+#13'),Y)            #10 #12
              0361 e0e9  jmp  y,$e9       1788  jmp(Y,'deek+#13')               #11
              0362 1400  ld   $00,y       1789  ld(0,Y)                         #12
                                          1790
                                          1791  # pc = 0x0363, Opcode = 0x63
                                          1792  # Instruction POP: Pop address from stack (vLR,vSP==[vSP]+256*[vSP+1],vSP+2), 30 cycles
                                          1793  label('POP')
POP:          0363 140b  ld   $0b,y       1794  ld(hi('pop#13'),Y)              #10
              0364 e0c6  jmp  y,$c6       1795  jmp(Y,'pop#13')                 #11
                                          1796  #dummy                          #12 Overlap
                                          1797  #
                                          1798  # pc = 0x0365, Opcode = 0x65
                                          1799  # Instruction MOV: Moves a byte from src var to dst var, 28 cycles
                                          1800  label('MOV')
MOV:          0365 1416  ld   $16,y       1801  ld(hi('mov#13'),Y)              #10
              0366 e02c  jmp  y,$2c       1802  jmp(Y,'mov#13')                 #11
                                          1803  #dummy                          #12 Overlap
                                          1804  #
                                          1805  # pc = 0x0367, Opcode = 0x67
                                          1806  # Instruction PEEKA: Peek a byte from [vAC] to var, 24 cycles
                                          1807  label('PEEKA')
PEEKA:        0367 1416  ld   $16,y       1808  ld(hi('peeka#13'),Y)            #10 #12
              0368 e03a  jmp  y,$3a       1809  jmp(Y,'peeka#13')               #11
                                          1810  #dummy                          #12 Overlap
                                          1811  #
                                          1812  # pc = 0x0369, Opcode = 0x69
                                          1813  # Instruction POKEA: Poke a byte from var to [vAC], 22 cycles
                                          1814  label('POKEA')
POKEA:        0369 1417  ld   $17,y       1815  ld(hi('pokea#13'),Y)            #10 #12
              036a e0bc  jmp  y,$bc       1816  jmp(Y,'pokea#13')               #11
                                          1817  #dummy                          #12 Overlap
                                          1818
                                          1819  # pc = 0x036b, Opcode = 0x6b
                                          1820  # Instruction TEQ: Test for EQ, returns 0x0000 or 0x0101 in vAC, 28 cycles
                                          1821  label('TEQ')
TEQ:          036b 1415  ld   $15,y       1822  ld(hi('teq#13'),Y)              #10 #12
              036c e066  jmp  y,$66       1823  jmp(Y,'teq#13')                 #11
                                          1824  #dummy                          #12 Overlap
                                          1825  #
                                          1826  # pc = 0x036d, Opcode = 0x6d
                                          1827  # Instruction TNE: Test for NE, returns 0x0000 or 0x0101 in vAC, 28 cycles
                                          1828  label('TNE')
TNE:          036d 1415  ld   $15,y       1829  ld(hi('tne#13'),Y)              #10 #12
              036e e075  jmp  y,$75       1830  jmp(Y,'tne#13')                 #11
                                          1831  #dummy                          #12 Overlap
                                          1832  #
                                          1833  # pc = 0x036f, Opcode = 0x6f
                                          1834  # Instruction DEEKA: Deek a word from [vAC] to var, 30 cycles
                                          1835  label('DEEKA')
DEEKA:        036f 1416  ld   $16,y       1836  ld(hi('deeka#13'),Y)            #10, #12
              0370 e043  jmp  y,$43       1837  jmp(Y,'deeka#13')               #11
              0371 c21d  st   [$1d]       1838  st([vTmp])                      #12 mask
                                          1839
                                          1840  # pc = 0x0372, Opcode = 0x72
                                          1841  # Conditional NE: Branch if not zero (if(vACL!=0)vPCL=D)
              0372 1417  ld   $17,y       1842  ld(hi('bne#15'),Y)              #12
              0373 e03f  jmp  y,$3f       1843  jmp(Y,'bne#15')                 #13
              0374 1517  ld   [$17],y     1844  ld([vPC+1],Y)                   #14 vPC.hi
                                          1845
                                          1846  # pc = 0x0375, Opcode = 0x75
                                          1847  # Instruction PUSH: Push vLR on stack ([vSP-2],v[vSP-1],vSP=vLR&255,vLR>>8,vLR-2), 30 cycles
                                          1848  label('PUSH')
PUSH:         0375 140b  ld   $0b,y       1849  ld(hi('push#13'),Y)             #10
              0376 e0d6  jmp  y,$d6       1850  jmp(Y,'push#13')                #11
                                          1851  #dummy                          #12 Overlap
                                          1852  #
                                          1853  # pc = 0x0377, Opcode = 0x77
                                          1854  # Instruction SUBBA: vAC -= var.lo, 28 cycles
                                          1855  label('SUBBA')
SUBBA:        0377 1417  ld   $17,y       1856  ld(hi('subba#13'),Y)            #10 #12
              0378 e0a6  jmp  y,$a6       1857  jmp(Y,'subba#13')               #11
                                          1858  #dummy                          #12 Overlap
                                          1859  #
                                          1860  # pc = 0x0379, Opcode = 0x79
                                          1861  # Instruction INCW: Increment word var, 26 cycles
                                          1862  label('INCW')
INCW:         0379 1415  ld   $15,y       1863  ld(hi('incw#13'),Y)             #10
              037a e034  jmp  y,$34       1864  jmp(Y,'incw#13')                #11
                                          1865  #dummy                          #12 Overlap
                                          1866  #
                                          1867  # pc = 0x037b, Opcode = 0x7b
                                          1868  # Instruction DECW: Decrement word var, 26 cycles
                                          1869  label('DECW')
DECW:         037b 1415  ld   $15,y       1870  ld(hi('decw#13'),Y)             #10 #12
              037c e043  jmp  y,$43       1871  jmp(Y,'decw#13')                #11
                                          1872  #dummy                          #12 Overlap
                                          1873  #
                                          1874  # pc = 0x037d, Opcode = 0x7d
                                          1875  # Instruction DOKEA: Doke a word from var to [vAC], 30 cycles
                                          1876  label('DOKEA')
DOKEA:        037d 1417  ld   $17,y       1877  ld(hi('dokea#13'),Y)            #10 #12
              037e e0c4  jmp  y,$c4       1878  jmp(Y,'dokea#13')               #11
                                          1879  #dummy                          #12 Overlap
                                          1880
                                          1881  # pc = 0x037f, Opcode = 0x7f
                                          1882  # Instruction LUP: ROM lookup (vAC=ROM[vAC+D]), 26 cycles
                                          1883  label('LUP')
LUP:          037f 1519  ld   [$19],y     1884  ld([vAC+1],Y)                   #10 #12
              0380 e0fb  jmp  y,$fb       1885  jmp(Y,251)                      #11 Trampoline offset
              0381 8118  adda [$18]       1886  adda([vAC])                     #12
                                          1887
                                          1888  # pc = 0x0382, Opcode = 0x82
                                          1889  # Instruction ANDI: Logical-AND with small constant (vAC&=D), 20 cycles
                                          1890  label('ANDI')
ANDI:         0382 1404  ld   $04,y       1891  ld(hi('andi#13'),Y)             #10
              0383 e022  jmp  y,$22       1892  jmp(Y,'andi#13')                #11
              0384 2118  anda [$18]       1893  anda([vAC])                     #12
                                          1894
                                          1895  # pc = 0x0385, Opcode = 0x85
                                          1896  # Instruction CALLI: Goto immediate address and remember vPC (vLR,vPC=vPC+3,$HHLL-2), 28 cycles
                                          1897  label('CALLI')
CALLI:        0385 1417  ld   $17,y       1898  ld(hi('calli#13'),Y)            #10
              0386 e00a  jmp  y,$0a       1899  jmp(Y,'calli#13')               #11
              0387 0116  ld   [$16]       1900  ld([vPC])                       #12
                                          1901
                                          1902  # pc = 0x0388, Opcode = 0x88
                                          1903  # Instruction ORI: Logical-OR with small constant (vAC|=D), 20 cycles
                                          1904  label('ORI')
ORI:          0388 1416  ld   $16,y       1905  ld(hi('ori#13'),Y)              #10
              0389 e022  jmp  y,$22       1906  jmp(Y,'ori#13')                 #11
                                          1907  #dummy                          #12 Overlap
                                          1908  #
                                          1909  # pc = 0x038a, Opcode = 0x8a
                                          1910  # Instruction PEEKA+: Peek a byte from [vAC] to var, incw vAC, 28 to 30 cycles
                                          1911  label('PEEKA+')
PEEKA+:       038a 1414  ld   $14,y       1912  ld(hi('peeka+#13'),Y)           #10
              038b e046  jmp  y,$46       1913  jmp(Y,'peeka+#13')              #11
                                          1914  #dummy                          #12 Overlap
                                          1915  #
                                          1916  # pc = 0x038c, Opcode = 0x8c
                                          1917  # Instruction XORI: Logical-XOR with small constant (vAC^=D), 20 cycles
                                          1918  label('XORI')
XORI:         038c 1418  ld   $18,y       1919  ld(hi('xori#13'),Y)             #10 #12
              038d e022  jmp  y,$22       1920  jmp(Y,'xori#13')                #11
                                          1921  #dummy                          #12 Overlap
                                          1922  #
                                          1923  # pc = 0x038e, Opcode = 0x8e
                                          1924  # Instruction DBGE:  Decrement byte var and branch if >= 0, 30 cycles
                                          1925  label('DBGE')
DBGE:         038e 1418  ld   $18,y       1926  ld(hi('dbge#13'),Y)             #10
              038f e030  jmp  y,$30       1927  jmp(Y,'dbge#13')                #11
                                          1928  #dummy                          #12 Overlap
                                          1929  #
                                          1930  # pc = 0x0390, Opcode = 0x90
                                          1931  # Instruction BRA: Branch unconditionally (vPC=(vPC&0xff00)+D), 18 cycles
                                          1932  label('BRA')
BRA:          0390 1418  ld   $18,y       1933  ld(hi('bra#13'),Y)              #10
              0391 e02d  jmp  y,$2d       1934  jmp(Y,'bra#13')                 #11
              0392 c216  st   [$16]       1935  st([vPC])                       #12
                                          1936
                                          1937  # pc = 0x0393, Opcode = 0x93
                                          1938  # Instruction INC: Increment zero page byte ([D]++), 20 cycles
                                          1939  label('INC')
INC:          0393 1416  ld   $16,y       1940  ld(hi('inc#13'),Y)              #10
              0394 e000  jmp  y,$00       1941  jmp(Y,'inc#13')                 #11
                                          1942  #dummy                          #12 Overlap
                                          1943  #
                                          1944  # pc = 0x0395, Opcode = 0x95
                                          1945  # Instruction SPARE1:
                                          1946  label('SPARE1')
SPARE1:       0395 1403  ld   $03,y       1947  ld(hi('SPARE1'),Y)              #10 #12
              0396 e095  jmp  y,$95       1948  jmp(Y,'SPARE1')                 #11
                                          1949  #dummy                          #12 Overlap
                                          1950  #
                                          1951  # pc = 0x0397, Opcode = 0x97
                                          1952  # Instruction CMPHU: Adjust high byte for unsigned compare (vACH=XXX), 28 cycles
                                          1953  label('CMPHU')
CMPHU:        0397 140b  ld   $0b,y       1954  ld(hi('cmphu#13'),Y)            #10 #12
              0398 e0f2  jmp  y,$f2       1955  jmp(Y,'cmphu#13')               #11
                                          1956  #dummy                          #12 Overlap, not dependent on ld(AC,X) anymore
                                          1957  #
                                          1958  # pc = 0x0399, Opcode = 0x99
                                          1959  # Instruction ADDW: Word addition with zero page (vAC+=[D]+256*[D+1]), 30 cycles
                                          1960  label('ADDW')
ADDW:         0399 1400  ld   $00,y       1961  ld(hi('addw#13'),Y)             #10 #12
              039a e080  jmp  y,$80       1962  jmp(Y,'addw#13')                #11 Y=0
              039b 1200  ld   ac,x        1963  ld(AC,X)                        #12 Address of low byte to be added
                                          1964
                                          1965  # pc = 0x039c, Opcode = 0x9c
                                          1966  # Instruction LDNI: Load an 8bit immediate as a negative 16bit immediate into vAC, 22 cycles
                                          1967  label('LDNI')
LDNI:         039c 1418  ld   $18,y       1968  ld(hi('ldni#13'),Y)             #10
              039d e044  jmp  y,$44       1969  jmp(Y,'ldni#13')                #11
                                          1970  #dummy                          #12 Overlap
                                          1971
                                          1972  # pc = 0x039e, Opcode = 0x9e
                                          1973  # Instruction ANDBK: vAC = var & imm, 30 cycles
                                          1974  label('ANDBK')
ANDBK:        039e 1418  ld   $18,y       1975  ld(hi('andbk#13'),Y)            #10
              039f e04c  jmp  y,$4c       1976  jmp(Y,'andbk#13')               #11
                                          1977  #dummy                          #12 Overlap
                                          1978
                                          1979  # pc = 0x03a0, Opcode = 0xa0
                                          1980  # Instruction ORBK: vAC = var | imm, 30 cycles
                                          1981  label('ORBK')
ORBK:         03a0 1418  ld   $18,y       1982  ld(hi('orbk#13'),Y)             #10
              03a1 e05c  jmp  y,$5c       1983  jmp(Y,'orbk#13')                #11
                                          1984  #dummy                          #12 Overlap
                                          1985
                                          1986  # pc = 0x03a2, Opcode = 0xa2
                                          1987  # Instruction XORBK: vAC = var ^ imm, 30 cycles
                                          1988  label('XORBK')
XORBK:        03a2 1418  ld   $18,y       1989  ld(hi('xorbk#13'),Y)            #10
              03a3 e06c  jmp  y,$6c       1990  jmp(Y,'xorbk#13')               #11
                                          1991  #dummy                          #12 Overlap
                                          1992
                                          1993  # pc = 0x03a4, Opcode = 0xa4, 26 to 46 cycles
                                          1994  # Instruction DJNE:
                                          1995  label('DJNE')
DJNE:         03a4 142a  ld   $2a,y       1996  ld(hi('djne#13'),Y)             #10
              03a5 e0a6  jmp  y,$a6       1997  jmp(Y,'djne#13')                #11
              03a6 1517  ld   [$17],y     1998  ld([vPC+1],Y)                   #12
                                          1999
                                          2000  # pc = 0x03a7, Opcode = 0xa7
                                          2001  # Instruction CMPI: Compare byte variable to 8bit immediate, 36 to 36 cycles
                                          2002  label('CMPI')
CMPI:         03a7 1418  ld   $18,y       2003  ld(hi('cmpi#13'),Y)             #10
              03a8 e07c  jmp  y,$7c       2004  jmp(Y,'cmpi#13')                #11
                                          2005  #dummy                          #12 Overlap
                                          2006
                                          2007  # pc = 0x03a9, Opcode = 0xa9
                                          2008  # Instruction ADDVW: Add two 16bit zero page vars, dst += src, vAC = dst, 28 to 54 cycles
                                          2009  label('ADDVW')
ADDVW:        03a9 1414  ld   $14,y       2010  ld(hi('addvw#13'),Y)            #10 #12
              03aa e05b  jmp  y,$5b       2011  jmp(Y,'addvw#13')               #11
                                          2012  #dummy                          #12 Overlap
                                          2013
                                          2014  # pc = 0x03ab, Opcode = 0xab
                                          2015  # Instruction SUBVW: Subtract two 16bit zero page vars, dst -= src, vAC = dst, 30 to 54 cycles
                                          2016  label('SUBVW')
SUBVW:        03ab 1414  ld   $14,y       2017  ld(hi('subvw#13'),Y)            #10 #12
              03ac e0a4  jmp  y,$a4       2018  jmp(Y,'subvw#13')               #11
                                          2019  #dummy                          #12 Overlap
                                          2020
                                          2021  # pc = 0x03ad, Opcode = 0xad
                                          2022  # Instruction PEEK: Read byte from memory (vAC=[vAC]), 26 cycles
                                          2023  label('PEEK')
PEEK:         03ad 1404  ld   $04,y       2024  ld(hi('peek#13'),Y)             #10 #12
              03ae e052  jmp  y,$52       2025  jmp(Y,'peek#13')                #11
                                          2026  #dummy                          #12 Overlap
                                          2027  #
                                          2028  # The 'SYS' vCPU instruction first checks the number of desired ticks given by
                                          2029  # the operand. As long as there are insufficient ticks available in the current
                                          2030  # time slice, the instruction will be retried. This will effectively wait for
                                          2031  # the next scan line if the current slice is almost out of time. Then a jump to
                                          2032  # native code is made. This code can do whatever it wants, but it must return
                                          2033  # to the 'REENTER' label when done. When returning, AC must hold (the negative
                                          2034  # of) the actual consumed number of whole ticks for the entire virtual
                                          2035  # instruction cycle (from NEXT to NEXT). This duration may not exceed the prior
                                          2036  # declared duration in the operand + 28 (or maxTicks). The operand specifies the
                                          2037  # (negative) of the maximum number of *extra* ticks that the native call will
                                          2038  # need. The GCL compiler automatically makes this calculation from gross number
                                          2039  # of cycles to excess number of ticks.
                                          2040  # SYS functions can modify vPC to implement repetition. For example to split
                                          2041  # up work into multiple chucks.
                                          2042  label('.sys#13')
.sys#13:      03af 1418  ld   $18,y       2043  ld(hi('.sys#16'),Y)             #13
              03b0 e000  jmp  y,$00       2044  jmp(Y,'.sys#16')                #14
                                          2045  #dummy                          #15 Overlap
                                          2046  #
                                          2047  # pc = 0x03b1, Opcode = 0xb1
                                          2048  # Instruction PREFX1
                                          2049  label('PREFX1')
PREFX1:       03b1 1414  ld   $14,y       2050  ld(hi('prefx1#13'),Y)           #10 #12
              03b2 e0f5  jmp  y,$f5       2051  jmp(Y,'prefx1#13')              #11
              03b3 0023  ld   $23         2052  ld(hi('PREFX1_PAGE'))           #12 ENTER is at $(n-1)ff, where n = instruction page
                                          2053
                                          2054  # pc = 0x03b4, Opcode = 0xb4
                                          2055  # Instruction SYS: Native call, <=256 cycles (<=128 ticks, in reality less)
                                          2056  label('SYS')
SYS:          03b4 8115  adda [$15]       2057  adda([vTicks])                  #10
              03b5 e8af  blt  .sys#13     2058  blt('.sys#13')                  #11
              03b6 1523  ld   [$23],y     2059  ld([sysFn+1],Y)                 #12
              03b7 e122  jmp  y,[$22]     2060  jmp(Y,[sysFn])                  #13
                                          2061  #dummy                          #14 Overlap
                                          2062  #
                                          2063  # pc = 0x03b8, Opcode = 0xb8
                                          2064  # Instruction SUBW: Word subtract with zero page (AC-=[D]+256*[D+1]), 30 cycles
                                          2065  label('SUBW')
SUBW:         03b8 1417  ld   $17,y       2066  ld(hi('subw#13'),Y)             #10 #14
              03b9 e016  jmp  y,$16       2067  jmp(Y,'subw#13')                #11 Y=0
              03ba 1200  ld   ac,x        2068  ld(AC,X)                        #12 Address of low byte to be added
                                          2069
                                          2070  # pc = 0x03bb, Opcode = 0xbb
                                          2071  # Instruction JEQ: jump to 16bit address if vAC=0
                                          2072  label('JEQ')
JEQ:          03bb 1418  ld   $18,y       2073  ld(hi('jeq#13'),Y)              #10
              03bc e0a2  jmp  y,$a2       2074  jmp(Y,'jeq#13')                 #11
                                          2075  #dummy                          #12 Overlap
                                          2076  #
                                          2077  # pc = 0x03bd, Opcode = 0xbd
                                          2078  # Instruction JNE: jump to 16bit address if vAC!=0
                                          2079  label('JNE')
JNE:          03bd 1418  ld   $18,y       2080  ld(hi('jne#13'),Y)              #10 #12
              03be e0b4  jmp  y,$b4       2081  jmp(Y,'jne#13')                 #11
                                          2082  #dummy                          #12 Overlap
                                          2083  #
                                          2084  # pc = 0x03bf, Opcode = 0xbf
                                          2085  # Instruction JLT: jump to 16bit address if vAC<0
                                          2086  label('JLT')
JLT:          03bf 1418  ld   $18,y       2087  ld(hi('jlt#13'),Y)              #10 #12
              03c0 e0c6  jmp  y,$c6       2088  jmp(Y,'jlt#13')                 #11
                                          2089  #dummy                          #12 Overlap
                                          2090  #
                                          2091  # pc = 0x03c1, Opcode = 0xc1
                                          2092  # Instruction JGT: jump to 16bit address if vAC>0
                                          2093  label('JGT')
JGT:          03c1 1414  ld   $14,y       2094  ld(hi('jgt#13'),Y)              #10 #12
              03c2 e000  jmp  y,$00       2095  jmp(Y,'jgt#13')                 #11
                                          2096  #dummy                          #12 Overlap
                                          2097  #
                                          2098  # pc = 0x03c3, Opcode = 0xc3
                                          2099  # Instruction JLE: jump to 16bit address if vAC<=0
                                          2100  label('JLE')
JLE:          03c3 1414  ld   $14,y       2101  ld(hi('jle#13'),Y)              #10 #12
              03c4 e019  jmp  y,$19       2102  jmp(Y,'jle#13')                 #11
                                          2103  #dummy                          #12 Overlap
                                          2104  #
                                          2105  # pc = 0x03c5, Opcode = 0xc5
                                          2106  # Instruction JGE: jump to 16bit address if vAC>=0
                                          2107  label('JGE')
JGE:          03c5 1414  ld   $14,y       2108  ld(hi('jge#13'),Y)              #10 #12
              03c6 e035  jmp  y,$35       2109  jmp(Y,'jge#13')                 #11
                                          2110  #dummy                          #12 Overlap
                                          2111  #
                                          2112  # pc = 0x03c7, Opcode = 0xc7
                                          2113  # Instruction PREFX3: switches instruction page to 0x2200
                                          2114  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2099#p2099
                                          2115  label('PREFX3')
PREFX3:       03c7 1414  ld   $14,y       2116  ld(hi('prefx3#13'),Y)           #10 #12
              03c8 e0e5  jmp  y,$e5       2117  jmp(Y,'prefx3#13')              #11
              03c9 c22b  st   [$2b]       2118  st([sysArgs+7])                 #12 Second operand
                                          2119
                                          2120  # SYS calls and instruction implementations rely on these labels
                                          2121  label('REENTER_28')
REENTER_28:   03ca 00f2  ld   $f2         2122  ld(-28/2)                       #25
                                          2123  label('REENTER')
REENTER:      03cb fc01  bra  NEXT        2124  bra('NEXT')                     #26 Return from SYS calls
              03cc 1517  ld   [$17],y     2125  ld([vPC+1],Y)                   #27
                                          2126
                                          2127  fillers(until=0xcd)
                                          2128
                                          2129  #
                                          2130  # The instructions below are all implemented in the second code page. Jumping
                                          2131  # back and forth makes each 6 cycles slower, but it also saves space in the
                                          2132  # primary page for the instructions above. Most of them are in fact not very
                                          2133  # critical, as evidenced by the fact that they weren't needed for the first
                                          2134  # Gigatron applications (Snake, Racer, Mandelbrot, Loader). By providing them
                                          2135  # in this way, at least they don't need to be implemented as a SYS extension.
                                          2136  #
                                          2137  # pc = 0x03cd, Opcode = 0xcd
                                          2138  # Instruction DEF: Define data or code (vAC,vPC=vPC+2,(vPC&0xff00)+D), 26 cycles
                                          2139  label('DEF')
DEF:          03cd 1404  ld   $04,y       2140  ld(hi('def#13'),Y)              #10
              03ce e017  jmp  y,$17       2141  jmp(Y,'def#13')                 #11
                                          2142  #dummy                          #12 Overlap
                                          2143  #
                                          2144  # pc = 0x03cf, Opcode = 0xcf
                                          2145  # Instruction CALL: Goto address and remember vPC (vLR,vPC=vPC+2,[D]+256*[D+1]-2), 30 cycles
                                          2146  label('CALL')
CALL:         03cf 1404  ld   $04,y       2147  ld(hi('call#13'),Y)             #10, #12
              03d0 e007  jmp  y,$07       2148  jmp(Y,'call#13')                #11
                                          2149  #dummy                          #12 Overlap
                                          2150  #
                                          2151  # pc = 0x03d1, Opcode = 0xd1
                                          2152  # Instruction POKE+: Poke byte in vAC to address contained in var, inc var, 30 cycles
                                          2153  label('POKE+')
POKE+:        03d1 1416  ld   $16,y       2154  ld(hi('poke+#13'),Y)            #10 #12
              03d2 e0cc  jmp  y,$cc       2155  jmp(Y,'poke+#13')               #11
                                          2156  #dummy                          #12 Overlap
                                          2157  #
                                          2158  # pc = 0x03d3, Opcode = 0xd3
                                          2159  # Instruction LSRV: Logical shift right word var, 56 cycles
                                          2160  label('LSRV')
LSRV:         03d3 142c  ld   $2c,y       2161  ld(hi('lsrv#13'),Y)             #10 #12
              03d4 e048  jmp  y,$48       2162  jmp(Y,'lsrv#13')                #11
                                          2163  #dummy                          #12 Overlap
                                          2164  #
                                          2165  # pc = 0x03d5, Opcode = 0xd5
                                          2166  # Instruction TGE: Test for GE, returns 0x0000 or 0x0101 in vAC, 26 cycles
                                          2167  label('TGE')
TGE:          03d5 1415  ld   $15,y       2168  ld(hi('tge#13'),Y)              #10 #12
              03d6 e084  jmp  y,$84       2169  jmp(Y,'tge#13')                 #11
                                          2170  #dummy                          #12 Overlap
                                          2171  #
                                          2172  # pc = 0x03d7, Opcode = 0xd7
                                          2173  # Instruction TLT: Test for LT, returns 0x0000 or 0x0101 in vAC, 26 cycles
                                          2174  label('TLT')
TLT:          03d7 1415  ld   $15,y       2175  ld(hi('tlt#13'),Y)             #10 #12
              03d8 e092  jmp  y,$92       2176  jmp(Y,'tlt#13')                #11
                                          2177  #dummy                         #12 Overlap
                                          2178  #
                                          2179  # pc = 0x03d9, Opcode = 0xd9
                                          2180  # Instruction TGT: Test for GT, returns 0x0000 or 0x0101 in vAC, 28 cycles
                                          2181  label('TGT')
TGT:          03d9 1415  ld   $15,y       2182  ld(hi('tgt#13'),Y)             #10 #12
              03da e0a0  jmp  y,$a0       2183  jmp(Y,'tgt#13')                #11
                                          2184  #dummy                         #12 Overlap
                                          2185  #
                                          2186  # pc = 0x03db, Opcode = 0xdb
                                          2187  # Instruction TLE: Test for LE, returns 0x0000 or 0x0101 in vAC
                                          2188  label('TLE')
TLE:          03db 1415  ld   $15,y       2189  ld(hi('tle#13'),Y)             #10 #12
              03dc e0b6  jmp  y,$b6       2190  jmp(Y,'tle#13')                #11
                                          2191  #dummy                         #12 Overlap
                                          2192  #
                                          2193  # pc = 0x03dd, Opcode = 0xdd
                                          2194  # Instruction SPARE2:
                                          2195  label('SPARE2')
SPARE2:       03dd 1403  ld   $03,y       2196  ld(hi('SPARE2'),Y)             #10 #12
              03de e0dd  jmp  y,$dd       2197  jmp(Y,'SPARE2')                #11
                                          2198  #dummy                         #12 Overlap
                                          2199  #
                                          2200  # pc = 0x03df, Opcode = 0xdf
                                          2201  # Instruction ALLOC: Create or destroy stack frame (vSP+=D), 20 cycles
                                          2202  label('ALLOC')
ALLOC:        03df 1416  ld   $16,y       2203  ld(hi('alloc#13'),Y)           #10
              03e0 e027  jmp  y,$27       2204  jmp(Y,'alloc#13')              #11
                                          2205  #dummy                         #12 Overlap
                                          2206  #
                                          2207  # pc = 0x03e1, Opcode = 0xe1
                                          2208  # Instruction SUBBI: Subtract a constant 0..255 from a byte var, 28 cycles
                                          2209  label('SUBBI')
SUBBI:        03e1 1416  ld   $16,y       2210  ld(hi('subbi#13'),Y)            #10 #12
              03e2 e053  jmp  y,$53       2211  jmp(Y,'subbi#13')               #11
                                          2212  #dummy                          #12 Overlap
                                          2213  #
                                          2214  # pc = 0x03e3, Opcode = 0xe3
                                          2215  # Instruction ADDI: Add small positive constant (vAC+=D), 26 cycles
                                          2216  label('ADDI')
ADDI:         03e3 1415  ld   $15,y       2217  ld(hi('addi#13'),Y)             #10 #12
              03e4 e000  jmp  y,$00       2218  jmp(Y,'addi#13')                #11
              03e5 c21d  st   [$1d]       2219  st([vTmp])                      #12
                                          2220
                                          2221  # pc = 0x03e6, Opcode = 0xe6
                                          2222  # Instruction SUBI: Subtract small positive constant (vAC+=D), 26 cycles
                                          2223  label('SUBI')
SUBI:         03e6 1415  ld   $15,y       2224  ld(hi('subi#13'),Y)             #10
              03e7 e014  jmp  y,$14       2225  jmp(Y,'subi#13')                #11
              03e8 c21d  st   [$1d]       2226  st([vTmp])                      #12
                                          2227
                                          2228  # pc = 0x03e9, Opcode = 0xe9
                                          2229  # Instruction LSLW: Logical shift left (vAC<<=1), 28 cycles
                                          2230  # Useful, because ADDW can't add vAC to itself. Also more compact.
                                          2231  label('LSLW')
LSLW:         03e9 1404  ld   $04,y       2232  ld(hi('lslw#13'),Y)             #10
              03ea e028  jmp  y,$28       2233  jmp(Y,'lslw#13')                #11
              03eb 0118  ld   [$18]       2234  ld([vAC])                       #12
                                          2235
                                          2236  # pc = 0x03ec, Opcode = 0xec
                                          2237  # Instruction STLW: Store word in stack frame ([vSP+D],[vSP+D+1]=vAC&255,vAC>>8), 24 cycles
                                          2238  label('STLW')
STLW:         03ec 1404  ld   $04,y       2239  ld(hi('stlw#13'),Y)             #10
              03ed e034  jmp  y,$34       2240  jmp(Y,'stlw#13')                #11
                                          2241  #dummy()                        #12 Overlap
                                          2242  #
                                          2243  # pc = 0x03ee, Opcode = 0xee
                                          2244  # Instruction LDLW: Load word from stack frame (vAC=[vSP+D]+256*[vSP+D+1]), 24 cycles
                                          2245  label('LDLW')
LDLW:         03ee 1404  ld   $04,y       2246  ld(hi('ldlw#13'),Y)             #10,12
              03ef e03d  jmp  y,$3d       2247  jmp(Y,'ldlw#13')                #11
                                          2248  #dummy()                        #12 Overlap
                                          2249  #
                                          2250  # pc = 0x03f0, Opcode = 0xf0
                                          2251  # Instruction POKE: Write byte in memory ([[D+1],[D]]=vAC&255), 26 cycles
                                          2252  label('POKE')
POKE:         03f0 1404  ld   $04,y       2253  ld(hi('poke#13'),Y)             #10,12
              03f1 e047  jmp  y,$47       2254  jmp(Y,'poke#13')                #11
              03f2 c21d  st   [$1d]       2255  st([vTmp])                      #12
                                          2256
                                          2257  # pc = 0x03f3, Opcode = 0xf3
                                          2258  # Instruction DOKE: Write word in memory ([[D+1],[D]],[[D+1],[D]+1]=vAC&255,vAC>>8), 28 cycles
                                          2259  label('DOKE')
DOKE:         03f3 1404  ld   $04,y       2260  ld(hi('doke#13'),Y)             #10
              03f4 e05e  jmp  y,$5e       2261  jmp(Y,'doke#13')                #11
              03f5 c21d  st   [$1d]       2262  st([vTmp])                      #12
                                          2263
                                          2264  # pc = 0x03f6, Opcode = 0xf6
                                          2265  # Instruction DEEK: Read word from memory (vAC=[vAC]+256*[vAC+1]), 28 cycles
                                          2266  label('DEEK')
DEEK:         03f6 1404  ld   $04,y       2267  ld(hi('deek#13'),Y)             #10
              03f7 e06b  jmp  y,$6b       2268  jmp(Y,'deek#13')                #11
                                          2269  #dummy()                        #12 Overlap
                                          2270  #
                                          2271  # pc = 0x03f8, Opcode = 0xf8
                                          2272  # Instruction ANDW: Word logical-AND with zero page (vAC&=[D]+256*[D+1]), 28 cycles
                                          2273  label('ANDW')
ANDW:         03f8 1404  ld   $04,y       2274  ld(hi('andw#13'),Y)             #10,12
              03f9 e077  jmp  y,$77       2275  jmp(Y,'andw#13')                #11
                                          2276  #dummy()                        #12 Overlap
                                          2277  #
                                          2278  # pc = 0x03fa, Opcode = 0xfa
                                          2279  # Instruction ORW: Word logical-OR with zero page (vAC|=[D]+256*[D+1]), 28 cycles
                                          2280  label('ORW')
ORW:          03fa 1404  ld   $04,y       2281  ld(hi('orw#13'),Y)              #10,12
              03fb e083  jmp  y,$83       2282  jmp(Y,'orw#13')                 #11
                                          2283  #dummy()                        #12 Overlap
                                          2284  #
                                          2285  # pc = 0x03fc, Opcode = 0xfc
                                          2286  # Instruction XORW: Word logical-XOR with zero page (vAC^=[D]+256*[D+1]), 28 cycles
                                          2287  label('XORW')
XORW:         03fc 1415  ld   $15,y       2288  ld(hi('xorw#13'),Y)             #10,12
              03fd e029  jmp  y,$29       2289  jmp(Y,'xorw#13')                #11
              03fe 1200  ld   ac,x        2290  ld(AC,X)                        #12
                                          2291
                                          2292  # pc = 0x03ff, Opcode = 0xff
                                          2293  # Instruction RET: Function return (vPC=vLR-2), 16 cycles
                                          2294  label('RET')
RET:          03ff 011a  ld   [$1a]       2295  ld([vLR])                       #10
                                          2296  assert pc()&255 == 0
                                          2297
                                          2298
                                          2299  #-----------------------------------------------------------------------
                                          2300  #
                                          2301  #  $0400 ROM page 4: Application interpreter extension
                                          2302  #
                                          2303  #-----------------------------------------------------------------------
                                          2304  align(0x100, size=0x100)
                                          2305
                                          2306  # (Continue RET)
              0400 a002  suba $02         2307  suba(2)                         #11
              0401 c216  st   [$16]       2308  st([vPC])                       #12
              0402 011b  ld   [$1b]       2309  ld([vLR+1])                     #13
              0403 c217  st   [$17]       2310  st([vPC+1])                     #14
              0404 1403  ld   $03,y       2311  ld(hi('REENTER'),Y)             #15
              0405 e0cb  jmp  y,$cb       2312  jmp(Y,'REENTER')                #16
              0406 00f6  ld   $f6         2313  ld(-20/2)                       #17
                                          2314
                                          2315  # CALL implementation
                                          2316  label('call#13')
call#13:      0407 1200  ld   ac,x        2317  ld(AC,X)                        #13
              0408 0116  ld   [$16]       2318  ld([vPC])                       #14
              0409 8002  adda $02         2319  adda(2)                         #15 Point to instruction after CALL
              040a c21a  st   [$1a]       2320  st([vLR])                       #16
              040b 0117  ld   [$17]       2321  ld([vPC+1])                     #17
              040c c21b  st   [$1b]       2322  st([vLR+1])                     #18
              040d 1400  ld   $00,y       2323  ld(0,Y)                         #19
              040e 0500  ld   [x]         2324  ld([X])                         #20
              040f de00  st   [y,x++]     2325  st([Y,Xpp])                     #21
              0410 a002  suba $02         2326  suba(2)                         #22 Because NEXT will add 2
              0411 c216  st   [$16]       2327  st([vPC])                       #23
              0412 0500  ld   [x]         2328  ld([X])                         #24
              0413 c217  st   [$17]       2329  st([vPC+1])                     #25
              0414 1403  ld   $03,y       2330  ld(hi('NEXTY'),Y)               #26
              0415 e000  jmp  y,$00       2331  jmp(Y,'NEXTY')                  #27
              0416 00f1  ld   $f1         2332  ld(-30/2)                       #28
                                          2333
                                          2334  # DEF implementation
                                          2335  label('def#13')
def#13:       0417 c21d  st   [$1d]       2336  st([vTmp])                      #13
              0418 0116  ld   [$16]       2337  ld([vPC])                       #14
              0419 8002  adda $02         2338  adda(2)                         #15
              041a c218  st   [$18]       2339  st([vAC])                       #16
              041b 0117  ld   [$17]       2340  ld([vPC+1])                     #17
              041c c219  st   [$19]       2341  st([vAC+1])                     #18
              041d 011d  ld   [$1d]       2342  ld([vTmp])                      #19
              041e c216  st   [$16]       2343  st([vPC])                       #20
              041f 1403  ld   $03,y       2344  ld(hi('REENTER'),Y)             #21
              0420 e0cb  jmp  y,$cb       2345  jmp(Y,'REENTER')                #22
              0421 00f3  ld   $f3         2346  ld(-26/2)                       #23
                                          2347
                                          2348  # ANDI implementation
                                          2349  label('andi#13')
andi#13:      0422 c218  st   [$18]       2350  st([vAC])                       #13
              0423 0000  ld   $00         2351  ld(0)                           #14 Clear high byte
              0424 c219  st   [$19]       2352  st([vAC+1])                     #15
              0425 1403  ld   $03,y       2353  ld(hi('NEXTY'),Y)               #16
              0426 e000  jmp  y,$00       2354  jmp(Y,'NEXTY')                  #17
              0427 00f6  ld   $f6         2355  ld(-20/2)                       #18
                                          2356
                                          2357  # LSLW implementation
                                          2358  label('lslw#13')
lslw#13:      0428 3080  anda $80,x       2359  anda(128,X)                     #13
              0429 8118  adda [$18]       2360  adda([vAC])                     #14
              042a c218  st   [$18]       2361  st([vAC])                       #15
              042b 0500  ld   [x]         2362  ld([X])                         #16
              042c 8119  adda [$19]       2363  adda([vAC+1])                   #17
              042d 8119  adda [$19]       2364  adda([vAC+1])                   #18
              042e c219  st   [$19]       2365  st([vAC+1])                     #19
              042f 0116  ld   [$16]       2366  ld([vPC])                       #20
              0430 a001  suba $01         2367  suba(1)                         #21
              0431 1403  ld   $03,y       2368  ld(hi('REENTER_28'),Y)          #22
              0432 e0ca  jmp  y,$ca       2369  jmp(Y,'REENTER_28')             #23
              0433 c216  st   [$16]       2370  st([vPC])                       #24
                                          2371
                                          2372  # STLW implementation
                                          2373  label('stlw#13')
stlw#13:      0434 1504  ld   [$04],y     2374  ld([vSPH],Y)                    #13
              0435 911c  adda [$1c],x     2375  adda([vSP],X)                   #14
              0436 0118  ld   [$18]       2376  ld([vAC])                       #15
              0437 de00  st   [y,x++]     2377  st([Y,Xpp])                     #16
              0438 0119  ld   [$19]       2378  ld([vAC+1])                     #17
              0439 ce00  st   [y,x]       2379  st([Y,X])                       #18
              043a 1403  ld   $03,y       2380  ld(hi('REENTER'),Y)             #19
              043b e0cb  jmp  y,$cb       2381  jmp(Y,'REENTER')                #20
              043c 00f4  ld   $f4         2382  ld(-24/2)                       #21
                                          2383
                                          2384  # LDLW implementation
                                          2385  label('ldlw#13')
ldlw#13:      043d 1504  ld   [$04],y     2386  ld([vSPH],Y)                    #13
              043e 911c  adda [$1c],x     2387  adda([vSP],X)                   #14
              043f 0d00  ld   [y,x]       2388  ld([Y,X])                       #15
              0440 de00  st   [y,x++]     2389  st([Y,Xpp])                     #16
              0441 c218  st   [$18]       2390  st([vAC])                       #17
              0442 0d00  ld   [y,x]       2391  ld([Y,X])                       #18
              0443 c219  st   [$19]       2392  st([vAC+1])                     #19
              0444 1403  ld   $03,y       2393  ld(hi('NEXTY'),Y)               #20
              0445 e000  jmp  y,$00       2394  jmp(Y,'NEXTY')                  #21
              0446 00f4  ld   $f4         2395  ld(-24/2)                       #22
                                          2396
                                          2397  # POKE implementation
                                          2398  label('poke#13')
poke#13:      0447 9001  adda $01,x       2399  adda(1,X)                       #13
              0448 0500  ld   [x]         2400  ld([X])                         #14
              0449 1600  ld   ac,y        2401  ld(AC,Y)                        #15
              044a 111d  ld   [$1d],x     2402  ld([vTmp],X)                    #16
              044b 0500  ld   [x]         2403  ld([X])                         #17
              044c 1200  ld   ac,x        2404  ld(AC,X)                        #18
              044d 0118  ld   [$18]       2405  ld([vAC])                       #19
              044e ce00  st   [y,x]       2406  st([Y,X])                       #20
              044f 1403  ld   $03,y       2407  ld(hi('REENTER'),Y)             #21
              0450 e0cb  jmp  y,$cb       2408  jmp(Y,'REENTER')                #22
              0451 00f3  ld   $f3         2409  ld(-26/2)                       #23
                                          2410
                                          2411  # PEEK implementation
                                          2412  label('peek#13')
peek#13:      0452 1118  ld   [$18],x     2413  ld([vAC],X)                     #13
              0453 1519  ld   [$19],y     2414  ld([vAC+1],Y)                   #14
              0454 0d00  ld   [y,x]       2415  ld([Y,X])                       #15
              0455 c218  st   [$18]       2416  st([vAC])                       #16
              0456 0000  ld   $00         2417  ld(0)                           #17
              0457 c219  st   [$19]       2418  st([vAC+1])                     #18
              0458 0116  ld   [$16]       2419  ld([vPC])                       #19
              0459 a001  suba $01         2420  suba(1)                         #20
              045a c216  st   [$16]       2421  st([vPC])                       #21
              045b 1403  ld   $03,y       2422  ld(hi('NEXTY'),Y)               #22
              045c e000  jmp  y,$00       2423  jmp(Y,'NEXTY')                  #23
              045d 00f3  ld   $f3         2424  ld(-26/2)                       #24
                                          2425
                                          2426  # DOKE implementation
                                          2427  label('doke#13')
doke#13:      045e 9001  adda $01,x       2428  adda(1,X)                       #13
              045f 0500  ld   [x]         2429  ld([X])                         #14
              0460 1600  ld   ac,y        2430  ld(AC,Y)                        #15
              0461 111d  ld   [$1d],x     2431  ld([vTmp],X)                    #16
              0462 0500  ld   [x]         2432  ld([X])                         #17
              0463 1200  ld   ac,x        2433  ld(AC,X)                        #18
              0464 0118  ld   [$18]       2434  ld([vAC])                       #19
              0465 de00  st   [y,x++]     2435  st([Y,Xpp])                     #20
              0466 0119  ld   [$19]       2436  ld([vAC+1])                     #21
              0467 ce00  st   [y,x]       2437  st([Y,X])                       #22 Incompatible with REENTER_28
              0468 1403  ld   $03,y       2438  ld(hi('REENTER'),Y)             #23
              0469 e0cb  jmp  y,$cb       2439  jmp(Y,'REENTER')                #24
              046a 00f2  ld   $f2         2440  ld(-28/2)                       #25
                                          2441
                                          2442  # DEEK implementation
                                          2443  label('deek#13')
deek#13:      046b 0116  ld   [$16]       2444  ld([vPC])                       #13
              046c a001  suba $01         2445  suba(1)                         #14
              046d c216  st   [$16]       2446  st([vPC])                       #15
              046e 1118  ld   [$18],x     2447  ld([vAC],X)                     #16
              046f 1519  ld   [$19],y     2448  ld([vAC+1],Y)                   #17
              0470 0d00  ld   [y,x]       2449  ld([Y,X])                       #18
              0471 de00  st   [y,x++]     2450  st([Y,Xpp])                     #19 Just X++
              0472 c218  st   [$18]       2451  st([vAC])                       #20
              0473 0d00  ld   [y,x]       2452  ld([Y,X])                       #21
              0474 1403  ld   $03,y       2453  ld(hi('REENTER_28'),Y)          #22
              0475 e0ca  jmp  y,$ca       2454  jmp(Y,'REENTER_28')             #23
              0476 c219  st   [$19]       2455  st([vAC+1])                     #24
                                          2456
                                          2457  # ANDW implementation
                                          2458  label('andw#13')
andw#13:      0477 1200  ld   ac,x        2459  ld(AC,X)                        #13
              0478 1400  ld   $00,y       2460  ld(0,Y)                         #14
              0479 0500  ld   [x]         2461  ld([X])                         #15
              047a de00  st   [y,x++]     2462  st([Y,Xpp])                     #16
              047b 2118  anda [$18]       2463  anda([vAC])                     #17
              047c c218  st   [$18]       2464  st([vAC])                       #18
              047d 0500  ld   [x]         2465  ld([X])                         #19
              047e 2119  anda [$19]       2466  anda([vAC+1])                   #20
              047f c219  st   [$19]       2467  st([vAC+1])                     #21
              0480 1403  ld   $03,y       2468  ld(hi('NEXTY'),Y)               #22
              0481 e000  jmp  y,$00       2469  jmp(Y,'NEXTY')                  #23
              0482 00f3  ld   $f3         2470  ld(-26/2)                       #24
                                          2471
                                          2472  # ORW implementation
                                          2473  label('orw#13')
orw#13:       0483 1200  ld   ac,x        2474  ld(AC,X)                        #13
              0484 1400  ld   $00,y       2475  ld(0,Y)                         #14
              0485 0500  ld   [x]         2476  ld([X])                         #15
              0486 de00  st   [y,x++]     2477  st([Y,Xpp])                     #16
              0487 4118  ora  [$18]       2478  ora([vAC])                      #17
              0488 c218  st   [$18]       2479  st([vAC])                       #18
              0489 0500  ld   [x]         2480  ld([X])                         #19
              048a 4119  ora  [$19]       2481  ora([vAC+1])                    #20
              048b c219  st   [$19]       2482  st([vAC+1])                     #21
              048c 1403  ld   $03,y       2483  ld(hi('NEXTY'),Y)               #22
              048d e000  jmp  y,$00       2484  jmp(Y,'NEXTY')                  #23
              048e 00f3  ld   $f3         2485  ld(-26/2)                       #24
                                          2486
                                          2487  # PEEK+ implementation
                                          2488  label('peek+#13')
peek+#13:     048f 1400  ld   $00,y       2489  ld(0,Y)                         #13
              0490 1200  ld   ac,x        2490  ld(AC,X)                        #14
              0491 0500  ld   [x]         2491  ld([X])                         #15 low byte peek address
              0492 c21d  st   [$1d]       2492  st([vTmp])                      #16
              0493 8001  adda $01         2493  adda(1)                         #17
              0494 de00  st   [y,x++]     2494  st([Y,Xpp])                     #18
              0495 0500  ld   [x]         2495  ld([X])                         #19 high byte peek address
              0496 1600  ld   ac,y        2496  ld(AC,Y)                        #20
              0497 111d  ld   [$1d],x     2497  ld([vTmp],X)                    #21
              0498 0d00  ld   [y,x]       2498  ld([Y,X])                       #22
              0499 c218  st   [$18]       2499  st([vAC])                       #23
              049a 0000  ld   $00         2500  ld(0)                           #24
              049b c219  st   [$19]       2501  st([vAC+1])                     #25
              049c 1403  ld   $03,y       2502  ld(hi('NEXTY'),Y)               #26
              049d e000  jmp  y,$00       2503  jmp(Y,'NEXTY')                  #27
              049e 00f1  ld   $f1         2504  ld(-30/2)                       #28
                                          2505
              049f 0200  nop              2506  fillers(until=0xa7)
              04a0 0200  nop
              04a1 0200  nop
              * 8 times
                                          2507
                                          2508  # pc = 0x04a7
                                          2509  #-----------------------------------------------------------------------
                                          2510  #
                                          2511  #  vCPU extension functions (for acceleration and compaction) follow below.
                                          2512  #
                                          2513  #  The naming convention is: SYS_<CamelCase>[_v<V>]_<N>
                                          2514  #
                                          2515  #  With <N> the maximum number of cycles the function will run
                                          2516  #  (counted from NEXT to NEXT). This is the same number that must
                                          2517  #  be passed to the 'SYS' vCPU instruction as operand, and it will
                                          2518  #  appear in the GCL code upon use.
                                          2519  #
                                          2520  #  If a SYS extension got introduced after ROM v1, the version number of
                                          2521  #  introduction is included in the name. This helps the programmer to be
                                          2522  #  reminded to verify the acutal ROM version and fail gracefully on older
                                          2523  #  ROMs than required. See also Docs/GT1-files.txt on using [romType].
                                          2524  #
                                          2525  #-----------------------------------------------------------------------
                                          2526
                                          2527  #-----------------------------------------------------------------------
                                          2528  # Extension SYS_Random_34: Update entropy and copy to vAC
                                          2529  #-----------------------------------------------------------------------
                                          2530
                                          2531  # This same algorithm runs automatically once per vertical blank.
                                          2532  # Use this function to get numbers at a higher rate.
                                          2533  #
                                          2534  # Variables:
                                          2535  #       vAC
                                          2536
                                          2537  label('SYS_Random_34')
SYS_Random_34:
              04a7 010e  ld   [$0e]       2538  ld([frameCount])                #15
              04a8 6107  xora [$07]       2539  xora([entropy+1])               #16
              04a9 610f  xora [$0f]       2540  xora([serialRaw])               #17
              04aa 8106  adda [$06]       2541  adda([entropy+0])               #18
              04ab c206  st   [$06]       2542  st([entropy+0])                 #19
              04ac c218  st   [$18]       2543  st([vAC+0])                     #20
              04ad 8108  adda [$08]       2544  adda([entropy+2])               #21
              04ae c208  st   [$08]       2545  st([entropy+2])                 #22
              04af e8b2  blt  .sysRnd0    2546  bmi('.sysRnd0')                 #23
              04b0 fcb3  bra  .sysRnd1    2547  bra('.sysRnd1')                 #24
              04b1 6053  xora $53         2548  xora(64+16+2+1)                 #25
                                          2549  label('.sysRnd0')
.sysRnd0:     04b2 606c  xora $6c         2550  xora(64+32+8+4)                 #25
                                          2551  label('.sysRnd1')
.sysRnd1:     04b3 8107  adda [$07]       2552  adda([entropy+1])               #26
              04b4 c207  st   [$07]       2553  st([entropy+1])                 #27
              04b5 c219  st   [$19]       2554  st([vAC+1])                     #28
              04b6 1403  ld   $03,y       2555  ld(hi('REENTER'),Y)             #29
              04b7 e0cb  jmp  y,$cb       2556  jmp(Y,'REENTER')                #30
              04b8 00ef  ld   $ef         2557  ld(-34/2)                       #31
                                          2558
                                          2559  label('SYS_LSRW7_30')
SYS_LSRW7_30: 04b9 0118  ld   [$18]       2560  ld([vAC])                       #15
              04ba 3080  anda $80,x       2561  anda(128,X)                     #16
              04bb 0119  ld   [$19]       2562  ld([vAC+1])                     #17
              04bc 8200  adda ac          2563  adda(AC)                        #18
              04bd 4500  ora  [x]         2564  ora([X])                        #19
              04be c218  st   [$18]       2565  st([vAC])                       #20
              04bf 0119  ld   [$19]       2566  ld([vAC+1])                     #21
              04c0 3080  anda $80,x       2567  anda(128,X)                     #22
              04c1 0500  ld   [x]         2568  ld([X])                         #23
              04c2 c219  st   [$19]       2569  st([vAC+1])                     #24
              04c3 1403  ld   $03,y       2570  ld(hi('REENTER'),Y)             #25
              04c4 e0cb  jmp  y,$cb       2571  jmp(Y,'REENTER')                #26
              04c5 00f1  ld   $f1         2572  ld(-30/2)                       #27
                                          2573
                                          2574  label('SYS_LSRW8_24')
SYS_LSRW8_24: 04c6 0119  ld   [$19]       2575  ld([vAC+1])                     #15
              04c7 c218  st   [$18]       2576  st([vAC])                       #16
              04c8 0000  ld   $00         2577  ld(0)                           #17
              04c9 c219  st   [$19]       2578  st([vAC+1])                     #18
              04ca 1403  ld   $03,y       2579  ld(hi('REENTER'),Y)             #19
              04cb e0cb  jmp  y,$cb       2580  jmp(Y,'REENTER')                #20
              04cc 00f4  ld   $f4         2581  ld(-24/2)                       #21
                                          2582
                                          2583  label('SYS_LSLW8_24')
SYS_LSLW8_24: 04cd 0118  ld   [$18]       2584  ld([vAC])                       #15
              04ce c219  st   [$19]       2585  st([vAC+1])                     #16
              04cf 0000  ld   $00         2586  ld(0)                           #17
              04d0 c218  st   [$18]       2587  st([vAC])                       #18
              04d1 1403  ld   $03,y       2588  ld(hi('REENTER'),Y)             #19
              04d2 e0cb  jmp  y,$cb       2589  jmp(Y,'REENTER')                #20
              04d3 00f4  ld   $f4         2590  ld(-24/2)                       #21
                                          2591
                                          2592  #-----------------------------------------------------------------------
                                          2593  # Extension SYS_Draw4_30
                                          2594  #-----------------------------------------------------------------------
                                          2595
                                          2596  # Draw 4 pixels on screen, horizontally next to each other
                                          2597  #
                                          2598  # Variables:
                                          2599  #       sysArgs[0:3]    Pixels (in)
                                          2600  #       sysArgs[4:5]    Position on screen (in)
                                          2601
                                          2602  label('SYS_Draw4_30')
SYS_Draw4_30: 04d4 1128  ld   [$28],x     2603  ld([sysArgs+4],X)               #15
              04d5 1529  ld   [$29],y     2604  ld([sysArgs+5],Y)               #16
              04d6 0124  ld   [$24]       2605  ld([sysArgs+0])                 #17
              04d7 de00  st   [y,x++]     2606  st([Y,Xpp])                     #18
              04d8 0125  ld   [$25]       2607  ld([sysArgs+1])                 #19
              04d9 de00  st   [y,x++]     2608  st([Y,Xpp])                     #20
              04da 0126  ld   [$26]       2609  ld([sysArgs+2])                 #21
              04db de00  st   [y,x++]     2610  st([Y,Xpp])                     #22
              04dc 0127  ld   [$27]       2611  ld([sysArgs+3])                 #23
              04dd de00  st   [y,x++]     2612  st([Y,Xpp])                     #24
              04de 1403  ld   $03,y       2613  ld(hi('REENTER'),Y)             #25
              04df e0cb  jmp  y,$cb       2614  jmp(Y,'REENTER')                #26
              04e0 00f1  ld   $f1         2615  ld(-30/2)                       #27
                                          2616
                                          2617  #-----------------------------------------------------------------------
                                          2618  # Extension SYS_VDrawBits_134:
                                          2619  #-----------------------------------------------------------------------
                                          2620
                                          2621  # Draw slice of a character, 8 pixels vertical
                                          2622  #
                                          2623  # Variables:
                                          2624  #       sysArgs[0]      Color 0 "background" (in)
                                          2625  #       sysArgs[1]      Color 1 "pen" (in)
                                          2626  #       sysArgs[2]      8 bits, highest bit first (in, changed)
                                          2627  #       sysArgs[4:5]    Position on screen (in)
                                          2628
                                          2629  label('SYS_VDrawBits_134')
SYS_VDrawBits_134:
              04e1 1412  ld   $12,y       2630  ld(hi('sys_VDrawBits'),Y)       #15
              04e2 e093  jmp  y,$93       2631  jmp(Y,'sys_VDrawBits')          #16
              04e3 1128  ld   [$28],x     2632  ld([sysArgs+4],X)               #17
                                          2633
                                          2634  #-----------------------------------------------------------------------
                                          2635
                                          2636  # Interrupt handler:
                                          2637  #       STW  $xx        -> optionally store vCpuSelect
                                          2638  #       ... IRQ payload ...
                                          2639  # either:
                                          2640  #       LDWI $400
                                          2641  #       LUP  0          -> vRTI and don't switch interpreter (immediate resume)
                                          2642  # or:
                                          2643  #       LDWI $400
                                          2644  #       LUP  $xx        -> vRTI and switch interpreter type as stored in [$xx]
              04e4 0200  nop              2645  fillers(until=251-13)
              04e5 0200  nop
              04e6 0200  nop
              * 10 times
                                          2646  label('vRTI#15')
vRTI#15:      04ee 0130  ld   [$30]       2647  ld([0x30])                      #15 Continue with vCPU in the same timeslice (faster)
              04ef c216  st   [$16]       2648  st([vPC])                       #16
              04f0 0131  ld   [$31]       2649  ld([0x31])                      #17
              04f1 c217  st   [$17]       2650  st([vPC+1])                     #18
              04f2 0132  ld   [$32]       2651  ld([0x32])                      #19
              04f3 c218  st   [$18]       2652  st([vAC])                       #20
              04f4 0133  ld   [$33]       2653  ld([0x33])                      #21
              04f5 c219  st   [$19]       2654  st([vAC+1])                     #22
              04f6 0134  ld   [$34]       2655  ld([0x34])                      #23 Restore vCpuSelect for PREFIX
              04f7 c202  st   [$02]       2656  st([vCpuSelect])                #24
              04f8 9401  adda $01,y       2657  adda(1,Y)                       #25 Jump to correct PREFIX page, (or page by default)
              04f9 e0cb  jmp  y,$cb       2658  jmp(Y,'REENTER')                #26
              04fa 00f1  ld   $f1         2659  ld(-30/2)                       #27
                                          2660  # vRTI entry point
                                          2661  assert(pc()&255 == 251)         # The landing offset 251 for LUP trampoline is fixed
              04fb f0ee  beq  vRTI#15     2662  beq('vRTI#15')                  #13 vRTI sequence
              04fc 9001  adda $01,x       2663  adda(1,X)                       #14
              04fd 1412  ld   $12,y       2664  ld(hi('vRTI#18'),Y)             #15 Switch and wait for end of timeslice (slower)
              04fe e022  jmp  y,$22       2665  jmp(Y,'vRTI#18')                #16
              04ff c21d  st   [$1d]       2666  st([vTmp])                      #17
                                          2667
                                          2668  #-----------------------------------------------------------------------
                                          2669  #
                                          2670  #  $0500 ROM page 5-6: Shift table and code
                                          2671  #
                                          2672  #-----------------------------------------------------------------------
                                          2673
                                          2674  align(0x100, size=0x200)
                                          2675
                                          2676  # Lookup table for i>>n, with n in 1..6
                                          2677  # Indexing ix = i & ~b | (b-1), where b = 1<<(n-1)
                                          2678  #       ...
                                          2679  #       ld   <.ret
                                          2680  #       st   [vTmp]
                                          2681  #       ld   >shiftTable,y
                                          2682  #       <calculate ix>
                                          2683  #       jmp  y,ac
                                          2684  #       bra  $ff
                                          2685  # .ret: ...
                                          2686  #
                                          2687  # i >> 7 can be always be done with RAM: [i&128]
                                          2688  #       ...
                                          2689  #       anda $80,x
                                          2690  #       ld   [x]
                                          2691  #       ...
                                          2692
                                          2693  label('shiftTable')
                                          2694  shiftTable = pc()
                                          2695
                                          2696  for ix in range(255):
                                          2697    for n in range(1,7): # Find first zero
                                          2698      if ~ix & (1 << (n-1)):
                                          2699        break
                                          2700    pattern = ['x' if i<n else '1' if ix&(1<<i) else '0' for i in range(8)]
                                          2701    ld(ix>>n); C('0b%s >> %d' % (''.join(reversed(pattern)), n))
shiftTable:   0500 0000  ld   $00         ;0b0000000x >> 1
              0501 0000  ld   $00         ;0b000000xx >> 2
              0502 0001  ld   $01         ;0b0000001x >> 1
              0503 0000  ld   $00         ;0b00000xxx >> 3
              0504 0002  ld   $02         ;0b0000010x >> 1
              0505 0001  ld   $01         ;0b000001xx >> 2
              0506 0003  ld   $03         ;0b0000011x >> 1
              0507 0000  ld   $00         ;0b0000xxxx >> 4
              0508 0004  ld   $04         ;0b0000100x >> 1
              0509 0002  ld   $02         ;0b000010xx >> 2
              050a 0005  ld   $05         ;0b0000101x >> 1
              050b 0001  ld   $01         ;0b00001xxx >> 3
              050c 0006  ld   $06         ;0b0000110x >> 1
              050d 0003  ld   $03         ;0b000011xx >> 2
              050e 0007  ld   $07         ;0b0000111x >> 1
              050f 0000  ld   $00         ;0b000xxxxx >> 5
              0510 0008  ld   $08         ;0b0001000x >> 1
              0511 0004  ld   $04         ;0b000100xx >> 2
              0512 0009  ld   $09         ;0b0001001x >> 1
              0513 0002  ld   $02         ;0b00010xxx >> 3
              0514 000a  ld   $0a         ;0b0001010x >> 1
              0515 0005  ld   $05         ;0b000101xx >> 2
              0516 000b  ld   $0b         ;0b0001011x >> 1
              0517 0001  ld   $01         ;0b0001xxxx >> 4
              0518 000c  ld   $0c         ;0b0001100x >> 1
              0519 0006  ld   $06         ;0b000110xx >> 2
              051a 000d  ld   $0d         ;0b0001101x >> 1
              051b 0003  ld   $03         ;0b00011xxx >> 3
              051c 000e  ld   $0e         ;0b0001110x >> 1
              051d 0007  ld   $07         ;0b000111xx >> 2
              051e 000f  ld   $0f         ;0b0001111x >> 1
              051f 0000  ld   $00         ;0b00xxxxxx >> 6
              0520 0010  ld   $10         ;0b0010000x >> 1
              0521 0008  ld   $08         ;0b001000xx >> 2
              0522 0011  ld   $11         ;0b0010001x >> 1
              0523 0004  ld   $04         ;0b00100xxx >> 3
              0524 0012  ld   $12         ;0b0010010x >> 1
              0525 0009  ld   $09         ;0b001001xx >> 2
              0526 0013  ld   $13         ;0b0010011x >> 1
              0527 0002  ld   $02         ;0b0010xxxx >> 4
              0528 0014  ld   $14         ;0b0010100x >> 1
              0529 000a  ld   $0a         ;0b001010xx >> 2
              052a 0015  ld   $15         ;0b0010101x >> 1
              052b 0005  ld   $05         ;0b00101xxx >> 3
              052c 0016  ld   $16         ;0b0010110x >> 1
              052d 000b  ld   $0b         ;0b001011xx >> 2
              052e 0017  ld   $17         ;0b0010111x >> 1
              052f 0001  ld   $01         ;0b001xxxxx >> 5
              0530 0018  ld   $18         ;0b0011000x >> 1
              0531 000c  ld   $0c         ;0b001100xx >> 2
              0532 0019  ld   $19         ;0b0011001x >> 1
              0533 0006  ld   $06         ;0b00110xxx >> 3
              0534 001a  ld   $1a         ;0b0011010x >> 1
              0535 000d  ld   $0d         ;0b001101xx >> 2
              0536 001b  ld   $1b         ;0b0011011x >> 1
              0537 0003  ld   $03         ;0b0011xxxx >> 4
              0538 001c  ld   $1c         ;0b0011100x >> 1
              0539 000e  ld   $0e         ;0b001110xx >> 2
              053a 001d  ld   $1d         ;0b0011101x >> 1
              053b 0007  ld   $07         ;0b00111xxx >> 3
              053c 001e  ld   $1e         ;0b0011110x >> 1
              053d 000f  ld   $0f         ;0b001111xx >> 2
              053e 001f  ld   $1f         ;0b0011111x >> 1
              053f 0000  ld   $00         ;0b00xxxxxx >> 6
              0540 0020  ld   $20         ;0b0100000x >> 1
              0541 0010  ld   $10         ;0b010000xx >> 2
              0542 0021  ld   $21         ;0b0100001x >> 1
              0543 0008  ld   $08         ;0b01000xxx >> 3
              0544 0022  ld   $22         ;0b0100010x >> 1
              0545 0011  ld   $11         ;0b010001xx >> 2
              0546 0023  ld   $23         ;0b0100011x >> 1
              0547 0004  ld   $04         ;0b0100xxxx >> 4
              0548 0024  ld   $24         ;0b0100100x >> 1
              0549 0012  ld   $12         ;0b010010xx >> 2
              054a 0025  ld   $25         ;0b0100101x >> 1
              054b 0009  ld   $09         ;0b01001xxx >> 3
              054c 0026  ld   $26         ;0b0100110x >> 1
              054d 0013  ld   $13         ;0b010011xx >> 2
              054e 0027  ld   $27         ;0b0100111x >> 1
              054f 0002  ld   $02         ;0b010xxxxx >> 5
              0550 0028  ld   $28         ;0b0101000x >> 1
              0551 0014  ld   $14         ;0b010100xx >> 2
              0552 0029  ld   $29         ;0b0101001x >> 1
              0553 000a  ld   $0a         ;0b01010xxx >> 3
              0554 002a  ld   $2a         ;0b0101010x >> 1
              0555 0015  ld   $15         ;0b010101xx >> 2
              0556 002b  ld   $2b         ;0b0101011x >> 1
              0557 0005  ld   $05         ;0b0101xxxx >> 4
              0558 002c  ld   $2c         ;0b0101100x >> 1
              0559 0016  ld   $16         ;0b010110xx >> 2
              055a 002d  ld   $2d         ;0b0101101x >> 1
              055b 000b  ld   $0b         ;0b01011xxx >> 3
              055c 002e  ld   $2e         ;0b0101110x >> 1
              055d 0017  ld   $17         ;0b010111xx >> 2
              055e 002f  ld   $2f         ;0b0101111x >> 1
              055f 0001  ld   $01         ;0b01xxxxxx >> 6
              0560 0030  ld   $30         ;0b0110000x >> 1
              0561 0018  ld   $18         ;0b011000xx >> 2
              0562 0031  ld   $31         ;0b0110001x >> 1
              0563 000c  ld   $0c         ;0b01100xxx >> 3
              0564 0032  ld   $32         ;0b0110010x >> 1
              0565 0019  ld   $19         ;0b011001xx >> 2
              0566 0033  ld   $33         ;0b0110011x >> 1
              0567 0006  ld   $06         ;0b0110xxxx >> 4
              0568 0034  ld   $34         ;0b0110100x >> 1
              0569 001a  ld   $1a         ;0b011010xx >> 2
              056a 0035  ld   $35         ;0b0110101x >> 1
              056b 000d  ld   $0d         ;0b01101xxx >> 3
              056c 0036  ld   $36         ;0b0110110x >> 1
              056d 001b  ld   $1b         ;0b011011xx >> 2
              056e 0037  ld   $37         ;0b0110111x >> 1
              056f 0003  ld   $03         ;0b011xxxxx >> 5
              0570 0038  ld   $38         ;0b0111000x >> 1
              0571 001c  ld   $1c         ;0b011100xx >> 2
              0572 0039  ld   $39         ;0b0111001x >> 1
              0573 000e  ld   $0e         ;0b01110xxx >> 3
              0574 003a  ld   $3a         ;0b0111010x >> 1
              0575 001d  ld   $1d         ;0b011101xx >> 2
              0576 003b  ld   $3b         ;0b0111011x >> 1
              0577 0007  ld   $07         ;0b0111xxxx >> 4
              0578 003c  ld   $3c         ;0b0111100x >> 1
              0579 001e  ld   $1e         ;0b011110xx >> 2
              057a 003d  ld   $3d         ;0b0111101x >> 1
              057b 000f  ld   $0f         ;0b01111xxx >> 3
              057c 003e  ld   $3e         ;0b0111110x >> 1
              057d 001f  ld   $1f         ;0b011111xx >> 2
              057e 003f  ld   $3f         ;0b0111111x >> 1
              057f 0001  ld   $01         ;0b01xxxxxx >> 6
              0580 0040  ld   $40         ;0b1000000x >> 1
              0581 0020  ld   $20         ;0b100000xx >> 2
              0582 0041  ld   $41         ;0b1000001x >> 1
              0583 0010  ld   $10         ;0b10000xxx >> 3
              0584 0042  ld   $42         ;0b1000010x >> 1
              0585 0021  ld   $21         ;0b100001xx >> 2
              0586 0043  ld   $43         ;0b1000011x >> 1
              0587 0008  ld   $08         ;0b1000xxxx >> 4
              0588 0044  ld   $44         ;0b1000100x >> 1
              0589 0022  ld   $22         ;0b100010xx >> 2
              058a 0045  ld   $45         ;0b1000101x >> 1
              058b 0011  ld   $11         ;0b10001xxx >> 3
              058c 0046  ld   $46         ;0b1000110x >> 1
              058d 0023  ld   $23         ;0b100011xx >> 2
              058e 0047  ld   $47         ;0b1000111x >> 1
              058f 0004  ld   $04         ;0b100xxxxx >> 5
              0590 0048  ld   $48         ;0b1001000x >> 1
              0591 0024  ld   $24         ;0b100100xx >> 2
              0592 0049  ld   $49         ;0b1001001x >> 1
              0593 0012  ld   $12         ;0b10010xxx >> 3
              0594 004a  ld   $4a         ;0b1001010x >> 1
              0595 0025  ld   $25         ;0b100101xx >> 2
              0596 004b  ld   $4b         ;0b1001011x >> 1
              0597 0009  ld   $09         ;0b1001xxxx >> 4
              0598 004c  ld   $4c         ;0b1001100x >> 1
              0599 0026  ld   $26         ;0b100110xx >> 2
              059a 004d  ld   $4d         ;0b1001101x >> 1
              059b 0013  ld   $13         ;0b10011xxx >> 3
              059c 004e  ld   $4e         ;0b1001110x >> 1
              059d 0027  ld   $27         ;0b100111xx >> 2
              059e 004f  ld   $4f         ;0b1001111x >> 1
              059f 0002  ld   $02         ;0b10xxxxxx >> 6
              05a0 0050  ld   $50         ;0b1010000x >> 1
              05a1 0028  ld   $28         ;0b101000xx >> 2
              05a2 0051  ld   $51         ;0b1010001x >> 1
              05a3 0014  ld   $14         ;0b10100xxx >> 3
              05a4 0052  ld   $52         ;0b1010010x >> 1
              05a5 0029  ld   $29         ;0b101001xx >> 2
              05a6 0053  ld   $53         ;0b1010011x >> 1
              05a7 000a  ld   $0a         ;0b1010xxxx >> 4
              05a8 0054  ld   $54         ;0b1010100x >> 1
              05a9 002a  ld   $2a         ;0b101010xx >> 2
              05aa 0055  ld   $55         ;0b1010101x >> 1
              05ab 0015  ld   $15         ;0b10101xxx >> 3
              05ac 0056  ld   $56         ;0b1010110x >> 1
              05ad 002b  ld   $2b         ;0b101011xx >> 2
              05ae 0057  ld   $57         ;0b1010111x >> 1
              05af 0005  ld   $05         ;0b101xxxxx >> 5
              05b0 0058  ld   $58         ;0b1011000x >> 1
              05b1 002c  ld   $2c         ;0b101100xx >> 2
              05b2 0059  ld   $59         ;0b1011001x >> 1
              05b3 0016  ld   $16         ;0b10110xxx >> 3
              05b4 005a  ld   $5a         ;0b1011010x >> 1
              05b5 002d  ld   $2d         ;0b101101xx >> 2
              05b6 005b  ld   $5b         ;0b1011011x >> 1
              05b7 000b  ld   $0b         ;0b1011xxxx >> 4
              05b8 005c  ld   $5c         ;0b1011100x >> 1
              05b9 002e  ld   $2e         ;0b101110xx >> 2
              05ba 005d  ld   $5d         ;0b1011101x >> 1
              05bb 0017  ld   $17         ;0b10111xxx >> 3
              05bc 005e  ld   $5e         ;0b1011110x >> 1
              05bd 002f  ld   $2f         ;0b101111xx >> 2
              05be 005f  ld   $5f         ;0b1011111x >> 1
              05bf 0002  ld   $02         ;0b10xxxxxx >> 6
              05c0 0060  ld   $60         ;0b1100000x >> 1
              05c1 0030  ld   $30         ;0b110000xx >> 2
              05c2 0061  ld   $61         ;0b1100001x >> 1
              05c3 0018  ld   $18         ;0b11000xxx >> 3
              05c4 0062  ld   $62         ;0b1100010x >> 1
              05c5 0031  ld   $31         ;0b110001xx >> 2
              05c6 0063  ld   $63         ;0b1100011x >> 1
              05c7 000c  ld   $0c         ;0b1100xxxx >> 4
              05c8 0064  ld   $64         ;0b1100100x >> 1
              05c9 0032  ld   $32         ;0b110010xx >> 2
              05ca 0065  ld   $65         ;0b1100101x >> 1
              05cb 0019  ld   $19         ;0b11001xxx >> 3
              05cc 0066  ld   $66         ;0b1100110x >> 1
              05cd 0033  ld   $33         ;0b110011xx >> 2
              05ce 0067  ld   $67         ;0b1100111x >> 1
              05cf 0006  ld   $06         ;0b110xxxxx >> 5
              05d0 0068  ld   $68         ;0b1101000x >> 1
              05d1 0034  ld   $34         ;0b110100xx >> 2
              05d2 0069  ld   $69         ;0b1101001x >> 1
              05d3 001a  ld   $1a         ;0b11010xxx >> 3
              05d4 006a  ld   $6a         ;0b1101010x >> 1
              05d5 0035  ld   $35         ;0b110101xx >> 2
              05d6 006b  ld   $6b         ;0b1101011x >> 1
              05d7 000d  ld   $0d         ;0b1101xxxx >> 4
              05d8 006c  ld   $6c         ;0b1101100x >> 1
              05d9 0036  ld   $36         ;0b110110xx >> 2
              05da 006d  ld   $6d         ;0b1101101x >> 1
              05db 001b  ld   $1b         ;0b11011xxx >> 3
              05dc 006e  ld   $6e         ;0b1101110x >> 1
              05dd 0037  ld   $37         ;0b110111xx >> 2
              05de 006f  ld   $6f         ;0b1101111x >> 1
              05df 0003  ld   $03         ;0b11xxxxxx >> 6
              05e0 0070  ld   $70         ;0b1110000x >> 1
              05e1 0038  ld   $38         ;0b111000xx >> 2
              05e2 0071  ld   $71         ;0b1110001x >> 1
              05e3 001c  ld   $1c         ;0b11100xxx >> 3
              05e4 0072  ld   $72         ;0b1110010x >> 1
              05e5 0039  ld   $39         ;0b111001xx >> 2
              05e6 0073  ld   $73         ;0b1110011x >> 1
              05e7 000e  ld   $0e         ;0b1110xxxx >> 4
              05e8 0074  ld   $74         ;0b1110100x >> 1
              05e9 003a  ld   $3a         ;0b111010xx >> 2
              05ea 0075  ld   $75         ;0b1110101x >> 1
              05eb 001d  ld   $1d         ;0b11101xxx >> 3
              05ec 0076  ld   $76         ;0b1110110x >> 1
              05ed 003b  ld   $3b         ;0b111011xx >> 2
              05ee 0077  ld   $77         ;0b1110111x >> 1
              05ef 0007  ld   $07         ;0b111xxxxx >> 5
              05f0 0078  ld   $78         ;0b1111000x >> 1
              05f1 003c  ld   $3c         ;0b111100xx >> 2
              05f2 0079  ld   $79         ;0b1111001x >> 1
              05f3 001e  ld   $1e         ;0b11110xxx >> 3
              05f4 007a  ld   $7a         ;0b1111010x >> 1
              05f5 003d  ld   $3d         ;0b111101xx >> 2
              05f6 007b  ld   $7b         ;0b1111011x >> 1
              05f7 000f  ld   $0f         ;0b1111xxxx >> 4
              05f8 007c  ld   $7c         ;0b1111100x >> 1
              05f9 003e  ld   $3e         ;0b111110xx >> 2
              05fa 007d  ld   $7d         ;0b1111101x >> 1
              05fb 001f  ld   $1f         ;0b11111xxx >> 3
              05fc 007e  ld   $7e         ;0b1111110x >> 1
              05fd 003f  ld   $3f         ;0b111111xx >> 2
              05fe 007f  ld   $7f         ;0b1111111x >> 1
                                          2702
                                          2703  assert pc()&255 == 255
              05ff fd1d  bra  [$1d]       2704  bra([vTmp])                     # Jumps back into next page
                                          2705
                                          2706  label('SYS_LSRW1_48')
                                          2707  assert pc()&255 == 0            # First instruction on this page *must* be a nop
SYS_LSRW1_48: 0600 0200  nop              2708  nop()                           #15
              0601 1405  ld   $05,y       2709  ld(hi('shiftTable'),Y)          #16 Logical shift right 1 bit (X >> 1)
              0602 0008  ld   $08         2710  ld('.sysLsrw1a')                #17 Shift low byte
              0603 c21d  st   [$1d]       2711  st([vTmp])                      #18
              0604 0118  ld   [$18]       2712  ld([vAC])                       #19
              0605 20fe  anda $fe         2713  anda(0b11111110)                #20
              0606 e200  jmp  y,ac        2714  jmp(Y,AC)                       #21
              0607 fcff  bra  $ff         2715  bra(255)                        #22 bra shiftTable+255
                                          2716  label('.sysLsrw1a')
.sysLsrw1a:   0608 c218  st   [$18]       2717  st([vAC])                       #26
              0609 0119  ld   [$19]       2718  ld([vAC+1])                     #27 Transfer bit 8
              060a 2001  anda $01         2719  anda(1)                         #28
              060b 807f  adda $7f         2720  adda(127)                       #29
              060c 2080  anda $80         2721  anda(128)                       #30
              060d 4118  ora  [$18]       2722  ora([vAC])                      #31
              060e c218  st   [$18]       2723  st([vAC])                       #32
              060f 0015  ld   $15         2724  ld('.sysLsrw1b')                #33 Shift high byte
              0610 c21d  st   [$1d]       2725  st([vTmp])                      #34
              0611 0119  ld   [$19]       2726  ld([vAC+1])                     #35
              0612 20fe  anda $fe         2727  anda(0b11111110)                #36
              0613 e200  jmp  y,ac        2728  jmp(Y,AC)                       #37
              0614 fcff  bra  $ff         2729  bra(255)                        #38 bra shiftTable+255
                                          2730  label('.sysLsrw1b')
.sysLsrw1b:   0615 c219  st   [$19]       2731  st([vAC+1])                     #42
              0616 1403  ld   $03,y       2732  ld(hi('REENTER'),Y)             #43
              0617 e0cb  jmp  y,$cb       2733  jmp(Y,'REENTER')                #44
              0618 00e8  ld   $e8         2734  ld(-48/2)                       #45
                                          2735
                                          2736  label('SYS_LSRW2_52')
SYS_LSRW2_52: 0619 1405  ld   $05,y       2737  ld(hi('shiftTable'),Y)          #15 Logical shift right 2 bit (X >> 2)
              061a 0021  ld   $21         2738  ld('.sysLsrw2a')                #16 Shift low byte
              061b c21d  st   [$1d]       2739  st([vTmp])                      #17
              061c 0118  ld   [$18]       2740  ld([vAC])                       #18
              061d 20fc  anda $fc         2741  anda(0b11111100)                #19
              061e 4001  ora  $01         2742  ora( 0b00000001)                #20
              061f e200  jmp  y,ac        2743  jmp(Y,AC)                       #21
              0620 fcff  bra  $ff         2744  bra(255)                        #22 bra shiftTable+255
                                          2745  label('.sysLsrw2a')
.sysLsrw2a:   0621 c218  st   [$18]       2746  st([vAC])                       #26
              0622 0119  ld   [$19]       2747  ld([vAC+1])                     #27 Transfer bit 8:9
              0623 8200  adda ac          2748  adda(AC)                        #28
              0624 8200  adda ac          2749  adda(AC)                        #29
              0625 8200  adda ac          2750  adda(AC)                        #30
              0626 8200  adda ac          2751  adda(AC)                        #31
              0627 8200  adda ac          2752  adda(AC)                        #32
              0628 8200  adda ac          2753  adda(AC)                        #33
              0629 4118  ora  [$18]       2754  ora([vAC])                      #34
              062a c218  st   [$18]       2755  st([vAC])                       #35
              062b 0032  ld   $32         2756  ld('.sysLsrw2b')                #36 Shift high byte
              062c c21d  st   [$1d]       2757  st([vTmp])                      #37
              062d 0119  ld   [$19]       2758  ld([vAC+1])                     #38
              062e 20fc  anda $fc         2759  anda(0b11111100)                #39
              062f 4001  ora  $01         2760  ora( 0b00000001)                #40
              0630 e200  jmp  y,ac        2761  jmp(Y,AC)                       #41
              0631 fcff  bra  $ff         2762  bra(255)                        #42 bra shiftTable+255
                                          2763  label('.sysLsrw2b')
.sysLsrw2b:   0632 c219  st   [$19]       2764  st([vAC+1])                     #46
              0633 1403  ld   $03,y       2765  ld(hi('REENTER'),Y)             #47
              0634 e0cb  jmp  y,$cb       2766  jmp(Y,'REENTER')                #48
              0635 00e6  ld   $e6         2767  ld(-52/2)                       #49
                                          2768
                                          2769  label('SYS_LSRW3_52')
SYS_LSRW3_52: 0636 1405  ld   $05,y       2770  ld(hi('shiftTable'),Y)          #15 Logical shift right 3 bit (X >> 3)
              0637 003e  ld   $3e         2771  ld('.sysLsrw3a')                #16 Shift low byte
              0638 c21d  st   [$1d]       2772  st([vTmp])                      #17
              0639 0118  ld   [$18]       2773  ld([vAC])                       #18
              063a 20f8  anda $f8         2774  anda(0b11111000)                #19
              063b 4003  ora  $03         2775  ora( 0b00000011)                #20
              063c e200  jmp  y,ac        2776  jmp(Y,AC)                       #21
              063d fcff  bra  $ff         2777  bra(255)                        #22 bra shiftTable+255
                                          2778  label('.sysLsrw3a')
.sysLsrw3a:   063e c218  st   [$18]       2779  st([vAC])                       #26
              063f 0119  ld   [$19]       2780  ld([vAC+1])                     #27 Transfer bit 8:10
              0640 8200  adda ac          2781  adda(AC)                        #28
              0641 8200  adda ac          2782  adda(AC)                        #29
              0642 8200  adda ac          2783  adda(AC)                        #30
              0643 8200  adda ac          2784  adda(AC)                        #31
              0644 8200  adda ac          2785  adda(AC)                        #32
              0645 4118  ora  [$18]       2786  ora([vAC])                      #33
              0646 c218  st   [$18]       2787  st([vAC])                       #34
              0647 004e  ld   $4e         2788  ld('.sysLsrw3b')                #35 Shift high byte
              0648 c21d  st   [$1d]       2789  st([vTmp])                      #36
              0649 0119  ld   [$19]       2790  ld([vAC+1])                     #37
              064a 20f8  anda $f8         2791  anda(0b11111000)                #38
              064b 4003  ora  $03         2792  ora( 0b00000011)                #39
              064c e200  jmp  y,ac        2793  jmp(Y,AC)                       #40
              064d fcff  bra  $ff         2794  bra(255)                        #41 bra shiftTable+255
                                          2795  label('.sysLsrw3b')
.sysLsrw3b:   064e c219  st   [$19]       2796  st([vAC+1])                     #45
              064f 00e6  ld   $e6         2797  ld(-52/2)                       #46
              0650 1403  ld   $03,y       2798  ld(hi('REENTER'),Y)             #47
              0651 e0cb  jmp  y,$cb       2799  jmp(Y,'REENTER')                #48
                                          2800  #nop()                          #49
                                          2801
                                          2802  label('SYS_LSRW4_50')
SYS_LSRW4_50: 0652 1405  ld   $05,y       2803  ld(hi('shiftTable'),Y)          #15,49 Logical shift right 4 bit (X >> 4)
              0653 005a  ld   $5a         2804  ld('.sysLsrw4a')                #16 Shift low byte
              0654 c21d  st   [$1d]       2805  st([vTmp])                      #17
              0655 0118  ld   [$18]       2806  ld([vAC])                       #18
              0656 20f0  anda $f0         2807  anda(0b11110000)                #19
              0657 4007  ora  $07         2808  ora( 0b00000111)                #20
              0658 e200  jmp  y,ac        2809  jmp(Y,AC)                       #21
              0659 fcff  bra  $ff         2810  bra(255)                        #22 bra shiftTable+255
                                          2811  label('.sysLsrw4a')
.sysLsrw4a:   065a c218  st   [$18]       2812  st([vAC])                       #26
              065b 0119  ld   [$19]       2813  ld([vAC+1])                     #27 Transfer bit 8:11
              065c 8200  adda ac          2814  adda(AC)                        #28
              065d 8200  adda ac          2815  adda(AC)                        #29
              065e 8200  adda ac          2816  adda(AC)                        #30
              065f 8200  adda ac          2817  adda(AC)                        #31
              0660 4118  ora  [$18]       2818  ora([vAC])                      #32
              0661 c218  st   [$18]       2819  st([vAC])                       #33
              0662 0069  ld   $69         2820  ld('.sysLsrw4b')                #34 Shift high byte'
              0663 c21d  st   [$1d]       2821  st([vTmp])                      #35
              0664 0119  ld   [$19]       2822  ld([vAC+1])                     #36
              0665 20f0  anda $f0         2823  anda(0b11110000)                #37
              0666 4007  ora  $07         2824  ora( 0b00000111)                #38
              0667 e200  jmp  y,ac        2825  jmp(Y,AC)                       #39
              0668 fcff  bra  $ff         2826  bra(255)                        #40 bra shiftTable+255
                                          2827  label('.sysLsrw4b')
.sysLsrw4b:   0669 c219  st   [$19]       2828  st([vAC+1])                     #44
              066a 1403  ld   $03,y       2829  ld(hi('REENTER'),Y)             #45
              066b e0cb  jmp  y,$cb       2830  jmp(Y,'REENTER')                #46
              066c 00e7  ld   $e7         2831  ld(-50/2)                       #47
                                          2832
                                          2833  label('SYS_LSRW5_50')
SYS_LSRW5_50: 066d 1405  ld   $05,y       2834  ld(hi('shiftTable'),Y)          #15 Logical shift right 5 bit (X >> 5)
              066e 0075  ld   $75         2835  ld('.sysLsrw5a')                #16 Shift low byte
              066f c21d  st   [$1d]       2836  st([vTmp])                      #17
              0670 0118  ld   [$18]       2837  ld([vAC])                       #18
              0671 20e0  anda $e0         2838  anda(0b11100000)                #19
              0672 400f  ora  $0f         2839  ora( 0b00001111)                #20
              0673 e200  jmp  y,ac        2840  jmp(Y,AC)                       #21
              0674 fcff  bra  $ff         2841  bra(255)                        #22 bra shiftTable+255
                                          2842  label('.sysLsrw5a')
.sysLsrw5a:   0675 c218  st   [$18]       2843  st([vAC])                       #26
              0676 0119  ld   [$19]       2844  ld([vAC+1])                     #27 Transfer bit 8:13
              0677 8200  adda ac          2845  adda(AC)                        #28
              0678 8200  adda ac          2846  adda(AC)                        #29
              0679 8200  adda ac          2847  adda(AC)                        #30
              067a 4118  ora  [$18]       2848  ora([vAC])                      #31
              067b c218  st   [$18]       2849  st([vAC])                       #32
              067c 0083  ld   $83         2850  ld('.sysLsrw5b')                #33 Shift high byte
              067d c21d  st   [$1d]       2851  st([vTmp])                      #34
              067e 0119  ld   [$19]       2852  ld([vAC+1])                     #35
              067f 20e0  anda $e0         2853  anda(0b11100000)                #36
              0680 400f  ora  $0f         2854  ora( 0b00001111)                #37
              0681 e200  jmp  y,ac        2855  jmp(Y,AC)                       #38
              0682 fcff  bra  $ff         2856  bra(255)                        #39 bra shiftTable+255
                                          2857  label('.sysLsrw5b')
.sysLsrw5b:   0683 c219  st   [$19]       2858  st([vAC+1])                     #44
              0684 00e7  ld   $e7         2859  ld(-50/2)                       #45
              0685 1403  ld   $03,y       2860  ld(hi('REENTER'),Y)             #46
              0686 e0cb  jmp  y,$cb       2861  jmp(Y,'REENTER')                #47
                                          2862  #nop()                          #48
                                          2863
                                          2864  label('SYS_LSRW6_48')
SYS_LSRW6_48: 0687 1405  ld   $05,y       2865  ld(hi('shiftTable'),Y)          #15,44 Logical shift right 6 bit (X >> 6)
              0688 008f  ld   $8f         2866  ld('.sysLsrw6a')                #16 Shift low byte
              0689 c21d  st   [$1d]       2867  st([vTmp])                      #17
              068a 0118  ld   [$18]       2868  ld([vAC])                       #18
              068b 20c0  anda $c0         2869  anda(0b11000000)                #19
              068c 401f  ora  $1f         2870  ora( 0b00011111)                #20
              068d e200  jmp  y,ac        2871  jmp(Y,AC)                       #21
              068e fcff  bra  $ff         2872  bra(255)                        #22 bra shiftTable+255
                                          2873  label('.sysLsrw6a')
.sysLsrw6a:   068f c218  st   [$18]       2874  st([vAC])                       #26
              0690 0119  ld   [$19]       2875  ld([vAC+1])                     #27 Transfer bit 8:13
              0691 8200  adda ac          2876  adda(AC)                        #28
              0692 8200  adda ac          2877  adda(AC)                        #29
              0693 4118  ora  [$18]       2878  ora([vAC])                      #30
              0694 c218  st   [$18]       2879  st([vAC])                       #31
              0695 009c  ld   $9c         2880  ld('.sysLsrw6b')                #32 Shift high byte
              0696 c21d  st   [$1d]       2881  st([vTmp])                      #33
              0697 0119  ld   [$19]       2882  ld([vAC+1])                     #34
              0698 20c0  anda $c0         2883  anda(0b11000000)                #35
              0699 401f  ora  $1f         2884  ora( 0b00011111)                #36
              069a e200  jmp  y,ac        2885  jmp(Y,AC)                       #37
              069b fcff  bra  $ff         2886  bra(255)                        #38 bra shiftTable+255
                                          2887  label('.sysLsrw6b')
.sysLsrw6b:   069c c219  st   [$19]       2888  st([vAC+1])                     #42
              069d 1403  ld   $03,y       2889  ld(hi('REENTER'),Y)             #43
              069e e0cb  jmp  y,$cb       2890  jmp(Y,'REENTER')                #44
              069f 00e8  ld   $e8         2891  ld(-48/2)                       #45
                                          2892
                                          2893  label('SYS_LSLW4_46')
SYS_LSLW4_46: 06a0 1405  ld   $05,y       2894  ld(hi('shiftTable'),Y)          #15 Logical shift left 4 bit (X << 4)
              06a1 00ae  ld   $ae         2895  ld('.sysLsrl4')                 #16
              06a2 c21d  st   [$1d]       2896  st([vTmp])                      #17
              06a3 0119  ld   [$19]       2897  ld([vAC+1])                     #18
              06a4 8200  adda ac          2898  adda(AC)                        #19
              06a5 8200  adda ac          2899  adda(AC)                        #20
              06a6 8200  adda ac          2900  adda(AC)                        #21
              06a7 8200  adda ac          2901  adda(AC)                        #22
              06a8 c219  st   [$19]       2902  st([vAC+1])                     #23
              06a9 0118  ld   [$18]       2903  ld([vAC])                       #24
              06aa 20f0  anda $f0         2904  anda(0b11110000)                #25
              06ab 4007  ora  $07         2905  ora( 0b00000111)                #26
              06ac e200  jmp  y,ac        2906  jmp(Y,AC)                       #27
              06ad fcff  bra  $ff         2907  bra(255)                        #28 bra shiftTable+255
                                          2908  label('.sysLsrl4')
.sysLsrl4:    06ae 4119  ora  [$19]       2909  ora([vAC+1])                    #32
              06af c219  st   [$19]       2910  st([vAC+1])                     #33
              06b0 0118  ld   [$18]       2911  ld([vAC])                       #34
              06b1 8200  adda ac          2912  adda(AC)                        #35
              06b2 8200  adda ac          2913  adda(AC)                        #36
              06b3 8200  adda ac          2914  adda(AC)                        #37
              06b4 8200  adda ac          2915  adda(AC)                        #38
              06b5 c218  st   [$18]       2916  st([vAC])                       #39
              06b6 00e9  ld   $e9         2917  ld(-46/2)                       #40
              06b7 1403  ld   $03,y       2918  ld(hi('REENTER'),Y)             #41
              06b8 e0cb  jmp  y,$cb       2919  jmp(Y,'REENTER')                #42
                                          2920  #nop()                          #43
                                          2921
                                          2922  #-----------------------------------------------------------------------
                                          2923  #       v6502 right shift instruction
                                          2924  #-----------------------------------------------------------------------
                                          2925
                                          2926  label('v6502_lsr#30')
v6502_lsr#30: 06b9 1525  ld   [$25],y     2927  ld([v6502_ADH],Y)               #30 Result
              06ba ce00  st   [y,x]       2928  st([Y,X])                       #31
              06bb c228  st   [$28]       2929  st([v6502_Qz])                  #32 Z flag
              06bc c229  st   [$29]       2930  st([v6502_Qn])                  #33 N flag
              06bd 140e  ld   $0e,y       2931  ld(hi('v6502_next'),Y)          #34
              06be 00ed  ld   $ed         2932  ld(-38/2)                       #35
              06bf e020  jmp  y,$20       2933  jmp(Y,'v6502_next')             #36
                                          2934  #nop()                          #37 Overlap
                                          2935  #
                                          2936  label('v6502_ror#38')
v6502_ror#38: 06c0 1525  ld   [$25],y     2937  ld([v6502_ADH],Y)               #38,38 Result
              06c1 4119  ora  [$19]       2938  ora([v6502_BI])                 #39 Transfer bit 8
              06c2 ce00  st   [y,x]       2939  st([Y,X])                       #40
              06c3 c228  st   [$28]       2940  st([v6502_Qz])                  #41 Z flag
              06c4 c229  st   [$29]       2941  st([v6502_Qn])                  #42 N flag
              06c5 140e  ld   $0e,y       2942  ld(hi('v6502_next'),Y)          #43
              06c6 e020  jmp  y,$20       2943  jmp(Y,'v6502_next')             #44
              06c7 00e9  ld   $e9         2944  ld(-46/2)                       #45
                                          2945
                                          2946  #-----------------------------------------------------------------------
                                          2947  #       vCPU LSRB
                                          2948  #-----------------------------------------------------------------------
                                          2949
                                          2950  label('.lsrb#24')
.lsrb#24:     06c8 c600  st   [x]         2951  st([X])                         #24
              06c9 1403  ld   $03,y       2952  ld(hi('REENTER'),Y)             #25
              06ca e0cb  jmp  y,$cb       2953  jmp(Y,'REENTER')                #26
              06cb 00f1  ld   $f1         2954  ld(-30/2)                       #27
                                          2955
                                          2956  #-----------------------------------------------------------------------
                                          2957  #       vCPU LSRV
                                          2958  #-----------------------------------------------------------------------
                                          2959
                                          2960  label('.lsrv#27')
.lsrv#27:     06cc 142c  ld   $2c,y       2961  ld(hi('.lsrv#30'),Y)            #27
              06cd e053  jmp  y,$53       2962  jmp(Y,'.lsrv#30')               #28
              06ce c600  st   [x]         2963  st([X])                         #29 shifted byte low
                                          2964
                                          2965  label('.lsrv#51')
.lsrv#51:     06cf c600  st   [x]         2966  st([X])                         #51 shifted byte hi
              06d0 1403  ld   $03,y       2967  ld(hi('NEXTY'),Y)               #52
              06d1 e000  jmp  y,$00       2968  jmp(Y,'NEXTY')                  #53
              06d2 00e4  ld   $e4         2969  ld(-56/2)                       #54
                                          2970
                                          2971  #-----------------------------------------------------------------------
                                          2972  #       vCPU LSRVL
                                          2973  #-----------------------------------------------------------------------
                                          2974
                                          2975  label('.lsrvl#26')
.lsrvl#26:    06d3 142c  ld   $2c,y       2976  ld(hi('.lsrvl#29'),Y)           #26
              06d4 e075  jmp  y,$75       2977  jmp(Y,'.lsrvl#29')              #27
              06d5 c600  st   [x]         2978  st([X])                         #28 shifted byte 0
                                          2979
                                          2980  label('.lsrvl#54')
.lsrvl#54:    06d6 142c  ld   $2c,y       2981  ld(hi('.lsrvl#57'),Y)           #54
              06d7 e08b  jmp  y,$8b       2982  jmp(Y,'.lsrvl#57')              #55
              06d8 c600  st   [x]         2983  st([X])                         #56 shifted byte 1
                                          2984
                                          2985  label('.lsrvl#76')
.lsrvl#76:    06d9 142c  ld   $2c,y       2986  ld(hi('.lsrvl#79'),Y)           #76
              06da e09b  jmp  y,$9b       2987  jmp(Y,'.lsrvl#79')              #77
              06db c600  st   [x]         2988  st([X])                         #78 shifted byte 2
                                          2989
                                          2990  label('.lsrvl#98')
.lsrvl#98:    06dc c600  st   [x]         2991  st([X])                         #98 shifted byte 3
              06dd 1403  ld   $03,y       2992  ld(hi('REENTER'),Y)             #99
              06de e0cb  jmp  y,$cb       2993  jmp(Y,'REENTER')                #100
              06df 00cc  ld   $cc         2994  ld(-104/2)                      #101
                                          2995
                                          2996
                                          2997  #-----------------------------------------------------------------------
                                          2998  #
                                          2999  #  $0700 ROM page 7-8: Gigatron font data
                                          3000  #
                                          3001  #-----------------------------------------------------------------------
                                          3002
              06e0 0200  nop              3003  align(0x100, size=0x100)
              06e1 0200  nop
              06e2 0200  nop
              * 32 times
                                          3004
                                          3005  label('font32up')
                                          3006  for ch in range(32, 32+50):
                                          3007    comment = 'Char %s' % repr(chr(ch))
                                          3008    for byte in font.font[ch-32]:
                                          3009      ld(byte)
font32up:     0700 0000  ld   $00         ;Char ' '
              0701 0000  ld   $00
              0702 0000  ld   $00
              * 5 times
              0705 0000  ld   $00         ;Char '!'
              0706 0000  ld   $00
              0707 00fa  ld   $fa
              0708 0000  ld   $00
              0709 0000  ld   $00
              070a 00a0  ld   $a0         ;Char '"'
              070b 00c0  ld   $c0
              070c 0000  ld   $00
              070d 00a0  ld   $a0
              070e 00c0  ld   $c0
              070f 0028  ld   $28         ;Char '#'
              0710 00fe  ld   $fe
              0711 0028  ld   $28
              0712 00fe  ld   $fe
              0713 0028  ld   $28
              0714 0024  ld   $24         ;Char '$'
              0715 0054  ld   $54
              0716 00fe  ld   $fe
              0717 0054  ld   $54
              0718 0048  ld   $48
              0719 00c4  ld   $c4         ;Char '%'
              071a 00c8  ld   $c8
              071b 0010  ld   $10
              071c 0026  ld   $26
              071d 0046  ld   $46
              071e 006c  ld   $6c         ;Char '&'
              071f 0092  ld   $92
              0720 006a  ld   $6a
              0721 0004  ld   $04
              0722 000a  ld   $0a
              0723 0000  ld   $00         ;Char "'"
              0724 00a0  ld   $a0
              0725 00c0  ld   $c0
              0726 0000  ld   $00
              0727 0000  ld   $00
              0728 0000  ld   $00         ;Char '('
              0729 0038  ld   $38
              072a 0044  ld   $44
              072b 0082  ld   $82
              072c 0000  ld   $00
              072d 0000  ld   $00         ;Char ')'
              072e 0082  ld   $82
              072f 0044  ld   $44
              0730 0038  ld   $38
              0731 0000  ld   $00
              0732 0028  ld   $28         ;Char '*'
              0733 0010  ld   $10
              0734 007c  ld   $7c
              0735 0010  ld   $10
              0736 0028  ld   $28
              0737 0010  ld   $10         ;Char '+'
              0738 0010  ld   $10
              0739 007c  ld   $7c
              073a 0010  ld   $10
              073b 0010  ld   $10
              073c 0000  ld   $00         ;Char ','
              073d 0005  ld   $05
              073e 0006  ld   $06
              073f 0000  ld   $00
              0740 0000  ld   $00
              0741 0010  ld   $10         ;Char '-'
              0742 0010  ld   $10
              0743 0010  ld   $10
              * 5 times
              0746 0000  ld   $00         ;Char '.'
              0747 0002  ld   $02
              0748 0002  ld   $02
              0749 0000  ld   $00
              074a 0000  ld   $00
              074b 0000  ld   $00         ;Char '/'
              074c 0006  ld   $06
              074d 0018  ld   $18
              074e 0060  ld   $60
              074f 0000  ld   $00
              0750 007c  ld   $7c         ;Char '0'
              0751 008a  ld   $8a
              0752 0092  ld   $92
              0753 00a2  ld   $a2
              0754 007c  ld   $7c
              0755 0022  ld   $22         ;Char '1'
              0756 0042  ld   $42
              0757 00fe  ld   $fe
              0758 0002  ld   $02
              0759 0002  ld   $02
              075a 0046  ld   $46         ;Char '2'
              075b 008a  ld   $8a
              075c 0092  ld   $92
              075d 0092  ld   $92
              075e 0062  ld   $62
              075f 0044  ld   $44         ;Char '3'
              0760 0082  ld   $82
              0761 0092  ld   $92
              0762 0092  ld   $92
              0763 006c  ld   $6c
              0764 0018  ld   $18         ;Char '4'
              0765 0028  ld   $28
              0766 0048  ld   $48
              0767 00fe  ld   $fe
              0768 0008  ld   $08
              0769 00e4  ld   $e4         ;Char '5'
              076a 00a2  ld   $a2
              076b 00a2  ld   $a2
              076c 00a2  ld   $a2
              076d 009c  ld   $9c
              076e 003c  ld   $3c         ;Char '6'
              076f 0052  ld   $52
              0770 0092  ld   $92
              0771 0092  ld   $92
              0772 000c  ld   $0c
              0773 0080  ld   $80         ;Char '7'
              0774 008e  ld   $8e
              0775 0090  ld   $90
              0776 00a0  ld   $a0
              0777 00c0  ld   $c0
              0778 006c  ld   $6c         ;Char '8'
              0779 0092  ld   $92
              077a 0092  ld   $92
              077b 0092  ld   $92
              077c 006c  ld   $6c
              077d 0060  ld   $60         ;Char '9'
              077e 0092  ld   $92
              077f 0092  ld   $92
              0780 0094  ld   $94
              0781 0078  ld   $78
              0782 0000  ld   $00         ;Char ':'
              0783 0024  ld   $24
              0784 0024  ld   $24
              0785 0000  ld   $00
              0786 0000  ld   $00
              0787 0000  ld   $00         ;Char ';'
              0788 0025  ld   $25
              0789 0026  ld   $26
              078a 0000  ld   $00
              078b 0000  ld   $00
              078c 0010  ld   $10         ;Char '<'
              078d 0028  ld   $28
              078e 0044  ld   $44
              078f 0082  ld   $82
              0790 0000  ld   $00
              0791 0028  ld   $28         ;Char '='
              0792 0028  ld   $28
              0793 0028  ld   $28
              * 5 times
              0796 0000  ld   $00         ;Char '>'
              0797 0082  ld   $82
              0798 0044  ld   $44
              0799 0028  ld   $28
              079a 0010  ld   $10
              079b 0040  ld   $40         ;Char '?'
              079c 0080  ld   $80
              079d 008a  ld   $8a
              079e 0090  ld   $90
              079f 0060  ld   $60
              07a0 007c  ld   $7c         ;Char '@'
              07a1 0082  ld   $82
              07a2 00ba  ld   $ba
              07a3 00aa  ld   $aa
              07a4 0078  ld   $78
              07a5 003e  ld   $3e         ;Char 'A'
              07a6 0048  ld   $48
              07a7 0088  ld   $88
              07a8 0048  ld   $48
              07a9 003e  ld   $3e
              07aa 00fe  ld   $fe         ;Char 'B'
              07ab 0092  ld   $92
              07ac 0092  ld   $92
              07ad 0092  ld   $92
              07ae 006c  ld   $6c
              07af 007c  ld   $7c         ;Char 'C'
              07b0 0082  ld   $82
              07b1 0082  ld   $82
              07b2 0082  ld   $82
              07b3 0044  ld   $44
              07b4 00fe  ld   $fe         ;Char 'D'
              07b5 0082  ld   $82
              07b6 0082  ld   $82
              07b7 0044  ld   $44
              07b8 0038  ld   $38
              07b9 00fe  ld   $fe         ;Char 'E'
              07ba 0092  ld   $92
              07bb 0092  ld   $92
              07bc 0092  ld   $92
              07bd 0082  ld   $82
              07be 00fe  ld   $fe         ;Char 'F'
              07bf 0090  ld   $90
              07c0 0090  ld   $90
              07c1 0090  ld   $90
              07c2 0080  ld   $80
              07c3 007c  ld   $7c         ;Char 'G'
              07c4 0082  ld   $82
              07c5 0082  ld   $82
              07c6 0092  ld   $92
              07c7 005c  ld   $5c
              07c8 00fe  ld   $fe         ;Char 'H'
              07c9 0010  ld   $10
              07ca 0010  ld   $10
              07cb 0010  ld   $10
              07cc 00fe  ld   $fe
              07cd 0000  ld   $00         ;Char 'I'
              07ce 0082  ld   $82
              07cf 00fe  ld   $fe
              07d0 0082  ld   $82
              07d1 0000  ld   $00
              07d2 0004  ld   $04         ;Char 'J'
              07d3 0002  ld   $02
              07d4 0082  ld   $82
              07d5 00fc  ld   $fc
              07d6 0080  ld   $80
              07d7 00fe  ld   $fe         ;Char 'K'
              07d8 0010  ld   $10
              07d9 0028  ld   $28
              07da 0044  ld   $44
              07db 0082  ld   $82
              07dc 00fe  ld   $fe         ;Char 'L'
              07dd 0002  ld   $02
              07de 0002  ld   $02
              07df 0002  ld   $02
              07e0 0002  ld   $02
              07e1 00fe  ld   $fe         ;Char 'M'
              07e2 0040  ld   $40
              07e3 0030  ld   $30
              07e4 0040  ld   $40
              07e5 00fe  ld   $fe
              07e6 00fe  ld   $fe         ;Char 'N'
              07e7 0020  ld   $20
              07e8 0010  ld   $10
              07e9 0008  ld   $08
              07ea 00fe  ld   $fe
              07eb 007c  ld   $7c         ;Char 'O'
              07ec 0082  ld   $82
              07ed 0082  ld   $82
              07ee 0082  ld   $82
              07ef 007c  ld   $7c
              07f0 00fe  ld   $fe         ;Char 'P'
              07f1 0090  ld   $90
              07f2 0090  ld   $90
              07f3 0090  ld   $90
              07f4 0060  ld   $60
              07f5 007c  ld   $7c         ;Char 'Q'
              07f6 0082  ld   $82
              07f7 008a  ld   $8a
              07f8 0084  ld   $84
              07f9 007a  ld   $7a
                                          3010      comment = C(comment)
                                          3011
              07fa 0200  nop              3012  trampoline()
              07fb fe00  bra  ac          ;+-----------------------------------+
              07fc fcfd  bra  $07fd       ;|                                   |
              07fd 1418  ld   $18,y       ;| Trampoline for page $0700 lookups |
              07fe e006  jmp  y,$06       ;|                                   |
              07ff c218  st   [$18]       ;+-----------------------------------+
                                          3013
                                          3014  #-----------------------------------------------------------------------
                                          3015
                                          3016  align(0x100, size=0x100)
                                          3017
                                          3018  label('font82up')
                                          3019  for ch in range(32+50, 132):
                                          3020    comment = 'Char %s' % repr(chr(ch))
                                          3021    for byte in font.font[ch-32]:
                                          3022      ld(byte)
font82up:     0800 00fe  ld   $fe         ;Char 'R'
              0801 0090  ld   $90
              0802 0098  ld   $98
              0803 0094  ld   $94
              0804 0062  ld   $62
              0805 0062  ld   $62         ;Char 'S'
              0806 0092  ld   $92
              0807 0092  ld   $92
              0808 0092  ld   $92
              0809 000c  ld   $0c
              080a 0080  ld   $80         ;Char 'T'
              080b 0080  ld   $80
              080c 00fe  ld   $fe
              080d 0080  ld   $80
              080e 0080  ld   $80
              080f 00fc  ld   $fc         ;Char 'U'
              0810 0002  ld   $02
              0811 0002  ld   $02
              0812 0002  ld   $02
              0813 00fc  ld   $fc
              0814 00f0  ld   $f0         ;Char 'V'
              0815 000c  ld   $0c
              0816 0002  ld   $02
              0817 000c  ld   $0c
              0818 00f0  ld   $f0
              0819 00fe  ld   $fe         ;Char 'W'
              081a 0004  ld   $04
              081b 0018  ld   $18
              081c 0004  ld   $04
              081d 00fe  ld   $fe
              081e 00c6  ld   $c6         ;Char 'X'
              081f 0028  ld   $28
              0820 0010  ld   $10
              0821 0028  ld   $28
              0822 00c6  ld   $c6
              0823 00e0  ld   $e0         ;Char 'Y'
              0824 0010  ld   $10
              0825 000e  ld   $0e
              0826 0010  ld   $10
              0827 00e0  ld   $e0
              0828 0086  ld   $86         ;Char 'Z'
              0829 008a  ld   $8a
              082a 0092  ld   $92
              082b 00a2  ld   $a2
              082c 00c2  ld   $c2
              082d 0000  ld   $00         ;Char '['
              082e 00fe  ld   $fe
              082f 0082  ld   $82
              0830 0082  ld   $82
              0831 0000  ld   $00
              0832 0000  ld   $00         ;Char '\\'
              0833 0060  ld   $60
              0834 0018  ld   $18
              0835 0006  ld   $06
              0836 0000  ld   $00
              0837 0000  ld   $00         ;Char ']'
              0838 0082  ld   $82
              0839 0082  ld   $82
              083a 00fe  ld   $fe
              083b 0000  ld   $00
              083c 0020  ld   $20         ;Char '^'
              083d 0040  ld   $40
              083e 0080  ld   $80
              083f 0040  ld   $40
              0840 0020  ld   $20
              0841 0002  ld   $02         ;Char '_'
              0842 0002  ld   $02
              0843 0002  ld   $02
              * 5 times
              0846 0000  ld   $00         ;Char '`'
              0847 0000  ld   $00
              0848 00c0  ld   $c0
              0849 00a0  ld   $a0
              084a 0000  ld   $00
              084b 0004  ld   $04         ;Char 'a'
              084c 002a  ld   $2a
              084d 002a  ld   $2a
              084e 002a  ld   $2a
              084f 001e  ld   $1e
              0850 00fe  ld   $fe         ;Char 'b'
              0851 0022  ld   $22
              0852 0022  ld   $22
              0853 0022  ld   $22
              0854 001c  ld   $1c
              0855 001c  ld   $1c         ;Char 'c'
              0856 0022  ld   $22
              0857 0022  ld   $22
              0858 0022  ld   $22
              0859 0002  ld   $02
              085a 001c  ld   $1c         ;Char 'd'
              085b 0022  ld   $22
              085c 0022  ld   $22
              085d 0022  ld   $22
              085e 00fe  ld   $fe
              085f 001c  ld   $1c         ;Char 'e'
              0860 002a  ld   $2a
              0861 002a  ld   $2a
              0862 002a  ld   $2a
              0863 0018  ld   $18
              0864 0010  ld   $10         ;Char 'f'
              0865 007e  ld   $7e
              0866 0090  ld   $90
              0867 0080  ld   $80
              0868 0040  ld   $40
              0869 0018  ld   $18         ;Char 'g'
              086a 0025  ld   $25
              086b 0025  ld   $25
              086c 0025  ld   $25
              086d 001e  ld   $1e
              086e 00fe  ld   $fe         ;Char 'h'
              086f 0020  ld   $20
              0870 0020  ld   $20
              0871 0020  ld   $20
              0872 001e  ld   $1e
              0873 0000  ld   $00         ;Char 'i'
              0874 0022  ld   $22
              0875 00be  ld   $be
              0876 0002  ld   $02
              0877 0000  ld   $00
              0878 0002  ld   $02         ;Char 'j'
              0879 0001  ld   $01
              087a 0021  ld   $21
              087b 00be  ld   $be
              087c 0000  ld   $00
              087d 00fe  ld   $fe         ;Char 'k'
              087e 0008  ld   $08
              087f 0018  ld   $18
              0880 0024  ld   $24
              0881 0002  ld   $02
              0882 0000  ld   $00         ;Char 'l'
              0883 0082  ld   $82
              0884 00fe  ld   $fe
              0885 0002  ld   $02
              0886 0000  ld   $00
              0887 003e  ld   $3e         ;Char 'm'
              0888 0020  ld   $20
              0889 001c  ld   $1c
              088a 0020  ld   $20
              088b 001e  ld   $1e
              088c 003e  ld   $3e         ;Char 'n'
              088d 0010  ld   $10
              088e 0020  ld   $20
              088f 0020  ld   $20
              0890 001e  ld   $1e
              0891 001c  ld   $1c         ;Char 'o'
              0892 0022  ld   $22
              0893 0022  ld   $22
              0894 0022  ld   $22
              0895 001c  ld   $1c
              0896 003f  ld   $3f         ;Char 'p'
              0897 0024  ld   $24
              0898 0024  ld   $24
              0899 0024  ld   $24
              089a 0018  ld   $18
              089b 0018  ld   $18         ;Char 'q'
              089c 0024  ld   $24
              089d 0024  ld   $24
              089e 0024  ld   $24
              089f 003f  ld   $3f
              08a0 003e  ld   $3e         ;Char 'r'
              08a1 0010  ld   $10
              08a2 0020  ld   $20
              08a3 0020  ld   $20
              08a4 0010  ld   $10
              08a5 0012  ld   $12         ;Char 's'
              08a6 002a  ld   $2a
              08a7 002a  ld   $2a
              08a8 002a  ld   $2a
              08a9 0004  ld   $04
              08aa 0020  ld   $20         ;Char 't'
              08ab 00fc  ld   $fc
              08ac 0022  ld   $22
              08ad 0002  ld   $02
              08ae 0004  ld   $04
              08af 003c  ld   $3c         ;Char 'u'
              08b0 0002  ld   $02
              08b1 0002  ld   $02
              08b2 0004  ld   $04
              08b3 003e  ld   $3e
              08b4 0038  ld   $38         ;Char 'v'
              08b5 0004  ld   $04
              08b6 0002  ld   $02
              08b7 0004  ld   $04
              08b8 0038  ld   $38
              08b9 003c  ld   $3c         ;Char 'w'
              08ba 0002  ld   $02
              08bb 000c  ld   $0c
              08bc 0002  ld   $02
              08bd 003c  ld   $3c
              08be 0022  ld   $22         ;Char 'x'
              08bf 0014  ld   $14
              08c0 0008  ld   $08
              08c1 0014  ld   $14
              08c2 0022  ld   $22
              08c3 0038  ld   $38         ;Char 'y'
              08c4 0005  ld   $05
              08c5 0005  ld   $05
              08c6 0005  ld   $05
              08c7 003e  ld   $3e
              08c8 0022  ld   $22         ;Char 'z'
              08c9 0026  ld   $26
              08ca 002a  ld   $2a
              08cb 0032  ld   $32
              08cc 0022  ld   $22
              08cd 0010  ld   $10         ;Char '{'
              08ce 006c  ld   $6c
              08cf 0082  ld   $82
              08d0 0082  ld   $82
              08d1 0000  ld   $00
              08d2 0000  ld   $00         ;Char '|'
              08d3 0000  ld   $00
              08d4 00fe  ld   $fe
              08d5 0000  ld   $00
              08d6 0000  ld   $00
              08d7 0000  ld   $00         ;Char '}'
              08d8 0082  ld   $82
              08d9 0082  ld   $82
              08da 006c  ld   $6c
              08db 0010  ld   $10
              08dc 0040  ld   $40         ;Char '~'
              08dd 0080  ld   $80
              08de 0040  ld   $40
              08df 0020  ld   $20
              08e0 0040  ld   $40
              08e1 00fe  ld   $fe         ;Char '\x7f'
              08e2 00fe  ld   $fe
              08e3 00fe  ld   $fe
              * 5 times
              08e6 0010  ld   $10         ;Char '\x80'
              08e7 0038  ld   $38
              08e8 0054  ld   $54
              08e9 0010  ld   $10
              08ea 0010  ld   $10
              08eb 0010  ld   $10         ;Char '\x81'
              08ec 0020  ld   $20
              08ed 007c  ld   $7c
              08ee 0020  ld   $20
              08ef 0010  ld   $10
              08f0 0010  ld   $10         ;Char '\x82'
              08f1 0010  ld   $10
              08f2 0054  ld   $54
              08f3 0038  ld   $38
              08f4 0010  ld   $10
              08f5 0010  ld   $10         ;Char '\x83'
              08f6 0008  ld   $08
              08f7 007c  ld   $7c
              08f8 0008  ld   $08
              08f9 0010  ld   $10
                                          3023      comment = C(comment)
                                          3024
              08fa 0200  nop              3025  trampoline()
              08fb fe00  bra  ac          ;+-----------------------------------+
              08fc fcfd  bra  $08fd       ;|                                   |
              08fd 1418  ld   $18,y       ;| Trampoline for page $0800 lookups |
              08fe e006  jmp  y,$06       ;|                                   |
              08ff c218  st   [$18]       ;+-----------------------------------+
                                          3026
                                          3027  #-----------------------------------------------------------------------
                                          3028  #
                                          3029  #  $0900 ROM page 9: Key table for music
                                          3030  #
                                          3031  #-----------------------------------------------------------------------
                                          3032
                                          3033  align(0x100, size=0x100)
                                          3034  notes = 'CCDDEFFGGAAB'
                                          3035  sampleRate = cpuClock / 200.0 / 4
                                          3036  label('notesTable')
notesTable:   0900 0000  ld   $00         3037  ld(0)
              0901 0000  ld   $00         3038  ld(0)
                                          3039  for i in range(0, 250, 2):
                                          3040    j = i//2-1
                                          3041    freq = 440.0*2.0**((j-57)/12.0)
                                          3042    if j>=0 and freq <= sampleRate/2.0:
                                          3043      key = int(round(32768 * freq / sampleRate))
                                          3044      octave, note = j//12, notes[j%12]
                                          3045      sharp = '-' if notes[j%12-1] != note else '#'
                                          3046      comment = '%s%s%s (%0.1f Hz)' % (note, sharp, octave, freq)
                                          3047      ld(key&127); C(comment); ld(key>>7)
              0902 0045  ld   $45         ;C-0 (16.4 Hz)
              0903 0000  ld   $00
              0904 0049  ld   $49         ;C#0 (17.3 Hz)
              0905 0000  ld   $00
              0906 004d  ld   $4d         ;D-0 (18.4 Hz)
              0907 0000  ld   $00
              0908 0052  ld   $52         ;D#0 (19.4 Hz)
              0909 0000  ld   $00
              090a 0056  ld   $56         ;E-0 (20.6 Hz)
              090b 0000  ld   $00
              090c 005c  ld   $5c         ;F-0 (21.8 Hz)
              090d 0000  ld   $00
              090e 0061  ld   $61         ;F#0 (23.1 Hz)
              090f 0000  ld   $00
              0910 0067  ld   $67         ;G-0 (24.5 Hz)
              0911 0000  ld   $00
              0912 006d  ld   $6d         ;G#0 (26.0 Hz)
              0913 0000  ld   $00
              0914 0073  ld   $73         ;A-0 (27.5 Hz)
              0915 0000  ld   $00
              0916 007a  ld   $7a         ;A#0 (29.1 Hz)
              0917 0000  ld   $00
              0918 0001  ld   $01         ;B-0 (30.9 Hz)
              0919 0001  ld   $01
              091a 0009  ld   $09         ;C-1 (32.7 Hz)
              091b 0001  ld   $01
              091c 0011  ld   $11         ;C#1 (34.6 Hz)
              091d 0001  ld   $01
              091e 001a  ld   $1a         ;D-1 (36.7 Hz)
              091f 0001  ld   $01
              0920 0023  ld   $23         ;D#1 (38.9 Hz)
              0921 0001  ld   $01
              0922 002d  ld   $2d         ;E-1 (41.2 Hz)
              0923 0001  ld   $01
              0924 0037  ld   $37         ;F-1 (43.7 Hz)
              0925 0001  ld   $01
              0926 0042  ld   $42         ;F#1 (46.2 Hz)
              0927 0001  ld   $01
              0928 004e  ld   $4e         ;G-1 (49.0 Hz)
              0929 0001  ld   $01
              092a 005a  ld   $5a         ;G#1 (51.9 Hz)
              092b 0001  ld   $01
              092c 0067  ld   $67         ;A-1 (55.0 Hz)
              092d 0001  ld   $01
              092e 0074  ld   $74         ;A#1 (58.3 Hz)
              092f 0001  ld   $01
              0930 0003  ld   $03         ;B-1 (61.7 Hz)
              0931 0002  ld   $02
              0932 0012  ld   $12         ;C-2 (65.4 Hz)
              0933 0002  ld   $02
              0934 0023  ld   $23         ;C#2 (69.3 Hz)
              0935 0002  ld   $02
              0936 0034  ld   $34         ;D-2 (73.4 Hz)
              0937 0002  ld   $02
              0938 0046  ld   $46         ;D#2 (77.8 Hz)
              0939 0002  ld   $02
              093a 005a  ld   $5a         ;E-2 (82.4 Hz)
              093b 0002  ld   $02
              093c 006e  ld   $6e         ;F-2 (87.3 Hz)
              093d 0002  ld   $02
              093e 0004  ld   $04         ;F#2 (92.5 Hz)
              093f 0003  ld   $03
              0940 001b  ld   $1b         ;G-2 (98.0 Hz)
              0941 0003  ld   $03
              0942 0033  ld   $33         ;G#2 (103.8 Hz)
              0943 0003  ld   $03
              0944 004d  ld   $4d         ;A-2 (110.0 Hz)
              0945 0003  ld   $03
              0946 0069  ld   $69         ;A#2 (116.5 Hz)
              0947 0003  ld   $03
              0948 0006  ld   $06         ;B-2 (123.5 Hz)
              0949 0004  ld   $04
              094a 0025  ld   $25         ;C-3 (130.8 Hz)
              094b 0004  ld   $04
              094c 0045  ld   $45         ;C#3 (138.6 Hz)
              094d 0004  ld   $04
              094e 0068  ld   $68         ;D-3 (146.8 Hz)
              094f 0004  ld   $04
              0950 000c  ld   $0c         ;D#3 (155.6 Hz)
              0951 0005  ld   $05
              0952 0033  ld   $33         ;E-3 (164.8 Hz)
              0953 0005  ld   $05
              0954 005c  ld   $5c         ;F-3 (174.6 Hz)
              0955 0005  ld   $05
              0956 0008  ld   $08         ;F#3 (185.0 Hz)
              0957 0006  ld   $06
              0958 0036  ld   $36         ;G-3 (196.0 Hz)
              0959 0006  ld   $06
              095a 0067  ld   $67         ;G#3 (207.7 Hz)
              095b 0006  ld   $06
              095c 001b  ld   $1b         ;A-3 (220.0 Hz)
              095d 0007  ld   $07
              095e 0052  ld   $52         ;A#3 (233.1 Hz)
              095f 0007  ld   $07
              0960 000c  ld   $0c         ;B-3 (246.9 Hz)
              0961 0008  ld   $08
              0962 0049  ld   $49         ;C-4 (261.6 Hz)
              0963 0008  ld   $08
              0964 000b  ld   $0b         ;C#4 (277.2 Hz)
              0965 0009  ld   $09
              0966 0050  ld   $50         ;D-4 (293.7 Hz)
              0967 0009  ld   $09
              0968 0019  ld   $19         ;D#4 (311.1 Hz)
              0969 000a  ld   $0a
              096a 0067  ld   $67         ;E-4 (329.6 Hz)
              096b 000a  ld   $0a
              096c 0039  ld   $39         ;F-4 (349.2 Hz)
              096d 000b  ld   $0b
              096e 0010  ld   $10         ;F#4 (370.0 Hz)
              096f 000c  ld   $0c
              0970 006c  ld   $6c         ;G-4 (392.0 Hz)
              0971 000c  ld   $0c
              0972 004e  ld   $4e         ;G#4 (415.3 Hz)
              0973 000d  ld   $0d
              0974 0035  ld   $35         ;A-4 (440.0 Hz)
              0975 000e  ld   $0e
              0976 0023  ld   $23         ;A#4 (466.2 Hz)
              0977 000f  ld   $0f
              0978 0017  ld   $17         ;B-4 (493.9 Hz)
              0979 0010  ld   $10
              097a 0013  ld   $13         ;C-5 (523.3 Hz)
              097b 0011  ld   $11
              097c 0015  ld   $15         ;C#5 (554.4 Hz)
              097d 0012  ld   $12
              097e 001f  ld   $1f         ;D-5 (587.3 Hz)
              097f 0013  ld   $13
              0980 0032  ld   $32         ;D#5 (622.3 Hz)
              0981 0014  ld   $14
              0982 004d  ld   $4d         ;E-5 (659.3 Hz)
              0983 0015  ld   $15
              0984 0072  ld   $72         ;F-5 (698.5 Hz)
              0985 0016  ld   $16
              0986 0020  ld   $20         ;F#5 (740.0 Hz)
              0987 0018  ld   $18
              0988 0058  ld   $58         ;G-5 (784.0 Hz)
              0989 0019  ld   $19
              098a 001c  ld   $1c         ;G#5 (830.6 Hz)
              098b 001b  ld   $1b
              098c 006b  ld   $6b         ;A-5 (880.0 Hz)
              098d 001c  ld   $1c
              098e 0046  ld   $46         ;A#5 (932.3 Hz)
              098f 001e  ld   $1e
              0990 002f  ld   $2f         ;B-5 (987.8 Hz)
              0991 0020  ld   $20
              0992 0025  ld   $25         ;C-6 (1046.5 Hz)
              0993 0022  ld   $22
              0994 002a  ld   $2a         ;C#6 (1108.7 Hz)
              0995 0024  ld   $24
              0996 003f  ld   $3f         ;D-6 (1174.7 Hz)
              0997 0026  ld   $26
              0998 0064  ld   $64         ;D#6 (1244.5 Hz)
              0999 0028  ld   $28
              099a 001a  ld   $1a         ;E-6 (1318.5 Hz)
              099b 002b  ld   $2b
              099c 0063  ld   $63         ;F-6 (1396.9 Hz)
              099d 002d  ld   $2d
              099e 003f  ld   $3f         ;F#6 (1480.0 Hz)
              099f 0030  ld   $30
              09a0 0031  ld   $31         ;G-6 (1568.0 Hz)
              09a1 0033  ld   $33
              09a2 0038  ld   $38         ;G#6 (1661.2 Hz)
              09a3 0036  ld   $36
              09a4 0056  ld   $56         ;A-6 (1760.0 Hz)
              09a5 0039  ld   $39
              09a6 000d  ld   $0d         ;A#6 (1864.7 Hz)
              09a7 003d  ld   $3d
              09a8 005e  ld   $5e         ;B-6 (1975.5 Hz)
              09a9 0040  ld   $40
              09aa 004b  ld   $4b         ;C-7 (2093.0 Hz)
              09ab 0044  ld   $44
              09ac 0055  ld   $55         ;C#7 (2217.5 Hz)
              09ad 0048  ld   $48
              09ae 007e  ld   $7e         ;D-7 (2349.3 Hz)
              09af 004c  ld   $4c
              09b0 0048  ld   $48         ;D#7 (2489.0 Hz)
              09b1 0051  ld   $51
              09b2 0034  ld   $34         ;E-7 (2637.0 Hz)
              09b3 0056  ld   $56
              09b4 0046  ld   $46         ;F-7 (2793.8 Hz)
              09b5 005b  ld   $5b
              09b6 007f  ld   $7f         ;F#7 (2960.0 Hz)
              09b7 0060  ld   $60
              09b8 0061  ld   $61         ;G-7 (3136.0 Hz)
              09b9 0066  ld   $66
              09ba 006f  ld   $6f         ;G#7 (3322.4 Hz)
              09bb 006c  ld   $6c
              09bc 002c  ld   $2c         ;A-7 (3520.0 Hz)
              09bd 0073  ld   $73
              09be 001a  ld   $1a         ;A#7 (3729.3 Hz)
              09bf 007a  ld   $7a
                                          3048
                                          3049  # NOTE trampoline, (0x09c0), (cycles times are +1 for midi#13)
                                          3050  label('noteTrampoline')
noteTrampoline:
              09c0 fe00  bra  ac          3051  bra(AC)                         #22,#23 #35,#36 fetches ROM note byte, (low then high)
              09c1 fcc2  bra  $09c2       3052  bra(pc()+1)                     #24,#37
              09c2 1427  ld   $27,y       3053  ld(hi('note#13'),Y)             #25,#38 midi#13 lives in the same page
              09c3 e11d  jmp  y,[$1d]     3054  jmp(Y,[vTmp])                   #26,#39
              09c4 0200  nop              3055  nop()                           #27,#40
                                          3056
              09c5 0200  nop              3057  trampoline()
              09c6 0200  nop
              09c7 0200  nop
              * 54 times
              09fb fe00  bra  ac          ;+-----------------------------------+
              09fc fcfd  bra  $09fd       ;|                                   |
              09fd 1418  ld   $18,y       ;| Trampoline for page $0900 lookups |
              09fe e006  jmp  y,$06       ;|                                   |
              09ff c218  st   [$18]       ;+-----------------------------------+
                                          3058
                                          3059  #-----------------------------------------------------------------------
                                          3060  #
                                          3061  #  $0a00 ROM page 10: Inversion table
                                          3062  #
                                          3063  #-----------------------------------------------------------------------
                                          3064
                                          3065  align(0x100, size=0x100)
                                          3066  label('invTable')
                                          3067
                                          3068  # Unit 64, table offset 16 (=1/4), value offset 1: (x+16)*(y+1) == 64*64 - e
                                          3069  for i in range(251):
invTable:     0a00 00ff  ld   $ff         3070    ld(4096//(i+16)-1)
              0a01 00ef  ld   $ef
              0a02 00e2  ld   $e2
              0a03 00d6  ld   $d6
              0a04 00cb  ld   $cb
              0a05 00c2  ld   $c2
              0a06 00b9  ld   $b9
              0a07 00b1  ld   $b1
              0a08 00a9  ld   $a9
              0a09 00a2  ld   $a2
              0a0a 009c  ld   $9c
              0a0b 0096  ld   $96
              0a0c 0091  ld   $91
              0a0d 008c  ld   $8c
              0a0e 0087  ld   $87
              0a0f 0083  ld   $83
              0a10 007f  ld   $7f
              0a11 007b  ld   $7b
              0a12 0077  ld   $77
              0a13 0074  ld   $74
              0a14 0070  ld   $70
              0a15 006d  ld   $6d
              0a16 006a  ld   $6a
              0a17 0068  ld   $68
              0a18 0065  ld   $65
              0a19 0062  ld   $62
              0a1a 0060  ld   $60
              0a1b 005e  ld   $5e
              0a1c 005c  ld   $5c
              0a1d 005a  ld   $5a
              0a1e 0058  ld   $58
              0a1f 0056  ld   $56
              0a20 0054  ld   $54
              0a21 0052  ld   $52
              0a22 0050  ld   $50
              0a23 004f  ld   $4f
              0a24 004d  ld   $4d
              0a25 004c  ld   $4c
              0a26 004a  ld   $4a
              0a27 0049  ld   $49
              0a28 0048  ld   $48
              0a29 0046  ld   $46
              0a2a 0045  ld   $45
              0a2b 0044  ld   $44
              0a2c 0043  ld   $43
              0a2d 0042  ld   $42
              0a2e 0041  ld   $41
              0a2f 0040  ld   $40
              0a30 003f  ld   $3f
              0a31 003e  ld   $3e
              0a32 003d  ld   $3d
              0a33 003c  ld   $3c
              0a34 003b  ld   $3b
              0a35 003a  ld   $3a
              0a36 0039  ld   $39
              0a37 0038  ld   $38
              0a38 0037  ld   $37
              0a39 0037  ld   $37
              0a3a 0036  ld   $36
              0a3b 0035  ld   $35
              0a3c 0034  ld   $34
              0a3d 0034  ld   $34
              0a3e 0033  ld   $33
              0a3f 0032  ld   $32
              0a40 0032  ld   $32
              0a41 0031  ld   $31
              0a42 0030  ld   $30
              0a43 0030  ld   $30
              0a44 002f  ld   $2f
              0a45 002f  ld   $2f
              0a46 002e  ld   $2e
              0a47 002e  ld   $2e
              0a48 002d  ld   $2d
              0a49 002d  ld   $2d
              0a4a 002c  ld   $2c
              0a4b 002c  ld   $2c
              0a4c 002b  ld   $2b
              0a4d 002b  ld   $2b
              0a4e 002a  ld   $2a
              0a4f 002a  ld   $2a
              0a50 0029  ld   $29
              0a51 0029  ld   $29
              0a52 0028  ld   $28
              0a53 0028  ld   $28
              0a54 0027  ld   $27
              0a55 0027  ld   $27
              0a56 0027  ld   $27
              0a57 0026  ld   $26
              0a58 0026  ld   $26
              0a59 0026  ld   $26
              0a5a 0025  ld   $25
              0a5b 0025  ld   $25
              0a5c 0024  ld   $24
              0a5d 0024  ld   $24
              0a5e 0024  ld   $24
              0a5f 0023  ld   $23
              0a60 0023  ld   $23
              0a61 0023  ld   $23
              0a62 0022  ld   $22
              0a63 0022  ld   $22
              0a64 0022  ld   $22
              0a65 0022  ld   $22
              0a66 0021  ld   $21
              0a67 0021  ld   $21
              0a68 0021  ld   $21
              0a69 0020  ld   $20
              0a6a 0020  ld   $20
              0a6b 0020  ld   $20
              0a6c 0020  ld   $20
              0a6d 001f  ld   $1f
              0a6e 001f  ld   $1f
              0a6f 001f  ld   $1f
              0a70 001f  ld   $1f
              0a71 001e  ld   $1e
              0a72 001e  ld   $1e
              0a73 001e  ld   $1e
              0a74 001e  ld   $1e
              0a75 001d  ld   $1d
              0a76 001d  ld   $1d
              0a77 001d  ld   $1d
              0a78 001d  ld   $1d
              0a79 001c  ld   $1c
              0a7a 001c  ld   $1c
              0a7b 001c  ld   $1c
              * 5 times
              0a7e 001b  ld   $1b
              0a7f 001b  ld   $1b
              0a80 001b  ld   $1b
              * 5 times
              0a83 001a  ld   $1a
              0a84 001a  ld   $1a
              0a85 001a  ld   $1a
              * 5 times
              0a88 0019  ld   $19
              0a89 0019  ld   $19
              0a8a 0019  ld   $19
              * 6 times
              0a8e 0018  ld   $18
              0a8f 0018  ld   $18
              0a90 0018  ld   $18
              * 6 times
              0a94 0017  ld   $17
              0a95 0017  ld   $17
              0a96 0017  ld   $17
              * 7 times
              0a9b 0016  ld   $16
              0a9c 0016  ld   $16
              0a9d 0016  ld   $16
              * 8 times
              0aa3 0015  ld   $15
              0aa4 0015  ld   $15
              0aa5 0015  ld   $15
              * 8 times
              0aab 0014  ld   $14
              0aac 0014  ld   $14
              0aad 0014  ld   $14
              * 9 times
              0ab4 0013  ld   $13
              0ab5 0013  ld   $13
              0ab6 0013  ld   $13
              * 9 times
              0abd 0012  ld   $12
              0abe 0012  ld   $12
              0abf 0012  ld   $12
              * 11 times
              0ac8 0011  ld   $11
              0ac9 0011  ld   $11
              0aca 0011  ld   $11
              * 12 times
              0ad4 0010  ld   $10
              0ad5 0010  ld   $10
              0ad6 0010  ld   $10
              * 13 times
              0ae1 000f  ld   $0f
              0ae2 000f  ld   $0f
              0ae3 000f  ld   $0f
              * 16 times
              0af1 000e  ld   $0e
              0af2 000e  ld   $0e
              0af3 000e  ld   $0e
              * 10 times
                                          3071
                                          3072  trampoline()
              0afb fe00  bra  ac          ;+-----------------------------------+
              0afc fcfd  bra  $0afd       ;|                                   |
              0afd 1418  ld   $18,y       ;| Trampoline for page $0a00 lookups |
              0afe e006  jmp  y,$06       ;|                                   |
              0aff c218  st   [$18]       ;+-----------------------------------+
                                          3073
                                          3074  #-----------------------------------------------------------------------
                                          3075  #
                                          3076  #  $0b00 ROM page 11: More SYS functions
                                          3077  #
                                          3078  #-----------------------------------------------------------------------
                                          3079
                                          3080  align(0x100, size=0x100)
                                          3081
                                          3082  #-----------------------------------------------------------------------
                                          3083  # Extension SYS_SetMode_v2_80
                                          3084  #-----------------------------------------------------------------------
                                          3085
                                          3086  # Set video mode to 0 to 3 black scanlines per pixel line.
                                          3087  #
                                          3088  # Mainly for making the MODE command available in Tiny BASIC, so that
                                          3089  # the user can experiment. It's adviced to refrain from using
                                          3090  # SYS_SetMode_v2_80 in regular applications. Video mode is a deeply
                                          3091  # personal preference, and the programmer shouldn't overrule the user
                                          3092  # in that choice. The Gigatron philisophy is that the end user has
                                          3093  # the final say on what happens on the system, not the application,
                                          3094  # even if that implies a degraded performance. This doesn't mean that
                                          3095  # all applications must work well in all video modes: mode 1 is still
                                          3096  # the default. If an application really doesn't work at all in that
                                          3097  # mode, it's acceptable to change mode once after loading.
                                          3098  #
                                          3099  # There's no "SYS_GetMode" function.
                                          3100  #
                                          3101  # Variables:
                                          3102  #       vAC bit 0:1     Mode:
                                          3103  #                         0      "ABCD" -> Full mode (slowest)
                                          3104  #                         1      "ABC-" -> Default mode after reset
                                          3105  #                         2      "A-C-" -> at67's mode
                                          3106  #                         3      "A---" -> HGM's mode
                                          3107  #       vAC bit 2:15    Ignored bits and should be 0
                                          3108  #
                                          3109  # Special values (ROM v4):
                                          3110  #       vAC = 1975      Zombie mode (no video signals, no input,
                                          3111  #                        no blinkenlights).
                                          3112  #       vAC = -1        Leave zombie mode and restore previous mode.
                                          3113
                                          3114  # Actual duration is <80 cycles, but keep some room for future extensions
                                          3115  label('SYS_SetMode_v2_80')
SYS_SetMode_v2_80:
              0b00 140b  ld   $0b,y       3116  ld(hi('sys_SetMode'),Y)         #15
              0b01 e056  jmp  y,$56       3117  jmp(Y,'sys_SetMode')            #16
              0b02 011e  ld   [$1e]       3118  ld([vReturn])                   #17
                                          3119
                                          3120  #-----------------------------------------------------------------------
                                          3121  # Extension SYS_SetMemory_v2_54
                                          3122  #-----------------------------------------------------------------------
                                          3123
                                          3124  # SYS function for setting 1..256 bytes
                                          3125  #
                                          3126  # sysArgs[0]   Copy count (in, changed)
                                          3127  # sysArgs[1]   Copy value (in)
                                          3128  # sysArgs[2:3] Destination address (in, changed)
                                          3129  #
                                          3130  # Sets up to 8 bytes per invocation before restarting itself through vCPU.
                                          3131  # Doesn't wrap around page boundary. Can run 3 times per 148-cycle time slice.
                                          3132  # All combined that gives a 300% speedup over ROMv4 and before.
                                          3133
                                          3134  label('SYS_SetMemory_v2_54')
SYS_SetMemory_v2_54:
              0b03 0124  ld   [$24]       3135  ld([sysArgs+0])                 #15
                                          3136  bra('sys_SetMemory#18')         #16
              0b04 fc1a  bra  sys_SetMemory#18
              0b05 1126  ld   [$26],x     3137  ld([sysArgs+2],X)               #17
                                          3138
                                          3139  #-----------------------------------------------------------------------
                                          3140  # Extension SYS_SendSerial1_v3_80
                                          3141  #-----------------------------------------------------------------------
                                          3142
                                          3143  # SYS function for sending data over serial controller port using
                                          3144  # pulse width modulation of the vertical sync signal.
                                          3145  #
                                          3146  # Variables:
                                          3147  #       sysArgs[0:1]    Source address               (in, changed)
                                          3148  #       sysArgs[2]      Start bit mask (typically 1) (in, changed)
                                          3149  #       sysArgs[3]      Number of send frames X      (in, changed)
                                          3150  #
                                          3151  # The sending will abort if input data is detected on the serial port.
                                          3152  # Returns 0 in case of all bits sent, or <>0 in case of abort
                                          3153  #
                                          3154  # This modulates the next upcoming X vertical pulses with the supplied
                                          3155  # data. A zero becomes a 7 line vPulse, a one will be 9 lines.
                                          3156  # After that, the vPulse width falls back to 8 lines (idle).
                                          3157
                                          3158  label('SYS_SendSerial1_v3_80')
SYS_SendSerial1_v3_80:
              0b06 0109  ld   [$09]       3159  ld([videoY])                    #15
                                          3160  bra('sys_SendSerial1')          #16
              0b07 fc85  bra  sys_SendSerial1
              0b08 60b3  xora $b3         3161  xora(videoYline0)               #17 First line of vertical blank
                                          3162
                                          3163  #-----------------------------------------------------------------------
                                          3164  # Extension SYS_ExpanderControl_v4_40
                                          3165  #-----------------------------------------------------------------------
                                          3166
                                          3167  # Sets the I/O and RAM expander's control register
                                          3168  #
                                          3169  # Variables:
                                          3170  #       vAC bit 2       Device enable /SS0
                                          3171  #           bit 3       Device enable /SS1
                                          3172  #           bit 4       Device enable /SS2
                                          3173  #           bit 5       Device enable /SS3
                                          3174  #           bit 6       Banking B0
                                          3175  #           bit 7       Banking B1
                                          3176  #           bit 15      Data out MOSI
                                          3177  #       sysArgs[7]      Cache for control state (written to)
                                          3178  #
                                          3179  # Intended for prototyping, and probably too low-level for most applications
                                          3180  # Still there's a safeguard: it's not possible to disable RAM using this
                                          3181
                                          3182  label('SYS_ExpanderControl_v4_40')
SYS_ExpanderControl_v4_40:
              0b09 140d  ld   $0d,y       3183  ld(hi('sys_ExpanderControl'),Y) #15
              0b0a e000  jmp  y,$00       3184  jmp(Y,'sys_ExpanderControl')    #16
              0b0b 000c  ld   $0c         3185  ld(0b00001100)                  #17
                                          3186  #    ^^^^^^^^
                                          3187  #    |||||||`-- SCLK
                                          3188  #    ||||||`--- Not connected
                                          3189  #    |||||`---- /SS0
                                          3190  #    ||||`----- /SS1
                                          3191  #    |||`------ /SS2
                                          3192  #    ||`------- /SS3
                                          3193  #    |`-------- B0
                                          3194  #    `--------- B1
                                          3195
                                          3196  #-----------------------------------------------------------------------
                                          3197  # Extension SYS_Run6502_v4_80
                                          3198  #-----------------------------------------------------------------------
                                          3199
                                          3200  # Transfer control to v6502
                                          3201  #
                                          3202  # Calling 6502 code from vCPU goes (only) through this SYS function.
                                          3203  # Directly modifying the vCpuSelect variable is unreliable. The
                                          3204  # control transfer is immediate, without waiting for the current
                                          3205  # time slice to end or first returning to vCPU.
                                          3206  #
                                          3207  # vCPU code and v6502 code can interoperate without much hassle:
                                          3208  # - The v6502 program counter is vLR, and v6502 doesn't touch vPC
                                          3209  # - Returning to vCPU is with the BRK instruction
                                          3210  # - BRK doesn't dump process state on the stack
                                          3211  # - vCPU can save/restore the vLR with PUSH/POP
                                          3212  # - Stacks are shared, vAC is shared
                                          3213  # - vAC can indicate what the v6502 code wants. vAC+1 will be cleared
                                          3214  # - Alternative is to leave a word in sysArgs[6:7] (v6502 X and Y registers)
                                          3215  # - Another way is to set vPC before BRK, and vCPU will continue there(+2)
                                          3216  #
                                          3217  # Calling v6502 code from vCPU looks like this:
                                          3218  #       LDWI  SYS_Run6502_v4_80
                                          3219  #       STW   sysFn
                                          3220  #       LDWI  $6502_start_address
                                          3221  #       STW   vLR
                                          3222  #       SYS   80
                                          3223  #
                                          3224  # Variables:
                                          3225  #       vAC             Accumulator
                                          3226  #       vLR             Program Counter
                                          3227  #       vSP             Stack Pointer (+1)
                                          3228  #       sysArgs[6]      Index Register X
                                          3229  #       sysArgs[7]      Index Register Y
                                          3230  # For info:
                                          3231  #       sysArgs[0:1]    Address Register, free to clobber
                                          3232  #       sysArgs[2]      Instruction Register, free to clobber
                                          3233  #       sysArgs[3:5]    Flags, don't touch
                                          3234  #
                                          3235  # Implementation details::
                                          3236  #
                                          3237  #  The time to reserve for this transition is the maximum time
                                          3238  #  between NEXT and v6502_check. This is
                                          3239  #       SYS call duration + 2*v6502_maxTicks + (v6502_overhead - vCPU_overhead)
                                          3240  #     = 22 + 38 + (11 - 9) = 62 cycles.
                                          3241  #  So reserving 80 cycles is future proof. This isn't overhead, as it includes
                                          3242  #  the fetching of the first 6502 opcode and its operands..
                                          3243  #
                                          3244  #                      0            10                 28=0         9
                                          3245  #    ---+----+---------+------------+------------------+-----------+---
                                          3246  # video | nop| runVcpu |   ENTER    | At least one ins |   EXIT    | video
                                          3247  #    ---+----+---------+------------+------------------+-----------+---
                                          3248  #        sync  prelude  ENTER-to-ins    ins-to-NEXT     NEXT-to-video
                                          3249  #       |<-->|
                                          3250  #        0/1 |<------->|
                                          3251  #                 5    |<----------------------------->|
                                          3252  #          runVCpu_overhead           28               |<--------->|
                                          3253  #                                 2*maxTicks                 9
                                          3254  #                                                      vCPU_overhead
                                          3255  #
                                          3256  #                      0                21                    38=0       11
                                          3257  #    ---+----+---------+----------------+--------------------+-----------+---
                                          3258  # video | nop| runVcpu |   v6502_ENTER  | At least one fetch |v6502_exitB| video
                                          3259  #    ---+----+---------+----------------+--------------------+-----------+---
                                          3260  #        sync  prelude   enter-to-fetch     fetch-to-check    check-to-video
                                          3261  #       |<-->|
                                          3262  #        0/1 |<------->|
                                          3263  #                 5    |<----------------------------------->|
                                          3264  #          runVcpu_overhead           38                     |<--------->|
                                          3265  #                              2*v6520_maxTicks                    11
                                          3266  #                                                            v6502_overhead
                                          3267
                                          3268  label('SYS_Run6502_v4_80')
SYS_Run6502_v4_80:
              0b0c 140d  ld   $0d,y       3269  ld(hi('sys_v6502'),Y)           #15
              0b0d e08b  jmp  y,$8b       3270  jmp(Y,'sys_v6502')              #16
              0b0e 000d  ld   $0d         3271  ld(hi('v6502_ENTER'))           #17 Activate v6502
                                          3272
                                          3273  #-----------------------------------------------------------------------
                                          3274  # Extension SYS_ResetWaveforms_v4_50
                                          3275  #-----------------------------------------------------------------------
                                          3276
                                          3277  # soundTable[4x+0] = sawtooth, to be modified into metallic/noise
                                          3278  # soundTable[4x+1] = pulse
                                          3279  # soundTable[4x+2] = triangle
                                          3280  # soundTable[4x+3] = sawtooth, also useful to right shift 2 bits
                                          3281
                                          3282  label('SYS_ResetWaveforms_v4_50')
SYS_ResetWaveforms_v4_50:
              0b0f 1412  ld   $12,y       3283  ld(hi('sys_ResetWaveforms'),Y)  #15 Initial setup of waveforms. [vAC+0]=i
              0b10 e0b2  jmp  y,$b2       3284  jmp(Y,'sys_ResetWaveforms')     #16
              0b11 1407  ld   $07,y       3285  ld(soundTable>>8,Y)             #17
                                          3286
                                          3287  #-----------------------------------------------------------------------
                                          3288  # Extension SYS_ShuffleNoise_v4_46
                                          3289  #-----------------------------------------------------------------------
                                          3290
                                          3291  # Use simple 6-bits variation of RC4 to permutate waveform 0 in soundTable
                                          3292
                                          3293  label('SYS_ShuffleNoise_v4_46')
SYS_ShuffleNoise_v4_46:
              0b12 1412  ld   $12,y       3294  ld(hi('sys_ShuffleNoise'),Y)    #15 Shuffle soundTable[4i+0]. [vAC+0]=4j, [vAC+1]=4i
              0b13 e0d3  jmp  y,$d3       3295  jmp(Y,'sys_ShuffleNoise')       #16
              0b14 1407  ld   $07,y       3296  ld(soundTable>>8,Y)             #17
                                          3297
                                          3298  #-----------------------------------------------------------------------
                                          3299  # Extension SYS_SpiExchangeBytes_v4_134
                                          3300  #-----------------------------------------------------------------------
                                          3301
                                          3302  # Send AND receive 1..256 bytes over SPI interface
                                          3303
                                          3304  # Variables:
                                          3305  #       sysArgs[0]      Page index start, for both send/receive (in, changed)
                                          3306  #       sysArgs[1]      Memory page for send data (in)
                                          3307  #       sysArgs[2]      Page index stop (in)
                                          3308  #       sysArgs[3]      Memory page for receive data (in)
                                          3309  #       sysArgs[4]      Scratch (changed)
                                          3310
                                          3311  label('SYS_SpiExchangeBytes_v4_134')
SYS_SpiExchangeBytes_v4_134:
              0b15 140d  ld   $0d,y       3312  ld(hi('sys_SpiExchangeBytes'),Y)#15
              0b16 e015  jmp  y,$15       3313  jmp(Y,'sys_SpiExchangeBytes')   #16
              0b17 1401  ld   $01,y       3314  ld(hi(ctrlBits),Y)              #17 Control state as saved by SYS_ExpanderControl
                                          3315
                                          3316  #-----------------------------------------------------------------------
                                          3317  # Extension SYS_ReceiveSerial1_vX_32
                                          3318  #-----------------------------------------------------------------------
                                          3319
                                          3320  # SYS function for receiving one byte over the serial controller port.
                                          3321  # This is a public version of SYS_NextByteIn from the loader private
                                          3322  # extension.  A byte is read from IN when videoY reaches
                                          3323  # sysArgs[3]. The byte is added to the checksum sysArgs[2] then stored
                                          3324  # at address sysArgs[0:1] which gets incremented.
                                          3325  #
                                          3326  # The 65 bytes of a serial frame can be read for the following values
                                          3327  # of videoY: 207 (protocol byte) 219 (length, 6 bits only) 235, 251
                                          3328  # (address) then 2, 6, 10, .. 238 stepping by four, then 185.
                                          3329  #
                                          3330  # Variables:
                                          3331  #     sysArgs[0:1] Address
                                          3332  #     sysArgs[2]   Checksum
                                          3333  #     sysArgs[3]   Wait value (videoY)
                                          3334
                                          3335  label('SYS_ReceiveSerial1_vX_32')
SYS_ReceiveSerial1_vX_32:                 3336  bra('sys_ReceiveSerial1')       #15
              0b18 fcb2  bra  sys_ReceiveSerial1
              0b19 0127  ld   [$27]       3337  ld([sysArgs+3])                 #16
                                          3338
                                          3339  #-----------------------------------------------------------------------
                                          3340  #  Implementations
                                          3341  #-----------------------------------------------------------------------
                                          3342
                                          3343  # SYS_SetMemory_54 implementation
                                          3344  label('sys_SetMemory#18')
sys_SetMemory#18:
              0b1a 1527  ld   [$27],y     3345  ld([sysArgs+3],Y)               #18
              0b1b f83e  ble  .sysSb#21   3346  ble('.sysSb#21')                #19 Enter fast lane if >=128 or at 0 (-> 256)
              0b1c a008  suba $08         3347  suba(8)                         #20
              0b1d f440  bge  .sysSb#23   3348  bge('.sysSb#23')                #21 Or when >=8
              0b1e c224  st   [$24]       3349  st([sysArgs+0])                 #22
              0b1f 2004  anda $04         3350  anda(4)                         #23
              0b20 f027  beq  .sysSb#26   3351  beq('.sysSb#26')                #24
              0b21 0125  ld   [$25]       3352  ld([sysArgs+1])                 #25 Set 4 pixels
              0b22 de00  st   [y,x++]     3353  st([Y,Xpp])                     #26
              0b23 de00  st   [y,x++]     3354  st([Y,Xpp])                     #27
              0b24 de00  st   [y,x++]     3355  st([Y,Xpp])                     #28
              0b25 fc2a  bra  .sysSb#31   3356  bra('.sysSb#31')                #29
              0b26 de00  st   [y,x++]     3357  st([Y,Xpp])                     #30
                                          3358  label('.sysSb#26')
.sysSb#26:    0b27 0001  ld   $01         3359  wait(31-26)                     #26
              0b28 ec28  bne  $0b28
              0b29 a001  suba $01
                                          3360  label('.sysSb#31')
.sysSb#31:    0b2a 0124  ld   [$24]       3361  ld([sysArgs+0])                 #31
              0b2b 2002  anda $02         3362  anda(2)                         #32
              0b2c f031  beq  .sysSb#35   3363  beq('.sysSb#35')                #33
              0b2d 0125  ld   [$25]       3364  ld([sysArgs+1])                 #34 Set 2 pixels
              0b2e de00  st   [y,x++]     3365  st([Y,Xpp])                     #35
              0b2f fc34  bra  .sysSb#38   3366  bra('.sysSb#38')                #36
              0b30 de00  st   [y,x++]     3367  st([Y,Xpp])                     #37
                                          3368  label('.sysSb#35')
.sysSb#35:    0b31 0200  nop              3369  wait(38-35)                     #35
              0b32 0200  nop
              0b33 0200  nop
                                          3370  label('.sysSb#38')
.sysSb#38:    0b34 0124  ld   [$24]       3371  ld([sysArgs+0])                 #38
              0b35 2001  anda $01         3372  anda(1)                         #39
              0b36 f039  beq  $0b39       3373  beq(pc()+3)                     #40
              0b37 fc3a  bra  $0b3a       3374  bra(pc()+3)                     #41
              0b38 0125  ld   [$25]       3375  ld([sysArgs+1])                 #42 Set 1 pixel
              0b39 0d00  ld   [y,x]       3376  ld([Y,X])                       #42(!) No change
              0b3a ce00  st   [y,x]       3377  st([Y,X])                       #43
              0b3b 1403  ld   $03,y       3378  ld(hi('NEXTY'),Y)               #44 Return
              0b3c e000  jmp  y,$00       3379  jmp(Y,'NEXTY')                  #45 All done
              0b3d 00e8  ld   $e8         3380  ld(-48/2)                       #46
                                          3381  label('.sysSb#21')
.sysSb#21:    0b3e 0200  nop              3382  nop()                           #21
              0b3f c224  st   [$24]       3383  st([sysArgs+0])                 #22
                                          3384  label('.sysSb#23')
.sysSb#23:    0b40 0125  ld   [$25]       3385  ld([sysArgs+1])                 #23 Set 8 pixels
              0b41 de00  st   [y,x++]     3386  st([Y,Xpp])                     #24
              0b42 de00  st   [y,x++]     3387  st([Y,Xpp])                     #25
              0b43 de00  st   [y,x++]     3388  st([Y,Xpp])                     #26
              0b44 de00  st   [y,x++]     3389  st([Y,Xpp])                     #27
              0b45 de00  st   [y,x++]     3390  st([Y,Xpp])                     #28
              0b46 de00  st   [y,x++]     3391  st([Y,Xpp])                     #29
              0b47 de00  st   [y,x++]     3392  st([Y,Xpp])                     #30
              0b48 de00  st   [y,x++]     3393  st([Y,Xpp])                     #31
              0b49 0126  ld   [$26]       3394  ld([sysArgs+2])                 #32 Advance write pointer
              0b4a 8008  adda $08         3395  adda(8)                         #33
              0b4b c226  st   [$26]       3396  st([sysArgs+2])                 #34
              0b4c 0124  ld   [$24]       3397  ld([sysArgs+0])                 #35
              0b4d f050  beq  $0b50       3398  beq(pc()+3)                     #36
              0b4e fc51  bra  $0b51       3399  bra(pc()+3)                     #37
              0b4f 00fe  ld   $fe         3400  ld(-2)                          #38 Self-restart when more to do
              0b50 0000  ld   $00         3401  ld(0)                           #38(!)
              0b51 8116  adda [$16]       3402  adda([vPC])                     #39
              0b52 c216  st   [$16]       3403  st([vPC])                       #40
              0b53 1403  ld   $03,y       3404  ld(hi('REENTER'),Y)             #41
              0b54 e0cb  jmp  y,$cb       3405  jmp(Y,'REENTER')                #42
              0b55 00e9  ld   $e9         3406  ld(-46/2)                       #43
                                          3407
                                          3408  # SYS_SetMode_80 implementation
                                          3409  label('sys_SetMode')
sys_SetMode:  0b56 ec59  bne  $0b59       3410  bne(pc()+3)                     #18
              0b57 fc59  bra  $0b59       3411  bra(pc()+2)                     #19
              0b58 0003  ld   $03         3412  ld('startVideo')                #20 First enable video if disabled
              0b59 c21e  st   [$1e]       3413  st([vReturn])                   #20,21
              0b5a 0119  ld   [$19]       3414  ld([vAC+1])                     #22
              0b5b f065  beq  .sysSm#25   3415  beq('.sysSm#25')                #23
              0b5c 1403  ld   $03,y       3416  ld(hi('REENTER'),Y)             #24
              0b5d 6118  xora [$18]       3417  xora([vAC])                     #25
              0b5e 60b0  xora $b0         3418  xora((1975>>8)^(1975&255))      #26 Poor man\'s 1975 detection
              0b5f ec62  bne  $0b62       3419  bne(pc()+3)                     #27
              0b60 fc63  bra  $0b63       3420  bra(pc()+3)                     #28
                                          3421  assert videoZ == 0x0100
              0b61 c21e  st   [$1e]       3422  st([vReturn])                   #29 DISABLE video/audio/serial/etc
              0b62 0200  nop              3423  nop()                           #29(!) Ignore and return
              0b63 e0cb  jmp  y,$cb       3424  jmp(Y,'REENTER')                #30
              0b64 00ef  ld   $ef         3425  ld(-34/2)                       #31
                                          3426  label('.sysSm#25')
.sysSm#25:    0b65 0118  ld   [$18]       3427  ld([vAC])                       #25 Mode 0,1,2,3
              0b66 2003  anda $03         3428  anda(3)                         #26
              0b67 806a  adda $6a         3429  adda('.sysSm#30')               #27
              0b68 fe00  bra  ac          3430  bra(AC)                         #28
              0b69 fc6e  bra  .sysSm#31   3431  bra('.sysSm#31')                #29
                                          3432  label('.sysSm#30')
.sysSm#30:    0b6a 000a  ld   $0a         3433  ld('pixels')                    #30 videoB lines
              0b6b 000a  ld   $0a         3434  ld('pixels')                    #30
              0b6c 00f6  ld   $f6         3435  ld('nopixels')                  #30
              0b6d 00f6  ld   $f6         3436  ld('nopixels')                  #30
                                          3437  label('.sysSm#31')
.sysSm#31:    0b6e c20a  st   [$0a]       3438  st([videoModeB])                #31
              0b6f 0118  ld   [$18]       3439  ld([vAC])                       #32
              0b70 2003  anda $03         3440  anda(3)                         #33
              0b71 8074  adda $74         3441  adda('.sysSm#37')               #34
              0b72 fe00  bra  ac          3442  bra(AC)                         #35
              0b73 fc78  bra  .sysSm#38   3443  bra('.sysSm#38')                #36
                                          3444  label('.sysSm#37')
.sysSm#37:    0b74 000a  ld   $0a         3445  ld('pixels')                    #37 videoC lines
              0b75 000a  ld   $0a         3446  ld('pixels')                    #37
              0b76 000a  ld   $0a         3447  ld('pixels')                    #37
              0b77 00f6  ld   $f6         3448  ld('nopixels')                  #37
                                          3449  label('.sysSm#38')
.sysSm#38:    0b78 c20b  st   [$0b]       3450  st([videoModeC])                #38
              0b79 0118  ld   [$18]       3451  ld([vAC])                       #39
              0b7a 2003  anda $03         3452  anda(3)                         #40
              0b7b 807e  adda $7e         3453  adda('.sysSm#44')               #41
              0b7c fe00  bra  ac          3454  bra(AC)                         #42
              0b7d fc82  bra  .sysSm#45   3455  bra('.sysSm#45')                #43
                                          3456  label('.sysSm#44')
.sysSm#44:    0b7e 000a  ld   $0a         3457  ld('pixels')                    #44 videoD lines
              0b7f 00f6  ld   $f6         3458  ld('nopixels')                  #44
              0b80 00f6  ld   $f6         3459  ld('nopixels')                  #44
              0b81 00f6  ld   $f6         3460  ld('nopixels')                  #44
                                          3461  label('.sysSm#45')
.sysSm#45:    0b82 c20c  st   [$0c]       3462  st([videoModeD])                #45
              0b83 e0cb  jmp  y,$cb       3463  jmp(Y,'REENTER')                #46
              0b84 00e7  ld   $e7         3464  ld(-50/2)                       #47
                                          3465
                                          3466  # SYS_SendSerial1_v3_80 implementation
                                          3467  label('sys_SendSerial1')
sys_SendSerial1:
              0b85 f08c  beq  .sysSs#20   3468  beq('.sysSs#20')                #18
              0b86 1124  ld   [$24],x     3469  ld([sysArgs+0],X)               #19
              0b87 0116  ld   [$16]       3470  ld([vPC])                       #20 Wait for vBlank
              0b88 a002  suba $02         3471  suba(2)                         #21
              0b89 1403  ld   $03,y       3472  ld(hi('REENTER_28'),Y)          #22
              0b8a e0ca  jmp  y,$ca       3473  jmp(Y,'REENTER_28')             #23
              0b8b c216  st   [$16]       3474  st([vPC])                       #24
                                          3475  label('.sysSs#20')
.sysSs#20:    0b8c 1525  ld   [$25],y     3476  ld([sysArgs+1],Y)               #20 Synchronized with vBlank
              0b8d 0d00  ld   [y,x]       3477  ld([Y,X])                       #21 Copy next bit
              0b8e 2126  anda [$26]       3478  anda([sysArgs+2])               #22
              0b8f ec92  bne  $0b92       3479  bne(pc()+3)                     #23
              0b90 fc93  bra  $0b93       3480  bra(pc()+3)                     #24
              0b91 000e  ld   $0e         3481  ld(7*2)                         #25
              0b92 0012  ld   $12         3482  ld(9*2)                         #25
              0b93 c20d  st   [$0d]       3483  st([videoPulse])                #26
              0b94 0126  ld   [$26]       3484  ld([sysArgs+2])                 #27 Rotate input bit
              0b95 8200  adda ac          3485  adda(AC)                        #28
              0b96 ec99  bne  $0b99       3486  bne(pc()+3)                     #29
              0b97 fc99  bra  $0b99       3487  bra(pc()+2)                     #30
              0b98 0001  ld   $01         3488  ld(1)                           #31
              0b99 c226  st   [$26]       3489  st([sysArgs+2])                 #31,32 (must be idempotent)
              0b9a 2001  anda $01         3490  anda(1)                         #33 Optionally increment pointer
              0b9b 8124  adda [$24]       3491  adda([sysArgs+0])               #34
              0b9c d224  st   [$24],x     3492  st([sysArgs+0],X)               #35
              0b9d 0127  ld   [$27]       3493  ld([sysArgs+3])                 #36 Frame counter
              0b9e a001  suba $01         3494  suba(1)                         #37
              0b9f f0ae  beq  .sysSs#40   3495  beq('.sysSs#40')                #38
              0ba0 1403  ld   $03,y       3496  ld(hi('REENTER'),Y)             #39
              0ba1 c227  st   [$27]       3497  st([sysArgs+3])                 #40
              0ba2 010f  ld   [$0f]       3498  ld([serialRaw])                 #41 Test for anything being sent back
              0ba3 60ff  xora $ff         3499  xora(255)                       #42
              0ba4 f0a9  beq  .sysSs#45   3500  beq('.sysSs#45')                #43
              0ba5 c218  st   [$18]       3501  st([vAC])                       #44 Abort after key press with non-zero error
              0ba6 c219  st   [$19]       3502  st([vAC+1])                     #45
              0ba7 e0cb  jmp  y,$cb       3503  jmp(Y,'REENTER')                #46
              0ba8 00e7  ld   $e7         3504  ld(-50/2)                       #47
                                          3505  label('.sysSs#45')
.sysSs#45:    0ba9 0116  ld   [$16]       3506  ld([vPC])                       #45 Continue sending bits
              0baa a002  suba $02         3507  suba(2)                         #46
              0bab c216  st   [$16]       3508  st([vPC])                       #47
              0bac e0cb  jmp  y,$cb       3509  jmp(Y,'REENTER')                #48
              0bad 00e6  ld   $e6         3510  ld(-52/2)                       #49
                                          3511  label('.sysSs#40')
.sysSs#40:    0bae c218  st   [$18]       3512  st([vAC])                       #40 Stop sending bits, no error
              0baf c219  st   [$19]       3513  st([vAC+1])                     #41
              0bb0 e0cb  jmp  y,$cb       3514  jmp(Y,'REENTER')                #42
              0bb1 00e9  ld   $e9         3515  ld(-46/2)                       #43
                                          3516
                                          3517  # SYS_ReceiveSerialByte implementation
                                          3518  label('sys_ReceiveSerial1')
sys_ReceiveSerial1:
              0bb2 6109  xora [$09]       3519  xora([videoY])                  #17
              0bb3 ecc0  bne  .sysRsb#20  3520  bne('.sysRsb#20')               #18
              0bb4 1124  ld   [$24],x     3521  ld([sysArgs+0],X)               #19
              0bb5 1525  ld   [$25],y     3522  ld([sysArgs+1],Y)               #20
              0bb6 0300  ld   in          3523  ld(IN)                          #21
              0bb7 ce00  st   [y,x]       3524  st([Y,X])                       #22
              0bb8 8126  adda [$26]       3525  adda([sysArgs+2])               #23
              0bb9 c226  st   [$26]       3526  st([sysArgs+2])                 #24
              0bba 0124  ld   [$24]       3527  ld([sysArgs+0])                 #25
              0bbb 8001  adda $01         3528  adda(1)                         #26
              0bbc c224  st   [$24]       3529  st([sysArgs+0])                 #27
              0bbd 1403  ld   $03,y       3530  ld(hi('NEXTY'),Y)               #28
              0bbe e000  jmp  y,$00       3531  jmp(Y,'NEXTY')                  #29
              0bbf 00f0  ld   $f0         3532  ld(-32/2)                       #30
                                          3533  # Restart the instruction in the next timeslice
                                          3534  label('.sysRsb#20')
.sysRsb#20:   0bc0 0116  ld   [$16]       3535  ld([vPC])                       #20
              0bc1 a002  suba $02         3536  suba(2)                         #21
              0bc2 c216  st   [$16]       3537  st([vPC])                       #22
              0bc3 1403  ld   $03,y       3538  ld(hi('REENTER'),Y)             #23
              0bc4 e0cb  jmp  y,$cb       3539  jmp(Y,'REENTER')                #24
              0bc5 00f2  ld   $f2         3540  ld(-28/2)                       #25
                                          3541
                                          3542  # -------------------------------------------------------------
                                          3543  # vCPU instructions : POP PUSH
                                          3544  # -------------------------------------------------------------
                                          3545
                                          3546
                                          3547  # POP implementation (vCPU instruction)
                                          3548  label('pop#13')
pop#13:       0bc6 1504  ld   [$04],y     3549  ld([vSPH],Y)                    #13 vSP.hi
              0bc7 111c  ld   [$1c],x     3550  ld([vSP],X)                     #14
              0bc8 0d00  ld   [y,x]       3551  ld([Y,X])                       #15
              0bc9 de00  st   [y,x++]     3552  st([Y,Xpp])                     #16
              0bca c21a  st   [$1a]       3553  st([vLR])                       #17
              0bcb 0d00  ld   [y,x]       3554  ld([Y,X])                       #18
              0bcc c21b  st   [$1b]       3555  st([vLR+1])                     #19
              0bcd 011c  ld   [$1c]       3556  ld([vSP])                       #20
              0bce 8002  adda $02         3557  adda(2)                         #21
              0bcf c21c  st   [$1c]       3558  st([vSP])                       #22
              0bd0 0116  ld   [$16]       3559  ld([vPC])                       #23
              0bd1 a001  suba $01         3560  suba(1)                         #24
              0bd2 c216  st   [$16]       3561  st([vPC])                       #25
              0bd3 1403  ld   $03,y       3562  ld(hi('NEXTY'),Y)               #26
              0bd4 e000  jmp  y,$00       3563  jmp(Y,'NEXTY')                  #27
              0bd5 00f1  ld   $f1         3564  ld(-30/2)                       #28
                                          3565
                                          3566  # PUSH implementation (vCPU instruction)
                                          3567  label('push#13')
push#13:      0bd6 1504  ld   [$04],y     3568  ld([vSPH],Y)                    #13 vSP.hi
              0bd7 011c  ld   [$1c]       3569  ld([vSP])                       #14
              0bd8 a002  suba $02         3570  suba(2)                         #15
              0bd9 d21c  st   [$1c],x     3571  st([vSP],X)                     #16
              0bda 011a  ld   [$1a]       3572  ld([vLR])                       #17
              0bdb de00  st   [y,x++]     3573  st([Y,Xpp])                     #18
              0bdc 011b  ld   [$1b]       3574  ld([vLR+1])                     #19
              0bdd ce00  st   [y,x]       3575  st([Y,X])                       #20
              0bde 0116  ld   [$16]       3576  ld([vPC])                       #21
              0bdf a001  suba $01         3577  suba(1)                         #22
              0be0 c216  st   [$16]       3578  st([vPC])                       #23
              0be1 1403  ld   $03,y       3579  ld(hi('NEXTY'),Y)               #24
              0be2 e000  jmp  y,$00       3580  jmp(Y,'NEXTY')                  #25
              0be3 00f2  ld   $f2         3581  ld(-28/2)                       #26
                                          3582
                                          3583  # -------------------------------------------------------------
                                          3584  # vCPU instructions for comparisons between two 16-bit operands
                                          3585  # -------------------------------------------------------------
                                          3586  #
                                          3587  # vCPU's conditional branching (BCC) always compares vAC against 0,
                                          3588  # treating vAC as a two's complement 16-bit number. When we need to
                                          3589  # compare two arbitrary numnbers we normally first take their difference
                                          3590  # with SUBW.  However, when this difference is too large, the subtraction
                                          3591  # overflows and we get the wrong outcome. To get it right over the
                                          3592  # entire range, an elaborate sequence is needed. TinyBASIC uses this
                                          3593  # blurp for its relational operators. (It compares stack variable $02
                                          3594  # with zero page variable $3a.)
                                          3595  #
                                          3596  #       0461  ee 02            LDLW  $02
                                          3597  #       0463  fc 3a            XORW  $3a
                                          3598  #       0465  35 53 6a         BGE   $046c
                                          3599  #       0468  ee 02            LDLW  $02
                                          3600  #       046a  90 6e            BRA   $0470
                                          3601  #       046c  ee 02            LDLW  $02
                                          3602  #       046e  b8 3a            SUBW  $3a
                                          3603  #       0470  35 56 73         BLE   $0475
                                          3604  #
                                          3605  # The CMPHS and CMPHU instructions were introduced to simplify this.
                                          3606  # They inspect both operands to see if there is an overflow risk. If
                                          3607  # so, they modify vAC such that their difference gets smaller, while
                                          3608  # preserving the relation between the two operands. After that, the
                                          3609  # SUBW instruction can't overflow and we achieve a correct comparison.
                                          3610  # Use CMPHS for signed comparisons and CMPHU for unsigned. With these,
                                          3611  # the sequence above becomes:
                                          3612  #
                                          3613  #       0461  ee 02            LDLW  $02
                                          3614  #       0463  1f 3b            CMPHS $3b        Note: high byte of operand
                                          3615  #       0465  b8 3a            SUBW  $3a
                                          3616  #       0467  35 56 73         BLE   $0475
                                          3617  #
                                          3618  # CMPHS/CMPHU don't make much sense other than in combination with
                                          3619  # SUBW. These modify vACH, if needed, as given in the following table:
                                          3620  #
                                          3621  #       vACH  varH  |     vACH
                                          3622  #       bit7  bit7  | CMPHS  CMPHU
                                          3623  #       ---------------------------
                                          3624  #         0     0   |  vACH   vACH      no change needed
                                          3625  #         0     1   | varH+1 varH-1     narrowing the range
                                          3626  #         1     0   | varH-1 varH+1     narrowing the range
                                          3627  #         1     1   |  vACH   vACH      no change needed
                                          3628  #       ---------------------------
                                          3629
                                          3630  # CMPHS implementation (vCPU instruction)
                                          3631  label('cmphs#13')
cmphs#13:     0be4 1200  ld   ac,x        3632  ld(AC,X)                        #13
              0be5 0500  ld   [x]         3633  ld([X])                         #14
              0be6 6119  xora [$19]       3634  xora([vAC+1])                   #15
              0be7 f4fa  bge  .cmphu#18   3635  bpl('.cmphu#18')                #16 Skip if same sign
              0be8 0119  ld   [$19]       3636  ld([vAC+1])                     #17
              0be9 e8ec  blt  $0bec       3637  bmi(pc()+3)                     #18
              0bea fced  bra  .cmphs#21   3638  bra(pc()+3)                     #19
                                          3639  label('.cmphs#20')
.cmphs#20:    0beb 0001  ld   $01         3640  ld(+1)                          #20    vAC < variable
              0bec 00ff  ld   $ff         3641  ld(-1)                          #20(!) vAC > variable
                                          3642  label('.cmphs#21')
.cmphs#21:    0bed 8500  adda [x]         3643  adda([X])                       #21
              0bee c219  st   [$19]       3644  st([vAC+1])                     #22
              0bef 1403  ld   $03,y       3645  ld(hi('REENTER'),Y)             #23
              0bf0 e0cb  jmp  y,$cb       3646  jmp(Y,'REENTER')                #24
              0bf1 00f2  ld   $f2         3647  ld(-28/2)                       #25
                                          3648
                                          3649  # CMPHU implementation (vCPU instruction)
                                          3650  label('cmphu#13')
cmphu#13:     0bf2 1200  ld   ac,x        3651  ld(AC,X)                        #13
              0bf3 0500  ld   [x]         3652  ld([X])                         #14
              0bf4 6119  xora [$19]       3653  xora([vAC+1])                   #15
              0bf5 f4fa  bge  .cmphu#18   3654  bpl('.cmphu#18')                #16 Skip if same sign
              0bf6 0119  ld   [$19]       3655  ld([vAC+1])                     #17
              0bf7 e8eb  blt  .cmphs#20   3656  bmi('.cmphs#20')                #18
              0bf8 fced  bra  .cmphs#21   3657  bra('.cmphs#21')                #19
              0bf9 00ff  ld   $ff         3658  ld(-1)                          #20    vAC > variable
                                          3659
                                          3660  # No-operation for CMPHS/CMPHU when high bits are equal
                                          3661  label('.cmphu#18')
.cmphu#18:    0bfa 1403  ld   $03,y       3662  ld(hi('NEXTY'),Y)               #18
              0bfb e000  jmp  y,$00       3663  jmp(Y,'NEXTY')                  #19
              0bfc 00f5  ld   $f5         3664  ld(-22/2)                       #20
                                          3665
                                          3666  #-----------------------------------------------------------------------
                                          3667  #
                                          3668  #  $0c00 ROM page 12: More SYS functions (sprites)
                                          3669  #
                                          3670  #       Page 1: vertical blank interval
                                          3671  #       Page 2: visible scanlines
                                          3672  #
                                          3673  #-----------------------------------------------------------------------
                                          3674
              0bfd 0200  nop              3675  align(0x100, size=0x100)
              0bfe 0200  nop
              0bff 0200  nop
                                          3676
                                          3677  #-----------------------------------------------------------------------
                                          3678  # Extension SYS_Sprite6_v3_64
                                          3679  # Extension SYS_Sprite6x_v3_64
                                          3680  # Extension SYS_Sprite6y_v3_64
                                          3681  # Extension SYS_Sprite6xy_v3_64
                                          3682  #-----------------------------------------------------------------------
                                          3683
                                          3684  # Blit sprite in screen memory
                                          3685  #
                                          3686  # Variables
                                          3687  #       vAC             Destination address in screen
                                          3688  #       sysArgs[0:1]    Source address of 6xY pixels (colors 0..63) terminated
                                          3689  #                       by negative byte value N (typically N = -Y)
                                          3690  #       sysArgs[2:7]    Scratch (user as copy buffer)
                                          3691  #
                                          3692  # This SYS function draws a sprite of 6 pixels wide and Y pixels high.
                                          3693  # The pixel data is read sequentually from RAM, in horizontal chunks
                                          3694  # of 6 pixels at a time, and then written to the screen through the
                                          3695  # destination pointer (each chunk underneath the previous), thus
                                          3696  # drawing a 6xY stripe. Pixel values should be non-negative. The first
                                          3697  # negative byte N after a chunk signals the end of the sprite data.
                                          3698  # So the sprite's height Y is determined by the source data and is
                                          3699  # therefore flexible. This negative byte value, typically N == -Y,
                                          3700  # is then used to adjust the destination pointer's high byte, to make
                                          3701  # it easier to draw sprites wider than 6 pixels: just repeat the SYS
                                          3702  # call for as many 6-pixel wide stripes you need. All arguments are
                                          3703  # already left in place to facilitate this. After one call, the source
                                          3704  # pointer will point past that source data, effectively:
                                          3705  #       src += Y * 6 + 1
                                          3706  # The destination pointer will have been adjusted as:
                                          3707  #       dst += (Y + N) * 256 + 6
                                          3708  # (With arithmetic wrapping around on the same memory page)
                                          3709  #
                                          3710  # Y is only limited by source memory, not by CPU cycles. The
                                          3711  # implementation is such that the SYS function self-repeats, each
                                          3712  # time drawing the next 6-pixel chunk. It can typically draw 12
                                          3713  # pixels per scanline this way.
                                          3714
                                          3715  label('SYS_Sprite6_v3_64')
                                          3716
SYS_Sprite6_v3_64:
              0c00 1124  ld   [$24],x     3717  ld([sysArgs+0],X)               #15 Pixel data source address
              0c01 1525  ld   [$25],y     3718  ld([sysArgs+1],Y)               #16
              0c02 0d00  ld   [y,x]       3719  ld([Y,X])                       #17 Next pixel or stop
              0c03 f411  bge  .sysDpx0    3720  bpl('.sysDpx0')                 #18
              0c04 de00  st   [y,x++]     3721  st([Y,Xpp])                     #19 Just X++
                                          3722
              0c05 8119  adda [$19]       3723  adda([vAC+1])                   #20 Adjust dst for convenience
              0c06 c219  st   [$19]       3724  st([vAC+1])                     #21
              0c07 0118  ld   [$18]       3725  ld([vAC])                       #22
              0c08 8006  adda $06         3726  adda(6)                         #23
              0c09 c218  st   [$18]       3727  st([vAC])                       #24
              0c0a 0124  ld   [$24]       3728  ld([sysArgs+0])                 #25 Adjust src for convenience
              0c0b 8001  adda $01         3729  adda(1)                         #26
              0c0c c224  st   [$24]       3730  st([sysArgs+0])                 #27
              0c0d 0200  nop              3731  nop()                           #28
              0c0e 1403  ld   $03,y       3732  ld(hi('REENTER'),Y)             #29 Normal exit (no self-repeat)
              0c0f e0cb  jmp  y,$cb       3733  jmp(Y,'REENTER')                #30
              0c10 00ef  ld   $ef         3734  ld(-34/2)                       #31
                                          3735
                                          3736  label('.sysDpx0')
.sysDpx0:     0c11 c226  st   [$26]       3737  st([sysArgs+2])                 #20 Gobble 6 pixels into buffer
              0c12 0d00  ld   [y,x]       3738  ld([Y,X])                       #21
              0c13 de00  st   [y,x++]     3739  st([Y,Xpp])                     #22 Just X++
              0c14 c227  st   [$27]       3740  st([sysArgs+3])                 #23
              0c15 0d00  ld   [y,x]       3741  ld([Y,X])                       #24
              0c16 de00  st   [y,x++]     3742  st([Y,Xpp])                     #25 Just X++
              0c17 c228  st   [$28]       3743  st([sysArgs+4])                 #26
              0c18 0d00  ld   [y,x]       3744  ld([Y,X])                       #27
              0c19 de00  st   [y,x++]     3745  st([Y,Xpp])                     #28 Just X++
              0c1a c229  st   [$29]       3746  st([sysArgs+5])                 #29
              0c1b 0d00  ld   [y,x]       3747  ld([Y,X])                       #30
              0c1c de00  st   [y,x++]     3748  st([Y,Xpp])                     #31 Just X++
              0c1d c22a  st   [$2a]       3749  st([sysArgs+6])                 #32
              0c1e 0d00  ld   [y,x]       3750  ld([Y,X])                       #33
              0c1f de00  st   [y,x++]     3751  st([Y,Xpp])                     #34 Just X++
              0c20 c22b  st   [$2b]       3752  st([sysArgs+7])                 #35
                                          3753
              0c21 1118  ld   [$18],x     3754  ld([vAC],X)                     #36 Screen memory destination address
              0c22 1519  ld   [$19],y     3755  ld([vAC+1],Y)                   #37
              0c23 0126  ld   [$26]       3756  ld([sysArgs+2])                 #38 Write 6 pixels
              0c24 de00  st   [y,x++]     3757  st([Y,Xpp])                     #39
              0c25 0127  ld   [$27]       3758  ld([sysArgs+3])                 #40
              0c26 de00  st   [y,x++]     3759  st([Y,Xpp])                     #41
              0c27 0128  ld   [$28]       3760  ld([sysArgs+4])                 #42
              0c28 de00  st   [y,x++]     3761  st([Y,Xpp])                     #43
              0c29 0129  ld   [$29]       3762  ld([sysArgs+5])                 #44
              0c2a de00  st   [y,x++]     3763  st([Y,Xpp])                     #45
              0c2b 012a  ld   [$2a]       3764  ld([sysArgs+6])                 #46
              0c2c de00  st   [y,x++]     3765  st([Y,Xpp])                     #47
              0c2d 012b  ld   [$2b]       3766  ld([sysArgs+7])                 #48
              0c2e de00  st   [y,x++]     3767  st([Y,Xpp])                     #49
                                          3768
              0c2f 0124  ld   [$24]       3769  ld([sysArgs+0])                 #50 src += 6
              0c30 8006  adda $06         3770  adda(6)                         #51
              0c31 c224  st   [$24]       3771  st([sysArgs+0])                 #52
              0c32 0119  ld   [$19]       3772  ld([vAC+1])                     #53 dst += 256
              0c33 8001  adda $01         3773  adda(1)                         #54
              0c34 c219  st   [$19]       3774  st([vAC+1])                     #55
                                          3775
              0c35 0116  ld   [$16]       3776  ld([vPC])                       #56 Self-repeating SYS call
              0c36 a002  suba $02         3777  suba(2)                         #57
              0c37 c216  st   [$16]       3778  st([vPC])                       #58
              0c38 1403  ld   $03,y       3779  ld(hi('REENTER'),Y)             #59
              0c39 e0cb  jmp  y,$cb       3780  jmp(Y,'REENTER')                #60
              0c3a 00e0  ld   $e0         3781  ld(-64/2)                       #61
                                          3782
              0c3b 0200  nop              3783  align(64)
              0c3c 0200  nop
              0c3d 0200  nop
              * 5 times
                                          3784  label('SYS_Sprite6x_v3_64')
                                          3785
SYS_Sprite6x_v3_64:
              0c40 1124  ld   [$24],x     3786  ld([sysArgs+0],X)               #15 Pixel data source address
              0c41 1525  ld   [$25],y     3787  ld([sysArgs+1],Y)               #16
              0c42 0d00  ld   [y,x]       3788  ld([Y,X])                       #17 Next pixel or stop
              0c43 f451  bge  .sysDpx1    3789  bpl('.sysDpx1')                 #18
              0c44 de00  st   [y,x++]     3790  st([Y,Xpp])                     #19 Just X++
                                          3791
              0c45 8119  adda [$19]       3792  adda([vAC+1])                   #20 Adjust dst for convenience
              0c46 c219  st   [$19]       3793  st([vAC+1])                     #21
              0c47 0118  ld   [$18]       3794  ld([vAC])                       #22
              0c48 a006  suba $06         3795  suba(6)                         #23
              0c49 c218  st   [$18]       3796  st([vAC])                       #24
              0c4a 0124  ld   [$24]       3797  ld([sysArgs+0])                 #25 Adjust src for convenience
              0c4b 8001  adda $01         3798  adda(1)                         #26
              0c4c c224  st   [$24]       3799  st([sysArgs+0])                 #27
              0c4d 0200  nop              3800  nop()                           #28
              0c4e 1403  ld   $03,y       3801  ld(hi('REENTER'),Y)             #29 Normal exit (no self-repeat)
              0c4f e0cb  jmp  y,$cb       3802  jmp(Y,'REENTER')                #30
              0c50 00ef  ld   $ef         3803  ld(-34/2)                       #31
                                          3804
                                          3805  label('.sysDpx1')
.sysDpx1:     0c51 c22b  st   [$2b]       3806  st([sysArgs+7])                 #20 Gobble 6 pixels into buffer (backwards)
              0c52 0d00  ld   [y,x]       3807  ld([Y,X])                       #21
              0c53 de00  st   [y,x++]     3808  st([Y,Xpp])                     #22 Just X++
              0c54 c22a  st   [$2a]       3809  st([sysArgs+6])                 #23
              0c55 0d00  ld   [y,x]       3810  ld([Y,X])                       #24
              0c56 de00  st   [y,x++]     3811  st([Y,Xpp])                     #25 Just X++
              0c57 c229  st   [$29]       3812  st([sysArgs+5])                 #26
              0c58 0d00  ld   [y,x]       3813  ld([Y,X])                       #27
              0c59 de00  st   [y,x++]     3814  st([Y,Xpp])                     #28 Just X++
              0c5a c228  st   [$28]       3815  st([sysArgs+4])                 #29
              0c5b 0d00  ld   [y,x]       3816  ld([Y,X])                       #30
              0c5c de00  st   [y,x++]     3817  st([Y,Xpp])                     #31 Just X++
              0c5d c227  st   [$27]       3818  st([sysArgs+3])                 #32
              0c5e 0d00  ld   [y,x]       3819  ld([Y,X])                       #33
              0c5f de00  st   [y,x++]     3820  st([Y,Xpp])                     #34 Just X++
                                          3821
              0c60 1118  ld   [$18],x     3822  ld([vAC],X)                     #35 Screen memory destination address
              0c61 1519  ld   [$19],y     3823  ld([vAC+1],Y)                   #36
              0c62 de00  st   [y,x++]     3824  st([Y,Xpp])                     #37 Write 6 pixels
              0c63 0127  ld   [$27]       3825  ld([sysArgs+3])                 #38
              0c64 de00  st   [y,x++]     3826  st([Y,Xpp])                     #39
              0c65 0128  ld   [$28]       3827  ld([sysArgs+4])                 #40
              0c66 de00  st   [y,x++]     3828  st([Y,Xpp])                     #41
              0c67 0129  ld   [$29]       3829  ld([sysArgs+5])                 #42
              0c68 de00  st   [y,x++]     3830  st([Y,Xpp])                     #43
              0c69 012a  ld   [$2a]       3831  ld([sysArgs+6])                 #44
              0c6a de00  st   [y,x++]     3832  st([Y,Xpp])                     #45
              0c6b 012b  ld   [$2b]       3833  ld([sysArgs+7])                 #46
              0c6c de00  st   [y,x++]     3834  st([Y,Xpp])                     #47
                                          3835
              0c6d 0124  ld   [$24]       3836  ld([sysArgs+0])                 #48 src += 6
              0c6e 8006  adda $06         3837  adda(6)                         #49
              0c6f c224  st   [$24]       3838  st([sysArgs+0])                 #50
              0c70 0119  ld   [$19]       3839  ld([vAC+1])                     #51 dst += 256
              0c71 8001  adda $01         3840  adda(1)                         #52
              0c72 c219  st   [$19]       3841  st([vAC+1])                     #53
                                          3842
              0c73 0116  ld   [$16]       3843  ld([vPC])                       #54 Self-repeating SYS call
              0c74 a002  suba $02         3844  suba(2)                         #55
              0c75 c216  st   [$16]       3845  st([vPC])                       #56
              0c76 1403  ld   $03,y       3846  ld(hi('REENTER'),Y)             #57
              0c77 e0cb  jmp  y,$cb       3847  jmp(Y,'REENTER')                #58
              0c78 00e1  ld   $e1         3848  ld(-62/2)                       #59
                                          3849
              0c79 0200  nop              3850  align(64)
              0c7a 0200  nop
              0c7b 0200  nop
              * 7 times
                                          3851  label('SYS_Sprite6y_v3_64')
                                          3852
SYS_Sprite6y_v3_64:
              0c80 1124  ld   [$24],x     3853  ld([sysArgs+0],X)               #15 Pixel data source address
              0c81 1525  ld   [$25],y     3854  ld([sysArgs+1],Y)               #16
              0c82 0d00  ld   [y,x]       3855  ld([Y,X])                       #17 Next pixel or stop
              0c83 f493  bge  .sysDpx2    3856  bpl('.sysDpx2')                 #18
              0c84 de00  st   [y,x++]     3857  st([Y,Xpp])                     #19 Just X++
                                          3858
              0c85 60ff  xora $ff         3859  xora(255)                       #20 Adjust dst for convenience
              0c86 8001  adda $01         3860  adda(1)                         #21
              0c87 8119  adda [$19]       3861  adda([vAC+1])                   #22
              0c88 c219  st   [$19]       3862  st([vAC+1])                     #23
              0c89 0118  ld   [$18]       3863  ld([vAC])                       #24
              0c8a 8006  adda $06         3864  adda(6)                         #25
              0c8b c218  st   [$18]       3865  st([vAC])                       #26
              0c8c 0124  ld   [$24]       3866  ld([sysArgs+0])                 #27 Adjust src for convenience
              0c8d 8001  adda $01         3867  adda(1)                         #28
              0c8e c224  st   [$24]       3868  st([sysArgs+0])                 #29
              0c8f 0200  nop              3869  nop()                           #30
              0c90 1403  ld   $03,y       3870  ld(hi('REENTER'),Y)             #31 Normal exit (no self-repeat)
              0c91 e0cb  jmp  y,$cb       3871  jmp(Y,'REENTER')                #32
              0c92 00ee  ld   $ee         3872  ld(-36/2)                       #33
                                          3873
                                          3874  label('.sysDpx2')
.sysDpx2:     0c93 c226  st   [$26]       3875  st([sysArgs+2])                 #20 Gobble 6 pixels into buffer
              0c94 0d00  ld   [y,x]       3876  ld([Y,X])                       #21
              0c95 de00  st   [y,x++]     3877  st([Y,Xpp])                     #22 Just X++
              0c96 c227  st   [$27]       3878  st([sysArgs+3])                 #23
              0c97 0d00  ld   [y,x]       3879  ld([Y,X])                       #24
              0c98 de00  st   [y,x++]     3880  st([Y,Xpp])                     #25 Just X++
              0c99 c228  st   [$28]       3881  st([sysArgs+4])                 #26
              0c9a 0d00  ld   [y,x]       3882  ld([Y,X])                       #27
              0c9b de00  st   [y,x++]     3883  st([Y,Xpp])                     #28 Just X++
              0c9c c229  st   [$29]       3884  st([sysArgs+5])                 #29
              0c9d 0d00  ld   [y,x]       3885  ld([Y,X])                       #30
              0c9e de00  st   [y,x++]     3886  st([Y,Xpp])                     #31 Just X++
              0c9f c22a  st   [$2a]       3887  st([sysArgs+6])                 #32
              0ca0 0d00  ld   [y,x]       3888  ld([Y,X])                       #33
              0ca1 de00  st   [y,x++]     3889  st([Y,Xpp])                     #34 Just X++
              0ca2 c22b  st   [$2b]       3890  st([sysArgs+7])                 #35
                                          3891
              0ca3 1118  ld   [$18],x     3892  ld([vAC],X)                     #36 Screen memory destination address
              0ca4 1519  ld   [$19],y     3893  ld([vAC+1],Y)                   #37
              0ca5 0126  ld   [$26]       3894  ld([sysArgs+2])                 #38 Write 6 pixels
              0ca6 de00  st   [y,x++]     3895  st([Y,Xpp])                     #39
              0ca7 0127  ld   [$27]       3896  ld([sysArgs+3])                 #40
              0ca8 de00  st   [y,x++]     3897  st([Y,Xpp])                     #41
              0ca9 0128  ld   [$28]       3898  ld([sysArgs+4])                 #42
              0caa de00  st   [y,x++]     3899  st([Y,Xpp])                     #43
              0cab 0129  ld   [$29]       3900  ld([sysArgs+5])                 #44
              0cac de00  st   [y,x++]     3901  st([Y,Xpp])                     #45
              0cad 012a  ld   [$2a]       3902  ld([sysArgs+6])                 #46
              0cae de00  st   [y,x++]     3903  st([Y,Xpp])                     #47
              0caf 012b  ld   [$2b]       3904  ld([sysArgs+7])                 #48
              0cb0 de00  st   [y,x++]     3905  st([Y,Xpp])                     #49
                                          3906
              0cb1 0124  ld   [$24]       3907  ld([sysArgs+0])                 #50 src += 6
              0cb2 8006  adda $06         3908  adda(6)                         #51
              0cb3 c224  st   [$24]       3909  st([sysArgs+0])                 #52
              0cb4 0119  ld   [$19]       3910  ld([vAC+1])                     #53 dst -= 256
              0cb5 a001  suba $01         3911  suba(1)                         #54
              0cb6 c219  st   [$19]       3912  st([vAC+1])                     #55
                                          3913
              0cb7 0116  ld   [$16]       3914  ld([vPC])                       #56 Self-repeating SYS call
              0cb8 a002  suba $02         3915  suba(2)                         #57
              0cb9 c216  st   [$16]       3916  st([vPC])                       #58
              0cba 1403  ld   $03,y       3917  ld(hi('REENTER'),Y)             #59
              0cbb e0cb  jmp  y,$cb       3918  jmp(Y,'REENTER')                #60
              0cbc 00e0  ld   $e0         3919  ld(-64/2)                       #61
                                          3920
              0cbd 0200  nop              3921  align(64)
              0cbe 0200  nop
              0cbf 0200  nop
                                          3922  label('SYS_Sprite6xy_v3_64')
                                          3923
SYS_Sprite6xy_v3_64:
              0cc0 1124  ld   [$24],x     3924  ld([sysArgs+0],X)               #15 Pixel data source address
              0cc1 1525  ld   [$25],y     3925  ld([sysArgs+1],Y)               #16
              0cc2 0d00  ld   [y,x]       3926  ld([Y,X])                       #17 Next pixel or stop
              0cc3 f4d3  bge  .sysDpx3    3927  bpl('.sysDpx3')                 #18
              0cc4 de00  st   [y,x++]     3928  st([Y,Xpp])                     #19 Just X++
                                          3929
              0cc5 60ff  xora $ff         3930  xora(255)                       #20 Adjust dst for convenience
              0cc6 8001  adda $01         3931  adda(1)                         #21
              0cc7 8119  adda [$19]       3932  adda([vAC+1])                   #22
              0cc8 c219  st   [$19]       3933  st([vAC+1])                     #23
              0cc9 0118  ld   [$18]       3934  ld([vAC])                       #24
              0cca a006  suba $06         3935  suba(6)                         #25
              0ccb c218  st   [$18]       3936  st([vAC])                       #26
              0ccc 0124  ld   [$24]       3937  ld([sysArgs+0])                 #27 Adjust src for convenience
              0ccd 8001  adda $01         3938  adda(1)                         #28
              0cce c224  st   [$24]       3939  st([sysArgs+0])                 #29
              0ccf 0200  nop              3940  nop()                           #30
              0cd0 1403  ld   $03,y       3941  ld(hi('REENTER'),Y)             #31 Normal exit (no self-repeat)
              0cd1 e0cb  jmp  y,$cb       3942  jmp(Y,'REENTER')                #32
              0cd2 00ee  ld   $ee         3943  ld(-36/2)                       #33
                                          3944
                                          3945  label('.sysDpx3')
.sysDpx3:     0cd3 c22b  st   [$2b]       3946  st([sysArgs+7])                 #20 Gobble 6 pixels into buffer (backwards)
              0cd4 0d00  ld   [y,x]       3947  ld([Y,X])                       #21
              0cd5 de00  st   [y,x++]     3948  st([Y,Xpp])                     #22 Just X++
              0cd6 c22a  st   [$2a]       3949  st([sysArgs+6])                 #23
              0cd7 0d00  ld   [y,x]       3950  ld([Y,X])                       #24
              0cd8 de00  st   [y,x++]     3951  st([Y,Xpp])                     #25 Just X++
              0cd9 c229  st   [$29]       3952  st([sysArgs+5])                 #26
              0cda 0d00  ld   [y,x]       3953  ld([Y,X])                       #27
              0cdb de00  st   [y,x++]     3954  st([Y,Xpp])                     #28 Just X++
              0cdc c228  st   [$28]       3955  st([sysArgs+4])                 #29
              0cdd 0d00  ld   [y,x]       3956  ld([Y,X])                       #30
              0cde de00  st   [y,x++]     3957  st([Y,Xpp])                     #31 Just X++
              0cdf c227  st   [$27]       3958  st([sysArgs+3])                 #32
              0ce0 0d00  ld   [y,x]       3959  ld([Y,X])                       #33
              0ce1 de00  st   [y,x++]     3960  st([Y,Xpp])                     #34 Just X++
                                          3961
              0ce2 1118  ld   [$18],x     3962  ld([vAC],X)                     #35 Screen memory destination address
              0ce3 1519  ld   [$19],y     3963  ld([vAC+1],Y)                   #36
              0ce4 de00  st   [y,x++]     3964  st([Y,Xpp])                     #37 Write 6 pixels
              0ce5 0127  ld   [$27]       3965  ld([sysArgs+3])                 #38
              0ce6 de00  st   [y,x++]     3966  st([Y,Xpp])                     #39
              0ce7 0128  ld   [$28]       3967  ld([sysArgs+4])                 #40
              0ce8 de00  st   [y,x++]     3968  st([Y,Xpp])                     #41
              0ce9 0129  ld   [$29]       3969  ld([sysArgs+5])                 #42
              0cea de00  st   [y,x++]     3970  st([Y,Xpp])                     #43
              0ceb 012a  ld   [$2a]       3971  ld([sysArgs+6])                 #44
              0cec de00  st   [y,x++]     3972  st([Y,Xpp])                     #45
              0ced 012b  ld   [$2b]       3973  ld([sysArgs+7])                 #46
              0cee de00  st   [y,x++]     3974  st([Y,Xpp])                     #47
                                          3975
              0cef 0124  ld   [$24]       3976  ld([sysArgs+0])                 #48 src += 6
              0cf0 8006  adda $06         3977  adda(6)                         #49
              0cf1 c224  st   [$24]       3978  st([sysArgs+0])                 #50
              0cf2 0119  ld   [$19]       3979  ld([vAC+1])                     #51 dst -= 256
              0cf3 a001  suba $01         3980  suba(1)                         #52
              0cf4 c219  st   [$19]       3981  st([vAC+1])                     #53
                                          3982
              0cf5 0116  ld   [$16]       3983  ld([vPC])                       #54 Self-repeating SYS call
              0cf6 a002  suba $02         3984  suba(2)                         #55
              0cf7 c216  st   [$16]       3985  st([vPC])                       #56
              0cf8 1403  ld   $03,y       3986  ld(hi('REENTER'),Y)             #57
              0cf9 e0cb  jmp  y,$cb       3987  jmp(Y,'REENTER')                #58
              0cfa 00e1  ld   $e1         3988  ld(-62/2)                       #59
                                          3989
                                          3990  #-----------------------------------------------------------------------
                                          3991
              0cfb 0200  nop              3992  align(0x100)
              0cfc 0200  nop
              0cfd 0200  nop
              * 5 times
                                          3993
                                          3994  label('sys_ExpanderControl')
                                          3995
sys_ExpanderControl:
              0d00 1401  ld   $01,y       3996  ld(hi(ctrlBits),Y)                  #18
              0d01 2118  anda [$18]       3997  anda([vAC])                         #19 check for special ctrl code space
              0d02 f009  beq  sysEx#22    3998  beq('sysEx#22')                     #20
              0d03 0118  ld   [$18]       3999  ld([vAC])                           #21 load low byte of ctrl code in delay slot
              0d04 20fc  anda $fc         4000  anda(0xfc)                          #22 sanitize normal ctrl code
              0d05 caf8  st   [y,$f8]     4001  st([Y,ctrlBits])                    #23 store in ctrlBits
              0d06 c21d  st   [$1d]       4002  st([vTmp])                          #24 store in vTmp
              0d07 fc0e  bra  sysEx#27    4003  bra('sysEx#27')                     #25 jump to issuing normal ctrl code
              0d08 1519  ld   [$19],y     4004  ld([vAC+1],Y)                       #26 load high byte of ctrl code in delay slot
                                          4005  label('sysEx#22')
sysEx#22:     0d09 30fc  anda $fc,x       4006  anda(0xfc,X)                        #22 * special ctrl code
              0d0a 09f8  ld   [y,$f8]     4007  ld([Y,ctrlBits])                    #23 get previous normal code from ctrlBits
              0d0b c21d  st   [$1d]       4008  st([vTmp])                          #24 save it in vTmp
              0d0c 1519  ld   [$19],y     4009  ld([vAC+1],Y)                       #25 load high byte of ctrl code
              0d0d cd00  ctrl y,x         4010  ctrl(Y,X)                           #26 issue special ctrl code
                                          4011  label('sysEx#27')
sysEx#27:     0d0e 011d  ld   [$1d]       4012  ld([vTmp])                          #27 load saved normal ctrl code
              0d0f 30fc  anda $fc,x       4013  anda(0xfc,X)                        #28 sanitize ctrlBits
              0d10 cd00  ctrl y,x         4014  ctrl(Y,X)                           #29 issue normal ctrl code
              0d11 011d  ld   [$1d]       4015  ld([vTmp])                          #30 always load something after ctrl
              0d12 1403  ld   $03,y       4016  ld(hi('REENTER'),Y)                 #31
              0d13 e0cb  jmp  y,$cb       4017  jmp(Y,'REENTER')                    #32
              0d14 00ee  ld   $ee         4018  ld(-36/2)                           #33
                                          4019
                                          4020  #-----------------------------------------------------------------------
                                          4021
                                          4022  label('sys_SpiExchangeBytes')
                                          4023
sys_SpiExchangeBytes:
              0d15 09f8  ld   [y,$f8]     4024  ld([Y,ctrlBits])                #18
              0d16 c228  st   [$28]       4025  st([sysArgs+4])                 #19
                                          4026
              0d17 1124  ld   [$24],x     4027  ld([sysArgs+0],X)               #20 Fetch byte to send
              0d18 1525  ld   [$25],y     4028  ld([sysArgs+1],Y)               #21
              0d19 0d00  ld   [y,x]       4029  ld([Y,X])                       #22
                                          4030
                                          4031  for i in range(8):
                                          4032    st([vTmp],Y);C('Bit %d'%(7-i))#23+i*12
              0d1a d61d  st   [$1d],y     ;Bit 7
              0d1b 1128  ld   [$28],x     4033    ld([sysArgs+4],X)             #24+i*12
              0d1c dd00  ctrl y,x++       4034    ctrl(Y,Xpp)                   #25+i*12 Set MOSI
              0d1d dd00  ctrl y,x++       4035    ctrl(Y,Xpp)                   #26+i*12 Raise SCLK, disable RAM!
              0d1e 0100  ld   [$00]       4036    ld([0])                       #27+i*12 Get MISO
              0d1f 200f  anda $0f         4037    anda(0b00001111)              #28+i*12 This is why R1 as pull-DOWN is simpler
              0d20 f023  beq  $0d23       4038    beq(pc()+3)                   #29+i*12
              0d21 fc23  bra  $0d23       4039    bra(pc()+2)                   #30+i*12
              0d22 0001  ld   $01         4040    ld(1)                         #31+i*12
              0d23 cd00  ctrl y,x         4041    ctrl(Y,X)                     #32+i*12,29+i*12 (Must be idempotent) Lower SCLK
              0d24 811d  adda [$1d]       4042    adda([vTmp])                  #33+i*12 Shift
              0d25 811d  adda [$1d]       4043    adda([vTmp])                  #34+i*12
              0d26 d61d  st   [$1d],y     ;Bit 6
              0d27 1128  ld   [$28],x
              0d28 dd00  ctrl y,x++
              0d29 dd00  ctrl y,x++
              0d2a 0100  ld   [$00]
              0d2b 200f  anda $0f
              0d2c f02f  beq  $0d2f
              0d2d fc2f  bra  $0d2f
              0d2e 0001  ld   $01
              0d2f cd00  ctrl y,x
              0d30 811d  adda [$1d]
              0d31 811d  adda [$1d]
              0d32 d61d  st   [$1d],y     ;Bit 5
              0d33 1128  ld   [$28],x
              0d34 dd00  ctrl y,x++
              0d35 dd00  ctrl y,x++
              0d36 0100  ld   [$00]
              0d37 200f  anda $0f
              0d38 f03b  beq  $0d3b
              0d39 fc3b  bra  $0d3b
              0d3a 0001  ld   $01
              0d3b cd00  ctrl y,x
              0d3c 811d  adda [$1d]
              0d3d 811d  adda [$1d]
              0d3e d61d  st   [$1d],y     ;Bit 4
              0d3f 1128  ld   [$28],x
              0d40 dd00  ctrl y,x++
              0d41 dd00  ctrl y,x++
              0d42 0100  ld   [$00]
              0d43 200f  anda $0f
              0d44 f047  beq  $0d47
              0d45 fc47  bra  $0d47
              0d46 0001  ld   $01
              0d47 cd00  ctrl y,x
              0d48 811d  adda [$1d]
              0d49 811d  adda [$1d]
              0d4a d61d  st   [$1d],y     ;Bit 3
              0d4b 1128  ld   [$28],x
              0d4c dd00  ctrl y,x++
              0d4d dd00  ctrl y,x++
              0d4e 0100  ld   [$00]
              0d4f 200f  anda $0f
              0d50 f053  beq  $0d53
              0d51 fc53  bra  $0d53
              0d52 0001  ld   $01
              0d53 cd00  ctrl y,x
              0d54 811d  adda [$1d]
              0d55 811d  adda [$1d]
              0d56 d61d  st   [$1d],y     ;Bit 2
              0d57 1128  ld   [$28],x
              0d58 dd00  ctrl y,x++
              0d59 dd00  ctrl y,x++
              0d5a 0100  ld   [$00]
              0d5b 200f  anda $0f
              0d5c f05f  beq  $0d5f
              0d5d fc5f  bra  $0d5f
              0d5e 0001  ld   $01
              0d5f cd00  ctrl y,x
              0d60 811d  adda [$1d]
              0d61 811d  adda [$1d]
              0d62 d61d  st   [$1d],y     ;Bit 1
              0d63 1128  ld   [$28],x
              0d64 dd00  ctrl y,x++
              0d65 dd00  ctrl y,x++
              0d66 0100  ld   [$00]
              0d67 200f  anda $0f
              0d68 f06b  beq  $0d6b
              0d69 fc6b  bra  $0d6b
              0d6a 0001  ld   $01
              0d6b cd00  ctrl y,x
              0d6c 811d  adda [$1d]
              0d6d 811d  adda [$1d]
              0d6e d61d  st   [$1d],y     ;Bit 0
              0d6f 1128  ld   [$28],x
              0d70 dd00  ctrl y,x++
              0d71 dd00  ctrl y,x++
              0d72 0100  ld   [$00]
              0d73 200f  anda $0f
              0d74 f077  beq  $0d77
              0d75 fc77  bra  $0d77
              0d76 0001  ld   $01
              0d77 cd00  ctrl y,x
              0d78 811d  adda [$1d]
              0d79 811d  adda [$1d]
                                          4044
              0d7a 1124  ld   [$24],x     4045  ld([sysArgs+0],X)               #119 Store received byte
              0d7b 1527  ld   [$27],y     4046  ld([sysArgs+3],Y)               #120
              0d7c ce00  st   [y,x]       4047  st([Y,X])                       #121
                                          4048
              0d7d 0124  ld   [$24]       4049  ld([sysArgs+0])                 #122 Advance pointer
              0d7e 8001  adda $01         4050  adda(1)                         #123
              0d7f c224  st   [$24]       4051  st([sysArgs+0])                 #124
                                          4052
              0d80 6126  xora [$26]       4053  xora([sysArgs+2])               #125 Reached end?
              0d81 f088  beq  .sysSpi#128 4054  beq('.sysSpi#128')              #126
                                          4055
              0d82 0116  ld   [$16]       4056  ld([vPC])                       #127 Self-repeating SYS call
              0d83 a002  suba $02         4057  suba(2)                         #128
              0d84 c216  st   [$16]       4058  st([vPC])                       #129
              0d85 1403  ld   $03,y       4059  ld(hi('NEXTY'),Y)               #130
              0d86 e000  jmp  y,$00       4060  jmp(Y,'NEXTY')                  #131
              0d87 00bd  ld   $bd         4061  ld(-134/2)                      #132
                                          4062
                                          4063  label('.sysSpi#128')
.sysSpi#128:  0d88 1403  ld   $03,y       4064  ld(hi('NEXTY'),Y)               #128 Continue program
              0d89 e000  jmp  y,$00       4065  jmp(Y,'NEXTY')                  #129
              0d8a 00be  ld   $be         4066  ld(-132/2)                      #130
                                          4067
                                          4068  #-----------------------------------------------------------------------
                                          4069
                                          4070  label('sys_v6502')
                                          4071
sys_v6502:    0d8b d602  st   [$02],y     4072  st([vCpuSelect],Y)              #18 Activate v6502
              0d8c 00f5  ld   $f5         4073  ld(-22/2)                       #19
              0d8d e0ff  jmp  y,$ff       4074  jmp(Y,'v6502_ENTER')            #20 Transfer control in the same time slice
              0d8e 8115  adda [$15]       4075  adda([vTicks])                  #21
                                          4076  assert (38 - 22)//2 >= v6502_adjust
                                          4077
                                          4078  #-----------------------------------------------------------------------
                                          4079  #       MOS 6502 emulator
                                          4080  #-----------------------------------------------------------------------
                                          4081
                                          4082  # Some quirks:
                                          4083  # - Stack in zero page instead of page 1
                                          4084  # - No interrupts
                                          4085  # - No decimal mode (may never be added). D flag is emulated but ignored.
                                          4086  # - BRK switches back to running 16-bits vCPU
                                          4087  # - Illegal opcodes map to BRK, but can read ghost operands before trapping
                                          4088  # - Illegal opcode $ff won't be trapped and cause havoc instead
                                          4089
                                          4090  # Big things TODO:
                                          4091  # XXX Tuning, put most frequent instructions in the primary page
                                          4092
                                          4093  label('v6502_ror')
                                          4094  assert v6502_Cflag == 1
v6502_ror:    0d8f 1525  ld   [$25],y     4095  ld([v6502_ADH],Y)               #12
              0d90 00fc  ld   $fc         4096  ld(-46//2+v6502_maxTicks)       #13 Is there enough time for the excess ticks?
              0d91 8115  adda [$15]       4097  adda([vTicks])                  #14
              0d92 e8a6  blt  .recheck17  4098  blt('.recheck17')               #15
              0d93 0127  ld   [$27]       4099  ld([v6502_P])                   #16 Transfer C to "bit 8"
              0d94 2001  anda $01         4100  anda(1)                         #17
              0d95 807f  adda $7f         4101  adda(127)                       #18
              0d96 2080  anda $80         4102  anda(128)                       #19
              0d97 c219  st   [$19]       4103  st([v6502_BI])                  #20 The real 6502 wouldn't use BI for this
              0d98 0127  ld   [$27]       4104  ld([v6502_P])                   #21 Transfer bit 0 to C
              0d99 20fe  anda $fe         4105  anda(~1)                        #22
              0d9a c227  st   [$27]       4106  st([v6502_P])                   #23
              0d9b 0d00  ld   [y,x]       4107  ld([Y,X])                       #24
              0d9c 2001  anda $01         4108  anda(1)                         #25
              0d9d 4127  ora  [$27]       4109  ora([v6502_P])                  #26
              0d9e c227  st   [$27]       4110  st([v6502_P])                   #27
              0d9f 00c0  ld   $c0         4111  ld('v6502_ror#38')              #28 Shift table lookup
              0da0 c21d  st   [$1d]       4112  st([vTmp])                      #29
              0da1 0d00  ld   [y,x]       4113  ld([Y,X])                       #30
              0da2 20fe  anda $fe         4114  anda(~1)                        #31
              0da3 1405  ld   $05,y       4115  ld(hi('shiftTable'),Y)          #32
              0da4 e200  jmp  y,ac        4116  jmp(Y,AC)                       #33
              0da5 fcff  bra  $ff         4117  bra(255)                        #34 bra shiftTable+255
                                          4118  label('.recheck17')
.recheck17:   0da6 140e  ld   $0e,y       4119  ld(hi('v6502_check'),Y)         #17 Go back to time check before dispatch
              0da7 e0f2  jmp  y,$f2       4120  jmp(Y,'v6502_check')            #18
              0da8 00f6  ld   $f6         4121  ld(-20/2)                       #19
                                          4122
                                          4123  label('v6502_lsr')
                                          4124  assert v6502_Cflag == 1
v6502_lsr:    0da9 1525  ld   [$25],y     4125  ld([v6502_ADH],Y)               #12
              0daa 0127  ld   [$27]       4126  ld([v6502_P])                   #13 Transfer bit 0 to C
              0dab 20fe  anda $fe         4127  anda(~1)                        #14
              0dac c227  st   [$27]       4128  st([v6502_P])                   #15
              0dad 0d00  ld   [y,x]       4129  ld([Y,X])                       #16
              0dae 2001  anda $01         4130  anda(1)                         #17
              0daf 4127  ora  [$27]       4131  ora([v6502_P])                  #18
              0db0 c227  st   [$27]       4132  st([v6502_P])                   #19
              0db1 00b9  ld   $b9         4133  ld('v6502_lsr#30')              #20 Shift table lookup
              0db2 c21d  st   [$1d]       4134  st([vTmp])                      #21
              0db3 0d00  ld   [y,x]       4135  ld([Y,X])                       #22
              0db4 20fe  anda $fe         4136  anda(~1)                        #23
              0db5 1405  ld   $05,y       4137  ld(hi('shiftTable'),Y)          #24
              0db6 e200  jmp  y,ac        4138  jmp(Y,AC)                       #25
              0db7 fcff  bra  $ff         4139  bra(255)                        #26 bra shiftTable+255
                                          4140
                                          4141  label('v6502_rol')
                                          4142  assert v6502_Cflag == 1
v6502_rol:    0db8 1525  ld   [$25],y     4143  ld([v6502_ADH],Y)               #12
              0db9 0d00  ld   [y,x]       4144  ld([Y,X])                       #13
              0dba 2080  anda $80         4145  anda(0x80)                      #14
              0dbb c21d  st   [$1d]       4146  st([v6502_Tmp])                 #15
              0dbc 0127  ld   [$27]       4147  ld([v6502_P])                   #16
              0dbd 2001  anda $01         4148  anda(1)                         #17
                                          4149  label('.rol#18')
.rol#18:      0dbe 8d00  adda [y,x]       4150  adda([Y,X])                     #18
              0dbf 8d00  adda [y,x]       4151  adda([Y,X])                     #19
              0dc0 ce00  st   [y,x]       4152  st([Y,X])                       #20
              0dc1 c228  st   [$28]       4153  st([v6502_Qz])                  #21 Z flag
              0dc2 c229  st   [$29]       4154  st([v6502_Qn])                  #22 N flag
              0dc3 0127  ld   [$27]       4155  ld([v6502_P])                   #23 C Flag
              0dc4 20fe  anda $fe         4156  anda(~1)                        #24
              0dc5 111d  ld   [$1d],x     4157  ld([v6502_Tmp],X)               #25
              0dc6 4500  ora  [x]         4158  ora([X])                        #26
              0dc7 c227  st   [$27]       4159  st([v6502_P])                   #27
              0dc8 140e  ld   $0e,y       4160  ld(hi('v6502_next'),Y)          #28
              0dc9 00f0  ld   $f0         4161  ld(-32/2)                       #29
              0dca e020  jmp  y,$20       4162  jmp(Y,'v6502_next')             #30
                                          4163  #nop()                          #31 Overlap
                                          4164  #
                                          4165  label('v6502_asl')
v6502_asl:    0dcb 1525  ld   [$25],y     4166  ld([v6502_ADH],Y)               #12,32
              0dcc 0d00  ld   [y,x]       4167  ld([Y,X])                       #13
              0dcd 2080  anda $80         4168  anda(0x80)                      #14
              0dce c21d  st   [$1d]       4169  st([v6502_Tmp])                 #15
              0dcf fcbe  bra  .rol#18     4170  bra('.rol#18')                  #16
              0dd0 0000  ld   $00         4171  ld(0)                           #17
                                          4172
                                          4173  label('v6502_jmp1')
v6502_jmp1:   0dd1 0200  nop              4174  nop()                           #12
              0dd2 0124  ld   [$24]       4175  ld([v6502_ADL])                 #13
              0dd3 c21a  st   [$1a]       4176  st([v6502_PCL])                 #14
              0dd4 0125  ld   [$25]       4177  ld([v6502_ADH])                 #15
              0dd5 c21b  st   [$1b]       4178  st([v6502_PCH])                 #16
              0dd6 140e  ld   $0e,y       4179  ld(hi('v6502_next'),Y)          #17
              0dd7 e020  jmp  y,$20       4180  jmp(Y,'v6502_next')             #18
              0dd8 00f6  ld   $f6         4181  ld(-20/2)                       #19
                                          4182
                                          4183  label('v6502_jmp2')
v6502_jmp2:   0dd9 0200  nop              4184  nop()                           #12
              0dda 1525  ld   [$25],y     4185  ld([v6502_ADH],Y)               #13
              0ddb 0d00  ld   [y,x]       4186  ld([Y,X])                       #14
              0ddc de00  st   [y,x++]     4187  st([Y,Xpp])                     #15 (Just X++) Wrap around: bug compatible with NMOS
              0ddd c21a  st   [$1a]       4188  st([v6502_PCL])                 #16
              0dde 0d00  ld   [y,x]       4189  ld([Y,X])                       #17
              0ddf c21b  st   [$1b]       4190  st([v6502_PCH])                 #18
              0de0 140e  ld   $0e,y       4191  ld(hi('v6502_next'),Y)          #19
              0de1 e020  jmp  y,$20       4192  jmp(Y,'v6502_next')             #20
              0de2 00f5  ld   $f5         4193  ld(-22/2)                       #21
                                          4194
                                          4195  label('v6502_pla')
v6502_pla:    0de3 011c  ld   [$1c]       4196  ld([v6502_S])                   #12
              0de4 1200  ld   ac,x        4197  ld(AC,X)                        #13
              0de5 8001  adda $01         4198  adda(1)                         #14
              0de6 c21c  st   [$1c]       4199  st([v6502_S])                   #15
              0de7 0500  ld   [x]         4200  ld([X])                         #16
              0de8 c218  st   [$18]       4201  st([v6502_A])                   #17
              0de9 c228  st   [$28]       4202  st([v6502_Qz])                  #18 Z flag
              0dea c229  st   [$29]       4203  st([v6502_Qn])                  #19 N flag
              0deb 140e  ld   $0e,y       4204  ld(hi('v6502_next'),Y)          #20
              0dec 00f4  ld   $f4         4205  ld(-24/2)                       #21
              0ded e020  jmp  y,$20       4206  jmp(Y,'v6502_next')             #22
                                          4207  #nop()                          #23 Overlap
                                          4208  #
                                          4209  label('v6502_pha')
v6502_pha:    0dee 140e  ld   $0e,y       4210  ld(hi('v6502_next'),Y)          #12,24
              0def 011c  ld   [$1c]       4211  ld([v6502_S])                   #13
              0df0 a001  suba $01         4212  suba(1)                         #14
              0df1 d21c  st   [$1c],x     4213  st([v6502_S],X)                 #15
              0df2 0118  ld   [$18]       4214  ld([v6502_A])                   #16
              0df3 c600  st   [x]         4215  st([X])                         #17
              0df4 e020  jmp  y,$20       4216  jmp(Y,'v6502_next')             #18
              0df5 00f6  ld   $f6         4217  ld(-20/2)                       #19
                                          4218
                                          4219  label('v6502_brk')
v6502_brk:    0df6 0002  ld   $02         4220  ld(hi('ENTER'))                 #12 Switch to vCPU
              0df7 c202  st   [$02]       4221  st([vCpuSelect])                #13
                                          4222  assert v6502_A == vAC
              0df8 0000  ld   $00         4223  ld(0)                           #14
              0df9 c219  st   [$19]       4224  st([vAC+1])                     #15
              0dfa 1403  ld   $03,y       4225  ld(hi('REENTER'),Y)             #16 Switch in the current time slice
              0dfb 00fa  ld   $fa         4226  ld(-22//2+v6502_adjust)         #17
              0dfc e0cb  jmp  y,$cb       4227  jmp(Y,'REENTER')                #18
              0dfd 0200  nop              4228  nop()                           #19
                                          4229
                                          4230  # All interpreter entry points must share the same page offset, because
                                          4231  # this offset is hard-coded as immediate operand in the video driver.
                                          4232  # The Gigatron's original vCPU's 'ENTER' label is already at $2ff, so we
                                          4233  # just use $dff for 'v6502_ENTER'. v6502 actually has two entry points.
                                          4234  # The other is 'v6502_RESUME' at $10ff. It is used for instructions
                                          4235  # that were fetched but not yet executed. Allowing the split gives finer
                                          4236  # granulariy, and hopefully more throughput for the simpler instructions.
                                          4237  # (There is no "overhead" for allowing instruction splitting, because
                                          4238  #  both emulation phases must administer [vTicks] anyway.)
                                          4239  while pc()&255 < 255:
              0dfe 0200  nop              4240    nop()
                                          4241  label('v6502_ENTER')
v6502_ENTER:  0dff fc22  bra  v6502_next2 4242  bra('v6502_next2')              #0 v6502 primary entry point
                                          4243  # --- Page boundary ---
              0e00 a005  suba $05         4244  suba(v6502_adjust)              #1,19 Adjust for vCPU/v6520 timing differences
                                          4245
                                          4246  #19 Addressing modes
                                          4247  (   'v6502_mode0'  ); bra('v6502_modeIZX'); bra('v6502_modeIMM'); bra('v6502_modeILL') # $00 xxx000xx
              0e01 fce0  bra  v6502_modeIZX
              0e02 fc42  bra  v6502_modeIMM
              0e03 fc58  bra  v6502_modeIMP
                                          4248  bra('v6502_modeZP');  bra('v6502_modeZP');  bra('v6502_modeZP');  bra('v6502_modeILL') # $04 xxx001xx
              0e04 fc5d  bra  v6502_modeZP
              0e05 fc5d  bra  v6502_modeZP
              0e06 fc5d  bra  v6502_modeZP
              0e07 fc58  bra  v6502_modeIMP
                                          4249  bra('v6502_modeIMP'); bra('v6502_modeIMM'); bra('v6502_modeACC'); bra('v6502_modeILL') # $08 xxx010xx
              0e08 fc58  bra  v6502_modeIMP
              0e09 fc42  bra  v6502_modeIMM
              0e0a fc52  bra  v6502_modeACC
              0e0b fc58  bra  v6502_modeIMP
                                          4250  bra('v6502_modeABS'); bra('v6502_modeABS'); bra('v6502_modeABS'); bra('v6502_modeILL') # $0c xxx011xx
              0e0c fc78  bra  v6502_modeABS
              0e0d fc78  bra  v6502_modeABS
              0e0e fc78  bra  v6502_modeABS
              0e0f fc58  bra  v6502_modeIMP
                                          4251  bra('v6502_modeREL'); bra('v6502_modeIZY'); bra('v6502_modeIMM'); bra('v6502_modeILL') # $10 xxx100xx
              0e10 fccf  bra  v6502_modeREL
              0e11 fcab  bra  v6502_modeIZY
              0e12 fc42  bra  v6502_modeIMM
              0e13 fc58  bra  v6502_modeIMP
                                          4252  bra('v6502_modeZPX'); bra('v6502_modeZPX'); bra('v6502_modeZPX'); bra('v6502_modeILL') # $14 xxx101xx
              0e14 fc5b  bra  v6502_modeZPX
              0e15 fc5b  bra  v6502_modeZPX
              0e16 fc5b  bra  v6502_modeZPX
              0e17 fc58  bra  v6502_modeIMP
                                          4253  bra('v6502_modeIMP'); bra('v6502_modeABY'); bra('v6502_modeIMP'); bra('v6502_modeILL') # $18 xxx110xx
              0e18 fc58  bra  v6502_modeIMP
              0e19 fc7b  bra  v6502_modeABY
              0e1a fc58  bra  v6502_modeIMP
              0e1b fc58  bra  v6502_modeIMP
                                          4254  bra('v6502_modeABX'); bra('v6502_modeABX'); bra('v6502_modeABX'); bra('v6502_modeILL') # $1c xxx111xx
              0e1c fc7a  bra  v6502_modeABX
              0e1d fc7a  bra  v6502_modeABX
              0e1e fc7a  bra  v6502_modeABX
              0e1f fc58  bra  v6502_modeIMP
                                          4255
                                          4256  # Special encoding cases for emulator:
                                          4257  #     $00 BRK -         but gets mapped to #$DD      handled in v6502_mode0
                                          4258  #     $20 JSR $DDDD     but gets mapped to #$DD      handled in v6502_mode0 and v6502_JSR
                                          4259  #     $40 RTI -         but gets mapped to #$DD      handled in v6502_mode0
                                          4260  #     $60 RTS -         but gets mapped to #$DD      handled in v6502_mode0
                                          4261  #     $6C JMP ($DDDD)   but gets mapped to $DDDD     handled in v6502_JMP2
                                          4262  #     $96 STX $DD,Y     but gets mapped to $DD,X     handled in v6502_STX2
                                          4263  #     $B6 LDX $DD,Y     but gets mapped to $DD,X     handled in v6502_LDX2
                                          4264  #     $BE LDX $DDDD,Y   but gets mapped to $DDDD,X   handled in v6502_modeABX
                                          4265
                                          4266  label('v6502_next')
v6502_next:   0e20 8115  adda [$15]       4267  adda([vTicks])                  #0
                                          4268  blt('v6502_exitBefore')         #1 No more ticks
              0e21 e83a  blt  v6502_exitBefore
                                          4269  label('v6502_next2')
v6502_next2:  0e22 c215  st   [$15]       4270  st([vTicks])                    #2
                                          4271  #
                                          4272  # Fetch opcode
              0e23 111a  ld   [$1a],x     4273  ld([v6502_PCL],X)               #3
              0e24 151b  ld   [$1b],y     4274  ld([v6502_PCH],Y)               #4
              0e25 0d00  ld   [y,x]       4275  ld([Y,X])                       #5 Fetch IR
              0e26 c226  st   [$26]       4276  st([v6502_IR])                  #6
              0e27 011a  ld   [$1a]       4277  ld([v6502_PCL])                 #7 PC++
              0e28 8001  adda $01         4278  adda(1)                         #8
              0e29 d21a  st   [$1a],x     4279  st([v6502_PCL],X)               #9
              0e2a f02d  beq  $0e2d       4280  beq(pc()+3)                     #10
              0e2b fc2e  bra  $0e2e       4281  bra(pc()+3)                     #11
              0e2c 0000  ld   $00         4282  ld(0)                           #12
              0e2d 0001  ld   $01         4283  ld(1)                           #12(!)
              0e2e 811b  adda [$1b]       4284  adda([v6502_PCH])               #13
              0e2f d61b  st   [$1b],y     4285  st([v6502_PCH],Y)               #14
                                          4286  #
                                          4287  # Get addressing mode and fetch operands
              0e30 0126  ld   [$26]       4288  ld([v6502_IR])                  #15 Get addressing mode
              0e31 201f  anda $1f         4289  anda(31)                        #16
              0e32 fe00  bra  ac          4290  bra(AC)                         #17
              0e33 fc34  bra  .next20     4291  bra('.next20')                  #18
                                          4292  # (jump table)                  #19
                                          4293  label('.next20')
.next20:      0e34 0d00  ld   [y,x]       4294  ld([Y,X])                       #20 Fetch L
                                          4295  # Most opcodes branch away at this point, but IR & 31 == 0 falls through
                                          4296  #
                                          4297  # Implicit Mode for  BRK JSR RTI RTS (<  0x80) -- 26 cycles
                                          4298  # Immediate Mode for LDY CPY CPX     (>= 0x80) -- 36 cycles
                                          4299  label('v6502_mode0')
v6502_mode0:  0e35 0126  ld   [$26]       4300  ld([v6502_IR])                  #21 'xxx0000'
              0e36 e845  blt  .imm24      4301  bmi('.imm24')                   #22
              0e37 011b  ld   [$1b]       4302  ld([v6502_PCH])                 #23
              0e38 fcf2  bra  v6502_check 4303  bra('v6502_check')              #24
              0e39 00f3  ld   $f3         4304  ld(-26/2)                       #25
                                          4305
                                          4306  # Resync with video driver. At this point we're returning BEFORE
                                          4307  # fetching and executing the next instruction.
                                          4308  label('v6502_exitBefore')
v6502_exitBefore:
              0e3a 8013  adda $13         4309  adda(v6502_maxTicks)            #3 Exit BEFORE fetch
              0e3b e43b  bgt  $0e3b       4310  bgt(pc()&255)                   #4 Resync
              0e3c a001  suba $01         4311  suba(1)                         #5
              0e3d 000d  ld   $0d         4312  ld(hi('v6502_ENTER'))           #6 Set entry point to before 'fetch'
              0e3e c202  st   [$02]       4313  st([vCpuSelect])                #7
              0e3f 1401  ld   $01,y       4314  ld(hi('vBlankStart'),Y)         #8
              0e40 e11e  jmp  y,[$1e]     4315  jmp(Y,[vReturn])                #9 To video driver
              0e41 0000  ld   $00         4316  ld(0)                           #10
                                          4317  assert v6502_overhead ==         11
                                          4318
                                          4319  # Immediate Mode: #$FF -- 36 cycles
                                          4320  label('v6502_modeIMM')
v6502_modeIMM:
              0e42 0200  nop              4321  nop()                           #21 Wait for v6502_mode0 to join
              0e43 0200  nop              4322  nop()                           #22
              0e44 011b  ld   [$1b]       4323  ld([v6502_PCH])                 #23 Copy PC
                                          4324  label('.imm24')
.imm24:       0e45 c225  st   [$25]       4325  st([v6502_ADH])                 #24
              0e46 011a  ld   [$1a]       4326  ld([v6502_PCL])                 #25
              0e47 d224  st   [$24],x     4327  st([v6502_ADL],X)               #26
              0e48 8001  adda $01         4328  adda(1)                         #27 PC++
              0e49 c21a  st   [$1a]       4329  st([v6502_PCL])                 #28
              0e4a f04d  beq  $0e4d       4330  beq(pc()+3)                     #29
              0e4b fc4e  bra  $0e4e       4331  bra(pc()+3)                     #30
              0e4c 0000  ld   $00         4332  ld(0)                           #31
              0e4d 0001  ld   $01         4333  ld(1)                           #31(!)
              0e4e 811b  adda [$1b]       4334  adda([v6502_PCH])               #32
              0e4f c21b  st   [$1b]       4335  st([v6502_PCH])                 #33
              0e50 fcf2  bra  v6502_check 4336  bra('v6502_check')              #34
              0e51 00ee  ld   $ee         4337  ld(-36/2)                       #35
                                          4338
                                          4339  # Accumulator Mode: ROL ROR LSL ASR -- 28 cycles
                                          4340  label('v6502_modeACC')
v6502_modeACC:
              0e52 0018  ld   $18         4341  ld(v6502_A&255)                 #21 Address of AC
              0e53 d224  st   [$24],x     4342  st([v6502_ADL],X)               #22
              0e54 0000  ld   $00         4343  ld(v6502_A>>8)                  #23
              0e55 c225  st   [$25]       4344  st([v6502_ADH])                 #24
              0e56 00f2  ld   $f2         4345  ld(-28/2)                       #25
              0e57 fcf2  bra  v6502_check 4346  bra('v6502_check')              #26
                                          4347  #nop()                          #27 Overlap
                                          4348  #
                                          4349  # Implied Mode: no operand -- 24 cycles
                                          4350  label('v6502_modeILL')
                                          4351  label('v6502_modeIMP')
v6502_modeILL:
v6502_modeIMP:
              0e58 0200  nop              4352  nop()                           #21,27
              0e59 fcf2  bra  v6502_check 4353  bra('v6502_check')              #22
              0e5a 00f4  ld   $f4         4354  ld(-24/2)                       #23
                                          4355
                                          4356  # Zero Page Modes: $DD $DD,X $DD,Y -- 36 cycles
                                          4357  label('v6502_modeZPX')
v6502_modeZPX:
              0e5b fc5f  bra  .zp23       4358  bra('.zp23')                    #21
              0e5c 812a  adda [$2a]       4359  adda([v6502_X])                 #22
                                          4360  label('v6502_modeZP')
v6502_modeZP: 0e5d fc5f  bra  .zp23       4361  bra('.zp23')                    #21
              0e5e 0200  nop              4362  nop()                           #22
                                          4363  label('.zp23')
.zp23:        0e5f d224  st   [$24],x     4364  st([v6502_ADL],X)               #23
              0e60 0000  ld   $00         4365  ld(0)                           #24 H=0
              0e61 c225  st   [$25]       4366  st([v6502_ADH])                 #25
              0e62 0001  ld   $01         4367  ld(1)                           #26 PC++
              0e63 811a  adda [$1a]       4368  adda([v6502_PCL])               #27
              0e64 c21a  st   [$1a]       4369  st([v6502_PCL])                 #28
              0e65 f068  beq  $0e68       4370  beq(pc()+3)                     #29
              0e66 fc69  bra  $0e69       4371  bra(pc()+3)                     #30
              0e67 0000  ld   $00         4372  ld(0)                           #31
              0e68 0001  ld   $01         4373  ld(1)                           #31(!)
              0e69 811b  adda [$1b]       4374  adda([v6502_PCH])               #32
              0e6a c21b  st   [$1b]       4375  st([v6502_PCH])                 #33
              0e6b fcf2  bra  v6502_check 4376  bra('v6502_check')              #34
              0e6c 00ee  ld   $ee         4377  ld(-36/2)                       #35
                                          4378
                                          4379  # Possible retry loop for modeABS and modeIZY. Because these need
                                          4380  # more time than the v6502_maxTicks of 38 Gigatron cycles, we may
                                          4381  # have to restart them after the next horizontal pulse.
                                          4382  label('.retry28')
.retry28:     0e6d f070  beq  $0e70       4383  beq(pc()+3)                     #28,37 PC--
              0e6e fc71  bra  $0e71       4384  bra(pc()+3)                     #29
              0e6f 0000  ld   $00         4385  ld(0)                           #30
              0e70 00ff  ld   $ff         4386  ld(-1)                          #30(!)
              0e71 811b  adda [$1b]       4387  adda([v6502_PCH])               #31
              0e72 c21b  st   [$1b]       4388  st([v6502_PCH])                 #32
              0e73 011a  ld   [$1a]       4389  ld([v6502_PCL])                 #33
              0e74 a001  suba $01         4390  suba(1)                         #34
              0e75 c21a  st   [$1a]       4391  st([v6502_PCL])                 #35
              0e76 fc20  bra  v6502_next  4392  bra('v6502_next')               #36 Retry until sufficient time
              0e77 00ed  ld   $ed         4393  ld(-38/2)                       #37
                                          4394
                                          4395  # Absolute Modes: $DDDD $DDDD,X $DDDD,Y -- 64 cycles
                                          4396  label('v6502_modeABS')
v6502_modeABS:
              0e78 fc7d  bra  .abs23      4397  bra('.abs23')                   #21
              0e79 0000  ld   $00         4398  ld(0)                           #22
                                          4399  label('v6502_modeABX')
v6502_modeABX:
              0e7a fc7d  bra  .abs23      4400  bra('.abs23')                   #21
                                          4401  label('v6502_modeABY')
v6502_modeABY:
              0e7b 012a  ld   [$2a]       4402  ld([v6502_X])                   #21,22
              0e7c 012b  ld   [$2b]       4403  ld([v6502_Y])                   #22
                                          4404  label('.abs23')
.abs23:       0e7d c224  st   [$24]       4405  st([v6502_ADL])                 #23
              0e7e 00f3  ld   $f3         4406  ld(-64//2+v6502_maxTicks)       #24 Is there enough time for the excess ticks?
              0e7f 8115  adda [$15]       4407  adda([vTicks])                  #25
              0e80 e86d  blt  .retry28    4408  blt('.retry28')                 #26
              0e81 011a  ld   [$1a]       4409  ld([v6502_PCL])                 #27
              0e82 0126  ld   [$26]       4410  ld([v6502_IR])                  #28 Special case $BE: LDX $DDDD,Y (we got X in ADL)
              0e83 60be  xora $be         4411  xora(0xbe)                      #29
              0e84 f087  beq  $0e87       4412  beq(pc()+3)                     #30
              0e85 fc88  bra  $0e88       4413  bra(pc()+3)                     #31
              0e86 0124  ld   [$24]       4414  ld([v6502_ADL])                 #32
              0e87 012b  ld   [$2b]       4415  ld([v6502_Y])                   #32(!)
              0e88 8d00  adda [y,x]       4416  adda([Y,X])                     #33 Fetch and add L
              0e89 c224  st   [$24]       4417  st([v6502_ADL])                 #34
              0e8a e88e  blt  .abs37      4418  bmi('.abs37')                   #35 Carry?
              0e8b ad00  suba [y,x]       4419  suba([Y,X])                     #36 Gets back original operand
              0e8c fc90  bra  .abs39      4420  bra('.abs39')                   #37
              0e8d 4d00  ora  [y,x]       4421  ora([Y,X])                      #38 Carry in bit 7
                                          4422  label('.abs37')
.abs37:       0e8e 2d00  anda [y,x]       4423  anda([Y,X])                     #37 Carry in bit 7
              0e8f 0200  nop              4424  nop()                           #38
                                          4425  label('.abs39')
.abs39:       0e90 3080  anda $80,x       4426  anda(0x80,X)                    #39 Move carry to bit 0
              0e91 0500  ld   [x]         4427  ld([X])                         #40
              0e92 c225  st   [$25]       4428  st([v6502_ADH])                 #41
              0e93 011a  ld   [$1a]       4429  ld([v6502_PCL])                 #42 PC++
              0e94 8001  adda $01         4430  adda(1)                         #43
              0e95 d21a  st   [$1a],x     4431  st([v6502_PCL],X)               #44
              0e96 f099  beq  $0e99       4432  beq(pc()+3)                     #45
              0e97 fc9a  bra  $0e9a       4433  bra(pc()+3)                     #46
              0e98 0000  ld   $00         4434  ld(0)                           #47
              0e99 0001  ld   $01         4435  ld(1)                           #47(!)
              0e9a 811b  adda [$1b]       4436  adda([v6502_PCH])               #48
              0e9b d61b  st   [$1b],y     4437  st([v6502_PCH],Y)               #49
              0e9c 0d00  ld   [y,x]       4438  ld([Y,X])                       #50 Fetch H
              0e9d 8125  adda [$25]       4439  adda([v6502_ADH])               #51
              0e9e c225  st   [$25]       4440  st([v6502_ADH])                 #52
              0e9f 011a  ld   [$1a]       4441  ld([v6502_PCL])                 #53 PC++
              0ea0 8001  adda $01         4442  adda(1)                         #54
              0ea1 c21a  st   [$1a]       4443  st([v6502_PCL])                 #55
              0ea2 f0a5  beq  $0ea5       4444  beq(pc()+3)                     #56
              0ea3 fca6  bra  $0ea6       4445  bra(pc()+3)                     #57
              0ea4 0000  ld   $00         4446  ld(0)                           #58
              0ea5 0001  ld   $01         4447  ld(1)                           #58(!)
              0ea6 811b  adda [$1b]       4448  adda([v6502_PCH])               #59
              0ea7 c21b  st   [$1b]       4449  st([v6502_PCH])                 #60
              0ea8 1124  ld   [$24],x     4450  ld([v6502_ADL],X)               #61
              0ea9 fcf2  bra  v6502_check 4451  bra('v6502_check')              #62
              0eaa 00e0  ld   $e0         4452  ld(-64/2)                       #63
                                          4453
                                          4454  # Indirect Indexed Mode: ($DD),Y -- 54 cycles
                                          4455  label('v6502_modeIZY')
v6502_modeIZY:
              0eab 1200  ld   ac,x        4456  ld(AC,X)                        #21 $DD
              0eac 1400  ld   $00,y       4457  ld(0,Y)                         #22 $00DD
              0ead 00f8  ld   $f8         4458  ld(-54//2+v6502_maxTicks)       #23 Is there enough time for the excess ticks?
              0eae 8115  adda [$15]       4459  adda([vTicks])                  #24
              0eaf 0200  nop              4460  nop()                           #25
              0eb0 e86d  blt  .retry28    4461  blt('.retry28')                 #26
              0eb1 011a  ld   [$1a]       4462  ld([v6502_PCL])                 #27
              0eb2 8001  adda $01         4463  adda(1)                         #28 PC++
              0eb3 c21a  st   [$1a]       4464  st([v6502_PCL])                 #29
              0eb4 f0b7  beq  $0eb7       4465  beq(pc()+3)                     #30
              0eb5 fcb8  bra  $0eb8       4466  bra(pc()+3)                     #31
              0eb6 0000  ld   $00         4467  ld(0)                           #32
              0eb7 0001  ld   $01         4468  ld(1)                           #32(!)
              0eb8 811b  adda [$1b]       4469  adda([v6502_PCH])               #33
              0eb9 c21b  st   [$1b]       4470  st([v6502_PCH])                 #34
              0eba 0d00  ld   [y,x]       4471  ld([Y,X])                       #35 Read word from zero-page
              0ebb de00  st   [y,x++]     4472  st([Y,Xpp])                     #36 (Just X++) Wrap-around is correct
              0ebc c224  st   [$24]       4473  st([v6502_ADL])                 #37
              0ebd 0d00  ld   [y,x]       4474  ld([Y,X])                       #38
              0ebe c225  st   [$25]       4475  st([v6502_ADH])                 #39
              0ebf 012b  ld   [$2b]       4476  ld([v6502_Y])                   #40 Add Y
              0ec0 8124  adda [$24]       4477  adda([v6502_ADL])               #41
              0ec1 c224  st   [$24]       4478  st([v6502_ADL])                 #42
              0ec2 e8c6  blt  .izy45      4479  bmi('.izy45')                   #43 Carry?
              0ec3 a12b  suba [$2b]       4480  suba([v6502_Y])                 #44 Gets back original operand
              0ec4 fcc8  bra  .izy47      4481  bra('.izy47')                   #45
              0ec5 412b  ora  [$2b]       4482  ora([v6502_Y])                  #46 Carry in bit 7
                                          4483  label('.izy45')
.izy45:       0ec6 212b  anda [$2b]       4484  anda([v6502_Y])                 #45 Carry in bit 7
              0ec7 0200  nop              4485  nop()                           #46
                                          4486  label('.izy47')
.izy47:       0ec8 3080  anda $80,x       4487  anda(0x80,X)                    #47 Move carry to bit 0
              0ec9 0500  ld   [x]         4488  ld([X])                         #48
              0eca 8125  adda [$25]       4489  adda([v6502_ADH])               #49
              0ecb c225  st   [$25]       4490  st([v6502_ADH])                 #50
              0ecc 1124  ld   [$24],x     4491  ld([v6502_ADL],X)               #51
              0ecd fcf2  bra  v6502_check 4492  bra('v6502_check')              #52
              0ece 00e5  ld   $e5         4493  ld(-54/2)                       #53
                                          4494
                                          4495  # Relative Mode: BEQ BNE BPL BMI BCC BCS BVC BVS -- 36 cycles
                                          4496  label('v6502_modeREL')
v6502_modeREL:
              0ecf d224  st   [$24],x     4497  st([v6502_ADL],X)               #21 Offset (Only needed for branch)
              0ed0 e8d3  blt  $0ed3       4498  bmi(pc()+3)                     #22 Sign extend
              0ed1 fcd4  bra  $0ed4       4499  bra(pc()+3)                     #23
              0ed2 0000  ld   $00         4500  ld(0)                           #24
              0ed3 00ff  ld   $ff         4501  ld(255)                         #24(!)
              0ed4 c225  st   [$25]       4502  st([v6502_ADH])                 #25
              0ed5 011a  ld   [$1a]       4503  ld([v6502_PCL])                 #26 PC++ (Needed for both cases)
              0ed6 8001  adda $01         4504  adda(1)                         #27
              0ed7 c21a  st   [$1a]       4505  st([v6502_PCL])                 #28
              0ed8 f0db  beq  $0edb       4506  beq(pc()+3)                     #29
              0ed9 fcdc  bra  $0edc       4507  bra(pc()+3)                     #30
              0eda 0000  ld   $00         4508  ld(0)                           #31
              0edb 0001  ld   $01         4509  ld(1)                           #31(!)
              0edc 811b  adda [$1b]       4510  adda([v6502_PCH])               #32
              0edd c21b  st   [$1b]       4511  st([v6502_PCH])                 #33
              0ede fcf2  bra  v6502_check 4512  bra('v6502_check')              #34
              0edf 00ee  ld   $ee         4513  ld(-36/2)                       #53
                                          4514
                                          4515  # Indexed Indirect Mode: ($DD,X) -- 38 cycles
                                          4516  label('v6502_modeIZX')
v6502_modeIZX:
              0ee0 812a  adda [$2a]       4517  adda([v6502_X])                 #21 Add X
              0ee1 c21d  st   [$1d]       4518  st([v6502_Tmp])                 #22
              0ee2 9001  adda $01,x       4519  adda(1,X)                       #23 Read word from zero-page
              0ee3 0500  ld   [x]         4520  ld([X])                         #24
              0ee4 c225  st   [$25]       4521  st([v6502_ADH])                 #25
              0ee5 111d  ld   [$1d],x     4522  ld([v6502_Tmp],X)               #26
              0ee6 0500  ld   [x]         4523  ld([X])                         #27
              0ee7 d224  st   [$24],x     4524  st([v6502_ADL],X)               #28
              0ee8 011a  ld   [$1a]       4525  ld([v6502_PCL])                 #29 PC++
              0ee9 8001  adda $01         4526  adda(1)                         #30
              0eea c21a  st   [$1a]       4527  st([v6502_PCL])                 #31
              0eeb f0ee  beq  $0eee       4528  beq(pc()+3)                     #32
              0eec fcef  bra  $0eef       4529  bra(pc()+3)                     #33
              0eed 0000  ld   $00         4530  ld(0)                           #34
              0eee 0001  ld   $01         4531  ld(1)                           #34(!)
              0eef 811b  adda [$1b]       4532  adda([v6502_PCH])               #35
              0ef0 c21b  st   [$1b]       4533  st([v6502_PCH])                 #36
              0ef1 00ed  ld   $ed         4534  ld(-38/2)                       #37 !!! Fall through to v6502_check !!!
                                          4535  #
                                          4536  # Update elapsed time for the addressing mode processing.
                                          4537  # Then check if we can immediately execute this instruction.
                                          4538  # Otherwise transfer control to the video driver.
                                          4539  label('v6502_check')
v6502_check:  0ef2 8115  adda [$15]       4540  adda([vTicks])                  #0
                                          4541  blt('v6502_exitAfter')          #1 No more ticks
              0ef3 e8f8  blt  v6502_exitAfter
              0ef4 c215  st   [$15]       4542  st([vTicks])                    #2
              0ef5 140f  ld   $0f,y       4543  ld(hi('v6502_execute'),Y)       #3
              0ef6 e126  jmp  y,[$26]     4544  jmp(Y,[v6502_IR])               #4
              0ef7 fcff  bra  $ff         4545  bra(255)                        #5
                                          4546
                                          4547  # Otherwise resync with video driver. At this point we're returning AFTER
                                          4548  # addressing mode decoding, but before executing the instruction.
                                          4549  label('v6502_exitAfter')
v6502_exitAfter:
              0ef8 8013  adda $13         4550  adda(v6502_maxTicks)            #3 Exit AFTER fetch
              0ef9 e4f9  bgt  $0ef9       4551  bgt(pc()&255)                   #4 Resync
              0efa a001  suba $01         4552  suba(1)                         #5
              0efb 0010  ld   $10         4553  ld(hi('v6502_RESUME'))          #6 Set entry point to before 'execute'
              0efc c202  st   [$02]       4554  st([vCpuSelect])                #7
              0efd 1401  ld   $01,y       4555  ld(hi('vBlankStart'),Y)         #8
              0efe e11e  jmp  y,[$1e]     4556  jmp(Y,[vReturn])                #9 To video driver
              0eff 0000  ld   $00         4557  ld(0)                           #10
                                          4558  assert v6502_overhead ==         11
                                          4559
                                          4560  align(0x100,size=0x100)
                                          4561  label('v6502_execute')
                                          4562  # This page works as a 255-entry (0..254) jump table for 6502 opcodes.
                                          4563  # Jumping into this page must have 'bra 255' in the branch delay slot
                                          4564  # in order to get out again and dispatch to the right continuation.
                                          4565  # X must hold [v6502_ADL],
                                          4566  # Y will hold hi('v6502_execute'),
                                          4567  # A will be loaded with the code offset (this is skipped at offset $ff)
v6502_execute:
              0f00 00fd  ld   $fd         4568  ld('v6502_BRK'); ld('v6502_ORA'); ld('v6502_ILL'); ld('v6502_ILL') #6 $00
              0f01 0089  ld   $89
              0f02 00fd  ld   $fd
              0f03 00fd  ld   $fd
              0f04 00fd  ld   $fd         4569  ld('v6502_ILL'); ld('v6502_ORA'); ld('v6502_ASL'); ld('v6502_ILL') #6
              0f05 0089  ld   $89
              0f06 00f1  ld   $f1
              0f07 00fd  ld   $fd
              0f08 00f3  ld   $f3         4570  ld('v6502_PHP'); ld('v6502_ORA'); ld('v6502_ASL'); ld('v6502_ILL') #6
              0f09 0089  ld   $89
              0f0a 00f1  ld   $f1
              0f0b 00fd  ld   $fd
              0f0c 00fd  ld   $fd         4571  ld('v6502_ILL'); ld('v6502_ORA'); ld('v6502_ASL'); ld('v6502_ILL') #6
              0f0d 0089  ld   $89
              0f0e 00f1  ld   $f1
              0f0f 00fd  ld   $fd
              0f10 003f  ld   $3f         4572  ld('v6502_BPL'); ld('v6502_ORA'); ld('v6502_ILL'); ld('v6502_ILL') #6 $10
              0f11 0089  ld   $89
              0f12 00fd  ld   $fd
              0f13 00fd  ld   $fd
              0f14 00fd  ld   $fd         4573  ld('v6502_ILL'); ld('v6502_ORA'); ld('v6502_ASL'); ld('v6502_ILL') #6
              0f15 0089  ld   $89
              0f16 00f1  ld   $f1
              0f17 00fd  ld   $fd
              0f18 0036  ld   $36         4574  ld('v6502_CLC'); ld('v6502_ORA'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0f19 0089  ld   $89
              0f1a 00fd  ld   $fd
              0f1b 00fd  ld   $fd
              0f1c 00fd  ld   $fd         4575  ld('v6502_ILL'); ld('v6502_ORA'); ld('v6502_ASL'); ld('v6502_ILL') #6
              0f1d 0089  ld   $89
              0f1e 00f1  ld   $f1
              0f1f 00fd  ld   $fd
              0f20 009a  ld   $9a         4576  ld('v6502_JSR'); ld('v6502_AND'); ld('v6502_ILL'); ld('v6502_ILL') #6 $20
              0f21 0085  ld   $85
              0f22 00fd  ld   $fd
              0f23 00fd  ld   $fd
              0f24 00f5  ld   $f5         4577  ld('v6502_BIT'); ld('v6502_AND'); ld('v6502_ROL'); ld('v6502_ILL') #6
              0f25 0085  ld   $85
              0f26 00f7  ld   $f7
              0f27 00fd  ld   $fd
              0f28 00f9  ld   $f9         4578  ld('v6502_PLP'); ld('v6502_AND'); ld('v6502_ROL'); ld('v6502_ILL') #6
              0f29 0085  ld   $85
              0f2a 00f7  ld   $f7
              0f2b 00fd  ld   $fd
              0f2c 00f5  ld   $f5         4579  ld('v6502_BIT'); ld('v6502_AND'); ld('v6502_ROL'); ld('v6502_ILL') #6
              0f2d 0085  ld   $85
              0f2e 00f7  ld   $f7
              0f2f 00fd  ld   $fd
              0f30 0042  ld   $42         4580  ld('v6502_BMI'); ld('v6502_AND'); ld('v6502_ILL'); ld('v6502_ILL') #6 $30
              0f31 0085  ld   $85
              0f32 00fd  ld   $fd
              0f33 00fd  ld   $fd
              0f34 00fd  ld   $fd         4581  ld('v6502_ILL'); ld('v6502_AND'); ld('v6502_ROL'); ld('v6502_ILL') #6
              0f35 0085  ld   $85
              0f36 00f7  ld   $f7
              0f37 00fd  ld   $fd
              0f38 0038  ld   $38         4582  ld('v6502_SEC'); ld('v6502_AND'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0f39 0085  ld   $85
              0f3a 00fd  ld   $fd
              0f3b 00fd  ld   $fd
              0f3c 00fd  ld   $fd         4583  ld('v6502_ILL'); ld('v6502_AND'); ld('v6502_ROL'); ld('v6502_ILL') #6
              0f3d 0085  ld   $85
              0f3e 00f7  ld   $f7
              0f3f 00fd  ld   $fd
              0f40 00d3  ld   $d3         4584  ld('v6502_RTI'); ld('v6502_EOR'); ld('v6502_ILL'); ld('v6502_ILL') #6 $40
              0f41 008c  ld   $8c
              0f42 00fd  ld   $fd
              0f43 00fd  ld   $fd
              0f44 00fd  ld   $fd         4585  ld('v6502_ILL'); ld('v6502_EOR'); ld('v6502_LSR'); ld('v6502_ILL') #6
              0f45 008c  ld   $8c
              0f46 00d7  ld   $d7
              0f47 00fd  ld   $fd
              0f48 00d9  ld   $d9         4586  ld('v6502_PHA'); ld('v6502_EOR'); ld('v6502_LSR'); ld('v6502_ILL') #6
              0f49 008c  ld   $8c
              0f4a 00d7  ld   $d7
              0f4b 00fd  ld   $fd
              0f4c 0096  ld   $96         4587  ld('v6502_JMP1');ld('v6502_EOR'); ld('v6502_LSR'); ld('v6502_ILL') #6
              0f4d 008c  ld   $8c
              0f4e 00d7  ld   $d7
              0f4f 00fd  ld   $fd
              0f50 0045  ld   $45         4588  ld('v6502_BVC'); ld('v6502_EOR'); ld('v6502_ILL'); ld('v6502_ILL') #6 $50
              0f51 008c  ld   $8c
              0f52 00fd  ld   $fd
              0f53 00fd  ld   $fd
              0f54 00fd  ld   $fd         4589  ld('v6502_ILL'); ld('v6502_EOR'); ld('v6502_LSR'); ld('v6502_ILL') #6
              0f55 008c  ld   $8c
              0f56 00d7  ld   $d7
              0f57 00fd  ld   $fd
              0f58 00db  ld   $db         4590  ld('v6502_CLI'); ld('v6502_EOR'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0f59 008c  ld   $8c
              0f5a 00fd  ld   $fd
              0f5b 00fd  ld   $fd
              0f5c 00fd  ld   $fd         4591  ld('v6502_ILL'); ld('v6502_EOR'); ld('v6502_LSR'); ld('v6502_ILL') #6
              0f5d 008c  ld   $8c
              0f5e 00d7  ld   $d7
              0f5f 00fd  ld   $fd
              0f60 00dd  ld   $dd         4592  ld('v6502_RTS'); ld('v6502_ADC'); ld('v6502_ILL'); ld('v6502_ILL') #6 $60
              0f61 0001  ld   $01
              0f62 00fd  ld   $fd
              0f63 00fd  ld   $fd
              0f64 00fd  ld   $fd         4593  ld('v6502_ILL'); ld('v6502_ADC'); ld('v6502_ROR'); ld('v6502_ILL') #6
              0f65 0001  ld   $01
              0f66 00d5  ld   $d5
              0f67 00fd  ld   $fd
              0f68 00df  ld   $df         4594  ld('v6502_PLA'); ld('v6502_ADC'); ld('v6502_ROR'); ld('v6502_ILL') #6
              0f69 0001  ld   $01
              0f6a 00d5  ld   $d5
              0f6b 00fd  ld   $fd
              0f6c 0098  ld   $98         4595  ld('v6502_JMP2');ld('v6502_ADC'); ld('v6502_ROR'); ld('v6502_ILL') #6
              0f6d 0001  ld   $01
              0f6e 00d5  ld   $d5
              0f6f 00fd  ld   $fd
              0f70 0049  ld   $49         4596  ld('v6502_BVS'); ld('v6502_ADC'); ld('v6502_ILL'); ld('v6502_ILL') #6 $70
              0f71 0001  ld   $01
              0f72 00fd  ld   $fd
              0f73 00fd  ld   $fd
              0f74 00fd  ld   $fd         4597  ld('v6502_ILL'); ld('v6502_ADC'); ld('v6502_ROR'); ld('v6502_ILL') #6
              0f75 0001  ld   $01
              0f76 00d5  ld   $d5
              0f77 00fd  ld   $fd
              0f78 00e1  ld   $e1         4598  ld('v6502_SEI'); ld('v6502_ADC'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0f79 0001  ld   $01
              0f7a 00fd  ld   $fd
              0f7b 00fd  ld   $fd
              0f7c 00fd  ld   $fd         4599  ld('v6502_ILL'); ld('v6502_ADC'); ld('v6502_ROR'); ld('v6502_ILL') #6
              0f7d 0001  ld   $01
              0f7e 00d5  ld   $d5
              0f7f 00fd  ld   $fd
              0f80 00fd  ld   $fd         4600  ld('v6502_ILL'); ld('v6502_STA'); ld('v6502_ILL'); ld('v6502_ILL') #6 $80
              0f81 00c1  ld   $c1
              0f82 00fd  ld   $fd
              0f83 00fd  ld   $fd
              0f84 00c7  ld   $c7         4601  ld('v6502_STY'); ld('v6502_STA'); ld('v6502_STX'); ld('v6502_ILL') #6
              0f85 00c1  ld   $c1
              0f86 00c3  ld   $c3
              0f87 00fd  ld   $fd
              0f88 007f  ld   $7f         4602  ld('v6502_DEY'); ld('v6502_ILL'); ld('v6502_TXA'); ld('v6502_ILL') #6
              0f89 00fd  ld   $fd
              0f8a 00cd  ld   $cd
              0f8b 00fd  ld   $fd
              0f8c 00c7  ld   $c7         4603  ld('v6502_STY'); ld('v6502_STA'); ld('v6502_STX'); ld('v6502_ILL') #6
              0f8d 00c1  ld   $c1
              0f8e 00c3  ld   $c3
              0f8f 00fd  ld   $fd
              0f90 004d  ld   $4d         4604  ld('v6502_BCC'); ld('v6502_STA'); ld('v6502_ILL'); ld('v6502_ILL') #6 $90
              0f91 00c1  ld   $c1
              0f92 00fd  ld   $fd
              0f93 00fd  ld   $fd
              0f94 00c7  ld   $c7         4605  ld('v6502_STY'); ld('v6502_STA'); ld('v6502_STX2');ld('v6502_ILL') #6
              0f95 00c1  ld   $c1
              0f96 00c5  ld   $c5
              0f97 00fd  ld   $fd
              0f98 00cf  ld   $cf         4606  ld('v6502_TYA'); ld('v6502_STA'); ld('v6502_TXS'); ld('v6502_ILL') #6
              0f99 00c1  ld   $c1
              0f9a 00e3  ld   $e3
              0f9b 00fd  ld   $fd
              0f9c 00fd  ld   $fd         4607  ld('v6502_ILL'); ld('v6502_STA'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0f9d 00c1  ld   $c1
              0f9e 00fd  ld   $fd
              0f9f 00fd  ld   $fd
              0fa0 00bf  ld   $bf         4608  ld('v6502_LDY'); ld('v6502_LDA'); ld('v6502_LDX'); ld('v6502_ILL') #6 $A0
              0fa1 00b9  ld   $b9
              0fa2 00bb  ld   $bb
              0fa3 00fd  ld   $fd
              0fa4 00bf  ld   $bf         4609  ld('v6502_LDY'); ld('v6502_LDA'); ld('v6502_LDX'); ld('v6502_ILL') #6
              0fa5 00b9  ld   $b9
              0fa6 00bb  ld   $bb
              0fa7 00fd  ld   $fd
              0fa8 00cb  ld   $cb         4610  ld('v6502_TAY'); ld('v6502_LDA'); ld('v6502_TAX'); ld('v6502_ILL') #6
              0fa9 00b9  ld   $b9
              0faa 00c9  ld   $c9
              0fab 00fd  ld   $fd
              0fac 00bf  ld   $bf         4611  ld('v6502_LDY'); ld('v6502_LDA'); ld('v6502_LDX'); ld('v6502_ILL') #6
              0fad 00b9  ld   $b9
              0fae 00bb  ld   $bb
              0faf 00fd  ld   $fd
              0fb0 0051  ld   $51         4612  ld('v6502_BCS'); ld('v6502_LDA'); ld('v6502_ILL'); ld('v6502_ILL') #6 $B0
              0fb1 00b9  ld   $b9
              0fb2 00fd  ld   $fd
              0fb3 00fd  ld   $fd
              0fb4 00bf  ld   $bf         4613  ld('v6502_LDY'); ld('v6502_LDA'); ld('v6502_LDX2');ld('v6502_ILL') #6
              0fb5 00b9  ld   $b9
              0fb6 00bd  ld   $bd
              0fb7 00fd  ld   $fd
              0fb8 00d1  ld   $d1         4614  ld('v6502_CLV'); ld('v6502_LDA'); ld('v6502_TSX'); ld('v6502_ILL') #6
              0fb9 00b9  ld   $b9
              0fba 00e5  ld   $e5
              0fbb 00fd  ld   $fd
              0fbc 00bf  ld   $bf         4615  ld('v6502_LDY'); ld('v6502_LDA'); ld('v6502_LDX'); ld('v6502_ILL') #6
              0fbd 00b9  ld   $b9
              0fbe 00bb  ld   $bb
              0fbf 00fd  ld   $fd
              0fc0 00e7  ld   $e7         4616  ld('v6502_CPY'); ld('v6502_CMP'); ld('v6502_ILL'); ld('v6502_ILL') #6 $C0
              0fc1 00e9  ld   $e9
              0fc2 00fd  ld   $fd
              0fc3 00fd  ld   $fd
              0fc4 00e7  ld   $e7         4617  ld('v6502_CPY'); ld('v6502_CMP'); ld('v6502_DEC'); ld('v6502_ILL') #6
              0fc5 00e9  ld   $e9
              0fc6 00eb  ld   $eb
              0fc7 00fd  ld   $fd
              0fc8 007b  ld   $7b         4618  ld('v6502_INY'); ld('v6502_CMP'); ld('v6502_DEX'); ld('v6502_ILL') #6
              0fc9 00e9  ld   $e9
              0fca 0077  ld   $77
              0fcb 00fd  ld   $fd
              0fcc 00e7  ld   $e7         4619  ld('v6502_CPY'); ld('v6502_CMP'); ld('v6502_DEC'); ld('v6502_ILL') #6
              0fcd 00e9  ld   $e9
              0fce 00eb  ld   $eb
              0fcf 00fd  ld   $fd
              0fd0 0055  ld   $55         4620  ld('v6502_BNE'); ld('v6502_CMP'); ld('v6502_ILL'); ld('v6502_ILL') #6 $D0
              0fd1 00e9  ld   $e9
              0fd2 00fd  ld   $fd
              0fd3 00fd  ld   $fd
              0fd4 00fd  ld   $fd         4621  ld('v6502_ILL'); ld('v6502_CMP'); ld('v6502_DEC'); ld('v6502_ILL') #6
              0fd5 00e9  ld   $e9
              0fd6 00eb  ld   $eb
              0fd7 00fd  ld   $fd
              0fd8 00ed  ld   $ed         4622  ld('v6502_CLD'); ld('v6502_CMP'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0fd9 00e9  ld   $e9
              0fda 00fd  ld   $fd
              0fdb 00fd  ld   $fd
              0fdc 00fd  ld   $fd         4623  ld('v6502_ILL'); ld('v6502_CMP'); ld('v6502_DEC'); ld('v6502_ILL') #6
              0fdd 00e9  ld   $e9
              0fde 00eb  ld   $eb
              0fdf 00fd  ld   $fd
              0fe0 00ef  ld   $ef         4624  ld('v6502_CPX'); ld('v6502_SBC'); ld('v6502_ILL'); ld('v6502_ILL') #6 $E0
              0fe1 0029  ld   $29
              0fe2 00fd  ld   $fd
              0fe3 00fd  ld   $fd
              0fe4 00ef  ld   $ef         4625  ld('v6502_CPX'); ld('v6502_SBC'); ld('v6502_INC'); ld('v6502_ILL') #6
              0fe5 0029  ld   $29
              0fe6 00b7  ld   $b7
              0fe7 00fd  ld   $fd
              0fe8 006c  ld   $6c         4626  ld('v6502_INX'); ld('v6502_SBC'); ld('v6502_NOP'); ld('v6502_ILL') #6
              0fe9 0029  ld   $29
              0fea 0083  ld   $83
              0feb 00fd  ld   $fd
              0fec 00ef  ld   $ef         4627  ld('v6502_CPX'); ld('v6502_SBC'); ld('v6502_INC'); ld('v6502_ILL') #6
              0fed 0029  ld   $29
              0fee 00b7  ld   $b7
              0fef 00fd  ld   $fd
              0ff0 0058  ld   $58         4628  ld('v6502_BEQ'); ld('v6502_SBC'); ld('v6502_ILL'); ld('v6502_ILL') #6 $F0
              0ff1 0029  ld   $29
              0ff2 00fd  ld   $fd
              0ff3 00fd  ld   $fd
              0ff4 00fd  ld   $fd         4629  ld('v6502_ILL'); ld('v6502_SBC'); ld('v6502_INC'); ld('v6502_ILL') #6
              0ff5 0029  ld   $29
              0ff6 00b7  ld   $b7
              0ff7 00fd  ld   $fd
              0ff8 00fb  ld   $fb         4630  ld('v6502_SED'); ld('v6502_SBC'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0ff9 0029  ld   $29
              0ffa 00fd  ld   $fd
              0ffb 00fd  ld   $fd
              0ffc 00fd  ld   $fd         4631  ld('v6502_ILL'); ld('v6502_SBC'); ld('v6502_INC')                  #6
              0ffd 0029  ld   $29
              0ffe 00b7  ld   $b7
              0fff fe00  bra  ac          4632  bra(AC)                         #6,7 Dispatch into next page
                                          4633  # --- Page boundary ---
                                          4634  align(0x100,size=0x100)
              1000 140e  ld   $0e,y       4635  ld(hi('v6502_next'),Y)          #8 Handy for instructions that don't clobber Y
                                          4636
                                          4637  label('v6502_ADC')
                                          4638  assert pc()&255 == 1
                                          4639  assert v6502_Cflag == 1
                                          4640  assert v6502_Vemu == 128
v6502_ADC:    1001 1525  ld   [$25],y     4641  ld([v6502_ADH],Y)               #9 Must be at page offset 1, so A=1
              1002 2127  anda [$27]       4642  anda([v6502_P])                 #10 Carry in (AC=1 because lo('v6502_ADC')=1)
              1003 8118  adda [$18]       4643  adda([v6502_A])                 #11 Sum
              1004 f020  beq  .adc14      4644  beq('.adc14')                   #12 Danger zone for dropping a carry
              1005 8d00  adda [y,x]       4645  adda([Y,X])                     #13
              1006 c228  st   [$28]       4646  st([v6502_Qz])                  #14 Z flag, don't overwrite left-hand side (A) yet
              1007 c229  st   [$29]       4647  st([v6502_Qn])                  #15 N flag
              1008 6118  xora [$18]       4648  xora([v6502_A])                 #16 V flag, (Q^A) & (B^Q) & 0x80
              1009 c218  st   [$18]       4649  st([v6502_A])                   #17
              100a 0d00  ld   [y,x]       4650  ld([Y,X])                       #18
              100b 6128  xora [$28]       4651  xora([v6502_Qz])                #19
              100c 2118  anda [$18]       4652  anda([v6502_A])                 #20
              100d 2080  anda $80         4653  anda(0x80)                      #21
              100e c21d  st   [$1d]       4654  st([v6502_Tmp])                 #22
              100f 0128  ld   [$28]       4655  ld([v6502_Qz])                  #23 Update A
              1010 c218  st   [$18]       4656  st([v6502_A])                   #24
              1011 e815  blt  .adc27      4657  bmi('.adc27')                   #25 C flag
              1012 ad00  suba [y,x]       4658  suba([Y,X])                     #26
              1013 fc17  bra  .adc29      4659  bra('.adc29')                   #27
              1014 4d00  ora  [y,x]       4660  ora([Y,X])                      #28
                                          4661  label('.adc27')
.adc27:       1015 2d00  anda [y,x]       4662  anda([Y,X])                     #27
              1016 0200  nop              4663  nop()                           #28
                                          4664  label('.adc29')
.adc29:       1017 3080  anda $80,x       4665  anda(0x80,X)                    #29
              1018 0127  ld   [$27]       4666  ld([v6502_P])                   #30 Update P
              1019 207e  anda $7e         4667  anda(~v6502_Vemu&~v6502_Cflag)  #31
              101a 4500  ora  [x]         4668  ora([X])                        #32
              101b 411d  ora  [$1d]       4669  ora([v6502_Tmp])                #33
              101c c227  st   [$27]       4670  st([v6502_P])                   #34
              101d 140e  ld   $0e,y       4671  ld(hi('v6502_next'),Y)          #35
              101e e020  jmp  y,$20       4672  jmp(Y,'v6502_next')             #36
              101f 00ed  ld   $ed         4673  ld(-38/2)                       #37
                                          4674  # Cin=1, A=$FF, B=$DD --> Result=$DD, Cout=1, V=0
                                          4675  # Cin=0, A=$00, B=$DD --> Result=$DD, Cout=0, V=0
                                          4676  label('.adc14')
.adc14:       1020 c218  st   [$18]       4677  st([v6502_A])                   #14 Special case
              1021 c228  st   [$28]       4678  st([v6502_Qz])                  #15 Z flag
              1022 c229  st   [$29]       4679  st([v6502_Qn])                  #16 N flag
              1023 0127  ld   [$27]       4680  ld([v6502_P])                   #17
              1024 207f  anda $7f         4681  anda(0x7f)                      #18 V=0, keep C
              1025 c227  st   [$27]       4682  st([v6502_P])                   #19
              1026 140e  ld   $0e,y       4683  ld(hi('v6502_next'),Y)          #20
              1027 00f4  ld   $f4         4684  ld(-24/2)                       #21
              1028 e020  jmp  y,$20       4685  jmp(Y,'v6502_next')             #22
                                          4686  #nop()                          #23 Overlap
                                          4687  #
                                          4688  label('v6502_SBC')
                                          4689  # No matter how hard we try, v6502_SBC always comes out a lot clumsier
                                          4690  # than v6502_ADC. And that one already barely fits in 38 cycles and is
                                          4691  # hard to follow. So we use a hack: transmorph our SBC into an ADC with
                                          4692  # inverted operand, and then dispatch again. Simple and effective.
v6502_SBC:    1029 1525  ld   [$25],y     4693  ld([v6502_ADH],Y)               #9,24
              102a 0d00  ld   [y,x]       4694  ld([Y,X])                       #10
              102b 60ff  xora $ff         4695  xora(255)                       #11 Invert right-hand side operand
              102c c219  st   [$19]       4696  st([v6502_BI])                  #12 Park modified operand for v6502_ADC
              102d 0019  ld   $19         4697  ld(v6502_BI&255)                #13 Address of BI
              102e d224  st   [$24],x     4698  st([v6502_ADL],X)               #14
              102f 0000  ld   $00         4699  ld(v6502_BI>>8)                 #15
              1030 c225  st   [$25]       4700  st([v6502_ADH])                 #16
              1031 0069  ld   $69         4701  ld(0x69)                        #17 ADC #$xx (Any ADC opcode will do)
              1032 c226  st   [$26]       4702  st([v6502_IR])                  #18
              1033 140e  ld   $0e,y       4703  ld(hi('v6502_check'),Y)         #20 Go back to time check before dispatch
              1034 e0f2  jmp  y,$f2       4704  jmp(Y,'v6502_check')            #20
              1035 00f5  ld   $f5         4705  ld(-22/2)                       #21
                                          4706
                                          4707  # Carry calculation table
                                          4708  #   L7 R7 C7   RX UC SC
                                          4709  #   -- -- -- | -- -- --
                                          4710  #    0  0  0 |  0  0  0
                                          4711  #    0  0  1 |  0  0  0
                                          4712  #    1  0  0 |  0  1 +1
                                          4713  #    1  0  1 |  0  0  0
                                          4714  #    0  1  0 | -1  1  0
                                          4715  #    0  1  1 | -1  0 -1
                                          4716  #    1  1  0 | -1  1  0
                                          4717  #    1  1  1 | -1  1  0
                                          4718  #   -- -- -- | -- -- --
                                          4719  #    ^  ^  ^    ^  ^  ^
                                          4720  #    |  |  |    |  |  `--- Carry of unsigned L + signed R: SC = RX + UC
                                          4721  #    |  |  |    |  `----- Carry of unsigned L + unsigned R: UC = C7 ? L7&R7 : L7|R7
                                          4722  #    |  |  |    `------- Sign extension of signed R
                                          4723  #    |  |  `--------- MSB of unextended L + R
                                          4724  #    |  `----------- MSB of right operand R
                                          4725  #    `------------- MSB of left operand L
                                          4726
                                          4727  label('v6502_CLC')
v6502_CLC:    1036 0127  ld   [$27]       4728  ld([v6502_P])                   #9
              1037 fc3b  bra  .sec12      4729  bra('.sec12')                   #10
                                          4730  label('v6502_SEC')
v6502_SEC:    1038 20fe  anda $fe         4731  anda(~v6502_Cflag)              #9,11 Overlap
              1039 0127  ld   [$27]       4732  ld([v6502_P])                   #10
              103a 4001  ora  $01         4733  ora(v6502_Cflag)                #11
                                          4734  label('.sec12')
.sec12:       103b c227  st   [$27]       4735  st([v6502_P])                   #12
              103c 0200  nop              4736  nop()                           #13
                                          4737  label('.next14')
.next14:      103d e020  jmp  y,$20       4738  jmp(Y,'v6502_next')             #14
              103e 00f8  ld   $f8         4739  ld(-16/2)                       #15
                                          4740
                                          4741  label('v6502_BPL')
v6502_BPL:    103f 0129  ld   [$29]       4742  ld([v6502_Qn])                  #9
              1040 e875  blt  .next12     4743  bmi('.next12')                  #10
              1041 f45b  bge  .branch13   4744  bpl('.branch13')                #11
                                          4745  #nop()                          #12 Overlap
                                          4746  label('v6502_BMI')
v6502_BMI:    1042 0129  ld   [$29]       4747  ld([v6502_Qn])                  #9,12
              1043 f475  bge  .next12     4748  bpl('.next12')                  #10
              1044 e85b  blt  .branch13   4749  bmi('.branch13')                #11
                                          4750  #nop()                          #12 Overlap
                                          4751  label('v6502_BVC')
v6502_BVC:    1045 0127  ld   [$27]       4752  ld([v6502_P])                   #9,12
              1046 2080  anda $80         4753  anda(v6502_Vemu)                #10
              1047 f05b  beq  .branch13   4754  beq('.branch13')                #11
              1048 ec3d  bne  .next14     4755  bne('.next14')                  #12
                                          4756  #nop()                          #13 Overlap
                                          4757  label('v6502_BVS')
v6502_BVS:    1049 0127  ld   [$27]       4758  ld([v6502_P])                   #9,13
              104a 2080  anda $80         4759  anda(v6502_Vemu)                #10
              104b ec5b  bne  .branch13   4760  bne('.branch13')                #11
              104c f03d  beq  .next14     4761  beq('.next14')                  #12
                                          4762  #nop()                          #13 Overlap
                                          4763  label('v6502_BCC')
v6502_BCC:    104d 0127  ld   [$27]       4764  ld([v6502_P])                   #9,13
              104e 2001  anda $01         4765  anda(v6502_Cflag)               #10
              104f f05b  beq  .branch13   4766  beq('.branch13')                #11
              1050 ec3d  bne  .next14     4767  bne('.next14')                  #12
                                          4768  #nop()                          #13 Overlap
                                          4769  label('v6502_BCS')
v6502_BCS:    1051 0127  ld   [$27]       4770  ld([v6502_P])                   #9,13
              1052 2001  anda $01         4771  anda(v6502_Cflag)               #10
              1053 ec5b  bne  .branch13   4772  bne('.branch13')                #11
              1054 f03d  beq  .next14     4773  beq('.next14')                  #12
                                          4774  #nop()                          #13 Overlap
                                          4775  label('v6502_BNE')
v6502_BNE:    1055 0128  ld   [$28]       4776  ld([v6502_Qz])                  #9,13
              1056 f075  beq  .next12     4777  beq('.next12')                  #10
              1057 ec5b  bne  .branch13   4778  bne('.branch13')                #11
                                          4779  #nop()                          #12 Overlap
                                          4780  label('v6502_BEQ')
v6502_BEQ:    1058 0128  ld   [$28]       4781  ld([v6502_Qz])                  #9,12
              1059 ec75  bne  .next12     4782  bne('.next12')                  #10
              105a f05b  beq  .branch13   4783  beq('.branch13')                #11
                                          4784  #nop()                          #12 Overlap
                                          4785  label('.branch13')
.branch13:    105b 0124  ld   [$24]       4786  ld([v6502_ADL])                 #13,12 PC + offset
              105c 811a  adda [$1a]       4787  adda([v6502_PCL])               #14
              105d c21a  st   [$1a]       4788  st([v6502_PCL])                 #15
              105e e862  blt  .bra0       4789  bmi('.bra0')                    #16 Carry
              105f a124  suba [$24]       4790  suba([v6502_ADL])               #17
              1060 fc64  bra  .bra1       4791  bra('.bra1')                    #18
              1061 4124  ora  [$24]       4792  ora([v6502_ADL])                #19
                                          4793  label('.bra0')
.bra0:        1062 2124  anda [$24]       4794  anda([v6502_ADL])               #18
              1063 0200  nop              4795  nop()                           #19
                                          4796  label('.bra1')
.bra1:        1064 3080  anda $80,x       4797  anda(0x80,X)                    #20
              1065 0500  ld   [x]         4798  ld([X])                         #21
              1066 8125  adda [$25]       4799  adda([v6502_ADH])               #22
              1067 811b  adda [$1b]       4800  adda([v6502_PCH])               #23
              1068 c21b  st   [$1b]       4801  st([v6502_PCH])                 #24
              1069 0200  nop              4802  nop()                           #25
              106a e020  jmp  y,$20       4803  jmp(Y,'v6502_next')             #26
              106b 00f2  ld   $f2         4804  ld(-28/2)                       #27
                                          4805
                                          4806  label('v6502_INX')
v6502_INX:    106c 0200  nop              4807  nop()                           #9
              106d 012a  ld   [$2a]       4808  ld([v6502_X])                   #10
              106e 8001  adda $01         4809  adda(1)                         #11
              106f c22a  st   [$2a]       4810  st([v6502_X])                   #12
                                          4811  label('.inx13')
.inx13:       1070 c228  st   [$28]       4812  st([v6502_Qz])                  #13 Z flag
              1071 c229  st   [$29]       4813  st([v6502_Qn])                  #14 N flag
              1072 00f7  ld   $f7         4814  ld(-18/2)                       #15
              1073 e020  jmp  y,$20       4815  jmp(Y,'v6502_next')             #16
              1074 0200  nop              4816  nop()                           #17
                                          4817
                                          4818  label('.next12')
.next12:      1075 e020  jmp  y,$20       4819  jmp(Y,'v6502_next')             #12
              1076 00f9  ld   $f9         4820  ld(-14/2)                       #13
                                          4821
                                          4822  label('v6502_DEX')
v6502_DEX:    1077 012a  ld   [$2a]       4823  ld([v6502_X])                   #9
              1078 a001  suba $01         4824  suba(1)                         #10
              1079 fc70  bra  .inx13      4825  bra('.inx13')                   #11
              107a c22a  st   [$2a]       4826  st([v6502_X])                   #12
                                          4827
                                          4828  label('v6502_INY')
v6502_INY:    107b 012b  ld   [$2b]       4829  ld([v6502_Y])                   #9
              107c 8001  adda $01         4830  adda(1)                         #10
              107d fc70  bra  .inx13      4831  bra('.inx13')                   #11
              107e c22b  st   [$2b]       4832  st([v6502_Y])                   #12
                                          4833
                                          4834  label('v6502_DEY')
v6502_DEY:    107f 012b  ld   [$2b]       4835  ld([v6502_Y])                   #9
              1080 a001  suba $01         4836  suba(1)                         #10
              1081 fc70  bra  .inx13      4837  bra('.inx13')                   #11
              1082 c22b  st   [$2b]       4838  st([v6502_Y])                   #12
                                          4839
                                          4840  label('v6502_NOP')
v6502_NOP:    1083 00fa  ld   $fa         4841  ld(-12/2)                       #9
              1084 e020  jmp  y,$20       4842  jmp(Y,'v6502_next')             #10
                                          4843  #nop()                          #11 Overlap
                                          4844  #
                                          4845  label('v6502_AND')
v6502_AND:    1085 1525  ld   [$25],y     4846  ld([v6502_ADH],Y)               #9,11
              1086 0118  ld   [$18]       4847  ld([v6502_A])                   #10
              1087 fc90  bra  .eor13      4848  bra('.eor13')                   #11
              1088 2d00  anda [y,x]       4849  anda([Y,X])                     #12
                                          4850
                                          4851  label('v6502_ORA')
v6502_ORA:    1089 1525  ld   [$25],y     4852  ld([v6502_ADH],Y)               #9
              108a 0118  ld   [$18]       4853  ld([v6502_A])                   #10
              108b fc90  bra  .eor13      4854  bra('.eor13')                   #11
                                          4855  label('v6502_EOR')
v6502_EOR:    108c 4d00  ora  [y,x]       4856  ora([Y,X])                      #12,9
                                          4857  #
                                          4858  #label('v6502_EOR')
                                          4859  #nop()                          #9 Overlap
              108d 1525  ld   [$25],y     4860  ld([v6502_ADH],Y)               #10
              108e 0118  ld   [$18]       4861  ld([v6502_A])                   #11
              108f 6d00  xora [y,x]       4862  xora([Y,X])                     #12
                                          4863  label('.eor13')
.eor13:       1090 c218  st   [$18]       4864  st([v6502_A])                   #13
              1091 c228  st   [$28]       4865  st([v6502_Qz])                  #14 Z flag
              1092 c229  st   [$29]       4866  st([v6502_Qn])                  #15 N flag
              1093 140e  ld   $0e,y       4867  ld(hi('v6502_next'),Y)          #16
              1094 00f6  ld   $f6         4868  ld(-20/2)                       #17
              1095 e020  jmp  y,$20       4869  jmp(Y,'v6502_next')             #18
                                          4870  #nop()                          #19 Overlap
                                          4871  #
                                          4872  label('v6502_JMP1')
v6502_JMP1:   1096 140d  ld   $0d,y       4873  ld(hi('v6502_jmp1'),Y)          #9,19 JMP $DDDD
              1097 e0d1  jmp  y,$d1       4874  jmp(Y,'v6502_jmp1')             #10
                                          4875  #nop()                          #11 Overlap
                                          4876  label('v6502_JMP2')
v6502_JMP2:   1098 140d  ld   $0d,y       4877  ld(hi('v6502_jmp2'),Y)          #9 JMP ($DDDD)
              1099 e0d9  jmp  y,$d9       4878  jmp(Y,'v6502_jmp2')             #10
                                          4879  #nop()                          #11 Overlap
                                          4880  label('v6502_JSR')
v6502_JSR:    109a 011c  ld   [$1c]       4881  ld([v6502_S])                   #9,11
              109b a002  suba $02         4882  suba(2)                         #10
              109c d21c  st   [$1c],x     4883  st([v6502_S],X)                 #11
              109d 1400  ld   $00,y       4884  ld(v6502_Stack>>8,Y)            #12
              109e 011b  ld   [$1b]       4885  ld([v6502_PCH])                 #13 Let ADL,ADH point to L operand
              109f c225  st   [$25]       4886  st([v6502_ADH])                 #14
              10a0 011a  ld   [$1a]       4887  ld([v6502_PCL])                 #15
              10a1 c224  st   [$24]       4888  st([v6502_ADL])                 #16
              10a2 8001  adda $01         4889  adda(1)                         #17 Push ++PC
              10a3 c21a  st   [$1a]       4890  st([v6502_PCL])                 #18 Let PCL,PCH point to H operand
              10a4 de00  st   [y,x++]     4891  st([Y,Xpp])                     #19
              10a5 f0a8  beq  $10a8       4892  beq(pc()+3)                     #20
              10a6 fca9  bra  $10a9       4893  bra(pc()+3)                     #21
              10a7 0000  ld   $00         4894  ld(0)                           #22
              10a8 0001  ld   $01         4895  ld(1)                           #22(!)
              10a9 811b  adda [$1b]       4896  adda([v6502_PCH])               #23
              10aa c21b  st   [$1b]       4897  st([v6502_PCH])                 #24
              10ab ce00  st   [y,x]       4898  st([Y,X])                       #25
              10ac 1124  ld   [$24],x     4899  ld([v6502_ADL],X)               #26 Fetch L
              10ad 1525  ld   [$25],y     4900  ld([v6502_ADH],Y)               #27
              10ae 0d00  ld   [y,x]       4901  ld([Y,X])                       #28
              10af 111a  ld   [$1a],x     4902  ld([v6502_PCL],X)               #29 Fetch H
              10b0 c21a  st   [$1a]       4903  st([v6502_PCL])                 #30
              10b1 151b  ld   [$1b],y     4904  ld([v6502_PCH],Y)               #31
              10b2 0d00  ld   [y,x]       4905  ld([Y,X])                       #32
              10b3 c21b  st   [$1b]       4906  st([v6502_PCH])                 #33
              10b4 140e  ld   $0e,y       4907  ld(hi('v6502_next'),Y)          #34
              10b5 00ed  ld   $ed         4908  ld(-38/2)                       #35
              10b6 e020  jmp  y,$20       4909  jmp(Y,'v6502_next')             #36
                                          4910  #nop()                          #37 Overlap
                                          4911  #
                                          4912  label('v6502_INC')
v6502_INC:    10b7 1411  ld   $11,y       4913  ld(hi('v6502_inc'),Y)           #9,37
              10b8 e00e  jmp  y,$0e       4914  jmp(Y,'v6502_inc')              #10
                                          4915  #nop()                          #11 Overlap
                                          4916  label('v6502_LDA')
v6502_LDA:    10b9 1411  ld   $11,y       4917  ld(hi('v6502_lda'),Y)           #9,11
              10ba e018  jmp  y,$18       4918  jmp(Y,'v6502_lda')              #10
                                          4919  #nop()                          #11 Overlap
                                          4920  label('v6502_LDX')
v6502_LDX:    10bb 1411  ld   $11,y       4921  ld(hi('v6502_ldx'),Y)           #9,11
              10bc e022  jmp  y,$22       4922  jmp(Y,'v6502_ldx')              #10
                                          4923  #nop()                          #11 Overlap
                                          4924  label('v6502_LDX2')
v6502_LDX2:   10bd 1411  ld   $11,y       4925  ld(hi('v6502_ldx2'),Y)          #9,11
              10be e02a  jmp  y,$2a       4926  jmp(Y,'v6502_ldx2')             #10
                                          4927  #nop()                          #11 Overlap
                                          4928  label('v6502_LDY')
v6502_LDY:    10bf 1411  ld   $11,y       4929  ld(hi('v6502_ldy'),Y)           #9,11
              10c0 e026  jmp  y,$26       4930  jmp(Y,'v6502_ldy')              #10
                                          4931  #nop()                          #11 Overlap
                                          4932  label('v6502_STA')
v6502_STA:    10c1 1411  ld   $11,y       4933  ld(hi('v6502_sta'),Y)           #9,11
              10c2 e034  jmp  y,$34       4934  jmp(Y,'v6502_sta')              #10
                                          4935  #nop()                          #11 Overlap
                                          4936  label('v6502_STX')
v6502_STX:    10c3 1411  ld   $11,y       4937  ld(hi('v6502_stx'),Y)           #9,11
              10c4 e03a  jmp  y,$3a       4938  jmp(Y,'v6502_stx')              #10
                                          4939  #nop()                          #11 Overlap
                                          4940  label('v6502_STX2')
v6502_STX2:   10c5 1411  ld   $11,y       4941  ld(hi('v6502_stx2'),Y)          #9,11
              10c6 e040  jmp  y,$40       4942  jmp(Y,'v6502_stx2')             #10
                                          4943  #nop()                          #11 Overlap
                                          4944  label('v6502_STY')
v6502_STY:    10c7 1411  ld   $11,y       4945  ld(hi('v6502_sty'),Y)           #9,11
              10c8 e048  jmp  y,$48       4946  jmp(Y,'v6502_sty')              #10
                                          4947  #nop()                          #11 Overlap
                                          4948  label('v6502_TAX')
v6502_TAX:    10c9 1411  ld   $11,y       4949  ld(hi('v6502_tax'),Y)           #9,11
              10ca e04d  jmp  y,$4d       4950  jmp(Y,'v6502_tax')              #10
                                          4951  #nop()                          #11 Overlap
                                          4952  label('v6502_TAY')
v6502_TAY:    10cb 1411  ld   $11,y       4953  ld(hi('v6502_tay'),Y)           #9,11
              10cc e062  jmp  y,$62       4954  jmp(Y,'v6502_tay')              #10
                                          4955  #nop()                          #11 Overlap
                                          4956  label('v6502_TXA')
v6502_TXA:    10cd 1411  ld   $11,y       4957  ld(hi('v6502_txa'),Y)           #9,11
              10ce e065  jmp  y,$65       4958  jmp(Y,'v6502_txa')              #10
                                          4959  #nop()                          #11 Overlap
                                          4960  label('v6502_TYA')
v6502_TYA:    10cf 1411  ld   $11,y       4961  ld(hi('v6502_tya'),Y)           #9,11
              10d0 e068  jmp  y,$68       4962  jmp(Y,'v6502_tya')              #10
                                          4963  #nop()                          #11 Overlap
                                          4964  label('v6502_CLV')
v6502_CLV:    10d1 1411  ld   $11,y       4965  ld(hi('v6502_clv'),Y)           #9,11
              10d2 e076  jmp  y,$76       4966  jmp(Y,'v6502_clv')              #10
                                          4967  #nop()                          #11 Overlap
                                          4968  label('v6502_RTI')
v6502_RTI:    10d3 1411  ld   $11,y       4969  ld(hi('v6502_rti'),Y)           #9,11
              10d4 e0e4  jmp  y,$e4       4970  jmp(Y,'v6502_rti')              #10
                                          4971  #nop()                          #11 Overlap
                                          4972  label('v6502_ROR')
v6502_ROR:    10d5 140d  ld   $0d,y       4973  ld(hi('v6502_ror'),Y)           #9,11
              10d6 e08f  jmp  y,$8f       4974  jmp(Y,'v6502_ror')              #10
                                          4975  #nop()                          #11 Overlap
                                          4976  label('v6502_LSR')
v6502_LSR:    10d7 140d  ld   $0d,y       4977  ld(hi('v6502_lsr'),Y)           #9,11
              10d8 e0a9  jmp  y,$a9       4978  jmp(Y,'v6502_lsr')              #10
                                          4979  #nop()                          #11 Overlap
                                          4980  label('v6502_PHA')
v6502_PHA:    10d9 140d  ld   $0d,y       4981  ld(hi('v6502_pha'),Y)           #9,11
              10da e0ee  jmp  y,$ee       4982  jmp(Y,'v6502_pha')              #10
                                          4983  #nop()                          #11 Overlap
                                          4984  label('v6502_CLI')
v6502_CLI:    10db 1411  ld   $11,y       4985  ld(hi('v6502_cli'),Y)           #9,11
              10dc e06b  jmp  y,$6b       4986  jmp(Y,'v6502_cli')              #10
                                          4987  #nop()                          #11 Overlap
                                          4988  label('v6502_RTS')
v6502_RTS:    10dd 1411  ld   $11,y       4989  ld(hi('v6502_rts'),Y)           #9,11
              10de e08f  jmp  y,$8f       4990  jmp(Y,'v6502_rts')              #10
                                          4991  #nop()                          #11 Overlap
                                          4992  label('v6502_PLA')
v6502_PLA:    10df 140d  ld   $0d,y       4993  ld(hi('v6502_pla'),Y)           #9,11
              10e0 e0e3  jmp  y,$e3       4994  jmp(Y,'v6502_pla')              #10
                                          4995  #nop()                          #11 Overlap
                                          4996  label('v6502_SEI')
v6502_SEI:    10e1 1411  ld   $11,y       4997  ld(hi('v6502_sei'),Y)           #9,11
              10e2 e06e  jmp  y,$6e       4998  jmp(Y,'v6502_sei')              #10
                                          4999  #nop()                          #11 Overlap
                                          5000  label('v6502_TXS')
v6502_TXS:    10e3 1411  ld   $11,y       5001  ld(hi('v6502_txs'),Y)           #9,11
              10e4 e05e  jmp  y,$5e       5002  jmp(Y,'v6502_txs')              #10
                                          5003  #nop()                          #11 Overlap
                                          5004  label('v6502_TSX')
v6502_TSX:    10e5 1411  ld   $11,y       5005  ld(hi('v6502_tsx'),Y)           #9,11
              10e6 e054  jmp  y,$54       5006  jmp(Y,'v6502_tsx')              #10
                                          5007  #nop()                          #11 Overlap
                                          5008  label('v6502_CPY')
v6502_CPY:    10e7 1411  ld   $11,y       5009  ld(hi('v6502_cpy'),Y)           #9,11
              10e8 e0bd  jmp  y,$bd       5010  jmp(Y,'v6502_cpy')              #10
                                          5011  #nop()                          #11 Overlap
                                          5012  label('v6502_CMP')
v6502_CMP:    10e9 1411  ld   $11,y       5013  ld(hi('v6502_cmp'),Y)           #9,11
              10ea e0be  jmp  y,$be       5014  jmp(Y,'v6502_cmp')              #10
                                          5015  #nop()                          #11 Overlap
                                          5016  label('v6502_DEC')
v6502_DEC:    10eb 1411  ld   $11,y       5017  ld(hi('v6502_dec'),Y)           #9,11
              10ec e005  jmp  y,$05       5018  jmp(Y,'v6502_dec')              #10
                                          5019  #nop()                          #11 Overlap
                                          5020  label('v6502_CLD')
v6502_CLD:    10ed 1411  ld   $11,y       5021  ld(hi('v6502_cld'),Y)           #9,11
              10ee e071  jmp  y,$71       5022  jmp(Y,'v6502_cld')              #10
                                          5023  #nop()                          #11 Overlap
                                          5024  label('v6502_CPX')
v6502_CPX:    10ef 1411  ld   $11,y       5025  ld(hi('v6502_cpx'),Y)           #9,11
              10f0 e0bb  jmp  y,$bb       5026  jmp(Y,'v6502_cpx')              #10
                                          5027  #nop()                          #11 Overlap
                                          5028  label('v6502_ASL')
v6502_ASL:    10f1 140d  ld   $0d,y       5029  ld(hi('v6502_asl'),Y)           #9,11
              10f2 e0cb  jmp  y,$cb       5030  jmp(Y,'v6502_asl')              #10
                                          5031  #nop()                          #11 Overlap
                                          5032  label('v6502_PHP')
v6502_PHP:    10f3 1411  ld   $11,y       5033  ld(hi('v6502_php'),Y)           #9,11
              10f4 e0a2  jmp  y,$a2       5034  jmp(Y,'v6502_php')              #10
                                          5035  #nop()                          #11 Overlap
                                          5036  label('v6502_BIT')
v6502_BIT:    10f5 1411  ld   $11,y       5037  ld(hi('v6502_bit'),Y)           #9
              10f6 e07d  jmp  y,$7d       5038  jmp(Y,'v6502_bit')              #10
                                          5039  #nop()                          #11 Overlap
                                          5040  label('v6502_ROL')
v6502_ROL:    10f7 140d  ld   $0d,y       5041  ld(hi('v6502_rol'),Y)           #9
              10f8 e0b8  jmp  y,$b8       5042  jmp(Y,'v6502_rol')              #10
                                          5043  #nop()                          #11 Overlap
                                          5044  label('v6502_PLP')
v6502_PLP:    10f9 1411  ld   $11,y       5045  ld(hi('v6502_plp'),Y)           #9
              10fa e0d4  jmp  y,$d4       5046  jmp(Y,'v6502_plp')              #10
                                          5047  #nop()                          #11 Overlap
                                          5048  label('v6502_SED')              # Decimal mode not implemented
v6502_SED:    10fb 1411  ld   $11,y       5049  ld(hi('v6502_sed'),Y)           #9,11
              10fc e074  jmp  y,$74       5050  jmp(Y,'v6502_sed')              #10
                                          5051  #nop()                          #11 Overlap
                                          5052  label('v6502_ILL') # All illegal opcodes map to BRK, except $FF which will crash
                                          5053  label('v6502_BRK')
v6502_ILL:
v6502_BRK:    10fd 140d  ld   $0d,y       5054  ld(hi('v6502_brk'),Y)           #9
              10fe e0f6  jmp  y,$f6       5055  jmp(Y,'v6502_brk')              #10
                                          5056  #nop()                          #11 Overlap
                                          5057
                                          5058  while pc()&255 < 255:
                                          5059    nop()
                                          5060
                                          5061  # `v6502_RESUME' is the interpreter's secondary entry point for when
                                          5062  # the opcode and operands were already fetched, just before the last hPulse.
                                          5063  # It must be at $xxff, prefably somewhere in v6502's own code pages.
                                          5064  label('v6502_RESUME')
                                          5065  assert (pc()&255) == 255
v6502_RESUME: 10ff a005  suba $05         5066  suba(v6502_adjust)              #0,11 v6502 secondary entry point
                                          5067  # --- Page boundary ---
                                          5068  align(0x100,size=0x200)
              1100 c215  st   [$15]       5069  st([vTicks])                    #1
              1101 1124  ld   [$24],x     5070  ld([v6502_ADL],X)               #2
              1102 140f  ld   $0f,y       5071  ld(hi('v6502_execute'),Y)       #3
              1103 e126  jmp  y,[$26]     5072  jmp(Y,[v6502_IR])               #4
              1104 fcff  bra  $ff         5073  bra(255)                        #5
                                          5074
                                          5075  label('v6502_dec')
v6502_dec:    1105 1525  ld   [$25],y     5076  ld([v6502_ADH],Y)               #12
              1106 0d00  ld   [y,x]       5077  ld([Y,X])                       #13
              1107 a001  suba $01         5078  suba(1)                         #14
              1108 ce00  st   [y,x]       5079  st([Y,X])                       #15
              1109 c228  st   [$28]       5080  st([v6502_Qz])                  #16 Z flag
              110a c229  st   [$29]       5081  st([v6502_Qn])                  #17 N flag
              110b 140e  ld   $0e,y       5082  ld(hi('v6502_next'),Y)          #18
              110c 00f5  ld   $f5         5083  ld(-22/2)                       #19
              110d e020  jmp  y,$20       5084  jmp(Y,'v6502_next')             #20
                                          5085  #nop()                          #21 Overlap
                                          5086  #
                                          5087  label('v6502_inc')
v6502_inc:    110e 1525  ld   [$25],y     5088  ld([v6502_ADH],Y)               #12,22
              110f 0d00  ld   [y,x]       5089  ld([Y,X])                       #13
              1110 8001  adda $01         5090  adda(1)                         #14
              1111 ce00  st   [y,x]       5091  st([Y,X])                       #15
              1112 c228  st   [$28]       5092  st([v6502_Qz])                  #16 Z flag
              1113 c229  st   [$29]       5093  st([v6502_Qn])                  #17 N flag
              1114 140e  ld   $0e,y       5094  ld(hi('v6502_next'),Y)          #18
              1115 00f5  ld   $f5         5095  ld(-22/2)                       #19
              1116 e020  jmp  y,$20       5096  jmp(Y,'v6502_next')             #20
              1117 0200  nop              5097  nop()                           #21
                                          5098
                                          5099  label('v6502_lda')
v6502_lda:    1118 0200  nop              5100  nop()                           #12
              1119 1525  ld   [$25],y     5101  ld([v6502_ADH],Y)               #13
              111a 0d00  ld   [y,x]       5102  ld([Y,X])                       #14
              111b c218  st   [$18]       5103  st([v6502_A])                   #15
                                          5104  label('.lda16')
.lda16:       111c c228  st   [$28]       5105  st([v6502_Qz])                  #16 Z flag
              111d c229  st   [$29]       5106  st([v6502_Qn])                  #17 N flag
              111e 0200  nop              5107  nop()                           #18
              111f 140e  ld   $0e,y       5108  ld(hi('v6502_next'),Y)          #19
              1120 e020  jmp  y,$20       5109  jmp(Y,'v6502_next')             #20
              1121 00f5  ld   $f5         5110  ld(-22/2)                       #21
                                          5111
                                          5112  label('v6502_ldx')
v6502_ldx:    1122 1525  ld   [$25],y     5113  ld([v6502_ADH],Y)               #12
              1123 0d00  ld   [y,x]       5114  ld([Y,X])                       #13
              1124 fc1c  bra  .lda16      5115  bra('.lda16')                   #14
              1125 c22a  st   [$2a]       5116  st([v6502_X])                   #15
                                          5117
                                          5118  label('v6502_ldy')
v6502_ldy:    1126 1525  ld   [$25],y     5119  ld([v6502_ADH],Y)               #12
              1127 0d00  ld   [y,x]       5120  ld([Y,X])                       #13
              1128 fc1c  bra  .lda16      5121  bra('.lda16')                   #14
              1129 c22b  st   [$2b]       5122  st([v6502_Y])                   #15
                                          5123
                                          5124  label('v6502_ldx2')
v6502_ldx2:   112a 0124  ld   [$24]       5125  ld([v6502_ADL])                 #12 Special case $B6: LDX $DD,Y
              112b a12a  suba [$2a]       5126  suba([v6502_X])                 #13 Undo X offset
              112c 912b  adda [$2b],x     5127  adda([v6502_Y],X)               #14 Apply Y instead
              112d 0500  ld   [x]         5128  ld([X])                         #15
              112e c22a  st   [$2a]       5129  st([v6502_X])                   #16
              112f c228  st   [$28]       5130  st([v6502_Qz])                  #17 Z flag
              1130 c229  st   [$29]       5131  st([v6502_Qn])                  #18 N flag
              1131 140e  ld   $0e,y       5132  ld(hi('v6502_next'),Y)          #19
              1132 e020  jmp  y,$20       5133  jmp(Y,'v6502_next')             #20
              1133 00f5  ld   $f5         5134  ld(-22/2)                       #21
                                          5135
                                          5136  label('v6502_sta')
v6502_sta:    1134 1525  ld   [$25],y     5137  ld([v6502_ADH],Y)               #12
              1135 0118  ld   [$18]       5138  ld([v6502_A])                   #13
              1136 ce00  st   [y,x]       5139  st([Y,X])                       #14
              1137 140e  ld   $0e,y       5140  ld(hi('v6502_next'),Y)          #15
              1138 e020  jmp  y,$20       5141  jmp(Y,'v6502_next')             #16
              1139 00f7  ld   $f7         5142  ld(-18/2)                       #17
                                          5143
                                          5144  label('v6502_stx')
v6502_stx:    113a 1525  ld   [$25],y     5145  ld([v6502_ADH],Y)               #12
              113b 012a  ld   [$2a]       5146  ld([v6502_X])                   #13
              113c ce00  st   [y,x]       5147  st([Y,X])                       #14
              113d 140e  ld   $0e,y       5148  ld(hi('v6502_next'),Y)          #15
              113e e020  jmp  y,$20       5149  jmp(Y,'v6502_next')             #16
              113f 00f7  ld   $f7         5150  ld(-18/2)                       #17
                                          5151
                                          5152  label('v6502_stx2')
v6502_stx2:   1140 0124  ld   [$24]       5153  ld([v6502_ADL])                 #12 Special case $96: STX $DD,Y
              1141 a12a  suba [$2a]       5154  suba([v6502_X])                 #13 Undo X offset
              1142 912b  adda [$2b],x     5155  adda([v6502_Y],X)               #14 Apply Y instead
              1143 012a  ld   [$2a]       5156  ld([v6502_X])                   #15
              1144 c600  st   [x]         5157  st([X])                         #16
              1145 140e  ld   $0e,y       5158  ld(hi('v6502_next'),Y)          #17
              1146 e020  jmp  y,$20       5159  jmp(Y,'v6502_next')             #18
              1147 00f6  ld   $f6         5160  ld(-20/2)                       #19
                                          5161
                                          5162  label('v6502_sty')
v6502_sty:    1148 1525  ld   [$25],y     5163  ld([v6502_ADH],Y)               #12
              1149 012b  ld   [$2b]       5164  ld([v6502_Y])                   #13
              114a ce00  st   [y,x]       5165  st([Y,X])                       #14
              114b 140e  ld   $0e,y       5166  ld(hi('v6502_next'),Y)          #15
              114c e020  jmp  y,$20       5167  jmp(Y,'v6502_next')             #16
                                          5168  label('v6502_tax')
v6502_tax:    114d 00f7  ld   $f7         5169  ld(-18/2)                       #17,12
                                          5170  #
                                          5171  #label('v6502_tax')
                                          5172  #nop()                          #12 Overlap
              114e 0118  ld   [$18]       5173  ld([v6502_A])                   #13
              114f c22a  st   [$2a]       5174  st([v6502_X])                   #14
                                          5175  label('.tax15')
.tax15:       1150 c228  st   [$28]       5176  st([v6502_Qz])                  #15 Z flag
              1151 c229  st   [$29]       5177  st([v6502_Qn])                  #16 N flag
              1152 140e  ld   $0e,y       5178  ld(hi('v6502_next'),Y)          #17
              1153 e020  jmp  y,$20       5179  jmp(Y,'v6502_next')             #18
                                          5180  label('v6502_tsx')
v6502_tsx:    1154 00f6  ld   $f6         5181  ld(-20/2)                       #19
                                          5182  #
                                          5183  #label('v6502_tsx')
                                          5184  #nop()                          #12 Overlap
              1155 011c  ld   [$1c]       5185  ld([v6502_S])                   #13
              1156 a001  suba $01         5186  suba(1)                         #14 Shift down on export
              1157 c22a  st   [$2a]       5187  st([v6502_X])                   #15
                                          5188  label('.tsx16')
.tsx16:       1158 c228  st   [$28]       5189  st([v6502_Qz])                  #16 Z flag
              1159 c229  st   [$29]       5190  st([v6502_Qn])                  #17 N flag
              115a 0200  nop              5191  nop()                           #18
              115b 140e  ld   $0e,y       5192  ld(hi('v6502_next'),Y)          #19
              115c e020  jmp  y,$20       5193  jmp(Y,'v6502_next')             #20
              115d 00f5  ld   $f5         5194  ld(-22/2)                       #21
                                          5195
                                          5196  label('v6502_txs')
v6502_txs:    115e 012a  ld   [$2a]       5197  ld([v6502_X])                   #12
              115f 8001  adda $01         5198  adda(1)                         #13 Shift up on import
              1160 fc58  bra  .tsx16      5199  bra('.tsx16')                   #14
              1161 c21c  st   [$1c]       5200  st([v6502_S])                   #15
                                          5201
                                          5202  label('v6502_tay')
v6502_tay:    1162 0118  ld   [$18]       5203  ld([v6502_A])                   #12
              1163 fc50  bra  .tax15      5204  bra('.tax15')                   #13
              1164 c22b  st   [$2b]       5205  st([v6502_Y])                   #14
                                          5206
                                          5207  label('v6502_txa')
v6502_txa:    1165 012a  ld   [$2a]       5208  ld([v6502_X])                   #12
              1166 fc50  bra  .tax15      5209  bra('.tax15')                   #13
              1167 c218  st   [$18]       5210  st([v6502_A])                   #14
                                          5211
                                          5212  label('v6502_tya')
v6502_tya:    1168 012b  ld   [$2b]       5213  ld([v6502_Y])                   #12
              1169 fc50  bra  .tax15      5214  bra('.tax15')                   #13
              116a c218  st   [$18]       5215  st([v6502_A])                   #14
                                          5216
                                          5217  label('v6502_cli')
v6502_cli:    116b 0127  ld   [$27]       5218  ld([v6502_P])                   #12
              116c fc79  bra  .clv15      5219  bra('.clv15')                   #13
              116d 20fb  anda $fb         5220  anda(~v6502_Iflag)              #14
                                          5221
                                          5222  label('v6502_sei')
v6502_sei:    116e 0127  ld   [$27]       5223  ld([v6502_P])                   #12
              116f fc79  bra  .clv15      5224  bra('.clv15')                   #13
              1170 4004  ora  $04         5225  ora(v6502_Iflag)                #14
                                          5226
                                          5227  label('v6502_cld')
v6502_cld:    1171 0127  ld   [$27]       5228  ld([v6502_P])                   #12
              1172 fc79  bra  .clv15      5229  bra('.clv15')                   #13
              1173 20f7  anda $f7         5230  anda(~v6502_Dflag)              #14
                                          5231
                                          5232  label('v6502_sed')
v6502_sed:    1174 0127  ld   [$27]       5233  ld([v6502_P])                   #12
              1175 fc79  bra  .clv15      5234  bra('.clv15')                   #13
                                          5235  label('v6502_clv')
v6502_clv:    1176 4008  ora  $08         5236  ora(v6502_Dflag)                #14,12 Overlap
                                          5237  #
                                          5238  #label('v6502_clv')
                                          5239  #nop()                          #12
              1177 0127  ld   [$27]       5240  ld([v6502_P])                   #13
              1178 207f  anda $7f         5241  anda(~v6502_Vemu)               #14
                                          5242  label('.clv15')
.clv15:       1179 c227  st   [$27]       5243  st([v6502_P])                   #15
              117a 140e  ld   $0e,y       5244  ld(hi('v6502_next'),Y)          #16
              117b 00f6  ld   $f6         5245  ld(-20/2)                       #17
              117c e020  jmp  y,$20       5246  jmp(Y,'v6502_next')             #18
                                          5247  label('v6502_bit')
v6502_bit:    117d 0200  nop              5248  nop()                           #19,12
                                          5249  #
                                          5250  #label('v6502_bit')
                                          5251  #nop()                          #12 Overlap
              117e 1124  ld   [$24],x     5252  ld([v6502_ADL],X)               #13
              117f 1525  ld   [$25],y     5253  ld([v6502_ADH],Y)               #14
              1180 0d00  ld   [y,x]       5254  ld([Y,X])                       #15
              1181 c229  st   [$29]       5255  st([v6502_Qn])                  #16 N flag
              1182 2118  anda [$18]       5256  anda([v6502_A])                 #17 This is a reason we keep N and Z in separate bytes
              1183 c228  st   [$28]       5257  st([v6502_Qz])                  #18 Z flag
              1184 0127  ld   [$27]       5258  ld([v6502_P])                   #19
              1185 207f  anda $7f         5259  anda(~v6502_Vemu)               #20
              1186 c227  st   [$27]       5260  st([v6502_P])                   #21
              1187 0d00  ld   [y,x]       5261  ld([Y,X])                       #22
              1188 8200  adda ac          5262  adda(AC)                        #23
              1189 2080  anda $80         5263  anda(v6502_Vemu)                #24
              118a 4127  ora  [$27]       5264  ora([v6502_P])                  #25
              118b c227  st   [$27]       5265  st([v6502_P])                   #26 Update V
              118c 140e  ld   $0e,y       5266  ld(hi('v6502_next'),Y)          #27
              118d e020  jmp  y,$20       5267  jmp(Y,'v6502_next')             #28
              118e 00f1  ld   $f1         5268  ld(-30/2)                       #29
                                          5269
                                          5270  label('v6502_rts')
v6502_rts:    118f 011c  ld   [$1c]       5271  ld([v6502_S])                   #12
              1190 1200  ld   ac,x        5272  ld(AC,X)                        #13
              1191 8002  adda $02         5273  adda(2)                         #14
              1192 c21c  st   [$1c]       5274  st([v6502_S])                   #15
              1193 1400  ld   $00,y       5275  ld(0,Y)                         #16
              1194 0d00  ld   [y,x]       5276  ld([Y,X])                       #17
              1195 de00  st   [y,x++]     5277  st([Y,Xpp])                     #18 Just X++
              1196 8001  adda $01         5278  adda(1)                         #19
              1197 c21a  st   [$1a]       5279  st([v6502_PCL])                 #20
              1198 f09b  beq  $119b       5280  beq(pc()+3)                     #21
              1199 fc9c  bra  $119c       5281  bra(pc()+3)                     #22
              119a 0000  ld   $00         5282  ld(0)                           #23
              119b 0001  ld   $01         5283  ld(1)                           #23(!)
              119c 8d00  adda [y,x]       5284  adda([Y,X])                     #24
              119d c21b  st   [$1b]       5285  st([v6502_PCH])                 #25
              119e 0200  nop              5286  nop()                           #26
              119f 140e  ld   $0e,y       5287  ld(hi('v6502_next'),Y)          #27
              11a0 e020  jmp  y,$20       5288  jmp(Y,'v6502_next')             #28
              11a1 00f1  ld   $f1         5289  ld(-30/2)                       #29
                                          5290
                                          5291  label('v6502_php')
v6502_php:    11a2 011c  ld   [$1c]       5292  ld([v6502_S])                   #12
              11a3 a001  suba $01         5293  suba(1)                         #13
              11a4 d21c  st   [$1c],x     5294  st([v6502_S],X)                 #14
              11a5 0127  ld   [$27]       5295  ld([v6502_P])                   #15
              11a6 20bd  anda $bd         5296  anda(~v6502_Vflag&~v6502_Zflag) #16 Keep Vemu,B,D,I,C
              11a7 f4aa  bge  $11aa       5297  bpl(pc()+3)                     #17 V to bit 6 and clear N
              11a8 fcaa  bra  $11aa       5298  bra(pc()+2)                     #18
              11a9 60c0  xora $c0         5299  xora(v6502_Vflag^v6502_Vemu)    #19
              11aa c600  st   [x]         5300  st([X])                         #19,20
              11ab 0128  ld   [$28]       5301  ld([v6502_Qz])                  #21 Z flag
              11ac f0af  beq  $11af       5302  beq(pc()+3)                     #22
              11ad fcb0  bra  $11b0       5303  bra(pc()+3)                     #23
              11ae 0000  ld   $00         5304  ld(0)                           #24
              11af 0002  ld   $02         5305  ld(v6502_Zflag)                 #24(!)
              11b0 4500  ora  [x]         5306  ora([X])                        #25
              11b1 c600  st   [x]         5307  st([X])                         #26
              11b2 0129  ld   [$29]       5308  ld([v6502_Qn])                  #27 N flag
              11b3 2080  anda $80         5309  anda(0x80)                      #28
              11b4 4500  ora  [x]         5310  ora([X])                        #29
              11b5 4020  ora  $20         5311  ora(v6502_Uflag)                #30 Unused bit
              11b6 c600  st   [x]         5312  st([X])                         #31
              11b7 0200  nop              5313  nop()                           #32
              11b8 140e  ld   $0e,y       5314  ld(hi('v6502_next'),Y)          #33
              11b9 e020  jmp  y,$20       5315  jmp(Y,'v6502_next')             #34
              11ba 00ee  ld   $ee         5316  ld(-36/2)                       #35
                                          5317
                                          5318  label('v6502_cpx')
v6502_cpx:    11bb fcc0  bra  .cmp14      5319  bra('.cmp14')                   #12
              11bc 012a  ld   [$2a]       5320  ld([v6502_X])                   #13
                                          5321
                                          5322  label('v6502_cpy')
v6502_cpy:    11bd fcc0  bra  .cmp14      5323  bra('.cmp14')                   #12
                                          5324  label('v6502_cmp')
v6502_cmp:    11be 012b  ld   [$2b]       5325  ld([v6502_Y])                   #13,12
                                          5326  #
                                          5327  #label('v6502_cmp')             #12 Overlap
                                          5328  assert v6502_Cflag == 1
              11bf 0118  ld   [$18]       5329  ld([v6502_A])                   #13
                                          5330  label('.cmp14')
.cmp14:       11c0 1525  ld   [$25],y     5331  ld([v6502_ADH],Y)               #14
              11c1 e8c7  blt  .cmp17      5332  bmi('.cmp17')                   #15 Carry?
              11c2 ad00  suba [y,x]       5333  suba([Y,X])                     #16
              11c3 c228  st   [$28]       5334  st([v6502_Qz])                  #17 Z flag
              11c4 c229  st   [$29]       5335  st([v6502_Qn])                  #18 N flag
              11c5 fccb  bra  .cmp21      5336  bra('.cmp21')                   #19
              11c6 4d00  ora  [y,x]       5337  ora([Y,X])                      #20
                                          5338  label('.cmp17')
.cmp17:       11c7 c228  st   [$28]       5339  st([v6502_Qz])                  #17 Z flag
              11c8 c229  st   [$29]       5340  st([v6502_Qn])                  #18 N flag
              11c9 2d00  anda [y,x]       5341  anda([Y,X])                     #19
              11ca 0200  nop              5342  nop()                           #20
                                          5343  label('.cmp21')
.cmp21:       11cb 6080  xora $80         5344  xora(0x80)                      #21
              11cc 3080  anda $80,x       5345  anda(0x80,X)                    #22 Move carry to bit 0
              11cd 0127  ld   [$27]       5346  ld([v6502_P])                   #23 C flag
              11ce 20fe  anda $fe         5347  anda(~1)                        #24
              11cf 4500  ora  [x]         5348  ora([X])                        #25
              11d0 c227  st   [$27]       5349  st([v6502_P])                   #26
              11d1 140e  ld   $0e,y       5350  ld(hi('v6502_next'),Y)          #27
              11d2 e020  jmp  y,$20       5351  jmp(Y,'v6502_next')             #28
              11d3 00f1  ld   $f1         5352  ld(-30/2)                       #29
                                          5353
                                          5354  label('v6502_plp')
                                          5355  assert v6502_Nflag == 128
                                          5356  assert 2*v6502_Vflag == v6502_Vemu
v6502_plp:    11d4 011c  ld   [$1c]       5357  ld([v6502_S])                   #12
              11d5 1200  ld   ac,x        5358  ld(AC,X)                        #13
              11d6 8001  adda $01         5359  adda(1)                         #14
              11d7 c21c  st   [$1c]       5360  st([v6502_S])                   #15
              11d8 0500  ld   [x]         5361  ld([X])                         #16
              11d9 c229  st   [$29]       5362  st([v6502_Qn])                  #17 N flag
              11da 2002  anda $02         5363  anda(v6502_Zflag)               #18
              11db 6002  xora $02         5364  xora(v6502_Zflag)               #19
              11dc c228  st   [$28]       5365  st([v6502_Qz])                  #20 Z flag
              11dd 0500  ld   [x]         5366  ld([X])                         #21
              11de 207f  anda $7f         5367  anda(~v6502_Vemu)               #22 V to bit 7
              11df 8040  adda $40         5368  adda(v6502_Vflag)               #23
              11e0 c227  st   [$27]       5369  st([v6502_P])                   #24 All other flags
              11e1 140e  ld   $0e,y       5370  ld(hi('v6502_next'),Y)          #25
              11e2 e020  jmp  y,$20       5371  jmp(Y,'v6502_next')             #26
              11e3 00f2  ld   $f2         5372  ld(-28/2)                       #27
                                          5373
                                          5374  label('v6502_rti')
v6502_rti:    11e4 011c  ld   [$1c]       5375  ld([v6502_S])                   #12
              11e5 1200  ld   ac,x        5376  ld(AC,X)                        #13
              11e6 8003  adda $03         5377  adda(3)                         #14
              11e7 c21c  st   [$1c]       5378  st([v6502_S])                   #15
              11e8 0500  ld   [x]         5379  ld([X])                         #16
              11e9 c229  st   [$29]       5380  st([v6502_Qn])                  #17 N flag
              11ea 2002  anda $02         5381  anda(v6502_Zflag)               #18
              11eb 6002  xora $02         5382  xora(v6502_Zflag)               #19
              11ec c228  st   [$28]       5383  st([v6502_Qz])                  #20 Z flag
              11ed 1400  ld   $00,y       5384  ld(0,Y)                         #21
              11ee 0d00  ld   [y,x]       5385  ld([Y,X])                       #22
              11ef de00  st   [y,x++]     5386  st([Y,Xpp])                     #23 Just X++
              11f0 207f  anda $7f         5387  anda(~v6502_Vemu)               #24 V to bit 7
              11f1 8040  adda $40         5388  adda(v6502_Vflag)               #25
              11f2 c227  st   [$27]       5389  st([v6502_P])                   #26 All other flags
              11f3 0d00  ld   [y,x]       5390  ld([Y,X])                       #27
              11f4 de00  st   [y,x++]     5391  st([Y,Xpp])                     #28 Just X++
              11f5 c21a  st   [$1a]       5392  st([v6502_PCL])                 #29
              11f6 0d00  ld   [y,x]       5393  ld([Y,X])                       #30
              11f7 c21b  st   [$1b]       5394  st([v6502_PCH])                 #31
              11f8 0200  nop              5395  nop()                           #32
              11f9 140e  ld   $0e,y       5396  ld(hi('v6502_next'),Y)          #33
              11fa e020  jmp  y,$20       5397  jmp(Y,'v6502_next')             #34
              11fb 00ee  ld   $ee         5398  ld(-36/2)                       #35
                                          5399
                                          5400  #-----------------------------------------------------------------------
                                          5401  #       Extended vertical blank logic: interrupts
                                          5402  #-----------------------------------------------------------------------
              11fc 0200  nop              5403  align(0x100)
              11fd 0200  nop
              11fe 0200  nop
              11ff 0200  nop
                                          5404
                                          5405  # Check if an IRQ handler is defined
                                          5406  label('vBlankFirst#78')
vBlankFirst#78:
              1200 09f6  ld   [y,$f6]     5407  ld([Y,vIRQ_v5])                 #78
              1201 49f7  ora  [y,$f7]     5408  ora([Y,vIRQ_v5+1])              #79
                                          5409  bne('vBlankFirst#82')           #80
              1202 ec09  bne  vBlankFirst#82
              1203 0116  ld   [$16]       5410  ld([vPC])                       #81
              1204 0055  ld   $55         5411  runVcpu(186-82-extra,           #82 Application cycles (scan line 0)
              1205 c21e  st   [$1e]
              1206 1502  ld   [$02],y
              1207 e0ff  jmp  y,$ff
              1208 001e  ld   $1e
                                          5412      '---D line 0 timeout but no irq',
                                          5413      returnTo='vBlankFirst#186')
                                          5414
                                          5415  label('vBlankFirst#82')
vBlankFirst#82:
              1209 c230  st   [$30]       5416  st([0x30])                      #82 Save vPC
              120a 0117  ld   [$17]       5417  ld([vPC+1])                     #83
              120b c231  st   [$31]       5418  st([0x31])                      #84
              120c 0118  ld   [$18]       5419  ld([vAC])                       #85 Save vAC
              120d c232  st   [$32]       5420  st([0x32])                      #86
              120e 0119  ld   [$19]       5421  ld([vAC+1])                     #87
              120f c233  st   [$33]       5422  st([0x33])                      #88
              1210 0102  ld   [$02]       5423  ld([vCpuSelect])                #89 Save vCpuSelect for PREFIX
              1211 c234  st   [$34]       5424  st([0x34])                      #90
              1212 09f6  ld   [y,$f6]     5425  ld([Y,vIRQ_v5])                 #91 Set vPC to vIRQ
              1213 a002  suba $02         5426  suba(2)                         #92
              1214 c216  st   [$16]       5427  st([vPC])                       #93
              1215 09f7  ld   [y,$f7]     5428  ld([Y,vIRQ_v5+1])               #94
              1216 c217  st   [$17]       5429  st([vPC+1])                     #95
              1217 0102  ld   [$02]       5430  ld([vCpuSelect])                #96 Handler must save this if needed
              1218 c219  st   [$19]       5431  st([vAC+1])                     #97
              1219 0000  ld   $00         5432  ld(0)                           #98
              121a c218  st   [$18]       5433  st([vAC])                       #99
              121b 0002  ld   $02         5434  ld(hi('ENTER'))                 #100 Set vCpuSelect to ENTER (=regular vCPU)
              121c c202  st   [$02]       5435  st([vCpuSelect])                #101
              121d 0055  ld   $55         5436  runVcpu(186-102-extra,          #102 Application cycles (scan line 0)
              121e c21e  st   [$1e]
              121f 1502  ld   [$02],y
              1220 e0ff  jmp  y,$ff
              1221 0014  ld   $14
                                          5437      '---D line 0 timeout with irq',
                                          5438      returnTo='vBlankFirst#186')
                                          5439
                                          5440  # vIRQ sequence WITH interpreter switch
                                          5441  label('vRTI#18')
vRTI#18:      1222 0500  ld   [x]         5442  ld([X])                         #18
              1223 c202  st   [$02]       5443  st([vCpuSelect])                #19
              1224 0130  ld   [$30]       5444  ld([0x30])                      #20
              1225 c216  st   [$16]       5445  st([vPC])                       #21
              1226 0131  ld   [$31]       5446  ld([0x31])                      #22
              1227 c217  st   [$17]       5447  st([vPC+1])                     #23
              1228 0132  ld   [$32]       5448  ld([0x32])                      #24
              1229 c218  st   [$18]       5449  st([vAC])                       #25
              122a 0133  ld   [$33]       5450  ld([0x33])                      #26
              122b c219  st   [$19]       5451  st([vAC+1])                     #27
              122c 0200  nop              5452  nop()                           #28
              122d 0200  nop              5453  nop()                           #29
              122e 0200  nop              5454  nop()                           #30 #0 This MUST match maxTicks, (ie maxTicks=30)
              122f 1403  ld   $03,y       5455  ld(hi('RESYNC'),Y)              #1
              1230 e00c  jmp  y,$0c       5456  jmp(Y,'RESYNC')                 #2
              1231 0115  ld   [$15]       5457  ld([vTicks])                    #3
                                          5458
                                          5459  # Entered last line of vertical blank (line 40)
                                          5460  label('vBlankLast#34')
                                          5461
                                          5462  #-----------------------------------------------------------------------
                                          5463  #       Extended vertical blank logic: game controller decoding
                                          5464  #-----------------------------------------------------------------------
                                          5465
                                          5466  # Game controller types
                                          5467  # TypeA: Based on 74LS165 shift register (not supported)
                                          5468  # TypeB: Based on CD4021B shift register (standard)
                                          5469  # TypeC: Based on priority encoder
                                          5470  #
                                          5471  # Notes:
                                          5472  # - TypeA was only used during development and first beta test, before ROM v1
                                          5473  # - TypeB appears as type A with negative logic levels
                                          5474  # - TypeB is the game controller type that comes with the original kit and ROM v1
                                          5475  # - TypeB is mimicked by BabelFish / Pluggy McPlugface
                                          5476  # - TypeB requires a prolonged /SER_LATCH, therefore vPulse is 8 scanlines, not 2
                                          5477  # - TypeB and TypeC can be sampled in the same scanline
                                          5478  # - TypeA is 1 scanline shifted as it looks at a different edge (XXX up or down?)
                                          5479  # - TypeC gives incomplete information: lower buttons overshadow higher ones
                                          5480  #
                                          5481  #       TypeC    Alias    Button TypeB
                                          5482  #       00000000  ^@   -> Right  11111110
                                          5483  #       00000001  ^A   -> Left   11111101
                                          5484  #       00000011  ^C   -> Down   11111011
                                          5485  #       00000111  ^G   -> Up     11110111
                                          5486  #       00001111  ^O   -> Start  11101111
                                          5487  #       00011111  ^_   -> Select 11011111
                                          5488  #       00111111  ?    -> B      10111111
                                          5489  #       01111111  DEL  -> A      01111111
                                          5490  #       11111111       -> (None) 11111111
                                          5491  #
                                          5492  #       Conversion formula:
                                          5493  #               f(x) := 254 - x
                                          5494
                                          5495  # Detect controller TypeC codes
vBlankLast#34:
              1232 010f  ld   [$0f]       5496  ld([serialRaw])                 #34 if serialRaw in [0,1,3,7,15,31,63,127,255]
              1233 8001  adda $01         5497  adda(1)                         #35
              1234 210f  anda [$0f]       5498  anda([serialRaw])               #36
              1235 ec46  bne  .buttons#39 5499  bne('.buttons#39')              #37
                                          5500
                                          5501  # TypeC
              1236 010f  ld   [$0f]       5502  ld([serialRaw])                 #38 [TypeC] if serialRaw < serialLast
              1237 8001  adda $01         5503  adda(1)                         #39
              1238 2110  anda [$10]       5504  anda([serialLast])              #40
              1239 ec3d  bne  .buttons#43 5505  bne('.buttons#43')              #41
              123a 00fe  ld   $fe         5506  ld(254)                         #42 then clear the selected bit
              123b 0200  nop              5507  nop()                           #43
              123c fc40  bra  .buttons#46 5508  bra('.buttons#46')              #44
                                          5509  label('.buttons#43')
.buttons#43:  123d a10f  suba [$0f]       5510  suba([serialRaw])               #43,45
              123e 2111  anda [$11]       5511  anda([buttonState])             #44
              123f c211  st   [$11]       5512  st([buttonState])               #45
                                          5513  label('.buttons#46')
.buttons#46:  1240 010f  ld   [$0f]       5514  ld([serialRaw])                 #46 Set the lower bits
              1241 4111  ora  [$11]       5515  ora([buttonState])              #47
                                          5516  label('.buttons#48')
.buttons#48:  1242 c211  st   [$11]       5517  st([buttonState])               #48
              1243 010f  ld   [$0f]       5518  ld([serialRaw])                 #49 Update serialLast for next pass
              1244 e0b3  jmp  y,$b3       5519  jmp(Y,'vBlankLast#52')          #50
              1245 c210  st   [$10]       5520  st([serialLast])                #51
                                          5521
                                          5522  # TypeB
                                          5523  # pChange = pNew & ~pOld
                                          5524  # nChange = nNew | ~nOld {DeMorgan}
                                          5525  label('.buttons#39')
.buttons#39:  1246 00ff  ld   $ff         5526  ld(255)                         #39 [TypeB] Bitwise edge-filter to detect button presses
              1247 6110  xora [$10]       5527  xora([serialLast])              #40
              1248 410f  ora  [$0f]       5528  ora([serialRaw])                #41 Catch button-press events
              1249 2111  anda [$11]       5529  anda([buttonState])             #42 Keep active button presses
              124a 410f  ora  [$0f]       5530  ora([serialRaw])                #43
              124b 0200  nop              5531  nop()                           #44
              124c 0200  nop              5532  nop()                           #45
              124d fc42  bra  .buttons#48 5533  bra('.buttons#48')              #46
              124e 0200  nop              5534  nop()                           #47
                                          5535
                                          5536
                                          5537  #-----------------------------------------------------------------------
                                          5538  #       More SYS functions, (0x1200)
                                          5539  #-----------------------------------------------------------------------
                                          5540
                                          5541  # SYS_Exec_88 implementation
                                          5542  label('sys_Exec')
sys_Exec:     124f d617  st   [$17],y     5543  st([vPC+1],Y)                   #18 Clear vPCH and Y
              1250 011c  ld   [$1c]       5544  ld([vSP])                       #19 Place ROM loader below current stack pointer
              1251 a037  suba $37         5545  suba(53+2)                      #20 (AC -> *+0) One extra word for PUSH
              1252 d21d  st   [$1d],x     5546  st([vTmp],X)                    #21
              1253 80fe  adda $fe         5547  adda(-2)                        #22 (AC -> *-2)
              1254 c216  st   [$16]       5548  st([vPC])                       #23
                                          5549  # Start of manually compiled vCPU section
              1255 dc75  st   $75,[y,x++] 5550  st('PUSH',    [Y,Xpp])          #24 *+0
              1256 dccf  st   $cf,[y,x++] 5551  st('CALL',    [Y,Xpp])          #25 *+26 Fetch first byte
              1257 8023  adda $23         5552  adda(33-(-2))                   #26 (AC -> *+33)
              1258 de00  st   [y,x++]     5553  st(           [Y,Xpp])          #27 *+27
              1259 dc5e  st   $5e,[y,x++] 5554  st('ST',      [Y,Xpp])          #28 *+3 Chunk copy loop
              125a dc27  st   $27,[y,x++] 5555  st(sysArgs+3, [Y,Xpp])          #29 *+4 High-address comes first
              125b dccf  st   $cf,[y,x++] 5556  st('CALL',    [Y,Xpp])          #30 *+5
              125c de00  st   [y,x++]     5557  st(           [Y,Xpp])          #31 *+6
              125d dc5e  st   $5e,[y,x++] 5558  st('ST',      [Y,Xpp])          #32 *+7
              125e dc26  st   $26,[y,x++] 5559  st(sysArgs+2, [Y,Xpp])          #33 *+8 Then the low address
              125f dccf  st   $cf,[y,x++] 5560  st('CALL',    [Y,Xpp])          #34 *+9
              1260 de00  st   [y,x++]     5561  st(           [Y,Xpp])          #35 *+10
              1261 dc5e  st   $5e,[y,x++] 5562  st('ST',      [Y,Xpp])          #36 *+11 Byte copy loop
              1262 dc28  st   $28,[y,x++] 5563  st(sysArgs+4, [Y,Xpp])          #37 *+12 Byte count (0 means 256)
              1263 dccf  st   $cf,[y,x++] 5564  st('CALL',    [Y,Xpp])          #38 *+13
              1264 de00  st   [y,x++]     5565  st(           [Y,Xpp])          #39 *+14
              1265 dcf0  st   $f0,[y,x++] 5566  st('POKE',    [Y,Xpp])          #40 *+15
              1266 dc26  st   $26,[y,x++] 5567  st(sysArgs+2, [Y,Xpp])          #41 *+16
              1267 dc93  st   $93,[y,x++] 5568  st('INC',     [Y,Xpp])          #42 *+17
              1268 dc26  st   $26,[y,x++] 5569  st(sysArgs+2, [Y,Xpp])          #43 *+18
              1269 dc1a  st   $1a,[y,x++] 5570  st('LD',      [Y,Xpp])          #44 *+19
              126a dc28  st   $28,[y,x++] 5571  st(sysArgs+4, [Y,Xpp])          #45 *+20
              126b dce6  st   $e6,[y,x++] 5572  st('SUBI',    [Y,Xpp])          #46 *+21
              126c dc01  st   $01,[y,x++] 5573  st(1,         [Y,Xpp])          #47 *+22
              126d dc35  st   $35,[y,x++] 5574  st('BCC',     [Y,Xpp])          #48 *+23
              126e dc72  st   $72,[y,x++] 5575  st('NE',      [Y,Xpp])          #49 *+24
              126f 80e8  adda $e8         5576  adda(11-2-33)                   #50 (AC -> *+9)
              1270 de00  st   [y,x++]     5577  st(           [Y,Xpp])          #51 *+25
              1271 dccf  st   $cf,[y,x++] 5578  st('CALL',    [Y,Xpp])          #52 *+26 Go to next block
              1272 8018  adda $18         5579  adda(33-9)                      #53 (AC -> *+33)
              1273 de00  st   [y,x++]     5580  st(           [Y,Xpp])          #54 *+27
              1274 dc35  st   $35,[y,x++] 5581  st('BCC',     [Y,Xpp])          #55 *+28
              1275 dc72  st   $72,[y,x++] 5582  st('NE',      [Y,Xpp])          #56 *+29
              1276 80e0  adda $e0         5583  adda(3-2-33)                    #57 (AC -> *+1)
              1277 de00  st   [y,x++]     5584  st(           [Y,Xpp])          #58 *+30
              1278 dc63  st   $63,[y,x++] 5585  st('POP',     [Y,Xpp])          #59 *+31 End
              1279 dcff  st   $ff,[y,x++] 5586  st('RET',     [Y,Xpp])          #60 *+32
                                          5587  # Pointer constant pointing to the routine below (for use by CALL)
              127a 8022  adda $22         5588  adda(35-1)                      #61 (AC -> *+35)
              127b de00  st   [y,x++]     5589  st(           [Y,Xpp])          #62 *+33
              127c dc00  st   $00,[y,x++] 5590  st(0,         [Y,Xpp])          #63 *+34
                                          5591  # Routine to read next byte from ROM and advance read pointer
              127d dc1a  st   $1a,[y,x++] 5592  st('LD',      [Y,Xpp])          #64 *+35 Test for end of ROM table
              127e dc24  st   $24,[y,x++] 5593  st(sysArgs+0, [Y,Xpp])          #65 *+36
              127f dc8c  st   $8c,[y,x++] 5594  st('XORI',    [Y,Xpp])          #66 *+37
              1280 dcfb  st   $fb,[y,x++] 5595  st(251,       [Y,Xpp])          #67 *+38
              1281 dc35  st   $35,[y,x++] 5596  st('BCC',     [Y,Xpp])          #68 *+39
              1282 dc72  st   $72,[y,x++] 5597  st('NE',      [Y,Xpp])          #69 *+40
              1283 8009  adda $09         5598  adda(46-2-35)                   #70 (AC -> *+44)
              1284 de00  st   [y,x++]     5599  st(           [Y,Xpp])          #71 *+41
              1285 dc5e  st   $5e,[y,x++] 5600  st('ST',      [Y,Xpp])          #72 *+42 Wrap to next ROM page
              1286 dc24  st   $24,[y,x++] 5601  st(sysArgs+0, [Y,Xpp])          #73 *+43
              1287 dc93  st   $93,[y,x++] 5602  st('INC',     [Y,Xpp])          #74 *+44
              1288 dc25  st   $25,[y,x++] 5603  st(sysArgs+1, [Y,Xpp])          #75 *+45
              1289 dc21  st   $21,[y,x++] 5604  st('LDW',     [Y,Xpp])          #76 *+46 Read next byte from ROM table
              128a dc24  st   $24,[y,x++] 5605  st(sysArgs+0, [Y,Xpp])          #77 *+47
              128b dc7f  st   $7f,[y,x++] 5606  st('LUP',     [Y,Xpp])          #78 *+48
              128c dc00  st   $00,[y,x++] 5607  st(0,         [Y,Xpp])          #79 *+49
              128d dc93  st   $93,[y,x++] 5608  st('INC',     [Y,Xpp])          #80 *+50 Increment read pointer
              128e dc24  st   $24,[y,x++] 5609  st(sysArgs+0, [Y,Xpp])          #81 *+51
              128f dcff  st   $ff,[y,x++] 5610  st('RET',     [Y,Xpp])          #82 *+52 Return
                                          5611  # Return to interpreter
              1290 1403  ld   $03,y       5612  ld(hi('REENTER'),Y)             #83
              1291 e0cb  jmp  y,$cb       5613  jmp(Y,'REENTER')                #84
              1292 00d4  ld   $d4         5614  ld(-88/2)                       #85
                                          5615
                                          5616  # SYS_VDrawBits_134 implementation
                                          5617  label('sys_VDrawBits')
sys_VDrawBits:
              1293 0000  ld   $00         5618  ld(0)                           #18
                                          5619  label('.sysVdb0')
.sysVdb0:     1294 c21d  st   [$1d]       5620  st([vTmp])                      #19+i*25
              1295 9529  adda [$29],y     5621  adda([sysArgs+5],Y)             #20+i*25 Y=[sysPos+1]+[vTmp]
              1296 0126  ld   [$26]       5622  ld([sysArgs+2])                 #21+i*25 Select color
              1297 e89a  blt  $129a       5623  bmi(pc()+3)                     #22+i*25
              1298 fc9b  bra  $129b       5624  bra(pc()+3)                     #23+i*25
              1299 0124  ld   [$24]       5625  ld([sysArgs+0])                 #24+i*25
              129a 0125  ld   [$25]       5626  ld([sysArgs+1])                 #24+i*25(!)
              129b ce00  st   [y,x]       5627  st([Y,X])                       #25+i*25 Draw pixel
              129c 0126  ld   [$26]       5628  ld([sysArgs+2])                 #26+i*25 Shift byte left
              129d 8200  adda ac          5629  adda(AC)                        #27+i*25
              129e c226  st   [$26]       5630  st([sysArgs+2])                 #28+i*25
              129f 011d  ld   [$1d]       5631  ld([vTmp])                      #29+i*25 Unrolled loop (once)
              12a0 8129  adda [$29]       5632  adda([sysArgs+5])               #31+i*25
              12a1 9401  adda $01,y       5633  adda(1,Y)                       #30+i*25 Y=[sysPos+1]+[vTmp]+1
              12a2 0126  ld   [$26]       5634  ld([sysArgs+2])                 #32+i*25 Select color
              12a3 e8a6  blt  $12a6       5635  bmi(pc()+3)                     #33+i*25
              12a4 fca7  bra  $12a7       5636  bra(pc()+3)                     #34+i*25
              12a5 0124  ld   [$24]       5637  ld([sysArgs+0])                 #35+i*25
              12a6 0125  ld   [$25]       5638  ld([sysArgs+1])                 #35+i*25(!)
              12a7 ce00  st   [y,x]       5639  st([Y,X])                       #36+i*25 Draw pixel
              12a8 0126  ld   [$26]       5640  ld([sysArgs+2])                 #37+i*25 Shift byte left
              12a9 8200  adda ac          5641  adda(AC)                        #38+i*25
              12aa c226  st   [$26]       5642  st([sysArgs+2])                 #39+i*25
              12ab 011d  ld   [$1d]       5643  ld([vTmp])                      #40+i*25 Loop counter
              12ac a006  suba $06         5644  suba(6)                         #41+i*25
              12ad ec94  bne  .sysVdb0    5645  bne('.sysVdb0')                 #42+i*25
              12ae 8008  adda $08         5646  adda(8)                         #43+i*25 Steps of 2
              12af 1403  ld   $03,y       5647  ld(hi('REENTER'),Y)             #119
              12b0 e0cb  jmp  y,$cb       5648  jmp(Y,'REENTER')                #120
              12b1 00c2  ld   $c2         5649  ld(-124/2)                      #121
                                          5650
                                          5651  # SYS_ResetWaveforms_v4_50 implementation
                                          5652  label('sys_ResetWaveforms')
sys_ResetWaveforms:
              12b2 0118  ld   [$18]       5653  ld([vAC+0])                     #18 X=4i
              12b3 8200  adda ac          5654  adda(AC)                        #19
              12b4 9200  adda ac,x        5655  adda(AC,X)                      #20
              12b5 0118  ld   [$18]       5656  ld([vAC+0])                     #21
              12b6 de00  st   [y,x++]     5657  st([Y,Xpp])                     #22 Sawtooth: T[4i+0] = i
              12b7 2020  anda $20         5658  anda(0x20)                      #23 Triangle: T[4i+1] = 2i if i<32 else 127-2i
              12b8 ecbb  bne  $12bb       5659  bne(pc()+3)                     #24
              12b9 0118  ld   [$18]       5660  ld([vAC+0])                     #25
              12ba fcbd  bra  $12bd       5661  bra(pc()+3)                     #26
              12bb 8118  adda [$18]       5662  adda([vAC+0])                   #26,27
              12bc 607f  xora $7f         5663  xora(127)                       #27
              12bd de00  st   [y,x++]     5664  st([Y,Xpp])                     #28
              12be 0118  ld   [$18]       5665  ld([vAC+0])                     #29 Pulse: T[4i+2] = 0 if i<32 else 63
              12bf 2020  anda $20         5666  anda(0x20)                      #30
              12c0 ecc3  bne  $12c3       5667  bne(pc()+3)                     #31
              12c1 fcc4  bra  $12c4       5668  bra(pc()+3)                     #32
              12c2 0000  ld   $00         5669  ld(0)                           #33
              12c3 003f  ld   $3f         5670  ld(63)                          #33(!)
              12c4 de00  st   [y,x++]     5671  st([Y,Xpp])                     #34
              12c5 0118  ld   [$18]       5672  ld([vAC+0])                     #35 Sawtooth: T[4i+3] = i
              12c6 ce00  st   [y,x]       5673  st([Y,X])                       #36
              12c7 8001  adda $01         5674  adda(1)                         #37 i += 1
              12c8 c218  st   [$18]       5675  st([vAC+0])                     #38
              12c9 6040  xora $40         5676  xora(64)                        #39 For 64 iterations
              12ca f0cd  beq  $12cd       5677  beq(pc()+3)                     #40
              12cb fcce  bra  $12ce       5678  bra(pc()+3)                     #41
              12cc 00fe  ld   $fe         5679  ld(-2)                          #42
              12cd 0000  ld   $00         5680  ld(0)                           #42(!)
              12ce 8116  adda [$16]       5681  adda([vPC])                     #43
              12cf c216  st   [$16]       5682  st([vPC])                       #44
              12d0 1403  ld   $03,y       5683  ld(hi('REENTER'),Y)             #45
              12d1 e0cb  jmp  y,$cb       5684  jmp(Y,'REENTER')                #46
              12d2 00e7  ld   $e7         5685  ld(-50/2)                       #47
                                          5686
                                          5687  # SYS_ShuffleNoise_v4_46 implementation
                                          5688  label('sys_ShuffleNoise')
sys_ShuffleNoise:
              12d3 1118  ld   [$18],x     5689  ld([vAC+0],X)                   #18 tmp = T[4j]
              12d4 0d00  ld   [y,x]       5690  ld([Y,X])                       #19
              12d5 c21d  st   [$1d]       5691  st([vTmp])                      #20
              12d6 1119  ld   [$19],x     5692  ld([vAC+1],X)                   #21 T[4j] = T[4i]
              12d7 0d00  ld   [y,x]       5693  ld([Y,X])                       #22
              12d8 1118  ld   [$18],x     5694  ld([vAC+0],X)                   #23
              12d9 ce00  st   [y,x]       5695  st([Y,X])                       #24
              12da 8200  adda ac          5696  adda(AC)                        #25 j += T[4i]
              12db 8200  adda ac          5697  adda(AC,)                       #26
              12dc 8118  adda [$18]       5698  adda([vAC+0])                   #27
              12dd c218  st   [$18]       5699  st([vAC+0])                     #28
              12de 1119  ld   [$19],x     5700  ld([vAC+1],X)                   #29 T[4i] = tmp
              12df 011d  ld   [$1d]       5701  ld([vTmp])                      #30
              12e0 ce00  st   [y,x]       5702  st([Y,X])                       #31
              12e1 0119  ld   [$19]       5703  ld([vAC+1])                     #32 i += 1
              12e2 8004  adda $04         5704  adda(4)                         #33
              12e3 c219  st   [$19]       5705  st([vAC+1])                     #34
              12e4 f0e7  beq  $12e7       5706  beq(pc()+3)                     #35 For 64 iterations
              12e5 fce8  bra  $12e8       5707  bra(pc()+3)                     #36
              12e6 00fe  ld   $fe         5708  ld(-2)                          #37
              12e7 0000  ld   $00         5709  ld(0)                           #37(!)
              12e8 8116  adda [$16]       5710  adda([vPC])                     #38
              12e9 c216  st   [$16]       5711  st([vPC])                       #39
              12ea 1403  ld   $03,y       5712  ld(hi('NEXTY'),Y)               #40
              12eb e000  jmp  y,$00       5713  jmp(Y,'NEXTY')                  #41
              12ec 00ea  ld   $ea         5714  ld(-44/2)                       #42
                                          5715
                                          5716  # SYS_LoadBytes_vX_XXX implementation
                                          5717  label('sys_LoadBytes')
sys_LoadBytes:
              12ed 0030  ld   $30         5718  ld(0x30)                        # Target address
              12ee c225  st   [$25]       5719  st([sysArgs+1])                 #
              12ef 011a  ld   [$1a]       5720  ld([vLR+0])                     # Source address
              12f0 d224  st   [$24],x     5721  st([sysArgs+0],X)               #
              12f1 0d00  ld   [y,x]       5722  ld([Y,X])                       # Byte count
                                          5723  label('.slb1')                  #
.slb1:        12f2 c226  st   [$26]       5724  st([sysArgs+2])                 #
                                          5725
              12f3 0124  ld   [$24]       5726  ld([sysArgs+0])                 # Advance source address
              12f4 8001  adda $01         5727  adda(1)                         #
              12f5 d224  st   [$24],x     5728  st([sysArgs+0],X)               #
                                          5729
              12f6 0d00  ld   [y,x]       5730  ld([Y,X])                       # Copy byte
              12f7 1125  ld   [$25],x     5731  ld([sysArgs+1],X)               #
              12f8 c600  st   [x]         5732  st([X])                         #
                                          5733
              12f9 0125  ld   [$25]       5734  ld([sysArgs+1])                 # Advance target address
              12fa 8001  adda $01         5735  adda(1)                         #
              12fb c225  st   [$25]       5736  st([sysArgs+1])                 #
                                          5737
              12fc 0126  ld   [$26]       5738  ld([sysArgs+2])                 # Decrement byte count and loop
              12fd ecf2  bne  .slb1       5739  bne('.slb1')                    #
              12fe a001  suba $01         5740  suba(1)                         #
                                          5741
                                          5742  # XXX Unfinished
                                          5743
                                          5744  fillers(until=0xff)
              12ff 0200  nop              5745  align(0x100, size=0x100)
                                          5746
                                          5747
                                          5748  #-----------------------------------------------------------------------
                                          5749  #       More SYS functions, (0x1300)
                                          5750  #-----------------------------------------------------------------------
                                          5751
                                          5752  # sys_Multiply_u8, res:u16 = x:u8 * y:u8
                                          5753  # sysArgs0,1=res, sysArgs2=x, sysArgs3=y, sysArgs4=count
                                          5754  label('SYS_Multiply_u8_vX_48')
SYS_Multiply_u8_vX_48:
              1300 0128  ld   [$28]       5755  ld([sysArgs+4])                 #15,
              1301 a001  suba $01         5756  suba(1)                         #16, count--
                                          5757  bge('.sys_multiply_u8_19')      #17,
              1302 f407  bge  .sys_multiply_u8_19
              1303 c228  st   [$28]       5758  st([sysArgs+4])                 #18,
              1304 1403  ld   $03,y       5759  ld(hi('REENTER'),Y)             #19,
              1305 e0cb  jmp  y,$cb       5760  jmp(Y,'REENTER')                #20,
              1306 00f4  ld   $f4         5761  ld(-24/2)                       #21,
                                          5762
                                          5763  label('.sys_multiply_u8_19')
.sys_multiply_u8_19:
              1307 0124  ld   [$24]       5764  ld([sysArgs+0])                 #19,
              1308 3080  anda $80,x       5765  anda(128,X)                     #20,
              1309 8124  adda [$24]       5766  adda([sysArgs+0])               #21,
              130a c224  st   [$24]       5767  st([sysArgs+0])                 #22,
              130b 0500  ld   [x]         5768  ld([X])                         #23,
              130c 8125  adda [$25]       5769  adda([sysArgs+1])               #24,
              130d 8125  adda [$25]       5770  adda([sysArgs+1])               #25,
              130e c225  st   [$25]       5771  st([sysArgs+1])                 #26, result <<1
              130f 0126  ld   [$26]       5772  ld([sysArgs+2])                 #27,
                                          5773  bmi('.sys_multiply_u8_30')      #28, if(x & 0x80)
              1310 e819  blt  .sys_multiply_u8_30
              1311 8126  adda [$26]       5774  adda([sysArgs+2])               #29,
              1312 c226  st   [$26]       5775  st([sysArgs+2])                 #30, x <<= 1
              1313 0116  ld   [$16]       5776  ld([vPC])                       #31,
              1314 a002  suba $02         5777  suba(2)                         #32,
              1315 c216  st   [$16]       5778  st([vPC])                       #33, restart
              1316 1403  ld   $03,y       5779  ld(hi('NEXTY'),Y)               #34,
              1317 e000  jmp  y,$00       5780  jmp(Y,'NEXTY')                  #35,
              1318 00ed  ld   $ed         5781  ld(-38/2)                       #36,
                                          5782
                                          5783  label('.sys_multiply_u8_30')
.sys_multiply_u8_30:
              1319 c226  st   [$26]       5784  st([sysArgs+2])                 #30, x <<= 1
              131a 0124  ld   [$24]       5785  ld([sysArgs+0])                 #31,
              131b 8127  adda [$27]       5786  adda([sysArgs+3])               #32,
              131c c224  st   [$24]       5787  st([sysArgs+0])                 #33, res.lo += y
                                          5788  bmi('.sys_multiply_u8_36')      #34, check carry
              131d e82a  blt  .sys_multiply_u8_36
              131e a127  suba [$27]       5789  suba([sysArgs+3])               #35, initial value of res.lo
              131f 4127  ora  [$27]       5790  ora([sysArgs+3])                #36, carry in bit 7
              1320 3080  anda $80,x       5791  anda(0x80,X)                    #37, move carry to bit 0
              1321 0500  ld   [x]         5792  ld([X])                         #38,
              1322 8125  adda [$25]       5793  adda([sysArgs+1])               #39,
              1323 c225  st   [$25]       5794  st([sysArgs+1])                 #40, res.hi += carry
              1324 0116  ld   [$16]       5795  ld([vPC])                       #41,
              1325 a002  suba $02         5796  suba(2)                         #42,
              1326 c216  st   [$16]       5797  st([vPC])                       #43, restart
              1327 1403  ld   $03,y       5798  ld(hi('NEXTY'),Y)               #44,
              1328 e000  jmp  y,$00       5799  jmp(Y,'NEXTY')                  #45,
              1329 00e8  ld   $e8         5800  ld(-48/2)                       #46,
                                          5801
                                          5802  label('.sys_multiply_u8_36')
.sys_multiply_u8_36:
              132a 2127  anda [$27]       5803  anda([sysArgs+3])               #36, carry in bit 7
              132b 3080  anda $80,x       5804  anda(0x80,X)                    #37, move carry to bit 0
              132c 0500  ld   [x]         5805  ld([X])                         #38,
              132d 8125  adda [$25]       5806  adda([sysArgs+1])               #39,
              132e c225  st   [$25]       5807  st([sysArgs+1])                 #40, res.hi += carry
              132f 0116  ld   [$16]       5808  ld([vPC])                       #41,
              1330 a002  suba $02         5809  suba(2)                         #42,
              1331 c216  st   [$16]       5810  st([vPC])                       #43, restart
              1332 1403  ld   $03,y       5811  ld(hi('NEXTY'),Y)               #44,
              1333 e000  jmp  y,$00       5812  jmp(Y,'NEXTY')                  #45,
              1334 00e8  ld   $e8         5813  ld(-48/2)                       #46,
                                          5814
                                          5815  # leave some soom for updates
              1335 0200  nop              5816  fillers(until=0x40)
              1336 0200  nop
              1337 0200  nop
              * 11 times
                                          5817
                                          5818
                                          5819  # sys_OffsetVTableY, sysArgs0 = scanline:8, sysArgs1 = scanCount:8, sysArgs2,3 = videoTable:16
                                          5820  label('SYS_OffsetVTableY_vX_36')
SYS_OffsetVTableY_vX_36:
              1340 0124  ld   [$24]       5821  ld([sysArgs+0])                 #15, scanline
              1341 1126  ld   [$26],x     5822  ld([sysArgs+2],X)               #16,
              1342 1527  ld   [$27],y     5823  ld([sysArgs+3],Y)               #17,
              1343 ce00  st   [y,x]       5824  st([Y,X])                       #18, [videoTable] = scanline
              1344 8001  adda $01         5825  adda(1)                         #19,
              1345 c224  st   [$24]       5826  st([sysArgs+0])                 #20, scanline++
              1346 0126  ld   [$26]       5827  ld([sysArgs+2])                 #21,
              1347 8002  adda $02         5828  adda(2)                         #22,
              1348 c226  st   [$26]       5829  st([sysArgs+2])                 #23, videoTable += 2
              1349 0125  ld   [$25]       5830  ld([sysArgs+1])                 #24,
              134a a001  suba $01         5831  suba(1)                         #25,
                                          5832  beq('.sys_offsetvty_28')        #26,
              134b f053  beq  .sys_offsetvty_28
              134c c225  st   [$25]       5833  st([sysArgs+1])                 #27, scanCount--
              134d 0116  ld   [$16]       5834  ld([vPC])                       #28,
              134e a002  suba $02         5835  suba(2)                         #29,
              134f c216  st   [$16]       5836  st([vPC])                       #30, restart
              1350 1403  ld   $03,y       5837  ld(hi('REENTER'),Y)             #31,
              1351 e0cb  jmp  y,$cb       5838  jmp(Y,'REENTER')                #32,
              1352 00ee  ld   $ee         5839  ld(-36/2)                       #33,
                                          5840  label('.sys_offsetvty_28')
.sys_offsetvty_28:
              1353 1403  ld   $03,y       5841  ld(hi('NEXTY'),Y)               #28,
              1354 e000  jmp  y,$00       5842  jmp(Y,'NEXTY')                  #29,
              1355 00f0  ld   $f0         5843  ld(-32/2)                       #30,
                                          5844
                                          5845  # leave some soom for updates
              1356 0200  nop              5846  fillers(until=0x60)
              1357 0200  nop
              1358 0200  nop
              * 10 times
                                          5847
                                          5848
                                          5849  # sys_FillByteSeq, sysArgs0,1=dst, sysArg2=start, sysArg3=step, sysArg4=count
                                          5850  label('SYS_FillByteSeq_vX_36')
SYS_FillByteSeq_vX_36:
              1360 1525  ld   [$25],y     5851  ld([sysArgs+1],Y)               #15 dst pointer
              1361 1124  ld   [$24],x     5852  ld([sysArgs+0],X)               #16,
              1362 0124  ld   [$24]       5853  ld([sysArgs+0])                 #17,
              1363 8001  adda $01         5854  adda(1)                         #18,
              1364 c224  st   [$24]       5855  st([sysArgs+0])                 #19, dst++
              1365 0126  ld   [$26]       5856  ld([sysArgs+2])                 #20,
              1366 ce00  st   [y,x]       5857  st([Y,X])                       #21, start
              1367 8127  adda [$27]       5858  adda([sysArgs+3])               #22,
              1368 c226  st   [$26]       5859  st([sysArgs+2])                 #23, start += step
              1369 0128  ld   [$28]       5860  ld([sysArgs+4])                 #24,
              136a a001  suba $01         5861  suba(1)                         #25,
                                          5862  beq('.sys_fillbyteseq_28')      #26,
              136b f073  beq  .sys_fillbyteseq_28
              136c c228  st   [$28]       5863  st([sysArgs+4])                 #27,
              136d 0116  ld   [$16]       5864  ld([vPC])                       #28,
              136e a002  suba $02         5865  suba(2)                         #29,
              136f c216  st   [$16]       5866  st([vPC])                       #30, restart
              1370 1403  ld   $03,y       5867  ld(hi('REENTER'),Y)             #31,
              1371 e0cb  jmp  y,$cb       5868  jmp(Y,'REENTER')                #32,
              1372 00ee  ld   $ee         5869  ld(-36/2)                       #33,
                                          5870  label('.sys_fillbyteseq_28')
.sys_fillbyteseq_28:
              1373 1403  ld   $03,y       5871  ld(hi('NEXTY'),Y)               #28,
              1374 e000  jmp  y,$00       5872  jmp(Y,'NEXTY')                  #29,
              1375 00f0  ld   $f0         5873  ld(-32/2)                       #30,
                                          5874
                                          5875  # leave some soom for updates
              1376 0200  nop              5876  fillers(until=0x80)
              1377 0200  nop
              1378 0200  nop
              * 10 times
                                          5877
                                          5878
                                          5879  # sys_AddInt8Array, sysArgs0,1=src, sysArgs2,3=dst, sysArgs4=index, sysArgs5=count, dst(i) += src(i)
                                          5880  label('SYS_AddInt8Array_vX_40')
SYS_AddInt8Array_vX_40:
              1380 0124  ld   [$24]       5881  ld([sysArgs+0])                 #15,
              1381 9128  adda [$28],x     5882  adda([sysArgs+4],X)             #16,
              1382 1525  ld   [$25],y     5883  ld([sysArgs+1],Y)               #17,
              1383 0d00  ld   [y,x]       5884  ld([Y,X])                       #18,
              1384 c21d  st   [$1d]       5885  st([vTmp])                      #19
              1385 0126  ld   [$26]       5886  ld([sysArgs+2])                 #20,
              1386 9128  adda [$28],x     5887  adda([sysArgs+4],X)             #21,
              1387 1527  ld   [$27],y     5888  ld([sysArgs+3],Y)               #22,
              1388 011d  ld   [$1d]       5889  ld([vTmp])                      #23
              1389 8d00  adda [y,x]       5890  adda([Y,X])                     #24,
              138a ce00  st   [y,x]       5891  st([Y,X])                       #25,
              138b 0129  ld   [$29]       5892  ld([sysArgs+5])                 #26,
              138c a001  suba $01         5893  suba(1)                         #27,
                                          5894  beq('.sys_addint8Array_30')     #28,
              138d f098  beq  .sys_addint8Array_30
              138e c229  st   [$29]       5895  st([sysArgs+5])                 #29,
              138f 0128  ld   [$28]       5896  ld([sysArgs+4])                 #30,
              1390 8001  adda $01         5897  adda(1)                         #31,
              1391 c228  st   [$28]       5898  st([sysArgs+4])                 #32, index++
              1392 0116  ld   [$16]       5899  ld([vPC])                       #33,
              1393 a002  suba $02         5900  suba(2)                         #34,
              1394 c216  st   [$16]       5901  st([vPC])                       #35,
              1395 1403  ld   $03,y       5902  ld(hi('NEXTY'),Y)               #36,
              1396 e000  jmp  y,$00       5903  jmp(Y,'NEXTY')                  #37,
              1397 00ec  ld   $ec         5904  ld(-40/2)                       #38,
                                          5905  label('.sys_addint8Array_30')
.sys_addint8Array_30:
              1398 1403  ld   $03,y       5906  ld(hi('NEXTY'),Y)               #30,
              1399 e000  jmp  y,$00       5907  jmp(Y,'NEXTY')                  #31,
              139a 00ef  ld   $ef         5908  ld(-34/2)                       #32,
                                          5909
                                          5910  # leave some soom for updates
              139b 0200  nop              5911  fillers(until=0xa0)
              139c 0200  nop
              139d 0200  nop
              * 5 times
                                          5912
                                          5913
                                          5914  # sys_ParityFill, sysArgs0,1=borderColour:fillColour, sysArgs2,3=X:Y start address
                                          5915  #                 sysArgs4=countXY, sysArgs6=fill toggle, sysArgs7=replace colour
                                          5916  label('SYS_ParityFill_vX_44')
SYS_ParityFill_vX_44:
              13a0 1527  ld   [$27],y     5917  ld([sysArgs+3],Y)               #15,
              13a1 1126  ld   [$26],x     5918  ld([sysArgs+2],X)               #16,
              13a2 0126  ld   [$26]       5919  ld([sysArgs+2])                 #17,
              13a3 8001  adda $01         5920  adda(1)                         #18,
              13a4 c226  st   [$26]       5921  st([sysArgs+2])                 #19, x++
              13a5 0128  ld   [$28]       5922  ld([sysArgs+4])                 #20,
              13a6 a001  suba $01         5923  suba(1)                         #21, countX--
                                          5924  bge('.sys_parityfill_24')       #22,
              13a7 f4be  bge  .sys_parityfill_24
              13a8 c228  st   [$28]       5925  st([sysArgs+4])                 #23,
              13a9 0127  ld   [$27]       5926  ld([sysArgs+3])                 #24,
              13aa 8001  adda $01         5927  adda(1)                         #25,
              13ab c227  st   [$27]       5928  st([sysArgs+3])                 #26, y++
              13ac 0129  ld   [$29]       5929  ld([sysArgs+5])                 #27,
              13ad a001  suba $01         5930  suba(1)                         #28, countY--
              13ae c229  st   [$29]       5931  st([sysArgs+5])                 #29,
                                          5932  bne('.sys_parityfill_32')       #30,
              13af ecb3  bne  .sys_parityfill_32
              13b0 1403  ld   $03,y       5933  ld(hi('REENTER'),Y)             #31,
              13b1 e0cb  jmp  y,$cb       5934  jmp(Y,'REENTER')                #32,
              13b2 00ee  ld   $ee         5935  ld(-36/2)                       #33,
                                          5936  label('.sys_parityfill_32')
.sys_parityfill_32:
              13b3 0182  ld   [$82]       5937  ld([0x82])                      #32,
              13b4 c226  st   [$26]       5938  st([sysArgs+2])                 #33, restore x
              13b5 0183  ld   [$83]       5939  ld([0x83])                      #34,
              13b6 c228  st   [$28]       5940  st([sysArgs+4])                 #35, restore countX
              13b7 0184  ld   [$84]       5941  ld([0x84])                      #36,
              13b8 c22a  st   [$2a]       5942  st([sysArgs+6])                 #37, restore fill toggle
              13b9 0116  ld   [$16]       5943  ld([vPC])                       #38,
              13ba a002  suba $02         5944  suba(2)                         #39,
              13bb c216  st   [$16]       5945  st([vPC])                       #40, restart
              13bc e000  jmp  y,$00       5946  jmp(Y,'NEXTY')                  #41,
              13bd 00ea  ld   $ea         5947  ld(-44/2)                       #42,
                                          5948
                                          5949  label('.sys_parityfill_24')
.sys_parityfill_24:
              13be 012a  ld   [$2a]       5950  ld([sysArgs+6])                 #24, check fill toggle
                                          5951  bne('.sys_parityfill_27')       #25,
              13bf ecc9  bne  .sys_parityfill_27
              13c0 0d00  ld   [y,x]       5952  ld([Y,X])                       #26, get pixel
              13c1 6124  xora [$24]       5953  xora([sysArgs+0])               #27, check border colour
                                          5954  beq('.sys_parityfill_30')       #28,
              13c2 f0d8  beq  .sys_parityfill_30
              13c3 0116  ld   [$16]       5955  ld([vPC])                       #29,
              13c4 a002  suba $02         5956  suba(2)                         #30,
              13c5 c216  st   [$16]       5957  st([vPC])                       #31, restart
              13c6 1403  ld   $03,y       5958  ld(hi('NEXTY'),Y)               #32,
              13c7 e000  jmp  y,$00       5959  jmp(Y,'NEXTY')                  #33,
              13c8 00ee  ld   $ee         5960  ld(-36/2)                       #34,
                                          5961
                                          5962  label('.sys_parityfill_27')
.sys_parityfill_27:
              13c9 6124  xora [$24]       5963  xora([sysArgs+0])               #27, check border colour
                                          5964  beq('.sys_parityfill_30')       #28,
              13ca f0d8  beq  .sys_parityfill_30
              13cb 0d00  ld   [y,x]       5965  ld([Y,X])                       #29, get pixel
              13cc 612b  xora [$2b]       5966  xora([sysArgs+7])               #30, check replace colour
              13cd ecd0  bne  $13d0       5967  bne(pc()+3)                     #31, ignore replace colour
              13ce fcd1  bra  $13d1       5968  bra(pc()+3)                     #32,
              13cf 0125  ld   [$25]       5969  ld([sysArgs+1])                 #33, fill colour
              13d0 0d00  ld   [y,x]       5970  ld([Y,X])                       #33! get pixel
              13d1 ce00  st   [y,x]       5971  st([Y,X])                       #34, set pixel
              13d2 0116  ld   [$16]       5972  ld([vPC])                       #35,
              13d3 a002  suba $02         5973  suba(2)                         #36,
              13d4 c216  st   [$16]       5974  st([vPC])                       #37, restart
              13d5 1403  ld   $03,y       5975  ld(hi('NEXTY'),Y)               #38,
              13d6 e000  jmp  y,$00       5976  jmp(Y,'NEXTY')                  #39,
              13d7 00eb  ld   $eb         5977  ld(-42/2)                       #40,
                                          5978
                                          5979  label('.sys_parityfill_30')
.sys_parityfill_30:
              13d8 012a  ld   [$2a]       5980  ld([sysArgs+6])                 #30,
              13d9 6001  xora $01         5981  xora(0x01)                      #31,
              13da c22a  st   [$2a]       5982  st([sysArgs+6])                 #32, toggle fill
              13db 0116  ld   [$16]       5983  ld([vPC])                       #33,
              13dc a002  suba $02         5984  suba(2)                         #34,
              13dd c216  st   [$16]       5985  st([vPC])                       #35, restart
              13de 1403  ld   $03,y       5986  ld(hi('NEXTY'),Y)               #36,
              13df e000  jmp  y,$00       5987  jmp(Y,'NEXTY')                  #37,
              13e0 00ec  ld   $ec         5988  ld(-40/2)                       #38,
                                          5989
                                          5990
              13e1 0200  nop              5991  fillers(until=0xff)
              13e2 0200  nop
              13e3 0200  nop
              * 30 times
              13ff 0200  nop              5992  align(0x100, size=0x100)
                                          5993
                                          5994  #-----------------------------------------------------------------------
                                          5995  #       More vCPU instruction implementations, (0x1400)
                                          5996  #-----------------------------------------------------------------------
                                          5997
                                          5998  # JGT implementation
                                          5999  label('jgt#13')
jgt#13:       1400 0119  ld   [$19]       6000  ld([vAC+1])                     #13
              1401 e80a  blt  .jgt#16     6001  blt('.jgt#16')                  #14 if vAC.hi < 0
              1402 4118  ora  [$18]       6002  ora([vAC])                      #15
              1403 ec10  bne  .jgt#18     6003  bne('.jgt#18')                  #16 if (vAC.hi OR vAC.lo) != 0
              1404 0116  ld   [$16]       6004  ld([vPC])                       #17
              1405 8001  adda $01         6005  adda(1)                         #18
              1406 c216  st   [$16]       6006  st([vPC])                       #19
              1407 1403  ld   $03,y       6007  ld(hi('NEXTY'),Y)               #20
              1408 e000  jmp  y,$00       6008  jmp(Y,'NEXTY')                  #21
              1409 00f4  ld   $f4         6009  ld(-24/2)                       #22
                                          6010  label('.jgt#16')
.jgt#16:      140a 0116  ld   [$16]       6011  ld([vPC])                       #16
              140b 8001  adda $01         6012  adda(1)                         #17
              140c c216  st   [$16]       6013  st([vPC])                       #18
              140d 1403  ld   $03,y       6014  ld(hi('REENTER'),Y)             #19
              140e e0cb  jmp  y,$cb       6015  jmp(Y,'REENTER')                #20
              140f 00f4  ld   $f4         6016  ld(-24/2)                       #21
                                          6017  label('.jgt#18')
.jgt#18:      1410 1517  ld   [$17],y     6018  ld([vPC+1],Y)                   #18 vPC.hi
              1411 0d00  ld   [y,x]       6019  ld([Y,X])                       #19 address of branch destination
              1412 c216  st   [$16]       6020  st([vPC])                       #20
              1413 de00  st   [y,x++]     6021  st([Y,Xpp])                     #21
              1414 0d00  ld   [y,x]       6022  ld([Y,X])                       #22 hi address of jump destination
              1415 c217  st   [$17]       6023  st([vPC+1])                     #23
              1416 1403  ld   $03,y       6024  ld(hi('NEXTY'),Y)               #24
              1417 e000  jmp  y,$00       6025  jmp(Y,'NEXTY')                  #25
              1418 00f2  ld   $f2         6026  ld(-28/2)                       #26
                                          6027
                                          6028  # JLE implementation
                                          6029  label('jle#13')
jle#13:       1419 0119  ld   [$19]       6030  ld([vAC+1])                     #13
              141a e827  blt  .jle#16     6031  blt('.jle#16')                  #14 if vAC.hi < 0
              141b 4118  ora  [$18]       6032  ora([vAC])                      #15
              141c ec30  bne  .jle#18     6033  bne('.jle#18')                  #16 if (vAC.hi OR vAC.lo) != 0
              141d 0116  ld   [$16]       6034  ld([vPC])                       #17
              141e 1517  ld   [$17],y     6035  ld([vPC+1],Y)                   #18 vPC.hi
              141f 0d00  ld   [y,x]       6036  ld([Y,X])                       #19 address of branch destination
              1420 c216  st   [$16]       6037  st([vPC])                       #20
              1421 de00  st   [y,x++]     6038  st([Y,Xpp])                     #21
              1422 0d00  ld   [y,x]       6039  ld([Y,X])                       #22 hi address of jump destination
              1423 c217  st   [$17]       6040  st([vPC+1])                     #23
              1424 1403  ld   $03,y       6041  ld(hi('NEXTY'),Y)               #24
              1425 e000  jmp  y,$00       6042  jmp(Y,'NEXTY')                  #25
              1426 00f2  ld   $f2         6043  ld(-28/2)                       #26
                                          6044  label('.jle#16')
.jle#16:      1427 1517  ld   [$17],y     6045  ld([vPC+1],Y)                   #16 vPC.hi
              1428 0d00  ld   [y,x]       6046  ld([Y,X])                       #17 address of branch destination
              1429 c216  st   [$16]       6047  st([vPC])                       #18
              142a de00  st   [y,x++]     6048  st([Y,Xpp])                     #19
              142b 0d00  ld   [y,x]       6049  ld([Y,X])                       #20 hi address of jump destination
              142c c217  st   [$17]       6050  st([vPC+1])                     #21
              142d 1403  ld   $03,y       6051  ld(hi('NEXTY'),Y)               #22
              142e e000  jmp  y,$00       6052  jmp(Y,'NEXTY')                  #23
              142f 00f3  ld   $f3         6053  ld(-26/2)                       #24
                                          6054  label('.jle#18')
.jle#18:      1430 8001  adda $01         6055  adda(1)                         #18
              1431 c216  st   [$16]       6056  st([vPC])                       #19
              1432 1403  ld   $03,y       6057  ld(hi('NEXTY'),Y)               #20
              1433 e000  jmp  y,$00       6058  jmp(Y,'NEXTY')                  #21
              1434 00f4  ld   $f4         6059  ld(-24/2)                       #22
                                          6060
                                          6061  # JGE implementation
                                          6062  label('jge#13')
jge#13:       1435 0119  ld   [$19]       6063  ld([vAC+1])                     #13
              1436 e841  blt  .jge#16     6064  blt('.jge#16')                  #14 if vAC.hi < 0
              1437 0116  ld   [$16]       6065  ld([vPC])                       #15
              1438 1517  ld   [$17],y     6066  ld([vPC+1],Y)                   #16 vPC.hi
              1439 0d00  ld   [y,x]       6067  ld([Y,X])                       #17 address of branch destination
              143a c216  st   [$16]       6068  st([vPC])                       #18
              143b de00  st   [y,x++]     6069  st([Y,Xpp])                     #19
              143c 0d00  ld   [y,x]       6070  ld([Y,X])                       #20 hi address of jump destination
              143d c217  st   [$17]       6071  st([vPC+1])                     #21
              143e 1403  ld   $03,y       6072  ld(hi('NEXTY'),Y)               #22
              143f e000  jmp  y,$00       6073  jmp(Y,'NEXTY')                  #23
              1440 00f3  ld   $f3         6074  ld(-26/2)                       #24
                                          6075  label('.jge#16')
.jge#16:      1441 8001  adda $01         6076  adda(1)                         #16
              1442 c216  st   [$16]       6077  st([vPC])                       #17
              1443 1403  ld   $03,y       6078  ld(hi('NEXTY'),Y)               #18
              1444 e000  jmp  y,$00       6079  jmp(Y,'NEXTY')                  #19
              1445 00f5  ld   $f5         6080  ld(-22/2)                       #20
                                          6081
                                          6082  # PEEKA+ implementation
                                          6083  label('peeka+#13')
peeka+#13:    1446 c21d  st   [$1d]       6084  st([vTmp])                      #13
              1447 1519  ld   [$19],y     6085  ld([vAC+1],Y)                   #14
              1448 0118  ld   [$18]       6086  ld([vAC])                       #15
              1449 1200  ld   ac,x        6087  ld(AC,X)                        #16
              144a 8001  adda $01         6088  adda(1)                         #17
              144b c218  st   [$18]       6089  st([vAC])                       #18
              144c f053  beq  .peeka+#21  6090  beq('.peeka+#21')               #19 if low byte is 0x00
              144d 0d00  ld   [y,x]       6091  ld([Y,X])                       #20 peek [vAC]
              144e 111d  ld   [$1d],x     6092  ld([vTmp],X)                    #21 dst var
              144f c600  st   [x]         6093  st([X])                         #22 dst = peek [vAC]
              1450 1403  ld   $03,y       6094  ld(hi('REENTER'),Y)             #23
              1451 e0cb  jmp  y,$cb       6095  jmp(Y,'REENTER')                #24
              1452 00f2  ld   $f2         6096  ld(-28/2)                       #25
                                          6097  label('.peeka+#21')
.peeka+#21:   1453 111d  ld   [$1d],x     6098  ld([vTmp],X)                    #21 dst var
              1454 c600  st   [x]         6099  st([X])                         #22 dst = peek [vAC]
              1455 0119  ld   [$19]       6100  ld([vAC+1])                     #23
              1456 8001  adda $01         6101  adda(1)                         #24
              1457 c219  st   [$19]       6102  st([vAC+1])                     #25
              1458 1403  ld   $03,y       6103  ld(hi('NEXTY'),Y)               #26
              1459 e000  jmp  y,$00       6104  jmp(Y,'NEXTY')                  #27
              145a 00f1  ld   $f1         6105  ld(-30/2)                       #28
                                          6106
                                          6107  # ADDVW implementation
                                          6108  label('addvw#13')
addvw#13:     145b 1517  ld   [$17],y     6109  ld([vPC+1],Y)                   #13 vPC.hi
              145c c22a  st   [$2a]       6110  st([sysArgs+6])                 #14 src var addr
              145d de00  st   [y,x++]     6111  st([Y,Xpp])                     #15 X++
              145e 00f4  ld   $f4         6112  ld(min(0,maxTicks-54/2))        #16
              145f 8115  adda [$15]       6113  adda([vTicks])                  #17
              1460 e89e  blt  .addvw#20   6114  blt('.addvw#20')                #18 not enough time left, so retry
              1461 0d00  ld   [y,x]       6115  ld([Y,X])                       #19
              1462 c22b  st   [$2b]       6116  st([sysArgs+7])                 #20 dst var addr
              1463 1400  ld   $00,y       6117  ld(0,Y)                         #21
              1464 112a  ld   [$2a],x     6118  ld([sysArgs+6],X)               #22
              1465 0500  ld   [x]         6119  ld([X])                         #23 src low value
              1466 c218  st   [$18]       6120  st([vAC])                       #24
              1467 de00  st   [y,x++]     6121  st([Y,Xpp])                     #25 X++
              1468 0500  ld   [x]         6122  ld([X])                         #26 src hi value
              1469 c219  st   [$19]       6123  st([vAC+1])                     #27
              146a 112b  ld   [$2b],x     6124  ld([sysArgs+7],X)               #28
              146b 0118  ld   [$18]       6125  ld([vAC])                       #29 Low byte
              146c c21d  st   [$1d]       6126  st([vTmp])                      #30
              146d 8500  adda [x]         6127  adda([X])                       #31
              146e c218  st   [$18]       6128  st([vAC])                       #32 vAC.lo = low result
              146f e881  blt  .addvw#35   6129  bmi('.addvw#35')                #33 Now figure out if there was a carry
              1470 0500  ld   [x]         6130  ld([X])                         #34
              1471 de00  st   [y,x++]     6131  st([Y,Xpp])                     #35
              1472 411d  ora  [$1d]       6132  ora([vTmp])                     #36
              1473 e891  blt  .addvw#39   6133  bmi('.addvw#39')                #37 If Carry == 1
              1474 0500  ld   [x]         6134  ld([X])                         #38
              1475 8119  adda [$19]       6135  adda([vAC+1])                   #39
              1476 c219  st   [$19]       6136  st([vAC+1])                     #40 vAC.hi = high result
              1477 c600  st   [x]         6137  st([X])                         #41 dst.hi = high result
              1478 112b  ld   [$2b],x     6138  ld([sysArgs+7],X)               #42
              1479 0118  ld   [$18]       6139  ld([vAC])                       #43
              147a c600  st   [x]         6140  st([X])                         #44 dst.lo = low result
              147b 0116  ld   [$16]       6141  ld([vPC])                       #45
              147c 8001  adda $01         6142  adda(1)                         #46
              147d c216  st   [$16]       6143  st([vPC])                       #47
              147e 1403  ld   $03,y       6144  ld(hi('NEXTY'),Y)               #48
              147f e000  jmp  y,$00       6145  jmp(Y,'NEXTY')                  #49
              1480 00e6  ld   $e6         6146  ld(-52/2)                       #50
                                          6147
                                          6148  label('.addvw#35')
.addvw#35:    1481 de00  st   [y,x++]     6149  st([Y,Xpp])                     #35
              1482 211d  anda [$1d]       6150  anda([vTmp])                    #36
              1483 e891  blt  .addvw#39   6151  bmi('.addvw#39')                #37 If Carry == 1
              1484 0500  ld   [x]         6152  ld([X])                         #38
              1485 8119  adda [$19]       6153  adda([vAC+1])                   #39
              1486 c219  st   [$19]       6154  st([vAC+1])                     #40 vAC.hi = high result
              1487 c600  st   [x]         6155  st([X])                         #41 dst.hi = high result
              1488 112b  ld   [$2b],x     6156  ld([sysArgs+7],X)               #42
              1489 0118  ld   [$18]       6157  ld([vAC])                       #43
              148a c600  st   [x]         6158  st([X])                         #44 dst.lo = low result
              148b 0116  ld   [$16]       6159  ld([vPC])                       #45
              148c 8001  adda $01         6160  adda(1)                         #46
              148d c216  st   [$16]       6161  st([vPC])                       #47
              148e 1403  ld   $03,y       6162  ld(hi('NEXTY'),Y)               #48
              148f e000  jmp  y,$00       6163  jmp(Y,'NEXTY')                  #49
              1490 00e6  ld   $e6         6164  ld(-52/2)                       #50
                                          6165
                                          6166  label('.addvw#39')
.addvw#39:    1491 8001  adda $01         6167  adda(1)                         #39
              1492 8119  adda [$19]       6168  adda([vAC+1])                   #40
              1493 c219  st   [$19]       6169  st([vAC+1])                     #41 vAC.hi = high result
              1494 c600  st   [x]         6170  st([X])                         #42 dst.hi = high result
              1495 112b  ld   [$2b],x     6171  ld([sysArgs+7],X)               #43
              1496 0118  ld   [$18]       6172  ld([vAC])                       #44
              1497 c600  st   [x]         6173  st([X])                         #45 dst.lo = low result
              1498 0116  ld   [$16]       6174  ld([vPC])                       #46
              1499 8001  adda $01         6175  adda(1)                         #47
              149a c216  st   [$16]       6176  st([vPC])                       #48
              149b 1403  ld   $03,y       6177  ld(hi('REENTER'),Y)             #49
              149c e0cb  jmp  y,$cb       6178  jmp(Y,'REENTER')                #50
              149d 00e5  ld   $e5         6179  ld(-54/2)                       #51
                                          6180
                                          6181  label('.addvw#20')
.addvw#20:    149e 0116  ld   [$16]       6182  ld([vPC])                       #20 retry instruction
              149f a002  suba $02         6183  suba(2)                         #21
              14a0 c216  st   [$16]       6184  st([vPC])                       #22
              14a1 1403  ld   $03,y       6185  ld(hi('REENTER'),Y)             #23
              14a2 e0cb  jmp  y,$cb       6186  jmp(Y,'REENTER')                #24
              14a3 00f2  ld   $f2         6187  ld(-28/2)                       #25
                                          6188
                                          6189
                                          6190  # SUBVW implementation
                                          6191  label('subvw#13')
subvw#13:     14a4 1517  ld   [$17],y     6192  ld([vPC+1],Y)                   #13 vPC.hi
              14a5 c22a  st   [$2a]       6193  st([sysArgs+6])                 #14 src var addr
              14a6 de00  st   [y,x++]     6194  st([Y,Xpp])                     #15 X++
              14a7 8001  adda $01         6195  adda(1)                         #16
              14a8 c21d  st   [$1d]       6196  st([vTmp])                      #17 src var high addr
              14a9 00f4  ld   $f4         6197  ld(min(0,maxTicks-54/2))        #18
              14aa 8115  adda [$15]       6198  adda([vTicks])                  #19
              14ab e8df  blt  .subvw#22   6199  blt('.subvw#22')                #20 not enough time left, so retry
              14ac 0d00  ld   [y,x]       6200  ld([Y,X])                       #21
              14ad c22b  st   [$2b]       6201  st([sysArgs+7])                 #22 dst var addr
              14ae 1400  ld   $00,y       6202  ld(0,Y)                         #23
              14af 112b  ld   [$2b],x     6203  ld([sysArgs+7],X)               #24
              14b0 0500  ld   [x]         6204  ld([X])                         #25 dst low value
              14b1 c218  st   [$18]       6205  st([vAC])                       #26
              14b2 de00  st   [y,x++]     6206  st([Y,Xpp])                     #27 X++
              14b3 0500  ld   [x]         6207  ld([X])                         #28 dst hi value
              14b4 c219  st   [$19]       6208  st([vAC+1])                     #29
              14b5 112a  ld   [$2a],x     6209  ld([sysArgs+6],X)               #30
              14b6 0118  ld   [$18]       6210  ld([vAC])                       #31 Low byte
              14b7 e8cc  blt  .subvw#34   6211  bmi('.subvw#34')                #32
              14b8 a500  suba [x]         6212  suba([X])                       #33
              14b9 c218  st   [$18]       6213  st([vAC])                       #34 Store low result
              14ba 4500  ora  [x]         6214  ora([X])                        #35 Carry in bit 7
              14bb 3080  anda $80,x       6215  anda(0x80,X)                    #36 Move carry to bit 0
              14bc 0119  ld   [$19]       6216  ld([vAC+1])                     #37
              14bd a500  suba [x]         6217  suba([X])                       #38
              14be 111d  ld   [$1d],x     6218  ld([vTmp],X)                    #39
              14bf a500  suba [x]         6219  suba([X])                       #40
              14c0 c219  st   [$19]       6220  st([vAC+1])                     #41
              14c1 112b  ld   [$2b],x     6221  ld([sysArgs+7],X)               #42
              14c2 0118  ld   [$18]       6222  ld([vAC])                       #43
              14c3 de00  st   [y,x++]     6223  st([Y,Xpp])                     #44
              14c4 0119  ld   [$19]       6224  ld([vAC+1])                     #45
              14c5 c600  st   [x]         6225  st([X])                         #46
              14c6 0116  ld   [$16]       6226  ld([vPC])                       #47
              14c7 8001  adda $01         6227  adda(1)                         #48
              14c8 c216  st   [$16]       6228  st([vPC])                       #49
              14c9 1403  ld   $03,y       6229  ld(hi('NEXTY'),Y)               #50
              14ca e000  jmp  y,$00       6230  jmp(Y,'NEXTY')                  #51
              14cb 00e5  ld   $e5         6231  ld(-54/2)                       #52
                                          6232
                                          6233  label('.subvw#34')
.subvw#34:    14cc c218  st   [$18]       6234  st([vAC])                       #34 Store low result
              14cd 2500  anda [x]         6235  anda([X])                       #35 Carry in bit 7
              14ce 3080  anda $80,x       6236  anda(0x80,X)                    #36 Move carry to bit 0
              14cf 0119  ld   [$19]       6237  ld([vAC+1])                     #37
              14d0 a500  suba [x]         6238  suba([X])                       #38
              14d1 111d  ld   [$1d],x     6239  ld([vTmp],X)                    #39
              14d2 a500  suba [x]         6240  suba([X])                       #40
              14d3 c219  st   [$19]       6241  st([vAC+1])                     #41
              14d4 112b  ld   [$2b],x     6242  ld([sysArgs+7],X)               #42
              14d5 0118  ld   [$18]       6243  ld([vAC])                       #43
              14d6 de00  st   [y,x++]     6244  st([Y,Xpp])                     #44
              14d7 0119  ld   [$19]       6245  ld([vAC+1])                     #45
              14d8 c600  st   [x]         6246  st([X])                         #46
              14d9 0116  ld   [$16]       6247  ld([vPC])                       #47
              14da 8001  adda $01         6248  adda(1)                         #48
              14db c216  st   [$16]       6249  st([vPC])                       #49
              14dc 1403  ld   $03,y       6250  ld(hi('NEXTY'),Y)               #50
              14dd e000  jmp  y,$00       6251  jmp(Y,'NEXTY')                  #51
              14de 00e5  ld   $e5         6252  ld(-54/2)                       #52
                                          6253
                                          6254  label('.subvw#22')
.subvw#22:    14df 0116  ld   [$16]       6255  ld([vPC])                       #22 retry instruction
              14e0 a002  suba $02         6256  suba(2)                         #23
              14e1 c216  st   [$16]       6257  st([vPC])                       #24
              14e2 1403  ld   $03,y       6258  ld(hi('REENTER'),Y)             #25
              14e3 e0cb  jmp  y,$cb       6259  jmp(Y,'REENTER')                #26
              14e4 00f1  ld   $f1         6260  ld(-30/2)                       #27
                                          6261
                                          6262
                                          6263  # PREFX3 implementation
                                          6264  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2099#p2099
                                          6265  label('prefx3#13')
prefx3#13:    14e5 0116  ld   [$16]       6266  ld([vPC])                       #13
              14e6 8002  adda $02         6267  adda(2)                         #14
              14e7 c216  st   [$16]       6268  st([vPC])                       #15 Advance vPC
              14e8 0021  ld   $21         6269  ld(hi('PREFX3_PAGE'))           #16 ENTER is at $(n-1)ff, where n = instruction page
              14e9 c202  st   [$02]       6270  st([vCpuSelect])                #17
              14ea 9401  adda $01,y       6271  adda(1,Y)                       #18
              14eb e000  jmp  y,$00       6272  jmp(Y,'NEXTY')                  #19
              14ec 00f5  ld   $f5         6273  ld(-22/2)                       #20
                                          6274
                                          6275  # PREFX2 implementation
                                          6276  label('prefx2#13')
prefx2#13:    14ed 0116  ld   [$16]       6277  ld([vPC])                       #13
              14ee 8001  adda $01         6278  adda(1)                         #14
              14ef c216  st   [$16]       6279  st([vPC])                       #15 Advance vPC
              14f0 0022  ld   $22         6280  ld(hi('PREFX2_PAGE'))           #16 ENTER is at $(n-1)ff, where n = instruction page
              14f1 c202  st   [$02]       6281  st([vCpuSelect])                #17
              14f2 9401  adda $01,y       6282  adda(1,Y)                       #18
              14f3 e000  jmp  y,$00       6283  jmp(Y,'NEXTY')                  #19
              14f4 00f5  ld   $f5         6284  ld(-22/2)                       #20
                                          6285
                                          6286  # PREFX1 implementation
                                          6287  label('prefx1#13')
prefx1#13:    14f5 c202  st   [$02]       6288  st([vCpuSelect])                #13
              14f6 9401  adda $01,y       6289  adda(1,Y)                       #14
              14f7 e000  jmp  y,$00       6290  jmp(Y,'NEXTY')                  #15
              14f8 00f7  ld   $f7         6291  ld(-18/2)                       #16
                                          6292
                                          6293
              14f9 0200  nop              6294  fillers(until=0xff)
              14fa 0200  nop
              14fb 0200  nop
              * 6 times
              14ff 0200  nop              6295  align(0x100, size=0x100)
                                          6296
                                          6297  #-----------------------------------------------------------------------
                                          6298  #       More vCPU instruction implementations, (0x1500)
                                          6299  #-----------------------------------------------------------------------
                                          6300
                                          6301  # ADDI implementation
                                          6302  label('addi#13')
addi#13:      1500 8118  adda [$18]       6303  adda([vAC])                     #13
              1501 c218  st   [$18]       6304  st([vAC])                       #14 Store low result
              1502 e80c  blt  .addi#17    6305  bmi('.addi#17')                 #15 Now figure out if there was a carry
              1503 a11d  suba [$1d]       6306  suba([vTmp])                    #16 Gets back the initial value of vAC
              1504 411d  ora  [$1d]       6307  ora([vTmp])                     #17 Carry in bit 7
              1505 3080  anda $80,x       6308  anda(0x80,X)                    #18 Move carry to bit 0
              1506 0500  ld   [x]         6309  ld([X])                         #19
              1507 8119  adda [$19]       6310  adda([vAC+1])                   #20 Add the high bytes with carry
              1508 c219  st   [$19]       6311  st([vAC+1])                     #21 Store high result
              1509 1403  ld   $03,y       6312  ld(hi('NEXTY'),Y)               #22
              150a e000  jmp  y,$00       6313  jmp(Y,'NEXTY')                  #23
              150b 00f3  ld   $f3         6314  ld(-26/2)                       #24
                                          6315  label('.addi#17')
.addi#17:     150c 211d  anda [$1d]       6316  anda([vTmp])                    #17 Carry in bit 7
              150d 3080  anda $80,x       6317  anda(0x80,X)                    #18 Move carry to bit 0
              150e 0500  ld   [x]         6318  ld([X])                         #19
              150f 8119  adda [$19]       6319  adda([vAC+1])                   #20 Add the high bytes with carry
              1510 c219  st   [$19]       6320  st([vAC+1])                     #21 Store high result
              1511 1403  ld   $03,y       6321  ld(hi('NEXTY'),Y)               #22
              1512 e000  jmp  y,$00       6322  jmp(Y,'NEXTY')                  #23
              1513 00f3  ld   $f3         6323  ld(-26/2)                       #24
                                          6324
                                          6325  # SUBI implementation
                                          6326  label('subi#13')
subi#13:      1514 0118  ld   [$18]       6327  ld([vAC])                       #13
              1515 e820  blt  .subi#16    6328  bmi('.subi#16')                 #14
              1516 a11d  suba [$1d]       6329  suba([vTmp])                    #15
              1517 c218  st   [$18]       6330  st([vAC])                       #16 Store low result
              1518 411d  ora  [$1d]       6331  ora([vTmp])                     #17 Carry in bit 7
              1519 3080  anda $80,x       6332  anda(0x80,X)                    #18 Move carry to bit 0
              151a 0119  ld   [$19]       6333  ld([vAC+1])                     #19
              151b a500  suba [x]         6334  suba([X])                       #20
              151c c219  st   [$19]       6335  st([vAC+1])                     #21
              151d 1403  ld   $03,y       6336  ld(hi('NEXTY'),Y)               #22
              151e e000  jmp  y,$00       6337  jmp(Y,'NEXTY')                  #23
              151f 00f3  ld   $f3         6338  ld(-26/2)                       #24
                                          6339  label('.subi#16')
.subi#16:     1520 c218  st   [$18]       6340  st([vAC])                       #16 Store low result
              1521 211d  anda [$1d]       6341  anda([vTmp])                    #17 Carry in bit 7
              1522 3080  anda $80,x       6342  anda(0x80,X)                    #18 Move carry to bit 0
              1523 0119  ld   [$19]       6343  ld([vAC+1])                     #19
              1524 a500  suba [x]         6344  suba([X])                       #20
              1525 c219  st   [$19]       6345  st([vAC+1])                     #21
              1526 1403  ld   $03,y       6346  ld(hi('NEXTY'),Y)               #22
              1527 e000  jmp  y,$00       6347  jmp(Y,'NEXTY')                  #23
              1528 00f3  ld   $f3         6348  ld(-26/2)                       #24
                                          6349
                                          6350  # XORW implementation
                                          6351  label('xorw#13')
xorw#13:      1529 1400  ld   $00,y       6352  ld(0,Y)                         #13
              152a 0500  ld   [x]         6353  ld([X])                         #14
              152b de00  st   [y,x++]     6354  st([Y,Xpp])                     #15
              152c 6118  xora [$18]       6355  xora([vAC])                     #16
              152d c218  st   [$18]       6356  st([vAC])                       #17
              152e 0500  ld   [x]         6357  ld([X])                         #18
              152f 6119  xora [$19]       6358  xora([vAC+1])                   #19
              1530 c219  st   [$19]       6359  st([vAC+1])                     #20
              1531 1403  ld   $03,y       6360  ld(hi('REENTER'),Y)             #21
              1532 e0cb  jmp  y,$cb       6361  jmp(Y,'REENTER')                #22
              1533 00f3  ld   $f3         6362  ld(-26/2)                       #23
                                          6363
                                          6364  # INCW implementation
                                          6365  label('incw#13')
incw#13:      1534 1400  ld   $00,y       6366  ld(0,Y)                         #13
              1535 1200  ld   ac,x        6367  ld(AC,X)                        #14 address of low byte to be added
              1536 0500  ld   [x]         6368  ld([X])                         #15
              1537 8001  adda $01         6369  adda(1)                         #16
              1538 f03d  beq  .incw#19    6370  beq('.incw#19')                 #17 if low byte is 0x00
              1539 de00  st   [y,x++]     6371  st([Y,Xpp])                     #18 inc low byte
              153a 1403  ld   $03,y       6372  ld(hi('REENTER'),Y)             #19
              153b e0cb  jmp  y,$cb       6373  jmp(Y,'REENTER')                #20
              153c 00f4  ld   $f4         6374  ld(-24/2)                       #21
                                          6375  label('.incw#19')
.incw#19:     153d 0500  ld   [x]         6376  ld([X])                         #19
              153e 8001  adda $01         6377  adda(1)                         #20
              153f c600  st   [x]         6378  st([X])                         #21 inc high byte
              1540 1403  ld   $03,y       6379  ld(hi('NEXTY'),Y)               #22
              1541 e000  jmp  y,$00       6380  jmp(Y,'NEXTY')                  #23
              1542 00f3  ld   $f3         6381  ld(-26/2)                       #24
                                          6382
                                          6383  # DECW implementation
                                          6384  label('decw#13')
decw#13:      1543 1400  ld   $00,y       6385  ld(0,Y)                         #13
              1544 1200  ld   ac,x        6386  ld(AC,X)                        #14 address of low byte to be added
              1545 0500  ld   [x]         6387  ld([X])                         #15
              1546 a001  suba $01         6388  suba(1)                         #16
              1547 de00  st   [y,x++]     6389  st([Y,Xpp])                     #17 dec low byte
              1548 60ff  xora $ff         6390  xora(0xff)                      #18 if low byte is 0xff
              1549 f04d  beq  .decw#21    6391  beq('.decw#21')                 #19
              154a 1403  ld   $03,y       6392  ld(hi('NEXTY'),Y)               #20
              154b e000  jmp  y,$00       6393  jmp(Y,'NEXTY')                  #21
              154c 00f4  ld   $f4         6394  ld(-24/2)                       #22
                                          6395  label('.decw#21')
.decw#21:     154d 0500  ld   [x]         6396  ld([X])                         #21
              154e a001  suba $01         6397  suba(1)                         #22
              154f c600  st   [x]         6398  st([X])                         #23 dec high byte
              1550 1403  ld   $03,y       6399  ld(hi('NEXTY'),Y)               #24
              1551 e000  jmp  y,$00       6400  jmp(Y,'NEXTY')                  #25
              1552 00f2  ld   $f2         6401  ld(-28/2)                       #26
                                          6402
                                          6403  # DBNE implementation
                                          6404  label('dbne#13')
dbne#13:      1553 c21d  st   [$1d]       6405  st([vTmp])                      #13 branch offset
              1554 de00  st   [y,x++]     6406  st([Y,Xpp])                     #14 X++, address of counter
              1555 0d00  ld   [y,x]       6407  ld([Y,X])                       #15
              1556 1200  ld   ac,x        6408  ld(AC,X)                        #16 fetch counter
              1557 0500  ld   [x]         6409  ld([X])                         #17
              1558 a001  suba $01         6410  suba(1)                         #18 decrement counter
              1559 f060  beq  .dbne#21    6411  beq('.dbne#21')                 #19 if zero BRA
              155a c600  st   [x]         6412  st([X])                         #20
              155b 011d  ld   [$1d]       6413  ld([vTmp])                      #21
              155c c216  st   [$16]       6414  st([vPC])                       #22 BRA to branch offset
              155d 1403  ld   $03,y       6415  ld(hi('REENTER'),Y)             #23
              155e e0cb  jmp  y,$cb       6416  jmp(Y,'REENTER')                #24
              155f 00f2  ld   $f2         6417  ld(-28/2)                       #25
                                          6418  label('.dbne#21')
.dbne#21:     1560 0116  ld   [$16]       6419  ld([vPC])                       #21
              1561 8001  adda $01         6420  adda(1)                         #22
              1562 c216  st   [$16]       6421  st([vPC])                       #23 advance vPC by 1
              1563 1403  ld   $03,y       6422  ld(hi('NEXTY'),Y)               #24
              1564 e000  jmp  y,$00       6423  jmp(Y,'NEXTY')                  #25
              1565 00f2  ld   $f2         6424  ld(-28/2)                       #26
                                          6425
                                          6426  # TEQ implementation
                                          6427  label('teq#13')
teq#13:       1566 1200  ld   ac,x        6428  ld(AC,X)                        #13 address of var
              1567 0119  ld   [$19]       6429  ld([vAC+1])                     #14
              1568 4118  ora  [$18]       6430  ora([vAC])                      #15
              1569 f070  beq  .teq#18     6431  beq('.teq#18')                  #16 if (vAC.hi OR vAC.lo) == 0
              156a 1400  ld   $00,y       6432  ld(0,Y)                         #17
              156b dc00  st   $00,[y,x++] 6433  st(0,[Y,Xpp])                   #18 var.lo = 0
              156c cc00  st   $00,[y,x]   6434  st(0,[Y,X])                     #19 var.hi = 0
              156d 1403  ld   $03,y       6435  ld(hi('NEXTY'),Y)               #20
              156e e000  jmp  y,$00       6436  jmp(Y,'NEXTY')                  #21
              156f 00f4  ld   $f4         6437  ld(-24/2)                       #22
                                          6438  label('.teq#18')
.teq#18:      1570 dc01  st   $01,[y,x++] 6439  st(1,[Y,Xpp])                   #18 var.lo = 1
              1571 cc00  st   $00,[y,x]   6440  st(0,[Y,X])                     #19 var.hi = 0
              1572 1403  ld   $03,y       6441  ld(hi('NEXTY'),Y)               #20
              1573 e000  jmp  y,$00       6442  jmp(Y,'NEXTY')                  #21
              1574 00f4  ld   $f4         6443  ld(-24/2)                       #22
                                          6444
                                          6445  # TNE implementation
                                          6446  label('tne#13')
tne#13:       1575 1200  ld   ac,x        6447  ld(AC,X)                        #13 address of var
              1576 0119  ld   [$19]       6448  ld([vAC+1])                     #14
              1577 4118  ora  [$18]       6449  ora([vAC])                      #15
              1578 f07f  beq  .tne#18     6450  beq('.tne#18')                  #16 if (vAC.hi OR vAC.lo) == 0
              1579 1400  ld   $00,y       6451  ld(0,Y)                         #17
              157a dc01  st   $01,[y,x++] 6452  st(1,[Y,Xpp])                   #18 var.lo = 1
              157b cc00  st   $00,[y,x]   6453  st(0,[Y,X])                     #19 var.hi = 0
              157c 1403  ld   $03,y       6454  ld(hi('NEXTY'),Y)               #20
              157d e000  jmp  y,$00       6455  jmp(Y,'NEXTY')                  #21
              157e 00f4  ld   $f4         6456  ld(-24/2)                       #22
                                          6457  label('.tne#18')
.tne#18:      157f dc00  st   $00,[y,x++] 6458  st(0,[Y,Xpp])                   #18 var.lo = 0
              1580 cc00  st   $00,[y,x]   6459  st(0,[Y,X])                     #19 var.hi = 0
              1581 1403  ld   $03,y       6460  ld(hi('NEXTY'),Y)               #20
              1582 e000  jmp  y,$00       6461  jmp(Y,'NEXTY')                  #21
              1583 00f4  ld   $f4         6462  ld(-24/2)                       #22
                                          6463
                                          6464  # TGE implementation
                                          6465  label('tge#13')
tge#13:       1584 1200  ld   ac,x        6466  ld(AC,X)                        #13 address of var
              1585 0119  ld   [$19]       6467  ld([vAC+1])                     #14
              1586 e88d  blt  .tge#17     6468  bmi('.tge#17')                  #15 if vAC.hi < 0
              1587 1400  ld   $00,y       6469  ld(0,Y)                         #16
              1588 dc01  st   $01,[y,x++] 6470  st(1,[Y,Xpp])                   #17 var.lo = 1
              1589 cc00  st   $00,[y,x]   6471  st(0,[Y,X])                     #18 var.hi = 0
              158a 1403  ld   $03,y       6472  ld(hi('REENTER'),Y)             #19
              158b e0cb  jmp  y,$cb       6473  jmp(Y,'REENTER')                #20
              158c 00f4  ld   $f4         6474  ld(-24/2)                       #21
                                          6475  label('.tge#17')
.tge#17:      158d dc00  st   $00,[y,x++] 6476  st(0,[Y,Xpp])                   #17 var.lo = 0
              158e cc00  st   $00,[y,x]   6477  st(0,[Y,X])                     #18 var.hi = 0
              158f 1403  ld   $03,y       6478  ld(hi('REENTER'),Y)             #19
              1590 e0cb  jmp  y,$cb       6479  jmp(Y,'REENTER')                #20
              1591 00f4  ld   $f4         6480  ld(-24/2)                       #21
                                          6481
                                          6482  # TLT implementation
                                          6483  label('tlt#13')
tlt#13:       1592 1200  ld   ac,x        6484  ld(AC,X)                        #13 address of var
              1593 0119  ld   [$19]       6485  ld([vAC+1])                     #14
              1594 e89b  blt  .tlt#17     6486  bmi('.tlt#17')                  #15 if vAC.hi < 0
              1595 1400  ld   $00,y       6487  ld(0,Y)                         #16
              1596 dc00  st   $00,[y,x++] 6488  st(0,[Y,Xpp])                   #17 var.lo = 0
              1597 cc00  st   $00,[y,x]   6489  st(0,[Y,X])                     #18 var.hi = 0
              1598 1403  ld   $03,y       6490  ld(hi('REENTER'),Y)             #19
              1599 e0cb  jmp  y,$cb       6491  jmp(Y,'REENTER')                #20
              159a 00f4  ld   $f4         6492  ld(-24/2)                       #21
                                          6493  label('.tlt#17')
.tlt#17:      159b dc01  st   $01,[y,x++] 6494  st(1,[Y,Xpp])                   #17 var.lo = 1
              159c cc00  st   $00,[y,x]   6495  st(0,[Y,X])                     #18 var.hi = 0
              159d 1403  ld   $03,y       6496  ld(hi('REENTER'),Y)             #19
              159e e0cb  jmp  y,$cb       6497  jmp(Y,'REENTER')                #20
              159f 00f4  ld   $f4         6498  ld(-24/2)                       #21
                                          6499
                                          6500  # TGT implementation
                                          6501  label('tgt#13')
tgt#13:       15a0 1400  ld   $00,y       6502  ld(0,Y)                         #13
              15a1 1200  ld   ac,x        6503  ld(AC,X)                        #14 address of var
              15a2 0119  ld   [$19]       6504  ld([vAC+1])                     #15
              15a3 e8ac  blt  .tgt#18     6505  blt('.tgt#18')                  #16 if vAC.hi < 0
              15a4 4118  ora  [$18]       6506  ora([vAC])                      #17
              15a5 ecb1  bne  .tgt#20     6507  bne('.tgt#20')                  #18 if (vAC.hi OR vAC.lo) != 0
              15a6 0200  nop              6508  nop()                           #19
              15a7 dc00  st   $00,[y,x++] 6509  st(0,[Y,Xpp])                   #20 var.lo = 0
              15a8 cc00  st   $00,[y,x]   6510  st(0,[Y,X])                     #21 var.hi = 0
              15a9 1403  ld   $03,y       6511  ld(hi('NEXTY'),Y)               #22
              15aa e000  jmp  y,$00       6512  jmp(Y,'NEXTY')                  #23
              15ab 00f3  ld   $f3         6513  ld(-26/2)                       #24
                                          6514  label('.tgt#18')
.tgt#18:      15ac dc00  st   $00,[y,x++] 6515  st(0,[Y,Xpp])                   #18 var.lo = 0
              15ad cc00  st   $00,[y,x]   6516  st(0,[Y,X])                     #19 var.hi = 0
              15ae 1403  ld   $03,y       6517  ld(hi('NEXTY'),Y)               #20
              15af e000  jmp  y,$00       6518  jmp(Y,'NEXTY')                  #21
              15b0 00f4  ld   $f4         6519  ld(-24/2)                       #22
                                          6520  label('.tgt#20')
.tgt#20:      15b1 dc01  st   $01,[y,x++] 6521  st(1,[Y,Xpp])                   #20 var.lo = 1
              15b2 cc00  st   $00,[y,x]   6522  st(0,[Y,X])                     #21 var.hi = 0
              15b3 1403  ld   $03,y       6523  ld(hi('NEXTY'),Y)               #22
              15b4 e000  jmp  y,$00       6524  jmp(Y,'NEXTY')                  #23
              15b5 00f3  ld   $f3         6525  ld(-26/2)                       #24
                                          6526
                                          6527  # TLE implementation
                                          6528  label('tle#13')
tle#13:       15b6 1400  ld   $00,y       6529  ld(0,Y)                         #13
              15b7 1200  ld   ac,x        6530  ld(AC,X)                        #14 address of var
              15b8 0119  ld   [$19]       6531  ld([vAC+1])                     #15
              15b9 e8c2  blt  .tle#18     6532  blt('.tle#18')                  #16 if vAC.hi < 0
              15ba 4118  ora  [$18]       6533  ora([vAC])                      #17
              15bb ecc7  bne  .tle#20     6534  bne('.tle#20')                  #18 if (vAC.hi OR vAC.lo) != 0
              15bc 0200  nop              6535  nop()                           #19
              15bd dc01  st   $01,[y,x++] 6536  st(1,[Y,Xpp])                   #20 var.lo = 1
              15be cc00  st   $00,[y,x]   6537  st(0,[Y,X])                     #21 var.hi = 0
              15bf 1403  ld   $03,y       6538  ld(hi('NEXTY'),Y)               #22
              15c0 e000  jmp  y,$00       6539  jmp(Y,'NEXTY')                  #23
              15c1 00f3  ld   $f3         6540  ld(-26/2)                       #24
                                          6541  label('.tle#18')
.tle#18:      15c2 dc01  st   $01,[y,x++] 6542  st(1,[Y,Xpp])                   #18 var.lo = 1
              15c3 cc00  st   $00,[y,x]   6543  st(0,[Y,X])                     #19 var.hi = 0
              15c4 1403  ld   $03,y       6544  ld(hi('NEXTY'),Y)               #20
              15c5 e000  jmp  y,$00       6545  jmp(Y,'NEXTY')                  #21
              15c6 00f4  ld   $f4         6546  ld(-24/2)                       #22
                                          6547  label('.tle#20')
.tle#20:      15c7 dc00  st   $00,[y,x++] 6548  st(0,[Y,Xpp])                   #20 var.lo = 0
              15c8 cc00  st   $00,[y,x]   6549  st(0,[Y,X])                     #21 var.hi = 0
              15c9 1403  ld   $03,y       6550  ld(hi('NEXTY'),Y)               #22
              15ca e000  jmp  y,$00       6551  jmp(Y,'NEXTY')                  #23
              15cb 00f3  ld   $f3         6552  ld(-26/2)                       #24
                                          6553
                                          6554
              15cc 0200  nop              6555  fillers(until=0xff)
              15cd 0200  nop
              15ce 0200  nop
              * 51 times
              15ff 0200  nop              6556  align(0x100, size=0x100)
                                          6557
                                          6558  #-----------------------------------------------------------------------
                                          6559  #       More vCPU instruction implementations, (0x1600)
                                          6560  #-----------------------------------------------------------------------
                                          6561
                                          6562  # INC implementation
                                          6563  label('inc#13')
inc#13:       1600 1200  ld   ac,x        6564  ld(AC,X)                        #13
              1601 0500  ld   [x]         6565  ld([X])                         #14
              1602 8001  adda $01         6566  adda(1)                         #15
              1603 c600  st   [x]         6567  st([X])                         #16
              1604 1403  ld   $03,y       6568  ld(hi('REENTER'),Y)             #17
              1605 e0cb  jmp  y,$cb       6569  jmp(Y,'REENTER')                #18
              1606 00f5  ld   $f5         6570  ld(-22/2)                       #19
                                          6571
                                          6572  # DEC implementation
                                          6573  label('dec#13')
dec#13:       1607 1200  ld   ac,x        6574  ld(AC,X)                        #13
              1608 0500  ld   [x]         6575  ld([X])                         #14
              1609 a001  suba $01         6576  suba(1)                         #15
              160a c600  st   [x]         6577  st([X])                         #16
              160b 1403  ld   $03,y       6578  ld(hi('REENTER'),Y)             #17
              160c e0cb  jmp  y,$cb       6579  jmp(Y,'REENTER')                #18
              160d 00f5  ld   $f5         6580  ld(-22/2)                       #19
                                          6581
                                          6582  # LD implementation
                                          6583  label('ld#13')
ld#13:        160e 1200  ld   ac,x        6584  ld(AC,X)                        #13
              160f 0500  ld   [x]         6585  ld([X])                         #14
              1610 c218  st   [$18]       6586  st([vAC])                       #15
              1611 0000  ld   $00         6587  ld(0)                           #16
              1612 c219  st   [$19]       6588  st([vAC+1])                     #17
              1613 1403  ld   $03,y       6589  ld(hi('NEXTY'),Y)               #18
              1614 e000  jmp  y,$00       6590  jmp(Y,'NEXTY')                  #19
              1615 00f5  ld   $f5         6591  ld(-22/2)                       #20
                                          6592
                                          6593  # LDI implementation
                                          6594  label('ldi#13')
ldi#13:       1616 c218  st   [$18]       6595  st([vAC])                       #13
              1617 0000  ld   $00         6596  ld(0)                           #14
              1618 c219  st   [$19]       6597  st([vAC+1])                     #15
              1619 1403  ld   $03,y       6598  ld(hi('NEXTY'),Y)               #16
              161a e000  jmp  y,$00       6599  jmp(Y,'NEXTY')                  #17
              161b 00f6  ld   $f6         6600  ld(-20/2)                       #18
                                          6601
                                          6602  # ST implementation
                                          6603  label('st#13')
st#13:        161c 1200  ld   ac,x        6604  ld(AC,X)                        #13
              161d 0118  ld   [$18]       6605  ld([vAC])                       #14
              161e c600  st   [x]         6606  st([X])                         #15
              161f 1403  ld   $03,y       6607  ld(hi('NEXTY'),Y)               #16
              1620 e000  jmp  y,$00       6608  jmp(Y,'NEXTY')                  #17
              1621 00f6  ld   $f6         6609  ld(-20/2)                       #18
                                          6610
                                          6611  # ORI implementation
                                          6612  label('ori#13')
ori#13:       1622 4118  ora  [$18]       6613  ora([vAC])                      #13
              1623 c218  st   [$18]       6614  st([vAC])                       #14
              1624 1403  ld   $03,y       6615  ld(hi('REENTER'),Y)             #15
              1625 e0cb  jmp  y,$cb       6616  jmp(Y,'REENTER')                #16
              1626 00f6  ld   $f6         6617  ld(-20/2)                       #17
                                          6618
                                          6619  # ALLOC implementation
                                          6620  label('alloc#13')
alloc#13:     1627 811c  adda [$1c]       6621  adda([vSP])                     #13
              1628 c21c  st   [$1c]       6622  st([vSP])                       #14
              1629 1403  ld   $03,y       6623  ld(hi('REENTER'),Y)             #15
              162a e0cb  jmp  y,$cb       6624  jmp(Y,'REENTER')                #16
              162b 00f6  ld   $f6         6625  ld(-20/2)                       #17
                                          6626
                                          6627  # MOV implementation
                                          6628  label('mov#13')
mov#13:       162c 1517  ld   [$17],y     6629  ld([vPC+1],Y)                   #13
              162d c21d  st   [$1d]       6630  st([vTmp])                      #14 save address of dst var
              162e de00  st   [y,x++]     6631  st([Y,Xpp])                     #15 X++
              162f 0d00  ld   [y,x]       6632  ld([Y,X])                       #16 address of src var
              1630 1200  ld   ac,x        6633  ld(AC,X)                        #17
              1631 0500  ld   [x]         6634  ld([X])                         #18 get src
              1632 111d  ld   [$1d],x     6635  ld([vTmp],X)                    #19 address of dst var
              1633 c600  st   [x]         6636  st([X])                         #20 dst = src
              1634 0116  ld   [$16]       6637  ld([vPC])                       #21
              1635 8001  adda $01         6638  adda(1)                         #22
              1636 c216  st   [$16]       6639  st([vPC])                       #23
              1637 1403  ld   $03,y       6640  ld(hi('NEXTY'),Y)               #24
              1638 e000  jmp  y,$00       6641  jmp(Y,'NEXTY')                  #25
              1639 00f2  ld   $f2         6642  ld(-28/2)                       #26
                                          6643
                                          6644  # PEEKA implementation
                                          6645  label('peeka#13')
peeka#13:     163a c21d  st   [$1d]       6646  st([vTmp])                      #13
              163b 1519  ld   [$19],y     6647  ld([vAC+1],Y)                   #14
              163c 1118  ld   [$18],x     6648  ld([vAC],X)                     #15
              163d 0d00  ld   [y,x]       6649  ld([Y,X])                       #16 peek [vAC]
              163e 111d  ld   [$1d],x     6650  ld([vTmp],X)                    #17 dst var
              163f c600  st   [x]         6651  st([X])                         #18 dst = peek [vAC]
              1640 1403  ld   $03,y       6652  ld(hi('REENTER'),Y)             #19
              1641 e0cb  jmp  y,$cb       6653  jmp(Y,'REENTER')                #20
              1642 00f4  ld   $f4         6654  ld(-24/2)                       #21
                                          6655
                                          6656  # DEEKA implementation
                                          6657  label('deeka#13')
deeka#13:     1643 1519  ld   [$19],y     6658  ld([vAC+1],Y)                   #13
              1644 1118  ld   [$18],x     6659  ld([vAC],X)                     #14
              1645 0d00  ld   [y,x]       6660  ld([Y,X])                       #15 peek [vAC]
              1646 de00  st   [y,x++]     6661  st([Y,Xpp])                     #16
              1647 c22a  st   [$2a]       6662  st([sysArgs+6])                 #17
              1648 0d00  ld   [y,x]       6663  ld([Y,X])                       #18 peek [vAC+1]
              1649 c22b  st   [$2b]       6664  st([sysArgs+7])                 #19
              164a 1400  ld   $00,y       6665  ld(0,Y)                         #20
              164b 111d  ld   [$1d],x     6666  ld([vTmp],X)                    #21 dst var
              164c 012a  ld   [$2a]       6667  ld([sysArgs+6])                 #22
              164d de00  st   [y,x++]     6668  st([Y,Xpp])                     #23 [var.lo] = peek [vAC]
              164e 012b  ld   [$2b]       6669  ld([sysArgs+7])                 #24
              164f ce00  st   [y,x]       6670  st([Y,X])                       #25 [var.hi] = peek [vAC+1]
              1650 1403  ld   $03,y       6671  ld(hi('NEXTY'),Y)               #26
              1651 e000  jmp  y,$00       6672  jmp(Y,'NEXTY')                  #27
              1652 00f1  ld   $f1         6673  ld(-30/2)                       #28
                                          6674
                                          6675  # PEEKA implementation
                                          6676  #label('peeka#13')
                                          6677  #ld(0,Y)                         #13
                                          6678  #ld(AC,X)                        #14 address of var
                                          6679  #ld([Y,X])                       #15
                                          6680  #st([vTmp])                      #16 low byte of src pointer
                                          6681  #st([Y,Xpp])                     #17 X++
                                          6682  #ld([Y,X])                       #18
                                          6683  #ld(AC,Y)                        #19 high byte of src pointer
                                          6684  #ld([vTmp],X)                    #20
                                          6685  #ld([Y,X])                       #21 peek src
                                          6686  #ld([vAC],X)                     #22 low byte of dst pointer
                                          6687  #ld([vAC+1],Y)                   #23 high byte of dst pointer
                                          6688  #st([Y,X])                       #24 poke dst
                                          6689  #ld(hi('REENTER'),Y)             #25
                                          6690  #jmp(Y,'REENTER')                #26
                                          6691  #ld(-30/2)                       #27
                                          6692
                                          6693  # SUBBI implementation, var -= imm, does NOT modify var.hi
                                          6694  label('subbi#13')
subbi#13:     1653 1517  ld   [$17],y     6695  ld([vPC+1],Y)                   #13
              1654 c21d  st   [$1d]       6696  st([vTmp])                      #14 immediate value
              1655 de00  st   [y,x++]     6697  st([Y,Xpp])                     #15 X++
              1656 0d00  ld   [y,x]       6698  ld([Y,X])                       #16
              1657 1200  ld   ac,x        6699  ld(AC,X)                        #17 address of var
              1658 0500  ld   [x]         6700  ld([X])                         #18
              1659 a11d  suba [$1d]       6701  suba([vTmp])                    #19
              165a c600  st   [x]         6702  st([X])                         #20
              165b 0116  ld   [$16]       6703  ld([vPC])                       #21
              165c 8001  adda $01         6704  adda(1)                         #22
              165d c216  st   [$16]       6705  st([vPC])                       #23 advance vPC by 1
              165e 1403  ld   $03,y       6706  ld(hi('NEXTY'),Y)               #24
              165f e000  jmp  y,$00       6707  jmp(Y,'NEXTY')                  #25
              1660 00f2  ld   $f2         6708  ld(-28/2)                       #26
                                          6709
                                          6710  # MOVQB implementation
                                          6711  label('movqb#13')
movqb#13:     1661 1517  ld   [$17],y     6712  ld([vPC+1],Y)                   #13 vPC.hi
              1662 c21d  st   [$1d]       6713  st([vTmp])                      #14 immediate value
              1663 de00  st   [y,x++]     6714  st([Y,Xpp])                     #15 X++
              1664 0d00  ld   [y,x]       6715  ld([Y,X])                       #16
              1665 1200  ld   ac,x        6716  ld(AC,X)                        #17 address of var
              1666 011d  ld   [$1d]       6717  ld([vTmp])                      #18
              1667 c600  st   [x]         6718  st([X])                         #19 var.lo = immediate value
              1668 0116  ld   [$16]       6719  ld([vPC])                       #20
              1669 8001  adda $01         6720  adda(1)                         #21
              166a c216  st   [$16]       6721  st([vPC])                       #22 advance vPC by 1
              166b 1403  ld   $03,y       6722  ld(hi('REENTER'),Y)             #23
              166c e0cb  jmp  y,$cb       6723  jmp(Y,'REENTER')                #24
              166d 00f2  ld   $f2         6724  ld(-28/2)                       #25
                                          6725
                                          6726  # MOVQW implementation
                                          6727  label('movqw#13')
movqw#13:     166e c21d  st   [$1d]       6728  st([vTmp])                      #13 immediate value
              166f de00  st   [y,x++]     6729  st([Y,Xpp])                     #14 X++
              1670 0d00  ld   [y,x]       6730  ld([Y,X])                       #15
              1671 1200  ld   ac,x        6731  ld(AC,X)                        #16 address of var
              1672 011d  ld   [$1d]       6732  ld([vTmp])                      #17
              1673 c600  st   [x]         6733  st([X])                         #18 var.lo = immediate value
              1674 1400  ld   $00,y       6734  ld(0,Y)                         #19
              1675 de00  st   [y,x++]     6735  st([Y,Xpp])                     #20 X++
              1676 0000  ld   $00         6736  ld(0)                           #21
              1677 c600  st   [x]         6737  st([X])                         #22 var.hi = 0
              1678 0116  ld   [$16]       6738  ld([vPC])                       #23
              1679 8001  adda $01         6739  adda(1)                         #24
              167a c216  st   [$16]       6740  st([vPC])                       #25 advance vPC by 1
              167b 1403  ld   $03,y       6741  ld(hi('NEXTY'),Y)               #26
              167c e000  jmp  y,$00       6742  jmp(Y,'NEXTY')                  #27
              167d 00f1  ld   $f1         6743  ld(-30/2)                       #28
                                          6744
                                          6745  # LSRB implementation
                                          6746  label('lsrb#13')
lsrb#13:      167e 1200  ld   ac,x        6747  ld(AC,X)                        #13 var
              167f 1405  ld   $05,y       6748  ld(hi('shiftTable'),Y)          #14 logical shift right 1 bit (X >> 1)
              1680 00c8  ld   $c8         6749  ld('.lsrb#24')                  #15 continuation address
              1681 c21d  st   [$1d]       6750  st([vTmp])                      #16
              1682 0500  ld   [x]         6751  ld([X])                         #17 load byte from var
              1683 20fe  anda $fe         6752  anda(0xfe)                      #18
              1684 e200  jmp  y,ac        6753  jmp(Y,AC)                       #19
              1685 fcff  bra  $ff         6754  bra(255)                        #20 bra shiftTable+255
                                          6755  #dummy
                                          6756  # continues in page 0x0600 at label('.lsrb#24') after fetching shifted byte from 0x0500
                                          6757
                                          6758  # PEEKV implementation
                                          6759  label('peekv#13')
peekv#13:     1686 1200  ld   ac,x        6760  ld(AC,X)                        #13
              1687 1400  ld   $00,y       6761  ld(0,Y)                         #14
              1688 0d00  ld   [y,x]       6762  ld([Y,X])                       #15 low byte peek address
              1689 de00  st   [y,x++]     6763  st([Y,Xpp])                     #16 X++
              168a c21d  st   [$1d]       6764  st([vTmp])                      #17
              168b 0d00  ld   [y,x]       6765  ld([Y,X])                       #18 high byte peek address
              168c 1600  ld   ac,y        6766  ld(AC,Y)                        #19
              168d 111d  ld   [$1d],x     6767  ld([vTmp],X)                    #20
              168e 0d00  ld   [y,x]       6768  ld([Y,X])                       #21 peek byte
              168f c218  st   [$18]       6769  st([vAC])                       #22
              1690 0000  ld   $00         6770  ld(0)                           #23
              1691 c219  st   [$19]       6771  st([vAC+1])                     #24
              1692 1403  ld   $03,y       6772  ld(hi('REENTER'),Y)             #25
              1693 e0cb  jmp  y,$cb       6773  jmp(Y,'REENTER')                #26
              1694 00f1  ld   $f1         6774  ld(-30/2)                       #27
                                          6775
                                          6776  # DEEKV implementation
                                          6777  label('deekv#13')
deekv#13:     1695 1200  ld   ac,x        6778  ld(AC,X)                        #13
              1696 1400  ld   $00,y       6779  ld(0,Y)                         #14
              1697 0d00  ld   [y,x]       6780  ld([Y,X])                       #15 low byte deek address
              1698 de00  st   [y,x++]     6781  st([Y,Xpp])                     #16 X++
              1699 c21d  st   [$1d]       6782  st([vTmp])                      #17
              169a 0d00  ld   [y,x]       6783  ld([Y,X])                       #18 high byte deek address
              169b 1600  ld   ac,y        6784  ld(AC,Y)                        #19
              169c 111d  ld   [$1d],x     6785  ld([vTmp],X)                    #20
              169d 0d00  ld   [y,x]       6786  ld([Y,X])                       #21 peek low byte
              169e c218  st   [$18]       6787  st([vAC])                       #22
              169f de00  st   [y,x++]     6788  st([Y,Xpp])                     #23 X++
              16a0 0d00  ld   [y,x]       6789  ld([Y,X])                       #24 peek high byte
              16a1 c219  st   [$19]       6790  st([vAC+1])                     #25
              16a2 1403  ld   $03,y       6791  ld(hi('NEXTY'),Y)               #26
              16a3 e000  jmp  y,$00       6792  jmp(Y,'NEXTY')                  #27
              16a4 00f1  ld   $f1         6793  ld(-30/2)                       #28
                                          6794
                                          6795  # LSLV implementation
                                          6796  label('lslv#13')
lslv#13:      16a5 1400  ld   $00,y       6797  ld(0,Y)                         #13
              16a6 1200  ld   ac,x        6798  ld(AC,X)                        #14 var
              16a7 0500  ld   [x]         6799  ld([X])                         #15
              16a8 f4b2  bge  .lslv#18    6800  bge('.lslv#18')                 #16
              16a9 8500  adda [x]         6801  adda([X])                       #17
              16aa de00  st   [y,x++]     6802  st([Y,Xpp])                     #18 var.lo <<1
              16ab 0500  ld   [x]         6803  ld([X])                         #19
              16ac 8500  adda [x]         6804  adda([X])                       #20
              16ad 4001  ora  $01         6805  ora(1)                          #21
              16ae c600  st   [x]         6806  st([X])                         #22 var.hi <<1 | 1
              16af 1403  ld   $03,y       6807  ld(hi('REENTER'),Y)             #23
              16b0 e0cb  jmp  y,$cb       6808  jmp(Y,'REENTER')                #24
              16b1 00f2  ld   $f2         6809  ld(-28/2)                       #25
                                          6810  label('.lslv#18')
.lslv#18:     16b2 de00  st   [y,x++]     6811  st([Y,Xpp])                     #18
              16b3 0500  ld   [x]         6812  ld([X])                         #19
              16b4 8500  adda [x]         6813  adda([X])                       #20
              16b5 c600  st   [x]         6814  st([X])                         #21
              16b6 1403  ld   $03,y       6815  ld(hi('NEXTY'),Y)               #22
              16b7 e000  jmp  y,$00       6816  jmp(Y,'NEXTY')                  #23
              16b8 00f3  ld   $f3         6817  ld(-26/2)                       #24
                                          6818
                                          6819  # LDW implementation
                                          6820  label('ldw#13')
ldw#13:       16b9 1400  ld   $00,y       6821  ld(0,Y)                         #13
              16ba 1200  ld   ac,x        6822  ld(AC,X)                        #14 Operand
              16bb 0500  ld   [x]         6823  ld([X])                         #15
              16bc c218  st   [$18]       6824  st([vAC])                       #16
              16bd de00  st   [y,x++]     6825  st([Y,Xpp])                     #17 X++
              16be 0500  ld   [x]         6826  ld([X])                         #18
              16bf c219  st   [$19]       6827  st([vAC+1])                     #19
              16c0 1403  ld   $03,y       6828  ld(hi('NEXTY'),Y)               #20
              16c1 e000  jmp  y,$00       6829  jmp(Y,'NEXTY')                  #21
              16c2 00f4  ld   $f4         6830  ld(-24/2)                       #22
                                          6831
                                          6832  # STW implementation
                                          6833  label('stw#13')
stw#13:       16c3 1400  ld   $00,y       6834  ld(0,Y)                         #13
              16c4 1200  ld   ac,x        6835  ld(AC,X)                        #14 Operand
              16c5 0118  ld   [$18]       6836  ld([vAC])                       #15
              16c6 de00  st   [y,x++]     6837  st([Y,Xpp])                     #16
              16c7 0119  ld   [$19]       6838  ld([vAC+1])                     #17
              16c8 c600  st   [x]         6839  st([X])                         #18
              16c9 1403  ld   $03,y       6840  ld(hi('REENTER'),Y)             #19
              16ca e0cb  jmp  y,$cb       6841  jmp(Y,'REENTER')                #20
              16cb 00f4  ld   $f4         6842  ld(-24/2)                       #21
                                          6843
                                          6844  # POKE+ implementation
                                          6845  label('poke+#13')
poke+#13:     16cc 1200  ld   ac,x        6846  ld(AC,X)                        #13 Operand
              16cd 1400  ld   $00,y       6847  ld(0,Y)                         #14
              16ce 0500  ld   [x]         6848  ld([X])                         #15 low byte poke address
              16cf c21d  st   [$1d]       6849  st([vTmp])                      #16
              16d0 8001  adda $01         6850  adda(1)                         #17
              16d1 de00  st   [y,x++]     6851  st([Y,Xpp])                     #18
              16d2 0500  ld   [x]         6852  ld([X])                         #19 high byte poke address
              16d3 1600  ld   ac,y        6853  ld(AC,Y)                        #20
              16d4 111d  ld   [$1d],x     6854  ld([vTmp],X)                    #21
              16d5 0118  ld   [$18]       6855  ld([vAC])                       #22
              16d6 ce00  st   [y,x]       6856  st([Y,X])                       #23
              16d7 1403  ld   $03,y       6857  ld(hi('NEXTY'),Y)               #24
              16d8 e000  jmp  y,$00       6858  jmp(Y,'NEXTY')                  #25
              16d9 00f2  ld   $f2         6859  ld(-28/2)                       #26
                                          6860
                                          6861  # ADDBI implementation, var += imm, does NOT modify var.hi
                                          6862  label('addbi#13')
addbi#13:     16da 1517  ld   [$17],y     6863  ld([vPC+1],Y)                   #13
              16db c21d  st   [$1d]       6864  st([vTmp])                      #14 immediate value
              16dc de00  st   [y,x++]     6865  st([Y,Xpp])                     #15 X++
              16dd 0d00  ld   [y,x]       6866  ld([Y,X])                       #16
              16de 1200  ld   ac,x        6867  ld(AC,X)                        #17 var
              16df 0500  ld   [x]         6868  ld([X])                         #18
              16e0 811d  adda [$1d]       6869  adda([vTmp])                    #19
              16e1 c600  st   [x]         6870  st([X])                         #20
              16e2 0116  ld   [$16]       6871  ld([vPC])                       #21
              16e3 8001  adda $01         6872  adda(1)                         #22
              16e4 c216  st   [$16]       6873  st([vPC])                       #23 advance vPC by 1
              16e5 1403  ld   $03,y       6874  ld(hi('NEXTY'),Y)               #24
              16e6 e000  jmp  y,$00       6875  jmp(Y,'NEXTY')                  #25
              16e7 00f2  ld   $f2         6876  ld(-28/2)                       #26
                                          6877
                                          6878
              16e8 0200  nop              6879  fillers(until=0xff)
              16e9 0200  nop
              16ea 0200  nop
              * 23 times
              16ff 0200  nop              6880  align(0x100, size=0x100)
                                          6881
                                          6882  #-----------------------------------------------------------------------
                                          6883  #       More vCPU instruction implementations, (0x1700)
                                          6884  #-----------------------------------------------------------------------
                                          6885
                                          6886  # LDWI implementation (vCPU instruction)
                                          6887  label('ldwi#13')
ldwi#13:      1700 c218  st   [$18]       6888  st([vAC])                       #13 Operand
              1701 de00  st   [y,x++]     6889  st([Y,Xpp])                     #14 Just X++
              1702 0d00  ld   [y,x]       6890  ld([Y,X])                       #15 Fetch second operand
              1703 c219  st   [$19]       6891  st([vAC+1])                     #16
              1704 0116  ld   [$16]       6892  ld([vPC])                       #17 Advance vPC one more
              1705 8001  adda $01         6893  adda(1)                         #18
              1706 c216  st   [$16]       6894  st([vPC])                       #19
              1707 1403  ld   $03,y       6895  ld(hi('NEXTY'),Y)               #20
              1708 e000  jmp  y,$00       6896  jmp(Y,'NEXTY')                  #21
              1709 00f4  ld   $f4         6897  ld(-24/2)                       #22
                                          6898
                                          6899  # CALLI implementation (vCPU instruction)
                                          6900  label('calli#13')
calli#13:     170a 8003  adda $03         6901  adda(3)                         #13
              170b c21a  st   [$1a]       6902  st([vLR])                       #14
              170c 0117  ld   [$17]       6903  ld([vPC+1])                     #15
              170d d61b  st   [$1b],y     6904  st([vLR+1],Y)                   #16
              170e 0d00  ld   [y,x]       6905  ld([Y,X])                       #17
              170f de00  st   [y,x++]     6906  st([Y,Xpp])                     #18 Just X++
              1710 a002  suba $02         6907  suba(2)                         #19
              1711 c216  st   [$16]       6908  st([vPC])                       #20
              1712 0d00  ld   [y,x]       6909  ld([Y,X])                       #21
              1713 1403  ld   $03,y       6910  ld(hi('REENTER_28'),Y)          #22
              1714 e0ca  jmp  y,$ca       6911  jmp(Y,'REENTER_28')             #23
              1715 c217  st   [$17]       6912  st([vPC+1])                     #24
                                          6913
                                          6914  # SUBW implemetation
                                          6915  label('subw#13')
subw#13:      1716 8001  adda $01         6916  adda(1)                         #13
              1717 c21d  st   [$1d]       6917  st([vTmp])                      #14 Address of high byte to be subtracted
              1718 0118  ld   [$18]       6918  ld([vAC])                       #15 Low byte
              1719 e826  blt  .subw#18    6919  bmi('.subw#18')                 #16
              171a a500  suba [x]         6920  suba([X])                       #17
              171b c218  st   [$18]       6921  st([vAC])                       #18 Store low result
              171c 4500  ora  [x]         6922  ora([X])                        #19 Carry in bit 7
              171d 3080  anda $80,x       6923  anda(0x80,X)                    #20 Move carry to bit 0
              171e 0119  ld   [$19]       6924  ld([vAC+1])                     #21
              171f a500  suba [x]         6925  suba([X])                       #22
              1720 111d  ld   [$1d],x     6926  ld([vTmp],X)                    #23
              1721 a500  suba [x]         6927  suba([X])                       #24
              1722 c219  st   [$19]       6928  st([vAC+1])                     #25
              1723 1403  ld   $03,y       6929  ld(hi('NEXTY'),Y)               #26
              1724 e000  jmp  y,$00       6930  jmp(Y,'NEXTY')                  #27
              1725 00f1  ld   $f1         6931  ld(-30/2)                       #28
                                          6932  label('.subw#18')
.subw#18:     1726 c218  st   [$18]       6933  st([vAC])                       #18 Store low result
              1727 2500  anda [x]         6934  anda([X])                       #19 Carry in bit 7
              1728 3080  anda $80,x       6935  anda(0x80,X)                    #20 Move carry to bit 0
              1729 0119  ld   [$19]       6936  ld([vAC+1])                     #21
              172a a500  suba [x]         6937  suba([X])                       #22
              172b 111d  ld   [$1d],x     6938  ld([vTmp],X)                    #23
              172c a500  suba [x]         6939  suba([X])                       #24
              172d c219  st   [$19]       6940  st([vAC+1])                     #25
              172e 1403  ld   $03,y       6941  ld(hi('NEXTY'),Y)               #26
              172f e000  jmp  y,$00       6942  jmp(Y,'NEXTY')                  #27
              1730 00f1  ld   $f1         6943  ld(-30/2)                       #28
                                          6944
                                          6945  # BEQ implementation
                                          6946  label('beq#15')
beq#15:       1731 0119  ld   [$19]       6947  ld([vAC+1])                     #15
              1732 4118  ora  [$18]       6948  ora([vAC])                      #16
              1733 f03b  beq  .beq#19     6949  beq('.beq#19')                  #17 if (vAC.hi OR vAC.lo) == 0
              1734 0d00  ld   [y,x]       6950  ld([Y,X])                       #18 address of branch destination
              1735 0116  ld   [$16]       6951  ld([vPC])                       #19
              1736 8001  adda $01         6952  adda(1)                         #20
              1737 c216  st   [$16]       6953  st([vPC])                       #21
              1738 1403  ld   $03,y       6954  ld(hi('NEXTY'),Y)               #22
              1739 e000  jmp  y,$00       6955  jmp(Y,'NEXTY')                  #23
              173a 00f3  ld   $f3         6956  ld(-26/2)                       #24
                                          6957  label('.beq#19')
.beq#19:      173b c216  st   [$16]       6958  st([vPC])                       #19
              173c 1403  ld   $03,y       6959  ld(hi('NEXTY'),Y)               #20
              173d e000  jmp  y,$00       6960  jmp(Y,'NEXTY')                  #21
              173e 00f4  ld   $f4         6961  ld(-24/2)                       #22
                                          6962
                                          6963  # BNE implementation
                                          6964  label('bne#15')
bne#15:       173f 0119  ld   [$19]       6965  ld([vAC+1])                     #15
              1740 4118  ora  [$18]       6966  ora([vAC])                      #16
              1741 ec49  bne  .bne#19     6967  bne('.bne#19')                  #17 if (vAC.hi OR vAC.lo) != 0
              1742 0d00  ld   [y,x]       6968  ld([Y,X])                       #18 address of branch destination
              1743 0116  ld   [$16]       6969  ld([vPC])                       #19
              1744 8001  adda $01         6970  adda(1)                         #20
              1745 c216  st   [$16]       6971  st([vPC])                       #21
              1746 1403  ld   $03,y       6972  ld(hi('NEXTY'),Y)               #22
              1747 e000  jmp  y,$00       6973  jmp(Y,'NEXTY')                  #23
              1748 00f3  ld   $f3         6974  ld(-26/2)                       #24
                                          6975  label('.bne#19')
.bne#19:      1749 c216  st   [$16]       6976  st([vPC])                       #19
              174a 1403  ld   $03,y       6977  ld(hi('NEXTY'),Y)               #20
              174b e000  jmp  y,$00       6978  jmp(Y,'NEXTY')                  #21
              174c 00f4  ld   $f4         6979  ld(-24/2)                       #22
                                          6980
                                          6981  # BGT implementation
                                          6982  label('bgt#15')
bgt#15:       174d 0119  ld   [$19]       6983  ld([vAC+1])                     #15
              174e e857  blt  .bgt#18     6984  blt('.bgt#18')                  #16 if vAC.hi < 0
              174f 4118  ora  [$18]       6985  ora([vAC])                      #17
              1750 ec5d  bne  .bgt#20     6986  bne('.bgt#20')                  #18 if (vAC.hi OR vAC.lo) != 0
              1751 0116  ld   [$16]       6987  ld([vPC])                       #19
              1752 8001  adda $01         6988  adda(1)                         #20
              1753 c216  st   [$16]       6989  st([vPC])                       #21
              1754 1403  ld   $03,y       6990  ld(hi('NEXTY'),Y)               #22
              1755 e000  jmp  y,$00       6991  jmp(Y,'NEXTY')                  #23
              1756 00f3  ld   $f3         6992  ld(-26/2)                       #24
                                          6993  label('.bgt#18')
.bgt#18:      1757 0116  ld   [$16]       6994  ld([vPC])                       #18
              1758 8001  adda $01         6995  adda(1)                         #19
              1759 c216  st   [$16]       6996  st([vPC])                       #20
              175a 1403  ld   $03,y       6997  ld(hi('REENTER'),Y)             #21
              175b e0cb  jmp  y,$cb       6998  jmp(Y,'REENTER')                #22
              175c 00f3  ld   $f3         6999  ld(-26/2)                       #23
                                          7000  label('.bgt#20')
.bgt#20:      175d 0d00  ld   [y,x]       7001  ld([Y,X])                       #20 address of branch destination
              175e c216  st   [$16]       7002  st([vPC])                       #21
              175f 1403  ld   $03,y       7003  ld(hi('NEXTY'),Y)               #22
              1760 e000  jmp  y,$00       7004  jmp(Y,'NEXTY')                  #23
              1761 00f3  ld   $f3         7005  ld(-26/2)                       #24
                                          7006
                                          7007  # BLT implementation
                                          7008  label('blt#15')
blt#15:       1762 0119  ld   [$19]       7009  ld([vAC+1])                     #15
              1763 e86a  blt  .blt#18     7010  blt('.blt#18')                  #16 if vAC.hi < 0
              1764 0116  ld   [$16]       7011  ld([vPC])                       #17
              1765 8001  adda $01         7012  adda(1)                         #18
              1766 c216  st   [$16]       7013  st([vPC])                       #19
              1767 1403  ld   $03,y       7014  ld(hi('NEXTY'),Y)               #20
              1768 e000  jmp  y,$00       7015  jmp(Y,'NEXTY')                  #21
              1769 00f4  ld   $f4         7016  ld(-24/2)                       #22
                                          7017  label('.blt#18')
.blt#18:      176a 0d00  ld   [y,x]       7018  ld([Y,X])                       #18 address of branch destination
              176b c216  st   [$16]       7019  st([vPC])                       #19
              176c 1403  ld   $03,y       7020  ld(hi('NEXTY'),Y)               #20
              176d e000  jmp  y,$00       7021  jmp(Y,'NEXTY')                  #21
              176e 00f4  ld   $f4         7022  ld(-24/2)                       #22
                                          7023
                                          7024  # BGE implementation
                                          7025  label('bge#15')
bge#15:       176f 0119  ld   [$19]       7026  ld([vAC+1])                     #15
              1770 e877  blt  .bge#18     7027  blt('.bge#18')                  #16 if vAC.hi < 0
              1771 0116  ld   [$16]       7028  ld([vPC])                       #17
              1772 0d00  ld   [y,x]       7029  ld([Y,X])                       #18 address of branch destination
              1773 c216  st   [$16]       7030  st([vPC])                       #19
              1774 1403  ld   $03,y       7031  ld(hi('NEXTY'),Y)               #20
              1775 e000  jmp  y,$00       7032  jmp(Y,'NEXTY')                  #21
              1776 00f4  ld   $f4         7033  ld(-24/2)                       #22
                                          7034  label('.bge#18')
.bge#18:      1777 8001  adda $01         7035  adda(1)                         #18
              1778 c216  st   [$16]       7036  st([vPC])                       #19
              1779 1403  ld   $03,y       7037  ld(hi('NEXTY'),Y)               #20
              177a e000  jmp  y,$00       7038  jmp(Y,'NEXTY')                  #21
              177b 00f4  ld   $f4         7039  ld(-24/2)                       #22
                                          7040
                                          7041  # BLE implementation
                                          7042  label('ble#15')
ble#15:       177c 0119  ld   [$19]       7043  ld([vAC+1])                     #15
              177d e886  blt  .ble#18     7044  blt('.ble#18')                  #16 if vAC.hi < 0
              177e 4118  ora  [$18]       7045  ora([vAC])                      #17
              177f ec8b  bne  .ble#20     7046  bne('.ble#20')                  #18 if (vAC.hi OR vAC.lo) != 0
              1780 0116  ld   [$16]       7047  ld([vPC])                       #19
              1781 0d00  ld   [y,x]       7048  ld([Y,X])                       #20 address of branch destination
              1782 c216  st   [$16]       7049  st([vPC])                       #21
              1783 1403  ld   $03,y       7050  ld(hi('NEXTY'),Y)               #22
              1784 e000  jmp  y,$00       7051  jmp(Y,'NEXTY')                  #23
              1785 00f3  ld   $f3         7052  ld(-26/2)                       #24
                                          7053  label('.ble#18')
.ble#18:      1786 0d00  ld   [y,x]       7054  ld([Y,X])                       #18 address of branch destination
              1787 c216  st   [$16]       7055  st([vPC])                       #19
              1788 1403  ld   $03,y       7056  ld(hi('NEXTY'),Y)               #20
              1789 e000  jmp  y,$00       7057  jmp(Y,'NEXTY')                  #21
              178a 00f4  ld   $f4         7058  ld(-24/2)                       #22
                                          7059  label('.ble#20')
.ble#20:      178b 8001  adda $01         7060  adda(1)                         #20
              178c c216  st   [$16]       7061  st([vPC])                       #21
              178d 1403  ld   $03,y       7062  ld(hi('NEXTY'),Y)               #22
              178e e000  jmp  y,$00       7063  jmp(Y,'NEXTY')                  #23
              178f 00f3  ld   $f3         7064  ld(-26/2)                       #24
                                          7065
                                          7066  # ADDBA implementation
                                          7067  label('addba#13')
addba#13:     1790 1200  ld   ac,x        7068  ld(AC,X)                        #13 src var
              1791 0118  ld   [$18]       7069  ld([vAC])                       #14
              1792 8500  adda [x]         7070  adda([X])                       #15
              1793 c218  st   [$18]       7071  st([vAC])                       #16 vAC.lo += var.lo
              1794 e89e  blt  .addba#19   7072  bmi('.addba#19')                #17 Now figure out if there was a carry
              1795 a500  suba [x]         7073  suba([X])                       #18 Gets back the initial value of vAC
              1796 4500  ora  [x]         7074  ora([X])                        #19 Carry in bit 7
              1797 3080  anda $80,x       7075  anda(0x80,X)                    #20 Move carry to bit 0
              1798 0500  ld   [x]         7076  ld([X])                         #21
              1799 8119  adda [$19]       7077  adda([vAC+1])                   #22 Add the high byte and carry
              179a c219  st   [$19]       7078  st([vAC+1])                     #23 Store high result
              179b 1403  ld   $03,y       7079  ld(hi('NEXTY'),Y)               #24
              179c e000  jmp  y,$00       7080  jmp(Y,'NEXTY')                  #25
              179d 00f2  ld   $f2         7081  ld(-28/2)                       #26
                                          7082  label('.addba#19')
.addba#19:    179e 2500  anda [x]         7083  anda([X])                       #19 Carry in bit 7
              179f 3080  anda $80,x       7084  anda(0x80,X)                    #20 Move carry to bit 0
              17a0 0500  ld   [x]         7085  ld([X])                         #21
              17a1 8119  adda [$19]       7086  adda([vAC+1])                   #22 Add high byte and carry
              17a2 c219  st   [$19]       7087  st([vAC+1])                     #23 Store high result
              17a3 1403  ld   $03,y       7088  ld(hi('NEXTY'),Y)               #24
              17a4 e000  jmp  y,$00       7089  jmp(Y,'NEXTY')                  #25
              17a5 00f2  ld   $f2         7090  ld(-28/2)                       #26
                                          7091
                                          7092  # SUBBA implementation
                                          7093  label('subba#13')
subba#13:     17a6 1200  ld   ac,x        7094  ld(AC,X)                        #13 src var
              17a7 0118  ld   [$18]       7095  ld([vAC])                       #14
              17a8 e8b3  blt  .subba#17   7096  bmi('.subba#17')                 #15
              17a9 a500  suba [x]         7097  suba([X])                       #16
              17aa c218  st   [$18]       7098  st([vAC])                       #17 vAC.lo -= var.lo
              17ab 4500  ora  [x]         7099  ora([X])                        #18 Borrow in bit 7
              17ac 3080  anda $80,x       7100  anda(0x80,X)                    #19 Move borrow to bit 0
              17ad 0119  ld   [$19]       7101  ld([vAC+1])                     #20
              17ae a500  suba [x]         7102  suba([X])                       #21 Sub borrow from high byte
              17af c219  st   [$19]       7103  st([vAC+1])                     #22 Store high result
              17b0 1403  ld   $03,y       7104  ld(hi('REENTER'),Y)             #23
              17b1 e0cb  jmp  y,$cb       7105  jmp(Y,'REENTER')                #24
              17b2 00f2  ld   $f2         7106  ld(-28/2)                       #25
                                          7107  label('.subba#17')
.subba#17:    17b3 c218  st   [$18]       7108  st([vAC])                       #17
              17b4 2500  anda [x]         7109  anda([X])                       #18 Borrow in bit 7
              17b5 3080  anda $80,x       7110  anda(0x80,X)                    #19 Move borrow to bit 0
              17b6 0119  ld   [$19]       7111  ld([vAC+1])                     #20
              17b7 a500  suba [x]         7112  suba([X])                       #21 Sub borrow from high byte
              17b8 c219  st   [$19]       7113  st([vAC+1])                     #22 Store high result
              17b9 1403  ld   $03,y       7114  ld(hi('REENTER'),Y)             #23
              17ba e0cb  jmp  y,$cb       7115  jmp(Y,'REENTER')                #24
              17bb 00f2  ld   $f2         7116  ld(-28/2)                       #25
                                          7117
                                          7118  # ADDB implementation, dst += src, does NOT modify dst.hi
                                          7119  #label('addb#13')
                                          7120  #ld([vPC+1],Y)                   #13
                                          7121  #st([vTmp])                      #14 dst var
                                          7122  #st([Y,Xpp])                     #15 X++
                                          7123  #ld([Y,X])                       #16
                                          7124  #ld(AC,X)                        #17 src var
                                          7125  #ld([X])                         #18
                                          7126  #ld([vTmp],X)                    #19
                                          7127  #adda([X])                       #20
                                          7128  #st([X])                         #21 dst += src
                                          7129  #ld([vPC])                       #22
                                          7130  #adda(1)                         #23
                                          7131  #st([vPC])                       #24 advance vPC by 1
                                          7132  #ld(hi('REENTER'),Y)             #25
                                          7133  #jmp(Y,'REENTER')                #26
                                          7134  #ld(-30/2)                       #27
                                          7135
                                          7136  # ADDBA implementation, vAC.lo = dst + src, does NOT modify vAC.hi
                                          7137  #label('addba#13')
                                          7138  #ld([vPC+1],Y)                   #13
                                          7139  #st([vTmp])                      #14 dst var
                                          7140  #st([Y,Xpp])                     #15 X++
                                          7141  #ld([Y,X])                       #16
                                          7142  #ld(AC,X)                        #17 src var
                                          7143  #ld([X])                         #18
                                          7144  #ld([vTmp],X)                    #19
                                          7145  #adda([X])                       #20
                                          7146  #st([vAC])                       #21 vAC.lo = dst + src
                                          7147  #ld([vPC])                       #22
                                          7148  #adda(1)                         #23
                                          7149  #st([vPC])                       #24 advance vPC by 1
                                          7150  #ld(hi('REENTER'),Y)             #25
                                          7151  #jmp(Y,'REENTER')                #26
                                          7152  #ld(-30/2)                       #27
                                          7153
                                          7154  # POKEA implementation
                                          7155  label('pokea#13')
pokea#13:     17bc 1200  ld   ac,x        7156  ld(AC,X)                        #13
              17bd 0500  ld   [x]         7157  ld([X])                         #14 var.lo
              17be 1118  ld   [$18],x     7158  ld([vAC],X)                     #15
              17bf 1519  ld   [$19],y     7159  ld([vAC+1],Y)                   #16
              17c0 ce00  st   [y,x]       7160  st([Y,X])                       #17 poke [vAC], var.lo
              17c1 1403  ld   $03,y       7161  ld(hi('NEXTY'),Y)               #18
              17c2 e000  jmp  y,$00       7162  jmp(Y,'NEXTY')                  #19
              17c3 00f5  ld   $f5         7163  ld(-22/2)                       #20
                                          7164
                                          7165  # DOKEA implementation
                                          7166  label('dokea#13')
dokea#13:     17c4 d21d  st   [$1d],x     7167  st([vTmp],X)                    #13
              17c5 0500  ld   [x]         7168  ld([X])                         #14 var.lo
              17c6 1118  ld   [$18],x     7169  ld([vAC],X)                     #15
              17c7 1519  ld   [$19],y     7170  ld([vAC+1],Y)                   #16
              17c8 ce00  st   [y,x]       7171  st([Y,X])                       #17 poke [vAC], var.lo
              17c9 011d  ld   [$1d]       7172  ld([vTmp])                      #18
              17ca 9001  adda $01,x       7173  adda(1,X)                       #19
              17cb 0500  ld   [x]         7174  ld([X])                         #20 var.hi
              17cc c21d  st   [$1d]       7175  st([vTmp])                      #21
              17cd 0118  ld   [$18]       7176  ld([vAC])                       #22
              17ce 9001  adda $01,x       7177  adda(1,X)                       #23
              17cf 011d  ld   [$1d]       7178  ld([vTmp])                      #24
              17d0 ce00  st   [y,x]       7179  st([Y,X])                       #25 poke [vAC+1], var.hi
              17d1 1403  ld   $03,y       7180  ld(hi('NEXTY'),Y)               #26
              17d2 e000  jmp  y,$00       7181  jmp(Y,'NEXTY')                  #27
              17d3 00f1  ld   $f1         7182  ld(-30/2)                       #28
                                          7183
                                          7184  # POKEI implementation
                                          7185  label('pokei#13')
pokei#13:     17d4 1519  ld   [$19],y     7186  ld([vAC+1],Y)                   #13
              17d5 1118  ld   [$18],x     7187  ld([vAC],X)                     #14
              17d6 de00  st   [y,x++]     7188  st([Y,Xpp])                     #15
              17d7 1403  ld   $03,y       7189  ld(hi('NEXTY'),Y)               #16
              17d8 e000  jmp  y,$00       7190  jmp(Y,'NEXTY')                  #17
              17d9 00f6  ld   $f6         7191  ld(-20/2)                       #18
                                          7192
                                          7193  # DOKEI implementation
                                          7194  label('dokei#13')
dokei#13:     17da 1517  ld   [$17],y     7195  ld([vPC+1],Y)                   #13
              17db c21d  st   [$1d]       7196  st([vTmp])                      #14 imm.hi
              17dc de00  st   [y,x++]     7197  st([Y,Xpp])                     #15 X++
              17dd 0d00  ld   [y,x]       7198  ld([Y,X])                       #16 imm.lo
              17de 1519  ld   [$19],y     7199  ld([vAC+1],Y)                   #17
              17df 1118  ld   [$18],x     7200  ld([vAC],X)                     #18
              17e0 de00  st   [y,x++]     7201  st([Y,Xpp])                     #19
              17e1 011d  ld   [$1d]       7202  ld([vTmp])                      #20
              17e2 ce00  st   [y,x]       7203  st([Y,X])                       #21
              17e3 0116  ld   [$16]       7204  ld([vPC])                       #22
              17e4 8001  adda $01         7205  adda(1)                         #23
              17e5 c216  st   [$16]       7206  st([vPC])                       #24
              17e6 1403  ld   $03,y       7207  ld(hi('REENTER'),Y)             #25
              17e7 e0cb  jmp  y,$cb       7208  jmp(Y,'REENTER')                #26
              17e8 00f1  ld   $f1         7209  ld(-30/2)                       #27
                                          7210
                                          7211  # DEEK+ implementation
                                          7212  label('deek+#13')
deek+#13:     17e9 1200  ld   ac,x        7213  ld(AC,X)                        #13
              17ea 0500  ld   [x]         7214  ld([X])                         #14 low byte deek address
              17eb c21d  st   [$1d]       7215  st([vTmp])                      #15
              17ec 8002  adda $02         7216  adda(2)                         #16
              17ed de00  st   [y,x++]     7217  st([Y,Xpp])                     #17
              17ee 0500  ld   [x]         7218  ld([X])                         #18 high byte deek address
              17ef 1600  ld   ac,y        7219  ld(AC,Y)                        #19
              17f0 111d  ld   [$1d],x     7220  ld([vTmp],X)                    #20
              17f1 0d00  ld   [y,x]       7221  ld([Y,X])                       #21
              17f2 de00  st   [y,x++]     7222  st([Y,Xpp])                     #22 X++
              17f3 c218  st   [$18]       7223  st([vAC])                       #23
              17f4 0d00  ld   [y,x]       7224  ld([Y,X])                       #24
              17f5 c219  st   [$19]       7225  st([vAC+1])                     #25
              17f6 1403  ld   $03,y       7226  ld(hi('NEXTY'),Y)               #26
              17f7 e000  jmp  y,$00       7227  jmp(Y,'NEXTY')                  #27
              17f8 00f1  ld   $f1         7228  ld(-30/2)                       #28
                                          7229
                                          7230
              17f9 0200  nop              7231  fillers(until=0xff)
              17fa 0200  nop
              17fb 0200  nop
              * 6 times
              17ff 0200  nop              7232  align(0x100, size=0x100)
                                          7233
                                          7234  #-----------------------------------------------------------------------
                                          7235  #       More vCPU instruction implementations, (0x1800)
                                          7236  #-----------------------------------------------------------------------
                                          7237
                                          7238  # SYS retry implementation
                                          7239  label('.sys#16')
.sys#16:      1800 0116  ld   [$16]       7240  ld([vPC])                       #16
              1801 a002  suba $02         7241  suba(2)                         #17
              1802 c216  st   [$16]       7242  st([vPC])                       #18
              1803 1403  ld   $03,y       7243  ld(hi('REENTER'),Y)             #19
              1804 e0cb  jmp  y,$cb       7244  jmp(Y,'REENTER')                #20
              1805 00f4  ld   $f4         7245  ld(-24/2)                       #21
                                          7246
                                          7247  # LUP return, no longer part of PEEK
                                          7248  label('lupReturn#19')
lupReturn#19: 1806 0000  ld   $00         7249  ld(0)                           #19
              1807 c219  st   [$19]       7250  st([vAC+1])                     #20
              1808 1403  ld   $03,y       7251  ld(hi('REENTER'),Y)             #21
              1809 e0cb  jmp  y,$cb       7252  jmp(Y,'REENTER')                #22
              180a 00f3  ld   $f3         7253  ld(-26/2)                       #23
                                          7254
                                          7255  # NOTB implementation
                                          7256  label('notb#13')
notb#13:      180b 1200  ld   ac,x        7257  ld(AC,X)                        #13 address of var
              180c 0500  ld   [x]         7258  ld([X])                         #14
              180d 60ff  xora $ff         7259  xora(255)                       #15
              180e c600  st   [x]         7260  st([X])                         #16
              180f 1403  ld   $03,y       7261  ld(hi('REENTER'),Y)             #17
              1810 e0cb  jmp  y,$cb       7262  jmp(Y,'REENTER')                #18
              1811 00f5  ld   $f5         7263  ld(-22/2)                       #19
                                          7264
                                          7265  # DOKE+ implementation
                                          7266  label('doke+#13')
doke+#13:     1812 1200  ld   ac,x        7267  ld(AC,X)                        #13
              1813 1400  ld   $00,y       7268  ld(0,Y)                         #14
              1814 0500  ld   [x]         7269  ld([X])                         #15 low byte poke address
              1815 c21d  st   [$1d]       7270  st([vTmp])                      #16
              1816 8002  adda $02         7271  adda(2)                         #17
              1817 de00  st   [y,x++]     7272  st([Y,Xpp])                     #18
              1818 0500  ld   [x]         7273  ld([X])                         #19 high byte poke address
              1819 1600  ld   ac,y        7274  ld(AC,Y)                        #20
              181a 111d  ld   [$1d],x     7275  ld([vTmp],X)                    #21
              181b 0118  ld   [$18]       7276  ld([vAC])                       #22
              181c de00  st   [y,x++]     7277  st([Y,Xpp])                     #23
              181d 0119  ld   [$19]       7278  ld([vAC+1])                     #24
              181e ce00  st   [y,x]       7279  st([Y,X])                       #25
              181f 1403  ld   $03,y       7280  ld(hi('NEXTY'),Y)               #26
              1820 e000  jmp  y,$00       7281  jmp(Y,'NEXTY')                  #27
              1821 00f1  ld   $f1         7282  ld(-30/2)                       #28
                                          7283
                                          7284  # XORI implementation
                                          7285  label('xori#13')
xori#13:      1822 6118  xora [$18]       7286  xora([vAC])                     #13
              1823 c218  st   [$18]       7287  st([vAC])                       #14
              1824 1403  ld   $03,y       7288  ld(hi('REENTER'),Y)             #15
              1825 e0cb  jmp  y,$cb       7289  jmp(Y,'REENTER')                #16
              1826 00f6  ld   $f6         7290  ld(-20/2)                       #17
                                          7291
                                          7292  # NOP implementation
                                          7293  label('nop#13')
nop#13:       1827 0116  ld   [$16]       7294  ld([vPC])                       #13
              1828 a001  suba $01         7295  suba(1)                         #14
              1829 c216  st   [$16]       7296  st([vPC])                       #15 vPC--
              182a 1403  ld   $03,y       7297  ld(hi('NEXTY'),Y)               #16
              182b e000  jmp  y,$00       7298  jmp(Y,'NEXTY')                  #17
              182c 00f6  ld   $f6         7299  ld(-20/2)                       #18
                                          7300
                                          7301  # BRA implementation
                                          7302  label('bra#13')
bra#13:       182d 1403  ld   $03,y       7303  ld(hi('REENTER'),Y)             #13
              182e e0cb  jmp  y,$cb       7304  jmp(Y,'REENTER')                #14
              182f 00f7  ld   $f7         7305  ld(-18/2)                       #15
                                          7306
                                          7307  # DBGE implementation
                                          7308  label('dbge#13')
dbge#13:      1830 1517  ld   [$17],y     7309  ld([vPC+1],Y)                   #13 vPC.hi
              1831 c21d  st   [$1d]       7310  st([vTmp])                      #14 branch offset
              1832 de00  st   [y,x++]     7311  st([Y,Xpp])                     #15 X++, address of counter
              1833 0d00  ld   [y,x]       7312  ld([Y,X])                       #16
              1834 1200  ld   ac,x        7313  ld(AC,X)                        #17 fetch counter
              1835 0500  ld   [x]         7314  ld([X])                         #18
              1836 a001  suba $01         7315  suba(1)                         #19 decrement counter
              1837 e83e  blt  .dbge#22    7316  blt('.dbge#22')                 #20 if < 0 BRA
              1838 c600  st   [x]         7317  st([X])                         #21
              1839 011d  ld   [$1d]       7318  ld([vTmp])                      #22
              183a c216  st   [$16]       7319  st([vPC])                       #23 BRA to branch offset
              183b 1403  ld   $03,y       7320  ld(hi('NEXTY'),Y)               #24
              183c e000  jmp  y,$00       7321  jmp(Y,'NEXTY')                  #25
              183d 00f2  ld   $f2         7322  ld(-28/2)                       #26
                                          7323  label('.dbge#22')
.dbge#22:     183e 0116  ld   [$16]       7324  ld([vPC])                       #22
              183f 8001  adda $01         7325  adda(1)                         #23
              1840 c216  st   [$16]       7326  st([vPC])                       #24 advance vPC by 1
              1841 1403  ld   $03,y       7327  ld(hi('REENTER'),Y)             #25
              1842 e0cb  jmp  y,$cb       7328  jmp(Y,'REENTER')                #26
              1843 00f1  ld   $f1         7329  ld(-30/2)                       #27
                                          7330
                                          7331  # LDNI implementation
                                          7332  label('ldni#13')
ldni#13:      1844 60ff  xora $ff         7333  xora(255)                       #13
              1845 8001  adda $01         7334  adda(1)                         #14
              1846 c218  st   [$18]       7335  st([vAC])                       #15
              1847 00ff  ld   $ff         7336  ld(255)                         #16
              1848 c219  st   [$19]       7337  st([vAC+1])                     #17
              1849 1403  ld   $03,y       7338  ld(hi('NEXTY'),Y)               #18
              184a e000  jmp  y,$00       7339  jmp(Y,'NEXTY')                  #19
              184b 00f5  ld   $f5         7340  ld(-22/2)                       #20
                                          7341
                                          7342  # ANDBK implementation
                                          7343  label('andbk#13')
andbk#13:     184c 1517  ld   [$17],y     7344  ld([vPC+1],Y)                   #13
              184d c21d  st   [$1d]       7345  st([vTmp])                      #14 immediate value
              184e de00  st   [y,x++]     7346  st([Y,Xpp])                     #15 X++
              184f 0d00  ld   [y,x]       7347  ld([Y,X])                       #16
              1850 1200  ld   ac,x        7348  ld(AC,X)                        #17 address of var
              1851 0500  ld   [x]         7349  ld([X])                         #18
              1852 211d  anda [$1d]       7350  anda([vTmp])                    #19
              1853 c218  st   [$18]       7351  st([vAC])                       #20
              1854 0000  ld   $00         7352  ld(0)                           #21
              1855 c219  st   [$19]       7353  st([vAC+1])                     #22 Store high result
              1856 0116  ld   [$16]       7354  ld([vPC])                       #23
              1857 8001  adda $01         7355  adda(1)                         #24
              1858 c216  st   [$16]       7356  st([vPC])                       #25 advance vPC by 1
              1859 1403  ld   $03,y       7357  ld(hi('NEXTY'),Y)               #26
              185a e000  jmp  y,$00       7358  jmp(Y,'NEXTY')                  #27
              185b 00f1  ld   $f1         7359  ld(-30/2)                       #28
                                          7360
                                          7361  # ORBK implementation
                                          7362  label('orbk#13')
orbk#13:      185c 1517  ld   [$17],y     7363  ld([vPC+1],Y)                   #13
              185d c21d  st   [$1d]       7364  st([vTmp])                      #14 immediate value
              185e de00  st   [y,x++]     7365  st([Y,Xpp])                     #15 X++
              185f 0d00  ld   [y,x]       7366  ld([Y,X])                       #16
              1860 1200  ld   ac,x        7367  ld(AC,X)                        #17 address of var
              1861 0500  ld   [x]         7368  ld([X])                         #18
              1862 411d  ora  [$1d]       7369  ora([vTmp])                     #19
              1863 c218  st   [$18]       7370  st([vAC])                       #20
              1864 0000  ld   $00         7371  ld(0)                           #21
              1865 c219  st   [$19]       7372  st([vAC+1])                     #22 Store high result
              1866 0116  ld   [$16]       7373  ld([vPC])                       #23
              1867 8001  adda $01         7374  adda(1)                         #24
              1868 c216  st   [$16]       7375  st([vPC])                       #25 advance vPC by 1
              1869 1403  ld   $03,y       7376  ld(hi('NEXTY'),Y)               #26
              186a e000  jmp  y,$00       7377  jmp(Y,'NEXTY')                  #27
              186b 00f1  ld   $f1         7378  ld(-30/2)                       #28
                                          7379
                                          7380  # XORBK implementation
                                          7381  label('xorbk#13')
xorbk#13:     186c 1517  ld   [$17],y     7382  ld([vPC+1],Y)                   #13
              186d c21d  st   [$1d]       7383  st([vTmp])                      #14 immediate value
              186e de00  st   [y,x++]     7384  st([Y,Xpp])                     #15 X++
              186f 0d00  ld   [y,x]       7385  ld([Y,X])                       #16
              1870 1200  ld   ac,x        7386  ld(AC,X)                        #17 address of var
              1871 0500  ld   [x]         7387  ld([X])                         #18
              1872 611d  xora [$1d]       7388  xora([vTmp])                    #19
              1873 c218  st   [$18]       7389  st([vAC])                       #20
              1874 0000  ld   $00         7390  ld(0)                           #21
              1875 c219  st   [$19]       7391  st([vAC+1])                     #22 Store high result
              1876 0116  ld   [$16]       7392  ld([vPC])                       #23
              1877 8001  adda $01         7393  adda(1)                         #24
              1878 c216  st   [$16]       7394  st([vPC])                       #25 advance vPC by 1
              1879 1403  ld   $03,y       7395  ld(hi('NEXTY'),Y)               #26
              187a e000  jmp  y,$00       7396  jmp(Y,'NEXTY')                  #27
              187b 00f1  ld   $f1         7397  ld(-30/2)                       #28
                                          7398
                                          7399  # CMPI implementation
                                          7400  label('cmpi#13')
cmpi#13:      187c c21d  st   [$1d]       7401  st([vTmp])                      #13 immediate value
              187d 00fd  ld   $fd         7402  ld(min(0,maxTicks-36/2))        #14
              187e 8115  adda [$15]       7403  adda([vTicks])                  #15
              187f e89c  blt  .cmpi#18    7404  blt('.cmpi#18')                 #16 not enough time left, so retry
              1880 1517  ld   [$17],y     7405  ld([vPC+1],Y)                   #17
              1881 011d  ld   [$1d]       7406  ld([vTmp])                      #18 immediate value
              1882 de00  st   [y,x++]     7407  st([Y,Xpp])                     #19 X++
              1883 0d00  ld   [y,x]       7408  ld([Y,X])                       #20 address of var
              1884 1200  ld   ac,x        7409  ld(AC,X)                        #21
              1885 0500  ld   [x]         7410  ld([X])                         #22 low byte of var
              1886 e892  blt  .cmpi#25    7411  bmi('.cmpi#25')                 #23
              1887 a11d  suba [$1d]       7412  suba([vTmp])                    #24
              1888 c218  st   [$18]       7413  st([vAC])                       #25 store low result
              1889 411d  ora  [$1d]       7414  ora([vTmp])                     #26
              188a 2080  anda $80         7415  anda(0x80)                      #27
              188b c219  st   [$19]       7416  st([vAC+1])                     #28 [vAC.hi] = sign bit, numerical accuracy is not important
              188c 0116  ld   [$16]       7417  ld([vPC])                       #29
              188d 8001  adda $01         7418  adda(1)                         #30
              188e c216  st   [$16]       7419  st([vPC])                       #31 advance vPC by 1
              188f 1403  ld   $03,y       7420  ld(hi('NEXTY'),Y)               #32
              1890 e000  jmp  y,$00       7421  jmp(Y,'NEXTY')                  #33
              1891 00ee  ld   $ee         7422  ld(-36/2)                       #34
                                          7423  label('.cmpi#25')
.cmpi#25:     1892 c218  st   [$18]       7424  st([vAC])                       #25 store low result
              1893 211d  anda [$1d]       7425  anda([vTmp])                    #26
              1894 2080  anda $80         7426  anda(0x80)                      #27
              1895 c219  st   [$19]       7427  st([vAC+1])                     #28 [vAC.hi] = sign bit, numerical accuracy is not important
              1896 0116  ld   [$16]       7428  ld([vPC])                       #29
              1897 8001  adda $01         7429  adda(1)                         #30
              1898 c216  st   [$16]       7430  st([vPC])                       #31 advance vPC by 1
              1899 1403  ld   $03,y       7431  ld(hi('NEXTY'),Y)               #32
              189a e000  jmp  y,$00       7432  jmp(Y,'NEXTY')                  #33
              189b 00ee  ld   $ee         7433  ld(-36/2)                       #34
                                          7434  label('.cmpi#18')
.cmpi#18:     189c 0116  ld   [$16]       7435  ld([vPC])                       #18 retry instruction
              189d a002  suba $02         7436  suba(2)                         #19
              189e c216  st   [$16]       7437  st([vPC])                       #20
              189f 1403  ld   $03,y       7438  ld(hi('REENTER'),Y)             #21
              18a0 e0cb  jmp  y,$cb       7439  jmp(Y,'REENTER')                #22
              18a1 00f3  ld   $f3         7440  ld(-26/2)                       #23
                                          7441
                                          7442  # JEQ implementation
                                          7443  label('jeq#13')
jeq#13:       18a2 1517  ld   [$17],y     7444  ld([vPC+1],Y)                   #13 vPC.hi
              18a3 0119  ld   [$19]       7445  ld([vAC+1])                     #14
              18a4 4118  ora  [$18]       7446  ora([vAC])                      #15
              18a5 f0ad  beq  .jeq#18     7447  beq('.jeq#18')                  #16 if (vAC.hi OR vAC.lo) == 0
              18a6 0d00  ld   [y,x]       7448  ld([Y,X])                       #17 lo address of jump destination
              18a7 0116  ld   [$16]       7449  ld([vPC])                       #18
              18a8 8001  adda $01         7450  adda(1)                         #19
              18a9 c216  st   [$16]       7451  st([vPC])                       #20
              18aa 1403  ld   $03,y       7452  ld(hi('REENTER'),Y)             #21
              18ab e0cb  jmp  y,$cb       7453  jmp(Y,'REENTER')                #22
              18ac 00f3  ld   $f3         7454  ld(-26/2)                       #23
                                          7455  label('.jeq#18')
.jeq#18:      18ad c216  st   [$16]       7456  st([vPC])                       #18
              18ae de00  st   [y,x++]     7457  st([Y,Xpp])                     #19
              18af 0d00  ld   [y,x]       7458  ld([Y,X])                       #20 hi address of jump destination
              18b0 c217  st   [$17]       7459  st([vPC+1])                     #21
              18b1 1403  ld   $03,y       7460  ld(hi('NEXTY'),Y)               #22
              18b2 e000  jmp  y,$00       7461  jmp(Y,'NEXTY')                  #23
              18b3 00f3  ld   $f3         7462  ld(-26/2)                       #24
                                          7463
                                          7464  # JNE implementation
                                          7465  label('jne#13')
jne#13:       18b4 1517  ld   [$17],y     7466  ld([vPC+1],Y)                   #13 vPC.hi
              18b5 0119  ld   [$19]       7467  ld([vAC+1])                     #14
              18b6 4118  ora  [$18]       7468  ora([vAC])                      #15
              18b7 ecbf  bne  .jne#18     7469  bne('.jne#18')                  #16 if (vAC.hi OR vAC.lo) != 0
              18b8 0d00  ld   [y,x]       7470  ld([Y,X])                       #17 address of branch destination
              18b9 0116  ld   [$16]       7471  ld([vPC])                       #18
              18ba 8001  adda $01         7472  adda(1)                         #19
              18bb c216  st   [$16]       7473  st([vPC])                       #20
              18bc 1403  ld   $03,y       7474  ld(hi('REENTER'),Y)             #21
              18bd e0cb  jmp  y,$cb       7475  jmp(Y,'REENTER')                #22
              18be 00f3  ld   $f3         7476  ld(-26/2)                       #23
                                          7477  label('.jne#18')
.jne#18:      18bf c216  st   [$16]       7478  st([vPC])                       #18
              18c0 de00  st   [y,x++]     7479  st([Y,Xpp])                     #19
              18c1 0d00  ld   [y,x]       7480  ld([Y,X])                       #20 hi address of jump destination
              18c2 c217  st   [$17]       7481  st([vPC+1])                     #21
              18c3 1403  ld   $03,y       7482  ld(hi('NEXTY'),Y)               #22
              18c4 e000  jmp  y,$00       7483  jmp(Y,'NEXTY')                  #23
              18c5 00f3  ld   $f3         7484  ld(-26/2)                       #24
                                          7485
                                          7486  # JLT implementation
                                          7487  label('jlt#13')
jlt#13:       18c6 1517  ld   [$17],y     7488  ld([vPC+1],Y)                   #13 vPC.hi
              18c7 0119  ld   [$19]       7489  ld([vAC+1])                     #14
              18c8 e8d0  blt  .jlt#17     7490  blt('.jlt#17')                  #15 if vAC.hi < 0
              18c9 0d00  ld   [y,x]       7491  ld([Y,X])                       #16 address of branch destination
              18ca 0116  ld   [$16]       7492  ld([vPC])                       #17
              18cb 8001  adda $01         7493  adda(1)                         #18
              18cc c216  st   [$16]       7494  st([vPC])                       #19
              18cd 1403  ld   $03,y       7495  ld(hi('NEXTY'),Y)               #20
              18ce e000  jmp  y,$00       7496  jmp(Y,'NEXTY')                  #21
              18cf 00f4  ld   $f4         7497  ld(-24/2)                       #22
                                          7498  label('.jlt#17')
.jlt#17:      18d0 c216  st   [$16]       7499  st([vPC])                       #17
              18d1 de00  st   [y,x++]     7500  st([Y,Xpp])                     #18
              18d2 0d00  ld   [y,x]       7501  ld([Y,X])                       #19 hi address of jump destination
              18d3 c217  st   [$17]       7502  st([vPC+1])                     #20
              18d4 1403  ld   $03,y       7503  ld(hi('REENTER'),Y)             #21
              18d5 e0cb  jmp  y,$cb       7504  jmp(Y,'REENTER')                #22
              18d6 00f3  ld   $f3         7505  ld(-26/2)                       #23
                                          7506
                                          7507  # BBEQ implementation
                                          7508  #label('bbeq#13')
                                          7509  #ld([vPC+1],Y)                   #13 vPC.hi
                                          7510  #st([vTmp])                      #14 branch offset
                                          7511  #st([Y,Xpp])                     #15 X++
                                          7512  #ld([Y,X])                       #16
                                          7513  #ld(AC,X)                        #17
                                          7514  #ld([X])                         #18 low byte of var
                                          7515  #beq('.bbeq#21')                 #19
                                          7516  #ld([vPC])                       #20
                                          7517  #adda(1)                         #21
                                          7518  #st([vPC])                       #22 advance vPC by 1
                                          7519  #ld(hi('REENTER'),Y)             #23
                                          7520  #jmp(Y,'REENTER')                #24
                                          7521  #ld(-28/2)                       #25
                                          7522  #label('.bbeq#21')
                                          7523  #ld([vTmp])                      #21
                                          7524  #st([vPC])                       #22 branch to offset
                                          7525  #ld(hi('REENTER'),Y)             #23
                                          7526  #jmp(Y,'REENTER')                #24
                                          7527  #ld(-28/2)                       #25
                                          7528
                                          7529  # BWEQ implementation
                                          7530  #label('bweq#13')
                                          7531  #ld([vPC+1],Y)                   #13 vPC.hi
                                          7532  #st([vTmp])                      #14 branch offset
                                          7533  #st([Y,Xpp])                     #15 X++
                                          7534  #ld([Y,X])                       #16
                                          7535  #ld(AC,X)                        #17
                                          7536  #ld([X])                         #18 low byte of var
                                          7537  #ld(0,Y)                         #19
                                          7538  #st([Y,Xpp])                     #20 X++
                                          7539  #ora([Y,X])                      #21 or with high byte of var
                                          7540  #beq('.bweq#24')                 #22
                                          7541  #ld([vPC])                       #23
                                          7542  #adda(1)                         #24
                                          7543  #st([vPC])                       #25 advance vPC by 1
                                          7544  #ld(hi('NEXTY'),Y)               #26
                                          7545  #jmp(Y,'NEXTY')                  #27
                                          7546  #ld(-30/2)                       #28
                                          7547  #label('.bweq#24')
                                          7548  #ld([vTmp])                      #24
                                          7549  #st([vPC])                       #25 branch to offset
                                          7550  #ld(hi('NEXTY'),Y)               #26
                                          7551  #jmp(Y,'NEXTY')                  #27
                                          7552  #ld(-30/2)                       #28
                                          7553
                                          7554
              18d7 0200  nop              7555  fillers(until=0xff)
              18d8 0200  nop
              18d9 0200  nop
              * 40 times
              18ff 0200  nop              7556  align(0x100, size=0x100)
                                          7557
                                          7558  #-----------------------------------------------------------------------
                                          7559  #       More sys implementations, (0x1900)
                                          7560  #-----------------------------------------------------------------------
                                          7561  # sys_Multiply_s16, sum:s16 = x:s16 * y:s16
                                          7562  # x:args0:1 y:args2:3 sum:args4:5 mask:args6:7
                                          7563  label('sys_Multiply_s16')
sys_Multiply_s16:
              1900 2126  anda [$26]       7564  anda([sysArgs+2])               #18,
              1901 c218  st   [$18]       7565  st([vAC])                       #19, AC.lo = mask.lo AND y.lo
              1902 012b  ld   [$2b]       7566  ld([sysArgs+7])                 #20, load mask.hio
              1903 2127  anda [$27]       7567  anda([sysArgs+3])               #21,
              1904 c219  st   [$19]       7568  st([vAC+1])                     #22, AC.hi = mask.hi AND y.hi
              1905 4118  ora  [$18]       7569  ora([vAC])                      #23,
                                          7570  beq('.sys_ms16_26')             #24, AC = 0 then skip
              1906 f00e  beq  .sys_ms16_26
              1907 0128  ld   [$28]       7571  ld([sysArgs+4])                 #25, load sum.lo
              1908 8124  adda [$24]       7572  adda([sysArgs+0])               #26, load x.lo
              1909 c228  st   [$28]       7573  st([sysArgs+4])                 #27, sum.lo = sum.lo + x.lo
                                          7574  blt('.sys_ms16_30')             #28, check for carry
              190a e810  blt  .sys_ms16_30
              190b a124  suba [$24]       7575  suba([sysArgs+0])               #29, get original sum.lo back
                                          7576  bra('.sys_ms16_32')             #30,
              190c fc12  bra  .sys_ms16_32
              190d 4124  ora  [$24]       7577  ora([sysArgs+0])                #31, carry in bit 7
                                          7578
                                          7579  label('.sys_ms16_26')
                                          7580  bra('.sys_ms16_28')             #26,
.sys_ms16_26: 190e fc18  bra  .sys_ms16_28
              190f 00e4  ld   $e4         7581  ld(-56/2)                       #27, no accumulate sys ticks
                                          7582
                                          7583  label('.sys_ms16_30')
.sys_ms16_30: 1910 2124  anda [$24]       7584  anda([sysArgs+0])               #30, carry in bit 7
              1911 0200  nop              7585  nop()                           #31,
                                          7586
                                          7587  label('.sys_ms16_32')
.sys_ms16_32: 1912 3080  anda $80,x       7588  anda(0x80,X)                    #32,
              1913 0500  ld   [x]         7589  ld([X])                         #33, move carry to bit 0
              1914 8129  adda [$29]       7590  adda([sysArgs+5])               #34,
              1915 8125  adda [$25]       7591  adda([sysArgs+1])               #35,
              1916 c229  st   [$29]       7592  st([sysArgs+5])                 #36, sum.hi = sum.hi + x.hi
              1917 00df  ld   $df         7593  ld(-66/2)                       #37, accumulate sys ticks
                                          7594
                                          7595  label('.sys_ms16_28')
.sys_ms16_28: 1918 c21d  st   [$1d]       7596  st([vTmp])                      #28,#38,
              1919 0124  ld   [$24]       7597  ld([sysArgs+0])                 #29,#39, AC = x.lo
              191a 3080  anda $80,x       7598  anda(0x80,X)                    #30,#40, X = AC & 0x80
              191b 8124  adda [$24]       7599  adda([sysArgs+0])               #31,#41, AC = x.lo <<1
              191c c224  st   [$24]       7600  st([sysArgs+0])                 #32,#42, x.lo = AC
              191d 0500  ld   [x]         7601  ld([X])                         #33,#43, AC = X >>7
              191e 8125  adda [$25]       7602  adda([sysArgs+1])               #34,#44,
              191f 8125  adda [$25]       7603  adda([sysArgs+1])               #35,#45,
              1920 c225  st   [$25]       7604  st([sysArgs+1])                 #36,#46, x.hi = x.hi <<1 + AC
              1921 012a  ld   [$2a]       7605  ld([sysArgs+6])                 #37,#47, AC = mask.lo
              1922 3080  anda $80,x       7606  anda(0x80,X)                    #38,#48, X = AC & 0x80
              1923 812a  adda [$2a]       7607  adda([sysArgs+6])               #39,#49, AC = mask.lo <<1
              1924 c22a  st   [$2a]       7608  st([sysArgs+6])                 #40,#50, mask.lo = AC
              1925 0500  ld   [x]         7609  ld([X])                         #41,#51, AC = X >>7
              1926 812b  adda [$2b]       7610  adda([sysArgs+7])               #42,#52,
              1927 812b  adda [$2b]       7611  adda([sysArgs+7])               #43,#53,
              1928 c22b  st   [$2b]       7612  st([sysArgs+7])                 #44,#54, mask.hi = mask.hi <<1 + AC
              1929 412a  ora  [$2a]       7613  ora([sysArgs+6])                #45,#55,
                                          7614  beq('.sys_ms16_48')             #46,#56, if mask = 0
              192a f032  beq  .sys_ms16_48
              192b 0128  ld   [$28]       7615  ld([sysArgs+4])                 #47,#57
              192c 0116  ld   [$16]       7616  ld([vPC])                       #48,#58,
              192d a002  suba $02         7617  suba(2)                         #49,#59,
              192e c216  st   [$16]       7618  st([vPC])                       #50,#60, restart SYS function
              192f 1403  ld   $03,y       7619  ld(hi('REENTER'),Y)             #51,#61,
              1930 e0cb  jmp  y,$cb       7620  jmp(Y,'REENTER')                #52,#62,
              1931 011d  ld   [$1d]       7621  ld([vTmp])                      #53,#63,
                                          7622
                                          7623  label('.sys_ms16_48')
.sys_ms16_48: 1932 c218  st   [$18]       7624  st([vAC])                       #48,#58,
              1933 0129  ld   [$29]       7625  ld([sysArgs+5])                 #49,#59,
              1934 c219  st   [$19]       7626  st([vAC+1])                     #50,#60,
              1935 1403  ld   $03,y       7627  ld(hi('REENTER'),Y)             #51,#61,
              1936 e0cb  jmp  y,$cb       7628  jmp(Y,'REENTER')                #52,#62,
              1937 011d  ld   [$1d]       7629  ld([vTmp])                      #53,#63,
                                          7630
                                          7631
                                          7632  #-----------------------------------------------------------------------
                                          7633  # sys_Divide_s16, x:s16 = x:s16 / y:s16, rem:s16 = x:s16 % y:s16
                                          7634  # x:args0:1 y:args2:3 rem:args4:5 mask:args6:7
                                          7635  label('sys_Divide_s16')
sys_Divide_s16:
              1938 3080  anda $80,x       7636  anda(0x80,X)                    #18, X = AC & 0x80
              1939 8128  adda [$28]       7637  adda([sysArgs+4])               #19, AC = rem.lo <<1
              193a c228  st   [$28]       7638  st([sysArgs+4])                 #20, rem.lo = AC
              193b 0500  ld   [x]         7639  ld([X])                         #21, AC = X >>7
              193c 8129  adda [$29]       7640  adda([sysArgs+5])               #22,
              193d 8129  adda [$29]       7641  adda([sysArgs+5])               #23,
              193e c229  st   [$29]       7642  st([sysArgs+5])                 #24, rem.hi = rem.hi <<1 + AC
              193f 0125  ld   [$25]       7643  ld([sysArgs+1])                 #25,
              1940 2080  anda $80         7644  anda(0x80)                      #26, sign of x
                                          7645  beq('.sys_ds16_29')             #27, if x >= 0
              1941 f046  beq  .sys_ds16_29
              1942 0128  ld   [$28]       7646  ld([sysArgs+4])                 #28,
              1943 8001  adda $01         7647  adda(1)                         #29,
                                          7648  bra('.sys_ds16_32')             #30,
              1944 fc49  bra  .sys_ds16_32
              1945 c228  st   [$28]       7649  st([sysArgs+4])                 #31, rem.lo++
                                          7650
                                          7651  label('.sys_ds16_29')
.sys_ds16_29: 1946 0200  nop              7652  nop()                           #29
              1947 0200  nop              7653  nop()                           #30
              1948 0200  nop              7654  nop()                           #31
                                          7655
                                          7656  label('.sys_ds16_32')
.sys_ds16_32: 1949 0124  ld   [$24]       7657  ld([sysArgs+0])                 #32, AC = x.lo
              194a 3080  anda $80,x       7658  anda(0x80,X)                    #33, X = AC & 0x80
              194b 8124  adda [$24]       7659  adda([sysArgs+0])               #34, AC = x.lo <<1
              194c c224  st   [$24]       7660  st([sysArgs+0])                 #35, x.lo = AC
              194d 0500  ld   [x]         7661  ld([X])                         #36, AC = X >>7
              194e 8125  adda [$25]       7662  adda([sysArgs+1])               #37,
              194f 8125  adda [$25]       7663  adda([sysArgs+1])               #38,
              1950 c225  st   [$25]       7664  st([sysArgs+1])                 #39, x.hi = x.hi <<1 + AC
                                          7665
              1951 0128  ld   [$28]       7666  ld([sysArgs+4])                 #40, load rem.lo
                                          7667  blt('.sys_ds16_43')             #41, check for borrow
              1952 e857  blt  .sys_ds16_43
              1953 a126  suba [$26]       7668  suba([sysArgs+2])               #42,
              1954 c218  st   [$18]       7669  st([vAC])                       #43, vAC.lo = rem.lo - y.lo
                                          7670  bra('.sys_ds16_46')             #44,
              1955 fc5a  bra  .sys_ds16_46
              1956 4126  ora  [$26]       7671  ora([sysArgs+2])                #45,
                                          7672
                                          7673  label('.sys_ds16_43')
.sys_ds16_43: 1957 c218  st   [$18]       7674  st([vAC])                       #43,
              1958 2126  anda [$26]       7675  anda([sysArgs+2])               #44,
              1959 0200  nop              7676  nop()                           #45,
                                          7677
                                          7678  label('.sys_ds16_46')
.sys_ds16_46: 195a 3080  anda $80,x       7679  anda(0x80,X)                    #46, move borrow to bit 0
              195b 0129  ld   [$29]       7680  ld([sysArgs+5])                 #47, load rem.hi
              195c a500  suba [x]         7681  suba([X])                       #48,
              195d a127  suba [$27]       7682  suba([sysArgs+3])               #49,
              195e c219  st   [$19]       7683  st([vAC+1])                     #50, vAC.hi = rem.hi - y.hi
                                          7684  blt('.sys_ds16_53')             #51,
              195f e869  blt  .sys_ds16_53
              1960 00dc  ld   $dc         7685  ld(-72/2)                       #52
              1961 0118  ld   [$18]       7686  ld([vAC])                       #53,
              1962 c228  st   [$28]       7687  st([sysArgs+4])                 #54,
              1963 0119  ld   [$19]       7688  ld([vAC+1])                     #55,
              1964 c229  st   [$29]       7689  st([sysArgs+5])                 #56, rem = vAC
              1965 0124  ld   [$24]       7690  ld([sysArgs+0])                 #57,
              1966 8001  adda $01         7691  adda(1)                         #58,
              1967 c224  st   [$24]       7692  st([sysArgs+0])                 #59, x.lo++
              1968 00d8  ld   $d8         7693  ld(-80/2)                       #60,
                                          7694
                                          7695  label('.sys_ds16_53')
.sys_ds16_53: 1969 c21d  st   [$1d]       7696  st([vTmp])                      #53, #61,
              196a 012a  ld   [$2a]       7697  ld([sysArgs+6])                 #54, #62, AC = mask.lo
              196b 3080  anda $80,x       7698  anda(0x80,X)                    #55, #63, X = AC & 0x80
              196c 812a  adda [$2a]       7699  adda([sysArgs+6])               #56, #64, AC = mask.lo <<1
              196d c22a  st   [$2a]       7700  st([sysArgs+6])                 #57, #65, mask.lo = AC
              196e 0500  ld   [x]         7701  ld([X])                         #58, #66, AC = X >>7
              196f 812b  adda [$2b]       7702  adda([sysArgs+7])               #59, #67,
              1970 812b  adda [$2b]       7703  adda([sysArgs+7])               #60, #68,
              1971 c22b  st   [$2b]       7704  st([sysArgs+7])                 #61, #69, mask.hi = mask.hi <<1 + AC
              1972 412a  ora  [$2a]       7705  ora([sysArgs+6])                #62, #70,
                                          7706  bne('.sys_ds16_65')             #63, #71,
              1973 ec7a  bne  .sys_ds16_65
              1974 0116  ld   [$16]       7707  ld([vPC])                       #64, #72,
              1975 0200  nop              7708  nop()                           #65, #73,
              1976 0200  nop              7709  nop()                           #66, #74,
              1977 1403  ld   $03,y       7710  ld(hi('REENTER'),Y)             #67, #75,
              1978 e0cb  jmp  y,$cb       7711  jmp(Y,'REENTER')                #68, #76,
              1979 011d  ld   [$1d]       7712  ld([vTmp])                      #69, #77,
                                          7713
                                          7714  label('.sys_ds16_65')
.sys_ds16_65: 197a a002  suba $02         7715  suba(2)                         #65, #73,
              197b c216  st   [$16]       7716  st([vPC])                       #66, #74, restart SYS function
              197c 1403  ld   $03,y       7717  ld(hi('REENTER'),Y)             #67, #75,
              197d e0cb  jmp  y,$cb       7718  jmp(Y,'REENTER')                #68, #76,
              197e 011d  ld   [$1d]       7719  ld([vTmp])                      #69, #77,
                                          7720
                                          7721
                                          7722  #-----------------------------------------------------------------------
                                          7723  # sys_DrawLine
                                          7724  label('sys_DrawLine')
sys_DrawLine: 197f 1182  ld   [$82],x     7725  ld([0x82],X)                    #18, X = [xy1].lo
              1980 1583  ld   [$83],y     7726  ld([0x83],Y)                    #19, Y = [xy1].hi
              1981 ce00  st   [y,x]       7727  st([Y,X])                       #20, [Y, X] = fgColour
              1982 1184  ld   [$84],x     7728  ld([0x84],X)                    #21, X = [xy2].lo
              1983 1585  ld   [$85],y     7729  ld([0x85],Y)                    #22, Y = [xy2].hi
              1984 ce00  st   [y,x]       7730  st([Y,X])                       #23, [Y, X] = fgColour
                                          7731
              1985 01a0  ld   [$a0]       7732  ld([0xA0])                      #24, num.lo
              1986 819c  adda [$9c]       7733  adda([0x9C])                    #25, sy.lo
              1987 c2a0  st   [$a0]       7734  st([0xA0])                      #26, num.lo = num.lo + sy.lo
                                          7735  blt('.sys_drawl_29')            #27, check for carry
              1988 e88c  blt  .sys_drawl_29
              1989 a19c  suba [$9c]       7736  suba([0x9C])                    #28, get original num.lo back
                                          7737  bra('.sys_drawl_31')            #29,
              198a fc8e  bra  .sys_drawl_31
              198b 419c  ora  [$9c]       7738  ora([0x9C])                     #30, carry in bit 7
                                          7739
                                          7740  label('.sys_drawl_29')
.sys_drawl_29:
              198c 219c  anda [$9c]       7741  anda([0x9C])                    #29, carry in bit 7
              198d 0200  nop              7742  nop()                           #30,
                                          7743
                                          7744  label('.sys_drawl_31')
.sys_drawl_31:
              198e 3080  anda $80,x       7745  anda(0x80,X)                    #31,
              198f 0500  ld   [x]         7746  ld([X])                         #32, move carry to bit 0
              1990 81a1  adda [$a1]       7747  adda([0xA1])                    #33,
              1991 819d  adda [$9d]       7748  adda([0x9D])                    #34,
              1992 c2a1  st   [$a1]       7749  st([0xA1])                      #35, num.hi = num.hi + sy.hi
                                          7750
              1993 01a0  ld   [$a0]       7751  ld([0xA0])                      #36, num.lo
                                          7752  blt('.sys_drawl_39')            #37, check for borrow
              1994 e899  blt  .sys_drawl_39
              1995 a19a  suba [$9a]       7753  suba([0x9A])                    #38, sx.lo
              1996 c218  st   [$18]       7754  st([vAC])                       #39, vAC.lo = num.lo - sx.lo
                                          7755  bra('.sys_drawl_42')            #40,
              1997 fc9c  bra  .sys_drawl_42
              1998 419a  ora  [$9a]       7756  ora([0x9A])                     #41,
                                          7757
                                          7758  label('.sys_drawl_39')
.sys_drawl_39:
              1999 c218  st   [$18]       7759  st([vAC])                       #39,
              199a 219a  anda [$9a]       7760  anda([0x9A])                    #40,
              199b 0200  nop              7761  nop()                           #41,
                                          7762
                                          7763  label('.sys_drawl_42')
.sys_drawl_42:
              199c 3080  anda $80,x       7764  anda(0x80,X)                    #42, move borrow to bit 0
              199d 01a1  ld   [$a1]       7765  ld([0xA1])                      #43, num.hi
              199e a500  suba [x]         7766  suba([X])                       #44,
              199f a19b  suba [$9b]       7767  suba([0x9B])                    #45,
                                          7768  blt('.sys_drawl_48')            #46,
              19a0 e8cf  blt  .sys_drawl_48
              19a1 c219  st   [$19]       7769  st([vAC+1])                     #47, vAC.hi = num.hi - sx.hi
              19a2 0118  ld   [$18]       7770  ld([vAC])                       #48,
              19a3 c2a0  st   [$a0]       7771  st([0xA0])                      #49,
              19a4 0119  ld   [$19]       7772  ld([vAC+1])                     #50,
              19a5 c2a1  st   [$a1]       7773  st([0xA1])                      #51, num = vAC
                                          7774
              19a6 0182  ld   [$82]       7775  ld([0x82])                      #52, xy1.lo
              19a7 8186  adda [$86]       7776  adda([0x86])                    #53, dxy1.lo
              19a8 c282  st   [$82]       7777  st([0x82])                      #54, xy1.lo = xy1.lo + dxy1.lo
                                          7778  blt('.sys_drawl_57')            #55, check for carry
              19a9 e8ad  blt  .sys_drawl_57
              19aa a186  suba [$86]       7779  suba([0x86])                    #56, get original xy1.lo back
                                          7780  bra('.sys_drawl_59')            #57,
              19ab fcaf  bra  .sys_drawl_59
              19ac 4186  ora  [$86]       7781  ora([0x86])                     #58, carry in bit 7
                                          7782
                                          7783  label('.sys_drawl_57')
.sys_drawl_57:
              19ad 2186  anda [$86]       7784  anda([0x86])                    #57, carry in bit 7
              19ae 0200  nop              7785  nop()                           #58,
                                          7786
                                          7787  label('.sys_drawl_59')
.sys_drawl_59:
              19af 3080  anda $80,x       7788  anda(0x80,X)                    #59,
              19b0 0500  ld   [x]         7789  ld([X])                         #60, move carry to bit 0
              19b1 8183  adda [$83]       7790  adda([0x83])                    #61,
              19b2 8187  adda [$87]       7791  adda([0x87])                    #62,
              19b3 c283  st   [$83]       7792  st([0x83])                      #63, xy1.hi = xy1.hi + dxy1.hi
                                          7793
              19b4 0184  ld   [$84]       7794  ld([0x84])                      #64, xy2.lo
                                          7795  blt('.sys_drawl_67')            #65, check for borrow
              19b5 e8ba  blt  .sys_drawl_67
              19b6 a186  suba [$86]       7796  suba([0x86])                    #66, dxy1.lo
              19b7 c284  st   [$84]       7797  st([0x84])                      #67, xy2.lo = xy2.lo - dxy1.lo
                                          7798  bra('.sys_drawl_70')            #68,
              19b8 fcbd  bra  .sys_drawl_70
              19b9 4186  ora  [$86]       7799  ora([0x86])                     #69,
                                          7800
                                          7801  label('.sys_drawl_67')
.sys_drawl_67:
              19ba c284  st   [$84]       7802  st([0x84])                      #67,
              19bb 2186  anda [$86]       7803  anda([0x86])                    #68,
              19bc 0200  nop              7804  nop()                           #69,
                                          7805
                                          7806  label('.sys_drawl_70')
.sys_drawl_70:
              19bd 3080  anda $80,x       7807  anda(0x80,X)                    #70, move borrow to bit 0
              19be 0185  ld   [$85]       7808  ld([0x85])                      #71, xy2.hi
              19bf a500  suba [x]         7809  suba([X])                       #72,
              19c0 a187  suba [$87]       7810  suba([0x87])                    #73,
              19c1 c285  st   [$85]       7811  st([0x85])                      #74, xy2.hi = xy2.hi - dxy1.hi
                                          7812
              19c2 019e  ld   [$9e]       7813  ld([0x9E])                      #75,
              19c3 a001  suba $01         7814  suba(1)                         #76,
                                          7815  bne('.sys_drawl_79')            #77,
              19c4 ecc9  bne  .sys_drawl_79
              19c5 c29e  st   [$9e]       7816  st([0x9E])                      #78, drawLine_count--
              19c6 1403  ld   $03,y       7817  ld(hi('REENTER'),Y)             #79,
              19c7 e0cb  jmp  y,$cb       7818  jmp(Y,'REENTER')                #80,
              19c8 00d6  ld   $d6         7819  ld(-84/2)                       #81,
                                          7820
                                          7821  label('.sys_drawl_79')
.sys_drawl_79:
              19c9 0116  ld   [$16]       7822  ld([vPC])                       #79,
              19ca a002  suba $02         7823  suba(2)                         #80,
              19cb c216  st   [$16]       7824  st([vPC])                       #81, restart
              19cc 1403  ld   $03,y       7825  ld(hi('NEXTY'),Y)               #82,
              19cd e000  jmp  y,$00       7826  jmp(Y,'NEXTY')                  #83,
              19ce 00d5  ld   $d5         7827  ld(-86/2)                       #84,
                                          7828
                                          7829  label('.sys_drawl_48')
.sys_drawl_48:
              19cf 0182  ld   [$82]       7830  ld([0x82])                      #48, xy1.lo
              19d0 8188  adda [$88]       7831  adda([0x88])                    #49, dxy2.lo
              19d1 c282  st   [$82]       7832  st([0x82])                      #50, xy1.lo = xy1.lo + dxy2.lo
                                          7833  blt('.sys_drawl_53')            #51, check for carry
              19d2 e8d6  blt  .sys_drawl_53
              19d3 a188  suba [$88]       7834  suba([0x88])                    #52, get original xy1.lo back
                                          7835  bra('.sys_drawl_55')            #53,
              19d4 fcd8  bra  .sys_drawl_55
              19d5 4188  ora  [$88]       7836  ora([0x88])                     #54, carry in bit 7
                                          7837
                                          7838  label('.sys_drawl_53')
.sys_drawl_53:
              19d6 2188  anda [$88]       7839  anda([0x88])                    #53, carry in bit 7
              19d7 0200  nop              7840  nop()                           #54,
                                          7841
                                          7842  label('.sys_drawl_55')
.sys_drawl_55:
              19d8 3080  anda $80,x       7843  anda(0x80,X)                    #55,
              19d9 0500  ld   [x]         7844  ld([X])                         #56, move carry to bit 0
              19da 8183  adda [$83]       7845  adda([0x83])                    #57,
              19db 8189  adda [$89]       7846  adda([0x89])                    #58,
              19dc c283  st   [$83]       7847  st([0x83])                      #59, xy1.hi = xy1.hi + dxy2.hi
                                          7848
              19dd 0184  ld   [$84]       7849  ld([0x84])                      #60, xy2.lo
                                          7850  blt('.sys_drawl_63')            #61, check for borrow
              19de e8e3  blt  .sys_drawl_63
              19df a188  suba [$88]       7851  suba([0x88])                    #62, dxy2.lo
              19e0 c284  st   [$84]       7852  st([0x84])                      #63, xy2.lo = xy2.lo - dxy2.lo
                                          7853  bra('.sys_drawl_66')            #64,
              19e1 fce6  bra  .sys_drawl_66
              19e2 4188  ora  [$88]       7854  ora([0x88])                     #65,
                                          7855
                                          7856  label('.sys_drawl_63')
.sys_drawl_63:
              19e3 c284  st   [$84]       7857  st([0x84])                      #63,
              19e4 2188  anda [$88]       7858  anda([0x88])                    #64,
              19e5 0200  nop              7859  nop()                           #65,
                                          7860
                                          7861  label('.sys_drawl_66')
.sys_drawl_66:
              19e6 3080  anda $80,x       7862  anda(0x80,X)                    #66, move borrow to bit 0
              19e7 0185  ld   [$85]       7863  ld([0x85])                      #67, xy2.hi
              19e8 a500  suba [x]         7864  suba([X])                       #68,
              19e9 a189  suba [$89]       7865  suba([0x89])                    #69,
              19ea c285  st   [$85]       7866  st([0x85])                      #70, xy2.hi = xy2.hi - dxy2.hi
                                          7867
              19eb 019e  ld   [$9e]       7868  ld([0x9E])                      #71,
              19ec a001  suba $01         7869  suba(1)                         #72,
                                          7870  bne('.sys_drawl_75')            #73,
              19ed ecf2  bne  .sys_drawl_75
              19ee c29e  st   [$9e]       7871  st([0x9E])                      #74, drawLine_count--
              19ef 1403  ld   $03,y       7872  ld(hi('REENTER'),Y)             #75,
              19f0 e0cb  jmp  y,$cb       7873  jmp(Y,'REENTER')                #76,
              19f1 00d8  ld   $d8         7874  ld(-80/2)                       #77,
                                          7875
                                          7876  label('.sys_drawl_75')
.sys_drawl_75:
              19f2 0116  ld   [$16]       7877  ld([vPC])                       #75,
              19f3 a002  suba $02         7878  suba(2)                         #76,
              19f4 c216  st   [$16]       7879  st([vPC])                       #77, restart
              19f5 1403  ld   $03,y       7880  ld(hi('NEXTY'),Y)               #78,
              19f6 e000  jmp  y,$00       7881  jmp(Y,'NEXTY')                  #79,
              19f7 00d7  ld   $d7         7882  ld(-82/2)                       #80,
                                          7883
                                          7884
              19f8 0200  nop              7885  fillers(until=0xff)
              19f9 0200  nop
              19fa 0200  nop
              * 7 times
              19ff 0200  nop              7886  align(0x100, size=0x100)
                                          7887
                                          7888  #-----------------------------------------------------------------------
                                          7889  #       More sys implementations, (0x1A00)
                                          7890  #-----------------------------------------------------------------------
                                          7891
                                          7892
                                          7893  # sys_WaitVBlank
                                          7894  label('sys_WaitVBlank')
sys_WaitVBlank:
              1a00 60b3  xora $b3         7895  xora(videoYline0)               #18,
                                          7896  beq('.sys_waitvblank_21')       #19,
              1a01 f008  beq  .sys_waitvblank_21
              1a02 0116  ld   [$16]       7897  ld([vPC])                       #20,
              1a03 a002  suba $02         7898  suba(2)                         #21,
              1a04 c216  st   [$16]       7899  st([vPC])                       #22, restart
              1a05 1403  ld   $03,y       7900  ld(hi('REENTER'),Y)             #23,
              1a06 e0cb  jmp  y,$cb       7901  jmp(Y,'REENTER')                #24,
              1a07 00f2  ld   $f2         7902  ld(-28/2)                       #25,
                                          7903  label('.sys_waitvblank_21')
.sys_waitvblank_21:
              1a08 1403  ld   $03,y       7904  ld(hi('REENTER'),Y)             #21,
              1a09 e0cb  jmp  y,$cb       7905  jmp(Y,'REENTER')                #22,
              1a0a 00f2  ld   $f2         7906  ld(-28/2)                       #23,
                                          7907
                                          7908
                                          7909  # sys_SortUint8Array, sysArgs0,1=array, sysArg2=i, sysArg3=j, sysArg4=key, sysArg5=length
                                          7910  label('sys_SortUint8Array')
sys_SortUint8Array:
              1a0b 0127  ld   [$27]       7911  ld([sysArgs+3])                 #18,
                                          7912  ble('.sys_sortuint8array_21')   #19, j == 0
              1a0c f824  ble  .sys_sortuint8array_21
              1a0d 0124  ld   [$24]       7913  ld([sysArgs+0])                 #20,
              1a0e 8127  adda [$27]       7914  adda([sysArgs+3])               #21,
              1a0f b001  suba $01,x       7915  suba(1,X)                       #22,
              1a10 0d00  ld   [y,x]       7916  ld([Y,X])                       #23,
                                          7917  bmi('.sys_sortuint8array_26')   #24, convert signed < to unsigned <
              1a11 e815  blt  .sys_sortuint8array_26
              1a12 a128  suba [$28]       7918  suba([sysArgs+4])               #25,
                                          7919  bra('.sys_sortuint8array_28')   #26,
              1a13 fc17  bra  .sys_sortuint8array_28
              1a14 4128  ora  [$28]       7920  ora([sysArgs+4])                #27, borrow
                                          7921  label('.sys_sortuint8array_26')
.sys_sortuint8array_26:
              1a15 2128  anda [$28]       7922  anda([sysArgs+4])               #26, borrow
              1a16 0200  nop              7923  nop()                           #27,
                                          7924  label('.sys_sortuint8array_28')
.sys_sortuint8array_28:                   7925  bmi('.sys_sortuint8array_30_0') #28, a[j-1] < key
              1a17 e830  blt  .sys_sortuint8array_30_0
              1a18 0d00  ld   [y,x]       7926  ld([Y,X])                       #29,
              1a19 de00  st   [y,x++]     7927  st([Y,Xpp])                     #30,
              1a1a ce00  st   [y,x]       7928  st([Y,X])                       #31, a[j] = a[j-1]
              1a1b 0127  ld   [$27]       7929  ld([sysArgs+3])                 #32,
              1a1c a001  suba $01         7930  suba(1)                         #33,
              1a1d c227  st   [$27]       7931  st([sysArgs+3])                 #34, j--
              1a1e 0116  ld   [$16]       7932  ld([vPC])                       #35,
              1a1f a002  suba $02         7933  suba(2)                         #36,
              1a20 c216  st   [$16]       7934  st([vPC])                       #37, restart
              1a21 1403  ld   $03,y       7935  ld(hi('NEXTY'),Y)               #38,
              1a22 e000  jmp  y,$00       7936  jmp(Y,'NEXTY')                  #39,
              1a23 00eb  ld   $eb         7937  ld(-42/2)                       #40,
                                          7938  label('.sys_sortuint8array_21')
.sys_sortuint8array_21:
              1a24 9127  adda [$27],x     7939  adda([sysArgs+3],X)             #21,
              1a25 0128  ld   [$28]       7940  ld([sysArgs+4])                 #22,
              1a26 ce00  st   [y,x]       7941  st([Y,X])                       #23, a[j] = key
              1a27 0126  ld   [$26]       7942  ld([sysArgs+2])                 #24,
              1a28 8001  adda $01         7943  adda(1)                         #25,
              1a29 c226  st   [$26]       7944  st([sysArgs+2])                 #26, i++
              1a2a a129  suba [$29]       7945  suba([sysArgs+5])               #27,
                                          7946  blt('.sys_sortuint8array_30_1') #28, i < length
              1a2b e83c  blt  .sys_sortuint8array_30_1
              1a2c 0124  ld   [$24]       7947  ld([sysArgs+0])                 #29,
              1a2d 1403  ld   $03,y       7948  ld(hi('NEXTY'),Y)               #30,
              1a2e e000  jmp  y,$00       7949  jmp(Y,'NEXTY')                  #31,
              1a2f 00ef  ld   $ef         7950  ld(-34/2)                       #32,
                                          7951  label('.sys_sortuint8array_30_0')
.sys_sortuint8array_30_0:
              1a30 de00  st   [y,x++]     7952  st([Y,Xpp])                     #30,
              1a31 0128  ld   [$28]       7953  ld([sysArgs+4])                 #31,
              1a32 ce00  st   [y,x]       7954  st([Y,X])                       #32, a[j] = key
              1a33 0126  ld   [$26]       7955  ld([sysArgs+2])                 #33,
              1a34 8001  adda $01         7956  adda(1)                         #34,
              1a35 c226  st   [$26]       7957  st([sysArgs+2])                 #35, i++
              1a36 a129  suba [$29]       7958  suba([sysArgs+5])               #36,
                                          7959  blt('.sys_sortuint8array_39')   #37, i < length
              1a37 e847  blt  .sys_sortuint8array_39
              1a38 0124  ld   [$24]       7960  ld([sysArgs+0])                 #38,
              1a39 1403  ld   $03,y       7961  ld(hi('REENTER'),Y)             #39,
              1a3a e0cb  jmp  y,$cb       7962  jmp(Y,'REENTER')                #40,
              1a3b 00ea  ld   $ea         7963  ld(-44/2)                       #41,
                                          7964  label('.sys_sortuint8array_30_1')
.sys_sortuint8array_30_1:
              1a3c 9126  adda [$26],x     7965  adda([sysArgs+2],X)             #30,
              1a3d 0d00  ld   [y,x]       7966  ld([Y,X])                       #31,
              1a3e c228  st   [$28]       7967  st([sysArgs+4])                 #32, key = a[i]
              1a3f 0126  ld   [$26]       7968  ld([sysArgs+2])                 #33,
              1a40 c227  st   [$27]       7969  st([sysArgs+3])                 #34, j = i
              1a41 0116  ld   [$16]       7970  ld([vPC])                       #35,
              1a42 a002  suba $02         7971  suba(2)                         #36,
              1a43 c216  st   [$16]       7972  st([vPC])                       #37, restart
              1a44 1403  ld   $03,y       7973  ld(hi('NEXTY'),Y)               #38,
              1a45 e000  jmp  y,$00       7974  jmp(Y,'NEXTY')                  #39,
              1a46 00eb  ld   $eb         7975  ld(-42/2)                       #40,
                                          7976  label('.sys_sortuint8array_39')
.sys_sortuint8array_39:
              1a47 9126  adda [$26],x     7977  adda([sysArgs+2],X)             #39,
              1a48 0d00  ld   [y,x]       7978  ld([Y,X])                       #40,
              1a49 c228  st   [$28]       7979  st([sysArgs+4])                 #41, key = a[i]
              1a4a 0126  ld   [$26]       7980  ld([sysArgs+2])                 #42,
              1a4b c227  st   [$27]       7981  st([sysArgs+3])                 #43, j = i
              1a4c 0116  ld   [$16]       7982  ld([vPC])                       #44,
              1a4d a002  suba $02         7983  suba(2)                         #45,
              1a4e c216  st   [$16]       7984  st([vPC])                       #46, restart
              1a4f 1403  ld   $03,y       7985  ld(hi('REENTER'),Y)             #47,
              1a50 e0cb  jmp  y,$cb       7986  jmp(Y,'REENTER')                #48,
              1a51 00e6  ld   $e6         7987  ld(-52/2)                       #49,
                                          7988
                                          7989
                                          7990  # sys_SortViaIndices, sysArgs0,1=indices, sysArgs2,3=src, sysArg4,5=dst, sysArg6=dst step, vAC=count
                                          7991  label('sys_SortViaIndices')
sys_SortViaIndices:
              1a52 1124  ld   [$24],x     7992  ld([sysArgs+0],X)               #18,
              1a53 0d00  ld   [y,x]       7993  ld([Y,X])                       #19, [index]
              1a54 1527  ld   [$27],y     7994  ld([sysArgs+3],Y)               #20,
              1a55 9126  adda [$26],x     7995  adda([sysArgs+2],X)             #21, src
              1a56 0d00  ld   [y,x]       7996  ld([Y,X])                       #22, peek(src + index)
              1a57 1529  ld   [$29],y     7997  ld([sysArgs+5],Y)               #23,
              1a58 1128  ld   [$28],x     7998  ld([sysArgs+4],X)               #24, dst
              1a59 ce00  st   [y,x]       7999  st([Y,X])                       #25,
              1a5a 0124  ld   [$24]       8000  ld([sysArgs+0])                 #26,
              1a5b 8001  adda $01         8001  adda(1)                         #27,
              1a5c c224  st   [$24]       8002  st([sysArgs+0])                 #28, indices++
              1a5d 0128  ld   [$28]       8003  ld([sysArgs+4])                 #29,
              1a5e 812a  adda [$2a]       8004  adda([sysArgs+6])               #30,
              1a5f c228  st   [$28]       8005  st([sysArgs+4])                 #31, dst += step
              1a60 0118  ld   [$18]       8006  ld([vAC])                       #32,
              1a61 a001  suba $01         8007  suba(1)                         #33,
                                          8008  beq('.sys_sortviaindices_36')   #34,
              1a62 f06a  beq  .sys_sortviaindices_36
              1a63 c218  st   [$18]       8009  st([vAC])                       #35, count--
              1a64 0116  ld   [$16]       8010  ld([vPC])                       #36,
              1a65 a002  suba $02         8011  suba(2)                         #37,
              1a66 c216  st   [$16]       8012  st([vPC])                       #38, restart
              1a67 1403  ld   $03,y       8013  ld(hi('REENTER'),Y)             #39,
              1a68 e0cb  jmp  y,$cb       8014  jmp(Y,'REENTER')                #40,
              1a69 00ea  ld   $ea         8015  ld(-44/2)                       #41,
                                          8016  label('.sys_sortviaindices_36')
.sys_sortviaindices_36:
              1a6a 1403  ld   $03,y       8017  ld(hi('NEXTY'),Y)               #36,
              1a6b e000  jmp  y,$00       8018  jmp(Y,'NEXTY')                  #37,
              1a6c 00ec  ld   $ec         8019  ld(-40/2)                       #38,
                                          8020
                                          8021
              1a6d 0200  nop              8022  fillers(until=0xd0)
              1a6e 0200  nop
              1a6f 0200  nop
              * 99 times
                                          8023
                                          8024  #-----------------------------------------------------------------------
                                          8025  # Extension SYS_Unpack_56
                                          8026  #-----------------------------------------------------------------------
                                          8027
                                          8028  # Unpack 3 bytes into 4 pixels
                                          8029  #
                                          8030  # Variables:
                                          8031  #       sysArgs[0:2]    Packed bytes (in)
                                          8032  #       sysArgs[0:3]    Pixels (out)
                                          8033
                                          8034  label('SYS_Unpack_56')
SYS_Unpack_56:
              1ad0 1407  ld   $07,y       8035  ld(soundTable>>8,Y)             #15
              1ad1 0126  ld   [$26]       8036  ld([sysArgs+2])                 #16 a[2]>>2
              1ad2 5003  ora  $03,x       8037  ora(0x03,X)                     #17
              1ad3 0d00  ld   [y,x]       8038  ld([Y,X])                       #18
              1ad4 c227  st   [$27]       8039  st([sysArgs+3])                 #19 -> Pixel 3
                                          8040
              1ad5 0126  ld   [$26]       8041  ld([sysArgs+2])                 #20 (a[2]&3)<<4
              1ad6 2003  anda $03         8042  anda(0x03)                      #21
              1ad7 8200  adda ac          8043  adda(AC)                        #22
              1ad8 8200  adda ac          8044  adda(AC)                        #23
              1ad9 8200  adda ac          8045  adda(AC)                        #24
              1ada 8200  adda ac          8046  adda(AC)                        #25
              1adb c226  st   [$26]       8047  st([sysArgs+2])                 #26
              1adc 0125  ld   [$25]       8048  ld([sysArgs+1])                 #27 | a[1]>>4
              1add 5003  ora  $03,x       8049  ora(0x03,X)                     #28
              1ade 0d00  ld   [y,x]       8050  ld([Y,X])                       #29
              1adf 5003  ora  $03,x       8051  ora(0x03,X)                     #30
              1ae0 0d00  ld   [y,x]       8052  ld([Y,X])                       #31
              1ae1 4126  ora  [$26]       8053  ora([sysArgs+2])                #32
              1ae2 c226  st   [$26]       8054  st([sysArgs+2])                 #33 -> Pixel 2
                                          8055
              1ae3 0125  ld   [$25]       8056  ld([sysArgs+1])                 #34 (a[1]&15)<<2
              1ae4 200f  anda $0f         8057  anda(0x0f)                      #35
              1ae5 8200  adda ac          8058  adda(AC)                        #36
              1ae6 8200  adda ac          8059  adda(AC)                        #37
              1ae7 c225  st   [$25]       8060  st([sysArgs+1])                 #38
                                          8061
              1ae8 0124  ld   [$24]       8062  ld([sysArgs+0])                 #39 | a[0]>>6
              1ae9 5003  ora  $03,x       8063  ora(0x03,X)                     #40
              1aea 0d00  ld   [y,x]       8064  ld([Y,X])                       #41
              1aeb 5003  ora  $03,x       8065  ora(0x03,X)                     #42
              1aec 0d00  ld   [y,x]       8066  ld([Y,X])                       #43
              1aed 5003  ora  $03,x       8067  ora(0x03,X)                     #44
              1aee 0d00  ld   [y,x]       8068  ld([Y,X])                       #45
              1aef 4125  ora  [$25]       8069  ora([sysArgs+1])                #46
              1af0 c225  st   [$25]       8070  st([sysArgs+1])                 #47 -> Pixel 1
                                          8071
              1af1 0124  ld   [$24]       8072  ld([sysArgs+0])                 #48 a[1]&63
              1af2 203f  anda $3f         8073  anda(0x3f)                      #49
              1af3 c224  st   [$24]       8074  st([sysArgs+0])                 #50 -> Pixel 0
                                          8075
              1af4 1403  ld   $03,y       8076  ld(hi('REENTER'),Y)             #51
              1af5 e0cb  jmp  y,$cb       8077  jmp(Y,'REENTER')                #52
              1af6 00e4  ld   $e4         8078  ld(-56/2)                       #53
                                          8079
                                          8080
              1af7 0200  nop              8081  fillers(until=0xff)
              1af8 0200  nop
              1af9 0200  nop
              * 8 times
              1aff 0200  nop              8082  align(0x100, size=0x100)
                                          8083
                                          8084  #-----------------------------------------------------------------------
                                          8085  #       More sys implementations, (0x1B00)
                                          8086  #-----------------------------------------------------------------------
                                          8087
                                          8088  # sys_MemCopyByte, sysArgs0,1=src, sysArg2,3=dst, sysArg4=src step, sysArg5=dst step, vAC=count
                                          8089  label('sys_MemCopyByte')
sys_MemCopyByte:
              1b00 1124  ld   [$24],x     8090  ld([sysArgs+0],X)               #18,
              1b01 0d00  ld   [y,x]       8091  ld([Y,X])                       #19, [src]
              1b02 1527  ld   [$27],y     8092  ld([sysArgs+3],Y)               #20,
              1b03 1126  ld   [$26],x     8093  ld([sysArgs+2],X)               #21,
              1b04 ce00  st   [y,x]       8094  st([Y,X])                       #22, [dst] = [src]
              1b05 0124  ld   [$24]       8095  ld([sysArgs+0])                 #23,
              1b06 8128  adda [$28]       8096  adda([sysArgs+4])               #24,
              1b07 c224  st   [$24]       8097  st([sysArgs+0])                 #25, src++
              1b08 0126  ld   [$26]       8098  ld([sysArgs+2])                 #26,
              1b09 8129  adda [$29]       8099  adda([sysArgs+5])               #27,
              1b0a c226  st   [$26]       8100  st([sysArgs+2])                 #28, dst++
              1b0b 0118  ld   [$18]       8101  ld([vAC])                       #29,
              1b0c a001  suba $01         8102  suba(1)                         #30,
                                          8103  beq('.sys_memcopybyte_33')      #31,
              1b0d f015  beq  .sys_memcopybyte_33
              1b0e c218  st   [$18]       8104  st([vAC])                       #32, count--
              1b0f 0116  ld   [$16]       8105  ld([vPC])                       #33,
              1b10 a002  suba $02         8106  suba(2)                         #34,
              1b11 c216  st   [$16]       8107  st([vPC])                       #35, restart
              1b12 1403  ld   $03,y       8108  ld(hi('NEXTY'),Y)               #36,
              1b13 e000  jmp  y,$00       8109  jmp(Y,'NEXTY')                  #37,
              1b14 00ec  ld   $ec         8110  ld(-40/2)                       #38,
                                          8111  label('.sys_memcopybyte_33')
.sys_memcopybyte_33:
              1b15 1403  ld   $03,y       8112  ld(hi('REENTER'),Y)             #33,
              1b16 e0cb  jmp  y,$cb       8113  jmp(Y,'REENTER')                #34,
              1b17 00ed  ld   $ed         8114  ld(-38/2)                       #35,
                                          8115
                                          8116
                                          8117  # sys_MemCopyWord, sysArgs0,1=src, sysArg2,3=dst, vAC=count, sysArg4,5=tmp
                                          8118  label('sys_MemCopyWord')
sys_MemCopyWord:
              1b18 1124  ld   [$24],x     8119  ld([sysArgs+0],X)               #18,
              1b19 0d00  ld   [y,x]       8120  ld([Y,X])                       #19, [src + 0]
              1b1a de00  st   [y,x++]     8121  st([Y,Xpp])                     #20
              1b1b c228  st   [$28]       8122  st([sysArgs+4])                 #21,
              1b1c 0d00  ld   [y,x]       8123  ld([Y,X])                       #22, [src + 1]
              1b1d c229  st   [$29]       8124  st([sysArgs+5])                 #23,
              1b1e 1527  ld   [$27],y     8125  ld([sysArgs+3],Y)               #24,
              1b1f 1126  ld   [$26],x     8126  ld([sysArgs+2],X)               #25,
              1b20 0128  ld   [$28]       8127  ld([sysArgs+4])                 #26,
              1b21 de00  st   [y,x++]     8128  st([Y,Xpp])                     #27, [dst + 0] = [src + 0]
              1b22 0129  ld   [$29]       8129  ld([sysArgs+5])                 #28,
              1b23 ce00  st   [y,x]       8130  st([Y,X])                       #29, [dst + 1] = [src + 1]
              1b24 0124  ld   [$24]       8131  ld([sysArgs+0])                 #30,
              1b25 8002  adda $02         8132  adda(2)                         #31,
              1b26 c224  st   [$24]       8133  st([sysArgs+0])                 #32, src += 2
              1b27 0126  ld   [$26]       8134  ld([sysArgs+2])                 #33,
              1b28 8002  adda $02         8135  adda(2)                         #34,
              1b29 c226  st   [$26]       8136  st([sysArgs+2])                 #35, dst += 2
              1b2a 0118  ld   [$18]       8137  ld([vAC])                       #36,
              1b2b a001  suba $01         8138  suba(1)                         #37,
                                          8139  beq('.sys_memcopyword_40')      #38,
              1b2c f034  beq  .sys_memcopyword_40
              1b2d c218  st   [$18]       8140  st([vAC])                       #39, count--
              1b2e 0116  ld   [$16]       8141  ld([vPC])                       #40,
              1b2f a002  suba $02         8142  suba(2)                         #41,
              1b30 c216  st   [$16]       8143  st([vPC])                       #42, restart
              1b31 1403  ld   $03,y       8144  ld(hi('REENTER'),Y)             #43,
              1b32 e0cb  jmp  y,$cb       8145  jmp(Y,'REENTER')                #44,
              1b33 00e8  ld   $e8         8146  ld(-48/2)                       #45,
                                          8147  label('.sys_memcopyword_40')
.sys_memcopyword_40:
              1b34 1403  ld   $03,y       8148  ld(hi('NEXTY'),Y)               #40,
              1b35 e000  jmp  y,$00       8149  jmp(Y,'NEXTY')                  #41,
              1b36 00ea  ld   $ea         8150  ld(-44/2)                       #42,
                                          8151
                                          8152
                                          8153  # sys_MemCopyDWord, sysArgs0,1=src, sysArg2,3=dst, vAC=count, sysArg4,5=tmp, sysArg6,7=tmp
                                          8154  label('sys_MemCopyDWord')
sys_MemCopyDWord:
              1b37 1124  ld   [$24],x     8155  ld([sysArgs+0],X)               #18,
              1b38 0d00  ld   [y,x]       8156  ld([Y,X])                       #19, [src + 0]
              1b39 de00  st   [y,x++]     8157  st([Y,Xpp])                     #20
              1b3a c228  st   [$28]       8158  st([sysArgs+4])                 #21,
              1b3b 0d00  ld   [y,x]       8159  ld([Y,X])                       #22, [src + 1]
              1b3c de00  st   [y,x++]     8160  st([Y,Xpp])                     #23
              1b3d c229  st   [$29]       8161  st([sysArgs+5])                 #24,
              1b3e 0d00  ld   [y,x]       8162  ld([Y,X])                       #25, [src + 2]
              1b3f de00  st   [y,x++]     8163  st([Y,Xpp])                     #26
              1b40 c22a  st   [$2a]       8164  st([sysArgs+6])                 #27,
              1b41 0d00  ld   [y,x]       8165  ld([Y,X])                       #28, [src + 3]
              1b42 c22b  st   [$2b]       8166  st([sysArgs+7])                 #29,
              1b43 1527  ld   [$27],y     8167  ld([sysArgs+3],Y)               #30,
              1b44 1126  ld   [$26],x     8168  ld([sysArgs+2],X)               #31,
              1b45 0128  ld   [$28]       8169  ld([sysArgs+4])                 #32,
              1b46 de00  st   [y,x++]     8170  st([Y,Xpp])                     #33, [dst + 0] = [src + 0]
              1b47 0129  ld   [$29]       8171  ld([sysArgs+5])                 #34,
              1b48 de00  st   [y,x++]     8172  st([Y,Xpp])                     #35, [dst + 1] = [src + 1]
              1b49 012a  ld   [$2a]       8173  ld([sysArgs+6])                 #36,
              1b4a de00  st   [y,x++]     8174  st([Y,Xpp])                     #37, [dst + 2] = [src + 2]
              1b4b 012b  ld   [$2b]       8175  ld([sysArgs+7])                 #38,
              1b4c ce00  st   [y,x]       8176  st([Y,X])                       #39, [dst + 3] = [src + 3]
              1b4d 0124  ld   [$24]       8177  ld([sysArgs+0])                 #40,
              1b4e 8004  adda $04         8178  adda(4)                         #41,
              1b4f c224  st   [$24]       8179  st([sysArgs+0])                 #42, src += 4
              1b50 0126  ld   [$26]       8180  ld([sysArgs+2])                 #43,
              1b51 8004  adda $04         8181  adda(4)                         #44,
              1b52 c226  st   [$26]       8182  st([sysArgs+2])                 #45, dst += 4
              1b53 0118  ld   [$18]       8183  ld([vAC])                       #46,
              1b54 a001  suba $01         8184  suba(1)                         #47,
                                          8185  beq('.sys_memcopydword_50')     #48,
              1b55 f05d  beq  .sys_memcopydword_50
              1b56 c218  st   [$18]       8186  st([vAC])                       #49, count--
              1b57 0116  ld   [$16]       8187  ld([vPC])                       #50,
              1b58 a002  suba $02         8188  suba(2)                         #51,
              1b59 c216  st   [$16]       8189  st([vPC])                       #52, restart
              1b5a 1403  ld   $03,y       8190  ld(hi('REENTER'),Y)             #53,
              1b5b e0cb  jmp  y,$cb       8191  jmp(Y,'REENTER')                #54,
              1b5c 00e3  ld   $e3         8192  ld(-58/2)                       #55,
                                          8193  label('.sys_memcopydword_50')
.sys_memcopydword_50:
              1b5d 1403  ld   $03,y       8194  ld(hi('NEXTY'),Y)               #50,
              1b5e e000  jmp  y,$00       8195  jmp(Y,'NEXTY')                  #51,
              1b5f 00e5  ld   $e5         8196  ld(-54/2)                       #52,
                                          8197
                                          8198
                                          8199  # sys_ReadPixel
                                          8200  label('sys_ReadPixel')
sys_ReadPixel:
              1b60 8119  adda [$19]       8201  adda([vAC+1])                   #18,
              1b61 1200  ld   ac,x        8202  ld(AC,X)                        #19,
              1b62 1401  ld   $01,y       8203  ld(1,Y)                         #20, Y,X = 0x0100 + 2*y, (0 >= y <= 127)
              1b63 0d00  ld   [y,x]       8204  ld([Y,X])                       #21,
              1b64 1600  ld   ac,y        8205  ld(AC,Y)                        #22, Y = [Y,X]
              1b65 1118  ld   [$18],x     8206  ld([vAC],X)                     #23, X = x
              1b66 0d00  ld   [y,x]       8207  ld([Y,X])                       #24,
              1b67 c218  st   [$18]       8208  st([vAC])                       #25, vAC = [Y,X]
              1b68 0000  ld   $00         8209  ld(0)                           #26,
              1b69 c219  st   [$19]       8210  st([vAC+1])                     #27,
              1b6a 1403  ld   $03,y       8211  ld(hi('NEXTY'),Y)               #28,
              1b6b e000  jmp  y,$00       8212  jmp(Y,'NEXTY')                  #29,
              1b6c 00f0  ld   $f0         8213  ld(-32/2)                       #30,
                                          8214
                                          8215
                                          8216  # sys_DrawPixel
                                          8217  label('sys_DrawPixel')
sys_DrawPixel:
              1b6d 8125  adda [$25]       8218  adda([sysArgs+1])               #18,
              1b6e 1200  ld   ac,x        8219  ld(AC,X)                        #19,
              1b6f 1401  ld   $01,y       8220  ld(1,Y)                         #20, Y,X = 0x0100 + 2*y, (0 >= y <= 127)
              1b70 0d00  ld   [y,x]       8221  ld([Y,X])                       #21,
              1b71 1600  ld   ac,y        8222  ld(AC,Y)                        #22, Y = [Y,X]
              1b72 1124  ld   [$24],x     8223  ld([sysArgs+0],X)               #23, X = x
              1b73 0126  ld   [$26]       8224  ld([sysArgs+2])                 #24, colour
              1b74 ce00  st   [y,x]       8225  st([Y,X])                       #25, [Y,X] = colour
              1b75 1403  ld   $03,y       8226  ld(hi('NEXTY'),Y)               #26,
              1b76 e000  jmp  y,$00       8227  jmp(Y,'NEXTY')                  #27,
              1b77 00f1  ld   $f1         8228  ld(-30/2)                       #28,
                                          8229
                                          8230
              1b78 0200  nop              8231  fillers(until=0xff)
              1b79 0200  nop
              1b7a 0200  nop
              * 135 times
              1bff 0200  nop              8232  align(0x100, size=0x100)
                                          8233
                                          8234  #-----------------------------------------------------------------------
                                          8235  #       More sys implementations, (0x1C00)
                                          8236  #-----------------------------------------------------------------------
                                          8237
                                          8238  # sys_SortSprites, sysArgs0,1=_y_array, sysArg2=i, sysArg3=j, sysArg4=key0, sysArg5=length
                                          8239  #                  sysArgs6,7=_is_array, vAC.lo=key1
                                          8240  label('sys_SortSprites')
sys_SortSprites:
              1c00 0127  ld   [$27]       8241  ld([sysArgs+3])                 #18,
                                          8242  ble('.sys_sortsprites_21')      #19, j <= 0
              1c01 f820  ble  .sys_sortsprites_21
              1c02 0124  ld   [$24]       8243  ld([sysArgs+0])                 #20,
              1c03 8127  adda [$27]       8244  adda([sysArgs+3])               #21,
              1c04 b001  suba $01,x       8245  suba(1,X)                       #22,
              1c05 0d00  ld   [y,x]       8246  ld([Y,X])                       #23,
                                          8247  bmi('.sys_sortsprites_26')      #24, convert signed < to unsigned <
              1c06 e80a  blt  .sys_sortsprites_26
              1c07 a128  suba [$28]       8248  suba([sysArgs+4])               #25,
                                          8249  bra('.sys_sortsprites_28')      #26,
              1c08 fc0c  bra  .sys_sortsprites_28
              1c09 4128  ora  [$28]       8250  ora([sysArgs+4])                #27, borrow
                                          8251  label('.sys_sortsprites_26')
.sys_sortsprites_26:
              1c0a 2128  anda [$28]       8252  anda([sysArgs+4])               #26, borrow
              1c0b 0200  nop              8253  nop()                           #27,
                                          8254  label('.sys_sortsprites_28')
.sys_sortsprites_28:                      8255  bmi('.sys_sortsprites_30')      #28, y[j-1] < key
              1c0c e831  blt  .sys_sortsprites_30
              1c0d 0d00  ld   [y,x]       8256  ld([Y,X])                       #29,
              1c0e de00  st   [y,x++]     8257  st([Y,Xpp])                     #30,
              1c0f ce00  st   [y,x]       8258  st([Y,X])                       #31, y[j] = y[j-1]
              1c10 152b  ld   [$2b],y     8259  ld([sysArgs+7],Y)               #32,
              1c11 012a  ld   [$2a]       8260  ld([sysArgs+6])                 #33,
              1c12 8127  adda [$27]       8261  adda([sysArgs+3])               #34,
              1c13 b001  suba $01,x       8262  suba(1,X)                       #35,
              1c14 0d00  ld   [y,x]       8263  ld([Y,X])                       #36,
              1c15 de00  st   [y,x++]     8264  st([Y,Xpp])                     #37,
              1c16 ce00  st   [y,x]       8265  st([Y,X])                       #38, is[j] = is[j-1]
              1c17 0127  ld   [$27]       8266  ld([sysArgs+3])                 #39,
              1c18 a001  suba $01         8267  suba(1)                         #40,
              1c19 c227  st   [$27]       8268  st([sysArgs+3])                 #41, j--
              1c1a 0116  ld   [$16]       8269  ld([vPC])                       #42,
              1c1b a002  suba $02         8270  suba(2)                         #43,
              1c1c c216  st   [$16]       8271  st([vPC])                       #44, restart
              1c1d 1403  ld   $03,y       8272  ld(hi('REENTER'),Y)             #45,
              1c1e e0cb  jmp  y,$cb       8273  jmp(Y,'REENTER')                #46,
              1c1f 00e7  ld   $e7         8274  ld(-50/2)                       #47,
                                          8275  label('.sys_sortsprites_21')
.sys_sortsprites_21:
              1c20 9127  adda [$27],x     8276  adda([sysArgs+3],X)             #21,
              1c21 0128  ld   [$28]       8277  ld([sysArgs+4])                 #22,
              1c22 ce00  st   [y,x]       8278  st([Y,X])                       #23, y[j] = key0
              1c23 152b  ld   [$2b],y     8279  ld([sysArgs+7],Y)               #24,
              1c24 012a  ld   [$2a]       8280  ld([sysArgs+6])                 #25,
              1c25 9127  adda [$27],x     8281  adda([sysArgs+3],X)             #26,
              1c26 0182  ld   [$82]       8282  ld([0x82])                      #27,
              1c27 ce00  st   [y,x]       8283  st([Y,X])                       #28, is[j] = key1
              1c28 0126  ld   [$26]       8284  ld([sysArgs+2])                 #29,
              1c29 8001  adda $01         8285  adda(1)                         #30,
              1c2a c226  st   [$26]       8286  st([sysArgs+2])                 #31, i++
              1c2b a129  suba [$29]       8287  suba([sysArgs+5])               #32,
                                          8288  blt('.sys_sortsprites_35')      #33, i < length
              1c2c e842  blt  .sys_sortsprites_35
              1c2d 1525  ld   [$25],y     8289  ld([sysArgs+1],Y)               #34,
              1c2e 1403  ld   $03,y       8290  ld(hi('REENTER'),Y)             #35,
              1c2f e0cb  jmp  y,$cb       8291  jmp(Y,'REENTER')                #36,
              1c30 00ec  ld   $ec         8292  ld(-40/2)                       #37,
                                          8293  label('.sys_sortsprites_30')
.sys_sortsprites_30:
              1c31 de00  st   [y,x++]     8294  st([Y,Xpp])                     #30,
              1c32 0128  ld   [$28]       8295  ld([sysArgs+4])                 #31,
              1c33 ce00  st   [y,x]       8296  st([Y,X])                       #32, y[j] = key0
              1c34 152b  ld   [$2b],y     8297  ld([sysArgs+7],Y)               #33,
              1c35 012a  ld   [$2a]       8298  ld([sysArgs+6])                 #34,
              1c36 9127  adda [$27],x     8299  adda([sysArgs+3],X)             #35,
              1c37 0182  ld   [$82]       8300  ld([0x82])                      #36,
              1c38 ce00  st   [y,x]       8301  st([Y,X])                       #37, is[j] = key1
              1c39 0126  ld   [$26]       8302  ld([sysArgs+2])                 #38,
              1c3a 8001  adda $01         8303  adda(1)                         #39,
              1c3b c226  st   [$26]       8304  st([sysArgs+2])                 #40, i++
              1c3c a129  suba [$29]       8305  suba([sysArgs+5])               #41,
                                          8306  blt('.sys_sortsprites_44')      #42, i < length
              1c3d e853  blt  .sys_sortsprites_44
              1c3e 1525  ld   [$25],y     8307  ld([sysArgs+1],Y)               #43
              1c3f 1403  ld   $03,y       8308  ld(hi('NEXTY'),Y)               #44,
              1c40 e000  jmp  y,$00       8309  jmp(Y,'NEXTY')                  #45,
              1c41 00e8  ld   $e8         8310  ld(-48/2)                       #46,
                                          8311  label('.sys_sortsprites_35')
.sys_sortsprites_35:
              1c42 0124  ld   [$24]       8312  ld([sysArgs+0])                 #35,
              1c43 9126  adda [$26],x     8313  adda([sysArgs+2],X)             #36,
              1c44 0d00  ld   [y,x]       8314  ld([Y,X])                       #37,
              1c45 c228  st   [$28]       8315  st([sysArgs+4])                 #38, key0 = y[i]
              1c46 152b  ld   [$2b],y     8316  ld([sysArgs+7],Y)               #39,
              1c47 012a  ld   [$2a]       8317  ld([sysArgs+6])                 #40,
              1c48 9126  adda [$26],x     8318  adda([sysArgs+2],X)             #41,
              1c49 0d00  ld   [y,x]       8319  ld([Y,X])                       #42,
              1c4a c282  st   [$82]       8320  st([0x82])                      #43, key1 = is[i]
              1c4b 0126  ld   [$26]       8321  ld([sysArgs+2])                 #44,
              1c4c c227  st   [$27]       8322  st([sysArgs+3])                 #45, j = i
              1c4d 0116  ld   [$16]       8323  ld([vPC])                       #46,
              1c4e a002  suba $02         8324  suba(2)                         #47,
              1c4f c216  st   [$16]       8325  st([vPC])                       #48, restart
              1c50 1403  ld   $03,y       8326  ld(hi('REENTER'),Y)             #49,
              1c51 e0cb  jmp  y,$cb       8327  jmp(Y,'REENTER')                #50,
              1c52 00e5  ld   $e5         8328  ld(-54/2)                       #51,
                                          8329  label('.sys_sortsprites_44')
.sys_sortsprites_44:
              1c53 0124  ld   [$24]       8330  ld([sysArgs+0])                 #44,
              1c54 9126  adda [$26],x     8331  adda([sysArgs+2],X)             #45,
              1c55 0d00  ld   [y,x]       8332  ld([Y,X])                       #46,
              1c56 c228  st   [$28]       8333  st([sysArgs+4])                 #47, key0 = y[i]
              1c57 152b  ld   [$2b],y     8334  ld([sysArgs+7],Y)               #48,
              1c58 012a  ld   [$2a]       8335  ld([sysArgs+6])                 #49,
              1c59 9126  adda [$26],x     8336  adda([sysArgs+2],X)             #50,
              1c5a 0d00  ld   [y,x]       8337  ld([Y,X])                       #51,
              1c5b c282  st   [$82]       8338  st([0x82])                      #52, key1 = is[i]
              1c5c 0126  ld   [$26]       8339  ld([sysArgs+2])                 #53,
              1c5d c227  st   [$27]       8340  st([sysArgs+3])                 #54, j = i
              1c5e 0116  ld   [$16]       8341  ld([vPC])                       #55,
              1c5f a002  suba $02         8342  suba(2)                         #56,
              1c60 c216  st   [$16]       8343  st([vPC])                       #57, restart
              1c61 1403  ld   $03,y       8344  ld(hi('NEXTY'),Y)               #58,
              1c62 e000  jmp  y,$00       8345  jmp(Y,'NEXTY')                  #59,
              1c63 00e1  ld   $e1         8346  ld(-62/2)                       #60,
                                          8347
                                          8348
              1c64 0200  nop              8349  fillers(until=0xff)
              1c65 0200  nop
              1c66 0200  nop
              * 155 times
              1cff 0200  nop              8350  align(0x100, size=0x100)
                                          8351
                                          8352  #-----------------------------------------------------------------------
                                          8353  #       More sys implementations, (0x1D00)
                                          8354  #-----------------------------------------------------------------------
                                          8355
                                          8356  # sys_DrawSprite
                                          8357  label('sys_DrawSprite')
sys_DrawSprite:
              1d00 1583  ld   [$83],y     8358  ld([0x83],Y)                    #18, spriteY
                                          8359
              1d01 0d00  ld   [y,x]       8360  ld([Y,X])                       #19, get back0
              1d02 1587  ld   [$87],y     8361  ld([0x87],Y)                    #20, spriteData
              1d03 caa2  st   [y,$a2]     8362  st([Y,0xA2])                    #21, save back0
              1d04 09a3  ld   [y,$a3]     8363  ld([Y,0xA3])                    #22, load pixel0
              1d05 1583  ld   [$83],y     8364  ld([0x83],Y)                    #23, spriteY
              1d06 ec09  bne  $1d09       8365  bne(pc()+3)                     #24, colourkey
              1d07 fc0a  bra  $1d0a       8366  bra(pc()+3)                     #25,
              1d08 0d00  ld   [y,x]       8367  ld([Y,X])                       #26,
              1d09 0200  nop              8368  nop()                           #26, (!)
              1d0a de00  st   [y,x++]     8369  st([Y,Xpp])                     #27, draw pixel0
                                          8370
              1d0b 0d00  ld   [y,x]       8371  ld([Y,X])                       #28, get back1
              1d0c 1587  ld   [$87],y     8372  ld([0x87],Y)                    #29, spriteData
              1d0d caa4  st   [y,$a4]     8373  st([Y,0xA4])                    #30, save back1
              1d0e 09a5  ld   [y,$a5]     8374  ld([Y,0xA5])                    #31, load pixel1
              1d0f 1583  ld   [$83],y     8375  ld([0x83],Y)                    #32, spriteY
              1d10 ec13  bne  $1d13       8376  bne(pc()+3)                     #33, colourkey
              1d11 fc14  bra  $1d14       8377  bra(pc()+3)                     #34,
              1d12 0d00  ld   [y,x]       8378  ld([Y,X])                       #35,
              1d13 0200  nop              8379  nop()                           #35, (!)
              1d14 de00  st   [y,x++]     8380  st([Y,Xpp])                     #36, draw pixel1
                                          8381
              1d15 0d00  ld   [y,x]       8382  ld([Y,X])                       #37, get back2
              1d16 1587  ld   [$87],y     8383  ld([0x87],Y)                    #38, spriteData
              1d17 caa6  st   [y,$a6]     8384  st([Y,0xA6])                    #39, save back2
              1d18 09a7  ld   [y,$a7]     8385  ld([Y,0xA7])                    #40, load pixel2
              1d19 1583  ld   [$83],y     8386  ld([0x83],Y)                    #41, spriteY
              1d1a ec1d  bne  $1d1d       8387  bne(pc()+3)                     #42, colourkey
              1d1b fc1e  bra  $1d1e       8388  bra(pc()+3)                     #43,
              1d1c 0d00  ld   [y,x]       8389  ld([Y,X])                       #44,
              1d1d 0200  nop              8390  nop()                           #44, (!)
              1d1e de00  st   [y,x++]     8391  st([Y,Xpp])                     #45, draw pixel2
                                          8392
              1d1f 0d00  ld   [y,x]       8393  ld([Y,X])                       #46, get back3
              1d20 1587  ld   [$87],y     8394  ld([0x87],Y)                    #47, spriteData
              1d21 caa8  st   [y,$a8]     8395  st([Y,0xA8])                    #48, save back3
              1d22 09a9  ld   [y,$a9]     8396  ld([Y,0xA9])                    #49, load pixel3
              1d23 1583  ld   [$83],y     8397  ld([0x83],Y)                    #50, spriteY
              1d24 ec27  bne  $1d27       8398  bne(pc()+3)                     #51, colourkey
              1d25 fc28  bra  $1d28       8399  bra(pc()+3)                     #52,
              1d26 0d00  ld   [y,x]       8400  ld([Y,X])                       #53,
              1d27 0200  nop              8401  nop()                           #53, (!)
              1d28 de00  st   [y,x++]     8402  st([Y,Xpp])                     #54, draw pixel3
                                          8403
              1d29 0d00  ld   [y,x]       8404  ld([Y,X])                       #55, get back4
              1d2a 1587  ld   [$87],y     8405  ld([0x87],Y)                    #56, spriteData
              1d2b caaa  st   [y,$aa]     8406  st([Y,0xAA])                    #57, save back4
              1d2c 09ab  ld   [y,$ab]     8407  ld([Y,0xAB])                    #58, load pixel4
              1d2d 1583  ld   [$83],y     8408  ld([0x83],Y)                    #59, spriteY
              1d2e ec31  bne  $1d31       8409  bne(pc()+3)                     #60, colourkey
              1d2f fc32  bra  $1d32       8410  bra(pc()+3)                     #61,
              1d30 0d00  ld   [y,x]       8411  ld([Y,X])                       #62,
              1d31 0200  nop              8412  nop()                           #62, (!)
              1d32 de00  st   [y,x++]     8413  st([Y,Xpp])                     #63, draw pixel4
                                          8414
              1d33 0d00  ld   [y,x]       8415  ld([Y,X])                       #64, get back5
              1d34 1587  ld   [$87],y     8416  ld([0x87],Y)                    #65, spriteData
              1d35 caac  st   [y,$ac]     8417  st([Y,0xAC])                    #66, save back5
              1d36 09ad  ld   [y,$ad]     8418  ld([Y,0xAD])                    #67, load pixel5
              1d37 1583  ld   [$83],y     8419  ld([0x83],Y)                    #68, spriteY
              1d38 ec3b  bne  $1d3b       8420  bne(pc()+3)                     #69, colourkey
              1d39 fc3c  bra  $1d3c       8421  bra(pc()+3)                     #70,
              1d3a 0d00  ld   [y,x]       8422  ld([Y,X])                       #71,
              1d3b 0200  nop              8423  nop()                           #71, (!)
              1d3c de00  st   [y,x++]     8424  st([Y,Xpp])                     #72, draw pixel5
                                          8425
              1d3d 0d00  ld   [y,x]       8426  ld([Y,X])                       #73, get back6
              1d3e 1587  ld   [$87],y     8427  ld([0x87],Y)                    #74, spriteData
              1d3f caae  st   [y,$ae]     8428  st([Y,0xAE])                    #75, save back6
              1d40 09af  ld   [y,$af]     8429  ld([Y,0xAF])                    #76, load pixel6
              1d41 1583  ld   [$83],y     8430  ld([0x83],Y)                    #77, spriteY
              1d42 ec45  bne  $1d45       8431  bne(pc()+3)                     #78, colourkey
              1d43 fc46  bra  $1d46       8432  bra(pc()+3)                     #79,
              1d44 0d00  ld   [y,x]       8433  ld([Y,X])                       #80,
              1d45 0200  nop              8434  nop()                           #80, (!)
              1d46 de00  st   [y,x++]     8435  st([Y,Xpp])                     #81, draw pixel6
                                          8436
              1d47 0d00  ld   [y,x]       8437  ld([Y,X])                       #82, get back7
              1d48 1587  ld   [$87],y     8438  ld([0x87],Y)                    #83, spriteData
              1d49 cab0  st   [y,$b0]     8439  st([Y,0xB0])                    #84, save back7
              1d4a 09b1  ld   [y,$b1]     8440  ld([Y,0xB1])                    #85, load pixel7
              1d4b 1583  ld   [$83],y     8441  ld([0x83],Y)                    #86, spriteY
              1d4c ec4f  bne  $1d4f       8442  bne(pc()+3)                     #87, colourkey
              1d4d fc50  bra  $1d50       8443  bra(pc()+3)                     #88,
              1d4e 0d00  ld   [y,x]       8444  ld([Y,X])                       #89,
              1d4f 0200  nop              8445  nop()                           #89, (!)
              1d50 de00  st   [y,x++]     8446  st([Y,Xpp])                     #90, draw pixel7
                                          8447
              1d51 0d00  ld   [y,x]       8448  ld([Y,X])                       #91, get back8
              1d52 1587  ld   [$87],y     8449  ld([0x87],Y)                    #92, spriteData
              1d53 cab2  st   [y,$b2]     8450  st([Y,0xB2])                    #93, save back8
              1d54 09b3  ld   [y,$b3]     8451  ld([Y,0xB3])                    #94, load pixel8
              1d55 1583  ld   [$83],y     8452  ld([0x83],Y)                    #95, spriteY
              1d56 ec59  bne  $1d59       8453  bne(pc()+3)                     #96, colourkey
              1d57 fc5a  bra  $1d5a       8454  bra(pc()+3)                     #97,
              1d58 0d00  ld   [y,x]       8455  ld([Y,X])                       #98,
              1d59 0200  nop              8456  nop()                           #98, (!)
              1d5a de00  st   [y,x++]     8457  st([Y,Xpp])                     #99, draw pixel8
                                          8458
              1d5b 1587  ld   [$87],y     8459  ld([0x87],Y)                    #100, spriteData
              1d5c 0182  ld   [$82]       8460  ld([0x82])                      #101, spriteX
              1d5d caa0  st   [y,$a0]     8461  st([Y,0xA0])                    #102, spriteOldX
              1d5e 0183  ld   [$83]       8462  ld([0x83])                      #103, spriteY
              1d5f caa1  st   [y,$a1]     8463  st([Y,0xA1])                    #104, spriteOldY
              1d60 0186  ld   [$86]       8464  ld([0x86])                      #105,
              1d61 a001  suba $01         8465  suba(1)                         #106,
                                          8466  beq('.sys_drawsprite_109')      #107,
              1d62 f070  beq  .sys_drawsprite_109
              1d63 c286  st   [$86]       8467  st([0x86])                      #108, scanLines--
              1d64 0183  ld   [$83]       8468  ld([0x83])                      #109, spriteY
              1d65 8001  adda $01         8469  adda(1)                         #110,
              1d66 c283  st   [$83]       8470  st([0x83])                      #111, spriteY++
              1d67 0187  ld   [$87]       8471  ld([0x87])                      #112,
              1d68 8001  adda $01         8472  adda(1)                         #113,
              1d69 c287  st   [$87]       8473  st([0x87])                      #114, spriteData++
              1d6a 0116  ld   [$16]       8474  ld([vPC])                       #115,
              1d6b a002  suba $02         8475  suba(2)                         #116,
              1d6c c216  st   [$16]       8476  st([vPC])                       #117, restart
              1d6d 1403  ld   $03,y       8477  ld(hi('NEXTY'),Y)               #118,
              1d6e e000  jmp  y,$00       8478  jmp(Y,'NEXTY')                  #119,
              1d6f 00c3  ld   $c3         8479  ld(-122/2)                      #120,
                                          8480  label('.sys_drawsprite_109')
.sys_drawsprite_109:
              1d70 019c  ld   [$9c]       8481  ld([0x9C])                      #109,
              1d71 8001  adda $01         8482  adda(1)                         #110,
              1d72 d29c  st   [$9c],x     8483  st([0x9C],X)                    #111, register13++
              1d73 159d  ld   [$9d],y     8484  ld([0x9D],Y)                    #112,
              1d74 0d00  ld   [y,x]       8485  ld([Y,X])                       #113, peek(register13)
              1d75 c282  st   [$82]       8486  st([0x82])                      #114, spriteX
              1d76 019e  ld   [$9e]       8487  ld([0x9E])                      #115,
              1d77 8001  adda $01         8488  adda(1)                         #116,
              1d78 d29e  st   [$9e],x     8489  st([0x9E],X)                    #117, register14++
              1d79 159f  ld   [$9f],y     8490  ld([0x9F],Y)                    #118,
              1d7a 0d00  ld   [y,x]       8491  ld([Y,X])                       #119, peek(register14)
              1d7b c283  st   [$83]       8492  st([0x83])                      #120, spriteY
              1d7c 01a0  ld   [$a0]       8493  ld([0xA0])                      #121,
              1d7d 8001  adda $01         8494  adda(1)                         #122,
              1d7e d2a0  st   [$a0],x     8495  st([0xA0],X)                    #123, register15++
              1d7f 15a1  ld   [$a1],y     8496  ld([0xA1],Y)                    #124,
              1d80 0d00  ld   [y,x]       8497  ld([Y,X])                       #125, peek(register15)
              1d81 c287  st   [$87]       8498  st([0x87])                      #126, spriteData
              1d82 1403  ld   $03,y       8499  ld(hi('REENTER'),Y)             #127,
              1d83 e0cb  jmp  y,$cb       8500  jmp(Y,'REENTER')                #128,
              1d84 00be  ld   $be         8501  ld(-132/2)                      #129,
                                          8502
                                          8503
                                          8504  # sys_DrawVLine, sysArgs0,1=count:colour, sysArgs2,3=X:Y address
                                          8505  label('sys_DrawVLine')
sys_DrawVLine:
              1d85 1126  ld   [$26],x     8506  ld([sysArgs+2],X)               #18,
              1d86 0124  ld   [$24]       8507  ld([sysArgs+0])                 #19,
              1d87 a008  suba $08         8508  suba(8)                         #20,
                                          8509  blt('.sys_drawvline_23')        #21,
              1d88 e8b3  blt  .sys_drawvline_23
              1d89 0124  ld   [$24]       8510  ld([sysArgs+0])                 #22,
              1d8a 0125  ld   [$25]       8511  ld([sysArgs+1])                 #23, 8 pixels
              1d8b ce00  st   [y,x]       8512  st([Y,X])                       #24,
              1d8c 0127  ld   [$27]       8513  ld([sysArgs+3])                 #25,
              1d8d 9401  adda $01,y       8514  adda(1,Y)                       #26,
              1d8e 0125  ld   [$25]       8515  ld([sysArgs+1])                 #27,
              1d8f ce00  st   [y,x]       8516  st([Y,X])                       #28,
              1d90 0127  ld   [$27]       8517  ld([sysArgs+3])                 #29,
              1d91 9402  adda $02,y       8518  adda(2,Y)                       #30,
              1d92 0125  ld   [$25]       8519  ld([sysArgs+1])                 #31,
              1d93 ce00  st   [y,x]       8520  st([Y,X])                       #32,
              1d94 0127  ld   [$27]       8521  ld([sysArgs+3])                 #33,
              1d95 9403  adda $03,y       8522  adda(3,Y)                       #34,
              1d96 0125  ld   [$25]       8523  ld([sysArgs+1])                 #35,
              1d97 ce00  st   [y,x]       8524  st([Y,X])                       #36,
              1d98 0127  ld   [$27]       8525  ld([sysArgs+3])                 #37,
              1d99 9404  adda $04,y       8526  adda(4,Y)                       #38,
              1d9a 0125  ld   [$25]       8527  ld([sysArgs+1])                 #39,
              1d9b ce00  st   [y,x]       8528  st([Y,X])                       #40,
              1d9c 0127  ld   [$27]       8529  ld([sysArgs+3])                 #41,
              1d9d 9405  adda $05,y       8530  adda(5,Y)                       #42,
              1d9e 0125  ld   [$25]       8531  ld([sysArgs+1])                 #43,
              1d9f ce00  st   [y,x]       8532  st([Y,X])                       #44,
              1da0 0127  ld   [$27]       8533  ld([sysArgs+3])                 #45,
              1da1 9406  adda $06,y       8534  adda(6,Y)                       #46,
              1da2 0125  ld   [$25]       8535  ld([sysArgs+1])                 #47,
              1da3 ce00  st   [y,x]       8536  st([Y,X])                       #48,
              1da4 0127  ld   [$27]       8537  ld([sysArgs+3])                 #49,
              1da5 9407  adda $07,y       8538  adda(7,Y)                       #50,
              1da6 8008  adda $08         8539  adda(8)                         #51,
              1da7 c227  st   [$27]       8540  st([sysArgs+3])                 #52,
              1da8 0125  ld   [$25]       8541  ld([sysArgs+1])                 #53,
              1da9 ce00  st   [y,x]       8542  st([Y,X])                       #54,
              1daa 0124  ld   [$24]       8543  ld([sysArgs+0])                 #55,
              1dab a008  suba $08         8544  suba(8)                         #56,
              1dac c224  st   [$24]       8545  st([sysArgs+0])                 #57,
              1dad 0116  ld   [$16]       8546  ld([vPC])                       #58,
              1dae a002  suba $02         8547  suba(2)                         #59,
              1daf c216  st   [$16]       8548  st([vPC])                       #60, restart
              1db0 1403  ld   $03,y       8549  ld(hi('REENTER'),Y)             #61,
              1db1 e0cb  jmp  y,$cb       8550  jmp(Y,'REENTER')                #62,
              1db2 00df  ld   $df         8551  ld(-66/2)                       #63,
                                          8552  label('.sys_drawvline_23')
.sys_drawvline_23:
              1db3 a004  suba $04         8553  suba(4)                         #23,
                                          8554  blt('.sys_drawvline_26')        #24,
              1db4 e8cf  blt  .sys_drawvline_26
              1db5 0124  ld   [$24]       8555  ld([sysArgs+0])                 #25,
              1db6 0125  ld   [$25]       8556  ld([sysArgs+1])                 #26, 4 pixels
              1db7 ce00  st   [y,x]       8557  st([Y,X])                       #27,
              1db8 0127  ld   [$27]       8558  ld([sysArgs+3])                 #28,
              1db9 9401  adda $01,y       8559  adda(1,Y)                       #29,
              1dba 0125  ld   [$25]       8560  ld([sysArgs+1])                 #30,
              1dbb ce00  st   [y,x]       8561  st([Y,X])                       #31,
              1dbc 0127  ld   [$27]       8562  ld([sysArgs+3])                 #32,
              1dbd 9402  adda $02,y       8563  adda(2,Y)                       #33,
              1dbe 0125  ld   [$25]       8564  ld([sysArgs+1])                 #34,
              1dbf ce00  st   [y,x]       8565  st([Y,X])                       #35,
              1dc0 0127  ld   [$27]       8566  ld([sysArgs+3])                 #36,
              1dc1 9403  adda $03,y       8567  adda(3,Y)                       #37,
              1dc2 8004  adda $04         8568  adda(4)                         #38,
              1dc3 c227  st   [$27]       8569  st([sysArgs+3])                 #39,
              1dc4 0125  ld   [$25]       8570  ld([sysArgs+1])                 #40,
              1dc5 ce00  st   [y,x]       8571  st([Y,X])                       #41,
              1dc6 0124  ld   [$24]       8572  ld([sysArgs+0])                 #42,
              1dc7 a004  suba $04         8573  suba(4)                         #43,
              1dc8 c224  st   [$24]       8574  st([sysArgs+0])                 #44,
              1dc9 0116  ld   [$16]       8575  ld([vPC])                       #45,
              1dca a002  suba $02         8576  suba(2)                         #46,
              1dcb c216  st   [$16]       8577  st([vPC])                       #47, restart
              1dcc 1403  ld   $03,y       8578  ld(hi('NEXTY'),Y)               #48,
              1dcd e000  jmp  y,$00       8579  jmp(Y,'NEXTY')                  #49,
              1dce 00e6  ld   $e6         8580  ld(-52/2)                       #50,
                                          8581  label('.sys_drawvline_26')
.sys_drawvline_26:
              1dcf a002  suba $02         8582  suba(2)                         #26,
                                          8583  blt('.sys_drawvline_29')        #27,
              1dd0 e8e3  blt  .sys_drawvline_29
              1dd1 0124  ld   [$24]       8584  ld([sysArgs+0])                 #28,
              1dd2 0125  ld   [$25]       8585  ld([sysArgs+1])                 #29, 2 pixels
              1dd3 ce00  st   [y,x]       8586  st([Y,X])                       #30,
              1dd4 0127  ld   [$27]       8587  ld([sysArgs+3])                 #31,
              1dd5 9401  adda $01,y       8588  adda(1,Y)                       #32,
              1dd6 8002  adda $02         8589  adda(2)                         #33,
              1dd7 c227  st   [$27]       8590  st([sysArgs+3])                 #34,
              1dd8 0125  ld   [$25]       8591  ld([sysArgs+1])                 #35,
              1dd9 ce00  st   [y,x]       8592  st([Y,X])                       #36,
              1dda 0124  ld   [$24]       8593  ld([sysArgs+0])                 #37,
              1ddb a002  suba $02         8594  suba(2)                         #38,
              1ddc c224  st   [$24]       8595  st([sysArgs+0])                 #39,
              1ddd 0116  ld   [$16]       8596  ld([vPC])                       #40,
              1dde a002  suba $02         8597  suba(2)                         #41,
              1ddf c216  st   [$16]       8598  st([vPC])                       #42, restart
              1de0 1403  ld   $03,y       8599  ld(hi('REENTER'),Y)             #43,
              1de1 e0cb  jmp  y,$cb       8600  jmp(Y,'REENTER')                #44,
              1de2 00e8  ld   $e8         8601  ld(-48/2)                       #45,
                                          8602  label('.sys_drawvline_29')
.sys_drawvline_29:
              1de3 a001  suba $01         8603  suba(1)                         #29,
                                          8604  blt('.sys_drawvline_32')        #30,
              1de4 e8f1  blt  .sys_drawvline_32
              1de5 0124  ld   [$24]       8605  ld([sysArgs+0])                 #31,
              1de6 0125  ld   [$25]       8606  ld([sysArgs+1])                 #32, 1 pixel
              1de7 ce00  st   [y,x]       8607  st([Y,X])                       #33,
              1de8 0124  ld   [$24]       8608  ld([sysArgs+0])                 #34,
              1de9 a001  suba $01         8609  suba(1)                         #35,
              1dea c224  st   [$24]       8610  st([sysArgs+0])                 #36,
              1deb 0116  ld   [$16]       8611  ld([vPC])                       #37,
              1dec a002  suba $02         8612  suba(2)                         #38,
              1ded c216  st   [$16]       8613  st([vPC])                       #39, restart
              1dee 1403  ld   $03,y       8614  ld(hi('NEXTY'),Y)               #40,
              1def e000  jmp  y,$00       8615  jmp(Y,'NEXTY')                  #41,
              1df0 00ea  ld   $ea         8616  ld(-44/2)                       #42,
                                          8617  label('.sys_drawvline_32')
.sys_drawvline_32:
              1df1 1403  ld   $03,y       8618  ld(hi('NEXTY'),Y)               #32, done
              1df2 e000  jmp  y,$00       8619  jmp(Y,'NEXTY')                  #33,
              1df3 00ee  ld   $ee         8620  ld(-36/2)                       #34,
                                          8621
                                          8622
              1df4 0200  nop              8623  fillers(until=0xff)
              1df5 0200  nop
              1df6 0200  nop
              * 11 times
              1dff 0200  nop              8624  align(0x100, size=0x100)
                                          8625
                                          8626  #-----------------------------------------------------------------------
                                          8627  #       More sys implementations, (0x1E00)
                                          8628  #-----------------------------------------------------------------------
                                          8629
                                          8630  # sys_SpritePattern, sysArgs0,1=src, sysArgs2=dstY, sysArgs3=height/2, sysArgs4,5=patternLut
                                          8631  label('sys_SpritePattern')
sys_SpritePattern:
              1e00 1525  ld   [$25],y     8632  ld([sysArgs+1],Y)               #18, src.hi
              1e01 0d00  ld   [y,x]       8633  ld([Y,X])                       #19,
              1e02 de00  st   [y,x++]     8634  st([Y,Xpp])                     #20, src.lo++
              1e03 1526  ld   [$26],y     8635  ld([sysArgs+2],Y)               #21,
              1e04 caa3  st   [y,$a3]     8636  st([Y,0xA3])                    #22, pixel0
              1e05 1525  ld   [$25],y     8637  ld([sysArgs+1],Y)               #23, src.hi
              1e06 0d00  ld   [y,x]       8638  ld([Y,X])                       #24,
              1e07 de00  st   [y,x++]     8639  st([Y,Xpp])                     #25, src.lo++
              1e08 1526  ld   [$26],y     8640  ld([sysArgs+2],Y)               #26,
              1e09 caa5  st   [y,$a5]     8641  st([Y,0xA5])                    #27, pixel1
              1e0a 1525  ld   [$25],y     8642  ld([sysArgs+1],Y)               #28, src.hi
              1e0b 0d00  ld   [y,x]       8643  ld([Y,X])                       #29,
              1e0c de00  st   [y,x++]     8644  st([Y,Xpp])                     #30, src.lo++
              1e0d 1526  ld   [$26],y     8645  ld([sysArgs+2],Y)               #31,
              1e0e caa7  st   [y,$a7]     8646  st([Y,0xA7])                    #32, pixel2
              1e0f 1525  ld   [$25],y     8647  ld([sysArgs+1],Y)               #33, src.hi
              1e10 0d00  ld   [y,x]       8648  ld([Y,X])                       #34,
              1e11 de00  st   [y,x++]     8649  st([Y,Xpp])                     #35, src.lo++
              1e12 1526  ld   [$26],y     8650  ld([sysArgs+2],Y)               #36,
              1e13 caa9  st   [y,$a9]     8651  st([Y,0xA9])                    #37, pixel3
              1e14 1525  ld   [$25],y     8652  ld([sysArgs+1],Y)               #38, src.hi
              1e15 0d00  ld   [y,x]       8653  ld([Y,X])                       #39,
              1e16 de00  st   [y,x++]     8654  st([Y,Xpp])                     #40, src.lo++
              1e17 1526  ld   [$26],y     8655  ld([sysArgs+2],Y)               #41,
              1e18 caab  st   [y,$ab]     8656  st([Y,0xAB])                    #42, pixel4
              1e19 1525  ld   [$25],y     8657  ld([sysArgs+1],Y)               #43, src.hi
              1e1a 0d00  ld   [y,x]       8658  ld([Y,X])                       #44,
              1e1b de00  st   [y,x++]     8659  st([Y,Xpp])                     #45, src.lo++
              1e1c 1526  ld   [$26],y     8660  ld([sysArgs+2],Y)               #46,
              1e1d caad  st   [y,$ad]     8661  st([Y,0xAD])                    #47, pixel5
              1e1e 1525  ld   [$25],y     8662  ld([sysArgs+1],Y)               #48, src.hi
              1e1f 0d00  ld   [y,x]       8663  ld([Y,X])                       #49,
              1e20 de00  st   [y,x++]     8664  st([Y,Xpp])                     #50, src.lo++
              1e21 1526  ld   [$26],y     8665  ld([sysArgs+2],Y)               #51,
              1e22 caaf  st   [y,$af]     8666  st([Y,0xAF])                    #52, pixel6
              1e23 1525  ld   [$25],y     8667  ld([sysArgs+1],Y)               #53, src.hi
              1e24 0d00  ld   [y,x]       8668  ld([Y,X])                       #54,
              1e25 de00  st   [y,x++]     8669  st([Y,Xpp])                     #55, src.lo++
              1e26 1526  ld   [$26],y     8670  ld([sysArgs+2],Y)               #56,
              1e27 cab1  st   [y,$b1]     8671  st([Y,0xB1])                    #57, pixel7
              1e28 1525  ld   [$25],y     8672  ld([sysArgs+1],Y)               #58, src.hi
              1e29 0d00  ld   [y,x]       8673  ld([Y,X])                       #59,
              1e2a de00  st   [y,x++]     8674  st([Y,Xpp])                     #60, src.lo++
              1e2b 1526  ld   [$26],y     8675  ld([sysArgs+2],Y)               #61,
              1e2c cab3  st   [y,$b3]     8676  st([Y,0xB3])                    #62, pixel8
              1e2d 0126  ld   [$26]       8677  ld([sysArgs+2])                 #63,
              1e2e 8001  adda $01         8678  adda(1)                         #64,
              1e2f c226  st   [$26]       8679  st([sysArgs+2])                 #65, dstY++
              1e30 1525  ld   [$25],y     8680  ld([sysArgs+1],Y)               #66, src.hi
              1e31 0d00  ld   [y,x]       8681  ld([Y,X])                       #67,
              1e32 de00  st   [y,x++]     8682  st([Y,Xpp])                     #68, src.lo++
              1e33 1526  ld   [$26],y     8683  ld([sysArgs+2],Y)               #69,
              1e34 caa3  st   [y,$a3]     8684  st([Y,0xA3])                    #70, pixel9
              1e35 1525  ld   [$25],y     8685  ld([sysArgs+1],Y)               #71, src.hi
              1e36 0d00  ld   [y,x]       8686  ld([Y,X])                       #72,
              1e37 de00  st   [y,x++]     8687  st([Y,Xpp])                     #73, src.lo++
              1e38 1526  ld   [$26],y     8688  ld([sysArgs+2],Y)               #74,
              1e39 caa5  st   [y,$a5]     8689  st([Y,0xA5])                    #75, pixel10
              1e3a 1525  ld   [$25],y     8690  ld([sysArgs+1],Y)               #76, src.hi
              1e3b 0d00  ld   [y,x]       8691  ld([Y,X])                       #77,
              1e3c de00  st   [y,x++]     8692  st([Y,Xpp])                     #78, src.lo++
              1e3d 1526  ld   [$26],y     8693  ld([sysArgs+2],Y)               #79,
              1e3e caa7  st   [y,$a7]     8694  st([Y,0xA7])                    #80, pixel11
              1e3f 1525  ld   [$25],y     8695  ld([sysArgs+1],Y)               #81, src.hi
              1e40 0d00  ld   [y,x]       8696  ld([Y,X])                       #82,
              1e41 de00  st   [y,x++]     8697  st([Y,Xpp])                     #83, src.lo++
              1e42 1526  ld   [$26],y     8698  ld([sysArgs+2],Y)               #84,
              1e43 caa9  st   [y,$a9]     8699  st([Y,0xA9])                    #85, pixel12
              1e44 1525  ld   [$25],y     8700  ld([sysArgs+1],Y)               #86, src.hi
              1e45 0d00  ld   [y,x]       8701  ld([Y,X])                       #87,
              1e46 de00  st   [y,x++]     8702  st([Y,Xpp])                     #88, src.lo++
              1e47 1526  ld   [$26],y     8703  ld([sysArgs+2],Y)               #89,
              1e48 caab  st   [y,$ab]     8704  st([Y,0xAB])                    #90, pixel13
              1e49 1525  ld   [$25],y     8705  ld([sysArgs+1],Y)               #91, src.hi
              1e4a 0d00  ld   [y,x]       8706  ld([Y,X])                       #92,
              1e4b de00  st   [y,x++]     8707  st([Y,Xpp])                     #93, src.lo++
              1e4c 1526  ld   [$26],y     8708  ld([sysArgs+2],Y)               #94,
              1e4d caad  st   [y,$ad]     8709  st([Y,0xAD])                    #95, pixel14
              1e4e 1525  ld   [$25],y     8710  ld([sysArgs+1],Y)               #96, src.hi
              1e4f 0d00  ld   [y,x]       8711  ld([Y,X])                       #97,
              1e50 de00  st   [y,x++]     8712  st([Y,Xpp])                     #98, src.lo++
              1e51 1526  ld   [$26],y     8713  ld([sysArgs+2],Y)               #99,
              1e52 caaf  st   [y,$af]     8714  st([Y,0xAF])                    #100, pixel15
              1e53 1525  ld   [$25],y     8715  ld([sysArgs+1],Y)               #101, src.hi
              1e54 0d00  ld   [y,x]       8716  ld([Y,X])                       #102,
              1e55 de00  st   [y,x++]     8717  st([Y,Xpp])                     #103, src.lo++
              1e56 1526  ld   [$26],y     8718  ld([sysArgs+2],Y)               #104,
              1e57 cab1  st   [y,$b1]     8719  st([Y,0xB1])                    #105, pixel16
              1e58 1525  ld   [$25],y     8720  ld([sysArgs+1],Y)               #106, src.hi
              1e59 0d00  ld   [y,x]       8721  ld([Y,X])                       #107,
              1e5a de00  st   [y,x++]     8722  st([Y,Xpp])                     #108, src.lo++
              1e5b 1526  ld   [$26],y     8723  ld([sysArgs+2],Y)               #109,
              1e5c cab3  st   [y,$b3]     8724  st([Y,0xB3])                    #110, pixel17
              1e5d 0126  ld   [$26]       8725  ld([sysArgs+2])                 #111,
              1e5e 8001  adda $01         8726  adda(1)                         #112,
              1e5f c226  st   [$26]       8727  st([sysArgs+2])                 #113, dstY++
                                          8728
              1e60 0128  ld   [$28]       8729  ld([sysArgs+4])                 #114,
              1e61 8002  adda $02         8730  adda(2)                         #115,
              1e62 d228  st   [$28],x     8731  st([sysArgs+4],X)               #116, patternLut += 2
              1e63 1529  ld   [$29],y     8732  ld([sysArgs+5],Y)               #117,
              1e64 0d00  ld   [y,x]       8733  ld([Y,X])                       #118,
              1e65 de00  st   [y,x++]     8734  st([Y,Xpp])                     #119,
              1e66 c224  st   [$24]       8735  st([sysArgs+0])                 #120, src.lo
              1e67 0d00  ld   [y,x]       8736  ld([Y,X])                       #121,
              1e68 c225  st   [$25]       8737  st([sysArgs+1])                 #122, src.hi
                                          8738
              1e69 0127  ld   [$27]       8739  ld([sysArgs+3])                 #123,
              1e6a a001  suba $01         8740  suba(1)                         #124,
              1e6b c227  st   [$27]       8741  st([sysArgs+3])                 #125, height/2 --
                                          8742  beq('.sys_spritepattern_128')   #126,
              1e6c f073  beq  .sys_spritepattern_128
              1e6d 0116  ld   [$16]       8743  ld([vPC])                       #127,
              1e6e a002  suba $02         8744  suba(2)                         #128,
              1e6f c216  st   [$16]       8745  st([vPC])                       #129, restart
              1e70 1403  ld   $03,y       8746  ld(hi('NEXTY'),Y)               #130,
              1e71 e000  jmp  y,$00       8747  jmp(Y,'NEXTY')                  #131,
              1e72 00bd  ld   $bd         8748  ld(-134/2)                      #132,
                                          8749
                                          8750  label('.sys_spritepattern_128')
.sys_spritepattern_128:
              1e73 1403  ld   $03,y       8751  ld(hi('NEXTY'),Y)               #128,
              1e74 e000  jmp  y,$00       8752  jmp(Y,'NEXTY')                  #129,
              1e75 00be  ld   $be         8753  ld(-132/2)                      #130,
                                          8754
                                          8755
                                          8756  # sys_DrawBullet
                                          8757  label('sys_DrawBullet')
sys_DrawBullet:
              1e76 1583  ld   [$83],y     8758  ld([0x83],Y)                    #18, bulletY
              1e77 0d00  ld   [y,x]       8759  ld([Y,X])                       #19, AC = screen
              1e78 1587  ld   [$87],y     8760  ld([0x87],Y)                    #20, bulletData
              1e79 69b4  xora [y,$b4]     8761  xora([Y,0xB4])                  #21, AC ^= bullet
              1e7a 1583  ld   [$83],y     8762  ld([0x83],Y)                    #22, bulletY
              1e7b de00  st   [y,x++]     8763  st([Y,Xpp])                     #23, screen = AC
                                          8764
              1e7c 0d00  ld   [y,x]       8765  ld([Y,X])                       #24, AC = screen
              1e7d 1587  ld   [$87],y     8766  ld([0x87],Y)                    #25, bulletData
              1e7e 69b5  xora [y,$b5]     8767  xora([Y,0xB5])                  #26, AC ^= bullet
              1e7f 1583  ld   [$83],y     8768  ld([0x83],Y)                    #27, bulletY
              1e80 de00  st   [y,x++]     8769  st([Y,Xpp])                     #28, screen = AC
                                          8770
              1e81 0d00  ld   [y,x]       8771  ld([Y,X])                       #29, AC = screen
              1e82 1587  ld   [$87],y     8772  ld([0x87],Y)                    #30, bulletData
              1e83 69b6  xora [y,$b6]     8773  xora([Y,0xB6])                  #31, AC ^= bullet
              1e84 1583  ld   [$83],y     8774  ld([0x83],Y)                    #32, bulletY
              1e85 de00  st   [y,x++]     8775  st([Y,Xpp])                     #33, screen = AC
                                          8776
              1e86 0d00  ld   [y,x]       8777  ld([Y,X])                       #34, AC = screen
              1e87 1587  ld   [$87],y     8778  ld([0x87],Y)                    #35, bulletData
              1e88 69b7  xora [y,$b7]     8779  xora([Y,0xB7])                  #36, AC ^= bullet
              1e89 1583  ld   [$83],y     8780  ld([0x83],Y)                    #37, bulletY
              1e8a de00  st   [y,x++]     8781  st([Y,Xpp])                     #38, screen = AC
                                          8782
              1e8b 1182  ld   [$82],x     8783  ld([0x82],X)                    #39, bulletX
              1e8c 0183  ld   [$83]       8784  ld([0x83])                      #40,
              1e8d 8001  adda $01         8785  adda(1)                         #41,
              1e8e d683  st   [$83],y     8786  st([0x83],Y)                    #42, bulletY++
                                          8787
              1e8f 0d00  ld   [y,x]       8788  ld([Y,X])                       #43, AC = screen
              1e90 1587  ld   [$87],y     8789  ld([0x87],Y)                    #44, bulletData
              1e91 69b8  xora [y,$b8]     8790  xora([Y,0xB8])                  #45, AC ^= bullet
              1e92 1583  ld   [$83],y     8791  ld([0x83],Y)                    #46, bulletY
              1e93 de00  st   [y,x++]     8792  st([Y,Xpp])                     #47, screen = AC
                                          8793
              1e94 0d00  ld   [y,x]       8794  ld([Y,X])                       #48, AC = screen
              1e95 1587  ld   [$87],y     8795  ld([0x87],Y)                    #49, bulletData
              1e96 69b9  xora [y,$b9]     8796  xora([Y,0xB9])                  #50, AC ^= bullet
              1e97 1583  ld   [$83],y     8797  ld([0x83],Y)                    #51, bulletY
              1e98 de00  st   [y,x++]     8798  st([Y,Xpp])                     #52, screen = AC
                                          8799
              1e99 0d00  ld   [y,x]       8800  ld([Y,X])                       #53, AC = screen
              1e9a 1587  ld   [$87],y     8801  ld([0x87],Y)                    #54, bulletData
              1e9b 69ba  xora [y,$ba]     8802  xora([Y,0xBA])                  #55, AC ^= bullet
              1e9c 1583  ld   [$83],y     8803  ld([0x83],Y)                    #56, bulletY
              1e9d de00  st   [y,x++]     8804  st([Y,Xpp])                     #57, screen = AC
                                          8805
              1e9e 0d00  ld   [y,x]       8806  ld([Y,X])                       #58, AC = screen
              1e9f 1587  ld   [$87],y     8807  ld([0x87],Y)                    #59, bulletData
              1ea0 69bb  xora [y,$bb]     8808  xora([Y,0xBB])                  #60, AC ^= bullet
              1ea1 1583  ld   [$83],y     8809  ld([0x83],Y)                    #61, bulletY
              1ea2 de00  st   [y,x++]     8810  st([Y,Xpp])                     #62, screen = AC
                                          8811
              1ea3 1182  ld   [$82],x     8812  ld([0x82],X)                    #63, bulletX
              1ea4 0183  ld   [$83]       8813  ld([0x83])                      #64,
              1ea5 8001  adda $01         8814  adda(1)                         #65,
              1ea6 d683  st   [$83],y     8815  st([0x83],Y)                    #66, bulletY++
                                          8816
              1ea7 0d00  ld   [y,x]       8817  ld([Y,X])                       #67, AC = screen
              1ea8 1587  ld   [$87],y     8818  ld([0x87],Y)                    #68, bulletData
              1ea9 69bc  xora [y,$bc]     8819  xora([Y,0xBC])                  #69, AC ^= bullet
              1eaa 1583  ld   [$83],y     8820  ld([0x83],Y)                    #70, bulletY
              1eab de00  st   [y,x++]     8821  st([Y,Xpp])                     #71, screen = AC
                                          8822
              1eac 0d00  ld   [y,x]       8823  ld([Y,X])                       #72, AC = screen
              1ead 1587  ld   [$87],y     8824  ld([0x87],Y)                    #73, bulletData
              1eae 69bd  xora [y,$bd]     8825  xora([Y,0xBD])                  #74, AC ^= bullet
              1eaf 1583  ld   [$83],y     8826  ld([0x83],Y)                    #75, bulletY
              1eb0 de00  st   [y,x++]     8827  st([Y,Xpp])                     #76, screen = AC
                                          8828
              1eb1 0d00  ld   [y,x]       8829  ld([Y,X])                       #77, AC = screen
              1eb2 1587  ld   [$87],y     8830  ld([0x87],Y)                    #78, bulletData
              1eb3 69be  xora [y,$be]     8831  xora([Y,0xBE])                  #79, AC ^= bullet
              1eb4 1583  ld   [$83],y     8832  ld([0x83],Y)                    #80, bulletY
              1eb5 de00  st   [y,x++]     8833  st([Y,Xpp])                     #81, screen = AC
                                          8834
              1eb6 0d00  ld   [y,x]       8835  ld([Y,X])                       #82, AC = screen
              1eb7 1587  ld   [$87],y     8836  ld([0x87],Y)                    #83, bulletData
              1eb8 69bf  xora [y,$bf]     8837  xora([Y,0xBF])                  #84, AC ^= bullet
              1eb9 1583  ld   [$83],y     8838  ld([0x83],Y)                    #85, bulletY
              1eba de00  st   [y,x++]     8839  st([Y,Xpp])                     #86, screen = AC
                                          8840
              1ebb 1182  ld   [$82],x     8841  ld([0x82],X)                    #87, bulletX
              1ebc 0183  ld   [$83]       8842  ld([0x83])                      #88,
              1ebd 8001  adda $01         8843  adda(1)                         #89,
              1ebe d683  st   [$83],y     8844  st([0x83],Y)                    #90, bulletY++
                                          8845
              1ebf 0d00  ld   [y,x]       8846  ld([Y,X])                       #91, AC = screen
              1ec0 1587  ld   [$87],y     8847  ld([0x87],Y)                    #92, bulletData
              1ec1 69c0  xora [y,$c0]     8848  xora([Y,0xC0])                  #93, AC ^= bullet
              1ec2 1583  ld   [$83],y     8849  ld([0x83],Y)                    #94, bulletY
              1ec3 de00  st   [y,x++]     8850  st([Y,Xpp])                     #95, screen = AC
                                          8851
              1ec4 0d00  ld   [y,x]       8852  ld([Y,X])                       #96, AC = screen
              1ec5 1587  ld   [$87],y     8853  ld([0x87],Y)                    #97, bulletData
              1ec6 69c1  xora [y,$c1]     8854  xora([Y,0xC1])                  #98, AC ^= bullet
              1ec7 1583  ld   [$83],y     8855  ld([0x83],Y)                    #99, bulletY
              1ec8 de00  st   [y,x++]     8856  st([Y,Xpp])                     #100, screen = AC
                                          8857
              1ec9 0d00  ld   [y,x]       8858  ld([Y,X])                       #101, AC = screen
              1eca 1587  ld   [$87],y     8859  ld([0x87],Y)                    #102, bulletData
              1ecb 69c2  xora [y,$c2]     8860  xora([Y,0xC2])                  #103, AC ^= bullet
              1ecc 1583  ld   [$83],y     8861  ld([0x83],Y)                    #104, bulletY
              1ecd de00  st   [y,x++]     8862  st([Y,Xpp])                     #105, screen = AC
                                          8863
              1ece 0d00  ld   [y,x]       8864  ld([Y,X])                       #106, AC = screen
              1ecf 1587  ld   [$87],y     8865  ld([0x87],Y)                    #107, bulletData
              1ed0 69c3  xora [y,$c3]     8866  xora([Y,0xC3])                  #108, AC ^= bullet
              1ed1 1583  ld   [$83],y     8867  ld([0x83],Y)                    #109, bulletY
              1ed2 de00  st   [y,x++]     8868  st([Y,Xpp])                     #110, screen = AC
                                          8869
              1ed3 019c  ld   [$9c]       8870  ld([0x9C])                      #111, register13
              1ed4 8001  adda $01         8871  adda(1)                         #112,
              1ed5 d29c  st   [$9c],x     8872  st([0x9C],X)                    #113, register13++
              1ed6 159d  ld   [$9d],y     8873  ld([0x9D],Y)                    #114,
              1ed7 0d00  ld   [y,x]       8874  ld([Y,X])                       #115, peek(register13)
              1ed8 c282  st   [$82]       8875  st([0x82])                      #116, bulletX
                                          8876
              1ed9 019e  ld   [$9e]       8877  ld([0x9E])                      #117,
              1eda 8001  adda $01         8878  adda(1)                         #118,
              1edb d29e  st   [$9e],x     8879  st([0x9E],X)                    #119, register14++
              1edc 159f  ld   [$9f],y     8880  ld([0x9F],Y)                    #120,
              1edd 0d00  ld   [y,x]       8881  ld([Y,X])                       #121, peek(register14)
              1ede c283  st   [$83]       8882  st([0x83])                      #122, bulletY
                                          8883
              1edf 01a0  ld   [$a0]       8884  ld([0xA0])                      #123,
              1ee0 8001  adda $01         8885  adda(1)                         #124,
              1ee1 d2a0  st   [$a0],x     8886  st([0xA0],X)                    #125, register15++
              1ee2 15a1  ld   [$a1],y     8887  ld([0xA1],Y)                    #126,
              1ee3 0d00  ld   [y,x]       8888  ld([Y,X])                       #127, peek(register15)
              1ee4 c287  st   [$87]       8889  st([0x87])                      #128, bulletData
                                          8890
              1ee5 019a  ld   [$9a]       8891  ld([0x9A])                      #129,
              1ee6 a001  suba $01         8892  suba(1)                         #130,
                                          8893  beq('.sys_drawbullet_133')      #131,
              1ee7 f0ef  beq  .sys_drawbullet_133
              1ee8 c29a  st   [$9a]       8894  st([0x9A])                      #132, register12--
              1ee9 1403  ld   $03,y       8895  ld(hi('NEXTY'),Y)               #133,
              1eea 0116  ld   [$16]       8896  ld([vPC])                       #134,
              1eeb a002  suba $02         8897  suba(2)                         #135,
              1eec c216  st   [$16]       8898  st([vPC])                       #136, restart
              1eed e000  jmp  y,$00       8899  jmp(Y,'NEXTY')                  #137,
              1eee 00ba  ld   $ba         8900  ld(-140/2)                      #138,
                                          8901  label('.sys_drawbullet_133')
.sys_drawbullet_133:
              1eef 1403  ld   $03,y       8902  ld(hi('REENTER'),Y)             #133,
              1ef0 e0cb  jmp  y,$cb       8903  jmp(Y,'REENTER')                #134,
              1ef1 00bb  ld   $bb         8904  ld(-138/2)                      #135,
                                          8905
                                          8906
              1ef2 0200  nop              8907  fillers(until=0xff)
              1ef3 0200  nop
              1ef4 0200  nop
              * 13 times
              1eff 0200  nop              8908  align(0x100, size=0x100)
                                          8909
                                          8910  #-----------------------------------------------------------------------
                                          8911  #       More sys implementations, (0x1F00)
                                          8912  #-----------------------------------------------------------------------
                                          8913
                                          8914  # sys_CmpByteBounds, 0xB8,B9=src, 0xBA,BB=vPC_bounds, 0xBC,BD=bounds, 0xBE=index,
                                          8915  #                    0xBF=count, output:vAC.lo=index
                                          8916  label('sys_CmpByteBounds')
sys_CmpByteBounds:
              1f00 a001  suba $01         8917  suba(1)                         #18,
                                          8918  bge('.sys_cmpbytebounds_21')    #19,
              1f01 f406  bge  .sys_cmpbytebounds_21
              1f02 c2bf  st   [$bf]       8919  st([0xBF])                      #20, count--
              1f03 1403  ld   $03,y       8920  ld(hi('REENTER'),Y)             #21,
              1f04 e0cb  jmp  y,$cb       8921  jmp(Y,'REENTER')                #22,
              1f05 00f3  ld   $f3         8922  ld(-26/2)                       #23,
                                          8923  label('.sys_cmpbytebounds_21')
.sys_cmpbytebounds_21:
              1f06 01b8  ld   [$b8]       8924  ld([0xB8])                      #21,
              1f07 91be  adda [$be],x     8925  adda([0xBE],X)                  #22,
              1f08 15b9  ld   [$b9],y     8926  ld([0xB9],Y)                    #23,
              1f09 0d00  ld   [y,x]       8927  ld([Y,X])                       #24,
                                          8928  bmi('.sys_cmpbytebounds_27')    #25,
              1f0a e80e  blt  .sys_cmpbytebounds_27
              1f0b a1bc  suba [$bc]       8929  suba([0xBC])                    #26,
                                          8930  bra('.sys_cmpbytebounds_29')    #27,
              1f0c fc10  bra  .sys_cmpbytebounds_29
              1f0d 41bc  ora  [$bc]       8931  ora([0xBC])                     #28,
                                          8932  label('.sys_cmpbytebounds_27')
.sys_cmpbytebounds_27:
              1f0e 21bc  anda [$bc]       8933  anda([0xBC])                    #27,
              1f0f 0200  nop              8934  nop()                           #28,
                                          8935
                                          8936  label('.sys_cmpbytebounds_29')
.sys_cmpbytebounds_29:                    8937  bpl('.sys_cmpbytebounds_31')    #29,
              1f10 f422  bge  .sys_cmpbytebounds_31
              1f11 0d00  ld   [y,x]       8938  ld([Y,X])                       #30,
              1f12 0116  ld   [$16]       8939  ld([vPC])                       #31, < lbounds
              1f13 c21a  st   [$1a]       8940  st([vLR])                       #32, return to SYS call
              1f14 0117  ld   [$17]       8941  ld([vPC+1])                     #33,
              1f15 c21b  st   [$1b]       8942  st([vLR+1])                     #34,
              1f16 01ba  ld   [$ba]       8943  ld([0xBA])                      #35,
              1f17 a002  suba $02         8944  suba(2)                         #36,
              1f18 c216  st   [$16]       8945  st([vPC])                       #37, NEXT adds 2
              1f19 01bb  ld   [$bb]       8946  ld([0xBB])                      #38,
              1f1a c217  st   [$17]       8947  st([vPC+1])                     #39, bounds call address
              1f1b 01be  ld   [$be]       8948  ld([0xBE])                      #40,
              1f1c c218  st   [$18]       8949  st([vAC])                       #41, vAC.lo = index
              1f1d 8001  adda $01         8950  adda(1)                         #42,
              1f1e c2be  st   [$be]       8951  st([0xBE])                      #43, index++
              1f1f 1403  ld   $03,y       8952  ld(hi('NEXTY'),Y)               #44,
              1f20 e000  jmp  y,$00       8953  jmp(Y,'NEXTY')                  #45,
              1f21 00e8  ld   $e8         8954  ld(-48/2)                       #46,
                                          8955
                                          8956  label('.sys_cmpbytebounds_31')
.sys_cmpbytebounds_31:                    8957  bmi('.sys_cmpbytebounds_33')    #31,
              1f22 e826  blt  .sys_cmpbytebounds_33
              1f23 a1bd  suba [$bd]       8958  suba([0xBD])                    #32,
                                          8959  bra('.sys_cmpbytebounds_35')    #33,
              1f24 fc28  bra  .sys_cmpbytebounds_35
              1f25 41bd  ora  [$bd]       8960  ora([0xBD])                     #34,
                                          8961  label('.sys_cmpbytebounds_33')
.sys_cmpbytebounds_33:
              1f26 21bd  anda [$bd]       8962  anda([0xBD])                    #33,
              1f27 0200  nop              8963  nop()                           #34,
                                          8964  label('.sys_cmpbytebounds_35')
.sys_cmpbytebounds_35:                    8965  bmi('.sys_cmpbytebounds_37')    #35,
              1f28 e839  blt  .sys_cmpbytebounds_37
              1f29 0116  ld   [$16]       8966  ld([vPC])                       #36, >= ubounds
              1f2a c21a  st   [$1a]       8967  st([vLR])                       #37, return to SYS call
              1f2b 0117  ld   [$17]       8968  ld([vPC+1])                     #38,
              1f2c c21b  st   [$1b]       8969  st([vLR+1])                     #39,
              1f2d 01ba  ld   [$ba]       8970  ld([0xBA])                      #40,
              1f2e a002  suba $02         8971  suba(2)                         #41,
              1f2f c216  st   [$16]       8972  st([vPC])                       #42, NEXT adds 2
              1f30 01bb  ld   [$bb]       8973  ld([0xBB])                      #43,
              1f31 c217  st   [$17]       8974  st([vPC+1])                     #44, bounds call address
              1f32 01be  ld   [$be]       8975  ld([0xBE])                      #45,
              1f33 c218  st   [$18]       8976  st([vAC])                       #46, vAC.lo = index
              1f34 8001  adda $01         8977  adda(1)                         #47,
              1f35 c2be  st   [$be]       8978  st([0xBE])                      #48, index++
              1f36 1403  ld   $03,y       8979  ld(hi('REENTER'),Y)             #49,
              1f37 e0cb  jmp  y,$cb       8980  jmp(Y,'REENTER')                #50,
              1f38 00e5  ld   $e5         8981  ld(-54/2)                       #51,
                                          8982
                                          8983  label('.sys_cmpbytebounds_37')
.sys_cmpbytebounds_37:
              1f39 a002  suba $02         8984  suba(2)                         #37,
              1f3a c216  st   [$16]       8985  st([vPC])                       #38, restart
              1f3b 01be  ld   [$be]       8986  ld([0xBE])                      #39,
              1f3c 8001  adda $01         8987  adda(1)                         #40,
              1f3d c2be  st   [$be]       8988  st([0xBE])                      #41, index++
              1f3e 1403  ld   $03,y       8989  ld(hi('NEXTY'),Y)               #42,
              1f3f e000  jmp  y,$00       8990  jmp(Y,'NEXTY')                  #43,
              1f40 00e9  ld   $e9         8991  ld(-46/2)                       #44,
                                          8992
                                          8993
                                          8994  # SYS_Reset_88 imolementation
                                          8995  label('sys_Reset_88')
sys_Reset_88: 1f41 c221  st   [$21]       8996  st([romType])                   #18
              1f42 0000  ld   $00         8997  ld(0)                           #19
              1f43 c21c  st   [$1c]       8998  st([vSP])                       #20 vSP
              1f44 c204  st   [$04]       8999  st([vSPH])                      #21 vSPH
              1f45 1401  ld   $01,y       9000  ld(hi('videoTop_v5'),Y)         #22
              1f46 caf9  st   [y,$f9]     9001  st([Y,lo('videoTop_v5')])       #23 Show all 120 pixel lines
              1f47 caf6  st   [y,$f6]     9002  st([Y,vIRQ_v5])                 #24 Disable vIRQ dispatch
              1f48 caf7  st   [y,$f7]     9003  st([Y,vIRQ_v5+1])               #25
              1f49 c22c  st   [$2c]       9004  st([soundTimer])                #26 soundTimer
                                          9005  assert userCode&255 == 0
              1f4a c21a  st   [$1a]       9006  st([vLR])                       #27 vLR
              1f4b 0002  ld   $02         9007  ld(userCode>>8)                 #28
              1f4c c21b  st   [$1b]       9008  st([vLR+1])                     #29
              1f4d 00f6  ld   $f6         9009  ld('nopixels')                  #30 Video mode 3 (fast)
              1f4e c20a  st   [$0a]       9010  st([videoModeB])                #31
              1f4f c20b  st   [$0b]       9011  st([videoModeC])                #32
              1f50 c20c  st   [$0c]       9012  st([videoModeD])                #33
              1f51 00ad  ld   $ad         9013  ld('SYS_Exec_88')               #34 SYS_Exec_88
              1f52 c222  st   [$22]       9014  st([sysFn])                     #35 High byte (remains) 0
              1f53 008d  ld   $8d         9015  ld('Reset')                     #36 Reset.gt1 from EPROM
              1f54 c224  st   [$24]       9016  st([sysArgs+0])                 #37
              1f55 00dd  ld   $dd         9017  ld(hi('Reset'))                 #38
              1f56 c225  st   [$25]       9018  st([sysArgs+1])                 #39
              1f57 0116  ld   [$16]       9019  ld([vPC])                       #40 Force second SYS call
              1f58 a002  suba $02         9020  suba(2)                         #41
              1f59 c216  st   [$16]       9021  st([vPC])                       #42
              1f5a 1403  ld   $03,y       9022  ld(hi('REENTER'),Y)             #43
              1f5b e0cb  jmp  y,$cb       9023  jmp(Y,'REENTER')                #44
              1f5c 00e8  ld   $e8         9024  ld(-48/2)                       #45
                                          9025
                                          9026
                                          9027  #-----------------------------------------------------------------------
                                          9028  # sys_Divide_u168, x:u8 = x:u16 / y:u8, rem:u8 = x:u16 % y:u8
                                          9029  # sysArgs0,1=x, sysArgs2=y, sysArgs4=count, output : sysArgs0=res, sysArgs1=rem
                                          9030  label('sys_Divide_u168')
sys_Divide_u168:
              1f5d c229  st   [$29]       9031  st([sysArgs+5])                 #18, save x.hi
              1f5e 0128  ld   [$28]       9032  ld([sysArgs+4])                 #19,
              1f5f a001  suba $01         9033  suba(1)                         #20, count--
                                          9034  bge('.sys_divide_u168_23')      #21,
              1f60 f465  bge  .sys_divide_u168_23
              1f61 c228  st   [$28]       9035  st([sysArgs+4])                 #22,
              1f62 1403  ld   $03,y       9036  ld(hi('REENTER'),Y)             #23,
              1f63 e0cb  jmp  y,$cb       9037  jmp(Y,'REENTER')                #24,
              1f64 00f2  ld   $f2         9038  ld(-28/2)                       #25,
                                          9039
                                          9040  label('.sys_divide_u168_23')
.sys_divide_u168_23:
              1f65 0124  ld   [$24]       9041  ld([sysArgs+0])                 #23,
              1f66 3080  anda $80,x       9042  anda(128,X)                     #24,
              1f67 8124  adda [$24]       9043  adda([sysArgs+0])               #25,
              1f68 c224  st   [$24]       9044  st([sysArgs+0])                 #26,
              1f69 0500  ld   [x]         9045  ld([X])                         #27,
              1f6a 8125  adda [$25]       9046  adda([sysArgs+1])               #28,
              1f6b 8125  adda [$25]       9047  adda([sysArgs+1])               #29,
              1f6c c225  st   [$25]       9048  st([sysArgs+1])                 #30, x <<1
                                          9049  bmi('.sys_divide_u168_33')      #31, unsigned compare
              1f6d e872  blt  .sys_divide_u168_33
              1f6e a126  suba [$26]       9050  suba([sysArgs+2])               #32, x.hi - y
              1f6f c21d  st   [$1d]       9051  st([vTmp])                      #33,
                                          9052  bra('.sys_divide_u168_36')      #34,
              1f70 fc75  bra  .sys_divide_u168_36
              1f71 4126  ora  [$26]       9053  ora([sysArgs+2])                #35,
                                          9054  label('.sys_divide_u168_33')
.sys_divide_u168_33:
              1f72 c21d  st   [$1d]       9055  st([vTmp])                      #33,
              1f73 2126  anda [$26]       9056  anda([sysArgs+2])               #34,
              1f74 0200  nop              9057  nop()                           #35,
                                          9058
                                          9059  label('.sys_divide_u168_36')
.sys_divide_u168_36:                      9060  bmi('.sys_divide_u168_38')      #36,
              1f75 e88b  blt  .sys_divide_u168_38
              1f76 011d  ld   [$1d]       9061  ld([vTmp])                      #37, x.hi >= y
              1f77 c225  st   [$25]       9062  st([sysArgs+1])                 #38, x.hi = (x.hi - y) <<8
              1f78 0124  ld   [$24]       9063  ld([sysArgs+0])                 #39,
              1f79 8001  adda $01         9064  adda(1)                         #40, x.lo++
                                          9065  bne('.sys_divide_u168_43')      #41,
              1f7a ec85  bne  .sys_divide_u168_43
              1f7b c224  st   [$24]       9066  st([sysArgs+0])                 #42,
              1f7c 0125  ld   [$25]       9067  ld([sysArgs+1])                 #43,
              1f7d 8001  adda $01         9068  adda(1)                         #44, x.hi++
              1f7e c225  st   [$25]       9069  st([sysArgs+1])                 #45,
              1f7f 0116  ld   [$16]       9070  ld([vPC])                       #46,
              1f80 a002  suba $02         9071  suba(2)                         #47,
              1f81 c216  st   [$16]       9072  st([vPC])                       #48, restart
              1f82 1403  ld   $03,y       9073  ld(hi('REENTER'),Y)             #49,
              1f83 e0cb  jmp  y,$cb       9074  jmp(Y,'REENTER')                #50,
              1f84 00e5  ld   $e5         9075  ld(-54/2)                       #51,
                                          9076  label('.sys_divide_u168_43')
.sys_divide_u168_43:
              1f85 0116  ld   [$16]       9077  ld([vPC])                       #43,
              1f86 a002  suba $02         9078  suba(2)                         #44,
              1f87 c216  st   [$16]       9079  st([vPC])                       #45, restart
              1f88 1403  ld   $03,y       9080  ld(hi('NEXTY'),Y)               #46,
              1f89 e000  jmp  y,$00       9081  jmp(Y,'NEXTY')                  #47,
              1f8a 00e7  ld   $e7         9082  ld(-50/2)                       #48,
                                          9083
                                          9084  label('.sys_divide_u168_38')
.sys_divide_u168_38:
              1f8b 0129  ld   [$29]       9085  ld([sysArgs+5])                 #38,
                                          9086  bpl('.sys_divide_u168_41')      #39, msb(x.hi) = 0
              1f8c f4a2  bge  .sys_divide_u168_41
              1f8d 011d  ld   [$1d]       9087  ld([vTmp])                      #40, x.hi >= y
              1f8e c225  st   [$25]       9088  st([sysArgs+1])                 #41, x.hi = (x.hi - y) <<8
              1f8f 0124  ld   [$24]       9089  ld([sysArgs+0])                 #42,
              1f90 8001  adda $01         9090  adda(1)                         #43, x.lo++
                                          9091  bne('.sys_divide_u168_46')      #44,
              1f91 ec9c  bne  .sys_divide_u168_46
              1f92 c224  st   [$24]       9092  st([sysArgs+0])                 #45,
              1f93 0125  ld   [$25]       9093  ld([sysArgs+1])                 #46,
              1f94 8001  adda $01         9094  adda(1)                         #47, x.hi++
              1f95 c225  st   [$25]       9095  st([sysArgs+1])                 #48,
              1f96 0116  ld   [$16]       9096  ld([vPC])                       #49,
              1f97 a002  suba $02         9097  suba(2)                         #50,
              1f98 c216  st   [$16]       9098  st([vPC])                       #51, restart
              1f99 1403  ld   $03,y       9099  ld(hi('NEXTY'),Y)               #52,
              1f9a e000  jmp  y,$00       9100  jmp(Y,'NEXTY')                  #53,
              1f9b 00e4  ld   $e4         9101  ld(-56/2)                       #54,
                                          9102  label('.sys_divide_u168_46')
.sys_divide_u168_46:
              1f9c 0116  ld   [$16]       9103  ld([vPC])                       #46,
              1f9d a002  suba $02         9104  suba(2)                         #47,
              1f9e c216  st   [$16]       9105  st([vPC])                       #48, restart
              1f9f 1403  ld   $03,y       9106  ld(hi('REENTER'),Y)             #49,
              1fa0 e0cb  jmp  y,$cb       9107  jmp(Y,'REENTER')                #50,
              1fa1 00e5  ld   $e5         9108  ld(-54/2)                       #51,
                                          9109
                                          9110  label('.sys_divide_u168_41')
.sys_divide_u168_41:
              1fa2 0116  ld   [$16]       9111  ld([vPC])                       #41,
              1fa3 a002  suba $02         9112  suba(2)                         #42,
              1fa4 c216  st   [$16]       9113  st([vPC])                       #43, restart
              1fa5 1403  ld   $03,y       9114  ld(hi('NEXTY'),Y)               #44,
              1fa6 e000  jmp  y,$00       9115  jmp(Y,'NEXTY')                  #45,
              1fa7 00e8  ld   $e8         9116  ld(-48/2)                       #46,
                                          9117
                                          9118
              1fa8 0200  nop              9119  fillers(until=0xc0)
              1fa9 0200  nop
              1faa 0200  nop
              * 24 times
                                          9120
                                          9121  # sys_ConvertVTableX, sysArgs0=dst, sysArgs2=offsetX, sysArgs3=accum, sysArgs4=count
                                          9122  label('SYS_ConvertVTableX_66')
SYS_ConvertVTableX_66:
              1fc0 1401  ld   $01,y       9123  ld(1,Y)                         #15, VTable.hi
              1fc1 1126  ld   [$26],x     9124  ld([sysArgs+2],X)               #16, VTable.lo
              1fc2 0d00  ld   [y,x]       9125  ld([Y,X])                       #17, get VTableX
              1fc3 8127  adda [$27]       9126  adda([sysArgs+3])               #18,
              1fc4 1525  ld   [$25],y     9127  ld([sysArgs+1],Y)               #19, dst.hi
              1fc5 1124  ld   [$24],x     9128  ld([sysArgs+0],X)               #20, dst.lo
              1fc6 ce00  st   [y,x]       9129  st([Y,X])                       #21,
              1fc7 c227  st   [$27]       9130  st([sysArgs+3])                 #22, accum
                                          9131
              1fc8 1401  ld   $01,y       9132  ld(1,Y)                         #23
              1fc9 0124  ld   [$24]       9133  ld([sysArgs+0])                 #24,
              1fca 8001  adda $01         9134  adda(1)                         #25,
              1fcb c224  st   [$24]       9135  st([sysArgs+0])                 #26, dst++
              1fcc 0126  ld   [$26]       9136  ld([sysArgs+2])                 #27,
              1fcd 8002  adda $02         9137  adda(2)                         #28,
              1fce d226  st   [$26],x     9138  st([sysArgs+2],X)               #29, offsetX += 2
              1fcf 0d00  ld   [y,x]       9139  ld([Y,X])                       #30, get video table X
              1fd0 8127  adda [$27]       9140  adda([sysArgs+3])               #31,
              1fd1 1525  ld   [$25],y     9141  ld([sysArgs+1],Y)               #32, dst.hi
              1fd2 1124  ld   [$24],x     9142  ld([sysArgs+0],X)               #33, dst.lo
              1fd3 ce00  st   [y,x]       9143  st([Y,X])                       #34,
              1fd4 c227  st   [$27]       9144  st([sysArgs+3])                 #35, accum
                                          9145
              1fd5 1401  ld   $01,y       9146  ld(1,Y)                         #36
              1fd6 0124  ld   [$24]       9147  ld([sysArgs+0])                 #37,
              1fd7 8001  adda $01         9148  adda(1)                         #38,
              1fd8 c224  st   [$24]       9149  st([sysArgs+0])                 #39, dst++
              1fd9 0126  ld   [$26]       9150  ld([sysArgs+2])                 #40,
              1fda 8002  adda $02         9151  adda(2)                         #41,
              1fdb d226  st   [$26],x     9152  st([sysArgs+2],X)               #42, offsetX += 2
              1fdc 0d00  ld   [y,x]       9153  ld([Y,X])                       #43, get video table X
              1fdd 8127  adda [$27]       9154  adda([sysArgs+3])               #44,
              1fde 1525  ld   [$25],y     9155  ld([sysArgs+1],Y)               #45, dst.hi
              1fdf 1124  ld   [$24],x     9156  ld([sysArgs+0],X)               #46, dst.lo
              1fe0 ce00  st   [y,x]       9157  st([Y,X])                       #47,
              1fe1 c227  st   [$27]       9158  st([sysArgs+3])                 #48, accum
                                          9159
              1fe2 0128  ld   [$28]       9160  ld([sysArgs+4])                 #49,
              1fe3 a001  suba $01         9161  suba(1)                         #50,
              1fe4 c228  st   [$28]       9162  st([sysArgs+4])                 #51, count--
                                          9163  beq('.sys_convertvtablex_54')   #52,
              1fe5 f0f2  beq  .sys_convertvtablex_54
              1fe6 0124  ld   [$24]       9164  ld([sysArgs+0])                 #53,
              1fe7 8001  adda $01         9165  adda(1)                         #54,
              1fe8 c224  st   [$24]       9166  st([sysArgs+0])                 #55, dst++
              1fe9 0126  ld   [$26]       9167  ld([sysArgs+2])                 #56,
              1fea 8002  adda $02         9168  adda(2)                         #57,
              1feb c226  st   [$26]       9169  st([sysArgs+2])                 #58, offsetX += 2
              1fec 0116  ld   [$16]       9170  ld([vPC])                       #59,
              1fed a002  suba $02         9171  suba(2)                         #60,
              1fee c216  st   [$16]       9172  st([vPC])                       #61, restart
              1fef 1403  ld   $03,y       9173  ld(hi('NEXTY'),Y)               #62,
              1ff0 e000  jmp  y,$00       9174  jmp(Y,'NEXTY')                  #63,
              1ff1 00df  ld   $df         9175  ld(-66/2)                       #64,
                                          9176  label('.sys_convertvtablex_54')
.sys_convertvtablex_54:
              1ff2 1403  ld   $03,y       9177  ld(hi('NEXTY'),Y)               #54,
              1ff3 e000  jmp  y,$00       9178  jmp(Y,'NEXTY')                  #55,
              1ff4 00e3  ld   $e3         9179  ld(-58/2)                       #56,
                                          9180
                                          9181
              1ff5 0200  nop              9182  fillers(until=0xff)
              1ff6 0200  nop
              1ff7 0200  nop
              * 10 times
              1fff 0200  nop              9183  align(0x100, size=0x100)
                                          9184
                                          9185  #-----------------------------------------------------------------------
                                          9186  #       More sys implementations, (0x2000)
                                          9187  #-----------------------------------------------------------------------
                                          9188
                                          9189  # SYS_DrawSpriteH_vX_140
                                          9190  label('SYS_DrawSpriteH_vX_140')
SYS_DrawSpriteH_vX_140:
              2000 0186  ld   [$86]       9191  ld([0x86])                      #15, spriteEnable
                                          9192  bmi('.sys_drawspriteh_18')      #16,
              2001 e89b  blt  .sys_drawspriteh_18
              2002 0183  ld   [$83]       9193  ld([0x83])                      #17, spriteY
              2003 8183  adda [$83]       9194  adda([0x83])                    #18, spriteY
              2004 1200  ld   ac,x        9195  ld(AC,X)                        #19,
              2005 1401  ld   $01,y       9196  ld(1,Y)                         #20, 0x0100
              2006 0d00  ld   [y,x]       9197  ld([Y,X])                       #21, VTableY
              2007 c285  st   [$85]       9198  st([0x85])                      #22,
              2008 1525  ld   [$25],y     9199  ld([sysArgs+1],Y)               #23, VTableAbsX.hi
              2009 0124  ld   [$24]       9200  ld([sysArgs+0])                 #24, VTableAbsX.lo
              200a 8183  adda [$83]       9201  adda([0x83])                    #25, spriteY
              200b 1200  ld   ac,x        9202  ld(AC,X)                        #26,
              200c 0182  ld   [$82]       9203  ld([0x82])                      #27, spriteX
              200d 8d00  adda [y,x]       9204  adda([Y,X])                     #28, VTableX offset, (absolute)
              200e d284  st   [$84],x     9205  st([0x84],X)                    #29,
              200f 1585  ld   [$85],y     9206  ld([0x85],Y)                    #30,
                                          9207
              2010 0d00  ld   [y,x]       9208  ld([Y,X])                       #31, get back0
              2011 1587  ld   [$87],y     9209  ld([0x87],Y)                    #32, spriteData
              2012 caa2  st   [y,$a2]     9210  st([Y,0xA2])                    #33, save back0
              2013 09a3  ld   [y,$a3]     9211  ld([Y,0xA3])                    #34, load pixel0
              2014 1585  ld   [$85],y     9212  ld([0x85],Y)                    #35, spriteY
              2015 ec18  bne  $2018       9213  bne(pc()+3)                     #36, colourkey
              2016 fc19  bra  $2019       9214  bra(pc()+3)                     #37,
              2017 0d00  ld   [y,x]       9215  ld([Y,X])                       #38,
              2018 0200  nop              9216  nop()                           #38, (!)
              2019 de00  st   [y,x++]     9217  st([Y,Xpp])                     #39, draw pixel0
                                          9218
              201a 0d00  ld   [y,x]       9219  ld([Y,X])                       #40, get back1
              201b 1587  ld   [$87],y     9220  ld([0x87],Y)                    #41, spriteData
              201c caa4  st   [y,$a4]     9221  st([Y,0xA4])                    #42, save back1
              201d 09a5  ld   [y,$a5]     9222  ld([Y,0xA5])                    #43, load pixel1
              201e 1585  ld   [$85],y     9223  ld([0x85],Y)                    #44, spriteY
              201f ec22  bne  $2022       9224  bne(pc()+3)                     #45, colourkey
              2020 fc23  bra  $2023       9225  bra(pc()+3)                     #46,
              2021 0d00  ld   [y,x]       9226  ld([Y,X])                       #47,
              2022 0200  nop              9227  nop()                           #47, (!)
              2023 de00  st   [y,x++]     9228  st([Y,Xpp])                     #48, draw pixel1
                                          9229
              2024 0d00  ld   [y,x]       9230  ld([Y,X])                       #49, get back2
              2025 1587  ld   [$87],y     9231  ld([0x87],Y)                    #50, spriteData
              2026 caa6  st   [y,$a6]     9232  st([Y,0xA6])                    #51, save back2
              2027 09a7  ld   [y,$a7]     9233  ld([Y,0xA7])                    #52, load pixel2
              2028 1585  ld   [$85],y     9234  ld([0x85],Y)                    #53, spriteY
              2029 ec2c  bne  $202c       9235  bne(pc()+3)                     #54, colourkey
              202a fc2d  bra  $202d       9236  bra(pc()+3)                     #55,
              202b 0d00  ld   [y,x]       9237  ld([Y,X])                       #56,
              202c 0200  nop              9238  nop()                           #56, (!)
              202d de00  st   [y,x++]     9239  st([Y,Xpp])                     #57, draw pixel2
                                          9240
              202e 0d00  ld   [y,x]       9241  ld([Y,X])                       #58, get back3
              202f 1587  ld   [$87],y     9242  ld([0x87],Y)                    #59, spriteData
              2030 caa8  st   [y,$a8]     9243  st([Y,0xA8])                    #60, save back3
              2031 09a9  ld   [y,$a9]     9244  ld([Y,0xA9])                    #61, load pixel3
              2032 1585  ld   [$85],y     9245  ld([0x85],Y)                    #62, spriteY
              2033 ec36  bne  $2036       9246  bne(pc()+3)                     #63, colourkey
              2034 fc37  bra  $2037       9247  bra(pc()+3)                     #64,
              2035 0d00  ld   [y,x]       9248  ld([Y,X])                       #65,
              2036 0200  nop              9249  nop()                           #65, (!)
              2037 de00  st   [y,x++]     9250  st([Y,Xpp])                     #66, draw pixel3
                                          9251
              2038 0d00  ld   [y,x]       9252  ld([Y,X])                       #67, get back4
              2039 1587  ld   [$87],y     9253  ld([0x87],Y)                    #68, spriteData
              203a caaa  st   [y,$aa]     9254  st([Y,0xAA])                    #69, save back4
              203b 09ab  ld   [y,$ab]     9255  ld([Y,0xAB])                    #70, load pixel4
              203c 1585  ld   [$85],y     9256  ld([0x85],Y)                    #71, spriteY
              203d ec40  bne  $2040       9257  bne(pc()+3)                     #72, colourkey
              203e fc41  bra  $2041       9258  bra(pc()+3)                     #73,
              203f 0d00  ld   [y,x]       9259  ld([Y,X])                       #74,
              2040 0200  nop              9260  nop()                           #74, (!)
              2041 de00  st   [y,x++]     9261  st([Y,Xpp])                     #75, draw pixel4
                                          9262
              2042 0d00  ld   [y,x]       9263  ld([Y,X])                       #76, get back5
              2043 1587  ld   [$87],y     9264  ld([0x87],Y)                    #77, spriteData
              2044 caac  st   [y,$ac]     9265  st([Y,0xAC])                    #78, save back5
              2045 09ad  ld   [y,$ad]     9266  ld([Y,0xAD])                    #79, load pixel5
              2046 1585  ld   [$85],y     9267  ld([0x85],Y)                    #80, spriteY
              2047 ec4a  bne  $204a       9268  bne(pc()+3)                     #81, colourkey
              2048 fc4b  bra  $204b       9269  bra(pc()+3)                     #82,
              2049 0d00  ld   [y,x]       9270  ld([Y,X])                       #83,
              204a 0200  nop              9271  nop()                           #83, (!)
              204b de00  st   [y,x++]     9272  st([Y,Xpp])                     #84, draw pixel5
                                          9273
              204c 0d00  ld   [y,x]       9274  ld([Y,X])                       #85, get back6
              204d 1587  ld   [$87],y     9275  ld([0x87],Y)                    #86, spriteData
              204e caae  st   [y,$ae]     9276  st([Y,0xAE])                    #87, save back6
              204f 09af  ld   [y,$af]     9277  ld([Y,0xAF])                    #88, load pixel6
              2050 1585  ld   [$85],y     9278  ld([0x85],Y)                    #89, spriteY
              2051 ec54  bne  $2054       9279  bne(pc()+3)                     #90, colourkey
              2052 fc55  bra  $2055       9280  bra(pc()+3)                     #91,
              2053 0d00  ld   [y,x]       9281  ld([Y,X])                       #92,
              2054 0200  nop              9282  nop()                           #92, (!)
              2055 de00  st   [y,x++]     9283  st([Y,Xpp])                     #93, draw pixel6
                                          9284
              2056 0d00  ld   [y,x]       9285  ld([Y,X])                       #94, get back7
              2057 1587  ld   [$87],y     9286  ld([0x87],Y)                    #95, spriteData
              2058 cab0  st   [y,$b0]     9287  st([Y,0xB0])                    #96, save back7
              2059 09b1  ld   [y,$b1]     9288  ld([Y,0xB1])                    #97, load pixel7
              205a 1585  ld   [$85],y     9289  ld([0x85],Y)                    #98, spriteY
              205b ec5e  bne  $205e       9290  bne(pc()+3)                     #99, colourkey
              205c fc5f  bra  $205f       9291  bra(pc()+3)                     #100,
              205d 0d00  ld   [y,x]       9292  ld([Y,X])                       #101,
              205e 0200  nop              9293  nop()                           #101, (!)
              205f de00  st   [y,x++]     9294  st([Y,Xpp])                     #102, draw pixel7
                                          9295
              2060 0d00  ld   [y,x]       9296  ld([Y,X])                       #103, get back8
              2061 1587  ld   [$87],y     9297  ld([0x87],Y)                    #104, spriteData
              2062 cab2  st   [y,$b2]     9298  st([Y,0xB2])                    #105, save back8
              2063 09b3  ld   [y,$b3]     9299  ld([Y,0xB3])                    #106, load pixel8
              2064 1585  ld   [$85],y     9300  ld([0x85],Y)                    #107, spriteY
              2065 ec68  bne  $2068       9301  bne(pc()+3)                     #108, colourkey
              2066 fc69  bra  $2069       9302  bra(pc()+3)                     #109,
              2067 0d00  ld   [y,x]       9303  ld([Y,X])                       #110,
              2068 0200  nop              9304  nop()                           #110, (!)
              2069 de00  st   [y,x++]     9305  st([Y,Xpp])                     #111, draw pixel8
                                          9306
              206a 1587  ld   [$87],y     9307  ld([0x87],Y)                    #112, spriteData
              206b 0184  ld   [$84]       9308  ld([0x84])                      #113, spriteX
              206c caa0  st   [y,$a0]     9309  st([Y,0xA0])                    #114, spriteOldX
              206d 0185  ld   [$85]       9310  ld([0x85])                      #115, spriteY
              206e caa1  st   [y,$a1]     9311  st([Y,0xA1])                    #116, spriteOldY
              206f 0186  ld   [$86]       9312  ld([0x86])                      #117,
              2070 a001  suba $01         9313  suba(1)                         #118,
              2071 c286  st   [$86]       9314  st([0x86])                      #119, scanLines--
                                          9315  beq('.sys_drawspriteh_122')     #120,
              2072 f07f  beq  .sys_drawspriteh_122
              2073 0183  ld   [$83]       9316  ld([0x83])                      #121, spriteY
              2074 8001  adda $01         9317  adda(1)                         #122,
              2075 c283  st   [$83]       9318  st([0x83])                      #123, spriteY++
              2076 0187  ld   [$87]       9319  ld([0x87])                      #124,
              2077 8001  adda $01         9320  adda(1)                         #125,
              2078 c287  st   [$87]       9321  st([0x87])                      #126, spriteData++
              2079 0116  ld   [$16]       9322  ld([vPC])                       #127,
              207a a002  suba $02         9323  suba(2)                         #128,
              207b c216  st   [$16]       9324  st([vPC])                       #129, restart
              207c 1403  ld   $03,y       9325  ld(hi('NEXTY'),Y)               #130,
              207d e000  jmp  y,$00       9326  jmp(Y,'NEXTY')                  #131,
              207e 00bd  ld   $bd         9327  ld(-134/2)                      #132,
                                          9328
                                          9329  label('.sys_drawspriteh_122')
.sys_drawspriteh_122:
              207f 01a0  ld   [$a0]       9330  ld([0xA0])                      #122,
              2080 8004  adda $04         9331  adda(4)                         #123,
              2081 d2a0  st   [$a0],x     9332  st([0xA0],X)                    #124, register15 += 4
              2082 15a1  ld   [$a1],y     9333  ld([0xA1],Y)                    #125,
              2083 0d00  ld   [y,x]       9334  ld([Y,X])                       #126, peek(register15 + 0)
              2084 c282  st   [$82]       9335  st([0x82])                      #127, spriteX
              2085 de00  st   [y,x++]     9336  st([Y,Xpp])                     #128, X++
              2086 0d00  ld   [y,x]       9337  ld([Y,X])                       #129, peek(register15 + 1)
              2087 c283  st   [$83]       9338  st([0x83])                      #130, spriteY
              2088 de00  st   [y,x++]     9339  st([Y,Xpp])                     #131, X++
              2089 0d00  ld   [y,x]       9340  ld([Y,X])                       #132, peek(register15 + 2)
              208a c286  st   [$86]       9341  st([0x86])                      #133, spriteHeight
              208b de00  st   [y,x++]     9342  st([Y,Xpp])                     #134, X++
              208c 0d00  ld   [y,x]       9343  ld([Y,X])                       #135, peek(register15 + 3)
              208d c287  st   [$87]       9344  st([0x87])                      #136, spriteData
              208e 0188  ld   [$88]       9345  ld([0x88])                      #137,
              208f a001  suba $01         9346  suba(1)                         #138,
              2090 c288  st   [$88]       9347  st([0x88])                      #139, register3--, spriteCount
                                          9348  beq('.sys_drawspriteh_142')     #140,
              2091 f098  beq  .sys_drawspriteh_142
              2092 0116  ld   [$16]       9349  ld([vPC])                       #141,
              2093 a002  suba $02         9350  suba(2)                         #142,
              2094 c216  st   [$16]       9351  st([vPC])                       #143, restart
              2095 1403  ld   $03,y       9352  ld(hi('NEXTY'),Y)               #144,
              2096 e000  jmp  y,$00       9353  jmp(Y,'NEXTY')                  #145,
              2097 00b6  ld   $b6         9354  ld(-148/2)                      #146,
                                          9355  label('.sys_drawspriteh_142')
.sys_drawspriteh_142:
              2098 1403  ld   $03,y       9356  ld(hi('NEXTY'),Y)               #142,
              2099 e000  jmp  y,$00       9357  jmp(Y,'NEXTY')                  #143,
              209a 00b7  ld   $b7         9358  ld(-146/2)                      #144,
                                          9359
                                          9360  label('.sys_drawspriteh_18')
.sys_drawspriteh_18:
              209b 01a0  ld   [$a0]       9361  ld([0xA0])                      #18,
              209c 8004  adda $04         9362  adda(4)                         #19,
              209d d2a0  st   [$a0],x     9363  st([0xA0],X)                    #20, register15 += 4
              209e 15a1  ld   [$a1],y     9364  ld([0xA1],Y)                    #21,
              209f 0d00  ld   [y,x]       9365  ld([Y,X])                       #22, peek(register15 + 0)
              20a0 c282  st   [$82]       9366  st([0x82])                      #23, spriteX
              20a1 de00  st   [y,x++]     9367  st([Y,Xpp])                     #24, X++
              20a2 0d00  ld   [y,x]       9368  ld([Y,X])                       #25, peek(register15 + 1)
              20a3 c283  st   [$83]       9369  st([0x83])                      #26, spriteY
              20a4 de00  st   [y,x++]     9370  st([Y,Xpp])                     #27, X++
              20a5 0d00  ld   [y,x]       9371  ld([Y,X])                       #28, peek(register15 + 2)
              20a6 c286  st   [$86]       9372  st([0x86])                      #29, spriteHeight
              20a7 de00  st   [y,x++]     9373  st([Y,Xpp])                     #30, X++
              20a8 0d00  ld   [y,x]       9374  ld([Y,X])                       #31, peek(register15 + 3)
              20a9 c287  st   [$87]       9375  st([0x87])                      #32, spriteData
              20aa 0188  ld   [$88]       9376  ld([0x88])                      #33,
              20ab a001  suba $01         9377  suba(1)                         #34,
              20ac c288  st   [$88]       9378  st([0x88])                      #35, register3--, spriteCount
                                          9379  beq('.sys_drawspriteh_38')      #36,
              20ad f0b4  beq  .sys_drawspriteh_38
              20ae 0116  ld   [$16]       9380  ld([vPC])                       #37,
              20af a002  suba $02         9381  suba(2)                         #38,
              20b0 c216  st   [$16]       9382  st([vPC])                       #39, restart
              20b1 1403  ld   $03,y       9383  ld(hi('NEXTY'),Y)               #40,
              20b2 e000  jmp  y,$00       9384  jmp(Y,'NEXTY')                  #41,
              20b3 00ea  ld   $ea         9385  ld(-44/2)                       #42,
                                          9386  label('.sys_drawspriteh_38')
.sys_drawspriteh_38:
              20b4 1403  ld   $03,y       9387  ld(hi('NEXTY'),Y)               #38,
              20b5 e000  jmp  y,$00       9388  jmp(Y,'NEXTY')                  #39,
              20b6 00eb  ld   $eb         9389  ld(-42/2)                       #40,
                                          9390
                                          9391
              20b7 0200  nop              9392  fillers(until=0xc0)
              20b8 0200  nop
              20b9 0200  nop
              * 9 times
                                          9393
                                          9394  # SYS_ScrollVTableY_vX_38, sysArgs0=scrollOffset, sysArgs1=scanCount, sysArgs2,3=videoTable
                                          9395  label('SYS_ScrollVTableY_vX_38')
SYS_ScrollVTableY_vX_38:
              20c0 0125  ld   [$25]       9396  ld([sysArgs+1])                 #15,
              20c1 a001  suba $01         9397  suba(1)                         #16,
              20c2 c225  st   [$25]       9398  st([sysArgs+1])                 #17, scanCount--
                                          9399  bge('.sys_scrollvty_20')        #18,
              20c3 f4c8  bge  .sys_scrollvty_20
              20c4 1527  ld   [$27],y     9400  ld([sysArgs+3],Y)               #19, VTable.hi
              20c5 1403  ld   $03,y       9401  ld(hi('NEXTY'),Y)               #20,
              20c6 e000  jmp  y,$00       9402  jmp(Y,'NEXTY')                  #21,
              20c7 00f4  ld   $f4         9403  ld(-24/2)                       #22,
                                          9404  label('.sys_scrollvty_20')
.sys_scrollvty_20:
              20c8 1126  ld   [$26],x     9405  ld([sysArgs+2],X)               #20, VTable.low
              20c9 0d00  ld   [y,x]       9406  ld([Y,X])                       #21, scanline = peek [VTable]
              20ca 8124  adda [$24]       9407  adda([sysArgs+0])               #22, scanline += scrollOffset
              20cb a07f  suba $7f         9408  suba(0x7f)                      #23, scanline -= 0x7f
                                          9409  ble('.sys_scrollvty_26')        #24,
              20cc f8d9  ble  .sys_scrollvty_26
              20cd 807f  adda $7f         9410  adda(0x7F)                      #25, original scanline
              20ce 8088  adda $88         9411  adda(0x88)                      #26, overflow into the range 0x08 to 0x7f
              20cf ce00  st   [y,x]       9412  st([Y,X])                       #27,
              20d0 0126  ld   [$26]       9413  ld([sysArgs+2])                 #28,
              20d1 8002  adda $02         9414  adda(2)                         #29,
              20d2 c226  st   [$26]       9415  st([sysArgs+2])                 #30,
              20d3 0116  ld   [$16]       9416  ld([vPC])                       #31,
              20d4 a002  suba $02         9417  suba(2)                         #32,
              20d5 c216  st   [$16]       9418  st([vPC])                       #33, restart
              20d6 1403  ld   $03,y       9419  ld(hi('NEXTY'),Y)               #34,
              20d7 e000  jmp  y,$00       9420  jmp(Y,'NEXTY')                  #35,
              20d8 00ed  ld   $ed         9421  ld(-38/2)                       #36,
                                          9422
                                          9423  label('.sys_scrollvty_26')
.sys_scrollvty_26:
              20d9 ce00  st   [y,x]       9424  st([Y,X])                       #26,
              20da 0126  ld   [$26]       9425  ld([sysArgs+2])                 #27,
              20db 8002  adda $02         9426  adda(2)                         #28,
              20dc c226  st   [$26]       9427  st([sysArgs+2])                 #29,
              20dd 0116  ld   [$16]       9428  ld([vPC])                       #30,
              20de a002  suba $02         9429  suba(2)                         #31,
              20df c216  st   [$16]       9430  st([vPC])                       #32, restart
              20e0 1403  ld   $03,y       9431  ld(hi('REENTER'),Y)             #33,
              20e1 e0cb  jmp  y,$cb       9432  jmp(Y,'REENTER')                #34,
              20e2 00ed  ld   $ed         9433  ld(-38/2)                       #35,
                                          9434
                                          9435
              20e3 0200  nop              9436  fillers(until=0xff)
              20e4 0200  nop
              20e5 0200  nop
              * 28 times
              20ff 0200  nop              9437  align(0x100, size=0x100)
                                          9438
                                          9439  #-----------------------------------------------------------------------
                                          9440  #       More sys implementations, (0x2100)
                                          9441  #-----------------------------------------------------------------------
                                          9442  # SYS_RestoreSprite_vX_126
                                          9443  label('SYS_RestoreSprite_vX_126')
SYS_RestoreSprite_vX_126:
              2100 0186  ld   [$86]       9444  ld([0x86])                      #15, spriteEnable
                                          9445  bmi('.sys_restoresprite_18')    #16,
              2101 e877  blt  .sys_restoresprite_18
              2102 1587  ld   [$87],y     9446  ld([0x87],Y)                    #17, spriteData
              2103 09a0  ld   [y,$a0]     9447  ld([Y,0xA0])                    #18, spriteOldX
              2104 1200  ld   ac,x        9448  ld(AC,X)                        #19,
              2105 09a1  ld   [y,$a1]     9449  ld([Y,0xA1])                    #20, spriteOldY
              2106 c21d  st   [$1d]       9450  st([vTmp])                      #21,
                                          9451
              2107 09a2  ld   [y,$a2]     9452  ld([Y,0xA2])                    #22, load back0
              2108 151d  ld   [$1d],y     9453  ld([vTmp],Y)                    #23, spriteOldY
              2109 de00  st   [y,x++]     9454  st([Y,Xpp])                     #24, restore back0
                                          9455
              210a 1587  ld   [$87],y     9456  ld([0x87],Y)                    #25, spriteData
              210b 09a4  ld   [y,$a4]     9457  ld([Y,0xA4])                    #26, load back1
              210c 151d  ld   [$1d],y     9458  ld([vTmp],Y)                    #27, spriteOldY
              210d de00  st   [y,x++]     9459  st([Y,Xpp])                     #28, restore back1
                                          9460
              210e 1587  ld   [$87],y     9461  ld([0x87],Y)                    #29, spriteData
              210f 09a6  ld   [y,$a6]     9462  ld([Y,0xA6])                    #30, load back2
              2110 151d  ld   [$1d],y     9463  ld([vTmp],Y)                    #31, spriteOldY
              2111 de00  st   [y,x++]     9464  st([Y,Xpp])                     #32, restore back2
                                          9465
              2112 1587  ld   [$87],y     9466  ld([0x87],Y)                    #33, spriteData
              2113 09a8  ld   [y,$a8]     9467  ld([Y,0xA8])                    #34, load back3
              2114 151d  ld   [$1d],y     9468  ld([vTmp],Y)                    #35, spriteOldY
              2115 de00  st   [y,x++]     9469  st([Y,Xpp])                     #36, restore back3
                                          9470
              2116 1587  ld   [$87],y     9471  ld([0x87],Y)                    #37, spriteData
              2117 09aa  ld   [y,$aa]     9472  ld([Y,0xAA])                    #38, load back4
              2118 151d  ld   [$1d],y     9473  ld([vTmp],Y)                    #39, spriteOldY
              2119 de00  st   [y,x++]     9474  st([Y,Xpp])                     #40, restore back4
                                          9475
              211a 1587  ld   [$87],y     9476  ld([0x87],Y)                    #41, spriteData
              211b 09ac  ld   [y,$ac]     9477  ld([Y,0xAC])                    #42, load back5
              211c 151d  ld   [$1d],y     9478  ld([vTmp],Y)                    #43, spriteOldY
              211d de00  st   [y,x++]     9479  st([Y,Xpp])                     #44, restore back5
                                          9480
              211e 1587  ld   [$87],y     9481  ld([0x87],Y)                    #45, spriteData
              211f 09ae  ld   [y,$ae]     9482  ld([Y,0xAE])                    #46, load back6
              2120 151d  ld   [$1d],y     9483  ld([vTmp],Y)                    #47, spriteOldY
              2121 de00  st   [y,x++]     9484  st([Y,Xpp])                     #48, restore back6
                                          9485
              2122 1587  ld   [$87],y     9486  ld([0x87],Y)                    #49, spriteData
              2123 09b0  ld   [y,$b0]     9487  ld([Y,0xB0])                    #50, load back7
              2124 151d  ld   [$1d],y     9488  ld([vTmp],Y)                    #51, spriteOldY
              2125 de00  st   [y,x++]     9489  st([Y,Xpp])                     #52, restore back7
                                          9490
              2126 1587  ld   [$87],y     9491  ld([0x87],Y)                    #53, spriteData
              2127 09b2  ld   [y,$b2]     9492  ld([Y,0xB2])                    #54, load back8
              2128 151d  ld   [$1d],y     9493  ld([vTmp],Y)                    #55, spriteOldY
              2129 de00  st   [y,x++]     9494  st([Y,Xpp])                     #56, restore back8
                                          9495
              212a 0187  ld   [$87]       9496  ld([0x87])                      #57,
              212b 8001  adda $01         9497  adda(1)                         #58,
              212c d687  st   [$87],y     9498  st([0x87],Y)                    #59, spriteData++
                                          9499
              212d 09a0  ld   [y,$a0]     9500  ld([Y,0xA0])                    #60, spriteOldX
              212e 1200  ld   ac,x        9501  ld(AC,X)                        #61,
              212f 09a1  ld   [y,$a1]     9502  ld([Y,0xA1])                    #62, spriteOldY
              2130 c21d  st   [$1d]       9503  st([vTmp])                      #63,
                                          9504
              2131 09a2  ld   [y,$a2]     9505  ld([Y,0xA2])                    #64, load back0
              2132 151d  ld   [$1d],y     9506  ld([vTmp],Y)                    #65, spriteOldY
              2133 de00  st   [y,x++]     9507  st([Y,Xpp])                     #66, restore back0
                                          9508
              2134 1587  ld   [$87],y     9509  ld([0x87],Y)                    #67, spriteData
              2135 09a4  ld   [y,$a4]     9510  ld([Y,0xA4])                    #68, load back1
              2136 151d  ld   [$1d],y     9511  ld([vTmp],Y)                    #69, spriteOldY
              2137 de00  st   [y,x++]     9512  st([Y,Xpp])                     #70, restore back1
                                          9513
              2138 1587  ld   [$87],y     9514  ld([0x87],Y)                    #71, spriteData
              2139 09a6  ld   [y,$a6]     9515  ld([Y,0xA6])                    #72, load back2
              213a 151d  ld   [$1d],y     9516  ld([vTmp],Y)                    #73, spriteOldY
              213b de00  st   [y,x++]     9517  st([Y,Xpp])                     #74, restore back2
                                          9518
              213c 1587  ld   [$87],y     9519  ld([0x87],Y)                    #75, spriteData
              213d 09a8  ld   [y,$a8]     9520  ld([Y,0xA8])                    #76, load back3
              213e 151d  ld   [$1d],y     9521  ld([vTmp],Y)                    #77, spriteOldY
              213f de00  st   [y,x++]     9522  st([Y,Xpp])                     #78, restore back3
                                          9523
              2140 1587  ld   [$87],y     9524  ld([0x87],Y)                    #79, spriteData
              2141 09aa  ld   [y,$aa]     9525  ld([Y,0xAA])                    #80, load back4
              2142 151d  ld   [$1d],y     9526  ld([vTmp],Y)                    #81, spriteOldY
              2143 de00  st   [y,x++]     9527  st([Y,Xpp])                     #82, restore back4
                                          9528
              2144 1587  ld   [$87],y     9529  ld([0x87],Y)                    #83, spriteData
              2145 09ac  ld   [y,$ac]     9530  ld([Y,0xAC])                    #84, load back5
              2146 151d  ld   [$1d],y     9531  ld([vTmp],Y)                    #85, spriteOldY
              2147 de00  st   [y,x++]     9532  st([Y,Xpp])                     #86, restore back5
                                          9533
              2148 1587  ld   [$87],y     9534  ld([0x87],Y)                    #87, spriteData
              2149 09ae  ld   [y,$ae]     9535  ld([Y,0xAE])                    #88, load back6
              214a 151d  ld   [$1d],y     9536  ld([vTmp],Y)                    #89, spriteOldY
              214b de00  st   [y,x++]     9537  st([Y,Xpp])                     #90, restore back6
                                          9538
              214c 1587  ld   [$87],y     9539  ld([0x87],Y)                    #91, spriteData
              214d 09b0  ld   [y,$b0]     9540  ld([Y,0xB0])                    #92, load back7
              214e 151d  ld   [$1d],y     9541  ld([vTmp],Y)                    #93, spriteOldY
              214f de00  st   [y,x++]     9542  st([Y,Xpp])                     #94, restore back7
                                          9543
              2150 1587  ld   [$87],y     9544  ld([0x87],Y)                    #95, spriteData
              2151 09b2  ld   [y,$b2]     9545  ld([Y,0xB2])                    #96, load back8
              2152 151d  ld   [$1d],y     9546  ld([vTmp],Y)                    #97, spriteOldY
              2153 de00  st   [y,x++]     9547  st([Y,Xpp])                     #98, restore back8
                                          9548
              2154 0186  ld   [$86]       9549  ld([0x86])                      #99,
              2155 a002  suba $02         9550  suba(2)                         #100,
              2156 c286  st   [$86]       9551  st([0x86])                      #101, scanLines -= 2
                                          9552  beq('.sys_restoresprite_104')   #102,
              2157 f061  beq  .sys_restoresprite_104
              2158 0187  ld   [$87]       9553  ld([0x87])                      #103,
              2159 8001  adda $01         9554  adda(1)                         #104,
              215a c287  st   [$87]       9555  st([0x87])                      #105, spriteData++
              215b 0116  ld   [$16]       9556  ld([vPC])                       #106,
              215c a002  suba $02         9557  suba(2)                         #107,
              215d c216  st   [$16]       9558  st([vPC])                       #108, restart
              215e 1403  ld   $03,y       9559  ld(hi('REENTER'),Y)             #109,
              215f e0cb  jmp  y,$cb       9560  jmp(Y,'REENTER')                #110,
              2160 00c7  ld   $c7         9561  ld(-114/2)                      #111,
                                          9562  label('.sys_restoresprite_104')
.sys_restoresprite_104:
              2161 01a0  ld   [$a0]       9563  ld([0xA0])                      #104,
              2162 a004  suba $04         9564  suba(4)                         #105,
              2163 d2a0  st   [$a0],x     9565  st([0xA0],X)                    #106, register15 -= 4
              2164 15a1  ld   [$a1],y     9566  ld([0xA1],Y)                    #107,
              2165 0d00  ld   [y,x]       9567  ld([Y,X])                       #108, peek(register15 + 2)
              2166 c286  st   [$86]       9568  st([0x86])                      #109, spriteHeight
              2167 de00  st   [y,x++]     9569  st([Y,Xpp])                     #110, X++
              2168 0d00  ld   [y,x]       9570  ld([Y,X])                       #111, peek(register15 + 3)
              2169 c287  st   [$87]       9571  st([0x87])                      #112, spriteData
              216a 0188  ld   [$88]       9572  ld([0x88])                      #113,
              216b a001  suba $01         9573  suba(1)                         #114,
              216c c288  st   [$88]       9574  st([0x88])                      #115, numSprites--
                                          9575  beq('.sys_restoresprite_118')   #116,
              216d f074  beq  .sys_restoresprite_118
              216e 0116  ld   [$16]       9576  ld([vPC])                       #117,
              216f a002  suba $02         9577  suba(2)                         #118,
              2170 c216  st   [$16]       9578  st([vPC])                       #119, restart
              2171 1403  ld   $03,y       9579  ld(hi('NEXTY'),Y)               #120,
              2172 e000  jmp  y,$00       9580  jmp(Y,'NEXTY')                  #121,
              2173 00c2  ld   $c2         9581  ld(-124/2)                      #122,
                                          9582  label('.sys_restoresprite_118')
.sys_restoresprite_118:
              2174 1403  ld   $03,y       9583  ld(hi('NEXTY'),Y)               #118,
              2175 e000  jmp  y,$00       9584  jmp(Y,'NEXTY')                  #119,
              2176 00c3  ld   $c3         9585  ld(-122/2)                      #120,
                                          9586
                                          9587  label('.sys_restoresprite_18')
.sys_restoresprite_18:
              2177 01a0  ld   [$a0]       9588  ld([0xA0])                      #18,
              2178 a004  suba $04         9589  suba(4)                         #19,
              2179 d2a0  st   [$a0],x     9590  st([0xA0],X)                    #20, register15 -= 4
              217a 15a1  ld   [$a1],y     9591  ld([0xA1],Y)                    #21,
              217b 0d00  ld   [y,x]       9592  ld([Y,X])                       #22, peek(register15 + 2)
              217c c286  st   [$86]       9593  st([0x86])                      #23, spriteHeight
              217d de00  st   [y,x++]     9594  st([Y,Xpp])                     #24, X++
              217e 0d00  ld   [y,x]       9595  ld([Y,X])                       #25, peek(register15 + 3)
              217f c287  st   [$87]       9596  st([0x87])                      #26, spriteData
              2180 0188  ld   [$88]       9597  ld([0x88])                      #27,
              2181 a001  suba $01         9598  suba(1)                         #28,
              2182 c288  st   [$88]       9599  st([0x88])                      #29, numSprites--
                                          9600  beq('.sys_restoresprite_32')    #30,
              2183 f08a  beq  .sys_restoresprite_32
              2184 0116  ld   [$16]       9601  ld([vPC])                       #31,
              2185 a002  suba $02         9602  suba(2)                         #32,
              2186 c216  st   [$16]       9603  st([vPC])                       #33, restart
              2187 1403  ld   $03,y       9604  ld(hi('NEXTY'),Y)               #34,
              2188 e000  jmp  y,$00       9605  jmp(Y,'NEXTY')                  #35,
              2189 00ed  ld   $ed         9606  ld(-38/2)                       #36,
                                          9607  label('.sys_restoresprite_32')
.sys_restoresprite_32:
              218a 1403  ld   $03,y       9608  ld(hi('NEXTY'),Y)               #32,
              218b e000  jmp  y,$00       9609  jmp(Y,'NEXTY')                  #33,
              218c 00ee  ld   $ee         9610  ld(-36/2)                       #34,
                                          9611
                                          9612
              218d 0200  nop              9613  fillers(until=0xa0)
              218e 0200  nop
              218f 0200  nop
              * 19 times
                                          9614
                                          9615  # SYS_ScrollRectVTableY_vX_44, sysArgs0=scrollOffset, sysArgs1=scanCount, sysArgs2,3=videoTable,
                                          9616  #                              sysArgs4,5=scrollStart,scrollEnd
                                          9617  label('SYS_ScrollRectVTableY_vX_44')
SYS_ScrollRectVTableY_vX_44:
              21a0 0125  ld   [$25]       9618  ld([sysArgs+1])                 #15,
              21a1 a001  suba $01         9619  suba(1)                         #16,
              21a2 c225  st   [$25]       9620  st([sysArgs+1])                 #17, scanCount--
                                          9621  bge('.sys_scrollrectvty_20')    #18,
              21a3 f4a8  bge  .sys_scrollrectvty_20
              21a4 1527  ld   [$27],y     9622  ld([sysArgs+3],Y)               #19, VTable.hi
              21a5 1403  ld   $03,y       9623  ld(hi('NEXTY'),Y)               #20,
              21a6 e000  jmp  y,$00       9624  jmp(Y,'NEXTY')                  #21,
              21a7 00f4  ld   $f4         9625  ld(-24/2)                       #22,
                                          9626  label('.sys_scrollrectvty_20')
.sys_scrollrectvty_20:
              21a8 1126  ld   [$26],x     9627  ld([sysArgs+2],X)               #20, VTable.low
              21a9 0d00  ld   [y,x]       9628  ld([Y,X])                       #21, scanline = peek [VTable]
              21aa 8124  adda [$24]       9629  adda([sysArgs+0])               #22, scanline += scrollOffset
              21ab c21d  st   [$1d]       9630  st([vTmp])                      #23,
              21ac a128  suba [$28]       9631  suba([sysArgs+4])               #24,
                                          9632  bge('.sys_scrollrectvty_27')    #25,
              21ad f4b9  bge  .sys_scrollrectvty_27
              21ae 8129  adda [$29]       9633  adda([sysArgs+5])               #26,
              21af ce00  st   [y,x]       9634  st([Y,X])                       #27,
              21b0 0126  ld   [$26]       9635  ld([sysArgs+2])                 #28,
              21b1 8002  adda $02         9636  adda(2)                         #29,
              21b2 c226  st   [$26]       9637  st([sysArgs+2])                 #30,
              21b3 0116  ld   [$16]       9638  ld([vPC])                       #31,
              21b4 a002  suba $02         9639  suba(2)                         #32,
              21b5 c216  st   [$16]       9640  st([vPC])                       #33, restart
              21b6 1403  ld   $03,y       9641  ld(hi('NEXTY'),Y)               #34,
              21b7 e000  jmp  y,$00       9642  jmp(Y,'NEXTY')                  #35,
              21b8 00ed  ld   $ed         9643  ld(-38/2)                       #36,
                                          9644
                                          9645  label('.sys_scrollrectvty_27')
.sys_scrollrectvty_27:
              21b9 011d  ld   [$1d]       9646  ld([vTmp])                      #27,
              21ba a129  suba [$29]       9647  suba([sysArgs+5])               #28,
                                          9648  blt('.sys_scrollrectvty_31')    #29,
              21bb e8c7  blt  .sys_scrollrectvty_31
              21bc 8128  adda [$28]       9649  adda([sysArgs+4])               #30,
              21bd ce00  st   [y,x]       9650  st([Y,X])                       #31,
              21be 0126  ld   [$26]       9651  ld([sysArgs+2])                 #32,
              21bf 8002  adda $02         9652  adda(2)                         #33,
              21c0 c226  st   [$26]       9653  st([sysArgs+2])                 #34,
              21c1 0116  ld   [$16]       9654  ld([vPC])                       #35,
              21c2 a002  suba $02         9655  suba(2)                         #36,
              21c3 c216  st   [$16]       9656  st([vPC])                       #37, restart
              21c4 1403  ld   $03,y       9657  ld(hi('NEXTY'),Y)               #38,
              21c5 e000  jmp  y,$00       9658  jmp(Y,'NEXTY')                  #39,
              21c6 00eb  ld   $eb         9659  ld(-42/2)                       #40,
                                          9660
                                          9661  label('.sys_scrollrectvty_31')
.sys_scrollrectvty_31:
              21c7 011d  ld   [$1d]       9662  ld([vTmp])                      #31,
              21c8 ce00  st   [y,x]       9663  st([Y,X])                       #32,
              21c9 0126  ld   [$26]       9664  ld([sysArgs+2])                 #33,
              21ca 8002  adda $02         9665  adda(2)                         #34,
              21cb c226  st   [$26]       9666  st([sysArgs+2])                 #35,
              21cc 0116  ld   [$16]       9667  ld([vPC])                       #36,
              21cd a002  suba $02         9668  suba(2)                         #37,
              21ce c216  st   [$16]       9669  st([vPC])                       #38, restart
              21cf 1403  ld   $03,y       9670  ld(hi('REENTER'),Y)             #39,
              21d0 e0cb  jmp  y,$cb       9671  jmp(Y,'REENTER')                #40,
              21d1 00ea  ld   $ea         9672  ld(-44/2)                       #41,
                                          9673
                                          9674
              21d2 0200  nop              9675  fillers(until=0xff)
              21d3 0200  nop
              21d4 0200  nop
              * 45 times
                                          9676
                                          9677  #-----------------------------------------------------------------------
                                          9678  #       PREFX3 instruction page, (0x2200), PREFIX ARG1 OPCODE ARG0
                                          9679  #-----------------------------------------------------------------------
                                          9680  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2099#p2099
                                          9681  #
                                          9682  label('PREFX3_PAGE')
PREFX3_PAGE:  21ff fc03  bra  $2203       9683  bra('.next2')                   #0 Enter at '.next2' (so no startup overhead)
                                          9684  # --- Page boundary ---
                                          9685  align(0x100,size=0x100)
              2200 1517  ld   [$17],y     9686  ld([vPC+1],Y)                   #1
                                          9687
                                          9688  # Fetch next instruction and execute it, but only if there are sufficient
                                          9689  # ticks left for the slowest instruction.
              2201 8115  adda [$15]       9690  adda([vTicks])                  #0 Track elapsed ticks (actually counting down: AC<0)
              2202 e80b  blt  $220b       9691  blt('EXIT')                     #1 Escape near time out
              2203 c215  st   [$15]       9692  st([vTicks])                    #2
              2204 1116  ld   [$16],x     9693  ld([vPC],X)                     #3 PREFIX+ARG1 is 2 bytes, vPC has been incremented by 2
              2205 0200  nop              9694  nop()                           #4
              2206 c002  st   $02,[$02]   9695  st(vCpuSelect,[vCpuSelect])     #5 Reset to default vCPU page
              2207 0d00  ld   [y,x]       9696  ld([Y,X])                       #6 Fetch opcode (actually a branch target)
              2208 de00  st   [y,x++]     9697  st([Y,Xpp])                     #7 Just X++
              2209 fe00  bra  ac          9698  bra(AC)                         #8 Dispatch
              220a 0d00  ld   [y,x]       9699  ld([Y,X])                       #9 Prefetch operand
                                          9700
                                          9701  # Resync with video driver and transfer control
              220b 800f  adda $0f         9702  adda(maxTicks)                  #3
              220c e40c  bgt  $220c       9703  bgt(pc()&255)                   #4 Resync
              220d a001  suba $01         9704  suba(1)                         #5
              220e 1401  ld   $01,y       9705  ld(hi('vBlankStart'),Y)         #6
              220f e11e  jmp  y,[$1e]     9706  jmp(Y,[vReturn])                #7 To video driver
              2210 0000  ld   $00         9707  ld(0)                           #8 AC should be 0 already. Still..
                                          9708  assert vCPU_overhead ==          9
                                          9709
                                          9710  # pc = 0x2211, Opcode = 0x11
                                          9711  # Instruction STB2: Store vAC.lo into 16bit immediate address, 22 + 20 cycles
                                          9712  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2135#p2135
                                          9713  label('STB2')
STB2:         2211 1425  ld   $25,y       9714  ld(hi('stb2#13'),Y)             #10
              2212 e000  jmp  y,$00       9715  jmp(Y,'stb2#13')                #11
              2213 1200  ld   ac,x        9716  ld(AC,X)                        #12
                                          9717
                                          9718  # pc = 0x2214, Opcode = 0x14
                                          9719  # Instruction STW2: Store vAC into 16bit immediate address, 22 + 22 cycles
                                          9720  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2135#p2135
                                          9721  label('STW2')
STW2:         2214 1425  ld   $25,y       9722  ld(hi('stw2#13'),Y)             #10
              2215 e006  jmp  y,$06       9723  jmp(Y,'stw2#13')                #11
              2216 1200  ld   ac,x        9724  ld(AC,X)                        #12
                                          9725
                                          9726  # pc = 0x2217, Opcode = 0x17
                                          9727  # Instruction XCHGB: Exchange two zero byte variables, 22 + 28 cycles
                                          9728  label('XCHGB')
XCHGB:        2217 1425  ld   $25,y       9729  ld(hi('xchgb#13'),Y)            #10
              2218 e00e  jmp  y,$0e       9730  jmp(Y,'xchgb#13')               #11
                                          9731  # dummy                         #12
                                          9732  #
                                          9733  # pc = 0x2219, Opcode = 0x19
                                          9734  # Instruction MOVW: Move 16bits from src zero page var to dst zero page var, 22 + 30 cycles
                                          9735  label('MOVW')
MOVW:         2219 1425  ld   $25,y       9736  ld(hi('movw#13'),Y)             #10
              221a e03f  jmp  y,$3f       9737  jmp(Y,'movw#13')                #11
                                          9738  # dummy                         #12
                                          9739  #
                                          9740  # pc = 0x221b, Opcode = 0x1b
                                          9741  # Instruction ADDWI: vAC += immediate 16bit value, 22 + 28 cycles
                                          9742  label('ADDWI')
ADDWI:        221b 1425  ld   $25,y       9743  ld(hi('addwi#13'),Y)            #10 #12
              221c e04f  jmp  y,$4f       9744  jmp(Y,'addwi#13')               #11
                                          9745  # dummy                         #12
                                          9746  #
                                          9747  # pc = 0x221d, Opcode = 0x1d
                                          9748  # Instruction SUBWI: vAC -= immediate 16bit value, 22 + 28 cycles
                                          9749  label('SUBWI')
SUBWI:        221d 1425  ld   $25,y       9750  ld(hi('subwi#13'),Y)            #10 #12
              221e e06a  jmp  y,$6a       9751  jmp(Y,'subwi#13')               #11
                                          9752  # dummy                         #12
                                          9753  #
                                          9754  # pc = 0x221f, Opcode = 0x1f
                                          9755  # Instruction ANDWI: vAC &= immediate 16bit value, 22 + 22 cycles
                                          9756  label('ANDWI')
ANDWI:        221f 1425  ld   $25,y       9757  ld(hi('andwi#13'),Y)            #10 #12
              2220 e082  jmp  y,$82       9758  jmp(Y,'andwi#13')               #11
                                          9759  # dummy                         #12
                                          9760  #
                                          9761  # pc = 0x2221, Opcode = 0x21
                                          9762  # Instruction ORWI: vAC |= immediate 16bit value, 22 + 22 cycles
                                          9763  label('ORWI')
ORWI:         2221 1425  ld   $25,y       9764  ld(hi('orwi#13'),Y)             #10 #12
              2222 e08a  jmp  y,$8a       9765  jmp(Y,'orwi#13')                #11
                                          9766  # dummy                         #12
                                          9767  #
                                          9768  # pc = 0x2223, Opcode = 0x23
                                          9769  # Instruction XORWI: vAC ^= immediate 16bit value, 22 + 22 cycles
                                          9770  label('XORWI')
XORWI:        2223 1425  ld   $25,y       9771  ld(hi('xorwi#13'),Y)            #10 #12
              2224 e092  jmp  y,$92       9772  jmp(Y,'xorwi#13')               #11
                                          9773  # dummy                         #12
                                          9774  #
                                          9775  # pc = 0x2225, Opcode = 0x25
                                          9776  # Instruction LDPX: Load Pixel, <address var>, <colour var>, 22 + 30 cycles
                                          9777  label('LDPX')
LDPX:         2225 1425  ld   $25,y       9778  ld(hi('ldpx#13'),Y)             #10 #12
              2226 e09a  jmp  y,$9a       9779  jmp(Y,'ldpx#13')                #11
              2227 c21d  st   [$1d]       9780  st([vTmp])                      #12
                                          9781
                                          9782  # pc = 0x2228, Opcode = 0x28
                                          9783  # Instruction STPX: Store Pixel, <address var>, <colour var>, 22 + 30 cycles
                                          9784  label('STPX')
STPX:         2228 1400  ld   $00,y       9785  ld(hi('stpx#13'),Y)             #10
              2229 e061  jmp  y,$61       9786  jmp(Y,'stpx#13')                #11
              222a 1200  ld   ac,x        9787  ld(AC,X)                        #12
                                          9788
                                          9789  # pc = 0x222b, Opcode = 0x2b
                                          9790  # Instruction CONDI: chooses immediate operand based on condition, (vAC == 0), 22 + 26 cycles
                                          9791  label('CONDI')
CONDI:        222b 1425  ld   $25,y       9792  ld(hi('condi#13'),Y)            #10
              222c e0aa  jmp  y,$aa       9793  jmp(Y,'condi#13')               #11
                                          9794  # dummy                         #12
                                          9795  #
                                          9796  # pc = 0x222d, Opcode = 0x2d
                                          9797  # Instruction CONDB: chooses zero page byte var based on condition, (vAC == 0), 22 + 26 cycles
                                          9798  label('CONDB')
CONDB:        222d 1425  ld   $25,y       9799  ld(hi('condb#13'),Y)            #10 #12
              222e e0b7  jmp  y,$b7       9800  jmp(Y,'condb#13')               #11
              222f 1200  ld   ac,x        9801  ld(AC,X)                        #12
                                          9802
                                          9803  # pc = 0x2230, Opcode = 0x30
                                          9804  # Instruction CONDIB: chooses between imm and zero page byte var based on condition, (vAC == 0), 22 + 26 cycles
                                          9805  label('CONDIB')
CONDIB:       2230 1425  ld   $25,y       9806  ld(hi('condib#13'),Y)           #10
              2231 e0c6  jmp  y,$c6       9807  jmp(Y,'condib#13')              #11
              2232 c21d  st   [$1d]       9808  st([vTmp])                      #12
                                          9809
                                          9810  # pc = 0x2233, Opcode = 0x33
                                          9811  # Instruction CONDBI: chooses between zero page byte var and imm based on condition, (vAC == 0), 22 + 26 cycles
                                          9812  label('CONDBI')
CONDBI:       2233 1425  ld   $25,y       9813  ld(hi('condbi#13'),Y)           #10
              2234 e0d3  jmp  y,$d3       9814  jmp(Y,'condbi#13')              #11
                                          9815  # dummy                         #12
                                          9816  #
                                          9817  # pc = 0x2235, Opcode = 0x35
                                          9818  # Instruction XCHGW: Exchange two zero word variables, 22 + 46 cycles, destroys vAC
                                          9819  label('XCHGW')
XCHGW:        2235 1425  ld   $25,y       9820  ld(hi('xchgw#13'),Y)            #10 #12
              2236 e01c  jmp  y,$1c       9821  jmp(Y,'xchgw#13')               #11
              2237 c22a  st   [$2a]       9822  st([sysArgs+6])                 #12 var1
                                          9823
                                          9824  # pc = 0x2238, Opcode = 0x38
                                          9825  # Instruction OSCPX:
                                          9826  label('OSCPX')
OSCPX:        2238 1428  ld   $28,y       9827  ld(hi('oscpx#13'),Y)            #10
              2239 e073  jmp  y,$73       9828  jmp(Y,'oscpx#13')               #11
                                          9829  # dummy                         #12
                                          9830  #
                                          9831  # pc = 0x223a, Opcode = 0x3a
                                          9832  # Instruction SWAPB: Swap two bytes in memory, 22 + 46 cycles
                                          9833  label('SWAPB')
SWAPB:        223a 1429  ld   $29,y       9834  ld(hi('swapb#13'),Y)            #10 #12
              223b e093  jmp  y,$93       9835  jmp(Y,'swapb#13')               #11
              223c 1200  ld   ac,x        9836  ld(AC,X)                        #12 var1
                                          9837  #
                                          9838  # pc = 0x223d, Opcode = 0x3d
                                          9839  # Instruction SWAPW: Swap two words in memory, 22 + 58 cycles
                                          9840  label('SWAPW')
SWAPW:        223d 1429  ld   $29,y       9841  ld(hi('swapw#13'),Y)            #10
              223e e0b8  jmp  y,$b8       9842  jmp(Y,'swapw#13')               #11
              223f 1200  ld   ac,x        9843  ld(AC,X)                        #12 var1
                                          9844
                                          9845  # pc = 0x2240, Opcode = 0x40
                                          9846  # Instruction NEEKA: Peek <n> bytes from [vAC] into [var], 22 + 34*n + 24 cycles
                                          9847  label('NEEKA')
NEEKA:        2240 142a  ld   $2a,y       9848  ld(hi('neeka#13'),Y)            #10
              2241 e06e  jmp  y,$6e       9849  jmp(Y,'neeka#13')               #11
              2242 c22a  st   [$2a]       9850  st([sysArgs+6])                 #12 var
                                          9851
                                          9852  # pc = 0x2243, Opcode = 0x43
                                          9853  # Instruction NOKEA: Poke <n> bytes from [var] into [vAC], 22 + 34*n + 24 cycles
                                          9854  label('NOKEA')
NOKEA:        2243 142a  ld   $2a,y       9855  ld(hi('nokea#13'),Y)            #10
              2244 e08a  jmp  y,$8a       9856  jmp(Y,'nokea#13')               #11
              2245 c22a  st   [$2a]       9857  st([sysArgs+6])                 #12 var
                                          9858
                                          9859  # pc = 0x2246, Opcode = 0x46
                                          9860  # Instruction ADDVL: Add two 32bit zero page vars, dst += src, 22 + 78 cycles
                                          9861  label('ADDVL')
ADDVL:        2246 142b  ld   $2b,y       9862  ld(hi('addvl#13'),Y)            #10
              2247 e02f  jmp  y,$2f       9863  jmp(Y,'addvl#13')               #11
              2248 d22a  st   [$2a],x     9864  st([sysArgs+6],X)               #12 src var
                                          9865
                                          9866  # pc = 0x2249, Opcode = 0x49
                                          9867  # Instruction SUBVL: Subtract two 32bit zero page vars, dst -= src, 22 + 74 cycles
                                          9868  label('SUBVL')
SUBVL:        2249 142b  ld   $2b,y       9869  ld(hi('subvl#13'),Y)            #10
              224a e079  jmp  y,$79       9870  jmp(Y,'subvl#13')               #11
              224b d22a  st   [$2a],x     9871  st([sysArgs+6],X)               #12 src var
                                          9872
                                          9873  # pc = 0x224c, Opcode = 0x4c
                                          9874  # Instruction ANDVL: And two 32bit zero page vars, dst &= src, 22 + 46 cycles
                                          9875  label('ANDVL')
ANDVL:        224c 142b  ld   $2b,y       9876  ld(hi('andvl#13'),Y)            #10
              224d e0c5  jmp  y,$c5       9877  jmp(Y,'andvl#13')               #11
              224e 1200  ld   ac,x        9878  ld(AC,X)                        #12 src var
                                          9879
                                          9880  # pc = 0x224f, Opcode = 0x4f
                                          9881  # Instruction ORVL: Or two 32bit zero page vars, dst |= src, 22 + 46 cycles
                                          9882  label('ORVL')
ORVL:         224f 142c  ld   $2c,y       9883  ld(hi('orvl#13'),Y)             #10
              2250 e000  jmp  y,$00       9884  jmp(Y,'orvl#13')                #11
              2251 1200  ld   ac,x        9885  ld(AC,X)                        #12 src var
                                          9886
                                          9887  # pc = 0x2252, Opcode = 0x52
                                          9888  # Instruction XORVL: Xor two 32bit zero page vars, dst ^= src, 22 + 76 cycles
                                          9889  label('XORVL')
XORVL:        2252 142c  ld   $2c,y       9890  ld(hi('xorvl#13'),Y)            #10
              2253 e024  jmp  y,$24       9891  jmp(Y,'xorvl#13')               #11
              2254 1200  ld   ac,x        9892  ld(AC,X)                        #12 src var
                                          9893
                                          9894  # pc = 0x2255, Opcode = 0x55
                                          9895  # Instruction JEQL: 22 + 40 cycles
                                          9896  label('JEQL')
JEQL:         2255 142d  ld   $2d,y       9897  ld(hi('jeql#13'),Y)             #10
              2256 e000  jmp  y,$00       9898  jmp(Y,'jeql#13')                #11
              2257 c22a  st   [$2a]       9899  st([sysArgs+6])                 #12 jump.hi
                                          9900
                                          9901  # pc = 0x2258, Opcode = 0x58
                                          9902  # Instruction JNEL: 22 + 40 cycles
                                          9903  label('JNEL')
JNEL:         2258 142d  ld   $2d,y       9904  ld(hi('jnel#13'),Y)             #10
              2259 e022  jmp  y,$22       9905  jmp(Y,'jnel#13')                #11
              225a c22a  st   [$2a]       9906  st([sysArgs+6])                 #12 jump.hi
                                          9907
                                          9908  # pc = 0x225B, Opcode = 0x5B
                                          9909  # Instruction JLTL: 22 + 26 cycles
                                          9910  label('JLTL')
JLTL:         225b 142d  ld   $2d,y       9911  ld(hi('jltl#13'),Y)             #10
              225c e044  jmp  y,$44       9912  jmp(Y,'jltl#13')                #11
              225d c22a  st   [$2a]       9913  st([sysArgs+6])                 #12 jump.hi
                                          9914
                                          9915  # pc = 0x225E, Opcode = 0x5E
                                          9916  # Instruction JGTL: 22 + 42 cycles
                                          9917  label('JGTL')
JGTL:         225e 142d  ld   $2d,y       9918  ld(hi('jgtl#13'),Y)             #10
              225f e053  jmp  y,$53       9919  jmp(Y,'jgtl#13')                #11
              2260 c22a  st   [$2a]       9920  st([sysArgs+6])                 #12 jump.hi
                                          9921
                                          9922  # pc = 0x2261, Opcode = 0x61
                                          9923  # Instruction JLEL: 22 + 42 cycles
                                          9924  label('JLEL')
JLEL:         2261 142d  ld   $2d,y       9925  ld(hi('jlel#13'),Y)             #10
              2262 e07a  jmp  y,$7a       9926  jmp(Y,'jlel#13')                #11
              2263 c22a  st   [$2a]       9927  st([sysArgs+6])                 #12 jump.hi
                                          9928
                                          9929  # pc = 0x2264, Opcode = 0x64
                                          9930  # Instruction JGEL: 22 + 26 cycles
                                          9931  label('JGEL')
JGEL:         2264 142d  ld   $2d,y       9932  ld(hi('jgel#13'),Y)             #10
              2265 e0a5  jmp  y,$a5       9933  jmp(Y,'jgel#13')                #11
              2266 c22a  st   [$2a]       9934  st([sysArgs+6])                 #12 jump.hi
                                          9935
                                          9936  # pc = 0x2267, Opcode = 0x67
                                          9937  # Instruction ANDBI: And immediate byte with byte var, result in byte var, 22 + 20 cycles
                                          9938  label('ANDBI')
ANDBI:        2267 142e  ld   $2e,y       9939  ld(hi('andbi#13'),Y)            #10 #12
              2268 e000  jmp  y,$00       9940  jmp(Y,'andbi#13')               #11
              2269 1200  ld   ac,x        9941  ld(AC,X)                        #12 address of var
                                          9942
                                          9943  # pc = 0x226A, Opcode = 0x6A
                                          9944  # Instruction ORBI: OR immediate byte with byte var, result in byte var, 22 + 20 cycles
                                          9945  label('ORBI')
ORBI:         226a 142e  ld   $2e,y       9946  ld(hi('orbi#13'),Y)             #10 #12
              226b e006  jmp  y,$06       9947  jmp(Y,'orbi#13')                #11
              226c 1200  ld   ac,x        9948  ld(AC,X)                        #12 address of var
                                          9949
                                          9950  # pc = 0x226D, Opcode = 0x6D
                                          9951  # Instruction XORBI: var.lo ^= imm, 22 + 20 cycles
                                          9952  label('XORBI')
XORBI:        226d 142e  ld   $2e,y       9953  ld(hi('xorbi#13'),Y)            #10 #12
              226e e00c  jmp  y,$0c       9954  jmp(Y,'xorbi#13')               #11
              226f 1200  ld   ac,x        9955  ld(AC,X)                        #12 address of var
                                          9956
                                          9957
                                          9958  # SYS calls and instruction implementations rely on these
              2270 0200  nop              9959  fillers(until=0xca)
              2271 0200  nop
              2272 0200  nop
              * 90 times
              22ca 00f2  ld   $f2         9960  ld(-28/2)                       #25
              22cb fc01  bra  $2201       9961  bra('NEXT')                     #26 Return from SYS calls
              22cc 1517  ld   [$17],y     9962  ld([vPC+1],Y)                   #27
                                          9963
                                          9964
              22cd 0200  nop              9965  fillers(until=0xff)
              22ce 0200  nop
              22cf 0200  nop
              * 50 times
                                          9966
                                          9967  #-----------------------------------------------------------------------
                                          9968  #       PREFX2 instruction page, (0x2300), PREFIX ARG0 OPCODE
                                          9969  #-----------------------------------------------------------------------
                                          9970  #
                                          9971  label('PREFX2_PAGE')
PREFX2_PAGE:  22ff fc03  bra  $2303       9972  bra('.next2')                   #0 Enter at '.next2' (so no startup overhead)
                                          9973  # --- Page boundary ---
                                          9974  align(0x100,size=0x100)
              2300 1517  ld   [$17],y     9975  ld([vPC+1],Y)                   #1
                                          9976
                                          9977  # Fetch next instruction and execute it, but only if there are sufficient
                                          9978  # ticks left for the slowest instruction.
              2301 8115  adda [$15]       9979  adda([vTicks])                  #0 Track elapsed ticks (actually counting down: AC<0)
              2302 e80b  blt  $230b       9980  blt('EXIT')                     #1 Escape near time out
              2303 c215  st   [$15]       9981  st([vTicks])                    #2
              2304 0116  ld   [$16]       9982  ld([vPC])                       #3 PREFIX+ARG0 is 2 bytes, vPC has been incremented by 1
              2305 9001  adda $01,x       9983  adda(1,X)                       #4 point to opcode
              2306 c002  st   $02,[$02]   9984  st(vCpuSelect,[vCpuSelect])     #5 Reset to default vCPU page
              2307 0d00  ld   [y,x]       9985  ld([Y,X])                       #6 Fetch opcode (actually a branch target)
              2308 de00  st   [y,x++]     9986  st([Y,Xpp])                     #7 Just X++
              2309 fe00  bra  ac          9987  bra(AC)                         #8 Dispatch
              230a 012b  ld   [$2b]       9988  ld([sysArgs+7])                 #9 Operand
                                          9989
                                          9990  # Resync with video driver and transfer control
              230b 800f  adda $0f         9991  adda(maxTicks)                  #3
              230c e40c  bgt  $230c       9992  bgt(pc()&255)                   #4 Resync
              230d a001  suba $01         9993  suba(1)                         #5
              230e 1401  ld   $01,y       9994  ld(hi('vBlankStart'),Y)         #6
              230f e11e  jmp  y,[$1e]     9995  jmp(Y,[vReturn])                #7 To video driver
              2310 0000  ld   $00         9996  ld(0)                           #8 AC should be 0 already. Still..
                                          9997  assert vCPU_overhead ==          9
                                          9998
                                          9999  # pc = 0x2311, Opcode = 0x11
                                          10000  # Instruction LSLN: Logical shift left vAC, (16bit), n times, 22 + 30*n + 20 cycles
                                          10001  label('LSLN')
LSLN:         2311 1426  ld   $26,y       10002  ld(hi('lsln#13'),Y)             #10
              2312 e000  jmp  y,$00       10003  jmp(Y,'lsln#13')                #11
                                          10004  #dummy                          #12 Overlap
                                          10005  #
                                          10006  # pc = 0x2313, Opcode = 0x13
                                          10007  # Instruction SEXT: Sign extend vAC based on a variable mask, 22 + 24 cycles
                                          10008  label('SEXT')
SEXT:         2313 1426  ld   $26,y       10009  ld(hi('sext#13'),Y)             #10 #12
              2314 e032  jmp  y,$32       10010  jmp(Y,'sext#13')                #11
                                          10011  #dummy                          #12 Overlap
                                          10012  #
                                          10013  # pc = 0x2315, Opcode = 0x15
                                          10014  # Instruction NOTW: Boolean invert var, 22 + 26 cycles
                                          10015  label('NOTW')
NOTW:         2315 1426  ld   $26,y       10016  ld(hi('notw#13'),Y)             #10 #12
              2316 e013  jmp  y,$13       10017  jmp(Y,'notw#13')                #11
                                          10018  #dummy                          #12 Overlap
                                          10019  #
                                          10020  # pc = 0x2317, Opcode = 0x17
                                          10021  # Instruction NEGW: Arithmetic negate var, 22 + 28 cycles
                                          10022  label('NEGW')
NEGW:         2317 1426  ld   $26,y       10023  ld(hi('negw#13'),Y)             #10, #12
              2318 e01e  jmp  y,$1e       10024  jmp(Y,'negw#13')                #11
                                          10025  #dummy                          #12 Overlap
                                          10026  #
                                          10027  # pc = 0x2319, Opcode = 0x19
                                          10028  # Instruction ANDBA: vAC &= var.lo, 22 + 22 cycles
                                          10029  label('ANDBA')
ANDBA:        2319 1426  ld   $26,y       10030  ld(hi('andba#13'),Y)            #10 #12
              231a e03f  jmp  y,$3f       10031  jmp(Y,'andba#13')               #11
              231b 1200  ld   ac,x        10032  ld(AC,X)                        #12 var
                                          10033
                                          10034  # pc = 0x231c, Opcode = 0x1c
                                          10035  # Instruction ORBA: vAC |= var.lo, 22 + 20 cycles
                                          10036  label('ORBA')
ORBA:         231c 1426  ld   $26,y       10037  ld(hi('orba#13'),Y)             #10
              231d e047  jmp  y,$47       10038  jmp(Y,'orba#13')                #11
              231e 1200  ld   ac,x        10039  ld(AC,X)                        #12 var
                                          10040
                                          10041  # pc = 0x231f, Opcode = 0x1f
                                          10042  # Instruction XORBA: vAC ^= var.lo, 22 + 20 cycles
                                          10043  label('XORBA')
XORBA:        231f 1426  ld   $26,y       10044  ld(hi('xorba#13'),Y)            #10
              2320 e04d  jmp  y,$4d       10045  jmp(Y,'xorba#13')               #11
              2321 1200  ld   ac,x        10046  ld(AC,X)                        #12 var
                                          10047
                                          10048  # pc = 0x2322, Opcode = 0x22
                                          10049  # Instruction FREQM: [(((chan & 3) + 1) <<8) | 0x00FC] = vAC, chan var = [0..3], 22 + 26 cycles
                                          10050  label('FREQM')
FREQM:        2322 1426  ld   $26,y       10051  ld(hi('freqm#13'),Y)            #10
              2323 e053  jmp  y,$53       10052  jmp(Y,'freqm#13')               #11
                                          10053  #dummy                          #12 Overlap
                                          10054  #
                                          10055  # pc = 0x2324, Opcode = 0x24
                                          10056  # Instruction FREQA: [((((chan - 1) & 3) + 1) <<8) | 0x00FC] = vAC, chan var = [1..4], 22 + 26 cycles
                                          10057  label('FREQA')
FREQA:        2324 1426  ld   $26,y       10058  ld(hi('freqa#13'),Y)            #10 #12
              2325 e05f  jmp  y,$5f       10059  jmp(Y,'freqa#13')               #11
              2326 1200  ld   ac,x        10060  ld(AC,X)                        #12 var
                                          10061
                                          10062  # pc = 0x2327, Opcode = 0x27
                                          10063  # Instruction FREQZ: [(((imm & 3) + 1) <<8) | 0x00FC] = 0, imm = [0..3], 22 + 22 cycles
                                          10064  label('FREQZ')
FREQZ:        2327 1426  ld   $26,y       10065  ld(hi('freqz#13'),Y)            #10
              2328 e06b  jmp  y,$6b       10066  jmp(Y,'freqz#13')               #11
              2329 2003  anda $03         10067  anda(3)                         #12 channel
                                          10068
                                          10069  # pc = 0x232a, Opcode = 0x2a
                                          10070  # Instruction VOLM: [(((chan & 3) + 1) <<8) | 0x00FA] = vAC.low, chan var = [0..3], 22 + 24 cycles
                                          10071  label('VOLM')
VOLM:         232a 1426  ld   $26,y       10072  ld(hi('volm#13'),Y)             #10
              232b e073  jmp  y,$73       10073  jmp(Y,'volm#13')                #11
                                          10074  #dummy                          #12 Overlap
                                          10075  #
                                          10076  # pc = 0x232c, Opcode = 0x2c
                                          10077  # Instruction VOLA: [((((chan - 1) & 3) + 1) <<8) | 0x00FA] = 63 - vAC.low + 64, chan var = [1..4],  22 + 26 cycles
                                          10078  label('VOLA')
VOLA:         232c 1426  ld   $26,y       10079  ld(hi('vola#13'),Y)             #10 #12
              232d e07d  jmp  y,$7d       10080  jmp(Y,'vola#13')                #11
              232e 1200  ld   ac,x        10081  ld(AC,X)                        #12 chan + 1
                                          10082
                                          10083  # pc = 0x232f, Opcode = 0x2f
                                          10084  # Instruction MODA: [((((chan - 1) & 3) + 1) <<8) | 0x00FB] = vAC.low, chan var = [1..4], 22 + 24 cycles
                                          10085  label('MODA')
MODA:         232f 1426  ld   $26,y       10086  ld(hi('moda#13'),Y)             #10
              2330 e089  jmp  y,$89       10087  jmp(Y,'moda#13')                #11
              2331 1200  ld   ac,x        10088  ld(AC,X)                        #12 chan + 1
                                          10089
                                          10090  # pc = 0x2332, Opcode = 0x32
                                          10091  # Instruction MODZ: [(((imm & 3) + 1) <<8) | 0x00FA] = 0x0200, imm = [0..3], 22 + 24 cycles
                                          10092  label('MODZ')
MODZ:         2332 1426  ld   $26,y       10093  ld(hi('modz#13'),Y)             #10
              2333 e093  jmp  y,$93       10094  jmp(Y,'modz#13')                #11
                                          10095  #dummy                          #12 Overlap
                                          10096  #
                                          10097  # pc = 0x2234, Opcode = 0x34
                                          10098  # Instruction SMPCPY:
                                          10099  label('SMPCPY')
SMPCPY:       2334 1426  ld   $26,y       10100  ld(hi('smpcpy#13'),Y)           #10 #12
              2335 e09d  jmp  y,$9d       10101  jmp(Y,'smpcpy#13')              #11
              2336 1200  ld   ac,x        10102  ld(AC,X)                        #12 dst var
                                          10103
                                          10104  # pc = 0x2237, Opcode = 0x37
                                          10105  # Instruction CMPWS:
                                          10106  label('CMPWS')
CMPWS:        2337 1428  ld   $28,y       10107  ld(hi('cmpws#13'),Y)            #10
              2338 e094  jmp  y,$94       10108  jmp(Y,'cmpws#13')               #11
                                          10109  #dummy                          #12 Overlap
                                          10110  #
                                          10111  # pc = 0x2239, Opcode = 0x39
                                          10112  # Instruction CMPWU:
                                          10113  label('CMPWU')
CMPWU:        2339 1428  ld   $28,y       10114  ld(hi('cmpwu#13'),Y)            #10 #12
              233a e0c7  jmp  y,$c7       10115  jmp(Y,'cmpwu#13')               #11
                                          10116  #dummy                          #12 Overlap
                                          10117  #
                                          10118  # pc = 0x223b, Opcode = 0x3b
                                          10119  # Instruction LEEKA:
                                          10120  label('LEEKA')
LEEKA:        233b 1429  ld   $29,y       10121  ld(hi('leeka#13'),Y)            #10 #12
              233c e000  jmp  y,$00       10122  jmp(Y,'leeka#13')               #11
                                          10123  #dummy                          #12 Overlap
                                          10124  #
                                          10125  # pc = 0x223d, Opcode = 0x3d
                                          10126  # Instruction LOKEA:
                                          10127  label('LOKEA')
LOKEA:        233d 1429  ld   $29,y       10128  ld(hi('lokea#13'),Y)            #10 #12
              233e e023  jmp  y,$23       10129  jmp(Y,'lokea#13')               #11
                                          10130  # dummy                         #12
                                          10131  #
                                          10132  # pc = 0x223f, Opcode = 0x3f
                                          10133  # Instruction FEEKA:
                                          10134  label('FEEKA')
FEEKA:        233f 1429  ld   $29,y       10135  ld(hi('feeka#13'),Y)            #10 #12
              2340 e045  jmp  y,$45       10136  jmp(Y,'feeka#13')               #11
              2341 c21d  st   [$1d]       10137  st([vTmp])                      #12 dst var
                                          10138
                                          10139  # pc = 0x2242, Opcode = 0x42
                                          10140  # Instruction FOKEA:
                                          10141  label('FOKEA')
FOKEA:        2342 1429  ld   $29,y       10142  ld(hi('fokea#13'),Y)            #10
              2343 e06c  jmp  y,$6c       10143  jmp(Y,'fokea#13')               #11
                                          10144  # dummy                         #12
                                          10145  #
                                          10146  # pc = 0x2344, Opcode = 0x44
                                          10147  # Instruction MEEKA: Peek 8 bytes from [vAC] to [var], 22 + 64 cycles
                                          10148  label('MEEKA')
MEEKA:        2344 142a  ld   $2a,y       10149  ld(hi('meeka#13'),Y)            #10 #12
              2345 e000  jmp  y,$00       10150  jmp(Y,'meeka#13')               #11
                                          10151  # dummy                         #12
                                          10152  #
                                          10153  # pc = 0x2346, Opcode = 0x46
                                          10154  # Instruction MOKEA: Poke 8 bytes from [var] to [vAC], 22 + 64 cycles
                                          10155  label('MOKEA')
MOKEA:        2346 142a  ld   $2a,y       10156  ld(hi('mokea#13'),Y)            #10 #12
              2347 e037  jmp  y,$37       10157  jmp(Y,'mokea#13')               #11
                                          10158  # dummy                         #12
                                          10159  #
                                          10160  # pc = 0x2348, Opcode = 0x48
                                          10161  # Instruction LSRVL: Logical shift right var long, 22 + 104 cycles
                                          10162  label('LSRVL')
LSRVL:        2348 142c  ld   $2c,y       10163  ld(hi('lsrvl#13'),Y)            #10 #12
              2349 e06b  jmp  y,$6b       10164  jmp(Y,'lsrvl#13')               #11
              234a 1200  ld   ac,x        10165  ld(AC,X)                        #12 var
                                          10166
                                          10167  # pc = 0x234b, Opcode = 0x4b
                                          10168  # Instruction LSLVL: Logical shift left var long, 22 + 56 cycles
                                          10169  label('LSLVL')
LSLVL:        234b 142c  ld   $2c,y       10170  ld(hi('lslvl#13'),Y)            #10 #12
              234c e0b0  jmp  y,$b0       10171  jmp(Y,'lslvl#13')               #11
              234d 1200  ld   ac,x        10172  ld(AC,X)                        #12 var
                                          10173
                                          10174  # pc = 0x234e, Opcode = 0x4e
                                          10175  # Instruction INCL: Increment var long, 22 + 36 cycles
                                          10176  label('INCL')
INCL:         234e 142e  ld   $2e,y       10177  ld(hi('incl#13'),Y)             #10 #12
              234f e012  jmp  y,$12       10178  jmp(Y,'incl#13')                #11
              2350 1200  ld   ac,x        10179  ld(AC,X)                        #12 var
                                          10180
                                          10181  # pc = 0x2351, Opcode = 0x51
                                          10182  # Instruction DECL: Decrement var long, 22 + 40 cycles
                                          10183  label('DECL')
DECL:         2351 142e  ld   $2e,y       10184  ld(hi('decl#13'),Y)             #10 #12
              2352 e036  jmp  y,$36       10185  jmp(Y,'decl#13')                #11
                                          10186  # dummy                         #12
                                          10187  #
                                          10188
                                          10189  # SYS calls and instruction implementations rely on these
              2353 0200  nop              10190  fillers(until=0xca)
              2354 0200  nop
              2355 0200  nop
              * 119 times
              23ca 00f2  ld   $f2         10191  ld(-28/2)                       #25
              23cb fc01  bra  $2301       10192  bra('NEXT')                     #26 Return from SYS calls
              23cc 1517  ld   [$17],y     10193  ld([vPC+1],Y)                   #27
                                          10194
                                          10195
              23cd 0200  nop              10196  fillers(until=0xff)
              23ce 0200  nop
              23cf 0200  nop
              * 50 times
                                          10197
                                          10198  #-----------------------------------------------------------------------
                                          10199  #       PREFX1 instruction page, (0x2400), PREFIX OPCODE
                                          10200  #-----------------------------------------------------------------------
                                          10201  #
                                          10202  label('PREFX1_PAGE')
PREFX1_PAGE:  23ff fc03  bra  $2403       10203  bra('.next2')                   #0 Enter at '.next2' (so no startup overhead)
                                          10204  # --- Page boundary ---
                                          10205  align(0x100,size=0x100)
              2400 1517  ld   [$17],y     10206  ld([vPC+1],Y)                   #1
                                          10207
                                          10208  # Fetch next instruction and execute it, but only if there are sufficient
                                          10209  # ticks left for the slowest instruction.
              2401 8115  adda [$15]       10210  adda([vTicks])                  #0 Track elapsed ticks (actually counting down: AC<0)
              2402 e80b  blt  $240b       10211  blt('EXIT')                     #1 Escape near time out
              2403 c215  st   [$15]       10212  st([vTicks])                    #2
              2404 0116  ld   [$16]       10213  ld([vPC])                       #3 PREFIX is 1 byte, vPC hasn't been incremented
              2405 9001  adda $01,x       10214  adda(1,X)                       #4
              2406 c002  st   $02,[$02]   10215  st(vCpuSelect,[vCpuSelect])     #5 Reset to default vCPU page
              2407 0d00  ld   [y,x]       10216  ld([Y,X])                       #6 Fetch opcode (actually a branch target)
              2408 de00  st   [y,x++]     10217  st([Y,Xpp])                     #7 Just X++
              2409 fe00  bra  ac          10218  bra(AC)                         #8 Dispatch
              240a 0d00  ld   [y,x]       10219  ld([Y,X])                       #9 Prefetch operand
                                          10220
                                          10221  # Resync with video driver and transfer control
              240b 800f  adda $0f         10222  adda(maxTicks)                  #3
              240c e40c  bgt  $240c       10223  bgt(pc()&255)                   #4 Resync
              240d a001  suba $01         10224  suba(1)                         #5
              240e 1401  ld   $01,y       10225  ld(hi('vBlankStart'),Y)         #6
              240f e11e  jmp  y,[$1e]     10226  jmp(Y,[vReturn])                #7 To video driver
              2410 0000  ld   $00         10227  ld(0)                           #8 AC should be 0 already. Still..
                                          10228  assert vCPU_overhead ==          9
                                          10229
                                          10230  # pc = 0x2411, Opcode = 0x11
                                          10231  # Instruction NOTE: vAC = ROM:[NotesTable + vAC.lo*2], 22 + 28 cycles
                                          10232  label('NOTE')
NOTE:         2411 1427  ld   $27,y       10233  ld(hi('note#13'),Y)             #10
              2412 e000  jmp  y,$00       10234  jmp(Y,'note#13')                #11
              2413 0009  ld   $09         10235  ld('.note#28')                  #12 low byte of low note return address
                                          10236
                                          10237  # pc = 0x2414, Opcode = 0x14
                                          10238  # Instruction MIDI: vAC = ROM:[NotesTable + (vAC.lo - 11)*2], 22 + 30 cycles
                                          10239  label('MIDI')
MIDI:         2414 1427  ld   $27,y       10240  ld(hi('midi#13'),Y)             #10
              2415 e019  jmp  y,$19       10241  jmp(Y,'midi#13')                #11
              2416 0023  ld   $23         10242  ld('.midi#29')                  #12 low byte of low midi return address
                                          10243
                                          10244
                                          10245  # SYS calls and instruction implementations rely on these
              2417 0200  nop              10246  fillers(until=0xca)
              2418 0200  nop
              2419 0200  nop
              * 179 times
              24ca 00f2  ld   $f2         10247  ld(-28/2)                       #25
              24cb fc01  bra  $2401       10248  bra('NEXT')                     #26 Return from SYS calls
              24cc 1517  ld   [$17],y     10249  ld([vPC+1],Y)                   #27
                                          10250
                                          10251
              24cd 0200  nop              10252  fillers(until=0xff)
              24ce 0200  nop
              24cf 0200  nop
              * 50 times
              24ff 0200  nop              10253  align(0x100, size=0x100)
                                          10254
                                          10255  #-----------------------------------------------------------------------
                                          10256  #       PREFX3 implementation page, (0x2500)
                                          10257  #-----------------------------------------------------------------------
                                          10258  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2099#p2099
                                          10259  #
                                          10260  # STB2 implementation
                                          10261  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2135#p2135
                                          10262  label('stb2#13')
stb2#13:      2500 152b  ld   [$2b],y     10263  ld([sysArgs+7],Y)               #13 Second operand
              2501 0118  ld   [$18]       10264  ld([vAC])                       #14
              2502 ce00  st   [y,x]       10265  st([Y,X])                       #15
              2503 1403  ld   $03,y       10266  ld(hi('NEXTY'),Y)               #16
              2504 e000  jmp  y,$00       10267  jmp(Y,'NEXTY')                  #17
              2505 00f6  ld   $f6         10268  ld(-20/2)                       #18
                                          10269
                                          10270  # STW2 implementation
                                          10271  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2135#p2135
                                          10272  label('stw2#13')
stw2#13:      2506 152b  ld   [$2b],y     10273  ld([sysArgs+7],Y)               #13 Second operand
              2507 0118  ld   [$18]       10274  ld([vAC])                       #14
              2508 de00  st   [y,x++]     10275  st([Y,Xpp])                     #15
              2509 0119  ld   [$19]       10276  ld([vAC+1])                     #16
              250a ce00  st   [y,x]       10277  st([Y,X])                       #17
              250b 1403  ld   $03,y       10278  ld(hi('NEXTY'),Y)               #18
              250c e000  jmp  y,$00       10279  jmp(Y,'NEXTY')                  #19
              250d 00f5  ld   $f5         10280  ld(-22/2)                       #20
                                          10281
                                          10282  # XCHGB implementation
                                          10283  label('xchgb#13')
xchgb#13:     250e c22a  st   [$2a]       10284  st([sysArgs+6])                 #13 1st var
              250f 112b  ld   [$2b],x     10285  ld([sysArgs+7],X)               #14 2nd var
              2510 0500  ld   [x]         10286  ld([X])                         #15
              2511 c21d  st   [$1d]       10287  st([vTmp])                      #16
              2512 112a  ld   [$2a],x     10288  ld([sysArgs+6],X)               #17
              2513 0500  ld   [x]         10289  ld([X])                         #18
              2514 112b  ld   [$2b],x     10290  ld([sysArgs+7],X)               #19
              2515 c600  st   [x]         10291  st([X])                         #20
              2516 112a  ld   [$2a],x     10292  ld([sysArgs+6],X)               #21
              2517 011d  ld   [$1d]       10293  ld([vTmp])                      #22
              2518 c600  st   [x]         10294  st([X])                         #23
              2519 1403  ld   $03,y       10295  ld(hi('NEXTY'),Y)               #24
              251a e000  jmp  y,$00       10296  jmp(Y,'NEXTY')                  #25
              251b 00f2  ld   $f2         10297  ld(-28/2)                       #26
                                          10298
                                          10299  # XCHGW implementation
                                          10300  label('xchgw#13')
xchgw#13:     251c 00f9  ld   $f9         10301  ld(min(0,maxTicks-44/2))        #13
              251d 8115  adda [$15]       10302  adda([vTicks])                  #14
              251e e83a  blt  .xchgw#17   10303  blt('.xchgw#17')                #15 not enough time left, so retry
              251f 1400  ld   $00,y       10304  ld(0,Y)                         #16 vPC.hi
              2520 112b  ld   [$2b],x     10305  ld([sysArgs+7],X)               #17 var2
              2521 0500  ld   [x]         10306  ld([X])                         #18
              2522 c218  st   [$18]       10307  st([vAC])                       #19 vAC.lo = var2.lo
              2523 de00  st   [y,x++]     10308  st([Y,Xpp])                     #20 X++
              2524 0500  ld   [x]         10309  ld([X])                         #21
              2525 c219  st   [$19]       10310  st([vAC+1])                     #22 vAC.hi = var2.hi
              2526 112a  ld   [$2a],x     10311  ld([sysArgs+6],X)               #23
              2527 0500  ld   [x]         10312  ld([X])                         #24
              2528 112b  ld   [$2b],x     10313  ld([sysArgs+7],X)               #25
              2529 c600  st   [x]         10314  st([X])                         #26 var2.lo = var1.lo
              252a 012a  ld   [$2a]       10315  ld([sysArgs+6])                 #27
              252b 9001  adda $01,x       10316  adda(1,X)                       #28
              252c 0500  ld   [x]         10317  ld([X])                         #29
              252d c21d  st   [$1d]       10318  st([vTmp])                      #30
              252e 012b  ld   [$2b]       10319  ld([sysArgs+7])                 #31
              252f 9001  adda $01,x       10320  adda(1,X)                       #32
              2530 011d  ld   [$1d]       10321  ld([vTmp])                      #33
              2531 c600  st   [x]         10322  st([X])                         #34 var2.hi = var1.hi
              2532 112a  ld   [$2a],x     10323  ld([sysArgs+6],X)               #35
              2533 0118  ld   [$18]       10324  ld([vAC])                       #36
              2534 de00  st   [y,x++]     10325  st([Y,Xpp])                     #37 var1.lo = vAC.lo, X++
              2535 0119  ld   [$19]       10326  ld([vAC+1])                     #38
              2536 c600  st   [x]         10327  st([X])                         #39 var1.hi = vAC.hi
              2537 1403  ld   $03,y       10328  ld(hi('NEXTY'),Y)               #40
              2538 e000  jmp  y,$00       10329  jmp(Y,'NEXTY')                  #41
              2539 00ea  ld   $ea         10330  ld(-44/2)                       #42
                                          10331  label('.xchgw#17')
.xchgw#17:    253a 0021  ld   $21         10332  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              253b c202  st   [$02]       10333  st([vCpuSelect])                #18 restore PREFX3 instruction page
              253c 9401  adda $01,y       10334  adda(1,Y)                       #19 retry instruction
              253d e0cb  jmp  y,$cb       10335  jmp(Y,'REENTER')                #20
              253e 00f4  ld   $f4         10336  ld(-24/2)                       #21
                                          10337
                                          10338  # MOVW implementation
                                          10339  label('movw#13')
movw#13:      253f 1200  ld   ac,x        10340  ld(AC,X)                        #13
              2540 8001  adda $01         10341  adda(1)                         #14
              2541 c21d  st   [$1d]       10342  st([vTmp])                      #15 address of src.hi
              2542 0500  ld   [x]         10343  ld([X])                         #16 src.lo
              2543 112b  ld   [$2b],x     10344  ld([sysArgs+7],X)               #17 address of dst.lo
              2544 c600  st   [x]         10345  st([X])                         #18 dst.lo = src.lo
              2545 111d  ld   [$1d],x     10346  ld([vTmp],X)                    #19
              2546 0500  ld   [x]         10347  ld([X])                         #20 src.hi
              2547 c21d  st   [$1d]       10348  st([vTmp])                      #21
              2548 012b  ld   [$2b]       10349  ld([sysArgs+7])                 #22
              2549 9001  adda $01,x       10350  adda(1,X)                       #23 address of dst.hi
              254a 011d  ld   [$1d]       10351  ld([vTmp])                      #24
              254b c600  st   [x]         10352  st([X])                         #25 dst.hi = src.hi
              254c 1403  ld   $03,y       10353  ld(hi('NEXTY'),Y)               #26
              254d e000  jmp  y,$00       10354  jmp(Y,'NEXTY')                  #27
              254e 00f1  ld   $f1         10355  ld(-30/2)                       #28
                                          10356
                                          10357  # ADDWI implementation
                                          10358  label('addwi#13')
addwi#13:     254f c21d  st   [$1d]       10359  st([vTmp])                      #13 save imm.lo
              2550 8118  adda [$18]       10360  adda([vAC])                     #14
              2551 c218  st   [$18]       10361  st([vAC])                       #15 vAC.lo += imm.lo
              2552 e85c  blt  .addwi#18   10362  bmi('.addwi#18')                #16 overflow
              2553 a11d  suba [$1d]       10363  suba([vTmp])                    #17 restore vAC.lo
              2554 411d  ora  [$1d]       10364  ora([vTmp])                     #18 imm.lo | vAC.lo
              2555 e864  blt  .addwi#21   10365  bmi('.addwi#21')                #19 if carry == 1
              2556 012b  ld   [$2b]       10366  ld([sysArgs+7])                 #20 imm.hi
              2557 8119  adda [$19]       10367  adda([vAC+1])                   #21 carry = 0
              2558 c219  st   [$19]       10368  st([vAC+1])                     #22 vAC.hi += imm.hi
              2559 1403  ld   $03,y       10369  ld(hi('REENTER'),Y)             #23
              255a e0cb  jmp  y,$cb       10370  jmp(Y,'REENTER')                #24
              255b 00f2  ld   $f2         10371  ld(-28/2)                       #25
                                          10372  label('.addwi#18')
.addwi#18:    255c 211d  anda [$1d]       10373  anda([vTmp])                    #18 imm.lo & vAC.lo
              255d e864  blt  .addwi#21   10374  bmi('.addwi#21')                #19 If carry == 1
              255e 012b  ld   [$2b]       10375  ld([sysArgs+7])                 #20 imm.hi
              255f 8119  adda [$19]       10376  adda([vAC+1])                   #21 carry = 0
              2560 c219  st   [$19]       10377  st([vAC+1])                     #22 vAC.hi += imm.hi
              2561 1403  ld   $03,y       10378  ld(hi('REENTER'),Y)             #23
              2562 e0cb  jmp  y,$cb       10379  jmp(Y,'REENTER')                #24
              2563 00f2  ld   $f2         10380  ld(-28/2)                       #25
                                          10381  label('.addwi#21')
.addwi#21:    2564 8001  adda $01         10382  adda(1)                         #21 carry = 1
              2565 8119  adda [$19]       10383  adda([vAC+1])                   #22
              2566 c219  st   [$19]       10384  st([vAC+1])                     #23 vAC.hi = vAC.hi + carry + imm.hi
              2567 1403  ld   $03,y       10385  ld(hi('NEXTY'),Y)               #24
              2568 e000  jmp  y,$00       10386  jmp(Y,'NEXTY')                  #25
              2569 00f2  ld   $f2         10387  ld(-28/2)                       #26
                                          10388
                                          10389  # SUBWI implementation
                                          10390  label('subwi#13')
subwi#13:     256a c21d  st   [$1d]       10391  st([vTmp])                      #13 save imm.lo
              256b 0118  ld   [$18]       10392  ld([vAC])                       #14
              256c e878  blt  .subwi#17   10393  bmi('.subwi#17')                #15 is -ve?
              256d a11d  suba [$1d]       10394  suba([vTmp])                    #16
              256e c218  st   [$18]       10395  st([vAC])                       #17 vAC.lo -= imm.lo
              256f 411d  ora  [$1d]       10396  ora([vTmp])                     #18 borrow in bit 7
              2570 3080  anda $80,x       10397  anda(0x80,X)                    #19 move borrow to bit 0
              2571 0119  ld   [$19]       10398  ld([vAC+1])                     #20
              2572 a500  suba [x]         10399  suba([X])                       #21
              2573 a12b  suba [$2b]       10400  suba([sysArgs+7])               #22
              2574 c219  st   [$19]       10401  st([vAC+1])                     #23 vAC.hi = vAC.hi - borrow - imm.hi
              2575 1403  ld   $03,y       10402  ld(hi('NEXTY'),Y)               #24
              2576 e000  jmp  y,$00       10403  jmp(Y,'NEXTY')                  #25
              2577 00f2  ld   $f2         10404  ld(-28/2)                       #26
                                          10405  label('.subwi#17')
.subwi#17:    2578 c218  st   [$18]       10406  st([vAC])                       #17 vAC.lo -= imm.lo
              2579 211d  anda [$1d]       10407  anda([vTmp])                    #18 borrow in bit 7
              257a 3080  anda $80,x       10408  anda(0x80,X)                    #19 move borrow to bit 0
              257b 0119  ld   [$19]       10409  ld([vAC+1])                     #20
              257c a500  suba [x]         10410  suba([X])                       #21
              257d a12b  suba [$2b]       10411  suba([sysArgs+7])               #22
              257e c219  st   [$19]       10412  st([vAC+1])                     #23 vAC.hi = vAC.hi - borrow - imm.hi
              257f 1403  ld   $03,y       10413  ld(hi('NEXTY'),Y)               #24
              2580 e000  jmp  y,$00       10414  jmp(Y,'NEXTY')                  #25
              2581 00f2  ld   $f2         10415  ld(-28/2)                       #26
                                          10416
                                          10417  # ANDWI implementation
                                          10418  label('andwi#13')
andwi#13:     2582 2118  anda [$18]       10419  anda([vAC])                     #13
              2583 c218  st   [$18]       10420  st([vAC])                       #14 vAC.lo &= imm.lo
              2584 012b  ld   [$2b]       10421  ld([sysArgs+7])                 #15
              2585 2119  anda [$19]       10422  anda([vAC+1])                   #16
              2586 c219  st   [$19]       10423  st([vAC+1])                     #17 vAC.hi &= imm.hi
              2587 1403  ld   $03,y       10424  ld(hi('NEXTY'),Y)               #18
              2588 e000  jmp  y,$00       10425  jmp(Y,'NEXTY')                  #19
              2589 00f5  ld   $f5         10426  ld(-22/2)                       #20
                                          10427
                                          10428  # ORWI implementation
                                          10429  label('orwi#13')
orwi#13:      258a 4118  ora  [$18]       10430  ora([vAC])                      #13
              258b c218  st   [$18]       10431  st([vAC])                       #14 vAC.lo |= imm.lo
              258c 012b  ld   [$2b]       10432  ld([sysArgs+7])                 #15
              258d 4119  ora  [$19]       10433  ora([vAC+1])                    #16
              258e c219  st   [$19]       10434  st([vAC+1])                     #17 vAC.hi |= imm.hi
              258f 1403  ld   $03,y       10435  ld(hi('NEXTY'),Y)               #18
              2590 e000  jmp  y,$00       10436  jmp(Y,'NEXTY')                  #19
              2591 00f5  ld   $f5         10437  ld(-22/2)                       #20
                                          10438
                                          10439  # XORWI implementation
                                          10440  label('xorwi#13')
xorwi#13:     2592 6118  xora [$18]       10441  xora([vAC])                     #13
              2593 c218  st   [$18]       10442  st([vAC])                       #14 vAC.lo ^= imm.lo
              2594 012b  ld   [$2b]       10443  ld([sysArgs+7])                 #15
              2595 6119  xora [$19]       10444  xora([vAC+1])                   #16
              2596 c219  st   [$19]       10445  st([vAC+1])                     #17 vAC.hi ^= imm.hi
              2597 1403  ld   $03,y       10446  ld(hi('NEXTY'),Y)               #18
              2598 e000  jmp  y,$00       10447  jmp(Y,'NEXTY')                  #19
              2599 00f5  ld   $f5         10448  ld(-22/2)                       #20
                                          10449
                                          10450  # LDPX implementation
                                          10451  label('ldpx#13')
ldpx#13:      259a 9001  adda $01,x       10452  adda(1,X)                       #13
              259b 0500  ld   [x]         10453  ld([X])                         #14 y
              259c 8500  adda [x]         10454  adda([X])                       #15 y*2
              259d 1200  ld   ac,x        10455  ld(AC,X)                        #16
              259e 1401  ld   $01,y       10456  ld(1,Y)                         #17 Y,X = 0x0100 + 2*y, (0 >= y <= 127)
              259f 0d00  ld   [y,x]       10457  ld([Y,X])                       #18
              25a0 1600  ld   ac,y        10458  ld(AC,Y)                        #19 Y = [Y,X]
              25a1 111d  ld   [$1d],x     10459  ld([vTmp],X)                    #20
              25a2 0500  ld   [x]         10460  ld([X])                         #21
              25a3 1200  ld   ac,x        10461  ld(AC,X)                        #22 X = x
              25a4 0d00  ld   [y,x]       10462  ld([Y,X])                       #23 colour = [Y,X]
              25a5 112b  ld   [$2b],x     10463  ld([sysArgs+7],X)               #24
              25a6 c600  st   [x]         10464  st([X])                         #25 colour
              25a7 1403  ld   $03,y       10465  ld(hi('NEXTY'),Y)               #26
              25a8 e000  jmp  y,$00       10466  jmp(Y,'NEXTY')                  #27
              25a9 00f1  ld   $f1         10467  ld(-30/2)                       #28
                                          10468
                                          10469  # CONDI implementation
                                          10470  label('condi#13')
condi#13:     25aa c21d  st   [$1d]       10471  st([vTmp])                      #13
              25ab 0118  ld   [$18]       10472  ld([vAC])                       #14
              25ac 4119  ora  [$19]       10473  ora([vAC+1])                    #15
              25ad ecb0  bne  $25b0       10474  bne(pc()+3)                     #16
              25ae fcb1  bra  $25b1       10475  bra(pc()+3)                     #17
              25af 012b  ld   [$2b]       10476  ld([sysArgs+7])                 #18 get result cond == 0
              25b0 011d  ld   [$1d]       10477  ld([vTmp])                      #18 get result cond != 0
              25b1 c218  st   [$18]       10478  st([vAC])                       #19 result.lo
              25b2 0000  ld   $00         10479  ld(0)                           #20
              25b3 c219  st   [$19]       10480  st([vAC+1])                     #21 result.hi = 0
              25b4 1403  ld   $03,y       10481  ld(hi('NEXTY'),Y)               #22
              25b5 e000  jmp  y,$00       10482  jmp(Y,'NEXTY')                  #23
              25b6 00f3  ld   $f3         10483  ld(-26/2)                       #24
                                          10484
                                          10485  # CONDB implementation
                                          10486  label('condb#13')
condb#13:     25b7 0500  ld   [x]         10487  ld([X])                         #13
              25b8 c21d  st   [$1d]       10488  st([vTmp])                      #14
              25b9 112b  ld   [$2b],x     10489  ld([sysArgs+7],X)               #15 get result cond=0
              25ba 0118  ld   [$18]       10490  ld([vAC])                       #16
              25bb 4119  ora  [$19]       10491  ora([vAC+1])                    #17
              25bc ecbf  bne  $25bf       10492  bne(pc()+3)                     #18
              25bd fcc0  bra  $25c0       10493  bra(pc()+3)                     #19
              25be 0500  ld   [x]         10494  ld([X])                         #20 get result cond == 0
              25bf 011d  ld   [$1d]       10495  ld([vTmp])                      #20 get result cond != 0
              25c0 c218  st   [$18]       10496  st([vAC])                       #21 result.lo
              25c1 0000  ld   $00         10497  ld(0)                           #22
              25c2 c219  st   [$19]       10498  st([vAC+1])                     #23 result.hi = 0
              25c3 1403  ld   $03,y       10499  ld(hi('NEXTY'),Y)               #24
              25c4 e000  jmp  y,$00       10500  jmp(Y,'NEXTY')                  #25
              25c5 00f2  ld   $f2         10501  ld(-28/2)                       #26
                                          10502
                                          10503  # CONDIB implementation
                                          10504  label('condib#13')
condib#13:    25c6 112b  ld   [$2b],x     10505  ld([sysArgs+7],X)               #13 get result cond=0
              25c7 0118  ld   [$18]       10506  ld([vAC])                       #14
              25c8 4119  ora  [$19]       10507  ora([vAC+1])                    #15
              25c9 eccc  bne  $25cc       10508  bne(pc()+3)                     #16
              25ca fccd  bra  $25cd       10509  bra(pc()+3)                     #17
              25cb 0500  ld   [x]         10510  ld([X])                         #18 get result cond == 0
              25cc 011d  ld   [$1d]       10511  ld([vTmp])                      #18 get result cond != 0
              25cd c218  st   [$18]       10512  st([vAC])                       #19 result.lo
              25ce 0000  ld   $00         10513  ld(0)                           #20
              25cf c219  st   [$19]       10514  st([vAC+1])                     #21 result.hi = 0
              25d0 1403  ld   $03,y       10515  ld(hi('NEXTY'),Y)               #22
              25d1 e000  jmp  y,$00       10516  jmp(Y,'NEXTY')                  #23
              25d2 00f3  ld   $f3         10517  ld(-26/2)                       #24
                                          10518
                                          10519  # CONDBI implementation
                                          10520  label('condbi#13')
condbi#13:    25d3 1200  ld   ac,x        10521  ld(AC,X)                        #13
              25d4 0118  ld   [$18]       10522  ld([vAC])                       #14
              25d5 4119  ora  [$19]       10523  ora([vAC+1])                    #15
              25d6 ecd9  bne  $25d9       10524  bne(pc()+3)                     #16
              25d7 fcda  bra  $25da       10525  bra(pc()+3)                     #17
              25d8 012b  ld   [$2b]       10526  ld([sysArgs+7])                 #18 get result cond == 0
              25d9 0500  ld   [x]         10527  ld([X])                         #18 get result cond != 0
              25da c218  st   [$18]       10528  st([vAC])                       #19 result.lo
              25db 0000  ld   $00         10529  ld(0)                           #20
              25dc c219  st   [$19]       10530  st([vAC+1])                     #21 result.hi = 0
              25dd 1403  ld   $03,y       10531  ld(hi('NEXTY'),Y)               #22
              25de e000  jmp  y,$00       10532  jmp(Y,'NEXTY')                  #23
              25df 00f3  ld   $f3         10533  ld(-26/2)                       #24
                                          10534
                                          10535
              25e0 0200  nop              10536  fillers(until=0xff)
              25e1 0200  nop
              25e2 0200  nop
              * 31 times
              25ff 0200  nop              10537  align(0x100, size=0x100)
                                          10538
                                          10539  #-----------------------------------------------------------------------
                                          10540  #       PREFX2 implementation page, (0x2600)
                                          10541  #-----------------------------------------------------------------------
                                          10542  #
                                          10543  # LSLN implementation
                                          10544  label('lsln#13')
lsln#13:      2600 a001  suba $01         10545  suba(1)                         #13
              2601 f406  bge  .lsln#16    10546  bge('.lsln#16')                 #14
              2602 c22b  st   [$2b]       10547  st([sysArgs+7])                 #15
              2603 1403  ld   $03,y       10548  ld(hi('NEXTY'),Y)               #16 exit PREFX2 instruction page
              2604 e000  jmp  y,$00       10549  jmp(Y,'NEXTY')                  #17
              2605 00f6  ld   $f6         10550  ld(-20/2)                       #18
                                          10551  label('.lsln#16')
.lsln#16:     2606 0118  ld   [$18]       10552  ld([vAC])                       #16
              2607 3080  anda $80,x       10553  anda(128,X)                     #17
              2608 8118  adda [$18]       10554  adda([vAC])                     #18
              2609 c218  st   [$18]       10555  st([vAC])                       #19
              260a 0500  ld   [x]         10556  ld([X])                         #20
              260b 8119  adda [$19]       10557  adda([vAC+1])                   #21
              260c 8119  adda [$19]       10558  adda([vAC+1])                   #22
              260d c219  st   [$19]       10559  st([vAC+1])                     #23
              260e 0022  ld   $22         10560  ld(hi('PREFX2_PAGE'))           #24 ENTER is at $(n-1)ff, where n = instruction page
              260f c202  st   [$02]       10561  st([vCpuSelect])                #25 restore PREFX2 instruction page
              2610 9401  adda $01,y       10562  adda(1,Y)                       #26 restart instruction
              2611 e000  jmp  y,$00       10563  jmp(Y,'NEXTY')                  #27
              2612 00f1  ld   $f1         10564  ld(-30/2)                       #28
                                          10565
                                          10566  # NOTW implementation
                                          10567  label('notw#13')
notw#13:      2613 112b  ld   [$2b],x     10568  ld([sysArgs+7],X)               #13
              2614 1400  ld   $00,y       10569  ld(0,Y)                         #14
              2615 0500  ld   [x]         10570  ld([X])                         #15
              2616 60ff  xora $ff         10571  xora(255)                       #16
              2617 de00  st   [y,x++]     10572  st([Y,Xpp])                     #17
              2618 0500  ld   [x]         10573  ld([X])                         #18
              2619 60ff  xora $ff         10574  xora(255)                       #19
              261a c600  st   [x]         10575  st([X])                         #20
              261b 1403  ld   $03,y       10576  ld(hi('REENTER'),Y)             #21
              261c e0cb  jmp  y,$cb       10577  jmp(Y,'REENTER')                #22
              261d 00f3  ld   $f3         10578  ld(-26/2)                       #23
                                          10579
                                          10580  # NEGW implementation
                                          10581  label('negw#13')
negw#13:      261e 112b  ld   [$2b],x     10582  ld([sysArgs+7],X)               #13
              261f 1400  ld   $00,y       10583  ld(0,Y)                         #14
              2620 0500  ld   [x]         10584  ld([X])                         #15
              2621 60ff  xora $ff         10585  xora(255)                       #16
              2622 8001  adda $01         10586  adda(1)                         #17
              2623 f02b  beq  .negw#20    10587  beq('.negw#20')                 #18
              2624 de00  st   [y,x++]     10588  st([Y,Xpp])                     #19
              2625 0500  ld   [x]         10589  ld([X])                         #20
              2626 60ff  xora $ff         10590  xora(255)                       #21
              2627 c600  st   [x]         10591  st([X])                         #22
              2628 1403  ld   $03,y       10592  ld(hi('REENTER'),Y)             #23
              2629 e0cb  jmp  y,$cb       10593  jmp(Y,'REENTER')                #24
              262a 00f2  ld   $f2         10594  ld(-28/2)                       #25
                                          10595  label('.negw#20')
.negw#20:     262b 0500  ld   [x]         10596  ld([X])                         #20
              262c 60ff  xora $ff         10597  xora(255)                       #21
              262d 8001  adda $01         10598  adda(1)                         #22
              262e c600  st   [x]         10599  st([X])                         #23
              262f 1403  ld   $03,y       10600  ld(hi('NEXTY'),Y)               #24
              2630 e000  jmp  y,$00       10601  jmp(Y,'NEXTY')                  #25
              2631 00f2  ld   $f2         10602  ld(-28/2)                       #26
                                          10603
                                          10604  # SEXT implementation
                                          10605  label('sext#13')
sext#13:      2632 2119  anda [$19]       10606  anda([vAC+1])                   #13
              2633 ec38  bne  .sext#16    10607  bne('.sext#16')                 #14 check mask
              2634 012b  ld   [$2b]       10608  ld([sysArgs+7])                 #15
              2635 1403  ld   $03,y       10609  ld(hi('NEXTY'),Y)               #16
              2636 e000  jmp  y,$00       10610  jmp(Y,'NEXTY')                  #17
              2637 00f6  ld   $f6         10611  ld(-20/2)                       #18
                                          10612  label('.sext#16')
.sext#16:     2638 60ff  xora $ff         10613  xora(255)                       #16
              2639 8001  adda $01         10614  adda(1)                         #17 mask = (~mask) + 1
              263a 4119  ora  [$19]       10615  ora([vAC+1])                    #18
              263b c219  st   [$19]       10616  st([vAC+1])                     #19 set sign bits
              263c 1403  ld   $03,y       10617  ld(hi('NEXTY'),Y)               #20
              263d e000  jmp  y,$00       10618  jmp(Y,'NEXTY')                  #21
              263e 00f4  ld   $f4         10619  ld(-24/2)                       #22
                                          10620
                                          10621  # ANDBA implementation
                                          10622  label('andba#13')
andba#13:     263f 0118  ld   [$18]       10623  ld([vAC])                       #13
              2640 2500  anda [x]         10624  anda([X])                       #14
              2641 c218  st   [$18]       10625  st([vAC])                       #15 vAC.lo &= var.lo
              2642 0000  ld   $00         10626  ld(0)                           #16
              2643 c219  st   [$19]       10627  st([vAC+1])                     #17 Store high result
              2644 1403  ld   $03,y       10628  ld(hi('NEXTY'),Y)               #18
              2645 e000  jmp  y,$00       10629  jmp(Y,'NEXTY')                  #19
              2646 00f5  ld   $f5         10630  ld(-22/2)                       #20
                                          10631
                                          10632  # ORBA implementation
                                          10633  label('orba#13')
orba#13:      2647 0118  ld   [$18]       10634  ld([vAC])                       #13
              2648 4500  ora  [x]         10635  ora([X])                        #14
              2649 c218  st   [$18]       10636  st([vAC])                       #15 vAC.lo |= var.lo
              264a 1403  ld   $03,y       10637  ld(hi('NEXTY'),Y)               #16
              264b e000  jmp  y,$00       10638  jmp(Y,'NEXTY')                  #17
              264c 00f6  ld   $f6         10639  ld(-20/2)                       #18
                                          10640
                                          10641  # XORBA implementation
                                          10642  label('xorba#13')
xorba#13:     264d 0118  ld   [$18]       10643  ld([vAC])                       #13
              264e 6500  xora [x]         10644  xora([X])                       #14
              264f c218  st   [$18]       10645  st([vAC])                       #15 vAC.lo ^= var.lo
              2650 1403  ld   $03,y       10646  ld(hi('NEXTY'),Y)               #16
              2651 e000  jmp  y,$00       10647  jmp(Y,'NEXTY')                  #17
              2652 00f6  ld   $f6         10648  ld(-20/2)                       #18
                                          10649
                                          10650  # FREQM implementation
                                          10651  label('freqm#13')
freqm#13:     2653 1200  ld   ac,x        10652  ld(AC,X)                        #13 chan var, (operand from PREFX2)
              2654 0500  ld   [x]         10653  ld([X])                         #14
              2655 2003  anda $03         10654  anda(3)                         #15
              2656 9401  adda $01,y       10655  adda(1,Y)                       #16
              2657 10fc  ld   $fc,x       10656  ld(0xFC,X)                      #17
              2658 0118  ld   [$18]       10657  ld([vAC])                       #18
              2659 de00  st   [y,x++]     10658  st([Y,Xpp])                     #19
              265a 0119  ld   [$19]       10659  ld([vAC+1])                     #20
              265b ce00  st   [y,x]       10660  st([Y,X])                       #21
              265c 1403  ld   $03,y       10661  ld(hi('NEXTY'),Y)               #22
              265d e000  jmp  y,$00       10662  jmp(Y,'NEXTY')                  #23
              265e 00f3  ld   $f3         10663  ld(-26/2)                       #24
                                          10664
                                          10665  # FREQA implementation
                                          10666  label('freqa#13')
freqa#13:     265f 0500  ld   [x]         10667  ld([X])                         #13
              2660 a001  suba $01         10668  suba(1)                         #14
              2661 2003  anda $03         10669  anda(3)                         #15
              2662 9401  adda $01,y       10670  adda(1,Y)                       #16
              2663 10fc  ld   $fc,x       10671  ld(0xFC,X)                      #17
              2664 0118  ld   [$18]       10672  ld([vAC])                       #18
              2665 de00  st   [y,x++]     10673  st([Y,Xpp])                     #19
              2666 0119  ld   [$19]       10674  ld([vAC+1])                     #20
              2667 ce00  st   [y,x]       10675  st([Y,X])                       #21
              2668 1403  ld   $03,y       10676  ld(hi('NEXTY'),Y)               #22
              2669 e000  jmp  y,$00       10677  jmp(Y,'NEXTY')                  #23
              266a 00f3  ld   $f3         10678  ld(-26/2)                       #24
                                          10679
                                          10680  # FREQZ implementation
                                          10681  label('freqz#13')
freqz#13:     266b 9401  adda $01,y       10682  adda(1,Y)                       #13
              266c 10fc  ld   $fc,x       10683  ld(0xFC,X)                      #14
              266d 0000  ld   $00         10684  ld(0)                           #15
              266e de00  st   [y,x++]     10685  st([Y,Xpp])                     #16
              266f ce00  st   [y,x]       10686  st([Y,X])                       #17
              2670 1403  ld   $03,y       10687  ld(hi('NEXTY'),Y)               #18
              2671 e000  jmp  y,$00       10688  jmp(Y,'NEXTY')                  #19
              2672 00f5  ld   $f5         10689  ld(-22/2)                       #20
                                          10690
                                          10691  # VOLM implementation
                                          10692  label('volm#13')
volm#13:      2673 1200  ld   ac,x        10693  ld(AC,X)                        #13 chan var, (operand from PREFX2)
              2674 0500  ld   [x]         10694  ld([X])                         #14
              2675 2003  anda $03         10695  anda(3)                         #15
              2676 9401  adda $01,y       10696  adda(1,Y)                       #16
              2677 10fa  ld   $fa,x       10697  ld(0xFA,X)                      #17
              2678 0118  ld   [$18]       10698  ld([vAC])                       #18
              2679 ce00  st   [y,x]       10699  st([Y,X])                       #19
              267a 1403  ld   $03,y       10700  ld(hi('NEXTY'),Y)               #20
              267b e000  jmp  y,$00       10701  jmp(Y,'NEXTY')                  #21
              267c 00f4  ld   $f4         10702  ld(-24/2)                       #22
                                          10703
                                          10704  # VOLA implementation
                                          10705  label('vola#13')
vola#13:      267d 0500  ld   [x]         10706  ld([X])                         #13
              267e a001  suba $01         10707  suba(1)                         #14
              267f 2003  anda $03         10708  anda(3)                         #15
              2680 9401  adda $01,y       10709  adda(1,Y)                       #16
              2681 10fa  ld   $fa,x       10710  ld(0xFA,X)                      #17
              2682 003f  ld   $3f         10711  ld(63)                          #18
              2683 a118  suba [$18]       10712  suba([vAC])                     #19
              2684 8040  adda $40         10713  adda(64)                        #20
              2685 ce00  st   [y,x]       10714  st([Y,X])                       #21
              2686 1403  ld   $03,y       10715  ld(hi('NEXTY'),Y)               #22
              2687 e000  jmp  y,$00       10716  jmp(Y,'NEXTY')                  #23
              2688 00f3  ld   $f3         10717  ld(-26/2)                       #24
                                          10718
                                          10719  # MODA implementation
                                          10720  label('moda#13')
moda#13:      2689 0500  ld   [x]         10721  ld([X])                         #13
              268a a001  suba $01         10722  suba(1)                         #14
              268b 2003  anda $03         10723  anda(3)                         #15
              268c 9401  adda $01,y       10724  adda(1,Y)                       #16
              268d 10fb  ld   $fb,x       10725  ld(0xFB,X)                      #17
              268e 0118  ld   [$18]       10726  ld([vAC])                       #18
              268f ce00  st   [y,x]       10727  st([Y,X])                       #19
              2690 1403  ld   $03,y       10728  ld(hi('NEXTY'),Y)               #20
              2691 e000  jmp  y,$00       10729  jmp(Y,'NEXTY')                  #21
              2692 00f4  ld   $f4         10730  ld(-24/2)                       #22
                                          10731
                                          10732  # MODZ implementation
                                          10733  label('modz#13')
modz#13:      2693 2003  anda $03         10734  anda(3)                         #13
              2694 9401  adda $01,y       10735  adda(1,Y)                       #14
              2695 10fa  ld   $fa,x       10736  ld(0xFA,X)                      #15
              2696 0000  ld   $00         10737  ld(0)                           #16
              2697 de00  st   [y,x++]     10738  st([Y,Xpp])                     #17
              2698 0002  ld   $02         10739  ld(2)                           #18
              2699 ce00  st   [y,x]       10740  st([Y,X])                       #19
              269a 1403  ld   $03,y       10741  ld(hi('NEXTY'),Y)               #20
              269b e000  jmp  y,$00       10742  jmp(Y,'NEXTY')                  #21
              269c 00f4  ld   $f4         10743  ld(-24/2)                       #22
                                          10744
                                          10745
                                          10746  # SMPCPY implementation
                                          10747  label('smpcpy#13')
smpcpy#13:    269d 1400  ld   $00,y       10748  ld(0,Y)                         #13
              269e 00f1  ld   $f1         10749  ld(min(0,maxTicks-60/2))        #14
              269f 8115  adda [$15]       10750  adda([vTicks])                  #15
              26a0 e8d3  blt  .smpcpy#18  10751  blt('.smpcpy#18')               #16 not enough time left, so retry
              26a1 0500  ld   [x]         10752  ld([X])                         #17 dst address = [dst var]
              26a2 de00  st   [y,x++]     10753  st([Y,Xpp])                     #18
              26a3 c2b0  st   [$b0]       10754  st([0xB0])                      #19
              26a4 0500  ld   [x]         10755  ld([X])                         #20
              26a5 c2b1  st   [$b1]       10756  st([0xB1])                      #21
              26a6 1118  ld   [$18],x     10757  ld([vAC],X)                     #22 low byte of src address
              26a7 1519  ld   [$19],y     10758  ld([vAC+1],Y)                   #23 high byte of arc address
              26a8 0d00  ld   [y,x]       10759  ld([Y,X])                       #24
              26a9 c21d  st   [$1d]       10760  st([vTmp])                      #25 packed sample, 4:4
              26aa 1407  ld   $07,y       10761  ld(soundTable>>8,Y)             #26
              26ab 20f0  anda $f0         10762  anda(0xF0)                      #27 high nibble
              26ac 5003  ora  $03,x       10763  ora(0x03,X)                     #28
              26ad 0d00  ld   [y,x]       10764  ld([Y,X])                       #29 high nibble >>2
              26ae 11b0  ld   [$b0],x     10765  ld([0xB0],X)                    #30 low byte dst address
              26af 15b1  ld   [$b1],y     10766  ld([0xB1],Y)                    #31 high byte dst address
              26b0 ce00  st   [y,x]       10767  st([Y,X])                       #32 [0x0702 + i] = 6bit sample
              26b1 01b0  ld   [$b0]       10768  ld([0xB0])                      #33
              26b2 9004  adda $04,x       10769  adda(4,X)                       #34
              26b3 8008  adda $08         10770  adda(8)                         #35
              26b4 c2b0  st   [$b0]       10771  st([0xB0])                      #36
              26b5 011d  ld   [$1d]       10772  ld([vTmp])                      #37 packed sample, 4:4
              26b6 200f  anda $0f         10773  anda(0x0F)                      #38 low nibble
              26b7 8200  adda ac          10774  adda(AC)                        #39
              26b8 8200  adda ac          10775  adda(AC)                        #40 low nibble <<2
              26b9 ce00  st   [y,x]       10776  st([Y,X])                       #41 [0x0706 + i] = 6bit sample
              26ba 112b  ld   [$2b],x     10777  ld([sysArgs+7],X)               #42
              26bb 01b0  ld   [$b0]       10778  ld([0xB0])                      #43
              26bc c600  st   [x]         10779  st([X])                         #44
              26bd a002  suba $02         10780  suba(0x02)                      #45
              26be f0d0  beq  .smpcpy#48  10781  beq('.smpcpy#48')               #46 check for end sample
              26bf 0118  ld   [$18]       10782  ld([vAC])                       #47
              26c0 8001  adda $01         10783  adda(1)                         #48
              26c1 eccb  bne  .smpcpy#51  10784  bne('.smpcpy#51')               #49
              26c2 c218  st   [$18]       10785  st([vAC])                       #50
              26c3 0119  ld   [$19]       10786  ld([vAC+1])                     #51
              26c4 8001  adda $01         10787  adda(1)                         #52
              26c5 c219  st   [$19]       10788  st([vAC+1])                     #53
              26c6 0022  ld   $22         10789  ld(hi('PREFX2_PAGE'))           #54 ENTER is at $(n-1)ff, where n = instruction page
              26c7 c202  st   [$02]       10790  st([vCpuSelect])                #55 restore PREFX2 instruction page
              26c8 9401  adda $01,y       10791  adda(1,Y)                       #56 restart instruction
              26c9 e000  jmp  y,$00       10792  jmp(Y,'NEXTY')                  #57
              26ca 00e2  ld   $e2         10793  ld(-60/2)                       #58
                                          10794
                                          10795  label('.smpcpy#51')
.smpcpy#51:   26cb 0022  ld   $22         10796  ld(hi('PREFX2_PAGE'))           #51 ENTER is at $(n-1)ff, where n = instruction page
              26cc c202  st   [$02]       10797  st([vCpuSelect])                #52 restore PREFX2 instruction page
              26cd 9401  adda $01,y       10798  adda(1,Y)                       #53 restart instruction
              26ce e0cb  jmp  y,$cb       10799  jmp(Y,'REENTER')                #54
              26cf 00e3  ld   $e3         10800  ld(-58/2)                       #55
                                          10801
                                          10802  label('.smpcpy#48')
.smpcpy#48:   26d0 1403  ld   $03,y       10803  ld(hi('NEXTY'),Y)               #48
              26d1 e000  jmp  y,$00       10804  jmp(Y,'NEXTY')                  #49
              26d2 00e6  ld   $e6         10805  ld(-52/2)                       #50
                                          10806
                                          10807  label('.smpcpy#18')
.smpcpy#18:   26d3 0022  ld   $22         10808  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              26d4 c202  st   [$02]       10809  st([vCpuSelect])                #19 restore PREFX2 instruction page
              26d5 9401  adda $01,y       10810  adda(1,Y)                       #20 retry instruction
              26d6 e000  jmp  y,$00       10811  jmp(Y,'NEXTY')                  #21
              26d7 00f4  ld   $f4         10812  ld(-24/2)                       #22
                                          10813
                                          10814
                                          10815  # CMPWS implementation, vAC = vAC CMPWS var
                                          10816  #           LDW   var0
                                          10817  #           XORW  var1
                                          10818  #           BGE   CMPWS_GE
                                          10819  #           LDW   var0
                                          10820  #           BRA   CMPWS_RT
                                          10821  #CMPWS_GE   LDW   var0
                                          10822  #           SUBW  var1
                                          10823  #CMPWS_RT   RET
                                          10824  #label('cmpws#13')
                                          10825  #ld(min(0,maxTicks-38/2))        #13
                                          10826  #adda([vTicks])                  #14
                                          10827  #blt('.cmpws#17')                #15 not enough time left, so retry
                                          10828  #ld(0,Y)                         #16
                                          10829  #ld([X])                         #17
                                          10830  #st([Y,Xpp])                     #18
                                          10831  #st([0xB0])                      #19 cmp var.lo
                                          10832  #ld([X])                         #20
                                          10833  #st([0xB1])                      #21 cmp var.hi
                                          10834  #xora([vAC+1])                   #22
                                          10835  #blt('.cmpws#25')                #23 if < 0
                                          10836  #ld([vAC])                       #24 Low byte
                                          10837  #bmi('.cmpws#27')                #25
                                          10838  #suba([0xB0])                    #26
                                          10839  #st([vAC])                       #27 Store low result
                                          10840  #ora([0xB0])                     #28 Carry in bit 7
                                          10841  #anda(0x80,X)                    #29 Move carry to bit 0
                                          10842  #ld([vAC+1])                     #30
                                          10843  #suba([X])                       #31
                                          10844  #suba([0xB1])                    #32 sub var.hi with carry
                                          10845  #st([vAC+1])                     #33
                                          10846  #ld(hi('NEXTY'),Y)               #34
                                          10847  #jmp(Y,'NEXTY')                  #35
                                          10848  #ld(-38/2)                       #36
                                          10849  #
                                          10850  #label('.cmpws#25')
                                          10851  #ld(hi('REENTER'),Y)             #25
                                          10852  #jmp(Y,'REENTER')                #26
                                          10853  #ld(-30/2)                       #27
                                          10854  #
                                          10855  #label('.cmpws#27')
                                          10856  #st([vAC])                       #27 Store low result
                                          10857  #anda([0xB0])                    #28 Carry in bit 7
                                          10858  #anda(0x80,X)                    #29 Move carry to bit 0
                                          10859  #ld([vAC+1])                     #30
                                          10860  #suba([X])                       #31
                                          10861  #suba([0xB1])                    #32 sub var.hi with carry
                                          10862  #st([vAC+1])                     #33
                                          10863  #ld(hi('NEXTY'),Y)               #34
                                          10864  #jmp(Y,'NEXTY')                  #35
                                          10865  #ld(-38/2)                       #36
                                          10866  #
                                          10867  #label('.cmpws#17')
                                          10868  #ld(hi('PREFX2_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
                                          10869  #st([vCpuSelect])                #18 restore PREFX2 instruction page
                                          10870  #adda(1,Y)                       #19 retry instruction
                                          10871  #jmp(Y,'REENTER')                #20
                                          10872  #ld(-24/2)                       #21
                                          10873
                                          10874
              26d8 0200  nop              10875  fillers(until=0xff)
              26d9 0200  nop
              26da 0200  nop
              * 39 times
              26ff 0200  nop              10876  align(0x100, size=0x100)
                                          10877
                                          10878  #-----------------------------------------------------------------------
                                          10879  #       PREFX1 implementation page, (0x2700)
                                          10880  #-----------------------------------------------------------------------
                                          10881  #
                                          10882  # NOTE implementation: vAC = ROM:[NotesTable + vAC.lo*2], 22 + 30 cycles
                                          10883  label('note#13')
note#13:      2700 c21d  st   [$1d]       10884  st([vTmp])                      #13 low byte of low note return address
              2701 00f8  ld   $f8         10885  ld(min(0,maxTicks-46/2))        #14
              2702 8115  adda [$15]       10886  adda([vTicks])                  #15
              2703 e814  blt  .note#18    10887  blt('.note#18')                 #16 not enough time left, so retry
              2704 1409  ld   $09,y       10888  ld(hi('noteTrampoline'),Y)      #17
              2705 0118  ld   [$18]       10889  ld([vAC])                       #18 vAC.lo = note index
              2706 8200  adda ac          10890  adda(AC)                        #19 vAC.lo*2, (low note byte)
              2707 e0c0  jmp  y,$c0       10891  jmp(Y,'noteTrampoline')         #20
              2708 c219  st   [$19]       10892  st([vAC+1])                     #21 vAC.hi = vAC.lo*2
                                          10893  label('.note#28')
.note#28:     2709 c218  st   [$18]       10894  st([vAC])                       #28 vAC.lo = note.lo
              270a 0010  ld   $10         10895  ld('.note#41')                  #29
              270b c21d  st   [$1d]       10896  st([vTmp])                      #30 low byte of high note return address
              270c 1409  ld   $09,y       10897  ld(hi('noteTrampoline'),Y)      #31
              270d 0119  ld   [$19]       10898  ld([vAC+1])                     #32
              270e e0c0  jmp  y,$c0       10899  jmp(Y,'noteTrampoline')         #33
              270f 8001  adda $01         10900  adda(1)                         #34 vAC.lo*2 + 1, (high note byte)
                                          10901  label('.note#41')
.note#41:     2710 c219  st   [$19]       10902  st([vAC+1])                     #41
              2711 1403  ld   $03,y       10903  ld(hi('NEXTY'),Y)               #42
              2712 e000  jmp  y,$00       10904  jmp(Y,'NEXTY')                  #43
              2713 00e9  ld   $e9         10905  ld(-46/2)                       #44
                                          10906  label('.note#18')
.note#18:     2714 0023  ld   $23         10907  ld(hi('PREFX1_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2715 c202  st   [$02]       10908  st([vCpuSelect])                #19 restore PREFX1 instruction page
              2716 9401  adda $01,y       10909  adda(1,Y)                       #20 retry instruction
              2717 e000  jmp  y,$00       10910  jmp(Y,'NEXTY')                  #21
              2718 00f4  ld   $f4         10911  ld(-24/2)                       #22
                                          10912
                                          10913  # MIDI implementation: vAC = ROM:[NotesTable + (vAC.lo - 11)*2], 22 + 30 cycles
                                          10914  label('midi#13')
midi#13:      2719 c21d  st   [$1d]       10915  st([vTmp])                      #13 low byte of low midi return address
              271a 00f7  ld   $f7         10916  ld(min(0,maxTicks-48/2))        #14
              271b 8115  adda [$15]       10917  adda([vTicks])                  #15
              271c e82e  blt  .midi#18    10918  blt('.midi#18')                 #16 not enough time left, so retry
              271d 1409  ld   $09,y       10919  ld(hi('noteTrampoline'),Y)      #17
              271e 0118  ld   [$18]       10920  ld([vAC])                       #18 vAC.lo = midi index
              271f a00b  suba $0b         10921  suba(11)                        #19 vAC.lo -= 11
              2720 8200  adda ac          10922  adda(AC)                        #20 vAC.lo*2, (low midi byte)
              2721 e0c0  jmp  y,$c0       10923  jmp(Y,'noteTrampoline')         #21
              2722 c219  st   [$19]       10924  st([vAC+1])                     #22 vAC.hi = vAC.lo*2
                                          10925  label('.midi#29')
.midi#29:     2723 c218  st   [$18]       10926  st([vAC])                       #29 vAC.lo = midi.lo
              2724 002a  ld   $2a         10927  ld('.midi#42')                  #30
              2725 c21d  st   [$1d]       10928  st([vTmp])                      #31 low byte of high midi return address
              2726 1409  ld   $09,y       10929  ld(hi('noteTrampoline'),Y)      #32
              2727 0119  ld   [$19]       10930  ld([vAC+1])                     #33
              2728 e0c0  jmp  y,$c0       10931  jmp(Y,'noteTrampoline')         #34
              2729 8001  adda $01         10932  adda(1)                         #35 vAC.lo*2 + 1, (high midi byte)
                                          10933  label('.midi#42')
.midi#42:     272a c219  st   [$19]       10934  st([vAC+1])                     #42
              272b 1403  ld   $03,y       10935  ld(hi('REENTER'),Y)             #43
              272c e0cb  jmp  y,$cb       10936  jmp(Y,'REENTER')                #44
              272d 00e8  ld   $e8         10937  ld(-48/2)                       #45
                                          10938  label('.midi#18')
.midi#18:     272e 0023  ld   $23         10939  ld(hi('PREFX1_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              272f c202  st   [$02]       10940  st([vCpuSelect])                #19 restore PREFX1 instruction page
              2730 9401  adda $01,y       10941  adda(1,Y)                       #20 retry instruction
              2731 e000  jmp  y,$00       10942  jmp(Y,'NEXTY')                  #21
              2732 00f4  ld   $f4         10943  ld(-24/2)                       #22
                                          10944
                                          10945
              2733 0200  nop              10946  fillers(until=0xff)
              2734 0200  nop
              2735 0200  nop
              * 204 times
              27ff 0200  nop              10947  align(0x100, size=0x100)
                                          10948
                                          10949  #-----------------------------------------------------------------------
                                          10950  #       More vCPU instruction implementations, (0x2800)
                                          10951  #-----------------------------------------------------------------------
                                          10952  #
                                          10953  # ADDVI implementation
                                          10954  label('addvi#13')
addvi#13:     2800 1517  ld   [$17],y     10955  ld([vPC+1],Y)                   #13 vPC.hi
              2801 c22a  st   [$2a]       10956  st([sysArgs+6])                 #14 immediate 8bit
              2802 de00  st   [y,x++]     10957  st([Y,Xpp])                     #15 X++
              2803 00f6  ld   $f6         10958  ld(min(0,maxTicks-50/2))        #16
              2804 8115  adda [$15]       10959  adda([vTicks])                  #17
              2805 e833  blt  .addvi#20   10960  blt('.addvi#20')                #18 not enough time left, so retry
              2806 0d00  ld   [y,x]       10961  ld([Y,X])                       #19
              2807 d22b  st   [$2b],x     10962  st([sysArgs+7],X)               #20 dst var addr
              2808 1400  ld   $00,y       10963  ld(0,Y)                         #21
              2809 0500  ld   [x]         10964  ld([X])                         #22 dst low value
              280a c218  st   [$18]       10965  st([vAC])                       #23
              280b de00  st   [y,x++]     10966  st([Y,Xpp])                     #24 X++
              280c 0500  ld   [x]         10967  ld([X])                         #25 dst hi value
              280d c219  st   [$19]       10968  st([vAC+1])                     #26
              280e 012a  ld   [$2a]       10969  ld([sysArgs+6])                 #27
              280f 8118  adda [$18]       10970  adda([vAC])                     #28
              2810 c218  st   [$18]       10971  st([vAC])                       #29 Store low result
              2811 e823  blt  .addvi#32   10972  bmi('.addvi#32')                #30 Now figure out if there was a carry
              2812 a12a  suba [$2a]       10973  suba([sysArgs+6])               #31 Gets back the initial value of vAC
              2813 412a  ora  [$2a]       10974  ora([sysArgs+6])                #32 Carry in bit 7
              2814 3080  anda $80,x       10975  anda(0x80,X)                    #33 Move carry to bit 0
              2815 0500  ld   [x]         10976  ld([X])                         #34
              2816 8119  adda [$19]       10977  adda([vAC+1])                   #35 Add the high bytes with carry
              2817 c219  st   [$19]       10978  st([vAC+1])                     #36 Store high result
              2818 112b  ld   [$2b],x     10979  ld([sysArgs+7],X)               #37
              2819 0118  ld   [$18]       10980  ld([vAC])                       #38
              281a de00  st   [y,x++]     10981  st([Y,Xpp])                     #39
              281b 0119  ld   [$19]       10982  ld([vAC+1])                     #40
              281c c600  st   [x]         10983  st([X])                         #41
              281d 0116  ld   [$16]       10984  ld([vPC])                       #42
              281e 8001  adda $01         10985  adda(1)                         #43
              281f c216  st   [$16]       10986  st([vPC])                       #44
              2820 1403  ld   $03,y       10987  ld(hi('REENTER'),Y)             #45
              2821 e0cb  jmp  y,$cb       10988  jmp(Y,'REENTER')                #46
              2822 00e7  ld   $e7         10989  ld(-50/2)                       #47
                                          10990
                                          10991  label('.addvi#32')
.addvi#32:    2823 212a  anda [$2a]       10992  anda([sysArgs+6])               #32 Carry in bit 7
              2824 3080  anda $80,x       10993  anda(0x80,X)                    #33 Move carry to bit 0
              2825 0500  ld   [x]         10994  ld([X])                         #34
              2826 8119  adda [$19]       10995  adda([vAC+1])                   #35 Add the high bytes with carry
              2827 c219  st   [$19]       10996  st([vAC+1])                     #36 Store high result
              2828 112b  ld   [$2b],x     10997  ld([sysArgs+7],X)               #37
              2829 0118  ld   [$18]       10998  ld([vAC])                       #38
              282a de00  st   [y,x++]     10999  st([Y,Xpp])                     #39
              282b 0119  ld   [$19]       11000  ld([vAC+1])                     #40
              282c c600  st   [x]         11001  st([X])                         #41
              282d 0116  ld   [$16]       11002  ld([vPC])                       #42
              282e 8001  adda $01         11003  adda(1)                         #43
              282f c216  st   [$16]       11004  st([vPC])                       #44
              2830 1403  ld   $03,y       11005  ld(hi('REENTER'),Y)             #45
              2831 e0cb  jmp  y,$cb       11006  jmp(Y,'REENTER')                #46
              2832 00e7  ld   $e7         11007  ld(-50/2)                       #47
                                          11008
                                          11009  label('.addvi#20')
.addvi#20:    2833 0116  ld   [$16]       11010  ld([vPC])                       #20 retry instruction
              2834 a002  suba $02         11011  suba(2)                         #21
              2835 c216  st   [$16]       11012  st([vPC])                       #22
              2836 1403  ld   $03,y       11013  ld(hi('REENTER'),Y)             #23
              2837 e0cb  jmp  y,$cb       11014  jmp(Y,'REENTER')                #24
              2838 00f2  ld   $f2         11015  ld(-28/2)                       #25
                                          11016
                                          11017
                                          11018  # SUBVI implementation
                                          11019  label('subvi#13')
subvi#13:     2839 1517  ld   [$17],y     11020  ld([vPC+1],Y)                   #13 vPC.hi
              283a c22a  st   [$2a]       11021  st([sysArgs+6])                 #14 immediate 8bit
              283b de00  st   [y,x++]     11022  st([Y,Xpp])                     #15 X++
              283c 00f6  ld   $f6         11023  ld(min(0,maxTicks-50/2))        #16
              283d 8115  adda [$15]       11024  adda([vTicks])                  #17
              283e e86d  blt  .subvi#20   11025  blt('.subvi#20')                #18 not enough time left, so retry
              283f 0d00  ld   [y,x]       11026  ld([Y,X])                       #19
              2840 d22b  st   [$2b],x     11027  st([sysArgs+7],X)               #20 dst var addr
              2841 1400  ld   $00,y       11028  ld(0,Y)                         #21
              2842 0500  ld   [x]         11029  ld([X])                         #22 dst low value
              2843 c218  st   [$18]       11030  st([vAC])                       #23
              2844 de00  st   [y,x++]     11031  st([Y,Xpp])                     #24 X++
              2845 0500  ld   [x]         11032  ld([X])                         #25 dst hi value
              2846 c219  st   [$19]       11033  st([vAC+1])                     #26
              2847 112b  ld   [$2b],x     11034  ld([sysArgs+7],X)               #27 dst var addr
              2848 0500  ld   [x]         11035  ld([X])                         #28
              2849 e85c  blt  .subvi#31   11036  bmi('.subvi#31')                #29
              284a a12a  suba [$2a]       11037  suba([sysArgs+6])               #30
              284b c218  st   [$18]       11038  st([vAC])                       #31 store low result
              284c 412a  ora  [$2a]       11039  ora([sysArgs+6])                #32 carry in bit 7
              284d 3080  anda $80,x       11040  anda(0x80,X)                    #33 move carry to bit 0
              284e 0119  ld   [$19]       11041  ld([vAC+1])                     #34
              284f a500  suba [x]         11042  suba([X])                       #35
              2850 c219  st   [$19]       11043  st([vAC+1])                     #36 store high result
              2851 112b  ld   [$2b],x     11044  ld([sysArgs+7],X)               #37
              2852 0118  ld   [$18]       11045  ld([vAC])                       #38
              2853 de00  st   [y,x++]     11046  st([Y,Xpp])                     #39
              2854 0119  ld   [$19]       11047  ld([vAC+1])                     #40
              2855 c600  st   [x]         11048  st([X])                         #41
              2856 0116  ld   [$16]       11049  ld([vPC])                       #42
              2857 8001  adda $01         11050  adda(1)                         #43
              2858 c216  st   [$16]       11051  st([vPC])                       #44
              2859 1403  ld   $03,y       11052  ld(hi('REENTER'),Y)             #45
              285a e0cb  jmp  y,$cb       11053  jmp(Y,'REENTER')                #46
              285b 00e7  ld   $e7         11054  ld(-50/2)                       #47
                                          11055
                                          11056  label('.subvi#31')
.subvi#31:    285c c218  st   [$18]       11057  st([vAC])                       #31 store low result
              285d 212a  anda [$2a]       11058  anda([sysArgs+6])               #32 carry in bit 7
              285e 3080  anda $80,x       11059  anda(0x80,X)                    #33 move carry to bit 0
              285f 0119  ld   [$19]       11060  ld([vAC+1])                     #34
              2860 a500  suba [x]         11061  suba([X])                       #35
              2861 c219  st   [$19]       11062  st([vAC+1])                     #36 store high result
              2862 112b  ld   [$2b],x     11063  ld([sysArgs+7],X)               #37
              2863 0118  ld   [$18]       11064  ld([vAC])                       #38
              2864 de00  st   [y,x++]     11065  st([Y,Xpp])                     #39
              2865 0119  ld   [$19]       11066  ld([vAC+1])                     #40
              2866 c600  st   [x]         11067  st([X])                         #41
              2867 0116  ld   [$16]       11068  ld([vPC])                       #42
              2868 8001  adda $01         11069  adda(1)                         #43
              2869 c216  st   [$16]       11070  st([vPC])                       #44
              286a 1403  ld   $03,y       11071  ld(hi('REENTER'),Y)             #45
              286b e0cb  jmp  y,$cb       11072  jmp(Y,'REENTER')                #46
              286c 00e7  ld   $e7         11073  ld(-50/2)                       #47
                                          11074
                                          11075  label('.subvi#20')
.subvi#20:    286d 0116  ld   [$16]       11076  ld([vPC])                       #20 retry instruction
              286e a002  suba $02         11077  suba(2)                         #21
              286f c216  st   [$16]       11078  st([vPC])                       #22
              2870 1403  ld   $03,y       11079  ld(hi('REENTER'),Y)             #23
              2871 e0cb  jmp  y,$cb       11080  jmp(Y,'REENTER')                #24
              2872 00f2  ld   $f2         11081  ld(-28/2)                       #25
                                          11082
                                          11083
                                          11084  # OSCPX implementation
                                          11085  label('oscpx#13')
oscpx#13:     2873 d22a  st   [$2a],x     11086  st([sysArgs+6],X)               #13 sample address var
              2874 00fa  ld   $fa         11087  ld(min(0,maxTicks-42/2))        #14
              2875 8115  adda [$15]       11088  adda([vTicks])                  #15
              2876 e88f  blt  .oscpx#18   11089  blt('.oscpx#18')                #16 not enough time left, so retry
              2877 0500  ld   [x]         11090  ld([X])                         #17 sample address low byte
              2878 112b  ld   [$2b],x     11091  ld([sysArgs+7],X)               #18 index var
              2879 8500  adda [x]         11092  adda([X])                       #19 sample address low byte + index
              287a c21d  st   [$1d]       11093  st([vTmp])                      #20
              287b 012a  ld   [$2a]       11094  ld([sysArgs+6])                 #21
              287c 9001  adda $01,x       11095  adda(1,X)                       #22
              287d 0500  ld   [x]         11096  ld([X])                         #23
              287e 1600  ld   ac,y        11097  ld(AC,Y)                        #24 sample address high byte
              287f 111d  ld   [$1d],x     11098  ld([vTmp],X)                    #25
              2880 0d00  ld   [y,x]       11099  ld([Y,X])                       #26
              2881 20fc  anda $fc         11100  anda(0xFC)                      #27 6bit sample in upper 8bits
              2882 1407  ld   $07,y       11101  ld(soundTable>>8,Y)             #28
              2883 5003  ora  $03,x       11102  ora(0x03,X)                     #29
              2884 0d00  ld   [y,x]       11103  ld([Y,X])                       #30 6bit sample, (>>2)
              2885 9519  adda [$19],y     11104  adda([vAC+1],Y)                 #31 dest pixel address high byte
              2886 0118  ld   [$18]       11105  ld([vAC])                       #32 dest pixel address low byte
              2887 112b  ld   [$2b],x     11106  ld([sysArgs+7],X)               #33 index
              2888 8500  adda [x]         11107  adda([X])                       #34 sample address low byte + index
              2889 1200  ld   ac,x        11108  ld(AC,X)                        #35
              288a 01a3  ld   [$a3]       11109  ld([0xA3])                      #36 pixel colour
              288b ce00  st   [y,x]       11110  st([Y,X])                       #37
              288c 1403  ld   $03,y       11111  ld(hi('NEXTY'),Y)               #38
              288d e000  jmp  y,$00       11112  jmp(Y,'NEXTY')                  #39
              288e 00eb  ld   $eb         11113  ld(-42/2)                       #40
                                          11114
                                          11115  label('.oscpx#18')
.oscpx#18:    288f 0021  ld   $21         11116  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2890 c202  st   [$02]       11117  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2891 9401  adda $01,y       11118  adda(1,Y)                       #20 retry instruction
              2892 e000  jmp  y,$00       11119  jmp(Y,'NEXTY')                  #21
              2893 00f4  ld   $f4         11120  ld(-24/2)                       #22
                                          11121
                                          11122
                                          11123  # CMPWS implementation, vAC = vAC CMPWS var
                                          11124  #           LDW   var0
                                          11125  #           CMPHS var1.hi
                                          11126  #           SUBW  var1
                                          11127  label('cmpws#13')
cmpws#13:     2894 00e9  ld   $e9         11128  ld(-46/2)                       #13
              2895 c21d  st   [$1d]       11129  st([vTmp])                      #14
              2896 00f8  ld   $f8         11130  ld(min(0,maxTicks-46/2))        #15
              2897 8115  adda [$15]       11131  adda([vTicks])                  #16
              2898 e8c2  blt  .cmpws#19   11132  blt('.cmpws#19')                #17 not enough time left, so retry
              2899 1400  ld   $00,y       11133  ld(0,Y)                         #18
              289a 0500  ld   [x]         11134  ld([X])                         #19
              289b de00  st   [y,x++]     11135  st([Y,Xpp])                     #20
              289c c2b0  st   [$b0]       11136  st([0xB0])                      #21 cmp var.lo
              289d 0500  ld   [x]         11137  ld([X])                         #22
              289e c2b1  st   [$b1]       11138  st([0xB1])                      #23 cmp var.hi
              289f 6119  xora [$19]       11139  xora([vAC+1])                   #24
              28a0 f4b5  bge  .cmpws#27   11140  bpl('.cmpws#27')                #25 skip if same sign
              28a1 0119  ld   [$19]       11141  ld([vAC+1])                     #26
              28a2 e8a5  blt  $28a5       11142  bmi(pc()+3)                     #27
              28a3 fca6  bra  .cmpws#30   11143  bra(pc()+3)                     #28
                                          11144
                                          11145  label('.cmpws#29')
.cmpws#29:    28a4 0001  ld   $01         11146  ld(+1)                          #29    vAC < variable
              28a5 00ff  ld   $ff         11147  ld(-1)                          #29(!) vAC > variable
                                          11148
                                          11149  label('.cmpws#30')
.cmpws#30:    28a6 8500  adda [x]         11150  adda([X])                       #30
              28a7 c219  st   [$19]       11151  st([vAC+1])                     #31
                                          11152
                                          11153  label('.cmpws#32')
.cmpws#32:    28a8 0118  ld   [$18]       11154  ld([vAC])                       #32, #30 Low byte
              28a9 e8b8  blt  .cmpws#35   11155  bmi('.cmpws#35')                #33, #31
              28aa a1b0  suba [$b0]       11156  suba([0xB0])                    #34, #32
              28ab c218  st   [$18]       11157  st([vAC])                       #35, #33 Store low result
              28ac 41b0  ora  [$b0]       11158  ora([0xB0])                     #36, #34 Carry in bit 7
              28ad 3080  anda $80,x       11159  anda(0x80,X)                    #37, #35 Move carry to bit 0
              28ae 0119  ld   [$19]       11160  ld([vAC+1])                     #38, #36
              28af a500  suba [x]         11161  suba([X])                       #39, #37
              28b0 a1b1  suba [$b1]       11162  suba([0xB1])                    #40, #38 sub var.hi with carry
              28b1 c219  st   [$19]       11163  st([vAC+1])                     #41, #39
              28b2 1403  ld   $03,y       11164  ld(hi('NEXTY'),Y)               #42, #40
              28b3 e000  jmp  y,$00       11165  jmp(Y,'NEXTY')                  #43, #41
              28b4 011d  ld   [$1d]       11166  ld([vTmp])                      #44, #42
                                          11167
                                          11168  label('.cmpws#27')
.cmpws#27:    28b5 00ea  ld   $ea         11169  ld(-44/2)                       #27
              28b6 fca8  bra  .cmpws#32   11170  bra('.cmpws#32')                #28
              28b7 c21d  st   [$1d]       11171  st([vTmp])                      #29
                                          11172
                                          11173  label('.cmpws#35')
.cmpws#35:    28b8 c218  st   [$18]       11174  st([vAC])                       #35, #33 Store low result
              28b9 21b0  anda [$b0]       11175  anda([0xB0])                    #36, #34 Carry in bit 7
              28ba 3080  anda $80,x       11176  anda(0x80,X)                    #37, #35 Move carry to bit 0
              28bb 0119  ld   [$19]       11177  ld([vAC+1])                     #38, #36
              28bc a500  suba [x]         11178  suba([X])                       #39, #37
              28bd a1b1  suba [$b1]       11179  suba([0xB1])                    #40, #38 sub var.hi with carry
              28be c219  st   [$19]       11180  st([vAC+1])                     #41, #39
              28bf 1403  ld   $03,y       11181  ld(hi('NEXTY'),Y)               #42, #40
              28c0 e000  jmp  y,$00       11182  jmp(Y,'NEXTY')                  #43, #41
              28c1 011d  ld   [$1d]       11183  ld([vTmp])                      #44, #42
                                          11184
                                          11185  label('.cmpws#19')
.cmpws#19:    28c2 0022  ld   $22         11186  ld(hi('PREFX2_PAGE'))           #19 ENTER is at $(n-1)ff, where n = instruction page
              28c3 c202  st   [$02]       11187  st([vCpuSelect])                #20 restore PREFX2 instruction page
              28c4 9401  adda $01,y       11188  adda(1,Y)                       #21 retry instruction
              28c5 e0cb  jmp  y,$cb       11189  jmp(Y,'REENTER')                #22
              28c6 00f3  ld   $f3         11190  ld(-26/2)                       #23
                                          11191
                                          11192
                                          11193  # CMPWU implementation, vAC = vAC CMPWU var
                                          11194  #           LDW   var0
                                          11195  #           CMPHU var1.hi
                                          11196  #           SUBW  var1
                                          11197  label('cmpwu#13')
cmpwu#13:     28c7 00e9  ld   $e9         11198  ld(-46/2)                       #13
              28c8 c21d  st   [$1d]       11199  st([vTmp])                      #14
              28c9 00f8  ld   $f8         11200  ld(min(0,maxTicks-46/2))        #15
              28ca 8115  adda [$15]       11201  adda([vTicks])                  #16
              28cb e8c2  blt  .cmpws#19   11202  blt('.cmpws#19')                #17 not enough time left, so retry, (use .cmpws#19)
              28cc 1400  ld   $00,y       11203  ld(0,Y)                         #18
              28cd 0500  ld   [x]         11204  ld([X])                         #19
              28ce de00  st   [y,x++]     11205  st([Y,Xpp])                     #20
              28cf c2b0  st   [$b0]       11206  st([0xB0])                      #21 cmp var.lo
              28d0 0500  ld   [x]         11207  ld([X])                         #22
              28d1 c2b1  st   [$b1]       11208  st([0xB1])                      #23 cmp var.hi
              28d2 6119  xora [$19]       11209  xora([vAC+1])                   #24
              28d3 f4b5  bge  .cmpws#27   11210  bpl('.cmpws#27')                #25 skip if same sign, (use .cmpws#27)
              28d4 0119  ld   [$19]       11211  ld([vAC+1])                     #26
              28d5 e8a4  blt  .cmpws#29   11212  bmi('.cmpws#29')                #27 use .cmpws#29
              28d6 fca6  bra  .cmpws#30   11213  bra('.cmpws#30')                #28 use .cmpws#30
              28d7 00ff  ld   $ff         11214  ld(-1)                          #29 vAC > variable
                                          11215
                                          11216
              28d8 0200  nop              11217  fillers(until=0xff)
              28d9 0200  nop
              28da 0200  nop
              * 39 times
              28ff 0200  nop              11218  align(0x100, size=0x100)
                                          11219
                                          11220  #-----------------------------------------------------------------------
                                          11221  #       More vCPU instruction implementations, (0x2900)
                                          11222  #-----------------------------------------------------------------------
                                          11223  #
                                          11224  # LEEKA implementation
                                          11225  label('leeka#13')
leeka#13:     2900 c21d  st   [$1d]       11226  st([vTmp])                      #13
              2901 00f9  ld   $f9         11227  ld(min(0,maxTicks-44/2))        #14
              2902 8115  adda [$15]       11228  adda([vTicks])                  #15
              2903 e81e  blt  .leeka#18   11229  blt('.leeka#18')                #16 not enough time left, so retry
              2904 1519  ld   [$19],y     11230  ld([vAC+1],Y)                   #17
              2905 1118  ld   [$18],x     11231  ld([vAC],X)                     #18
              2906 0d00  ld   [y,x]       11232  ld([Y,X])                       #19 peek [vAC]
              2907 de00  st   [y,x++]     11233  st([Y,Xpp])                     #20
              2908 c2b0  st   [$b0]       11234  st([0xB0])                      #21
              2909 0d00  ld   [y,x]       11235  ld([Y,X])                       #22 peek [vAC+1]
              290a de00  st   [y,x++]     11236  st([Y,Xpp])                     #23
              290b c2b1  st   [$b1]       11237  st([0xB1])                      #24
              290c 0d00  ld   [y,x]       11238  ld([Y,X])                       #25 peek [vAC+2]
              290d de00  st   [y,x++]     11239  st([Y,Xpp])                     #26
              290e c2b2  st   [$b2]       11240  st([0xB2])                      #27
              290f 0d00  ld   [y,x]       11241  ld([Y,X])                       #28 peek [vAC+3]
              2910 c2b3  st   [$b3]       11242  st([0xB3])                      #29
              2911 1400  ld   $00,y       11243  ld(0,Y)                         #30
              2912 111d  ld   [$1d],x     11244  ld([vTmp],X)                    #31 dst var
              2913 01b0  ld   [$b0]       11245  ld([0xB0])                      #32
              2914 de00  st   [y,x++]     11246  st([Y,Xpp])                     #33 [var.0] = peek [vAC]
              2915 01b1  ld   [$b1]       11247  ld([0xB1])                      #34
              2916 de00  st   [y,x++]     11248  st([Y,Xpp])                     #35 [var.1] = peek [vAC+1]
              2917 01b2  ld   [$b2]       11249  ld([0xB2])                      #36
              2918 de00  st   [y,x++]     11250  st([Y,Xpp])                     #37 [var.2] = peek [vAC+2]
              2919 01b3  ld   [$b3]       11251  ld([0xB3])                      #38
              291a ce00  st   [y,x]       11252  st([Y,X])                       #39 [var.3] = peek [vAC+3]
              291b 1403  ld   $03,y       11253  ld(hi('NEXTY'),Y)               #40
              291c e000  jmp  y,$00       11254  jmp(Y,'NEXTY')                  #41
              291d 00ea  ld   $ea         11255  ld(-44/2)                       #42
                                          11256
                                          11257  label('.leeka#18')
.leeka#18:    291e 0022  ld   $22         11258  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              291f c202  st   [$02]       11259  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2920 9401  adda $01,y       11260  adda(1,Y)                       #20 retry instruction
              2921 e000  jmp  y,$00       11261  jmp(Y,'NEXTY')                  #21
              2922 00f4  ld   $f4         11262  ld(-24/2)                       #22
                                          11263
                                          11264
                                          11265  # LOKEA implementation
                                          11266  label('lokea#13')
lokea#13:     2923 1200  ld   ac,x        11267  ld(AC,X)                        #13
              2924 00f9  ld   $f9         11268  ld(min(0,maxTicks-44/2))        #14
              2925 8115  adda [$15]       11269  adda([vTicks])                  #15
              2926 e840  blt  .lokea#18   11270  blt('.lokea#18')                #16 not enough time left, so retry
              2927 1400  ld   $00,y       11271  ld(0,Y)                         #17
              2928 0500  ld   [x]         11272  ld([X])                         #18 var.0
              2929 de00  st   [y,x++]     11273  st([Y,Xpp])                     #19
              292a c2b0  st   [$b0]       11274  st([0xB0])                      #20
              292b 0500  ld   [x]         11275  ld([X])                         #21 var.1
              292c de00  st   [y,x++]     11276  st([Y,Xpp])                     #22
              292d c2b1  st   [$b1]       11277  st([0xB1])                      #23
              292e 0500  ld   [x]         11278  ld([X])                         #24 var.2
              292f de00  st   [y,x++]     11279  st([Y,Xpp])                     #25
              2930 c2b2  st   [$b2]       11280  st([0xB2])                      #26
              2931 0500  ld   [x]         11281  ld([X])                         #27 var.3
              2932 c2b3  st   [$b3]       11282  st([0xB3])                      #28
              2933 1118  ld   [$18],x     11283  ld([vAC],X)                     #29
              2934 1519  ld   [$19],y     11284  ld([vAC+1],Y)                   #30
              2935 01b0  ld   [$b0]       11285  ld([0xB0])                      #31
              2936 de00  st   [y,x++]     11286  st([Y,Xpp])                     #32 poke [vAC], var.0
              2937 01b1  ld   [$b1]       11287  ld([0xB1])                      #33
              2938 de00  st   [y,x++]     11288  st([Y,Xpp])                     #34 poke [vAC], var.1
              2939 01b2  ld   [$b2]       11289  ld([0xB2])                      #35
              293a de00  st   [y,x++]     11290  st([Y,Xpp])                     #36 poke [vAC], var.2
              293b 01b3  ld   [$b3]       11291  ld([0xB3])                      #37
              293c ce00  st   [y,x]       11292  st([Y,X])                       #38 poke [vAC], var.3
              293d 1403  ld   $03,y       11293  ld(hi('REENTER'),Y)             #39
              293e e0cb  jmp  y,$cb       11294  jmp(Y,'REENTER')                #40
              293f 00ea  ld   $ea         11295  ld(-44/2)                       #41
                                          11296
                                          11297  label('.lokea#18')
.lokea#18:    2940 0022  ld   $22         11298  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2941 c202  st   [$02]       11299  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2942 9401  adda $01,y       11300  adda(1,Y)                       #20 retry instruction
              2943 e000  jmp  y,$00       11301  jmp(Y,'NEXTY')                  #21
              2944 00f4  ld   $f4         11302  ld(-24/2)                       #22
                                          11303
                                          11304
                                          11305  # FEEKA implementation
                                          11306  label('feeka#13')
feeka#13:     2945 1519  ld   [$19],y     11307  ld([vAC+1],Y)                   #13
              2946 00f7  ld   $f7         11308  ld(min(0,maxTicks-48/2))        #14
              2947 8115  adda [$15]       11309  adda([vTicks])                  #15
              2948 e867  blt  .feeka#18   11310  blt('.feeka#18')                #16 not enough time left, so retry
              2949 1118  ld   [$18],x     11311  ld([vAC],X)                     #17
              294a 0d00  ld   [y,x]       11312  ld([Y,X])                       #18 peek [vAC]
              294b de00  st   [y,x++]     11313  st([Y,Xpp])                     #19
              294c c2b0  st   [$b0]       11314  st([0xB0])                      #20
              294d 0d00  ld   [y,x]       11315  ld([Y,X])                       #21 peek [vAC+1]
              294e de00  st   [y,x++]     11316  st([Y,Xpp])                     #22
              294f c2b1  st   [$b1]       11317  st([0xB1])                      #23
              2950 0d00  ld   [y,x]       11318  ld([Y,X])                       #24 peek [vAC+2]
              2951 de00  st   [y,x++]     11319  st([Y,Xpp])                     #25
              2952 c2b2  st   [$b2]       11320  st([0xB2])                      #26
              2953 0d00  ld   [y,x]       11321  ld([Y,X])                       #27 peek [vAC+3]
              2954 de00  st   [y,x++]     11322  st([Y,Xpp])                     #28
              2955 c2b3  st   [$b3]       11323  st([0xB3])                      #29
              2956 0d00  ld   [y,x]       11324  ld([Y,X])                       #30 peek [vAC+4]
              2957 c2b4  st   [$b4]       11325  st([0xB4])                      #31
              2958 1400  ld   $00,y       11326  ld(0,Y)                         #32
              2959 111d  ld   [$1d],x     11327  ld([vTmp],X)                    #33 dst var
              295a 01b0  ld   [$b0]       11328  ld([0xB0])                      #34
              295b de00  st   [y,x++]     11329  st([Y,Xpp])                     #35 [var.0] = peek [vAC]
              295c 01b1  ld   [$b1]       11330  ld([0xB1])                      #36
              295d de00  st   [y,x++]     11331  st([Y,Xpp])                     #37 [var.1] = peek [vAC+1]
              295e 01b2  ld   [$b2]       11332  ld([0xB2])                      #38
              295f de00  st   [y,x++]     11333  st([Y,Xpp])                     #39 [var.2] = peek [vAC+2]
              2960 01b3  ld   [$b3]       11334  ld([0xB3])                      #40
              2961 ce00  st   [y,x]       11335  st([Y,X])                       #41 [var.3] = peek [vAC+3]
              2962 01b4  ld   [$b4]       11336  ld([0xB4])                      #42
              2963 ce00  st   [y,x]       11337  st([Y,X])                       #43 [var.4] = peek [vAC+4]
              2964 1403  ld   $03,y       11338  ld(hi('NEXTY'),Y)               #44
              2965 e000  jmp  y,$00       11339  jmp(Y,'NEXTY')                  #45
              2966 00e8  ld   $e8         11340  ld(-48/2)                       #46
                                          11341
                                          11342  label('.feeka#18')
.feeka#18:    2967 0022  ld   $22         11343  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2968 c202  st   [$02]       11344  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2969 9401  adda $01,y       11345  adda(1,Y)                       #20 retry instruction
              296a e000  jmp  y,$00       11346  jmp(Y,'NEXTY')                  #21
              296b 00f4  ld   $f4         11347  ld(-24/2)                       #22
                                          11348
                                          11349
                                          11350  # FOKEA implementation
                                          11351  label('fokea#13')
fokea#13:     296c 1200  ld   ac,x        11352  ld(AC,X)                        #13 var.0
              296d 00f7  ld   $f7         11353  ld(min(0,maxTicks-48/2))        #14
              296e 8115  adda [$15]       11354  adda([vTicks])                  #15
              296f e88e  blt  .fokea#18   11355  blt('.fokea#18')                #16 not enough time left, so retry
              2970 1400  ld   $00,y       11356  ld(0,Y)                         #17
              2971 0500  ld   [x]         11357  ld([X])                         #18 [var.0]
              2972 de00  st   [y,x++]     11358  st([Y,Xpp])                     #19
              2973 c2b0  st   [$b0]       11359  st([0xB0])                      #20
              2974 0500  ld   [x]         11360  ld([X])                         #21 [var.1]
              2975 de00  st   [y,x++]     11361  st([Y,Xpp])                     #22
              2976 c2b1  st   [$b1]       11362  st([0xB1])                      #23
              2977 0500  ld   [x]         11363  ld([X])                         #24 [var.2]
              2978 de00  st   [y,x++]     11364  st([Y,Xpp])                     #25
              2979 c2b2  st   [$b2]       11365  st([0xB2])                      #26
              297a 0500  ld   [x]         11366  ld([X])                         #27 [var.3]
              297b de00  st   [y,x++]     11367  st([Y,Xpp])                     #28
              297c c2b3  st   [$b3]       11368  st([0xB3])                      #29
              297d 0500  ld   [x]         11369  ld([X])                         #30 [var.4]
              297e c2b4  st   [$b4]       11370  st([0xB4])                      #31
              297f 1118  ld   [$18],x     11371  ld([vAC],X)                     #32
              2980 1519  ld   [$19],y     11372  ld([vAC+1],Y)                   #33
              2981 01b0  ld   [$b0]       11373  ld([0xB0])                      #34
              2982 de00  st   [y,x++]     11374  st([Y,Xpp])                     #35 poke [vAC], [var.0]
              2983 01b1  ld   [$b1]       11375  ld([0xB1])                      #36
              2984 de00  st   [y,x++]     11376  st([Y,Xpp])                     #37 poke [vAC], [var.1]
              2985 01b2  ld   [$b2]       11377  ld([0xB2])                      #38
              2986 de00  st   [y,x++]     11378  st([Y,Xpp])                     #39 poke [vAC], [var.2]
              2987 01b3  ld   [$b3]       11379  ld([0xB3])                      #40
              2988 ce00  st   [y,x]       11380  st([Y,X])                       #41 poke [vAC], [var.3]
              2989 01b4  ld   [$b4]       11381  ld([0xB4])                      #42
              298a ce00  st   [y,x]       11382  st([Y,X])                       #43 poke [vAC], [var.4]
              298b 1403  ld   $03,y       11383  ld(hi('NEXTY'),Y)               #44
              298c e000  jmp  y,$00       11384  jmp(Y,'NEXTY')                  #45
              298d 00e8  ld   $e8         11385  ld(-48/2)                       #46
                                          11386
                                          11387  label('.fokea#18')
.fokea#18:    298e 0022  ld   $22         11388  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              298f c202  st   [$02]       11389  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2990 9401  adda $01,y       11390  adda(1,Y)                       #20 retry instruction
              2991 e000  jmp  y,$00       11391  jmp(Y,'NEXTY')                  #21
              2992 00f4  ld   $f4         11392  ld(-24/2)                       #22
                                          11393
                                          11394
                                          11395  # SWAPB implementation
                                          11396  label('swapb#13')
swapb#13:     2993 00f8  ld   $f8         11397  ld(min(0,maxTicks-46/2))        #13
              2994 8115  adda [$15]       11398  adda([vTicks])                  #14
              2995 e8b3  blt  .swapb#17   11399  blt('.swapb#17')                #15 not enough time left, so retry
              2996 1400  ld   $00,y       11400  ld(0,Y)                         #16
              2997 0500  ld   [x]         11401  ld([X])                         #17
              2998 de00  st   [y,x++]     11402  st([Y,Xpp])                     #18
              2999 c2b2  st   [$b2]       11403  st([0xB2])                      #19 var1.lo
              299a 0500  ld   [x]         11404  ld([X])                         #20
              299b c2b3  st   [$b3]       11405  st([0xB3])                      #21 var1.hi
              299c 112b  ld   [$2b],x     11406  ld([sysArgs+7],X)               #22 var0
              299d 0500  ld   [x]         11407  ld([X])                         #23
              299e de00  st   [y,x++]     11408  st([Y,Xpp])                     #24
              299f c2b4  st   [$b4]       11409  st([0xB4])                      #25 var0.lo
              29a0 0500  ld   [x]         11410  ld([X])                         #26
              29a1 c2b5  st   [$b5]       11411  st([0xB5])                      #27 var0.hi
              29a2 11b2  ld   [$b2],x     11412  ld([0xB2],X)                    #28
              29a3 15b3  ld   [$b3],y     11413  ld([0xB3],Y)                    #29
              29a4 0d00  ld   [y,x]       11414  ld([Y,X])                       #30
              29a5 c2b1  st   [$b1]       11415  st([0xB1])                      #31 tmp1 = [var1]
              29a6 11b4  ld   [$b4],x     11416  ld([0xB4],X)                    #32
              29a7 15b5  ld   [$b5],y     11417  ld([0xB5],Y)                    #33
              29a8 0d00  ld   [y,x]       11418  ld([Y,X])                       #34
              29a9 c2b0  st   [$b0]       11419  st([0xB0])                      #35 tmp0 = [var0]
              29aa 01b1  ld   [$b1]       11420  ld([0xB1])                      #36
              29ab ce00  st   [y,x]       11421  st([Y,X])                       #37 [var0] = tmp1
              29ac 11b2  ld   [$b2],x     11422  ld([0xB2],X)                    #38
              29ad 15b3  ld   [$b3],y     11423  ld([0xB3],Y)                    #39
              29ae 01b0  ld   [$b0]       11424  ld([0xB0])                      #40
              29af ce00  st   [y,x]       11425  st([Y,X])                       #41 [var1] = tmp0
              29b0 1403  ld   $03,y       11426  ld(hi('NEXTY'),Y)               #42
              29b1 e000  jmp  y,$00       11427  jmp(Y,'NEXTY')                  #43
              29b2 00e9  ld   $e9         11428  ld(-46/2)                       #44
                                          11429
                                          11430  label('.swapb#17')
.swapb#17:    29b3 0021  ld   $21         11431  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              29b4 c202  st   [$02]       11432  st([vCpuSelect])                #18 restore PREFX3 instruction page
              29b5 9401  adda $01,y       11433  adda(1,Y)                       #19 retry instruction
              29b6 e0cb  jmp  y,$cb       11434  jmp(Y,'REENTER')                #20
              29b7 00f4  ld   $f4         11435  ld(-24/2)                       #21
                                          11436
                                          11437
                                          11438  # SWAPW implementation
                                          11439  label('swapw#13')
swapw#13:     29b8 00f2  ld   $f2         11440  ld(min(0,maxTicks-58/2))        #13
              29b9 8115  adda [$15]       11441  adda([vTicks])                  #14
              29ba e8e4  blt  .swapw#17   11442  blt('.swapw#17')                #15 not enough time left, so retry
              29bb 1400  ld   $00,y       11443  ld(0,Y)                         #16
              29bc 0500  ld   [x]         11444  ld([X])                         #17
              29bd de00  st   [y,x++]     11445  st([Y,Xpp])                     #18
              29be c2b2  st   [$b2]       11446  st([0xB2])                      #19 var1.lo
              29bf 0500  ld   [x]         11447  ld([X])                         #20
              29c0 c2b3  st   [$b3]       11448  st([0xB3])                      #21 var1.hi
              29c1 112b  ld   [$2b],x     11449  ld([sysArgs+7],X)               #22 var0
              29c2 0500  ld   [x]         11450  ld([X])                         #23
              29c3 de00  st   [y,x++]     11451  st([Y,Xpp])                     #24
              29c4 c2b4  st   [$b4]       11452  st([0xB4])                      #25 var0.lo
              29c5 0500  ld   [x]         11453  ld([X])                         #26
              29c6 c2b5  st   [$b5]       11454  st([0xB5])                      #27 var0.hi
              29c7 11b2  ld   [$b2],x     11455  ld([0xB2],X)                    #28
              29c8 15b3  ld   [$b3],y     11456  ld([0xB3],Y)                    #29
              29c9 0d00  ld   [y,x]       11457  ld([Y,X])                       #30
              29ca de00  st   [y,x++]     11458  st([Y,Xpp])                     #31
              29cb c2b0  st   [$b0]       11459  st([0xB0])                      #32 temp.lo = var1.lo
              29cc 0d00  ld   [y,x]       11460  ld([Y,X])                       #33
              29cd c2b1  st   [$b1]       11461  st([0xB1])                      #34 temp.hi = var1.hi
              29ce 11b4  ld   [$b4],x     11462  ld([0xB4],X)                    #35
              29cf 15b5  ld   [$b5],y     11463  ld([0xB5],Y)                    #36
              29d0 0d00  ld   [y,x]       11464  ld([Y,X])                       #37
              29d1 de00  st   [y,x++]     11465  st([Y,Xpp])                     #38
              29d2 c218  st   [$18]       11466  st([vAC])                       #39
              29d3 0d00  ld   [y,x]       11467  ld([Y,X])                       #40
              29d4 c219  st   [$19]       11468  st([vAC+1])                     #41
              29d5 11b2  ld   [$b2],x     11469  ld([0xB2],X)                    #42
              29d6 15b3  ld   [$b3],y     11470  ld([0xB3],Y)                    #43
              29d7 0118  ld   [$18]       11471  ld([vAC])                       #44
              29d8 de00  st   [y,x++]     11472  st([Y,Xpp])                     #45 var1.lo = var0.lo
              29d9 0119  ld   [$19]       11473  ld([vAC+1])                     #46
              29da ce00  st   [y,x]       11474  st([Y,X])                       #47 var1.lo = var0.lo
              29db 11b4  ld   [$b4],x     11475  ld([0xB4],X)                    #48
              29dc 15b5  ld   [$b5],y     11476  ld([0xB5],Y)                    #49
              29dd 01b0  ld   [$b0]       11477  ld([0xB0])                      #50
              29de de00  st   [y,x++]     11478  st([Y,Xpp])                     #51 var0.lo = temp.lo
              29df 01b1  ld   [$b1]       11479  ld([0xB1])                      #52
              29e0 ce00  st   [y,x]       11480  st([Y,X])                       #53 var0.hi = temp.hi
              29e1 1403  ld   $03,y       11481  ld(hi('NEXTY'),Y)               #54
              29e2 e000  jmp  y,$00       11482  jmp(Y,'NEXTY')                  #55
              29e3 00e3  ld   $e3         11483  ld(-58/2)                       #56
                                          11484
                                          11485  label('.swapw#17')
.swapw#17:    29e4 0021  ld   $21         11486  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              29e5 c202  st   [$02]       11487  st([vCpuSelect])                #18 restore PREFX3 instruction page
              29e6 9401  adda $01,y       11488  adda(1,Y)                       #19 retry instruction
              29e7 e0cb  jmp  y,$cb       11489  jmp(Y,'REENTER')                #20
              29e8 00f4  ld   $f4         11490  ld(-24/2)                       #21
                                          11491
                                          11492
              29e9 0200  nop              11493  fillers(until=0xff)
              29ea 0200  nop
              29eb 0200  nop
              * 22 times
              29ff 0200  nop              11494  align(0x100, size=0x100)
                                          11495
                                          11496  #-----------------------------------------------------------------------
                                          11497  #       More vCPU instruction implementations, (0x2A00)
                                          11498  #-----------------------------------------------------------------------
                                          11499  #
                                          11500  # MEEKA implementation
                                          11501  label('meeka#13')
meeka#13:     2a00 c21d  st   [$1d]       11502  st([vTmp])                      #13
              2a01 00ef  ld   $ef         11503  ld(min(0,maxTicks-64/2))        #14
              2a02 8115  adda [$15]       11504  adda([vTicks])                  #15
              2a03 e832  blt  .meeka#18   11505  blt('.meeka#18')                #16 not enough time left, so retry
              2a04 1519  ld   [$19],y     11506  ld([vAC+1],Y)                   #17
              2a05 1118  ld   [$18],x     11507  ld([vAC],X)                     #18
              2a06 0d00  ld   [y,x]       11508  ld([Y,X])                       #19 peek [vAC]
              2a07 de00  st   [y,x++]     11509  st([Y,Xpp])                     #20
              2a08 c2b0  st   [$b0]       11510  st([0xB0])                      #21
              2a09 0d00  ld   [y,x]       11511  ld([Y,X])                       #22 peek [vAC+1]
              2a0a de00  st   [y,x++]     11512  st([Y,Xpp])                     #23
              2a0b c2b1  st   [$b1]       11513  st([0xB1])                      #24
              2a0c 0d00  ld   [y,x]       11514  ld([Y,X])                       #25 peek [vAC+2]
              2a0d de00  st   [y,x++]     11515  st([Y,Xpp])                     #26
              2a0e c2b2  st   [$b2]       11516  st([0xB2])                      #27
              2a0f 0d00  ld   [y,x]       11517  ld([Y,X])                       #28 peek [vAC+3]
              2a10 de00  st   [y,x++]     11518  st([Y,Xpp])                     #29
              2a11 c2b3  st   [$b3]       11519  st([0xB3])                      #30
              2a12 0d00  ld   [y,x]       11520  ld([Y,X])                       #31 peek [vAC+4]
              2a13 de00  st   [y,x++]     11521  st([Y,Xpp])                     #32
              2a14 c2b4  st   [$b4]       11522  st([0xB4])                      #33
              2a15 0d00  ld   [y,x]       11523  ld([Y,X])                       #34 peek [vAC+5]
              2a16 de00  st   [y,x++]     11524  st([Y,Xpp])                     #35
              2a17 c2b5  st   [$b5]       11525  st([0xB5])                      #36
              2a18 0d00  ld   [y,x]       11526  ld([Y,X])                       #37 peek [vAC+6]
              2a19 de00  st   [y,x++]     11527  st([Y,Xpp])                     #38
              2a1a c2b6  st   [$b6]       11528  st([0xB6])                      #39
              2a1b 0d00  ld   [y,x]       11529  ld([Y,X])                       #40 peek [vAC+7]
              2a1c c2b7  st   [$b7]       11530  st([0xB7])                      #41
              2a1d 1400  ld   $00,y       11531  ld(0,Y)                         #42
              2a1e 111d  ld   [$1d],x     11532  ld([vTmp],X)                    #43 dst var
              2a1f 01b0  ld   [$b0]       11533  ld([0xB0])                      #44
              2a20 de00  st   [y,x++]     11534  st([Y,Xpp])                     #45 [var.0] = peek [vAC]
              2a21 01b1  ld   [$b1]       11535  ld([0xB1])                      #46
              2a22 de00  st   [y,x++]     11536  st([Y,Xpp])                     #47 [var.1] = peek [vAC+1]
              2a23 01b2  ld   [$b2]       11537  ld([0xB2])                      #48
              2a24 de00  st   [y,x++]     11538  st([Y,Xpp])                     #49 [var.2] = peek [vAC+2]
              2a25 01b3  ld   [$b3]       11539  ld([0xB3])                      #50
              2a26 de00  st   [y,x++]     11540  st([Y,Xpp])                     #51 [var.3] = peek [vAC+3]
              2a27 01b4  ld   [$b4]       11541  ld([0xB4])                      #52
              2a28 de00  st   [y,x++]     11542  st([Y,Xpp])                     #53 [var.0] = peek [vAC+4]
              2a29 01b5  ld   [$b5]       11543  ld([0xB5])                      #54
              2a2a de00  st   [y,x++]     11544  st([Y,Xpp])                     #55 [var.1] = peek [vAC+5]
              2a2b 01b6  ld   [$b6]       11545  ld([0xB6])                      #56
              2a2c de00  st   [y,x++]     11546  st([Y,Xpp])                     #57 [var.2] = peek [vAC+6]
              2a2d 01b7  ld   [$b7]       11547  ld([0xB7])                      #58
              2a2e ce00  st   [y,x]       11548  st([Y,X])                       #59 [var.3] = peek [vAC+7]
              2a2f 1403  ld   $03,y       11549  ld(hi('NEXTY'),Y)               #60
              2a30 e000  jmp  y,$00       11550  jmp(Y,'NEXTY')                  #61
              2a31 00e0  ld   $e0         11551  ld(-64/2)                       #62
                                          11552
                                          11553  label('.meeka#18')
.meeka#18:    2a32 0022  ld   $22         11554  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2a33 c202  st   [$02]       11555  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2a34 9401  adda $01,y       11556  adda(1,Y)                       #20 retry instruction
              2a35 e000  jmp  y,$00       11557  jmp(Y,'NEXTY')                  #21
              2a36 00f4  ld   $f4         11558  ld(-24/2)                       #22
                                          11559
                                          11560
                                          11561  # MOKEA
                                          11562  label('mokea#13')
mokea#13:     2a37 1200  ld   ac,x        11563  ld(AC,X)                        #13 var
              2a38 00ef  ld   $ef         11564  ld(min(0,maxTicks-64/2))        #14
              2a39 8115  adda [$15]       11565  adda([vTicks])                  #15
              2a3a e869  blt  .mokea#18   11566  blt('.mokea#18')                #16 not enough time left, so retry
              2a3b 1400  ld   $00,y       11567  ld(0,Y)                         #17
              2a3c 0500  ld   [x]         11568  ld([X])                         #18 var.0
              2a3d de00  st   [y,x++]     11569  st([Y,Xpp])                     #19
              2a3e c2b0  st   [$b0]       11570  st([0xB0])                      #20
              2a3f 0500  ld   [x]         11571  ld([X])                         #21 var.1
              2a40 de00  st   [y,x++]     11572  st([Y,Xpp])                     #22
              2a41 c2b1  st   [$b1]       11573  st([0xB1])                      #23
              2a42 0500  ld   [x]         11574  ld([X])                         #24 var.2
              2a43 de00  st   [y,x++]     11575  st([Y,Xpp])                     #25
              2a44 c2b2  st   [$b2]       11576  st([0xB2])                      #26
              2a45 0500  ld   [x]         11577  ld([X])                         #27 var.3
              2a46 de00  st   [y,x++]     11578  st([Y,Xpp])                     #28
              2a47 c2b3  st   [$b3]       11579  st([0xB3])                      #29
              2a48 0500  ld   [x]         11580  ld([X])                         #30 var.4
              2a49 de00  st   [y,x++]     11581  st([Y,Xpp])                     #31
              2a4a c2b4  st   [$b4]       11582  st([0xB4])                      #32
              2a4b 0500  ld   [x]         11583  ld([X])                         #33 var.5
              2a4c de00  st   [y,x++]     11584  st([Y,Xpp])                     #34
              2a4d c2b5  st   [$b5]       11585  st([0xB5])                      #35
              2a4e 0500  ld   [x]         11586  ld([X])                         #36 var.6
              2a4f de00  st   [y,x++]     11587  st([Y,Xpp])                     #37
              2a50 c2b6  st   [$b6]       11588  st([0xB6])                      #38
              2a51 0500  ld   [x]         11589  ld([X])                         #39 var.7
              2a52 de00  st   [y,x++]     11590  st([Y,Xpp])                     #40
              2a53 c2b7  st   [$b7]       11591  st([0xB7])                      #41
              2a54 1118  ld   [$18],x     11592  ld([vAC],X)                     #42
              2a55 1519  ld   [$19],y     11593  ld([vAC+1],Y)                   #43
              2a56 01b0  ld   [$b0]       11594  ld([0xB0])                      #44
              2a57 de00  st   [y,x++]     11595  st([Y,Xpp])                     #45 poke [vAC], var.0
              2a58 01b1  ld   [$b1]       11596  ld([0xB1])                      #46
              2a59 de00  st   [y,x++]     11597  st([Y,Xpp])                     #47 poke [vAC], var.1
              2a5a 01b2  ld   [$b2]       11598  ld([0xB2])                      #48
              2a5b de00  st   [y,x++]     11599  st([Y,Xpp])                     #49 poke [vAC], var.2
              2a5c 01b3  ld   [$b3]       11600  ld([0xB3])                      #50
              2a5d de00  st   [y,x++]     11601  st([Y,Xpp])                     #51 poke [vAC], var.3
              2a5e 01b4  ld   [$b4]       11602  ld([0xB4])                      #52
              2a5f de00  st   [y,x++]     11603  st([Y,Xpp])                     #53 poke [vAC], var.4
              2a60 01b5  ld   [$b5]       11604  ld([0xB5])                      #54
              2a61 de00  st   [y,x++]     11605  st([Y,Xpp])                     #55 poke [vAC], var.5
              2a62 01b6  ld   [$b6]       11606  ld([0xB6])                      #56
              2a63 de00  st   [y,x++]     11607  st([Y,Xpp])                     #57 poke [vAC], var.6
              2a64 01b7  ld   [$b7]       11608  ld([0xB7])                      #58
              2a65 de00  st   [y,x++]     11609  st([Y,Xpp])                     #59 poke [vAC], var.7
              2a66 1403  ld   $03,y       11610  ld(hi('NEXTY'),Y)               #60
              2a67 e000  jmp  y,$00       11611  jmp(Y,'NEXTY')                  #61
              2a68 00e0  ld   $e0         11612  ld(-64/2)                       #62
                                          11613
                                          11614  label('.mokea#18')
.mokea#18:    2a69 0022  ld   $22         11615  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2a6a c202  st   [$02]       11616  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2a6b 9401  adda $01,y       11617  adda(1,Y)                       #20 retry instruction
              2a6c e000  jmp  y,$00       11618  jmp(Y,'NEXTY')                  #21
              2a6d 00f4  ld   $f4         11619  ld(-24/2)                       #22
                                          11620
                                          11621
                                          11622  # NEEKA implementation
                                          11623  label('neeka#13')
neeka#13:     2a6e 00fe  ld   $fe         11624  ld(min(0,maxTicks-34/2))        #13
              2a6f 8115  adda [$15]       11625  adda([vTicks])                  #14
              2a70 e885  blt  .neeka#17   11626  blt('.neeka#17')                #15 not enough time left, so retry
              2a71 012b  ld   [$2b]       11627  ld([sysArgs+7])                 #16 number of bytes to peek
              2a72 a001  suba $01         11628  suba(1)                         #17
              2a73 f478  bge  .neeka#20   11629  bge('.neeka#20')                #18
              2a74 c22b  st   [$2b]       11630  st([sysArgs+7])                 #19
              2a75 1403  ld   $03,y       11631  ld(hi('NEXTY'),Y)               #20 done
              2a76 e000  jmp  y,$00       11632  jmp(Y,'NEXTY')                  #21
              2a77 00f4  ld   $f4         11633  ld(-24/2)                       #22
                                          11634
                                          11635  label('.neeka#20')
.neeka#20:    2a78 1519  ld   [$19],y     11636  ld([vAC+1],Y)                   #20
              2a79 9118  adda [$18],x     11637  adda([vAC],X)                   #21
              2a7a 0d00  ld   [y,x]       11638  ld([Y,X])                       #22 peek [vAC + index]
              2a7b c21d  st   [$1d]       11639  st([vTmp])                      #23
              2a7c 012a  ld   [$2a]       11640  ld([sysArgs+6])                 #24
              2a7d 912b  adda [$2b],x     11641  adda([sysArgs+7],X)             #25 var + index
              2a7e 011d  ld   [$1d]       11642  ld([vTmp])                      #26
              2a7f c600  st   [x]         11643  st([X])                         #27 [var + index] = peek [vAC + index]
              2a80 0021  ld   $21         11644  ld(hi('PREFX3_PAGE'))           #28 ENTER is at $(n-1)ff, where n = instruction page
              2a81 c202  st   [$02]       11645  st([vCpuSelect])                #29 restore PREFX3 instruction page
              2a82 9401  adda $01,y       11646  adda(1,Y)                       #30 restart instruction
              2a83 e000  jmp  y,$00       11647  jmp(Y,'NEXTY')                  #31
              2a84 00ef  ld   $ef         11648  ld(-34/2)                       #32
                                          11649
                                          11650  label('.neeka#17')
.neeka#17:    2a85 0021  ld   $21         11651  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              2a86 c202  st   [$02]       11652  st([vCpuSelect])                #18 restore PREFX3 instruction page
              2a87 9401  adda $01,y       11653  adda(1,Y)                       #19 retry instruction
              2a88 e0cb  jmp  y,$cb       11654  jmp(Y,'REENTER')                #20
              2a89 00f4  ld   $f4         11655  ld(-24/2)                       #21
                                          11656
                                          11657
                                          11658  # NOKEA implementation
                                          11659  label('nokea#13')
nokea#13:     2a8a 00fe  ld   $fe         11660  ld(min(0,maxTicks-34/2))        #13
              2a8b 8115  adda [$15]       11661  adda([vTicks])                  #14
              2a8c e8a1  blt  .nokea#17   11662  blt('.nokea#17')                #15 not enough time left, so retry
              2a8d 012b  ld   [$2b]       11663  ld([sysArgs+7])                 #16 number of bytes to peek
              2a8e a001  suba $01         11664  suba(1)                         #17
              2a8f f494  bge  .nokea#20   11665  bge('.nokea#20')                #18
              2a90 c22b  st   [$2b]       11666  st([sysArgs+7])                 #19
              2a91 1403  ld   $03,y       11667  ld(hi('NEXTY'),Y)               #20 done
              2a92 e000  jmp  y,$00       11668  jmp(Y,'NEXTY')                  #21
              2a93 00f4  ld   $f4         11669  ld(-24/2)                       #22
                                          11670
                                          11671  label('.nokea#20')
.nokea#20:    2a94 912a  adda [$2a],x     11672  adda([sysArgs+6],X)             #20 var + index
              2a95 0500  ld   [x]         11673  ld([X])                         #21
              2a96 c21d  st   [$1d]       11674  st([vTmp])                      #22
              2a97 1519  ld   [$19],y     11675  ld([vAC+1],Y)                   #23
              2a98 012b  ld   [$2b]       11676  ld([sysArgs+7])                 #24
              2a99 9118  adda [$18],x     11677  adda([vAC],X)                   #25 vAC + index
              2a9a 011d  ld   [$1d]       11678  ld([vTmp])                      #26
              2a9b ce00  st   [y,x]       11679  st([Y,X])                       #27 [vAC + index] = peek [var + index]
              2a9c 0021  ld   $21         11680  ld(hi('PREFX3_PAGE'))           #28 ENTER is at $(n-1)ff, where n = instruction page
              2a9d c202  st   [$02]       11681  st([vCpuSelect])                #29 restore PREFX3 instruction page
              2a9e 9401  adda $01,y       11682  adda(1,Y)                       #30 restart instruction
              2a9f e000  jmp  y,$00       11683  jmp(Y,'NEXTY')                  #31
              2aa0 00ef  ld   $ef         11684  ld(-34/2)                       #32
                                          11685
                                          11686  label('.nokea#17')
.nokea#17:    2aa1 0021  ld   $21         11687  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              2aa2 c202  st   [$02]       11688  st([vCpuSelect])                #18 restore PREFX3 instruction page
              2aa3 9401  adda $01,y       11689  adda(1,Y)                       #19 retry instruction
              2aa4 e0cb  jmp  y,$cb       11690  jmp(Y,'REENTER')                #20
              2aa5 00f4  ld   $f4         11691  ld(-24/2)                       #21
                                          11692
                                          11693
                                          11694  # DJNE implementation
                                          11695  label('djne#13')
djne#13:      2aa6 de00  st   [y,x++]     11696  st([Y,Xpp])                     #13 X++
              2aa7 c21d  st   [$1d]       11697  st([vTmp])                      #14 var
              2aa8 00f8  ld   $f8         11698  ld(min(0,maxTicks-46/2))        #15
              2aa9 8115  adda [$15]       11699  adda([vTicks])                  #16
              2aaa e8d3  blt  .djne#19    11700  blt('.djne#19')                 #17 not enough time left, so retry
              2aab 0d00  ld   [y,x]       11701  ld([Y,X])                       #18
              2aac de00  st   [y,x++]     11702  st([Y,Xpp])                     #19 X++
              2aad c22a  st   [$2a]       11703  st([sysArgs+6])                 #20 jump addr.lo
              2aae 0d00  ld   [y,x]       11704  ld([Y,X])                       #21
              2aaf c22b  st   [$2b]       11705  st([sysArgs+7])                 #22 jump addr.hi
              2ab0 1400  ld   $00,y       11706  ld(0,Y)                         #23
              2ab1 111d  ld   [$1d],x     11707  ld([vTmp],X)                    #24
              2ab2 0500  ld   [x]         11708  ld([X])                         #25 count.lo
              2ab3 a001  suba $01         11709  suba(1)                         #26
              2ab4 de00  st   [y,x++]     11710  st([Y,Xpp])                     #27 count.lo-- X++
              2ab5 4500  ora  [x]         11711  ora([X])                        #28 count.lo | count.hi
              2ab6 f0c6  beq  .djne#31    11712  beq('.djne#31')                 #19 count = 0
              2ab7 111d  ld   [$1d],x     11713  ld([vTmp],X)                    #30
              2ab8 0500  ld   [x]         11714  ld([X])                         #31 count.lo
              2ab9 de00  st   [y,x++]     11715  st([Y,Xpp])                     #32 X++
              2aba 60ff  xora $ff         11716  xora(0xFF)                      #33 if low byte is 0xFF
              2abb eccc  bne  .djne#36    11717  bne('.djne#36')                 #34
              2abc 0500  ld   [x]         11718  ld([X])                         #35 count.hi
              2abd a001  suba $01         11719  suba(1)                         #36
              2abe c600  st   [x]         11720  st([X])                         #37
              2abf 012a  ld   [$2a]       11721  ld([sysArgs+6])                 #38 jump
              2ac0 c216  st   [$16]       11722  st([vPC])                       #39
              2ac1 012b  ld   [$2b]       11723  ld([sysArgs+7])                 #40
              2ac2 c217  st   [$17]       11724  st([vPC+1])                     #41
              2ac3 1403  ld   $03,y       11725  ld(hi('NEXTY'),Y)               #42
              2ac4 e000  jmp  y,$00       11726  jmp(Y,'NEXTY')                  #43
              2ac5 00e9  ld   $e9         11727  ld(-46/2)                       #44
                                          11728
                                          11729  label('.djne#31')
.djne#31:     2ac6 0116  ld   [$16]       11730  ld([vPC])                       #31 done
              2ac7 8002  adda $02         11731  adda(2)                         #32
              2ac8 c216  st   [$16]       11732  st([vPC])                       #33
              2ac9 1403  ld   $03,y       11733  ld(hi('NEXTY'),Y)               #34
              2aca e000  jmp  y,$00       11734  jmp(Y,'NEXTY')                  #35
              2acb 00ed  ld   $ed         11735  ld(-38/2)                       #36
                                          11736
                                          11737  label('.djne#36')
.djne#36:     2acc 012a  ld   [$2a]       11738  ld([sysArgs+6])                 #36 jump
              2acd c216  st   [$16]       11739  st([vPC])                       #37
              2ace 012b  ld   [$2b]       11740  ld([sysArgs+7])                 #38
              2acf c217  st   [$17]       11741  st([vPC+1])                     #39
              2ad0 1403  ld   $03,y       11742  ld(hi('NEXTY'),Y)               #40
              2ad1 e000  jmp  y,$00       11743  jmp(Y,'NEXTY')                  #41
              2ad2 00ea  ld   $ea         11744  ld(-44/2)                       #42
                                          11745
                                          11746  label('.djne#19')
.djne#19:     2ad3 0116  ld   [$16]       11747  ld([vPC])                       #19 retry
              2ad4 a002  suba $02         11748  suba(2)                         #20
              2ad5 c216  st   [$16]       11749  st([vPC])                       #21
              2ad6 1403  ld   $03,y       11750  ld(hi('NEXTY'),Y)               #22
              2ad7 e000  jmp  y,$00       11751  jmp(Y,'NEXTY')                  #23
              2ad8 00f3  ld   $f3         11752  ld(-26/2)                       #24
                                          11753
                                          11754
              2ad9 0200  nop              11755  fillers(until=0xff)
              2ada 0200  nop
              2adb 0200  nop
              * 38 times
              2aff 0200  nop              11756  align(0x100, size=0x100)
                                          11757
                                          11758  #-----------------------------------------------------------------------
                                          11759  #       More vCPU instruction implementations, (0x2B00)
                                          11760  #-----------------------------------------------------------------------
                                          11761  #
                                          11762  # DJGE implementation
                                          11763  label('djge#13')
djge#13:      2b00 de00  st   [y,x++]     11764  st([Y,Xpp])                     #13
              2b01 c21d  st   [$1d]       11765  st([vTmp])                      #14 var
              2b02 00fa  ld   $fa         11766  ld(min(0,maxTicks-42/2))        #15
              2b03 8115  adda [$15]       11767  adda([vTicks])                  #16
              2b04 e829  blt  .djge#19    11768  blt('.djge#19')                 #17 not enough time left, so retry
              2b05 0d00  ld   [y,x]       11769  ld([Y,X])                       #18
              2b06 de00  st   [y,x++]     11770  st([Y,Xpp])                     #19
              2b07 c22a  st   [$2a]       11771  st([sysArgs+6])                 #20 jump addr.lo
              2b08 0d00  ld   [y,x]       11772  ld([Y,X])                       #21
              2b09 c22b  st   [$2b]       11773  st([sysArgs+7])                 #22 jump addr.hi
              2b0a 1400  ld   $00,y       11774  ld(0,Y)                         #23
              2b0b 111d  ld   [$1d],x     11775  ld([vTmp],X)                    #24
              2b0c 0500  ld   [x]         11776  ld([X])                         #25 count.lo
              2b0d a001  suba $01         11777  suba(1)                         #26
              2b0e de00  st   [y,x++]     11778  st([Y,Xpp])                     #27 count.lo-- X++
              2b0f 60ff  xora $ff         11779  xora(0xFF)                      #28 if low byte is 0xFF
              2b10 ec1c  bne  .djge#31    11780  bne('.djge#31')                 #29
              2b11 0500  ld   [x]         11781  ld([X])                         #30 count.hi
              2b12 f023  beq  .djge#33    11782  beq('.djge#33')                 #31
              2b13 a001  suba $01         11783  suba(1)                         #32
              2b14 c600  st   [x]         11784  st([X])                         #33
              2b15 012a  ld   [$2a]       11785  ld([sysArgs+6])                 #34 jump
              2b16 c216  st   [$16]       11786  st([vPC])                       #35
              2b17 012b  ld   [$2b]       11787  ld([sysArgs+7])                 #36
              2b18 c217  st   [$17]       11788  st([vPC+1])                     #37
              2b19 1403  ld   $03,y       11789  ld(hi('NEXTY'),Y)               #38
              2b1a e000  jmp  y,$00       11790  jmp(Y,'NEXTY')                  #39
              2b1b 00eb  ld   $eb         11791  ld(-42/2)                       #40
                                          11792
                                          11793  label('.djge#31')
.djge#31:     2b1c 012a  ld   [$2a]       11794  ld([sysArgs+6])                 #31 jump
              2b1d c216  st   [$16]       11795  st([vPC])                       #32
              2b1e 012b  ld   [$2b]       11796  ld([sysArgs+7])                 #33
              2b1f c217  st   [$17]       11797  st([vPC+1])                     #34
              2b20 1403  ld   $03,y       11798  ld(hi('REENTER'),Y)             #35
              2b21 e0cb  jmp  y,$cb       11799  jmp(Y,'REENTER')                #36
              2b22 00ec  ld   $ec         11800  ld(-40/2)                       #37
                                          11801
                                          11802  label('.djge#33')
.djge#33:     2b23 0116  ld   [$16]       11803  ld([vPC])                       #33 done
              2b24 8002  adda $02         11804  adda(2)                         #34
              2b25 c216  st   [$16]       11805  st([vPC])                       #35
              2b26 1403  ld   $03,y       11806  ld(hi('NEXTY'),Y)               #36
              2b27 e000  jmp  y,$00       11807  jmp(Y,'NEXTY')                  #37
              2b28 00ec  ld   $ec         11808  ld(-40/2)                       #38
                                          11809
                                          11810  label('.djge#19')
.djge#19:     2b29 0116  ld   [$16]       11811  ld([vPC])                       #19 retry
              2b2a a002  suba $02         11812  suba(2)                         #20
              2b2b c216  st   [$16]       11813  st([vPC])                       #21
              2b2c 1403  ld   $03,y       11814  ld(hi('NEXTY'),Y)               #22
              2b2d e000  jmp  y,$00       11815  jmp(Y,'NEXTY')                  #23
              2b2e 00f3  ld   $f3         11816  ld(-26/2)                       #24
                                          11817
                                          11818
                                          11819  # ADDVL
                                          11820  label('addvl#13')
addvl#13:     2b2f 0500  ld   [x]         11821  ld([X])                         #13
              2b30 c21d  st   [$1d]       11822  st([vTmp])                      #14 save src.0
              2b31 112b  ld   [$2b],x     11823  ld([sysArgs+7],X)               #15 dst.0
              2b32 00e8  ld   $e8         11824  ld(min(0,maxTicks-78/2))        #16
              2b33 8115  adda [$15]       11825  adda([vTicks])                  #17
              2b34 e874  blt  .addvl#20   11826  blt('.addvl#20')                #18 not enough time left, so retry
              2b35 011d  ld   [$1d]       11827  ld([vTmp])                      #19 src.0
              2b36 8500  adda [x]         11828  adda([X])                       #20
              2b37 c600  st   [x]         11829  st([X])                         #21 dst.0 += src.0
              2b38 e83c  blt  .addvl#24   11830  bmi('.addvl#24')                #22 carry
              2b39 a11d  suba [$1d]       11831  suba([vTmp])                    #23 original dst.0
              2b3a fc3e  bra  .addvl#26   11832  bra('.addvl#26')                #24
              2b3b 411d  ora  [$1d]       11833  ora([vTmp])                     #25 carry in bit 7
                                          11834
                                          11835  label('.addvl#24')
.addvl#24:    2b3c 211d  anda [$1d]       11836  anda([vTmp])                    #24 carry in bit 7
              2b3d 0200  nop              11837  nop()                           #25
                                          11838
                                          11839  label('.addvl#26')
.addvl#26:    2b3e 3080  anda $80,x       11840  anda(0x80,X)                    #26 carry to bit 0
              2b3f 0500  ld   [x]         11841  ld([X])                         #27
              2b40 c21d  st   [$1d]       11842  st([vTmp])                      #28 store carry
              2b41 012a  ld   [$2a]       11843  ld([sysArgs+6])                 #29
              2b42 9001  adda $01,x       11844  adda(1,X)                       #30 src.1
              2b43 011d  ld   [$1d]       11845  ld([vTmp])                      #31
              2b44 8500  adda [x]         11846  adda([X])                       #32
              2b45 c21d  st   [$1d]       11847  st([vTmp])                      #33 src.1 += carry
              2b46 012b  ld   [$2b]       11848  ld([sysArgs+7])                 #34
              2b47 9001  adda $01,x       11849  adda(1,X)                       #35
              2b48 011d  ld   [$1d]       11850  ld([vTmp])                      #36
              2b49 8500  adda [x]         11851  adda([X])                       #37
              2b4a c600  st   [x]         11852  st([X])                         #38 dst.1 += src.1
              2b4b e84f  blt  .addvl#41   11853  bmi('.addvl#41')                #39 carry
              2b4c a11d  suba [$1d]       11854  suba([vTmp])                    #40 original dst.1
              2b4d fc51  bra  .addvl#43   11855  bra('.addvl#43')                #41
              2b4e 411d  ora  [$1d]       11856  ora([vTmp])                     #42 carry in bit 7
                                          11857
                                          11858  label('.addvl#41')
.addvl#41:    2b4f 211d  anda [$1d]       11859  anda([vTmp])                    #41 carry in bit 7
              2b50 0200  nop              11860  nop()                           #42
                                          11861
                                          11862  label('.addvl#43')
.addvl#43:    2b51 3080  anda $80,x       11863  anda(0x80,X)                    #43 carry to bit 0
              2b52 0500  ld   [x]         11864  ld([X])                         #44
              2b53 c21d  st   [$1d]       11865  st([vTmp])                      #45 store carry
              2b54 012a  ld   [$2a]       11866  ld([sysArgs+6])                 #46
              2b55 9002  adda $02,x       11867  adda(2,X)                       #47 src.2
              2b56 011d  ld   [$1d]       11868  ld([vTmp])                      #48
              2b57 8500  adda [x]         11869  adda([X])                       #49
              2b58 c21d  st   [$1d]       11870  st([vTmp])                      #50 src.2 += carry
              2b59 012b  ld   [$2b]       11871  ld([sysArgs+7])                 #51
              2b5a 9002  adda $02,x       11872  adda(2,X)                       #52
              2b5b 011d  ld   [$1d]       11873  ld([vTmp])                      #53
              2b5c 8500  adda [x]         11874  adda([X])                       #54
              2b5d c600  st   [x]         11875  st([X])                         #55 dst.2 += src.2
              2b5e e862  blt  .addvl#58   11876  bmi('.addvl#58')                #56 carry
              2b5f a11d  suba [$1d]       11877  suba([vTmp])                    #57 original dst.2
              2b60 fc64  bra  .addvl#60   11878  bra('.addvl#60')                #58
              2b61 411d  ora  [$1d]       11879  ora([vTmp])                     #59 carry in bit 7
                                          11880
                                          11881  label('.addvl#58')
.addvl#58:    2b62 211d  anda [$1d]       11882  anda([vTmp])                    #58 carry in bit 7
              2b63 0200  nop              11883  nop()                           #59
                                          11884
                                          11885  label('.addvl#60')
.addvl#60:    2b64 3080  anda $80,x       11886  anda(0x80,X)                    #60 carry to bit 0
              2b65 0500  ld   [x]         11887  ld([X])                         #61
              2b66 c21d  st   [$1d]       11888  st([vTmp])                      #62 store carry
              2b67 012a  ld   [$2a]       11889  ld([sysArgs+6])                 #63
              2b68 9003  adda $03,x       11890  adda(3,X)                       #64 src.3
              2b69 011d  ld   [$1d]       11891  ld([vTmp])                      #65
              2b6a 8500  adda [x]         11892  adda([X])                       #66
              2b6b c21d  st   [$1d]       11893  st([vTmp])                      #67 src.3 += carry
              2b6c 012b  ld   [$2b]       11894  ld([sysArgs+7])                 #68
              2b6d 9003  adda $03,x       11895  adda(3,X)                       #69
              2b6e 011d  ld   [$1d]       11896  ld([vTmp])                      #70
              2b6f 8500  adda [x]         11897  adda([X])                       #71
              2b70 c600  st   [x]         11898  st([X])                         #72 dst.3 += src.3
              2b71 1403  ld   $03,y       11899  ld(hi('REENTER'),Y)             #73
              2b72 e0cb  jmp  y,$cb       11900  jmp(Y,'REENTER')                #74
              2b73 00d9  ld   $d9         11901  ld(-78/2)                       #75
                                          11902
                                          11903  label('.addvl#20')
.addvl#20:    2b74 0021  ld   $21         11904  ld(hi('PREFX3_PAGE'))           #20 ENTER is at $(n-1)ff, where n = instruction page
              2b75 c202  st   [$02]       11905  st([vCpuSelect])                #21 restore PREFX3 instruction page
              2b76 9401  adda $01,y       11906  adda(1,Y)                       #22 retry instruction
              2b77 e000  jmp  y,$00       11907  jmp(Y,'NEXTY')                  #23
              2b78 00f3  ld   $f3         11908  ld(-26/2)                       #24
                                          11909
                                          11910
                                          11911  # SUBVL
                                          11912  label('subvl#13')
subvl#13:     2b79 0500  ld   [x]         11913  ld([X])                         #13
              2b7a c21d  st   [$1d]       11914  st([vTmp])                      #14 save src.0
              2b7b 112b  ld   [$2b],x     11915  ld([sysArgs+7],X)               #15 dst.0
              2b7c 00ea  ld   $ea         11916  ld(min(0,maxTicks-74/2))        #16
              2b7d 8115  adda [$15]       11917  adda([vTicks])                  #17
              2b7e e8c0  blt  .subvl#20   11918  blt('.subvl#20')                #18 not enough time left, so retry
              2b7f 0500  ld   [x]         11919  ld([X])                         #19 dst.0
              2b80 e885  blt  .subvl#22   11920  bmi('.subvl#22')                #20
              2b81 a11d  suba [$1d]       11921  suba([vTmp])                    #21
              2b82 c600  st   [x]         11922  st([X])                         #22 dst.0 -= src.0
              2b83 fc88  bra  .subvl#25   11923  bra('.subvl#25')                #23
              2b84 411d  ora  [$1d]       11924  ora([vTmp])                     #24 borrow in bit 7
                                          11925
                                          11926  label('.subvl#22')
.subvl#22:    2b85 c600  st   [x]         11927  st([X])                         #22 dst.0 -= src.0
              2b86 211d  anda [$1d]       11928  anda([vTmp])                    #23 borrow in bit 7
              2b87 0200  nop              11929  nop()                           #24
                                          11930
                                          11931  label('.subvl#25')
.subvl#25:    2b88 3080  anda $80,x       11932  anda(0x80,X)                    #25 borrow to bit 0
              2b89 0500  ld   [x]         11933  ld([X])                         #26
              2b8a c2b0  st   [$b0]       11934  st([0xB0])                      #27 store borrow
              2b8b 012a  ld   [$2a]       11935  ld([sysArgs+6])                 #28
              2b8c 9001  adda $01,x       11936  adda(1,X)                       #29
              2b8d 0500  ld   [x]         11937  ld([X])                         #30
              2b8e c21d  st   [$1d]       11938  st([vTmp])                      #31 src.1
              2b8f 012b  ld   [$2b]       11939  ld([sysArgs+7])                 #32
              2b90 9001  adda $01,x       11940  adda(1,X)                       #33
              2b91 0500  ld   [x]         11941  ld([X])                         #34 dst.1
              2b92 e898  blt  .subvl#37   11942  bmi('.subvl#37')                #35
              2b93 a11d  suba [$1d]       11943  suba([vTmp])                    #36
              2b94 a1b0  suba [$b0]       11944  suba([0xB0])                    #37
              2b95 c600  st   [x]         11945  st([X])                         #38 dst.1 = dst.1 - src.1 - borrow
              2b96 fc9c  bra  .subvl#41   11946  bra('.subvl#41')                #39
              2b97 411d  ora  [$1d]       11947  ora([vTmp])                     #40 borrow in bit 7
                                          11948
                                          11949  label('.subvl#37')
.subvl#37:    2b98 a1b0  suba [$b0]       11950  suba([0xB0])                    #37
              2b99 c600  st   [x]         11951  st([X])                         #38 dst.1 = dst.1 - src.1 - borrow
              2b9a 211d  anda [$1d]       11952  anda([vTmp])                    #39 borrow in bit 7
              2b9b 0200  nop              11953  nop()                           #40
                                          11954
                                          11955  label('.subvl#41')
.subvl#41:    2b9c 3080  anda $80,x       11956  anda(0x80,X)                    #41 borrow to bit 0
              2b9d 0500  ld   [x]         11957  ld([X])                         #42
              2b9e c2b0  st   [$b0]       11958  st([0xB0])                      #43 store borrow
              2b9f 012a  ld   [$2a]       11959  ld([sysArgs+6])                 #44
              2ba0 9002  adda $02,x       11960  adda(2,X)                       #45
              2ba1 0500  ld   [x]         11961  ld([X])                         #46
              2ba2 c21d  st   [$1d]       11962  st([vTmp])                      #47 src.2
              2ba3 012b  ld   [$2b]       11963  ld([sysArgs+7])                 #48
              2ba4 9002  adda $02,x       11964  adda(2,X)                       #49
              2ba5 0500  ld   [x]         11965  ld([X])                         #50 dst.2
              2ba6 e8ac  blt  .subvl#53   11966  bmi('.subvl#53')                #51
              2ba7 a11d  suba [$1d]       11967  suba([vTmp])                    #52
              2ba8 a1b0  suba [$b0]       11968  suba([0xB0])                    #53
              2ba9 c600  st   [x]         11969  st([X])                         #54 dst.2 = dst.2 - src.2 - borrow
              2baa fcb0  bra  .subvl#57   11970  bra('.subvl#57')                #55
              2bab 411d  ora  [$1d]       11971  ora([vTmp])                     #56 borrow in bit 7
                                          11972
                                          11973  label('.subvl#53')
.subvl#53:    2bac a1b0  suba [$b0]       11974  suba([0xB0])                    #53
              2bad c600  st   [x]         11975  st([X])                         #54 dst.2 = dst.2 - src.2 - borrow
              2bae 211d  anda [$1d]       11976  anda([vTmp])                    #55 borrow in bit 7
              2baf 0200  nop              11977  nop()                           #56
                                          11978
                                          11979  label('.subvl#57')
.subvl#57:    2bb0 3080  anda $80,x       11980  anda(0x80,X)                    #57 borrow to bit 0
              2bb1 0500  ld   [x]         11981  ld([X])                         #58
              2bb2 c2b0  st   [$b0]       11982  st([0xB0])                      #59 store borrow
              2bb3 012a  ld   [$2a]       11983  ld([sysArgs+6])                 #60
              2bb4 9003  adda $03,x       11984  adda(3,X)                       #61
              2bb5 0500  ld   [x]         11985  ld([X])                         #62
              2bb6 c21d  st   [$1d]       11986  st([vTmp])                      #63 src.3
              2bb7 012b  ld   [$2b]       11987  ld([sysArgs+7])                 #64
              2bb8 9003  adda $03,x       11988  adda(3,X)                       #65 dst.3
              2bb9 0500  ld   [x]         11989  ld([X])                         #66
              2bba a11d  suba [$1d]       11990  suba([vTmp])                    #67
              2bbb a1b0  suba [$b0]       11991  suba([0xB0])                    #68
              2bbc c600  st   [x]         11992  st([X])                         #69 dst.3 = dst.3 - src.3 - borrow
              2bbd 1403  ld   $03,y       11993  ld(hi('NEXTY'),Y)               #70
              2bbe e000  jmp  y,$00       11994  jmp(Y,'NEXTY')                  #71
              2bbf 00db  ld   $db         11995  ld(-74/2)                       #72
                                          11996
                                          11997  label('.subvl#20')
.subvl#20:    2bc0 0021  ld   $21         11998  ld(hi('PREFX3_PAGE'))           #20 ENTER is at $(n-1)ff, where n = instruction page
              2bc1 c202  st   [$02]       11999  st([vCpuSelect])                #21 restore PREFX3 instruction page
              2bc2 9401  adda $01,y       12000  adda(1,Y)                       #22 retry instruction
              2bc3 e000  jmp  y,$00       12001  jmp(Y,'NEXTY')                  #23
              2bc4 00f3  ld   $f3         12002  ld(-26/2)                       #24
                                          12003
                                          12004
                                          12005  # ANDVL
                                          12006  label('andvl#13')
andvl#13:     2bc5 1400  ld   $00,y       12007  ld(0,Y)                         #13
              2bc6 00f8  ld   $f8         12008  ld(min(0,maxTicks-46/2))        #14
              2bc7 8115  adda [$15]       12009  adda([vTicks])                  #15
              2bc8 e8e4  blt  .andvl#18   12010  blt('.andvl#18')                #16 not enough time left, so retry
              2bc9 0d00  ld   [y,x]       12011  ld([Y,X])                       #17 src.0
              2bca de00  st   [y,x++]     12012  st([Y,Xpp])                     #18
              2bcb c2b0  st   [$b0]       12013  st([0xB0])                      #19
              2bcc 0d00  ld   [y,x]       12014  ld([Y,X])                       #20 src.1
              2bcd de00  st   [y,x++]     12015  st([Y,Xpp])                     #21
              2bce c2b1  st   [$b1]       12016  st([0xB1])                      #22
              2bcf 0d00  ld   [y,x]       12017  ld([Y,X])                       #23 src.2
              2bd0 de00  st   [y,x++]     12018  st([Y,Xpp])                     #24
              2bd1 c2b2  st   [$b2]       12019  st([0xB2])                      #25
              2bd2 0500  ld   [x]         12020  ld([X])                         #26 src.3
              2bd3 c2b3  st   [$b3]       12021  st([0xB3])                      #27
              2bd4 112b  ld   [$2b],x     12022  ld([sysArgs+7],X)               #28
              2bd5 0500  ld   [x]         12023  ld([X])                         #29 dst.0
              2bd6 21b0  anda [$b0]       12024  anda([0xB0])                    #30
              2bd7 de00  st   [y,x++]     12025  st([Y,Xpp])                     #31 dst.0 &= src.0
              2bd8 0500  ld   [x]         12026  ld([X])                         #32 dst.1
              2bd9 21b1  anda [$b1]       12027  anda([0xB1])                    #33
              2bda de00  st   [y,x++]     12028  st([Y,Xpp])                     #34 dst.1 &= src.1
              2bdb 0500  ld   [x]         12029  ld([X])                         #35 dst.2
              2bdc 21b2  anda [$b2]       12030  anda([0xB2])                    #36
              2bdd de00  st   [y,x++]     12031  st([Y,Xpp])                     #37 dst.2 &= src.2
              2bde 0500  ld   [x]         12032  ld([X])                         #38 dst.3
              2bdf 21b3  anda [$b3]       12033  anda([0xB3])                    #39
              2be0 de00  st   [y,x++]     12034  st([Y,Xpp])                     #40 dst.3 &= src.3
              2be1 1403  ld   $03,y       12035  ld(hi('REENTER'),Y)             #41
              2be2 e0cb  jmp  y,$cb       12036  jmp(Y,'REENTER')                #42
              2be3 00e9  ld   $e9         12037  ld(-46/2)                       #43
                                          12038
                                          12039  label('.andvl#18')
.andvl#18:    2be4 0021  ld   $21         12040  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2be5 c202  st   [$02]       12041  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2be6 9401  adda $01,y       12042  adda(1,Y)                       #20 retry instruction
              2be7 e000  jmp  y,$00       12043  jmp(Y,'NEXTY')                  #21
              2be8 00f4  ld   $f4         12044  ld(-24/2)                       #22
                                          12045
                                          12046
              2be9 0200  nop              12047  fillers(until=0xff)
              2bea 0200  nop
              2beb 0200  nop
              * 22 times
              2bff 0200  nop              12048  align(0x100, size=0x100)
                                          12049
                                          12050  #-----------------------------------------------------------------------
                                          12051  #       More vCPU instruction implementations, (0x2C00)
                                          12052  #-----------------------------------------------------------------------
                                          12053  #
                                          12054  # ORVL
                                          12055  label('orvl#13')
orvl#13:      2c00 1400  ld   $00,y       12056  ld(0,Y)                         #13
              2c01 00f8  ld   $f8         12057  ld(min(0,maxTicks-46/2))        #14
              2c02 8115  adda [$15]       12058  adda([vTicks])                  #15
              2c03 e81f  blt  .orvl#18    12059  blt('.orvl#18')                 #16 not enough time left, so retry
              2c04 0d00  ld   [y,x]       12060  ld([Y,X])                       #17 src.0
              2c05 de00  st   [y,x++]     12061  st([Y,Xpp])                     #18
              2c06 c2b0  st   [$b0]       12062  st([0xB0])                      #19
              2c07 0d00  ld   [y,x]       12063  ld([Y,X])                       #20 src.1
              2c08 de00  st   [y,x++]     12064  st([Y,Xpp])                     #21
              2c09 c2b1  st   [$b1]       12065  st([0xB1])                      #22
              2c0a 0d00  ld   [y,x]       12066  ld([Y,X])                       #23 src.2
              2c0b de00  st   [y,x++]     12067  st([Y,Xpp])                     #24
              2c0c c2b2  st   [$b2]       12068  st([0xB2])                      #25
              2c0d 0500  ld   [x]         12069  ld([X])                         #26 src.3
              2c0e c2b3  st   [$b3]       12070  st([0xB3])                      #27
              2c0f 112b  ld   [$2b],x     12071  ld([sysArgs+7],X)               #28
              2c10 0500  ld   [x]         12072  ld([X])                         #29 dst.0
              2c11 41b0  ora  [$b0]       12073  ora([0xB0])                     #30
              2c12 de00  st   [y,x++]     12074  st([Y,Xpp])                     #31 dst.0 |= src.0
              2c13 0500  ld   [x]         12075  ld([X])                         #32 dst.1
              2c14 41b1  ora  [$b1]       12076  ora([0xB1])                     #33
              2c15 de00  st   [y,x++]     12077  st([Y,Xpp])                     #34 dst.1 |= src.1
              2c16 0500  ld   [x]         12078  ld([X])                         #35 dst.2
              2c17 41b2  ora  [$b2]       12079  ora([0xB2])                     #36
              2c18 de00  st   [y,x++]     12080  st([Y,Xpp])                     #37 dst.2 |= src.2
              2c19 0500  ld   [x]         12081  ld([X])                         #38 dst.3
              2c1a 41b3  ora  [$b3]       12082  ora([0xB3])                     #39
              2c1b de00  st   [y,x++]     12083  st([Y,Xpp])                     #40 dst.3 |= src.3
              2c1c 1403  ld   $03,y       12084  ld(hi('REENTER'),Y)             #41
              2c1d e0cb  jmp  y,$cb       12085  jmp(Y,'REENTER')                #42
              2c1e 00e9  ld   $e9         12086  ld(-46/2)                       #43
                                          12087
                                          12088  label('.orvl#18')
.orvl#18:     2c1f 0021  ld   $21         12089  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2c20 c202  st   [$02]       12090  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2c21 9401  adda $01,y       12091  adda(1,Y)                       #20 retry instruction
              2c22 e000  jmp  y,$00       12092  jmp(Y,'NEXTY')                  #21
              2c23 00f4  ld   $f4         12093  ld(-24/2)                       #22
                                          12094
                                          12095
                                          12096  # XORVL
                                          12097  label('xorvl#13')
xorvl#13:     2c24 1400  ld   $00,y       12098  ld(0,Y)                         #13
              2c25 00f8  ld   $f8         12099  ld(min(0,maxTicks-46/2))        #14
              2c26 8115  adda [$15]       12100  adda([vTicks])                  #15
              2c27 e843  blt  .xorvl#18   12101  blt('.xorvl#18')                #16 not enough time left, so retry
              2c28 0d00  ld   [y,x]       12102  ld([Y,X])                       #17 src.0
              2c29 de00  st   [y,x++]     12103  st([Y,Xpp])                     #18
              2c2a c2b0  st   [$b0]       12104  st([0xB0])                      #19
              2c2b 0d00  ld   [y,x]       12105  ld([Y,X])                       #20 src.1
              2c2c de00  st   [y,x++]     12106  st([Y,Xpp])                     #21
              2c2d c2b1  st   [$b1]       12107  st([0xB1])                      #22
              2c2e 0d00  ld   [y,x]       12108  ld([Y,X])                       #23 src.2
              2c2f de00  st   [y,x++]     12109  st([Y,Xpp])                     #24
              2c30 c2b2  st   [$b2]       12110  st([0xB2])                      #25
              2c31 0500  ld   [x]         12111  ld([X])                         #26 src.3
              2c32 c2b3  st   [$b3]       12112  st([0xB3])                      #27
              2c33 112b  ld   [$2b],x     12113  ld([sysArgs+7],X)               #28
              2c34 0500  ld   [x]         12114  ld([X])                         #29 dst.0
              2c35 61b0  xora [$b0]       12115  xora([0xB0])                    #30
              2c36 de00  st   [y,x++]     12116  st([Y,Xpp])                     #31 dst.0 ^= src.0
              2c37 0500  ld   [x]         12117  ld([X])                         #32 dst.1
              2c38 61b1  xora [$b1]       12118  xora([0xB1])                    #33
              2c39 de00  st   [y,x++]     12119  st([Y,Xpp])                     #34 dst.1 ^= src.1
              2c3a 0500  ld   [x]         12120  ld([X])                         #35 dst.2
              2c3b 61b2  xora [$b2]       12121  xora([0xB2])                    #36
              2c3c de00  st   [y,x++]     12122  st([Y,Xpp])                     #37 dst.2 ^= src.2
              2c3d 0500  ld   [x]         12123  ld([X])                         #38 dst.3
              2c3e 61b3  xora [$b3]       12124  xora([0xB3])                    #39
              2c3f de00  st   [y,x++]     12125  st([Y,Xpp])                     #40 dst.3 ^= src.3
              2c40 1403  ld   $03,y       12126  ld(hi('REENTER'),Y)             #41
              2c41 e0cb  jmp  y,$cb       12127  jmp(Y,'REENTER')                #42
              2c42 00e9  ld   $e9         12128  ld(-46/2)                       #43
                                          12129
                                          12130  label('.xorvl#18')
.xorvl#18:    2c43 0021  ld   $21         12131  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2c44 c202  st   [$02]       12132  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2c45 9401  adda $01,y       12133  adda(1,Y)                       #20 retry instruction
              2c46 e000  jmp  y,$00       12134  jmp(Y,'NEXTY')                  #21
              2c47 00f4  ld   $f4         12135  ld(-24/2)                       #22
                                          12136
                                          12137
                                          12138  # LSRV implementation
                                          12139  label('lsrv#13')
lsrv#13:      2c48 d22b  st   [$2b],x     12140  st([sysArgs+7],X)               #13 var
              2c49 00f3  ld   $f3         12141  ld(min(0,maxTicks-56/2))        #14
              2c4a 8115  adda [$15]       12142  adda([vTicks])                  #15
              2c4b e865  blt  .lsrv#18    12143  blt('.lsrv#18')                 #16 not enough time left, so retry
              2c4c 1405  ld   $05,y       12144  ld(hi('shiftTable'),Y)          #17 (ac >> 1) table
              2c4d 00cc  ld   $cc         12145  ld('.lsrv#27')                  #18 continuation address
              2c4e c21d  st   [$1d]       12146  st([vTmp])                      #19
              2c4f 0500  ld   [x]         12147  ld([X])                         #20 load byte from var
              2c50 20fe  anda $fe         12148  anda(0xfe)                      #21
              2c51 e200  jmp  y,ac        12149  jmp(Y,AC)                       #22
              2c52 fcff  bra  $ff         12150  bra(255)                        #23 bra shiftTable+255
                                          12151  # continues in page 0x0600 at label('.lsrv#27') fetching shifted byte from 0x0500
                                          12152
                                          12153  label('.lsrv#30')
.lsrv#30:     2c53 012b  ld   [$2b]       12154  ld([sysArgs+7])                 #30 low byte address
              2c54 8001  adda $01         12155  adda(1)                         #31
              2c55 d22a  st   [$2a],x     12156  st([sysArgs+6],X)               #32 high byte address
              2c56 0500  ld   [x]         12157  ld([X])                         #33 bit 0 of high byte
              2c57 2001  anda $01         12158  anda(1)                         #34
              2c58 807f  adda $7f         12159  adda(127)                       #35
              2c59 2080  anda $80         12160  anda(128)                       #36
              2c5a 112b  ld   [$2b],x     12161  ld([sysArgs+7],X)               #37
              2c5b 4500  ora  [x]         12162  ora([X])                        #38
              2c5c c600  st   [x]         12163  st([X])                         #39 transfer to bit 7 of low byte
              2c5d 1405  ld   $05,y       12164  ld(hi('shiftTable'),Y)          #40 (ac >> 1) table
              2c5e 00cf  ld   $cf         12165  ld('.lsrv#51')                  #41 continuation address
              2c5f c21d  st   [$1d]       12166  st([vTmp])                      #42
              2c60 112a  ld   [$2a],x     12167  ld([sysArgs+6],X)               #43
              2c61 0500  ld   [x]         12168  ld([X])                         #44
              2c62 20fe  anda $fe         12169  anda(0b11111110)                #45
              2c63 e200  jmp  y,ac        12170  jmp(Y,AC)                       #46
              2c64 fcff  bra  $ff         12171  bra(255)                        #47 bra shiftTable+255
                                          12172  # continues in page 0x0600 at label('.lsrv#51') fetching shifted byte from 0x0500
                                          12173
                                          12174  label('.lsrv#18')
.lsrv#18:     2c65 0116  ld   [$16]       12175  ld([vPC])                       #18 retry instruction
              2c66 a002  suba $02         12176  suba(2)                         #19
              2c67 c216  st   [$16]       12177  st([vPC])                       #20
              2c68 1403  ld   $03,y       12178  ld(hi('REENTER'),Y)             #21
              2c69 e0cb  jmp  y,$cb       12179  jmp(Y,'REENTER')                #22
              2c6a 00f3  ld   $f3         12180  ld(-26/2)                       #23
                                          12181
                                          12182
                                          12183  # LSRVL implementation
                                          12184  label('lsrvl#13')
lsrvl#13:     2c6b 1405  ld   $05,y       12185  ld(hi('shiftTable'),Y)          #13 (ac >> 1) table
              2c6c 00db  ld   $db         12186  ld(min(0,maxTicks-104/2))       #14
              2c6d 8115  adda [$15]       12187  adda([vTicks])                  #15
              2c6e e8ab  blt  .lsrvl#18   12188  blt('.lsrvl#18')                #16 not enough time left, so retry
              2c6f 00d3  ld   $d3         12189  ld('.lsrvl#26')                 #17 continuation address
              2c70 c21d  st   [$1d]       12190  st([vTmp])                      #18
              2c71 0500  ld   [x]         12191  ld([X])                         #19 load byte 0 from var
              2c72 20fe  anda $fe         12192  anda(0xfe)                      #20
              2c73 e200  jmp  y,ac        12193  jmp(Y,AC)                       #21
              2c74 fcff  bra  $ff         12194  bra(255)                        #22 bra shiftTable+255
                                          12195  # continues in page 0x0600 at label('.lsrvl#26') fetching shifted byte from 0x0500
                                          12196
                                          12197  label('.lsrvl#29')
.lsrvl#29:    2c75 012b  ld   [$2b]       12198  ld([sysArgs+7])                 #29 byte 0 address
              2c76 8001  adda $01         12199  adda(1)                         #30
              2c77 d2b0  st   [$b0],x     12200  st([0xB0],X)                    #31 byte 1 address
              2c78 8001  adda $01         12201  adda(1)                         #32
              2c79 c2b1  st   [$b1]       12202  st([0xB1])                      #33 byte 2 address
              2c7a 8001  adda $01         12203  adda(1)                         #34
              2c7b c2b2  st   [$b2]       12204  st([0xB2])                      #35 byte 3 address
              2c7c 0500  ld   [x]         12205  ld([X])                         #36 bit 0 of byte 1
              2c7d 2001  anda $01         12206  anda(1)                         #37
              2c7e 807f  adda $7f         12207  adda(127)                       #38
              2c7f 2080  anda $80         12208  anda(128)                       #39
              2c80 112b  ld   [$2b],x     12209  ld([sysArgs+7],X)               #40 byte 0 address
              2c81 4500  ora  [x]         12210  ora([X])                        #41
              2c82 c600  st   [x]         12211  st([X])                         #42 transfer to bit 7 of byte 0
              2c83 1405  ld   $05,y       12212  ld(hi('shiftTable'),Y)          #43 (ac >> 1) table
              2c84 00d6  ld   $d6         12213  ld('.lsrvl#54')                 #44 continuation address
              2c85 c21d  st   [$1d]       12214  st([vTmp])                      #45
              2c86 11b0  ld   [$b0],x     12215  ld([0xB0],X)                    #46 byte 1 address
              2c87 0500  ld   [x]         12216  ld([X])                         #47
              2c88 20fe  anda $fe         12217  anda(0b11111110)                #48
              2c89 e200  jmp  y,ac        12218  jmp(Y,AC)                       #49
              2c8a fcff  bra  $ff         12219  bra(255)                        #50 bra shiftTable+255
                                          12220  # continues in page 0x0600 at label('.lsrvl#54') fetching shifted byte from 0x0500
                                          12221
                                          12222  label('.lsrvl#57')
.lsrvl#57:    2c8b 11b1  ld   [$b1],x     12223  ld([0xB1],X)                    #57 byte 2 address
              2c8c 0500  ld   [x]         12224  ld([X])                         #58 bit 0 of byte 2
              2c8d 2001  anda $01         12225  anda(1)                         #59
              2c8e 807f  adda $7f         12226  adda(127)                       #60
              2c8f 2080  anda $80         12227  anda(128)                       #61
              2c90 11b0  ld   [$b0],x     12228  ld([0xB0],X)                    #62 byte 1 address
              2c91 4500  ora  [x]         12229  ora([X])                        #63
              2c92 c600  st   [x]         12230  st([X])                         #64 transfer to bit 7 of byte 1
              2c93 1405  ld   $05,y       12231  ld(hi('shiftTable'),Y)          #65 (ac >> 1) table
              2c94 00d9  ld   $d9         12232  ld('.lsrvl#76')                 #66 continuation address
              2c95 c21d  st   [$1d]       12233  st([vTmp])                      #67
              2c96 11b1  ld   [$b1],x     12234  ld([0xB1],X)                    #68 byte 2 address
              2c97 0500  ld   [x]         12235  ld([X])                         #69
              2c98 20fe  anda $fe         12236  anda(0b11111110)                #70
              2c99 e200  jmp  y,ac        12237  jmp(Y,AC)                       #71
              2c9a fcff  bra  $ff         12238  bra(255)                        #72 bra shiftTable+255
                                          12239  # continues in page 0x0600 at label('.lsrvl#76') fetching shifted byte from 0x0500
                                          12240
                                          12241  label('.lsrvl#79')
.lsrvl#79:    2c9b 11b2  ld   [$b2],x     12242  ld([0xB2],X)                    #79 byte 3 address
              2c9c 0500  ld   [x]         12243  ld([X])                         #80 bit 0 of byte 3
              2c9d 2001  anda $01         12244  anda(1)                         #81
              2c9e 807f  adda $7f         12245  adda(127)                       #82
              2c9f 2080  anda $80         12246  anda(128)                       #83
              2ca0 11b1  ld   [$b1],x     12247  ld([0xB1],X)                    #84 byte 2 address
              2ca1 4500  ora  [x]         12248  ora([X])                        #85
              2ca2 c600  st   [x]         12249  st([X])                         #86 transfer to bit 7 of byte 2
              2ca3 1405  ld   $05,y       12250  ld(hi('shiftTable'),Y)          #87 (ac >> 1) table
              2ca4 00dc  ld   $dc         12251  ld('.lsrvl#98')                 #88 continuation address
              2ca5 c21d  st   [$1d]       12252  st([vTmp])                      #89
              2ca6 11b2  ld   [$b2],x     12253  ld([0xB2],X)                    #90 byte 3 address
              2ca7 0500  ld   [x]         12254  ld([X])                         #91
              2ca8 20fe  anda $fe         12255  anda(0b11111110)                #92
              2ca9 e200  jmp  y,ac        12256  jmp(Y,AC)                       #93
              2caa fcff  bra  $ff         12257  bra(255)                        #94 bra shiftTable+255
                                          12258  # continues in page 0x0600 at label('.lsrvl#98') fetching shifted byte from 0x0500
                                          12259
                                          12260  label('.lsrvl#18')
.lsrvl#18:    2cab 0022  ld   $22         12261  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2cac c202  st   [$02]       12262  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2cad 9401  adda $01,y       12263  adda(1,Y)                       #20 retry instruction
              2cae e000  jmp  y,$00       12264  jmp(Y,'NEXTY')                  #21
              2caf 00f4  ld   $f4         12265  ld(-24/2)                       #22
                                          12266
                                          12267
                                          12268  # LSLVL implementation
                                          12269  label('lslvl#13')
lslvl#13:     2cb0 1400  ld   $00,y       12270  ld(0,Y)                         #13
              2cb1 00f3  ld   $f3         12271  ld(min(0,maxTicks-56/2))        #14
              2cb2 8115  adda [$15]       12272  adda([vTicks])                  #15
              2cb3 e8de  blt  .lslvl#18   12273  blt('.lslvl#18')                #16 not enough time left, so retry
              2cb4 0500  ld   [x]         12274  ld([X])                         #17
              2cb5 f4b8  bge  $2cb8       12275  bge(pc()+3)                     #18
              2cb6 fcb9  bra  $2cb9       12276  bra(pc()+3)                     #19
              2cb7 0001  ld   $01         12277  ld(1)                           #20
              2cb8 0000  ld   $00         12278  ld(0)                           #20
              2cb9 c2b0  st   [$b0]       12279  st([0xB0])                      #21 (var.0 & 0x80) >>7
              2cba 0500  ld   [x]         12280  ld([X])                         #22
              2cbb 8500  adda [x]         12281  adda([X])                       #23
              2cbc de00  st   [y,x++]     12282  st([Y,Xpp])                     #24 var.0 <<1
              2cbd 0500  ld   [x]         12283  ld([X])                         #25
              2cbe f4c1  bge  $2cc1       12284  bge(pc()+3)                     #26
              2cbf fcc2  bra  $2cc2       12285  bra(pc()+3)                     #27
              2cc0 0001  ld   $01         12286  ld(1)                           #28
              2cc1 0000  ld   $00         12287  ld(0)                           #28
              2cc2 c2b1  st   [$b1]       12288  st([0xB1])                      #29 (var.1 & 0x80) >>7
              2cc3 0500  ld   [x]         12289  ld([X])                         #30
              2cc4 8500  adda [x]         12290  adda([X])                       #31
              2cc5 41b0  ora  [$b0]       12291  ora([0xB0])                     #32
              2cc6 de00  st   [y,x++]     12292  st([Y,Xpp])                     #33 (var.1 <<1) | [0xB0]
              2cc7 0500  ld   [x]         12293  ld([X])                         #34
              2cc8 f4cb  bge  $2ccb       12294  bge(pc()+3)                     #35
              2cc9 fccc  bra  $2ccc       12295  bra(pc()+3)                     #36
              2cca 0001  ld   $01         12296  ld(1)                           #37
              2ccb 0000  ld   $00         12297  ld(0)                           #37
              2ccc c2b0  st   [$b0]       12298  st([0xB0])                      #38 (var.2 & 0x80) >>7
              2ccd 0500  ld   [x]         12299  ld([X])                         #39
              2cce 8500  adda [x]         12300  adda([X])                       #40
              2ccf 41b1  ora  [$b1]       12301  ora([0xB1])                     #41
              2cd0 de00  st   [y,x++]     12302  st([Y,Xpp])                     #42 (var.2 <<1) | [0xB1]
              2cd1 0500  ld   [x]         12303  ld([X])                         #43
              2cd2 f4d5  bge  $2cd5       12304  bge(pc()+3)                     #44
              2cd3 fcd6  bra  $2cd6       12305  bra(pc()+3)                     #45
              2cd4 0001  ld   $01         12306  ld(1)                           #46
              2cd5 0000  ld   $00         12307  ld(0)                           #46
              2cd6 c2b1  st   [$b1]       12308  st([0xB1])                      #47 (var.3 & 0x80) >>7
              2cd7 0500  ld   [x]         12309  ld([X])                         #48
              2cd8 8500  adda [x]         12310  adda([X])                       #49
              2cd9 41b0  ora  [$b0]       12311  ora([0xB0])                     #50
              2cda de00  st   [y,x++]     12312  st([Y,Xpp])                     #51 (var.3 <<1) | [0xB0]
              2cdb 1403  ld   $03,y       12313  ld(hi('NEXTY'),Y)               #52
              2cdc e000  jmp  y,$00       12314  jmp(Y,'NEXTY')                  #53
              2cdd 00e4  ld   $e4         12315  ld(-56/2)                       #54
                                          12316
                                          12317  label('.lslvl#18')
.lslvl#18:    2cde 0022  ld   $22         12318  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2cdf c202  st   [$02]       12319  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2ce0 9401  adda $01,y       12320  adda(1,Y)                       #20 retry instruction
              2ce1 e000  jmp  y,$00       12321  jmp(Y,'NEXTY')                  #21
              2ce2 00f4  ld   $f4         12322  ld(-24/2)                       #22
                                          12323
                                          12324
              2ce3 0200  nop              12325  fillers(until=0xff)
              2ce4 0200  nop
              2ce5 0200  nop
              * 28 times
              2cff 0200  nop              12326  align(0x100, size=0x100)
                                          12327
                                          12328  #-----------------------------------------------------------------------
                                          12329  #       More vCPU instruction implementations, (0x2D00)
                                          12330  #-----------------------------------------------------------------------
                                          12331  #
                                          12332  # JEQL implementation
                                          12333  label('jeql#13')
jeql#13:      2d00 1519  ld   [$19],y     12334  ld([vAC+1],Y)                   #13
              2d01 00fb  ld   $fb         12335  ld(min(0,maxTicks-40/2))        #14
              2d02 8115  adda [$15]       12336  adda([vTicks])                  #15
              2d03 e81d  blt  .jeql#18    12337  blt('.jeql#18')                 #16 not enough time left, so retry
              2d04 1118  ld   [$18],x     12338  ld([vAC],X)                     #17
              2d05 0d00  ld   [y,x]       12339  ld([Y,X])                       #18
              2d06 de00  st   [y,x++]     12340  st([Y,Xpp])                     #19
              2d07 c2b0  st   [$b0]       12341  st([0xB0])                      #20 [vAC].0
              2d08 0d00  ld   [y,x]       12342  ld([Y,X])                       #21
              2d09 de00  st   [y,x++]     12343  st([Y,Xpp])                     #22
              2d0a c2b1  st   [$b1]       12344  st([0xB1])                      #23 [vAC].1
              2d0b 0d00  ld   [y,x]       12345  ld([Y,X])                       #24
              2d0c de00  st   [y,x++]     12346  st([Y,Xpp])                     #25
              2d0d c2b2  st   [$b2]       12347  st([0xB2])                      #26 [vAC].2
              2d0e 0d00  ld   [y,x]       12348  ld([Y,X])                       #27 [vAC].3
              2d0f 41b2  ora  [$b2]       12349  ora([0xB2])                     #28
              2d10 41b1  ora  [$b1]       12350  ora([0xB1])                     #29
              2d11 41b0  ora  [$b0]       12351  ora([0xB0])                     #30
              2d12 ec1a  bne  .jeql#33    12352  bne('.jeql#33')                 #31 if (vAC.3 OR vAC.2 OR vAC.1 OR vAC.0) != 0
              2d13 012b  ld   [$2b]       12353  ld([sysArgs+7])                 #32 address of branch destination
              2d14 c216  st   [$16]       12354  st([vPC])                       #33
              2d15 012a  ld   [$2a]       12355  ld([sysArgs+6])                 #34
              2d16 c217  st   [$17]       12356  st([vPC+1])                     #35
              2d17 1403  ld   $03,y       12357  ld(hi('NEXTY'),Y)               #36
              2d18 e000  jmp  y,$00       12358  jmp(Y,'NEXTY')                  #37
              2d19 00ec  ld   $ec         12359  ld(-40/2)                       #38
                                          12360
                                          12361  label('.jeql#33')
.jeql#33:     2d1a 1403  ld   $03,y       12362  ld(hi('REENTER'),Y)             #33
              2d1b e0cb  jmp  y,$cb       12363  jmp(Y,'REENTER')                #34
              2d1c 00ed  ld   $ed         12364  ld(-38/2)                       #35
                                          12365
                                          12366  label('.jeql#18')
.jeql#18:     2d1d 0021  ld   $21         12367  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2d1e c202  st   [$02]       12368  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2d1f 9401  adda $01,y       12369  adda(1,Y)                       #20 retry instruction
              2d20 e000  jmp  y,$00       12370  jmp(Y,'NEXTY')                  #21
              2d21 00f4  ld   $f4         12371  ld(-24/2)                       #22
                                          12372
                                          12373
                                          12374  # JNEL implementation
                                          12375  label('jnel#13')
jnel#13:      2d22 1519  ld   [$19],y     12376  ld([vAC+1],Y)                   #13
              2d23 00fb  ld   $fb         12377  ld(min(0,maxTicks-40/2))        #14
              2d24 8115  adda [$15]       12378  adda([vTicks])                  #15
              2d25 e83f  blt  .jnel#18    12379  blt('.jnel#18')                 #16 not enough time left, so retry
              2d26 1118  ld   [$18],x     12380  ld([vAC],X)                     #17
              2d27 0d00  ld   [y,x]       12381  ld([Y,X])                       #18
              2d28 de00  st   [y,x++]     12382  st([Y,Xpp])                     #19
              2d29 c2b0  st   [$b0]       12383  st([0xB0])                      #20 [vAC].0
              2d2a 0d00  ld   [y,x]       12384  ld([Y,X])                       #21
              2d2b de00  st   [y,x++]     12385  st([Y,Xpp])                     #22
              2d2c c2b1  st   [$b1]       12386  st([0xB1])                      #23 [vAC].1
              2d2d 0d00  ld   [y,x]       12387  ld([Y,X])                       #24
              2d2e de00  st   [y,x++]     12388  st([Y,Xpp])                     #25
              2d2f c2b2  st   [$b2]       12389  st([0xB2])                      #26 [vAC].2
              2d30 0d00  ld   [y,x]       12390  ld([Y,X])                       #27 [vAC].3
              2d31 41b2  ora  [$b2]       12391  ora([0xB2])                     #28
              2d32 41b1  ora  [$b1]       12392  ora([0xB1])                     #29
              2d33 41b0  ora  [$b0]       12393  ora([0xB0])                     #30
              2d34 f03c  beq  .jnel#33    12394  beq('.jnel#33')                 #31 if (vAC.3 OR vAC.2 OR vAC.1 OR vAC.0) == 0
              2d35 012b  ld   [$2b]       12395  ld([sysArgs+7])                 #32 address of branch destination
              2d36 c216  st   [$16]       12396  st([vPC])                       #33
              2d37 012a  ld   [$2a]       12397  ld([sysArgs+6])                 #34
              2d38 c217  st   [$17]       12398  st([vPC+1])                     #35
              2d39 1403  ld   $03,y       12399  ld(hi('NEXTY'),Y)               #36
              2d3a e000  jmp  y,$00       12400  jmp(Y,'NEXTY')                  #37
              2d3b 00ec  ld   $ec         12401  ld(-40/2)                       #38
                                          12402
                                          12403  label('.jnel#33')
.jnel#33:     2d3c 1403  ld   $03,y       12404  ld(hi('REENTER'),Y)             #33
              2d3d e0cb  jmp  y,$cb       12405  jmp(Y,'REENTER')                #34
              2d3e 00ed  ld   $ed         12406  ld(-38/2)                       #35
                                          12407
                                          12408  label('.jnel#18')
.jnel#18:     2d3f 0021  ld   $21         12409  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2d40 c202  st   [$02]       12410  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2d41 9401  adda $01,y       12411  adda(1,Y)                       #20 retry instruction
              2d42 e000  jmp  y,$00       12412  jmp(Y,'NEXTY')                  #21
              2d43 00f4  ld   $f4         12413  ld(-24/2)                       #22
                                          12414
                                          12415
                                          12416  # JLTL implementation
                                          12417  label('jltl#13')
jltl#13:      2d44 1519  ld   [$19],y     12418  ld([vAC+1],Y)                   #13
              2d45 0118  ld   [$18]       12419  ld([vAC])                       #14
              2d46 9003  adda $03,x       12420  adda(3,X)                       #15
              2d47 0d00  ld   [y,x]       12421  ld([Y,X])                       #16
              2d48 e84d  blt  .jltl#19    12422  blt('.jltl#19')                 #17 if [vAC.3] < 0
              2d49 012b  ld   [$2b]       12423  ld([sysArgs+7])                 #18 address of branch destination
              2d4a 1403  ld   $03,y       12424  ld(hi('REENTER'),Y)             #19
              2d4b e0cb  jmp  y,$cb       12425  jmp(Y,'REENTER')                #20
              2d4c 00f4  ld   $f4         12426  ld(-24/2)                       #21
                                          12427
                                          12428  label('.jltl#19')
.jltl#19:     2d4d c216  st   [$16]       12429  st([vPC])                       #19
              2d4e 012a  ld   [$2a]       12430  ld([sysArgs+6])                 #20
              2d4f c217  st   [$17]       12431  st([vPC+1])                     #21
              2d50 1403  ld   $03,y       12432  ld(hi('NEXTY'),Y)               #22
              2d51 e000  jmp  y,$00       12433  jmp(Y,'NEXTY')                  #23
              2d52 00f3  ld   $f3         12434  ld(-26/2)                       #24
                                          12435
                                          12436
                                          12437  # JGTL implementation
                                          12438  label('jgtl#13')
jgtl#13:      2d53 1519  ld   [$19],y     12439  ld([vAC+1],Y)                   #13
              2d54 00fa  ld   $fa         12440  ld(min(0,maxTicks-42/2))        #14
              2d55 8115  adda [$15]       12441  adda([vTicks])                  #15
              2d56 e875  blt  .jgtl#18    12442  blt('.jgtl#18')                 #16 not enough time left, so retry
              2d57 1118  ld   [$18],x     12443  ld([vAC],X)                     #17
              2d58 0d00  ld   [y,x]       12444  ld([Y,X])                       #18
              2d59 de00  st   [y,x++]     12445  st([Y,Xpp])                     #19
              2d5a c2b0  st   [$b0]       12446  st([0xB0])                      #20 [vAC].0
              2d5b 0d00  ld   [y,x]       12447  ld([Y,X])                       #21
              2d5c de00  st   [y,x++]     12448  st([Y,Xpp])                     #22
              2d5d c2b1  st   [$b1]       12449  st([0xB1])                      #23 [vAC].1
              2d5e 0d00  ld   [y,x]       12450  ld([Y,X])                       #24
              2d5f de00  st   [y,x++]     12451  st([Y,Xpp])                     #25
              2d60 c2b2  st   [$b2]       12452  st([0xB2])                      #26 [vAC].2
              2d61 0d00  ld   [y,x]       12453  ld([Y,X])                       #27
              2d62 c2b3  st   [$b3]       12454  st([0xB3])                      #28 [vAC].3
              2d63 e86c  blt  .jgtl#31    12455  blt('.jgtl#31')                 #29 if [vAC.3] < 0
              2d64 41b2  ora  [$b2]       12456  ora([0xB2])                     #30
              2d65 41b1  ora  [$b1]       12457  ora([0xB1])                     #31
              2d66 41b0  ora  [$b0]       12458  ora([0xB0])                     #32
              2d67 ec6f  bne  .jgtl#35    12459  bne('.jgtl#35')                 #33 if (vAC.3 OR vAC.2 OR vAC.1 OR vAC.0) != 0
              2d68 012b  ld   [$2b]       12460  ld([sysArgs+7])                 #34 address of branch destination
              2d69 1403  ld   $03,y       12461  ld(hi('REENTER'),Y)             #35
              2d6a e0cb  jmp  y,$cb       12462  jmp(Y,'REENTER')                #36
              2d6b 00ec  ld   $ec         12463  ld(-40/2)                       #37
                                          12464
                                          12465  label('.jgtl#31')
.jgtl#31:     2d6c 1403  ld   $03,y       12466  ld(hi('REENTER'),Y)             #31
              2d6d e0cb  jmp  y,$cb       12467  jmp(Y,'REENTER')                #32
              2d6e 00ee  ld   $ee         12468  ld(-36/2)                       #33
                                          12469
                                          12470  label('.jgtl#35')
.jgtl#35:     2d6f c216  st   [$16]       12471  st([vPC])                       #35
              2d70 012a  ld   [$2a]       12472  ld([sysArgs+6])                 #36
              2d71 c217  st   [$17]       12473  st([vPC+1])                     #37
              2d72 1403  ld   $03,y       12474  ld(hi('NEXTY'),Y)               #38
              2d73 e000  jmp  y,$00       12475  jmp(Y,'NEXTY')                  #39
              2d74 00eb  ld   $eb         12476  ld(-42/2)                       #40
                                          12477
                                          12478  label('.jgtl#18')
.jgtl#18:     2d75 0021  ld   $21         12479  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2d76 c202  st   [$02]       12480  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2d77 9401  adda $01,y       12481  adda(1,Y)                       #20 retry instruction
              2d78 e000  jmp  y,$00       12482  jmp(Y,'NEXTY')                  #21
              2d79 00f4  ld   $f4         12483  ld(-24/2)                       #22
                                          12484
                                          12485
                                          12486  # JLEL implementation
                                          12487  label('jlel#13')
jlel#13:      2d7a 1519  ld   [$19],y     12488  ld([vAC+1],Y)                   #13
              2d7b 00fa  ld   $fa         12489  ld(min(0,maxTicks-42/2))        #14
              2d7c 8115  adda [$15]       12490  adda([vTicks])                  #15
              2d7d e8a0  blt  .jlel#18    12491  blt('.jlel#18')                 #16 not enough time left, so retry
              2d7e 1118  ld   [$18],x     12492  ld([vAC],X)                     #17
              2d7f 0d00  ld   [y,x]       12493  ld([Y,X])                       #18
              2d80 de00  st   [y,x++]     12494  st([Y,Xpp])                     #19
              2d81 c2b0  st   [$b0]       12495  st([0xB0])                      #20 [vAC].0
              2d82 0d00  ld   [y,x]       12496  ld([Y,X])                       #21
              2d83 de00  st   [y,x++]     12497  st([Y,Xpp])                     #22
              2d84 c2b1  st   [$b1]       12498  st([0xB1])                      #23 [vAC].1
              2d85 0d00  ld   [y,x]       12499  ld([Y,X])                       #24
              2d86 de00  st   [y,x++]     12500  st([Y,Xpp])                     #25
              2d87 c2b2  st   [$b2]       12501  st([0xB2])                      #26 [vAC].2
              2d88 0d00  ld   [y,x]       12502  ld([Y,X])                       #27
              2d89 c2b3  st   [$b3]       12503  st([0xB3])                      #28 [vAC].3
              2d8a e893  blt  .jlel#31    12504  blt('.jlel#31')                 #29 if [vAC.3] < 0
              2d8b 41b2  ora  [$b2]       12505  ora([0xB2])                     #30
              2d8c 41b1  ora  [$b1]       12506  ora([0xB1])                     #31
              2d8d 41b0  ora  [$b0]       12507  ora([0xB0])                     #32
              2d8e f09a  beq  .jlel#35    12508  beq('.jlel#35')                 #33 if (vAC.3 OR vAC.2 OR vAC.1 OR vAC.0) == 0
              2d8f 012b  ld   [$2b]       12509  ld([sysArgs+7])                 #34 address of branch destination
              2d90 1403  ld   $03,y       12510  ld(hi('REENTER'),Y)             #35
              2d91 e0cb  jmp  y,$cb       12511  jmp(Y,'REENTER')                #36
              2d92 00ec  ld   $ec         12512  ld(-40/2)                       #37
                                          12513
                                          12514  label('.jlel#31')
.jlel#31:     2d93 012b  ld   [$2b]       12515  ld([sysArgs+7])                 #31 address of branch destination
              2d94 c216  st   [$16]       12516  st([vPC])                       #32
              2d95 012a  ld   [$2a]       12517  ld([sysArgs+6])                 #33
              2d96 c217  st   [$17]       12518  st([vPC+1])                     #34
              2d97 1403  ld   $03,y       12519  ld(hi('REENTER'),Y)             #35
              2d98 e0cb  jmp  y,$cb       12520  jmp(Y,'REENTER')                #36
              2d99 00ec  ld   $ec         12521  ld(-40/2)                       #37
                                          12522
                                          12523  label('.jlel#35')
.jlel#35:     2d9a c216  st   [$16]       12524  st([vPC])                       #35
              2d9b 012a  ld   [$2a]       12525  ld([sysArgs+6])                 #36
              2d9c c217  st   [$17]       12526  st([vPC+1])                     #37
              2d9d 1403  ld   $03,y       12527  ld(hi('NEXTY'),Y)               #38
              2d9e e000  jmp  y,$00       12528  jmp(Y,'NEXTY')                  #39
              2d9f 00eb  ld   $eb         12529  ld(-42/2)                       #40
                                          12530
                                          12531  label('.jlel#18')
.jlel#18:     2da0 0021  ld   $21         12532  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2da1 c202  st   [$02]       12533  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2da2 9401  adda $01,y       12534  adda(1,Y)                       #20 retry instruction
              2da3 e000  jmp  y,$00       12535  jmp(Y,'NEXTY')                  #21
              2da4 00f4  ld   $f4         12536  ld(-24/2)                       #22
                                          12537
                                          12538
                                          12539  # JGEL implementation
                                          12540  label('jgel#13')
jgel#13:      2da5 1519  ld   [$19],y     12541  ld([vAC+1],Y)                   #13
              2da6 0118  ld   [$18]       12542  ld([vAC])                       #14
              2da7 9003  adda $03,x       12543  adda(3,X)                       #15
              2da8 0d00  ld   [y,x]       12544  ld([Y,X])                       #16
              2da9 e8b1  blt  .jgel#19    12545  blt('.jgel#19')                 #17 if [vAC.3] < 0
              2daa 012b  ld   [$2b]       12546  ld([sysArgs+7])                 #18 address of branch destination
              2dab c216  st   [$16]       12547  st([vPC])                       #19
              2dac 012a  ld   [$2a]       12548  ld([sysArgs+6])                 #20
              2dad c217  st   [$17]       12549  st([vPC+1])                     #21
              2dae 1403  ld   $03,y       12550  ld(hi('NEXTY'),Y)               #22
              2daf e000  jmp  y,$00       12551  jmp(Y,'NEXTY')                  #23
              2db0 00f3  ld   $f3         12552  ld(-26/2)                       #24
                                          12553
                                          12554  label('.jgel#19')
.jgel#19:     2db1 1403  ld   $03,y       12555  ld(hi('REENTER'),Y)             #19
              2db2 e0cb  jmp  y,$cb       12556  jmp(Y,'REENTER')                #20
              2db3 00f4  ld   $f4         12557  ld(-24/2)                       #21
                                          12558
                                          12559
                                          12560  # LOKEQI implementation
                                          12561  label('lokeqi#13')
lokeqi#13:    2db4 1517  ld   [$17],y     12562  ld([vPC+1],Y)                   #13
              2db5 de00  st   [y,x++]     12563  st([Y,Xpp])                     #14 X++
              2db6 00fe  ld   $fe         12564  ld(min(0,maxTicks-34/2))        #15
              2db7 8115  adda [$15]       12565  adda([vTicks])                  #16
              2db8 e8c8  blt  .lokeqi#19  12566  blt('.lokeqi#19')               #17 not enough time left, so retry
              2db9 0d00  ld   [y,x]       12567  ld([Y,X])                       #18 imm.0
              2dba 1519  ld   [$19],y     12568  ld([vAC+1],Y)                   #19
              2dbb 1118  ld   [$18],x     12569  ld([vAC],X)                     #20
              2dbc de00  st   [y,x++]     12570  st([Y,Xpp])                     #21 [vAC.0] = imm.0, X++
              2dbd 011d  ld   [$1d]       12571  ld([vTmp])                      #22
              2dbe de00  st   [y,x++]     12572  st([Y,Xpp])                     #23 [vAC.1] = imm.1, X++
              2dbf 0000  ld   $00         12573  ld(0)                           #24
              2dc0 de00  st   [y,x++]     12574  st([Y,Xpp])                     #25 [vAC.2] = 0, X++
              2dc1 ce00  st   [y,x]       12575  st([Y,X])                       #26 [vAC.3] = 0
              2dc2 0116  ld   [$16]       12576  ld([vPC])                       #27 fix vPC for 3 byte instruction
              2dc3 8001  adda $01         12577  adda(1)                         #28
              2dc4 c216  st   [$16]       12578  st([vPC])                       #29
              2dc5 1403  ld   $03,y       12579  ld(hi('NEXTY'),Y)               #30
              2dc6 e000  jmp  y,$00       12580  jmp(Y,'NEXTY')                  #31
              2dc7 00ef  ld   $ef         12581  ld(-34/2)                       #32
                                          12582
                                          12583  label('.lokeqi#19')
.lokeqi#19:   2dc8 0116  ld   [$16]       12584  ld([vPC])                       #19 retry
              2dc9 a002  suba $02         12585  suba(2)                         #20
              2dca c216  st   [$16]       12586  st([vPC])                       #21
              2dcb 1403  ld   $03,y       12587  ld(hi('NEXTY'),Y)               #22
              2dcc e000  jmp  y,$00       12588  jmp(Y,'NEXTY')                  #23
              2dcd 00f3  ld   $f3         12589  ld(-26/2)                       #24
                                          12590
                                          12591
                                          12592  # LOKEI implementation
                                          12593  label('lokei#13')
lokei#13:     2dce 1517  ld   [$17],y     12594  ld([vPC+1],Y)                   #13
              2dcf c2b0  st   [$b0]       12595  st([0xB0])                      #14 imm.3
              2dd0 de00  st   [y,x++]     12596  st([Y,Xpp])                     #15 X++
              2dd1 00fa  ld   $fa         12597  ld(min(0,maxTicks-42/2))        #16
              2dd2 8115  adda [$15]       12598  adda([vTicks])                  #17
              2dd3 e8ea  blt  .lokei#20   12599  blt('.lokei#20')                #18 not enough time left, so retry
              2dd4 0d00  ld   [y,x]       12600  ld([Y,X])                       #19
              2dd5 de00  st   [y,x++]     12601  st([Y,Xpp])                     #20 X++
              2dd6 c2b1  st   [$b1]       12602  st([0xB1])                      #21 imm.2
              2dd7 0d00  ld   [y,x]       12603  ld([Y,X])                       #22
              2dd8 de00  st   [y,x++]     12604  st([Y,Xpp])                     #23 X++
              2dd9 c2b2  st   [$b2]       12605  st([0xB2])                      #24 imm.1
              2dda 0d00  ld   [y,x]       12606  ld([Y,X])                       #25 imm.0
              2ddb 1519  ld   [$19],y     12607  ld([vAC+1],Y)                   #26
              2ddc 1118  ld   [$18],x     12608  ld([vAC],X)                     #27
              2ddd de00  st   [y,x++]     12609  st([Y,Xpp])                     #28 [vAC.0] = imm.0, X++
              2dde 01b2  ld   [$b2]       12610  ld([0xB2])                      #29
              2ddf de00  st   [y,x++]     12611  st([Y,Xpp])                     #30 [vAC.1] = imm.1, X++
              2de0 01b1  ld   [$b1]       12612  ld([0xB1])                      #31
              2de1 de00  st   [y,x++]     12613  st([Y,Xpp])                     #32 [vAC.2] = imm.2, X++
              2de2 01b0  ld   [$b0]       12614  ld([0xB0])                      #33
              2de3 ce00  st   [y,x]       12615  st([Y,X])                       #34 [vAC.3] = imm.3
              2de4 0116  ld   [$16]       12616  ld([vPC])                       #35 fix vPC for 5 byte instruction
              2de5 8003  adda $03         12617  adda(3)                         #36
              2de6 c216  st   [$16]       12618  st([vPC])                       #37
              2de7 1403  ld   $03,y       12619  ld(hi('NEXTY'),Y)               #38
              2de8 e000  jmp  y,$00       12620  jmp(Y,'NEXTY')                  #39
              2de9 00eb  ld   $eb         12621  ld(-42/2)                       #40
                                          12622
                                          12623  label('.lokei#20')
.lokei#20:    2dea 0116  ld   [$16]       12624  ld([vPC])                       #20 retry
              2deb a002  suba $02         12625  suba(2)                         #21
              2dec c216  st   [$16]       12626  st([vPC])                       #22
              2ded 1403  ld   $03,y       12627  ld(hi('REENTER'),Y)             #23
              2dee e0cb  jmp  y,$cb       12628  jmp(Y,'REENTER')                #24
              2def 00f2  ld   $f2         12629  ld(-28/2)                       #25
                                          12630
                                          12631
              2df0 0200  nop              12632  fillers(until=0xff)
              2df1 0200  nop
              2df2 0200  nop
              * 15 times
              2dff 0200  nop              12633  align(0x100, size=0x100)
                                          12634
                                          12635  #-----------------------------------------------------------------------
                                          12636  #       More vCPU instruction implementations, (0x2E00)
                                          12637  #-----------------------------------------------------------------------
                                          12638  #
                                          12639  # ANDBI implementation
                                          12640  label('andbi#13')
andbi#13:     2e00 0500  ld   [x]         12641  ld([X])                         #13
              2e01 212b  anda [$2b]       12642  anda([sysArgs+7])               #14 immediate value
              2e02 c600  st   [x]         12643  st([X])                         #15
              2e03 1403  ld   $03,y       12644  ld(hi('NEXTY'),Y)               #16
              2e04 e000  jmp  y,$00       12645  jmp(Y,'NEXTY')                  #17
              2e05 00f6  ld   $f6         12646  ld(-20/2)                       #18
                                          12647
                                          12648  # ORBI implementation
                                          12649  label('orbi#13')
orbi#13:      2e06 0500  ld   [x]         12650  ld([X])                         #13
              2e07 412b  ora  [$2b]       12651  ora([sysArgs+7])                #14 immediate value
              2e08 c600  st   [x]         12652  st([X])                         #15
              2e09 1403  ld   $03,y       12653  ld(hi('NEXTY'),Y)               #16
              2e0a e000  jmp  y,$00       12654  jmp(Y,'NEXTY')                  #17
              2e0b 00f6  ld   $f6         12655  ld(-20/2)                       #18
                                          12656
                                          12657  # XORBI implementation
                                          12658  label('xorbi#13')
xorbi#13:     2e0c 0500  ld   [x]         12659  ld([X])                         #13
              2e0d 612b  xora [$2b]       12660  xora([sysArgs+7])               #14 immediate value
              2e0e c600  st   [x]         12661  st([X])                         #15
              2e0f 1403  ld   $03,y       12662  ld(hi('NEXTY'),Y)               #16
              2e10 e000  jmp  y,$00       12663  jmp(Y,'NEXTY')                  #17
              2e11 00f6  ld   $f6         12664  ld(-20/2)                       #18
                                          12665
                                          12666
                                          12667  # INCL implementation
                                          12668  label('incl#13')
incl#13:      2e12 00fd  ld   $fd         12669  ld(min(0,maxTicks-36/2))        #13
              2e13 8115  adda [$15]       12670  adda([vTicks])                  #14
              2e14 e831  blt  .incl#17    12671  blt('.incl#17')                 #15 not enough time left, so retry
              2e15 1400  ld   $00,y       12672  ld(0,Y)                         #16
              2e16 0500  ld   [x]         12673  ld([X])                         #17
              2e17 8001  adda $01         12674  adda(1)                         #18
              2e18 f01d  beq  .incl#21    12675  beq('.incl#21')                 #19 if 0 byte is 0x00
              2e19 de00  st   [y,x++]     12676  st([Y,Xpp])                     #20 inc 0 byte
              2e1a 1403  ld   $03,y       12677  ld(hi('REENTER'),Y)             #21
              2e1b e0cb  jmp  y,$cb       12678  jmp(Y,'REENTER')                #22
              2e1c 00f3  ld   $f3         12679  ld(-26/2)                       #23
                                          12680
                                          12681  label('.incl#21')
.incl#21:     2e1d 0500  ld   [x]         12682  ld([X])                         #21
              2e1e 8001  adda $01         12683  adda(1)                         #22
              2e1f f024  beq  .incl#25    12684  beq('.incl#25')                 #23 if 1 byte is 0x00
              2e20 de00  st   [y,x++]     12685  st([Y,Xpp])                     #24 inc 1 byte
              2e21 1403  ld   $03,y       12686  ld(hi('REENTER'),Y)             #25
              2e22 e0cb  jmp  y,$cb       12687  jmp(Y,'REENTER')                #26
              2e23 00f1  ld   $f1         12688  ld(-30/2)                       #27
                                          12689
                                          12690  label('.incl#25')
.incl#25:     2e24 0500  ld   [x]         12691  ld([X])                         #25
              2e25 8001  adda $01         12692  adda(1)                         #26
              2e26 f02b  beq  .incl#29    12693  beq('.incl#29')                 #27 if 2 byte is 0x00
              2e27 de00  st   [y,x++]     12694  st([Y,Xpp])                     #28 inc 2 byte
              2e28 1403  ld   $03,y       12695  ld(hi('REENTER'),Y)             #29
              2e29 e0cb  jmp  y,$cb       12696  jmp(Y,'REENTER')                #30
              2e2a 00ef  ld   $ef         12697  ld(-34/2)                       #31
                                          12698
                                          12699  label('.incl#29')
.incl#29:     2e2b 0500  ld   [x]         12700  ld([X])                         #29
              2e2c 8001  adda $01         12701  adda(1)                         #30
              2e2d c600  st   [x]         12702  st([X])                         #31 inc high byte
              2e2e 1403  ld   $03,y       12703  ld(hi('NEXTY'),Y)               #32
              2e2f e000  jmp  y,$00       12704  jmp(Y,'NEXTY')                  #33
              2e30 00ee  ld   $ee         12705  ld(-36/2)                       #34
                                          12706
                                          12707  label('.incl#17')
.incl#17:     2e31 0022  ld   $22         12708  ld(hi('PREFX2_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              2e32 c202  st   [$02]       12709  st([vCpuSelect])                #18 restore PREFX2 instruction page
              2e33 9401  adda $01,y       12710  adda(1,Y)                       #19 retry instruction
              2e34 e0cb  jmp  y,$cb       12711  jmp(Y,'REENTER')                #20
              2e35 00f4  ld   $f4         12712  ld(-24/2)                       #21
                                          12713
                                          12714
                                          12715  # DECL implementation
                                          12716  label('decl#13')
decl#13:      2e36 1200  ld   ac,x        12717  ld(AC,X)                        #13 var
              2e37 00fb  ld   $fb         12718  ld(min(0,maxTicks-40/2))        #14
              2e38 8115  adda [$15]       12719  adda([vTicks])                  #15
              2e39 e859  blt  .decl#18    12720  blt('.decl#18')                 #16 not enough time left, so retry
              2e3a 1400  ld   $00,y       12721  ld(0,Y)                         #17
              2e3b 0500  ld   [x]         12722  ld([X])                         #18
              2e3c a001  suba $01         12723  suba(1)                         #19
              2e3d de00  st   [y,x++]     12724  st([Y,Xpp])                     #20 dec 0 byte
              2e3e 60ff  xora $ff         12725  xora(0xff)                      #21 if 0 byte is 0xff
              2e3f f044  beq  .decl#24    12726  beq('.decl#24')                 #22
              2e40 0500  ld   [x]         12727  ld([X])                         #23
              2e41 1403  ld   $03,y       12728  ld(hi('NEXTY'),Y)               #24
              2e42 e000  jmp  y,$00       12729  jmp(Y,'NEXTY')                  #25
              2e43 00f2  ld   $f2         12730  ld(-28/2)                       #26
                                          12731
                                          12732  label('.decl#24')
.decl#24:     2e44 a001  suba $01         12733  suba(1)                         #24
              2e45 de00  st   [y,x++]     12734  st([Y,Xpp])                     #25 dec 1 byte
              2e46 60ff  xora $ff         12735  xora(0xff)                      #26 if 1 byte is 0xff
              2e47 f04c  beq  .decl#29    12736  beq('.decl#29')                 #27
              2e48 0500  ld   [x]         12737  ld([X])                         #28
              2e49 1403  ld   $03,y       12738  ld(hi('REENTER'),Y)             #29
              2e4a e0cb  jmp  y,$cb       12739  jmp(Y,'REENTER')                #30
              2e4b 00ef  ld   $ef         12740  ld(-34/2)                       #31
                                          12741
                                          12742  label('.decl#29')
.decl#29:     2e4c a001  suba $01         12743  suba(1)                         #29
              2e4d de00  st   [y,x++]     12744  st([Y,Xpp])                     #30 dec 2 byte
              2e4e 60ff  xora $ff         12745  xora(0xff)                      #31 if 2 byte is 0xff
              2e4f f054  beq  .decl#34    12746  beq('.decl#34')                 #32
              2e50 0500  ld   [x]         12747  ld([X])                         #33
              2e51 1403  ld   $03,y       12748  ld(hi('NEXTY'),Y)               #34
              2e52 e000  jmp  y,$00       12749  jmp(Y,'NEXTY')                  #35
              2e53 00ed  ld   $ed         12750  ld(-38/2)                       #36
                                          12751
                                          12752  label('.decl#34')
.decl#34:     2e54 a001  suba $01         12753  suba(1)                         #34
              2e55 c600  st   [x]         12754  st([X])                         #35 dec 3 byte
              2e56 1403  ld   $03,y       12755  ld(hi('NEXTY'),Y)               #36
              2e57 e000  jmp  y,$00       12756  jmp(Y,'NEXTY')                  #37
              2e58 00ec  ld   $ec         12757  ld(-40/2)                       #38
                                          12758
                                          12759  label('.decl#18')
.decl#18:     2e59 0022  ld   $22         12760  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2e5a c202  st   [$02]       12761  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2e5b 9401  adda $01,y       12762  adda(1,Y)                       #20 retry instruction
              2e5c e000  jmp  y,$00       12763  jmp(Y,'NEXTY')                  #21
              2e5d 00f4  ld   $f4         12764  ld(-24/2)                       #22
                                          12765
                                          12766
                                          12767
                                          12768  #-----------------------------------------------------------------------
                                          12769  #
                                          12770  #  CopyMemory[Ext]/ScanMemory[Ext]/OsCall
                                          12771  #
                                          12772  #-----------------------------------------------------------------------
                                          12773
              2e5e 0200  nop              12774  fillers(until=0xff)
              2e5f 0200  nop
              2e60 0200  nop
              * 161 times
              2eff 0200  nop              12775  align(0x100, size=0x100)
                                          12776
                                          12777  # SYS_CopyMemory_vX_80 implementation
                                          12778
                                          12779  label('sys_CopyMemory')
sys_CopyMemory:
              2f00 f83e  ble  .sysCm#20   12780  ble('.sysCm#20')                     #18   goto burst6
              2f01 a006  suba $06         12781  suba(6)                              #19
              2f02 f440  bge  .sysCm#22   12782  bge('.sysCm#22')                     #20   goto burst6
              2f03 1527  ld   [$27],y     12783  ld([sysArgs+3],Y)                    #21
              2f04 8003  adda $03         12784  adda(3)                              #22
              2f05 f41d  bge  .sysCm#25   12785  bge('.sysCm#25')                     #23   goto burst3
              2f06 1126  ld   [$26],x     12786  ld([sysArgs+2],X)                    #24
                                          12787
              2f07 8002  adda $02         12788  adda(2)                              #25   single
              2f08 c218  st   [$18]       12789  st([vAC])                            #26
              2f09 0d00  ld   [y,x]       12790  ld([Y,X])                            #27
              2f0a 1525  ld   [$25],y     12791  ld([sysArgs+1],Y)                    #28
              2f0b 1124  ld   [$24],x     12792  ld([sysArgs+0],X)                    #29
              2f0c ce00  st   [y,x]       12793  st([Y,X])                            #30
              2f0d 0124  ld   [$24]       12794  ld([sysArgs+0])                      #31
              2f0e 8001  adda $01         12795  adda(1)                              #32
              2f0f c224  st   [$24]       12796  st([sysArgs+0])                      #33
              2f10 0126  ld   [$26]       12797  ld([sysArgs+2])                      #34
              2f11 8001  adda $01         12798  adda(1)                              #35
              2f12 c226  st   [$26]       12799  st([sysArgs+2])                      #36
              2f13 0118  ld   [$18]       12800  ld([vAC])                            #37
              2f14 f017  beq  $2f17       12801  beq(pc()+3)                          #38
              2f15 fc18  bra  $2f18       12802  bra(pc()+3)                          #39
              2f16 00fe  ld   $fe         12803  ld(-2)                               #40
              2f17 0000  ld   $00         12804  ld(0)                                #40!
              2f18 8116  adda [$16]       12805  adda([vPC])                          #41
              2f19 c216  st   [$16]       12806  st([vPC])                            #42
              2f1a 1403  ld   $03,y       12807  ld(hi('REENTER'),Y)                  #43
              2f1b e0cb  jmp  y,$cb       12808  jmp(Y,'REENTER')                     #44
              2f1c 00e8  ld   $e8         12809  ld(-48/2)                            #45
                                          12810
                                          12811  label('.sysCm#25')
.sysCm#25:    2f1d c218  st   [$18]       12812  st([vAC])                            #25   burst3
                                          12813  for i in range(3):
              2f1e 0d00  ld   [y,x]       12814    ld([Y,X])                            #26+3*i
              2f1f c228  st   [$28]       12815    st([sysArgs+4+i])                    #27+3*i
              2f20 de00  st   [y,x++]     12816    st([Y,Xpp]) if i<2 else None         #28+3*i
              2f21 0d00  ld   [y,x]
              2f22 c229  st   [$29]
              2f23 de00  st   [y,x++]
              2f24 0d00  ld   [y,x]
              2f25 c22a  st   [$2a]
              2f26 1525  ld   [$25],y     12817  ld([sysArgs+1],Y)                    #34
              2f27 1124  ld   [$24],x     12818  ld([sysArgs+0],X)                    #35
                                          12819  for i in range(3):
              2f28 0128  ld   [$28]       12820    ld([sysArgs+4+i])                    #36+2*i
              2f29 de00  st   [y,x++]     12821    st([Y,Xpp])                          #37+2*i
              2f2a 0129  ld   [$29]
              2f2b de00  st   [y,x++]
              2f2c 012a  ld   [$2a]
              2f2d de00  st   [y,x++]
              2f2e 0124  ld   [$24]       12822  ld([sysArgs+0])                      #42
              2f2f 8003  adda $03         12823  adda(3)                              #43
              2f30 c224  st   [$24]       12824  st([sysArgs+0])                      #44
              2f31 0126  ld   [$26]       12825  ld([sysArgs+2])                      #45
              2f32 8003  adda $03         12826  adda(3)                              #46
              2f33 c226  st   [$26]       12827  st([sysArgs+2])                      #47
              2f34 0118  ld   [$18]       12828  ld([vAC])                            #48
              2f35 f038  beq  $2f38       12829  beq(pc()+3)                          #49
              2f36 fc39  bra  $2f39       12830  bra(pc()+3)                          #50
              2f37 00fe  ld   $fe         12831  ld(-2)                               #51
              2f38 0000  ld   $00         12832  ld(0)                                #51!
              2f39 8116  adda [$16]       12833  adda([vPC])                          #52
              2f3a c216  st   [$16]       12834  st([vPC])                            #53
              2f3b 1403  ld   $03,y       12835  ld(hi('NEXTY'),Y)                    #54
              2f3c e000  jmp  y,$00       12836  jmp(Y,'NEXTY')                       #55
              2f3d 00e3  ld   $e3         12837  ld(-58/2)                            #56
                                          12838
                                          12839  label('.sysCm#20')
.sysCm#20:    2f3e 0200  nop              12840  nop()                                #20   burst6
              2f3f 1527  ld   [$27],y     12841  ld([sysArgs+3],Y)                    #21
                                          12842  label('.sysCm#22')
.sysCm#22:    2f40 c218  st   [$18]       12843  st([vAC])                            #22   burst6
              2f41 1126  ld   [$26],x     12844  ld([sysArgs+2],X)                    #23
                                          12845  for i in range(6):
              2f42 0d00  ld   [y,x]       12846    ld([Y,X])                            #24+i*3
              2f43 c21a  st   [$1a]       12847    st([vLR+i if i<2 else sysArgs+2+i])  #25+i*3
              2f44 de00  st   [y,x++]     12848    st([Y,Xpp]) if i<5 else None         #26+i*3 if i<5
              2f45 0d00  ld   [y,x]
              2f46 c21b  st   [$1b]
              2f47 de00  st   [y,x++]
              2f48 0d00  ld   [y,x]
              2f49 c228  st   [$28]
              2f4a de00  st   [y,x++]
              2f4b 0d00  ld   [y,x]
              2f4c c229  st   [$29]
              2f4d de00  st   [y,x++]
              2f4e 0d00  ld   [y,x]
              2f4f c22a  st   [$2a]
              2f50 de00  st   [y,x++]
              2f51 0d00  ld   [y,x]
              2f52 c22b  st   [$2b]
              2f53 1525  ld   [$25],y     12849  ld([sysArgs+1],Y)                    #41
              2f54 1124  ld   [$24],x     12850  ld([sysArgs+0],X)                    #42
                                          12851  for i in range(6):
              2f55 011a  ld   [$1a]       12852    ld([vLR+i if i<2 else sysArgs+2+i])  #43+i*2
              2f56 de00  st   [y,x++]     12853    st([Y,Xpp])                          #44+i*2
              2f57 011b  ld   [$1b]
              2f58 de00  st   [y,x++]
              2f59 0128  ld   [$28]
              2f5a de00  st   [y,x++]
              2f5b 0129  ld   [$29]
              2f5c de00  st   [y,x++]
              2f5d 012a  ld   [$2a]
              2f5e de00  st   [y,x++]
              2f5f 012b  ld   [$2b]
              2f60 de00  st   [y,x++]
              2f61 0124  ld   [$24]       12854  ld([sysArgs+0])                      #55
              2f62 8006  adda $06         12855  adda(6)                              #56
              2f63 c224  st   [$24]       12856  st([sysArgs+0])                      #57
              2f64 0126  ld   [$26]       12857  ld([sysArgs+2])                      #58
              2f65 8006  adda $06         12858  adda(6)                              #59
              2f66 c226  st   [$26]       12859  st([sysArgs+2])                      #60
                                          12860
              2f67 0118  ld   [$18]       12861  ld([vAC])                            #61
              2f68 ec6c  bne  .sysCm#64   12862  bne('.sysCm#64')                     #62
              2f69 1403  ld   $03,y       12863  ld(hi('REENTER'),Y)                  #63
              2f6a e0cb  jmp  y,$cb       12864  jmp(Y,'REENTER')                     #64
              2f6b 00de  ld   $de         12865  ld(-68/2)                            #65
                                          12866
                                          12867  label('.sysCm#64')
.sysCm#64:    2f6c 00e6  ld   $e6         12868  ld(-52/2)                            #64
              2f6d 8115  adda [$15]       12869  adda([vTicks])                       #13 = 65 - 52
              2f6e c215  st   [$15]       12870  st([vTicks])                         #14
              2f6f 80e8  adda $e8         12871  adda(min(0,maxTicks-(26+52)/2))      #15   could probably be min(0,maxTicks-(26+52)/2)
                                          12872  bge('sys_CopyMemory')                #16
              2f70 f400  bge  sys_CopyMemory
              2f71 0118  ld   [$18]       12873  ld([vAC])                            #17
              2f72 00fe  ld   $fe         12874  ld(-2)                               #18   notime
              2f73 8116  adda [$16]       12875  adda([vPC])                          #19
              2f74 c216  st   [$16]       12876  st([vPC])                            #20
              2f75 1403  ld   $03,y       12877  ld(hi('REENTER'),Y)                  #21
              2f76 e0cb  jmp  y,$cb       12878  jmp(Y,'REENTER')                     #22
              2f77 00f3  ld   $f3         12879  ld(-26/2)                            #23
                                          12880
                                          12881  # SYS_CopyMemoryExt_vX_100 implementation
                                          12882
                                          12883  label('sys_CopyMemoryExt')
                                          12884
sys_CopyMemoryExt:
              2f78 8200  adda ac          12885  adda(AC)                             #18
              2f79 8200  adda ac          12886  adda(AC)                             #19
              2f7a 403c  ora  $3c         12887  ora(0x3c)                            #20
              2f7b c21d  st   [$1d]       12888  st([vTmp])                           #21 [vTmp] = src ctrl value
              2f7c 0119  ld   [$19]       12889  ld([vAC+1])                          #22
              2f7d 20fc  anda $fc         12890  anda(0xfc)                           #23
              2f7e 403c  ora  $3c         12891  ora(0x3c)                            #24
              2f7f c21a  st   [$1a]       12892  st([vLR])                            #25 [vLR] = dest ctrl value
                                          12893
                                          12894  label('.sysCme#26')
.sysCme#26:   2f80 0118  ld   [$18]       12895  ld([vAC])                            #26
              2f81 f8a4  ble  .sysCme#29  12896  ble('.sysCme#29')                    #27   goto burst5
              2f82 a005  suba $05         12897  suba(5)                              #28
              2f83 f4a6  bge  .sysCme#31  12898  bge('.sysCme#31')                    #29   goto burst5
              2f84 1527  ld   [$27],y     12899  ld([sysArgs+3],Y)                    #30
              2f85 8004  adda $04         12900  adda(4)                              #31
                                          12901
              2f86 c218  st   [$18]       12902  st([vAC])                            #32   single
              2f87 111d  ld   [$1d],x     12903  ld([vTmp],X)                         #33
              2f88 c500  ctrl x           12904  ctrl(X)                              #34
              2f89 1126  ld   [$26],x     12905  ld([sysArgs+2],X)                    #35
              2f8a 0d00  ld   [y,x]       12906  ld([Y,X])                            #36
              2f8b 111a  ld   [$1a],x     12907  ld([vLR],X)                          #37
              2f8c c500  ctrl x           12908  ctrl(X)                              #38
              2f8d 1525  ld   [$25],y     12909  ld([sysArgs+1],Y)                    #39
              2f8e 1124  ld   [$24],x     12910  ld([sysArgs+0],X)                    #40
              2f8f ce00  st   [y,x]       12911  st([Y,X])                            #41
              2f90 1401  ld   $01,y       12912  ld(hi(ctrlBits), Y)                  #42
              2f91 09f8  ld   [y,$f8]     12913  ld([Y,ctrlBits])                     #43
              2f92 1200  ld   ac,x        12914  ld(AC,X)                             #44
              2f93 c500  ctrl x           12915  ctrl(X)                              #45
              2f94 0124  ld   [$24]       12916  ld([sysArgs+0])                      #46
              2f95 8001  adda $01         12917  adda(1)                              #47
              2f96 c224  st   [$24]       12918  st([sysArgs+0])                      #48
              2f97 0126  ld   [$26]       12919  ld([sysArgs+2])                      #49
              2f98 8001  adda $01         12920  adda(1)                              #50
              2f99 c226  st   [$26]       12921  st([sysArgs+2])                      #51
              2f9a 0118  ld   [$18]       12922  ld([vAC])                            #52  done?
              2f9b f09e  beq  $2f9e       12923  beq(pc()+3)                          #53
              2f9c fc9f  bra  $2f9f       12924  bra(pc()+3)                          #54
              2f9d 00fe  ld   $fe         12925  ld(-2)                               #55  restart
              2f9e 0000  ld   $00         12926  ld(0)                                #55! finished
              2f9f 8116  adda [$16]       12927  adda([vPC])                          #56
              2fa0 c216  st   [$16]       12928  st([vPC])                            #57
              2fa1 1403  ld   $03,y       12929  ld(hi('NEXTY'),Y)                    #58
              2fa2 e000  jmp  y,$00       12930  jmp(Y,'NEXTY')                       #59
              2fa3 00e1  ld   $e1         12931  ld(-62/2)                            #60
                                          12932
                                          12933  label('.sysCme#29')
.sysCme#29:   2fa4 0200  nop              12934  nop()                                #29   burst5
              2fa5 1527  ld   [$27],y     12935  ld([sysArgs+3],Y)                    #30
                                          12936  label('.sysCme#31')
.sysCme#31:   2fa6 c218  st   [$18]       12937  st([vAC])                            #31   burst5
              2fa7 111d  ld   [$1d],x     12938  ld([vTmp],X)                         #32
              2fa8 c500  ctrl x           12939  ctrl(X)                              #33
              2fa9 1126  ld   [$26],x     12940  ld([sysArgs+2],X)                    #34
                                          12941  for i in range(5):
              2faa 0d00  ld   [y,x]       12942    ld([Y,X])                            #35+i*3
              2fab c21b  st   [$1b]       12943    st([vLR+1 if i<1 else sysArgs+3+i])  #36+i*3
              2fac de00  st   [y,x++]     12944    st([Y,Xpp]) if i<4 else None         #37+i*3 if i<4
              2fad 0d00  ld   [y,x]
              2fae c228  st   [$28]
              2faf de00  st   [y,x++]
              2fb0 0d00  ld   [y,x]
              2fb1 c229  st   [$29]
              2fb2 de00  st   [y,x++]
              2fb3 0d00  ld   [y,x]
              2fb4 c22a  st   [$2a]
              2fb5 de00  st   [y,x++]
              2fb6 0d00  ld   [y,x]
              2fb7 c22b  st   [$2b]
              2fb8 111a  ld   [$1a],x     12945  ld([vLR],X)                          #49
              2fb9 c500  ctrl x           12946  ctrl(X)                              #50
              2fba 1525  ld   [$25],y     12947  ld([sysArgs+1],Y)                    #51
              2fbb 1124  ld   [$24],x     12948  ld([sysArgs+0],X)                    #52
                                          12949  for i in range(5):
              2fbc 011b  ld   [$1b]       12950    ld([vLR+1 if i<1 else sysArgs+3+i])  #53+i*2
              2fbd de00  st   [y,x++]     12951    st([Y,Xpp])                          #54+i*2
              2fbe 0128  ld   [$28]
              2fbf de00  st   [y,x++]
              2fc0 0129  ld   [$29]
              2fc1 de00  st   [y,x++]
              2fc2 012a  ld   [$2a]
              2fc3 de00  st   [y,x++]
              2fc4 012b  ld   [$2b]
              2fc5 de00  st   [y,x++]
              2fc6 0124  ld   [$24]       12952  ld([sysArgs+0])                      #63
              2fc7 8005  adda $05         12953  adda(5)                              #64
              2fc8 c224  st   [$24]       12954  st([sysArgs+0])                      #65
              2fc9 0126  ld   [$26]       12955  ld([sysArgs+2])                      #66
              2fca 8005  adda $05         12956  adda(5)                              #67
              2fcb c226  st   [$26]       12957  st([sysArgs+2])                      #68
                                          12958
              2fcc 0118  ld   [$18]       12959  ld([vAC])                            #69
              2fcd ecd6  bne  .sysCme#72  12960  bne('.sysCme#72')                    #70
              2fce 1401  ld   $01,y       12961  ld(hi(ctrlBits), Y)                  #71  we're done!
              2fcf 09f8  ld   [y,$f8]     12962  ld([Y,ctrlBits])                     #72
              2fd0 30fc  anda $fc,x       12963  anda(0xfc,X)                         #73
              2fd1 c500  ctrl x           12964  ctrl(X)                              #74
              2fd2 011d  ld   [$1d]       12965  ld([vTmp])                           #75  always read after ctrl
              2fd3 1403  ld   $03,y       12966  ld(hi('NEXTY'),Y)                    #76
              2fd4 e000  jmp  y,$00       12967  jmp(Y,'NEXTY')                       #77
              2fd5 00d8  ld   $d8         12968  ld(-80/2)                            #78
                                          12969
                                          12970  label('.sysCme#72')
.sysCme#72:   2fd6 00e6  ld   $e6         12971  ld(-52/2)                            #72
              2fd7 8115  adda [$15]       12972  adda([vTicks])                       #21 = 72 - 52
              2fd8 c215  st   [$15]       12973  st([vTicks])                         #22
              2fd9 80e1  adda $e1         12974  adda(min(0,maxTicks-(40+52)/2))      #23
              2fda f480  bge  .sysCme#26  12975  bge('.sysCme#26')                    #24  enough time for another loop
              2fdb 00fe  ld   $fe         12976  ld(-2)                               #25
              2fdc 8116  adda [$16]       12977  adda([vPC])                          #26  restart
              2fdd c216  st   [$16]       12978  st([vPC])                            #27
              2fde 1401  ld   $01,y       12979  ld(hi(ctrlBits), Y)                  #28
              2fdf 09f8  ld   [y,$f8]     12980  ld([Y,ctrlBits])                     #29
              2fe0 30fc  anda $fc,x       12981  anda(0xfc,X)                         #30
              2fe1 c500  ctrl x           12982  ctrl(X)                              #31
              2fe2 011d  ld   [$1d]       12983  ld([vTmp])                           #32 always read after ctrl
              2fe3 1403  ld   $03,y       12984  ld(hi('REENTER'),Y)                  #33
              2fe4 e0cb  jmp  y,$cb       12985  jmp(Y,'REENTER')                     #34
              2fe5 00ed  ld   $ed         12986  ld(-38/2)                            #35 max: 38 + 52 = 90 cycles
                                          12987
              2fe6 0200  nop              12988  align(0x100, size=0x100)
              2fe7 0200  nop
              2fe8 0200  nop
              * 26 times
                                          12989
                                          12990  # SYS_ScanMemory_vX_50 implementation
                                          12991
                                          12992  label('sys_ScanMemory')
sys_ScanMemory:
              3000 1124  ld   [$24],x     12993  ld([sysArgs+0],X)                    #18
              3001 0d00  ld   [y,x]       12994  ld([Y,X])                            #19
                                          12995  label('.sysSme#20')
.sysSme#20:   3002 6126  xora [$26]       12996  xora([sysArgs+2])                    #20
              3003 f01e  beq  .sysSme#23  12997  beq('.sysSme#23')                    #21
              3004 0d00  ld   [y,x]       12998  ld([Y,X])                            #22
              3005 6127  xora [$27]       12999  xora([sysArgs+3])                    #23
              3006 f021  beq  .sysSme#26  13000  beq('.sysSme#26')                    #24
              3007 0124  ld   [$24]       13001  ld([sysArgs+0])                      #25
              3008 8001  adda $01         13002  adda(1);                             #26
              3009 d224  st   [$24],x     13003  st([sysArgs+0],X)                    #27
              300a 0118  ld   [$18]       13004  ld([vAC])                            #28
              300b a001  suba $01         13005  suba(1)                              #29
              300c f01a  beq  .sysSme#32  13006  beq('.sysSme#32')                    #30 return zero
              300d c218  st   [$18]       13007  st([vAC])                            #31
              300e 00f7  ld   $f7         13008  ld(-18/2)                            #14 = 32 - 18
              300f 8115  adda [$15]       13009  adda([vTicks])                       #15
              3010 c215  st   [$15]       13010  st([vTicks])                         #16
              3011 80f8  adda $f8         13011  adda(min(0,maxTicks -(28+18)/2))     #17
              3012 f402  bge  .sysSme#20  13012  bge('.sysSme#20')                    #18
              3013 0d00  ld   [y,x]       13013  ld([Y,X])                            #19
              3014 00fe  ld   $fe         13014  ld(-2)                               #20 restart
              3015 8116  adda [$16]       13015  adda([vPC])                          #21
              3016 c216  st   [$16]       13016  st([vPC])                            #22
              3017 1403  ld   $03,y       13017  ld(hi('REENTER'),Y)                  #23
              3018 e0cb  jmp  y,$cb       13018  jmp(Y,'REENTER')                     #24
              3019 00f2  ld   $f2         13019  ld(-28/2)                            #25
                                          13020
                                          13021  label('.sysSme#32')
.sysSme#32:   301a c219  st   [$19]       13022  st([vAC+1])                          #32 return zero
              301b 1403  ld   $03,y       13023  ld(hi('REENTER'),Y)                  #33
              301c e0cb  jmp  y,$cb       13024  jmp(Y,'REENTER')                     #34
              301d 00ed  ld   $ed         13025  ld(-38/2)                            #35
                                          13026
                                          13027  label('.sysSme#23')
.sysSme#23:   301e 0200  nop              13028  nop()                                #23 success
              301f 0200  nop              13029  nop()                                #24
              3020 0124  ld   [$24]       13030  ld([sysArgs+0])                      #25
                                          13031  label('.sysSme#26')
.sysSme#26:   3021 c218  st   [$18]       13032  st([vAC])                            #26 success
              3022 0125  ld   [$25]       13033  ld([sysArgs+1])                      #27
              3023 c219  st   [$19]       13034  st([vAC+1])                          #28
              3024 1403  ld   $03,y       13035  ld(hi('REENTER'),Y)                  #29
              3025 e0cb  jmp  y,$cb       13036  jmp(Y,'REENTER')                     #30
              3026 00ef  ld   $ef         13037  ld(-34/2)                            #31
                                          13038
                                          13039
                                          13040  # SYS_ScanMemoryExt_vX_50 implementation
                                          13041
                                          13042  label('sys_ScanMemoryExt')
sys_ScanMemoryExt:
              3027 503c  ora  $3c,x       13043  ora(0x3c,X)                          #18
              3028 c500  ctrl x           13044  ctrl(X)                              #19
              3029 1525  ld   [$25],y     13045  ld([sysArgs+1],Y)                    #20
              302a 1124  ld   [$24],x     13046  ld([sysArgs+0],X)                    #21
              302b 0d00  ld   [y,x]       13047  ld([Y,X])                            #22
              302c 0200  nop              13048  nop()                                #23
                                          13049  label('.sysSmx#24')
.sysSmx#24:   302d 6126  xora [$26]       13050  xora([sysArgs+2])                    #24
              302e f04a  beq  .sysSmx#27  13051  beq('.sysSmx#27')                    #25
              302f 0d00  ld   [y,x]       13052  ld([Y,X])                            #26
              3030 6127  xora [$27]       13053  xora([sysArgs+3])                    #27
              3031 f04d  beq  .sysSmx#30  13054  beq('.sysSmx#30')                    #28
              3032 0124  ld   [$24]       13055  ld([sysArgs+0])                      #29
              3033 8001  adda $01         13056  adda(1);                             #30
              3034 d224  st   [$24],x     13057  st([sysArgs+0],X)                    #31
              3035 0118  ld   [$18]       13058  ld([vAC])                            #32
              3036 a001  suba $01         13059  suba(1)                              #33
              3037 f053  beq  .sysSmx#36  13060  beq('.sysSmx#36')                    #34 return zero
              3038 c218  st   [$18]       13061  st([vAC])                            #35
              3039 00f7  ld   $f7         13062  ld(-18/2)                            #18 = 36 - 18
              303a 8115  adda [$15]       13063  adda([vTicks])                       #19
              303b c215  st   [$15]       13064  st([vTicks])                         #20
              303c 80f7  adda $f7         13065  adda(min(0,maxTicks -(30+18)/2))     #21
              303d f42d  bge  .sysSmx#24  13066  bge('.sysSmx#24')                    #22
              303e 0d00  ld   [y,x]       13067  ld([Y,X])                            #23
              303f 0116  ld   [$16]       13068  ld([vPC])                            #24
              3040 a002  suba $02         13069  suba(2)                              #25 restart
              3041 c216  st   [$16]       13070  st([vPC])                            #26
              3042 1401  ld   $01,y       13071  ld(hi(ctrlBits),Y)                   #27 restore and return
              3043 09f8  ld   [y,$f8]     13072  ld([Y,ctrlBits])                     #28
              3044 30fc  anda $fc,x       13073  anda(0xfc,X)                         #29
              3045 c500  ctrl x           13074  ctrl(X)                              #30
              3046 011d  ld   [$1d]       13075  ld([vTmp])                           #31
              3047 1403  ld   $03,y       13076  ld(hi('NEXTY'),Y)                    #32
              3048 e000  jmp  y,$00       13077  jmp(Y,'NEXTY')                       #33
              3049 00ee  ld   $ee         13078  ld(-36/2)                            #34
                                          13079
                                          13080  label('.sysSmx#27')
.sysSmx#27:   304a 0200  nop              13081  nop()                                #27 success
              304b 0200  nop              13082  nop()                                #28
              304c 0124  ld   [$24]       13083  ld([sysArgs+0])                      #29
                                          13084  label('.sysSmx#30')
.sysSmx#30:   304d c218  st   [$18]       13085  st([vAC])                            #30 success
              304e 0125  ld   [$25]       13086  ld([sysArgs+1])                      #31
              304f 0200  nop              13087  nop()                                #32
              3050 0200  nop              13088  nop()                                #33
              3051 0200  nop              13089  nop()                                #34
              3052 0200  nop              13090  nop()                                #35
                                          13091  label('.sysSmx#36')
.sysSmx#36:   3053 c219  st   [$19]       13092  st([vAC+1])                          #36
              3054 1401  ld   $01,y       13093  ld(hi(ctrlBits),Y)                   #37 restore and return
              3055 09f8  ld   [y,$f8]     13094  ld([Y,ctrlBits])                     #38
              3056 30fc  anda $fc,x       13095  anda(0xfc,X)                         #39
              3057 c500  ctrl x           13096  ctrl(X)                              #40
              3058 011d  ld   [$1d]       13097  ld([vTmp])                           #41
              3059 1403  ld   $03,y       13098  ld(hi('NEXTY'),Y)                    #42
              305a e000  jmp  y,$00       13099  jmp(Y,'NEXTY')                       #43
              305b 00e9  ld   $e9         13100  ld(-46/2)                            #44
                                          13101
                                          13102
                                          13103  #-----------------------------------------------------------------------
                                          13104  #
                                          13105  #  Spare pages
                                          13106  #
                                          13107  #-----------------------------------------------------------------------
                                          13108
              305c 0200  nop              13109  fillers(until=0xff)
              305d 0200  nop
              305e 0200  nop
              * 163 times
              30ff 0200  nop              13110  align(0x100, size=0x100)
                                          13111
              3100 0200  nop              13112  fillers(until=0xff)
              3101 0200  nop
              3102 0200  nop
              * 255 times
              31ff 0200  nop              13113  align(0x100, size=0x100)
                                          13114
              3200 0200  nop              13115  fillers(until=0xff)
              3201 0200  nop
              3202 0200  nop
              * 255 times
              32ff 0200  nop              13116  align(0x100, size=0x100)
                                          13117
              3300 0200  nop              13118  fillers(until=0xff)
              3301 0200  nop
              3302 0200  nop
              * 255 times
              33ff 0200  nop              13119  align(0x100, size=0x100)
                                          13120
              3400 0200  nop              13121  fillers(until=0xff)
              3401 0200  nop
              3402 0200  nop
              * 255 times
              34ff 0200  nop              13122  align(0x100, size=0x100)
                                          13123
              3500 0200  nop              13124  fillers(until=0xff)
              3501 0200  nop
              3502 0200  nop
              * 255 times
              35ff 0200  nop              13125  align(0x100, size=0x100)
                                          13126
              3600 0200  nop              13127  fillers(until=0xff)
              3601 0200  nop
              3602 0200  nop
              * 255 times
              36ff 0200  nop              13128  align(0x100, size=0x100)
                                          13129
              3700 0200  nop              13130  fillers(until=0xff)
              3701 0200  nop
              3702 0200  nop
              * 255 times
              37ff 0200  nop              13131  align(0x100, size=0x100)
                                          13132
              3800 0200  nop              13133  fillers(until=0xff)
              3801 0200  nop
              3802 0200  nop
              * 255 times
              38ff 0200  nop              13134  align(0x100, size=0x100)
                                          13135
              3900 0200  nop              13136  fillers(until=0xff)
              3901 0200  nop
              3902 0200  nop
              * 255 times
              39ff 0200  nop              13137  align(0x100, size=0x100)
                                          13138
              3a00 0200  nop              13139  fillers(until=0xff)
              3a01 0200  nop
              3a02 0200  nop
              * 255 times
              3aff 0200  nop              13140  align(0x100, size=0x100)
                                          13141
              3b00 0200  nop              13142  fillers(until=0xff)
              3b01 0200  nop
              3b02 0200  nop
              * 255 times
              3bff 0200  nop              13143  align(0x100, size=0x100)
                                          13144
              3c00 0200  nop              13145  fillers(until=0xff)
              3c01 0200  nop
              3c02 0200  nop
              * 255 times
              3cff 0200  nop              13146  align(0x100, size=0x100)
                                          13147
              3d00 0200  nop              13148  fillers(until=0xff)
              3d01 0200  nop
              3d02 0200  nop
              * 255 times
              3dff 0200  nop              13149  align(0x100, size=0x100)
                                          13150
              3e00 0200  nop              13151  fillers(until=0xff)
              3e01 0200  nop
              3e02 0200  nop
              * 255 times
              3eff 0200  nop              13152  align(0x100, size=0x100)
                                          13153
              3f00 0200  nop              13154  fillers(until=0xff)
              3f01 0200  nop
              3f02 0200  nop
              * 255 times
              3fff 0200  nop              13155  align(0x100, size=0x100)
                                          13156
                                          13157  #-----------------------------------------------------------------------
                                          13158  #
                                          13159  #  End of core
                                          13160  #
                                          13161  #-----------------------------------------------------------------------
                                          13162  disableListing()
                                          ;+-----------------------------------+
                                          ;| SYS_Loader_vX.py                  |
                                          ;+-----------------------------------+
SYS_Loader_vX:
SYS_LoaderNextByteIn_32:
              4000 0109  ld   [$09]
              4001 6127  xora [$27]
              4002 ec0f  bne  .sysNbi#19
              4003 1124  ld   [$24],x
              4004 1525  ld   [$25],y
              4005 0300  ld   in
              4006 ce00  st   [y,x]
              4007 8126  adda [$26]
              4008 c226  st   [$26]
              4009 0124  ld   [$24]
              400a 8001  adda $01
              400b c224  st   [$24]
              400c 1403  ld   $03,y
              400d e0cb  jmp  y,$cb
              400e 00f0  ld   $f0
.sysNbi#19:   400f 0116  ld   [$16]
              4010 a002  suba $02
              4011 c216  st   [$16]
              4012 1403  ld   $03,y
              4013 e000  jmp  y,$00
              4014 00f3  ld   $f3
SYS_LoaderProcessInput_64:
              4015 1525  ld   [$25],y
              4016 0126  ld   [$26]
              4017 ec3c  bne  .sysPi#19
              4018 0124  ld   [$24]
              4019 b041  suba $41,x
              401a 0d00  ld   [y,x]
              401b de00  st   [y,x++]     ;Just X++
              401c 604c  xora $4c
              401d ec40  bne  .sysPi#25
              401e 0d00  ld   [y,x]       ;Valid command
              401f de00  st   [y,x++]     ;Just X++
              4020 203f  anda $3f
              4021 c228  st   [$28]
              4022 8d00  adda [y,x]
              4023 8001  adda $01
              4024 20fe  anda $fe
              4025 c21d  st   [$1d]
              4026 0d00  ld   [y,x]
              4027 de00  st   [y,x++]     ;Just X++
              4028 c229  st   [$29]
              4029 0d00  ld   [y,x]
              402a de00  st   [y,x++]     ;Just X++
              402b c22a  st   [$2a]
              402c a001  suba $01
              402d 20fc  anda $fc
              402e 411d  ora  [$1d]
              402f c21d  st   [$1d]
              4030 0128  ld   [$28]
              4031 ec45  bne  .sysPi#45
              4032 0129  ld   [$29]       ;Execute
              4033 c21a  st   [$1a]
              4034 a002  suba $02
              4035 c216  st   [$16]
              4036 012a  ld   [$2a]
              4037 c217  st   [$17]
              4038 c21b  st   [$1b]
              4039 1403  ld   $03,y
              403a e0cb  jmp  y,$cb
              403b 00e4  ld   $e4
.sysPi#19:    403c 0001  ld   $01         ;Wait 6 cycles
              403d ec3d  bne  $403d
              403e a001  suba $01
              403f 0200  nop              ;Invalid checksum
.sysPi#25:    4040 0067  ld   $67         ;Unknown command
              4041 c226  st   [$26]
              4042 1403  ld   $03,y
              4043 e0cb  jmp  y,$cb
              4044 00f0  ld   $f0
.sysPi#45:    4045 011d  ld   [$1d]       ;Loading data
              4046 ec49  bne  $4049
              4047 fc4a  bra  $404a
              4048 00fc  ld   $fc         ;Unsafe
              4049 00ff  ld   $ff         ;Safe
              404a 2121  anda [$21]
              404b c221  st   [$21]
              404c 0124  ld   [$24]
              404d b001  suba $01,x
              404e 0d00  ld   [y,x]
              404f c226  st   [$26]
              4050 1403  ld   $03,y
              4051 e0cb  jmp  y,$cb
              4052 00e2  ld   $e2
SYS_LoaderPayloadCopy_34:
              4053 0128  ld   [$28]
              4054 f061  beq  .sysCc#18
              4055 a001  suba $01
              4056 c228  st   [$28]
              4057 1124  ld   [$24],x
              4058 1525  ld   [$25],y
              4059 0d00  ld   [y,x]
              405a 1129  ld   [$29],x
              405b 152a  ld   [$2a],y
              405c ce00  st   [y,x]
              405d 0129  ld   [$29]
              405e 8001  adda $01
              405f c229  st   [$29]
              4060 fc65  bra  .sysCc#30
.sysCc#18:    4061 1403  ld   $03,y
              4062 0004  ld   $04         ;Wait 11 cycles
              4063 ec63  bne  $4063
              4064 a001  suba $01
.sysCc#30:    4065 e0cb  jmp  y,$cb
              4066 00ef  ld   $ef         ;End of SYS_Loader_vX.py, size 103
                                          ;+-----------------------------------+
                                          ;| SYS_Racer_v1.py                   |
                                          ;+-----------------------------------+
SYS_Racer_v1:
SYS_RacerUpdateVideoX_40:
              4067 1126  ld   [$26],x
              4068 1527  ld   [$27],y
              4069 0d00  ld   [y,x]
              406a c21d  st   [$1d]
              406b a128  suba [$28]
              406c 1124  ld   [$24],x
              406d 1525  ld   [$25],y
              406e ce00  st   [y,x]
              406f 0124  ld   [$24]
              4070 a004  suba $04
              4071 c224  st   [$24]
              4072 011d  ld   [$1d]
              4073 c228  st   [$28]
              4074 0126  ld   [$26]
              4075 8001  adda $01
              4076 c226  st   [$26]
              4077 ec7b  bne  .sysRacer0
              4078 0116  ld   [$16]
              4079 fc7d  bra  .sysRacer1
              407a 0200  nop
.sysRacer0:   407b a002  suba $02
              407c c216  st   [$16]
.sysRacer1:   407d 1403  ld   $03,y
              407e e0cb  jmp  y,$cb
              407f 00ec  ld   $ec
SYS_RacerUpdateVideoY_40:
              4080 0127  ld   [$27]
              4081 2008  anda $08
              4082 ec85  bne  $4085
              4083 fc86  bra  $4086
              4084 0000  ld   $00
              4085 0001  ld   $01
              4086 c21d  st   [$1d]
              4087 1525  ld   [$25],y
              4088 0124  ld   [$24]
              4089 8002  adda $02
              408a d224  st   [$24],x
              408b 60ee  xora $ee
              408c c218  st   [$18]
              408d c219  st   [$19]
              408e 0126  ld   [$26]
              408f 20fe  anda $fe
              4090 811d  adda [$1d]
              4091 ce00  st   [y,x]
              4092 0126  ld   [$26]
              4093 8001  adda $01
              4094 c226  st   [$26]
              4095 1403  ld   $03,y
              4096 e0cb  jmp  y,$cb
              4097 00ec  ld   $ec         ;End of SYS_Racer_v1.py, size 49
                                          ;+-----------------------------------+
                                          ;| Apps/Racer/Horizon-256x16.rgb     |
                                          ;+-----------------------------------+
              4098 dc00  st   $00,[y,x++] ;'\x00'
              4099 dc00  st   $00,[y,x++] ;'\x00'
              409a dc00  st   $00,[y,x++] ;'\x00'
              409b dc00  st   $00,[y,x++] ;'\x00'
              409c dc00  st   $00,[y,x++] ;'\x00'
              409d dc00  st   $00,[y,x++] ;'\x00'
              409e dc00  st   $00,[y,x++] ;'\x00'
              409f dc00  st   $00,[y,x++] ;'\x00'
              40a0 0000  ld   $00
              40a1 c218  st   [$18]
              40a2 0000  ld   $00
              40a3 14e0  ld   $e0,y
              40a4 e071  jmp  y,$71
              40a5 c219  st   [$19]
zippedRacerHorizon:
              40a6 0041  ld   $41
              40a7 0000  ld   $00
              40a8 00c3  ld   $c3
              40a9 0030  ld   $30
              40aa 000c  ld   $0c
              40ab 00c3  ld   $c3
              40ac 0030  ld   $30
              40ad 000c  ld   $0c
              40ae 00c3  ld   $c3
              40af 0030  ld   $30
              40b0 000c  ld   $0c
              40b1 00c3  ld   $c3
              40b2 0030  ld   $30
              40b3 000c  ld   $0c
              40b4 00c3  ld   $c3
              40b5 0030  ld   $30
              40b6 000c  ld   $0c
              40b7 00c3  ld   $c3
              40b8 0030  ld   $30
              40b9 000c  ld   $0c
              40ba 00c3  ld   $c3
              40bb 0030  ld   $30
              40bc 000c  ld   $0c
              40bd 00c3  ld   $c3
              40be 0000  ld   $00
              40bf 000c  ld   $0c
              40c0 00c3  ld   $c3
              40c1 0030  ld   $30
              40c2 000c  ld   $0c
              40c3 00c3  ld   $c3
              40c4 0030  ld   $30
              40c5 00fc  ld   $fc
              40c6 0002  ld   $02
              40c7 0030  ld   $30
              40c8 000c  ld   $0c
              40c9 00c3  ld   $c3
              40ca 0030  ld   $30
              40cb 000c  ld   $0c
              40cc 00c3  ld   $c3
              40cd 0030  ld   $30
              40ce 000c  ld   $0c
              40cf 00c3  ld   $c3
              40d0 0030  ld   $30
              40d1 000c  ld   $0c
              40d2 00c3  ld   $c3
              40d3 0030  ld   $30
              40d4 000c  ld   $0c
              40d5 00c3  ld   $c3
              40d6 0030  ld   $30
              40d7 000c  ld   $0c
              40d8 00c3  ld   $c3
              40d9 0030  ld   $30
              40da 000c  ld   $0c
              40db 00c3  ld   $c3
              40dc 0030  ld   $30
              40dd 000c  ld   $0c
              40de 00c3  ld   $c3
              40df 0030  ld   $30
              40e0 000c  ld   $0c
              40e1 00c3  ld   $c3
              40e2 0030  ld   $30
              40e3 000c  ld   $0c
              40e4 00c3  ld   $c3
              40e5 0030  ld   $30
              40e6 000c  ld   $0c
              40e7 00c3  ld   $c3
              40e8 0030  ld   $30
              40e9 000c  ld   $0c
              40ea 00c3  ld   $c3
              40eb 0030  ld   $30
              40ec 000c  ld   $0c
              40ed 00c3  ld   $c3
              40ee 0030  ld   $30
              40ef 000c  ld   $0c
              40f0 00c3  ld   $c3
              40f1 0030  ld   $30
              40f2 000c  ld   $0c
              40f3 00c3  ld   $c3
              40f4 0030  ld   $30
              40f5 000c  ld   $0c
              40f6 00c3  ld   $c3
              40f7 0030  ld   $30
              40f8 000c  ld   $0c
              40f9 00c3  ld   $c3
              40fa 0013  ld   $13
              40fb fe00  bra  ac          ;+-----------------------------------+
              40fc fcfd  bra  $40fd       ;|                                   |
              40fd 1418  ld   $18,y       ;| Trampoline for page $4000 lookups |
              40fe e006  jmp  y,$06       ;|                                   |
              40ff c218  st   [$18]       ;+-----------------------------------+
              4100 000c  ld   $0c
              4101 00c3  ld   $c3
              4102 0030  ld   $30
              4103 000c  ld   $0c
              4104 00c3  ld   $c3
              4105 002a  ld   $2a
              4106 000c  ld   $0c
              4107 00c3  ld   $c3
              4108 0030  ld   $30
              4109 000c  ld   $0c
              410a 00c3  ld   $c3
              410b 0030  ld   $30
              410c 000c  ld   $0c
              410d 00c3  ld   $c3
              410e 0030  ld   $30
              410f 000c  ld   $0c
              4110 00c3  ld   $c3
              4111 0030  ld   $30
              4112 000c  ld   $0c
              4113 00c3  ld   $c3
              4114 0030  ld   $30
              4115 000c  ld   $0c
              4116 00c3  ld   $c3
              4117 0030  ld   $30
              4118 000c  ld   $0c
              4119 00c3  ld   $c3
              411a 0030  ld   $30
              411b 000c  ld   $0c
              411c 00c3  ld   $c3
              411d 0030  ld   $30
              411e 000c  ld   $0c
              411f 00c3  ld   $c3
              4120 0030  ld   $30
              4121 000c  ld   $0c
              4122 00c3  ld   $c3
              4123 0030  ld   $30
              4124 000c  ld   $0c
              4125 00c3  ld   $c3
              4126 0030  ld   $30
              4127 000c  ld   $0c
              4128 00c3  ld   $c3
              4129 0030  ld   $30
              412a 000c  ld   $0c
              412b 00ab  ld   $ab
              412c 002a  ld   $2a
              412d 000c  ld   $0c
              412e 00c3  ld   $c3
              412f 0030  ld   $30
              4130 000c  ld   $0c
              4131 00c3  ld   $c3
              4132 0030  ld   $30
              4133 000c  ld   $0c
              4134 00c3  ld   $c3
              4135 0030  ld   $30
              4136 000c  ld   $0c
              4137 00c3  ld   $c3
              4138 0030  ld   $30
              4139 000c  ld   $0c
              413a 00c3  ld   $c3
              413b 00f0  ld   $f0
              413c 000f  ld   $0f
              413d 00c3  ld   $c3
              413e 0030  ld   $30
              413f 000c  ld   $0c
              4140 00c3  ld   $c3
              4141 00f0  ld   $f0
              4142 000f  ld   $0f
              4143 00c3  ld   $c3
              4144 0030  ld   $30
              4145 000c  ld   $0c
              4146 00c3  ld   $c3
              4147 003f  ld   $3f
              4148 000c  ld   $0c
              4149 00c3  ld   $c3
              414a 0030  ld   $30
              414b 000c  ld   $0c
              414c 00c3  ld   $c3
              414d 0030  ld   $30
              414e 000c  ld   $0c
              414f 00c3  ld   $c3
              4150 0030  ld   $30
              4151 000c  ld   $0c
              4152 00c3  ld   $c3
              4153 0030  ld   $30
              4154 000c  ld   $0c
              4155 00c3  ld   $c3
              4156 0030  ld   $30
              4157 000c  ld   $0c
              4158 00c3  ld   $c3
              4159 0030  ld   $30
              415a 000c  ld   $0c
              415b 00c3  ld   $c3
              415c 0030  ld   $30
              415d 000c  ld   $0c
              415e 00c3  ld   $c3
              415f 0015  ld   $15
              4160 000c  ld   $0c
              4161 00c3  ld   $c3
              4162 0030  ld   $30
              4163 000c  ld   $0c
              4164 00c3  ld   $c3
              4165 0030  ld   $30
              4166 000c  ld   $0c
              4167 00c3  ld   $c3
              4168 0030  ld   $30
              4169 001c  ld   $1c
              416a 0004  ld   $04
              416b 006b  ld   $6b
              416c 0000  ld   $00
              416d 00c3  ld   $c3
              416e 0030  ld   $30
              416f 000c  ld   $0c
              4170 00c3  ld   $c3
              4171 0030  ld   $30
              4172 000c  ld   $0c
              4173 00c3  ld   $c3
              4174 0030  ld   $30
              4175 000c  ld   $0c
              4176 00c3  ld   $c3
              4177 0030  ld   $30
              4178 000c  ld   $0c
              4179 00c3  ld   $c3
              417a 0030  ld   $30
              417b 000c  ld   $0c
              417c 00c3  ld   $c3
              417d 0030  ld   $30
              417e 000c  ld   $0c
              417f 00c3  ld   $c3
              4180 0030  ld   $30
              4181 000c  ld   $0c
              4182 00c3  ld   $c3
              4183 003f  ld   $3f
              4184 0000  ld   $00
              4185 00c3  ld   $c3
              4186 0030  ld   $30
              4187 000c  ld   $0c
              4188 00c3  ld   $c3
              4189 00f0  ld   $f0
              418a 000f  ld   $0f
              418b 00c0  ld   $c0
              418c 0030  ld   $30
              418d 000c  ld   $0c
              418e 00c3  ld   $c3
              418f 0030  ld   $30
              4190 000c  ld   $0c
              4191 00c3  ld   $c3
              4192 0030  ld   $30
              4193 000c  ld   $0c
              4194 00c3  ld   $c3
              4195 0030  ld   $30
              4196 000c  ld   $0c
              4197 00c3  ld   $c3
              4198 0030  ld   $30
              4199 000c  ld   $0c
              419a 00c3  ld   $c3
              419b 0030  ld   $30
              419c 000c  ld   $0c
              419d 00c3  ld   $c3
              419e 0030  ld   $30
              419f 000c  ld   $0c
              41a0 00c3  ld   $c3
              41a1 0030  ld   $30
              41a2 000c  ld   $0c
              41a3 00c3  ld   $c3
              41a4 0030  ld   $30
              41a5 000c  ld   $0c
              41a6 00c3  ld   $c3
              41a7 0030  ld   $30
              41a8 000c  ld   $0c
              41a9 00c3  ld   $c3
              41aa 0030  ld   $30
              41ab 000c  ld   $0c
              41ac 00c3  ld   $c3
              41ad 0030  ld   $30
              41ae 000c  ld   $0c
              41af 00c3  ld   $c3
              41b0 0030  ld   $30
              41b1 000c  ld   $0c
              41b2 00c3  ld   $c3
              41b3 0030  ld   $30
              41b4 000c  ld   $0c
              41b5 00c3  ld   $c3
              41b6 0030  ld   $30
              41b7 000c  ld   $0c
              41b8 00c3  ld   $c3
              41b9 0030  ld   $30
              41ba 000c  ld   $0c
              41bb 00c3  ld   $c3
              41bc 0030  ld   $30
              41bd 000c  ld   $0c
              41be 00c3  ld   $c3
              41bf 002a  ld   $2a
              41c0 000c  ld   $0c
              41c1 00c3  ld   $c3
              41c2 0030  ld   $30
              41c3 000c  ld   $0c
              41c4 00ab  ld   $ab
              41c5 002a  ld   $2a
              41c6 000c  ld   $0c
              41c7 00c3  ld   $c3
              41c8 0030  ld   $30
              41c9 000c  ld   $0c
              41ca 00c3  ld   $c3
              41cb 0030  ld   $30
              41cc 000c  ld   $0c
              41cd 00c3  ld   $c3
              41ce 0030  ld   $30
              41cf 000c  ld   $0c
              41d0 00c3  ld   $c3
              41d1 0030  ld   $30
              41d2 000c  ld   $0c
              41d3 00c3  ld   $c3
              41d4 00ff  ld   $ff
              41d5 00fb  ld   $fb
              41d6 00bf  ld   $bf
              41d7 003f  ld   $3f
              41d8 000c  ld   $0c
              41d9 00c3  ld   $c3
              41da 0030  ld   $30
              41db 000c  ld   $0c
              41dc 00c3  ld   $c3
              41dd 0030  ld   $30
              41de 000c  ld   $0c
              41df 00c3  ld   $c3
              41e0 0030  ld   $30
              41e1 000c  ld   $0c
              41e2 00c3  ld   $c3
              41e3 0030  ld   $30
              41e4 000c  ld   $0c
              41e5 00c3  ld   $c3
              41e6 0030  ld   $30
              41e7 000c  ld   $0c
              41e8 00c3  ld   $c3
              41e9 0030  ld   $30
              41ea 00ac  ld   $ac
              41eb 0056  ld   $56
              41ec 0095  ld   $95
              41ed 000a  ld   $0a
              41ee 00c3  ld   $c3
              41ef 0030  ld   $30
              41f0 000c  ld   $0c
              41f1 00c3  ld   $c3
              41f2 0030  ld   $30
              41f3 000c  ld   $0c
              41f4 00c3  ld   $c3
              41f5 0030  ld   $30
              41f6 000c  ld   $0c
              41f7 00c3  ld   $c3
              41f8 0030  ld   $30
              41f9 000c  ld   $0c
              41fa 00c3  ld   $c3
              41fb fe00  bra  ac          ;+-----------------------------------+
              41fc fcfd  bra  $41fd       ;|                                   |
              41fd 1418  ld   $18,y       ;| Trampoline for page $4100 lookups |
              41fe e006  jmp  y,$06       ;|                                   |
              41ff c218  st   [$18]       ;+-----------------------------------+
              4200 00f0  ld   $f0
              4201 00ff  ld   $ff
              4202 00c3  ld   $c3
              4203 0030  ld   $30
              4204 000c  ld   $0c
              4205 00c3  ld   $c3
              4206 00f0  ld   $f0
              4207 00ff  ld   $ff
              4208 00c3  ld   $c3
              4209 0030  ld   $30
              420a 000c  ld   $0c
              420b 00c3  ld   $c3
              420c 00ff  ld   $ff
              420d 000f  ld   $0f
              420e 00c3  ld   $c3
              420f 0030  ld   $30
              4210 000c  ld   $0c
              4211 00c3  ld   $c3
              4212 0030  ld   $30
              4213 000c  ld   $0c
              4214 00c3  ld   $c3
              4215 0030  ld   $30
              4216 000c  ld   $0c
              4217 00c3  ld   $c3
              4218 0030  ld   $30
              4219 000c  ld   $0c
              421a 00c3  ld   $c3
              421b 0030  ld   $30
              421c 000c  ld   $0c
              421d 00c3  ld   $c3
              421e 0030  ld   $30
              421f 000c  ld   $0c
              4220 00c3  ld   $c3
              4221 0030  ld   $30
              4222 000c  ld   $0c
              4223 00c3  ld   $c3
              4224 0015  ld   $15
              4225 000c  ld   $0c
              4226 00c3  ld   $c3
              4227 0030  ld   $30
              4228 000c  ld   $0c
              4229 00c3  ld   $c3
              422a 0030  ld   $30
              422b 000c  ld   $0c
              422c 00c3  ld   $c3
              422d 0030  ld   $30
              422e 001c  ld   $1c
              422f 00ac  ld   $ac
              4230 0056  ld   $56
              4231 0060  ld   $60
              4232 0059  ld   $59
              4233 0030  ld   $30
              4234 000c  ld   $0c
              4235 00c3  ld   $c3
              4236 0070  ld   $70
              4237 0055  ld   $55
              4238 00fd  ld   $fd
              4239 0055  ld   $55
              423a 00f5  ld   $f5
              423b 0057  ld   $57
              423c 00d5  ld   $d5
              423d 005f  ld   $5f
              423e 0055  ld   $55
              423f 007f  ld   $7f
              4240 0055  ld   $55
              4241 00fd  ld   $fd
              4242 0055  ld   $55
              4243 0005  ld   $05
              4244 00c3  ld   $c3
              4245 0030  ld   $30
              4246 000c  ld   $0c
              4247 00c3  ld   $c3
              4248 00f0  ld   $f0
              4249 000b  ld   $0b
              424a 00c0  ld   $c0
              424b 0030  ld   $30
              424c 000c  ld   $0c
              424d 00c3  ld   $c3
              424e 002f  ld   $2f
              424f 0000  ld   $00
              4250 00c3  ld   $c3
              4251 0030  ld   $30
              4252 000c  ld   $0c
              4253 00c3  ld   $c3
              4254 0030  ld   $30
              4255 000c  ld   $0c
              4256 00c3  ld   $c3
              4257 0030  ld   $30
              4258 000c  ld   $0c
              4259 00c3  ld   $c3
              425a 0030  ld   $30
              425b 000c  ld   $0c
              425c 00c3  ld   $c3
              425d 0030  ld   $30
              425e 000c  ld   $0c
              425f 00c3  ld   $c3
              4260 0030  ld   $30
              4261 000c  ld   $0c
              4262 00c3  ld   $c3
              4263 0030  ld   $30
              4264 000c  ld   $0c
              4265 00c3  ld   $c3
              4266 0030  ld   $30
              4267 000c  ld   $0c
              4268 00c3  ld   $c3
              4269 0030  ld   $30
              426a 000c  ld   $0c
              426b 00c3  ld   $c3
              426c 0030  ld   $30
              426d 000c  ld   $0c
              426e 00c3  ld   $c3
              426f 0030  ld   $30
              4270 000c  ld   $0c
              4271 00c3  ld   $c3
              4272 0030  ld   $30
              4273 000c  ld   $0c
              4274 00c3  ld   $c3
              4275 0030  ld   $30
              4276 000c  ld   $0c
              4277 00c3  ld   $c3
              4278 0030  ld   $30
              4279 000c  ld   $0c
              427a 00c3  ld   $c3
              427b 0030  ld   $30
              427c 000c  ld   $0c
              427d 00c3  ld   $c3
              427e 0030  ld   $30
              427f 000c  ld   $0c
              4280 00c3  ld   $c3
              4281 0030  ld   $30
              4282 000c  ld   $0c
              4283 00c3  ld   $c3
              4284 002a  ld   $2a
              4285 000c  ld   $0c
              4286 00c3  ld   $c3
              4287 00b0  ld   $b0
              4288 00aa  ld   $aa
              4289 00aa  ld   $aa
              428a 002a  ld   $2a
              428b 000c  ld   $0c
              428c 00c3  ld   $c3
              428d 0030  ld   $30
              428e 000c  ld   $0c
              428f 00c3  ld   $c3
              4290 0030  ld   $30
              4291 000c  ld   $0c
              4292 00c3  ld   $c3
              4293 0030  ld   $30
              4294 000c  ld   $0c
              4295 00c3  ld   $c3
              4296 0030  ld   $30
              4297 000c  ld   $0c
              4298 00bf  ld   $bf
              4299 0091  ld   $91
              429a 00f4  ld   $f4
              429b 0046  ld   $46
              429c 00d2  ld   $d2
              429d 000b  ld   $0b
              429e 00c3  ld   $c3
              429f 0030  ld   $30
              42a0 000c  ld   $0c
              42a1 00c3  ld   $c3
              42a2 0030  ld   $30
              42a3 000c  ld   $0c
              42a4 00c3  ld   $c3
              42a5 0030  ld   $30
              42a6 000c  ld   $0c
              42a7 00c3  ld   $c3
              42a8 0030  ld   $30
              42a9 000c  ld   $0c
              42aa 00c3  ld   $c3
              42ab 0030  ld   $30
              42ac 00ac  ld   $ac
              42ad 00c2  ld   $c2
              42ae 00b0  ld   $b0
              42af 00aa  ld   $aa
              42b0 00aa  ld   $aa
              42b1 00aa  ld   $aa
              42b2 00aa  ld   $aa
              42b3 00c2  ld   $c2
              42b4 00b0  ld   $b0
              42b5 000a  ld   $0a
              42b6 00c3  ld   $c3
              42b7 0030  ld   $30
              42b8 000c  ld   $0c
              42b9 00c3  ld   $c3
              42ba 0030  ld   $30
              42bb 000c  ld   $0c
              42bc 00c3  ld   $c3
              42bd 0030  ld   $30
              42be 000c  ld   $0c
              42bf 00c3  ld   $c3
              42c0 0030  ld   $30
              42c1 00ac  ld   $ac
              42c2 00fe  ld   $fe
              42c3 00ff  ld   $ff
              42c4 003f  ld   $3f
              42c5 00c0  ld   $c0
              42c6 0030  ld   $30
              42c7 00ac  ld   $ac
              42c8 00fe  ld   $fe
              42c9 00ff  ld   $ff
              42ca 003f  ld   $3f
              42cb 00c0  ld   $c0
              42cc 00b0  ld   $b0
              42cd 00fa  ld   $fa
              42ce 00ff  ld   $ff
              42cf 00ff  ld   $ff
              42d0 0000  ld   $00
              42d1 00c3  ld   $c3
              42d2 0030  ld   $30
              42d3 000c  ld   $0c
              42d4 00c3  ld   $c3
              42d5 0030  ld   $30
              42d6 000c  ld   $0c
              42d7 00c3  ld   $c3
              42d8 0030  ld   $30
              42d9 000c  ld   $0c
              42da 00c3  ld   $c3
              42db 0030  ld   $30
              42dc 000c  ld   $0c
              42dd 00c3  ld   $c3
              42de 0030  ld   $30
              42df 000c  ld   $0c
              42e0 00c3  ld   $c3
              42e1 0030  ld   $30
              42e2 000c  ld   $0c
              42e3 0057  ld   $57
              42e4 0055  ld   $55
              42e5 0005  ld   $05
              42e6 00c3  ld   $c3
              42e7 0030  ld   $30
              42e8 000c  ld   $0c
              42e9 00c3  ld   $c3
              42ea 0030  ld   $30
              42eb 000c  ld   $0c
              42ec 00c3  ld   $c3
              42ed 0096  ld   $96
              42ee 0015  ld   $15
              42ef 0058  ld   $58
              42f0 006b  ld   $6b
              42f1 00b0  ld   $b0
              42f2 00ae  ld   $ae
              42f3 0030  ld   $30
              42f4 000c  ld   $0c
              42f5 00c3  ld   $c3
              42f6 00f0  ld   $f0
              42f7 00ff  ld   $ff
              42f8 00ff  ld   $ff
              42f9 00ff  ld   $ff
              42fa 00ff  ld   $ff
              42fb fe00  bra  ac          ;+-----------------------------------+
              42fc fcfd  bra  $42fd       ;|                                   |
              42fd 1418  ld   $18,y       ;| Trampoline for page $4200 lookups |
              42fe e006  jmp  y,$06       ;|                                   |
              42ff c218  st   [$18]       ;+-----------------------------------+
              4300 00ff  ld   $ff
              4301 00ff  ld   $ff
              4302 00ff  ld   $ff
              * 8 times
              4308 000f  ld   $0f
              4309 00c3  ld   $c3
              430a 0030  ld   $30
              430b 000c  ld   $0c
              430c 00c3  ld   $c3
              430d 0030  ld   $30
              430e 00fc  ld   $fc
              430f 0003  ld   $03
              4310 0030  ld   $30
              4311 000c  ld   $0c
              4312 00ff  ld   $ff
              4313 0000  ld   $00
              4314 000c  ld   $0c
              4315 00c3  ld   $c3
              4316 0030  ld   $30
              4317 000c  ld   $0c
              4318 00c3  ld   $c3
              4319 0030  ld   $30
              431a 00fc  ld   $fc
              431b 00bf  ld   $bf
              431c 0030  ld   $30
              431d 000c  ld   $0c
              431e 00c3  ld   $c3
              431f 0030  ld   $30
              4320 000c  ld   $0c
              4321 00c3  ld   $c3
              4322 0030  ld   $30
              4323 000c  ld   $0c
              4324 00c3  ld   $c3
              4325 0030  ld   $30
              4326 000c  ld   $0c
              4327 00c3  ld   $c3
              4328 0030  ld   $30
              4329 000c  ld   $0c
              432a 00c3  ld   $c3
              432b 0030  ld   $30
              432c 000c  ld   $0c
              432d 00c3  ld   $c3
              432e 0030  ld   $30
              432f 000c  ld   $0c
              4330 00c3  ld   $c3
              4331 0030  ld   $30
              4332 000c  ld   $0c
              4333 00c3  ld   $c3
              4334 0030  ld   $30
              4335 000c  ld   $0c
              4336 00c3  ld   $c3
              4337 0030  ld   $30
              4338 000c  ld   $0c
              4339 00c3  ld   $c3
              433a 0030  ld   $30
              433b 000c  ld   $0c
              433c 00c3  ld   $c3
              433d 0030  ld   $30
              433e 000c  ld   $0c
              433f 00c3  ld   $c3
              4340 0030  ld   $30
              4341 000c  ld   $0c
              4342 00c3  ld   $c3
              4343 0030  ld   $30
              4344 000c  ld   $0c
              4345 00c3  ld   $c3
              4346 00f0  ld   $f0
              4347 00ff  ld   $ff
              4348 00ab  ld   $ab
              4349 00ff  ld   $ff
              434a 000f  ld   $0f
              434b 00c3  ld   $c3
              434c 006a  ld   $6a
              434d 00a5  ld   $a5
              434e 0056  ld   $56
              434f 002a  ld   $2a
              4350 000c  ld   $0c
              4351 00c3  ld   $c3
              4352 0030  ld   $30
              4353 000c  ld   $0c
              4354 00c3  ld   $c3
              4355 0030  ld   $30
              4356 000c  ld   $0c
              4357 00c3  ld   $c3
              4358 0030  ld   $30
              4359 000c  ld   $0c
              435a 00c3  ld   $c3
              435b 0030  ld   $30
              435c 00fc  ld   $fc
              435d 004a  ld   $4a
              435e 0030  ld   $30
              435f 00fc  ld   $fc
              4360 00c2  ld   $c2
              4361 0070  ld   $70
              4362 00f4  ld   $f4
              4363 00c2  ld   $c2
              4364 0030  ld   $30
              4365 000c  ld   $0c
              4366 00c3  ld   $c3
              4367 0030  ld   $30
              4368 000c  ld   $0c
              4369 00c3  ld   $c3
              436a 0030  ld   $30
              436b 000c  ld   $0c
              436c 00c3  ld   $c3
              436d 0030  ld   $30
              436e 000c  ld   $0c
              436f 00c3  ld   $c3
              4370 00f0  ld   $f0
              4371 00af  ld   $af
              4372 00fe  ld   $fe
              4373 00aa  ld   $aa
              4374 00aa  ld   $aa
              4375 00aa  ld   $aa
              * 6 times
              4379 00bf  ld   $bf
              437a 00fa  ld   $fa
              437b 00c3  ld   $c3
              437c 0030  ld   $30
              437d 000c  ld   $0c
              437e 00c3  ld   $c3
              437f 0030  ld   $30
              4380 000c  ld   $0c
              4381 00c3  ld   $c3
              4382 0030  ld   $30
              4383 000c  ld   $0c
              4384 00c3  ld   $c3
              4385 00f0  ld   $f0
              4386 00ff  ld   $ff
              4387 00ff  ld   $ff
              4388 0030  ld   $30
              4389 000c  ld   $0c
              438a 00c3  ld   $c3
              438b 00f0  ld   $f0
              438c 00ff  ld   $ff
              438d 00ff  ld   $ff
              438e 0030  ld   $30
              438f 000c  ld   $0c
              4390 00c3  ld   $c3
              4391 00ff  ld   $ff
              4392 00ff  ld   $ff
              4393 00c3  ld   $c3
              4394 0030  ld   $30
              4395 000c  ld   $0c
              4396 00c3  ld   $c3
              4397 0030  ld   $30
              4398 000c  ld   $0c
              4399 00c3  ld   $c3
              439a 0030  ld   $30
              439b 000c  ld   $0c
              439c 00c3  ld   $c3
              439d 0030  ld   $30
              439e 000c  ld   $0c
              439f 00c3  ld   $c3
              43a0 0030  ld   $30
              43a1 000c  ld   $0c
              43a2 00c3  ld   $c3
              43a3 0030  ld   $30
              43a4 000c  ld   $0c
              43a5 00c3  ld   $c3
              43a6 0030  ld   $30
              43a7 000c  ld   $0c
              43a8 00c3  ld   $c3
              43a9 0015  ld   $15
              43aa 000c  ld   $0c
              43ab 00c3  ld   $c3
              43ac 0030  ld   $30
              43ad 000c  ld   $0c
              43ae 00c3  ld   $c3
              43af 0030  ld   $30
              43b0 000c  ld   $0c
              43b1 00c3  ld   $c3
              43b2 00eb  ld   $eb
              43b3 001a  ld   $1a
              43b4 00ac  ld   $ac
              43b5 0056  ld   $56
              43b6 00b0  ld   $b0
              43b7 00a6  ld   $a6
              43b8 0030  ld   $30
              43b9 000c  ld   $0c
              43ba 00c3  ld   $c3
              43bb 0070  ld   $70
              43bc 0055  ld   $55
              43bd 00fd  ld   $fd
              43be 0055  ld   $55
              43bf 00f5  ld   $f5
              43c0 0057  ld   $57
              43c1 00d5  ld   $d5
              43c2 005f  ld   $5f
              43c3 0055  ld   $55
              43c4 007f  ld   $7f
              43c5 0055  ld   $55
              43c6 00fd  ld   $fd
              43c7 0055  ld   $55
              43c8 0005  ld   $05
              43c9 00c3  ld   $c3
              43ca 0030  ld   $30
              43cb 000c  ld   $0c
              43cc 00c3  ld   $c3
              43cd 0030  ld   $30
              43ce 000c  ld   $0c
              43cf 00bf  ld   $bf
              43d0 0000  ld   $00
              43d1 00fc  ld   $fc
              43d2 0002  ld   $02
              43d3 0030  ld   $30
              43d4 000c  ld   $0c
              43d5 00c3  ld   $c3
              43d6 0030  ld   $30
              43d7 000c  ld   $0c
              43d8 00c3  ld   $c3
              43d9 0030  ld   $30
              43da 006c  ld   $6c
              43db 00fc  ld   $fc
              43dc 0030  ld   $30
              43dd 000c  ld   $0c
              43de 00c3  ld   $c3
              43df 0030  ld   $30
              43e0 000c  ld   $0c
              43e1 00c3  ld   $c3
              43e2 0030  ld   $30
              43e3 000c  ld   $0c
              43e4 00c3  ld   $c3
              43e5 0030  ld   $30
              43e6 000c  ld   $0c
              43e7 00c3  ld   $c3
              43e8 0030  ld   $30
              43e9 000c  ld   $0c
              43ea 00c3  ld   $c3
              43eb 0030  ld   $30
              43ec 000c  ld   $0c
              43ed 00c3  ld   $c3
              43ee 0030  ld   $30
              43ef 000c  ld   $0c
              43f0 00c3  ld   $c3
              43f1 0030  ld   $30
              43f2 000c  ld   $0c
              43f3 00c3  ld   $c3
              43f4 0030  ld   $30
              43f5 000c  ld   $0c
              43f6 00c3  ld   $c3
              43f7 0030  ld   $30
              43f8 000c  ld   $0c
              43f9 00c3  ld   $c3
              43fa 0030  ld   $30
              43fb fe00  bra  ac          ;+-----------------------------------+
              43fc fcfd  bra  $43fd       ;|                                   |
              43fd 1418  ld   $18,y       ;| Trampoline for page $4300 lookups |
              43fe e006  jmp  y,$06       ;|                                   |
              43ff c218  st   [$18]       ;+-----------------------------------+
              4400 000c  ld   $0c
              4401 00c3  ld   $c3
              4402 0030  ld   $30
              4403 000c  ld   $0c
              4404 00c3  ld   $c3
              4405 0030  ld   $30
              4406 000c  ld   $0c
              4407 00c3  ld   $c3
              4408 0030  ld   $30
              4409 000c  ld   $0c
              440a 00c3  ld   $c3
              440b 00f0  ld   $f0
              440c 00af  ld   $af
              440d 00fe  ld   $fe
              440e 00ea  ld   $ea
              440f 000f  ld   $0f
              4410 00ab  ld   $ab
              4411 00aa  ld   $aa
              4412 00aa  ld   $aa
              4413 00aa  ld   $aa
              4414 002a  ld   $2a
              4415 000c  ld   $0c
              4416 00c3  ld   $c3
              4417 0030  ld   $30
              4418 000c  ld   $0c
              4419 00c3  ld   $c3
              441a 0030  ld   $30
              441b 000c  ld   $0c
              441c 00c3  ld   $c3
              441d 0030  ld   $30
              441e 000c  ld   $0c
              441f 00c3  ld   $c3
              4420 00f0  ld   $f0
              4421 001b  ld   $1b
              4422 00bd  ld   $bd
              4423 0030  ld   $30
              4424 00fc  ld   $fc
              4425 00c2  ld   $c2
              4426 00f0  ld   $f0
              4427 002b  ld   $2b
              4428 00bd  ld   $bd
              4429 0030  ld   $30
              442a 000c  ld   $0c
              442b 00c3  ld   $c3
              442c 0030  ld   $30
              442d 000c  ld   $0c
              442e 00c3  ld   $c3
              442f 0030  ld   $30
              4430 000c  ld   $0c
              4431 00c3  ld   $c3
              4432 0030  ld   $30
              4433 000c  ld   $0c
              4434 00c3  ld   $c3
              4435 00f0  ld   $f0
              4436 00af  ld   $af
              4437 00ab  ld   $ab
              4438 0095  ld   $95
              4439 005a  ld   $5a
              443a 0055  ld   $55
              443b 006a  ld   $6a
              443c 00a5  ld   $a5
              443d 0056  ld   $56
              443e 00aa  ld   $aa
              443f 00fe  ld   $fe
              4440 00c3  ld   $c3
              4441 0030  ld   $30
              4442 000c  ld   $0c
              4443 00c3  ld   $c3
              4444 0030  ld   $30
              4445 000c  ld   $0c
              4446 00c3  ld   $c3
              4447 0030  ld   $30
              4448 000c  ld   $0c
              4449 00c3  ld   $c3
              444a 00ff  ld   $ff
              444b 00af  ld   $af
              444c 00fe  ld   $fe
              444d 0030  ld   $30
              444e 000c  ld   $0c
              444f 00c3  ld   $c3
              4450 00ff  ld   $ff
              4451 00af  ld   $af
              4452 00fe  ld   $fe
              4453 0030  ld   $30
              4454 000c  ld   $0c
              4455 00ff  ld   $ff
              4456 00bf  ld   $bf
              4457 00fa  ld   $fa
              4458 00c3  ld   $c3
              4459 0030  ld   $30
              445a 000c  ld   $0c
              445b 00c3  ld   $c3
              445c 0030  ld   $30
              445d 000c  ld   $0c
              445e 00c3  ld   $c3
              445f 0030  ld   $30
              4460 000c  ld   $0c
              4461 00c3  ld   $c3
              4462 0030  ld   $30
              4463 000c  ld   $0c
              4464 00c3  ld   $c3
              4465 0030  ld   $30
              4466 000c  ld   $0c
              4467 00c3  ld   $c3
              4468 0030  ld   $30
              4469 000c  ld   $0c
              446a 00c3  ld   $c3
              446b 0030  ld   $30
              446c 000c  ld   $0c
              446d 00ab  ld   $ab
              446e 0095  ld   $95
              446f 000a  ld   $0a
              4470 00c3  ld   $c3
              4471 0030  ld   $30
              4472 000c  ld   $0c
              4473 00c3  ld   $c3
              4474 0030  ld   $30
              4475 000c  ld   $0c
              4476 00c3  ld   $c3
              4477 00e9  ld   $e9
              4478 001a  ld   $1a
              4479 0058  ld   $58
              447a 0041  ld   $41
              447b 00b0  ld   $b0
              447c 00ae  ld   $ae
              447d 0030  ld   $30
              447e 000c  ld   $0c
              447f 00c3  ld   $c3
              4480 00b0  ld   $b0
              4481 00ae  ld   $ae
              4482 00fe  ld   $fe
              4483 00aa  ld   $aa
              4484 00fe  ld   $fe
              4485 00ab  ld   $ab
              4486 00ea  ld   $ea
              4487 00af  ld   $af
              4488 00ab  ld   $ab
              4489 00bf  ld   $bf
              448a 00aa  ld   $aa
              448b 00ff  ld   $ff
              448c 00aa  ld   $aa
              448d 000e  ld   $0e
              448e 00c3  ld   $c3
              448f 0030  ld   $30
              4490 000c  ld   $0c
              4491 00c3  ld   $c3
              4492 0030  ld   $30
              4493 000c  ld   $0c
              4494 00c3  ld   $c3
              4495 007f  ld   $7f
              4496 0005  ld   $05
              4497 00c0  ld   $c0
              4498 0030  ld   $30
              4499 000c  ld   $0c
              449a 00c3  ld   $c3
              449b 0030  ld   $30
              449c 000c  ld   $0c
              449d 00c3  ld   $c3
              449e 0030  ld   $30
              449f 00bc  ld   $bc
              44a0 00bc  ld   $bc
              44a1 0030  ld   $30
              44a2 000c  ld   $0c
              44a3 00c3  ld   $c3
              44a4 0030  ld   $30
              44a5 000c  ld   $0c
              44a6 00c3  ld   $c3
              44a7 0030  ld   $30
              44a8 000c  ld   $0c
              44a9 00c3  ld   $c3
              44aa 0030  ld   $30
              44ab 000c  ld   $0c
              44ac 00c3  ld   $c3
              44ad 0030  ld   $30
              44ae 000c  ld   $0c
              44af 00c3  ld   $c3
              44b0 0030  ld   $30
              44b1 000c  ld   $0c
              44b2 00c3  ld   $c3
              44b3 0030  ld   $30
              44b4 000c  ld   $0c
              44b5 00c3  ld   $c3
              44b6 0030  ld   $30
              44b7 000c  ld   $0c
              44b8 00c3  ld   $c3
              44b9 0030  ld   $30
              44ba 000c  ld   $0c
              44bb 00c3  ld   $c3
              44bc 0030  ld   $30
              44bd 000c  ld   $0c
              44be 00c3  ld   $c3
              44bf 0030  ld   $30
              44c0 000c  ld   $0c
              44c1 00c3  ld   $c3
              44c2 0030  ld   $30
              44c3 000c  ld   $0c
              44c4 00c3  ld   $c3
              44c5 0030  ld   $30
              44c6 000c  ld   $0c
              44c7 00c3  ld   $c3
              44c8 0030  ld   $30
              44c9 000c  ld   $0c
              44ca 00c3  ld   $c3
              44cb 00b0  ld   $b0
              44cc 00fa  ld   $fa
              44cd 00ab  ld   $ab
              44ce 00bf  ld   $bf
              44cf 000a  ld   $0a
              44d0 00ab  ld   $ab
              44d1 0095  ld   $95
              44d2 005a  ld   $5a
              44d3 00a9  ld   $a9
              44d4 002a  ld   $2a
              44d5 000c  ld   $0c
              44d6 00c3  ld   $c3
              44d7 0012  ld   $12
              44d8 005c  ld   $5c
              44d9 00c2  ld   $c2
              44da 0030  ld   $30
              44db 000c  ld   $0c
              44dc 00c3  ld   $c3
              44dd 0030  ld   $30
              44de 000c  ld   $0c
              44df 00c3  ld   $c3
              44e0 00bf  ld   $bf
              44e1 0004  ld   $04
              44e2 00c3  ld   $c3
              44e3 002f  ld   $2f
              44e4 00fc  ld   $fc
              44e5 00c2  ld   $c2
              44e6 002f  ld   $2f
              44e7 000c  ld   $0c
              44e8 0047  ld   $47
              44e9 003f  ld   $3f
              44ea 000c  ld   $0c
              44eb 00c3  ld   $c3
              44ec 0030  ld   $30
              44ed 000c  ld   $0c
              44ee 00c3  ld   $c3
              44ef 0030  ld   $30
              44f0 000c  ld   $0c
              44f1 00c3  ld   $c3
              44f2 0030  ld   $30
              44f3 000c  ld   $0c
              44f4 00c3  ld   $c3
              44f5 00b0  ld   $b0
              44f6 00aa  ld   $aa
              44f7 00aa  ld   $aa
              44f8 0095  ld   $95
              44f9 005a  ld   $5a
              44fa 00a9  ld   $a9
              44fb fe00  bra  ac          ;+-----------------------------------+
              44fc fcfd  bra  $44fd       ;|                                   |
              44fd 1418  ld   $18,y       ;| Trampoline for page $4400 lookups |
              44fe e006  jmp  y,$06       ;|                                   |
              44ff c218  st   [$18]       ;+-----------------------------------+
              4500 006a  ld   $6a
              4501 00a5  ld   $a5
              4502 0056  ld   $56
              4503 00aa  ld   $aa
              4504 00aa  ld   $aa
              4505 00c2  ld   $c2
              4506 0030  ld   $30
              4507 000c  ld   $0c
              4508 00c3  ld   $c3
              4509 0030  ld   $30
              450a 000c  ld   $0c
              450b 00c3  ld   $c3
              450c 0030  ld   $30
              450d 000c  ld   $0c
              450e 000f  ld   $0f
              450f 003f  ld   $3f
              4510 00ac  ld   $ac
              4511 00fe  ld   $fe
              4512 0030  ld   $30
              4513 000c  ld   $0c
              4514 000f  ld   $0f
              4515 003f  ld   $3f
              4516 00ac  ld   $ac
              4517 00fe  ld   $fe
              4518 0030  ld   $30
              4519 003c  ld   $3c
              451a 00fc  ld   $fc
              451b 00b0  ld   $b0
              451c 00fa  ld   $fa
              451d 00c3  ld   $c3
              451e 0030  ld   $30
              451f 000c  ld   $0c
              4520 00c3  ld   $c3
              4521 0030  ld   $30
              4522 000c  ld   $0c
              4523 00c3  ld   $c3
              4524 0030  ld   $30
              4525 000c  ld   $0c
              4526 00c3  ld   $c3
              4527 0030  ld   $30
              4528 000c  ld   $0c
              4529 00c3  ld   $c3
              452a 0030  ld   $30
              452b 000c  ld   $0c
              452c 00c3  ld   $c3
              452d 0030  ld   $30
              452e 000c  ld   $0c
              452f 00c3  ld   $c3
              4530 0030  ld   $30
              4531 000c  ld   $0c
              4532 00c3  ld   $c3
              4533 0015  ld   $15
              4534 000c  ld   $0c
              4535 00c3  ld   $c3
              4536 0030  ld   $30
              4537 000c  ld   $0c
              4538 00c3  ld   $c3
              4539 0030  ld   $30
              453a 000c  ld   $0c
              453b 00c3  ld   $c3
              453c 00eb  ld   $eb
              453d 001a  ld   $1a
              453e 0004  ld   $04
              453f 0069  ld   $69
              4540 00b0  ld   $b0
              4541 00a6  ld   $a6
              4542 0030  ld   $30
              4543 000c  ld   $0c
              4544 00c3  ld   $c3
              4545 0070  ld   $70
              4546 0055  ld   $55
              4547 00fd  ld   $fd
              4548 0055  ld   $55
              4549 00f5  ld   $f5
              454a 0057  ld   $57
              454b 00d5  ld   $d5
              454c 005f  ld   $5f
              454d 0055  ld   $55
              454e 007f  ld   $7f
              454f 0055  ld   $55
              4550 00fd  ld   $fd
              4551 0055  ld   $55
              4552 0005  ld   $05
              4553 00c3  ld   $c3
              4554 0030  ld   $30
              4555 000c  ld   $0c
              4556 00c3  ld   $c3
              4557 0030  ld   $30
              4558 000c  ld   $0c
              4559 00c3  ld   $c3
              455a 0030  ld   $30
              455b 0050  ld   $50
              455c 00fd  ld   $fd
              455d 0030  ld   $30
              455e 000c  ld   $0c
              455f 00c3  ld   $c3
              4560 0030  ld   $30
              4561 000c  ld   $0c
              4562 00c3  ld   $c3
              4563 0030  ld   $30
              4564 006c  ld   $6c
              4565 00fc  ld   $fc
              4566 0030  ld   $30
              4567 000c  ld   $0c
              4568 00c3  ld   $c3
              4569 0030  ld   $30
              456a 000c  ld   $0c
              456b 00c3  ld   $c3
              456c 0030  ld   $30
              456d 000c  ld   $0c
              456e 00c3  ld   $c3
              456f 0030  ld   $30
              4570 000c  ld   $0c
              4571 00c3  ld   $c3
              4572 0030  ld   $30
              4573 000c  ld   $0c
              4574 00c3  ld   $c3
              4575 0030  ld   $30
              4576 000c  ld   $0c
              4577 00c3  ld   $c3
              4578 0030  ld   $30
              4579 000c  ld   $0c
              457a 00c3  ld   $c3
              457b 0030  ld   $30
              457c 000c  ld   $0c
              457d 00c3  ld   $c3
              457e 0030  ld   $30
              457f 000c  ld   $0c
              4580 00c3  ld   $c3
              4581 0030  ld   $30
              4582 000c  ld   $0c
              4583 00c3  ld   $c3
              4584 0030  ld   $30
              4585 000c  ld   $0c
              4586 00c3  ld   $c3
              4587 0030  ld   $30
              4588 000c  ld   $0c
              4589 00c3  ld   $c3
              458a 0030  ld   $30
              458b 000c  ld   $0c
              458c 00c3  ld   $c3
              458d 0030  ld   $30
              458e 000c  ld   $0c
              458f 00c3  ld   $c3
              4590 0070  ld   $70
              4591 00a5  ld   $a5
              4592 00fe  ld   $fe
              4593 00ea  ld   $ea
              4594 000f  ld   $0f
              4595 00ab  ld   $ab
              4596 006a  ld   $6a
              4597 00a5  ld   $a5
              4598 0056  ld   $56
              4599 002a  ld   $2a
              459a 000c  ld   $0c
              459b 004b  ld   $4b
              459c 0092  ld   $92
              459d 0054  ld   $54
              459e 0096  ld   $96
              459f 0030  ld   $30
              45a0 000c  ld   $0c
              45a1 00c3  ld   $c3
              45a2 0030  ld   $30
              45a3 000c  ld   $0c
              45a4 00c3  ld   $c3
              45a5 006f  ld   $6f
              45a6 0004  ld   $04
              45a7 00c3  ld   $c3
              45a8 00f0  ld   $f0
              45a9 000b  ld   $0b
              45aa 00bf  ld   $bf
              45ab 0030  ld   $30
              45ac 000c  ld   $0c
              45ad 004b  ld   $4b
              45ae 002f  ld   $2f
              45af 000c  ld   $0c
              45b0 00c3  ld   $c3
              45b1 0030  ld   $30
              45b2 000c  ld   $0c
              45b3 00c3  ld   $c3
              45b4 0030  ld   $30
              45b5 00fc  ld   $fc
              45b6 00ff  ld   $ff
              45b7 00ff  ld   $ff
              45b8 00ff  ld   $ff
              45b9 00ff  ld   $ff
              45ba 00aa  ld   $aa
              45bb 0065  ld   $65
              45bc 00a9  ld   $a9
              45bd 00aa  ld   $aa
              45be 00aa  ld   $aa
              45bf 00aa  ld   $aa
              * 7 times
              45c4 0065  ld   $65
              45c5 00a9  ld   $a9
              45c6 00ff  ld   $ff
              45c7 00ff  ld   $ff
              45c8 00ff  ld   $ff
              45c9 00ff  ld   $ff
              45ca 000f  ld   $0f
              45cb 00c3  ld   $c3
              45cc 0030  ld   $30
              45cd 000c  ld   $0c
              45ce 00c3  ld   $c3
              45cf 0030  ld   $30
              45d0 00ac  ld   $ac
              45d1 00fe  ld   $fe
              45d2 0030  ld   $30
              45d3 000c  ld   $0c
              45d4 00c3  ld   $c3
              45d5 0030  ld   $30
              45d6 00ac  ld   $ac
              45d7 00fe  ld   $fe
              45d8 0030  ld   $30
              45d9 000c  ld   $0c
              45da 00c3  ld   $c3
              45db 00b0  ld   $b0
              45dc 00fa  ld   $fa
              45dd 00c3  ld   $c3
              45de 0030  ld   $30
              45df 000c  ld   $0c
              45e0 00c3  ld   $c3
              45e1 0030  ld   $30
              45e2 000c  ld   $0c
              45e3 00c3  ld   $c3
              45e4 0030  ld   $30
              45e5 000c  ld   $0c
              45e6 00c3  ld   $c3
              45e7 0030  ld   $30
              45e8 000c  ld   $0c
              45e9 00c3  ld   $c3
              45ea 0030  ld   $30
              45eb 000c  ld   $0c
              45ec 00c3  ld   $c3
              45ed 0030  ld   $30
              45ee 000c  ld   $0c
              45ef 00c3  ld   $c3
              45f0 0030  ld   $30
              45f1 000c  ld   $0c
              45f2 00c3  ld   $c3
              45f3 0015  ld   $15
              45f4 000c  ld   $0c
              45f5 00c3  ld   $c3
              45f6 0030  ld   $30
              45f7 000c  ld   $0c
              45f8 00c3  ld   $c3
              45f9 0030  ld   $30
              45fa 000c  ld   $0c
              45fb fe00  bra  ac          ;+-----------------------------------+
              45fc fcfd  bra  $45fd       ;|                                   |
              45fd 1418  ld   $18,y       ;| Trampoline for page $4500 lookups |
              45fe e006  jmp  y,$06       ;|                                   |
              45ff c218  st   [$18]       ;+-----------------------------------+
              4600 00c3  ld   $c3
              4601 00e9  ld   $e9
              4602 001a  ld   $1a
              4603 00a4  ld   $a4
              4604 0041  ld   $41
              4605 00b0  ld   $b0
              4606 00ae  ld   $ae
              4607 0030  ld   $30
              4608 000c  ld   $0c
              4609 00c3  ld   $c3
              460a 00b0  ld   $b0
              460b 00aa  ld   $aa
              460c 00ff  ld   $ff
              460d 00ba  ld   $ba
              460e 00fa  ld   $fa
              460f 00ab  ld   $ab
              4610 00fa  ld   $fa
              4611 00af  ld   $af
              4612 00aa  ld   $aa
              4613 00bf  ld   $bf
              4614 00ae  ld   $ae
              4615 00fe  ld   $fe
              4616 00ba  ld   $ba
              4617 000a  ld   $0a
              4618 00c3  ld   $c3
              4619 0030  ld   $30
              461a 000c  ld   $0c
              461b 00c3  ld   $c3
              461c 0030  ld   $30
              461d 000c  ld   $0c
              461e 00c3  ld   $c3
              461f 00c0  ld   $c0
              4620 006b  ld   $6b
              4621 0001  ld   $01
              4622 002f  ld   $2f
              4623 000c  ld   $0c
              4624 00c3  ld   $c3
              4625 0030  ld   $30
              4626 000c  ld   $0c
              4627 00c3  ld   $c3
              4628 0030  ld   $30
              4629 00bc  ld   $bc
              462a 00bc  ld   $bc
              462b 0030  ld   $30
              462c 000c  ld   $0c
              462d 00c3  ld   $c3
              462e 0030  ld   $30
              462f 000c  ld   $0c
              4630 00c3  ld   $c3
              4631 0030  ld   $30
              4632 000c  ld   $0c
              4633 00c3  ld   $c3
              4634 0030  ld   $30
              4635 000c  ld   $0c
              4636 00c3  ld   $c3
              4637 0030  ld   $30
              4638 000c  ld   $0c
              4639 00c3  ld   $c3
              463a 0030  ld   $30
              463b 000c  ld   $0c
              463c 00c3  ld   $c3
              463d 0030  ld   $30
              463e 000c  ld   $0c
              463f 00c3  ld   $c3
              4640 0030  ld   $30
              4641 000c  ld   $0c
              4642 00c3  ld   $c3
              4643 0030  ld   $30
              4644 000c  ld   $0c
              4645 00c3  ld   $c3
              4646 0030  ld   $30
              4647 000c  ld   $0c
              4648 00c3  ld   $c3
              4649 0030  ld   $30
              464a 000c  ld   $0c
              464b 00c3  ld   $c3
              464c 0030  ld   $30
              464d 000c  ld   $0c
              464e 00c3  ld   $c3
              464f 0030  ld   $30
              4650 000c  ld   $0c
              4651 00c3  ld   $c3
              4652 0030  ld   $30
              4653 000c  ld   $0c
              4654 00c3  ld   $c3
              4655 00b0  ld   $b0
              4656 005a  ld   $5a
              4657 00a9  ld   $a9
              4658 00bf  ld   $bf
              4659 000a  ld   $0a
              465a 00ab  ld   $ab
              465b 0095  ld   $95
              465c 005a  ld   $5a
              465d 00a9  ld   $a9
              465e 002a  ld   $2a
              465f 000c  ld   $0c
              4660 004b  ld   $4b
              4661 00a3  ld   $a3
              4662 0094  ld   $94
              4663 0097  ld   $97
              4664 0030  ld   $30
              4665 000c  ld   $0c
              4666 00c3  ld   $c3
              4667 0030  ld   $30
              4668 000c  ld   $0c
              4669 00c3  ld   $c3
              466a 00ff  ld   $ff
              466b 00fb  ld   $fb
              466c 00be  ld   $be
              466d 002f  ld   $2f
              466e 00fc  ld   $fc
              466f 00c3  ld   $c3
              4670 00ef  ld   $ef
              4671 00fb  ld   $fb
              4672 00be  ld   $be
              4673 003f  ld   $3f
              4674 000c  ld   $0c
              4675 00c3  ld   $c3
              4676 0030  ld   $30
              4677 000c  ld   $0c
              4678 00c3  ld   $c3
              4679 0030  ld   $30
              467a 00ac  ld   $ac
              467b 0069  ld   $69
              467c 009a  ld   $9a
              467d 00a6  ld   $a6
              467e 0069  ld   $69
              467f 0096  ld   $96
              4680 00aa  ld   $aa
              4681 001a  ld   $1a
              4682 0096  ld   $96
              4683 0065  ld   $65
              4684 0059  ld   $59
              4685 0096  ld   $96
              4686 0065  ld   $65
              4687 0059  ld   $59
              4688 0086  ld   $86
              4689 00aa  ld   $aa
              468a 005a  ld   $5a
              468b 009a  ld   $9a
              468c 00a6  ld   $a6
              468d 0069  ld   $69
              468e 009a  ld   $9a
              468f 0006  ld   $06
              4690 00c3  ld   $c3
              4691 0030  ld   $30
              4692 000c  ld   $0c
              4693 00c3  ld   $c3
              4694 0030  ld   $30
              4695 00ac  ld   $ac
              4696 00fe  ld   $fe
              4697 0030  ld   $30
              4698 000c  ld   $0c
              4699 00c3  ld   $c3
              469a 0030  ld   $30
              469b 00ac  ld   $ac
              469c 00fe  ld   $fe
              469d 0030  ld   $30
              469e 000c  ld   $0c
              469f 00c3  ld   $c3
              46a0 00b0  ld   $b0
              46a1 00fa  ld   $fa
              46a2 00c3  ld   $c3
              46a3 0030  ld   $30
              46a4 000c  ld   $0c
              46a5 00c3  ld   $c3
              46a6 0030  ld   $30
              46a7 000c  ld   $0c
              46a8 00c3  ld   $c3
              46a9 0030  ld   $30
              46aa 000c  ld   $0c
              46ab 00c3  ld   $c3
              46ac 0030  ld   $30
              46ad 000c  ld   $0c
              46ae 00c3  ld   $c3
              46af 0030  ld   $30
              46b0 00ac  ld   $ac
              46b1 00aa  ld   $aa
              46b2 00ff  ld   $ff
              46b3 00ff  ld   $ff
              46b4 00ff  ld   $ff
              * 5 times
              46b7 00c3  ld   $c3
              46b8 0015  ld   $15
              46b9 000c  ld   $0c
              46ba 00c3  ld   $c3
              46bb 0030  ld   $30
              46bc 000c  ld   $0c
              46bd 00c3  ld   $c3
              46be 0030  ld   $30
              46bf 000c  ld   $0c
              46c0 00c3  ld   $c3
              46c1 00eb  ld   $eb
              46c2 001a  ld   $1a
              46c3 0004  ld   $04
              46c4 0069  ld   $69
              46c5 00b0  ld   $b0
              46c6 00a6  ld   $a6
              46c7 0030  ld   $30
              46c8 000c  ld   $0c
              46c9 00c3  ld   $c3
              46ca 0070  ld   $70
              46cb 0055  ld   $55
              46cc 00fd  ld   $fd
              46cd 0055  ld   $55
              46ce 00f5  ld   $f5
              46cf 0057  ld   $57
              46d0 00d5  ld   $d5
              46d1 005f  ld   $5f
              46d2 0055  ld   $55
              46d3 007f  ld   $7f
              46d4 0055  ld   $55
              46d5 00fd  ld   $fd
              46d6 0055  ld   $55
              46d7 0005  ld   $05
              46d8 00c3  ld   $c3
              46d9 0030  ld   $30
              46da 000c  ld   $0c
              46db 00c3  ld   $c3
              46dc 0030  ld   $30
              46dd 000c  ld   $0c
              46de 0003  ld   $03
              46df 007f  ld   $7f
              46e0 0010  ld   $10
              46e1 0004  ld   $04
              46e2 00c0  ld   $c0
              46e3 000f  ld   $0f
              46e4 00c3  ld   $c3
              46e5 0030  ld   $30
              46e6 000c  ld   $0c
              46e7 00c3  ld   $c3
              46e8 0030  ld   $30
              46e9 006c  ld   $6c
              46ea 00fc  ld   $fc
              46eb 0041  ld   $41
              46ec 0010  ld   $10
              46ed 0004  ld   $04
              46ee 0041  ld   $41
              46ef 0010  ld   $10
              46f0 0004  ld   $04
              46f1 0041  ld   $41
              46f2 0010  ld   $10
              46f3 0004  ld   $04
              46f4 0041  ld   $41
              46f5 0010  ld   $10
              46f6 0004  ld   $04
              46f7 0041  ld   $41
              46f8 0010  ld   $10
              46f9 0004  ld   $04
              46fa 0030  ld   $30
              46fb fe00  bra  ac          ;+-----------------------------------+
              46fc fcfd  bra  $46fd       ;|                                   |
              46fd 1418  ld   $18,y       ;| Trampoline for page $4600 lookups |
              46fe e006  jmp  y,$06       ;|                                   |
              46ff c218  st   [$18]       ;+-----------------------------------+
              4700 000c  ld   $0c
              4701 00c3  ld   $c3
              4702 0030  ld   $30
              4703 000c  ld   $0c
              4704 00c3  ld   $c3
              4705 0030  ld   $30
              4706 000c  ld   $0c
              4707 00c3  ld   $c3
              4708 0030  ld   $30
              4709 000c  ld   $0c
              470a 00c3  ld   $c3
              470b 0030  ld   $30
              470c 000c  ld   $0c
              470d 00c3  ld   $c3
              470e 0030  ld   $30
              470f 000c  ld   $0c
              4710 00c3  ld   $c3
              4711 0030  ld   $30
              4712 000c  ld   $0c
              4713 00c3  ld   $c3
              4714 0030  ld   $30
              4715 000c  ld   $0c
              4716 00c3  ld   $c3
              4717 0030  ld   $30
              4718 000c  ld   $0c
              4719 00c3  ld   $c3
              471a 0070  ld   $70
              471b 00a5  ld   $a5
              471c 00fe  ld   $fe
              471d 00ea  ld   $ea
              471e 000f  ld   $0f
              471f 00ab  ld   $ab
              4720 006a  ld   $6a
              4721 00a5  ld   $a5
              4722 0056  ld   $56
              4723 002a  ld   $2a
              4724 001c  ld   $1c
              4725 0058  ld   $58
              4726 0081  ld   $81
              4727 0015  ld   $15
              4728 0058  ld   $58
              4729 0011  ld   $11
              472a 000c  ld   $0c
              472b 00c3  ld   $c3
              472c 0030  ld   $30
              472d 000c  ld   $0c
              472e 00c3  ld   $c3
              472f 00af  ld   $af
              4730 0004  ld   $04
              4731 00c3  ld   $c3
              4732 00f0  ld   $f0
              4733 000f  ld   $0f
              4734 00ff  ld   $ff
              4735 0030  ld   $30
              4736 000c  ld   $0c
              4737 0047  ld   $47
              4738 002f  ld   $2f
              4739 000c  ld   $0c
              473a 00c3  ld   $c3
              473b 0030  ld   $30
              473c 000c  ld   $0c
              473d 00c3  ld   $c3
              473e 0030  ld   $30
              473f 005c  ld   $5c
              4740 0055  ld   $55
              4741 0055  ld   $55
              4742 0055  ld   $55
              4743 0055  ld   $55
              4744 00d6  ld   $d6
              4745 00fa  ld   $fa
              4746 005a  ld   $5a
              4747 0069  ld   $69
              4748 009a  ld   $9a
              4749 00a6  ld   $a6
              474a 0069  ld   $69
              474b 009a  ld   $9a
              474c 00a6  ld   $a6
              474d 00d6  ld   $d6
              474e 00bb  ld   $bb
              474f 005a  ld   $5a
              4750 0055  ld   $55
              4751 0055  ld   $55
              4752 0055  ld   $55
              4753 0055  ld   $55
              4754 0005  ld   $05
              4755 00c3  ld   $c3
              4756 0030  ld   $30
              4757 000c  ld   $0c
              4758 00c3  ld   $c3
              4759 0030  ld   $30
              475a 00ac  ld   $ac
              475b 00fe  ld   $fe
              475c 0030  ld   $30
              475d 000c  ld   $0c
              475e 00c3  ld   $c3
              475f 0030  ld   $30
              4760 00ac  ld   $ac
              4761 00fe  ld   $fe
              4762 0030  ld   $30
              4763 000c  ld   $0c
              4764 00c3  ld   $c3
              4765 00b0  ld   $b0
              4766 00fa  ld   $fa
              4767 00c3  ld   $c3
              4768 0030  ld   $30
              4769 000c  ld   $0c
              476a 00c3  ld   $c3
              476b 0030  ld   $30
              476c 000c  ld   $0c
              476d 00c3  ld   $c3
              476e 0030  ld   $30
              476f 000c  ld   $0c
              4770 00c3  ld   $c3
              4771 0030  ld   $30
              4772 000c  ld   $0c
              4773 00ab  ld   $ab
              4774 00aa  ld   $aa
              4775 00aa  ld   $aa
              4776 00aa  ld   $aa
              4777 00aa  ld   $aa
              4778 00fa  ld   $fa
              4779 00ff  ld   $ff
              477a 00ff  ld   $ff
              477b 00ff  ld   $ff
              * 5 times
              477e 000f  ld   $0f
              477f 00c3  ld   $c3
              4780 0030  ld   $30
              4781 000c  ld   $0c
              4782 00c3  ld   $c3
              4783 0030  ld   $30
              4784 000c  ld   $0c
              4785 00c3  ld   $c3
              4786 00e9  ld   $e9
              4787 001a  ld   $1a
              4788 00a4  ld   $a4
              4789 0041  ld   $41
              478a 00b0  ld   $b0
              478b 00ae  ld   $ae
              478c 0030  ld   $30
              478d 000c  ld   $0c
              478e 00c3  ld   $c3
              478f 00b0  ld   $b0
              4790 00aa  ld   $aa
              4791 00ff  ld   $ff
              4792 00aa  ld   $aa
              4793 00fe  ld   $fe
              4794 00ab  ld   $ab
              4795 00ea  ld   $ea
              4796 00af  ld   $af
              4797 00ea  ld   $ea
              4798 00bf  ld   $bf
              4799 00aa  ld   $aa
              479a 00ff  ld   $ff
              479b 00aa  ld   $aa
              479c 000e  ld   $0e
              479d 00c3  ld   $c3
              479e 0030  ld   $30
              479f 000c  ld   $0c
              47a0 00c3  ld   $c3
              47a1 0030  ld   $30
              47a2 000c  ld   $0c
              47a3 00bc  ld   $bc
              47a4 0081  ld   $81
              47a5 0065  ld   $65
              47a6 0005  ld   $05
              47a7 0020  ld   $20
              47a8 00f0  ld   $f0
              47a9 00c2  ld   $c2
              47aa 0030  ld   $30
              47ab 000c  ld   $0c
              47ac 00c3  ld   $c3
              47ad 0030  ld   $30
              47ae 00bc  ld   $bc
              47af 00bc  ld   $bc
              47b0 00ff  ld   $ff
              47b1 00fb  ld   $fb
              47b2 00bf  ld   $bf
              47b3 00ff  ld   $ff
              47b4 00fb  ld   $fb
              47b5 00bf  ld   $bf
              47b6 00ff  ld   $ff
              47b7 00fb  ld   $fb
              47b8 00bf  ld   $bf
              47b9 00ff  ld   $ff
              47ba 00fb  ld   $fb
              47bb 00bf  ld   $bf
              47bc 00ff  ld   $ff
              47bd 00fb  ld   $fb
              47be 0007  ld   $07
              47bf 0030  ld   $30
              47c0 000c  ld   $0c
              47c1 00c3  ld   $c3
              47c2 0030  ld   $30
              47c3 000c  ld   $0c
              47c4 00c3  ld   $c3
              47c5 0030  ld   $30
              47c6 000c  ld   $0c
              47c7 00c3  ld   $c3
              47c8 0030  ld   $30
              47c9 000c  ld   $0c
              47ca 00c3  ld   $c3
              47cb 0030  ld   $30
              47cc 000c  ld   $0c
              47cd 00c3  ld   $c3
              47ce 0030  ld   $30
              47cf 000c  ld   $0c
              47d0 00c3  ld   $c3
              47d1 0030  ld   $30
              47d2 000c  ld   $0c
              47d3 00c3  ld   $c3
              47d4 0030  ld   $30
              47d5 000c  ld   $0c
              47d6 00c3  ld   $c3
              47d7 0030  ld   $30
              47d8 000c  ld   $0c
              47d9 00c3  ld   $c3
              47da 00b0  ld   $b0
              47db 005a  ld   $5a
              47dc 00a9  ld   $a9
              47dd 00bf  ld   $bf
              47de 000a  ld   $0a
              47df 00ab  ld   $ab
              47e0 0095  ld   $95
              47e1 005a  ld   $5a
              47e2 00a9  ld   $a9
              47e3 002a  ld   $2a
              47e4 001c  ld   $1c
              47e5 0004  ld   $04
              47e6 0041  ld   $41
              47e7 0010  ld   $10
              47e8 0044  ld   $44
              47e9 0011  ld   $11
              47ea 000c  ld   $0c
              47eb 00c3  ld   $c3
              47ec 0030  ld   $30
              47ed 000c  ld   $0c
              47ee 00c3  ld   $c3
              47ef 007f  ld   $7f
              47f0 0004  ld   $04
              47f1 00c3  ld   $c3
              47f2 00ef  ld   $ef
              47f3 00ff  ld   $ff
              47f4 00fe  ld   $fe
              47f5 003f  ld   $3f
              47f6 000c  ld   $0c
              47f7 004b  ld   $4b
              47f8 003f  ld   $3f
              47f9 000c  ld   $0c
              47fa 00c3  ld   $c3
              47fb fe00  bra  ac          ;+-----------------------------------+
              47fc fcfd  bra  $47fd       ;|                                   |
              47fd 1418  ld   $18,y       ;| Trampoline for page $4700 lookups |
              47fe e006  jmp  y,$06       ;|                                   |
              47ff c218  st   [$18]       ;+-----------------------------------+
              4800 0030  ld   $30
              4801 000c  ld   $0c
              4802 00c3  ld   $c3
              4803 0030  ld   $30
              4804 00ac  ld   $ac
              4805 00aa  ld   $aa
              4806 0095  ld   $95
              4807 00aa  ld   $aa
              4808 0056  ld   $56
              4809 00d6  ld   $d6
              480a 00fa  ld   $fa
              480b 005a  ld   $5a
              480c 006a  ld   $6a
              480d 00a5  ld   $a5
              480e 00aa  ld   $aa
              480f 006a  ld   $6a
              4810 00a5  ld   $a5
              4811 00aa  ld   $aa
              4812 00d6  ld   $d6
              4813 00bb  ld   $bb
              4814 005a  ld   $5a
              4815 0095  ld   $95
              4816 00aa  ld   $aa
              4817 0056  ld   $56
              4818 00aa  ld   $aa
              4819 000a  ld   $0a
              481a 00c3  ld   $c3
              481b 0030  ld   $30
              481c 000c  ld   $0c
              481d 00c3  ld   $c3
              481e 0030  ld   $30
              481f 00ac  ld   $ac
              4820 00fe  ld   $fe
              4821 0030  ld   $30
              4822 000c  ld   $0c
              4823 00c3  ld   $c3
              4824 0030  ld   $30
              4825 00ac  ld   $ac
              4826 00fe  ld   $fe
              4827 0030  ld   $30
              4828 000c  ld   $0c
              4829 00c3  ld   $c3
              482a 00b0  ld   $b0
              482b 00fa  ld   $fa
              482c 00c3  ld   $c3
              482d 0030  ld   $30
              482e 000c  ld   $0c
              482f 00c3  ld   $c3
              4830 0030  ld   $30
              4831 000c  ld   $0c
              4832 00c3  ld   $c3
              4833 0030  ld   $30
              4834 000c  ld   $0c
              4835 00c3  ld   $c3
              4836 0055  ld   $55
              4837 0055  ld   $55
              4838 0055  ld   $55
              * 6 times
              483c 00aa  ld   $aa
              483d 00aa  ld   $aa
              483e 00aa  ld   $aa
              483f 00ea  ld   $ea
              4840 00ff  ld   $ff
              4841 00ff  ld   $ff
              4842 00ff  ld   $ff
              * 5 times
              4845 003f  ld   $3f
              4846 000c  ld   $0c
              4847 00c3  ld   $c3
              4848 0030  ld   $30
              4849 000c  ld   $0c
              484a 00c3  ld   $c3
              484b 00eb  ld   $eb
              484c 001a  ld   $1a
              484d 0004  ld   $04
              484e 0069  ld   $69
              484f 00b0  ld   $b0
              4850 00a6  ld   $a6
              4851 0030  ld   $30
              4852 000c  ld   $0c
              4853 00c3  ld   $c3
              4854 0070  ld   $70
              4855 0055  ld   $55
              4856 00fd  ld   $fd
              4857 0055  ld   $55
              4858 00f5  ld   $f5
              4859 0057  ld   $57
              485a 00d5  ld   $d5
              485b 005f  ld   $5f
              485c 0055  ld   $55
              485d 007f  ld   $7f
              485e 0055  ld   $55
              485f 00fd  ld   $fd
              4860 0055  ld   $55
              4861 0005  ld   $05
              4862 00c3  ld   $c3
              4863 0030  ld   $30
              4864 000c  ld   $0c
              4865 00c3  ld   $c3
              4866 0030  ld   $30
              4867 00f0  ld   $f0
              4868 0083  ld   $83
              4869 0081  ld   $81
              486a 0065  ld   $65
              486b 0005  ld   $05
              486c 0020  ld   $20
              486d 0008  ld   $08
              486e 00fc  ld   $fc
              486f 0030  ld   $30
              4870 000c  ld   $0c
              4871 00c3  ld   $c3
              4872 0030  ld   $30
              4873 006c  ld   $6c
              4874 00fc  ld   $fc
              4875 006f  ld   $6f
              4876 0060  ld   $60
              4877 0004  ld   $04
              4878 0046  ld   $46
              4879 0060  ld   $60
              487a 0004  ld   $04
              487b 0046  ld   $46
              487c 0060  ld   $60
              487d 0004  ld   $04
              487e 00c6  ld   $c6
              487f 006f  ld   $6f
              4880 002c  ld   $2c
              4881 0056  ld   $56
              4882 00f0  ld   $f0
              4883 0006  ld   $06
              4884 0030  ld   $30
              4885 000c  ld   $0c
              4886 00c3  ld   $c3
              4887 0030  ld   $30
              4888 000c  ld   $0c
              4889 00c3  ld   $c3
              488a 0030  ld   $30
              488b 000c  ld   $0c
              488c 00c3  ld   $c3
              488d 0030  ld   $30
              488e 000c  ld   $0c
              488f 00c3  ld   $c3
              4890 0030  ld   $30
              4891 000c  ld   $0c
              4892 00c3  ld   $c3
              4893 0030  ld   $30
              4894 000c  ld   $0c
              4895 00c3  ld   $c3
              4896 0030  ld   $30
              4897 000c  ld   $0c
              4898 00c3  ld   $c3
              4899 0030  ld   $30
              489a 000c  ld   $0c
              489b 00c3  ld   $c3
              489c 0030  ld   $30
              489d 000c  ld   $0c
              489e 00c3  ld   $c3
              489f 0070  ld   $70
              48a0 00a5  ld   $a5
              48a1 00fe  ld   $fe
              48a2 00ea  ld   $ea
              48a3 000f  ld   $0f
              48a4 00ab  ld   $ab
              48a5 006a  ld   $6a
              48a6 00a5  ld   $a5
              48a7 0056  ld   $56
              48a8 002a  ld   $2a
              48a9 001c  ld   $1c
              48aa 0058  ld   $58
              48ab 0081  ld   $81
              48ac 0015  ld   $15
              48ad 0058  ld   $58
              48ae 0011  ld   $11
              48af 000c  ld   $0c
              48b0 00c3  ld   $c3
              48b1 0030  ld   $30
              48b2 000c  ld   $0c
              48b3 00c3  ld   $c3
              48b4 00f0  ld   $f0
              48b5 000b  ld   $0b
              48b6 00bf  ld   $bf
              48b7 003f  ld   $3f
              48b8 00fc  ld   $fc
              48b9 00c2  ld   $c2
              48ba 00ff  ld   $ff
              48bb 000f  ld   $0f
              48bc 00bf  ld   $bf
              48bd 0030  ld   $30
              48be 000c  ld   $0c
              48bf 00c3  ld   $c3
              48c0 0030  ld   $30
              48c1 000c  ld   $0c
              48c2 00c3  ld   $c3
              48c3 0030  ld   $30
              48c4 00ac  ld   $ac
              48c5 0069  ld   $69
              48c6 0055  ld   $55
              48c7 0055  ld   $55
              48c8 0055  ld   $55
              48c9 0096  ld   $96
              48ca 00aa  ld   $aa
              48cb 005a  ld   $5a
              48cc 00aa  ld   $aa
              48cd 006a  ld   $6a
              48ce 00a9  ld   $a9
              48cf 0096  ld   $96
              48d0 00aa  ld   $aa
              48d1 00aa  ld   $aa
              48d2 0096  ld   $96
              48d3 00aa  ld   $aa
              48d4 005a  ld   $5a
              48d5 0055  ld   $55
              48d6 0055  ld   $55
              48d7 0055  ld   $55
              48d8 009a  ld   $9a
              48d9 0006  ld   $06
              48da 00c3  ld   $c3
              48db 0030  ld   $30
              48dc 000c  ld   $0c
              48dd 00c3  ld   $c3
              48de 0030  ld   $30
              48df 00ac  ld   $ac
              48e0 00fe  ld   $fe
              48e1 0030  ld   $30
              48e2 000c  ld   $0c
              48e3 00c3  ld   $c3
              48e4 0030  ld   $30
              48e5 00ac  ld   $ac
              48e6 00fe  ld   $fe
              48e7 0030  ld   $30
              48e8 000c  ld   $0c
              48e9 00c3  ld   $c3
              48ea 00b0  ld   $b0
              48eb 00fa  ld   $fa
              48ec 00c3  ld   $c3
              48ed 0030  ld   $30
              48ee 000c  ld   $0c
              48ef 00c3  ld   $c3
              48f0 0030  ld   $30
              48f1 000c  ld   $0c
              48f2 00c3  ld   $c3
              48f3 0030  ld   $30
              48f4 0000  ld   $00
              48f5 0000  ld   $00
              48f6 0000  ld   $00
              * 5 times
              48f9 0055  ld   $55
              48fa 0055  ld   $55
              48fb fe00  bra  ac          ;+-----------------------------------+
              48fc fcfd  bra  $48fd       ;|                                   |
              48fd 1418  ld   $18,y       ;| Trampoline for page $4800 lookups |
              48fe e006  jmp  y,$06       ;|                                   |
              48ff c218  st   [$18]       ;+-----------------------------------+
              4900 0055  ld   $55
              4901 0055  ld   $55
              4902 00a5  ld   $a5
              4903 00aa  ld   $aa
              4904 00aa  ld   $aa
              4905 00aa  ld   $aa
              4906 00fe  ld   $fe
              4907 00ff  ld   $ff
              4908 00ff  ld   $ff
              4909 00ff  ld   $ff
              * 6 times
              490d 0030  ld   $30
              490e 000c  ld   $0c
              490f 00c3  ld   $c3
              4910 00e9  ld   $e9
              4911 001a  ld   $1a
              4912 00a4  ld   $a4
              4913 0041  ld   $41
              4914 00b0  ld   $b0
              4915 00ae  ld   $ae
              4916 0030  ld   $30
              4917 000c  ld   $0c
              4918 00c3  ld   $c3
              4919 00b0  ld   $b0
              491a 00ae  ld   $ae
              491b 00fe  ld   $fe
              491c 00ba  ld   $ba
              491d 00fa  ld   $fa
              491e 00ab  ld   $ab
              491f 00fa  ld   $fa
              4920 00af  ld   $af
              4921 00aa  ld   $aa
              4922 00bf  ld   $bf
              4923 00ae  ld   $ae
              4924 00fe  ld   $fe
              4925 00aa  ld   $aa
              4926 000e  ld   $0e
              4927 00c3  ld   $c3
              4928 0030  ld   $30
              4929 000c  ld   $0c
              492a 00c3  ld   $c3
              492b 00c0  ld   $c0
              492c 001b  ld   $1b
              492d 0004  ld   $04
              492e 0041  ld   $41
              492f 0010  ld   $10
              4930 0004  ld   $04
              4931 0041  ld   $41
              4932 0000  ld   $00
              4933 0003  ld   $03
              4934 0030  ld   $30
              4935 000c  ld   $0c
              4936 00c3  ld   $c3
              4937 0030  ld   $30
              4938 00bc  ld   $bc
              4939 00bc  ld   $bc
              493a 00bf  ld   $bf
              493b 00f1  ld   $f1
              493c 001a  ld   $1a
              493d 008b  ld   $8b
              493e 00b1  ld   $b1
              493f 0018  ld   $18
              4940 008b  ld   $8b
              4941 00b1  ld   $b1
              4942 0018  ld   $18
              4943 00c1  ld   $c1
              4944 00bb  ld   $bb
              4945 0058  ld   $58
              4946 0046  ld   $46
              4947 00f0  ld   $f0
              4948 0007  ld   $07
              4949 0030  ld   $30
              494a 000c  ld   $0c
              494b 00c3  ld   $c3
              494c 0030  ld   $30
              494d 000c  ld   $0c
              494e 00c3  ld   $c3
              494f 0030  ld   $30
              4950 000c  ld   $0c
              4951 00c3  ld   $c3
              4952 0030  ld   $30
              4953 000c  ld   $0c
              4954 00c3  ld   $c3
              4955 0030  ld   $30
              4956 000c  ld   $0c
              4957 00c3  ld   $c3
              4958 0030  ld   $30
              4959 000c  ld   $0c
              495a 00c3  ld   $c3
              495b 0030  ld   $30
              495c 000c  ld   $0c
              495d 00c3  ld   $c3
              495e 0030  ld   $30
              495f 000c  ld   $0c
              4960 00c3  ld   $c3
              4961 0030  ld   $30
              4962 000c  ld   $0c
              4963 00c3  ld   $c3
              4964 00b0  ld   $b0
              4965 005a  ld   $5a
              4966 00a9  ld   $a9
              4967 00bf  ld   $bf
              4968 000a  ld   $0a
              4969 00ab  ld   $ab
              496a 0095  ld   $95
              496b 005a  ld   $5a
              496c 00a9  ld   $a9
              496d 002a  ld   $2a
              496e 001c  ld   $1c
              496f 0004  ld   $04
              4970 0041  ld   $41
              4971 0010  ld   $10
              4972 0044  ld   $44
              4973 0011  ld   $11
              4974 000c  ld   $0c
              4975 00c3  ld   $c3
              4976 0030  ld   $30
              4977 000c  ld   $0c
              4978 00c3  ld   $c3
              4979 0070  ld   $70
              497a 00f4  ld   $f4
              497b 00fe  ld   $fe
              497c 0030  ld   $30
              497d 00fc  ld   $fc
              497e 00c2  ld   $c2
              497f 00f0  ld   $f0
              4980 00ff  ld   $ff
              4981 004b  ld   $4b
              4982 0030  ld   $30
              4983 000c  ld   $0c
              4984 00c3  ld   $c3
              4985 0030  ld   $30
              4986 000c  ld   $0c
              4987 00c3  ld   $c3
              4988 0030  ld   $30
              4989 00ac  ld   $ac
              498a 0069  ld   $69
              498b 009a  ld   $9a
              498c 00aa  ld   $aa
              498d 006a  ld   $6a
              498e 0016  ld   $16
              498f 00a5  ld   $a5
              4990 005a  ld   $5a
              4991 00aa  ld   $aa
              4992 0061  ld   $61
              4993 00a9  ld   $a9
              4994 0056  ld   $56
              4995 0065  ld   $65
              4996 00a8  ld   $a8
              4997 0056  ld   $56
              4998 0095  ld   $95
              4999 005a  ld   $5a
              499a 009a  ld   $9a
              499b 00aa  ld   $aa
              499c 006a  ld   $6a
              499d 009a  ld   $9a
              499e 0006  ld   $06
              499f 00c3  ld   $c3
              49a0 0030  ld   $30
              49a1 000c  ld   $0c
              49a2 00c3  ld   $c3
              49a3 0030  ld   $30
              49a4 00ac  ld   $ac
              49a5 00fe  ld   $fe
              49a6 0030  ld   $30
              49a7 000c  ld   $0c
              49a8 00c3  ld   $c3
              49a9 0030  ld   $30
              49aa 00ac  ld   $ac
              49ab 00fe  ld   $fe
              49ac 0030  ld   $30
              49ad 000c  ld   $0c
              49ae 00c3  ld   $c3
              49af 00b0  ld   $b0
              49b0 00fa  ld   $fa
              49b1 00c3  ld   $c3
              49b2 0030  ld   $30
              49b3 000c  ld   $0c
              49b4 00c3  ld   $c3
              49b5 0030  ld   $30
              49b6 000c  ld   $0c
              49b7 00c3  ld   $c3
              49b8 0030  ld   $30
              49b9 000c  ld   $0c
              49ba 0003  ld   $03
              49bb 0000  ld   $00
              49bc 0000  ld   $00
              49bd 0000  ld   $00
              * 5 times
              49c0 0054  ld   $54
              49c1 0055  ld   $55
              49c2 0055  ld   $55
              49c3 0055  ld   $55
              49c4 0055  ld   $55
              49c5 00a5  ld   $a5
              49c6 00aa  ld   $aa
              49c7 00aa  ld   $aa
              49c8 00fa  ld   $fa
              49c9 00ff  ld   $ff
              49ca 00ff  ld   $ff
              49cb 000f  ld   $0f
              49cc 00c3  ld   $c3
              49cd 0030  ld   $30
              49ce 000c  ld   $0c
              49cf 00c3  ld   $c3
              49d0 00eb  ld   $eb
              49d1 001a  ld   $1a
              49d2 0004  ld   $04
              49d3 0069  ld   $69
              49d4 00b0  ld   $b0
              49d5 00a6  ld   $a6
              49d6 0030  ld   $30
              49d7 000c  ld   $0c
              49d8 00c3  ld   $c3
              49d9 0070  ld   $70
              49da 0055  ld   $55
              49db 00fd  ld   $fd
              49dc 0055  ld   $55
              49dd 00f5  ld   $f5
              49de 0057  ld   $57
              49df 00d5  ld   $d5
              49e0 005f  ld   $5f
              49e1 0055  ld   $55
              49e2 007f  ld   $7f
              49e3 0055  ld   $55
              49e4 00fd  ld   $fd
              49e5 0055  ld   $55
              49e6 0005  ld   $05
              49e7 00c3  ld   $c3
              49e8 0030  ld   $30
              49e9 000c  ld   $0c
              49ea 00c3  ld   $c3
              49eb 0030  ld   $30
              49ec 000c  ld   $0c
              49ed 0007  ld   $07
              49ee 0096  ld   $96
              49ef 0065  ld   $65
              49f0 0059  ld   $59
              49f1 0001  ld   $01
              49f2 000c  ld   $0c
              49f3 00c3  ld   $c3
              49f4 0030  ld   $30
              49f5 000c  ld   $0c
              49f6 00c3  ld   $c3
              49f7 0030  ld   $30
              49f8 006c  ld   $6c
              49f9 00fc  ld   $fc
              49fa 006f  ld   $6f
              49fb fe00  bra  ac          ;+-----------------------------------+
              49fc fcfd  bra  $49fd       ;|                                   |
              49fd 1418  ld   $18,y       ;| Trampoline for page $4900 lookups |
              49fe e006  jmp  y,$06       ;|                                   |
              49ff c218  st   [$18]       ;+-----------------------------------+
              4a00 0060  ld   $60
              4a01 002c  ld   $2c
              4a02 00c6  ld   $c6
              4a03 0062  ld   $62
              4a04 002c  ld   $2c
              4a05 00c6  ld   $c6
              4a06 0062  ld   $62
              4a07 002c  ld   $2c
              4a08 00c6  ld   $c6
              4a09 006f  ld   $6f
              4a0a 0019  ld   $19
              4a0b 0056  ld   $56
              4a0c 00f0  ld   $f0
              4a0d 0006  ld   $06
              4a0e 0030  ld   $30
              4a0f 000c  ld   $0c
              4a10 00c3  ld   $c3
              4a11 0030  ld   $30
              4a12 000c  ld   $0c
              4a13 00c3  ld   $c3
              4a14 0030  ld   $30
              4a15 000c  ld   $0c
              4a16 00c3  ld   $c3
              4a17 0030  ld   $30
              4a18 000c  ld   $0c
              4a19 00c3  ld   $c3
              4a1a 0030  ld   $30
              4a1b 000c  ld   $0c
              4a1c 00c3  ld   $c3
              4a1d 0030  ld   $30
              4a1e 000c  ld   $0c
              4a1f 00c3  ld   $c3
              4a20 0030  ld   $30
              4a21 000c  ld   $0c
              4a22 00c3  ld   $c3
              4a23 0030  ld   $30
              4a24 000c  ld   $0c
              4a25 00c3  ld   $c3
              4a26 0030  ld   $30
              4a27 000c  ld   $0c
              4a28 00c3  ld   $c3
              4a29 0070  ld   $70
              4a2a 00a5  ld   $a5
              4a2b 00fe  ld   $fe
              4a2c 00ea  ld   $ea
              4a2d 000f  ld   $0f
              4a2e 00ab  ld   $ab
              4a2f 006a  ld   $6a
              4a30 00a5  ld   $a5
              4a31 0056  ld   $56
              4a32 002a  ld   $2a
              4a33 001c  ld   $1c
              4a34 0058  ld   $58
              4a35 0081  ld   $81
              4a36 0015  ld   $15
              4a37 0058  ld   $58
              4a38 0011  ld   $11
              4a39 000c  ld   $0c
              4a3a 00c3  ld   $c3
              4a3b 0030  ld   $30
              4a3c 000c  ld   $0c
              4a3d 00c3  ld   $c3
              4a3e 0030  ld   $30
              4a3f 00fc  ld   $fc
              4a40 00bf  ld   $bf
              4a41 0030  ld   $30
              4a42 00fc  ld   $fc
              4a43 00c2  ld   $c2
              4a44 00f0  ld   $f0
              4a45 00fb  ld   $fb
              4a46 00c3  ld   $c3
              4a47 0030  ld   $30
              4a48 000c  ld   $0c
              4a49 00c3  ld   $c3
              4a4a 0030  ld   $30
              4a4b 000c  ld   $0c
              4a4c 00c3  ld   $c3
              4a4d 0030  ld   $30
              4a4e 005c  ld   $5c
              4a4f 00a9  ld   $a9
              4a50 0069  ld   $69
              4a51 0055  ld   $55
              4a52 0055  ld   $55
              4a53 0029  ld   $29
              4a54 0055  ld   $55
              4a55 0055  ld   $55
              4a56 0055  ld   $55
              4a57 0055  ld   $55
              4a58 0051  ld   $51
              4a59 0054  ld   $54
              4a5a 0055  ld   $55
              4a5b 0055  ld   $55
              4a5c 0014  ld   $14
              4a5d 0090  ld   $90
              4a5e 0052  ld   $52
              4a5f 0055  ld   $55
              4a60 0055  ld   $55
              4a61 0055  ld   $55
              4a62 006a  ld   $6a
              4a63 0005  ld   $05
              4a64 00c3  ld   $c3
              4a65 0030  ld   $30
              4a66 000c  ld   $0c
              4a67 00c3  ld   $c3
              4a68 0030  ld   $30
              4a69 00ac  ld   $ac
              4a6a 00fe  ld   $fe
              4a6b 0030  ld   $30
              4a6c 000c  ld   $0c
              4a6d 00c3  ld   $c3
              4a6e 0030  ld   $30
              4a6f 00ac  ld   $ac
              4a70 00fe  ld   $fe
              4a71 0030  ld   $30
              4a72 000c  ld   $0c
              4a73 00c3  ld   $c3
              4a74 00b0  ld   $b0
              4a75 00fa  ld   $fa
              4a76 00c3  ld   $c3
              4a77 0030  ld   $30
              4a78 000c  ld   $0c
              4a79 00c3  ld   $c3
              4a7a 0030  ld   $30
              4a7b 000c  ld   $0c
              4a7c 00c3  ld   $c3
              4a7d 0030  ld   $30
              4a7e 000c  ld   $0c
              4a7f 00c3  ld   $c3
              4a80 0030  ld   $30
              4a81 0000  ld   $00
              4a82 0000  ld   $00
              4a83 0000  ld   $00
              * 8 times
              4a89 0040  ld   $40
              4a8a 0055  ld   $55
              4a8b 0055  ld   $55
              4a8c 0055  ld   $55
              * 5 times
              4a8f 0030  ld   $30
              4a90 000c  ld   $0c
              4a91 00c3  ld   $c3
              4a92 0030  ld   $30
              4a93 000c  ld   $0c
              4a94 00c3  ld   $c3
              4a95 00e9  ld   $e9
              4a96 001a  ld   $1a
              4a97 00a4  ld   $a4
              4a98 0041  ld   $41
              4a99 00b0  ld   $b0
              4a9a 00ae  ld   $ae
              4a9b 0030  ld   $30
              4a9c 000c  ld   $0c
              4a9d 00c3  ld   $c3
              4a9e 00b0  ld   $b0
              4a9f 004a  ld   $4a
              4aa0 00d3  ld   $d3
              4aa1 0034  ld   $34
              4aa2 004d  ld   $4d
              4aa3 00d3  ld   $d3
              4aa4 0034  ld   $34
              4aa5 004d  ld   $4d
              4aa6 00d3  ld   $d3
              4aa7 0034  ld   $34
              4aa8 004d  ld   $4d
              4aa9 00d3  ld   $d3
              4aaa 00b4  ld   $b4
              4aab 000a  ld   $0a
              4aac 00c3  ld   $c3
              4aad 0030  ld   $30
              4aae 000c  ld   $0c
              4aaf 00c3  ld   $c3
              4ab0 0030  ld   $30
              4ab1 000c  ld   $0c
              4ab2 0007  ld   $07
              4ab3 0096  ld   $96
              4ab4 0045  ld   $45
              4ab5 0058  ld   $58
              4ab6 0001  ld   $01
              4ab7 000c  ld   $0c
              4ab8 00c3  ld   $c3
              4ab9 0030  ld   $30
              4aba 000c  ld   $0c
              4abb 00c3  ld   $c3
              4abc 0030  ld   $30
              4abd 00bc  ld   $bc
              4abe 00bc  ld   $bc
              4abf 00bf  ld   $bf
              4ac0 0011  ld   $11
              4ac1 0018  ld   $18
              4ac2 0081  ld   $81
              4ac3 0011  ld   $11
              4ac4 0018  ld   $18
              4ac5 0081  ld   $81
              4ac6 0011  ld   $11
              4ac7 0018  ld   $18
              4ac8 00c1  ld   $c1
              4ac9 001b  ld   $1b
              4aca 0004  ld   $04
              4acb 0041  ld   $41
              4acc 00f0  ld   $f0
              4acd 0007  ld   $07
              4ace 0030  ld   $30
              4acf 000c  ld   $0c
              4ad0 00c3  ld   $c3
              4ad1 0030  ld   $30
              4ad2 000c  ld   $0c
              4ad3 00fc  ld   $fc
              4ad4 0030  ld   $30
              4ad5 000c  ld   $0c
              4ad6 00ff  ld   $ff
              4ad7 003f  ld   $3f
              4ad8 000c  ld   $0c
              4ad9 00c3  ld   $c3
              4ada 003f  ld   $3f
              4adb 00f0  ld   $f0
              4adc 00c3  ld   $c3
              4add 0030  ld   $30
              4ade 000c  ld   $0c
              4adf 00ff  ld   $ff
              4ae0 00c0  ld   $c0
              4ae1 000f  ld   $0f
              4ae2 00c3  ld   $c3
              4ae3 00ff  ld   $ff
              4ae4 000f  ld   $0f
              4ae5 00c3  ld   $c3
              4ae6 0030  ld   $30
              4ae7 000c  ld   $0c
              4ae8 00c3  ld   $c3
              4ae9 00b0  ld   $b0
              4aea 005a  ld   $5a
              4aeb 00a9  ld   $a9
              4aec 00bf  ld   $bf
              4aed 000a  ld   $0a
              4aee 00ab  ld   $ab
              4aef 0095  ld   $95
              4af0 005a  ld   $5a
              4af1 00a9  ld   $a9
              4af2 002a  ld   $2a
              4af3 001c  ld   $1c
              4af4 0004  ld   $04
              4af5 0041  ld   $41
              4af6 0010  ld   $10
              4af7 0044  ld   $44
              4af8 0011  ld   $11
              4af9 000c  ld   $0c
              4afa 00c3  ld   $c3
              4afb fe00  bra  ac          ;+-----------------------------------+
              4afc fcfd  bra  $4afd       ;|                                   |
              4afd 1418  ld   $18,y       ;| Trampoline for page $4a00 lookups |
              4afe e006  jmp  y,$06       ;|                                   |
              4aff c218  st   [$18]       ;+-----------------------------------+
              4b00 0030  ld   $30
              4b01 000c  ld   $0c
              4b02 00c3  ld   $c3
              4b03 00f0  ld   $f0
              4b04 00ff  ld   $ff
              4b05 004b  ld   $4b
              4b06 00ff  ld   $ff
              4b07 00fb  ld   $fb
              4b08 00bf  ld   $bf
              4b09 00bf  ld   $bf
              4b0a 00f4  ld   $f4
              4b0b 00ff  ld   $ff
              4b0c 0030  ld   $30
              4b0d 000c  ld   $0c
              4b0e 00c3  ld   $c3
              4b0f 0030  ld   $30
              4b10 000c  ld   $0c
              4b11 00c3  ld   $c3
              4b12 0030  ld   $30
              4b13 00ac  ld   $ac
              4b14 00aa  ld   $aa
              4b15 00aa  ld   $aa
              4b16 005a  ld   $5a
              4b17 00a9  ld   $a9
              4b18 00aa  ld   $aa
              4b19 00aa  ld   $aa
              4b1a 00aa  ld   $aa
              * 5 times
              4b1d 006a  ld   $6a
              4b1e 009a  ld   $9a
              4b1f 00aa  ld   $aa
              4b20 00aa  ld   $aa
              4b21 00aa  ld   $aa
              * 5 times
              4b24 006a  ld   $6a
              4b25 00a5  ld   $a5
              4b26 0069  ld   $69
              4b27 009a  ld   $9a
              4b28 0006  ld   $06
              4b29 00c3  ld   $c3
              4b2a 0030  ld   $30
              4b2b 000c  ld   $0c
              4b2c 00c3  ld   $c3
              4b2d 0030  ld   $30
              4b2e 00ac  ld   $ac
              4b2f 00fe  ld   $fe
              4b30 0030  ld   $30
              4b31 000c  ld   $0c
              4b32 00c3  ld   $c3
              4b33 0030  ld   $30
              4b34 00ac  ld   $ac
              4b35 00fe  ld   $fe
              4b36 0030  ld   $30
              4b37 000c  ld   $0c
              4b38 00c3  ld   $c3
              4b39 00b0  ld   $b0
              4b3a 00fa  ld   $fa
              4b3b 00c3  ld   $c3
              4b3c 0030  ld   $30
              4b3d 000c  ld   $0c
              4b3e 00c3  ld   $c3
              4b3f 0030  ld   $30
              4b40 000c  ld   $0c
              4b41 00c3  ld   $c3
              4b42 0030  ld   $30
              4b43 000c  ld   $0c
              4b44 00c3  ld   $c3
              4b45 0030  ld   $30
              4b46 000c  ld   $0c
              4b47 0003  ld   $03
              4b48 0000  ld   $00
              4b49 0000  ld   $00
              4b4a 0000  ld   $00
              * 11 times
              4b53 00c3  ld   $c3
              4b54 0030  ld   $30
              4b55 000c  ld   $0c
              4b56 00c3  ld   $c3
              4b57 0030  ld   $30
              4b58 000c  ld   $0c
              4b59 00c3  ld   $c3
              4b5a 00eb  ld   $eb
              4b5b 001a  ld   $1a
              4b5c 0004  ld   $04
              4b5d 0069  ld   $69
              4b5e 00b0  ld   $b0
              4b5f 00a6  ld   $a6
              4b60 0030  ld   $30
              4b61 000c  ld   $0c
              4b62 00c3  ld   $c3
              4b63 0070  ld   $70
              4b64 0005  ld   $05
              4b65 00c3  ld   $c3
              4b66 00fe  ld   $fe
              4b67 00ef  ld   $ef
              4b68 00ff  ld   $ff
              4b69 00fe  ld   $fe
              4b6a 00ef  ld   $ef
              4b6b 00ff  ld   $ff
              4b6c 00fe  ld   $fe
              4b6d 00ef  ld   $ef
              4b6e 00c3  ld   $c3
              4b6f 0070  ld   $70
              4b70 0005  ld   $05
              4b71 00c3  ld   $c3
              4b72 0030  ld   $30
              4b73 000c  ld   $0c
              4b74 00c3  ld   $c3
              4b75 0030  ld   $30
              4b76 000c  ld   $0c
              4b77 0007  ld   $07
              4b78 0084  ld   $84
              4b79 0065  ld   $65
              4b7a 0059  ld   $59
              4b7b 0001  ld   $01
              4b7c 000c  ld   $0c
              4b7d 00c3  ld   $c3
              4b7e 0030  ld   $30
              4b7f 000c  ld   $0c
              4b80 00c3  ld   $c3
              4b81 0030  ld   $30
              4b82 006c  ld   $6c
              4b83 00fc  ld   $fc
              4b84 00ef  ld   $ef
              4b85 00ff  ld   $ff
              4b86 00fe  ld   $fe
              4b87 00ef  ld   $ef
              4b88 00ff  ld   $ff
              4b89 00fe  ld   $fe
              4b8a 00ef  ld   $ef
              4b8b 00ff  ld   $ff
              4b8c 00fe  ld   $fe
              4b8d 00ef  ld   $ef
              4b8e 00ff  ld   $ff
              4b8f 00fe  ld   $fe
              4b90 00ef  ld   $ef
              4b91 00ff  ld   $ff
              4b92 0006  ld   $06
              4b93 0030  ld   $30
              4b94 000c  ld   $0c
              4b95 00c3  ld   $c3
              4b96 000c  ld   $0c
              4b97 00f3  ld   $f3
              4b98 0003  ld   $03
              4b99 000c  ld   $0c
              4b9a 00c3  ld   $c3
              4b9b 0030  ld   $30
              4b9c 000c  ld   $0c
              4b9d 00c3  ld   $c3
              4b9e 0030  ld   $30
              4b9f 00cc  ld   $cc
              4ba0 00ff  ld   $ff
              4ba1 0033  ld   $33
              4ba2 000c  ld   $0c
              4ba3 00c3  ld   $c3
              4ba4 0000  ld   $00
              4ba5 003f  ld   $3f
              4ba6 00c3  ld   $c3
              4ba7 0030  ld   $30
              4ba8 000c  ld   $0c
              4ba9 00c3  ld   $c3
              4baa 0030  ld   $30
              4bab 000c  ld   $0c
              4bac 000c  ld   $0c
              4bad 00c3  ld   $c3
              4bae 0070  ld   $70
              4baf 00a5  ld   $a5
              4bb0 00fe  ld   $fe
              4bb1 00ea  ld   $ea
              4bb2 000f  ld   $0f
              4bb3 00ab  ld   $ab
              4bb4 006a  ld   $6a
              4bb5 00a5  ld   $a5
              4bb6 0056  ld   $56
              4bb7 002a  ld   $2a
              4bb8 001c  ld   $1c
              4bb9 0058  ld   $58
              4bba 0081  ld   $81
              4bbb 0015  ld   $15
              4bbc 0058  ld   $58
              4bbd 0011  ld   $11
              4bbe 000c  ld   $0c
              4bbf 00c3  ld   $c3
              4bc0 0030  ld   $30
              4bc1 000c  ld   $0c
              4bc2 00c3  ld   $c3
              4bc3 00f0  ld   $f0
              4bc4 000f  ld   $0f
              4bc5 00c3  ld   $c3
              4bc6 0052  ld   $52
              4bc7 0024  ld   $24
              4bc8 0005  ld   $05
              4bc9 0012  ld   $12
              4bca 000c  ld   $0c
              4bcb 00ff  ld   $ff
              4bcc 0030  ld   $30
              4bcd 000c  ld   $0c
              4bce 00c3  ld   $c3
              4bcf 0030  ld   $30
              4bd0 000c  ld   $0c
              4bd1 00c3  ld   $c3
              4bd2 0030  ld   $30
              4bd3 005c  ld   $5c
              4bd4 0055  ld   $55
              4bd5 0055  ld   $55
              4bd6 0055  ld   $55
              4bd7 0055  ld   $55
              4bd8 0015  ld   $15
              4bd9 0055  ld   $55
              4bda 00a9  ld   $a9
              4bdb 0095  ld   $95
              4bdc 00aa  ld   $aa
              4bdd 00aa  ld   $aa
              4bde 00aa  ld   $aa
              4bdf 001a  ld   $1a
              4be0 0054  ld   $54
              4be1 0041  ld   $41
              4be2 0055  ld   $55
              4be3 0055  ld   $55
              4be4 0055  ld   $55
              4be5 0055  ld   $55
              4be6 0005  ld   $05
              4be7 0095  ld   $95
              4be8 000a  ld   $0a
              4be9 00c3  ld   $c3
              4bea 0030  ld   $30
              4beb 00cc  ld   $cc
              4bec 0030  ld   $30
              4bed 008c  ld   $8c
              4bee 00fa  ld   $fa
              4bef 00ff  ld   $ff
              4bf0 003f  ld   $3f
              4bf1 00c3  ld   $c3
              4bf2 0030  ld   $30
              4bf3 008c  ld   $8c
              4bf4 00fa  ld   $fa
              4bf5 00ff  ld   $ff
              4bf6 003f  ld   $3f
              4bf7 00c3  ld   $c3
              4bf8 0030  ld   $30
              4bf9 00ea  ld   $ea
              4bfa 00ff  ld   $ff
              4bfb fe00  bra  ac          ;+-----------------------------------+
              4bfc fcfd  bra  $4bfd       ;|                                   |
              4bfd 1418  ld   $18,y       ;| Trampoline for page $4b00 lookups |
              4bfe e006  jmp  y,$06       ;|                                   |
              4bff c218  st   [$18]       ;+-----------------------------------+
              4c00 00ff  ld   $ff
              4c01 000c  ld   $0c
              4c02 00c3  ld   $c3
              4c03 00c0  ld   $c0
              4c04 0030  ld   $30
              4c05 000c  ld   $0c
              4c06 00c3  ld   $c3
              4c07 0030  ld   $30
              4c08 000c  ld   $0c
              4c09 00c3  ld   $c3
              4c0a 0030  ld   $30
              4c0b 000c  ld   $0c
              4c0c 00c3  ld   $c3
              4c0d 0030  ld   $30
              4c0e 0000  ld   $00
              4c0f 0000  ld   $00
              4c10 0000  ld   $00
              * 8 times
              4c16 0015  ld   $15
              4c17 000c  ld   $0c
              4c18 00c3  ld   $c3
              4c19 0030  ld   $30
              4c1a 000c  ld   $0c
              4c1b 00c3  ld   $c3
              4c1c 0030  ld   $30
              4c1d 000c  ld   $0c
              4c1e 00c3  ld   $c3
              4c1f 00e9  ld   $e9
              4c20 001a  ld   $1a
              4c21 00a4  ld   $a4
              4c22 0041  ld   $41
              4c23 00b0  ld   $b0
              4c24 00ae  ld   $ae
              4c25 0030  ld   $30
              4c26 000c  ld   $0c
              4c27 00c3  ld   $c3
              4c28 0070  ld   $70
              4c29 00f5  ld   $f5
              4c2a 00fb  ld   $fb
              4c2b 00bf  ld   $bf
              4c2c 00af  ld   $af
              4c2d 00aa  ld   $aa
              4c2e 00aa  ld   $aa
              4c2f 00aa  ld   $aa
              * 5 times
              4c32 00fa  ld   $fa
              4c33 00fb  ld   $fb
              4c34 007f  ld   $7f
              4c35 0005  ld   $05
              4c36 00c3  ld   $c3
              4c37 0030  ld   $30
              4c38 000c  ld   $0c
              4c39 00c3  ld   $c3
              4c3a 0030  ld   $30
              4c3b 000c  ld   $0c
              4c3c 0007  ld   $07
              4c3d 0084  ld   $84
              4c3e 0065  ld   $65
              4c3f 0059  ld   $59
              4c40 0001  ld   $01
              4c41 000c  ld   $0c
              4c42 00c3  ld   $c3
              4c43 0030  ld   $30
              4c44 000c  ld   $0c
              4c45 00c3  ld   $c3
              4c46 0030  ld   $30
              4c47 00bc  ld   $bc
              4c48 00bc  ld   $bc
              4c49 0000  ld   $00
              4c4a 0000  ld   $00
              4c4b 0000  ld   $00
              * 13 times
              4c56 00f0  ld   $f0
              4c57 0007  ld   $07
              4c58 0030  ld   $30
              4c59 000c  ld   $0c
              4c5a 0033  ld   $33
              4c5b 0008  ld   $08
              4c5c 0082  ld   $82
              4c5d 0020  ld   $20
              4c5e 0008  ld   $08
              4c5f 0082  ld   $82
              4c60 0020  ld   $20
              4c61 0008  ld   $08
              4c62 0082  ld   $82
              4c63 0020  ld   $20
              4c64 0008  ld   $08
              4c65 0082  ld   $82
              4c66 0020  ld   $20
              4c67 0008  ld   $08
              4c68 0082  ld   $82
              4c69 0020  ld   $20
              4c6a 0008  ld   $08
              4c6b 0082  ld   $82
              4c6c 0020  ld   $20
              4c6d 0008  ld   $08
              4c6e 0082  ld   $82
              4c6f 0020  ld   $20
              4c70 0008  ld   $08
              4c71 0003  ld   $03
              4c72 00c3  ld   $c3
              4c73 00b0  ld   $b0
              4c74 005a  ld   $5a
              4c75 00a9  ld   $a9
              4c76 00bf  ld   $bf
              4c77 000a  ld   $0a
              4c78 00ab  ld   $ab
              4c79 00aa  ld   $aa
              4c7a 00aa  ld   $aa
              4c7b 00aa  ld   $aa
              4c7c 002a  ld   $2a
              4c7d 001c  ld   $1c
              4c7e 0004  ld   $04
              4c7f 0041  ld   $41
              4c80 0010  ld   $10
              4c81 0044  ld   $44
              4c82 0011  ld   $11
              4c83 000c  ld   $0c
              4c84 00c3  ld   $c3
              4c85 0030  ld   $30
              4c86 000c  ld   $0c
              4c87 00ff  ld   $ff
              4c88 00ff  ld   $ff
              4c89 00ff  ld   $ff
              * 11 times
              4c92 000f  ld   $0f
              4c93 00c3  ld   $c3
              4c94 0030  ld   $30
              4c95 000c  ld   $0c
              4c96 00c3  ld   $c3
              4c97 0030  ld   $30
              4c98 005c  ld   $5c
              4c99 0014  ld   $14
              4c9a 0045  ld   $45
              4c9b 0051  ld   $51
              4c9c 0014  ld   $14
              4c9d 0045  ld   $45
              4c9e 0051  ld   $51
              4c9f 0014  ld   $14
              4ca0 0045  ld   $45
              4ca1 0051  ld   $51
              4ca2 0014  ld   $14
              4ca3 0045  ld   $45
              4ca4 0051  ld   $51
              4ca5 0014  ld   $14
              4ca6 0045  ld   $45
              4ca7 0051  ld   $51
              4ca8 0014  ld   $14
              4ca9 0045  ld   $45
              4caa 0051  ld   $51
              4cab 0014  ld   $14
              4cac 0045  ld   $45
              4cad 0001  ld   $01
              4cae 00c3  ld   $c3
              4caf 0030  ld   $30
              4cb0 0083  ld   $83
              4cb1 0020  ld   $20
              4cb2 0008  ld   $08
              4cb3 0082  ld   $82
              4cb4 0020  ld   $20
              4cb5 0008  ld   $08
              4cb6 0082  ld   $82
              4cb7 0020  ld   $20
              4cb8 0008  ld   $08
              4cb9 0082  ld   $82
              4cba 0020  ld   $20
              4cbb 0008  ld   $08
              4cbc 0082  ld   $82
              4cbd 0020  ld   $20
              4cbe 0008  ld   $08
              4cbf 0082  ld   $82
              4cc0 0020  ld   $20
              4cc1 0008  ld   $08
              4cc2 0082  ld   $82
              4cc3 0030  ld   $30
              4cc4 0030  ld   $30
              4cc5 000c  ld   $0c
              4cc6 00c3  ld   $c3
              4cc7 0030  ld   $30
              4cc8 000c  ld   $0c
              4cc9 00c3  ld   $c3
              4cca 0030  ld   $30
              4ccb 000c  ld   $0c
              4ccc 00c3  ld   $c3
              4ccd 0030  ld   $30
              4cce 000c  ld   $0c
              4ccf 0003  ld   $03
              4cd0 0000  ld   $00
              4cd1 0000  ld   $00
              4cd2 0000  ld   $00
              * 5 times
              4cd5 00c3  ld   $c3
              4cd6 0015  ld   $15
              4cd7 000c  ld   $0c
              4cd8 00c3  ld   $c3
              4cd9 0030  ld   $30
              4cda 000c  ld   $0c
              4cdb 00c3  ld   $c3
              4cdc 0030  ld   $30
              4cdd 000c  ld   $0c
              4cde 00c3  ld   $c3
              4cdf 00eb  ld   $eb
              4ce0 001a  ld   $1a
              4ce1 0004  ld   $04         ;End of Apps/Racer/Horizon-256x16.rgb, size 3132
                                          ;+-----------------------------------+
                                          ;| Apps/Racer/Racer_v2.gcl           |
                                          ;+-----------------------------------+
              4ce2 dc7a  st   $7a,[y,x++] ;'z'
              4ce3 dc69  st   $69,[y,x++] ;'i'
              4ce4 dc70  st   $70,[y,x++] ;'p'
              4ce5 dc70  st   $70,[y,x++] ;'p'
              4ce6 dc65  st   $65,[y,x++] ;'e'
              4ce7 dc64  st   $64,[y,x++] ;'d'
              4ce8 dc52  st   $52,[y,x++] ;'R'
              4ce9 dc61  st   $61,[y,x++] ;'a'
              4cea 00a6  ld   $a6
              4ceb c218  st   [$18]
              4cec 0040  ld   $40
              4ced 14e0  ld   $e0,y
              4cee e071  jmp  y,$71
              4cef c219  st   [$19]
Racer:        4cf0 0002  ld   $02         ;| RAM segment address (high byte first)
              4cf1 0000  ld   $00         ;|
              4cf2 00f7  ld   $f7         ;| Length (1..256)
              4cf3 001a  ld   $1a         ;0200 LD
              4cf4 0021  ld   $21
              4cf5 00e6  ld   $e6         ;0202 SUBI
              4cf6 0020  ld   $20
              4cf7 0035  ld   $35         ;0204 BCC
              4cf8 0053  ld   $53         ;0205 GE
              4cf9 000b  ld   $0b
              4cfa 0021  ld   $21         ;0207 LDW
              4cfb fe00  bra  ac          ;+-----------------------------------+
              4cfc fcfd  bra  $4cfd       ;|                                   |
              4cfd 1418  ld   $18,y       ;| Trampoline for page $4c00 lookups |
              4cfe e006  jmp  y,$06       ;|                                   |
              4cff c218  st   [$18]       ;+-----------------------------------+
              4d00 000e  ld   $0e         ;0207 '_frameCount'
              4d01 00f3  ld   $f3         ;0209 DOKE
              4d02 0017  ld   $17         ;0209 '_vPCH'
              4d03 0090  ld   $90         ;020b BRA
              4d04 0005  ld   $05
              4d05 00cd  ld   $cd         ;020d DEF
              4d06 0057  ld   $57
              4d07 00e6  ld   $e6         ;020f SUBI
              4d08 0052  ld   $52
              4d09 0035  ld   $35         ;0211 BCC
              4d0a 0053  ld   $53         ;0212 GE
              4d0b 001b  ld   $1b
              4d0c 00e3  ld   $e3         ;0214 ADDI
              4d0d 0032  ld   $32
              4d0e 002b  ld   $2b         ;0216 STW
              4d0f 0030  ld   $30         ;0216 'i'
              4d10 0011  ld   $11         ;0218 LDWI
              4d11 0000  ld   $00
              4d12 0007  ld   $07
              4d13 0090  ld   $90         ;021b BRA
              4d14 0020  ld   $20
              4d15 002b  ld   $2b         ;021d STW
              4d16 0030  ld   $30         ;021d 'i'
              4d17 0011  ld   $11         ;021f LDWI
              4d18 0000  ld   $00
              4d19 0008  ld   $08
              4d1a 002b  ld   $2b         ;0222 STW
              4d1b 0032  ld   $32         ;0222 'fontData'
              4d1c 0021  ld   $21         ;0224 LDW
              4d1d 0030  ld   $30         ;0224 'i'
              4d1e 00e9  ld   $e9         ;0226 LSLW
              4d1f 00e9  ld   $e9         ;0227 LSLW
              4d20 0099  ld   $99         ;0228 ADDW
              4d21 0030  ld   $30         ;0228 'i'
              4d22 0099  ld   $99         ;022a ADDW
              4d23 0032  ld   $32         ;022a 'fontData'
              4d24 002b  ld   $2b         ;022c STW
              4d25 0032  ld   $32         ;022c 'fontData'
              4d26 0021  ld   $21         ;022e LDW
              4d27 0034  ld   $34         ;022e 'BgColor'
              4d28 005e  ld   $5e         ;0230 ST
              4d29 0024  ld   $24
              4d2a 0021  ld   $21         ;0232 LDW
              4d2b 0036  ld   $36         ;0232 'Color'
              4d2c 005e  ld   $5e         ;0234 ST
              4d2d 0025  ld   $25
              4d2e 0021  ld   $21         ;0236 LDW
              4d2f 0038  ld   $38         ;0236 'Pos'
              4d30 002b  ld   $2b         ;0238 STW
              4d31 0028  ld   $28
              4d32 0011  ld   $11         ;023a LDWI
              4d33 00e1  ld   $e1
              4d34 0004  ld   $04
              4d35 002b  ld   $2b         ;023d STW
              4d36 0022  ld   $22
              4d37 0059  ld   $59         ;023f LDI
              4d38 00fb  ld   $fb
              4d39 002b  ld   $2b         ;0241 STW
              4d3a 0030  ld   $30         ;0241 'i'
              4d3b 0021  ld   $21         ;0243 LDW
              4d3c 0032  ld   $32         ;0243 'fontData'
              4d3d 007f  ld   $7f         ;0245 LUP
              4d3e 0000  ld   $00
              4d3f 0093  ld   $93         ;0247 INC
              4d40 0032  ld   $32         ;0247 'fontData'
              4d41 005e  ld   $5e         ;0249 ST
              4d42 0026  ld   $26
              4d43 00b4  ld   $b4         ;024b SYS
              4d44 00cc  ld   $cc
              4d45 0093  ld   $93         ;024d INC
              4d46 0028  ld   $28
              4d47 0093  ld   $93         ;024f INC
              4d48 0030  ld   $30         ;024f 'i'
              4d49 0021  ld   $21         ;0251 LDW
              4d4a 0030  ld   $30         ;0251 'i'
              4d4b 0035  ld   $35         ;0253 BCC
              4d4c 0072  ld   $72         ;0254 NE
              4d4d 0041  ld   $41
              4d4e 0021  ld   $21         ;0256 LDW
              4d4f 0038  ld   $38         ;0256 'Pos'
              4d50 00ff  ld   $ff         ;0258 RET
              4d51 002b  ld   $2b         ;0259 STW
              4d52 003a  ld   $3a         ;0259 'QPrintChar'
              4d53 00cd  ld   $cd         ;025b DEF
              4d54 00f0  ld   $f0
              4d55 001a  ld   $1a         ;025d LD
              4d56 000e  ld   $0e
              4d57 00b8  ld   $b8         ;025f SUBW
              4d58 003c  ld   $3c         ;025f 'LastFrame'
              4d59 0082  ld   $82         ;0261 ANDI
              4d5a 00ff  ld   $ff
              4d5b 005e  ld   $5e         ;0263 ST
              4d5c 002b  ld   $2b
              4d5d 0099  ld   $99         ;0265 ADDW
              4d5e 003e  ld   $3e         ;0265 'Time'
              4d5f 0035  ld   $35         ;0267 BCC
              4d60 0053  ld   $53         ;0268 GE
              4d61 006b  ld   $6b
              4d62 0011  ld   $11         ;026a LDWI
              4d63 00ff  ld   $ff
              4d64 007f  ld   $7f
              4d65 002b  ld   $2b         ;026d STW
              4d66 003e  ld   $3e         ;026d 'Time'
              4d67 001a  ld   $1a         ;026f LD
              4d68 000e  ld   $0e
              4d69 002b  ld   $2b         ;0271 STW
              4d6a 003c  ld   $3c         ;0271 'LastFrame'
              4d6b 001a  ld   $1a         ;0273 LD
              4d6c 0041  ld   $41         ;0273 'Speed'+1
              4d6d 0035  ld   $35         ;0275 BCC
              4d6e 0056  ld   $56         ;0276 LE
              4d6f 008a  ld   $8a
              4d70 002b  ld   $2b         ;0278 STW
              4d71 0030  ld   $30         ;0278 'i'
              4d72 0021  ld   $21         ;027a LDW
              4d73 0042  ld   $42         ;027a 'CarX'
              4d74 00b8  ld   $b8         ;027c SUBW
              4d75 0044  ld   $44         ;027c 'DriftX'
              4d76 002b  ld   $2b         ;027e STW
              4d77 0042  ld   $42         ;027e 'CarX'
              4d78 0021  ld   $21         ;0280 LDW
              4d79 0046  ld   $46         ;0280 'HorizonX'
              4d7a 0099  ld   $99         ;0282 ADDW
              4d7b 0048  ld   $48         ;0282 'HorizonDX'
              4d7c 002b  ld   $2b         ;0284 STW
              4d7d 0046  ld   $46         ;0284 'HorizonX'
              4d7e 0021  ld   $21         ;0286 LDW
              4d7f 0030  ld   $30         ;0286 'i'
              4d80 00e6  ld   $e6         ;0288 SUBI
              4d81 0001  ld   $01
              4d82 0090  ld   $90         ;028a BRA
              4d83 0073  ld   $73
              4d84 0059  ld   $59         ;028c LDI
              4d85 0000  ld   $00
              4d86 002b  ld   $2b         ;028e STW
              4d87 004a  ld   $4a         ;028e 'Steer'
              4d88 001a  ld   $1a         ;0290 LD
              4d89 0011  ld   $11
              4d8a 0082  ld   $82         ;0292 ANDI
              4d8b 0001  ld   $01
              4d8c 0035  ld   $35         ;0294 BCC
              4d8d 0072  ld   $72         ;0295 NE
              4d8e 00a0  ld   $a0
              4d8f 0011  ld   $11         ;0297 LDWI
              4d90 0000  ld   $00
              4d91 0002  ld   $02
              4d92 0099  ld   $99         ;029a ADDW
              4d93 0042  ld   $42         ;029a 'CarX'
              4d94 002b  ld   $2b         ;029c STW
              4d95 0042  ld   $42         ;029c 'CarX'
              4d96 0059  ld   $59         ;029e LDI
              4d97 0001  ld   $01
              4d98 002b  ld   $2b         ;02a0 STW
              4d99 004a  ld   $4a         ;02a0 'Steer'
              4d9a 001a  ld   $1a         ;02a2 LD
              4d9b 0011  ld   $11
              4d9c 0082  ld   $82         ;02a4 ANDI
              4d9d 0002  ld   $02
              4d9e 0035  ld   $35         ;02a6 BCC
              4d9f 0072  ld   $72         ;02a7 NE
              4da0 00b3  ld   $b3
              4da1 0011  ld   $11         ;02a9 LDWI
              4da2 0000  ld   $00
              4da3 00fe  ld   $fe
              4da4 0099  ld   $99         ;02ac ADDW
              4da5 0042  ld   $42         ;02ac 'CarX'
              4da6 002b  ld   $2b         ;02ae STW
              4da7 0042  ld   $42         ;02ae 'CarX'
              4da8 0011  ld   $11         ;02b0 LDWI
              4da9 00ff  ld   $ff
              4daa 00ff  ld   $ff
              4dab 002b  ld   $2b         ;02b3 STW
              4dac 004a  ld   $4a         ;02b3 'Steer'
              4dad 001a  ld   $1a         ;02b5 LD
              4dae 0011  ld   $11
              4daf 0082  ld   $82         ;02b7 ANDI
              4db0 0080  ld   $80
              4db1 0035  ld   $35         ;02b9 BCC
              4db2 0072  ld   $72         ;02ba NE
              4db3 00cf  ld   $cf
              4db4 0021  ld   $21         ;02bc LDW
              4db5 0040  ld   $40         ;02bc 'Speed'
              4db6 00e3  ld   $e3         ;02be ADDI
              4db7 0010  ld   $10
              4db8 002b  ld   $2b         ;02c0 STW
              4db9 0040  ld   $40         ;02c0 'Speed'
              4dba 0011  ld   $11         ;02c2 LDWI
              4dbb 00ff  ld   $ff
              4dbc 0005  ld   $05
              4dbd 00b8  ld   $b8         ;02c5 SUBW
              4dbe 0040  ld   $40         ;02c5 'Speed'
              4dbf 0035  ld   $35         ;02c7 BCC
              4dc0 0053  ld   $53         ;02c8 GE
              4dc1 00cd  ld   $cd
              4dc2 0011  ld   $11         ;02ca LDWI
              4dc3 00ff  ld   $ff
              4dc4 0005  ld   $05
              4dc5 002b  ld   $2b         ;02cd STW
              4dc6 0040  ld   $40         ;02cd 'Speed'
              4dc7 0090  ld   $90         ;02cf BRA
              4dc8 00dd  ld   $dd
              4dc9 0011  ld   $11         ;02d1 LDWI
              4dca 00f8  ld   $f8
              4dcb 00fe  ld   $fe
              4dcc 0099  ld   $99         ;02d4 ADDW
              4dcd 0040  ld   $40         ;02d4 'Speed'
              4dce 0035  ld   $35         ;02d6 BCC
              4dcf 0050  ld   $50         ;02d7 LT
              4dd0 00dd  ld   $dd
              4dd1 0021  ld   $21         ;02d9 LDW
              4dd2 0040  ld   $40         ;02d9 'Speed'
              4dd3 00e6  ld   $e6         ;02db SUBI
              4dd4 0008  ld   $08
              4dd5 002b  ld   $2b         ;02dd STW
              4dd6 0040  ld   $40         ;02dd 'Speed'
              4dd7 001a  ld   $1a         ;02df LD
              4dd8 0011  ld   $11
              4dd9 0082  ld   $82         ;02e1 ANDI
              4dda 0040  ld   $40
              4ddb 0035  ld   $35         ;02e3 BCC
              4ddc 0072  ld   $72         ;02e4 NE
              4ddd 00ef  ld   $ef
              4dde 0021  ld   $21         ;02e6 LDW
              4ddf 0040  ld   $40         ;02e6 'Speed'
              4de0 00e6  ld   $e6         ;02e8 SUBI
              4de1 0040  ld   $40
              4de2 0035  ld   $35         ;02ea BCC
              4de3 0053  ld   $53         ;02eb GE
              4de4 00ed  ld   $ed
              4de5 0059  ld   $59         ;02ed LDI
              4de6 0000  ld   $00
              4de7 002b  ld   $2b         ;02ef STW
              4de8 0040  ld   $40         ;02ef 'Speed'
              4de9 00ff  ld   $ff         ;02f1 RET
              4dea 002b  ld   $2b         ;02f2 STW
              4deb 004c  ld   $4c         ;02f2 'ControlRaceCar'
              4dec 0093  ld   $93         ;02f4 INC
              4ded 001b  ld   $1b         ;02f4 '_vLR'+1
              4dee 00ff  ld   $ff         ;02f6 RET
              4def 0003  ld   $03         ;| RAM segment address (high byte first)
              4df0 0000  ld   $00         ;|
              4df1 00e1  ld   $e1         ;| Length (1..256)
              4df2 00cd  ld   $cd         ;0300 DEF
              4df3 0009  ld   $09
              4df4 0047  ld   $47         ;0302 'G'
              4df5 0069  ld   $69         ;0303 'i'
              4df6 0067  ld   $67         ;0304 'g'
              4df7 0061  ld   $61         ;0305 'a'
              4df8 0074  ld   $74         ;0306 't'
              4df9 0072  ld   $72         ;0307 'r'
              4dfa 006f  ld   $6f         ;0308 'o'
              4dfb fe00  bra  ac          ;+-----------------------------------+
              4dfc fcfd  bra  $4dfd       ;|                                   |
              4dfd 1418  ld   $18,y       ;| Trampoline for page $4d00 lookups |
              4dfe e006  jmp  y,$06       ;|                                   |
              4dff c218  st   [$18]       ;+-----------------------------------+
              4e00 006e  ld   $6e         ;0309 'n'
              4e01 0000  ld   $00         ;030a 0
              4e02 002b  ld   $2b         ;030b STW
              4e03 004e  ld   $4e         ;030b 'GigatronText'
              4e04 00cd  ld   $cd         ;030d DEF
              4e05 001d  ld   $1d
              4e06 001a  ld   $1a         ;030f LD
              4e07 000e  ld   $0e
              4e08 0099  ld   $99         ;0311 ADDW
              4e09 0050  ld   $50         ;0311 'Delay'
              4e0a 0082  ld   $82         ;0313 ANDI
              4e0b 00ff  ld   $ff
              4e0c 002b  ld   $2b         ;0315 STW
              4e0d 0052  ld   $52         ;0315 'tmp'
              4e0e 001a  ld   $1a         ;0317 LD
              4e0f 000e  ld   $0e
              4e10 00b8  ld   $b8         ;0319 SUBW
              4e11 0052  ld   $52         ;0319 'tmp'
              4e12 0035  ld   $35         ;031b BCC
              4e13 0072  ld   $72         ;031c NE
              4e14 0015  ld   $15
              4e15 00ff  ld   $ff         ;031e RET
              4e16 002b  ld   $2b         ;031f STW
              4e17 0054  ld   $54         ;031f 'Wait'
              4e18 00cd  ld   $cd         ;0321 DEF
              4e19 00a1  ld   $a1
              4e1a 0021  ld   $21         ;0323 LDW
              4e1b 0056  ld   $56         ;0323 'Video'
              4e1c 00ad  ld   $ad         ;0325 PEEK
              4e1d 0082  ld   $82         ;0326 ANDI
              4e1e 00fe  ld   $fe
              4e1f 005e  ld   $5e         ;0328 ST
              4e20 0059  ld   $59         ;0328 'p'+1
              4e21 0088  ld   $88         ;032a ORI
              4e22 0001  ld   $01
              4e23 005e  ld   $5e         ;032c ST
              4e24 005b  ld   $5b         ;032c 'q'+1
              4e25 0093  ld   $93         ;032e INC
              4e26 0056  ld   $56         ;032e 'Video'
              4e27 0059  ld   $59         ;0330 LDI
              4e28 0000  ld   $00
              4e29 005e  ld   $5e         ;0332 ST
              4e2a 0058  ld   $58         ;0332 'p'
              4e2b 005e  ld   $5e         ;0334 ST
              4e2c 005a  ld   $5a         ;0334 'q'
              4e2d 0021  ld   $21         ;0336 LDW
              4e2e 0058  ld   $58         ;0336 'p'
              4e2f 00ad  ld   $ad         ;0338 PEEK
              4e30 002b  ld   $2b         ;0339 STW
              4e31 0030  ld   $30         ;0339 'i'
              4e32 0021  ld   $21         ;033b LDW
              4e33 005a  ld   $5a         ;033b 'q'
              4e34 00ad  ld   $ad         ;033d PEEK
              4e35 00b8  ld   $b8         ;033e SUBW
              4e36 0030  ld   $30         ;033e 'i'
              4e37 002b  ld   $2b         ;0340 STW
              4e38 0030  ld   $30         ;0340 'i'
              4e39 0021  ld   $21         ;0342 LDW
              4e3a 0058  ld   $58         ;0342 'p'
              4e3b 00ad  ld   $ad         ;0344 PEEK
              4e3c 005e  ld   $5e         ;0345 ST
              4e3d 0058  ld   $58         ;0345 'p'
              4e3e 005e  ld   $5e         ;0347 ST
              4e3f 005a  ld   $5a         ;0347 'q'
              4e40 0059  ld   $59         ;0349 LDI
              4e41 0015  ld   $15
              4e42 00f0  ld   $f0         ;034b POKE
              4e43 0058  ld   $58         ;034b 'p'
              4e44 00f0  ld   $f0         ;034d POKE
              4e45 005a  ld   $5a         ;034d 'q'
              4e46 0093  ld   $93         ;034f INC
              4e47 0058  ld   $58         ;034f 'p'
              4e48 0093  ld   $93         ;0351 INC
              4e49 005a  ld   $5a         ;0351 'q'
              4e4a 0021  ld   $21         ;0353 LDW
              4e4b 0030  ld   $30         ;0353 'i'
              4e4c 00e6  ld   $e6         ;0355 SUBI
              4e4d 0001  ld   $01
              4e4e 002b  ld   $2b         ;0357 STW
              4e4f 0030  ld   $30         ;0357 'i'
              4e50 0035  ld   $35         ;0359 BCC
              4e51 004d  ld   $4d         ;035a GT
              4e52 0047  ld   $47
              4e53 0021  ld   $21         ;035c LDW
              4e54 005c  ld   $5c         ;035c 'Sprite'
              4e55 002b  ld   $2b         ;035e STW
              4e56 005e  ld   $5e         ;035e 's'
              4e57 0059  ld   $59         ;0360 LDI
              4e58 0000  ld   $00
              4e59 005e  ld   $5e         ;0362 ST
              4e5a 0058  ld   $58         ;0362 'p'
              4e5b 0021  ld   $21         ;0364 LDW
              4e5c 0056  ld   $56         ;0364 'Video'
              4e5d 00ad  ld   $ad         ;0366 PEEK
              4e5e 0099  ld   $99         ;0367 ADDW
              4e5f 0060  ld   $60         ;0367 'X'
              4e60 002b  ld   $2b         ;0369 STW
              4e61 0060  ld   $60         ;0369 'X'
              4e62 0021  ld   $21         ;036b LDW
              4e63 005e  ld   $5e         ;036b 's'
              4e64 00ad  ld   $ad         ;036d PEEK
              4e65 0099  ld   $99         ;036e ADDW
              4e66 0060  ld   $60         ;036e 'X'
              4e67 00f0  ld   $f0         ;0370 POKE
              4e68 0058  ld   $58         ;0370 'p'
              4e69 005e  ld   $5e         ;0372 ST
              4e6a 0058  ld   $58         ;0372 'p'
              4e6b 005e  ld   $5e         ;0374 ST
              4e6c 005a  ld   $5a         ;0374 'q'
              4e6d 0093  ld   $93         ;0376 INC
              4e6e 005e  ld   $5e         ;0376 's'
              4e6f 0021  ld   $21         ;0378 LDW
              4e70 0058  ld   $58         ;0378 'p'
              4e71 00ad  ld   $ad         ;037a PEEK
              4e72 008c  ld   $8c         ;037b XORI
              4e73 0015  ld   $15
              4e74 0099  ld   $99         ;037d ADDW
              4e75 0062  ld   $62         ;037d 'Collision'
              4e76 002b  ld   $2b         ;037f STW
              4e77 0062  ld   $62         ;037f 'Collision'
              4e78 0021  ld   $21         ;0381 LDW
              4e79 005e  ld   $5e         ;0381 's'
              4e7a 00ad  ld   $ad         ;0383 PEEK
              4e7b 00f0  ld   $f0         ;0384 POKE
              4e7c 0058  ld   $58         ;0384 'p'
              4e7d 0093  ld   $93         ;0386 INC
              4e7e 0058  ld   $58         ;0386 'p'
              4e7f 00f0  ld   $f0         ;0388 POKE
              4e80 005a  ld   $5a         ;0388 'q'
              4e81 0093  ld   $93         ;038a INC
              4e82 005a  ld   $5a         ;038a 'q'
              4e83 0093  ld   $93         ;038c INC
              4e84 005e  ld   $5e         ;038c 's'
              4e85 0021  ld   $21         ;038e LDW
              4e86 005e  ld   $5e         ;038e 's'
              4e87 00ad  ld   $ad         ;0390 PEEK
              4e88 0035  ld   $35         ;0391 BCC
              4e89 0072  ld   $72         ;0392 NE
              4e8a 0076  ld   $76
              4e8b 0059  ld   $59         ;0394 LDI
              4e8c 0000  ld   $00
              4e8d 005e  ld   $5e         ;0396 ST
              4e8e 005a  ld   $5a         ;0396 'q'
              4e8f 001a  ld   $1a         ;0398 LD
              4e90 0058  ld   $58         ;0398 'p'
              4e91 00f0  ld   $f0         ;039a POKE
              4e92 005a  ld   $5a         ;039a 'q'
              4e93 0021  ld   $21         ;039c LDW
              4e94 0056  ld   $56         ;039c 'Video'
              4e95 00e3  ld   $e3         ;039e ADDI
              4e96 0003  ld   $03
              4e97 002b  ld   $2b         ;03a0 STW
              4e98 0056  ld   $56         ;03a0 'Video'
              4e99 00ff  ld   $ff         ;03a2 RET
              4e9a 002b  ld   $2b         ;03a3 STW
              4e9b 0064  ld   $64         ;03a3 'DrawPixels'
              4e9c 00cd  ld   $cd         ;03a5 DEF
              4e9d 00da  ld   $da
              4e9e 0011  ld   $11         ;03a7 LDWI
              4e9f 00fd  ld   $fd
              4ea0 0001  ld   $01
              4ea1 002b  ld   $2b         ;03aa STW
              4ea2 0058  ld   $58         ;03aa 'p'
              4ea3 0021  ld   $21         ;03ac LDW
              4ea4 0040  ld   $40         ;03ac 'Speed'
              4ea5 0099  ld   $99         ;03ae ADDW
              4ea6 0040  ld   $40         ;03ae 'Speed'
              4ea7 001a  ld   $1a         ;03b0 LD
              4ea8 0019  ld   $19
              4ea9 00f0  ld   $f0         ;03b2 POKE
              4eaa 0058  ld   $58         ;03b2 'p'
              4eab 0093  ld   $93         ;03b4 INC
              4eac 0059  ld   $59         ;03b4 'p'+1
              4ead 00f0  ld   $f0         ;03b6 POKE
              4eae 0058  ld   $58         ;03b6 'p'
              4eaf 0093  ld   $93         ;03b8 INC
              4eb0 0059  ld   $59         ;03b8 'p'+1
              4eb1 00f0  ld   $f0         ;03ba POKE
              4eb2 0058  ld   $58         ;03ba 'p'
              4eb3 0093  ld   $93         ;03bc INC
              4eb4 0059  ld   $59         ;03bc 'p'+1
              4eb5 00f0  ld   $f0         ;03be POKE
              4eb6 0058  ld   $58         ;03be 'p'
              4eb7 0011  ld   $11         ;03c0 LDWI
              4eb8 00fc  ld   $fc
              4eb9 0001  ld   $01
              4eba 002b  ld   $2b         ;03c3 STW
              4ebb 0058  ld   $58         ;03c3 'p'
              4ebc 0021  ld   $21         ;03c5 LDW
              4ebd 0040  ld   $40         ;03c5 'Speed'
              4ebe 0082  ld   $82         ;03c7 ANDI
              4ebf 007f  ld   $7f
              4ec0 00f0  ld   $f0         ;03c9 POKE
              4ec1 0058  ld   $58         ;03c9 'p'
              4ec2 0093  ld   $93         ;03cb INC
              4ec3 0059  ld   $59         ;03cb 'p'+1
              4ec4 00f0  ld   $f0         ;03cd POKE
              4ec5 0058  ld   $58         ;03cd 'p'
              4ec6 0093  ld   $93         ;03cf INC
              4ec7 0059  ld   $59         ;03cf 'p'+1
              4ec8 00f0  ld   $f0         ;03d1 POKE
              4ec9 0058  ld   $58         ;03d1 'p'
              4eca 0093  ld   $93         ;03d3 INC
              4ecb 0059  ld   $59         ;03d3 'p'+1
              4ecc 00f0  ld   $f0         ;03d5 POKE
              4ecd 0058  ld   $58         ;03d5 'p'
              4ece 0059  ld   $59         ;03d7 LDI
              4ecf 000a  ld   $0a
              4ed0 005e  ld   $5e         ;03d9 ST
              4ed1 002c  ld   $2c
              4ed2 00ff  ld   $ff         ;03db RET
              4ed3 002b  ld   $2b         ;03dc STW
              4ed4 0066  ld   $66         ;03dc 'PlayEngineSound'
              4ed5 0093  ld   $93         ;03de INC
              4ed6 001b  ld   $1b         ;03de '_vLR'+1
              4ed7 00ff  ld   $ff         ;03e0 RET
              4ed8 0004  ld   $04         ;| RAM segment address (high byte first)
              4ed9 0000  ld   $00         ;|
              4eda 00ef  ld   $ef         ;| Length (1..256)
              4edb 00cd  ld   $cd         ;0400 DEF
              4edc 003e  ld   $3e
              4edd 0075  ld   $75         ;0402 PUSH
              4ede 0011  ld   $11         ;0403 LDWI
              4edf 0080  ld   $80
              4ee0 0020  ld   $20
              4ee1 002b  ld   $2b         ;0406 STW
              4ee2 0038  ld   $38         ;0406 'Pos'
              4ee3 0011  ld   $11         ;0408 LDWI
              4ee4 0003  ld   $03
              4ee5 000b  ld   $0b
              4ee6 002b  ld   $2b         ;040b STW
              4ee7 0022  ld   $22
              4ee8 0059  ld   $59         ;040d LDI
              4ee9 0000  ld   $00
              4eea 002b  ld   $2b         ;040f STW
              4eeb 0068  ld   $68         ;040f 'Width'
              4eec 0021  ld   $21         ;0411 LDW
              4eed 0068  ld   $68         ;0411 'Width'
              4eee 00e3  ld   $e3         ;0413 ADDI
              4eef 0001  ld   $01
              4ef0 002b  ld   $2b         ;0415 STW
              4ef1 0068  ld   $68         ;0415 'Width'
              4ef2 0059  ld   $59         ;0417 LDI
              4ef3 003f  ld   $3f
              4ef4 002b  ld   $2b         ;0419 STW
              4ef5 006a  ld   $6a         ;0419 'CurbColor'
              4ef6 0059  ld   $59         ;041b LDI
              4ef7 000c  ld   $0c
              4ef8 002b  ld   $2b         ;041d STW
              4ef9 006c  ld   $6c         ;041d 'GrassColor'
              4efa 00cf  ld   $cf         ;041f CALL
              4efb fe00  bra  ac          ;+-----------------------------------+
              4efc fcfd  bra  $4efd       ;|                                   |
              4efd 1418  ld   $18,y       ;| Trampoline for page $4e00 lookups |
              4efe e006  jmp  y,$06       ;|                                   |
              4eff c218  st   [$18]       ;+-----------------------------------+
              4f00 006e  ld   $6e         ;041f 'SetupSegment'
              4f01 0093  ld   $93         ;0421 INC
              4f02 0039  ld   $39         ;0421 'Pos'+1
              4f03 0059  ld   $59         ;0423 LDI
              4f04 0003  ld   $03
              4f05 002b  ld   $2b         ;0425 STW
              4f06 006a  ld   $6a         ;0425 'CurbColor'
              4f07 0059  ld   $59         ;0427 LDI
              4f08 0008  ld   $08
              4f09 002b  ld   $2b         ;0429 STW
              4f0a 006c  ld   $6c         ;0429 'GrassColor'
              4f0b 00cf  ld   $cf         ;042b CALL
              4f0c 006e  ld   $6e         ;042b 'SetupSegment'
              4f0d 0093  ld   $93         ;042d INC
              4f0e 0039  ld   $39         ;042d 'Pos'+1
              4f0f 0021  ld   $21         ;042f LDW
              4f10 0038  ld   $38         ;042f 'Pos'
              4f11 0035  ld   $35         ;0431 BCC
              4f12 0053  ld   $53         ;0432 GE
              4f13 000f  ld   $0f
              4f14 0011  ld   $11         ;0434 LDWI
              4f15 0000  ld   $00
              4f16 0074  ld   $74
              4f17 00f0  ld   $f0         ;0437 1008
              4f18 0018  ld   $18         ;0438 24
              4f19 0093  ld   $93         ;0439 INC
              4f1a 0019  ld   $19
              4f1b 0035  ld   $35         ;043b BCC
              4f1c 004d  ld   $4d         ;043c GT
              4f1d 0035  ld   $35
              4f1e 0063  ld   $63         ;043e POP
              4f1f 00ff  ld   $ff         ;043f RET
              4f20 002b  ld   $2b         ;0440 STW
              4f21 0070  ld   $70         ;0440 'SetupRoad'
              4f22 00cd  ld   $cd         ;0442 DEF
              4f23 0086  ld   $86
              4f24 0021  ld   $21         ;0444 LDW
              4f25 0068  ld   $68         ;0444 'Width'
              4f26 00e9  ld   $e9         ;0446 LSLW
              4f27 005e  ld   $5e         ;0447 ST
              4f28 0024  ld   $24
              4f29 0021  ld   $21         ;0449 LDW
              4f2a 0038  ld   $38         ;0449 'Pos'
              4f2b 00b8  ld   $b8         ;044b SUBW
              4f2c 0068  ld   $68         ;044b 'Width'
              4f2d 002b  ld   $2b         ;044d STW
              4f2e 0058  ld   $58         ;044d 'p'
              4f2f 002b  ld   $2b         ;044f STW
              4f30 0026  ld   $26
              4f31 0059  ld   $59         ;0451 LDI
              4f32 0015  ld   $15
              4f33 005e  ld   $5e         ;0453 ST
              4f34 0025  ld   $25
              4f35 00b4  ld   $b4         ;0455 SYS
              4f36 00f4  ld   $f4
              4f37 0059  ld   $59         ;0457 LDI
              4f38 0080  ld   $80
              4f39 00b8  ld   $b8         ;0459 SUBW
              4f3a 0068  ld   $68         ;0459 'Width'
              4f3b 00e9  ld   $e9         ;045b LSLW
              4f3c 005e  ld   $5e         ;045c ST
              4f3d 0024  ld   $24
              4f3e 0021  ld   $21         ;045e LDW
              4f3f 0038  ld   $38         ;045e 'Pos'
              4f40 0099  ld   $99         ;0460 ADDW
              4f41 0068  ld   $68         ;0460 'Width'
              4f42 002b  ld   $2b         ;0462 STW
              4f43 005a  ld   $5a         ;0462 'q'
              4f44 002b  ld   $2b         ;0464 STW
              4f45 0026  ld   $26
              4f46 0021  ld   $21         ;0466 LDW
              4f47 006c  ld   $6c         ;0466 'GrassColor'
              4f48 005e  ld   $5e         ;0468 ST
              4f49 0025  ld   $25
              4f4a 00b4  ld   $b4         ;046a SYS
              4f4b 00f4  ld   $f4
              4f4c 0021  ld   $21         ;046c LDW
              4f4d 0068  ld   $68         ;046c 'Width'
              4f4e 00e6  ld   $e6         ;046e SUBI
              4f4f 0008  ld   $08
              4f50 0035  ld   $35         ;0470 BCC
              4f51 0056  ld   $56         ;0471 LE
              4f52 0085  ld   $85
              4f53 002b  ld   $2b         ;0473 STW
              4f54 0052  ld   $52         ;0473 'tmp'
              4f55 0021  ld   $21         ;0475 LDW
              4f56 005a  ld   $5a         ;0475 'q'
              4f57 00e6  ld   $e6         ;0477 SUBI
              4f58 0001  ld   $01
              4f59 002b  ld   $2b         ;0479 STW
              4f5a 005a  ld   $5a         ;0479 'q'
              4f5b 0021  ld   $21         ;047b LDW
              4f5c 006a  ld   $6a         ;047b 'CurbColor'
              4f5d 00f0  ld   $f0         ;047d POKE
              4f5e 0058  ld   $58         ;047d 'p'
              4f5f 00f0  ld   $f0         ;047f POKE
              4f60 005a  ld   $5a         ;047f 'q'
              4f61 0093  ld   $93         ;0481 INC
              4f62 0058  ld   $58         ;0481 'p'
              4f63 0021  ld   $21         ;0483 LDW
              4f64 0052  ld   $52         ;0483 'tmp'
              4f65 0090  ld   $90         ;0485 BRA
              4f66 006c  ld   $6c
              4f67 00ff  ld   $ff         ;0487 RET
              4f68 002b  ld   $2b         ;0488 STW
              4f69 006e  ld   $6e         ;0488 'SetupSegment'
              4f6a 00cd  ld   $cd         ;048a DEF
              4f6b 00e8  ld   $e8
              4f6c 0075  ld   $75         ;048c PUSH
              4f6d 0011  ld   $11         ;048d LDWI
              4f6e 000f  ld   $0f
              4f6f 000e  ld   $0e
              4f70 002b  ld   $2b         ;0490 STW
              4f71 0072  ld   $72         ;0490 'Radix'
              4f72 00cf  ld   $cf         ;0492 CALL
              4f73 0074  ld   $74         ;0492 'ExtractDigit'
              4f74 0021  ld   $21         ;0494 LDW
              4f75 0076  ld   $76         ;0494 'Prev3'
              4f76 00fc  ld   $fc         ;0496 XORW
              4f77 0078  ld   $78         ;0496 'Char'
              4f78 0035  ld   $35         ;0498 BCC
              4f79 003f  ld   $3f         ;0499 EQ
              4f7a 00a1  ld   $a1
              4f7b 0021  ld   $21         ;049b LDW
              4f7c 0078  ld   $78         ;049b 'Char'
              4f7d 002b  ld   $2b         ;049d STW
              4f7e 0076  ld   $76         ;049d 'Prev3'
              4f7f 00cf  ld   $cf         ;049f CALL
              4f80 003a  ld   $3a         ;049f 'QPrintChar'
              4f81 0090  ld   $90         ;04a1 BRA
              4f82 00a3  ld   $a3
              4f83 0021  ld   $21         ;04a3 LDW
              4f84 0038  ld   $38         ;04a3 'Pos'
              4f85 00e3  ld   $e3         ;04a5 ADDI
              4f86 000c  ld   $0c
              4f87 002b  ld   $2b         ;04a7 STW
              4f88 0038  ld   $38         ;04a7 'Pos'
              4f89 0011  ld   $11         ;04a9 LDWI
              4f8a 0058  ld   $58
              4f8b 0002  ld   $02
              4f8c 002b  ld   $2b         ;04ac STW
              4f8d 0072  ld   $72         ;04ac 'Radix'
              4f8e 00cf  ld   $cf         ;04ae CALL
              4f8f 0074  ld   $74         ;04ae 'ExtractDigit'
              4f90 0021  ld   $21         ;04b0 LDW
              4f91 007a  ld   $7a         ;04b0 'Prev2'
              4f92 00fc  ld   $fc         ;04b2 XORW
              4f93 0078  ld   $78         ;04b2 'Char'
              4f94 0035  ld   $35         ;04b4 BCC
              4f95 003f  ld   $3f         ;04b5 EQ
              4f96 00bd  ld   $bd
              4f97 0021  ld   $21         ;04b7 LDW
              4f98 0078  ld   $78         ;04b7 'Char'
              4f99 002b  ld   $2b         ;04b9 STW
              4f9a 007a  ld   $7a         ;04b9 'Prev2'
              4f9b 00cf  ld   $cf         ;04bb CALL
              4f9c 003a  ld   $3a         ;04bb 'QPrintChar'
              4f9d 0090  ld   $90         ;04bd BRA
              4f9e 00bf  ld   $bf
              4f9f 0021  ld   $21         ;04bf LDW
              4fa0 0038  ld   $38         ;04bf 'Pos'
              4fa1 00e3  ld   $e3         ;04c1 ADDI
              4fa2 0006  ld   $06
              4fa3 002b  ld   $2b         ;04c3 STW
              4fa4 0038  ld   $38         ;04c3 'Pos'
              4fa5 0059  ld   $59         ;04c5 LDI
              4fa6 003c  ld   $3c
              4fa7 002b  ld   $2b         ;04c7 STW
              4fa8 0072  ld   $72         ;04c7 'Radix'
              4fa9 00cf  ld   $cf         ;04c9 CALL
              4faa 0074  ld   $74         ;04c9 'ExtractDigit'
              4fab 0021  ld   $21         ;04cb LDW
              4fac 007c  ld   $7c         ;04cb 'Prev1'
              4fad 00fc  ld   $fc         ;04cd XORW
              4fae 0078  ld   $78         ;04cd 'Char'
              4faf 0035  ld   $35         ;04cf BCC
              4fb0 003f  ld   $3f         ;04d0 EQ
              4fb1 00d8  ld   $d8
              4fb2 0021  ld   $21         ;04d2 LDW
              4fb3 0078  ld   $78         ;04d2 'Char'
              4fb4 002b  ld   $2b         ;04d4 STW
              4fb5 007c  ld   $7c         ;04d4 'Prev1'
              4fb6 00cf  ld   $cf         ;04d6 CALL
              4fb7 003a  ld   $3a         ;04d6 'QPrintChar'
              4fb8 0090  ld   $90         ;04d8 BRA
              4fb9 00da  ld   $da
              4fba 0021  ld   $21         ;04da LDW
              4fbb 0038  ld   $38         ;04da 'Pos'
              4fbc 00e3  ld   $e3         ;04dc ADDI
              4fbd 000c  ld   $0c
              4fbe 002b  ld   $2b         ;04de STW
              4fbf 0038  ld   $38         ;04de 'Pos'
              4fc0 0059  ld   $59         ;04e0 LDI
              4fc1 0006  ld   $06
              4fc2 002b  ld   $2b         ;04e2 STW
              4fc3 0072  ld   $72         ;04e2 'Radix'
              4fc4 00cf  ld   $cf         ;04e4 CALL
              4fc5 0074  ld   $74         ;04e4 'ExtractDigit'
              4fc6 00cf  ld   $cf         ;04e6 CALL
              4fc7 003a  ld   $3a         ;04e6 'QPrintChar'
              4fc8 0063  ld   $63         ;04e8 POP
              4fc9 00ff  ld   $ff         ;04e9 RET
              4fca 002b  ld   $2b         ;04ea STW
              4fcb 007e  ld   $7e         ;04ea 'PrintTime'
              4fcc 0093  ld   $93         ;04ec INC
              4fcd 001b  ld   $1b         ;04ec '_vLR'+1
              4fce 00ff  ld   $ff         ;04ee RET
              4fcf 0005  ld   $05         ;| RAM segment address (high byte first)
              4fd0 0000  ld   $00         ;|
              4fd1 00e6  ld   $e6         ;| Length (1..256)
              4fd2 00cd  ld   $cd         ;0500 DEF
              4fd3 0017  ld   $17
              4fd4 0059  ld   $59         ;0502 LDI
              4fd5 0030  ld   $30
              4fd6 002b  ld   $2b         ;0504 STW
              4fd7 0078  ld   $78         ;0504 'Char'
              4fd8 0021  ld   $21         ;0506 LDW
              4fd9 0081  ld   $81         ;0506 'Value'
              4fda 00b8  ld   $b8         ;0508 SUBW
              4fdb 0072  ld   $72         ;0508 'Radix'
              4fdc 0035  ld   $35         ;050a BCC
              4fdd 0050  ld   $50         ;050b LT
              4fde 0014  ld   $14
              4fdf 002b  ld   $2b         ;050d STW
              4fe0 0081  ld   $81         ;050d 'Value'
              4fe1 0093  ld   $93         ;050f INC
              4fe2 0078  ld   $78         ;050f 'Char'
              4fe3 00b8  ld   $b8         ;0511 SUBW
              4fe4 0072  ld   $72         ;0511 'Radix'
              4fe5 0035  ld   $35         ;0513 BCC
              4fe6 0053  ld   $53         ;0514 GE
              4fe7 000b  ld   $0b
              4fe8 0021  ld   $21         ;0516 LDW
              4fe9 0078  ld   $78         ;0516 'Char'
              4fea 00ff  ld   $ff         ;0518 RET
              4feb 002b  ld   $2b         ;0519 STW
              4fec 0074  ld   $74         ;0519 'ExtractDigit'
              4fed 00cd  ld   $cd         ;051b DEF
              4fee 0032  ld   $32
              4fef 0075  ld   $75         ;051d PUSH
              4ff0 002b  ld   $2b         ;051e STW
              4ff1 0083  ld   $83         ;051e 'Text'
              4ff2 0021  ld   $21         ;0520 LDW
              4ff3 0083  ld   $83         ;0520 'Text'
              4ff4 00ad  ld   $ad         ;0522 PEEK
              4ff5 002b  ld   $2b         ;0523 STW
              4ff6 0078  ld   $78         ;0523 'Char'
              4ff7 0035  ld   $35         ;0525 BCC
              4ff8 003f  ld   $3f         ;0526 EQ
              4ff9 0030  ld   $30
              4ffa 0093  ld   $93         ;0528 INC
              4ffb fe00  bra  ac          ;+-----------------------------------+
              4ffc fcfd  bra  $4ffd       ;|                                   |
              4ffd 1418  ld   $18,y       ;| Trampoline for page $4f00 lookups |
              4ffe e006  jmp  y,$06       ;|                                   |
              4fff c218  st   [$18]       ;+-----------------------------------+
              5000 0083  ld   $83         ;0528 'Text'
              5001 00cf  ld   $cf         ;052a CALL
              5002 003a  ld   $3a         ;052a 'QPrintChar'
              5003 00e3  ld   $e3         ;052c ADDI
              5004 0006  ld   $06
              5005 002b  ld   $2b         ;052e STW
              5006 0038  ld   $38         ;052e 'Pos'
              5007 0090  ld   $90         ;0530 BRA
              5008 001e  ld   $1e
              5009 0063  ld   $63         ;0532 POP
              500a 00ff  ld   $ff         ;0533 RET
              500b 002b  ld   $2b         ;0534 STW
              500c 0085  ld   $85         ;0534 'PrintText'
              500d 00cd  ld   $cd         ;0536 DEF
              500e 00df  ld   $df
              500f 0011  ld   $11         ;0538 LDWI
              5010 00d0  ld   $d0
              5011 0074  ld   $74
              5012 002b  ld   $2b         ;053b STW
              5013 0058  ld   $58         ;053b 'p'
              5014 0059  ld   $59         ;053d LDI
              5015 0000  ld   $00
              5016 002b  ld   $2b         ;053f STW
              5017 0060  ld   $60         ;053f 'X'
              5018 0021  ld   $21         ;0541 LDW
              5019 0087  ld   $87         ;0541 'DX0'
              501a 002b  ld   $2b         ;0543 STW
              501b 0089  ld   $89         ;0543 'DX'
              501c 0021  ld   $21         ;0545 LDW
              501d 008b  ld   $8b         ;0545 'NextTurn'
              501e 00b8  ld   $b8         ;0547 SUBW
              501f 008d  ld   $8d         ;0547 'Distance'
              5020 002b  ld   $2b         ;0549 STW
              5021 0052  ld   $52         ;0549 'tmp'
              5022 0099  ld   $99         ;054b ADDW
              5023 0052  ld   $52         ;054b 'tmp'
              5024 002b  ld   $2b         ;054d STW
              5025 0052  ld   $52         ;054d 'tmp'
              5026 0011  ld   $11         ;054f LDWI
              5027 0000  ld   $00
              5028 000a  ld   $0a
              5029 0099  ld   $99         ;0552 ADDW
              502a 0052  ld   $52         ;0552 'tmp'
              502b 007f  ld   $7f         ;0554 LUP
              502c 0035  ld   $35
              502d 002b  ld   $2b         ;0556 STW
              502e 0052  ld   $52         ;0556 'tmp'
              502f 0059  ld   $59         ;0558 LDI
              5030 00c5  ld   $c5
              5031 0099  ld   $99         ;055a ADDW
              5032 0052  ld   $52         ;055a 'tmp'
              5033 002b  ld   $2b         ;055c STW
              5034 0030  ld   $30         ;055c 'i'
              5035 001a  ld   $1a         ;055e LD
              5036 0061  ld   $61         ;055e 'X'+1
              5037 00f0  ld   $f0         ;0560 POKE
              5038 0058  ld   $58         ;0560 'p'
              5039 0093  ld   $93         ;0562 INC
              503a 0058  ld   $58         ;0562 'p'
              503b 0021  ld   $21         ;0564 LDW
              503c 0089  ld   $89         ;0564 'DX'
              503d 0099  ld   $99         ;0566 ADDW
              503e 008f  ld   $8f         ;0566 'DDX'
              503f 002b  ld   $2b         ;0568 STW
              5040 0089  ld   $89         ;0568 'DX'
              5041 0099  ld   $99         ;056a ADDW
              5042 0060  ld   $60         ;056a 'X'
              5043 002b  ld   $2b         ;056c STW
              5044 0060  ld   $60         ;056c 'X'
              5045 0093  ld   $93         ;056e INC
              5046 0030  ld   $30         ;056e 'i'
              5047 0021  ld   $21         ;0570 LDW
              5048 0030  ld   $30         ;0570 'i'
              5049 0035  ld   $35         ;0572 BCC
              504a 0072  ld   $72         ;0573 NE
              504b 005c  ld   $5c
              504c 001a  ld   $1a         ;0575 LD
              504d 0061  ld   $61         ;0575 'X'+1
              504e 00f0  ld   $f0         ;0577 POKE
              504f 0058  ld   $58         ;0577 'p'
              5050 0093  ld   $93         ;0579 INC
              5051 0058  ld   $58         ;0579 'p'
              5052 0021  ld   $21         ;057b LDW
              5053 0089  ld   $89         ;057b 'DX'
              5054 0099  ld   $99         ;057d ADDW
              5055 0091  ld   $91         ;057d 'NextDDX'
              5056 002b  ld   $2b         ;057f STW
              5057 0089  ld   $89         ;057f 'DX'
              5058 0099  ld   $99         ;0581 ADDW
              5059 0060  ld   $60         ;0581 'X'
              505a 002b  ld   $2b         ;0583 STW
              505b 0060  ld   $60         ;0583 'X'
              505c 001a  ld   $1a         ;0585 LD
              505d 0058  ld   $58         ;0585 'p'
              505e 0035  ld   $35         ;0587 BCC
              505f 0072  ld   $72         ;0588 NE
              5060 0073  ld   $73
              5061 0011  ld   $11         ;058a LDWI
              5062 00ed  ld   $ed
              5063 0001  ld   $01
              5064 002b  ld   $2b         ;058d STW
              5065 0024  ld   $24
              5066 0011  ld   $11         ;058f LDWI
              5067 00d1  ld   $d1
              5068 0074  ld   $74
              5069 002b  ld   $2b         ;0592 STW
              506a 0026  ld   $26
              506b 00e6  ld   $e6         ;0594 SUBI
              506c 0001  ld   $01
              506d 00ad  ld   $ad         ;0596 PEEK
              506e 002b  ld   $2b         ;0597 STW
              506f 0028  ld   $28
              5070 001a  ld   $1a         ;0599 LD
              5071 0047  ld   $47         ;0599 'HorizonX'+1
              5072 002b  ld   $2b         ;059b STW
              5073 0052  ld   $52         ;059b 'tmp'
              5074 0011  ld   $11         ;059d LDWI
              5075 00d5  ld   $d5
              5076 0074  ld   $74
              5077 00ad  ld   $ad         ;05a0 PEEK
              5078 00e3  ld   $e3         ;05a1 ADDI
              5079 0030  ld   $30
              507a 00b8  ld   $b8         ;05a3 SUBW
              507b 0052  ld   $52         ;05a3 'tmp'
              507c 002b  ld   $2b         ;05a5 STW
              507d 0052  ld   $52         ;05a5 'tmp'
              507e 0011  ld   $11         ;05a7 LDWI
              507f 00d4  ld   $d4
              5080 0074  ld   $74
              5081 00ad  ld   $ad         ;05aa PEEK
              5082 002b  ld   $2b         ;05ab STW
              5083 0087  ld   $87         ;05ab 'DX0'
              5084 0011  ld   $11         ;05ad LDWI
              5085 00ec  ld   $ec
              5086 0074  ld   $74
              5087 00ad  ld   $ad         ;05b0 PEEK
              5088 00b8  ld   $b8         ;05b1 SUBW
              5089 0087  ld   $87         ;05b1 'DX0'
              508a 0082  ld   $82         ;05b3 ANDI
              508b 00ff  ld   $ff
              508c 008c  ld   $8c         ;05b5 XORI
              508d 0080  ld   $80
              508e 00e6  ld   $e6         ;05b7 SUBI
              508f 0080  ld   $80
              5090 002b  ld   $2b         ;05b9 STW
              5091 0087  ld   $87         ;05b9 'DX0'
              5092 0011  ld   $11         ;05bb LDWI
              5093 0011  ld   $11
              5094 0001  ld   $01
              5095 002b  ld   $2b         ;05be STW
              5096 005e  ld   $5e         ;05be 's'
              5097 001a  ld   $1a         ;05c0 LD
              5098 0009  ld   $09
              5099 0082  ld   $82         ;05c2 ANDI
              509a 0001  ld   $01
              509b 0035  ld   $35         ;05c4 BCC
              509c 003f  ld   $3f         ;05c5 EQ
              509d 00be  ld   $be
              509e 001a  ld   $1a         ;05c7 LD
              509f 0047  ld   $47         ;05c7 'HorizonX'+1
              50a0 00f0  ld   $f0         ;05c9 POKE
              50a1 005e  ld   $5e         ;05c9 's'
              50a2 0011  ld   $11         ;05cb LDWI
              50a3 0067  ld   $67
              50a4 0040  ld   $40
              50a5 002b  ld   $2b         ;05ce STW
              50a6 0022  ld   $22
              50a7 00b4  ld   $b4         ;05d0 SYS
              50a8 00fb  ld   $fb
              50a9 0021  ld   $21         ;05d2 LDW
              50aa 0024  ld   $24
              50ab 002b  ld   $2b         ;05d4 STW
              50ac 005e  ld   $5e         ;05d4 's'
              50ad 0021  ld   $21         ;05d6 LDW
              50ae 0028  ld   $28
              50af 002b  ld   $2b         ;05d8 STW
              50b0 0060  ld   $60         ;05d8 'X'
              50b1 0021  ld   $21         ;05da LDW
              50b2 0052  ld   $52         ;05da 'tmp'
              50b3 00b8  ld   $b8         ;05dc SUBW
              50b4 0060  ld   $60         ;05dc 'X'
              50b5 00f0  ld   $f0         ;05de POKE
              50b6 005e  ld   $5e         ;05de 's'
              50b7 00ff  ld   $ff         ;05e0 RET
              50b8 002b  ld   $2b         ;05e1 STW
              50b9 0093  ld   $93         ;05e1 'DrawRoad'
              50ba 0093  ld   $93         ;05e3 INC
              50bb 001b  ld   $1b         ;05e3 '_vLR'+1
              50bc 00ff  ld   $ff         ;05e5 RET
              50bd 0006  ld   $06         ;| RAM segment address (high byte first)
              50be 0000  ld   $00         ;|
              50bf 00df  ld   $df         ;| Length (1..256)
              50c0 00cd  ld   $cd         ;0600 DEF
              50c1 00a7  ld   $a7
              50c2 0075  ld   $75         ;0602 PUSH
              50c3 0059  ld   $59         ;0603 LDI
              50c4 0000  ld   $00
              50c5 002b  ld   $2b         ;0605 STW
              50c6 0062  ld   $62         ;0605 'Collision'
              50c7 002b  ld   $2b         ;0607 STW
              50c8 0076  ld   $76         ;0607 'Prev3'
              50c9 002b  ld   $2b         ;0609 STW
              50ca 007a  ld   $7a         ;0609 'Prev2'
              50cb 002b  ld   $2b         ;060b STW
              50cc 007c  ld   $7c         ;060b 'Prev1'
              50cd 00cf  ld   $cf         ;060d CALL
              50ce 0095  ld   $95         ;060d 'AdvanceCar'
              50cf 0021  ld   $21         ;060f LDW
              50d0 008d  ld   $8d         ;060f 'Distance'
              50d1 0035  ld   $35         ;0611 BCC
              50d2 0053  ld   $53         ;0612 GE
              50d3 002e  ld   $2e
              50d4 0021  ld   $21         ;0614 LDW
              50d5 003e  ld   $3e         ;0614 'Time'
              50d6 00b8  ld   $b8         ;0616 SUBW
              50d7 0097  ld   $97         ;0616 'BestTime'
              50d8 0035  ld   $35         ;0618 BCC
              50d9 0053  ld   $53         ;0619 GE
              50da 001d  ld   $1d
              50db 0021  ld   $21         ;061b LDW
              50dc 003e  ld   $3e         ;061b 'Time'
              50dd 002b  ld   $2b         ;061d STW
              50de 0097  ld   $97         ;061d 'BestTime'
              50df 0059  ld   $59         ;061f LDI
              50e0 000f  ld   $0f
              50e1 00cf  ld   $cf         ;0621 CALL
              50e2 0099  ld   $99         ;0621 'PrintBestTime'
              50e3 0059  ld   $59         ;0623 LDI
              50e4 0000  ld   $00
              50e5 002b  ld   $2b         ;0625 STW
              50e6 003e  ld   $3e         ;0625 'Time'
              50e7 002b  ld   $2b         ;0627 STW
              50e8 009b  ld   $9b         ;0627 'Random'
              50e9 0011  ld   $11         ;0629 LDWI
              50ea 0000  ld   $00
              50eb 0074  ld   $74
              50ec 002b  ld   $2b         ;062c STW
              50ed 008d  ld   $8d         ;062c 'Distance'
              50ee 002b  ld   $2b         ;062e STW
              50ef 008b  ld   $8b         ;062e 'NextTurn'
              50f0 00b8  ld   $b8         ;0630 SUBW
              50f1 008b  ld   $8b         ;0630 'NextTurn'
              50f2 0035  ld   $35         ;0632 BCC
              50f3 0056  ld   $56         ;0633 LE
              50f4 0073  ld   $73
              50f5 0021  ld   $21         ;0635 LDW
              50f6 009b  ld   $9b         ;0635 'Random'
              50f7 0099  ld   $99         ;0637 ADDW
              50f8 008b  ld   $8b         ;0637 'NextTurn'
              50f9 008c  ld   $8c         ;0639 XORI
              50fa 006d  ld   $6d
              50fb fe00  bra  ac          ;+-----------------------------------+
              50fc fcfd  bra  $50fd       ;|                                   |
              50fd 1418  ld   $18,y       ;| Trampoline for page $5000 lookups |
              50fe e006  jmp  y,$06       ;|                                   |
              50ff c218  st   [$18]       ;+-----------------------------------+
              5100 002b  ld   $2b         ;063b STW
              5101 009b  ld   $9b         ;063b 'Random'
              5102 0082  ld   $82         ;063d ANDI
              5103 001f  ld   $1f
              5104 00e3  ld   $e3         ;063f ADDI
              5105 0028  ld   $28
              5106 0099  ld   $99         ;0641 ADDW
              5107 008b  ld   $8b         ;0641 'NextTurn'
              5108 002b  ld   $2b         ;0643 STW
              5109 008b  ld   $8b         ;0643 'NextTurn'
              510a 001a  ld   $1a         ;0645 LD
              510b 009c  ld   $9c         ;0645 'Random'+1
              510c 0082  ld   $82         ;0647 ANDI
              510d 0003  ld   $03
              510e 00e3  ld   $e3         ;0649 ADDI
              510f 0001  ld   $01
              5110 002b  ld   $2b         ;064b STW
              5111 0030  ld   $30         ;064b 'i'
              5112 0099  ld   $99         ;064d ADDW
              5113 0030  ld   $30         ;064d 'i'
              5114 0099  ld   $99         ;064f ADDW
              5115 0030  ld   $30         ;064f 'i'
              5116 00e9  ld   $e9         ;0651 LSLW
              5117 002b  ld   $2b         ;0652 STW
              5118 0030  ld   $30         ;0652 'i'
              5119 0021  ld   $21         ;0654 LDW
              511a 0091  ld   $91         ;0654 'NextDDX'
              511b 002b  ld   $2b         ;0656 STW
              511c 008f  ld   $8f         ;0656 'DDX'
              511d 0035  ld   $35         ;0658 BCC
              511e 0053  ld   $53         ;0659 GE
              511f 005d  ld   $5d
              5120 0099  ld   $99         ;065b ADDW
              5121 0030  ld   $30         ;065b 'i'
              5122 0090  ld   $90         ;065d BRA
              5123 0071  ld   $71
              5124 0035  ld   $35         ;065f BCC
              5125 0056  ld   $56         ;0660 LE
              5126 0064  ld   $64
              5127 00b8  ld   $b8         ;0662 SUBW
              5128 0030  ld   $30         ;0662 'i'
              5129 0090  ld   $90         ;0664 BRA
              512a 0071  ld   $71
              512b 0021  ld   $21         ;0666 LDW
              512c 009b  ld   $9b         ;0666 'Random'
              512d 0035  ld   $35         ;0668 BCC
              512e 0050  ld   $50         ;0669 LT
              512f 006d  ld   $6d
              5130 0021  ld   $21         ;066b LDW
              5131 0030  ld   $30         ;066b 'i'
              5132 0090  ld   $90         ;066d BRA
              5133 0071  ld   $71
              5134 0059  ld   $59         ;066f LDI
              5135 0000  ld   $00
              5136 00b8  ld   $b8         ;0671 SUBW
              5137 0030  ld   $30         ;0671 'i'
              5138 002b  ld   $2b         ;0673 STW
              5139 0091  ld   $91         ;0673 'NextDDX'
              513a 00cf  ld   $cf         ;0675 CALL
              513b 0093  ld   $93         ;0675 'DrawRoad'
              513c 0021  ld   $21         ;0677 LDW
              513d 008f  ld   $8f         ;0677 'DDX'
              513e 00e9  ld   $e9         ;0679 LSLW
              513f 00e9  ld   $e9         ;067a LSLW
              5140 00e9  ld   $e9         ;067b LSLW
              5141 002b  ld   $2b         ;067c STW
              5142 0048  ld   $48         ;067c 'HorizonDX'
              5143 00e9  ld   $e9         ;067e LSLW
              5144 002b  ld   $2b         ;067f STW
              5145 0044  ld   $44         ;067f 'DriftX'
              5146 00cf  ld   $cf         ;0681 CALL
              5147 004c  ld   $4c         ;0681 'ControlRaceCar'
              5148 00cf  ld   $cf         ;0683 CALL
              5149 0066  ld   $66         ;0683 'PlayEngineSound'
              514a 00cf  ld   $cf         ;0685 CALL
              514b 009d  ld   $9d         ;0685 'DrawRaceCar'
              514c 00cf  ld   $cf         ;0687 CALL
              514d 009f  ld   $9f         ;0687 'DrawGrass'
              514e 0011  ld   $11         ;0689 LDWI
              514f 00b5  ld   $b5
              5150 00b9  ld   $b9
              5151 0099  ld   $99         ;068c ADDW
              5152 003e  ld   $3e         ;068c 'Time'
              5153 0035  ld   $35         ;068e BCC
              5154 0056  ld   $56         ;068f LE
              5155 0091  ld   $91
              5156 002b  ld   $2b         ;0691 STW
              5157 0062  ld   $62         ;0691 'Collision'
              5158 0021  ld   $21         ;0693 LDW
              5159 003e  ld   $3e         ;0693 'Time'
              515a 002b  ld   $2b         ;0695 STW
              515b 0081  ld   $81         ;0695 'Value'
              515c 0011  ld   $11         ;0697 LDWI
              515d 0001  ld   $01
              515e 0008  ld   $08
              515f 002b  ld   $2b         ;069a STW
              5160 0038  ld   $38         ;069a 'Pos'
              5161 0059  ld   $59         ;069c LDI
              5162 003f  ld   $3f
              5163 002b  ld   $2b         ;069e STW
              5164 0036  ld   $36         ;069e 'Color'
              5165 00cf  ld   $cf         ;06a0 CALL
              5166 007e  ld   $7e         ;06a0 'PrintTime'
              5167 0021  ld   $21         ;06a2 LDW
              5168 0062  ld   $62         ;06a2 'Collision'
              5169 0035  ld   $35         ;06a4 BCC
              516a 003f  ld   $3f         ;06a5 EQ
              516b 000b  ld   $0b
              516c 0063  ld   $63         ;06a7 POP
              516d 00ff  ld   $ff         ;06a8 RET
              516e 002b  ld   $2b         ;06a9 STW
              516f 00a1  ld   $a1         ;06a9 'PlayGame'
              5170 00cd  ld   $cd         ;06ab DEF
              5171 00b7  ld   $b7
              5172 0002  ld   $02         ;06ad 2
              5173 0040  ld   $40         ;06ae 64
              5174 0040  ld   $40         ;06af 64
              5175 0040  ld   $40         ;06b0 64
              5176 0028  ld   $28         ;06b1 40
              5177 003c  ld   $3c         ;06b2 60
              5178 003c  ld   $3c         ;06b3 60
              5179 0028  ld   $28         ;06b4 40
              517a 0040  ld   $40         ;06b5 64
              517b 0040  ld   $40         ;06b6 64
              517c 0040  ld   $40         ;06b7 64
              517d 0000  ld   $00         ;06b8 0
              517e 002b  ld   $2b         ;06b9 STW
              517f 00a3  ld   $a3         ;06b9 'Car0'
              5180 00cd  ld   $cd         ;06bb DEF
              5181 00c5  ld   $c5
              5182 0003  ld   $03         ;06bd 3
              5183 0028  ld   $28         ;06be 40
              5184 0014  ld   $14         ;06bf 20
              5185 0014  ld   $14         ;06c0 20
              5186 003f  ld   $3f         ;06c1 63
              5187 003f  ld   $3f         ;06c2 63
              5188 0014  ld   $14         ;06c3 20
              5189 0014  ld   $14         ;06c4 20
              518a 0028  ld   $28         ;06c5 40
              518b 0000  ld   $00         ;06c6 0
              518c 002b  ld   $2b         ;06c7 STW
              518d 00a5  ld   $a5         ;06c7 'Car1'
              518e 00cd  ld   $cd         ;06c9 DEF
              518f 00d5  ld   $d5
              5190 0002  ld   $02         ;06cb 2
              5191 0028  ld   $28         ;06cc 40
              5192 0014  ld   $14         ;06cd 20
              5193 0014  ld   $14         ;06ce 20
              5194 0014  ld   $14         ;06cf 20
              5195 0028  ld   $28         ;06d0 40
              5196 0028  ld   $28         ;06d1 40
              5197 0014  ld   $14         ;06d2 20
              5198 0014  ld   $14         ;06d3 20
              5199 0014  ld   $14         ;06d4 20
              519a 0028  ld   $28         ;06d5 40
              519b 0000  ld   $00         ;06d6 0
              519c 002b  ld   $2b         ;06d7 STW
              519d 00a7  ld   $a7         ;06d7 'Car2'
              519e 0011  ld   $11         ;06d9 LDWI
              519f 00a0  ld   $a0
              51a0 0008  ld   $08
              51a1 002b  ld   $2b         ;06dc STW
              51a2 001a  ld   $1a
              51a3 00ff  ld   $ff         ;06de RET
              51a4 0008  ld   $08         ;| RAM segment address (high byte first)
              51a5 00a0  ld   $a0         ;|
              51a6 0052  ld   $52         ;| Length (1..256)
              51a7 00cd  ld   $cd         ;08a0 DEF
              51a8 00b0  ld   $b0
              51a9 0000  ld   $00         ;08a2 0
              51aa 0040  ld   $40         ;08a3 64
              51ab 0040  ld   $40         ;08a4 64
              51ac 0040  ld   $40         ;08a5 64
              51ad 0040  ld   $40         ;08a6 64
              51ae 0028  ld   $28         ;08a7 40
              51af 0014  ld   $14         ;08a8 20
              51b0 0014  ld   $14         ;08a9 20
              51b1 0014  ld   $14         ;08aa 20
              51b2 0014  ld   $14         ;08ab 20
              51b3 0028  ld   $28         ;08ac 40
              51b4 0040  ld   $40         ;08ad 64
              51b5 0040  ld   $40         ;08ae 64
              51b6 0040  ld   $40         ;08af 64
              51b7 0040  ld   $40         ;08b0 64
              51b8 0000  ld   $00         ;08b1 0
              51b9 002b  ld   $2b         ;08b2 STW
              51ba 00a9  ld   $a9         ;08b2 'Car3'
              51bb 00cd  ld   $cd         ;08b4 DEF
              51bc 00c4  ld   $c4
              51bd 0000  ld   $00         ;08b6 0
              51be 0040  ld   $40         ;08b7 64
              51bf 0040  ld   $40         ;08b8 64
              51c0 0040  ld   $40         ;08b9 64
              51c1 0040  ld   $40         ;08ba 64
              51c2 0015  ld   $15         ;08bb 21
              51c3 0015  ld   $15         ;08bc 21
              51c4 0015  ld   $15         ;08bd 21
              51c5 0015  ld   $15         ;08be 21
              51c6 0015  ld   $15         ;08bf 21
              51c7 0015  ld   $15         ;08c0 21
              51c8 0040  ld   $40         ;08c1 64
              51c9 0040  ld   $40         ;08c2 64
              51ca 0040  ld   $40         ;08c3 64
              51cb 0040  ld   $40         ;08c4 64
              51cc 0000  ld   $00         ;08c5 0
              51cd 002b  ld   $2b         ;08c6 STW
              51ce 00ab  ld   $ab         ;08c6 'Car4'
              51cf 00cd  ld   $cd         ;08c8 DEF
              51d0 00eb  ld   $eb
              51d1 0011  ld   $11         ;08ca LDWI
              51d2 002e  ld   $2e
              51d3 0001  ld   $01
              51d4 002b  ld   $2b         ;08cd STW
              51d5 0024  ld   $24
              51d6 0059  ld   $59         ;08cf LDI
              51d7 0020  ld   $20
              51d8 005e  ld   $5e         ;08d1 ST
              51d9 0026  ld   $26
              51da 0011  ld   $11         ;08d3 LDWI
              51db 0000  ld   $00
              51dc 000a  ld   $0a
              51dd 002b  ld   $2b         ;08d6 STW
              51de 005a  ld   $5a         ;08d6 'q'
              51df 0011  ld   $11         ;08d8 LDWI
              51e0 0080  ld   $80
              51e1 0040  ld   $40
              51e2 002b  ld   $2b         ;08db STW
              51e3 0022  ld   $22
              51e4 0021  ld   $21         ;08dd LDW
              51e5 005a  ld   $5a         ;08dd 'q'
              51e6 007f  ld   $7f         ;08df LUP
              51e7 0008  ld   $08
              51e8 0099  ld   $99         ;08e1 ADDW
              51e9 008d  ld   $8d         ;08e1 'Distance'
              51ea 005e  ld   $5e         ;08e3 ST
              51eb 0027  ld   $27
              51ec 00b4  ld   $b4         ;08e5 SYS
              51ed 00fb  ld   $fb
              51ee 0093  ld   $93         ;08e7 INC
              51ef 005a  ld   $5a         ;08e7 'q'
              51f0 0035  ld   $35         ;08e9 BCC
              51f1 0072  ld   $72         ;08ea NE
              51f2 00db  ld   $db
              51f3 00ff  ld   $ff         ;08ec RET
              51f4 002b  ld   $2b         ;08ed STW
              51f5 009f  ld   $9f         ;08ed 'DrawGrass'
              51f6 0093  ld   $93         ;08ef INC
              51f7 001b  ld   $1b         ;08ef '_vLR'+1
              51f8 00ff  ld   $ff         ;08f1 RET
              51f9 0009  ld   $09         ;| RAM segment address (high byte first)
              51fa 00a0  ld   $a0         ;|
              51fb fe00  bra  ac          ;+-----------------------------------+
              51fc fcfd  bra  $51fd       ;|                                   |
              51fd 1418  ld   $18,y       ;| Trampoline for page $5100 lookups |
              51fe e006  jmp  y,$06       ;|                                   |
              51ff c218  st   [$18]       ;+-----------------------------------+
              5200 0038  ld   $38         ;| Length (1..256)
              5201 00cd  ld   $cd         ;09a0 DEF
              5202 00b8  ld   $b8
              5203 0011  ld   $11         ;09a2 LDWI
              5204 00f7  ld   $f7
              5205 000b  ld   $0b
              5206 002b  ld   $2b         ;09a5 STW
              5207 00ad  ld   $ad         ;09a5 'Indicator'
              5208 0011  ld   $11         ;09a7 LDWI
              5209 006b  ld   $6b
              520a 000c  ld   $0c
              520b 002b  ld   $2b         ;09aa STW
              520c 00af  ld   $af         ;09aa 'Tracking'
              520d 0059  ld   $59         ;09ac LDI
              520e 0000  ld   $00
              520f 00f0  ld   $f0         ;09ae POKE
              5210 00af  ld   $af         ;09ae 'Tracking'
              5211 0093  ld   $93         ;09b0 INC
              5212 00af  ld   $af         ;09b0 'Tracking'
              5213 001a  ld   $1a         ;09b2 LD
              5214 00af  ld   $af         ;09b2 'Tracking'
              5215 008c  ld   $8c         ;09b4 XORI
              5216 0076  ld   $76
              5217 0035  ld   $35         ;09b6 BCC
              5218 0072  ld   $72         ;09b7 NE
              5219 00aa  ld   $aa
              521a 00ff  ld   $ff         ;09b9 RET
              521b 002b  ld   $2b         ;09ba STW
              521c 00b1  ld   $b1         ;09ba 'SetupIndicator'
              521d 00cd  ld   $cd         ;09bc DEF
              521e 00d1  ld   $d1
              521f 0059  ld   $59         ;09be LDI
              5220 0000  ld   $00
              5221 00f0  ld   $f0         ;09c0 POKE
              5222 00af  ld   $af         ;09c0 'Tracking'
              5223 001a  ld   $1a         ;09c2 LD
              5224 008e  ld   $8e         ;09c2 'Distance'+1
              5225 0099  ld   $99         ;09c4 ADDW
              5226 00ad  ld   $ad         ;09c4 'Indicator'
              5227 002b  ld   $2b         ;09c6 STW
              5228 00af  ld   $af         ;09c6 'Tracking'
              5229 0059  ld   $59         ;09c8 LDI
              522a 003c  ld   $3c
              522b 00f0  ld   $f0         ;09ca POKE
              522c 00af  ld   $af         ;09ca 'Tracking'
              522d 001a  ld   $1a         ;09cc LD
              522e 0041  ld   $41         ;09cc 'Speed'+1
              522f 0099  ld   $99         ;09ce ADDW
              5230 008d  ld   $8d         ;09ce 'Distance'
              5231 002b  ld   $2b         ;09d0 STW
              5232 008d  ld   $8d         ;09d0 'Distance'
              5233 00ff  ld   $ff         ;09d2 RET
              5234 002b  ld   $2b         ;09d3 STW
              5235 0095  ld   $95         ;09d3 'AdvanceCar'
              5236 0093  ld   $93         ;09d5 INC
              5237 001b  ld   $1b         ;09d5 '_vLR'+1
              5238 00ff  ld   $ff         ;09d7 RET
              5239 000a  ld   $0a         ;| RAM segment address (high byte first)
              523a 00a0  ld   $a0         ;|
              523b 0041  ld   $41         ;| Length (1..256)
              523c 00cd  ld   $cd         ;0aa0 DEF
              523d 00da  ld   $da
              523e 0075  ld   $75         ;0aa2 PUSH
              523f 0011  ld   $11         ;0aa3 LDWI
              5240 00d9  ld   $d9
              5241 0001  ld   $01
              5242 00ad  ld   $ad         ;0aa6 PEEK
              5243 008c  ld   $8c         ;0aa7 XORI
              5244 00ff  ld   $ff
              5245 002b  ld   $2b         ;0aa9 STW
              5246 0060  ld   $60         ;0aa9 'X'
              5247 001a  ld   $1a         ;0aab LD
              5248 0043  ld   $43         ;0aab 'CarX'+1
              5249 0099  ld   $99         ;0aad ADDW
              524a 0060  ld   $60         ;0aad 'X'
              524b 002b  ld   $2b         ;0aaf STW
              524c 0060  ld   $60         ;0aaf 'X'
              524d 0011  ld   $11         ;0ab1 LDWI
              524e 00d8  ld   $d8
              524f 0001  ld   $01
              5250 002b  ld   $2b         ;0ab4 STW
              5251 0056  ld   $56         ;0ab4 'Video'
              5252 0021  ld   $21         ;0ab6 LDW
              5253 00a3  ld   $a3         ;0ab6 'Car0'
              5254 002b  ld   $2b         ;0ab8 STW
              5255 005c  ld   $5c         ;0ab8 'Sprite'
              5256 00cf  ld   $cf         ;0aba CALL
              5257 0064  ld   $64         ;0aba 'DrawPixels'
              5258 0021  ld   $21         ;0abc LDW
              5259 00a5  ld   $a5         ;0abc 'Car1'
              525a 002b  ld   $2b         ;0abe STW
              525b 005c  ld   $5c         ;0abe 'Sprite'
              525c 00cf  ld   $cf         ;0ac0 CALL
              525d 0064  ld   $64         ;0ac0 'DrawPixels'
              525e 0021  ld   $21         ;0ac2 LDW
              525f 0060  ld   $60         ;0ac2 'X'
              5260 00b8  ld   $b8         ;0ac4 SUBW
              5261 004a  ld   $4a         ;0ac4 'Steer'
              5262 002b  ld   $2b         ;0ac6 STW
              5263 0060  ld   $60         ;0ac6 'X'
              5264 0021  ld   $21         ;0ac8 LDW
              5265 00a7  ld   $a7         ;0ac8 'Car2'
              5266 002b  ld   $2b         ;0aca STW
              5267 005c  ld   $5c         ;0aca 'Sprite'
              5268 00cf  ld   $cf         ;0acc CALL
              5269 0064  ld   $64         ;0acc 'DrawPixels'
              526a 0021  ld   $21         ;0ace LDW
              526b 00a9  ld   $a9         ;0ace 'Car3'
              526c 002b  ld   $2b         ;0ad0 STW
              526d 005c  ld   $5c         ;0ad0 'Sprite'
              526e 00cf  ld   $cf         ;0ad2 CALL
              526f 0064  ld   $64         ;0ad2 'DrawPixels'
              5270 0021  ld   $21         ;0ad4 LDW
              5271 00ab  ld   $ab         ;0ad4 'Car4'
              5272 002b  ld   $2b         ;0ad6 STW
              5273 005c  ld   $5c         ;0ad6 'Sprite'
              5274 00cf  ld   $cf         ;0ad8 CALL
              5275 0064  ld   $64         ;0ad8 'DrawPixels'
              5276 0063  ld   $63         ;0ada POP
              5277 00ff  ld   $ff         ;0adb RET
              5278 002b  ld   $2b         ;0adc STW
              5279 009d  ld   $9d         ;0adc 'DrawRaceCar'
              527a 0093  ld   $93         ;0ade INC
              527b 001b  ld   $1b         ;0ade '_vLR'+1
              527c 00ff  ld   $ff         ;0ae0 RET
              527d 000b  ld   $0b         ;| RAM segment address (high byte first)
              527e 00a0  ld   $a0         ;|
              527f 004c  ld   $4c         ;| Length (1..256)
              5280 00cd  ld   $cd         ;0ba0 DEF
              5281 00e5  ld   $e5
              5282 0075  ld   $75         ;0ba2 PUSH
              5283 0059  ld   $59         ;0ba3 LDI
              5284 0030  ld   $30
              5285 002b  ld   $2b         ;0ba5 STW
              5286 0034  ld   $34         ;0ba5 'BgColor'
              5287 0021  ld   $21         ;0ba7 LDW
              5288 0034  ld   $34         ;0ba7 'BgColor'
              5289 005e  ld   $5e         ;0ba9 ST
              528a 0024  ld   $24
              528b 005e  ld   $5e         ;0bab ST
              528c 0025  ld   $25
              528d 0011  ld   $11         ;0bad LDWI
              528e 0000  ld   $00
              528f 0008  ld   $08
              5290 002b  ld   $2b         ;0bb0 STW
              5291 0028  ld   $28
              5292 0011  ld   $11         ;0bb2 LDWI
              5293 00e1  ld   $e1
              5294 0004  ld   $04
              5295 002b  ld   $2b         ;0bb5 STW
              5296 0022  ld   $22
              5297 00b4  ld   $b4         ;0bb7 SYS
              5298 00cc  ld   $cc
              5299 0093  ld   $93         ;0bb9 INC
              529a 0028  ld   $28
              529b 001a  ld   $1a         ;0bbb LD
              529c 0028  ld   $28
              529d 008c  ld   $8c         ;0bbd XORI
              529e 00a0  ld   $a0
              529f 0035  ld   $35         ;0bbf BCC
              52a0 0072  ld   $72         ;0bc0 NE
              52a1 00b5  ld   $b5
              52a2 0059  ld   $59         ;0bc2 LDI
              52a3 003f  ld   $3f
              52a4 002b  ld   $2b         ;0bc4 STW
              52a5 0036  ld   $36         ;0bc4 'Color'
              52a6 0011  ld   $11         ;0bc6 LDWI
              52a7 0007  ld   $07
              52a8 0008  ld   $08
              52a9 002b  ld   $2b         ;0bc9 STW
              52aa 0038  ld   $38         ;0bc9 'Pos'
              52ab 0059  ld   $59         ;0bcb LDI
              52ac 003a  ld   $3a
              52ad 00cf  ld   $cf         ;0bcd CALL
              52ae 003a  ld   $3a         ;0bcd 'QPrintChar'
              52af 00e3  ld   $e3         ;0bcf ADDI
              52b0 0012  ld   $12
              52b1 002b  ld   $2b         ;0bd1 STW
              52b2 0038  ld   $38         ;0bd1 'Pos'
              52b3 0059  ld   $59         ;0bd3 LDI
              52b4 002e  ld   $2e
              52b5 00cf  ld   $cf         ;0bd5 CALL
              52b6 003a  ld   $3a         ;0bd5 'QPrintChar'
              52b7 00e3  ld   $e3         ;0bd7 ADDI
              52b8 001f  ld   $1f
              52b9 002b  ld   $2b         ;0bd9 STW
              52ba 0038  ld   $38         ;0bd9 'Pos'
              52bb 0021  ld   $21         ;0bdb LDW
              52bc 004e  ld   $4e         ;0bdb 'GigatronText'
              52bd 00cf  ld   $cf         ;0bdd CALL
              52be 0085  ld   $85         ;0bdd 'PrintText'
              52bf 0059  ld   $59         ;0bdf LDI
              52c0 003c  ld   $3c
              52c1 002b  ld   $2b         ;0be1 STW
              52c2 0050  ld   $50         ;0be1 'Delay'
              52c3 00cf  ld   $cf         ;0be3 CALL
              52c4 0054  ld   $54         ;0be3 'Wait'
              52c5 0063  ld   $63         ;0be5 POP
              52c6 00ff  ld   $ff         ;0be6 RET
              52c7 002b  ld   $2b         ;0be7 STW
              52c8 00b3  ld   $b3         ;0be7 'Intro'
              52c9 0093  ld   $93         ;0be9 INC
              52ca 001b  ld   $1b         ;0be9 '_vLR'+1
              52cb 00ff  ld   $ff         ;0beb RET
              52cc 000c  ld   $0c         ;| RAM segment address (high byte first)
              52cd 00a0  ld   $a0         ;|
              52ce 0059  ld   $59         ;| Length (1..256)
              52cf 00cd  ld   $cd         ;0ca0 DEF
              52d0 00f2  ld   $f2
              52d1 002b  ld   $2b         ;0ca2 STW
              52d2 0036  ld   $36         ;0ca2 'Color'
              52d3 0021  ld   $21         ;0ca4 LDW
              52d4 0097  ld   $97         ;0ca4 'BestTime'
              52d5 002b  ld   $2b         ;0ca6 STW
              52d6 0081  ld   $81         ;0ca6 'Value'
              52d7 00e3  ld   $e3         ;0ca8 ADDI
              52d8 0001  ld   $01
              52d9 0035  ld   $35         ;0caa BCC
              52da 0053  ld   $53         ;0cab GE
              52db 00ac  ld   $ac
              52dc 00ff  ld   $ff         ;0cad RET
              52dd 0075  ld   $75         ;0cae PUSH
              52de 0011  ld   $11         ;0caf LDWI
              52df 007c  ld   $7c
              52e0 0008  ld   $08
              52e1 002b  ld   $2b         ;0cb2 STW
              52e2 0038  ld   $38         ;0cb2 'Pos'
              52e3 0011  ld   $11         ;0cb4 LDWI
              52e4 000f  ld   $0f
              52e5 000e  ld   $0e
              52e6 002b  ld   $2b         ;0cb7 STW
              52e7 0072  ld   $72         ;0cb7 'Radix'
              52e8 00cf  ld   $cf         ;0cb9 CALL
              52e9 0074  ld   $74         ;0cb9 'ExtractDigit'
              52ea 00cf  ld   $cf         ;0cbb CALL
              52eb 003a  ld   $3a         ;0cbb 'QPrintChar'
              52ec 00e3  ld   $e3         ;0cbd ADDI
              52ed 0006  ld   $06
              52ee 002b  ld   $2b         ;0cbf STW
              52ef 0038  ld   $38         ;0cbf 'Pos'
              52f0 0059  ld   $59         ;0cc1 LDI
              52f1 003a  ld   $3a
              52f2 00cf  ld   $cf         ;0cc3 CALL
              52f3 003a  ld   $3a         ;0cc3 'QPrintChar'
              52f4 00e3  ld   $e3         ;0cc5 ADDI
              52f5 0006  ld   $06
              52f6 002b  ld   $2b         ;0cc7 STW
              52f7 0038  ld   $38         ;0cc7 'Pos'
              52f8 0011  ld   $11         ;0cc9 LDWI
              52f9 0058  ld   $58
              52fa 0002  ld   $02
              52fb fe00  bra  ac          ;+-----------------------------------+
              52fc fcfd  bra  $52fd       ;|                                   |
              52fd 1418  ld   $18,y       ;| Trampoline for page $5200 lookups |
              52fe e006  jmp  y,$06       ;|                                   |
              52ff c218  st   [$18]       ;+-----------------------------------+
              5300 002b  ld   $2b         ;0ccc STW
              5301 0072  ld   $72         ;0ccc 'Radix'
              5302 00cf  ld   $cf         ;0cce CALL
              5303 0074  ld   $74         ;0cce 'ExtractDigit'
              5304 00cf  ld   $cf         ;0cd0 CALL
              5305 003a  ld   $3a         ;0cd0 'QPrintChar'
              5306 00e3  ld   $e3         ;0cd2 ADDI
              5307 0006  ld   $06
              5308 002b  ld   $2b         ;0cd4 STW
              5309 0038  ld   $38         ;0cd4 'Pos'
              530a 0059  ld   $59         ;0cd6 LDI
              530b 003c  ld   $3c
              530c 002b  ld   $2b         ;0cd8 STW
              530d 0072  ld   $72         ;0cd8 'Radix'
              530e 00cf  ld   $cf         ;0cda CALL
              530f 0074  ld   $74         ;0cda 'ExtractDigit'
              5310 00cf  ld   $cf         ;0cdc CALL
              5311 003a  ld   $3a         ;0cdc 'QPrintChar'
              5312 00e3  ld   $e3         ;0cde ADDI
              5313 0006  ld   $06
              5314 002b  ld   $2b         ;0ce0 STW
              5315 0038  ld   $38         ;0ce0 'Pos'
              5316 0059  ld   $59         ;0ce2 LDI
              5317 002e  ld   $2e
              5318 00cf  ld   $cf         ;0ce4 CALL
              5319 003a  ld   $3a         ;0ce4 'QPrintChar'
              531a 00e3  ld   $e3         ;0ce6 ADDI
              531b 0006  ld   $06
              531c 002b  ld   $2b         ;0ce8 STW
              531d 0038  ld   $38         ;0ce8 'Pos'
              531e 0059  ld   $59         ;0cea LDI
              531f 0006  ld   $06
              5320 002b  ld   $2b         ;0cec STW
              5321 0072  ld   $72         ;0cec 'Radix'
              5322 00cf  ld   $cf         ;0cee CALL
              5323 0074  ld   $74         ;0cee 'ExtractDigit'
              5324 00cf  ld   $cf         ;0cf0 CALL
              5325 003a  ld   $3a         ;0cf0 'QPrintChar'
              5326 0063  ld   $63         ;0cf2 POP
              5327 00ff  ld   $ff         ;0cf3 RET
              5328 002b  ld   $2b         ;0cf4 STW
              5329 0099  ld   $99         ;0cf4 'PrintBestTime'
              532a 0093  ld   $93         ;0cf6 INC
              532b 001b  ld   $1b         ;0cf6 '_vLR'+1
              532c 00ff  ld   $ff         ;0cf8 RET
              532d 000d  ld   $0d         ;| RAM segment address (high byte first)
              532e 00a0  ld   $a0         ;|
              532f 0056  ld   $56         ;| Length (1..256)
              5330 00cd  ld   $cd         ;0da0 DEF
              5331 00ef  ld   $ef
              5332 0075  ld   $75         ;0da2 PUSH
              5333 0011  ld   $11         ;0da3 LDWI
              5334 0035  ld   $35
              5335 0014  ld   $14
              5336 002b  ld   $2b         ;0da6 STW
              5337 0038  ld   $38         ;0da6 'Pos'
              5338 00cd  ld   $cd         ;0da8 DEF
              5339 00b2  ld   $b2
              533a 0047  ld   $47         ;0daa 'G'
              533b 0041  ld   $41         ;0dab 'A'
              533c 004d  ld   $4d         ;0dac 'M'
              533d 0045  ld   $45         ;0dad 'E'
              533e 0020  ld   $20         ;0dae ' '
              533f 004f  ld   $4f         ;0daf 'O'
              5340 0056  ld   $56         ;0db0 'V'
              5341 0045  ld   $45         ;0db1 'E'
              5342 0052  ld   $52         ;0db2 'R'
              5343 0000  ld   $00         ;0db3 0
              5344 00cf  ld   $cf         ;0db4 CALL
              5345 0085  ld   $85         ;0db4 'PrintText'
              5346 0011  ld   $11         ;0db6 LDWI
              5347 0011  ld   $11
              5348 0001  ld   $01
              5349 002b  ld   $2b         ;0db9 STW
              534a 005e  ld   $5e         ;0db9 's'
              534b 00e3  ld   $e3         ;0dbb ADDI
              534c 0020  ld   $20
              534d 002b  ld   $2b         ;0dbd STW
              534e 00b5  ld   $b5         ;0dbd 't'
              534f 0059  ld   $59         ;0dbf LDI
              5350 0001  ld   $01
              5351 002b  ld   $2b         ;0dc1 STW
              5352 0050  ld   $50         ;0dc1 'Delay'
              5353 0021  ld   $21         ;0dc3 LDW
              5354 005e  ld   $5e         ;0dc3 's'
              5355 00ad  ld   $ad         ;0dc5 PEEK
              5356 0082  ld   $82         ;0dc6 ANDI
              5357 0080  ld   $80
              5358 0035  ld   $35         ;0dc8 BCC
              5359 0072  ld   $72         ;0dc9 NE
              535a 00cd  ld   $cd
              535b 0059  ld   $59         ;0dcb LDI
              535c 0001  ld   $01
              535d 0090  ld   $90         ;0dcd BRA
              535e 00d0  ld   $d0
              535f 0011  ld   $11         ;0dcf LDWI
              5360 00ff  ld   $ff
              5361 00ff  ld   $ff
              5362 002b  ld   $2b         ;0dd2 STW
              5363 0030  ld   $30         ;0dd2 'i'
              5364 00cf  ld   $cf         ;0dd4 CALL
              5365 0054  ld   $54         ;0dd4 'Wait'
              5366 0021  ld   $21         ;0dd6 LDW
              5367 00b5  ld   $b5         ;0dd6 't'
              5368 00ad  ld   $ad         ;0dd8 PEEK
              5369 00b8  ld   $b8         ;0dd9 SUBW
              536a 0030  ld   $30         ;0dd9 'i'
              536b 00f0  ld   $f0         ;0ddb POKE
              536c 00b5  ld   $b5         ;0ddb 't'
              536d 0021  ld   $21         ;0ddd LDW
              536e 005e  ld   $5e         ;0ddd 's'
              536f 00ad  ld   $ad         ;0ddf PEEK
              5370 0099  ld   $99         ;0de0 ADDW
              5371 0030  ld   $30         ;0de0 'i'
              5372 00f0  ld   $f0         ;0de2 POKE
              5373 005e  ld   $5e         ;0de2 's'
              5374 0082  ld   $82         ;0de4 ANDI
              5375 00ff  ld   $ff
              5376 0035  ld   $35         ;0de6 BCC
              5377 0072  ld   $72         ;0de7 NE
              5378 00d2  ld   $d2
              5379 0059  ld   $59         ;0de9 LDI
              537a 001e  ld   $1e
              537b 002b  ld   $2b         ;0deb STW
              537c 0050  ld   $50         ;0deb 'Delay'
              537d 00cf  ld   $cf         ;0ded CALL
              537e 0054  ld   $54         ;0ded 'Wait'
              537f 0063  ld   $63         ;0def POP
              5380 00ff  ld   $ff         ;0df0 RET
              5381 002b  ld   $2b         ;0df1 STW
              5382 00b7  ld   $b7         ;0df1 'GameOver'
              5383 0093  ld   $93         ;0df3 INC
              5384 001b  ld   $1b         ;0df3 '_vLR'+1
              5385 00ff  ld   $ff         ;0df5 RET
              5386 000e  ld   $0e         ;| RAM segment address (high byte first)
              5387 00a0  ld   $a0         ;|
              5388 005b  ld   $5b         ;| Length (1..256)
              5389 00cd  ld   $cd         ;0ea0 DEF
              538a 00f4  ld   $f4
              538b 0075  ld   $75         ;0ea2 PUSH
              538c 0011  ld   $11         ;0ea3 LDWI
              538d 00a6  ld   $a6
              538e 0040  ld   $40
              538f 002b  ld   $2b         ;0ea6 STW
              5390 0058  ld   $58         ;0ea6 'p'
              5391 0011  ld   $11         ;0ea8 LDWI
              5392 0000  ld   $00
              5393 0010  ld   $10
              5394 002b  ld   $2b         ;0eab STW
              5395 005a  ld   $5a         ;0eab 'q'
              5396 00cd  ld   $cd         ;0ead DEF
              5397 00bf  ld   $bf
              5398 001a  ld   $1a         ;0eaf LD
              5399 0058  ld   $58         ;0eaf 'p'
              539a 008c  ld   $8c         ;0eb1 XORI
              539b 00fa  ld   $fa
              539c 0035  ld   $35         ;0eb3 BCC
              539d 003f  ld   $3f         ;0eb4 EQ
              539e 00b8  ld   $b8
              539f 0059  ld   $59         ;0eb6 LDI
              53a0 0001  ld   $01
              53a1 0090  ld   $90         ;0eb8 BRA
              53a2 00ba  ld   $ba
              53a3 0059  ld   $59         ;0eba LDI
              53a4 0006  ld   $06
              53a5 0099  ld   $99         ;0ebc ADDW
              53a6 0058  ld   $58         ;0ebc 'p'
              53a7 002b  ld   $2b         ;0ebe STW
              53a8 0058  ld   $58         ;0ebe 'p'
              53a9 00ff  ld   $ff         ;0ec0 RET
              53aa 002b  ld   $2b         ;0ec1 STW
              53ab 0052  ld   $52         ;0ec1 'tmp'
              53ac 0021  ld   $21         ;0ec3 LDW
              53ad 0058  ld   $58         ;0ec3 'p'
              53ae 007f  ld   $7f         ;0ec5 LUP
              53af 0000  ld   $00
              53b0 005e  ld   $5e         ;0ec7 ST
              53b1 0024  ld   $24
              53b2 00cf  ld   $cf         ;0ec9 CALL
              53b3 0052  ld   $52         ;0ec9 'tmp'
              53b4 007f  ld   $7f         ;0ecb LUP
              53b5 0000  ld   $00
              53b6 005e  ld   $5e         ;0ecd ST
              53b7 0025  ld   $25
              53b8 00cf  ld   $cf         ;0ecf CALL
              53b9 0052  ld   $52         ;0ecf 'tmp'
              53ba 007f  ld   $7f         ;0ed1 LUP
              53bb 0000  ld   $00
              53bc 005e  ld   $5e         ;0ed3 ST
              53bd 0026  ld   $26
              53be 00cf  ld   $cf         ;0ed5 CALL
              53bf 0052  ld   $52         ;0ed5 'tmp'
              53c0 0011  ld   $11         ;0ed7 LDWI
              53c1 00d0  ld   $d0
              53c2 001a  ld   $1a
              53c3 002b  ld   $2b         ;0eda STW
              53c4 0022  ld   $22
              53c5 00b4  ld   $b4         ;0edc SYS
              53c6 00f3  ld   $f3
              53c7 0021  ld   $21         ;0ede LDW
              53c8 005a  ld   $5a         ;0ede 'q'
              53c9 002b  ld   $2b         ;0ee0 STW
              53ca 0028  ld   $28
              53cb 00e3  ld   $e3         ;0ee2 ADDI
              53cc 0004  ld   $04
              53cd 002b  ld   $2b         ;0ee4 STW
              53ce 005a  ld   $5a         ;0ee4 'q'
              53cf 0011  ld   $11         ;0ee6 LDWI
              53d0 00d4  ld   $d4
              53d1 0004  ld   $04
              53d2 002b  ld   $2b         ;0ee9 STW
              53d3 0022  ld   $22
              53d4 00b4  ld   $b4         ;0eeb SYS
              53d5 0000  ld   $00
              53d6 001a  ld   $1a         ;0eed LD
              53d7 005b  ld   $5b         ;0eed 'q'+1
              53d8 008c  ld   $8c         ;0eef XORI
              53d9 0020  ld   $20
              53da 0035  ld   $35         ;0ef1 BCC
              53db 0072  ld   $72         ;0ef2 NE
              53dc 00c1  ld   $c1
              53dd 0063  ld   $63         ;0ef4 POP
              53de 00ff  ld   $ff         ;0ef5 RET
              53df 002b  ld   $2b         ;0ef6 STW
              53e0 00b9  ld   $b9         ;0ef6 'SetupHorizon'
              53e1 0093  ld   $93         ;0ef8 INC
              53e2 001b  ld   $1b         ;0ef8 '_vLR'+1
              53e3 00ff  ld   $ff         ;0efa RET
              53e4 000f  ld   $0f         ;| RAM segment address (high byte first)
              53e5 00a0  ld   $a0         ;|
              53e6 0054  ld   $54         ;| Length (1..256)
              53e7 00cf  ld   $cf         ;0fa0 CALL
              53e8 00b3  ld   $b3         ;0fa0 'Intro'
              53e9 0011  ld   $11         ;0fa2 LDWI
              53ea 0000  ld   $00
              53eb 0074  ld   $74
              53ec 002b  ld   $2b         ;0fa5 STW
              53ed 008d  ld   $8d         ;0fa5 'Distance'
              53ee 002b  ld   $2b         ;0fa7 STW
              53ef 008b  ld   $8b         ;0fa7 'NextTurn'
              53f0 0011  ld   $11         ;0fa9 LDWI
              53f1 00ff  ld   $ff
              53f2 007f  ld   $7f
              53f3 002b  ld   $2b         ;0fac STW
              53f4 0097  ld   $97         ;0fac 'BestTime'
              53f5 0059  ld   $59         ;0fae LDI
              53f6 0000  ld   $00
              53f7 002b  ld   $2b         ;0fb0 STW
              53f8 003e  ld   $3e         ;0fb0 'Time'
              53f9 002b  ld   $2b         ;0fb2 STW
              53fa 0081  ld   $81         ;0fb2 'Value'
              53fb fe00  bra  ac          ;+-----------------------------------+
              53fc fcfd  bra  $53fd       ;|                                   |
              53fd 1418  ld   $18,y       ;| Trampoline for page $5300 lookups |
              53fe e006  jmp  y,$06       ;|                                   |
              53ff c218  st   [$18]       ;+-----------------------------------+
              5400 002b  ld   $2b         ;0fb4 STW
              5401 0046  ld   $46         ;0fb4 'HorizonX'
              5402 002b  ld   $2b         ;0fb6 STW
              5403 0044  ld   $44         ;0fb6 'DriftX'
              5404 002b  ld   $2b         ;0fb8 STW
              5405 0040  ld   $40         ;0fb8 'Speed'
              5406 002b  ld   $2b         ;0fba STW
              5407 009b  ld   $9b         ;0fba 'Random'
              5408 002b  ld   $2b         ;0fbc STW
              5409 0087  ld   $87         ;0fbc 'DX0'
              540a 002b  ld   $2b         ;0fbe STW
              540b 008f  ld   $8f         ;0fbe 'DDX'
              540c 002b  ld   $2b         ;0fc0 STW
              540d 0091  ld   $91         ;0fc0 'NextDDX'
              540e 00cf  ld   $cf         ;0fc2 CALL
              540f 0093  ld   $93         ;0fc2 'DrawRoad'
              5410 00cf  ld   $cf         ;0fc4 CALL
              5411 009f  ld   $9f         ;0fc4 'DrawGrass'
              5412 00cf  ld   $cf         ;0fc6 CALL
              5413 00b9  ld   $b9         ;0fc6 'SetupHorizon'
              5414 0011  ld   $11         ;0fc8 LDWI
              5415 0035  ld   $35
              5416 0014  ld   $14
              5417 002b  ld   $2b         ;0fcb STW
              5418 0038  ld   $38         ;0fcb 'Pos'
              5419 00cd  ld   $cd         ;0fcd DEF
              541a 00d7  ld   $d7
              541b 0047  ld   $47         ;0fcf 'G'
              541c 0045  ld   $45         ;0fd0 'E'
              541d 0054  ld   $54         ;0fd1 'T'
              541e 0020  ld   $20         ;0fd2 ' '
              541f 0052  ld   $52         ;0fd3 'R'
              5420 0045  ld   $45         ;0fd4 'E'
              5421 0041  ld   $41         ;0fd5 'A'
              5422 0044  ld   $44         ;0fd6 'D'
              5423 0059  ld   $59         ;0fd7 'Y'
              5424 0000  ld   $00         ;0fd8 0
              5425 00cf  ld   $cf         ;0fd9 CALL
              5426 0085  ld   $85         ;0fd9 'PrintText'
              5427 00cf  ld   $cf         ;0fdb CALL
              5428 0070  ld   $70         ;0fdb 'SetupRoad'
              5429 00cf  ld   $cf         ;0fdd CALL
              542a 00b9  ld   $b9         ;0fdd 'SetupHorizon'
              542b 00cf  ld   $cf         ;0fdf CALL
              542c 00b1  ld   $b1         ;0fdf 'SetupIndicator'
              542d 0011  ld   $11         ;0fe1 LDWI
              542e 0000  ld   $00
              542f 0079  ld   $79
              5430 002b  ld   $2b         ;0fe4 STW
              5431 0042  ld   $42         ;0fe4 'CarX'
              5432 001a  ld   $1a         ;0fe6 LD
              5433 000e  ld   $0e
              5434 002b  ld   $2b         ;0fe8 STW
              5435 003c  ld   $3c         ;0fe8 'LastFrame'
              5436 00cf  ld   $cf         ;0fea CALL
              5437 00a1  ld   $a1         ;0fea 'PlayGame'
              5438 00cf  ld   $cf         ;0fec CALL
              5439 00b7  ld   $b7         ;0fec 'GameOver'
              543a 0059  ld   $59         ;0fee LDI
              543b 003f  ld   $3f
              543c 00cf  ld   $cf         ;0ff0 CALL
              543d 0099  ld   $99         ;0ff0 'PrintBestTime'
              543e 0090  ld   $90         ;0ff2 BRA
              543f 00a0  ld   $a0
              5440 0000  ld   $00         ;End of Apps/Racer/Racer_v2.gcl, size 1873
                                          ;+-----------------------------------+
                                          ;| gbas/browser/Browser_SDCard_ROMv5a_v1.gt1 |
                                          ;+-----------------------------------+
              5441 dc52  st   $52,[y,x++] ;'R'
              5442 dc61  st   $61,[y,x++] ;'a'
              5443 dc63  st   $63,[y,x++] ;'c'
              5444 dc65  st   $65,[y,x++] ;'e'
              5445 dc72  st   $72,[y,x++] ;'r'
              5446 dc00  st   $00,[y,x++] ;'\x00'
              5447 dc00  st   $00,[y,x++] ;'\x00'
              5448 dc00  st   $00,[y,x++] ;'\x00'
              5449 00f0  ld   $f0
              544a c218  st   [$18]
              544b 004c  ld   $4c
              544c 14e0  ld   $e0,y
              544d e071  jmp  y,$71
              544e c219  st   [$19]
SDCard:       544f 0002  ld   $02
              5450 0000  ld   $00
              5451 00fa  ld   $fa
              5452 0059  ld   $59
              5453 0040  ld   $40
              5454 002b  ld   $2b
              5455 0082  ld   $82
              5456 0011  ld   $11
              5457 00e8  ld   $e8
              5458 0062  ld   $62
              5459 00cf  ld   $cf
              545a 0018  ld   $18
              545b 0011  ld   $11
              545c 0020  ld   $20
              545d 000f  ld   $0f
              545e 002b  ld   $2b
              545f 00a2  ld   $a2
              5460 0059  ld   $59
              5461 0001  ld   $01
              5462 002b  ld   $2b
              5463 00aa  ld   $aa
              5464 0059  ld   $59
              5465 0000  ld   $00
              5466 002b  ld   $2b
              5467 00a6  ld   $a6
              5468 0085  ld   $85
              5469 00a0  ld   $a0
              546a 0062  ld   $62
              546b 0011  ld   $11
              546c 00fe  ld   $fe
              546d 007c  ld   $7c
              546e 002b  ld   $2b
              546f 0084  ld   $84
              5470 0011  ld   $11
              5471 00a0  ld   $a0
              5472 007d  ld   $7d
              5473 0085  ld   $85
              5474 00d2  ld   $d2
              5475 0061  ld   $61
              5476 0011  ld   $11
              5477 00fe  ld   $fe
              5478 007c  ld   $7c
              5479 002b  ld   $2b
              547a 0084  ld   $84
              547b 0011  ld   $11
              547c 00a0  ld   $a0
              547d 007b  ld   $7b
              547e 0085  ld   $85
              547f 00d2  ld   $d2
              5480 0061  ld   $61
              5481 0011  ld   $11
              5482 00fe  ld   $fe
              5483 007c  ld   $7c
              5484 002b  ld   $2b
              5485 0084  ld   $84
              5486 0011  ld   $11
              5487 00a0  ld   $a0
              5488 007a  ld   $7a
              5489 0085  ld   $85
              548a 00d2  ld   $d2
              548b 0061  ld   $61
              548c 0085  ld   $85
              548d 0079  ld   $79
              548e 0002  ld   $02
              548f 0085  ld   $85
              5490 00b8  ld   $b8
              5491 000e  ld   $0e
              5492 0085  ld   $85
              5493 00c2  ld   $c2
              5494 000d  ld   $0d
              5495 0085  ld   $85
              5496 00a2  ld   $a2
              5497 000e  ld   $0e
              5498 0085  ld   $85
              5499 0014  ld   $14
              549a 0006  ld   $06
              549b 0085  ld   $85
              549c 00d8  ld   $d8
              549d 000d  ld   $0d
              549e 0085  ld   $85
              549f 003a  ld   $3a
              54a0 0003  ld   $03
              54a1 0085  ld   $85
              54a2 008c  ld   $8c
              54a3 0003  ld   $03
              54a4 0021  ld   $21
              54a5 0040  ld   $40
              54a6 0035  ld   $35
              54a7 003f  ld   $3f
              54a8 0047  ld   $47
              54a9 0085  ld   $85
              54aa 00eb  ld   $eb
              54ab 000d  ld   $0d
              54ac 0085  ld   $85
              54ad 00e0  ld   $e0
              54ae 0003  ld   $03
              54af 0059  ld   $59
              54b0 0000  ld   $00
              54b1 002b  ld   $2b
              54b2 004a  ld   $4a
              54b3 0059  ld   $59
              54b4 00ff  ld   $ff
              54b5 002b  ld   $2b
              54b6 004c  ld   $4c
              54b7 0085  ld   $85
              54b8 00b7  ld   $b7
              54b9 0061  ld   $61
              54ba 0085  ld   $85
              54bb 00f3  ld   $f3
              54bc 0009  ld   $09
              54bd 0021  ld   $21
              54be 0046  ld   $46
              54bf 0035  ld   $35
              54c0 003f  ld   $3f
              54c1 0070  ld   $70
              54c2 0090  ld   $90
              54c3 003b  ld   $3b
              54c4 0093  ld   $93
              54c5 004a  ld   $4a
              54c6 0085  ld   $85
              54c7 0065  ld   $65
              54c8 0002  ld   $02
              54c9 00b4  ld   $b4
              54ca 0080  ld   $80
              54cb 0075  ld   $75
              54cc 001a  ld   $1a
              54cd 0021  ld   $21
              54ce 0082  ld   $82
              54cf 00fc  ld   $fc
              54d0 002b  ld   $2b
              54d1 004e  ld   $4e
              54d2 0021  ld   $21
              54d3 004e  ld   $4e
              54d4 008c  ld   $8c
              54d5 0020  ld   $20
              54d6 0035  ld   $35
              54d7 0072  ld   $72
              54d8 008d  ld   $8d
              54d9 0011  ld   $11
              54da 003e  ld   $3e
              54db 00e2  ld   $e2
              54dc 002b  ld   $2b
              54dd 0030  ld   $30
              54de 0085  ld   $85
              54df 001d  ld   $1d
              54e0 0003  ld   $03
              54e1 0021  ld   $21
              54e2 004e  ld   $4e
              54e3 008c  ld   $8c
              54e4 0028  ld   $28
              54e5 0035  ld   $35
              54e6 0072  ld   $72
              54e7 009c  ld   $9c
              54e8 0011  ld   $11
              54e9 00a8  ld   $a8
              54ea 00b4  ld   $b4
              54eb 002b  ld   $2b
              54ec 0030  ld   $30
              54ed 0085  ld   $85
              54ee 001d  ld   $1d
              54ef 0003  ld   $03
              54f0 0021  ld   $21
              54f1 004e  ld   $4e
              54f2 008c  ld   $8c
              54f3 0038  ld   $38
              54f4 0035  ld   $35
              54f5 0072  ld   $72
              54f6 00ab  ld   $ab
              54f7 0011  ld   $11
              54f8 005a  ld   $5a
              54f9 00ad  ld   $ad
              54fa 002b  ld   $2b
              54fb fe00  bra  ac          ;+-----------------------------------+
              54fc fcfd  bra  $54fd       ;|                                   |
              54fd 1418  ld   $18,y       ;| Trampoline for page $5400 lookups |
              54fe e006  jmp  y,$06       ;|                                   |
              54ff c218  st   [$18]       ;+-----------------------------------+
              5500 0030  ld   $30
              5501 0085  ld   $85
              5502 001d  ld   $1d
              5503 0003  ld   $03
              5504 0021  ld   $21
              5505 004e  ld   $4e
              5506 00e6  ld   $e6
              5507 0040  ld   $40
              5508 0035  ld   $35
              5509 0053  ld   $53
              550a 00b5  ld   $b5
              550b 0085  ld   $85
              550c 001d  ld   $1d
              550d 0003  ld   $03
              550e 0021  ld   $21
              550f 0030  ld   $30
              5510 002b  ld   $2b
              5511 0082  ld   $82
              5512 0085  ld   $85
              5513 00bf  ld   $bf
              5514 0061  ld   $61
              5515 002b  ld   $2b
              5516 0030  ld   $30
              5517 0021  ld   $21
              5518 0030  ld   $30
              5519 0035  ld   $35
              551a 0072  ld   $72
              551b 00c6  ld   $c6
              551c 0085  ld   $85
              551d 000a  ld   $0a
              551e 0003  ld   $03
              551f 0011  ld   $11
              5520 00a0  ld   $a0
              5521 007b  ld   $7b
              5522 002b  ld   $2b
              5523 0082  ld   $82
              5524 0059  ld   $59
              5525 0006  ld   $06
              5526 00f0  ld   $f0
              5527 0082  ld   $82
              5528 0059  ld   $59
              5529 0024  ld   $24
              552a 002b  ld   $2b
              552b 0050  ld   $50
              552c 0011  ld   $11
              552d 00a0  ld   $a0
              552e 007b  ld   $7b
              552f 0099  ld   $99
              5530 0050  ld   $50
              5531 00e6  ld   $e6
              5532 0023  ld   $23
              5533 002b  ld   $2b
              5534 00e8  ld   $e8
              5535 0021  ld   $21
              5536 0050  ld   $50
              5537 00ad  ld   $ad
              5538 00f0  ld   $f0
              5539 00e8  ld   $e8
              553a 0093  ld   $93
              553b 0050  ld   $50
              553c 001a  ld   $1a
              553d 0050  ld   $50
              553e 00e6  ld   $e6
              553f 002b  ld   $2b
              5540 0035  ld   $35
              5541 0056  ld   $56
              5542 00d3  ld   $d3
              5543 0011  ld   $11
              5544 00a0  ld   $a0
              5545 007b  ld   $7b
              5546 002b  ld   $2b
              5547 0084  ld   $84
              5548 0011  ld   $11
              5549 00a6  ld   $a6
              554a 007c  ld   $7c
              554b 0085  ld   $85
              554c 00c3  ld   $c3
              554d 0066  ld   $66
              554e 0085  ld   $85
              554f 0000  ld   $00
              5550 0003  ld   $03
              5551 0003  ld   $03
              5552 0000  ld   $00
              5553 00fa  ld   $fa
              5554 0082  ld   $82
              5555 0001  ld   $01
              5556 0035  ld   $35
              5557 0072  ld   $72
              5558 0006  ld   $06
              5559 0085  ld   $85
              555a 000a  ld   $0a
              555b 0003  ld   $03
              555c 0063  ld   $63
              555d 00ff  ld   $ff
              555e 0021  ld   $21
              555f 0030  ld   $30
              5560 0035  ld   $35
              5561 003f  ld   $3f
              5562 0010  ld   $10
              5563 0085  ld   $85
              5564 00b7  ld   $b7
              5565 0002  ld   $02
              5566 0011  ld   $11
              5567 00b1  ld   $b1
              5568 0069  ld   $69
              5569 0085  ld   $85
              556a 00d1  ld   $d1
              556b 0062  ld   $62
              556c 0085  ld   $85
              556d 00aa  ld   $aa
              556e 0067  ld   $67
              556f 00b4  ld   $b4
              5570 0080  ld   $80
              5571 0063  ld   $63
              5572 00ff  ld   $ff
              5573 0075  ld   $75
              5574 0011  ld   $11
              5575 0006  ld   $06
              5576 000b  ld   $0b
              5577 002b  ld   $2b
              5578 0022  ld   $22
              5579 0021  ld   $21
              557a 0032  ld   $32
              557b 002b  ld   $2b
              557c 0024  ld   $24
              557d 0059  ld   $59
              557e 0001  ld   $01
              557f 002b  ld   $2b
              5580 0026  ld   $26
              5581 001a  ld   $1a
              5582 0034  ld   $34
              5583 00e9  ld   $e9
              5584 00e9  ld   $e9
              5585 00e9  ld   $e9
              5586 002b  ld   $2b
              5587 0027  ld   $27
              5588 00b4  ld   $b4
              5589 00e6  ld   $e6
              558a 002b  ld   $2b
              558b 0036  ld   $36
              558c 0063  ld   $63
              558d 00ff  ld   $ff
              558e 0075  ld   $75
              558f 0021  ld   $21
              5590 0072  ld   $72
              5591 002b  ld   $2b
              5592 0022  ld   $22
              5593 0011  ld   $11
              5594 00ae  ld   $ae
              5595 007c  ld   $7c
              5596 002b  ld   $2b
              5597 0024  ld   $24
              5598 0059  ld   $59
              5599 00cf  ld   $cf
              559a 005e  ld   $5e
              559b 0027  ld   $27
              559c 00b4  ld   $b4
              559d 00fe  ld   $fe
              559e 0011  ld   $11
              559f 00ae  ld   $ae
              55a0 007c  ld   $7c
              55a1 00ad  ld   $ad
              55a2 008c  ld   $8c
              55a3 00ff  ld   $ff
              55a4 0035  ld   $35
              55a5 003f  ld   $3f
              55a6 003d  ld   $3d
              55a7 0059  ld   $59
              55a8 00db  ld   $db
              55a9 005e  ld   $5e
              55aa 0027  ld   $27
              55ab 00b4  ld   $b4
              55ac 00fe  ld   $fe
              55ad 0059  ld   $59
              55ae 00eb  ld   $eb
              55af 005e  ld   $5e
              55b0 0027  ld   $27
              55b1 00b4  ld   $b4
              55b2 00fe  ld   $fe
              55b3 0059  ld   $59
              55b4 00fb  ld   $fb
              55b5 005e  ld   $5e
              55b6 0027  ld   $27
              55b7 00b4  ld   $b4
              55b8 00fe  ld   $fe
              55b9 0059  ld   $59
              55ba 0002  ld   $02
              55bb 005e  ld   $5e
              55bc 0027  ld   $27
              55bd 00b4  ld   $b4
              55be 00fe  ld   $fe
              55bf 001a  ld   $1a
              55c0 0027  ld   $27
              55c1 00e3  ld   $e3
              55c2 0004  ld   $04
              55c3 005e  ld   $5e
              55c4 0027  ld   $27
              55c5 008c  ld   $8c
              55c6 00f2  ld   $f2
              55c7 0035  ld   $35
              55c8 0072  ld   $72
              55c9 0067  ld   $67
              55ca 0059  ld   $59
              55cb 00b9  ld   $b9
              55cc 005e  ld   $5e
              55cd 0027  ld   $27
              55ce 00b4  ld   $b4
              55cf 00fe  ld   $fe
              55d0 0011  ld   $11
              55d1 00ae  ld   $ae
              55d2 007c  ld   $7c
              55d3 00ad  ld   $ad
              55d4 002b  ld   $2b
              55d5 0040  ld   $40
              55d6 0011  ld   $11
              55d7 00af  ld   $af
              55d8 007c  ld   $7c
              55d9 00ad  ld   $ad
              55da 0082  ld   $82
              55db 003f  ld   $3f
              55dc 002b  ld   $2b
              55dd 0042  ld   $42
              55de 0063  ld   $63
              55df 00ff  ld   $ff
              55e0 0075  ld   $75
              55e1 0059  ld   $59
              55e2 0002  ld   $02
              55e3 002b  ld   $2b
              55e4 0052  ld   $52
              55e5 0021  ld   $21
              55e6 0042  ld   $42
              55e7 0035  ld   $35
              55e8 0072  ld   $72
              55e9 0096  ld   $96
              55ea 0063  ld   $63
              55eb 00ff  ld   $ff
              55ec 0021  ld   $21
              55ed 0038  ld   $38
              55ee 008c  ld   $8c
              55ef 0064  ld   $64
              55f0 0035  ld   $35
              55f1 0072  ld   $72
              55f2 009f  ld   $9f
              55f3 0063  ld   $63
              55f4 00ff  ld   $ff
              55f5 0059  ld   $59
              55f6 0000  ld   $00
              55f7 002b  ld   $2b
              55f8 0054  ld   $54
              55f9 0011  ld   $11
              55fa 00ae  ld   $ae
              55fb fe00  bra  ac          ;+-----------------------------------+
              55fc fcfd  bra  $55fd       ;|                                   |
              55fd 1418  ld   $18,y       ;| Trampoline for page $5500 lookups |
              55fe e006  jmp  y,$06       ;|                                   |
              55ff c218  st   [$18]       ;+-----------------------------------+
              5600 007c  ld   $7c
              5601 0099  ld   $99
              5602 0052  ld   $52
              5603 00ad  ld   $ad
              5604 002b  ld   $2b
              5605 0056  ld   $56
              5606 0021  ld   $21
              5607 0038  ld   $38
              5608 002b  ld   $2b
              5609 0096  ld   $96
              560a 0021  ld   $21
              560b 0054  ld   $54
              560c 002b  ld   $2b
              560d 0098  ld   $98
              560e 0011  ld   $11
              560f 0038  ld   $38
              5610 0006  ld   $06
              5611 0085  ld   $85
              5612 00a1  ld   $a1
              5613 0068  ld   $68
              5614 002b  ld   $2b
              5615 00ea  ld   $ea
              5616 0021  ld   $21
              5617 0056  ld   $56
              5618 00f0  ld   $f0
              5619 00ea  ld   $ea
              561a 0093  ld   $93
              561b 0052  ld   $52
              561c 0093  ld   $93
              561d 0054  ld   $54
              561e 0021  ld   $21
              561f 0056  ld   $56
              5620 0035  ld   $35
              5621 0072  ld   $72
              5622 00a3  ld   $a3
              5623 0093  ld   $93
              5624 0038  ld   $38
              5625 0021  ld   $21
              5626 0038  ld   $38
              5627 008c  ld   $8c
              5628 0064  ld   $64
              5629 0035  ld   $35
              562a 0072  ld   $72
              562b 00d3  ld   $d3
              562c 0063  ld   $63
              562d 00ff  ld   $ff
              562e 0021  ld   $21
              562f 0052  ld   $52
              5630 00e6  ld   $e6
              5631 0002  ld   $02
              5632 00fc  ld   $fc
              5633 0042  ld   $42
              5634 0035  ld   $35
              5635 0072  ld   $72
              5636 009f  ld   $9f
              5637 0063  ld   $63
              5638 00ff  ld   $ff
              5639 0075  ld   $75
              563a 0021  ld   $21
              563b 0038  ld   $38
              563c 00e6  ld   $e6
              563d 000f  ld   $0f
              563e 002b  ld   $2b
              563f 00e8  ld   $e8
              5640 0021  ld   $21
              5641 003a  ld   $3a
              5642 002b  ld   $2b
              5643 0082  ld   $82
              5644 0021  ld   $21
              5645 00e8  ld   $e8
              5646 0085  ld   $85
              5647 00ac  ld   $ac
              5648 0062  ld   $62
              5649 002b  ld   $2b
              564a 0082  ld   $82
              564b 0059  ld   $59
              564c 0000  ld   $00
              564d 0085  ld   $85
              564e 00f0  ld   $f0
              564f 0061  ld   $61
              5650 0085  ld   $85
              5651 0000  ld   $00
              5652 0004  ld   $04
              5653 0004  ld   $04
              5654 0000  ld   $00
              5655 00fa  ld   $fa
              5656 002b  ld   $2b
              5657 0058  ld   $58
              5658 0021  ld   $21
              5659 003a  ld   $3a
              565a 00e3  ld   $e3
              565b 000e  ld   $0e
              565c 002b  ld   $2b
              565d 00e8  ld   $e8
              565e 0021  ld   $21
              565f 0038  ld   $38
              5660 00e6  ld   $e6
              5661 0001  ld   $01
              5662 002b  ld   $2b
              5663 00ea  ld   $ea
              5664 0021  ld   $21
              5665 00e8  ld   $e8
              5666 002b  ld   $2b
              5667 0082  ld   $82
              5668 0021  ld   $21
              5669 00ea  ld   $ea
              566a 0085  ld   $85
              566b 00ac  ld   $ac
              566c 0062  ld   $62
              566d 002b  ld   $2b
              566e 005a  ld   $5a
              566f 0021  ld   $21
              5670 0058  ld   $58
              5671 002b  ld   $2b
              5672 005c  ld   $5c
              5673 0021  ld   $21
              5674 005a  ld   $5a
              5675 002b  ld   $2b
              5676 00b0  ld   $b0
              5677 0059  ld   $59
              5678 0001  ld   $01
              5679 002b  ld   $2b
              567a 00b2  ld   $b2
              567b 0021  ld   $21
              567c 005c  ld   $5c
              567d 002b  ld   $2b
              567e 0096  ld   $96
              567f 0059  ld   $59
              5680 0000  ld   $00
              5681 002b  ld   $2b
              5682 0098  ld   $98
              5683 0011  ld   $11
              5684 0038  ld   $38
              5685 0006  ld   $06
              5686 0085  ld   $85
              5687 00a1  ld   $a1
              5688 0068  ld   $68
              5689 00e3  ld   $e3
              568a 0001  ld   $01
              568b 002b  ld   $2b
              568c 005e  ld   $5e
              568d 0021  ld   $21
              568e 005e  ld   $5e
              568f 00ad  ld   $ad
              5690 002b  ld   $2b
              5691 0060  ld   $60
              5692 0021  ld   $21
              5693 005e  ld   $5e
              5694 00e6  ld   $e6
              5695 0001  ld   $01
              5696 00ad  ld   $ad
              5697 002b  ld   $2b
              5698 0062  ld   $62
              5699 0021  ld   $21
              569a 005c  ld   $5c
              569b 00b8  ld   $b8
              569c 003a  ld   $3a
              569d 00fc  ld   $fc
              569e 003c  ld   $3c
              569f 0035  ld   $35
              56a0 0072  ld   $72
              56a1 0065  ld   $65
              56a2 0021  ld   $21
              56a3 0062  ld   $62
              56a4 008c  ld   $8c
              56a5 0001  ld   $01
              56a6 0035  ld   $35
              56a7 0072  ld   $72
              56a8 0059  ld   $59
              56a9 0011  ld   $11
              56aa 003f  ld   $3f
              56ab 0020  ld   $20
              56ac 002b  ld   $2b
              56ad 00a2  ld   $a2
              56ae 0085  ld   $85
              56af 0060  ld   $60
              56b0 0004  ld   $04
              56b1 0011  ld   $11
              56b2 002a  ld   $2a
              56b3 0020  ld   $20
              56b4 002b  ld   $2b
              56b5 00a2  ld   $a2
              56b6 0021  ld   $21
              56b7 005e  ld   $5e
              56b8 002b  ld   $2b
              56b9 0044  ld   $44
              56ba 0085  ld   $85
              56bb 007b  ld   $7b
              56bc 0004  ld   $04
              56bd 0021  ld   $21
              56be 0062  ld   $62
              56bf 008c  ld   $8c
              56c0 0001  ld   $01
              56c1 0035  ld   $35
              56c2 0072  ld   $72
              56c3 0074  ld   $74
              56c4 0011  ld   $11
              56c5 0020  ld   $20
              56c6 003f  ld   $3f
              56c7 002b  ld   $2b
              56c8 00a2  ld   $a2
              56c9 0085  ld   $85
              56ca 007b  ld   $7b
              56cb 0004  ld   $04
              56cc 0011  ld   $11
              56cd 0020  ld   $20
              56ce 002a  ld   $2a
              56cf 002b  ld   $2b
              56d0 00a2  ld   $a2
              56d1 0059  ld   $59
              56d2 0002  ld   $02
              56d3 005e  ld   $5e
              56d4 00a4  ld   $a4
              56d5 0021  ld   $21
              56d6 005c  ld   $5c
              56d7 00b8  ld   $b8
              56d8 003a  ld   $3a
              56d9 00e9  ld   $e9
              56da 00e9  ld   $e9
              56db 00e9  ld   $e9
              56dc 005e  ld   $5e
              56dd 00a5  ld   $a5
              56de 0085  ld   $85
              56df 00a8  ld   $a8
              56e0 0064  ld   $64
              56e1 0021  ld   $21
              56e2 005e  ld   $5e
              56e3 0085  ld   $85
              56e4 00d1  ld   $d1
              56e5 0062  ld   $62
              56e6 0059  ld   $59
              56e7 000c  ld   $0c
              56e8 00b8  ld   $b8
              56e9 0060  ld   $60
              56ea 0085  ld   $85
              56eb 00e4  ld   $e4
              56ec 0063  ld   $63
              56ed 0021  ld   $21
              56ee 005c  ld   $5c
              56ef 0099  ld   $99
              56f0 00b2  ld   $b2
              56f1 002b  ld   $2b
              56f2 005c  ld   $5c
              56f3 00b8  ld   $b8
              56f4 00b0  ld   $b0
              56f5 0035  ld   $35
              56f6 0056  ld   $56
              56f7 0023  ld   $23
              56f8 0063  ld   $63
              56f9 00ff  ld   $ff
              56fa 0075  ld   $75
              56fb fe00  bra  ac          ;+-----------------------------------+
              56fc fcfd  bra  $56fd       ;|                                   |
              56fd 1418  ld   $18,y       ;| Trampoline for page $5600 lookups |
              56fe e006  jmp  y,$06       ;|                                   |
              56ff c218  st   [$18]       ;+-----------------------------------+
              5700 0021  ld   $21
              5701 0038  ld   $38
              5702 00e6  ld   $e6
              5703 000f  ld   $0f
              5704 002b  ld   $2b
              5705 00e8  ld   $e8
              5706 0021  ld   $21
              5707 003a  ld   $3a
              5708 002b  ld   $2b
              5709 0082  ld   $82
              570a 0021  ld   $21
              570b 00e8  ld   $e8
              570c 0085  ld   $85
              570d 00ac  ld   $ac
              570e 0062  ld   $62
              570f 002b  ld   $2b
              5710 0082  ld   $82
              5711 0059  ld   $59
              5712 0000  ld   $00
              5713 0085  ld   $85
              5714 00f0  ld   $f0
              5715 0061  ld   $61
              5716 002b  ld   $2b
              5717 0058  ld   $58
              5718 0021  ld   $21
              5719 0058  ld   $58
              571a 0099  ld   $99
              571b 003e  ld   $3e
              571c 002b  ld   $2b
              571d 0064  ld   $64
              571e 0021  ld   $21
              571f 0064  ld   $64
              5720 002b  ld   $2b
              5721 0096  ld   $96
              5722 0059  ld   $59
              5723 0000  ld   $00
              5724 002b  ld   $2b
              5725 0098  ld   $98
              5726 0011  ld   $11
              5727 0038  ld   $38
              5728 0006  ld   $06
              5729 0085  ld   $85
              572a 00a1  ld   $a1
              572b 0068  ld   $68
              572c 00e3  ld   $e3
              572d 0001  ld   $01
              572e 002b  ld   $2b
              572f 0066  ld   $66
              5730 0021  ld   $21
              5731 0066  ld   $66
              5732 00ad  ld   $ad
              5733 002b  ld   $2b
              5734 0068  ld   $68
              5735 0021  ld   $21
              5736 0066  ld   $66
              5737 00e6  ld   $e6
              5738 0001  ld   $01
              5739 00ad  ld   $ad
              573a 002b  ld   $2b
              573b 0062  ld   $62
              573c 0021  ld   $21
              573d 0062  ld   $62
              573e 008c  ld   $8c
              573f 0001  ld   $01
              5740 0035  ld   $35
              5741 0072  ld   $72
              5742 00ee  ld   $ee
              5743 0011  ld   $11
              5744 0020  ld   $20
              5745 003f  ld   $3f
              5746 002b  ld   $2b
              5747 00a2  ld   $a2
              5748 0085  ld   $85
              5749 00f5  ld   $f5
              574a 0004  ld   $04
              574b 0011  ld   $11
              574c 0020  ld   $20
              574d 002a  ld   $2a
              574e 002b  ld   $2b
              574f 00a2  ld   $a2
              5750 0059  ld   $59
              5751 0002  ld   $02
              5752 0085  ld   $85
              5753 0000  ld   $00
              5754 0005  ld   $05
              5755 0005  ld   $05
              5756 0000  ld   $00
              5757 00fd  ld   $fd
              5758 005e  ld   $5e
              5759 00a4  ld   $a4
              575a 0021  ld   $21
              575b 0064  ld   $64
              575c 00b8  ld   $b8
              575d 0058  ld   $58
              575e 00e9  ld   $e9
              575f 00e9  ld   $e9
              5760 00e9  ld   $e9
              5761 005e  ld   $5e
              5762 00a5  ld   $a5
              5763 0085  ld   $85
              5764 00a8  ld   $a8
              5765 0064  ld   $64
              5766 0021  ld   $21
              5767 0066  ld   $66
              5768 0085  ld   $85
              5769 00d1  ld   $d1
              576a 0062  ld   $62
              576b 0059  ld   $59
              576c 000c  ld   $0c
              576d 00b8  ld   $b8
              576e 0068  ld   $68
              576f 0085  ld   $85
              5770 00e4  ld   $e4
              5771 0063  ld   $63
              5772 0021  ld   $21
              5773 003c  ld   $3c
              5774 002b  ld   $2b
              5775 003e  ld   $3e
              5776 0021  ld   $21
              5777 0058  ld   $58
              5778 0099  ld   $99
              5779 003c  ld   $3c
              577a 002b  ld   $2b
              577b 006a  ld   $6a
              577c 0021  ld   $21
              577d 006a  ld   $6a
              577e 002b  ld   $2b
              577f 0096  ld   $96
              5780 0059  ld   $59
              5781 0000  ld   $00
              5782 002b  ld   $2b
              5783 0098  ld   $98
              5784 0011  ld   $11
              5785 0038  ld   $38
              5786 0006  ld   $06
              5787 0085  ld   $85
              5788 00a1  ld   $a1
              5789 0068  ld   $68
              578a 00e3  ld   $e3
              578b 0001  ld   $01
              578c 002b  ld   $2b
              578d 006c  ld   $6c
              578e 0021  ld   $21
              578f 006c  ld   $6c
              5790 00ad  ld   $ad
              5791 002b  ld   $2b
              5792 006e  ld   $6e
              5793 0021  ld   $21
              5794 006c  ld   $6c
              5795 00e6  ld   $e6
              5796 0001  ld   $01
              5797 00ad  ld   $ad
              5798 002b  ld   $2b
              5799 0062  ld   $62
              579a 0021  ld   $21
              579b 0062  ld   $62
              579c 008c  ld   $8c
              579d 0001  ld   $01
              579e 0035  ld   $35
              579f 0072  ld   $72
              57a0 004f  ld   $4f
              57a1 0011  ld   $11
              57a2 003f  ld   $3f
              57a3 0020  ld   $20
              57a4 002b  ld   $2b
              57a5 00a2  ld   $a2
              57a6 0085  ld   $85
              57a7 0056  ld   $56
              57a8 0005  ld   $05
              57a9 0011  ld   $11
              57aa 002a  ld   $2a
              57ab 0020  ld   $20
              57ac 002b  ld   $2b
              57ad 00a2  ld   $a2
              57ae 0059  ld   $59
              57af 0002  ld   $02
              57b0 005e  ld   $5e
              57b1 00a4  ld   $a4
              57b2 0021  ld   $21
              57b3 006a  ld   $6a
              57b4 00b8  ld   $b8
              57b5 0058  ld   $58
              57b6 00e9  ld   $e9
              57b7 00e9  ld   $e9
              57b8 00e9  ld   $e9
              57b9 005e  ld   $5e
              57ba 00a5  ld   $a5
              57bb 0085  ld   $85
              57bc 00a8  ld   $a8
              57bd 0064  ld   $64
              57be 0021  ld   $21
              57bf 006c  ld   $6c
              57c0 0085  ld   $85
              57c1 00d1  ld   $d1
              57c2 0062  ld   $62
              57c3 0059  ld   $59
              57c4 000c  ld   $0c
              57c5 00b8  ld   $b8
              57c6 006e  ld   $6e
              57c7 0085  ld   $85
              57c8 00e4  ld   $e4
              57c9 0063  ld   $63
              57ca 0021  ld   $21
              57cb 006c  ld   $6c
              57cc 002b  ld   $2b
              57cd 0044  ld   $44
              57ce 0063  ld   $63
              57cf 00ff  ld   $ff
              57d0 0075  ld   $75
              57d1 001a  ld   $1a
              57d2 0021  ld   $21
              57d3 0082  ld   $82
              57d4 00fc  ld   $fc
              57d5 002b  ld   $2b
              57d6 004e  ld   $4e
              57d7 0021  ld   $21
              57d8 004e  ld   $4e
              57d9 00e6  ld   $e6
              57da 0040  ld   $40
              57db 0035  ld   $35
              57dc 0056  ld   $56
              57dd 0087  ld   $87
              57de 0085  ld   $85
              57df 00c1  ld   $c1
              57e0 0005  ld   $05
              57e1 0011  ld   $11
              57e2 00e9  ld   $e9
              57e3 0002  ld   $02
              57e4 002b  ld   $2b
              57e5 0070  ld   $70
              57e6 0021  ld   $21
              57e7 004e  ld   $4e
              57e8 008c  ld   $8c
              57e9 0020  ld   $20
              57ea 0035  ld   $35
              57eb 0072  ld   $72
              57ec 0098  ld   $98
              57ed 0011  ld   $11
              57ee 00b1  ld   $b1
              57ef 000b  ld   $0b
              57f0 002b  ld   $2b
              57f1 0072  ld   $72
              57f2 0021  ld   $21
              57f3 004e  ld   $4e
              57f4 008c  ld   $8c
              57f5 0028  ld   $28
              57f6 0035  ld   $35
              57f7 0072  ld   $72
              57f8 00a4  ld   $a4
              57f9 0011  ld   $11
              57fa 00df  ld   $df
              57fb fe00  bra  ac          ;+-----------------------------------+
              57fc fcfd  bra  $57fd       ;|                                   |
              57fd 1418  ld   $18,y       ;| Trampoline for page $5700 lookups |
              57fe e006  jmp  y,$06       ;|                                   |
              57ff c218  st   [$18]       ;+-----------------------------------+
              5800 000b  ld   $0b
              5801 002b  ld   $2b
              5802 0072  ld   $72
              5803 0021  ld   $21
              5804 004e  ld   $4e
              5805 008c  ld   $8c
              5806 0038  ld   $38
              5807 0035  ld   $35
              5808 0072  ld   $72
              5809 00b0  ld   $b0
              580a 0011  ld   $11
              580b 0031  ld   $31
              580c 008a  ld   $8a
              580d 002b  ld   $2b
              580e 0072  ld   $72
              580f 0021  ld   $21
              5810 004e  ld   $4e
              5811 008c  ld   $8c
              5812 0040  ld   $40
              5813 0035  ld   $35
              5814 0072  ld   $72
              5815 00bc  ld   $bc
              5816 0011  ld   $11
              5817 0007  ld   $07
              5818 0059  ld   $59
              5819 002b  ld   $2b
              581a 0072  ld   $72
              581b 0085  ld   $85
              581c 0012  ld   $12
              581d 0006  ld   $06
              581e 0011  ld   $11
              581f 0018  ld   $18
              5820 000b  ld   $0b
              5821 002b  ld   $2b
              5822 0072  ld   $72
              5823 0021  ld   $21
              5824 004e  ld   $4e
              5825 008c  ld   $8c
              5826 00f0  ld   $f0
              5827 0035  ld   $35
              5828 003f  ld   $3f
              5829 00ce  ld   $ce
              582a 0085  ld   $85
              582b 00d8  ld   $d8
              582c 0005  ld   $05
              582d 0011  ld   $11
              582e 0000  ld   $00
              582f 0013  ld   $13
              5830 002b  ld   $2b
              5831 0072  ld   $72
              5832 0085  ld   $85
              5833 0012  ld   $12
              5834 0006  ld   $06
              5835 0021  ld   $21
              5836 004e  ld   $4e
              5837 008c  ld   $8c
              5838 00f8  ld   $f8
              5839 0035  ld   $35
              583a 003f  ld   $3f
              583b 00e0  ld   $e0
              583c 0085  ld   $85
              583d 0012  ld   $12
              583e 0006  ld   $06
              583f 0011  ld   $11
              5840 0070  ld   $70
              5841 005a  ld   $5a
              5842 00fc  ld   $fc
              5843 0030  ld   $30
              5844 0035  ld   $35
              5845 0072  ld   $72
              5846 00ed  ld   $ed
              5847 0011  ld   $11
              5848 0007  ld   $07
              5849 0059  ld   $59
              584a 002b  ld   $2b
              584b 0072  ld   $72
              584c 0011  ld   $11
              584d 0072  ld   $72
              584e 005a  ld   $5a
              584f 00fc  ld   $fc
              5850 0030  ld   $30
              5851 0035  ld   $35
              5852 003f  ld   $3f
              5853 00f8  ld   $f8
              5854 0085  ld   $85
              5855 0005  ld   $05
              5856 0006  ld   $06
              5857 0085  ld   $85
              5858 0000  ld   $00
              5859 0006  ld   $06
              585a 0006  ld   $06
              585b 0000  ld   $00
              585c 0037  ld   $37
              585d 0011  ld   $11
              585e 0007  ld   $07
              585f 0059  ld   $59
              5860 002b  ld   $2b
              5861 0072  ld   $72
              5862 0011  ld   $11
              5863 0072  ld   $72
              5864 005c  ld   $5c
              5865 00fc  ld   $fc
              5866 0030  ld   $30
              5867 0035  ld   $35
              5868 0072  ld   $72
              5869 0010  ld   $10
              586a 0011  ld   $11
              586b 0007  ld   $07
              586c 005b  ld   $5b
              586d 002b  ld   $2b
              586e 0072  ld   $72
              586f 0063  ld   $63
              5870 00ff  ld   $ff
              5871 0075  ld   $75
              5872 0011  ld   $11
              5873 00ef  ld   $ef
              5874 007c  ld   $7c
              5875 002b  ld   $2b
              5876 0082  ld   $82
              5877 0059  ld   $59
              5878 0003  ld   $03
              5879 00f0  ld   $f0
              587a 0082  ld   $82
              587b 0011  ld   $11
              587c 00a0  ld   $a0
              587d 007a  ld   $7a
              587e 00ad  ld   $ad
              587f 002b  ld   $2b
              5880 0074  ld   $74
              5881 0021  ld   $21
              5882 0074  ld   $74
              5883 0035  ld   $35
              5884 004d  ld   $4d
              5885 002a  ld   $2a
              5886 0085  ld   $85
              5887 00c3  ld   $c3
              5888 0008  ld   $08
              5889 0059  ld   $59
              588a 0001  ld   $01
              588b 002b  ld   $2b
              588c 005c  ld   $5c
              588d 0021  ld   $21
              588e 0074  ld   $74
              588f 00e3  ld   $e3
              5890 0001  ld   $01
              5891 0085  ld   $85
              5892 00a0  ld   $a0
              5893 0008  ld   $08
              5894 0006  ld   $06
              5895 0038  ld   $38
              5896 00c8  ld   $c8
              5897 00f1  ld   $f1
              5898 0079  ld   $79
              5899 00e2  ld   $e2
              589a 0079  ld   $79
              589b 00d3  ld   $d3
              589c 0079  ld   $79
              589d 00c4  ld   $c4
              589e 0079  ld   $79
              589f 00b5  ld   $b5
              58a0 0079  ld   $79
              58a1 00a6  ld   $a6
              58a2 0079  ld   $79
              58a3 00f1  ld   $f1
              58a4 0078  ld   $78
              58a5 00e2  ld   $e2
              58a6 0078  ld   $78
              58a7 00d3  ld   $d3
              58a8 0078  ld   $78
              58a9 00c4  ld   $c4
              58aa 0078  ld   $78
              58ab 00b5  ld   $b5
              58ac 0078  ld   $78
              58ad 00a6  ld   $a6
              58ae 0078  ld   $78
              58af 00f1  ld   $f1
              58b0 0077  ld   $77
              58b1 00e2  ld   $e2
              58b2 0077  ld   $77
              58b3 00d3  ld   $d3
              58b4 0077  ld   $77
              58b5 00c4  ld   $c4
              58b6 0077  ld   $77
              58b7 00b5  ld   $b5
              58b8 0077  ld   $77
              58b9 00a6  ld   $a6
              58ba 0077  ld   $77
              58bb 00f1  ld   $f1
              58bc 0076  ld   $76
              58bd 00e2  ld   $e2
              58be 0076  ld   $76
              58bf 00d3  ld   $d3
              58c0 0076  ld   $76
              58c1 00c4  ld   $c4
              58c2 0076  ld   $76
              58c3 00b5  ld   $b5
              58c4 0076  ld   $76
              58c5 00a6  ld   $a6
              58c6 0076  ld   $76
              58c7 00f1  ld   $f1
              58c8 0075  ld   $75
              58c9 00e2  ld   $e2
              58ca 0075  ld   $75
              58cb 00d3  ld   $d3
              58cc 0075  ld   $75
              58cd 00c4  ld   $c4
              58ce 0075  ld   $75
              58cf 00b5  ld   $b5
              58d0 0075  ld   $75
              58d1 00a6  ld   $a6
              58d2 0075  ld   $75
              58d3 00f1  ld   $f1
              58d4 0074  ld   $74
              58d5 00e2  ld   $e2
              58d6 0074  ld   $74
              58d7 00d3  ld   $d3
              58d8 0074  ld   $74
              58d9 00c4  ld   $c4
              58da 0074  ld   $74
              58db 00b5  ld   $b5
              58dc 0074  ld   $74
              58dd 00a6  ld   $a6
              58de 0074  ld   $74
              58df 00f1  ld   $f1
              58e0 0073  ld   $73
              58e1 00e2  ld   $e2
              58e2 0073  ld   $73
              58e3 00d3  ld   $d3
              58e4 0073  ld   $73
              58e5 00c4  ld   $c4
              58e6 0073  ld   $73
              58e7 00b5  ld   $b5
              58e8 0073  ld   $73
              58e9 00a6  ld   $a6
              58ea 0073  ld   $73
              58eb 00f1  ld   $f1
              58ec 0072  ld   $72
              58ed 00e2  ld   $e2
              58ee 0072  ld   $72
              58ef 00d3  ld   $d3
              58f0 0072  ld   $72
              58f1 00c4  ld   $c4
              58f2 0072  ld   $72
              58f3 00b5  ld   $b5
              58f4 0072  ld   $72
              58f5 00a6  ld   $a6
              58f6 0072  ld   $72
              58f7 00f1  ld   $f1
              58f8 0071  ld   $71
              58f9 00e2  ld   $e2
              58fa 0071  ld   $71
              58fb fe00  bra  ac          ;+-----------------------------------+
              58fc fcfd  bra  $58fd       ;|                                   |
              58fd 1418  ld   $18,y       ;| Trampoline for page $5800 lookups |
              58fe e006  jmp  y,$06       ;|                                   |
              58ff c218  st   [$18]       ;+-----------------------------------+
              5900 00d3  ld   $d3
              5901 0071  ld   $71
              5902 00c4  ld   $c4
              5903 0071  ld   $71
              5904 00b5  ld   $b5
              5905 0071  ld   $71
              5906 00a6  ld   $a6
              5907 0071  ld   $71
              5908 00f1  ld   $f1
              5909 0070  ld   $70
              590a 00e2  ld   $e2
              590b 0070  ld   $70
              590c 00d3  ld   $d3
              590d 0070  ld   $70
              590e 00c4  ld   $c4
              590f 0070  ld   $70
              5910 00b5  ld   $b5
              5911 0070  ld   $70
              5912 00a6  ld   $a6
              5913 0070  ld   $70
              5914 00f1  ld   $f1
              5915 006f  ld   $6f
              5916 00e2  ld   $e2
              5917 006f  ld   $6f
              5918 00d3  ld   $d3
              5919 006f  ld   $6f
              591a 00c4  ld   $c4
              591b 006f  ld   $6f
              591c 00b5  ld   $b5
              591d 006f  ld   $6f
              591e 00a6  ld   $a6
              591f 006f  ld   $6f
              5920 00f1  ld   $f1
              5921 006e  ld   $6e
              5922 00e2  ld   $e2
              5923 006e  ld   $6e
              5924 00d3  ld   $d3
              5925 006e  ld   $6e
              5926 00c4  ld   $c4
              5927 006e  ld   $6e
              5928 00b5  ld   $b5
              5929 006e  ld   $6e
              592a 00a6  ld   $a6
              592b 006e  ld   $6e
              592c 00f1  ld   $f1
              592d 006d  ld   $6d
              592e 00e2  ld   $e2
              592f 006d  ld   $6d
              5930 00d3  ld   $d3
              5931 006d  ld   $6d
              5932 00c4  ld   $c4
              5933 006d  ld   $6d
              5934 00b5  ld   $b5
              5935 006d  ld   $6d
              5936 00a6  ld   $a6
              5937 006d  ld   $6d
              5938 00f1  ld   $f1
              5939 006c  ld   $6c
              593a 00e2  ld   $e2
              593b 006c  ld   $6c
              593c 00d3  ld   $d3
              593d 006c  ld   $6c
              593e 00c4  ld   $c4
              593f 006c  ld   $6c
              5940 00b5  ld   $b5
              5941 006c  ld   $6c
              5942 00a6  ld   $a6
              5943 006c  ld   $6c
              5944 00f1  ld   $f1
              5945 006b  ld   $6b
              5946 00e2  ld   $e2
              5947 006b  ld   $6b
              5948 00d3  ld   $d3
              5949 006b  ld   $6b
              594a 00c4  ld   $c4
              594b 006b  ld   $6b
              594c 00b5  ld   $b5
              594d 006b  ld   $6b
              594e 00a6  ld   $a6
              594f 006b  ld   $6b
              5950 00f1  ld   $f1
              5951 006a  ld   $6a
              5952 00e2  ld   $e2
              5953 006a  ld   $6a
              5954 00d3  ld   $d3
              5955 006a  ld   $6a
              5956 00c4  ld   $c4
              5957 006a  ld   $6a
              5958 00b5  ld   $b5
              5959 006a  ld   $6a
              595a 00a6  ld   $a6
              595b 006a  ld   $6a
              595c 00f1  ld   $f1
              595d 0069  ld   $69
              595e 00e2  ld   $e2
              595f 0069  ld   $69
              5960 00d3  ld   $d3
              5961 0069  ld   $69
              5962 00c4  ld   $c4
              5963 0069  ld   $69
              5964 0008  ld   $08
              5965 00a0  ld   $a0
              5966 005e  ld   $5e
              5967 002b  ld   $2b
              5968 00b0  ld   $b0
              5969 0059  ld   $59
              596a 0001  ld   $01
              596b 002b  ld   $2b
              596c 00b2  ld   $b2
              596d 0011  ld   $11
              596e 00ef  ld   $ef
              596f 007c  ld   $7c
              5970 0099  ld   $99
              5971 005c  ld   $5c
              5972 002b  ld   $2b
              5973 00e8  ld   $e8
              5974 0011  ld   $11
              5975 00a0  ld   $a0
              5976 007a  ld   $7a
              5977 0099  ld   $99
              5978 005c  ld   $5c
              5979 00ad  ld   $ad
              597a 00f0  ld   $f0
              597b 00e8  ld   $e8
              597c 0021  ld   $21
              597d 005c  ld   $5c
              597e 0099  ld   $99
              597f 00b2  ld   $b2
              5980 002b  ld   $2b
              5981 005c  ld   $5c
              5982 00b8  ld   $b8
              5983 00b0  ld   $b0
              5984 0035  ld   $35
              5985 0056  ld   $56
              5986 00a4  ld   $a4
              5987 0085  ld   $85
              5988 00cc  ld   $cc
              5989 0008  ld   $08
              598a 0011  ld   $11
              598b 00f0  ld   $f0
              598c 007c  ld   $7c
              598d 002b  ld   $2b
              598e 0082  ld   $82
              598f 0059  ld   $59
              5990 0000  ld   $00
              5991 00f0  ld   $f0
              5992 0082  ld   $82
              5993 0059  ld   $59
              5994 0001  ld   $01
              5995 0099  ld   $99
              5996 0074  ld   $74
              5997 00e3  ld   $e3
              5998 0001  ld   $01
              5999 002b  ld   $2b
              599a 0034  ld   $34
              599b 0085  ld   $85
              599c 001f  ld   $1f
              599d 0003  ld   $03
              599e 0085  ld   $85
              599f 00a5  ld   $a5
              59a0 000d  ld   $0d
              59a1 0011  ld   $11
              59a2 00fe  ld   $fe
              59a3 007c  ld   $7c
              59a4 002b  ld   $2b
              59a5 0084  ld   $84
              59a6 0011  ld   $11
              59a7 00a0  ld   $a0
              59a8 007a  ld   $7a
              59a9 0085  ld   $85
              59aa 00d2  ld   $d2
              59ab 0061  ld   $61
              59ac 0063  ld   $63
              59ad 00ff  ld   $ff
              59ae 0075  ld   $75
              59af 0085  ld   $85
              59b0 00c2  ld   $c2
              59b1 000d  ld   $0d
              59b2 0011  ld   $11
              59b3 00ef  ld   $ef
              59b4 007c  ld   $7c
              59b5 002b  ld   $2b
              59b6 0082  ld   $82
              59b7 0059  ld   $59
              59b8 0002  ld   $02
              59b9 00f0  ld   $f0
              59ba 0082  ld   $82
              59bb 0021  ld   $21
              59bc 0044  ld   $44
              59bd 002b  ld   $2b
              59be 0084  ld   $84
              59bf 0011  ld   $11
              59c0 00a0  ld   $a0
              59c1 007d  ld   $7d
              59c2 0085  ld   $85
              59c3 00a0  ld   $a0
              59c4 0009  ld   $09
              59c5 0009  ld   $09
              59c6 00a0  ld   $a0
              59c7 005f  ld   $5f
              59c8 0085  ld   $85
              59c9 00d2  ld   $d2
              59ca 0061  ld   $61
              59cb 0011  ld   $11
              59cc 00a0  ld   $a0
              59cd 007d  ld   $7d
              59ce 00ad  ld   $ad
              59cf 002b  ld   $2b
              59d0 0074  ld   $74
              59d1 0059  ld   $59
              59d2 0001  ld   $01
              59d3 002b  ld   $2b
              59d4 005c  ld   $5c
              59d5 0021  ld   $21
              59d6 0074  ld   $74
              59d7 00e3  ld   $e3
              59d8 0001  ld   $01
              59d9 002b  ld   $2b
              59da 00b0  ld   $b0
              59db 0059  ld   $59
              59dc 0001  ld   $01
              59dd 002b  ld   $2b
              59de 00b2  ld   $b2
              59df 0011  ld   $11
              59e0 00ef  ld   $ef
              59e1 007c  ld   $7c
              59e2 0099  ld   $99
              59e3 005c  ld   $5c
              59e4 002b  ld   $2b
              59e5 00e8  ld   $e8
              59e6 0011  ld   $11
              59e7 00a0  ld   $a0
              59e8 007d  ld   $7d
              59e9 0099  ld   $99
              59ea 005c  ld   $5c
              59eb 00ad  ld   $ad
              59ec 00f0  ld   $f0
              59ed 00e8  ld   $e8
              59ee 0021  ld   $21
              59ef 005c  ld   $5c
              59f0 0099  ld   $99
              59f1 00b2  ld   $b2
              59f2 002b  ld   $2b
              59f3 005c  ld   $5c
              59f4 00b8  ld   $b8
              59f5 00b0  ld   $b0
              59f6 0035  ld   $35
              59f7 0056  ld   $56
              59f8 00b5  ld   $b5
              59f9 0011  ld   $11
              59fa 0020  ld   $20
              59fb fe00  bra  ac          ;+-----------------------------------+
              59fc fcfd  bra  $59fd       ;|                                   |
              59fd 1418  ld   $18,y       ;| Trampoline for page $5900 lookups |
              59fe e006  jmp  y,$06       ;|                                   |
              59ff c218  st   [$18]       ;+-----------------------------------+
              5a00 000f  ld   $0f
              5a01 002b  ld   $2b
              5a02 00a2  ld   $a2
              5a03 0085  ld   $85
              5a04 00a3  ld   $a3
              5a05 0066  ld   $66
              5a06 0085  ld   $85
              5a07 00cd  ld   $cd
              5a08 0064  ld   $64
              5a09 0059  ld   $59
              5a0a 0001  ld   $01
              5a0b 0099  ld   $99
              5a0c 0074  ld   $74
              5a0d 00e3  ld   $e3
              5a0e 0001  ld   $01
              5a0f 002b  ld   $2b
              5a10 0034  ld   $34
              5a11 0085  ld   $85
              5a12 001f  ld   $1f
              5a13 0003  ld   $03
              5a14 0021  ld   $21
              5a15 0030  ld   $30
              5a16 002b  ld   $2b
              5a17 0024  ld   $24
              5a18 0011  ld   $11
              5a19 0000  ld   $00
              5a1a 0002  ld   $02
              5a1b 0085  ld   $85
              5a1c 00a0  ld   $a0
              5a1d 0064  ld   $64
              5a1e 0063  ld   $63
              5a1f 00ff  ld   $ff
              5a20 0075  ld   $75
              5a21 001a  ld   $1a
              5a22 000f  ld   $0f
              5a23 002b  ld   $2b
              5a24 0076  ld   $76
              5a25 0021  ld   $21
              5a26 0076  ld   $76
              5a27 00fc  ld   $fc
              5a28 004c  ld   $4c
              5a29 0085  ld   $85
              5a2a 00a0  ld   $a0
              5a2b 000a  ld   $0a
              5a2c 000a  ld   $0a
              5a2d 00a0  ld   $a0
              5a2e 005e  ld   $5e
              5a2f 0035  ld   $35
              5a30 003f  ld   $3f
              5a31 00b4  ld   $b4
              5a32 0059  ld   $59
              5a33 0000  ld   $00
              5a34 002b  ld   $2b
              5a35 004a  ld   $4a
              5a36 0021  ld   $21
              5a37 0076  ld   $76
              5a38 002b  ld   $2b
              5a39 004c  ld   $4c
              5a3a 0021  ld   $21
              5a3b 0076  ld   $76
              5a3c 002b  ld   $2b
              5a3d 0082  ld   $82
              5a3e 0059  ld   $59
              5a3f 0000  ld   $00
              5a40 002b  ld   $2b
              5a41 0084  ld   $84
              5a42 0085  ld   $85
              5a43 00cd  ld   $cd
              5a44 0065  ld   $65
              5a45 0021  ld   $21
              5a46 004a  ld   $4a
              5a47 00e6  ld   $e6
              5a48 0014  ld   $14
              5a49 0035  ld   $35
              5a4a 004d  ld   $4d
              5a4b 00be  ld   $be
              5a4c 0085  ld   $85
              5a4d 00da  ld   $da
              5a4e 000a  ld   $0a
              5a4f 0021  ld   $21
              5a50 004a  ld   $4a
              5a51 002b  ld   $2b
              5a52 00a0  ld   $a0
              5a53 0085  ld   $85
              5a54 00a0  ld   $a0
              5a55 0067  ld   $67
              5a56 0082  ld   $82
              5a57 0001  ld   $01
              5a58 0035  ld   $35
              5a59 0072  ld   $72
              5a5a 00cd  ld   $cd
              5a5b 0085  ld   $85
              5a5c 00da  ld   $da
              5a5d 000a  ld   $0a
              5a5e 0021  ld   $21
              5a5f 0076  ld   $76
              5a60 002b  ld   $2b
              5a61 0082  ld   $82
              5a62 0059  ld   $59
              5a63 0000  ld   $00
              5a64 002b  ld   $2b
              5a65 0084  ld   $84
              5a66 0085  ld   $85
              5a67 00cd  ld   $cd
              5a68 0065  ld   $65
              5a69 0063  ld   $63
              5a6a 00ff  ld   $ff
              5a6b 0075  ld   $75
              5a6c 0085  ld   $85
              5a6d 00ae  ld   $ae
              5a6e 000c  ld   $0c
              5a6f 0063  ld   $63
              5a70 00ff  ld   $ff
              5a71 0075  ld   $75
              5a72 0085  ld   $85
              5a73 00ae  ld   $ae
              5a74 000c  ld   $0c
              5a75 0063  ld   $63
              5a76 00ff  ld   $ff
              5a77 0075  ld   $75
              5a78 0021  ld   $21
              5a79 003a  ld   $3a
              5a7a 00e3  ld   $e3
              5a7b 000f  ld   $0f
              5a7c 002b  ld   $2b
              5a7d 003a  ld   $3a
              5a7e 0021  ld   $21
              5a7f 0038  ld   $38
              5a80 00e6  ld   $e6
              5a81 000f  ld   $0f
              5a82 002b  ld   $2b
              5a83 00e8  ld   $e8
              5a84 0021  ld   $21
              5a85 003a  ld   $3a
              5a86 002b  ld   $2b
              5a87 0082  ld   $82
              5a88 0021  ld   $21
              5a89 00e8  ld   $e8
              5a8a 0085  ld   $85
              5a8b 00a0  ld   $a0
              5a8c 000b  ld   $0b
              5a8d 000b  ld   $0b
              5a8e 00a0  ld   $a0
              5a8f 005e  ld   $5e
              5a90 0085  ld   $85
              5a91 00ac  ld   $ac
              5a92 0062  ld   $62
              5a93 002b  ld   $2b
              5a94 0082  ld   $82
              5a95 0059  ld   $59
              5a96 0000  ld   $00
              5a97 0085  ld   $85
              5a98 00f0  ld   $f0
              5a99 0061  ld   $61
              5a9a 002b  ld   $2b
              5a9b 003a  ld   $3a
              5a9c 0085  ld   $85
              5a9d 00e0  ld   $e0
              5a9e 0003  ld   $03
              5a9f 0063  ld   $63
              5aa0 00ff  ld   $ff
              5aa1 0075  ld   $75
              5aa2 0021  ld   $21
              5aa3 003a  ld   $3a
              5aa4 00e6  ld   $e6
              5aa5 000f  ld   $0f
              5aa6 002b  ld   $2b
              5aa7 003a  ld   $3a
              5aa8 0021  ld   $21
              5aa9 003a  ld   $3a
              5aaa 002b  ld   $2b
              5aab 0082  ld   $82
              5aac 0059  ld   $59
              5aad 0000  ld   $00
              5aae 0085  ld   $85
              5aaf 00f0  ld   $f0
              5ab0 0061  ld   $61
              5ab1 002b  ld   $2b
              5ab2 003a  ld   $3a
              5ab3 0085  ld   $85
              5ab4 00e0  ld   $e0
              5ab5 0003  ld   $03
              5ab6 0063  ld   $63
              5ab7 00ff  ld   $ff
              5ab8 0075  ld   $75
              5ab9 0093  ld   $93
              5aba 003c  ld   $3c
              5abb 0021  ld   $21
              5abc 0038  ld   $38
              5abd 00e6  ld   $e6
              5abe 0001  ld   $01
              5abf 002b  ld   $2b
              5ac0 0082  ld   $82
              5ac1 0059  ld   $59
              5ac2 000e  ld   $0e
              5ac3 0085  ld   $85
              5ac4 00ac  ld   $ac
              5ac5 0062  ld   $62
              5ac6 002b  ld   $2b
              5ac7 00ea  ld   $ea
              5ac8 0021  ld   $21
              5ac9 003c  ld   $3c
              5aca 00b8  ld   $b8
              5acb 00ea  ld   $ea
              5acc 0035  ld   $35
              5acd 0056  ld   $56
              5ace 00e1  ld   $e1
              5acf 0059  ld   $59
              5ad0 0000  ld   $00
              5ad1 002b  ld   $2b
              5ad2 003c  ld   $3c
              5ad3 0085  ld   $85
              5ad4 00a4  ld   $a4
              5ad5 0004  ld   $04
              5ad6 0063  ld   $63
              5ad7 00ff  ld   $ff
              5ad8 0075  ld   $75
              5ad9 0021  ld   $21
              5ada 003c  ld   $3c
              5adb 00e6  ld   $e6
              5adc 0001  ld   $01
              5add 002b  ld   $2b
              5ade 003c  ld   $3c
              5adf 0021  ld   $21
              5ae0 003c  ld   $3c
              5ae1 0035  ld   $35
              5ae2 0050  ld   $50
              5ae3 00f5  ld   $f5
              5ae4 0085  ld   $85
              5ae5 00a9  ld   $a9
              5ae6 000c  ld   $0c
              5ae7 0021  ld   $21
              5ae8 0038  ld   $38
              5ae9 00e6  ld   $e6
              5aea 0001  ld   $01
              5aeb 0085  ld   $85
              5aec 00a0  ld   $a0
              5aed 000c  ld   $0c
              5aee 000c  ld   $0c
              5aef 00a0  ld   $a0
              5af0 005e  ld   $5e
              5af1 002b  ld   $2b
              5af2 0082  ld   $82
              5af3 0059  ld   $59
              5af4 000e  ld   $0e
              5af5 0085  ld   $85
              5af6 00ac  ld   $ac
              5af7 0062  ld   $62
              5af8 002b  ld   $2b
              5af9 003c  ld   $3c
              5afa 0085  ld   $85
              5afb fe00  bra  ac          ;+-----------------------------------+
              5afc fcfd  bra  $5afd       ;|                                   |
              5afd 1418  ld   $18,y       ;| Trampoline for page $5a00 lookups |
              5afe e006  jmp  y,$06       ;|                                   |
              5aff c218  st   [$18]       ;+-----------------------------------+
              5b00 00a4  ld   $a4
              5b01 0004  ld   $04
              5b02 0063  ld   $63
              5b03 00ff  ld   $ff
              5b04 0075  ld   $75
              5b05 0021  ld   $21
              5b06 0044  ld   $44
              5b07 00e6  ld   $e6
              5b08 0001  ld   $01
              5b09 00ad  ld   $ad
              5b0a 002b  ld   $2b
              5b0b 0078  ld   $78
              5b0c 0021  ld   $21
              5b0d 0078  ld   $78
              5b0e 008c  ld   $8c
              5b0f 0001  ld   $01
              5b10 0035  ld   $35
              5b11 003f  ld   $3f
              5b12 00be  ld   $be
              5b13 0085  ld   $85
              5b14 00ca  ld   $ca
              5b15 000c  ld   $0c
              5b16 0059  ld   $59
              5b17 0000  ld   $00
              5b18 002b  ld   $2b
              5b19 0046  ld   $46
              5b1a 0085  ld   $85
              5b1b 00e7  ld   $e7
              5b1c 0008  ld   $08
              5b1d 0085  ld   $85
              5b1e 00a3  ld   $a3
              5b1f 000d  ld   $0d
              5b20 0021  ld   $21
              5b21 0078  ld   $78
              5b22 008c  ld   $8c
              5b23 0002  ld   $02
              5b24 0035  ld   $35
              5b25 003f  ld   $3f
              5b26 00d2  ld   $d2
              5b27 0085  ld   $85
              5b28 00e5  ld   $e5
              5b29 000c  ld   $0c
              5b2a 0059  ld   $59
              5b2b 0001  ld   $01
              5b2c 002b  ld   $2b
              5b2d 0046  ld   $46
              5b2e 0021  ld   $21
              5b2f 0044  ld   $44
              5b30 002b  ld   $2b
              5b31 0084  ld   $84
              5b32 0011  ld   $11
              5b33 00a0  ld   $a0
              5b34 007a  ld   $7a
              5b35 0085  ld   $85
              5b36 00d2  ld   $d2
              5b37 0061  ld   $61
              5b38 0085  ld   $85
              5b39 00a3  ld   $a3
              5b3a 000d  ld   $0d
              5b3b 0021  ld   $21
              5b3c 0078  ld   $78
              5b3d 008c  ld   $8c
              5b3e 0003  ld   $03
              5b3f 0035  ld   $35
              5b40 003f  ld   $3f
              5b41 00ed  ld   $ed
              5b42 0085  ld   $85
              5b43 00a3  ld   $a3
              5b44 000d  ld   $0d
              5b45 0059  ld   $59
              5b46 0002  ld   $02
              5b47 002b  ld   $2b
              5b48 0046  ld   $46
              5b49 0011  ld   $11
              5b4a 00fe  ld   $fe
              5b4b 007c  ld   $7c
              5b4c 002b  ld   $2b
              5b4d 0084  ld   $84
              5b4e 0011  ld   $11
              5b4f 00a0  ld   $a0
              5b50 007a  ld   $7a
              5b51 0085  ld   $85
              5b52 00a0  ld   $a0
              5b53 000d  ld   $0d
              5b54 000d  ld   $0d
              5b55 00a0  ld   $a0
              5b56 005f  ld   $5f
              5b57 0085  ld   $85
              5b58 00d2  ld   $d2
              5b59 0061  ld   $61
              5b5a 0063  ld   $63
              5b5b 00ff  ld   $ff
              5b5c 0075  ld   $75
              5b5d 0021  ld   $21
              5b5e 0072  ld   $72
              5b5f 002b  ld   $2b
              5b60 0022  ld   $22
              5b61 0059  ld   $59
              5b62 0048  ld   $48
              5b63 002b  ld   $2b
              5b64 0024  ld   $24
              5b65 0059  ld   $59
              5b66 00cf  ld   $cf
              5b67 005e  ld   $5e
              5b68 0027  ld   $27
              5b69 00b4  ld   $b4
              5b6a 00fe  ld   $fe
              5b6b 001a  ld   $1a
              5b6c 0048  ld   $48
              5b6d 0035  ld   $35
              5b6e 0072  ld   $72
              5b6f 00a8  ld   $a8
              5b70 0059  ld   $59
              5b71 0002  ld   $02
              5b72 002b  ld   $2b
              5b73 0082  ld   $82
              5b74 0085  ld   $85
              5b75 00cc  ld   $cc
              5b76 0063  ld   $63
              5b77 0063  ld   $63
              5b78 00ff  ld   $ff
              5b79 0075  ld   $75
              5b7a 0059  ld   $59
              5b7b 0001  ld   $01
              5b7c 002b  ld   $2b
              5b7d 0034  ld   $34
              5b7e 0011  ld   $11
              5b7f 00ef  ld   $ef
              5b80 007c  ld   $7c
              5b81 002b  ld   $2b
              5b82 0082  ld   $82
              5b83 0059  ld   $59
              5b84 0006  ld   $06
              5b85 00f0  ld   $f0
              5b86 0082  ld   $82
              5b87 0085  ld   $85
              5b88 001f  ld   $1f
              5b89 0003  ld   $03
              5b8a 0085  ld   $85
              5b8b 00b7  ld   $b7
              5b8c 0061  ld   $61
              5b8d 0063  ld   $63
              5b8e 00ff  ld   $ff
              5b8f 0075  ld   $75
              5b90 0059  ld   $59
              5b91 0001  ld   $01
              5b92 002b  ld   $2b
              5b93 0034  ld   $34
              5b94 0011  ld   $11
              5b95 00ef  ld   $ef
              5b96 007c  ld   $7c
              5b97 002b  ld   $2b
              5b98 0082  ld   $82
              5b99 0059  ld   $59
              5b9a 0001  ld   $01
              5b9b 00f0  ld   $f0
              5b9c 0082  ld   $82
              5b9d 0085  ld   $85
              5b9e 001f  ld   $1f
              5b9f 0003  ld   $03
              5ba0 0063  ld   $63
              5ba1 00ff  ld   $ff
              5ba2 0075  ld   $75
              5ba3 0059  ld   $59
              5ba4 0001  ld   $01
              5ba5 002b  ld   $2b
              5ba6 0034  ld   $34
              5ba7 0011  ld   $11
              5ba8 00ef  ld   $ef
              5ba9 007c  ld   $7c
              5baa 002b  ld   $2b
              5bab 0082  ld   $82
              5bac 0059  ld   $59
              5bad 0004  ld   $04
              5bae 00f0  ld   $f0
              5baf 0082  ld   $82
              5bb0 0085  ld   $85
              5bb1 001f  ld   $1f
              5bb2 0003  ld   $03
              5bb3 0085  ld   $85
              5bb4 00a0  ld   $a0
              5bb5 000e  ld   $0e
              5bb6 000e  ld   $0e
              5bb7 00a0  ld   $a0
              5bb8 003e  ld   $3e
              5bb9 0063  ld   $63
              5bba 00ff  ld   $ff
              5bbb 0075  ld   $75
              5bbc 0059  ld   $59
              5bbd 0001  ld   $01
              5bbe 002b  ld   $2b
              5bbf 0034  ld   $34
              5bc0 0011  ld   $11
              5bc1 00ef  ld   $ef
              5bc2 007c  ld   $7c
              5bc3 002b  ld   $2b
              5bc4 0082  ld   $82
              5bc5 0059  ld   $59
              5bc6 0005  ld   $05
              5bc7 00f0  ld   $f0
              5bc8 0082  ld   $82
              5bc9 0085  ld   $85
              5bca 001f  ld   $1f
              5bcb 0003  ld   $03
              5bcc 0085  ld   $85
              5bcd 00a5  ld   $a5
              5bce 000d  ld   $0d
              5bcf 0063  ld   $63
              5bd0 00ff  ld   $ff
              5bd1 0075  ld   $75
              5bd2 0059  ld   $59
              5bd3 0034  ld   $34
              5bd4 002b  ld   $2b
              5bd5 009c  ld   $9c
              5bd6 0085  ld   $85
              5bd7 00a4  ld   $a4
              5bd8 0063  ld   $63
              5bd9 0085  ld   $85
              5bda 0078  ld   $78
              5bdb 0005  ld   $05
              5bdc 0011  ld   $11
              5bdd 00ef  ld   $ef
              5bde 007c  ld   $7c
              5bdf 002b  ld   $2b
              5be0 0032  ld   $32
              5be1 0059  ld   $59
              5be2 0002  ld   $02
              5be3 002b  ld   $2b
              5be4 0082  ld   $82
              5be5 0085  ld   $85
              5be6 00c8  ld   $c8
              5be7 0061  ld   $61
              5be8 0011  ld   $11
              5be9 0020  ld   $20
              5bea 003f  ld   $3f
              5beb 002b  ld   $2b
              5bec 00a2  ld   $a2
              5bed 0085  ld   $85
              5bee 00a3  ld   $a3
              5bef 0066  ld   $66
              5bf0 0085  ld   $85
              5bf1 00cd  ld   $cd
              5bf2 0064  ld   $64
              5bf3 0063  ld   $63
              5bf4 00ff  ld   $ff
              5bf5 00b4  ld   $b4
              5bf6 0080  ld   $80
              5bf7 0061  ld   $61
              5bf8 00b7  ld   $b7
              5bf9 0048  ld   $48
              5bfa 001a  ld   $1a
              5bfb fe00  bra  ac          ;+-----------------------------------+
              5bfc fcfd  bra  $5bfd       ;|                                   |
              5bfd 1418  ld   $18,y       ;| Trampoline for page $5b00 lookups |
              5bfe e006  jmp  y,$06       ;|                                   |
              5bff c218  st   [$18]       ;+-----------------------------------+
              5c00 0009  ld   $09
              5c01 008c  ld   $8c
              5c02 00ee  ld   $ee
              5c03 0035  ld   $35
              5c04 0072  ld   $72
              5c05 00b5  ld   $b5
              5c06 00ff  ld   $ff
              5c07 0059  ld   $59
              5c08 00ef  ld   $ef
              5c09 002b  ld   $2b
              5c0a 0022  ld   $22
              5c0b 0021  ld   $21
              5c0c 0082  ld   $82
              5c0d 00b4  ld   $b4
              5c0e 00e6  ld   $e6
              5c0f 00ff  ld   $ff
              5c10 0011  ld   $11
              5c11 0000  ld   $00
              5c12 000b  ld   $0b
              5c13 002b  ld   $2b
              5c14 0022  ld   $22
              5c15 0021  ld   $21
              5c16 0082  ld   $82
              5c17 00b4  ld   $b4
              5c18 00e6  ld   $e6
              5c19 00ff  ld   $ff
              5c1a 002b  ld   $2b
              5c1b 0086  ld   $86
              5c1c 0021  ld   $21
              5c1d 0084  ld   $84
              5c1e 00ad  ld   $ad
              5c1f 00f0  ld   $f0
              5c20 0086  ld   $86
              5c21 0093  ld   $93
              5c22 0084  ld   $84
              5c23 0093  ld   $93
              5c24 0086  ld   $86
              5c25 0035  ld   $35
              5c26 0072  ld   $72
              5c27 00d2  ld   $d2
              5c28 00ff  ld   $ff
              5c29 0075  ld   $75
              5c2a 0085  ld   $85
              5c2b 00a0  ld   $a0
              5c2c 0062  ld   $62
              5c2d 0011  ld   $11
              5c2e 0003  ld   $03
              5c2f 000b  ld   $0b
              5c30 002b  ld   $2b
              5c31 0022  ld   $22
              5c32 001a  ld   $1a
              5c33 00a2  ld   $a2
              5c34 005e  ld   $5e
              5c35 0025  ld   $25
              5c36 0063  ld   $63
              5c37 00ff  ld   $ff
              5c38 002b  ld   $2b
              5c39 0084  ld   $84
              5c3a 0021  ld   $21
              5c3b 0082  ld   $82
              5c3c 00b8  ld   $b8
              5c3d 0084  ld   $84
              5c3e 0035  ld   $35
              5c3f 0053  ld   $53
              5c40 00fa  ld   $fa
              5c41 0021  ld   $21
              5c42 0084  ld   $84
              5c43 00ff  ld   $ff
              5c44 0021  ld   $21
              5c45 0082  ld   $82
              5c46 00ff  ld   $ff
              5c47 0062  ld   $62
              5c48 00a0  ld   $a0
              5c49 005f  ld   $5f
              5c4a 0059  ld   $59
              5c4b 0002  ld   $02
              5c4c 002b  ld   $2b
              5c4d 00a4  ld   $a4
              5c4e 0011  ld   $11
              5c4f 00fd  ld   $fd
              5c50 00ff  ld   $ff
              5c51 00f8  ld   $f8
              5c52 00aa  ld   $aa
              5c53 002b  ld   $2b
              5c54 00aa  ld   $aa
              5c55 00ff  ld   $ff
              5c56 002b  ld   $2b
              5c57 0084  ld   $84
              5c58 0021  ld   $21
              5c59 0082  ld   $82
              5c5a 00b8  ld   $b8
              5c5b 0084  ld   $84
              5c5c 0035  ld   $35
              5c5d 0056  ld   $56
              5c5e 00b6  ld   $b6
              5c5f 0021  ld   $21
              5c60 0084  ld   $84
              5c61 00ff  ld   $ff
              5c62 0021  ld   $21
              5c63 0082  ld   $82
              5c64 00ff  ld   $ff
              5c65 0011  ld   $11
              5c66 00e1  ld   $e1
              5c67 0004  ld   $04
              5c68 002b  ld   $2b
              5c69 0022  ld   $22
              5c6a 0021  ld   $21
              5c6b 00a2  ld   $a2
              5c6c 002b  ld   $2b
              5c6d 0024  ld   $24
              5c6e 001a  ld   $1a
              5c6f 00a5  ld   $a5
              5c70 00e9  ld   $e9
              5c71 0093  ld   $93
              5c72 0019  ld   $19
              5c73 00ad  ld   $ad
              5c74 005e  ld   $5e
              5c75 0029  ld   $29
              5c76 001a  ld   $1a
              5c77 00a4  ld   $a4
              5c78 005e  ld   $5e
              5c79 0028  ld   $28
              5c7a 00ff  ld   $ff
              5c7b 0075  ld   $75
              5c7c 002b  ld   $2b
              5c7d 0082  ld   $82
              5c7e 0085  ld   $85
              5c7f 00bb  ld   $bb
              5c80 0062  ld   $62
              5c81 0093  ld   $93
              5c82 0082  ld   $82
              5c83 0021  ld   $21
              5c84 0082  ld   $82
              5c85 00ad  ld   $ad
              5c86 0035  ld   $35
              5c87 003f  ld   $3f
              5c88 00e4  ld   $e4
              5c89 005e  ld   $5e
              5c8a 0092  ld   $92
              5c8b 0085  ld   $85
              5c8c 00ab  ld   $ab
              5c8d 0068  ld   $68
              5c8e 0090  ld   $90
              5c8f 00d5  ld   $d5
              5c90 0063  ld   $63
              5c91 00ff  ld   $ff
              5c92 001a  ld   $1a
              5c93 0021  ld   $21
              5c94 0082  ld   $82
              5c95 00fc  ld   $fc
              5c96 00b8  ld   $b8
              5c97 0082  ld   $82
              5c98 0035  ld   $35
              5c99 0053  ld   $53
              5c9a 00fc  ld   $fc
              5c9b 0011  ld   $11
              5c9c 0050  ld   $50
              5c9d 0044  ld   $44
              5c9e 002b  ld   $2b
              5c9f 0084  ld   $84
              5ca0 001a  ld   $1a
              5ca1 0086  ld   $86
              5ca2 00f0  ld   $f0
              5ca3 0084  ld   $84
              5ca4 0093  ld   $93
              5ca5 0086  ld   $86
              5ca6 0090  ld   $90
              5ca7 00f4  ld   $f4
              5ca8 00ff  ld   $ff
              5ca9 0063  ld   $63
              5caa 00a4  ld   $a4
              5cab 005b  ld   $5b
              5cac 0059  ld   $59
              5cad 0000  ld   $00
              5cae 00f3  ld   $f3
              5caf 009c  ld   $9c
              5cb0 0093  ld   $93
              5cb1 009c  ld   $9c
              5cb2 0093  ld   $93
              5cb3 009c  ld   $9c
              5cb4 001a  ld   $1a
              5cb5 009c  ld   $9c
              5cb6 008c  ld   $8c
              5cb7 0080  ld   $80
              5cb8 0035  ld   $35
              5cb9 0072  ld   $72
              5cba 00a2  ld   $a2
              5cbb 00ff  ld   $ff
              5cbc 001a  ld   $1a
              5cbd 00a4  ld   $a4
              5cbe 00e3  ld   $e3
              5cbf 0006  ld   $06
              5cc0 005e  ld   $5e
              5cc1 00a4  ld   $a4
              5cc2 00e6  ld   $e6
              5cc3 009a  ld   $9a
              5cc4 0035  ld   $35
              5cc5 0056  ld   $56
              5cc6 00c9  ld   $c9
              5cc7 0059  ld   $59
              5cc8 0004  ld   $04
              5cc9 00f8  ld   $f8
              5cca 00aa  ld   $aa
              5ccb 0035  ld   $35
              5ccc 0072  ld   $72
              5ccd 00c9  ld   $c9
              5cce 0075  ld   $75
              5ccf 0085  ld   $85
              5cd0 00aa  ld   $aa
              5cd1 0067  ld   $67
              5cd2 0063  ld   $63
              5cd3 00ff  ld   $ff
              5cd4 0075  ld   $75
              5cd5 0021  ld   $21
              5cd6 0082  ld   $82
              5cd7 00e6  ld   $e6
              5cd8 0001  ld   $01
              5cd9 002b  ld   $2b
              5cda 0082  ld   $82
              5cdb 0035  ld   $35
              5cdc 0053  ld   $53
              5cdd 00d6  ld   $d6
              5cde 0063  ld   $63
              5cdf 00ff  ld   $ff
              5ce0 0085  ld   $85
              5ce1 00b7  ld   $b7
              5ce2 0061  ld   $61
              5ce3 001a  ld   $1a
              5ce4 0009  ld   $09
              5ce5 008c  ld   $8c
              5ce6 00ee  ld   $ee
              5ce7 0035  ld   $35
              5ce8 003f  ld   $3f
              5ce9 00d9  ld   $d9
              5cea 0090  ld   $90
              5ceb 00cb  ld   $cb
              5cec 0075  ld   $75
              5ced 0035  ld   $35
              5cee 003f  ld   $3f
              5cef 00fb  ld   $fb
              5cf0 005e  ld   $5e
              5cf1 0084  ld   $84
              5cf2 0085  ld   $85
              5cf3 00bb  ld   $bb
              5cf4 0062  ld   $62
              5cf5 0059  ld   $59
              5cf6 0020  ld   $20
              5cf7 002b  ld   $2b
              5cf8 0092  ld   $92
              5cf9 0085  ld   $85
              5cfa 00ab  ld   $ab
              5cfb fe00  bra  ac          ;+-----------------------------------+
              5cfc fcfd  bra  $5cfd       ;|                                   |
              5cfd 1418  ld   $18,y       ;| Trampoline for page $5c00 lookups |
              5cfe e006  jmp  y,$06       ;|                                   |
              5cff c218  st   [$18]       ;+-----------------------------------+
              5d00 0068  ld   $68
              5d01 001a  ld   $1a
              5d02 0084  ld   $84
              5d03 00e6  ld   $e6
              5d04 0001  ld   $01
              5d05 005e  ld   $5e
              5d06 0084  ld   $84
              5d07 0035  ld   $35
              5d08 0072  ld   $72
              5d09 00eb  ld   $eb
              5d0a 0063  ld   $63
              5d0b 00ff  ld   $ff
              5d0c 0064  ld   $64
              5d0d 00a0  ld   $a0
              5d0e 005f  ld   $5f
              5d0f 002b  ld   $2b
              5d10 001a  ld   $1a
              5d11 0059  ld   $59
              5d12 00ad  ld   $ad
              5d13 002b  ld   $2b
              5d14 0022  ld   $22
              5d15 00b4  ld   $b4
              5d16 00e2  ld   $e2
              5d17 001a  ld   $1a
              5d18 00a4  ld   $a4
              5d19 00e6  ld   $e6
              5d1a 009a  ld   $9a
              5d1b 0035  ld   $35
              5d1c 0056  ld   $56
              5d1d 00b1  ld   $b1
              5d1e 0059  ld   $59
              5d1f 0000  ld   $00
              5d20 005e  ld   $5e
              5d21 00a4  ld   $a4
              5d22 001a  ld   $1a
              5d23 00a5  ld   $a5
              5d24 00e6  ld   $e6
              5d25 0070  ld   $70
              5d26 0035  ld   $35
              5d27 0050  ld   $50
              5d28 00c3  ld   $c3
              5d29 0059  ld   $59
              5d2a 0070  ld   $70
              5d2b 005e  ld   $5e
              5d2c 00a5  ld   $a5
              5d2d 0059  ld   $59
              5d2e 0002  ld   $02
              5d2f 00fa  ld   $fa
              5d30 00aa  ld   $aa
              5d31 002b  ld   $2b
              5d32 00aa  ld   $aa
              5d33 00ff  ld   $ff
              5d34 0011  ld   $11
              5d35 00fd  ld   $fd
              5d36 00ff  ld   $ff
              5d37 00f8  ld   $f8
              5d38 00aa  ld   $aa
              5d39 002b  ld   $2b
              5d3a 00aa  ld   $aa
              5d3b 00ff  ld   $ff
              5d3c 0075  ld   $75
              5d3d 0085  ld   $85
              5d3e 00e1  ld   $e1
              5d3f 0061  ld   $61
              5d40 0059  ld   $59
              5d41 0008  ld   $08
              5d42 002b  ld   $2b
              5d43 0094  ld   $94
              5d44 0059  ld   $59
              5d45 00a0  ld   $a0
              5d46 005e  ld   $5e
              5d47 0024  ld   $24
              5d48 0059  ld   $59
              5d49 0000  ld   $00
              5d4a 005e  ld   $5e
              5d4b 0026  ld   $26
              5d4c 001a  ld   $1a
              5d4d 0094  ld   $94
              5d4e 005e  ld   $5e
              5d4f 0027  ld   $27
              5d50 00b4  ld   $b4
              5d51 00f3  ld   $f3
              5d52 0059  ld   $59
              5d53 00a0  ld   $a0
              5d54 005e  ld   $5e
              5d55 0024  ld   $24
              5d56 0059  ld   $59
              5d57 0000  ld   $00
              5d58 005e  ld   $5e
              5d59 0026  ld   $26
              5d5a 0011  ld   $11
              5d5b 0087  ld   $87
              5d5c 0000  ld   $00
              5d5d 00b8  ld   $b8
              5d5e 0094  ld   $94
              5d5f 005e  ld   $5e
              5d60 0027  ld   $27
              5d61 00b4  ld   $b4
              5d62 00f3  ld   $f3
              5d63 0093  ld   $93
              5d64 0094  ld   $94
              5d65 001a  ld   $1a
              5d66 0094  ld   $94
              5d67 00e6  ld   $e6
              5d68 0044  ld   $44
              5d69 0035  ld   $35
              5d6a 0050  ld   $50
              5d6b 00d3  ld   $d3
              5d6c 0063  ld   $63
              5d6d 00ff  ld   $ff
              5d6e 0065  ld   $65
              5d6f 00a1  ld   $a1
              5d70 005e  ld   $5e
              5d71 0075  ld   $75
              5d72 0011  ld   $11
              5d73 0003  ld   $03
              5d74 000b  ld   $0b
              5d75 002b  ld   $2b
              5d76 0022  ld   $22
              5d77 001a  ld   $1a
              5d78 00a2  ld   $a2
              5d79 005e  ld   $5e
              5d7a 0025  ld   $25
              5d7b 0011  ld   $11
              5d7c 0000  ld   $00
              5d7d 0001  ld   $01
              5d7e 00ad  ld   $ad
              5d7f 005e  ld   $5e
              5d80 0027  ld   $27
              5d81 0059  ld   $59
              5d82 0008  ld   $08
              5d83 005e  ld   $5e
              5d84 009e  ld   $9e
              5d85 0059  ld   $59
              5d86 00a0  ld   $a0
              5d87 005e  ld   $5e
              5d88 0024  ld   $24
              5d89 0059  ld   $59
              5d8a 0000  ld   $00
              5d8b 005e  ld   $5e
              5d8c 0026  ld   $26
              5d8d 00b4  ld   $b4
              5d8e 00f3  ld   $f3
              5d8f 0093  ld   $93
              5d90 0027  ld   $27
              5d91 001a  ld   $1a
              5d92 009e  ld   $9e
              5d93 00e6  ld   $e6
              5d94 0001  ld   $01
              5d95 0035  ld   $35
              5d96 0072  ld   $72
              5d97 00b1  ld   $b1
              5d98 0085  ld   $85
              5d99 00bb  ld   $bb
              5d9a 0062  ld   $62
              5d9b 0063  ld   $63
              5d9c 00ff  ld   $ff
              5d9d 0075  ld   $75
              5d9e 0011  ld   $11
              5d9f 00a3  ld   $a3
              5da0 0069  ld   $69
              5da1 002b  ld   $2b
              5da2 0086  ld   $86
              5da3 002b  ld   $2b
              5da4 0092  ld   $92
              5da5 0011  ld   $11
              5da6 00f4  ld   $f4
              5da7 0068  ld   $68
              5da8 002b  ld   $2b
              5da9 0088  ld   $88
              5daa 0021  ld   $21
              5dab 0092  ld   $92
              5dac 00f6  ld   $f6
              5dad 0035  ld   $35
              5dae 0072  ld   $72
              5daf 00e7  ld   $e7
              5db0 0021  ld   $21
              5db1 0084  ld   $84
              5db2 0035  ld   $35
              5db3 003f  ld   $3f
              5db4 00e5  ld   $e5
              5db5 00cf  ld   $cf
              5db6 0084  ld   $84
              5db7 0063  ld   $63
              5db8 00ff  ld   $ff
              5db9 00b8  ld   $b8
              5dba 0082  ld   $82
              5dbb 0035  ld   $35
              5dbc 003f  ld   $3f
              5dbd 00f2  ld   $f2
              5dbe 0093  ld   $93
              5dbf 0092  ld   $92
              5dc0 0093  ld   $93
              5dc1 0092  ld   $92
              5dc2 0090  ld   $90
              5dc3 00d8  ld   $d8
              5dc4 0021  ld   $21
              5dc5 0092  ld   $92
              5dc6 00b8  ld   $b8
              5dc7 0086  ld   $86
              5dc8 0099  ld   $99
              5dc9 0088  ld   $88
              5dca 00f6  ld   $f6
              5dcb 00cf  ld   $cf
              5dcc 0018  ld   $18
              5dcd 0063  ld   $63
              5dce 00ff  ld   $ff
              5dcf 0066  ld   $66
              5dd0 00a3  ld   $a3
              5dd1 005c  ld   $5c
              5dd2 0075  ld   $75
              5dd3 0059  ld   $59
              5dd4 0008  ld   $08
              5dd5 002b  ld   $2b
              5dd6 0098  ld   $98
              5dd7 0011  ld   $11
              5dd8 0000  ld   $00
              5dd9 0001  ld   $01
              5dda 002b  ld   $2b
              5ddb 009a  ld   $9a
              5ddc 0021  ld   $21
              5ddd 0098  ld   $98
              5dde 00f3  ld   $f3
              5ddf 009a  ld   $9a
              5de0 0093  ld   $93
              5de1 009a  ld   $9a
              5de2 0093  ld   $93
              5de3 009a  ld   $9a
              5de4 0093  ld   $93
              5de5 0098  ld   $98
              5de6 001a  ld   $1a
              5de7 0098  ld   $98
              5de8 00e6  ld   $e6
              5de9 0080  ld   $80
              5dea 0035  ld   $35
              5deb 0050  ld   $50
              5dec 00ab  ld   $ab
              5ded 0085  ld   $85
              5dee 00a0  ld   $a0
              5def 0062  ld   $62
              5df0 0063  ld   $63
              5df1 00ff  ld   $ff
              5df2 002b  ld   $2b
              5df3 0094  ld   $94
              5df4 0021  ld   $21
              5df5 0084  ld   $84
              5df6 00ad  ld   $ad
              5df7 002b  ld   $2b
              5df8 0088  ld   $88
              5df9 0021  ld   $21
              5dfa 0094  ld   $94
              5dfb fe00  bra  ac          ;+-----------------------------------+
              5dfc fcfd  bra  $5dfd       ;|                                   |
              5dfd 1418  ld   $18,y       ;| Trampoline for page $5d00 lookups |
              5dfe e006  jmp  y,$06       ;|                                   |
              5dff c218  st   [$18]       ;+-----------------------------------+
              5e00 00ad  ld   $ad
              5e01 002b  ld   $2b
              5e02 009c  ld   $9c
              5e03 0093  ld   $93
              5e04 0084  ld   $84
              5e05 0093  ld   $93
              5e06 0094  ld   $94
              5e07 0021  ld   $21
              5e08 0084  ld   $84
              5e09 00ad  ld   $ad
              5e0a 0035  ld   $35
              5e0b 003f  ld   $3f
              5e0c 00ed  ld   $ed
              5e0d 002b  ld   $2b
              5e0e 0082  ld   $82
              5e0f 0021  ld   $21
              5e10 0094  ld   $94
              5e11 00ad  ld   $ad
              5e12 00b8  ld   $b8
              5e13 0082  ld   $82
              5e14 0035  ld   $35
              5e15 0050  ld   $50
              5e16 00fa  ld   $fa
              5e17 0035  ld   $35
              5e18 004d  ld   $4d
              5e19 00ea  ld   $ea
              5e1a 0093  ld   $93
              5e1b 0084  ld   $84
              5e1c 0093  ld   $93
              5e1d 0094  ld   $94
              5e1e 0090  ld   $90
              5e1f 00d1  ld   $d1
              5e20 0059  ld   $59
              5e21 0000  ld   $00
              5e22 00ff  ld   $ff
              5e23 0021  ld   $21
              5e24 0088  ld   $88
              5e25 00b8  ld   $b8
              5e26 009c  ld   $9c
              5e27 0035  ld   $35
              5e28 0050  ld   $50
              5e29 00ea  ld   $ea
              5e2a 0035  ld   $35
              5e2b 004d  ld   $4d
              5e2c 00fa  ld   $fa
              5e2d 0059  ld   $59
              5e2e 0001  ld   $01
              5e2f 00ff  ld   $ff
              5e30 0059  ld   $59
              5e31 0002  ld   $02
              5e32 00ff  ld   $ff
              5e33 0067  ld   $67
              5e34 00a0  ld   $a0
              5e35 005f  ld   $5f
              5e36 0011  ld   $11
              5e37 0000  ld   $00
              5e38 0006  ld   $06
              5e39 002b  ld   $2b
              5e3a 0022  ld   $22
              5e3b 0021  ld   $21
              5e3c 00a0  ld   $a0
              5e3d 00b4  ld   $b4
              5e3e 00f6  ld   $f6
              5e3f 00ff  ld   $ff
              5e40 0059  ld   $59
              5e41 0002  ld   $02
              5e42 005e  ld   $5e
              5e43 00a4  ld   $a4
              5e44 005e  ld   $5e
              5e45 0028  ld   $28
              5e46 0059  ld   $59
              5e47 0001  ld   $01
              5e48 00f8  ld   $f8
              5e49 00aa  ld   $aa
              5e4a 0035  ld   $35
              5e4b 0072  ld   $72
              5e4c 00b6  ld   $b6
              5e4d 00ff  ld   $ff
              5e4e 0075  ld   $75
              5e4f 0059  ld   $59
              5e50 0002  ld   $02
              5e51 00f8  ld   $f8
              5e52 00aa  ld   $aa
              5e53 0035  ld   $35
              5e54 0072  ld   $72
              5e55 00cd  ld   $cd
              5e56 001a  ld   $1a
              5e57 00a5  ld   $a5
              5e58 00e3  ld   $e3
              5e59 0008  ld   $08
              5e5a 005e  ld   $5e
              5e5b 00a5  ld   $a5
              5e5c 00e6  ld   $e6
              5e5d 0078  ld   $78
              5e5e 0035  ld   $35
              5e5f 0050  ld   $50
              5e60 00f8  ld   $f8
              5e61 0059  ld   $59
              5e62 0070  ld   $70
              5e63 005e  ld   $5e
              5e64 00a5  ld   $a5
              5e65 0085  ld   $85
              5e66 00a1  ld   $a1
              5e67 0065  ld   $65
              5e68 0011  ld   $11
              5e69 0000  ld   $00
              5e6a 0001  ld   $01
              5e6b 002b  ld   $2b
              5e6c 0098  ld   $98
              5e6d 0021  ld   $21
              5e6e 0098  ld   $98
              5e6f 00ad  ld   $ad
              5e70 00e3  ld   $e3
              5e71 0008  ld   $08
              5e72 0082  ld   $82
              5e73 007f  ld   $7f
              5e74 00e6  ld   $e6
              5e75 0008  ld   $08
              5e76 0035  ld   $35
              5e77 0053  ld   $53
              5e78 00e3  ld   $e3
              5e79 00e3  ld   $e3
              5e7a 0008  ld   $08
              5e7b 00e3  ld   $e3
              5e7c 0008  ld   $08
              5e7d 00f0  ld   $f0
              5e7e 0098  ld   $98
              5e7f 0093  ld   $93
              5e80 0098  ld   $98
              5e81 0093  ld   $93
              5e82 0098  ld   $98
              5e83 001a  ld   $1a
              5e84 0098  ld   $98
              5e85 00e6  ld   $e6
              5e86 00f0  ld   $f0
              5e87 0035  ld   $35
              5e88 0050  ld   $50
              5e89 00d5  ld   $d5
              5e8a 0059  ld   $59
              5e8b 0002  ld   $02
              5e8c 00fa  ld   $fa
              5e8d 00aa  ld   $aa
              5e8e 002b  ld   $2b
              5e8f 00aa  ld   $aa
              5e90 0085  ld   $85
              5e91 00bb  ld   $bb
              5e92 0062  ld   $62
              5e93 0063  ld   $63
              5e94 00ff  ld   $ff
              5e95 0068  ld   $68
              5e96 00a1  ld   $a1
              5e97 005f  ld   $5f
              5e98 0099  ld   $99
              5e99 0096  ld   $96
              5e9a 0099  ld   $99
              5e9b 0096  ld   $96
              5e9c 00f6  ld   $f6
              5e9d 0099  ld   $99
              5e9e 0098  ld   $98
              5e9f 002b  ld   $2b
              5ea0 009e  ld   $9e
              5ea1 00ff  ld   $ff
              5ea2 001a  ld   $1a
              5ea3 0092  ld   $92
              5ea4 0082  ld   $82
              5ea5 007f  ld   $7f
              5ea6 00e6  ld   $e6
              5ea7 0052  ld   $52
              5ea8 0035  ld   $35
              5ea9 0053  ld   $53
              5eaa 00be  ld   $be
              5eab 00e3  ld   $e3
              5eac 0032  ld   $32
              5ead 0035  ld   $35
              5eae 0050  ld   $50
              5eaf 00f1  ld   $f1
              5eb0 002b  ld   $2b
              5eb1 0092  ld   $92
              5eb2 0011  ld   $11
              5eb3 0000  ld   $00
              5eb4 0007  ld   $07
              5eb5 0090  ld   $90
              5eb6 00c3  ld   $c3
              5eb7 002b  ld   $2b
              5eb8 0092  ld   $92
              5eb9 0011  ld   $11
              5eba 0000  ld   $00
              5ebb 0008  ld   $08
              5ebc 002b  ld   $2b
              5ebd 0094  ld   $94
              5ebe 001a  ld   $1a
              5ebf 0092  ld   $92
              5ec0 00e9  ld   $e9
              5ec1 00e9  ld   $e9
              5ec2 0099  ld   $99
              5ec3 0092  ld   $92
              5ec4 0099  ld   $99
              5ec5 0094  ld   $94
              5ec6 002b  ld   $2b
              5ec7 0094  ld   $94
              5ec8 0059  ld   $59
              5ec9 0005  ld   $05
              5eca 005e  ld   $5e
              5ecb 0096  ld   $96
              5ecc 0021  ld   $21
              5ecd 0094  ld   $94
              5ece 007f  ld   $7f
              5ecf 0000  ld   $00
              5ed0 005e  ld   $5e
              5ed1 0026  ld   $26
              5ed2 00b4  ld   $b4
              5ed3 00cb  ld   $cb
              5ed4 0093  ld   $93
              5ed5 0094  ld   $94
              5ed6 0093  ld   $93
              5ed7 0028  ld   $28
              5ed8 001a  ld   $1a
              5ed9 0096  ld   $96
              5eda 00e6  ld   $e6
              5edb 0001  ld   $01
              5edc 0035  ld   $35
              5edd 0072  ld   $72
              5ede 00d1  ld   $d1
              5edf 005e  ld   $5e
              5ee0 0026  ld   $26
              5ee1 00b4  ld   $b4
              5ee2 00cb  ld   $cb
              5ee3 0093  ld   $93
              5ee4 0028  ld   $28
              5ee5 0075  ld   $75
              5ee6 0085  ld   $85
              5ee7 00b4  ld   $b4
              5ee8 0063  ld   $63
              5ee9 0063  ld   $63
              5eea 00ff  ld   $ff
              5eeb 00dc  ld   $dc
              5eec 000a  ld   $0a
              5eed 00e2  ld   $e2
              5eee 000a  ld   $0a
              5eef 00e8  ld   $e8
              5ef0 000a  ld   $0a
              5ef1 00b1  ld   $b1
              5ef2 000b  ld   $0b
              5ef3 00c8  ld   $c8
              5ef4 000b  ld   $0b
              5ef5 00e8  ld   $e8
              5ef6 000b  ld   $0b
              5ef7 0069  ld   $69
              5ef8 00a3  ld   $a3
              5ef9 0021  ld   $21
              5efa 007f  ld   $7f
              5efb fe00  bra  ac          ;+-----------------------------------+
              5efc fcfd  bra  $5efd       ;|                                   |
              5efd 1418  ld   $18,y       ;| Trampoline for page $5e00 lookups |
              5efe e006  jmp  y,$06       ;|                                   |
              5eff c218  st   [$18]       ;+-----------------------------------+
              5f00 0000  ld   $00
              5f01 000a  ld   $0a
              5f02 0000  ld   $00
              5f03 00fe  ld   $fe
              5f04 0000  ld   $00
              5f05 00fd  ld   $fd
              5f06 0000  ld   $00
              5f07 00fb  ld   $fb
              5f08 0000  ld   $00
              5f09 00f7  ld   $f7
              5f0a 0000  ld   $00
              5f0b 0000  ld   $00
              5f0c 0000  ld   $00
              5f0d 0011  ld   $11
              5f0e 004c  ld   $4c
              5f0f 006f  ld   $6f
              5f10 0061  ld   $61
              5f11 0064  ld   $64
              5f12 0065  ld   $65
              5f13 0072  ld   $72
              5f14 0020  ld   $20
              5f15 006e  ld   $6e
              5f16 006f  ld   $6f
              5f17 0074  ld   $74
              5f18 0020  ld   $20
              5f19 0066  ld   $66
              5f1a 006f  ld   $6f
              5f1b 0075  ld   $75
              5f1c 006e  ld   $6e
              5f1d 0064  ld   $64
              5f1e 0021  ld   $21
              5f1f 0000  ld   $00
              5f20 007a  ld   $7a
              5f21 00a0  ld   $a0
              5f22 0002  ld   $02
              5f23 0000  ld   $00
              5f24 0000  ld   $00
              5f25 007b  ld   $7b
              5f26 00a0  ld   $a0
              5f27 0002  ld   $02
              5f28 0000  ld   $00
              5f29 0000  ld   $00
              5f2a 007c  ld   $7c
              5f2b 00a6  ld   $a6
              5f2c 005a  ld   $5a
              5f2d 0006  ld   $06
              5f2e 004c  ld   $4c
              5f2f 006f  ld   $6f
              5f30 0061  ld   $61
              5f31 0064  ld   $64
              5f32 0065  ld   $65
              5f33 0072  ld   $72
              5f34 0000  ld   $00
              5f35 0000  ld   $00
              5f36 0000  ld   $00
              * 83 times
              5f87 007d  ld   $7d
              5f88 00a0  ld   $a0
              5f89 0002  ld   $02
              5f8a 0000  ld   $00
              5f8b 0000  ld   $00
              5f8c 0000  ld   $00
              5f8d 0000  ld   $00         ;End of gbas/browser/Browser_SDCard_ROMv5a_v1.gt1, size 2879
                                          ;+-----------------------------------+
                                          ;| Apps/Mandelbrot/Mandelbrot_v1.gcl |
                                          ;+-----------------------------------+
              5f8e dc53  st   $53,[y,x++] ;'S'
              5f8f dc44  st   $44,[y,x++] ;'D'
              5f90 dc43  st   $43,[y,x++] ;'C'
              5f91 dc61  st   $61,[y,x++] ;'a'
              5f92 dc72  st   $72,[y,x++] ;'r'
              5f93 dc64  st   $64,[y,x++] ;'d'
              5f94 dc00  st   $00,[y,x++] ;'\x00'
              5f95 dc00  st   $00,[y,x++] ;'\x00'
              5f96 004f  ld   $4f
              5f97 c218  st   [$18]
              5f98 0054  ld   $54
              5f99 14e0  ld   $e0,y
              5f9a e071  jmp  y,$71
              5f9b c219  st   [$19]
Mandelbrot:   5f9c 0002  ld   $02         ;| RAM segment address (high byte first)
              5f9d 0000  ld   $00         ;|
              5f9e 00ef  ld   $ef         ;| Length (1..256)
              5f9f 00cd  ld   $cd         ;0200 DEF
              5fa0 00e8  ld   $e8
              5fa1 0075  ld   $75         ;0202 PUSH
              5fa2 0059  ld   $59         ;0203 LDI
              5fa3 0000  ld   $00
              5fa4 002b  ld   $2b         ;0205 STW
              5fa5 0030  ld   $30         ;0205 'sign'
              5fa6 002b  ld   $2b         ;0207 STW
              5fa7 0032  ld   $32         ;0207 'C'
              5fa8 00b8  ld   $b8         ;0209 SUBW
              5fa9 0034  ld   $34         ;0209 'A'
              5faa 0035  ld   $35         ;020b BCC
              5fab 0056  ld   $56         ;020c LE
              5fac 0012  ld   $12
              5fad 002b  ld   $2b         ;020e STW
              5fae 0034  ld   $34         ;020e 'A'
              5faf 0059  ld   $59         ;0210 LDI
              5fb0 0001  ld   $01
              5fb1 002b  ld   $2b         ;0212 STW
              5fb2 0030  ld   $30         ;0212 'sign'
              5fb3 0059  ld   $59         ;0214 LDI
              5fb4 0000  ld   $00
              5fb5 00b8  ld   $b8         ;0216 SUBW
              5fb6 0036  ld   $36         ;0216 'B'
              5fb7 0035  ld   $35         ;0218 BCC
              5fb8 0056  ld   $56         ;0219 LE
              5fb9 0021  ld   $21
              5fba 002b  ld   $2b         ;021b STW
              5fbb 0036  ld   $36         ;021b 'B'
              5fbc 0021  ld   $21         ;021d LDW
              5fbd 0030  ld   $30         ;021d 'sign'
              5fbe 008c  ld   $8c         ;021f XORI
              5fbf 0001  ld   $01
              5fc0 002b  ld   $2b         ;0221 STW
              5fc1 0030  ld   $30         ;0221 'sign'
              5fc2 0059  ld   $59         ;0223 LDI
              5fc3 0007  ld   $07
              5fc4 002b  ld   $2b         ;0225 STW
              5fc5 0038  ld   $38         ;0225 'shift'
              5fc6 0011  ld   $11         ;0227 LDWI
              5fc7 0000  ld   $00
              5fc8 0006  ld   $06
              5fc9 002b  ld   $2b         ;022a STW
              5fca 0022  ld   $22
              5fcb 0011  ld   $11         ;022c LDWI
              5fcc 0000  ld   $00
              5fcd 0002  ld   $02
              5fce 002b  ld   $2b         ;022f STW
              5fcf 003a  ld   $3a         ;022f 'bit'
              5fd0 0011  ld   $11         ;0231 LDWI
              5fd1 0000  ld   $00
              5fd2 00c0  ld   $c0
              5fd3 0099  ld   $99         ;0234 ADDW
              5fd4 0032  ld   $32         ;0234 'C'
              5fd5 0035  ld   $35         ;0236 BCC
              5fd6 0053  ld   $53         ;0237 GE
              5fd7 003e  ld   $3e
              5fd8 0021  ld   $21         ;0239 LDW
              5fd9 0032  ld   $32         ;0239 'C'
              5fda 00e9  ld   $e9         ;023b LSLW
              5fdb 002b  ld   $2b         ;023c STW
              5fdc 0032  ld   $32         ;023c 'C'
              5fdd 0090  ld   $90         ;023e BRA
              5fde 004a  ld   $4a
              5fdf 0021  ld   $21         ;0240 LDW
              5fe0 0036  ld   $36         ;0240 'B'
              5fe1 00b4  ld   $b4         ;0242 SYS
              5fe2 00f7  ld   $f7
              5fe3 002b  ld   $2b         ;0244 STW
              5fe4 0036  ld   $36         ;0244 'B'
              5fe5 0021  ld   $21         ;0246 LDW
              5fe6 0038  ld   $38         ;0246 'shift'
              5fe7 00e6  ld   $e6         ;0248 SUBI
              5fe8 0001  ld   $01
              5fe9 002b  ld   $2b         ;024a STW
              5fea 0038  ld   $38         ;024a 'shift'
              5feb 0021  ld   $21         ;024c LDW
              5fec 0034  ld   $34         ;024c 'A'
              5fed 00b8  ld   $b8         ;024e SUBW
              5fee 003a  ld   $3a         ;024e 'bit'
              5fef 0035  ld   $35         ;0250 BCC
              5ff0 0050  ld   $50         ;0251 LT
              5ff1 0059  ld   $59
              5ff2 002b  ld   $2b         ;0253 STW
              5ff3 0034  ld   $34         ;0253 'A'
              5ff4 0021  ld   $21         ;0255 LDW
              5ff5 0032  ld   $32         ;0255 'C'
              5ff6 0099  ld   $99         ;0257 ADDW
              5ff7 0036  ld   $36         ;0257 'B'
              5ff8 002b  ld   $2b         ;0259 STW
              5ff9 0032  ld   $32         ;0259 'C'
              5ffa 0021  ld   $21         ;025b LDW
              5ffb fe00  bra  ac          ;+-----------------------------------+
              5ffc fcfd  bra  $5ffd       ;|                                   |
              5ffd 1418  ld   $18,y       ;| Trampoline for page $5f00 lookups |
              5ffe e006  jmp  y,$06       ;|                                   |
              5fff c218  st   [$18]       ;+-----------------------------------+
              6000 003a  ld   $3a         ;025b 'bit'
              6001 00b4  ld   $b4         ;025d SYS
              6002 00f7  ld   $f7
              6003 0035  ld   $35         ;025f BCC
              6004 0072  ld   $72         ;0260 NE
              6005 002d  ld   $2d
              6006 0021  ld   $21         ;0262 LDW
              6007 0038  ld   $38         ;0262 'shift'
              6008 008c  ld   $8c         ;0264 XORI
              6009 0007  ld   $07
              600a 0035  ld   $35         ;0266 BCC
              600b 0072  ld   $72         ;0267 NE
              600c 0072  ld   $72
              600d 0011  ld   $11         ;0269 LDWI
              600e 00b9  ld   $b9
              600f 0004  ld   $04
              6010 002b  ld   $2b         ;026c STW
              6011 0022  ld   $22
              6012 0021  ld   $21         ;026e LDW
              6013 0032  ld   $32         ;026e 'C'
              6014 00b4  ld   $b4         ;0270 SYS
              6015 0000  ld   $00
              6016 0090  ld   $90         ;0272 BRA
              6017 00d7  ld   $d7
              6018 0021  ld   $21         ;0274 LDW
              6019 0038  ld   $38         ;0274 'shift'
              601a 008c  ld   $8c         ;0276 XORI
              601b 0006  ld   $06
              601c 0035  ld   $35         ;0278 BCC
              601d 0072  ld   $72         ;0279 NE
              601e 0084  ld   $84
              601f 0011  ld   $11         ;027b LDWI
              6020 0087  ld   $87
              6021 0006  ld   $06
              6022 002b  ld   $2b         ;027e STW
              6023 0022  ld   $22
              6024 0021  ld   $21         ;0280 LDW
              6025 0032  ld   $32         ;0280 'C'
              6026 00b4  ld   $b4         ;0282 SYS
              6027 00f7  ld   $f7
              6028 0090  ld   $90         ;0284 BRA
              6029 00d7  ld   $d7
              602a 0021  ld   $21         ;0286 LDW
              602b 0038  ld   $38         ;0286 'shift'
              602c 008c  ld   $8c         ;0288 XORI
              602d 0005  ld   $05
              602e 0035  ld   $35         ;028a BCC
              602f 0072  ld   $72         ;028b NE
              6030 0096  ld   $96
              6031 0011  ld   $11         ;028d LDWI
              6032 006d  ld   $6d
              6033 0006  ld   $06
              6034 002b  ld   $2b         ;0290 STW
              6035 0022  ld   $22
              6036 0021  ld   $21         ;0292 LDW
              6037 0032  ld   $32         ;0292 'C'
              6038 00b4  ld   $b4         ;0294 SYS
              6039 00f6  ld   $f6
              603a 0090  ld   $90         ;0296 BRA
              603b 00d7  ld   $d7
              603c 0021  ld   $21         ;0298 LDW
              603d 0038  ld   $38         ;0298 'shift'
              603e 008c  ld   $8c         ;029a XORI
              603f 0004  ld   $04
              6040 0035  ld   $35         ;029c BCC
              6041 0072  ld   $72         ;029d NE
              6042 00a8  ld   $a8
              6043 0011  ld   $11         ;029f LDWI
              6044 0052  ld   $52
              6045 0006  ld   $06
              6046 002b  ld   $2b         ;02a2 STW
              6047 0022  ld   $22
              6048 0021  ld   $21         ;02a4 LDW
              6049 0032  ld   $32         ;02a4 'C'
              604a 00b4  ld   $b4         ;02a6 SYS
              604b 00f6  ld   $f6
              604c 0090  ld   $90         ;02a8 BRA
              604d 00d7  ld   $d7
              604e 0021  ld   $21         ;02aa LDW
              604f 0038  ld   $38         ;02aa 'shift'
              6050 008c  ld   $8c         ;02ac XORI
              6051 0003  ld   $03
              6052 0035  ld   $35         ;02ae BCC
              6053 0072  ld   $72         ;02af NE
              6054 00ba  ld   $ba
              6055 0011  ld   $11         ;02b1 LDWI
              6056 0036  ld   $36
              6057 0006  ld   $06
              6058 002b  ld   $2b         ;02b4 STW
              6059 0022  ld   $22
              605a 0021  ld   $21         ;02b6 LDW
              605b 0032  ld   $32         ;02b6 'C'
              605c 00b4  ld   $b4         ;02b8 SYS
              605d 00f5  ld   $f5
              605e 0090  ld   $90         ;02ba BRA
              605f 00d7  ld   $d7
              6060 0021  ld   $21         ;02bc LDW
              6061 0038  ld   $38         ;02bc 'shift'
              6062 008c  ld   $8c         ;02be XORI
              6063 0002  ld   $02
              6064 0035  ld   $35         ;02c0 BCC
              6065 0072  ld   $72         ;02c1 NE
              6066 00cc  ld   $cc
              6067 0011  ld   $11         ;02c3 LDWI
              6068 0019  ld   $19
              6069 0006  ld   $06
              606a 002b  ld   $2b         ;02c6 STW
              606b 0022  ld   $22
              606c 0021  ld   $21         ;02c8 LDW
              606d 0032  ld   $32         ;02c8 'C'
              606e 00b4  ld   $b4         ;02ca SYS
              606f 00f5  ld   $f5
              6070 0090  ld   $90         ;02cc BRA
              6071 00d7  ld   $d7
              6072 0021  ld   $21         ;02ce LDW
              6073 0038  ld   $38         ;02ce 'shift'
              6074 008c  ld   $8c         ;02d0 XORI
              6075 0001  ld   $01
              6076 0035  ld   $35         ;02d2 BCC
              6077 0072  ld   $72         ;02d3 NE
              6078 00d7  ld   $d7
              6079 0021  ld   $21         ;02d5 LDW
              607a 0032  ld   $32         ;02d5 'C'
              607b 00b4  ld   $b4         ;02d7 SYS
              607c 00f7  ld   $f7
              607d 002b  ld   $2b         ;02d9 STW
              607e 0032  ld   $32         ;02d9 'C'
              607f 0021  ld   $21         ;02db LDW
              6080 0030  ld   $30         ;02db 'sign'
              6081 0035  ld   $35         ;02dd BCC
              6082 003f  ld   $3f         ;02de EQ
              6083 00e4  ld   $e4
              6084 0059  ld   $59         ;02e0 LDI
              6085 0000  ld   $00
              6086 00b8  ld   $b8         ;02e2 SUBW
              6087 0032  ld   $32         ;02e2 'C'
              6088 0090  ld   $90         ;02e4 BRA
              6089 00e6  ld   $e6
              608a 0021  ld   $21         ;02e6 LDW
              608b 0032  ld   $32         ;02e6 'C'
              608c 0063  ld   $63         ;02e8 POP
              608d 00ff  ld   $ff         ;02e9 RET
              608e 002b  ld   $2b         ;02ea STW
              608f 003c  ld   $3c         ;02ea 'MulShift7'
              6090 0093  ld   $93         ;02ec INC
              6091 001b  ld   $1b
              6092 00ff  ld   $ff         ;02ee RET
              6093 0003  ld   $03         ;| RAM segment address (high byte first)
              6094 0000  ld   $00         ;|
              6095 00eb  ld   $eb         ;| Length (1..256)
              6096 00cd  ld   $cd         ;0300 DEF
              6097 00e4  ld   $e4
              6098 0075  ld   $75         ;0302 PUSH
              6099 0011  ld   $11         ;0303 LDWI
              609a 0000  ld   $00
              609b 0008  ld   $08
              609c 002b  ld   $2b         ;0306 STW
              609d 003e  ld   $3e         ;0306 'Pen'
              609e 0059  ld   $59         ;0308 LDI
              609f 0078  ld   $78
              60a0 002b  ld   $2b         ;030a STW
              60a1 0040  ld   $40         ;030a 'Height'
              60a2 0059  ld   $59         ;030c LDI
              60a3 00a0  ld   $a0
              60a4 002b  ld   $2b         ;030e STW
              60a5 0042  ld   $42         ;030e 'Width'
              60a6 002b  ld   $2b         ;0310 STW
              60a7 0044  ld   $44         ;0310 'len'
              60a8 002b  ld   $2b         ;0312 STW
              60a9 0046  ld   $46         ;0312 'LastPixel'
              60aa 0059  ld   $59         ;0314 LDI
              60ab 0000  ld   $00
              60ac 002b  ld   $2b         ;0316 STW
              60ad 0048  ld   $48         ;0316 'DY'
              60ae 0021  ld   $21         ;0318 LDW
              60af 004a  ld   $4a         ;0318 'Step'
              60b0 002b  ld   $2b         ;031a STW
              60b1 004c  ld   $4c         ;031a 'DX'
              60b2 0059  ld   $59         ;031c LDI
              60b3 003f  ld   $3f
              60b4 00f0  ld   $f0         ;031e POKE
              60b5 003e  ld   $3e         ;031e 'Pen'
              60b6 00cf  ld   $cf         ;0320 CALL
              60b7 004e  ld   $4e         ;0320 'UpdateClock'
              60b8 0021  ld   $21         ;0322 LDW
              60b9 0046  ld   $46         ;0322 'LastPixel'
              60ba 0035  ld   $35         ;0324 BCC
              60bb 0072  ld   $72         ;0325 NE
              60bc 0071  ld   $71
              60bd 0021  ld   $21         ;0327 LDW
              60be 0050  ld   $50         ;0327 'Y0'
              60bf 002b  ld   $2b         ;0329 STW
              60c0 0034  ld   $34         ;0329 'A'
              60c1 002b  ld   $2b         ;032b STW
              60c2 0036  ld   $36         ;032b 'B'
              60c3 00cf  ld   $cf         ;032d CALL
              60c4 003c  ld   $3c         ;032d 'MulShift7'
              60c5 002b  ld   $2b         ;032f STW
              60c6 0052  ld   $52         ;032f 'YY'
              60c7 0021  ld   $21         ;0331 LDW
              60c8 0054  ld   $54         ;0331 'X0'
              60c9 00e3  ld   $e3         ;0333 ADDI
              60ca 0080  ld   $80
              60cb 002b  ld   $2b         ;0335 STW
              60cc 0034  ld   $34         ;0335 'A'
              60cd 002b  ld   $2b         ;0337 STW
              60ce 0036  ld   $36         ;0337 'B'
              60cf 00cf  ld   $cf         ;0339 CALL
              60d0 003c  ld   $3c         ;0339 'MulShift7'
              60d1 0099  ld   $99         ;033b ADDW
              60d2 0052  ld   $52         ;033b 'YY'
              60d3 00e6  ld   $e6         ;033d SUBI
              60d4 0008  ld   $08
              60d5 0035  ld   $35         ;033f BCC
              60d6 0053  ld   $53         ;0340 GE
              60d7 0044  ld   $44
              60d8 0059  ld   $59         ;0342 LDI
              60d9 0000  ld   $00
              60da 0090  ld   $90         ;0344 BRA
              60db 006f  ld   $6f
              60dc 0021  ld   $21         ;0346 LDW
              60dd 0054  ld   $54         ;0346 'X0'
              60de 00e6  ld   $e6         ;0348 SUBI
              60df 0020  ld   $20
              60e0 002b  ld   $2b         ;034a STW
              60e1 0034  ld   $34         ;034a 'A'
              60e2 002b  ld   $2b         ;034c STW
              60e3 0036  ld   $36         ;034c 'B'
              60e4 00cf  ld   $cf         ;034e CALL
              60e5 003c  ld   $3c         ;034e 'MulShift7'
              60e6 0099  ld   $99         ;0350 ADDW
              60e7 0052  ld   $52         ;0350 'YY'
              60e8 002b  ld   $2b         ;0352 STW
              60e9 0034  ld   $34         ;0352 'A'
              60ea 0099  ld   $99         ;0354 ADDW
              60eb 0054  ld   $54         ;0354 'X0'
              60ec 00e6  ld   $e6         ;0356 SUBI
              60ed 0020  ld   $20
              60ee 002b  ld   $2b         ;0358 STW
              60ef 0036  ld   $36         ;0358 'B'
              60f0 00cf  ld   $cf         ;035a CALL
              60f1 003c  ld   $3c         ;035a 'MulShift7'
              60f2 002b  ld   $2b         ;035c STW
              60f3 0056  ld   $56         ;035c 'tmp'
              60f4 0099  ld   $99         ;035e ADDW
              60f5 0056  ld   $56         ;035e 'tmp'
              60f6 002b  ld   $2b         ;0360 STW
              60f7 0056  ld   $56         ;0360 'tmp'
              60f8 0099  ld   $99         ;0362 ADDW
              60f9 0056  ld   $56         ;0362 'tmp'
              60fa 002b  ld   $2b         ;0364 STW
              60fb fe00  bra  ac          ;+-----------------------------------+
              60fc fcfd  bra  $60fd       ;|                                   |
              60fd 1418  ld   $18,y       ;| Trampoline for page $6000 lookups |
              60fe e006  jmp  y,$06       ;|                                   |
              60ff c218  st   [$18]       ;+-----------------------------------+
              6100 0056  ld   $56         ;0364 'tmp'
              6101 00b8  ld   $b8         ;0366 SUBW
              6102 0052  ld   $52         ;0366 'YY'
              6103 0035  ld   $35         ;0368 BCC
              6104 0053  ld   $53         ;0369 GE
              6105 006d  ld   $6d
              6106 0059  ld   $59         ;036b LDI
              6107 0000  ld   $00
              6108 0090  ld   $90         ;036d BRA
              6109 006f  ld   $6f
              610a 00cf  ld   $cf         ;036f CALL
              610b 0058  ld   $58         ;036f 'CalcPixel'
              610c 0090  ld   $90         ;0371 BRA
              610d 0073  ld   $73
              610e 00cf  ld   $cf         ;0373 CALL
              610f 0058  ld   $58         ;0373 'CalcPixel'
              6110 002b  ld   $2b         ;0375 STW
              6111 0046  ld   $46         ;0375 'LastPixel'
              6112 00f0  ld   $f0         ;0377 POKE
              6113 003e  ld   $3e         ;0377 'Pen'
              6114 0021  ld   $21         ;0379 LDW
              6115 0044  ld   $44         ;0379 'len'
              6116 00e6  ld   $e6         ;037b SUBI
              6117 0001  ld   $01
              6118 0035  ld   $35         ;037d BCC
              6119 004d  ld   $4d         ;037e GT
              611a 009f  ld   $9f
              611b 0021  ld   $21         ;0380 LDW
              611c 0048  ld   $48         ;0380 'DY'
              611d 002b  ld   $2b         ;0382 STW
              611e 0056  ld   $56         ;0382 'tmp'
              611f 0021  ld   $21         ;0384 LDW
              6120 004c  ld   $4c         ;0384 'DX'
              6121 002b  ld   $2b         ;0386 STW
              6122 0048  ld   $48         ;0386 'DY'
              6123 0059  ld   $59         ;0388 LDI
              6124 0000  ld   $00
              6125 00b8  ld   $b8         ;038a SUBW
              6126 0056  ld   $56         ;038a 'tmp'
              6127 002b  ld   $2b         ;038c STW
              6128 004c  ld   $4c         ;038c 'DX'
              6129 0021  ld   $21         ;038e LDW
              612a 004c  ld   $4c         ;038e 'DX'
              612b 0035  ld   $35         ;0390 BCC
              612c 003f  ld   $3f         ;0391 EQ
              612d 0099  ld   $99
              612e 0021  ld   $21         ;0393 LDW
              612f 0042  ld   $42         ;0393 'Width'
              6130 00e6  ld   $e6         ;0395 SUBI
              6131 0001  ld   $01
              6132 002b  ld   $2b         ;0397 STW
              6133 0042  ld   $42         ;0397 'Width'
              6134 0090  ld   $90         ;0399 BRA
              6135 009f  ld   $9f
              6136 0021  ld   $21         ;039b LDW
              6137 0040  ld   $40         ;039b 'Height'
              6138 00e6  ld   $e6         ;039d SUBI
              6139 0001  ld   $01
              613a 002b  ld   $2b         ;039f STW
              613b 0040  ld   $40         ;039f 'Height'
              613c 002b  ld   $2b         ;03a1 STW
              613d 0044  ld   $44         ;03a1 'len'
              613e 0035  ld   $35         ;03a3 BCC
              613f 0056  ld   $56         ;03a4 LE
              6140 00e0  ld   $e0
              6141 0021  ld   $21         ;03a6 LDW
              6142 0054  ld   $54         ;03a6 'X0'
              6143 0099  ld   $99         ;03a8 ADDW
              6144 004c  ld   $4c         ;03a8 'DX'
              6145 002b  ld   $2b         ;03aa STW
              6146 0054  ld   $54         ;03aa 'X0'
              6147 0021  ld   $21         ;03ac LDW
              6148 0050  ld   $50         ;03ac 'Y0'
              6149 0099  ld   $99         ;03ae ADDW
              614a 0048  ld   $48         ;03ae 'DY'
              614b 002b  ld   $2b         ;03b0 STW
              614c 0050  ld   $50         ;03b0 'Y0'
              614d 0021  ld   $21         ;03b2 LDW
              614e 004c  ld   $4c         ;03b2 'DX'
              614f 0035  ld   $35         ;03b4 BCC
              6150 0053  ld   $53         ;03b5 GE
              6151 00bb  ld   $bb
              6152 0021  ld   $21         ;03b7 LDW
              6153 003e  ld   $3e         ;03b7 'Pen'
              6154 00e6  ld   $e6         ;03b9 SUBI
              6155 0001  ld   $01
              6156 002b  ld   $2b         ;03bb STW
              6157 003e  ld   $3e         ;03bb 'Pen'
              6158 0021  ld   $21         ;03bd LDW
              6159 004c  ld   $4c         ;03bd 'DX'
              615a 0035  ld   $35         ;03bf BCC
              615b 0056  ld   $56         ;03c0 LE
              615c 00c6  ld   $c6
              615d 0021  ld   $21         ;03c2 LDW
              615e 003e  ld   $3e         ;03c2 'Pen'
              615f 00e3  ld   $e3         ;03c4 ADDI
              6160 0001  ld   $01
              6161 002b  ld   $2b         ;03c6 STW
              6162 003e  ld   $3e         ;03c6 'Pen'
              6163 0021  ld   $21         ;03c8 LDW
              6164 0048  ld   $48         ;03c8 'DY'
              6165 0035  ld   $35         ;03ca BCC
              6166 0053  ld   $53         ;03cb GE
              6167 00d2  ld   $d2
              6168 0011  ld   $11         ;03cd LDWI
              6169 0000  ld   $00
              616a 00ff  ld   $ff
              616b 0099  ld   $99         ;03d0 ADDW
              616c 003e  ld   $3e         ;03d0 'Pen'
              616d 002b  ld   $2b         ;03d2 STW
              616e 003e  ld   $3e         ;03d2 'Pen'
              616f 0021  ld   $21         ;03d4 LDW
              6170 0048  ld   $48         ;03d4 'DY'
              6171 0035  ld   $35         ;03d6 BCC
              6172 0056  ld   $56         ;03d7 LE
              6173 00de  ld   $de
              6174 0011  ld   $11         ;03d9 LDWI
              6175 0000  ld   $00
              6176 0001  ld   $01
              6177 0099  ld   $99         ;03dc ADDW
              6178 003e  ld   $3e         ;03dc 'Pen'
              6179 002b  ld   $2b         ;03de STW
              617a 003e  ld   $3e         ;03de 'Pen'
              617b 0090  ld   $90         ;03e0 BRA
              617c 001a  ld   $1a
              617d 00cf  ld   $cf         ;03e2 CALL
              617e 005a  ld   $5a         ;03e2 'GrayOut'
              617f 0063  ld   $63         ;03e4 POP
              6180 00ff  ld   $ff         ;03e5 RET
              6181 002b  ld   $2b         ;03e6 STW
              6182 005c  ld   $5c         ;03e6 'CalcSet'
              6183 0093  ld   $93         ;03e8 INC
              6184 001b  ld   $1b
              6185 00ff  ld   $ff         ;03ea RET
              6186 0004  ld   $04         ;| RAM segment address (high byte first)
              6187 0000  ld   $00         ;|
              6188 00f0  ld   $f0         ;| Length (1..256)
              6189 00cd  ld   $cd         ;0400 DEF
              618a 00e4  ld   $e4
              618b 0075  ld   $75         ;0402 PUSH
              618c 0011  ld   $11         ;0403 LDWI
              618d 0000  ld   $00
              618e 0008  ld   $08
              618f 002b  ld   $2b         ;0406 STW
              6190 003e  ld   $3e         ;0406 'Pen'
              6191 0059  ld   $59         ;0408 LDI
              6192 0078  ld   $78
              6193 002b  ld   $2b         ;040a STW
              6194 0040  ld   $40         ;040a 'Height'
              6195 0059  ld   $59         ;040c LDI
              6196 00a0  ld   $a0
              6197 002b  ld   $2b         ;040e STW
              6198 0042  ld   $42         ;040e 'Width'
              6199 002b  ld   $2b         ;0410 STW
              619a 0044  ld   $44         ;0410 'len'
              619b 0059  ld   $59         ;0412 LDI
              619c 0001  ld   $01
              619d 002b  ld   $2b         ;0414 STW
              619e 004c  ld   $4c         ;0414 'DX'
              619f 0059  ld   $59         ;0416 LDI
              61a0 0000  ld   $00
              61a1 002b  ld   $2b         ;0418 STW
              61a2 0048  ld   $48         ;0418 'DY'
              61a3 0011  ld   $11         ;041a LDWI
              61a4 0000  ld   $00
              61a5 0006  ld   $06
              61a6 002b  ld   $2b         ;041d STW
              61a7 0022  ld   $22
              61a8 0059  ld   $59         ;041f LDI
              61a9 0000  ld   $00
              61aa 002b  ld   $2b         ;0421 STW
              61ab 005e  ld   $5e         ;0421 'Level'
              61ac 0059  ld   $59         ;0423 LDI
              61ad 0020  ld   $20
              61ae 002b  ld   $2b         ;0425 STW
              61af 0060  ld   $60         ;0425 'i'
              61b0 0021  ld   $21         ;0427 LDW
              61b1 003e  ld   $3e         ;0427 'Pen'
              61b2 00ad  ld   $ad         ;0429 PEEK
              61b3 0082  ld   $82         ;042a ANDI
              61b4 003f  ld   $3f
              61b5 00b8  ld   $b8         ;042c SUBW
              61b6 0060  ld   $60         ;042c 'i'
              61b7 0035  ld   $35         ;042e BCC
              61b8 0050  ld   $50         ;042f LT
              61b9 0042  ld   $42
              61ba 00f0  ld   $f0         ;0431 POKE
              61bb 003e  ld   $3e         ;0431 'Pen'
              61bc 0021  ld   $21         ;0433 LDW
              61bd 0060  ld   $60         ;0433 'i'
              61be 0082  ld   $82         ;0435 ANDI
              61bf 0015  ld   $15
              61c0 0035  ld   $35         ;0437 BCC
              61c1 003f  ld   $3f         ;0438 EQ
              61c2 003c  ld   $3c
              61c3 0059  ld   $59         ;043a LDI
              61c4 0001  ld   $01
              61c5 0090  ld   $90         ;043c BRA
              61c6 003e  ld   $3e
              61c7 0059  ld   $59         ;043e LDI
              61c8 0002  ld   $02
              61c9 0099  ld   $99         ;0440 ADDW
              61ca 005e  ld   $5e         ;0440 'Level'
              61cb 002b  ld   $2b         ;0442 STW
              61cc 005e  ld   $5e         ;0442 'Level'
              61cd 0021  ld   $21         ;0444 LDW
              61ce 0060  ld   $60         ;0444 'i'
              61cf 00b4  ld   $b4         ;0446 SYS
              61d0 00f7  ld   $f7
              61d1 0035  ld   $35         ;0448 BCC
              61d2 004d  ld   $4d         ;0449 GT
              61d3 0023  ld   $23
              61d4 00f0  ld   $f0         ;044b POKE
              61d5 003e  ld   $3e         ;044b 'Pen'
              61d6 0021  ld   $21         ;044d LDW
              61d7 005e  ld   $5e         ;044d 'Level'
              61d8 0035  ld   $35         ;044f BCC
              61d9 003f  ld   $3f         ;0450 EQ
              61da 0083  ld   $83
              61db 001a  ld   $1a         ;0452 LD
              61dc 003f  ld   $3f         ;0452 'Pen'+1
              61dd 0082  ld   $82         ;0454 ANDI
              61de 0001  ld   $01
              61df 002b  ld   $2b         ;0456 STW
              61e0 0060  ld   $60         ;0456 'i'
              61e1 0099  ld   $99         ;0458 ADDW
              61e2 0060  ld   $60         ;0458 'i'
              61e3 002b  ld   $2b         ;045a STW
              61e4 0060  ld   $60         ;045a 'i'
              61e5 0021  ld   $21         ;045c LDW
              61e6 003e  ld   $3e         ;045c 'Pen'
              61e7 0082  ld   $82         ;045e ANDI
              61e8 0001  ld   $01
              61e9 0099  ld   $99         ;0460 ADDW
              61ea 0060  ld   $60         ;0460 'i'
              61eb 002b  ld   $2b         ;0462 STW
              61ec 0060  ld   $60         ;0462 'i'
              61ed 00cd  ld   $cd         ;0464 DEF
              61ee 0068  ld   $68
              61ef 0000  ld   $00
              61f0 0002  ld   $02
              61f1 0003  ld   $03
              61f2 0001  ld   $01
              61f3 0099  ld   $99         ;046a ADDW
              61f4 0060  ld   $60         ;046a 'i'
              61f5 00ad  ld   $ad         ;046c PEEK
              61f6 0099  ld   $99         ;046d ADDW
              61f7 005e  ld   $5e         ;046d 'Level'
              61f8 00e6  ld   $e6         ;046f SUBI
              61f9 0001  ld   $01
              61fa 002b  ld   $2b         ;0471 STW
              61fb fe00  bra  ac          ;+-----------------------------------+
              61fc fcfd  bra  $61fd       ;|                                   |
              61fd 1418  ld   $18,y       ;| Trampoline for page $6100 lookups |
              61fe e006  jmp  y,$06       ;|                                   |
              61ff c218  st   [$18]       ;+-----------------------------------+
              6200 005e  ld   $5e         ;0471 'Level'
              6201 0021  ld   $21         ;0473 LDW
              6202 005e  ld   $5e         ;0473 'Level'
              6203 00e6  ld   $e6         ;0475 SUBI
              6204 0003  ld   $03
              6205 0035  ld   $35         ;0477 BCC
              6206 0050  ld   $50         ;0478 LT
              6207 0083  ld   $83
              6208 002b  ld   $2b         ;047a STW
              6209 005e  ld   $5e         ;047a 'Level'
              620a 0021  ld   $21         ;047c LDW
              620b 003e  ld   $3e         ;047c 'Pen'
              620c 00ad  ld   $ad         ;047e PEEK
              620d 00e3  ld   $e3         ;047f ADDI
              620e 0015  ld   $15
              620f 00f0  ld   $f0         ;0481 POKE
              6210 003e  ld   $3e         ;0481 'Pen'
              6211 0090  ld   $90         ;0483 BRA
              6212 0071  ld   $71
              6213 0021  ld   $21         ;0485 LDW
              6214 0044  ld   $44         ;0485 'len'
              6215 00e6  ld   $e6         ;0487 SUBI
              6216 0001  ld   $01
              6217 0035  ld   $35         ;0489 BCC
              6218 004d  ld   $4d         ;048a GT
              6219 00ab  ld   $ab
              621a 0021  ld   $21         ;048c LDW
              621b 0048  ld   $48         ;048c 'DY'
              621c 002b  ld   $2b         ;048e STW
              621d 0056  ld   $56         ;048e 'tmp'
              621e 0021  ld   $21         ;0490 LDW
              621f 004c  ld   $4c         ;0490 'DX'
              6220 002b  ld   $2b         ;0492 STW
              6221 0048  ld   $48         ;0492 'DY'
              6222 0059  ld   $59         ;0494 LDI
              6223 0000  ld   $00
              6224 00b8  ld   $b8         ;0496 SUBW
              6225 0056  ld   $56         ;0496 'tmp'
              6226 002b  ld   $2b         ;0498 STW
              6227 004c  ld   $4c         ;0498 'DX'
              6228 0021  ld   $21         ;049a LDW
              6229 004c  ld   $4c         ;049a 'DX'
              622a 0035  ld   $35         ;049c BCC
              622b 003f  ld   $3f         ;049d EQ
              622c 00a5  ld   $a5
              622d 0021  ld   $21         ;049f LDW
              622e 0042  ld   $42         ;049f 'Width'
              622f 00e6  ld   $e6         ;04a1 SUBI
              6230 0001  ld   $01
              6231 002b  ld   $2b         ;04a3 STW
              6232 0042  ld   $42         ;04a3 'Width'
              6233 0090  ld   $90         ;04a5 BRA
              6234 00ab  ld   $ab
              6235 0021  ld   $21         ;04a7 LDW
              6236 0040  ld   $40         ;04a7 'Height'
              6237 00e6  ld   $e6         ;04a9 SUBI
              6238 0001  ld   $01
              6239 002b  ld   $2b         ;04ab STW
              623a 0040  ld   $40         ;04ab 'Height'
              623b 002b  ld   $2b         ;04ad STW
              623c 0044  ld   $44         ;04ad 'len'
              623d 0035  ld   $35         ;04af BCC
              623e 0056  ld   $56         ;04b0 LE
              623f 00e2  ld   $e2
              6240 0021  ld   $21         ;04b2 LDW
              6241 004c  ld   $4c         ;04b2 'DX'
              6242 0035  ld   $35         ;04b4 BCC
              6243 0053  ld   $53         ;04b5 GE
              6244 00bb  ld   $bb
              6245 0021  ld   $21         ;04b7 LDW
              6246 003e  ld   $3e         ;04b7 'Pen'
              6247 00e6  ld   $e6         ;04b9 SUBI
              6248 0001  ld   $01
              6249 002b  ld   $2b         ;04bb STW
              624a 003e  ld   $3e         ;04bb 'Pen'
              624b 0021  ld   $21         ;04bd LDW
              624c 004c  ld   $4c         ;04bd 'DX'
              624d 0035  ld   $35         ;04bf BCC
              624e 0056  ld   $56         ;04c0 LE
              624f 00c6  ld   $c6
              6250 0021  ld   $21         ;04c2 LDW
              6251 003e  ld   $3e         ;04c2 'Pen'
              6252 00e3  ld   $e3         ;04c4 ADDI
              6253 0001  ld   $01
              6254 002b  ld   $2b         ;04c6 STW
              6255 003e  ld   $3e         ;04c6 'Pen'
              6256 0021  ld   $21         ;04c8 LDW
              6257 0048  ld   $48         ;04c8 'DY'
              6258 0035  ld   $35         ;04ca BCC
              6259 0053  ld   $53         ;04cb GE
              625a 00d2  ld   $d2
              625b 0011  ld   $11         ;04cd LDWI
              625c 0000  ld   $00
              625d 00ff  ld   $ff
              625e 0099  ld   $99         ;04d0 ADDW
              625f 003e  ld   $3e         ;04d0 'Pen'
              6260 002b  ld   $2b         ;04d2 STW
              6261 003e  ld   $3e         ;04d2 'Pen'
              6262 0021  ld   $21         ;04d4 LDW
              6263 0048  ld   $48         ;04d4 'DY'
              6264 0035  ld   $35         ;04d6 BCC
              6265 0056  ld   $56         ;04d7 LE
              6266 00de  ld   $de
              6267 0011  ld   $11         ;04d9 LDWI
              6268 0000  ld   $00
              6269 0001  ld   $01
              626a 0099  ld   $99         ;04dc ADDW
              626b 003e  ld   $3e         ;04dc 'Pen'
              626c 002b  ld   $2b         ;04de STW
              626d 003e  ld   $3e         ;04de 'Pen'
              626e 00cf  ld   $cf         ;04e0 CALL
              626f 004e  ld   $4e         ;04e0 'UpdateClock'
              6270 0090  ld   $90         ;04e2 BRA
              6271 0018  ld   $18
              6272 0063  ld   $63         ;04e4 POP
              6273 00ff  ld   $ff         ;04e5 RET
              6274 002b  ld   $2b         ;04e6 STW
              6275 005a  ld   $5a         ;04e6 'GrayOut'
              6276 0011  ld   $11         ;04e8 LDWI
              6277 001a  ld   $1a
              6278 0020  ld   $20
              6279 002b  ld   $2b         ;04eb STW
              627a 0062  ld   $62         ;04eb 'Separator'
              627b 0093  ld   $93         ;04ed INC
              627c 001b  ld   $1b
              627d 00ff  ld   $ff         ;04ef RET
              627e 0005  ld   $05         ;| RAM segment address (high byte first)
              627f 0000  ld   $00         ;|
              6280 00f6  ld   $f6         ;| Length (1..256)
              6281 00cd  ld   $cd         ;0500 DEF
              6282 00a4  ld   $a4
              6283 001a  ld   $1a         ;0502 LD
              6284 000e  ld   $0e
              6285 00b8  ld   $b8         ;0504 SUBW
              6286 0064  ld   $64         ;0504 'LastFrame'
              6287 0082  ld   $82         ;0506 ANDI
              6288 00ff  ld   $ff
              6289 002b  ld   $2b         ;0508 STW
              628a 0066  ld   $66         ;0508 'Elapsed'
              628b 00e6  ld   $e6         ;050a SUBI
              628c 003c  ld   $3c
              628d 0035  ld   $35         ;050c BCC
              628e 0053  ld   $53         ;050d GE
              628f 0019  ld   $19
              6290 001a  ld   $1a         ;050f LD
              6291 0011  ld   $11
              6292 0082  ld   $82         ;0511 ANDI
              6293 0080  ld   $80
              6294 0035  ld   $35         ;0513 BCC
              6295 003f  ld   $3f         ;0514 EQ
              6296 0015  ld   $15
              6297 00ff  ld   $ff         ;0516 RET
              6298 0059  ld   $59         ;0517 LDI
              6299 000f  ld   $0f
              629a 0090  ld   $90         ;0519 BRA
              629b 001b  ld   $1b
              629c 0059  ld   $59         ;051b LDI
              629d 003f  ld   $3f
              629e 002b  ld   $2b         ;051d STW
              629f 0068  ld   $68         ;051d 'Color'
              62a0 0075  ld   $75         ;051f PUSH
              62a1 0021  ld   $21         ;0520 LDW
              62a2 006a  ld   $6a         ;0520 'Clock0'
              62a3 0099  ld   $99         ;0522 ADDW
              62a4 0066  ld   $66         ;0522 'Elapsed'
              62a5 002b  ld   $2b         ;0524 STW
              62a6 006a  ld   $6a         ;0524 'Clock0'
              62a7 0021  ld   $21         ;0526 LDW
              62a8 0064  ld   $64         ;0526 'LastFrame'
              62a9 0099  ld   $99         ;0528 ADDW
              62aa 0066  ld   $66         ;0528 'Elapsed'
              62ab 002b  ld   $2b         ;052a STW
              62ac 0064  ld   $64         ;052a 'LastFrame'
              62ad 0011  ld   $11         ;052c LDWI
              62ae 00f1  ld   $f1
              62af 00f1  ld   $f1
              62b0 0099  ld   $99         ;052f ADDW
              62b1 006a  ld   $6a         ;052f 'Clock0'
              62b2 0035  ld   $35         ;0531 BCC
              62b3 0050  ld   $50         ;0532 LT
              62b4 0038  ld   $38
              62b5 002b  ld   $2b         ;0534 STW
              62b6 006a  ld   $6a         ;0534 'Clock0'
              62b7 0059  ld   $59         ;0536 LDI
              62b8 0001  ld   $01
              62b9 00cf  ld   $cf         ;0538 CALL
              62ba 006c  ld   $6c         ;0538 'AddMinutes'
              62bb 001a  ld   $1a         ;053a LD
              62bc 0063  ld   $63         ;053a 'Separator'+1
              62bd 00fc  ld   $fc         ;053c XORW
              62be 0062  ld   $62         ;053c 'Separator'
              62bf 005e  ld   $5e         ;053e ST
              62c0 0063  ld   $63         ;053e 'Separator'+1
              62c1 001a  ld   $1a         ;0540 LD
              62c2 0011  ld   $11
              62c3 008c  ld   $8c         ;0542 XORI
              62c4 0077  ld   $77
              62c5 0035  ld   $35         ;0544 BCC
              62c6 0072  ld   $72         ;0545 NE
              62c7 004b  ld   $4b
              62c8 002b  ld   $2b         ;0547 STW
              62c9 006a  ld   $6a         ;0547 'Clock0'
              62ca 0059  ld   $59         ;0549 LDI
              62cb 0001  ld   $01
              62cc 0090  ld   $90         ;054b BRA
              62cd 0070  ld   $70
              62ce 008c  ld   $8c         ;054d XORI
              62cf 000c  ld   $0c
              62d0 0035  ld   $35         ;054f BCC
              62d1 0072  ld   $72         ;0550 NE
              62d2 0057  ld   $57
              62d3 002b  ld   $2b         ;0552 STW
              62d4 006a  ld   $6a         ;0552 'Clock0'
              62d5 0011  ld   $11         ;0554 LDWI
              62d6 00ff  ld   $ff
              62d7 00ff  ld   $ff
              62d8 0090  ld   $90         ;0557 BRA
              62d9 0070  ld   $70
              62da 008c  ld   $8c         ;0559 XORI
              62db 0006  ld   $06
              62dc 0035  ld   $35         ;055b BCC
              62dd 0072  ld   $72         ;055c NE
              62de 0063  ld   $63
              62df 002b  ld   $2b         ;055e STW
              62e0 006a  ld   $6a         ;055e 'Clock0'
              62e1 0011  ld   $11         ;0560 LDWI
              62e2 00c4  ld   $c4
              62e3 00ff  ld   $ff
              62e4 0090  ld   $90         ;0563 BRA
              62e5 0070  ld   $70
              62e6 008c  ld   $8c         ;0565 XORI
              62e7 0003  ld   $03
              62e8 0035  ld   $35         ;0567 BCC
              62e9 0072  ld   $72         ;0568 NE
              62ea 006e  ld   $6e
              62eb 002b  ld   $2b         ;056a STW
              62ec 006a  ld   $6a         ;056a 'Clock0'
              62ed 0059  ld   $59         ;056c LDI
              62ee 003c  ld   $3c
              62ef 0090  ld   $90         ;056e BRA
              62f0 0070  ld   $70
              62f1 0059  ld   $59         ;0570 LDI
              62f2 0000  ld   $00
              62f3 0035  ld   $35         ;0572 BCC
              62f4 003f  ld   $3f         ;0573 EQ
              62f5 007e  ld   $7e
              62f6 00cf  ld   $cf         ;0575 CALL
              62f7 006c  ld   $6c         ;0575 'AddMinutes'
              62f8 0059  ld   $59         ;0577 LDI
              62f9 0000  ld   $00
              62fa 002b  ld   $2b         ;0579 STW
              62fb fe00  bra  ac          ;+-----------------------------------+
              62fc fcfd  bra  $62fd       ;|                                   |
              62fd 1418  ld   $18,y       ;| Trampoline for page $6200 lookups |
              62fe e006  jmp  y,$06       ;|                                   |
              62ff c218  st   [$18]       ;+-----------------------------------+
              6300 006a  ld   $6a         ;0579 'Clock0'
              6301 0011  ld   $11         ;057b LDWI
              6302 0000  ld   $00
              6303 003a  ld   $3a
              6304 002b  ld   $2b         ;057e STW
              6305 0062  ld   $62         ;057e 'Separator'
              6306 001a  ld   $1a         ;0580 LD
              6307 0011  ld   $11
              6308 0088  ld   $88         ;0582 ORI
              6309 000f  ld   $0f
              630a 005e  ld   $5e         ;0584 ST
              630b 0011  ld   $11
              630c 0011  ld   $11         ;0586 LDWI
              630d 005c  ld   $5c
              630e 0044  ld   $44
              630f 002b  ld   $2b         ;0589 STW
              6310 006e  ld   $6e         ;0589 'Pos'
              6311 0021  ld   $21         ;058b LDW
              6312 0070  ld   $70         ;058b 'Clock1'
              6313 002b  ld   $2b         ;058d STW
              6314 0072  ld   $72         ;058d 'Value'
              6315 0011  ld   $11         ;058f LDWI
              6316 0058  ld   $58
              6317 0002  ld   $02
              6318 00cf  ld   $cf         ;0592 CALL
              6319 0074  ld   $74         ;0592 'NextDigit'
              631a 0059  ld   $59         ;0594 LDI
              631b 003c  ld   $3c
              631c 00cf  ld   $cf         ;0596 CALL
              631d 0074  ld   $74         ;0596 'NextDigit'
              631e 001a  ld   $1a         ;0598 LD
              631f 0063  ld   $63         ;0598 'Separator'+1
              6320 00cf  ld   $cf         ;059a CALL
              6321 0076  ld   $76         ;059a 'PrintChar'
              6322 0059  ld   $59         ;059c LDI
              6323 000a  ld   $0a
              6324 00cf  ld   $cf         ;059e CALL
              6325 0074  ld   $74         ;059e 'NextDigit'
              6326 0059  ld   $59         ;05a0 LDI
              6327 0001  ld   $01
              6328 00cf  ld   $cf         ;05a2 CALL
              6329 0074  ld   $74         ;05a2 'NextDigit'
              632a 0063  ld   $63         ;05a4 POP
              632b 00ff  ld   $ff         ;05a5 RET
              632c 002b  ld   $2b         ;05a6 STW
              632d 004e  ld   $4e         ;05a6 'UpdateClock'
              632e 00cd  ld   $cd         ;05a8 DEF
              632f 00ef  ld   $ef
              6330 00e6  ld   $e6         ;05aa SUBI
              6331 0020  ld   $20
              6332 002b  ld   $2b         ;05ac STW
              6333 0060  ld   $60         ;05ac 'i'
              6334 0011  ld   $11         ;05ae LDWI
              6335 0000  ld   $00
              6336 0007  ld   $07
              6337 002b  ld   $2b         ;05b1 STW
              6338 0078  ld   $78         ;05b1 'fontData'
              6339 0021  ld   $21         ;05b3 LDW
              633a 0060  ld   $60         ;05b3 'i'
              633b 00e9  ld   $e9         ;05b5 LSLW
              633c 00e9  ld   $e9         ;05b6 LSLW
              633d 0099  ld   $99         ;05b7 ADDW
              633e 0060  ld   $60         ;05b7 'i'
              633f 0099  ld   $99         ;05b9 ADDW
              6340 0078  ld   $78         ;05b9 'fontData'
              6341 002b  ld   $2b         ;05bb STW
              6342 0078  ld   $78         ;05bb 'fontData'
              6343 0011  ld   $11         ;05bd LDWI
              6344 0000  ld   $00
              6345 0008  ld   $08
              6346 0099  ld   $99         ;05c0 ADDW
              6347 006e  ld   $6e         ;05c0 'Pos'
              6348 002b  ld   $2b         ;05c2 STW
              6349 007a  ld   $7a         ;05c2 'q'
              634a 0059  ld   $59         ;05c4 LDI
              634b 0000  ld   $00
              634c 005e  ld   $5e         ;05c6 ST
              634d 0024  ld   $24
              634e 0021  ld   $21         ;05c8 LDW
              634f 0068  ld   $68         ;05c8 'Color'
              6350 005e  ld   $5e         ;05ca ST
              6351 0025  ld   $25
              6352 0021  ld   $21         ;05cc LDW
              6353 006e  ld   $6e         ;05cc 'Pos'
              6354 002b  ld   $2b         ;05ce STW
              6355 0028  ld   $28
              6356 00e3  ld   $e3         ;05d0 ADDI
              6357 0006  ld   $06
              6358 002b  ld   $2b         ;05d2 STW
              6359 006e  ld   $6e         ;05d2 'Pos'
              635a 0011  ld   $11         ;05d4 LDWI
              635b 00e1  ld   $e1
              635c 0004  ld   $04
              635d 002b  ld   $2b         ;05d7 STW
              635e 0022  ld   $22
              635f 0059  ld   $59         ;05d9 LDI
              6360 00fb  ld   $fb
              6361 002b  ld   $2b         ;05db STW
              6362 0060  ld   $60         ;05db 'i'
              6363 0021  ld   $21         ;05dd LDW
              6364 0078  ld   $78         ;05dd 'fontData'
              6365 007f  ld   $7f         ;05df LUP
              6366 0000  ld   $00
              6367 0093  ld   $93         ;05e1 INC
              6368 0078  ld   $78         ;05e1 'fontData'
              6369 005e  ld   $5e         ;05e3 ST
              636a 0026  ld   $26
              636b 00b4  ld   $b4         ;05e5 SYS
              636c 00cc  ld   $cc
              636d 0093  ld   $93         ;05e7 INC
              636e 0028  ld   $28
              636f 0093  ld   $93         ;05e9 INC
              6370 0060  ld   $60         ;05e9 'i'
              6371 0021  ld   $21         ;05eb LDW
              6372 0060  ld   $60         ;05eb 'i'
              6373 0035  ld   $35         ;05ed BCC
              6374 0072  ld   $72         ;05ee NE
              6375 00db  ld   $db
              6376 00ff  ld   $ff         ;05f0 RET
              6377 002b  ld   $2b         ;05f1 STW
              6378 0076  ld   $76         ;05f1 'PrintChar'
              6379 0093  ld   $93         ;05f3 INC
              637a 001b  ld   $1b
              637b 00ff  ld   $ff         ;05f5 RET
              637c 0006  ld   $06         ;| RAM segment address (high byte first)
              637d 0000  ld   $00         ;|
              637e 00fe  ld   $fe         ;| Length (1..256)
              637f 00cd  ld   $cd         ;0600 DEF
              6380 001d  ld   $1d
              6381 0075  ld   $75         ;0602 PUSH
              6382 002b  ld   $2b         ;0603 STW
              6383 007c  ld   $7c         ;0603 'Radix'
              6384 0059  ld   $59         ;0605 LDI
              6385 0030  ld   $30
              6386 002b  ld   $2b         ;0607 STW
              6387 007e  ld   $7e         ;0607 'Digit'
              6388 0021  ld   $21         ;0609 LDW
              6389 0072  ld   $72         ;0609 'Value'
              638a 00b8  ld   $b8         ;060b SUBW
              638b 007c  ld   $7c         ;060b 'Radix'
              638c 0035  ld   $35         ;060d BCC
              638d 0050  ld   $50         ;060e LT
              638e 0017  ld   $17
              638f 002b  ld   $2b         ;0610 STW
              6390 0072  ld   $72         ;0610 'Value'
              6391 0093  ld   $93         ;0612 INC
              6392 007e  ld   $7e         ;0612 'Digit'
              6393 00b8  ld   $b8         ;0614 SUBW
              6394 007c  ld   $7c         ;0614 'Radix'
              6395 0035  ld   $35         ;0616 BCC
              6396 0053  ld   $53         ;0617 GE
              6397 000e  ld   $0e
              6398 0021  ld   $21         ;0619 LDW
              6399 007e  ld   $7e         ;0619 'Digit'
              639a 00cf  ld   $cf         ;061b CALL
              639b 0076  ld   $76         ;061b 'PrintChar'
              639c 0063  ld   $63         ;061d POP
              639d 00ff  ld   $ff         ;061e RET
              639e 002b  ld   $2b         ;061f STW
              639f 0074  ld   $74         ;061f 'NextDigit'
              63a0 00cd  ld   $cd         ;0621 DEF
              63a1 003a  ld   $3a
              63a2 0099  ld   $99         ;0623 ADDW
              63a3 0070  ld   $70         ;0623 'Clock1'
              63a4 002b  ld   $2b         ;0625 STW
              63a5 0070  ld   $70         ;0625 'Clock1'
              63a6 0035  ld   $35         ;0627 BCC
              63a7 0053  ld   $53         ;0628 GE
              63a8 002f  ld   $2f
              63a9 0011  ld   $11         ;062a LDWI
              63aa 00a0  ld   $a0
              63ab 0005  ld   $05
              63ac 0099  ld   $99         ;062d ADDW
              63ad 0070  ld   $70         ;062d 'Clock1'
              63ae 002b  ld   $2b         ;062f STW
              63af 0070  ld   $70         ;062f 'Clock1'
              63b0 0011  ld   $11         ;0631 LDWI
              63b1 0060  ld   $60
              63b2 00fa  ld   $fa
              63b3 0099  ld   $99         ;0634 ADDW
              63b4 0070  ld   $70         ;0634 'Clock1'
              63b5 0035  ld   $35         ;0636 BCC
              63b6 0050  ld   $50         ;0637 LT
              63b7 0039  ld   $39
              63b8 002b  ld   $2b         ;0639 STW
              63b9 0070  ld   $70         ;0639 'Clock1'
              63ba 00ff  ld   $ff         ;063b RET
              63bb 002b  ld   $2b         ;063c STW
              63bc 006c  ld   $6c         ;063c 'AddMinutes'
              63bd 00cd  ld   $cd         ;063e DEF
              63be 008e  ld   $8e
              63bf 0075  ld   $75         ;0640 PUSH
              63c0 0059  ld   $59         ;0641 LDI
              63c1 0000  ld   $00
              63c2 002b  ld   $2b         ;0643 STW
              63c3 0081  ld   $81         ;0643 'X'
              63c4 002b  ld   $2b         ;0645 STW
              63c5 0083  ld   $83         ;0645 'XX'
              63c6 002b  ld   $2b         ;0647 STW
              63c7 0085  ld   $85         ;0647 'Y'
              63c8 002b  ld   $2b         ;0649 STW
              63c9 0052  ld   $52         ;0649 'YY'
              63ca 002b  ld   $2b         ;064b STW
              63cb 0060  ld   $60         ;064b 'i'
              63cc 0021  ld   $21         ;064d LDW
              63cd 0060  ld   $60         ;064d 'i'
              63ce 00e3  ld   $e3         ;064f ADDI
              63cf 0001  ld   $01
              63d0 002b  ld   $2b         ;0651 STW
              63d1 0060  ld   $60         ;0651 'i'
              63d2 008c  ld   $8c         ;0653 XORI
              63d3 0040  ld   $40
              63d4 0035  ld   $35         ;0655 BCC
              63d5 003f  ld   $3f         ;0656 EQ
              63d6 008c  ld   $8c
              63d7 0021  ld   $21         ;0658 LDW
              63d8 0081  ld   $81         ;0658 'X'
              63d9 002b  ld   $2b         ;065a STW
              63da 0034  ld   $34         ;065a 'A'
              63db 0021  ld   $21         ;065c LDW
              63dc 0085  ld   $85         ;065c 'Y'
              63dd 0099  ld   $99         ;065e ADDW
              63de 0085  ld   $85         ;065e 'Y'
              63df 002b  ld   $2b         ;0660 STW
              63e0 0036  ld   $36         ;0660 'B'
              63e1 00cf  ld   $cf         ;0662 CALL
              63e2 003c  ld   $3c         ;0662 'MulShift7'
              63e3 0099  ld   $99         ;0664 ADDW
              63e4 0050  ld   $50         ;0664 'Y0'
              63e5 002b  ld   $2b         ;0666 STW
              63e6 0085  ld   $85         ;0666 'Y'
              63e7 0021  ld   $21         ;0668 LDW
              63e8 0083  ld   $83         ;0668 'XX'
              63e9 00b8  ld   $b8         ;066a SUBW
              63ea 0052  ld   $52         ;066a 'YY'
              63eb 0099  ld   $99         ;066c ADDW
              63ec 0054  ld   $54         ;066c 'X0'
              63ed 002b  ld   $2b         ;066e STW
              63ee 0081  ld   $81         ;066e 'X'
              63ef 002b  ld   $2b         ;0670 STW
              63f0 0034  ld   $34         ;0670 'A'
              63f1 002b  ld   $2b         ;0672 STW
              63f2 0036  ld   $36         ;0672 'B'
              63f3 00cf  ld   $cf         ;0674 CALL
              63f4 003c  ld   $3c         ;0674 'MulShift7'
              63f5 002b  ld   $2b         ;0676 STW
              63f6 0083  ld   $83         ;0676 'XX'
              63f7 0021  ld   $21         ;0678 LDW
              63f8 0085  ld   $85         ;0678 'Y'
              63f9 002b  ld   $2b         ;067a STW
              63fa 0034  ld   $34         ;067a 'A'
              63fb fe00  bra  ac          ;+-----------------------------------+
              63fc fcfd  bra  $63fd       ;|                                   |
              63fd 1418  ld   $18,y       ;| Trampoline for page $6300 lookups |
              63fe e006  jmp  y,$06       ;|                                   |
              63ff c218  st   [$18]       ;+-----------------------------------+
              6400 002b  ld   $2b         ;067c STW
              6401 0036  ld   $36         ;067c 'B'
              6402 00cf  ld   $cf         ;067e CALL
              6403 003c  ld   $3c         ;067e 'MulShift7'
              6404 002b  ld   $2b         ;0680 STW
              6405 0052  ld   $52         ;0680 'YY'
              6406 0011  ld   $11         ;0682 LDWI
              6407 0000  ld   $00
              6408 00fe  ld   $fe
              6409 0099  ld   $99         ;0685 ADDW
              640a 0083  ld   $83         ;0685 'XX'
              640b 0099  ld   $99         ;0687 ADDW
              640c 0052  ld   $52         ;0687 'YY'
              640d 0035  ld   $35         ;0689 BCC
              640e 0056  ld   $56         ;068a LE
              640f 004b  ld   $4b
              6410 0021  ld   $21         ;068c LDW
              6411 0060  ld   $60         ;068c 'i'
              6412 0063  ld   $63         ;068e POP
              6413 00ff  ld   $ff         ;068f RET
              6414 002b  ld   $2b         ;0690 STW
              6415 0058  ld   $58         ;0690 'CalcPixel'
              6416 0059  ld   $59         ;0692 LDI
              6417 0000  ld   $00
              6418 002b  ld   $2b         ;0694 STW
              6419 006a  ld   $6a         ;0694 'Clock0'
              641a 002b  ld   $2b         ;0696 STW
              641b 0070  ld   $70         ;0696 'Clock1'
              641c 002b  ld   $2b         ;0698 STW
              641d 007e  ld   $7e         ;0698 'Digit'
              641e 001a  ld   $1a         ;069a LD
              641f 000e  ld   $0e
              6420 002b  ld   $2b         ;069c STW
              6421 0064  ld   $64         ;069c 'LastFrame'
              6422 0011  ld   $11         ;069e LDWI
              6423 004c  ld   $4c
              6424 00ff  ld   $ff
              6425 002b  ld   $2b         ;06a1 STW
              6426 0050  ld   $50         ;06a1 'Y0'
              6427 0011  ld   $11         ;06a3 LDWI
              6428 00c0  ld   $c0
              6429 00fe  ld   $fe
              642a 002b  ld   $2b         ;06a6 STW
              642b 0054  ld   $54         ;06a6 'X0'
              642c 0059  ld   $59         ;06a8 LDI
              642d 0003  ld   $03
              642e 002b  ld   $2b         ;06aa STW
              642f 004a  ld   $4a         ;06aa 'Step'
              6430 00cf  ld   $cf         ;06ac CALL
              6431 005c  ld   $5c         ;06ac 'CalcSet'
              6432 0011  ld   $11         ;06ae LDWI
              6433 006c  ld   $6c
              6434 00ff  ld   $ff
              6435 002b  ld   $2b         ;06b1 STW
              6436 0050  ld   $50         ;06b1 'Y0'
              6437 0011  ld   $11         ;06b3 LDWI
              6438 009e  ld   $9e
              6439 00ff  ld   $ff
              643a 002b  ld   $2b         ;06b6 STW
              643b 0054  ld   $54         ;06b6 'X0'
              643c 0059  ld   $59         ;06b8 LDI
              643d 0001  ld   $01
              643e 002b  ld   $2b         ;06ba STW
              643f 004a  ld   $4a         ;06ba 'Step'
              6440 00cf  ld   $cf         ;06bc CALL
              6441 005c  ld   $5c         ;06bc 'CalcSet'
              6442 0011  ld   $11         ;06be LDWI
              6443 00c4  ld   $c4
              6444 00ff  ld   $ff
              6445 002b  ld   $2b         ;06c1 STW
              6446 0050  ld   $50         ;06c1 'Y0'
              6447 0011  ld   $11         ;06c3 LDWI
              6448 0000  ld   $00
              6449 00ff  ld   $ff
              644a 002b  ld   $2b         ;06c6 STW
              644b 0054  ld   $54         ;06c6 'X0'
              644c 0059  ld   $59         ;06c8 LDI
              644d 0001  ld   $01
              644e 002b  ld   $2b         ;06ca STW
              644f 004a  ld   $4a         ;06ca 'Step'
              6450 00cf  ld   $cf         ;06cc CALL
              6451 005c  ld   $5c         ;06cc 'CalcSet'
              6452 0011  ld   $11         ;06ce LDWI
              6453 00c0  ld   $c0
              6454 00fe  ld   $fe
              6455 002b  ld   $2b         ;06d1 STW
              6456 0050  ld   $50         ;06d1 'Y0'
              6457 0011  ld   $11         ;06d3 LDWI
              6458 0098  ld   $98
              6459 00fe  ld   $fe
              645a 002b  ld   $2b         ;06d6 STW
              645b 0054  ld   $54         ;06d6 'X0'
              645c 0059  ld   $59         ;06d8 LDI
              645d 0009  ld   $09
              645e 002b  ld   $2b         ;06da STW
              645f 004a  ld   $4a         ;06da 'Step'
              6460 00cf  ld   $cf         ;06dc CALL
              6461 005c  ld   $5c         ;06dc 'CalcSet'
              6462 0059  ld   $59         ;06de LDI
              6463 0000  ld   $00
              6464 002b  ld   $2b         ;06e0 STW
              6465 0050  ld   $50         ;06e0 'Y0'
              6466 0011  ld   $11         ;06e2 LDWI
              6467 009c  ld   $9c
              6468 00ff  ld   $ff
              6469 002b  ld   $2b         ;06e5 STW
              646a 0054  ld   $54         ;06e5 'X0'
              646b 0059  ld   $59         ;06e7 LDI
              646c 0001  ld   $01
              646d 002b  ld   $2b         ;06e9 STW
              646e 004a  ld   $4a         ;06e9 'Step'
              646f 00cf  ld   $cf         ;06eb CALL
              6470 005c  ld   $5c         ;06eb 'CalcSet'
              6471 0011  ld   $11         ;06ed LDWI
              6472 00c4  ld   $c4
              6473 00ff  ld   $ff
              6474 002b  ld   $2b         ;06f0 STW
              6475 0050  ld   $50         ;06f0 'Y0'
              6476 0059  ld   $59         ;06f2 LDI
              6477 0000  ld   $00
              6478 002b  ld   $2b         ;06f4 STW
              6479 0054  ld   $54         ;06f4 'X0'
              647a 0059  ld   $59         ;06f6 LDI
              647b 0001  ld   $01
              647c 002b  ld   $2b         ;06f8 STW
              647d 004a  ld   $4a         ;06f8 'Step'
              647e 00cf  ld   $cf         ;06fa CALL
              647f 005c  ld   $5c         ;06fa 'CalcSet'
              6480 0090  ld   $90         ;06fc BRA
              6481 009c  ld   $9c
              6482 0000  ld   $00         ;End of Apps/Mandelbrot/Mandelbrot_v1.gcl, size 1255
                                          ;+-----------------------------------+
                                          ;| Apps/Loader/Loader_v4.gcl         |
                                          ;+-----------------------------------+
              6483 dc4d  st   $4d,[y,x++] ;'M'
              6484 dc61  st   $61,[y,x++] ;'a'
              6485 dc6e  st   $6e,[y,x++] ;'n'
              6486 dc64  st   $64,[y,x++] ;'d'
              6487 dc65  st   $65,[y,x++] ;'e'
              6488 dc6c  st   $6c,[y,x++] ;'l'
              6489 dc62  st   $62,[y,x++] ;'b'
              648a dc72  st   $72,[y,x++] ;'r'
              648b 009c  ld   $9c
              648c c218  st   [$18]
              648d 005f  ld   $5f
              648e 14e0  ld   $e0,y
              648f e071  jmp  y,$71
              6490 c219  st   [$19]
Loader:       6491 0002  ld   $02         ;| RAM segment address (high byte first)
              6492 0000  ld   $00         ;|
              6493 0095  ld   $95         ;| Length (1..256)
              6494 00cd  ld   $cd         ;0200 DEF
              6495 0043  ld   $43
              6496 00e6  ld   $e6         ;0202 SUBI
              6497 0052  ld   $52
              6498 0035  ld   $35         ;0204 BCC
              6499 0053  ld   $53         ;0205 GE
              649a 000e  ld   $0e
              649b 00e3  ld   $e3         ;0207 ADDI
              649c 0032  ld   $32
              649d 002b  ld   $2b         ;0209 STW
              649e 0030  ld   $30         ;0209 'i'
              649f 0011  ld   $11         ;020b LDWI
              64a0 0000  ld   $00
              64a1 0007  ld   $07
              64a2 0090  ld   $90         ;020e BRA
              64a3 0013  ld   $13
              64a4 002b  ld   $2b         ;0210 STW
              64a5 0030  ld   $30         ;0210 'i'
              64a6 0011  ld   $11         ;0212 LDWI
              64a7 0000  ld   $00
              64a8 0008  ld   $08
              64a9 002b  ld   $2b         ;0215 STW
              64aa 0032  ld   $32         ;0215 'j'
              64ab 0021  ld   $21         ;0217 LDW
              64ac 0030  ld   $30         ;0217 'i'
              64ad 00e9  ld   $e9         ;0219 LSLW
              64ae 00e9  ld   $e9         ;021a LSLW
              64af 0099  ld   $99         ;021b ADDW
              64b0 0030  ld   $30         ;021b 'i'
              64b1 0099  ld   $99         ;021d ADDW
              64b2 0032  ld   $32         ;021d 'j'
              64b3 002b  ld   $2b         ;021f STW
              64b4 0032  ld   $32         ;021f 'j'
              64b5 0021  ld   $21         ;0221 LDW
              64b6 0034  ld   $34         ;0221 'Pos'
              64b7 002b  ld   $2b         ;0223 STW
              64b8 0028  ld   $28
              64b9 00e3  ld   $e3         ;0225 ADDI
              64ba 0006  ld   $06
              64bb 002b  ld   $2b         ;0227 STW
              64bc 0034  ld   $34         ;0227 'Pos'
              64bd 0059  ld   $59         ;0229 LDI
              64be 0005  ld   $05
              64bf 002b  ld   $2b         ;022b STW
              64c0 0030  ld   $30         ;022b 'i'
              64c1 0021  ld   $21         ;022d LDW
              64c2 0032  ld   $32         ;022d 'j'
              64c3 007f  ld   $7f         ;022f LUP
              64c4 0000  ld   $00
              64c5 005e  ld   $5e         ;0231 ST
              64c6 0026  ld   $26
              64c7 00b4  ld   $b4         ;0233 SYS
              64c8 00cc  ld   $cc
              64c9 0093  ld   $93         ;0235 INC
              64ca 0032  ld   $32         ;0235 'j'
              64cb 0093  ld   $93         ;0237 INC
              64cc 0028  ld   $28
              64cd 0021  ld   $21         ;0239 LDW
              64ce 0030  ld   $30         ;0239 'i'
              64cf 00e6  ld   $e6         ;023b SUBI
              64d0 0001  ld   $01
              64d1 0035  ld   $35         ;023d BCC
              64d2 004d  ld   $4d         ;023e GT
              64d3 0029  ld   $29
              64d4 005e  ld   $5e         ;0240 ST
              64d5 0026  ld   $26
              64d6 00b4  ld   $b4         ;0242 SYS
              64d7 00cc  ld   $cc
              64d8 00ff  ld   $ff         ;0244 RET
              64d9 002b  ld   $2b         ;0245 STW
              64da 0036  ld   $36         ;0245 'PrintChar'
              64db 0011  ld   $11         ;0247 LDWI
              64dc 00e1  ld   $e1
              64dd 0004  ld   $04
              64de 002b  ld   $2b         ;024a STW
              64df 0022  ld   $22         ;024a '_sysFn'
              64e0 0011  ld   $11         ;024c LDWI
              64e1 0020  ld   $20
              64e2 000f  ld   $0f
              64e3 002b  ld   $2b         ;024f STW
              64e4 0024  ld   $24         ;024f '_sysArgs0'
              64e5 0011  ld   $11         ;0251 LDWI
              64e6 0006  ld   $06
              64e7 0050  ld   $50
              64e8 002b  ld   $2b         ;0254 STW
              64e9 0034  ld   $34         ;0254 'Pos'
              64ea 00cd  ld   $cd         ;0256 DEF
              64eb 0065  ld   $65
              64ec 0020  ld   $20         ;0258 ' '
              64ed 0052  ld   $52         ;0259 'R'
              64ee 0065  ld   $65         ;025a 'e'
              64ef 0061  ld   $61         ;025b 'a'
              64f0 0064  ld   $64         ;025c 'd'
              64f1 0079  ld   $79         ;025d 'y'
              64f2 0020  ld   $20         ;025e ' '
              64f3 0074  ld   $74         ;025f 't'
              64f4 006f  ld   $6f         ;0260 'o'
              64f5 0020  ld   $20         ;0261 ' '
              64f6 006c  ld   $6c         ;0262 'l'
              64f7 006f  ld   $6f         ;0263 'o'
              64f8 0061  ld   $61         ;0264 'a'
              64f9 0064  ld   $64         ;0265 'd'
              64fa 0000  ld   $00         ;0266 0
              64fb fe00  bra  ac          ;+-----------------------------------+
              64fc fcfd  bra  $64fd       ;|                                   |
              64fd 1418  ld   $18,y       ;| Trampoline for page $6400 lookups |
              64fe e006  jmp  y,$06       ;|                                   |
              64ff c218  st   [$18]       ;+-----------------------------------+
              6500 002b  ld   $2b         ;0267 STW
              6501 0038  ld   $38         ;0267 'Text'
              6502 0021  ld   $21         ;0269 LDW
              6503 0038  ld   $38         ;0269 'Text'
              6504 00ad  ld   $ad         ;026b PEEK
              6505 0035  ld   $35         ;026c BCC
              6506 003f  ld   $3f         ;026d EQ
              6507 0073  ld   $73
              6508 0093  ld   $93         ;026f INC
              6509 0038  ld   $38         ;026f 'Text'
              650a 00cf  ld   $cf         ;0271 CALL
              650b 0036  ld   $36         ;0271 'PrintChar'
              650c 0090  ld   $90         ;0273 BRA
              650d 0067  ld   $67
              650e 005e  ld   $5e         ;0275 ST
              650f 0028  ld   $28
              6510 0011  ld   $11         ;0277 LDWI
              6511 000c  ld   $0c
              6512 0059  ld   $59
              6513 002b  ld   $2b         ;027a STW
              6514 003a  ld   $3a         ;027a 'A'
              6515 0011  ld   $11         ;027c LDWI
              6516 000c  ld   $0c
              6517 005b  ld   $5b
              6518 002b  ld   $2b         ;027f STW
              6519 003c  ld   $3c         ;027f 'B'
              651a 0059  ld   $59         ;0281 LDI
              651b 0067  ld   $67
              651c 005e  ld   $5e         ;0283 ST
              651d 0026  ld   $26
              651e 0011  ld   $11         ;0285 LDWI
              651f 0000  ld   $00
              6520 0040  ld   $40
              6521 002b  ld   $2b         ;0288 STW
              6522 003e  ld   $3e         ;0288 'NextByteIn_32'
              6523 0011  ld   $11         ;028a LDWI
              6524 0053  ld   $53
              6525 0040  ld   $40
              6526 002b  ld   $2b         ;028d STW
              6527 0040  ld   $40         ;028d 'PayloadCopy_34'
              6528 0011  ld   $11         ;028f LDWI
              6529 000c  ld   $0c
              652a 005a  ld   $5a
              652b 002b  ld   $2b         ;0292 STW
              652c 001a  ld   $1a         ;0292 '_vLR'
              652d 00ff  ld   $ff         ;0294 RET
              652e 005a  ld   $5a         ;| RAM segment address (high byte first)
              652f 000c  ld   $0c         ;|
              6530 0075  ld   $75         ;| Length (1..256)
              6531 0021  ld   $21         ;5a0c LDW
              6532 003c  ld   $3c         ;5a0c 'B'
              6533 002b  ld   $2b         ;5a0e STW
              6534 0024  ld   $24         ;5a0e '_sysArgs0'
              6535 0059  ld   $59         ;5a10 LDI
              6536 00cf  ld   $cf
              6537 005e  ld   $5e         ;5a12 ST
              6538 0027  ld   $27
              6539 0021  ld   $21         ;5a14 LDW
              653a 003e  ld   $3e         ;5a14 'NextByteIn_32'
              653b 002b  ld   $2b         ;5a16 STW
              653c 0022  ld   $22         ;5a16 '_sysFn'
              653d 00b4  ld   $b4         ;5a18 SYS
              653e 00ff  ld   $ff
              653f 0059  ld   $59         ;5a1a LDI
              6540 00db  ld   $db
              6541 005e  ld   $5e         ;5a1c ST
              6542 0027  ld   $27
              6543 00b4  ld   $b4         ;5a1e SYS
              6544 00ff  ld   $ff
              6545 0059  ld   $59         ;5a20 LDI
              6546 00eb  ld   $eb
              6547 005e  ld   $5e         ;5a22 ST
              6548 0027  ld   $27
              6549 00b4  ld   $b4         ;5a24 SYS
              654a 00ff  ld   $ff
              654b 0059  ld   $59         ;5a26 LDI
              654c 00fb  ld   $fb
              654d 005e  ld   $5e         ;5a28 ST
              654e 0027  ld   $27
              654f 00b4  ld   $b4         ;5a2a SYS
              6550 00ff  ld   $ff
              6551 0021  ld   $21         ;5a2c LDW
              6552 0040  ld   $40         ;5a2c 'PayloadCopy_34'
              6553 002b  ld   $2b         ;5a2e STW
              6554 0022  ld   $22         ;5a2e '_sysFn'
              6555 00b4  ld   $b4         ;5a30 SYS
              6556 00fe  ld   $fe
              6557 0059  ld   $59         ;5a32 LDI
              6558 0002  ld   $02
              6559 005e  ld   $5e         ;5a34 ST
              655a 0027  ld   $27
              655b 0021  ld   $21         ;5a36 LDW
              655c 003e  ld   $3e         ;5a36 'NextByteIn_32'
              655d 002b  ld   $2b         ;5a38 STW
              655e 0022  ld   $22         ;5a38 '_sysFn'
              655f 00b4  ld   $b4         ;5a3a SYS
              6560 00ff  ld   $ff
              6561 0059  ld   $59         ;5a3c LDI
              6562 0006  ld   $06
              6563 005e  ld   $5e         ;5a3e ST
              6564 0027  ld   $27
              6565 0021  ld   $21         ;5a40 LDW
              6566 0040  ld   $40         ;5a40 'PayloadCopy_34'
              6567 002b  ld   $2b         ;5a42 STW
              6568 0022  ld   $22         ;5a42 '_sysFn'
              6569 00b4  ld   $b4         ;5a44 SYS
              656a 00fe  ld   $fe
              656b 0021  ld   $21         ;5a46 LDW
              656c 003e  ld   $3e         ;5a46 'NextByteIn_32'
              656d 002b  ld   $2b         ;5a48 STW
              656e 0022  ld   $22         ;5a48 '_sysFn'
              656f 00b4  ld   $b4         ;5a4a SYS
              6570 00ff  ld   $ff
              6571 001a  ld   $1a         ;5a4c LD
              6572 0027  ld   $27
              6573 00e3  ld   $e3         ;5a4e ADDI
              6574 0004  ld   $04
              6575 005e  ld   $5e         ;5a50 ST
              6576 0027  ld   $27
              6577 008c  ld   $8c         ;5a52 XORI
              6578 00f2  ld   $f2
              6579 0035  ld   $35         ;5a54 BCC
              657a 0072  ld   $72         ;5a55 NE
              657b 003e  ld   $3e
              657c 0059  ld   $59         ;5a57 LDI
              657d 00b9  ld   $b9
              657e 005e  ld   $5e         ;5a59 ST
              657f 0027  ld   $27
              6580 00b4  ld   $b4         ;5a5b SYS
              6581 00ff  ld   $ff
              6582 001a  ld   $1a         ;5a5d LD
              6583 0026  ld   $26
              6584 0035  ld   $35         ;5a5f BCC
              6585 0072  ld   $72         ;5a60 NE
              6586 0064  ld   $64
              6587 0059  ld   $59         ;5a62 LDI
              6588 000c  ld   $0c
              6589 0090  ld   $90         ;5a64 BRA
              658a 0066  ld   $66
              658b 0059  ld   $59         ;5a66 LDI
              658c 0003  ld   $03
              658d 00f0  ld   $f0         ;5a68 POKE
              658e 003a  ld   $3a         ;5a68 'A'
              658f 001a  ld   $1a         ;5a6a LD
              6590 003a  ld   $3a         ;5a6a 'A'
              6591 00e6  ld   $e6         ;5a6c SUBI
              6592 000b  ld   $0b
              6593 0082  ld   $82         ;5a6e ANDI
              6594 007f  ld   $7f
              6595 00e3  ld   $e3         ;5a70 ADDI
              6596 000c  ld   $0c
              6597 005e  ld   $5e         ;5a72 ST
              6598 003a  ld   $3a         ;5a72 'A'
              6599 0059  ld   $59         ;5a74 LDI
              659a 003f  ld   $3f
              659b 00f0  ld   $f0         ;5a76 POKE
              659c 003a  ld   $3a         ;5a76 'A'
              659d 0011  ld   $11         ;5a78 LDWI
              659e 0015  ld   $15
              659f 0040  ld   $40
              65a0 002b  ld   $2b         ;5a7b STW
              65a1 0022  ld   $22         ;5a7b '_sysFn'
              65a2 00b4  ld   $b4         ;5a7d SYS
              65a3 00ef  ld   $ef
              65a4 0090  ld   $90         ;5a7f BRA
              65a5 000a  ld   $0a
              65a6 0000  ld   $00         ;End of Apps/Loader/Loader_v4.gcl, size 278
                                          ;+-----------------------------------+
                                          ;| Apps/Credits/Credits_v3.gcl       |
                                          ;+-----------------------------------+
              65a7 dc4c  st   $4c,[y,x++] ;'L'
              65a8 dc6f  st   $6f,[y,x++] ;'o'
              65a9 dc61  st   $61,[y,x++] ;'a'
              65aa dc64  st   $64,[y,x++] ;'d'
              65ab dc65  st   $65,[y,x++] ;'e'
              65ac dc72  st   $72,[y,x++] ;'r'
              65ad dc00  st   $00,[y,x++] ;'\x00'
              65ae dc00  st   $00,[y,x++] ;'\x00'
              65af 0091  ld   $91
              65b0 c218  st   [$18]
              65b1 0064  ld   $64
              65b2 14e0  ld   $e0,y
              65b3 e071  jmp  y,$71
              65b4 c219  st   [$19]
Credits:      65b5 0002  ld   $02         ;| RAM segment address (high byte first)
              65b6 0000  ld   $00         ;|
              65b7 00d4  ld   $d4         ;| Length (1..256)
              65b8 00cd  ld   $cd         ;0200 DEF
              65b9 0025  ld   $25
              65ba 0075  ld   $75         ;0202 PUSH
              65bb 0021  ld   $21         ;0203 LDW
              65bc 0030  ld   $30         ;0203 'Text'
              65bd 00ad  ld   $ad         ;0205 PEEK
              65be 002b  ld   $2b         ;0206 STW
              65bf 0032  ld   $32         ;0206 'Char'
              65c0 0035  ld   $35         ;0208 BCC
              65c1 003f  ld   $3f         ;0209 EQ
              65c2 0023  ld   $23
              65c3 0093  ld   $93         ;020b INC
              65c4 0030  ld   $30         ;020b 'Text'
              65c5 0021  ld   $21         ;020d LDW
              65c6 0032  ld   $32         ;020d 'Char'
              65c7 008c  ld   $8c         ;020f XORI
              65c8 000a  ld   $0a
              65c9 0035  ld   $35         ;0211 BCC
              65ca 0072  ld   $72         ;0212 NE
              65cb 001f  ld   $1f
              65cc 0059  ld   $59         ;0214 LDI
              65cd 0002  ld   $02
              65ce 005e  ld   $5e         ;0216 ST
              65cf 0034  ld   $34         ;0216 'Pos'
              65d0 0011  ld   $11         ;0218 LDWI
              65d1 0000  ld   $00
              65d2 0008  ld   $08
              65d3 0099  ld   $99         ;021b ADDW
              65d4 0034  ld   $34         ;021b 'Pos'
              65d5 002b  ld   $2b         ;021d STW
              65d6 0034  ld   $34         ;021d 'Pos'
              65d7 0090  ld   $90         ;021f BRA
              65d8 0021  ld   $21
              65d9 00cf  ld   $cf         ;0221 CALL
              65da 0036  ld   $36         ;0221 'PrintChar'
              65db 0090  ld   $90         ;0223 BRA
              65dc 0001  ld   $01
              65dd 0063  ld   $63         ;0225 POP
              65de 00ff  ld   $ff         ;0226 RET
              65df 002b  ld   $2b         ;0227 STW
              65e0 0038  ld   $38         ;0227 'PrintText'
              65e1 00cd  ld   $cd         ;0229 DEF
              65e2 00cd  ld   $cd
              65e3 0054  ld   $54         ;022b 'T'
              65e4 0068  ld   $68         ;022c 'h'
              65e5 0069  ld   $69         ;022d 'i'
              65e6 0073  ld   $73         ;022e 's'
              65e7 0020  ld   $20         ;022f ' '
              65e8 0047  ld   $47         ;0230 'G'
              65e9 0069  ld   $69         ;0231 'i'
              65ea 0067  ld   $67         ;0232 'g'
              65eb 0061  ld   $61         ;0233 'a'
              65ec 0074  ld   $74         ;0234 't'
              65ed 0072  ld   $72         ;0235 'r'
              65ee 006f  ld   $6f         ;0236 'o'
              65ef 006e  ld   $6e         ;0237 'n'
              65f0 0020  ld   $20         ;0238 ' '
              65f1 0054  ld   $54         ;0239 'T'
              65f2 0054  ld   $54         ;023a 'T'
              65f3 004c  ld   $4c         ;023b 'L'
              65f4 0020  ld   $20         ;023c ' '
              65f5 0063  ld   $63         ;023d 'c'
              65f6 006f  ld   $6f         ;023e 'o'
              65f7 006d  ld   $6d         ;023f 'm'
              65f8 0070  ld   $70         ;0240 'p'
              65f9 0075  ld   $75         ;0241 'u'
              65fa 0074  ld   $74         ;0242 't'
              65fb fe00  bra  ac          ;+-----------------------------------+
              65fc fcfd  bra  $65fd       ;|                                   |
              65fd 1418  ld   $18,y       ;| Trampoline for page $6500 lookups |
              65fe e006  jmp  y,$06       ;|                                   |
              65ff c218  st   [$18]       ;+-----------------------------------+
              6600 0065  ld   $65         ;0243 'e'
              6601 0072  ld   $72         ;0244 'r'
              6602 000a  ld   $0a         ;0245 10
              6603 006b  ld   $6b         ;0246 'k'
              6604 0069  ld   $69         ;0247 'i'
              6605 0074  ld   $74         ;0248 't'
              6606 0020  ld   $20         ;0249 ' '
              6607 0077  ld   $77         ;024a 'w'
              6608 0061  ld   $61         ;024b 'a'
              6609 0073  ld   $73         ;024c 's'
              660a 0020  ld   $20         ;024d ' '
              660b 0062  ld   $62         ;024e 'b'
              660c 0072  ld   $72         ;024f 'r'
              660d 006f  ld   $6f         ;0250 'o'
              660e 0075  ld   $75         ;0251 'u'
              660f 0067  ld   $67         ;0252 'g'
              6610 0068  ld   $68         ;0253 'h'
              6611 0074  ld   $74         ;0254 't'
              6612 0020  ld   $20         ;0255 ' '
              6613 0074  ld   $74         ;0256 't'
              6614 006f  ld   $6f         ;0257 'o'
              6615 0020  ld   $20         ;0258 ' '
              6616 0079  ld   $79         ;0259 'y'
              6617 006f  ld   $6f         ;025a 'o'
              6618 0075  ld   $75         ;025b 'u'
              6619 0020  ld   $20         ;025c ' '
              661a 0062  ld   $62         ;025d 'b'
              661b 0079  ld   $79         ;025e 'y'
              661c 000a  ld   $0a         ;025f 10
              661d 004d  ld   $4d         ;0260 'M'
              661e 0061  ld   $61         ;0261 'a'
              661f 0072  ld   $72         ;0262 'r'
              6620 0063  ld   $63         ;0263 'c'
              6621 0065  ld   $65         ;0264 'e'
              6622 006c  ld   $6c         ;0265 'l'
              6623 0020  ld   $20         ;0266 ' '
              6624 0076  ld   $76         ;0267 'v'
              6625 0061  ld   $61         ;0268 'a'
              6626 006e  ld   $6e         ;0269 'n'
              6627 0020  ld   $20         ;026a ' '
              6628 004b  ld   $4b         ;026b 'K'
              6629 0065  ld   $65         ;026c 'e'
              662a 0072  ld   $72         ;026d 'r'
              662b 0076  ld   $76         ;026e 'v'
              662c 0069  ld   $69         ;026f 'i'
              662d 006e  ld   $6e         ;0270 'n'
              662e 0063  ld   $63         ;0271 'c'
              662f 006b  ld   $6b         ;0272 'k'
              6630 0020  ld   $20         ;0273 ' '
              6631 0061  ld   $61         ;0274 'a'
              6632 006e  ld   $6e         ;0275 'n'
              6633 0064  ld   $64         ;0276 'd'
              6634 000a  ld   $0a         ;0277 10
              6635 0057  ld   $57         ;0278 'W'
              6636 0061  ld   $61         ;0279 'a'
              6637 006c  ld   $6c         ;027a 'l'
              6638 0074  ld   $74         ;027b 't'
              6639 0065  ld   $65         ;027c 'e'
              663a 0072  ld   $72         ;027d 'r'
              663b 0020  ld   $20         ;027e ' '
              663c 0042  ld   $42         ;027f 'B'
              663d 0065  ld   $65         ;0280 'e'
              663e 006c  ld   $6c         ;0281 'l'
              663f 0067  ld   $67         ;0282 'g'
              6640 0065  ld   $65         ;0283 'e'
              6641 0072  ld   $72         ;0284 'r'
              6642 0073  ld   $73         ;0285 's'
              6643 002e  ld   $2e         ;0286 '.'
              6644 000a  ld   $0a         ;0287 10
              6645 000a  ld   $0a         ;0288 10
              6646 0060  ld   $60         ;0289 '`'
              6647 0054  ld   $54         ;028a 'T'
              6648 0065  ld   $65         ;028b 'e'
              6649 0074  ld   $74         ;028c 't'
              664a 0072  ld   $72         ;028d 'r'
              664b 006f  ld   $6f         ;028e 'o'
              664c 006e  ld   $6e         ;028f 'n'
              664d 0069  ld   $69         ;0290 'i'
              664e 0073  ld   $73         ;0291 's'
              664f 0027  ld   $27         ;0292 "'"
              6650 0020  ld   $20         ;0293 ' '
              6651 0069  ld   $69         ;0294 'i'
              6652 0073  ld   $73         ;0295 's'
              6653 0020  ld   $20         ;0296 ' '
              6654 0062  ld   $62         ;0297 'b'
              6655 0079  ld   $79         ;0298 'y'
              6656 0020  ld   $20         ;0299 ' '
              6657 0061  ld   $61         ;029a 'a'
              6658 0074  ld   $74         ;029b 't'
              6659 0036  ld   $36         ;029c '6'
              665a 0037  ld   $37         ;029d '7'
              665b 0020  ld   $20         ;029e ' '
              665c 0061  ld   $61         ;029f 'a'
              665d 006e  ld   $6e         ;02a0 'n'
              665e 0064  ld   $64         ;02a1 'd'
              665f 000a  ld   $0a         ;02a2 10
              6660 0060  ld   $60         ;02a3 '`'
              6661 0042  ld   $42         ;02a4 'B'
              6662 0072  ld   $72         ;02a5 'r'
              6663 0069  ld   $69         ;02a6 'i'
              6664 0063  ld   $63         ;02a7 'c'
              6665 006b  ld   $6b         ;02a8 'k'
              6666 0073  ld   $73         ;02a9 's'
              6667 0027  ld   $27         ;02aa "'"
              6668 0020  ld   $20         ;02ab ' '
              6669 0062  ld   $62         ;02ac 'b'
              666a 0079  ld   $79         ;02ad 'y'
              666b 0020  ld   $20         ;02ae ' '
              666c 0078  ld   $78         ;02af 'x'
              666d 0062  ld   $62         ;02b0 'b'
              666e 0078  ld   $78         ;02b1 'x'
              666f 002e  ld   $2e         ;02b2 '.'
              6670 000a  ld   $0a         ;02b3 10
              6671 000a  ld   $0a         ;02b4 10
              6672 0053  ld   $53         ;02b5 'S'
              6673 0070  ld   $70         ;02b6 'p'
              6674 0065  ld   $65         ;02b7 'e'
              6675 0063  ld   $63         ;02b8 'c'
              6676 0069  ld   $69         ;02b9 'i'
              6677 0061  ld   $61         ;02ba 'a'
              6678 006c  ld   $6c         ;02bb 'l'
              6679 0020  ld   $20         ;02bc ' '
              667a 0074  ld   $74         ;02bd 't'
              667b 0068  ld   $68         ;02be 'h'
              667c 0061  ld   $61         ;02bf 'a'
              667d 006e  ld   $6e         ;02c0 'n'
              667e 006b  ld   $6b         ;02c1 'k'
              667f 0073  ld   $73         ;02c2 's'
              6680 0020  ld   $20         ;02c3 ' '
              6681 006d  ld   $6d         ;02c4 'm'
              6682 0075  ld   $75         ;02c5 'u'
              6683 0073  ld   $73         ;02c6 's'
              6684 0074  ld   $74         ;02c7 't'
              6685 0020  ld   $20         ;02c8 ' '
              6686 0067  ld   $67         ;02c9 'g'
              6687 006f  ld   $6f         ;02ca 'o'
              6688 0020  ld   $20         ;02cb ' '
              6689 0074  ld   $74         ;02cc 't'
              668a 006f  ld   $6f         ;02cd 'o'
              668b 0000  ld   $00         ;02ce 0
              668c 002b  ld   $2b         ;02cf STW
              668d 003a  ld   $3a         ;02cf 'Part1'
              668e 0093  ld   $93         ;02d1 INC
              668f 001b  ld   $1b
              6690 00ff  ld   $ff         ;02d3 RET
              6691 0003  ld   $03         ;| RAM segment address (high byte first)
              6692 0000  ld   $00         ;|
              6693 00e8  ld   $e8         ;| Length (1..256)
              6694 00cd  ld   $cd         ;0300 DEF
              6695 0098  ld   $98
              6696 000a  ld   $0a         ;0302 10
              6697 004d  ld   $4d         ;0303 'M'
              6698 0061  ld   $61         ;0304 'a'
              6699 0072  ld   $72         ;0305 'r'
              669a 0063  ld   $63         ;0306 'c'
              669b 002c  ld   $2c         ;0307 ','
              669c 0020  ld   $20         ;0308 ' '
              669d 0050  ld   $50         ;0309 'P'
              669e 0061  ld   $61         ;030a 'a'
              669f 0075  ld   $75         ;030b 'u'
              66a0 006c  ld   $6c         ;030c 'l'
              66a1 002c  ld   $2c         ;030d ','
              66a2 0020  ld   $20         ;030e ' '
              66a3 0049  ld   $49         ;030f 'I'
              66a4 0076  ld   $76         ;0310 'v'
              66a5 0061  ld   $61         ;0311 'a'
              66a6 006e  ld   $6e         ;0312 'n'
              66a7 0061  ld   $61         ;0313 'a'
              66a8 002c  ld   $2c         ;0314 ','
              66a9 0020  ld   $20         ;0315 ' '
              66aa 004f  ld   $4f         ;0316 'O'
              66ab 0073  ld   $73         ;0317 's'
              66ac 0063  ld   $63         ;0318 'c'
              66ad 0061  ld   $61         ;0319 'a'
              66ae 0072  ld   $72         ;031a 'r'
              66af 002c  ld   $2c         ;031b ','
              66b0 000a  ld   $0a         ;031c 10
              66b1 004d  ld   $4d         ;031d 'M'
              66b2 0061  ld   $61         ;031e 'a'
              66b3 0072  ld   $72         ;031f 'r'
              66b4 0074  ld   $74         ;0320 't'
              66b5 0069  ld   $69         ;0321 'i'
              66b6 006a  ld   $6a         ;0322 'j'
              66b7 006e  ld   $6e         ;0323 'n'
              66b8 002c  ld   $2c         ;0324 ','
              66b9 0020  ld   $20         ;0325 ' '
              66ba 0045  ld   $45         ;0326 'E'
              66bb 0072  ld   $72         ;0327 'r'
              66bc 0069  ld   $69         ;0328 'i'
              66bd 006b  ld   $6b         ;0329 'k'
              66be 002c  ld   $2c         ;032a ','
              66bf 0020  ld   $20         ;032b ' '
              66c0 0043  ld   $43         ;032c 'C'
              66c1 0068  ld   $68         ;032d 'h'
              66c2 0075  ld   $75         ;032e 'u'
              66c3 0063  ld   $63         ;032f 'c'
              66c4 006b  ld   $6b         ;0330 'k'
              66c5 002c  ld   $2c         ;0331 ','
              66c6 0020  ld   $20         ;0332 ' '
              66c7 0042  ld   $42         ;0333 'B'
              66c8 0065  ld   $65         ;0334 'e'
              66c9 006e  ld   $6e         ;0335 'n'
              66ca 002c  ld   $2c         ;0336 ','
              66cb 000a  ld   $0a         ;0337 10
              66cc 0044  ld   $44         ;0338 'D'
              66cd 0069  ld   $69         ;0339 'i'
              66ce 0065  ld   $65         ;033a 'e'
              66cf 0074  ld   $74         ;033b 't'
              66d0 0065  ld   $65         ;033c 'e'
              66d1 0072  ld   $72         ;033d 'r'
              66d2 002c  ld   $2c         ;033e ','
              66d3 0020  ld   $20         ;033f ' '
              66d4 004d  ld   $4d         ;0340 'M'
              66d5 0061  ld   $61         ;0341 'a'
              66d6 0072  ld   $72         ;0342 'r'
              66d7 0074  ld   $74         ;0343 't'
              66d8 0069  ld   $69         ;0344 'i'
              66d9 006e  ld   $6e         ;0345 'n'
              66da 002c  ld   $2c         ;0346 ','
              66db 0020  ld   $20         ;0347 ' '
              66dc 0042  ld   $42         ;0348 'B'
              66dd 0072  ld   $72         ;0349 'r'
              66de 0061  ld   $61         ;034a 'a'
              66df 0064  ld   $64         ;034b 'd'
              66e0 002c  ld   $2c         ;034c ','
              66e1 0020  ld   $20         ;034d ' '
              66e2 004c  ld   $4c         ;034e 'L'
              66e3 006f  ld   $6f         ;034f 'o'
              66e4 0075  ld   $75         ;0350 'u'
              66e5 002c  ld   $2c         ;0351 ','
              66e6 000a  ld   $0a         ;0352 10
              66e7 0050  ld   $50         ;0353 'P'
              66e8 0068  ld   $68         ;0354 'h'
              66e9 0069  ld   $69         ;0355 'i'
              66ea 006c  ld   $6c         ;0356 'l'
              66eb 002c  ld   $2c         ;0357 ','
              66ec 0020  ld   $20         ;0358 ' '
              66ed 0042  ld   $42         ;0359 'B'
              66ee 0072  ld   $72         ;035a 'r'
              66ef 0069  ld   $69         ;035b 'i'
              66f0 0061  ld   $61         ;035c 'a'
              66f1 006e  ld   $6e         ;035d 'n'
              66f2 002c  ld   $2c         ;035e ','
              66f3 0020  ld   $20         ;035f ' '
              66f4 0044  ld   $44         ;0360 'D'
              66f5 0061  ld   $61         ;0361 'a'
              66f6 0076  ld   $76         ;0362 'v'
              66f7 0069  ld   $69         ;0363 'i'
              66f8 0064  ld   $64         ;0364 'd'
              66f9 002c  ld   $2c         ;0365 ','
              66fa 0020  ld   $20         ;0366 ' '
              66fb fe00  bra  ac          ;+-----------------------------------+
              66fc fcfd  bra  $66fd       ;|                                   |
              66fd 1418  ld   $18,y       ;| Trampoline for page $6600 lookups |
              66fe e006  jmp  y,$06       ;|                                   |
              66ff c218  st   [$18]       ;+-----------------------------------+
              6700 0044  ld   $44         ;0367 'D'
              6701 0061  ld   $61         ;0368 'a'
              6702 0076  ld   $76         ;0369 'v'
              6703 0065  ld   $65         ;036a 'e'
              6704 002c  ld   $2c         ;036b ','
              6705 000a  ld   $0a         ;036c 10
              6706 0048  ld   $48         ;036d 'H'
              6707 0047  ld   $47         ;036e 'G'
              6708 0020  ld   $20         ;036f ' '
              6709 0061  ld   $61         ;0370 'a'
              670a 006e  ld   $6e         ;0371 'n'
              670b 0064  ld   $64         ;0372 'd'
              670c 0020  ld   $20         ;0373 ' '
              670d 0061  ld   $61         ;0374 'a'
              670e 006c  ld   $6c         ;0375 'l'
              670f 006c  ld   $6c         ;0376 'l'
              6710 0020  ld   $20         ;0377 ' '
              6711 0066  ld   $66         ;0378 'f'
              6712 0061  ld   $61         ;0379 'a'
              6713 006e  ld   $6e         ;037a 'n'
              6714 0073  ld   $73         ;037b 's'
              6715 0021  ld   $21         ;037c '!'
              6716 000a  ld   $0a         ;037d 10
              6717 0020  ld   $20         ;037e ' '
              6718 0020  ld   $20         ;037f ' '
              6719 0020  ld   $20         ;0380 ' '
              671a 0020  ld   $20         ;0381 ' '
              671b 0020  ld   $20         ;0382 ' '
              671c 0020  ld   $20         ;0383 ' '
              671d 0020  ld   $20         ;0384 ' '
              671e 0020  ld   $20         ;0385 ' '
              671f 0020  ld   $20         ;0386 ' '
              6720 0020  ld   $20         ;0387 ' '
              6721 0020  ld   $20         ;0388 ' '
              6722 004d  ld   $4d         ;0389 'M'
              6723 0061  ld   $61         ;038a 'a'
              6724 0072  ld   $72         ;038b 'r'
              6725 0063  ld   $63         ;038c 'c'
              6726 0065  ld   $65         ;038d 'e'
              6727 006c  ld   $6c         ;038e 'l'
              6728 0020  ld   $20         ;038f ' '
              6729 0026  ld   $26         ;0390 '&'
              672a 0020  ld   $20         ;0391 ' '
              672b 0057  ld   $57         ;0392 'W'
              672c 0061  ld   $61         ;0393 'a'
              672d 006c  ld   $6c         ;0394 'l'
              672e 0074  ld   $74         ;0395 't'
              672f 0065  ld   $65         ;0396 'e'
              6730 0072  ld   $72         ;0397 'r'
              6731 000a  ld   $0a         ;0398 10
              6732 0000  ld   $00         ;0399 0
              6733 002b  ld   $2b         ;039a STW
              6734 003c  ld   $3c         ;039a 'Part2'
              6735 00cd  ld   $cd         ;039c DEF
              6736 00cd  ld   $cd
              6737 0011  ld   $11         ;039e LDWI
              6738 0000  ld   $00
              6739 0008  ld   $08
              673a 002b  ld   $2b         ;03a1 STW
              673b 003e  ld   $3e         ;03a1 'p'
              673c 0011  ld   $11         ;03a3 LDWI
              673d 0001  ld   $01
              673e 0088  ld   $88
              673f 002b  ld   $2b         ;03a6 STW
              6740 0040  ld   $40         ;03a6 'i'
              6741 0059  ld   $59         ;03a8 LDI
              6742 0000  ld   $00
              6743 005e  ld   $5e         ;03aa ST
              6744 0024  ld   $24
              6745 005e  ld   $5e         ;03ac ST
              6746 0025  ld   $25
              6747 0011  ld   $11         ;03ae LDWI
              6748 00e1  ld   $e1
              6749 0004  ld   $04
              674a 002b  ld   $2b         ;03b1 STW
              674b 0022  ld   $22
              674c 0021  ld   $21         ;03b3 LDW
              674d 003e  ld   $3e         ;03b3 'p'
              674e 002b  ld   $2b         ;03b5 STW
              674f 0028  ld   $28
              6750 00b4  ld   $b4         ;03b7 SYS
              6751 00cc  ld   $cc
              6752 0011  ld   $11         ;03b9 LDWI
              6753 0000  ld   $00
              6754 0008  ld   $08
              6755 0099  ld   $99         ;03bc ADDW
              6756 003e  ld   $3e         ;03bc 'p'
              6757 002b  ld   $2b         ;03be STW
              6758 003e  ld   $3e         ;03be 'p'
              6759 0035  ld   $35         ;03c0 BCC
              675a 004d  ld   $4d         ;03c1 GT
              675b 00b3  ld   $b3
              675c 0099  ld   $99         ;03c3 ADDW
              675d 0040  ld   $40         ;03c3 'i'
              675e 002b  ld   $2b         ;03c5 STW
              675f 003e  ld   $3e         ;03c5 'p'
              6760 0082  ld   $82         ;03c7 ANDI
              6761 00ff  ld   $ff
              6762 008c  ld   $8c         ;03c9 XORI
              6763 00a0  ld   $a0
              6764 0035  ld   $35         ;03cb BCC
              6765 0072  ld   $72         ;03cc NE
              6766 00b1  ld   $b1
              6767 00ff  ld   $ff         ;03ce RET
              6768 002b  ld   $2b         ;03cf STW
              6769 0042  ld   $42         ;03cf 'ClearScreen'
              676a 00cd  ld   $cd         ;03d1 DEF
              676b 00e1  ld   $e1
              676c 001a  ld   $1a         ;03d3 LD
              676d 000e  ld   $0e
              676e 0099  ld   $99         ;03d5 ADDW
              676f 0044  ld   $44         ;03d5 'Delay'
              6770 0082  ld   $82         ;03d7 ANDI
              6771 00ff  ld   $ff
              6772 002b  ld   $2b         ;03d9 STW
              6773 0046  ld   $46         ;03d9 'tmp'
              6774 001a  ld   $1a         ;03db LD
              6775 000e  ld   $0e
              6776 00b8  ld   $b8         ;03dd SUBW
              6777 0046  ld   $46         ;03dd 'tmp'
              6778 0035  ld   $35         ;03df BCC
              6779 0072  ld   $72         ;03e0 NE
              677a 00d9  ld   $d9
              677b 00ff  ld   $ff         ;03e2 RET
              677c 002b  ld   $2b         ;03e3 STW
              677d 0048  ld   $48         ;03e3 'Wait'
              677e 0093  ld   $93         ;03e5 INC
              677f 001b  ld   $1b
              6780 00ff  ld   $ff         ;03e7 RET
              6781 0004  ld   $04         ;| RAM segment address (high byte first)
              6782 0000  ld   $00         ;|
              6783 0081  ld   $81         ;| Length (1..256)
              6784 00cd  ld   $cd         ;0400 DEF
              6785 004a  ld   $4a
              6786 0021  ld   $21         ;0402 LDW
              6787 0032  ld   $32         ;0402 'Char'
              6788 00e6  ld   $e6         ;0404 SUBI
              6789 0052  ld   $52
              678a 0035  ld   $35         ;0406 BCC
              678b 0053  ld   $53         ;0407 GE
              678c 0010  ld   $10
              678d 00e3  ld   $e3         ;0409 ADDI
              678e 0032  ld   $32
              678f 002b  ld   $2b         ;040b STW
              6790 0040  ld   $40         ;040b 'i'
              6791 0011  ld   $11         ;040d LDWI
              6792 0000  ld   $00
              6793 0007  ld   $07
              6794 0090  ld   $90         ;0410 BRA
              6795 0015  ld   $15
              6796 002b  ld   $2b         ;0412 STW
              6797 0040  ld   $40         ;0412 'i'
              6798 0011  ld   $11         ;0414 LDWI
              6799 0000  ld   $00
              679a 0008  ld   $08
              679b 002b  ld   $2b         ;0417 STW
              679c 004a  ld   $4a         ;0417 'fontData'
              679d 0021  ld   $21         ;0419 LDW
              679e 0040  ld   $40         ;0419 'i'
              679f 00e9  ld   $e9         ;041b LSLW
              67a0 00e9  ld   $e9         ;041c LSLW
              67a1 0099  ld   $99         ;041d ADDW
              67a2 0040  ld   $40         ;041d 'i'
              67a3 0099  ld   $99         ;041f ADDW
              67a4 004a  ld   $4a         ;041f 'fontData'
              67a5 002b  ld   $2b         ;0421 STW
              67a6 004a  ld   $4a         ;0421 'fontData'
              67a7 0021  ld   $21         ;0423 LDW
              67a8 004c  ld   $4c         ;0423 'Color'
              67a9 005e  ld   $5e         ;0425 ST
              67aa 0025  ld   $25
              67ab 0021  ld   $21         ;0427 LDW
              67ac 0034  ld   $34         ;0427 'Pos'
              67ad 002b  ld   $2b         ;0429 STW
              67ae 0028  ld   $28
              67af 00e3  ld   $e3         ;042b ADDI
              67b0 0006  ld   $06
              67b1 002b  ld   $2b         ;042d STW
              67b2 0034  ld   $34         ;042d 'Pos'
              67b3 0011  ld   $11         ;042f LDWI
              67b4 00e1  ld   $e1
              67b5 0004  ld   $04
              67b6 002b  ld   $2b         ;0432 STW
              67b7 0022  ld   $22
              67b8 0059  ld   $59         ;0434 LDI
              67b9 00fb  ld   $fb
              67ba 002b  ld   $2b         ;0436 STW
              67bb 0040  ld   $40         ;0436 'i'
              67bc 0021  ld   $21         ;0438 LDW
              67bd 004a  ld   $4a         ;0438 'fontData'
              67be 007f  ld   $7f         ;043a LUP
              67bf 0000  ld   $00
              67c0 0093  ld   $93         ;043c INC
              67c1 004a  ld   $4a         ;043c 'fontData'
              67c2 005e  ld   $5e         ;043e ST
              67c3 0026  ld   $26
              67c4 00b4  ld   $b4         ;0440 SYS
              67c5 00cc  ld   $cc
              67c6 0093  ld   $93         ;0442 INC
              67c7 0028  ld   $28
              67c8 0093  ld   $93         ;0444 INC
              67c9 0040  ld   $40         ;0444 'i'
              67ca 0021  ld   $21         ;0446 LDW
              67cb 0040  ld   $40         ;0446 'i'
              67cc 0035  ld   $35         ;0448 BCC
              67cd 0072  ld   $72         ;0449 NE
              67ce 0036  ld   $36
              67cf 00ff  ld   $ff         ;044b RET
              67d0 002b  ld   $2b         ;044c STW
              67d1 0036  ld   $36         ;044c 'PrintChar'
              67d2 0011  ld   $11         ;044e LDWI
              67d3 0002  ld   $02
              67d4 0008  ld   $08
              67d5 002b  ld   $2b         ;0451 STW
              67d6 0034  ld   $34         ;0451 'Pos'
              67d7 00cf  ld   $cf         ;0453 CALL
              67d8 0042  ld   $42         ;0453 'ClearScreen'
              67d9 0059  ld   $59         ;0455 LDI
              67da 003e  ld   $3e
              67db 002b  ld   $2b         ;0457 STW
              67dc 004c  ld   $4c         ;0457 'Color'
              67dd 0011  ld   $11         ;0459 LDWI
              67de 0000  ld   $00
              67df 0008  ld   $08
              67e0 002b  ld   $2b         ;045c STW
              67e1 0034  ld   $34         ;045c 'Pos'
              67e2 0021  ld   $21         ;045e LDW
              67e3 003a  ld   $3a         ;045e 'Part1'
              67e4 002b  ld   $2b         ;0460 STW
              67e5 0030  ld   $30         ;0460 'Text'
              67e6 00cf  ld   $cf         ;0462 CALL
              67e7 0038  ld   $38         ;0462 'PrintText'
              67e8 0021  ld   $21         ;0464 LDW
              67e9 003c  ld   $3c         ;0464 'Part2'
              67ea 002b  ld   $2b         ;0466 STW
              67eb 0030  ld   $30         ;0466 'Text'
              67ec 00cf  ld   $cf         ;0468 CALL
              67ed 0038  ld   $38         ;0468 'PrintText'
              67ee 0059  ld   $59         ;046a LDI
              67ef 00f0  ld   $f0
              67f0 002b  ld   $2b         ;046c STW
              67f1 0044  ld   $44         ;046c 'Delay'
              67f2 00cf  ld   $cf         ;046e CALL
              67f3 0048  ld   $48         ;046e 'Wait'
              67f4 0021  ld   $21         ;0470 LDW
              67f5 004c  ld   $4c         ;0470 'Color'
              67f6 008c  ld   $8c         ;0472 XORI
              67f7 0008  ld   $08
              67f8 0035  ld   $35         ;0474 BCC
              67f9 003f  ld   $3f         ;0475 EQ
              67fa 007d  ld   $7d
              67fb fe00  bra  ac          ;+-----------------------------------+
              67fc fcfd  bra  $67fd       ;|                                   |
              67fd 1418  ld   $18,y       ;| Trampoline for page $6700 lookups |
              67fe e006  jmp  y,$06       ;|                                   |
              67ff c218  st   [$18]       ;+-----------------------------------+
              6800 0021  ld   $21         ;0477 LDW
              6801 004c  ld   $4c         ;0477 'Color'
              6802 00e6  ld   $e6         ;0479 SUBI
              6803 0009  ld   $09
              6804 002b  ld   $2b         ;047b STW
              6805 004c  ld   $4c         ;047b 'Color'
              6806 0090  ld   $90         ;047d BRA
              6807 0057  ld   $57
              6808 0090  ld   $90         ;047f BRA
              6809 0053  ld   $53
              680a 0000  ld   $00         ;End of Apps/Credits/Credits_v3.gcl, size 598
                                          ;+-----------------------------------+
                                          ;| Apps/Snake/Snake_v3.gcl           |
                                          ;+-----------------------------------+
              680b dc43  st   $43,[y,x++] ;'C'
              680c dc72  st   $72,[y,x++] ;'r'
              680d dc65  st   $65,[y,x++] ;'e'
              680e dc64  st   $64,[y,x++] ;'d'
              680f dc69  st   $69,[y,x++] ;'i'
              6810 dc74  st   $74,[y,x++] ;'t'
              6811 dc73  st   $73,[y,x++] ;'s'
              6812 dc00  st   $00,[y,x++] ;'\x00'
              6813 00b5  ld   $b5
              6814 c218  st   [$18]
              6815 0065  ld   $65
              6816 14e0  ld   $e0,y
              6817 e071  jmp  y,$71
              6818 c219  st   [$19]
Snake:        6819 0002  ld   $02         ;| RAM segment address (high byte first)
              681a 0000  ld   $00         ;|
              681b 00e5  ld   $e5         ;| Length (1..256)
              681c 001a  ld   $1a         ;0200 LD
              681d 0021  ld   $21
              681e 00e6  ld   $e6         ;0202 SUBI
              681f 0020  ld   $20
              6820 0035  ld   $35         ;0204 BCC
              6821 0053  ld   $53         ;0205 GE
              6822 000b  ld   $0b
              6823 0021  ld   $21         ;0207 LDW
              6824 000e  ld   $0e         ;0207 '_frameCount'
              6825 00f3  ld   $f3         ;0209 DOKE
              6826 0017  ld   $17         ;0209 '_vPCH'
              6827 0090  ld   $90         ;020b BRA
              6828 0005  ld   $05
              6829 0059  ld   $59         ;020d LDI
              682a 0000  ld   $00
              682b 002b  ld   $2b         ;020f STW
              682c 0030  ld   $30         ;020f 'HighScore'
              682d 00cd  ld   $cd         ;0211 DEF
              682e 005f  ld   $5f
              682f 0021  ld   $21         ;0213 LDW
              6830 0032  ld   $32         ;0213 'Char'
              6831 00e6  ld   $e6         ;0215 SUBI
              6832 0052  ld   $52
              6833 0035  ld   $35         ;0217 BCC
              6834 0053  ld   $53         ;0218 GE
              6835 0021  ld   $21
              6836 00e3  ld   $e3         ;021a ADDI
              6837 0032  ld   $32
              6838 002b  ld   $2b         ;021c STW
              6839 0034  ld   $34         ;021c 'i'
              683a 0011  ld   $11         ;021e LDWI
              683b 0000  ld   $00
              683c 0007  ld   $07
              683d 0090  ld   $90         ;0221 BRA
              683e 0026  ld   $26
              683f 002b  ld   $2b         ;0223 STW
              6840 0034  ld   $34         ;0223 'i'
              6841 0011  ld   $11         ;0225 LDWI
              6842 0000  ld   $00
              6843 0008  ld   $08
              6844 002b  ld   $2b         ;0228 STW
              6845 0036  ld   $36         ;0228 'fontData'
              6846 0021  ld   $21         ;022a LDW
              6847 0034  ld   $34         ;022a 'i'
              6848 00e9  ld   $e9         ;022c LSLW
              6849 00e9  ld   $e9         ;022d LSLW
              684a 0099  ld   $99         ;022e ADDW
              684b 0034  ld   $34         ;022e 'i'
              684c 0099  ld   $99         ;0230 ADDW
              684d 0036  ld   $36         ;0230 'fontData'
              684e 002b  ld   $2b         ;0232 STW
              684f 0036  ld   $36         ;0232 'fontData'
              6850 0021  ld   $21         ;0234 LDW
              6851 0038  ld   $38         ;0234 'BgColor'
              6852 005e  ld   $5e         ;0236 ST
              6853 0024  ld   $24
              6854 0021  ld   $21         ;0238 LDW
              6855 003a  ld   $3a         ;0238 'Color'
              6856 005e  ld   $5e         ;023a ST
              6857 0025  ld   $25
              6858 0021  ld   $21         ;023c LDW
              6859 003c  ld   $3c         ;023c 'Pos'
              685a 002b  ld   $2b         ;023e STW
              685b 0028  ld   $28
              685c 00e3  ld   $e3         ;0240 ADDI
              685d 0006  ld   $06
              685e 002b  ld   $2b         ;0242 STW
              685f 003c  ld   $3c         ;0242 'Pos'
              6860 0011  ld   $11         ;0244 LDWI
              6861 00e1  ld   $e1
              6862 0004  ld   $04
              6863 002b  ld   $2b         ;0247 STW
              6864 0022  ld   $22
              6865 0059  ld   $59         ;0249 LDI
              6866 00fb  ld   $fb
              6867 002b  ld   $2b         ;024b STW
              6868 0034  ld   $34         ;024b 'i'
              6869 0021  ld   $21         ;024d LDW
              686a 0036  ld   $36         ;024d 'fontData'
              686b 007f  ld   $7f         ;024f LUP
              686c 0000  ld   $00
              686d 0093  ld   $93         ;0251 INC
              686e 0036  ld   $36         ;0251 'fontData'
              686f 005e  ld   $5e         ;0253 ST
              6870 0026  ld   $26
              6871 00b4  ld   $b4         ;0255 SYS
              6872 00cc  ld   $cc
              6873 0093  ld   $93         ;0257 INC
              6874 0028  ld   $28
              6875 0093  ld   $93         ;0259 INC
              6876 0034  ld   $34         ;0259 'i'
              6877 0021  ld   $21         ;025b LDW
              6878 0034  ld   $34         ;025b 'i'
              6879 0035  ld   $35         ;025d BCC
              687a 0072  ld   $72         ;025e NE
              687b 004b  ld   $4b
              687c 00ff  ld   $ff         ;0260 RET
              687d 002b  ld   $2b         ;0261 STW
              687e 003e  ld   $3e         ;0261 'PrintChar'
              687f 00cd  ld   $cd         ;0263 DEF
              6880 0076  ld   $76
              6881 0075  ld   $75         ;0265 PUSH
              6882 002b  ld   $2b         ;0266 STW
              6883 0040  ld   $40         ;0266 'Text'
              6884 0021  ld   $21         ;0268 LDW
              6885 0040  ld   $40         ;0268 'Text'
              6886 00ad  ld   $ad         ;026a PEEK
              6887 002b  ld   $2b         ;026b STW
              6888 0032  ld   $32         ;026b 'Char'
              6889 0093  ld   $93         ;026d INC
              688a 0040  ld   $40         ;026d 'Text'
              688b 0035  ld   $35         ;026f BCC
              688c 003f  ld   $3f         ;0270 EQ
              688d 0074  ld   $74
              688e 00cf  ld   $cf         ;0272 CALL
              688f 003e  ld   $3e         ;0272 'PrintChar'
              6890 0090  ld   $90         ;0274 BRA
              6891 0066  ld   $66
              6892 0063  ld   $63         ;0276 POP
              6893 00ff  ld   $ff         ;0277 RET
              6894 002b  ld   $2b         ;0278 STW
              6895 0042  ld   $42         ;0278 'PrintText'
              6896 00cd  ld   $cd         ;027a DEF
              6897 0090  ld   $90
              6898 0035  ld   $35         ;027c BCC
              6899 0056  ld   $56         ;027d LE
              689a 008f  ld   $8f
              689b 002b  ld   $2b         ;027f STW
              689c 0034  ld   $34         ;027f 'i'
              689d 0021  ld   $21         ;0281 LDW
              689e 003a  ld   $3a         ;0281 'Color'
              689f 00f0  ld   $f0         ;0283 POKE
              68a0 003c  ld   $3c         ;0283 'Pos'
              68a1 0021  ld   $21         ;0285 LDW
              68a2 003c  ld   $3c         ;0285 'Pos'
              68a3 0099  ld   $99         ;0287 ADDW
              68a4 0044  ld   $44         ;0287 'Step'
              68a5 002b  ld   $2b         ;0289 STW
              68a6 003c  ld   $3c         ;0289 'Pos'
              68a7 0021  ld   $21         ;028b LDW
              68a8 0034  ld   $34         ;028b 'i'
              68a9 00e6  ld   $e6         ;028d SUBI
              68aa 0001  ld   $01
              68ab 0090  ld   $90         ;028f BRA
              68ac 007a  ld   $7a
              68ad 00ff  ld   $ff         ;0291 RET
              68ae 002b  ld   $2b         ;0292 STW
              68af 0046  ld   $46         ;0292 'DrawLine'
              68b0 00cd  ld   $cd         ;0294 DEF
              68b1 00bc  ld   $bc
              68b2 0075  ld   $75         ;0296 PUSH
              68b3 001a  ld   $1a         ;0297 LD
              68b4 000e  ld   $0e
              68b5 00b8  ld   $b8         ;0299 SUBW
              68b6 0048  ld   $48         ;0299 'TimeOut'
              68b7 0082  ld   $82         ;029b ANDI
              68b8 0080  ld   $80
              68b9 0035  ld   $35         ;029d BCC
              68ba 0072  ld   $72         ;029e NE
              68bb 00a9  ld   $a9
              68bc 0021  ld   $21         ;02a0 LDW
              68bd 004a  ld   $4a         ;02a0 'Timer'
              68be 0035  ld   $35         ;02a2 BCC
              68bf 0056  ld   $56         ;02a3 LE
              68c0 00a7  ld   $a7
              68c1 00e6  ld   $e6         ;02a5 SUBI
              68c2 0001  ld   $01
              68c3 002b  ld   $2b         ;02a7 STW
              68c4 004a  ld   $4a         ;02a7 'Timer'
              68c5 00cf  ld   $cf         ;02a9 CALL
              68c6 004c  ld   $4c         ;02a9 'DrawTimer'
              68c7 001a  ld   $1a         ;02ab LD
              68c8 0011  ld   $11
              68c9 0082  ld   $82         ;02ad ANDI
              68ca 0080  ld   $80
              68cb 0035  ld   $35         ;02af BCC
              68cc 0072  ld   $72         ;02b0 NE
              68cd 00b4  ld   $b4
              68ce 00e6  ld   $e6         ;02b2 SUBI
              68cf 0001  ld   $01
              68d0 0090  ld   $90         ;02b4 BRA
              68d1 00b6  ld   $b6
              68d2 0059  ld   $59         ;02b6 LDI
              68d3 0000  ld   $00
              68d4 0099  ld   $99         ;02b8 ADDW
              68d5 004e  ld   $4e         ;02b8 'Delay'
              68d6 00cf  ld   $cf         ;02ba CALL
              68d7 0050  ld   $50         ;02ba 'Wait'
              68d8 0063  ld   $63         ;02bc POP
              68d9 00ff  ld   $ff         ;02bd RET
              68da 002b  ld   $2b         ;02be STW
              68db 0052  ld   $52         ;02be 'TimeStep'
              68dc 00cd  ld   $cd         ;02c0 DEF
              68dd 00de  ld   $de
              68de 0075  ld   $75         ;02c2 PUSH
              68df 0011  ld   $11         ;02c3 LDWI
              68e0 0020  ld   $20
              68e1 0008  ld   $08
              68e2 002b  ld   $2b         ;02c6 STW
              68e3 003c  ld   $3c         ;02c6 'Pos'
              68e4 0059  ld   $59         ;02c8 LDI
              68e5 0008  ld   $08
              68e6 002b  ld   $2b         ;02ca STW
              68e7 003a  ld   $3a         ;02ca 'Color'
              68e8 0059  ld   $59         ;02cc LDI
              68e9 0000  ld   $00
              68ea 002b  ld   $2b         ;02ce STW
              68eb 0038  ld   $38         ;02ce 'BgColor'
              68ec 0021  ld   $21         ;02d0 LDW
              68ed 004a  ld   $4a         ;02d0 'Timer'
              68ee 002b  ld   $2b         ;02d2 STW
              68ef 0054  ld   $54         ;02d2 'Value'
              68f0 00cf  ld   $cf         ;02d4 CALL
              68f1 0056  ld   $56         ;02d4 'DrawNumber2'
              68f2 0021  ld   $21         ;02d6 LDW
              68f3 0048  ld   $48         ;02d6 'TimeOut'
              68f4 00e3  ld   $e3         ;02d8 ADDI
              68f5 003c  ld   $3c
              68f6 0082  ld   $82         ;02da ANDI
              68f7 00ff  ld   $ff
              68f8 002b  ld   $2b         ;02dc STW
              68f9 0048  ld   $48         ;02dc 'TimeOut'
              68fa 0063  ld   $63         ;02de POP
              68fb fe00  bra  ac          ;+-----------------------------------+
              68fc fcfd  bra  $68fd       ;|                                   |
              68fd 1418  ld   $18,y       ;| Trampoline for page $6800 lookups |
              68fe e006  jmp  y,$06       ;|                                   |
              68ff c218  st   [$18]       ;+-----------------------------------+
              6900 00ff  ld   $ff         ;02df RET
              6901 002b  ld   $2b         ;02e0 STW
              6902 004c  ld   $4c         ;02e0 'DrawTimer'
              6903 0093  ld   $93         ;02e2 INC
              6904 001b  ld   $1b         ;02e2 '_vLR'+1
              6905 00ff  ld   $ff         ;02e4 RET
              6906 0003  ld   $03         ;| RAM segment address (high byte first)
              6907 0000  ld   $00         ;|
              6908 00f7  ld   $f7         ;| Length (1..256)
              6909 00cd  ld   $cd         ;0300 DEF
              690a 000b  ld   $0b
              690b 0075  ld   $75         ;0302 PUSH
              690c 0059  ld   $59         ;0303 LDI
              690d 000f  ld   $0f
              690e 002b  ld   $2b         ;0305 STW
              690f 003a  ld   $3a         ;0305 'Color'
              6910 0021  ld   $21         ;0307 LDW
              6911 0058  ld   $58         ;0307 'Head'
              6912 00cf  ld   $cf         ;0309 CALL
              6913 005a  ld   $5a         ;0309 'DrawBlock'
              6914 0063  ld   $63         ;030b POP
              6915 00ff  ld   $ff         ;030c RET
              6916 002b  ld   $2b         ;030d STW
              6917 005c  ld   $5c         ;030d 'DrawHead'
              6918 00cd  ld   $cd         ;030f DEF
              6919 0043  ld   $43
              691a 0075  ld   $75         ;0311 PUSH
              691b 0011  ld   $11         ;0312 LDWI
              691c 0035  ld   $35
              691d 0044  ld   $44
              691e 002b  ld   $2b         ;0315 STW
              691f 003c  ld   $3c         ;0315 'Pos'
              6920 0059  ld   $59         ;0317 LDI
              6921 0004  ld   $04
              6922 002b  ld   $2b         ;0319 STW
              6923 0038  ld   $38         ;0319 'BgColor'
              6924 00cd  ld   $cd         ;031b DEF
              6925 0025  ld   $25
              6926 0047  ld   $47         ;031d 'G'
              6927 0041  ld   $41         ;031e 'A'
              6928 004d  ld   $4d         ;031f 'M'
              6929 0045  ld   $45         ;0320 'E'
              692a 0020  ld   $20         ;0321 ' '
              692b 004f  ld   $4f         ;0322 'O'
              692c 0056  ld   $56         ;0323 'V'
              692d 0045  ld   $45         ;0324 'E'
              692e 0052  ld   $52         ;0325 'R'
              692f 0000  ld   $00         ;0326 0
              6930 00cf  ld   $cf         ;0327 CALL
              6931 0042  ld   $42         ;0327 'PrintText'
              6932 0021  ld   $21         ;0329 LDW
              6933 005e  ld   $5e         ;0329 'Score'
              6934 00b8  ld   $b8         ;032b SUBW
              6935 0030  ld   $30         ;032b 'HighScore'
              6936 0035  ld   $35         ;032d BCC
              6937 0056  ld   $56         ;032e LE
              6938 003f  ld   $3f
              6939 0021  ld   $21         ;0330 LDW
              693a 0060  ld   $60         ;0330 'Control'
              693b 00fc  ld   $fc         ;0332 XORW
              693c 0062  ld   $62         ;0332 'PlayerControl'
              693d 0035  ld   $35         ;0334 BCC
              693e 0072  ld   $72         ;0335 NE
              693f 003f  ld   $3f
              6940 0021  ld   $21         ;0337 LDW
              6941 005e  ld   $5e         ;0337 'Score'
              6942 002b  ld   $2b         ;0339 STW
              6943 0030  ld   $30         ;0339 'HighScore'
              6944 0059  ld   $59         ;033b LDI
              6945 001e  ld   $1e
              6946 002b  ld   $2b         ;033d STW
              6947 003a  ld   $3a         ;033d 'Color'
              6948 00cf  ld   $cf         ;033f CALL
              6949 0064  ld   $64         ;033f 'DrawHighScore'
              694a 00cf  ld   $cf         ;0341 CALL
              694b 0066  ld   $66         ;0341 'PlayGameOverSound'
              694c 0063  ld   $63         ;0343 POP
              694d 00ff  ld   $ff         ;0344 RET
              694e 002b  ld   $2b         ;0345 STW
              694f 0068  ld   $68         ;0345 'GameOver'
              6950 00cd  ld   $cd         ;0347 DEF
              6951 0059  ld   $59
              6952 002b  ld   $2b         ;0349 STW
              6953 006a  ld   $6a         ;0349 'tmp'
              6954 001a  ld   $1a         ;034b LD
              6955 000e  ld   $0e
              6956 0099  ld   $99         ;034d ADDW
              6957 006a  ld   $6a         ;034d 'tmp'
              6958 0082  ld   $82         ;034f ANDI
              6959 00ff  ld   $ff
              695a 002b  ld   $2b         ;0351 STW
              695b 006a  ld   $6a         ;0351 'tmp'
              695c 001a  ld   $1a         ;0353 LD
              695d 000e  ld   $0e
              695e 00b8  ld   $b8         ;0355 SUBW
              695f 006a  ld   $6a         ;0355 'tmp'
              6960 0035  ld   $35         ;0357 BCC
              6961 0072  ld   $72         ;0358 NE
              6962 0051  ld   $51
              6963 00ff  ld   $ff         ;035a RET
              6964 002b  ld   $2b         ;035b STW
              6965 0050  ld   $50         ;035b 'Wait'
              6966 00cd  ld   $cd         ;035d DEF
              6967 007f  ld   $7f
              6968 0075  ld   $75         ;035f PUSH
              6969 0059  ld   $59         ;0360 LDI
              696a 0008  ld   $08
              696b 002b  ld   $2b         ;0362 STW
              696c 003a  ld   $3a         ;0362 'Color'
              696d 0059  ld   $59         ;0364 LDI
              696e 0000  ld   $00
              696f 002b  ld   $2b         ;0366 STW
              6970 0038  ld   $38         ;0366 'BgColor'
              6971 0011  ld   $11         ;0368 LDWI
              6972 0000  ld   $00
              6973 0008  ld   $08
              6974 00cf  ld   $cf         ;036b CALL
              6975 006c  ld   $6c         ;036b 'ClearScreen'
              6976 0011  ld   $11         ;036d LDWI
              6977 0038  ld   $38
              6978 0008  ld   $08
              6979 002b  ld   $2b         ;0370 STW
              697a 003c  ld   $3c         ;0370 'Pos'
              697b 00cd  ld   $cd         ;0372 DEF
              697c 007b  ld   $7b
              697d 0047  ld   $47         ;0374 'G'
              697e 0069  ld   $69         ;0375 'i'
              697f 0067  ld   $67         ;0376 'g'
              6980 0061  ld   $61         ;0377 'a'
              6981 0074  ld   $74         ;0378 't'
              6982 0072  ld   $72         ;0379 'r'
              6983 006f  ld   $6f         ;037a 'o'
              6984 006e  ld   $6e         ;037b 'n'
              6985 0000  ld   $00         ;037c 0
              6986 00cf  ld   $cf         ;037d CALL
              6987 0042  ld   $42         ;037d 'PrintText'
              6988 0063  ld   $63         ;037f POP
              6989 00ff  ld   $ff         ;0380 RET
              698a 002b  ld   $2b         ;0381 STW
              698b 006e  ld   $6e         ;0381 'Intro'
              698c 00cd  ld   $cd         ;0383 DEF
              698d 00a3  ld   $a3
              698e 002b  ld   $2b         ;0385 STW
              698f 0070  ld   $70         ;0385 'p'
              6990 0011  ld   $11         ;0387 LDWI
              6991 0003  ld   $03
              6992 000b  ld   $0b
              6993 002b  ld   $2b         ;038a STW
              6994 0022  ld   $22
              6995 0021  ld   $21         ;038c LDW
              6996 0038  ld   $38         ;038c 'BgColor'
              6997 005e  ld   $5e         ;038e ST
              6998 0025  ld   $25
              6999 0021  ld   $21         ;0390 LDW
              699a 0070  ld   $70         ;0390 'p'
              699b 002b  ld   $2b         ;0392 STW
              699c 0026  ld   $26
              699d 0059  ld   $59         ;0394 LDI
              699e 00a0  ld   $a0
              699f 005e  ld   $5e         ;0396 ST
              69a0 0024  ld   $24
              69a1 00b4  ld   $b4         ;0398 SYS
              69a2 00f4  ld   $f4
              69a3 0011  ld   $11         ;039a LDWI
              69a4 0000  ld   $00
              69a5 0001  ld   $01
              69a6 0099  ld   $99         ;039d ADDW
              69a7 0070  ld   $70         ;039d 'p'
              69a8 002b  ld   $2b         ;039f STW
              69a9 0070  ld   $70         ;039f 'p'
              69aa 0035  ld   $35         ;03a1 BCC
              69ab 004d  ld   $4d         ;03a2 GT
              69ac 0090  ld   $90
              69ad 00ff  ld   $ff         ;03a4 RET
              69ae 002b  ld   $2b         ;03a5 STW
              69af 006c  ld   $6c         ;03a5 'ClearScreen'
              69b0 00cd  ld   $cd         ;03a7 DEF
              69b1 00c1  ld   $c1
              69b2 0059  ld   $59         ;03a9 LDI
              69b3 0000  ld   $00
              69b4 00b8  ld   $b8         ;03ab SUBW
              69b5 0072  ld   $72         ;03ab 'stepV'
              69b6 002b  ld   $2b         ;03ad STW
              69b7 006a  ld   $6a         ;03ad 'tmp'
              69b8 0021  ld   $21         ;03af LDW
              69b9 0074  ld   $74         ;03af 'stepU'
              69ba 002b  ld   $2b         ;03b1 STW
              69bb 0072  ld   $72         ;03b1 'stepV'
              69bc 0021  ld   $21         ;03b3 LDW
              69bd 006a  ld   $6a         ;03b3 'tmp'
              69be 002b  ld   $2b         ;03b5 STW
              69bf 0074  ld   $74         ;03b5 'stepU'
              69c0 0021  ld   $21         ;03b7 LDW
              69c1 0076  ld   $76         ;03b7 'Bias'
              69c2 0035  ld   $35         ;03b9 BCC
              69c3 0053  ld   $53         ;03ba GE
              69c4 00bc  ld   $bc
              69c5 0059  ld   $59         ;03bc LDI
              69c6 0000  ld   $00
              69c7 00e3  ld   $e3         ;03be ADDI
              69c8 003c  ld   $3c
              69c9 002b  ld   $2b         ;03c0 STW
              69ca 0076  ld   $76         ;03c0 'Bias'
              69cb 00ff  ld   $ff         ;03c2 RET
              69cc 002b  ld   $2b         ;03c3 STW
              69cd 0078  ld   $78         ;03c3 'TurnL'
              69ce 00cd  ld   $cd         ;03c5 DEF
              69cf 00df  ld   $df
              69d0 0059  ld   $59         ;03c7 LDI
              69d1 0000  ld   $00
              69d2 00b8  ld   $b8         ;03c9 SUBW
              69d3 0074  ld   $74         ;03c9 'stepU'
              69d4 002b  ld   $2b         ;03cb STW
              69d5 006a  ld   $6a         ;03cb 'tmp'
              69d6 0021  ld   $21         ;03cd LDW
              69d7 0072  ld   $72         ;03cd 'stepV'
              69d8 002b  ld   $2b         ;03cf STW
              69d9 0074  ld   $74         ;03cf 'stepU'
              69da 0021  ld   $21         ;03d1 LDW
              69db 006a  ld   $6a         ;03d1 'tmp'
              69dc 002b  ld   $2b         ;03d3 STW
              69dd 0072  ld   $72         ;03d3 'stepV'
              69de 0021  ld   $21         ;03d5 LDW
              69df 0076  ld   $76         ;03d5 'Bias'
              69e0 0035  ld   $35         ;03d7 BCC
              69e1 0056  ld   $56         ;03d8 LE
              69e2 00da  ld   $da
              69e3 0059  ld   $59         ;03da LDI
              69e4 0000  ld   $00
              69e5 00e6  ld   $e6         ;03dc SUBI
              69e6 003c  ld   $3c
              69e7 002b  ld   $2b         ;03de STW
              69e8 0076  ld   $76         ;03de 'Bias'
              69e9 00ff  ld   $ff         ;03e0 RET
              69ea 002b  ld   $2b         ;03e1 STW
              69eb 007a  ld   $7a         ;03e1 'TurnR'
              69ec 00cd  ld   $cd         ;03e3 DEF
              69ed 00f0  ld   $f0
              69ee 002b  ld   $2b         ;03e5 STW
              69ef 003c  ld   $3c         ;03e5 'Pos'
              69f0 0021  ld   $21         ;03e7 LDW
              69f1 003a  ld   $3a         ;03e7 'Color'
              69f2 005e  ld   $5e         ;03e9 ST
              69f3 0019  ld   $19
              69f4 00f3  ld   $f3         ;03eb DOKE
              69f5 003c  ld   $3c         ;03eb 'Pos'
              69f6 0093  ld   $93         ;03ed INC
              69f7 003d  ld   $3d         ;03ed 'Pos'+1
              69f8 00f3  ld   $f3         ;03ef DOKE
              69f9 003c  ld   $3c         ;03ef 'Pos'
              69fa 00ff  ld   $ff         ;03f1 RET
              69fb fe00  bra  ac          ;+-----------------------------------+
              69fc fcfd  bra  $69fd       ;|                                   |
              69fd 1418  ld   $18,y       ;| Trampoline for page $6900 lookups |
              69fe e006  jmp  y,$06       ;|                                   |
              69ff c218  st   [$18]       ;+-----------------------------------+
              6a00 002b  ld   $2b         ;03f2 STW
              6a01 005a  ld   $5a         ;03f2 'DrawBlock'
              6a02 0093  ld   $93         ;03f4 INC
              6a03 001b  ld   $1b         ;03f4 '_vLR'+1
              6a04 00ff  ld   $ff         ;03f6 RET
              6a05 0004  ld   $04         ;| RAM segment address (high byte first)
              6a06 0000  ld   $00         ;|
              6a07 00f9  ld   $f9         ;| Length (1..256)
              6a08 00cd  ld   $cd         ;0400 DEF
              6a09 00ae  ld   $ae
              6a0a 0075  ld   $75         ;0402 PUSH
              6a0b 00cf  ld   $cf         ;0403 CALL
              6a0c 0060  ld   $60         ;0403 'Control'
              6a0d 001a  ld   $1a         ;0405 LD
              6a0e 0075  ld   $75         ;0405 'stepU'+1
              6a0f 0082  ld   $82         ;0407 ANDI
              6a10 0080  ld   $80
              6a11 002b  ld   $2b         ;0409 STW
              6a12 006a  ld   $6a         ;0409 'tmp'
              6a13 0021  ld   $21         ;040b LDW
              6a14 0074  ld   $74         ;040b 'stepU'
              6a15 0082  ld   $82         ;040d ANDI
              6a16 0002  ld   $02
              6a17 0035  ld   $35         ;040f BCC
              6a18 003f  ld   $3f         ;0410 EQ
              6a19 0012  ld   $12
              6a1a 0059  ld   $59         ;0412 LDI
              6a1b 0040  ld   $40
              6a1c 0099  ld   $99         ;0414 ADDW
              6a1d 006a  ld   $6a         ;0414 'tmp'
              6a1e 00e3  ld   $e3         ;0416 ADDI
              6a1f 001b  ld   $1b
              6a20 002b  ld   $2b         ;0418 STW
              6a21 003a  ld   $3a         ;0418 'Color'
              6a22 001a  ld   $1a         ;041a LD
              6a23 0059  ld   $59         ;041a 'Head'+1
              6a24 00fc  ld   $fc         ;041c XORW
              6a25 0058  ld   $58         ;041c 'Head'
              6a26 0082  ld   $82         ;041e ANDI
              6a27 0002  ld   $02
              6a28 0035  ld   $35         ;0420 BCC
              6a29 003f  ld   $3f         ;0421 EQ
              6a2a 0023  ld   $23
              6a2b 0059  ld   $59         ;0423 LDI
              6a2c 0001  ld   $01
              6a2d 00fc  ld   $fc         ;0425 XORW
              6a2e 003a  ld   $3a         ;0425 'Color'
              6a2f 002b  ld   $2b         ;0427 STW
              6a30 003a  ld   $3a         ;0427 'Color'
              6a31 0021  ld   $21         ;0429 LDW
              6a32 0058  ld   $58         ;0429 'Head'
              6a33 00cf  ld   $cf         ;042b CALL
              6a34 005a  ld   $5a         ;042b 'DrawBlock'
              6a35 0021  ld   $21         ;042d LDW
              6a36 0058  ld   $58         ;042d 'Head'
              6a37 0099  ld   $99         ;042f ADDW
              6a38 0074  ld   $74         ;042f 'stepU'
              6a39 002b  ld   $2b         ;0431 STW
              6a3a 0058  ld   $58         ;0431 'Head'
              6a3b 0021  ld   $21         ;0433 LDW
              6a3c 0058  ld   $58         ;0433 'Head'
              6a3d 00ad  ld   $ad         ;0435 PEEK
              6a3e 0082  ld   $82         ;0436 ANDI
              6a3f 0003  ld   $03
              6a40 0035  ld   $35         ;0438 BCC
              6a41 003f  ld   $3f         ;0439 EQ
              6a42 003b  ld   $3b
              6a43 0063  ld   $63         ;043b POP
              6a44 00ff  ld   $ff         ;043c RET
              6a45 0021  ld   $21         ;043d LDW
              6a46 0058  ld   $58         ;043d 'Head'
              6a47 00ad  ld   $ad         ;043f PEEK
              6a48 008c  ld   $8c         ;0440 XORI
              6a49 0018  ld   $18
              6a4a 0035  ld   $35         ;0442 BCC
              6a4b 0072  ld   $72         ;0443 NE
              6a4c 005d  ld   $5d
              6a4d 0059  ld   $59         ;0445 LDI
              6a4e 0040  ld   $40
              6a4f 0099  ld   $99         ;0447 ADDW
              6a50 004a  ld   $4a         ;0447 'Timer'
              6a51 00cf  ld   $cf         ;0449 CALL
              6a52 007c  ld   $7c         ;0449 'SetNote'
              6a53 0059  ld   $59         ;044b LDI
              6a54 0002  ld   $02
              6a55 005e  ld   $5e         ;044d ST
              6a56 002c  ld   $2c
              6a57 0021  ld   $21         ;044f LDW
              6a58 005e  ld   $5e         ;044f 'Score'
              6a59 0099  ld   $99         ;0451 ADDW
              6a5a 004a  ld   $4a         ;0451 'Timer'
              6a5b 002b  ld   $2b         ;0453 STW
              6a5c 005e  ld   $5e         ;0453 'Score'
              6a5d 00cf  ld   $cf         ;0455 CALL
              6a5e 007e  ld   $7e         ;0455 'DrawScore'
              6a5f 0059  ld   $59         ;0457 LDI
              6a60 0005  ld   $05
              6a61 00cf  ld   $cf         ;0459 CALL
              6a62 0081  ld   $81         ;0459 'AddTimer'
              6a63 0093  ld   $93         ;045b INC
              6a64 0083  ld   $83         ;045b 'Grow'
              6a65 0093  ld   $93         ;045d INC
              6a66 0085  ld   $85         ;045d 'Drops'
              6a67 00cf  ld   $cf         ;045f CALL
              6a68 005c  ld   $5c         ;045f 'DrawHead'
              6a69 0021  ld   $21         ;0461 LDW
              6a6a 0083  ld   $83         ;0461 'Grow'
              6a6b 0035  ld   $35         ;0463 BCC
              6a6c 0056  ld   $56         ;0464 LE
              6a6d 006c  ld   $6c
              6a6e 00e6  ld   $e6         ;0466 SUBI
              6a6f 0001  ld   $01
              6a70 002b  ld   $2b         ;0468 STW
              6a71 0083  ld   $83         ;0468 'Grow'
              6a72 00cf  ld   $cf         ;046a CALL
              6a73 0087  ld   $87         ;046a 'AddFood'
              6a74 0090  ld   $90         ;046c BRA
              6a75 00aa  ld   $aa
              6a76 0021  ld   $21         ;046e LDW
              6a77 0089  ld   $89         ;046e 'Tail'
              6a78 00ad  ld   $ad         ;0470 PEEK
              6a79 002b  ld   $2b         ;0471 STW
              6a7a 006a  ld   $6a         ;0471 'tmp'
              6a7b 0021  ld   $21         ;0473 LDW
              6a7c 0085  ld   $85         ;0473 'Drops'
              6a7d 0035  ld   $35         ;0475 BCC
              6a7e 0056  ld   $56         ;0476 LE
              6a7f 007e  ld   $7e
              6a80 00e6  ld   $e6         ;0478 SUBI
              6a81 0001  ld   $01
              6a82 002b  ld   $2b         ;047a STW
              6a83 0085  ld   $85         ;047a 'Drops'
              6a84 0059  ld   $59         ;047c LDI
              6a85 003e  ld   $3e
              6a86 0090  ld   $90         ;047e BRA
              6a87 0080  ld   $80
              6a88 0059  ld   $59         ;0480 LDI
              6a89 0004  ld   $04
              6a8a 002b  ld   $2b         ;0482 STW
              6a8b 003a  ld   $3a         ;0482 'Color'
              6a8c 0021  ld   $21         ;0484 LDW
              6a8d 0089  ld   $89         ;0484 'Tail'
              6a8e 00cf  ld   $cf         ;0486 CALL
              6a8f 005a  ld   $5a         ;0486 'DrawBlock'
              6a90 0021  ld   $21         ;0488 LDW
              6a91 006a  ld   $6a         ;0488 'tmp'
              6a92 0082  ld   $82         ;048a ANDI
              6a93 0040  ld   $40
              6a94 0035  ld   $35         ;048c BCC
              6a95 0072  ld   $72         ;048d NE
              6a96 0092  ld   $92
              6a97 0011  ld   $11         ;048f LDWI
              6a98 0000  ld   $00
              6a99 0001  ld   $01
              6a9a 0090  ld   $90         ;0492 BRA
              6a9b 0094  ld   $94
              6a9c 0059  ld   $59         ;0494 LDI
              6a9d 0001  ld   $01
              6a9e 002b  ld   $2b         ;0496 STW
              6a9f 008b  ld   $8b         ;0496 'x'
              6aa0 0021  ld   $21         ;0498 LDW
              6aa1 006a  ld   $6a         ;0498 'tmp'
              6aa2 0082  ld   $82         ;049a ANDI
              6aa3 0080  ld   $80
              6aa4 0035  ld   $35         ;049c BCC
              6aa5 0072  ld   $72         ;049d NE
              6aa6 00a1  ld   $a1
              6aa7 0021  ld   $21         ;049f LDW
              6aa8 008b  ld   $8b         ;049f 'x'
              6aa9 0090  ld   $90         ;04a1 BRA
              6aaa 00a5  ld   $a5
              6aab 0059  ld   $59         ;04a3 LDI
              6aac 0000  ld   $00
              6aad 00b8  ld   $b8         ;04a5 SUBW
              6aae 008b  ld   $8b         ;04a5 'x'
              6aaf 00e9  ld   $e9         ;04a7 LSLW
              6ab0 0099  ld   $99         ;04a8 ADDW
              6ab1 0089  ld   $89         ;04a8 'Tail'
              6ab2 002b  ld   $2b         ;04aa STW
              6ab3 0089  ld   $89         ;04aa 'Tail'
              6ab4 00cf  ld   $cf         ;04ac CALL
              6ab5 0052  ld   $52         ;04ac 'TimeStep'
              6ab6 0090  ld   $90         ;04ae BRA
              6ab7 0001  ld   $01
              6ab8 002b  ld   $2b         ;04b0 STW
              6ab9 008d  ld   $8d         ;04b0 'RunGame'
              6aba 00cd  ld   $cd         ;04b2 DEF
              6abb 00ee  ld   $ee
              6abc 0075  ld   $75         ;04b4 PUSH
              6abd 0059  ld   $59         ;04b5 LDI
              6abe 0018  ld   $18
              6abf 002b  ld   $2b         ;04b7 STW
              6ac0 003a  ld   $3a         ;04b7 'Color'
              6ac1 0011  ld   $11         ;04b9 LDWI
              6ac2 00a7  ld   $a7
              6ac3 0004  ld   $04
              6ac4 002b  ld   $2b         ;04bc STW
              6ac5 0022  ld   $22
              6ac6 00b4  ld   $b4         ;04be SYS
              6ac7 00fe  ld   $fe
              6ac8 002b  ld   $2b         ;04c0 STW
              6ac9 003c  ld   $3c         ;04c0 'Pos'
              6aca 001a  ld   $1a         ;04c2 LD
              6acb 003c  ld   $3c         ;04c2 'Pos'
              6acc 00e6  ld   $e6         ;04c4 SUBI
              6acd 0080  ld   $80
              6ace 0035  ld   $35         ;04c6 BCC
              6acf 0053  ld   $53         ;04c7 GE
              6ad0 00c9  ld   $c9
              6ad1 00e3  ld   $e3         ;04c9 ADDI
              6ad2 0096  ld   $96
              6ad3 00e3  ld   $e3         ;04cb ADDI
              6ad4 0005  ld   $05
              6ad5 0082  ld   $82         ;04cd ANDI
              6ad6 00fe  ld   $fe
              6ad7 005e  ld   $5e         ;04cf ST
              6ad8 003c  ld   $3c         ;04cf 'Pos'
              6ad9 001a  ld   $1a         ;04d1 LD
              6ada 003d  ld   $3d         ;04d1 'Pos'+1
              6adb 0082  ld   $82         ;04d3 ANDI
              6adc 007f  ld   $7f
              6add 00e6  ld   $e6         ;04d5 SUBI
              6ade 0040  ld   $40
              6adf 0035  ld   $35         ;04d7 BCC
              6ae0 0053  ld   $53         ;04d8 GE
              6ae1 00da  ld   $da
              6ae2 00e3  ld   $e3         ;04da ADDI
              6ae3 0066  ld   $66
              6ae4 00e3  ld   $e3         ;04dc ADDI
              6ae5 0015  ld   $15
              6ae6 0082  ld   $82         ;04de ANDI
              6ae7 00fe  ld   $fe
              6ae8 005e  ld   $5e         ;04e0 ST
              6ae9 003d  ld   $3d         ;04e0 'Pos'+1
              6aea 0021  ld   $21         ;04e2 LDW
              6aeb 003c  ld   $3c         ;04e2 'Pos'
              6aec 00ad  ld   $ad         ;04e4 PEEK
              6aed 008c  ld   $8c         ;04e5 XORI
              6aee 0004  ld   $04
              6aef 0035  ld   $35         ;04e7 BCC
              6af0 0072  ld   $72         ;04e8 NE
              6af1 00b7  ld   $b7
              6af2 0021  ld   $21         ;04ea LDW
              6af3 003c  ld   $3c         ;04ea 'Pos'
              6af4 00cf  ld   $cf         ;04ec CALL
              6af5 005a  ld   $5a         ;04ec 'DrawBlock'
              6af6 0063  ld   $63         ;04ee POP
              6af7 00ff  ld   $ff         ;04ef RET
              6af8 002b  ld   $2b         ;04f0 STW
              6af9 0087  ld   $87         ;04f0 'AddFood'
              6afa 0059  ld   $59         ;04f2 LDI
              6afb fe00  bra  ac          ;+-----------------------------------+
              6afc fcfd  bra  $6afd       ;|                                   |
              6afd 1418  ld   $18,y       ;| Trampoline for page $6a00 lookups |
              6afe e006  jmp  y,$06       ;|                                   |
              6aff c218  st   [$18]       ;+-----------------------------------+
              6b00 0000  ld   $00
              6b01 002b  ld   $2b         ;04f4 STW
              6b02 0076  ld   $76         ;04f4 'Bias'
              6b03 0093  ld   $93         ;04f6 INC
              6b04 001b  ld   $1b         ;04f6 '_vLR'+1
              6b05 00ff  ld   $ff         ;04f8 RET
              6b06 0005  ld   $05         ;| RAM segment address (high byte first)
              6b07 0000  ld   $00         ;|
              6b08 00ed  ld   $ed         ;| Length (1..256)
              6b09 00cd  ld   $cd         ;0500 DEF
              6b0a 00e6  ld   $e6
              6b0b 0075  ld   $75         ;0502 PUSH
              6b0c 001a  ld   $1a         ;0503 LD
              6b0d 0011  ld   $11
              6b0e 0082  ld   $82         ;0505 ANDI
              6b0f 00cf  ld   $cf
              6b10 008c  ld   $8c         ;0507 XORI
              6b11 00cf  ld   $cf
              6b12 0035  ld   $35         ;0509 BCC
              6b13 003f  ld   $3f         ;050a EQ
              6b14 000e  ld   $0e
              6b15 00cf  ld   $cf         ;050c CALL
              6b16 008f  ld   $8f         ;050c 'SetupGame'
              6b17 0063  ld   $63         ;050e POP
              6b18 00ff  ld   $ff         ;050f RET
              6b19 0021  ld   $21         ;0510 LDW
              6b1a 0078  ld   $78         ;0510 'TurnL'
              6b1b 002b  ld   $2b         ;0512 STW
              6b1c 0070  ld   $70         ;0512 'p'
              6b1d 0021  ld   $21         ;0514 LDW
              6b1e 007a  ld   $7a         ;0514 'TurnR'
              6b1f 002b  ld   $2b         ;0516 STW
              6b20 0091  ld   $91         ;0516 'q'
              6b21 0021  ld   $21         ;0518 LDW
              6b22 0058  ld   $58         ;0518 'Head'
              6b23 0099  ld   $99         ;051a ADDW
              6b24 0074  ld   $74         ;051a 'stepU'
              6b25 00ad  ld   $ad         ;051c PEEK
              6b26 008c  ld   $8c         ;051d XORI
              6b27 0004  ld   $04
              6b28 002b  ld   $2b         ;051f STW
              6b29 006a  ld   $6a         ;051f 'tmp'
              6b2a 0035  ld   $35         ;0521 BCC
              6b2b 003f  ld   $3f         ;0522 EQ
              6b2c 002b  ld   $2b
              6b2d 008c  ld   $8c         ;0524 XORI
              6b2e 001c  ld   $1c
              6b2f 0035  ld   $35         ;0526 BCC
              6b30 0072  ld   $72         ;0527 NE
              6b31 0029  ld   $29
              6b32 002b  ld   $2b         ;0529 STW
              6b33 006a  ld   $6a         ;0529 'tmp'
              6b34 0090  ld   $90         ;052b BRA
              6b35 0039  ld   $39
              6b36 0021  ld   $21         ;052d LDW
              6b37 0058  ld   $58         ;052d 'Head'
              6b38 0099  ld   $99         ;052f ADDW
              6b39 0074  ld   $74         ;052f 'stepU'
              6b3a 0099  ld   $99         ;0531 ADDW
              6b3b 0074  ld   $74         ;0531 'stepU'
              6b3c 00ad  ld   $ad         ;0533 PEEK
              6b3d 008c  ld   $8c         ;0534 XORI
              6b3e 003e  ld   $3e
              6b3f 0035  ld   $35         ;0536 BCC
              6b40 0072  ld   $72         ;0537 NE
              6b41 0039  ld   $39
              6b42 0093  ld   $93         ;0539 INC
              6b43 006b  ld   $6b         ;0539 'tmp'+1
              6b44 0021  ld   $21         ;053b LDW
              6b45 0058  ld   $58         ;053b 'Head'
              6b46 00b8  ld   $b8         ;053d SUBW
              6b47 0072  ld   $72         ;053d 'stepV'
              6b48 00ad  ld   $ad         ;053f PEEK
              6b49 008c  ld   $8c         ;0540 XORI
              6b4a 0004  ld   $04
              6b4b 0035  ld   $35         ;0542 BCC
              6b4c 003f  ld   $3f         ;0543 EQ
              6b4d 0054  ld   $54
              6b4e 008c  ld   $8c         ;0545 XORI
              6b4f 001c  ld   $1c
              6b50 0035  ld   $35         ;0547 BCC
              6b51 0072  ld   $72         ;0548 NE
              6b52 004e  ld   $4e
              6b53 002b  ld   $2b         ;054a STW
              6b54 0091  ld   $91         ;054a 'q'
              6b55 0093  ld   $93         ;054c INC
              6b56 006b  ld   $6b         ;054c 'tmp'+1
              6b57 0090  ld   $90         ;054e BRA
              6b58 0052  ld   $52
              6b59 0059  ld   $59         ;0550 LDI
              6b5a 0000  ld   $00
              6b5b 002b  ld   $2b         ;0552 STW
              6b5c 0070  ld   $70         ;0552 'p'
              6b5d 0090  ld   $90         ;0554 BRA
              6b5e 0071  ld   $71
              6b5f 0021  ld   $21         ;0556 LDW
              6b60 0058  ld   $58         ;0556 'Head'
              6b61 00b8  ld   $b8         ;0558 SUBW
              6b62 0072  ld   $72         ;0558 'stepV'
              6b63 00b8  ld   $b8         ;055a SUBW
              6b64 0072  ld   $72         ;055a 'stepV'
              6b65 00ad  ld   $ad         ;055c PEEK
              6b66 008c  ld   $8c         ;055d XORI
              6b67 0004  ld   $04
              6b68 0035  ld   $35         ;055f BCC
              6b69 003f  ld   $3f         ;0560 EQ
              6b6a 0071  ld   $71
              6b6b 008c  ld   $8c         ;0562 XORI
              6b6c 001c  ld   $1c
              6b6d 0035  ld   $35         ;0564 BCC
              6b6e 0072  ld   $72         ;0565 NE
              6b6f 006b  ld   $6b
              6b70 002b  ld   $2b         ;0567 STW
              6b71 0091  ld   $91         ;0567 'q'
              6b72 0093  ld   $93         ;0569 INC
              6b73 006b  ld   $6b         ;0569 'tmp'+1
              6b74 0090  ld   $90         ;056b BRA
              6b75 0071  ld   $71
              6b76 0021  ld   $21         ;056d LDW
              6b77 0076  ld   $76         ;056d 'Bias'
              6b78 00e3  ld   $e3         ;056f ADDI
              6b79 000f  ld   $0f
              6b7a 0021  ld   $21         ;0571 LDW
              6b7b 0076  ld   $76         ;0571 'Bias'
              6b7c 0021  ld   $21         ;0573 LDW
              6b7d 0058  ld   $58         ;0573 'Head'
              6b7e 0099  ld   $99         ;0575 ADDW
              6b7f 0072  ld   $72         ;0575 'stepV'
              6b80 00ad  ld   $ad         ;0577 PEEK
              6b81 008c  ld   $8c         ;0578 XORI
              6b82 0004  ld   $04
              6b83 0035  ld   $35         ;057a BCC
              6b84 003f  ld   $3f         ;057b EQ
              6b85 008c  ld   $8c
              6b86 008c  ld   $8c         ;057d XORI
              6b87 001c  ld   $1c
              6b88 0035  ld   $35         ;057f BCC
              6b89 0072  ld   $72         ;0580 NE
              6b8a 0086  ld   $86
              6b8b 002b  ld   $2b         ;0582 STW
              6b8c 0070  ld   $70         ;0582 'p'
              6b8d 0093  ld   $93         ;0584 INC
              6b8e 006b  ld   $6b         ;0584 'tmp'+1
              6b8f 0090  ld   $90         ;0586 BRA
              6b90 008a  ld   $8a
              6b91 0059  ld   $59         ;0588 LDI
              6b92 0000  ld   $00
              6b93 002b  ld   $2b         ;058a STW
              6b94 0091  ld   $91         ;058a 'q'
              6b95 0090  ld   $90         ;058c BRA
              6b96 00a9  ld   $a9
              6b97 0021  ld   $21         ;058e LDW
              6b98 0058  ld   $58         ;058e 'Head'
              6b99 0099  ld   $99         ;0590 ADDW
              6b9a 0072  ld   $72         ;0590 'stepV'
              6b9b 0099  ld   $99         ;0592 ADDW
              6b9c 0072  ld   $72         ;0592 'stepV'
              6b9d 00ad  ld   $ad         ;0594 PEEK
              6b9e 008c  ld   $8c         ;0595 XORI
              6b9f 0004  ld   $04
              6ba0 0035  ld   $35         ;0597 BCC
              6ba1 003f  ld   $3f         ;0598 EQ
              6ba2 00a9  ld   $a9
              6ba3 008c  ld   $8c         ;059a XORI
              6ba4 001c  ld   $1c
              6ba5 0035  ld   $35         ;059c BCC
              6ba6 0072  ld   $72         ;059d NE
              6ba7 00a3  ld   $a3
              6ba8 002b  ld   $2b         ;059f STW
              6ba9 0070  ld   $70         ;059f 'p'
              6baa 0093  ld   $93         ;05a1 INC
              6bab 006b  ld   $6b         ;05a1 'tmp'+1
              6bac 0090  ld   $90         ;05a3 BRA
              6bad 00a9  ld   $a9
              6bae 0021  ld   $21         ;05a5 LDW
              6baf 0076  ld   $76         ;05a5 'Bias'
              6bb0 00e6  ld   $e6         ;05a7 SUBI
              6bb1 000f  ld   $0f
              6bb2 0021  ld   $21         ;05a9 LDW
              6bb3 0076  ld   $76         ;05a9 'Bias'
              6bb4 0021  ld   $21         ;05ab LDW
              6bb5 006a  ld   $6a         ;05ab 'tmp'
              6bb6 0035  ld   $35         ;05ad BCC
              6bb7 0072  ld   $72         ;05ae NE
              6bb8 00bb  ld   $bb
              6bb9 001a  ld   $1a         ;05b0 LD
              6bba 0006  ld   $06
              6bbb 00e6  ld   $e6         ;05b2 SUBI
              6bbc 000d  ld   $0d
              6bbd 0035  ld   $35         ;05b4 BCC
              6bbe 0053  ld   $53         ;05b5 GE
              6bbf 00b9  ld   $b9
              6bc0 0059  ld   $59         ;05b7 LDI
              6bc1 0001  ld   $01
              6bc2 0090  ld   $90         ;05b9 BRA
              6bc3 00bb  ld   $bb
              6bc4 0059  ld   $59         ;05bb LDI
              6bc5 0000  ld   $00
              6bc6 0035  ld   $35         ;05bd BCC
              6bc7 003f  ld   $3f         ;05be EQ
              6bc8 00e4  ld   $e4
              6bc9 0021  ld   $21         ;05c0 LDW
              6bca 0070  ld   $70         ;05c0 'p'
              6bcb 0035  ld   $35         ;05c2 BCC
              6bcc 0072  ld   $72         ;05c3 NE
              6bcd 00c7  ld   $c7
              6bce 0021  ld   $21         ;05c5 LDW
              6bcf 0091  ld   $91         ;05c5 'q'
              6bd0 0090  ld   $90         ;05c7 BRA
              6bd1 00df  ld   $df
              6bd2 0021  ld   $21         ;05c9 LDW
              6bd3 0091  ld   $91         ;05c9 'q'
              6bd4 0035  ld   $35         ;05cb BCC
              6bd5 0072  ld   $72         ;05cc NE
              6bd6 00d0  ld   $d0
              6bd7 0021  ld   $21         ;05ce LDW
              6bd8 0070  ld   $70         ;05ce 'p'
              6bd9 0090  ld   $90         ;05d0 BRA
              6bda 00df  ld   $df
              6bdb 001a  ld   $1a         ;05d2 LD
              6bdc 0006  ld   $06
              6bdd 00e6  ld   $e6         ;05d4 SUBI
              6bde 0080  ld   $80
              6bdf 0099  ld   $99         ;05d6 ADDW
              6be0 0076  ld   $76         ;05d6 'Bias'
              6be1 0035  ld   $35         ;05d8 BCC
              6be2 0053  ld   $53         ;05d9 GE
              6be3 00dd  ld   $dd
              6be4 0021  ld   $21         ;05db LDW
              6be5 0070  ld   $70         ;05db 'p'
              6be6 0090  ld   $90         ;05dd BRA
              6be7 00df  ld   $df
              6be8 0021  ld   $21         ;05df LDW
              6be9 0091  ld   $91         ;05df 'q'
              6bea 0035  ld   $35         ;05e1 BCC
              6beb 003f  ld   $3f         ;05e2 EQ
              6bec 00e4  ld   $e4
              6bed 00cf  ld   $cf         ;05e4 CALL
              6bee 0018  ld   $18         ;05e4 vAC
              6bef 0063  ld   $63         ;05e6 POP
              6bf0 00ff  ld   $ff         ;05e7 RET
              6bf1 002b  ld   $2b         ;05e8 STW
              6bf2 0093  ld   $93         ;05e8 'AutoControl'
              6bf3 0093  ld   $93         ;05ea INC
              6bf4 001b  ld   $1b         ;05ea '_vLR'+1
              6bf5 00ff  ld   $ff         ;05ec RET
              6bf6 0006  ld   $06         ;| RAM segment address (high byte first)
              6bf7 0000  ld   $00         ;|
              6bf8 00fa  ld   $fa         ;| Length (1..256)
              6bf9 00cd  ld   $cd         ;0600 DEF
              6bfa 0016  ld   $16
              6bfb fe00  bra  ac          ;+-----------------------------------+
              6bfc fcfd  bra  $6bfd       ;|                                   |
              6bfd 1418  ld   $18,y       ;| Trampoline for page $6b00 lookups |
              6bfe e006  jmp  y,$06       ;|                                   |
              6bff c218  st   [$18]       ;+-----------------------------------+
              6c00 0075  ld   $75         ;0602 PUSH
              6c01 0099  ld   $99         ;0603 ADDW
              6c02 004a  ld   $4a         ;0603 'Timer'
              6c03 002b  ld   $2b         ;0605 STW
              6c04 004a  ld   $4a         ;0605 'Timer'
              6c05 00e6  ld   $e6         ;0607 SUBI
              6c06 000f  ld   $0f
              6c07 0035  ld   $35         ;0609 BCC
              6c08 0056  ld   $56         ;060a LE
              6c09 000e  ld   $0e
              6c0a 0059  ld   $59         ;060c LDI
              6c0b 000f  ld   $0f
              6c0c 002b  ld   $2b         ;060e STW
              6c0d 004a  ld   $4a         ;060e 'Timer'
              6c0e 001a  ld   $1a         ;0610 LD
              6c0f 000e  ld   $0e
              6c10 002b  ld   $2b         ;0612 STW
              6c11 0048  ld   $48         ;0612 'TimeOut'
              6c12 00cf  ld   $cf         ;0614 CALL
              6c13 004c  ld   $4c         ;0614 'DrawTimer'
              6c14 0063  ld   $63         ;0616 POP
              6c15 00ff  ld   $ff         ;0617 RET
              6c16 002b  ld   $2b         ;0618 STW
              6c17 0081  ld   $81         ;0618 'AddTimer'
              6c18 00cd  ld   $cd         ;061a DEF
              6c19 00b3  ld   $b3
              6c1a 0075  ld   $75         ;061c PUSH
              6c1b 0059  ld   $59         ;061d LDI
              6c1c 0000  ld   $00
              6c1d 002b  ld   $2b         ;061f STW
              6c1e 005e  ld   $5e         ;061f 'Score'
              6c1f 002b  ld   $2b         ;0621 STW
              6c20 004a  ld   $4a         ;0621 'Timer'
              6c21 00cf  ld   $cf         ;0623 CALL
              6c22 007e  ld   $7e         ;0623 'DrawScore'
              6c23 0059  ld   $59         ;0625 LDI
              6c24 000f  ld   $0f
              6c25 002b  ld   $2b         ;0627 STW
              6c26 004a  ld   $4a         ;0627 'Timer'
              6c27 00cf  ld   $cf         ;0629 CALL
              6c28 004c  ld   $4c         ;0629 'DrawTimer'
              6c29 00cf  ld   $cf         ;062b CALL
              6c2a 0064  ld   $64         ;062b 'DrawHighScore'
              6c2b 0059  ld   $59         ;062d LDI
              6c2c 0004  ld   $04
              6c2d 002b  ld   $2b         ;062f STW
              6c2e 0038  ld   $38         ;062f 'BgColor'
              6c2f 0011  ld   $11         ;0631 LDWI
              6c30 0000  ld   $00
              6c31 0010  ld   $10
              6c32 002b  ld   $2b         ;0634 STW
              6c33 003c  ld   $3c         ;0634 'Pos'
              6c34 00cf  ld   $cf         ;0636 CALL
              6c35 006c  ld   $6c         ;0636 'ClearScreen'
              6c36 0059  ld   $59         ;0638 LDI
              6c37 001a  ld   $1a
              6c38 002b  ld   $2b         ;063a STW
              6c39 003a  ld   $3a         ;063a 'Color'
              6c3a 0059  ld   $59         ;063c LDI
              6c3b 0001  ld   $01
              6c3c 002b  ld   $2b         ;063e STW
              6c3d 0044  ld   $44         ;063e 'Step'
              6c3e 0059  ld   $59         ;0640 LDI
              6c3f 009f  ld   $9f
              6c40 00cf  ld   $cf         ;0642 CALL
              6c41 0046  ld   $46         ;0642 'DrawLine'
              6c42 0011  ld   $11         ;0644 LDWI
              6c43 0000  ld   $00
              6c44 0001  ld   $01
              6c45 002b  ld   $2b         ;0647 STW
              6c46 0044  ld   $44         ;0647 'Step'
              6c47 0059  ld   $59         ;0649 LDI
              6c48 006f  ld   $6f
              6c49 00cf  ld   $cf         ;064b CALL
              6c4a 0046  ld   $46         ;064b 'DrawLine'
              6c4b 0011  ld   $11         ;064d LDWI
              6c4c 00ff  ld   $ff
              6c4d 00ff  ld   $ff
              6c4e 002b  ld   $2b         ;0650 STW
              6c4f 0044  ld   $44         ;0650 'Step'
              6c50 0059  ld   $59         ;0652 LDI
              6c51 009f  ld   $9f
              6c52 00cf  ld   $cf         ;0654 CALL
              6c53 0046  ld   $46         ;0654 'DrawLine'
              6c54 0011  ld   $11         ;0656 LDWI
              6c55 0000  ld   $00
              6c56 00ff  ld   $ff
              6c57 002b  ld   $2b         ;0659 STW
              6c58 0044  ld   $44         ;0659 'Step'
              6c59 0059  ld   $59         ;065b LDI
              6c5a 006e  ld   $6e
              6c5b 00cf  ld   $cf         ;065d CALL
              6c5c 0046  ld   $46         ;065d 'DrawLine'
              6c5d 0059  ld   $59         ;065f LDI
              6c5e 0001  ld   $01
              6c5f 002b  ld   $2b         ;0661 STW
              6c60 0044  ld   $44         ;0661 'Step'
              6c61 0059  ld   $59         ;0663 LDI
              6c62 009e  ld   $9e
              6c63 00cf  ld   $cf         ;0665 CALL
              6c64 0046  ld   $46         ;0665 'DrawLine'
              6c65 0011  ld   $11         ;0667 LDWI
              6c66 0000  ld   $00
              6c67 0001  ld   $01
              6c68 002b  ld   $2b         ;066a STW
              6c69 0044  ld   $44         ;066a 'Step'
              6c6a 0059  ld   $59         ;066c LDI
              6c6b 006d  ld   $6d
              6c6c 00cf  ld   $cf         ;066e CALL
              6c6d 0046  ld   $46         ;066e 'DrawLine'
              6c6e 0011  ld   $11         ;0670 LDWI
              6c6f 00ff  ld   $ff
              6c70 00ff  ld   $ff
              6c71 002b  ld   $2b         ;0673 STW
              6c72 0044  ld   $44         ;0673 'Step'
              6c73 0059  ld   $59         ;0675 LDI
              6c74 009d  ld   $9d
              6c75 00cf  ld   $cf         ;0677 CALL
              6c76 0046  ld   $46         ;0677 'DrawLine'
              6c77 0011  ld   $11         ;0679 LDWI
              6c78 0000  ld   $00
              6c79 00ff  ld   $ff
              6c7a 002b  ld   $2b         ;067c STW
              6c7b 0044  ld   $44         ;067c 'Step'
              6c7c 0059  ld   $59         ;067e LDI
              6c7d 006d  ld   $6d
              6c7e 00cf  ld   $cf         ;0680 CALL
              6c7f 0046  ld   $46         ;0680 'DrawLine'
              6c80 00cf  ld   $cf         ;0682 CALL
              6c81 0095  ld   $95         ;0682 'GetReady'
              6c82 0011  ld   $11         ;0684 LDWI
              6c83 0030  ld   $30
              6c84 0044  ld   $44
              6c85 002b  ld   $2b         ;0687 STW
              6c86 0058  ld   $58         ;0687 'Head'
              6c87 002b  ld   $2b         ;0689 STW
              6c88 0089  ld   $89         ;0689 'Tail'
              6c89 00cf  ld   $cf         ;068b CALL
              6c8a 005c  ld   $5c         ;068b 'DrawHead'
              6c8b 0059  ld   $59         ;068d LDI
              6c8c 0000  ld   $00
              6c8d 002b  ld   $2b         ;068f STW
              6c8e 0083  ld   $83         ;068f 'Grow'
              6c8f 002b  ld   $2b         ;0691 STW
              6c90 0085  ld   $85         ;0691 'Drops'
              6c91 002b  ld   $2b         ;0693 STW
              6c92 004a  ld   $4a         ;0693 'Timer'
              6c93 0059  ld   $59         ;0695 LDI
              6c94 000f  ld   $0f
              6c95 00cf  ld   $cf         ;0697 CALL
              6c96 0081  ld   $81         ;0697 'AddTimer'
              6c97 0059  ld   $59         ;0699 LDI
              6c98 0002  ld   $02
              6c99 002b  ld   $2b         ;069b STW
              6c9a 0074  ld   $74         ;069b 'stepU'
              6c9b 0011  ld   $11         ;069d LDWI
              6c9c 0000  ld   $00
              6c9d 0002  ld   $02
              6c9e 002b  ld   $2b         ;06a0 STW
              6c9f 0072  ld   $72         ;06a0 'stepV'
              6ca0 0059  ld   $59         ;06a2 LDI
              6ca1 0019  ld   $19
              6ca2 002b  ld   $2b         ;06a4 STW
              6ca3 0034  ld   $34         ;06a4 'i'
              6ca4 00cf  ld   $cf         ;06a6 CALL
              6ca5 0087  ld   $87         ;06a6 'AddFood'
              6ca6 0021  ld   $21         ;06a8 LDW
              6ca7 0034  ld   $34         ;06a8 'i'
              6ca8 00e6  ld   $e6         ;06aa SUBI
              6ca9 0001  ld   $01
              6caa 0035  ld   $35         ;06ac BCC
              6cab 004d  ld   $4d         ;06ad GT
              6cac 00a2  ld   $a2
              6cad 0021  ld   $21         ;06af LDW
              6cae 0097  ld   $97         ;06af 'LaunchControl'
              6caf 002b  ld   $2b         ;06b1 STW
              6cb0 0060  ld   $60         ;06b1 'Control'
              6cb1 0063  ld   $63         ;06b3 POP
              6cb2 00ff  ld   $ff         ;06b4 RET
              6cb3 002b  ld   $2b         ;06b5 STW
              6cb4 008f  ld   $8f         ;06b5 'SetupGame'
              6cb5 00cd  ld   $cd         ;06b7 DEF
              6cb6 00f0  ld   $f0
              6cb7 0075  ld   $75         ;06b9 PUSH
              6cb8 0011  ld   $11         ;06ba LDWI
              6cb9 0002  ld   $02
              6cba 0008  ld   $08
              6cbb 002b  ld   $2b         ;06bd STW
              6cbc 003c  ld   $3c         ;06bd 'Pos'
              6cbd 0021  ld   $21         ;06bf LDW
              6cbe 005e  ld   $5e         ;06bf 'Score'
              6cbf 00b8  ld   $b8         ;06c1 SUBW
              6cc0 0030  ld   $30         ;06c1 'HighScore'
              6cc1 0035  ld   $35         ;06c3 BCC
              6cc2 0056  ld   $56         ;06c4 LE
              6cc3 00c8  ld   $c8
              6cc4 0059  ld   $59         ;06c6 LDI
              6cc5 001e  ld   $1e
              6cc6 0090  ld   $90         ;06c8 BRA
              6cc7 00ca  ld   $ca
              6cc8 0059  ld   $59         ;06ca LDI
              6cc9 0008  ld   $08
              6cca 002b  ld   $2b         ;06cc STW
              6ccb 003a  ld   $3a         ;06cc 'Color'
              6ccc 0059  ld   $59         ;06ce LDI
              6ccd 0000  ld   $00
              6cce 002b  ld   $2b         ;06d0 STW
              6ccf 0038  ld   $38         ;06d0 'BgColor'
              6cd0 0021  ld   $21         ;06d2 LDW
              6cd1 005e  ld   $5e         ;06d2 'Score'
              6cd2 002b  ld   $2b         ;06d4 STW
              6cd3 0054  ld   $54         ;06d4 'Value'
              6cd4 00cf  ld   $cf         ;06d6 CALL
              6cd5 0099  ld   $99         ;06d6 'DrawNumber4'
              6cd6 0021  ld   $21         ;06d8 LDW
              6cd7 005e  ld   $5e         ;06d8 'Score'
              6cd8 00e6  ld   $e6         ;06da SUBI
              6cd9 0064  ld   $64
              6cda 0035  ld   $35         ;06dc BCC
              6cdb 0053  ld   $53         ;06dd GE
              6cdc 00e1  ld   $e1
              6cdd 0059  ld   $59         ;06df LDI
              6cde 0004  ld   $04
              6cdf 0090  ld   $90         ;06e1 BRA
              6ce0 00ec  ld   $ec
              6ce1 00e6  ld   $e6         ;06e3 SUBI
              6ce2 00c8  ld   $c8
              6ce3 0035  ld   $35         ;06e5 BCC
              6ce4 0053  ld   $53         ;06e6 GE
              6ce5 00ea  ld   $ea
              6ce6 0059  ld   $59         ;06e8 LDI
              6ce7 0003  ld   $03
              6ce8 0090  ld   $90         ;06ea BRA
              6ce9 00ec  ld   $ec
              6cea 0059  ld   $59         ;06ec LDI
              6ceb 0002  ld   $02
              6cec 002b  ld   $2b         ;06ee STW
              6ced 004e  ld   $4e         ;06ee 'Delay'
              6cee 0063  ld   $63         ;06f0 POP
              6cef 00ff  ld   $ff         ;06f1 RET
              6cf0 002b  ld   $2b         ;06f2 STW
              6cf1 007e  ld   $7e         ;06f2 'DrawScore'
              6cf2 0011  ld   $11         ;06f4 LDWI
              6cf3 00a0  ld   $a0
              6cf4 0008  ld   $08
              6cf5 002b  ld   $2b         ;06f7 STW
              6cf6 001a  ld   $1a
              6cf7 00ff  ld   $ff         ;06f9 RET
              6cf8 0008  ld   $08         ;| RAM segment address (high byte first)
              6cf9 00a0  ld   $a0         ;|
              6cfa 0056  ld   $56         ;| Length (1..256)
              6cfb fe00  bra  ac          ;+-----------------------------------+
              6cfc fcfd  bra  $6cfd       ;|                                   |
              6cfd 1418  ld   $18,y       ;| Trampoline for page $6c00 lookups |
              6cfe e006  jmp  y,$06       ;|                                   |
              6cff c218  st   [$18]       ;+-----------------------------------+
              6d00 00cd  ld   $cd         ;08a0 DEF
              6d01 00d4  ld   $d4
              6d02 0075  ld   $75         ;08a2 PUSH
              6d03 0011  ld   $11         ;08a3 LDWI
              6d04 009c  ld   $9c
              6d05 0044  ld   $44
              6d06 00b8  ld   $b8         ;08a6 SUBW
              6d07 0058  ld   $58         ;08a6 'Head'
              6d08 0035  ld   $35         ;08a8 BCC
              6d09 0072  ld   $72         ;08a9 NE
              6d0a 00c3  ld   $c3
              6d0b 0059  ld   $59         ;08ab LDI
              6d0c 001e  ld   $1e
              6d0d 002b  ld   $2b         ;08ad STW
              6d0e 003a  ld   $3a         ;08ad 'Color'
              6d0f 0011  ld   $11         ;08af LDWI
              6d10 0002  ld   $02
              6d11 0008  ld   $08
              6d12 002b  ld   $2b         ;08b2 STW
              6d13 003c  ld   $3c         ;08b2 'Pos'
              6d14 00cd  ld   $cd         ;08b4 DEF
              6d15 00b9  ld   $b9
              6d16 0041  ld   $41         ;08b6 'A'
              6d17 0055  ld   $55         ;08b7 'U'
              6d18 0054  ld   $54         ;08b8 'T'
              6d19 004f  ld   $4f         ;08b9 'O'
              6d1a 0000  ld   $00         ;08ba 0
              6d1b 00cf  ld   $cf         ;08bb CALL
              6d1c 0042  ld   $42         ;08bb 'PrintText'
              6d1d 0021  ld   $21         ;08bd LDW
              6d1e 0093  ld   $93         ;08bd 'AutoControl'
              6d1f 002b  ld   $2b         ;08bf STW
              6d20 0060  ld   $60         ;08bf 'Control'
              6d21 00cf  ld   $cf         ;08c1 CALL
              6d22 0018  ld   $18         ;08c1 vAC
              6d23 0090  ld   $90         ;08c3 BRA
              6d24 00d2  ld   $d2
              6d25 001a  ld   $1a         ;08c5 LD
              6d26 0011  ld   $11
              6d27 0082  ld   $82         ;08c7 ANDI
              6d28 00cf  ld   $cf
              6d29 008c  ld   $8c         ;08c9 XORI
              6d2a 00cf  ld   $cf
              6d2b 0035  ld   $35         ;08cb BCC
              6d2c 003f  ld   $3f         ;08cc EQ
              6d2d 00d2  ld   $d2
              6d2e 0021  ld   $21         ;08ce LDW
              6d2f 0062  ld   $62         ;08ce 'PlayerControl'
              6d30 002b  ld   $2b         ;08d0 STW
              6d31 0060  ld   $60         ;08d0 'Control'
              6d32 00cf  ld   $cf         ;08d2 CALL
              6d33 0018  ld   $18         ;08d2 vAC
              6d34 0063  ld   $63         ;08d4 POP
              6d35 00ff  ld   $ff         ;08d5 RET
              6d36 002b  ld   $2b         ;08d6 STW
              6d37 0097  ld   $97         ;08d6 'LaunchControl'
              6d38 00cd  ld   $cd         ;08d8 DEF
              6d39 00ef  ld   $ef
              6d3a 0075  ld   $75         ;08da PUSH
              6d3b 0059  ld   $59         ;08db LDI
              6d3c 0020  ld   $20
              6d3d 002b  ld   $2b         ;08dd STW
              6d3e 0032  ld   $32         ;08dd 'Char'
              6d3f 0059  ld   $59         ;08df LDI
              6d40 000a  ld   $0a
              6d41 002b  ld   $2b         ;08e1 STW
              6d42 009b  ld   $9b         ;08e1 'Radix'
              6d43 00cf  ld   $cf         ;08e3 CALL
              6d44 009d  ld   $9d         ;08e3 'DrawNextDigit'
              6d45 0059  ld   $59         ;08e5 LDI
              6d46 0030  ld   $30
              6d47 002b  ld   $2b         ;08e7 STW
              6d48 0032  ld   $32         ;08e7 'Char'
              6d49 0059  ld   $59         ;08e9 LDI
              6d4a 0001  ld   $01
              6d4b 002b  ld   $2b         ;08eb STW
              6d4c 009b  ld   $9b         ;08eb 'Radix'
              6d4d 00cf  ld   $cf         ;08ed CALL
              6d4e 009d  ld   $9d         ;08ed 'DrawNextDigit'
              6d4f 0063  ld   $63         ;08ef POP
              6d50 00ff  ld   $ff         ;08f0 RET
              6d51 002b  ld   $2b         ;08f1 STW
              6d52 0056  ld   $56         ;08f1 'DrawNumber2'
              6d53 0093  ld   $93         ;08f3 INC
              6d54 001b  ld   $1b         ;08f3 '_vLR'+1
              6d55 00ff  ld   $ff         ;08f5 RET
              6d56 0009  ld   $09         ;| RAM segment address (high byte first)
              6d57 00a0  ld   $a0         ;|
              6d58 0056  ld   $56         ;| Length (1..256)
              6d59 00cd  ld   $cd         ;09a0 DEF
              6d5a 00c7  ld   $c7
              6d5b 0075  ld   $75         ;09a2 PUSH
              6d5c 0021  ld   $21         ;09a3 LDW
              6d5d 0054  ld   $54         ;09a3 'Value'
              6d5e 00b8  ld   $b8         ;09a5 SUBW
              6d5f 009b  ld   $9b         ;09a5 'Radix'
              6d60 0035  ld   $35         ;09a7 BCC
              6d61 0050  ld   $50         ;09a8 LT
              6d62 00c3  ld   $c3
              6d63 002b  ld   $2b         ;09aa STW
              6d64 0054  ld   $54         ;09aa 'Value'
              6d65 0059  ld   $59         ;09ac LDI
              6d66 0031  ld   $31
              6d67 002b  ld   $2b         ;09ae STW
              6d68 0032  ld   $32         ;09ae 'Char'
              6d69 0021  ld   $21         ;09b0 LDW
              6d6a 0054  ld   $54         ;09b0 'Value'
              6d6b 00b8  ld   $b8         ;09b2 SUBW
              6d6c 009b  ld   $9b         ;09b2 'Radix'
              6d6d 0035  ld   $35         ;09b4 BCC
              6d6e 0050  ld   $50         ;09b5 LT
              6d6f 00bb  ld   $bb
              6d70 002b  ld   $2b         ;09b7 STW
              6d71 0054  ld   $54         ;09b7 'Value'
              6d72 0093  ld   $93         ;09b9 INC
              6d73 0032  ld   $32         ;09b9 'Char'
              6d74 0090  ld   $90         ;09bb BRA
              6d75 00b0  ld   $b0
              6d76 00cf  ld   $cf         ;09bd CALL
              6d77 003e  ld   $3e         ;09bd 'PrintChar'
              6d78 0059  ld   $59         ;09bf LDI
              6d79 0030  ld   $30
              6d7a 002b  ld   $2b         ;09c1 STW
              6d7b 0032  ld   $32         ;09c1 'Char'
              6d7c 0090  ld   $90         ;09c3 BRA
              6d7d 00c5  ld   $c5
              6d7e 00cf  ld   $cf         ;09c5 CALL
              6d7f 003e  ld   $3e         ;09c5 'PrintChar'
              6d80 0063  ld   $63         ;09c7 POP
              6d81 00ff  ld   $ff         ;09c8 RET
              6d82 002b  ld   $2b         ;09c9 STW
              6d83 009d  ld   $9d         ;09c9 'DrawNextDigit'
              6d84 00cd  ld   $cd         ;09cb DEF
              6d85 00ef  ld   $ef
              6d86 0075  ld   $75         ;09cd PUSH
              6d87 0059  ld   $59         ;09ce LDI
              6d88 0020  ld   $20
              6d89 002b  ld   $2b         ;09d0 STW
              6d8a 0032  ld   $32         ;09d0 'Char'
              6d8b 0011  ld   $11         ;09d2 LDWI
              6d8c 00e8  ld   $e8
              6d8d 0003  ld   $03
              6d8e 002b  ld   $2b         ;09d5 STW
              6d8f 009b  ld   $9b         ;09d5 'Radix'
              6d90 00cf  ld   $cf         ;09d7 CALL
              6d91 009d  ld   $9d         ;09d7 'DrawNextDigit'
              6d92 0059  ld   $59         ;09d9 LDI
              6d93 0064  ld   $64
              6d94 002b  ld   $2b         ;09db STW
              6d95 009b  ld   $9b         ;09db 'Radix'
              6d96 00cf  ld   $cf         ;09dd CALL
              6d97 009d  ld   $9d         ;09dd 'DrawNextDigit'
              6d98 0059  ld   $59         ;09df LDI
              6d99 000a  ld   $0a
              6d9a 002b  ld   $2b         ;09e1 STW
              6d9b 009b  ld   $9b         ;09e1 'Radix'
              6d9c 00cf  ld   $cf         ;09e3 CALL
              6d9d 009d  ld   $9d         ;09e3 'DrawNextDigit'
              6d9e 0059  ld   $59         ;09e5 LDI
              6d9f 0030  ld   $30
              6da0 002b  ld   $2b         ;09e7 STW
              6da1 0032  ld   $32         ;09e7 'Char'
              6da2 0059  ld   $59         ;09e9 LDI
              6da3 0001  ld   $01
              6da4 002b  ld   $2b         ;09eb STW
              6da5 009b  ld   $9b         ;09eb 'Radix'
              6da6 00cf  ld   $cf         ;09ed CALL
              6da7 009d  ld   $9d         ;09ed 'DrawNextDigit'
              6da8 0063  ld   $63         ;09ef POP
              6da9 00ff  ld   $ff         ;09f0 RET
              6daa 002b  ld   $2b         ;09f1 STW
              6dab 0099  ld   $99         ;09f1 'DrawNumber4'
              6dac 0093  ld   $93         ;09f3 INC
              6dad 001b  ld   $1b         ;09f3 '_vLR'+1
              6dae 00ff  ld   $ff         ;09f5 RET
              6daf 000a  ld   $0a         ;| RAM segment address (high byte first)
              6db0 00a0  ld   $a0         ;|
              6db1 0056  ld   $56         ;| Length (1..256)
              6db2 00cd  ld   $cd         ;0aa0 DEF
              6db3 00ba  ld   $ba
              6db4 0075  ld   $75         ;0aa2 PUSH
              6db5 0011  ld   $11         ;0aa3 LDWI
              6db6 0074  ld   $74
              6db7 0008  ld   $08
              6db8 002b  ld   $2b         ;0aa6 STW
              6db9 003c  ld   $3c         ;0aa6 'Pos'
              6dba 0059  ld   $59         ;0aa8 LDI
              6dbb 0000  ld   $00
              6dbc 002b  ld   $2b         ;0aaa STW
              6dbd 0038  ld   $38         ;0aaa 'BgColor'
              6dbe 00cd  ld   $cd         ;0aac DEF
              6dbf 00b0  ld   $b0
              6dc0 0048  ld   $48         ;0aae 'H'
              6dc1 0049  ld   $49         ;0aaf 'I'
              6dc2 0020  ld   $20         ;0ab0 ' '
              6dc3 0000  ld   $00         ;0ab1 0
              6dc4 00cf  ld   $cf         ;0ab2 CALL
              6dc5 0042  ld   $42         ;0ab2 'PrintText'
              6dc6 0021  ld   $21         ;0ab4 LDW
              6dc7 0030  ld   $30         ;0ab4 'HighScore'
              6dc8 002b  ld   $2b         ;0ab6 STW
              6dc9 0054  ld   $54         ;0ab6 'Value'
              6dca 00cf  ld   $cf         ;0ab8 CALL
              6dcb 0099  ld   $99         ;0ab8 'DrawNumber4'
              6dcc 0063  ld   $63         ;0aba POP
              6dcd 00ff  ld   $ff         ;0abb RET
              6dce 002b  ld   $2b         ;0abc STW
              6dcf 0064  ld   $64         ;0abc 'DrawHighScore'
              6dd0 00cd  ld   $cd         ;0abe DEF
              6dd1 00ef  ld   $ef
              6dd2 002b  ld   $2b         ;0ac0 STW
              6dd3 0034  ld   $34         ;0ac0 'i'
              6dd4 0088  ld   $88         ;0ac2 ORI
              6dd5 00ff  ld   $ff
              6dd6 008c  ld   $8c         ;0ac4 XORI
              6dd7 00ff  ld   $ff
              6dd8 0088  ld   $88         ;0ac6 ORI
              6dd9 00fa  ld   $fa
              6dda 002b  ld   $2b         ;0ac8 STW
              6ddb 0070  ld   $70         ;0ac8 'p'
              6ddc 001a  ld   $1a         ;0aca LD
              6ddd 0034  ld   $34         ;0aca 'i'
              6dde 002b  ld   $2b         ;0acc STW
              6ddf 0034  ld   $34         ;0acc 'i'
              6de0 0059  ld   $59         ;0ace LDI
              6de1 0000  ld   $00
              6de2 00f0  ld   $f0         ;0ad0 POKE
              6de3 0070  ld   $70         ;0ad0 'p'
              6de4 0093  ld   $93         ;0ad2 INC
              6de5 0070  ld   $70         ;0ad2 'p'
              6de6 0059  ld   $59         ;0ad4 LDI
              6de7 0001  ld   $01
              6de8 00f0  ld   $f0         ;0ad6 POKE
              6de9 0070  ld   $70         ;0ad6 'p'
              6dea 0093  ld   $93         ;0ad8 INC
              6deb 0070  ld   $70         ;0ad8 'p'
              6dec 0011  ld   $11         ;0ada LDWI
              6ded 0000  ld   $00
              6dee 0009  ld   $09
              6def 0099  ld   $99         ;0add ADDW
              6df0 0034  ld   $34         ;0add 'i'
              6df1 007f  ld   $7f         ;0adf LUP
              6df2 0000  ld   $00
              6df3 00f0  ld   $f0         ;0ae1 POKE
              6df4 0070  ld   $70         ;0ae1 'p'
              6df5 0093  ld   $93         ;0ae3 INC
              6df6 0070  ld   $70         ;0ae3 'p'
              6df7 0011  ld   $11         ;0ae5 LDWI
              6df8 0000  ld   $00
              6df9 0009  ld   $09
              6dfa 0099  ld   $99         ;0ae8 ADDW
              6dfb fe00  bra  ac          ;+-----------------------------------+
              6dfc fcfd  bra  $6dfd       ;|                                   |
              6dfd 1418  ld   $18,y       ;| Trampoline for page $6d00 lookups |
              6dfe e006  jmp  y,$06       ;|                                   |
              6dff c218  st   [$18]       ;+-----------------------------------+
              6e00 0034  ld   $34         ;0ae8 'i'
              6e01 007f  ld   $7f         ;0aea LUP
              6e02 0001  ld   $01
              6e03 00f0  ld   $f0         ;0aec POKE
              6e04 0070  ld   $70         ;0aec 'p'
              6e05 0093  ld   $93         ;0aee INC
              6e06 0070  ld   $70         ;0aee 'p'
              6e07 00ff  ld   $ff         ;0af0 RET
              6e08 002b  ld   $2b         ;0af1 STW
              6e09 009f  ld   $9f         ;0af1 'SetupChannel'
              6e0a 0093  ld   $93         ;0af3 INC
              6e0b 001b  ld   $1b         ;0af3 '_vLR'+1
              6e0c 00ff  ld   $ff         ;0af5 RET
              6e0d 000b  ld   $0b         ;| RAM segment address (high byte first)
              6e0e 00a0  ld   $a0         ;|
              6e0f 004c  ld   $4c         ;| Length (1..256)
              6e10 00cd  ld   $cd         ;0ba0 DEF
              6e11 00c2  ld   $c2
              6e12 0075  ld   $75         ;0ba2 PUSH
              6e13 00e9  ld   $e9         ;0ba3 LSLW
              6e14 002b  ld   $2b         ;0ba4 STW
              6e15 006a  ld   $6a         ;0ba4 'tmp'
              6e16 0011  ld   $11         ;0ba6 LDWI
              6e17 0000  ld   $00
              6e18 0001  ld   $01
              6e19 00fa  ld   $fa         ;0ba9 ORW
              6e1a 006a  ld   $6a         ;0ba9 'tmp'
              6e1b 00cf  ld   $cf         ;0bab CALL
              6e1c 009f  ld   $9f         ;0bab 'SetupChannel'
              6e1d 0011  ld   $11         ;0bad LDWI
              6e1e 0000  ld   $00
              6e1f 0002  ld   $02
              6e20 00fa  ld   $fa         ;0bb0 ORW
              6e21 006a  ld   $6a         ;0bb0 'tmp'
              6e22 00cf  ld   $cf         ;0bb2 CALL
              6e23 009f  ld   $9f         ;0bb2 'SetupChannel'
              6e24 0011  ld   $11         ;0bb4 LDWI
              6e25 0000  ld   $00
              6e26 0003  ld   $03
              6e27 00fa  ld   $fa         ;0bb7 ORW
              6e28 006a  ld   $6a         ;0bb7 'tmp'
              6e29 00cf  ld   $cf         ;0bb9 CALL
              6e2a 009f  ld   $9f         ;0bb9 'SetupChannel'
              6e2b 0011  ld   $11         ;0bbb LDWI
              6e2c 0000  ld   $00
              6e2d 0004  ld   $04
              6e2e 00fa  ld   $fa         ;0bbe ORW
              6e2f 006a  ld   $6a         ;0bbe 'tmp'
              6e30 00cf  ld   $cf         ;0bc0 CALL
              6e31 009f  ld   $9f         ;0bc0 'SetupChannel'
              6e32 0063  ld   $63         ;0bc2 POP
              6e33 00ff  ld   $ff         ;0bc3 RET
              6e34 002b  ld   $2b         ;0bc4 STW
              6e35 007c  ld   $7c         ;0bc4 'SetNote'
              6e36 00cd  ld   $cd         ;0bc6 DEF
              6e37 00e5  ld   $e5
              6e38 0075  ld   $75         ;0bc8 PUSH
              6e39 0059  ld   $59         ;0bc9 LDI
              6e3a 0049  ld   $49
              6e3b 002b  ld   $2b         ;0bcb STW
              6e3c 00a1  ld   $a1         ;0bcb 'j'
              6e3d 0021  ld   $21         ;0bcd LDW
              6e3e 00a1  ld   $a1         ;0bcd 'j'
              6e3f 00cf  ld   $cf         ;0bcf CALL
              6e40 007c  ld   $7c         ;0bcf 'SetNote'
              6e41 0059  ld   $59         ;0bd1 LDI
              6e42 0005  ld   $05
              6e43 005e  ld   $5e         ;0bd3 ST
              6e44 002c  ld   $2c
              6e45 001a  ld   $1a         ;0bd5 LD
              6e46 002c  ld   $2c
              6e47 0035  ld   $35         ;0bd7 BCC
              6e48 0072  ld   $72         ;0bd8 NE
              6e49 00d3  ld   $d3
              6e4a 0021  ld   $21         ;0bda LDW
              6e4b 00a1  ld   $a1         ;0bda 'j'
              6e4c 00e6  ld   $e6         ;0bdc SUBI
              6e4d 0001  ld   $01
              6e4e 002b  ld   $2b         ;0bde STW
              6e4f 00a1  ld   $a1         ;0bde 'j'
              6e50 008c  ld   $8c         ;0be0 XORI
              6e51 0030  ld   $30
              6e52 0035  ld   $35         ;0be2 BCC
              6e53 0072  ld   $72         ;0be3 NE
              6e54 00cb  ld   $cb
              6e55 0063  ld   $63         ;0be5 POP
              6e56 00ff  ld   $ff         ;0be6 RET
              6e57 002b  ld   $2b         ;0be7 STW
              6e58 0066  ld   $66         ;0be7 'PlayGameOverSound'
              6e59 0093  ld   $93         ;0be9 INC
              6e5a 001b  ld   $1b         ;0be9 '_vLR'+1
              6e5b 00ff  ld   $ff         ;0beb RET
              6e5c 000c  ld   $0c         ;| RAM segment address (high byte first)
              6e5d 00a0  ld   $a0         ;|
              6e5e 0045  ld   $45         ;| Length (1..256)
              6e5f 00cd  ld   $cd         ;0ca0 DEF
              6e60 00de  ld   $de
              6e61 0075  ld   $75         ;0ca2 PUSH
              6e62 0011  ld   $11         ;0ca3 LDWI
              6e63 0033  ld   $33
              6e64 0045  ld   $45
              6e65 002b  ld   $2b         ;0ca6 STW
              6e66 0070  ld   $70         ;0ca6 'p'
              6e67 002b  ld   $2b         ;0ca8 STW
              6e68 003c  ld   $3c         ;0ca8 'Pos'
              6e69 0059  ld   $59         ;0caa LDI
              6e6a 0018  ld   $18
              6e6b 002b  ld   $2b         ;0cac STW
              6e6c 003a  ld   $3a         ;0cac 'Color'
              6e6d 0021  ld   $21         ;0cae LDW
              6e6e 00a3  ld   $a3         ;0cae 'Messages'
              6e6f 00cf  ld   $cf         ;0cb0 CALL
              6e70 0042  ld   $42         ;0cb0 'PrintText'
              6e71 0059  ld   $59         ;0cb2 LDI
              6e72 002d  ld   $2d
              6e73 00cf  ld   $cf         ;0cb4 CALL
              6e74 0050  ld   $50         ;0cb4 'Wait'
              6e75 0021  ld   $21         ;0cb6 LDW
              6e76 0070  ld   $70         ;0cb6 'p'
              6e77 002b  ld   $2b         ;0cb8 STW
              6e78 003c  ld   $3c         ;0cb8 'Pos'
              6e79 0059  ld   $59         ;0cba LDI
              6e7a 003e  ld   $3e
              6e7b 002b  ld   $2b         ;0cbc STW
              6e7c 003a  ld   $3a         ;0cbc 'Color'
              6e7d 0021  ld   $21         ;0cbe LDW
              6e7e 0040  ld   $40         ;0cbe 'Text'
              6e7f 00cf  ld   $cf         ;0cc0 CALL
              6e80 0042  ld   $42         ;0cc0 'PrintText'
              6e81 0059  ld   $59         ;0cc2 LDI
              6e82 002d  ld   $2d
              6e83 00cf  ld   $cf         ;0cc4 CALL
              6e84 0050  ld   $50         ;0cc4 'Wait'
              6e85 0021  ld   $21         ;0cc6 LDW
              6e86 0070  ld   $70         ;0cc6 'p'
              6e87 002b  ld   $2b         ;0cc8 STW
              6e88 003c  ld   $3c         ;0cc8 'Pos'
              6e89 0059  ld   $59         ;0cca LDI
              6e8a 000f  ld   $0f
              6e8b 002b  ld   $2b         ;0ccc STW
              6e8c 003a  ld   $3a         ;0ccc 'Color'
              6e8d 0021  ld   $21         ;0cce LDW
              6e8e 0040  ld   $40         ;0cce 'Text'
              6e8f 00cf  ld   $cf         ;0cd0 CALL
              6e90 0042  ld   $42         ;0cd0 'PrintText'
              6e91 0059  ld   $59         ;0cd2 LDI
              6e92 002d  ld   $2d
              6e93 00cf  ld   $cf         ;0cd4 CALL
              6e94 0050  ld   $50         ;0cd4 'Wait'
              6e95 0021  ld   $21         ;0cd6 LDW
              6e96 0070  ld   $70         ;0cd6 'p'
              6e97 002b  ld   $2b         ;0cd8 STW
              6e98 003c  ld   $3c         ;0cd8 'Pos'
              6e99 0021  ld   $21         ;0cda LDW
              6e9a 0040  ld   $40         ;0cda 'Text'
              6e9b 00cf  ld   $cf         ;0cdc CALL
              6e9c 0042  ld   $42         ;0cdc 'PrintText'
              6e9d 0063  ld   $63         ;0cde POP
              6e9e 00ff  ld   $ff         ;0cdf RET
              6e9f 002b  ld   $2b         ;0ce0 STW
              6ea0 0095  ld   $95         ;0ce0 'GetReady'
              6ea1 0093  ld   $93         ;0ce2 INC
              6ea2 001b  ld   $1b         ;0ce2 '_vLR'+1
              6ea3 00ff  ld   $ff         ;0ce4 RET
              6ea4 000d  ld   $0d         ;| RAM segment address (high byte first)
              6ea5 00a0  ld   $a0         ;|
              6ea6 0046  ld   $46         ;| Length (1..256)
              6ea7 00cd  ld   $cd         ;0da0 DEF
              6ea8 00df  ld   $df
              6ea9 0021  ld   $21         ;0da2 LDW
              6eaa 0074  ld   $74         ;0da2 'stepU'
              6eab 002b  ld   $2b         ;0da4 STW
              6eac 006a  ld   $6a         ;0da4 'tmp'
              6ead 001a  ld   $1a         ;0da6 LD
              6eae 0011  ld   $11
              6eaf 008c  ld   $8c         ;0da8 XORI
              6eb0 00fe  ld   $fe
              6eb1 0035  ld   $35         ;0daa BCC
              6eb2 0072  ld   $72         ;0dab NE
              6eb3 00af  ld   $af
              6eb4 0059  ld   $59         ;0dad LDI
              6eb5 0002  ld   $02
              6eb6 002b  ld   $2b         ;0daf STW
              6eb7 006a  ld   $6a         ;0daf 'tmp'
              6eb8 001a  ld   $1a         ;0db1 LD
              6eb9 0011  ld   $11
              6eba 008c  ld   $8c         ;0db3 XORI
              6ebb 00fd  ld   $fd
              6ebc 0035  ld   $35         ;0db5 BCC
              6ebd 0072  ld   $72         ;0db6 NE
              6ebe 00bb  ld   $bb
              6ebf 0011  ld   $11         ;0db8 LDWI
              6ec0 00fe  ld   $fe
              6ec1 00ff  ld   $ff
              6ec2 002b  ld   $2b         ;0dbb STW
              6ec3 006a  ld   $6a         ;0dbb 'tmp'
              6ec4 001a  ld   $1a         ;0dbd LD
              6ec5 0011  ld   $11
              6ec6 008c  ld   $8c         ;0dbf XORI
              6ec7 00fb  ld   $fb
              6ec8 0035  ld   $35         ;0dc1 BCC
              6ec9 0072  ld   $72         ;0dc2 NE
              6eca 00c7  ld   $c7
              6ecb 0011  ld   $11         ;0dc4 LDWI
              6ecc 0000  ld   $00
              6ecd 0002  ld   $02
              6ece 002b  ld   $2b         ;0dc7 STW
              6ecf 006a  ld   $6a         ;0dc7 'tmp'
              6ed0 001a  ld   $1a         ;0dc9 LD
              6ed1 0011  ld   $11
              6ed2 008c  ld   $8c         ;0dcb XORI
              6ed3 00f7  ld   $f7
              6ed4 0035  ld   $35         ;0dcd BCC
              6ed5 0072  ld   $72         ;0dce NE
              6ed6 00d3  ld   $d3
              6ed7 0011  ld   $11         ;0dd0 LDWI
              6ed8 0000  ld   $00
              6ed9 00fe  ld   $fe
              6eda 002b  ld   $2b         ;0dd3 STW
              6edb 006a  ld   $6a         ;0dd3 'tmp'
              6edc 0021  ld   $21         ;0dd5 LDW
              6edd 006a  ld   $6a         ;0dd5 'tmp'
              6ede 0099  ld   $99         ;0dd7 ADDW
              6edf 0074  ld   $74         ;0dd7 'stepU'
              6ee0 0035  ld   $35         ;0dd9 BCC
              6ee1 003f  ld   $3f         ;0dda EQ
              6ee2 00de  ld   $de
              6ee3 0021  ld   $21         ;0ddc LDW
              6ee4 006a  ld   $6a         ;0ddc 'tmp'
              6ee5 002b  ld   $2b         ;0dde STW
              6ee6 0074  ld   $74         ;0dde 'stepU'
              6ee7 00ff  ld   $ff         ;0de0 RET
              6ee8 002b  ld   $2b         ;0de1 STW
              6ee9 0062  ld   $62         ;0de1 'PlayerControl'
              6eea 0093  ld   $93         ;0de3 INC
              6eeb 001b  ld   $1b         ;0de3 '_vLR'+1
              6eec 00ff  ld   $ff         ;0de5 RET
              6eed 000e  ld   $0e         ;| RAM segment address (high byte first)
              6eee 00a0  ld   $a0         ;|
              6eef 004d  ld   $4d         ;| Length (1..256)
              6ef0 00cd  ld   $cd         ;0ea0 DEF
              6ef1 00cb  ld   $cb
              6ef2 0020  ld   $20         ;0ea2 ' '
              6ef3 0045  ld   $45         ;0ea3 'E'
              6ef4 0041  ld   $41         ;0ea4 'A'
              6ef5 0054  ld   $54         ;0ea5 'T'
              6ef6 0020  ld   $20         ;0ea6 ' '
              6ef7 0046  ld   $46         ;0ea7 'F'
              6ef8 004f  ld   $4f         ;0ea8 'O'
              6ef9 004f  ld   $4f         ;0ea9 'O'
              6efa 0044  ld   $44         ;0eaa 'D'
              6efb fe00  bra  ac          ;+-----------------------------------+
              6efc fcfd  bra  $6efd       ;|                                   |
              6efd 1418  ld   $18,y       ;| Trampoline for page $6e00 lookups |
              6efe e006  jmp  y,$06       ;|                                   |
              6eff c218  st   [$18]       ;+-----------------------------------+
              6f00 0000  ld   $00         ;0eab 0
              6f01 004e  ld   $4e         ;0eac 'N'
              6f02 004f  ld   $4f         ;0ead 'O'
              6f03 0054  ld   $54         ;0eae 'T'
              6f04 0020  ld   $20         ;0eaf ' '
              6f05 0050  ld   $50         ;0eb0 'P'
              6f06 004f  ld   $4f         ;0eb1 'O'
              6f07 0049  ld   $49         ;0eb2 'I'
              6f08 0053  ld   $53         ;0eb3 'S'
              6f09 004f  ld   $4f         ;0eb4 'O'
              6f0a 004e  ld   $4e         ;0eb5 'N'
              6f0b 0000  ld   $00         ;0eb6 0
              6f0c 0047  ld   $47         ;0eb7 'G'
              6f0d 0045  ld   $45         ;0eb8 'E'
              6f0e 0054  ld   $54         ;0eb9 'T'
              6f0f 0020  ld   $20         ;0eba ' '
              6f10 0052  ld   $52         ;0ebb 'R'
              6f11 0045  ld   $45         ;0ebc 'E'
              6f12 0041  ld   $41         ;0ebd 'A'
              6f13 0044  ld   $44         ;0ebe 'D'
              6f14 0059  ld   $59         ;0ebf 'Y'
              6f15 0021  ld   $21         ;0ec0 '!'
              6f16 0000  ld   $00         ;0ec1 0
              6f17 0020  ld   $20         ;0ec2 ' '
              6f18 0020  ld   $20         ;0ec3 ' '
              6f19 0020  ld   $20         ;0ec4 ' '
              6f1a 0020  ld   $20         ;0ec5 ' '
              6f1b 0020  ld   $20         ;0ec6 ' '
              6f1c 0020  ld   $20         ;0ec7 ' '
              6f1d 0020  ld   $20         ;0ec8 ' '
              6f1e 0020  ld   $20         ;0ec9 ' '
              6f1f 0020  ld   $20         ;0eca ' '
              6f20 0020  ld   $20         ;0ecb ' '
              6f21 0000  ld   $00         ;0ecc 0
              6f22 002b  ld   $2b         ;0ecd STW
              6f23 00a3  ld   $a3         ;0ecd 'Messages'
              6f24 00cf  ld   $cf         ;0ecf CALL
              6f25 006e  ld   $6e         ;0ecf 'Intro'
              6f26 0059  ld   $59         ;0ed1 LDI
              6f27 0049  ld   $49
              6f28 00cf  ld   $cf         ;0ed3 CALL
              6f29 007c  ld   $7c         ;0ed3 'SetNote'
              6f2a 00cf  ld   $cf         ;0ed5 CALL
              6f2b 008f  ld   $8f         ;0ed5 'SetupGame'
              6f2c 00cf  ld   $cf         ;0ed7 CALL
              6f2d 008d  ld   $8d         ;0ed7 'RunGame'
              6f2e 0059  ld   $59         ;0ed9 LDI
              6f2f 0078  ld   $78
              6f30 005e  ld   $5e         ;0edb ST
              6f31 002c  ld   $2c
              6f32 0059  ld   $59         ;0edd LDI
              6f33 0007  ld   $07
              6f34 002b  ld   $2b         ;0edf STW
              6f35 003a  ld   $3a         ;0edf 'Color'
              6f36 0021  ld   $21         ;0ee1 LDW
              6f37 0058  ld   $58         ;0ee1 'Head'
              6f38 00cf  ld   $cf         ;0ee3 CALL
              6f39 005a  ld   $5a         ;0ee3 'DrawBlock'
              6f3a 00cf  ld   $cf         ;0ee5 CALL
              6f3b 0068  ld   $68         ;0ee5 'GameOver'
              6f3c 0059  ld   $59         ;0ee7 LDI
              6f3d 003c  ld   $3c
              6f3e 00cf  ld   $cf         ;0ee9 CALL
              6f3f 0050  ld   $50         ;0ee9 'Wait'
              6f40 0090  ld   $90         ;0eeb BRA
              6f41 00d3  ld   $d3
              6f42 0000  ld   $00         ;End of Apps/Snake/Snake_v3.gcl, size 1834
                                          ;+-----------------------------------+
                                          ;| Apps/TinyBASIC/TinyBASIC_v4.gcl   |
                                          ;+-----------------------------------+
              6f43 dc53  st   $53,[y,x++] ;'S'
              6f44 dc6e  st   $6e,[y,x++] ;'n'
              6f45 dc61  st   $61,[y,x++] ;'a'
              6f46 dc6b  st   $6b,[y,x++] ;'k'
              6f47 dc65  st   $65,[y,x++] ;'e'
              6f48 dc00  st   $00,[y,x++] ;'\x00'
              6f49 dc00  st   $00,[y,x++] ;'\x00'
              6f4a dc00  st   $00,[y,x++] ;'\x00'
              6f4b 0019  ld   $19
              6f4c c218  st   [$18]
              6f4d 0068  ld   $68
              6f4e 14e0  ld   $e0,y
              6f4f e071  jmp  y,$71
              6f50 c219  st   [$19]
TinyBASIC:    6f51 0002  ld   $02         ;| RAM segment address (high byte first)
              6f52 0000  ld   $00         ;|
              6f53 00f8  ld   $f8         ;| Length (1..256)
              6f54 0011  ld   $11         ;0200 LDWI
              6f55 00df  ld   $df
              6f56 0001  ld   $01
              6f57 00f6  ld   $f6         ;0203 DEEK
              6f58 002b  ld   $2b         ;0204 STW
              6f59 0030  ld   $30         ;0204 'Pos'
              6f5a 00cd  ld   $cd         ;0206 DEF
              6f5b 00c3  ld   $c3
              6f5c 0075  ld   $75         ;0208 PUSH
              6f5d 00cf  ld   $cf         ;0209 CALL
              6f5e 0032  ld   $32         ;0209 'Number'
              6f5f 0035  ld   $35         ;020b BCC
              6f60 0050  ld   $50         ;020c LT
              6f61 0010  ld   $10
              6f62 00cf  ld   $cf         ;020e CALL
              6f63 0034  ld   $34         ;020e 'Spaces'
              6f64 0063  ld   $63         ;0210 POP
              6f65 00ff  ld   $ff         ;0211 RET
              6f66 0021  ld   $21         ;0212 LDW
              6f67 0036  ld   $36         ;0212 'Active'
              6f68 00ad  ld   $ad         ;0214 PEEK
              6f69 008c  ld   $8c         ;0215 XORI
              6f6a 0024  ld   $24
              6f6b 0035  ld   $35         ;0217 BCC
              6f6c 0072  ld   $72         ;0218 NE
              6f6d 0021  ld   $21
              6f6e 0011  ld   $11         ;021a LDWI
              6f6f 00ce  ld   $ce
              6f70 0005  ld   $05
              6f71 00cf  ld   $cf         ;021d CALL
              6f72 0018  ld   $18         ;021d vAC
              6f73 00cf  ld   $cf         ;021f CALL
              6f74 0034  ld   $34         ;021f 'Spaces'
              6f75 0063  ld   $63         ;0221 POP
              6f76 00ff  ld   $ff         ;0222 RET
              6f77 00cf  ld   $cf         ;0223 CALL
              6f78 0038  ld   $38         ;0223 'Keyword'
              6f79 0028  ld   $28         ;0225 '('
              6f7a 0000  ld   $00         ;0226 0
              6f7b 0035  ld   $35         ;0227 BCC
              6f7c 003f  ld   $3f         ;0228 EQ
              6f7d 002c  ld   $2c
              6f7e 00cf  ld   $cf         ;022a CALL
              6f7f 003a  ld   $3a         ;022a 'Expression'
              6f80 0090  ld   $90         ;022c BRA
              6f81 00b8  ld   $b8
              6f82 00cf  ld   $cf         ;022e CALL
              6f83 0038  ld   $38         ;022e 'Keyword'
              6f84 0070  ld   $70         ;0230 'p'
              6f85 0065  ld   $65         ;0231 'e'
              6f86 0065  ld   $65         ;0232 'e'
              6f87 006b  ld   $6b         ;0233 'k'
              6f88 0028  ld   $28         ;0234 '('
              6f89 0000  ld   $00         ;0235 0
              6f8a 0035  ld   $35         ;0236 BCC
              6f8b 003f  ld   $3f         ;0237 EQ
              6f8c 003e  ld   $3e
              6f8d 00cf  ld   $cf         ;0239 CALL
              6f8e 003a  ld   $3a         ;0239 'Expression'
              6f8f 00ad  ld   $ad         ;023b PEEK
              6f90 002b  ld   $2b         ;023c STW
              6f91 003c  ld   $3c         ;023c 'Value'
              6f92 0090  ld   $90         ;023e BRA
              6f93 00b8  ld   $b8
              6f94 00cf  ld   $cf         ;0240 CALL
              6f95 0038  ld   $38         ;0240 'Keyword'
              6f96 0072  ld   $72         ;0242 'r'
              6f97 006e  ld   $6e         ;0243 'n'
              6f98 0064  ld   $64         ;0244 'd'
              6f99 0028  ld   $28         ;0245 '('
              6f9a 0000  ld   $00         ;0246 0
              6f9b 0035  ld   $35         ;0247 BCC
              6f9c 003f  ld   $3f         ;0248 EQ
              6f9d 005c  ld   $5c
              6f9e 00cf  ld   $cf         ;024a CALL
              6f9f 003a  ld   $3a         ;024a 'Expression'
              6fa0 0011  ld   $11         ;024c LDWI
              6fa1 00a7  ld   $a7
              6fa2 0004  ld   $04
              6fa3 002b  ld   $2b         ;024f STW
              6fa4 0022  ld   $22         ;024f '_sysFn'
              6fa5 00b4  ld   $b4         ;0251 SYS
              6fa6 00fe  ld   $fe
              6fa7 0035  ld   $35         ;0253 BCC
              6fa8 0050  ld   $50         ;0254 LT
              6fa9 004f  ld   $4f
              6faa 00cf  ld   $cf         ;0256 CALL
              6fab 003e  ld   $3e         ;0256 'Divide'
              6fac 0021  ld   $21         ;0258 LDW
              6fad 0040  ld   $40         ;0258 'i'
              6fae 002b  ld   $2b         ;025a STW
              6faf 003c  ld   $3c         ;025a 'Value'
              6fb0 0090  ld   $90         ;025c BRA
              6fb1 00b8  ld   $b8
              6fb2 00cf  ld   $cf         ;025e CALL
              6fb3 0038  ld   $38         ;025e 'Keyword'
              6fb4 0075  ld   $75         ;0260 'u'
              6fb5 0073  ld   $73         ;0261 's'
              6fb6 0072  ld   $72         ;0262 'r'
              6fb7 0028  ld   $28         ;0263 '('
              6fb8 0000  ld   $00         ;0264 0
              6fb9 0035  ld   $35         ;0265 BCC
              6fba 003f  ld   $3f         ;0266 EQ
              6fbb 006e  ld   $6e
              6fbc 00cf  ld   $cf         ;0268 CALL
              6fbd 003a  ld   $3a         ;0268 'Expression'
              6fbe 00cf  ld   $cf         ;026a CALL
              6fbf 003c  ld   $3c         ;026a 'Value'
              6fc0 002b  ld   $2b         ;026c STW
              6fc1 003c  ld   $3c         ;026c 'Value'
              6fc2 0090  ld   $90         ;026e BRA
              6fc3 00b8  ld   $b8
              6fc4 00cf  ld   $cf         ;0270 CALL
              6fc5 0042  ld   $42         ;0270 'Variable'
              6fc6 002b  ld   $2b         ;0272 STW
              6fc7 0044  ld   $44         ;0272 'k'
              6fc8 00cf  ld   $cf         ;0274 CALL
              6fc9 0034  ld   $34         ;0274 'Spaces'
              6fca 00cf  ld   $cf         ;0276 CALL
              6fcb 0038  ld   $38         ;0276 'Keyword'
              6fcc 0028  ld   $28         ;0278 '('
              6fcd 0000  ld   $00         ;0279 0
              6fce 0035  ld   $35         ;027a BCC
              6fcf 003f  ld   $3f         ;027b EQ
              6fd0 00b1  ld   $b1
              6fd1 0075  ld   $75         ;027d PUSH
              6fd2 0021  ld   $21         ;027e LDW
              6fd3 0044  ld   $44         ;027e 'k'
              6fd4 00ec  ld   $ec         ;0280 STLW
              6fd5 0000  ld   $00
              6fd6 00cf  ld   $cf         ;0282 CALL
              6fd7 003a  ld   $3a         ;0282 'Expression'
              6fd8 0035  ld   $35         ;0284 BCC
              6fd9 0053  ld   $53         ;0285 GE
              6fda 0087  ld   $87
              6fdb 00cf  ld   $cf         ;0287 CALL
              6fdc 0046  ld   $46         ;0287 'ValueError'
              6fdd 00ee  ld   $ee         ;0289 LDLW
              6fde 0000  ld   $00
              6fdf 002b  ld   $2b         ;028b STW
              6fe0 0044  ld   $44         ;028b 'k'
              6fe1 0063  ld   $63         ;028d POP
              6fe2 001a  ld   $1a         ;028e LD
              6fe3 0045  ld   $45         ;028e 'k'+1
              6fe4 00b8  ld   $b8         ;0290 SUBW
              6fe5 003c  ld   $3c         ;0290 'Value'
              6fe6 00e6  ld   $e6         ;0292 SUBI
              6fe7 0002  ld   $02
              6fe8 005e  ld   $5e         ;0294 ST
              6fe9 0045  ld   $45         ;0294 'k'+1
              6fea 0021  ld   $21         ;0296 LDW
              6feb 0048  ld   $48         ;0296 'End'
              6fec 00fc  ld   $fc         ;0298 XORW
              6fed 0044  ld   $44         ;0298 'k'
              6fee 0035  ld   $35         ;029a BCC
              6fef 0053  ld   $53         ;029b GE
              6ff0 009f  ld   $9f
              6ff1 0021  ld   $21         ;029d LDW
              6ff2 0048  ld   $48         ;029d 'End'
              6ff3 0090  ld   $90         ;029f BRA
              6ff4 00a3  ld   $a3
              6ff5 0021  ld   $21         ;02a1 LDW
              6ff6 0044  ld   $44         ;02a1 'k'
              6ff7 00b8  ld   $b8         ;02a3 SUBW
              6ff8 0048  ld   $48         ;02a3 'End'
              6ff9 0035  ld   $35         ;02a5 BCC
              6ffa 0053  ld   $53         ;02a6 GE
              6ffb fe00  bra  ac          ;+-----------------------------------+
              6ffc fcfd  bra  $6ffd       ;|                                   |
              6ffd 1418  ld   $18,y       ;| Trampoline for page $6f00 lookups |
              6ffe e006  jmp  y,$06       ;|                                   |
              6fff c218  st   [$18]       ;+-----------------------------------+
              7000 00a8  ld   $a8
              7001 00cf  ld   $cf         ;02a8 CALL
              7002 0046  ld   $46         ;02a8 'ValueError'
              7003 00cf  ld   $cf         ;02aa CALL
              7004 0038  ld   $38         ;02aa 'Keyword'
              7005 0029  ld   $29         ;02ac ')'
              7006 0000  ld   $00         ;02ad 0
              7007 0035  ld   $35         ;02ae BCC
              7008 0072  ld   $72         ;02af NE
              7009 00b1  ld   $b1
              700a 00cf  ld   $cf         ;02b1 CALL
              700b 004a  ld   $4a         ;02b1 'SyntaxError'
              700c 0021  ld   $21         ;02b3 LDW
              700d 0044  ld   $44         ;02b3 'k'
              700e 00f6  ld   $f6         ;02b5 DEEK
              700f 002b  ld   $2b         ;02b6 STW
              7010 003c  ld   $3c         ;02b6 'Value'
              7011 0063  ld   $63         ;02b8 POP
              7012 00ff  ld   $ff         ;02b9 RET
              7013 00cf  ld   $cf         ;02ba CALL
              7014 0038  ld   $38         ;02ba 'Keyword'
              7015 0029  ld   $29         ;02bc ')'
              7016 0000  ld   $00         ;02bd 0
              7017 0035  ld   $35         ;02be BCC
              7018 0072  ld   $72         ;02bf NE
              7019 00c1  ld   $c1
              701a 00cf  ld   $cf         ;02c1 CALL
              701b 004a  ld   $4a         ;02c1 'SyntaxError'
              701c 0063  ld   $63         ;02c3 POP
              701d 00ff  ld   $ff         ;02c4 RET
              701e 002b  ld   $2b         ;02c5 STW
              701f 004c  ld   $4c         ;02c5 'Factor'
              7020 00cd  ld   $cd         ;02c7 DEF
              7021 00d9  ld   $d9
              7022 0021  ld   $21         ;02c9 LDW
              7023 001a  ld   $1a
              7024 002b  ld   $2b         ;02cb STW
              7025 004e  ld   $4e         ;02cb 'tmp'
              7026 0021  ld   $21         ;02cd LDW
              7027 004e  ld   $4e         ;02cd 'tmp'
              7028 00ad  ld   $ad         ;02cf PEEK
              7029 0093  ld   $93         ;02d0 INC
              702a 004e  ld   $4e         ;02d0 'tmp'
              702b 0035  ld   $35         ;02d2 BCC
              702c 003f  ld   $3f         ;02d3 EQ
              702d 00d7  ld   $d7
              702e 00cf  ld   $cf         ;02d5 CALL
              702f 0050  ld   $50         ;02d5 'PrintChar'
              7030 0090  ld   $90         ;02d7 BRA
              7031 00cb  ld   $cb
              7032 00cf  ld   $cf         ;02d9 CALL
              7033 004e  ld   $4e         ;02d9 'tmp'
              7034 002b  ld   $2b         ;02db STW
              7035 0052  ld   $52         ;02db 'PrintS'
              7036 00cd  ld   $cd         ;02dd DEF
              7037 00f1  ld   $f1
              7038 001a  ld   $1a         ;02df LD
              7039 000f  ld   $0f
              703a 008c  ld   $8c         ;02e1 XORI
              703b 0003  ld   $03
              703c 0035  ld   $35         ;02e3 BCC
              703d 0072  ld   $72         ;02e4 NE
              703e 00f0  ld   $f0
              703f 0021  ld   $21         ;02e6 LDW
              7040 0054  ld   $54         ;02e6 'PrintCharScreen'
              7041 002b  ld   $2b         ;02e8 STW
              7042 0050  ld   $50         ;02e8 'PrintChar'
              7043 00cf  ld   $cf         ;02ea CALL
              7044 0056  ld   $56         ;02ea 'Prompt'
              7045 0042  ld   $42         ;02ec 'B'
              7046 0072  ld   $72         ;02ed 'r'
              7047 0065  ld   $65         ;02ee 'e'
              7048 0061  ld   $61         ;02ef 'a'
              7049 006b  ld   $6b         ;02f0 'k'
              704a 0000  ld   $00         ;02f1 0
              704b 00ff  ld   $ff         ;02f2 RET
              704c 002b  ld   $2b         ;02f3 STW
              704d 0058  ld   $58         ;02f3 'TestBreak'
              704e 0093  ld   $93         ;02f5 INC
              704f 001b  ld   $1b
              7050 00ff  ld   $ff         ;02f7 RET
              7051 0003  ld   $03         ;| RAM segment address (high byte first)
              7052 0000  ld   $00         ;|
              7053 00f9  ld   $f9         ;| Length (1..256)
              7054 00cd  ld   $cd         ;0300 DEF
              7055 006e  ld   $6e
              7056 002b  ld   $2b         ;0302 STW
              7057 0044  ld   $44         ;0302 'k'
              7058 00e6  ld   $e6         ;0304 SUBI
              7059 0083  ld   $83
              705a 0035  ld   $35         ;0306 BCC
              705b 004d  ld   $4d         ;0307 GT
              705c 006d  ld   $6d
              705d 001a  ld   $1a         ;0309 LD
              705e 0031  ld   $31         ;0309 'Pos'+1
              705f 00e6  ld   $e6         ;030b SUBI
              7060 0078  ld   $78
              7061 0035  ld   $35         ;030d BCC
              7062 004d  ld   $4d         ;030e GT
              7063 006d  ld   $6d
              7064 001a  ld   $1a         ;0310 LD
              7065 0030  ld   $30         ;0310 'Pos'
              7066 00e6  ld   $e6         ;0312 SUBI
              7067 009a  ld   $9a
              7068 0035  ld   $35         ;0314 BCC
              7069 0056  ld   $56         ;0315 LE
              706a 0019  ld   $19
              706b 0075  ld   $75         ;0317 PUSH
              706c 00cf  ld   $cf         ;0318 CALL
              706d 005a  ld   $5a         ;0318 'Newline'
              706e 0063  ld   $63         ;031a POP
              706f 0021  ld   $21         ;031b LDW
              7070 0044  ld   $44         ;031b 'k'
              7071 00e6  ld   $e6         ;031d SUBI
              7072 0052  ld   $52
              7073 0035  ld   $35         ;031f BCC
              7074 0053  ld   $53         ;0320 GE
              7075 0029  ld   $29
              7076 00e3  ld   $e3         ;0322 ADDI
              7077 0032  ld   $32
              7078 002b  ld   $2b         ;0324 STW
              7079 0040  ld   $40         ;0324 'i'
              707a 0011  ld   $11         ;0326 LDWI
              707b 0000  ld   $00
              707c 0007  ld   $07
              707d 0090  ld   $90         ;0329 BRA
              707e 002e  ld   $2e
              707f 002b  ld   $2b         ;032b STW
              7080 0040  ld   $40         ;032b 'i'
              7081 0011  ld   $11         ;032d LDWI
              7082 0000  ld   $00
              7083 0008  ld   $08
              7084 002b  ld   $2b         ;0330 STW
              7085 0044  ld   $44         ;0330 'k'
              7086 0021  ld   $21         ;0332 LDW
              7087 0040  ld   $40         ;0332 'i'
              7088 0035  ld   $35         ;0334 BCC
              7089 0050  ld   $50         ;0335 LT
              708a 006d  ld   $6d
              708b 00e9  ld   $e9         ;0337 LSLW
              708c 00e9  ld   $e9         ;0338 LSLW
              708d 0099  ld   $99         ;0339 ADDW
              708e 0040  ld   $40         ;0339 'i'
              708f 0099  ld   $99         ;033b ADDW
              7090 0044  ld   $44         ;033b 'k'
              7091 002b  ld   $2b         ;033d STW
              7092 0044  ld   $44         ;033d 'k'
              7093 0011  ld   $11         ;033f LDWI
              7094 00e1  ld   $e1
              7095 0004  ld   $04
              7096 002b  ld   $2b         ;0342 STW
              7097 0022  ld   $22         ;0342 '_sysFn'
              7098 0021  ld   $21         ;0344 LDW
              7099 002a  ld   $2a         ;0344 '_sysArgs6'
              709a 002b  ld   $2b         ;0346 STW
              709b 0024  ld   $24         ;0346 '_sysArgs0'
              709c 0021  ld   $21         ;0348 LDW
              709d 0030  ld   $30         ;0348 'Pos'
              709e 002b  ld   $2b         ;034a STW
              709f 0028  ld   $28
              70a0 00ec  ld   $ec         ;034c STLW
              70a1 00fe  ld   $fe
              70a2 00e3  ld   $e3         ;034e ADDI
              70a3 0006  ld   $06
              70a4 002b  ld   $2b         ;0350 STW
              70a5 0030  ld   $30         ;0350 'Pos'
              70a6 0059  ld   $59         ;0352 LDI
              70a7 0005  ld   $05
              70a8 002b  ld   $2b         ;0354 STW
              70a9 0040  ld   $40         ;0354 'i'
              70aa 0021  ld   $21         ;0356 LDW
              70ab 0044  ld   $44         ;0356 'k'
              70ac 007f  ld   $7f         ;0358 LUP
              70ad 0000  ld   $00
              70ae 005e  ld   $5e         ;035a ST
              70af 0026  ld   $26
              70b0 00b4  ld   $b4         ;035c SYS
              70b1 00cc  ld   $cc
              70b2 0093  ld   $93         ;035e INC
              70b3 0044  ld   $44         ;035e 'k'
              70b4 0093  ld   $93         ;0360 INC
              70b5 0028  ld   $28
              70b6 0021  ld   $21         ;0362 LDW
              70b7 0040  ld   $40         ;0362 'i'
              70b8 00e6  ld   $e6         ;0364 SUBI
              70b9 0001  ld   $01
              70ba 0035  ld   $35         ;0366 BCC
              70bb 004d  ld   $4d         ;0367 GT
              70bc 0052  ld   $52
              70bd 005e  ld   $5e         ;0369 ST
              70be 0026  ld   $26
              70bf 00b4  ld   $b4         ;036b SYS
              70c0 00cc  ld   $cc
              70c1 00ee  ld   $ee         ;036d LDLW
              70c2 00fe  ld   $fe
              70c3 00ff  ld   $ff         ;036f RET
              70c4 002b  ld   $2b         ;0370 STW
              70c5 0050  ld   $50         ;0370 'PrintChar'
              70c6 002b  ld   $2b         ;0372 STW
              70c7 0054  ld   $54         ;0372 'PrintCharScreen'
              70c8 00cd  ld   $cd         ;0374 DEF
              70c9 00f4  ld   $f4
              70ca 0075  ld   $75         ;0376 PUSH
              70cb 002b  ld   $2b         ;0377 STW
              70cc 004e  ld   $4e         ;0377 'tmp'
              70cd 0011  ld   $11         ;0379 LDWI
              70ce 0000  ld   $00
              70cf 000b  ld   $0b
              70d0 002b  ld   $2b         ;037c STW
              70d1 0022  ld   $22         ;037c '_sysFn'
              70d2 001a  ld   $1a         ;037e LD
              70d3 0021  ld   $21
              70d4 00e6  ld   $e6         ;0380 SUBI
              70d5 0038  ld   $38
              70d6 0035  ld   $35         ;0382 BCC
              70d7 0050  ld   $50         ;0383 LT
              70d8 0087  ld   $87
              70d9 00e6  ld   $e6         ;0385 SUBI
              70da 00ff  ld   $ff
              70db 00b4  ld   $b4         ;0387 SYS
              70dc 00e7  ld   $e7
              70dd 0011  ld   $11         ;0389 LDWI
              70de 00a0  ld   $a0
              70df 001b  ld   $1b
              70e0 002b  ld   $2b         ;038c STW
              70e1 0036  ld   $36         ;038c 'Active'
              70e2 0021  ld   $21         ;038e LDW
              70e3 004e  ld   $4e         ;038e 'tmp'
              70e4 00f3  ld   $f3         ;0390 DOKE
              70e5 0036  ld   $36         ;0390 'Active'
              70e6 0059  ld   $59         ;0392 LDI
              70e7 00a2  ld   $a2
              70e8 005e  ld   $5e         ;0394 ST
              70e9 0036  ld   $36         ;0394 'Active'
              70ea 0059  ld   $59         ;0396 LDI
              70eb 007f  ld   $7f
              70ec 00cf  ld   $cf         ;0398 CALL
              70ed 0050  ld   $50         ;0398 'PrintChar'
              70ee 002b  ld   $2b         ;039a STW
              70ef 0030  ld   $30         ;039a 'Pos'
              70f0 001a  ld   $1a         ;039c LD
              70f1 000f  ld   $0f
              70f2 002b  ld   $2b         ;039e STW
              70f3 004e  ld   $4e         ;039e 'tmp'
              70f4 001a  ld   $1a         ;03a0 LD
              70f5 000f  ld   $0f
              70f6 00f0  ld   $f0         ;03a2 POKE
              70f7 0036  ld   $36         ;03a2 'Active'
              70f8 00fc  ld   $fc         ;03a4 XORW
              70f9 004e  ld   $4e         ;03a4 'tmp'
              70fa 0035  ld   $35         ;03a6 BCC
              70fb fe00  bra  ac          ;+-----------------------------------+
              70fc fcfd  bra  $70fd       ;|                                   |
              70fd 1418  ld   $18,y       ;| Trampoline for page $7000 lookups |
              70fe e006  jmp  y,$06       ;|                                   |
              70ff c218  st   [$18]       ;+-----------------------------------+
              7100 0072  ld   $72         ;03a7 NE
              7101 00ac  ld   $ac
              7102 0021  ld   $21         ;03a9 LDW
              7103 0036  ld   $36         ;03a9 'Active'
              7104 00ad  ld   $ad         ;03ab PEEK
              7105 0090  ld   $90         ;03ac BRA
              7106 009c  ld   $9c
              7107 0021  ld   $21         ;03ae LDW
              7108 0036  ld   $36         ;03ae 'Active'
              7109 00ad  ld   $ad         ;03b0 PEEK
              710a 008c  ld   $8c         ;03b1 XORI
              710b 000a  ld   $0a
              710c 0035  ld   $35         ;03b3 BCC
              710d 003f  ld   $3f         ;03b4 EQ
              710e 00ef  ld   $ef
              710f 008c  ld   $8c         ;03b6 XORI
              7110 0075  ld   $75
              7111 0035  ld   $35         ;03b8 BCC
              7112 0072  ld   $72         ;03b9 NE
              7113 00d0  ld   $d0
              7114 0059  ld   $59         ;03bb LDI
              7115 0020  ld   $20
              7116 00cf  ld   $cf         ;03bd CALL
              7117 0050  ld   $50         ;03bd 'PrintChar'
              7118 002b  ld   $2b         ;03bf STW
              7119 0030  ld   $30         ;03bf 'Pos'
              711a 001a  ld   $1a         ;03c1 LD
              711b 0030  ld   $30         ;03c1 'Pos'
              711c 00e6  ld   $e6         ;03c3 SUBI
              711d 0006  ld   $06
              711e 0035  ld   $35         ;03c5 BCC
              711f 0050  ld   $50         ;03c6 LT
              7120 00ce  ld   $ce
              7121 005e  ld   $5e         ;03c8 ST
              7122 0030  ld   $30         ;03c8 'Pos'
              7123 0021  ld   $21         ;03ca LDW
              7124 0036  ld   $36         ;03ca 'Active'
              7125 00e6  ld   $e6         ;03cc SUBI
              7126 0001  ld   $01
              7127 002b  ld   $2b         ;03ce STW
              7128 0036  ld   $36         ;03ce 'Active'
              7129 0090  ld   $90         ;03d0 BRA
              712a 0094  ld   $94
              712b 00e6  ld   $e6         ;03d2 SUBI
              712c 0060  ld   $60
              712d 0035  ld   $35         ;03d4 BCC
              712e 0053  ld   $53         ;03d5 GE
              712f 0094  ld   $94
              7130 001a  ld   $1a         ;03d7 LD
              7131 0030  ld   $30         ;03d7 'Pos'
              7132 00e6  ld   $e6         ;03d9 SUBI
              7133 0096  ld   $96
              7134 0035  ld   $35         ;03db BCC
              7135 0050  ld   $50         ;03dc LT
              7136 00e6  ld   $e6
              7137 0059  ld   $59         ;03de LDI
              7138 00a2  ld   $a2
              7139 005e  ld   $5e         ;03e0 ST
              713a 0036  ld   $36         ;03e0 'Active'
              713b 0059  ld   $59         ;03e2 LDI
              713c 005c  ld   $5c
              713d 00cf  ld   $cf         ;03e4 CALL
              713e 0050  ld   $50         ;03e4 'PrintChar'
              713f 0090  ld   $90         ;03e6 BRA
              7140 0094  ld   $94
              7141 0021  ld   $21         ;03e8 LDW
              7142 0036  ld   $36         ;03e8 'Active'
              7143 00ad  ld   $ad         ;03ea PEEK
              7144 00cf  ld   $cf         ;03eb CALL
              7145 0050  ld   $50         ;03eb 'PrintChar'
              7146 0093  ld   $93         ;03ed INC
              7147 0036  ld   $36         ;03ed 'Active'
              7148 0090  ld   $90         ;03ef BRA
              7149 0094  ld   $94
              714a 0011  ld   $11         ;03f1 LDWI
              714b 00e8  ld   $e8
              714c 0006  ld   $06
              714d 00cf  ld   $cf         ;03f4 CALL
              714e 0018  ld   $18         ;03f4 vAC
              714f 0093  ld   $93         ;03f6 INC
              7150 001b  ld   $1b
              7151 00ff  ld   $ff         ;03f8 RET
              7152 0004  ld   $04         ;| RAM segment address (high byte first)
              7153 0000  ld   $00         ;|
              7154 00f8  ld   $f8         ;| Length (1..256)
              7155 002b  ld   $2b         ;0400 STW
              7156 005c  ld   $5c         ;0400 'GetLine'
              7157 00cd  ld   $cd         ;0402 DEF
              7158 00ef  ld   $ef
              7159 00cf  ld   $cf         ;0404 CALL
              715a 0034  ld   $34         ;0404 'Spaces'
              715b 00cf  ld   $cf         ;0406 CALL
              715c 0038  ld   $38         ;0406 'Keyword'
              715d 0067  ld   $67         ;0408 'g'
              715e 006f  ld   $6f         ;0409 'o'
              715f 0074  ld   $74         ;040a 't'
              7160 006f  ld   $6f         ;040b 'o'
              7161 0000  ld   $00         ;040c 0
              7162 0035  ld   $35         ;040d BCC
              7163 003f  ld   $3f         ;040e EQ
              7164 0012  ld   $12
              7165 00cf  ld   $cf         ;0410 CALL
              7166 003a  ld   $3a         ;0410 'Expression'
              7167 00cf  ld   $cf         ;0412 CALL
              7168 005e  ld   $5e         ;0412 'GotoValue'
              7169 00cf  ld   $cf         ;0414 CALL
              716a 0038  ld   $38         ;0414 'Keyword'
              716b 0067  ld   $67         ;0416 'g'
              716c 006f  ld   $6f         ;0417 'o'
              716d 0073  ld   $73         ;0418 's'
              716e 0075  ld   $75         ;0419 'u'
              716f 0062  ld   $62         ;041a 'b'
              7170 0000  ld   $00         ;041b 0
              7171 0035  ld   $35         ;041c BCC
              7172 003f  ld   $3f         ;041d EQ
              7173 0026  ld   $26
              7174 00cf  ld   $cf         ;041f CALL
              7175 003a  ld   $3a         ;041f 'Expression'
              7176 0075  ld   $75         ;0421 PUSH
              7177 0021  ld   $21         ;0422 LDW
              7178 0036  ld   $36         ;0422 'Active'
              7179 00ec  ld   $ec         ;0424 STLW
              717a 0000  ld   $00
              717b 00cf  ld   $cf         ;0426 CALL
              717c 005e  ld   $5e         ;0426 'GotoValue'
              717d 00cf  ld   $cf         ;0428 CALL
              717e 0038  ld   $38         ;0428 'Keyword'
              717f 0072  ld   $72         ;042a 'r'
              7180 0065  ld   $65         ;042b 'e'
              7181 0074  ld   $74         ;042c 't'
              7182 0075  ld   $75         ;042d 'u'
              7183 0072  ld   $72         ;042e 'r'
              7184 006e  ld   $6e         ;042f 'n'
              7185 0000  ld   $00         ;0430 0
              7186 0035  ld   $35         ;0431 BCC
              7187 003f  ld   $3f         ;0432 EQ
              7188 003f  ld   $3f
              7189 001a  ld   $1a         ;0434 LD
              718a 001c  ld   $1c
              718b 0035  ld   $35         ;0436 BCC
              718c 0072  ld   $72         ;0437 NE
              718d 0039  ld   $39
              718e 00cf  ld   $cf         ;0439 CALL
              718f 0060  ld   $60         ;0439 'StackError'
              7190 00f6  ld   $f6         ;043b DEEK
              7191 002b  ld   $2b         ;043c STW
              7192 0036  ld   $36         ;043c 'Active'
              7193 0063  ld   $63         ;043e POP
              7194 00cf  ld   $cf         ;043f CALL
              7195 0062  ld   $62         ;043f 'EndOfLine'
              7196 00cf  ld   $cf         ;0441 CALL
              7197 0038  ld   $38         ;0441 'Keyword'
              7198 0069  ld   $69         ;0443 'i'
              7199 0066  ld   $66         ;0444 'f'
              719a 0000  ld   $00         ;0445 0
              719b 0035  ld   $35         ;0446 BCC
              719c 003f  ld   $3f         ;0447 EQ
              719d 0096  ld   $96
              719e 00cf  ld   $cf         ;0449 CALL
              719f 003a  ld   $3a         ;0449 'Expression'
              71a0 00df  ld   $df         ;044b ALLOC
              71a1 00fc  ld   $fc
              71a2 00ec  ld   $ec         ;044d STLW
              71a3 0002  ld   $02
              71a4 00cf  ld   $cf         ;044f CALL
              71a5 0064  ld   $64         ;044f 'RelOp'
              71a6 0035  ld   $35         ;0451 BCC
              71a7 0072  ld   $72         ;0452 NE
              71a8 0054  ld   $54
              71a9 00cf  ld   $cf         ;0454 CALL
              71aa 004a  ld   $4a         ;0454 'SyntaxError'
              71ab 00ec  ld   $ec         ;0456 STLW
              71ac 0000  ld   $00
              71ad 00cf  ld   $cf         ;0458 CALL
              71ae 003a  ld   $3a         ;0458 'Expression'
              71af 00cf  ld   $cf         ;045a CALL
              71b0 0038  ld   $38         ;045a 'Keyword'
              71b1 0074  ld   $74         ;045c 't'
              71b2 0068  ld   $68         ;045d 'h'
              71b3 0065  ld   $65         ;045e 'e'
              71b4 006e  ld   $6e         ;045f 'n'
              71b5 0000  ld   $00         ;0460 0
              71b6 00ee  ld   $ee         ;0461 LDLW
              71b7 0002  ld   $02
              71b8 00fc  ld   $fc         ;0463 XORW
              71b9 003c  ld   $3c         ;0463 'Value'
              71ba 0035  ld   $35         ;0465 BCC
              71bb 0053  ld   $53         ;0466 GE
              71bc 006a  ld   $6a
              71bd 00ee  ld   $ee         ;0468 LDLW
              71be 0002  ld   $02
              71bf 0090  ld   $90         ;046a BRA
              71c0 006e  ld   $6e
              71c1 00ee  ld   $ee         ;046c LDLW
              71c2 0002  ld   $02
              71c3 00b8  ld   $b8         ;046e SUBW
              71c4 003c  ld   $3c         ;046e 'Value'
              71c5 0035  ld   $35         ;0470 BCC
              71c6 0056  ld   $56         ;0471 LE
              71c7 0073  ld   $73
              71c8 0059  ld   $59         ;0473 LDI
              71c9 0004  ld   $04
              71ca 0035  ld   $35         ;0475 BCC
              71cb 0053  ld   $53         ;0476 GE
              71cc 0078  ld   $78
              71cd 0059  ld   $59         ;0478 LDI
              71ce 0001  ld   $01
              71cf 0035  ld   $35         ;047a BCC
              71d0 0072  ld   $72         ;047b NE
              71d1 007d  ld   $7d
              71d2 0059  ld   $59         ;047d LDI
              71d3 0002  ld   $02
              71d4 002b  ld   $2b         ;047f STW
              71d5 0040  ld   $40         ;047f 'i'
              71d6 00ee  ld   $ee         ;0481 LDLW
              71d7 0000  ld   $00
              71d8 00f8  ld   $f8         ;0483 ANDW
              71d9 0040  ld   $40         ;0483 'i'
              71da 00df  ld   $df         ;0485 ALLOC
              71db 0004  ld   $04
              71dc 0035  ld   $35         ;0487 BCC
              71dd 003f  ld   $3f         ;0488 EQ
              71de 008a  ld   $8a
              71df 00cf  ld   $cf         ;048a CALL
              71e0 0066  ld   $66         ;048a 'Statements'
              71e1 0021  ld   $21         ;048c LDW
              71e2 0036  ld   $36         ;048c 'Active'
              71e3 00ad  ld   $ad         ;048e PEEK
              71e4 0035  ld   $35         ;048f BCC
              71e5 003f  ld   $3f         ;0490 EQ
              71e6 0094  ld   $94
              71e7 0093  ld   $93         ;0492 INC
              71e8 0036  ld   $36         ;0492 'Active'
              71e9 0090  ld   $90         ;0494 BRA
              71ea 008a  ld   $8a
              71eb 00cf  ld   $cf         ;0496 CALL
              71ec 0062  ld   $62         ;0496 'EndOfLine'
              71ed 00cf  ld   $cf         ;0498 CALL
              71ee 0038  ld   $38         ;0498 'Keyword'
              71ef 0070  ld   $70         ;049a 'p'
              71f0 006f  ld   $6f         ;049b 'o'
              71f1 006b  ld   $6b         ;049c 'k'
              71f2 0065  ld   $65         ;049d 'e'
              71f3 0000  ld   $00         ;049e 0
              71f4 0035  ld   $35         ;049f BCC
              71f5 003f  ld   $3f         ;04a0 EQ
              71f6 00b3  ld   $b3
              71f7 00cf  ld   $cf         ;04a2 CALL
              71f8 003a  ld   $3a         ;04a2 'Expression'
              71f9 002b  ld   $2b         ;04a4 STW
              71fa 0068  ld   $68         ;04a4 'Address'
              71fb fe00  bra  ac          ;+-----------------------------------+
              71fc fcfd  bra  $71fd       ;|                                   |
              71fd 1418  ld   $18,y       ;| Trampoline for page $7100 lookups |
              71fe e006  jmp  y,$06       ;|                                   |
              71ff c218  st   [$18]       ;+-----------------------------------+
              7200 00cf  ld   $cf         ;04a6 CALL
              7201 0038  ld   $38         ;04a6 'Keyword'
              7202 002c  ld   $2c         ;04a8 ','
              7203 0000  ld   $00         ;04a9 0
              7204 0035  ld   $35         ;04aa BCC
              7205 0072  ld   $72         ;04ab NE
              7206 00ad  ld   $ad
              7207 00cf  ld   $cf         ;04ad CALL
              7208 004a  ld   $4a         ;04ad 'SyntaxError'
              7209 00cf  ld   $cf         ;04af CALL
              720a 003a  ld   $3a         ;04af 'Expression'
              720b 00f0  ld   $f0         ;04b1 POKE
              720c 0068  ld   $68         ;04b1 'Address'
              720d 00cf  ld   $cf         ;04b3 CALL
              720e 0062  ld   $62         ;04b3 'EndOfLine'
              720f 00cf  ld   $cf         ;04b5 CALL
              7210 0038  ld   $38         ;04b5 'Keyword'
              7211 0027  ld   $27         ;04b7 "'"
              7212 0000  ld   $00         ;04b8 0
              7213 0035  ld   $35         ;04b9 BCC
              7214 0072  ld   $72         ;04ba NE
              7215 00c0  ld   $c0
              7216 00cf  ld   $cf         ;04bc CALL
              7217 0038  ld   $38         ;04bc 'Keyword'
              7218 0072  ld   $72         ;04be 'r'
              7219 0065  ld   $65         ;04bf 'e'
              721a 006d  ld   $6d         ;04c0 'm'
              721b 0000  ld   $00         ;04c1 0
              721c 0035  ld   $35         ;04c2 BCC
              721d 003f  ld   $3f         ;04c3 EQ
              721e 00cf  ld   $cf
              721f 0021  ld   $21         ;04c5 LDW
              7220 0036  ld   $36         ;04c5 'Active'
              7221 00ad  ld   $ad         ;04c7 PEEK
              7222 0035  ld   $35         ;04c8 BCC
              7223 003f  ld   $3f         ;04c9 EQ
              7224 00cd  ld   $cd
              7225 0093  ld   $93         ;04cb INC
              7226 0036  ld   $36         ;04cb 'Active'
              7227 0090  ld   $90         ;04cd BRA
              7228 00c3  ld   $c3
              7229 00cf  ld   $cf         ;04cf CALL
              722a 0062  ld   $62         ;04cf 'EndOfLine'
              722b 00cf  ld   $cf         ;04d1 CALL
              722c 0038  ld   $38         ;04d1 'Keyword'
              722d 006c  ld   $6c         ;04d3 'l'
              722e 0069  ld   $69         ;04d4 'i'
              722f 006e  ld   $6e         ;04d5 'n'
              7230 0065  ld   $65         ;04d6 'e'
              7231 0000  ld   $00         ;04d7 0
              7232 0035  ld   $35         ;04d8 BCC
              7233 003f  ld   $3f         ;04d9 EQ
              7234 00de  ld   $de
              7235 0011  ld   $11         ;04db LDWI
              7236 00a0  ld   $a0
              7237 0019  ld   $19
              7238 00cf  ld   $cf         ;04de CALL
              7239 0018  ld   $18         ;04de vAC
              723a 00cf  ld   $cf         ;04e0 CALL
              723b 0038  ld   $38         ;04e0 'Keyword'
              723c 0065  ld   $65         ;04e2 'e'
              723d 006e  ld   $6e         ;04e3 'n'
              723e 0064  ld   $64         ;04e4 'd'
              723f 0000  ld   $00         ;04e5 0
              7240 0035  ld   $35         ;04e6 BCC
              7241 003f  ld   $3f         ;04e7 EQ
              7242 00ea  ld   $ea
              7243 00cf  ld   $cf         ;04e9 CALL
              7244 0056  ld   $56         ;04e9 'Prompt'
              7245 0000  ld   $00         ;04eb 0
              7246 0011  ld   $11         ;04ec LDWI
              7247 0000  ld   $00
              7248 0005  ld   $05
              7249 00cf  ld   $cf         ;04ef CALL
              724a 0018  ld   $18         ;04ef vAC
              724b 002b  ld   $2b         ;04f1 STW
              724c 0066  ld   $66         ;04f1 'Statements'
              724d 0093  ld   $93         ;04f3 INC
              724e 001b  ld   $1b
              724f 0093  ld   $93         ;04f5 INC
              7250 001b  ld   $1b
              7251 00ff  ld   $ff         ;04f7 RET
              7252 0005  ld   $05         ;| RAM segment address (high byte first)
              7253 0000  ld   $00         ;|
              7254 0000  ld   $00         ;| Length (1..256)
              7255 00cf  ld   $cf         ;0500 CALL
              7256 0038  ld   $38         ;0500 'Keyword'
              7257 006e  ld   $6e         ;0502 'n'
              7258 0065  ld   $65         ;0503 'e'
              7259 0078  ld   $78         ;0504 'x'
              725a 0074  ld   $74         ;0505 't'
              725b 0000  ld   $00         ;0506 0
              725c 0035  ld   $35         ;0507 BCC
              725d 003f  ld   $3f         ;0508 EQ
              725e 0037  ld   $37
              725f 00cf  ld   $cf         ;050a CALL
              7260 0042  ld   $42         ;050a 'Variable'
              7261 002b  ld   $2b         ;050c STW
              7262 0068  ld   $68         ;050c 'Address'
              7263 0075  ld   $75         ;050e PUSH
              7264 0021  ld   $21         ;050f LDW
              7265 0036  ld   $36         ;050f 'Active'
              7266 00ec  ld   $ec         ;0511 STLW
              7267 0000  ld   $00
              7268 0011  ld   $11         ;0513 LDWI
              7269 0000  ld   $00
              726a 00ff  ld   $ff
              726b 0099  ld   $99         ;0516 ADDW
              726c 0068  ld   $68         ;0516 'Address'
              726d 00f6  ld   $f6         ;0518 DEEK
              726e 0035  ld   $35         ;0519 BCC
              726f 0072  ld   $72         ;051a NE
              7270 001c  ld   $1c
              7271 00cf  ld   $cf         ;051c CALL
              7272 0046  ld   $46         ;051c 'ValueError'
              7273 002b  ld   $2b         ;051e STW
              7274 0036  ld   $36         ;051e 'Active'
              7275 00cf  ld   $cf         ;0520 CALL
              7276 003a  ld   $3a         ;0520 'Expression'
              7277 0021  ld   $21         ;0522 LDW
              7278 0068  ld   $68         ;0522 'Address'
              7279 00f6  ld   $f6         ;0524 DEEK
              727a 00e3  ld   $e3         ;0525 ADDI
              727b 0001  ld   $01
              727c 00f3  ld   $f3         ;0527 DOKE
              727d 0068  ld   $68         ;0527 'Address'
              727e 00b8  ld   $b8         ;0529 SUBW
              727f 003c  ld   $3c         ;0529 'Value'
              7280 0035  ld   $35         ;052b BCC
              7281 0056  ld   $56         ;052c LE
              7282 0032  ld   $32
              7283 00ee  ld   $ee         ;052e LDLW
              7284 0000  ld   $00
              7285 002b  ld   $2b         ;0530 STW
              7286 0036  ld   $36         ;0530 'Active'
              7287 00cf  ld   $cf         ;0532 CALL
              7288 0034  ld   $34         ;0532 'Spaces'
              7289 0063  ld   $63         ;0534 POP
              728a 00cf  ld   $cf         ;0535 CALL
              728b 0058  ld   $58         ;0535 'TestBreak'
              728c 00cf  ld   $cf         ;0537 CALL
              728d 0062  ld   $62         ;0537 'EndOfLine'
              728e 00cf  ld   $cf         ;0539 CALL
              728f 0038  ld   $38         ;0539 'Keyword'
              7290 0066  ld   $66         ;053b 'f'
              7291 006f  ld   $6f         ;053c 'o'
              7292 0072  ld   $72         ;053d 'r'
              7293 0000  ld   $00         ;053e 0
              7294 0035  ld   $35         ;053f BCC
              7295 003f  ld   $3f         ;0540 EQ
              7296 006c  ld   $6c
              7297 00cf  ld   $cf         ;0542 CALL
              7298 0042  ld   $42         ;0542 'Variable'
              7299 002b  ld   $2b         ;0544 STW
              729a 0068  ld   $68         ;0544 'Address'
              729b 00cf  ld   $cf         ;0546 CALL
              729c 0034  ld   $34         ;0546 'Spaces'
              729d 00cf  ld   $cf         ;0548 CALL
              729e 0038  ld   $38         ;0548 'Keyword'
              729f 003d  ld   $3d         ;054a '='
              72a0 0000  ld   $00         ;054b 0
              72a1 0035  ld   $35         ;054c BCC
              72a2 0072  ld   $72         ;054d NE
              72a3 004f  ld   $4f
              72a4 00cf  ld   $cf         ;054f CALL
              72a5 004a  ld   $4a         ;054f 'SyntaxError'
              72a6 00cf  ld   $cf         ;0551 CALL
              72a7 003a  ld   $3a         ;0551 'Expression'
              72a8 00f3  ld   $f3         ;0553 DOKE
              72a9 0068  ld   $68         ;0553 'Address'
              72aa 00cf  ld   $cf         ;0555 CALL
              72ab 0038  ld   $38         ;0555 'Keyword'
              72ac 0074  ld   $74         ;0557 't'
              72ad 006f  ld   $6f         ;0558 'o'
              72ae 0000  ld   $00         ;0559 0
              72af 0035  ld   $35         ;055a BCC
              72b0 0072  ld   $72         ;055b NE
              72b1 005d  ld   $5d
              72b2 00cf  ld   $cf         ;055d CALL
              72b3 004a  ld   $4a         ;055d 'SyntaxError'
              72b4 0011  ld   $11         ;055f LDWI
              72b5 0000  ld   $00
              72b6 00ff  ld   $ff
              72b7 0099  ld   $99         ;0562 ADDW
              72b8 0068  ld   $68         ;0562 'Address'
              72b9 002b  ld   $2b         ;0564 STW
              72ba 006a  ld   $6a         ;0564 'j'
              72bb 0021  ld   $21         ;0566 LDW
              72bc 0036  ld   $36         ;0566 'Active'
              72bd 00f3  ld   $f3         ;0568 DOKE
              72be 006a  ld   $6a         ;0568 'j'
              72bf 00cf  ld   $cf         ;056a CALL
              72c0 003a  ld   $3a         ;056a 'Expression'
              72c1 00cf  ld   $cf         ;056c CALL
              72c2 0062  ld   $62         ;056c 'EndOfLine'
              72c3 00cf  ld   $cf         ;056e CALL
              72c4 0038  ld   $38         ;056e 'Keyword'
              72c5 0061  ld   $61         ;0570 'a'
              72c6 0074  ld   $74         ;0571 't'
              72c7 0000  ld   $00         ;0572 0
              72c8 0035  ld   $35         ;0573 BCC
              72c9 003f  ld   $3f         ;0574 EQ
              72ca 009a  ld   $9a
              72cb 00cf  ld   $cf         ;0576 CALL
              72cc 003a  ld   $3a         ;0576 'Expression'
              72cd 0035  ld   $35         ;0578 BCC
              72ce 0053  ld   $53         ;0579 GE
              72cf 007b  ld   $7b
              72d0 00cf  ld   $cf         ;057b CALL
              72d1 0046  ld   $46         ;057b 'ValueError'
              72d2 005e  ld   $5e         ;057d ST
              72d3 0030  ld   $30         ;057d 'Pos'
              72d4 00cf  ld   $cf         ;057f CALL
              72d5 0038  ld   $38         ;057f 'Keyword'
              72d6 002c  ld   $2c         ;0581 ','
              72d7 0000  ld   $00         ;0582 0
              72d8 0035  ld   $35         ;0583 BCC
              72d9 003f  ld   $3f         ;0584 EQ
              72da 0098  ld   $98
              72db 00cf  ld   $cf         ;0586 CALL
              72dc 003a  ld   $3a         ;0586 'Expression'
              72dd 0035  ld   $35         ;0588 BCC
              72de 0053  ld   $53         ;0589 GE
              72df 008b  ld   $8b
              72e0 00cf  ld   $cf         ;058b CALL
              72e1 0046  ld   $46         ;058b 'ValueError'
              72e2 00e6  ld   $e6         ;058d SUBI
              72e3 0078  ld   $78
              72e4 0035  ld   $35         ;058f BCC
              72e5 0050  ld   $50         ;0590 LT
              72e6 0092  ld   $92
              72e7 00cf  ld   $cf         ;0592 CALL
              72e8 0046  ld   $46         ;0592 'ValueError'
              72e9 00e3  ld   $e3         ;0594 ADDI
              72ea 00f8  ld   $f8
              72eb 00e9  ld   $e9         ;0596 LSLW
              72ec 00ad  ld   $ad         ;0597 PEEK
              72ed 005e  ld   $5e         ;0598 ST
              72ee 0031  ld   $31         ;0598 'Pos'+1
              72ef 00cf  ld   $cf         ;059a CALL
              72f0 0062  ld   $62         ;059a 'EndOfLine'
              72f1 00cf  ld   $cf         ;059c CALL
              72f2 0038  ld   $38         ;059c 'Keyword'
              72f3 0070  ld   $70         ;059e 'p'
              72f4 0075  ld   $75         ;059f 'u'
              72f5 0074  ld   $74         ;05a0 't'
              72f6 0000  ld   $00         ;05a1 0
              72f7 0035  ld   $35         ;05a2 BCC
              72f8 003f  ld   $3f         ;05a3 EQ
              72f9 00a9  ld   $a9
              72fa 00cf  ld   $cf         ;05a5 CALL
              72fb fe00  bra  ac          ;+-----------------------------------+
              72fc fcfd  bra  $72fd       ;|                                   |
              72fd 1418  ld   $18,y       ;| Trampoline for page $7200 lookups |
              72fe e006  jmp  y,$06       ;|                                   |
              72ff c218  st   [$18]       ;+-----------------------------------+
              7300 003a  ld   $3a         ;05a5 'Expression'
              7301 00cf  ld   $cf         ;05a7 CALL
              7302 0050  ld   $50         ;05a7 'PrintChar'
              7303 00cf  ld   $cf         ;05a9 CALL
              7304 0062  ld   $62         ;05a9 'EndOfLine'
              7305 00cf  ld   $cf         ;05ab CALL
              7306 0038  ld   $38         ;05ab 'Keyword'
              7307 006d  ld   $6d         ;05ad 'm'
              7308 006f  ld   $6f         ;05ae 'o'
              7309 0064  ld   $64         ;05af 'd'
              730a 0065  ld   $65         ;05b0 'e'
              730b 0000  ld   $00         ;05b1 0
              730c 0035  ld   $35         ;05b2 BCC
              730d 003f  ld   $3f         ;05b3 EQ
              730e 00c7  ld   $c7
              730f 00cf  ld   $cf         ;05b5 CALL
              7310 003a  ld   $3a         ;05b5 'Expression'
              7311 001a  ld   $1a         ;05b7 LD
              7312 0021  ld   $21
              7313 00e6  ld   $e6         ;05b9 SUBI
              7314 0020  ld   $20
              7315 0035  ld   $35         ;05bb BCC
              7316 0050  ld   $50         ;05bc LT
              7317 00c5  ld   $c5
              7318 0011  ld   $11         ;05be LDWI
              7319 0000  ld   $00
              731a 000b  ld   $0b
              731b 002b  ld   $2b         ;05c1 STW
              731c 0022  ld   $22         ;05c1 '_sysFn'
              731d 0021  ld   $21         ;05c3 LDW
              731e 003c  ld   $3c         ;05c3 'Value'
              731f 00b4  ld   $b4         ;05c5 SYS
              7320 00e7  ld   $e7
              7321 00cf  ld   $cf         ;05c7 CALL
              7322 0062  ld   $62         ;05c7 'EndOfLine'
              7323 0011  ld   $11         ;05c9 LDWI
              7324 00a0  ld   $a0
              7325 0014  ld   $14
              7326 00cf  ld   $cf         ;05cc CALL
              7327 0018  ld   $18         ;05cc vAC
              7328 0059  ld   $59         ;05ce LDI
              7329 0000  ld   $00
              732a 002b  ld   $2b         ;05d0 STW
              732b 003c  ld   $3c         ;05d0 'Value'
              732c 00e9  ld   $e9         ;05d2 LSLW
              732d 00e9  ld   $e9         ;05d3 LSLW
              732e 00e9  ld   $e9         ;05d4 LSLW
              732f 00e9  ld   $e9         ;05d5 LSLW
              7330 002b  ld   $2b         ;05d6 STW
              7331 0040  ld   $40         ;05d6 'i'
              7332 0093  ld   $93         ;05d8 INC
              7333 0036  ld   $36         ;05d8 'Active'
              7334 0021  ld   $21         ;05da LDW
              7335 0036  ld   $36         ;05da 'Active'
              7336 00ad  ld   $ad         ;05dc PEEK
              7337 00e6  ld   $e6         ;05dd SUBI
              7338 0030  ld   $30
              7339 0035  ld   $35         ;05df BCC
              733a 0050  ld   $50         ;05e0 LT
              733b 00fd  ld   $fd
              733c 00e6  ld   $e6         ;05e2 SUBI
              733d 000a  ld   $0a
              733e 0035  ld   $35         ;05e4 BCC
              733f 0053  ld   $53         ;05e5 GE
              7340 00eb  ld   $eb
              7341 00e3  ld   $e3         ;05e7 ADDI
              7342 000a  ld   $0a
              7343 0099  ld   $99         ;05e9 ADDW
              7344 0040  ld   $40         ;05e9 'i'
              7345 0090  ld   $90         ;05eb BRA
              7346 00ce  ld   $ce
              7347 0082  ld   $82         ;05ed ANDI
              7348 00df  ld   $df
              7349 00e6  ld   $e6         ;05ef SUBI
              734a 0007  ld   $07
              734b 0035  ld   $35         ;05f1 BCC
              734c 0050  ld   $50         ;05f2 LT
              734d 00fd  ld   $fd
              734e 00e6  ld   $e6         ;05f4 SUBI
              734f 0006  ld   $06
              7350 0035  ld   $35         ;05f6 BCC
              7351 0053  ld   $53         ;05f7 GE
              7352 00fd  ld   $fd
              7353 00e3  ld   $e3         ;05f9 ADDI
              7354 0010  ld   $10
              7355 0099  ld   $99         ;05fb ADDW
              7356 0040  ld   $40         ;05fb 'i'
              7357 0090  ld   $90         ;05fd BRA
              7358 00ce  ld   $ce
              7359 00ff  ld   $ff         ;05ff RET
              735a 0006  ld   $06         ;| RAM segment address (high byte first)
              735b 0000  ld   $00         ;|
              735c 00fd  ld   $fd         ;| Length (1..256)
              735d 00cd  ld   $cd         ;0600 DEF
              735e 00bb  ld   $bb
              735f 0075  ld   $75         ;0602 PUSH
              7360 00cf  ld   $cf         ;0603 CALL
              7361 0032  ld   $32         ;0603 'Number'
              7362 0035  ld   $35         ;0605 BCC
              7363 0056  ld   $56         ;0606 LE
              7364 00b9  ld   $b9
              7365 0021  ld   $21         ;0608 LDW
              7366 0048  ld   $48         ;0608 'End'
              7367 002b  ld   $2b         ;060a STW
              7368 0040  ld   $40         ;060a 'i'
              7369 002b  ld   $2b         ;060c STW
              736a 006a  ld   $6a         ;060c 'j'
              736b 00fc  ld   $fc         ;060e XORW
              736c 006c  ld   $6c         ;060e 'Begin'
              736d 0035  ld   $35         ;0610 BCC
              736e 003f  ld   $3f         ;0611 EQ
              736f 0016  ld   $16
              7370 0021  ld   $21         ;0613 LDW
              7371 0048  ld   $48         ;0613 'End'
              7372 00cf  ld   $cf         ;0615 CALL
              7373 006e  ld   $6e         ;0615 'PrevBlock'
              7374 00f6  ld   $f6         ;0617 DEEK
              7375 00b8  ld   $b8         ;0618 SUBW
              7376 003c  ld   $3c         ;0618 'Value'
              7377 0035  ld   $35         ;061a BCC
              7378 0050  ld   $50         ;061b LT
              7379 005a  ld   $5a
              737a 0021  ld   $21         ;061d LDW
              737b 006c  ld   $6c         ;061d 'Begin'
              737c 002b  ld   $2b         ;061f STW
              737d 0040  ld   $40         ;061f 'i'
              737e 0021  ld   $21         ;0621 LDW
              737f 0040  ld   $40         ;0621 'i'
              7380 00f6  ld   $f6         ;0623 DEEK
              7381 00b8  ld   $b8         ;0624 SUBW
              7382 003c  ld   $3c         ;0624 'Value'
              7383 0035  ld   $35         ;0626 BCC
              7384 0053  ld   $53         ;0627 GE
              7385 002d  ld   $2d
              7386 0021  ld   $21         ;0629 LDW
              7387 0040  ld   $40         ;0629 'i'
              7388 00cf  ld   $cf         ;062b CALL
              7389 0070  ld   $70         ;062b 'NextBlock'
              738a 0090  ld   $90         ;062d BRA
              738b 001d  ld   $1d
              738c 0035  ld   $35         ;062f BCC
              738d 0056  ld   $56         ;0630 LE
              738e 005a  ld   $5a
              738f 0021  ld   $21         ;0632 LDW
              7390 0000  ld   $00
              7391 00fc  ld   $fc         ;0634 XORW
              7392 0048  ld   $48         ;0634 'End'
              7393 0035  ld   $35         ;0636 BCC
              7394 003f  ld   $3f         ;0637 EQ
              7395 0058  ld   $58
              7396 0021  ld   $21         ;0639 LDW
              7397 006a  ld   $6a         ;0639 'j'
              7398 002b  ld   $2b         ;063b STW
              7399 0044  ld   $44         ;063b 'k'
              739a 00cf  ld   $cf         ;063d CALL
              739b 006e  ld   $6e         ;063d 'PrevBlock'
              739c 002b  ld   $2b         ;063f STW
              739d 006a  ld   $6a         ;063f 'j'
              739e 002b  ld   $2b         ;0641 STW
              739f 004e  ld   $4e         ;0641 'tmp'
              73a0 0021  ld   $21         ;0643 LDW
              73a1 004e  ld   $4e         ;0643 'tmp'
              73a2 00ad  ld   $ad         ;0645 PEEK
              73a3 00f0  ld   $f0         ;0646 POKE
              73a4 0044  ld   $44         ;0646 'k'
              73a5 0093  ld   $93         ;0648 INC
              73a6 004e  ld   $4e         ;0648 'tmp'
              73a7 0093  ld   $93         ;064a INC
              73a8 0044  ld   $44         ;064a 'k'
              73a9 0021  ld   $21         ;064c LDW
              73aa 004e  ld   $4e         ;064c 'tmp'
              73ab 0082  ld   $82         ;064e ANDI
              73ac 001f  ld   $1f
              73ad 0035  ld   $35         ;0650 BCC
              73ae 0072  ld   $72         ;0651 NE
              73af 0041  ld   $41
              73b0 0021  ld   $21         ;0653 LDW
              73b1 006a  ld   $6a         ;0653 'j'
              73b2 00fc  ld   $fc         ;0655 XORW
              73b3 0040  ld   $40         ;0655 'i'
              73b4 0035  ld   $35         ;0657 BCC
              73b5 0072  ld   $72         ;0658 NE
              73b6 0037  ld   $37
              73b7 0059  ld   $59         ;065a LDI
              73b8 0001  ld   $01
              73b9 0035  ld   $35         ;065c BCC
              73ba 003f  ld   $3f         ;065d EQ
              73bb 0070  ld   $70
              73bc 0021  ld   $21         ;065f LDW
              73bd 0000  ld   $00
              73be 00e6  ld   $e6         ;0661 SUBI
              73bf 0080  ld   $80
              73c0 00e6  ld   $e6         ;0663 SUBI
              73c1 00c0  ld   $c0
              73c2 00fc  ld   $fc         ;0665 XORW
              73c3 0048  ld   $48         ;0665 'End'
              73c4 0035  ld   $35         ;0667 BCC
              73c5 0072  ld   $72         ;0668 NE
              73c6 006a  ld   $6a
              73c7 00cf  ld   $cf         ;066a CALL
              73c8 004a  ld   $4a         ;066a 'SyntaxError'
              73c9 0021  ld   $21         ;066c LDW
              73ca 0048  ld   $48         ;066c 'End'
              73cb 00cf  ld   $cf         ;066e CALL
              73cc 0070  ld   $70         ;066e 'NextBlock'
              73cd 002b  ld   $2b         ;0670 STW
              73ce 0048  ld   $48         ;0670 'End'
              73cf 0021  ld   $21         ;0672 LDW
              73d0 0036  ld   $36         ;0672 'Active'
              73d1 00ad  ld   $ad         ;0674 PEEK
              73d2 0035  ld   $35         ;0675 BCC
              73d3 003f  ld   $3f         ;0676 EQ
              73d4 008a  ld   $8a
              73d5 0021  ld   $21         ;0678 LDW
              73d6 003c  ld   $3c         ;0678 'Value'
              73d7 00f3  ld   $f3         ;067a DOKE
              73d8 0040  ld   $40         ;067a 'i'
              73d9 0093  ld   $93         ;067c INC
              73da 0040  ld   $40         ;067c 'i'
              73db 0093  ld   $93         ;067e INC
              73dc 0040  ld   $40         ;067e 'i'
              73dd 0021  ld   $21         ;0680 LDW
              73de 0036  ld   $36         ;0680 'Active'
              73df 00ad  ld   $ad         ;0682 PEEK
              73e0 0093  ld   $93         ;0683 INC
              73e1 0036  ld   $36         ;0683 'Active'
              73e2 00f0  ld   $f0         ;0685 POKE
              73e3 0040  ld   $40         ;0685 'i'
              73e4 0035  ld   $35         ;0687 BCC
              73e5 0072  ld   $72         ;0688 NE
              73e6 007c  ld   $7c
              73e7 0090  ld   $90         ;068a BRA
              73e8 00b7  ld   $b7
              73e9 0021  ld   $21         ;068c LDW
              73ea 0040  ld   $40         ;068c 'i'
              73eb 002b  ld   $2b         ;068e STW
              73ec 006a  ld   $6a         ;068e 'j'
              73ed 00fc  ld   $fc         ;0690 XORW
              73ee 0048  ld   $48         ;0690 'End'
              73ef 0035  ld   $35         ;0692 BCC
              73f0 003f  ld   $3f         ;0693 EQ
              73f1 00b1  ld   $b1
              73f2 0021  ld   $21         ;0695 LDW
              73f3 006a  ld   $6a         ;0695 'j'
              73f4 00cf  ld   $cf         ;0697 CALL
              73f5 0070  ld   $70         ;0697 'NextBlock'
              73f6 002b  ld   $2b         ;0699 STW
              73f7 006a  ld   $6a         ;0699 'j'
              73f8 002b  ld   $2b         ;069b STW
              73f9 004e  ld   $4e         ;069b 'tmp'
              73fa 0021  ld   $21         ;069d LDW
              73fb fe00  bra  ac          ;+-----------------------------------+
              73fc fcfd  bra  $73fd       ;|                                   |
              73fd 1418  ld   $18,y       ;| Trampoline for page $7300 lookups |
              73fe e006  jmp  y,$06       ;|                                   |
              73ff c218  st   [$18]       ;+-----------------------------------+
              7400 004e  ld   $4e         ;069d 'tmp'
              7401 00ad  ld   $ad         ;069f PEEK
              7402 00f0  ld   $f0         ;06a0 POKE
              7403 0040  ld   $40         ;06a0 'i'
              7404 0093  ld   $93         ;06a2 INC
              7405 004e  ld   $4e         ;06a2 'tmp'
              7406 0093  ld   $93         ;06a4 INC
              7407 0040  ld   $40         ;06a4 'i'
              7408 0021  ld   $21         ;06a6 LDW
              7409 004e  ld   $4e         ;06a6 'tmp'
              740a 0082  ld   $82         ;06a8 ANDI
              740b 001f  ld   $1f
              740c 0035  ld   $35         ;06aa BCC
              740d 0072  ld   $72         ;06ab NE
              740e 009b  ld   $9b
              740f 0021  ld   $21         ;06ad LDW
              7410 006a  ld   $6a         ;06ad 'j'
              7411 002b  ld   $2b         ;06af STW
              7412 0040  ld   $40         ;06af 'i'
              7413 0090  ld   $90         ;06b1 BRA
              7414 008e  ld   $8e
              7415 0021  ld   $21         ;06b3 LDW
              7416 0048  ld   $48         ;06b3 'End'
              7417 00cf  ld   $cf         ;06b5 CALL
              7418 006e  ld   $6e         ;06b5 'PrevBlock'
              7419 002b  ld   $2b         ;06b7 STW
              741a 0048  ld   $48         ;06b7 'End'
              741b 0021  ld   $21         ;06b9 LDW
              741c 003c  ld   $3c         ;06b9 'Value'
              741d 0063  ld   $63         ;06bb POP
              741e 00ff  ld   $ff         ;06bc RET
              741f 002b  ld   $2b         ;06bd STW
              7420 0072  ld   $72         ;06bd 'Insert'
              7421 0011  ld   $11         ;06bf LDWI
              7422 003f  ld   $3f
              7423 0035  ld   $35
              7424 002b  ld   $2b         ;06c2 STW
              7425 002a  ld   $2a
              7426 0011  ld   $11         ;06c4 LDWI
              7427 00a0  ld   $a0
              7428 0018  ld   $18
              7429 002b  ld   $2b         ;06c7 STW
              742a 005a  ld   $5a         ;06c7 'Newline'
              742b 00cf  ld   $cf         ;06c9 CALL
              742c 0018  ld   $18         ;06c9 vAC
              742d 00cf  ld   $cf         ;06cb CALL
              742e 0052  ld   $52         ;06cb 'PrintS'
              742f 002a  ld   $2a         ;06cd '*'
              7430 002a  ld   $2a         ;06ce '*'
              7431 002a  ld   $2a         ;06cf '*'
              7432 0020  ld   $20         ;06d0 ' '
              7433 0054  ld   $54         ;06d1 'T'
              7434 0069  ld   $69         ;06d2 'i'
              7435 006e  ld   $6e         ;06d3 'n'
              7436 0079  ld   $79         ;06d4 'y'
              7437 0020  ld   $20         ;06d5 ' '
              7438 0042  ld   $42         ;06d6 'B'
              7439 0041  ld   $41         ;06d7 'A'
              743a 0053  ld   $53         ;06d8 'S'
              743b 0049  ld   $49         ;06d9 'I'
              743c 0043  ld   $43         ;06da 'C'
              743d 0020  ld   $20         ;06db ' '
              743e 0044  ld   $44         ;06dc 'D'
              743f 0045  ld   $45         ;06dd 'E'
              7440 0056  ld   $56         ;06de 'V'
              7441 0000  ld   $00         ;06df 0
              7442 00cf  ld   $cf         ;06e0 CALL
              7443 005a  ld   $5a         ;06e0 'Newline'
              7444 0011  ld   $11         ;06e2 LDWI
              7445 00a0  ld   $a0
              7446 0008  ld   $08
              7447 002b  ld   $2b         ;06e5 STW
              7448 001a  ld   $1a         ;06e5 '_vLR'
              7449 00ff  ld   $ff         ;06e7 RET
              744a 0059  ld   $59         ;06e8 LDI
              744b 0000  ld   $00
              744c 00f0  ld   $f0         ;06ea POKE
              744d 0036  ld   $36         ;06ea 'Active'
              744e 0059  ld   $59         ;06ec LDI
              744f 0020  ld   $20
              7450 00cf  ld   $cf         ;06ee CALL
              7451 0050  ld   $50         ;06ee 'PrintChar'
              7452 00cf  ld   $cf         ;06f0 CALL
              7453 005a  ld   $5a         ;06f0 'Newline'
              7454 0059  ld   $59         ;06f2 LDI
              7455 00a2  ld   $a2
              7456 005e  ld   $5e         ;06f4 ST
              7457 0036  ld   $36         ;06f4 'Active'
              7458 00cf  ld   $cf         ;06f6 CALL
              7459 0034  ld   $34         ;06f6 'Spaces'
              745a 0021  ld   $21         ;06f8 LDW
              745b 0036  ld   $36         ;06f8 'Active'
              745c 00ad  ld   $ad         ;06fa PEEK
              745d 0063  ld   $63         ;06fb POP
              745e 00ff  ld   $ff         ;06fc RET
              745f 0008  ld   $08         ;| RAM segment address (high byte first)
              7460 00a0  ld   $a0         ;|
              7461 005f  ld   $5f         ;| Length (1..256)
              7462 00cd  ld   $cd         ;08a0 DEF
              7463 00b6  ld   $b6
              7464 0088  ld   $88         ;08a2 ORI
              7465 001f  ld   $1f
              7466 00e3  ld   $e3         ;08a4 ADDI
              7467 0001  ld   $01
              7468 002b  ld   $2b         ;08a6 STW
              7469 004e  ld   $4e         ;08a6 'tmp'
              746a 0035  ld   $35         ;08a8 BCC
              746b 0056  ld   $56         ;08a9 LE
              746c 00b3  ld   $b3
              746d 0082  ld   $82         ;08ab ANDI
              746e 00e0  ld   $e0
              746f 0035  ld   $35         ;08ad BCC
              7470 0072  ld   $72         ;08ae NE
              7471 00b3  ld   $b3
              7472 0021  ld   $21         ;08b0 LDW
              7473 004e  ld   $4e         ;08b0 'tmp'
              7474 00e3  ld   $e3         ;08b2 ADDI
              7475 00a0  ld   $a0
              7476 00ff  ld   $ff         ;08b4 RET
              7477 0021  ld   $21         ;08b5 LDW
              7478 004e  ld   $4e         ;08b5 'tmp'
              7479 00ff  ld   $ff         ;08b7 RET
              747a 002b  ld   $2b         ;08b8 STW
              747b 0070  ld   $70         ;08b8 'NextBlock'
              747c 00cd  ld   $cd         ;08ba DEF
              747d 00ce  ld   $ce
              747e 00e6  ld   $e6         ;08bc SUBI
              747f 0020  ld   $20
              7480 002b  ld   $2b         ;08be STW
              7481 004e  ld   $4e         ;08be 'tmp'
              7482 0035  ld   $35         ;08c0 BCC
              7483 0050  ld   $50         ;08c1 LT
              7484 00cb  ld   $cb
              7485 0082  ld   $82         ;08c3 ANDI
              7486 0060  ld   $60
              7487 0035  ld   $35         ;08c5 BCC
              7488 0072  ld   $72         ;08c6 NE
              7489 00cb  ld   $cb
              748a 0021  ld   $21         ;08c8 LDW
              748b 004e  ld   $4e         ;08c8 'tmp'
              748c 00e6  ld   $e6         ;08ca SUBI
              748d 00a0  ld   $a0
              748e 00ff  ld   $ff         ;08cc RET
              748f 0021  ld   $21         ;08cd LDW
              7490 004e  ld   $4e         ;08cd 'tmp'
              7491 00ff  ld   $ff         ;08cf RET
              7492 002b  ld   $2b         ;08d0 STW
              7493 006e  ld   $6e         ;08d0 'PrevBlock'
              7494 00cd  ld   $cd         ;08d2 DEF
              7495 00fa  ld   $fa
              7496 0021  ld   $21         ;08d4 LDW
              7497 006c  ld   $6c         ;08d4 'Begin'
              7498 002b  ld   $2b         ;08d6 STW
              7499 0040  ld   $40         ;08d6 'i'
              749a 00fc  ld   $fc         ;08d8 XORW
              749b 0048  ld   $48         ;08d8 'End'
              749c 0035  ld   $35         ;08da BCC
              749d 003f  ld   $3f         ;08db EQ
              749e 00f3  ld   $f3
              749f 0021  ld   $21         ;08dd LDW
              74a0 0040  ld   $40         ;08dd 'i'
              74a1 00f6  ld   $f6         ;08df DEEK
              74a2 00fc  ld   $fc         ;08e0 XORW
              74a3 003c  ld   $3c         ;08e0 'Value'
              74a4 0035  ld   $35         ;08e2 BCC
              74a5 0072  ld   $72         ;08e3 NE
              74a6 00ed  ld   $ed
              74a7 0021  ld   $21         ;08e5 LDW
              74a8 0040  ld   $40         ;08e5 'i'
              74a9 00e3  ld   $e3         ;08e7 ADDI
              74aa 0002  ld   $02
              74ab 002b  ld   $2b         ;08e9 STW
              74ac 0036  ld   $36         ;08e9 'Active'
              74ad 00cf  ld   $cf         ;08eb CALL
              74ae 0058  ld   $58         ;08eb 'TestBreak'
              74af 00cf  ld   $cf         ;08ed CALL
              74b0 0066  ld   $66         ;08ed 'Statements'
              74b1 0021  ld   $21         ;08ef LDW
              74b2 0040  ld   $40         ;08ef 'i'
              74b3 00cf  ld   $cf         ;08f1 CALL
              74b4 0070  ld   $70         ;08f1 'NextBlock'
              74b5 0090  ld   $90         ;08f3 BRA
              74b6 00d4  ld   $d4
              74b7 00cf  ld   $cf         ;08f5 CALL
              74b8 0056  ld   $56         ;08f5 'Prompt'
              74b9 004c  ld   $4c         ;08f7 'L'
              74ba 0069  ld   $69         ;08f8 'i'
              74bb 006e  ld   $6e         ;08f9 'n'
              74bc 0065  ld   $65         ;08fa 'e'
              74bd 0000  ld   $00         ;08fb 0
              74be 0093  ld   $93         ;08fc INC
              74bf 001b  ld   $1b
              74c0 00ff  ld   $ff         ;08fe RET
              74c1 0009  ld   $09         ;| RAM segment address (high byte first)
              74c2 00a0  ld   $a0         ;|
              74c3 005e  ld   $5e         ;| Length (1..256)
              74c4 002b  ld   $2b         ;09a0 STW
              74c5 005e  ld   $5e         ;09a0 'GotoValue'
              74c6 00cd  ld   $cd         ;09a2 DEF
              74c7 00de  ld   $de
              74c8 0075  ld   $75         ;09a4 PUSH
              74c9 0035  ld   $35         ;09a5 BCC
              74ca 0053  ld   $53         ;09a6 GE
              74cb 00b0  ld   $b0
              74cc 0059  ld   $59         ;09a8 LDI
              74cd 0000  ld   $00
              74ce 00b8  ld   $b8         ;09aa SUBW
              74cf 003c  ld   $3c         ;09aa 'Value'
              74d0 002b  ld   $2b         ;09ac STW
              74d1 003c  ld   $3c         ;09ac 'Value'
              74d2 0059  ld   $59         ;09ae LDI
              74d3 002d  ld   $2d
              74d4 00cf  ld   $cf         ;09b0 CALL
              74d5 0050  ld   $50         ;09b0 'PrintChar'
              74d6 0059  ld   $59         ;09b2 LDI
              74d7 0000  ld   $00
              74d8 002b  ld   $2b         ;09b4 STW
              74d9 0044  ld   $44         ;09b4 'k'
              74da 0021  ld   $21         ;09b6 LDW
              74db 003c  ld   $3c         ;09b6 'Value'
              74dc 0035  ld   $35         ;09b8 BCC
              74dd 0053  ld   $53         ;09b9 GE
              74de 00c4  ld   $c4
              74df 0011  ld   $11         ;09bb LDWI
              74e0 00d0  ld   $d0
              74e1 008a  ld   $8a
              74e2 0099  ld   $99         ;09be ADDW
              74e3 003c  ld   $3c         ;09be 'Value'
              74e4 002b  ld   $2b         ;09c0 STW
              74e5 003c  ld   $3c         ;09c0 'Value'
              74e6 0059  ld   $59         ;09c2 LDI
              74e7 0003  ld   $03
              74e8 002b  ld   $2b         ;09c4 STW
              74e9 0044  ld   $44         ;09c4 'k'
              74ea 0011  ld   $11         ;09c6 LDWI
              74eb 0010  ld   $10
              74ec 0027  ld   $27
              74ed 00cf  ld   $cf         ;09c9 CALL
              74ee 0074  ld   $74         ;09c9 'PrintDigit'
              74ef 0011  ld   $11         ;09cb LDWI
              74f0 00e8  ld   $e8
              74f1 0003  ld   $03
              74f2 00cf  ld   $cf         ;09ce CALL
              74f3 0074  ld   $74         ;09ce 'PrintDigit'
              74f4 0059  ld   $59         ;09d0 LDI
              74f5 0064  ld   $64
              74f6 00cf  ld   $cf         ;09d2 CALL
              74f7 0074  ld   $74         ;09d2 'PrintDigit'
              74f8 0059  ld   $59         ;09d4 LDI
              74f9 000a  ld   $0a
              74fa 00cf  ld   $cf         ;09d6 CALL
              74fb fe00  bra  ac          ;+-----------------------------------+
              74fc fcfd  bra  $74fd       ;|                                   |
              74fd 1418  ld   $18,y       ;| Trampoline for page $7400 lookups |
              74fe e006  jmp  y,$06       ;|                                   |
              74ff c218  st   [$18]       ;+-----------------------------------+
              7500 0074  ld   $74         ;09d6 'PrintDigit'
              7501 0059  ld   $59         ;09d8 LDI
              7502 0030  ld   $30
              7503 0099  ld   $99         ;09da ADDW
              7504 003c  ld   $3c         ;09da 'Value'
              7505 00cf  ld   $cf         ;09dc CALL
              7506 0050  ld   $50         ;09dc 'PrintChar'
              7507 0063  ld   $63         ;09de POP
              7508 00ff  ld   $ff         ;09df RET
              7509 002b  ld   $2b         ;09e0 STW
              750a 0076  ld   $76         ;09e0 'PrintValue'
              750b 00cd  ld   $cd         ;09e2 DEF
              750c 00ea  ld   $ea
              750d 00cf  ld   $cf         ;09e4 CALL
              750e 0056  ld   $56         ;09e4 'Prompt'
              750f 0053  ld   $53         ;09e6 'S'
              7510 0074  ld   $74         ;09e7 't'
              7511 0061  ld   $61         ;09e8 'a'
              7512 0063  ld   $63         ;09e9 'c'
              7513 006b  ld   $6b         ;09ea 'k'
              7514 0000  ld   $00         ;09eb 0
              7515 002b  ld   $2b         ;09ec STW
              7516 0060  ld   $60         ;09ec 'StackError'
              7517 00cd  ld   $cd         ;09ee DEF
              7518 00f7  ld   $f7
              7519 00cf  ld   $cf         ;09f0 CALL
              751a 0056  ld   $56         ;09f0 'Prompt'
              751b 0053  ld   $53         ;09f2 'S'
              751c 0079  ld   $79         ;09f3 'y'
              751d 006e  ld   $6e         ;09f4 'n'
              751e 0074  ld   $74         ;09f5 't'
              751f 0061  ld   $61         ;09f6 'a'
              7520 0078  ld   $78         ;09f7 'x'
              7521 0000  ld   $00         ;09f8 0
              7522 002b  ld   $2b         ;09f9 STW
              7523 004a  ld   $4a         ;09f9 'SyntaxError'
              7524 0093  ld   $93         ;09fb INC
              7525 001b  ld   $1b
              7526 00ff  ld   $ff         ;09fd RET
              7527 000a  ld   $0a         ;| RAM segment address (high byte first)
              7528 00a0  ld   $a0         ;|
              7529 005f  ld   $5f         ;| Length (1..256)
              752a 00cd  ld   $cd         ;0aa0 DEF
              752b 00d2  ld   $d2
              752c 0021  ld   $21         ;0aa2 LDW
              752d 001a  ld   $1a
              752e 002b  ld   $2b         ;0aa4 STW
              752f 004e  ld   $4e         ;0aa4 'tmp'
              7530 0021  ld   $21         ;0aa6 LDW
              7531 0036  ld   $36         ;0aa6 'Active'
              7532 002b  ld   $2b         ;0aa8 STW
              7533 006a  ld   $6a         ;0aa8 'j'
              7534 0021  ld   $21         ;0aaa LDW
              7535 004e  ld   $4e         ;0aaa 'tmp'
              7536 00ad  ld   $ad         ;0aac PEEK
              7537 0093  ld   $93         ;0aad INC
              7538 004e  ld   $4e         ;0aad 'tmp'
              7539 0035  ld   $35         ;0aaf BCC
              753a 003f  ld   $3f         ;0ab0 EQ
              753b 00ce  ld   $ce
              753c 002b  ld   $2b         ;0ab2 STW
              753d 0040  ld   $40         ;0ab2 'i'
              753e 0021  ld   $21         ;0ab4 LDW
              753f 0036  ld   $36         ;0ab4 'Active'
              7540 00ad  ld   $ad         ;0ab6 PEEK
              7541 0088  ld   $88         ;0ab7 ORI
              7542 0020  ld   $20
              7543 00fc  ld   $fc         ;0ab9 XORW
              7544 0040  ld   $40         ;0ab9 'i'
              7545 0035  ld   $35         ;0abb BCC
              7546 0072  ld   $72         ;0abc NE
              7547 00c0  ld   $c0
              7548 0093  ld   $93         ;0abe INC
              7549 0036  ld   $36         ;0abe 'Active'
              754a 0090  ld   $90         ;0ac0 BRA
              754b 00a8  ld   $a8
              754c 0021  ld   $21         ;0ac2 LDW
              754d 006a  ld   $6a         ;0ac2 'j'
              754e 002b  ld   $2b         ;0ac4 STW
              754f 0036  ld   $36         ;0ac4 'Active'
              7550 0021  ld   $21         ;0ac6 LDW
              7551 004e  ld   $4e         ;0ac6 'tmp'
              7552 00ad  ld   $ad         ;0ac8 PEEK
              7553 0093  ld   $93         ;0ac9 INC
              7554 004e  ld   $4e         ;0ac9 'tmp'
              7555 0035  ld   $35         ;0acb BCC
              7556 0072  ld   $72         ;0acc NE
              7557 00c4  ld   $c4
              7558 00cf  ld   $cf         ;0ace CALL
              7559 004e  ld   $4e         ;0ace 'tmp'
              755a 00cf  ld   $cf         ;0ad0 CALL
              755b 0034  ld   $34         ;0ad0 'Spaces'
              755c 00cf  ld   $cf         ;0ad2 CALL
              755d 004e  ld   $4e         ;0ad2 'tmp'
              755e 002b  ld   $2b         ;0ad4 STW
              755f 0038  ld   $38         ;0ad4 'Keyword'
              7560 00cd  ld   $cd         ;0ad6 DEF
              7561 00fa  ld   $fa
              7562 0011  ld   $11         ;0ad8 LDWI
              7563 0000  ld   $00
              7564 0080  ld   $80
              7565 002b  ld   $2b         ;0adb STW
              7566 003c  ld   $3c         ;0adb 'Value'
              7567 00e9  ld   $e9         ;0add LSLW
              7568 00e9  ld   $e9         ;0ade LSLW
              7569 0099  ld   $99         ;0adf ADDW
              756a 003c  ld   $3c         ;0adf 'Value'
              756b 00e9  ld   $e9         ;0ae1 LSLW
              756c 002b  ld   $2b         ;0ae2 STW
              756d 0040  ld   $40         ;0ae2 'i'
              756e 0021  ld   $21         ;0ae4 LDW
              756f 0036  ld   $36         ;0ae4 'Active'
              7570 00ad  ld   $ad         ;0ae6 PEEK
              7571 00e6  ld   $e6         ;0ae7 SUBI
              7572 0030  ld   $30
              7573 0035  ld   $35         ;0ae9 BCC
              7574 0050  ld   $50         ;0aea LT
              7575 00f7  ld   $f7
              7576 00e6  ld   $e6         ;0aec SUBI
              7577 000a  ld   $0a
              7578 0035  ld   $35         ;0aee BCC
              7579 0053  ld   $53         ;0aef GE
              757a 00f7  ld   $f7
              757b 00e3  ld   $e3         ;0af1 ADDI
              757c 000a  ld   $0a
              757d 0099  ld   $99         ;0af3 ADDW
              757e 0040  ld   $40         ;0af3 'i'
              757f 0093  ld   $93         ;0af5 INC
              7580 0036  ld   $36         ;0af5 'Active'
              7581 0090  ld   $90         ;0af7 BRA
              7582 00d9  ld   $d9
              7583 0021  ld   $21         ;0af9 LDW
              7584 003c  ld   $3c         ;0af9 'Value'
              7585 00ff  ld   $ff         ;0afb RET
              7586 0093  ld   $93         ;0afc INC
              7587 001b  ld   $1b
              7588 00ff  ld   $ff         ;0afe RET
              7589 000b  ld   $0b         ;| RAM segment address (high byte first)
              758a 00a0  ld   $a0         ;|
              758b 0060  ld   $60         ;| Length (1..256)
              758c 002b  ld   $2b         ;0ba0 STW
              758d 0032  ld   $32         ;0ba0 'Number'
              758e 00cd  ld   $cd         ;0ba2 DEF
              758f 00d1  ld   $d1
              7590 0021  ld   $21         ;0ba4 LDW
              7591 0036  ld   $36         ;0ba4 'Active'
              7592 00ad  ld   $ad         ;0ba6 PEEK
              7593 0035  ld   $35         ;0ba7 BCC
              7594 003f  ld   $3f         ;0ba8 EQ
              7595 00b3  ld   $b3
              7596 008c  ld   $8c         ;0baa XORI
              7597 003a  ld   $3a
              7598 0035  ld   $35         ;0bac BCC
              7599 0072  ld   $72         ;0bad NE
              759a 00b1  ld   $b1
              759b 0093  ld   $93         ;0baf INC
              759c 0036  ld   $36         ;0baf 'Active'
              759d 00cf  ld   $cf         ;0bb1 CALL
              759e 0066  ld   $66         ;0bb1 'Statements'
              759f 00cf  ld   $cf         ;0bb3 CALL
              75a0 004a  ld   $4a         ;0bb3 'SyntaxError'
              75a1 0021  ld   $21         ;0bb5 LDW
              75a2 0036  ld   $36         ;0bb5 'Active'
              75a3 00cf  ld   $cf         ;0bb7 CALL
              75a4 0070  ld   $70         ;0bb7 'NextBlock'
              75a5 002b  ld   $2b         ;0bb9 STW
              75a6 0036  ld   $36         ;0bb9 'Active'
              75a7 00fc  ld   $fc         ;0bbb XORW
              75a8 0048  ld   $48         ;0bbb 'End'
              75a9 0035  ld   $35         ;0bbd BCC
              75aa 003f  ld   $3f         ;0bbe EQ
              75ab 00ce  ld   $ce
              75ac 0011  ld   $11         ;0bc0 LDWI
              75ad 00c0  ld   $c0
              75ae 001b  ld   $1b
              75af 00fc  ld   $fc         ;0bc3 XORW
              75b0 0036  ld   $36         ;0bc3 'Active'
              75b1 0035  ld   $35         ;0bc5 BCC
              75b2 003f  ld   $3f         ;0bc6 EQ
              75b3 00ce  ld   $ce
              75b4 0021  ld   $21         ;0bc8 LDW
              75b5 0036  ld   $36         ;0bc8 'Active'
              75b6 00e3  ld   $e3         ;0bca ADDI
              75b7 0002  ld   $02
              75b8 002b  ld   $2b         ;0bcc STW
              75b9 0036  ld   $36         ;0bcc 'Active'
              75ba 00cf  ld   $cf         ;0bce CALL
              75bb 0066  ld   $66         ;0bce 'Statements'
              75bc 00cf  ld   $cf         ;0bd0 CALL
              75bd 0056  ld   $56         ;0bd0 'Prompt'
              75be 0000  ld   $00         ;0bd2 0
              75bf 002b  ld   $2b         ;0bd3 STW
              75c0 0062  ld   $62         ;0bd3 'EndOfLine'
              75c1 00cd  ld   $cd         ;0bd5 DEF
              75c2 00fb  ld   $fb
              75c3 0021  ld   $21         ;0bd7 LDW
              75c4 0000  ld   $00
              75c5 002b  ld   $2b         ;0bd9 STW
              75c6 0040  ld   $40         ;0bd9 'i'
              75c7 0059  ld   $59         ;0bdb LDI
              75c8 0002  ld   $02
              75c9 002b  ld   $2b         ;0bdd STW
              75ca 006a  ld   $6a         ;0bdd 'j'
              75cb 0021  ld   $21         ;0bdf LDW
              75cc 0040  ld   $40         ;0bdf 'i'
              75cd 00e6  ld   $e6         ;0be1 SUBI
              75ce 0036  ld   $36
              75cf 002b  ld   $2b         ;0be3 STW
              75d0 0040  ld   $40         ;0be3 'i'
              75d1 0059  ld   $59         ;0be5 LDI
              75d2 0000  ld   $00
              75d3 00f0  ld   $f0         ;0be7 POKE
              75d4 0040  ld   $40         ;0be7 'i'
              75d5 0093  ld   $93         ;0be9 INC
              75d6 0040  ld   $40         ;0be9 'i'
              75d7 001a  ld   $1a         ;0beb LD
              75d8 0040  ld   $40         ;0beb 'i'
              75d9 0035  ld   $35         ;0bed BCC
              75da 0072  ld   $72         ;0bee NE
              75db 00e3  ld   $e3
              75dc 0021  ld   $21         ;0bf0 LDW
              75dd 006a  ld   $6a         ;0bf0 'j'
              75de 00e6  ld   $e6         ;0bf2 SUBI
              75df 0001  ld   $01
              75e0 0035  ld   $35         ;0bf4 BCC
              75e1 0072  ld   $72         ;0bf5 NE
              75e2 00db  ld   $db
              75e3 0011  ld   $11         ;0bf7 LDWI
              75e4 00c0  ld   $c0
              75e5 001b  ld   $1b
              75e6 002b  ld   $2b         ;0bfa STW
              75e7 006c  ld   $6c         ;0bfa 'Begin'
              75e8 00ff  ld   $ff         ;0bfc RET
              75e9 0093  ld   $93         ;0bfd INC
              75ea 001b  ld   $1b
              75eb 00ff  ld   $ff         ;0bff RET
              75ec 000c  ld   $0c         ;| RAM segment address (high byte first)
              75ed 00a0  ld   $a0         ;|
              75ee 0060  ld   $60         ;| Length (1..256)
              75ef 002b  ld   $2b         ;0ca0 STW
              75f0 0078  ld   $78         ;0ca0 'Clear'
              75f1 00cd  ld   $cd         ;0ca2 DEF
              75f2 00ed  ld   $ed
              75f3 0075  ld   $75         ;0ca4 PUSH
              75f4 001a  ld   $1a         ;0ca5 LD
              75f5 001c  ld   $1c
              75f6 00e6  ld   $e6         ;0ca7 SUBI
              75f7 008d  ld   $8d
              75f8 0035  ld   $35         ;0ca9 BCC
              75f9 0053  ld   $53         ;0caa GE
              75fa 00ac  ld   $ac
              75fb fe00  bra  ac          ;+-----------------------------------+
              75fc fcfd  bra  $75fd       ;|                                   |
              75fd 1418  ld   $18,y       ;| Trampoline for page $7500 lookups |
              75fe e006  jmp  y,$06       ;|                                   |
              75ff c218  st   [$18]       ;+-----------------------------------+
              7600 00cf  ld   $cf         ;0cac CALL
              7601 0060  ld   $60         ;0cac 'StackError'
              7602 00cf  ld   $cf         ;0cae CALL
              7603 0038  ld   $38         ;0cae 'Keyword'
              7604 002d  ld   $2d         ;0cb0 '-'
              7605 0000  ld   $00         ;0cb1 0
              7606 0035  ld   $35         ;0cb2 BCC
              7607 003f  ld   $3f         ;0cb3 EQ
              7608 00bb  ld   $bb
              7609 00cf  ld   $cf         ;0cb5 CALL
              760a 007a  ld   $7a         ;0cb5 'Term'
              760b 0059  ld   $59         ;0cb7 LDI
              760c 0000  ld   $00
              760d 00b8  ld   $b8         ;0cb9 SUBW
              760e 003c  ld   $3c         ;0cb9 'Value'
              760f 0090  ld   $90         ;0cbb BRA
              7610 00c1  ld   $c1
              7611 00cf  ld   $cf         ;0cbd CALL
              7612 0038  ld   $38         ;0cbd 'Keyword'
              7613 002b  ld   $2b         ;0cbf '+'
              7614 0000  ld   $00         ;0cc0 0
              7615 00cf  ld   $cf         ;0cc1 CALL
              7616 007a  ld   $7a         ;0cc1 'Term'
              7617 0075  ld   $75         ;0cc3 PUSH
              7618 00ec  ld   $ec         ;0cc4 STLW
              7619 0000  ld   $00
              761a 00cf  ld   $cf         ;0cc6 CALL
              761b 0038  ld   $38         ;0cc6 'Keyword'
              761c 002b  ld   $2b         ;0cc8 '+'
              761d 0000  ld   $00         ;0cc9 0
              761e 0035  ld   $35         ;0cca BCC
              761f 003f  ld   $3f         ;0ccb EQ
              7620 00d5  ld   $d5
              7621 00cf  ld   $cf         ;0ccd CALL
              7622 007a  ld   $7a         ;0ccd 'Term'
              7623 00ee  ld   $ee         ;0ccf LDLW
              7624 0000  ld   $00
              7625 0099  ld   $99         ;0cd1 ADDW
              7626 003c  ld   $3c         ;0cd1 'Value'
              7627 00ec  ld   $ec         ;0cd3 STLW
              7628 0000  ld   $00
              7629 0090  ld   $90         ;0cd5 BRA
              762a 00c4  ld   $c4
              762b 00cf  ld   $cf         ;0cd7 CALL
              762c 0038  ld   $38         ;0cd7 'Keyword'
              762d 002d  ld   $2d         ;0cd9 '-'
              762e 0000  ld   $00         ;0cda 0
              762f 0035  ld   $35         ;0cdb BCC
              7630 003f  ld   $3f         ;0cdc EQ
              7631 00e6  ld   $e6
              7632 00cf  ld   $cf         ;0cde CALL
              7633 007a  ld   $7a         ;0cde 'Term'
              7634 00ee  ld   $ee         ;0ce0 LDLW
              7635 0000  ld   $00
              7636 00b8  ld   $b8         ;0ce2 SUBW
              7637 003c  ld   $3c         ;0ce2 'Value'
              7638 00ec  ld   $ec         ;0ce4 STLW
              7639 0000  ld   $00
              763a 0090  ld   $90         ;0ce6 BRA
              763b 00c4  ld   $c4
              763c 00ee  ld   $ee         ;0ce8 LDLW
              763d 0000  ld   $00
              763e 002b  ld   $2b         ;0cea STW
              763f 003c  ld   $3c         ;0cea 'Value'
              7640 0063  ld   $63         ;0cec POP
              7641 0063  ld   $63         ;0ced POP
              7642 00ff  ld   $ff         ;0cee RET
              7643 002b  ld   $2b         ;0cef STW
              7644 003a  ld   $3a         ;0cef 'Expression'
              7645 00cd  ld   $cd         ;0cf1 DEF
              7646 00f9  ld   $f9
              7647 00cf  ld   $cf         ;0cf3 CALL
              7648 0056  ld   $56         ;0cf3 'Prompt'
              7649 0056  ld   $56         ;0cf5 'V'
              764a 0061  ld   $61         ;0cf6 'a'
              764b 006c  ld   $6c         ;0cf7 'l'
              764c 0075  ld   $75         ;0cf8 'u'
              764d 0065  ld   $65         ;0cf9 'e'
              764e 0000  ld   $00         ;0cfa 0
              764f 002b  ld   $2b         ;0cfb STW
              7650 0046  ld   $46         ;0cfb 'ValueError'
              7651 0093  ld   $93         ;0cfd INC
              7652 001b  ld   $1b
              7653 00ff  ld   $ff         ;0cff RET
              7654 000d  ld   $0d         ;| RAM segment address (high byte first)
              7655 00a0  ld   $a0         ;|
              7656 0060  ld   $60         ;| Length (1..256)
              7657 00cd  ld   $cd         ;0da0 DEF
              7658 00e4  ld   $e4
              7659 0075  ld   $75         ;0da2 PUSH
              765a 00cf  ld   $cf         ;0da3 CALL
              765b 004c  ld   $4c         ;0da3 'Factor'
              765c 0075  ld   $75         ;0da5 PUSH
              765d 0021  ld   $21         ;0da6 LDW
              765e 003c  ld   $3c         ;0da6 'Value'
              765f 00ec  ld   $ec         ;0da8 STLW
              7660 0000  ld   $00
              7661 00cf  ld   $cf         ;0daa CALL
              7662 0038  ld   $38         ;0daa 'Keyword'
              7663 002a  ld   $2a         ;0dac '*'
              7664 0000  ld   $00         ;0dad 0
              7665 0035  ld   $35         ;0dae BCC
              7666 003f  ld   $3f         ;0daf EQ
              7667 00b9  ld   $b9
              7668 00cf  ld   $cf         ;0db1 CALL
              7669 004c  ld   $4c         ;0db1 'Factor'
              766a 00ee  ld   $ee         ;0db3 LDLW
              766b 0000  ld   $00
              766c 00cf  ld   $cf         ;0db5 CALL
              766d 007c  ld   $7c         ;0db5 'Multiply'
              766e 00ec  ld   $ec         ;0db7 STLW
              766f 0000  ld   $00
              7670 0090  ld   $90         ;0db9 BRA
              7671 00a8  ld   $a8
              7672 00cf  ld   $cf         ;0dbb CALL
              7673 0038  ld   $38         ;0dbb 'Keyword'
              7674 002f  ld   $2f         ;0dbd '/'
              7675 0000  ld   $00         ;0dbe 0
              7676 0035  ld   $35         ;0dbf BCC
              7677 003f  ld   $3f         ;0dc0 EQ
              7678 00ca  ld   $ca
              7679 00cf  ld   $cf         ;0dc2 CALL
              767a 004c  ld   $4c         ;0dc2 'Factor'
              767b 00ee  ld   $ee         ;0dc4 LDLW
              767c 0000  ld   $00
              767d 00cf  ld   $cf         ;0dc6 CALL
              767e 003e  ld   $3e         ;0dc6 'Divide'
              767f 00ec  ld   $ec         ;0dc8 STLW
              7680 0000  ld   $00
              7681 0090  ld   $90         ;0dca BRA
              7682 00a8  ld   $a8
              7683 00cf  ld   $cf         ;0dcc CALL
              7684 0038  ld   $38         ;0dcc 'Keyword'
              7685 0025  ld   $25         ;0dce '%'
              7686 0000  ld   $00         ;0dcf 0
              7687 0035  ld   $35         ;0dd0 BCC
              7688 003f  ld   $3f         ;0dd1 EQ
              7689 00dd  ld   $dd
              768a 00cf  ld   $cf         ;0dd3 CALL
              768b 004c  ld   $4c         ;0dd3 'Factor'
              768c 00ee  ld   $ee         ;0dd5 LDLW
              768d 0000  ld   $00
              768e 00cf  ld   $cf         ;0dd7 CALL
              768f 003e  ld   $3e         ;0dd7 'Divide'
              7690 0021  ld   $21         ;0dd9 LDW
              7691 0040  ld   $40         ;0dd9 'i'
              7692 00ec  ld   $ec         ;0ddb STLW
              7693 0000  ld   $00
              7694 0090  ld   $90         ;0ddd BRA
              7695 00a8  ld   $a8
              7696 00ee  ld   $ee         ;0ddf LDLW
              7697 0000  ld   $00
              7698 002b  ld   $2b         ;0de1 STW
              7699 003c  ld   $3c         ;0de1 'Value'
              769a 0063  ld   $63         ;0de3 POP
              769b 0063  ld   $63         ;0de4 POP
              769c 00ff  ld   $ff         ;0de5 RET
              769d 002b  ld   $2b         ;0de6 STW
              769e 007a  ld   $7a         ;0de6 'Term'
              769f 0093  ld   $93         ;0de8 INC
              76a0 001b  ld   $1b
              76a1 00ff  ld   $ff         ;0dea RET
              76a2 00cf  ld   $cf         ;0deb CALL
              76a3 0038  ld   $38         ;0deb 'Keyword'
              76a4 0072  ld   $72         ;0ded 'r'
              76a5 0075  ld   $75         ;0dee 'u'
              76a6 006e  ld   $6e         ;0def 'n'
              76a7 0000  ld   $00         ;0df0 0
              76a8 0035  ld   $35         ;0df1 BCC
              76a9 003f  ld   $3f         ;0df2 EQ
              76aa 00f9  ld   $f9
              76ab 00cf  ld   $cf         ;0df4 CALL
              76ac 0078  ld   $78         ;0df4 'Clear'
              76ad 00f6  ld   $f6         ;0df6 DEEK
              76ae 002b  ld   $2b         ;0df7 STW
              76af 003c  ld   $3c         ;0df7 'Value'
              76b0 00cf  ld   $cf         ;0df9 CALL
              76b1 005e  ld   $5e         ;0df9 'GotoValue'
              76b2 0011  ld   $11         ;0dfb LDWI
              76b3 00a0  ld   $a0
              76b4 0016  ld   $16
              76b5 00cf  ld   $cf         ;0dfe CALL
              76b6 0018  ld   $18         ;0dfe vAC
              76b7 000e  ld   $0e         ;| RAM segment address (high byte first)
              76b8 00a0  ld   $a0         ;|
              76b9 0060  ld   $60         ;| Length (1..256)
              76ba 00cd  ld   $cd         ;0ea0 DEF
              76bb 00fb  ld   $fb
              76bc 002b  ld   $2b         ;0ea2 STW
              76bd 006a  ld   $6a         ;0ea2 'j'
              76be 00fc  ld   $fc         ;0ea4 XORW
              76bf 003c  ld   $3c         ;0ea4 'Value'
              76c0 002b  ld   $2b         ;0ea6 STW
              76c1 0044  ld   $44         ;0ea6 'k'
              76c2 0021  ld   $21         ;0ea8 LDW
              76c3 006a  ld   $6a         ;0ea8 'j'
              76c4 0035  ld   $35         ;0eaa BCC
              76c5 0053  ld   $53         ;0eab GE
              76c6 00b1  ld   $b1
              76c7 0059  ld   $59         ;0ead LDI
              76c8 0000  ld   $00
              76c9 00b8  ld   $b8         ;0eaf SUBW
              76ca 006a  ld   $6a         ;0eaf 'j'
              76cb 002b  ld   $2b         ;0eb1 STW
              76cc 006a  ld   $6a         ;0eb1 'j'
              76cd 0021  ld   $21         ;0eb3 LDW
              76ce 003c  ld   $3c         ;0eb3 'Value'
              76cf 0035  ld   $35         ;0eb5 BCC
              76d0 0053  ld   $53         ;0eb6 GE
              76d1 00bc  ld   $bc
              76d2 0059  ld   $59         ;0eb8 LDI
              76d3 0000  ld   $00
              76d4 00b8  ld   $b8         ;0eba SUBW
              76d5 003c  ld   $3c         ;0eba 'Value'
              76d6 002b  ld   $2b         ;0ebc STW
              76d7 003c  ld   $3c         ;0ebc 'Value'
              76d8 0035  ld   $35         ;0ebe BCC
              76d9 0072  ld   $72         ;0ebf NE
              76da 00c1  ld   $c1
              76db 00cf  ld   $cf         ;0ec1 CALL
              76dc 0046  ld   $46         ;0ec1 'ValueError'
              76dd 0059  ld   $59         ;0ec3 LDI
              76de 0000  ld   $00
              76df 002b  ld   $2b         ;0ec5 STW
              76e0 0040  ld   $40         ;0ec5 'i'
              76e1 002b  ld   $2b         ;0ec7 STW
              76e2 004e  ld   $4e         ;0ec7 'tmp'
              76e3 0021  ld   $21         ;0ec9 LDW
              76e4 0040  ld   $40         ;0ec9 'i'
              76e5 0099  ld   $99         ;0ecb ADDW
              76e6 0040  ld   $40         ;0ecb 'i'
              76e7 002b  ld   $2b         ;0ecd STW
              76e8 0040  ld   $40         ;0ecd 'i'
              76e9 0021  ld   $21         ;0ecf LDW
              76ea 006a  ld   $6a         ;0ecf 'j'
              76eb 0035  ld   $35         ;0ed1 BCC
              76ec 0053  ld   $53         ;0ed2 GE
              76ed 00d4  ld   $d4
              76ee 0093  ld   $93         ;0ed4 INC
              76ef 0040  ld   $40         ;0ed4 'i'
              76f0 0021  ld   $21         ;0ed6 LDW
              76f1 006a  ld   $6a         ;0ed6 'j'
              76f2 0099  ld   $99         ;0ed8 ADDW
              76f3 006a  ld   $6a         ;0ed8 'j'
              76f4 002b  ld   $2b         ;0eda STW
              76f5 006a  ld   $6a         ;0eda 'j'
              76f6 0021  ld   $21         ;0edc LDW
              76f7 0040  ld   $40         ;0edc 'i'
              76f8 00b8  ld   $b8         ;0ede SUBW
              76f9 003c  ld   $3c         ;0ede 'Value'
              76fa 0035  ld   $35         ;0ee0 BCC
              76fb fe00  bra  ac          ;+-----------------------------------+
              76fc fcfd  bra  $76fd       ;|                                   |
              76fd 1418  ld   $18,y       ;| Trampoline for page $7600 lookups |
              76fe e006  jmp  y,$06       ;|                                   |
              76ff c218  st   [$18]       ;+-----------------------------------+
              7700 0050  ld   $50         ;0ee1 LT
              7701 00e5  ld   $e5
              7702 002b  ld   $2b         ;0ee3 STW
              7703 0040  ld   $40         ;0ee3 'i'
              7704 0093  ld   $93         ;0ee5 INC
              7705 006a  ld   $6a         ;0ee5 'j'
              7706 0021  ld   $21         ;0ee7 LDW
              7707 004e  ld   $4e         ;0ee7 'tmp'
              7708 00e3  ld   $e3         ;0ee9 ADDI
              7709 0001  ld   $01
              770a 0082  ld   $82         ;0eeb ANDI
              770b 000f  ld   $0f
              770c 0035  ld   $35         ;0eed BCC
              770d 0072  ld   $72         ;0eee NE
              770e 00c5  ld   $c5
              770f 0021  ld   $21         ;0ef0 LDW
              7710 0044  ld   $44         ;0ef0 'k'
              7711 0035  ld   $35         ;0ef2 BCC
              7712 0053  ld   $53         ;0ef3 GE
              7713 00f8  ld   $f8
              7714 0059  ld   $59         ;0ef5 LDI
              7715 0000  ld   $00
              7716 00b8  ld   $b8         ;0ef7 SUBW
              7717 006a  ld   $6a         ;0ef7 'j'
              7718 00ff  ld   $ff         ;0ef9 RET
              7719 0021  ld   $21         ;0efa LDW
              771a 006a  ld   $6a         ;0efa 'j'
              771b 00ff  ld   $ff         ;0efc RET
              771c 0093  ld   $93         ;0efd INC
              771d 001b  ld   $1b
              771e 00ff  ld   $ff         ;0eff RET
              771f 000f  ld   $0f         ;| RAM segment address (high byte first)
              7720 00a0  ld   $a0         ;|
              7721 005e  ld   $5e         ;| Length (1..256)
              7722 002b  ld   $2b         ;0fa0 STW
              7723 003e  ld   $3e         ;0fa0 'Divide'
              7724 00cd  ld   $cd         ;0fa2 DEF
              7725 00c7  ld   $c7
              7726 002b  ld   $2b         ;0fa4 STW
              7727 004e  ld   $4e         ;0fa4 'tmp'
              7728 0059  ld   $59         ;0fa6 LDI
              7729 0000  ld   $00
              772a 002b  ld   $2b         ;0fa8 STW
              772b 006a  ld   $6a         ;0fa8 'j'
              772c 0059  ld   $59         ;0faa LDI
              772d 0001  ld   $01
              772e 002b  ld   $2b         ;0fac STW
              772f 0040  ld   $40         ;0fac 'i'
              7730 00f8  ld   $f8         ;0fae ANDW
              7731 004e  ld   $4e         ;0fae 'tmp'
              7732 0035  ld   $35         ;0fb0 BCC
              7733 003f  ld   $3f         ;0fb1 EQ
              7734 00b7  ld   $b7
              7735 0021  ld   $21         ;0fb3 LDW
              7736 006a  ld   $6a         ;0fb3 'j'
              7737 0099  ld   $99         ;0fb5 ADDW
              7738 003c  ld   $3c         ;0fb5 'Value'
              7739 002b  ld   $2b         ;0fb7 STW
              773a 006a  ld   $6a         ;0fb7 'j'
              773b 0021  ld   $21         ;0fb9 LDW
              773c 003c  ld   $3c         ;0fb9 'Value'
              773d 0099  ld   $99         ;0fbb ADDW
              773e 003c  ld   $3c         ;0fbb 'Value'
              773f 002b  ld   $2b         ;0fbd STW
              7740 003c  ld   $3c         ;0fbd 'Value'
              7741 0021  ld   $21         ;0fbf LDW
              7742 0040  ld   $40         ;0fbf 'i'
              7743 0099  ld   $99         ;0fc1 ADDW
              7744 0040  ld   $40         ;0fc1 'i'
              7745 0035  ld   $35         ;0fc3 BCC
              7746 0072  ld   $72         ;0fc4 NE
              7747 00aa  ld   $aa
              7748 0021  ld   $21         ;0fc6 LDW
              7749 006a  ld   $6a         ;0fc6 'j'
              774a 00ff  ld   $ff         ;0fc8 RET
              774b 002b  ld   $2b         ;0fc9 STW
              774c 007c  ld   $7c         ;0fc9 'Multiply'
              774d 00cd  ld   $cd         ;0fcb DEF
              774e 00e6  ld   $e6
              774f 0021  ld   $21         ;0fcd LDW
              7750 0000  ld   $00
              7751 002b  ld   $2b         ;0fcf STW
              7752 0040  ld   $40         ;0fcf 'i'
              7753 0021  ld   $21         ;0fd1 LDW
              7754 0036  ld   $36         ;0fd1 'Active'
              7755 00ad  ld   $ad         ;0fd3 PEEK
              7756 0082  ld   $82         ;0fd4 ANDI
              7757 005f  ld   $5f
              7758 00e6  ld   $e6         ;0fd6 SUBI
              7759 0040  ld   $40
              775a 0035  ld   $35         ;0fd8 BCC
              775b 0050  ld   $50         ;0fd9 LT
              775c 00e4  ld   $e4
              775d 00e6  ld   $e6         ;0fdb SUBI
              775e 001b  ld   $1b
              775f 0035  ld   $35         ;0fdd BCC
              7760 0053  ld   $53         ;0fde GE
              7761 00e4  ld   $e4
              7762 0093  ld   $93         ;0fe0 INC
              7763 0036  ld   $36         ;0fe0 'Active'
              7764 00e9  ld   $e9         ;0fe2 LSLW
              7765 0099  ld   $99         ;0fe3 ADDW
              7766 0040  ld   $40         ;0fe3 'i'
              7767 00ff  ld   $ff         ;0fe5 RET
              7768 00cf  ld   $cf         ;0fe6 CALL
              7769 004a  ld   $4a         ;0fe6 'SyntaxError'
              776a 002b  ld   $2b         ;0fe8 STW
              776b 0042  ld   $42         ;0fe8 'Variable'
              776c 00cd  ld   $cd         ;0fea DEF
              776d 00f7  ld   $f7
              776e 0021  ld   $21         ;0fec LDW
              776f 0036  ld   $36         ;0fec 'Active'
              7770 00ad  ld   $ad         ;0fee PEEK
              7771 008c  ld   $8c         ;0fef XORI
              7772 0020  ld   $20
              7773 0035  ld   $35         ;0ff1 BCC
              7774 0072  ld   $72         ;0ff2 NE
              7775 00f6  ld   $f6
              7776 0093  ld   $93         ;0ff4 INC
              7777 0036  ld   $36         ;0ff4 'Active'
              7778 0090  ld   $90         ;0ff6 BRA
              7779 00ea  ld   $ea
              777a 00ff  ld   $ff         ;0ff8 RET
              777b 002b  ld   $2b         ;0ff9 STW
              777c 0034  ld   $34         ;0ff9 'Spaces'
              777d 0093  ld   $93         ;0ffb INC
              777e 001b  ld   $1b
              777f 00ff  ld   $ff         ;0ffd RET
              7780 0010  ld   $10         ;| RAM segment address (high byte first)
              7781 00a0  ld   $a0         ;|
              7782 0060  ld   $60         ;| Length (1..256)
              7783 00cd  ld   $cd         ;10a0 DEF
              7784 00fb  ld   $fb
              7785 0075  ld   $75         ;10a2 PUSH
              7786 0021  ld   $21         ;10a3 LDW
              7787 006c  ld   $6c         ;10a3 'Begin'
              7788 002b  ld   $2b         ;10a5 STW
              7789 006a  ld   $6a         ;10a5 'j'
              778a 00fc  ld   $fc         ;10a7 XORW
              778b 0048  ld   $48         ;10a7 'End'
              778c 0035  ld   $35         ;10a9 BCC
              778d 003f  ld   $3f         ;10aa EQ
              778e 00c9  ld   $c9
              778f 00cf  ld   $cf         ;10ac CALL
              7790 0058  ld   $58         ;10ac 'TestBreak'
              7791 0021  ld   $21         ;10ae LDW
              7792 006a  ld   $6a         ;10ae 'j'
              7793 00f6  ld   $f6         ;10b0 DEEK
              7794 002b  ld   $2b         ;10b1 STW
              7795 003c  ld   $3c         ;10b1 'Value'
              7796 00cf  ld   $cf         ;10b3 CALL
              7797 0076  ld   $76         ;10b3 'PrintValue'
              7798 0093  ld   $93         ;10b5 INC
              7799 006a  ld   $6a         ;10b5 'j'
              779a 0093  ld   $93         ;10b7 INC
              779b 006a  ld   $6a         ;10b7 'j'
              779c 0021  ld   $21         ;10b9 LDW
              779d 006a  ld   $6a         ;10b9 'j'
              779e 00ad  ld   $ad         ;10bb PEEK
              779f 0035  ld   $35         ;10bc BCC
              77a0 003f  ld   $3f         ;10bd EQ
              77a1 00c1  ld   $c1
              77a2 00cf  ld   $cf         ;10bf CALL
              77a3 0050  ld   $50         ;10bf 'PrintChar'
              77a4 0090  ld   $90         ;10c1 BRA
              77a5 00b5  ld   $b5
              77a6 00cf  ld   $cf         ;10c3 CALL
              77a7 005a  ld   $5a         ;10c3 'Newline'
              77a8 0021  ld   $21         ;10c5 LDW
              77a9 006a  ld   $6a         ;10c5 'j'
              77aa 00cf  ld   $cf         ;10c7 CALL
              77ab 0070  ld   $70         ;10c7 'NextBlock'
              77ac 0090  ld   $90         ;10c9 BRA
              77ad 00a3  ld   $a3
              77ae 002b  ld   $2b         ;10cb STW
              77af 003c  ld   $3c         ;10cb 'Value'
              77b0 0021  ld   $21         ;10cd LDW
              77b1 0000  ld   $00
              77b2 00e6  ld   $e6         ;10cf SUBI
              77b3 0080  ld   $80
              77b4 00e6  ld   $e6         ;10d1 SUBI
              77b5 00c0  ld   $c0
              77b6 00fc  ld   $fc         ;10d3 XORW
              77b7 006a  ld   $6a         ;10d3 'j'
              77b8 0035  ld   $35         ;10d5 BCC
              77b9 003f  ld   $3f         ;10d6 EQ
              77ba 00e2  ld   $e2
              77bb 0021  ld   $21         ;10d8 LDW
              77bc 006a  ld   $6a         ;10d8 'j'
              77bd 00cf  ld   $cf         ;10da CALL
              77be 0070  ld   $70         ;10da 'NextBlock'
              77bf 002b  ld   $2b         ;10dc STW
              77c0 006a  ld   $6a         ;10dc 'j'
              77c1 0021  ld   $21         ;10de LDW
              77c2 003c  ld   $3c         ;10de 'Value'
              77c3 00e3  ld   $e3         ;10e0 ADDI
              77c4 0020  ld   $20
              77c5 0090  ld   $90         ;10e2 BRA
              77c6 00c9  ld   $c9
              77c7 0021  ld   $21         ;10e4 LDW
              77c8 0050  ld   $50         ;10e4 'PrintChar'
              77c9 00fc  ld   $fc         ;10e6 XORW
              77ca 0054  ld   $54         ;10e6 'PrintCharScreen'
              77cb 0035  ld   $35         ;10e8 BCC
              77cc 0072  ld   $72         ;10e9 NE
              77cd 00f9  ld   $f9
              77ce 00cf  ld   $cf         ;10eb CALL
              77cf 0076  ld   $76         ;10eb 'PrintValue'
              77d0 00cf  ld   $cf         ;10ed CALL
              77d1 0052  ld   $52         ;10ed 'PrintS'
              77d2 0020  ld   $20         ;10ef ' '
              77d3 0062  ld   $62         ;10f0 'b'
              77d4 0079  ld   $79         ;10f1 'y'
              77d5 0074  ld   $74         ;10f2 't'
              77d6 0065  ld   $65         ;10f3 'e'
              77d7 0073  ld   $73         ;10f4 's'
              77d8 0020  ld   $20         ;10f5 ' '
              77d9 0066  ld   $66         ;10f6 'f'
              77da 0072  ld   $72         ;10f7 'r'
              77db 0065  ld   $65         ;10f8 'e'
              77dc 0065  ld   $65         ;10f9 'e'
              77dd 0000  ld   $00         ;10fa 0
              77de 0063  ld   $63         ;10fb POP
              77df 00ff  ld   $ff         ;10fc RET
              77e0 0093  ld   $93         ;10fd INC
              77e1 001b  ld   $1b
              77e2 00ff  ld   $ff         ;10ff RET
              77e3 0011  ld   $11         ;| RAM segment address (high byte first)
              77e4 00a0  ld   $a0         ;|
              77e5 0060  ld   $60         ;| Length (1..256)
              77e6 002b  ld   $2b         ;11a0 STW
              77e7 007e  ld   $7e         ;11a0 'List'
              77e8 00cd  ld   $cd         ;11a2 DEF
              77e9 00c1  ld   $c1
              77ea 0075  ld   $75         ;11a4 PUSH
              77eb 002b  ld   $2b         ;11a5 STW
              77ec 0040  ld   $40         ;11a5 'i'
              77ed 0021  ld   $21         ;11a7 LDW
              77ee 003c  ld   $3c         ;11a7 'Value'
              77ef 00b8  ld   $b8         ;11a9 SUBW
              77f0 0040  ld   $40         ;11a9 'i'
              77f1 0035  ld   $35         ;11ab BCC
              77f2 0050  ld   $50         ;11ac LT
              77f3 00b2  ld   $b2
              77f4 002b  ld   $2b         ;11ae STW
              77f5 003c  ld   $3c         ;11ae 'Value'
              77f6 0093  ld   $93         ;11b0 INC
              77f7 0044  ld   $44         ;11b0 'k'
              77f8 0090  ld   $90         ;11b2 BRA
              77f9 00a7  ld   $a7
              77fa 0021  ld   $21         ;11b4 LDW
              77fb fe00  bra  ac          ;+-----------------------------------+
              77fc fcfd  bra  $77fd       ;|                                   |
              77fd 1418  ld   $18,y       ;| Trampoline for page $7700 lookups |
              77fe e006  jmp  y,$06       ;|                                   |
              77ff c218  st   [$18]       ;+-----------------------------------+
              7800 0044  ld   $44         ;11b4 'k'
              7801 0035  ld   $35         ;11b6 BCC
              7802 003f  ld   $3f         ;11b7 EQ
              7803 00bf  ld   $bf
              7804 0088  ld   $88         ;11b9 ORI
              7805 0030  ld   $30
              7806 00cf  ld   $cf         ;11bb CALL
              7807 0050  ld   $50         ;11bb 'PrintChar'
              7808 0059  ld   $59         ;11bd LDI
              7809 0030  ld   $30
              780a 002b  ld   $2b         ;11bf STW
              780b 0044  ld   $44         ;11bf 'k'
              780c 0063  ld   $63         ;11c1 POP
              780d 00ff  ld   $ff         ;11c2 RET
              780e 002b  ld   $2b         ;11c3 STW
              780f 0074  ld   $74         ;11c3 'PrintDigit'
              7810 00cd  ld   $cd         ;11c5 DEF
              7811 00f1  ld   $f1
              7812 0075  ld   $75         ;11c7 PUSH
              7813 0059  ld   $59         ;11c8 LDI
              7814 0000  ld   $00
              7815 002b  ld   $2b         ;11ca STW
              7816 0044  ld   $44         ;11ca 'k'
              7817 00cf  ld   $cf         ;11cc CALL
              7818 0038  ld   $38         ;11cc 'Keyword'
              7819 003c  ld   $3c         ;11ce '<'
              781a 0000  ld   $00         ;11cf 0
              781b 0035  ld   $35         ;11d0 BCC
              781c 003f  ld   $3f         ;11d1 EQ
              781d 00d3  ld   $d3
              781e 0093  ld   $93         ;11d3 INC
              781f 0044  ld   $44         ;11d3 'k'
              7820 00cf  ld   $cf         ;11d5 CALL
              7821 0038  ld   $38         ;11d5 'Keyword'
              7822 003e  ld   $3e         ;11d7 '>'
              7823 0000  ld   $00         ;11d8 0
              7824 0035  ld   $35         ;11d9 BCC
              7825 003f  ld   $3f         ;11da EQ
              7826 00e0  ld   $e0
              7827 0021  ld   $21         ;11dc LDW
              7828 0044  ld   $44         ;11dc 'k'
              7829 00e3  ld   $e3         ;11de ADDI
              782a 0004  ld   $04
              782b 002b  ld   $2b         ;11e0 STW
              782c 0044  ld   $44         ;11e0 'k'
              782d 00cf  ld   $cf         ;11e2 CALL
              782e 0038  ld   $38         ;11e2 'Keyword'
              782f 003d  ld   $3d         ;11e4 '='
              7830 0000  ld   $00         ;11e5 0
              7831 0035  ld   $35         ;11e6 BCC
              7832 003f  ld   $3f         ;11e7 EQ
              7833 00ed  ld   $ed
              7834 0021  ld   $21         ;11e9 LDW
              7835 0044  ld   $44         ;11e9 'k'
              7836 00e3  ld   $e3         ;11eb ADDI
              7837 0002  ld   $02
              7838 002b  ld   $2b         ;11ed STW
              7839 0044  ld   $44         ;11ed 'k'
              783a 0021  ld   $21         ;11ef LDW
              783b 0044  ld   $44         ;11ef 'k'
              783c 0063  ld   $63         ;11f1 POP
              783d 00ff  ld   $ff         ;11f2 RET
              783e 002b  ld   $2b         ;11f3 STW
              783f 0064  ld   $64         ;11f3 'RelOp'
              7840 0011  ld   $11         ;11f5 LDWI
              7841 00a0  ld   $a0
              7842 001b  ld   $1b
              7843 00f6  ld   $f6         ;11f8 DEEK
              7844 002b  ld   $2b         ;11f9 STW
              7845 0048  ld   $48         ;11f9 'End'
              7846 00e3  ld   $e3         ;11fb ADDI
              7847 0002  ld   $02
              7848 0093  ld   $93         ;11fd INC
              7849 001b  ld   $1b
              784a 00ff  ld   $ff         ;11ff RET
              784b 0012  ld   $12         ;| RAM segment address (high byte first)
              784c 00a0  ld   $a0         ;|
              784d 005d  ld   $5d         ;| Length (1..256)
              784e 002b  ld   $2b         ;12a0 STW
              784f 0036  ld   $36         ;12a0 'Active'
              7850 00cd  ld   $cd         ;12a2 DEF
              7851 00f7  ld   $f7
              7852 0021  ld   $21         ;12a4 LDW
              7853 001a  ld   $1a
              7854 002b  ld   $2b         ;12a6 STW
              7855 004e  ld   $4e         ;12a6 'tmp'
              7856 001a  ld   $1a         ;12a8 LD
              7857 0030  ld   $30         ;12a8 'Pos'
              7858 00e6  ld   $e6         ;12aa SUBI
              7859 0002  ld   $02
              785a 0035  ld   $35         ;12ac BCC
              785b 0056  ld   $56         ;12ad LE
              785c 00af  ld   $af
              785d 00cf  ld   $cf         ;12af CALL
              785e 005a  ld   $5a         ;12af 'Newline'
              785f 0059  ld   $59         ;12b1 LDI
              7860 0000  ld   $00
              7861 005e  ld   $5e         ;12b3 ST
              7862 001c  ld   $1c
              7863 0021  ld   $21         ;12b5 LDW
              7864 004e  ld   $4e         ;12b5 'tmp'
              7865 00ad  ld   $ad         ;12b7 PEEK
              7866 0035  ld   $35         ;12b8 BCC
              7867 003f  ld   $3f         ;12b9 EQ
              7868 00e3  ld   $e3
              7869 0059  ld   $59         ;12bb LDI
              786a 003f  ld   $3f
              786b 00cf  ld   $cf         ;12bd CALL
              786c 0050  ld   $50         ;12bd 'PrintChar'
              786d 0021  ld   $21         ;12bf LDW
              786e 004e  ld   $4e         ;12bf 'tmp'
              786f 00ad  ld   $ad         ;12c1 PEEK
              7870 0093  ld   $93         ;12c2 INC
              7871 004e  ld   $4e         ;12c2 'tmp'
              7872 0035  ld   $35         ;12c4 BCC
              7873 0072  ld   $72         ;12c5 NE
              7874 00bb  ld   $bb
              7875 00cf  ld   $cf         ;12c7 CALL
              7876 0052  ld   $52         ;12c7 'PrintS'
              7877 0020  ld   $20         ;12c9 ' '
              7878 0065  ld   $65         ;12ca 'e'
              7879 0072  ld   $72         ;12cb 'r'
              787a 0072  ld   $72         ;12cc 'r'
              787b 006f  ld   $6f         ;12cd 'o'
              787c 0072  ld   $72         ;12ce 'r'
              787d 0000  ld   $00         ;12cf 0
              787e 00e6  ld   $e6         ;12d0 SUBI
              787f 0020  ld   $20
              7880 00f8  ld   $f8         ;12d2 ANDW
              7881 0036  ld   $36         ;12d2 'Active'
              7882 00f6  ld   $f6         ;12d4 DEEK
              7883 0035  ld   $35         ;12d5 BCC
              7884 003f  ld   $3f         ;12d6 EQ
              7885 00e1  ld   $e1
              7886 002b  ld   $2b         ;12d8 STW
              7887 003c  ld   $3c         ;12d8 'Value'
              7888 00cf  ld   $cf         ;12da CALL
              7889 0052  ld   $52         ;12da 'PrintS'
              788a 0020  ld   $20         ;12dc ' '
              788b 0069  ld   $69         ;12dd 'i'
              788c 006e  ld   $6e         ;12de 'n'
              788d 0020  ld   $20         ;12df ' '
              788e 0000  ld   $00         ;12e0 0
              788f 00cf  ld   $cf         ;12e1 CALL
              7890 0076  ld   $76         ;12e1 'PrintValue'
              7891 00cf  ld   $cf         ;12e3 CALL
              7892 005a  ld   $5a         ;12e3 'Newline'
              7893 00cf  ld   $cf         ;12e5 CALL
              7894 0052  ld   $52         ;12e5 'PrintS'
              7895 004f  ld   $4f         ;12e7 'O'
              7896 006b  ld   $6b         ;12e8 'k'
              7897 0000  ld   $00         ;12e9 0
              7898 00cf  ld   $cf         ;12ea CALL
              7899 005a  ld   $5a         ;12ea 'Newline'
              789a 0059  ld   $59         ;12ec LDI
              789b 0000  ld   $00
              789c 00cf  ld   $cf         ;12ee CALL
              789d 005c  ld   $5c         ;12ee 'GetLine'
              789e 0035  ld   $35         ;12f0 BCC
              789f 003f  ld   $3f         ;12f1 EQ
              78a0 00ea  ld   $ea
              78a1 00cf  ld   $cf         ;12f3 CALL
              78a2 0072  ld   $72         ;12f3 'Insert'
              78a3 0035  ld   $35         ;12f5 BCC
              78a4 004d  ld   $4d         ;12f6 GT
              78a5 00ea  ld   $ea
              78a6 0011  ld   $11         ;12f8 785
              78a7 002b  ld   $2b         ;12f9 STW
              78a8 0056  ld   $56         ;12f9 'Prompt'
              78a9 00cf  ld   $cf         ;12fb CALL
              78aa 0066  ld   $66         ;12fb 'Statements'
              78ab 0013  ld   $13         ;| RAM segment address (high byte first)
              78ac 00a0  ld   $a0         ;|
              78ad 0059  ld   $59         ;| Length (1..256)
              78ae 0021  ld   $21         ;13a0 LDW
              78af 0036  ld   $36         ;13a0 'Active'
              78b0 00ad  ld   $ad         ;13a2 PEEK
              78b1 0035  ld   $35         ;13a3 BCC
              78b2 003f  ld   $3f         ;13a4 EQ
              78b3 00f3  ld   $f3
              78b4 008c  ld   $8c         ;13a6 XORI
              78b5 003a  ld   $3a
              78b6 0035  ld   $35         ;13a8 BCC
              78b7 003f  ld   $3f         ;13a9 EQ
              78b8 00f3  ld   $f3
              78b9 0021  ld   $21         ;13ab LDW
              78ba 0036  ld   $36         ;13ab 'Active'
              78bb 00ad  ld   $ad         ;13ad PEEK
              78bc 0035  ld   $35         ;13ae BCC
              78bd 003f  ld   $3f         ;13af EQ
              78be 00f1  ld   $f1
              78bf 008c  ld   $8c         ;13b1 XORI
              78c0 003a  ld   $3a
              78c1 0035  ld   $35         ;13b3 BCC
              78c2 003f  ld   $3f         ;13b4 EQ
              78c3 00f1  ld   $f1
              78c4 008c  ld   $8c         ;13b6 XORI
              78c5 0018  ld   $18
              78c6 0035  ld   $35         ;13b8 BCC
              78c7 0072  ld   $72         ;13b9 NE
              78c8 00ce  ld   $ce
              78c9 0093  ld   $93         ;13bb INC
              78ca 0036  ld   $36         ;13bb 'Active'
              78cb 00cf  ld   $cf         ;13bd CALL
              78cc 0038  ld   $38         ;13bd 'Keyword'
              78cd 0022  ld   $22         ;13bf 34
              78ce 0000  ld   $00         ;13c0 0
              78cf 0035  ld   $35         ;13c1 BCC
              78d0 0072  ld   $72         ;13c2 NE
              78d1 00cc  ld   $cc
              78d2 0021  ld   $21         ;13c4 LDW
              78d3 0036  ld   $36         ;13c4 'Active'
              78d4 00ad  ld   $ad         ;13c6 PEEK
              78d5 0035  ld   $35         ;13c7 BCC
              78d6 003f  ld   $3f         ;13c8 EQ
              78d7 00cc  ld   $cc
              78d8 00cf  ld   $cf         ;13ca CALL
              78d9 0050  ld   $50         ;13ca 'PrintChar'
              78da 0090  ld   $90         ;13cc BRA
              78db 00b9  ld   $b9
              78dc 0090  ld   $90         ;13ce BRA
              78dd 00d2  ld   $d2
              78de 00cf  ld   $cf         ;13d0 CALL
              78df 003a  ld   $3a         ;13d0 'Expression'
              78e0 00cf  ld   $cf         ;13d2 CALL
              78e1 0076  ld   $76         ;13d2 'PrintValue'
              78e2 00cf  ld   $cf         ;13d4 CALL
              78e3 0038  ld   $38         ;13d4 'Keyword'
              78e4 002c  ld   $2c         ;13d6 44
              78e5 0000  ld   $00         ;13d7 0
              78e6 0035  ld   $35         ;13d8 BCC
              78e7 003f  ld   $3f         ;13d9 EQ
              78e8 00e8  ld   $e8
              78e9 0059  ld   $59         ;13db LDI
              78ea 0020  ld   $20
              78eb 00cf  ld   $cf         ;13dd CALL
              78ec 0050  ld   $50         ;13dd 'PrintChar'
              78ed 001a  ld   $1a         ;13df LD
              78ee 0030  ld   $30         ;13df 'Pos'
              78ef 00e6  ld   $e6         ;13e1 SUBI
              78f0 0002  ld   $02
              78f1 0082  ld   $82         ;13e3 ANDI
              78f2 0007  ld   $07
              78f3 0035  ld   $35         ;13e5 BCC
              78f4 0072  ld   $72         ;13e6 NE
              78f5 00d9  ld   $d9
              78f6 0090  ld   $90         ;13e8 BRA
              78f7 00a9  ld   $a9
              78f8 00cf  ld   $cf         ;13ea CALL
              78f9 0038  ld   $38         ;13ea 'Keyword'
              78fa 003b  ld   $3b         ;13ec 59
              78fb fe00  bra  ac          ;+-----------------------------------+
              78fc fcfd  bra  $78fd       ;|                                   |
              78fd 1418  ld   $18,y       ;| Trampoline for page $7800 lookups |
              78fe e006  jmp  y,$06       ;|                                   |
              78ff c218  st   [$18]       ;+-----------------------------------+
              7900 0000  ld   $00         ;13ed 0
              7901 0035  ld   $35         ;13ee BCC
              7902 0072  ld   $72         ;13ef NE
              7903 00a9  ld   $a9
              7904 00cf  ld   $cf         ;13f1 CALL
              7905 005a  ld   $5a         ;13f1 'Newline'
              7906 0090  ld   $90         ;13f3 BRA
              7907 00f5  ld   $f5
              7908 00cf  ld   $cf         ;13f5 CALL
              7909 005a  ld   $5a         ;13f5 'Newline'
              790a 00cf  ld   $cf         ;13f7 CALL
              790b 0062  ld   $62         ;13f7 'EndOfLine'
              790c 0014  ld   $14         ;| RAM segment address (high byte first)
              790d 00a0  ld   $a0         ;|
              790e 005f  ld   $5f         ;| Length (1..256)
              790f 00cf  ld   $cf         ;14a0 CALL
              7910 0038  ld   $38         ;14a0 'Keyword'
              7911 003f  ld   $3f         ;14a2 '?'
              7912 0000  ld   $00         ;14a3 0
              7913 0035  ld   $35         ;14a4 BCC
              7914 0072  ld   $72         ;14a5 NE
              7915 00ad  ld   $ad
              7916 00cf  ld   $cf         ;14a7 CALL
              7917 0038  ld   $38         ;14a7 'Keyword'
              7918 0070  ld   $70         ;14a9 'p'
              7919 0072  ld   $72         ;14aa 'r'
              791a 0069  ld   $69         ;14ab 'i'
              791b 006e  ld   $6e         ;14ac 'n'
              791c 0074  ld   $74         ;14ad 't'
              791d 0000  ld   $00         ;14ae 0
              791e 0035  ld   $35         ;14af BCC
              791f 003f  ld   $3f         ;14b0 EQ
              7920 00b5  ld   $b5
              7921 0011  ld   $11         ;14b2 LDWI
              7922 00a0  ld   $a0
              7923 0013  ld   $13
              7924 00cf  ld   $cf         ;14b5 CALL
              7925 0018  ld   $18         ;14b5 vAC
              7926 00cf  ld   $cf         ;14b7 CALL
              7927 0038  ld   $38         ;14b7 'Keyword'
              7928 0069  ld   $69         ;14b9 'i'
              7929 006e  ld   $6e         ;14ba 'n'
              792a 0070  ld   $70         ;14bb 'p'
              792b 0075  ld   $75         ;14bc 'u'
              792c 0074  ld   $74         ;14bd 't'
              792d 0000  ld   $00         ;14be 0
              792e 0035  ld   $35         ;14bf BCC
              792f 003f  ld   $3f         ;14c0 EQ
              7930 00f8  ld   $f8
              7931 0021  ld   $21         ;14c2 LDW
              7932 0036  ld   $36         ;14c2 'Active'
              7933 00ad  ld   $ad         ;14c4 PEEK
              7934 00cf  ld   $cf         ;14c5 CALL
              7935 0050  ld   $50         ;14c5 'PrintChar'
              7936 00cf  ld   $cf         ;14c7 CALL
              7937 0042  ld   $42         ;14c7 'Variable'
              7938 002b  ld   $2b         ;14c9 STW
              7939 0068  ld   $68         ;14c9 'Address'
              793a 00cf  ld   $cf         ;14cb CALL
              793b 0034  ld   $34         ;14cb 'Spaces'
              793c 00df  ld   $df         ;14cd ALLOC
              793d 00fc  ld   $fc
              793e 0021  ld   $21         ;14cf LDW
              793f 0036  ld   $36         ;14cf 'Active'
              7940 00ec  ld   $ec         ;14d1 STLW
              7941 0002  ld   $02
              7942 0088  ld   $88         ;14d3 ORI
              7943 001f  ld   $1f
              7944 00e6  ld   $e6         ;14d5 SUBI
              7945 001f  ld   $1f
              7946 00f6  ld   $f6         ;14d7 DEEK
              7947 00ec  ld   $ec         ;14d8 STLW
              7948 0000  ld   $00
              7949 0059  ld   $59         ;14da LDI
              794a 003f  ld   $3f
              794b 00cf  ld   $cf         ;14dc CALL
              794c 0050  ld   $50         ;14dc 'PrintChar'
              794d 00cf  ld   $cf         ;14de CALL
              794e 005a  ld   $5a         ;14de 'Newline'
              794f 00ee  ld   $ee         ;14e0 LDLW
              7950 0000  ld   $00
              7951 00cf  ld   $cf         ;14e2 CALL
              7952 005c  ld   $5c         ;14e2 'GetLine'
              7953 0035  ld   $35         ;14e4 BCC
              7954 003f  ld   $3f         ;14e5 EQ
              7955 00d8  ld   $d8
              7956 00cf  ld   $cf         ;14e7 CALL
              7957 003a  ld   $3a         ;14e7 'Expression'
              7958 00f3  ld   $f3         ;14e9 DOKE
              7959 0068  ld   $68         ;14e9 'Address'
              795a 00ee  ld   $ee         ;14eb LDLW
              795b 0002  ld   $02
              795c 002b  ld   $2b         ;14ed STW
              795d 0036  ld   $36         ;14ed 'Active'
              795e 00df  ld   $df         ;14ef ALLOC
              795f 0004  ld   $04
              7960 00cf  ld   $cf         ;14f1 CALL
              7961 0038  ld   $38         ;14f1 'Keyword'
              7962 002c  ld   $2c         ;14f3 ','
              7963 0000  ld   $00         ;14f4 0
              7964 0035  ld   $35         ;14f5 BCC
              7965 0072  ld   $72         ;14f6 NE
              7966 00c0  ld   $c0
              7967 00cf  ld   $cf         ;14f8 CALL
              7968 0062  ld   $62         ;14f8 'EndOfLine'
              7969 0011  ld   $11         ;14fa LDWI
              796a 00a0  ld   $a0
              796b 0015  ld   $15
              796c 00cf  ld   $cf         ;14fd CALL
              796d 0018  ld   $18         ;14fd vAC
              796e 0015  ld   $15         ;| RAM segment address (high byte first)
              796f 00a0  ld   $a0         ;|
              7970 0058  ld   $58         ;| Length (1..256)
              7971 00cf  ld   $cf         ;15a0 CALL
              7972 0038  ld   $38         ;15a0 'Keyword'
              7973 0063  ld   $63         ;15a2 'c'
              7974 006c  ld   $6c         ;15a3 'l'
              7975 0073  ld   $73         ;15a4 's'
              7976 0000  ld   $00         ;15a5 0
              7977 0035  ld   $35         ;15a6 BCC
              7978 003f  ld   $3f         ;15a7 EQ
              7979 00cb  ld   $cb
              797a 0011  ld   $11         ;15a9 LDWI
              797b 0000  ld   $00
              797c 0001  ld   $01
              797d 00ad  ld   $ad         ;15ac PEEK
              797e 005e  ld   $5e         ;15ad ST
              797f 0031  ld   $31         ;15ad 'Pos'+1
              7980 0059  ld   $59         ;15af LDI
              7981 000e  ld   $0e
              7982 002b  ld   $2b         ;15b1 STW
              7983 006a  ld   $6a         ;15b1 'j'
              7984 00cf  ld   $cf         ;15b3 CALL
              7985 005a  ld   $5a         ;15b3 'Newline'
              7986 0021  ld   $21         ;15b5 LDW
              7987 006a  ld   $6a         ;15b5 'j'
              7988 00e6  ld   $e6         ;15b7 SUBI
              7989 0001  ld   $01
              798a 0035  ld   $35         ;15b9 BCC
              798b 004d  ld   $4d         ;15ba GT
              798c 00af  ld   $af
              798d 00cf  ld   $cf         ;15bc CALL
              798e 005a  ld   $5a         ;15bc 'Newline'
              798f 0011  ld   $11         ;15be LDWI
              7990 0000  ld   $00
              7991 0001  ld   $01
              7992 00ad  ld   $ad         ;15c1 PEEK
              7993 008c  ld   $8c         ;15c2 XORI
              7994 0008  ld   $08
              7995 0035  ld   $35         ;15c4 BCC
              7996 0072  ld   $72         ;15c5 NE
              7997 00ba  ld   $ba
              7998 0059  ld   $59         ;15c7 LDI
              7999 0008  ld   $08
              799a 005e  ld   $5e         ;15c9 ST
              799b 0031  ld   $31         ;15c9 'Pos'+1
              799c 00cf  ld   $cf         ;15cb CALL
              799d 0062  ld   $62         ;15cb 'EndOfLine'
              799e 00cf  ld   $cf         ;15cd CALL
              799f 0038  ld   $38         ;15cd 'Keyword'
              79a0 006c  ld   $6c         ;15cf 'l'
              79a1 0069  ld   $69         ;15d0 'i'
              79a2 0073  ld   $73         ;15d1 's'
              79a3 0074  ld   $74         ;15d2 't'
              79a4 0000  ld   $00         ;15d3 0
              79a5 0035  ld   $35         ;15d4 BCC
              79a6 003f  ld   $3f         ;15d5 EQ
              79a7 00d9  ld   $d9
              79a8 00cf  ld   $cf         ;15d7 CALL
              79a9 007e  ld   $7e         ;15d7 'List'
              79aa 00cf  ld   $cf         ;15d9 CALL
              79ab 0062  ld   $62         ;15d9 'EndOfLine'
              79ac 00cf  ld   $cf         ;15db CALL
              79ad 0038  ld   $38         ;15db 'Keyword'
              79ae 0073  ld   $73         ;15dd 's'
              79af 0061  ld   $61         ;15de 'a'
              79b0 0076  ld   $76         ;15df 'v'
              79b1 0065  ld   $65         ;15e0 'e'
              79b2 0000  ld   $00         ;15e1 0
              79b3 0035  ld   $35         ;15e2 BCC
              79b4 003f  ld   $3f         ;15e3 EQ
              79b5 00f1  ld   $f1
              79b6 001a  ld   $1a         ;15e5 LD
              79b7 0021  ld   $21
              79b8 00e6  ld   $e6         ;15e7 SUBI
              79b9 0028  ld   $28
              79ba 0035  ld   $35         ;15e9 BCC
              79bb 0053  ld   $53         ;15ea GE
              79bc 00ec  ld   $ec
              79bd 00cf  ld   $cf         ;15ec CALL
              79be 0046  ld   $46         ;15ec 'ValueError'
              79bf 0011  ld   $11         ;15ee LDWI
              79c0 00a0  ld   $a0
              79c1 0017  ld   $17
              79c2 00cf  ld   $cf         ;15f1 CALL
              79c3 0018  ld   $18         ;15f1 vAC
              79c4 0011  ld   $11         ;15f3 LDWI
              79c5 00eb  ld   $eb
              79c6 000d  ld   $0d
              79c7 00cf  ld   $cf         ;15f6 CALL
              79c8 0018  ld   $18         ;15f6 vAC
              79c9 0016  ld   $16         ;| RAM segment address (high byte first)
              79ca 00a0  ld   $a0         ;|
              79cb 0060  ld   $60         ;| Length (1..256)
              79cc 00cf  ld   $cf         ;16a0 CALL
              79cd 0038  ld   $38         ;16a0 'Keyword'
              79ce 006e  ld   $6e         ;16a2 'n'
              79cf 0065  ld   $65         ;16a3 'e'
              79d0 0077  ld   $77         ;16a4 'w'
              79d1 0000  ld   $00         ;16a5 0
              79d2 0035  ld   $35         ;16a6 BCC
              79d3 003f  ld   $3f         ;16a7 EQ
              79d4 00b0  ld   $b0
              79d5 00cf  ld   $cf         ;16a9 CALL
              79d6 0078  ld   $78         ;16a9 'Clear'
              79d7 002b  ld   $2b         ;16ab STW
              79d8 0048  ld   $48         ;16ab 'End'
              79d9 00cf  ld   $cf         ;16ad CALL
              79da 007e  ld   $7e         ;16ad 'List'
              79db 00cf  ld   $cf         ;16af CALL
              79dc 0056  ld   $56         ;16af 'Prompt'
              79dd 0000  ld   $00         ;16b1 0
              79de 00cf  ld   $cf         ;16b2 CALL
              79df 0038  ld   $38         ;16b2 'Keyword'
              79e0 006c  ld   $6c         ;16b4 'l'
              79e1 0065  ld   $65         ;16b5 'e'
              79e2 0074  ld   $74         ;16b6 't'
              79e3 0000  ld   $00         ;16b7 0
              79e4 00cf  ld   $cf         ;16b8 CALL
              79e5 0042  ld   $42         ;16b8 'Variable'
              79e6 002b  ld   $2b         ;16ba STW
              79e7 0068  ld   $68         ;16ba 'Address'
              79e8 00cf  ld   $cf         ;16bc CALL
              79e9 0034  ld   $34         ;16bc 'Spaces'
              79ea 00cf  ld   $cf         ;16be CALL
              79eb 0038  ld   $38         ;16be 'Keyword'
              79ec 0028  ld   $28         ;16c0 40
              79ed 0000  ld   $00         ;16c1 0
              79ee 0035  ld   $35         ;16c2 BCC
              79ef 003f  ld   $3f         ;16c3 EQ
              79f0 00ef  ld   $ef
              79f1 00cf  ld   $cf         ;16c5 CALL
              79f2 003a  ld   $3a         ;16c5 'Expression'
              79f3 0035  ld   $35         ;16c7 BCC
              79f4 0053  ld   $53         ;16c8 GE
              79f5 00ca  ld   $ca
              79f6 00cf  ld   $cf         ;16ca CALL
              79f7 0046  ld   $46         ;16ca 'ValueError'
              79f8 001a  ld   $1a         ;16cc LD
              79f9 0069  ld   $69         ;16cc 'Address'+1
              79fa 00b8  ld   $b8         ;16ce SUBW
              79fb fe00  bra  ac          ;+-----------------------------------+
              79fc fcfd  bra  $79fd       ;|                                   |
              79fd 1418  ld   $18,y       ;| Trampoline for page $7900 lookups |
              79fe e006  jmp  y,$06       ;|                                   |
              79ff c218  st   [$18]       ;+-----------------------------------+
              7a00 003c  ld   $3c         ;16ce 'Value'
              7a01 00e6  ld   $e6         ;16d0 SUBI
              7a02 0002  ld   $02
              7a03 005e  ld   $5e         ;16d2 ST
              7a04 0069  ld   $69         ;16d2 'Address'+1
              7a05 0021  ld   $21         ;16d4 LDW
              7a06 0048  ld   $48         ;16d4 'End'
              7a07 00fc  ld   $fc         ;16d6 XORW
              7a08 0068  ld   $68         ;16d6 'Address'
              7a09 0035  ld   $35         ;16d8 BCC
              7a0a 0053  ld   $53         ;16d9 GE
              7a0b 00dd  ld   $dd
              7a0c 0021  ld   $21         ;16db LDW
              7a0d 0048  ld   $48         ;16db 'End'
              7a0e 0090  ld   $90         ;16dd BRA
              7a0f 00e1  ld   $e1
              7a10 0021  ld   $21         ;16df LDW
              7a11 0068  ld   $68         ;16df 'Address'
              7a12 00b8  ld   $b8         ;16e1 SUBW
              7a13 0048  ld   $48         ;16e1 'End'
              7a14 0035  ld   $35         ;16e3 BCC
              7a15 0053  ld   $53         ;16e4 GE
              7a16 00e6  ld   $e6
              7a17 00cf  ld   $cf         ;16e6 CALL
              7a18 0046  ld   $46         ;16e6 'ValueError'
              7a19 00cf  ld   $cf         ;16e8 CALL
              7a1a 0038  ld   $38         ;16e8 'Keyword'
              7a1b 0029  ld   $29         ;16ea 41
              7a1c 0000  ld   $00         ;16eb 0
              7a1d 0035  ld   $35         ;16ec BCC
              7a1e 0072  ld   $72         ;16ed NE
              7a1f 00ef  ld   $ef
              7a20 00cf  ld   $cf         ;16ef CALL
              7a21 004a  ld   $4a         ;16ef 'SyntaxError'
              7a22 00cf  ld   $cf         ;16f1 CALL
              7a23 0038  ld   $38         ;16f1 'Keyword'
              7a24 003d  ld   $3d         ;16f3 '='
              7a25 0000  ld   $00         ;16f4 0
              7a26 0035  ld   $35         ;16f5 BCC
              7a27 0072  ld   $72         ;16f6 NE
              7a28 00f8  ld   $f8
              7a29 00cf  ld   $cf         ;16f8 CALL
              7a2a 004a  ld   $4a         ;16f8 'SyntaxError'
              7a2b 00cf  ld   $cf         ;16fa CALL
              7a2c 003a  ld   $3a         ;16fa 'Expression'
              7a2d 00f3  ld   $f3         ;16fc DOKE
              7a2e 0068  ld   $68         ;16fc 'Address'
              7a2f 00cf  ld   $cf         ;16fe CALL
              7a30 0062  ld   $62         ;16fe 'EndOfLine'
              7a31 0017  ld   $17         ;| RAM segment address (high byte first)
              7a32 00a0  ld   $a0         ;|
              7a33 005f  ld   $5f         ;| Length (1..256)
              7a34 0021  ld   $21         ;17a0 LDW
              7a35 0000  ld   $00
              7a36 005e  ld   $5e         ;17a2 ST
              7a37 0027  ld   $27
              7a38 00e6  ld   $e6         ;17a4 SUBI
              7a39 0060  ld   $60
              7a3a 002b  ld   $2b         ;17a6 STW
              7a3b 0068  ld   $68         ;17a6 'Address'
              7a3c 00cd  ld   $cd         ;17a8 DEF
              7a3d 00e8  ld   $e8
              7a3e 0075  ld   $75         ;17aa PUSH
              7a3f 002b  ld   $2b         ;17ab STW
              7a40 0044  ld   $44         ;17ab 'k'
              7a41 001a  ld   $1a         ;17ad LD
              7a42 0027  ld   $27
              7a43 00e3  ld   $e3         ;17af ADDI
              7a44 0008  ld   $08
              7a45 005e  ld   $5e         ;17b1 ST
              7a46 0027  ld   $27
              7a47 001a  ld   $1a         ;17b3 LD
              7a48 0030  ld   $30         ;17b3 'Pos'
              7a49 00e6  ld   $e6         ;17b5 SUBI
              7a4a 0006  ld   $06
              7a4b 0035  ld   $35         ;17b7 BCC
              7a4c 0053  ld   $53         ;17b8 GE
              7a4d 00de  ld   $de
              7a4e 0059  ld   $59         ;17ba LDI
              7a4f 000a  ld   $0a
              7a50 00f0  ld   $f0         ;17bc POKE
              7a51 0068  ld   $68         ;17bc 'Address'
              7a52 0021  ld   $21         ;17be LDW
              7a53 0068  ld   $68         ;17be 'Address'
              7a54 0088  ld   $88         ;17c0 ORI
              7a55 001f  ld   $1f
              7a56 008c  ld   $8c         ;17c2 XORI
              7a57 001f  ld   $1f
              7a58 002b  ld   $2b         ;17c4 STW
              7a59 0068  ld   $68         ;17c4 'Address'
              7a5a 002b  ld   $2b         ;17c6 STW
              7a5b 0024  ld   $24
              7a5c 0059  ld   $59         ;17c8 LDI
              7a5d 0001  ld   $01
              7a5e 005e  ld   $5e         ;17ca ST
              7a5f 0026  ld   $26
              7a60 0011  ld   $11         ;17cc LDWI
              7a61 0006  ld   $06
              7a62 000b  ld   $0b
              7a63 002b  ld   $2b         ;17cf STW
              7a64 0022  ld   $22         ;17cf '_sysFn'
              7a65 00b4  ld   $b4         ;17d1 SYS
              7a66 00e7  ld   $e7
              7a67 0035  ld   $35         ;17d3 BCC
              7a68 003f  ld   $3f         ;17d4 EQ
              7a69 00da  ld   $da
              7a6a 0059  ld   $59         ;17d6 LDI
              7a6b 0003  ld   $03
              7a6c 005e  ld   $5e         ;17d8 ST
              7a6d 000f  ld   $0f
              7a6e 00cf  ld   $cf         ;17da CALL
              7a6f 0058  ld   $58         ;17da 'TestBreak'
              7a70 0059  ld   $59         ;17dc LDI
              7a71 0008  ld   $08
              7a72 005e  ld   $5e         ;17de ST
              7a73 0027  ld   $27
              7a74 0021  ld   $21         ;17e0 LDW
              7a75 0044  ld   $44         ;17e0 'k'
              7a76 00f0  ld   $f0         ;17e2 POKE
              7a77 0068  ld   $68         ;17e2 'Address'
              7a78 0093  ld   $93         ;17e4 INC
              7a79 0068  ld   $68         ;17e4 'Address'
              7a7a 00cf  ld   $cf         ;17e6 CALL
              7a7b 0054  ld   $54         ;17e6 'PrintCharScreen'
              7a7c 0063  ld   $63         ;17e8 POP
              7a7d 00ff  ld   $ff         ;17e9 RET
              7a7e 002b  ld   $2b         ;17ea STW
              7a7f 0050  ld   $50         ;17ea 'PrintChar'
              7a80 001a  ld   $1a         ;17ec LD
              7a81 000f  ld   $0f
              7a82 008c  ld   $8c         ;17ee XORI
              7a83 00ff  ld   $ff
              7a84 0035  ld   $35         ;17f0 BCC
              7a85 0072  ld   $72         ;17f1 NE
              7a86 00ea  ld   $ea
              7a87 00cf  ld   $cf         ;17f3 CALL
              7a88 007e  ld   $7e         ;17f3 'List'
              7a89 0059  ld   $59         ;17f5 LDI
              7a8a 0020  ld   $20
              7a8b 00cf  ld   $cf         ;17f7 CALL
              7a8c 0050  ld   $50         ;17f7 'PrintChar'
              7a8d 0021  ld   $21         ;17f9 LDW
              7a8e 0054  ld   $54         ;17f9 'PrintCharScreen'
              7a8f 002b  ld   $2b         ;17fb STW
              7a90 0050  ld   $50         ;17fb 'PrintChar'
              7a91 00cf  ld   $cf         ;17fd CALL
              7a92 0062  ld   $62         ;17fd 'EndOfLine'
              7a93 0018  ld   $18         ;| RAM segment address (high byte first)
              7a94 00a0  ld   $a0         ;|
              7a95 0060  ld   $60         ;| Length (1..256)
              7a96 0011  ld   $11         ;18a0 LDWI
              7a97 00e1  ld   $e1
              7a98 0004  ld   $04
              7a99 002b  ld   $2b         ;18a3 STW
              7a9a 0022  ld   $22         ;18a3 '_sysFn'
              7a9b 0059  ld   $59         ;18a5 LDI
              7a9c 0000  ld   $00
              7a9d 005e  ld   $5e         ;18a7 ST
              7a9e 0030  ld   $30         ;18a7 'Pos'
              7a9f 005e  ld   $5e         ;18a9 ST
              7aa0 0026  ld   $26
              7aa1 001a  ld   $1a         ;18ab LD
              7aa2 0031  ld   $31         ;18ab 'Pos'+1
              7aa3 00e3  ld   $e3         ;18ad ADDI
              7aa4 000f  ld   $0f
              7aa5 0082  ld   $82         ;18af ANDI
              7aa6 0078  ld   $78
              7aa7 0035  ld   $35         ;18b1 BCC
              7aa8 0072  ld   $72         ;18b2 NE
              7aa9 00b4  ld   $b4
              7aaa 0059  ld   $59         ;18b4 LDI
              7aab 0008  ld   $08
              7aac 005e  ld   $5e         ;18b6 ST
              7aad 0031  ld   $31         ;18b6 'Pos'+1
              7aae 0021  ld   $21         ;18b8 LDW
              7aaf 002a  ld   $2a
              7ab0 002b  ld   $2b         ;18ba STW
              7ab1 0024  ld   $24
              7ab2 0021  ld   $21         ;18bc LDW
              7ab3 0030  ld   $30         ;18bc 'Pos'
              7ab4 002b  ld   $2b         ;18be STW
              7ab5 0028  ld   $28
              7ab6 00b4  ld   $b4         ;18c0 SYS
              7ab7 00cc  ld   $cc
              7ab8 0093  ld   $93         ;18c2 INC
              7ab9 0028  ld   $28
              7aba 00b4  ld   $b4         ;18c4 SYS
              7abb 00cc  ld   $cc
              7abc 0093  ld   $93         ;18c6 INC
              7abd 0028  ld   $28
              7abe 001a  ld   $1a         ;18c8 LD
              7abf 0028  ld   $28
              7ac0 008c  ld   $8c         ;18ca XORI
              7ac1 00a0  ld   $a0
              7ac2 0035  ld   $35         ;18cc BCC
              7ac3 0072  ld   $72         ;18cd NE
              7ac4 00be  ld   $be
              7ac5 0011  ld   $11         ;18cf LDWI
              7ac6 0000  ld   $00
              7ac7 0001  ld   $01
              7ac8 002b  ld   $2b         ;18d2 STW
              7ac9 0040  ld   $40         ;18d2 'i'
              7aca 0088  ld   $88         ;18d4 ORI
              7acb 00ff  ld   $ff
              7acc 00f6  ld   $f6         ;18d6 DEEK
              7acd 00b8  ld   $b8         ;18d7 SUBW
              7ace 0030  ld   $30         ;18d7 'Pos'
              7acf 001a  ld   $1a         ;18d9 LD
              7ad0 0019  ld   $19
              7ad1 0035  ld   $35         ;18db BCC
              7ad2 0072  ld   $72         ;18dc NE
              7ad3 00f9  ld   $f9
              7ad4 0021  ld   $21         ;18de LDW
              7ad5 0040  ld   $40         ;18de 'i'
              7ad6 00e3  ld   $e3         ;18e0 ADDI
              7ad7 0010  ld   $10
              7ad8 002b  ld   $2b         ;18e2 STW
              7ad9 0024  ld   $24         ;18e2 '_sysArgs0'
              7ada 00ad  ld   $ad         ;18e4 PEEK
              7adb 005e  ld   $5e         ;18e5 ST
              7adc 0026  ld   $26
              7add 0021  ld   $21         ;18e7 LDW
              7ade 0040  ld   $40         ;18e7 'i'
              7adf 00ad  ld   $ad         ;18e9 PEEK
              7ae0 00f0  ld   $f0         ;18ea POKE
              7ae1 0024  ld   $24         ;18ea '_sysArgs0'
              7ae2 001a  ld   $1a         ;18ec LD
              7ae3 0026  ld   $26
              7ae4 00f0  ld   $f0         ;18ee POKE
              7ae5 0040  ld   $40         ;18ee 'i'
              7ae6 0093  ld   $93         ;18f0 INC
              7ae7 0040  ld   $40         ;18f0 'i'
              7ae8 0093  ld   $93         ;18f2 INC
              7ae9 0040  ld   $40         ;18f2 'i'
              7aea 001a  ld   $1a         ;18f4 LD
              7aeb 0040  ld   $40         ;18f4 'i'
              7aec 008c  ld   $8c         ;18f6 XORI
              7aed 00e0  ld   $e0
              7aee 0035  ld   $35         ;18f8 BCC
              7aef 0072  ld   $72         ;18f9 NE
              7af0 00dc  ld   $dc
              7af1 0093  ld   $93         ;18fb INC
              7af2 0030  ld   $30         ;18fb 'Pos'
              7af3 0093  ld   $93         ;18fd INC
              7af4 0030  ld   $30         ;18fd 'Pos'
              7af5 00ff  ld   $ff         ;18ff RET
              7af6 0019  ld   $19         ;| RAM segment address (high byte first)
              7af7 00a0  ld   $a0         ;|
              7af8 0060  ld   $60         ;| Length (1..256)
              7af9 0059  ld   $59         ;19a0 LDI
              7afa 0001  ld   $01
              7afb fe00  bra  ac          ;+-----------------------------------+
              7afc fcfd  bra  $7afd       ;|                                   |
              7afd 1418  ld   $18,y       ;| Trampoline for page $7a00 lookups |
              7afe e006  jmp  y,$06       ;|                                   |
              7aff c218  st   [$18]       ;+-----------------------------------+
              7b00 002b  ld   $2b         ;19a2 STW
              7b01 0024  ld   $24
              7b02 0011  ld   $11         ;19a4 LDWI
              7b03 0000  ld   $00
              7b04 0001  ld   $01
              7b05 002b  ld   $2b         ;19a7 STW
              7b06 0026  ld   $26
              7b07 00cf  ld   $cf         ;19a9 CALL
              7b08 003a  ld   $3a         ;19a9 'Expression'
              7b09 0075  ld   $75         ;19ab PUSH
              7b0a 00ec  ld   $ec         ;19ac STLW
              7b0b 0000  ld   $00
              7b0c 00cf  ld   $cf         ;19ae CALL
              7b0d 0038  ld   $38         ;19ae 'Keyword'
              7b0e 002c  ld   $2c         ;19b0 ','
              7b0f 0000  ld   $00         ;19b1 0
              7b10 0035  ld   $35         ;19b2 BCC
              7b11 0072  ld   $72         ;19b3 NE
              7b12 00b5  ld   $b5
              7b13 00cf  ld   $cf         ;19b5 CALL
              7b14 004a  ld   $4a         ;19b5 'SyntaxError'
              7b15 00cf  ld   $cf         ;19b7 CALL
              7b16 003a  ld   $3a         ;19b7 'Expression'
              7b17 002b  ld   $2b         ;19b9 STW
              7b18 006a  ld   $6a         ;19b9 'j'
              7b19 0035  ld   $35         ;19bb BCC
              7b1a 0053  ld   $53         ;19bc GE
              7b1b 00c8  ld   $c8
              7b1c 0059  ld   $59         ;19be LDI
              7b1d 0000  ld   $00
              7b1e 00b8  ld   $b8         ;19c0 952
              7b1f 0026  ld   $26         ;19c1 38
              7b20 002b  ld   $2b         ;19c2 STW
              7b21 0026  ld   $26
              7b22 0059  ld   $59         ;19c4 LDI
              7b23 0000  ld   $00
              7b24 00b8  ld   $b8         ;19c6 SUBW
              7b25 006a  ld   $6a         ;19c6 'j'
              7b26 002b  ld   $2b         ;19c8 STW
              7b27 006a  ld   $6a         ;19c8 'j'
              7b28 00ee  ld   $ee         ;19ca LDLW
              7b29 0000  ld   $00
              7b2a 002b  ld   $2b         ;19cc STW
              7b2b 0040  ld   $40         ;19cc 'i'
              7b2c 0035  ld   $35         ;19ce BCC
              7b2d 0053  ld   $53         ;19cf GE
              7b2e 00db  ld   $db
              7b2f 0059  ld   $59         ;19d1 LDI
              7b30 0000  ld   $00
              7b31 00b8  ld   $b8         ;19d3 952
              7b32 0024  ld   $24         ;19d4 36
              7b33 002b  ld   $2b         ;19d5 STW
              7b34 0024  ld   $24
              7b35 0059  ld   $59         ;19d7 LDI
              7b36 0000  ld   $00
              7b37 00b8  ld   $b8         ;19d9 SUBW
              7b38 0040  ld   $40         ;19d9 'i'
              7b39 002b  ld   $2b         ;19db STW
              7b3a 0040  ld   $40         ;19db 'i'
              7b3b 00b8  ld   $b8         ;19dd SUBW
              7b3c 006a  ld   $6a         ;19dd 'j'
              7b3d 0035  ld   $35         ;19df BCC
              7b3e 0053  ld   $53         ;19e0 GE
              7b3f 00f8  ld   $f8
              7b40 0021  ld   $21         ;19e2 LDW
              7b41 0040  ld   $40         ;19e2 'i'
              7b42 002b  ld   $2b         ;19e4 STW
              7b43 004e  ld   $4e         ;19e4 'tmp'
              7b44 0021  ld   $21         ;19e6 LDW
              7b45 006a  ld   $6a         ;19e6 'j'
              7b46 002b  ld   $2b         ;19e8 STW
              7b47 0040  ld   $40         ;19e8 'i'
              7b48 0021  ld   $21         ;19ea LDW
              7b49 004e  ld   $4e         ;19ea 'tmp'
              7b4a 002b  ld   $2b         ;19ec STW
              7b4b 006a  ld   $6a         ;19ec 'j'
              7b4c 0021  ld   $21         ;19ee LDW
              7b4d 0024  ld   $24
              7b4e 002b  ld   $2b         ;19f0 STW
              7b4f 004e  ld   $4e         ;19f0 'tmp'
              7b50 0021  ld   $21         ;19f2 LDW
              7b51 0026  ld   $26
              7b52 002b  ld   $2b         ;19f4 STW
              7b53 0024  ld   $24
              7b54 0021  ld   $21         ;19f6 LDW
              7b55 004e  ld   $4e         ;19f6 'tmp'
              7b56 002b  ld   $2b         ;19f8 STW
              7b57 0026  ld   $26
              7b58 0063  ld   $63         ;19fa POP
              7b59 0011  ld   $11         ;19fb LDWI
              7b5a 00a0  ld   $a0
              7b5b 001a  ld   $1a
              7b5c 00cf  ld   $cf         ;19fe CALL
              7b5d 0018  ld   $18         ;19fe vAC
              7b5e 001a  ld   $1a         ;| RAM segment address (high byte first)
              7b5f 00a0  ld   $a0         ;|
              7b60 0060  ld   $60         ;| Length (1..256)
              7b61 0021  ld   $21         ;1aa0 LDW
              7b62 003c  ld   $3c         ;1aa0 'Value'
              7b63 0035  ld   $35         ;1aa2 BCC
              7b64 0053  ld   $53         ;1aa3 GE
              7b65 00a8  ld   $a8
              7b66 0011  ld   $11         ;1aa5 LDWI
              7b67 0000  ld   $00
              7b68 0078  ld   $78
              7b69 0090  ld   $90         ;1aa8 BRA
              7b6a 00ab  ld   $ab
              7b6b 0011  ld   $11         ;1aaa LDWI
              7b6c 0000  ld   $00
              7b6d 0088  ld   $88
              7b6e 002b  ld   $2b         ;1aad STW
              7b6f 0028  ld   $28
              7b70 0021  ld   $21         ;1aaf LDW
              7b71 0040  ld   $40         ;1aaf 'i'
              7b72 002b  ld   $2b         ;1ab1 STW
              7b73 004e  ld   $4e         ;1ab1 'tmp'
              7b74 002b  ld   $2b         ;1ab3 STW
              7b75 0044  ld   $44         ;1ab3 'k'
              7b76 001a  ld   $1a         ;1ab5 LD
              7b77 002b  ld   $2b
              7b78 00f0  ld   $f0         ;1ab7 POKE
              7b79 0030  ld   $30         ;1ab7 'Pos'
              7b7a 0021  ld   $21         ;1ab9 LDW
              7b7b 004e  ld   $4e         ;1ab9 'tmp'
              7b7c 00e6  ld   $e6         ;1abb SUBI
              7b7d 0001  ld   $01
              7b7e 002b  ld   $2b         ;1abd STW
              7b7f 004e  ld   $4e         ;1abd 'tmp'
              7b80 0035  ld   $35         ;1abf BCC
              7b81 0050  ld   $50         ;1ac0 LT
              7b82 00fc  ld   $fc
              7b83 0021  ld   $21         ;1ac2 LDW
              7b84 0044  ld   $44         ;1ac2 'k'
              7b85 00b8  ld   $b8         ;1ac4 SUBW
              7b86 006a  ld   $6a         ;1ac4 'j'
              7b87 00b8  ld   $b8         ;1ac6 SUBW
              7b88 006a  ld   $6a         ;1ac6 'j'
              7b89 002b  ld   $2b         ;1ac8 STW
              7b8a 0044  ld   $44         ;1ac8 'k'
              7b8b 0035  ld   $35         ;1aca BCC
              7b8c 0053  ld   $53         ;1acb GE
              7b8d 00d7  ld   $d7
              7b8e 0099  ld   $99         ;1acd ADDW
              7b8f 0040  ld   $40         ;1acd 'i'
              7b90 0099  ld   $99         ;1acf ADDW
              7b91 0040  ld   $40         ;1acf 'i'
              7b92 002b  ld   $2b         ;1ad1 STW
              7b93 0044  ld   $44         ;1ad1 'k'
              7b94 0021  ld   $21         ;1ad3 LDW
              7b95 0026  ld   $26
              7b96 0099  ld   $99         ;1ad5 ADDW
              7b97 0030  ld   $30         ;1ad5 'Pos'
              7b98 002b  ld   $2b         ;1ad7 STW
              7b99 0030  ld   $30         ;1ad7 'Pos'
              7b9a 0021  ld   $21         ;1ad9 LDW
              7b9b 0024  ld   $24
              7b9c 0099  ld   $99         ;1adb ADDW
              7b9d 0030  ld   $30         ;1adb 'Pos'
              7b9e 002b  ld   $2b         ;1add STW
              7b9f 0030  ld   $30         ;1add 'Pos'
              7ba0 001a  ld   $1a         ;1adf LD
              7ba1 0030  ld   $30         ;1adf 'Pos'
              7ba2 00e6  ld   $e6         ;1ae1 SUBI
              7ba3 00a0  ld   $a0
              7ba4 0035  ld   $35         ;1ae3 BCC
              7ba5 0050  ld   $50         ;1ae4 LT
              7ba6 00ed  ld   $ed
              7ba7 0035  ld   $35         ;1ae6 BCC
              7ba8 0056  ld   $56         ;1ae7 LE
              7ba9 00eb  ld   $eb
              7baa 0093  ld   $93         ;1ae9 INC
              7bab 0031  ld   $31         ;1ae9 'Pos'+1
              7bac 00e3  ld   $e3         ;1aeb ADDI
              7bad 0040  ld   $40
              7bae 005e  ld   $5e         ;1aed ST
              7baf 0030  ld   $30         ;1aed 'Pos'
              7bb0 001a  ld   $1a         ;1aef LD
              7bb1 0031  ld   $31         ;1aef 'Pos'+1
              7bb2 0082  ld   $82         ;1af1 ANDI
              7bb3 0078  ld   $78
              7bb4 0035  ld   $35         ;1af3 BCC
              7bb5 0072  ld   $72         ;1af4 NE
              7bb6 00fa  ld   $fa
              7bb7 0021  ld   $21         ;1af6 LDW
              7bb8 0028  ld   $28
              7bb9 0099  ld   $99         ;1af8 ADDW
              7bba 0030  ld   $30         ;1af8 'Pos'
              7bbb 002b  ld   $2b         ;1afa STW
              7bbc 0030  ld   $30         ;1afa 'Pos'
              7bbd 0090  ld   $90         ;1afc BRA
              7bbe 00b3  ld   $b3
              7bbf 00cf  ld   $cf         ;1afe CALL
              7bc0 0062  ld   $62         ;1afe 'EndOfLine'
              7bc1 001b  ld   $1b         ;| RAM segment address (high byte first)
              7bc2 00a0  ld   $a0         ;|
              7bc3 0006  ld   $06         ;| Length (1..256)
              7bc4 00a0  ld   $a0         ;1ba0 _Buffer
              7bc5 001b  ld   $1b
              7bc6 004e  ld   $4e         ;1ba2 'N'
              7bc7 0045  ld   $45         ;1ba3 'E'
              7bc8 0057  ld   $57         ;1ba4 'W'
              7bc9 0000  ld   $00         ;1ba5 0
              7bca 0000  ld   $00         ;End of Apps/TinyBASIC/TinyBASIC_v4.gcl, size 3194
                                          ;+-----------------------------------+
                                          ;| Apps/TicTac/LoadTicTac_v1.gcl     |
                                          ;+-----------------------------------+
              7bcb dc54  st   $54,[y,x++] ;'T'
              7bcc dc69  st   $69,[y,x++] ;'i'
              7bcd dc6e  st   $6e,[y,x++] ;'n'
              7bce dc79  st   $79,[y,x++] ;'y'
              7bcf dc42  st   $42,[y,x++] ;'B'
              7bd0 dc41  st   $41,[y,x++] ;'A'
              7bd1 dc53  st   $53,[y,x++] ;'S'
              7bd2 dc49  st   $49,[y,x++] ;'I'
              7bd3 0051  ld   $51
              7bd4 c218  st   [$18]
              7bd5 006f  ld   $6f
              7bd6 14e0  ld   $e0,y
              7bd7 e071  jmp  y,$71
              7bd8 c219  st   [$19]
TicTac:       7bd9 0002  ld   $02         ;| RAM segment address (high byte first)
              7bda 0000  ld   $00         ;|
              7bdb 0010  ld   $10         ;| Length (1..256)
              7bdc 0059  ld   $59         ;0200 LDI
              7bdd 00ad  ld   $ad
              7bde 002b  ld   $2b         ;0202 STW
              7bdf 0022  ld   $22         ;0202 '_sysFn'
              7be0 0011  ld   $11         ;0204 LDWI
              7be1 00a0  ld   $a0
              7be2 00ff  ld   $ff
              7be3 002b  ld   $2b         ;0207 STW
              7be4 001a  ld   $1a         ;0207 '_vLR'
              7be5 0011  ld   $11         ;0209 LDWI
              7be6 0051  ld   $51
              7be7 006f  ld   $6f
              7be8 002b  ld   $2b         ;020c STW
              7be9 0024  ld   $24         ;020c '_sysArgs0'
              7bea 00b4  ld   $b4         ;020e SYS
              7beb 00e3  ld   $e3
              7bec 00ff  ld   $ff         ;| RAM segment address (high byte first)
              7bed 00a0  ld   $a0         ;|
              7bee 000c  ld   $0c         ;| Length (1..256)
              7bef 0011  ld   $11         ;ffa0 LDWI
              7bf0 0000  ld   $00
              7bf1 0002  ld   $02
              7bf2 002b  ld   $2b         ;ffa3 STW
              7bf3 001a  ld   $1a         ;ffa3 '_vLR'
              7bf4 0011  ld   $11         ;ffa5 LDWI
              7bf5 0001  ld   $01
              7bf6 007c  ld   $7c
              7bf7 002b  ld   $2b         ;ffa8 STW
              7bf8 0024  ld   $24         ;ffa8 '_sysArgs0'
              7bf9 00b4  ld   $b4         ;ffaa SYS
              7bfa 00e3  ld   $e3
              7bfb fe00  bra  ac          ;+-----------------------------------+
              7bfc fcfd  bra  $7bfd       ;|                                   |
              7bfd 1418  ld   $18,y       ;| Trampoline for page $7b00 lookups |
              7bfe e006  jmp  y,$06       ;|                                   |
              7bff c218  st   [$18]       ;+-----------------------------------+
              7c00 0000  ld   $00         ;End of Apps/TicTac/LoadTicTac_v1.gcl, size 40
                                          ;+-----------------------------------+
                                          ;| Apps/TicTac/TicTac_v2.gtb         |
                                          ;+-----------------------------------+
TicTacGtb:    7c01 001b  ld   $1b
              7c02 00c0  ld   $c0
              7c03 0019  ld   $19
              7c04 0064  ld   $64
              7c05 0000  ld   $00
              7c06 0027  ld   $27         ;"'"
              7c07 0054  ld   $54         ;'T'
              7c08 0049  ld   $49         ;'I'
              7c09 0043  ld   $43         ;'C'
              7c0a 002d  ld   $2d         ;'-'
              7c0b 0054  ld   $54         ;'T'
              7c0c 0041  ld   $41         ;'A'
              7c0d 0043  ld   $43         ;'C'
              7c0e 002d  ld   $2d         ;'-'
              7c0f 0054  ld   $54         ;'T'
              7c10 004f  ld   $4f         ;'O'
              7c11 0045  ld   $45         ;'E'
              7c12 002e  ld   $2e         ;'.'
              7c13 0020  ld   $20         ;' '
              7c14 0059  ld   $59         ;'Y'
              7c15 004f  ld   $4f         ;'O'
              7c16 0055  ld   $55         ;'U'
              7c17 0020  ld   $20         ;' '
              7c18 0028  ld   $28         ;'('
              7c19 0058  ld   $58         ;'X'
              7c1a 0029  ld   $29         ;')'
              7c1b 0020  ld   $20         ;' '
              7c1c 0000  ld   $00         ;'\x00'
              7c1d 001b  ld   $1b
              7c1e 00e0  ld   $e0
              7c1f 0015  ld   $15
              7c20 00d2  ld   $d2
              7c21 0000  ld   $00
              7c22 003f  ld   $3f         ;'?'
              7c23 0022  ld   $22         ;'"'
              7c24 0054  ld   $54         ;'T'
              7c25 004f  ld   $4f         ;'O'
              7c26 004d  ld   $4d         ;'M'
              7c27 0020  ld   $20         ;' '
              7c28 0050  ld   $50         ;'P'
              7c29 0049  ld   $49         ;'I'
              7c2a 0054  ld   $54         ;'T'
              7c2b 0054  ld   $54         ;'T'
              7c2c 004d  ld   $4d         ;'M'
              7c2d 0041  ld   $41         ;'A'
              7c2e 004e  ld   $4e         ;'N'
              7c2f 0027  ld   $27         ;"'"
              7c30 0053  ld   $53         ;'S'
              7c31 0020  ld   $20         ;' '
              7c32 0022  ld   $22         ;'"'
              7c33 003b  ld   $3b         ;';'
              7c34 0000  ld   $00         ;'\x00'
              7c35 001c  ld   $1c
              7c36 00a0  ld   $a0
              7c37 0012  ld   $12
              7c38 00d3  ld   $d3
              7c39 0000  ld   $00
              7c3a 003f  ld   $3f         ;'?'
              7c3b 0022  ld   $22         ;'"'
              7c3c 0054  ld   $54         ;'T'
              7c3d 0049  ld   $49         ;'I'
              7c3e 0043  ld   $43         ;'C'
              7c3f 002d  ld   $2d         ;'-'
              7c40 0054  ld   $54         ;'T'
              7c41 0041  ld   $41         ;'A'
              7c42 0043  ld   $43         ;'C'
              7c43 002d  ld   $2d         ;'-'
              7c44 0054  ld   $54         ;'T'
              7c45 004f  ld   $4f         ;'O'
              7c46 0045  ld   $45         ;'E'
              7c47 002e  ld   $2e         ;'.'
              7c48 0022  ld   $22         ;'"'
              7c49 0000  ld   $00         ;'\x00'
              7c4a 001c  ld   $1c
              7c4b 00c0  ld   $c0
              7c4c 0012  ld   $12
              7c4d 00d4  ld   $d4
              7c4e 0000  ld   $00
              7c4f 003f  ld   $3f         ;'?'
              7c50 0022  ld   $22         ;'"'
              7c51 0059  ld   $59         ;'Y'
              7c52 004f  ld   $4f         ;'O'
              7c53 0055  ld   $55         ;'U'
              7c54 0020  ld   $20         ;' '
              7c55 0041  ld   $41         ;'A'
              7c56 0047  ld   $47         ;'G'
              7c57 0041  ld   $41         ;'A'
              7c58 0049  ld   $49         ;'I'
              7c59 004e  ld   $4e         ;'N'
              7c5a 0053  ld   $53         ;'S'
              7c5b 0054  ld   $54         ;'T'
              7c5c 0022  ld   $22         ;'"'
              7c5d 003b  ld   $3b         ;';'
              7c5e 0000  ld   $00         ;'\x00'
              7c5f 001c  ld   $1c
              7c60 00e0  ld   $e0
              7c61 0011  ld   $11
              7c62 00d5  ld   $d5
              7c63 0000  ld   $00
              7c64 003f  ld   $3f         ;'?'
              7c65 0022  ld   $22         ;'"'
              7c66 0020  ld   $20         ;' '
              7c67 0054  ld   $54         ;'T'
              7c68 0049  ld   $49         ;'I'
              7c69 004e  ld   $4e         ;'N'
              7c6a 0059  ld   $59         ;'Y'
              7c6b 0020  ld   $20         ;' '
              7c6c 0042  ld   $42         ;'B'
              7c6d 0041  ld   $41         ;'A'
              7c6e 0053  ld   $53         ;'S'
              7c6f 0049  ld   $49         ;'I'
              7c70 0043  ld   $43         ;'C'
              7c71 0022  ld   $22         ;'"'
              7c72 0000  ld   $00         ;'\x00'
              7c73 001d  ld   $1d
              7c74 00a0  ld   $a0
              7c75 0016  ld   $16
              7c76 00dd  ld   $dd
              7c77 0000  ld   $00
              7c78 003f  ld   $3f         ;'?'
              7c79 0022  ld   $22         ;'"'
              7c7a 0059  ld   $59         ;'Y'
              7c7b 004f  ld   $4f         ;'O'
              7c7c 0055  ld   $55         ;'U'
              7c7d 0020  ld   $20         ;' '
              7c7e 0041  ld   $41         ;'A'
              7c7f 0052  ld   $52         ;'R'
              7c80 0045  ld   $45         ;'E'
              7c81 0020  ld   $20         ;' '
              7c82 0058  ld   $58         ;'X'
              7c83 002e  ld   $2e         ;'.'
              7c84 0020  ld   $20         ;' '
              7c85 0049  ld   $49         ;'I'
              7c86 0020  ld   $20         ;' '
              7c87 0041  ld   $41         ;'A'
              7c88 004d  ld   $4d         ;'M'
              7c89 0022  ld   $22         ;'"'
              7c8a 003b  ld   $3b         ;';'
              7c8b 0000  ld   $00         ;'\x00'
              7c8c 001d  ld   $1d
              7c8d 00c0  ld   $c0
              7c8e 000d  ld   $0d
              7c8f 00de  ld   $de
              7c90 0000  ld   $00
              7c91 003f  ld   $3f         ;'?'
              7c92 0022  ld   $22         ;'"'
              7c93 0020  ld   $20         ;' '
              7c94 004f  ld   $4f         ;'O'
              7c95 002e  ld   $2e         ;'.'
              7c96 0020  ld   $20         ;' '
              7c97 0059  ld   $59         ;'Y'
              7c98 004f  ld   $4f         ;'O'
              7c99 0055  ld   $55         ;'U'
              7c9a 0022  ld   $22         ;'"'
              7c9b 0000  ld   $00         ;'\x00'
              7c9c 001d  ld   $1d
              7c9d 00e0  ld   $e0
              7c9e 0010  ld   $10
              7c9f 00e7  ld   $e7
              7ca0 0000  ld   $00
              7ca1 003f  ld   $3f         ;'?'
              7ca2 0022  ld   $22         ;'"'
              7ca3 0050  ld   $50         ;'P'
              7ca4 004c  ld   $4c         ;'L'
              7ca5 0041  ld   $41         ;'A'
              7ca6 0059  ld   $59         ;'Y'
              7ca7 0020  ld   $20         ;' '
              7ca8 0059  ld   $59         ;'Y'
              7ca9 004f  ld   $4f         ;'O'
              7caa 0055  ld   $55         ;'U'
              7cab 0052  ld   $52         ;'R'
              7cac 0022  ld   $22         ;'"'
              7cad 003b  ld   $3b         ;';'
              7cae 0000  ld   $00         ;'\x00'
              7caf 001e  ld   $1e
              7cb0 00a0  ld   $a0
              7cb1 0015  ld   $15
              7cb2 00e8  ld   $e8
              7cb3 0000  ld   $00
              7cb4 003f  ld   $3f         ;'?'
              7cb5 0022  ld   $22         ;'"'
              7cb6 0020  ld   $20         ;' '
              7cb7 0054  ld   $54         ;'T'
              7cb8 0055  ld   $55         ;'U'
              7cb9 0052  ld   $52         ;'R'
              7cba 004e  ld   $4e         ;'N'
              7cbb 0020  ld   $20         ;' '
              7cbc 0042  ld   $42         ;'B'
              7cbd 0059  ld   $59         ;'Y'
              7cbe 0020  ld   $20         ;' '
              7cbf 0054  ld   $54         ;'T'
              7cc0 0059  ld   $59         ;'Y'
              7cc1 0050  ld   $50         ;'P'
              7cc2 0049  ld   $49         ;'I'
              7cc3 004e  ld   $4e         ;'N'
              7cc4 0047  ld   $47         ;'G'
              7cc5 0022  ld   $22         ;'"'
              7cc6 0000  ld   $00         ;'\x00'
              7cc7 001e  ld   $1e
              7cc8 00c0  ld   $c0
              7cc9 0016  ld   $16
              7cca 00e9  ld   $e9
              7ccb 0000  ld   $00
              7ccc 003f  ld   $3f         ;'?'
              7ccd 0022  ld   $22         ;'"'
              7cce 0054  ld   $54         ;'T'
              7ccf 0048  ld   $48         ;'H'
              7cd0 0045  ld   $45         ;'E'
              7cd1 0020  ld   $20         ;' '
              7cd2 004e  ld   $4e         ;'N'
              7cd3 0055  ld   $55         ;'U'
              7cd4 004d  ld   $4d         ;'M'
              7cd5 0042  ld   $42         ;'B'
              7cd6 0045  ld   $45         ;'E'
              7cd7 0052  ld   $52         ;'R'
              7cd8 0020  ld   $20         ;' '
              7cd9 004f  ld   $4f         ;'O'
              7cda 0046  ld   $46         ;'F'
              7cdb 0020  ld   $20         ;' '
              7cdc 0041  ld   $41         ;'A'
              7cdd 0022  ld   $22         ;'"'
              7cde 003b  ld   $3b         ;';'
              7cdf 0000  ld   $00         ;'\x00'
              7ce0 001e  ld   $1e
              7ce1 00e0  ld   $e0
              7ce2 000e  ld   $0e
              7ce3 00ea  ld   $ea
              7ce4 0000  ld   $00
              7ce5 003f  ld   $3f         ;'?'
              7ce6 0022  ld   $22         ;'"'
              7ce7 0020  ld   $20         ;' '
              7ce8 0053  ld   $53         ;'S'
              7ce9 0051  ld   $51         ;'Q'
              7cea 0055  ld   $55         ;'U'
              7ceb 0041  ld   $41         ;'A'
              7cec 0052  ld   $52         ;'R'
              7ced 0045  ld   $45         ;'E'
              7cee 002e  ld   $2e         ;'.'
              7cef 0022  ld   $22         ;'"'
              7cf0 0000  ld   $00         ;'\x00'
              7cf1 001f  ld   $1f
              7cf2 00a0  ld   $a0
              7cf3 0006  ld   $06
              7cf4 00f0  ld   $f0
              7cf5 0000  ld   $00
              7cf6 0041  ld   $41         ;'A'
              7cf7 003d  ld   $3d         ;'='
              7cf8 0030  ld   $30         ;'0'
              7cf9 0000  ld   $00         ;'\x00'
              7cfa 001f  ld   $1f
              7cfb fe00  bra  ac          ;+-----------------------------------+
              7cfc fcfd  bra  $7cfd       ;|                                   |
              7cfd 1418  ld   $18,y       ;| Trampoline for page $7c00 lookups |
              7cfe e006  jmp  y,$06       ;|                                   |
              7cff c218  st   [$18]       ;+-----------------------------------+
              7d00 00c0  ld   $c0
              7d01 0006  ld   $06
              7d02 00fa  ld   $fa
              7d03 0000  ld   $00
              7d04 0042  ld   $42         ;'B'
              7d05 003d  ld   $3d         ;'='
              7d06 0030  ld   $30         ;'0'
              7d07 0000  ld   $00         ;'\x00'
              7d08 001f  ld   $1f
              7d09 00e0  ld   $e0
              7d0a 0006  ld   $06
              7d0b 0004  ld   $04
              7d0c 0001  ld   $01
              7d0d 0043  ld   $43         ;'C'
              7d0e 003d  ld   $3d         ;'='
              7d0f 0030  ld   $30         ;'0'
              7d10 0000  ld   $00         ;'\x00'
              7d11 0020  ld   $20
              7d12 00a0  ld   $a0
              7d13 0006  ld   $06
              7d14 000e  ld   $0e
              7d15 0001  ld   $01
              7d16 0044  ld   $44         ;'D'
              7d17 003d  ld   $3d         ;'='
              7d18 0030  ld   $30         ;'0'
              7d19 0000  ld   $00         ;'\x00'
              7d1a 0020  ld   $20
              7d1b 00c0  ld   $c0
              7d1c 0006  ld   $06
              7d1d 0018  ld   $18
              7d1e 0001  ld   $01
              7d1f 0045  ld   $45         ;'E'
              7d20 003d  ld   $3d         ;'='
              7d21 0030  ld   $30         ;'0'
              7d22 0000  ld   $00         ;'\x00'
              7d23 0020  ld   $20
              7d24 00e0  ld   $e0
              7d25 0006  ld   $06
              7d26 0022  ld   $22
              7d27 0001  ld   $01
              7d28 0046  ld   $46         ;'F'
              7d29 003d  ld   $3d         ;'='
              7d2a 0030  ld   $30         ;'0'
              7d2b 0000  ld   $00         ;'\x00'
              7d2c 0021  ld   $21
              7d2d 00a0  ld   $a0
              7d2e 0006  ld   $06
              7d2f 00e8  ld   $e8
              7d30 0003  ld   $03
              7d31 0046  ld   $46         ;'F'
              7d32 003d  ld   $3d         ;'='
              7d33 0031  ld   $31         ;'1'
              7d34 0000  ld   $00         ;'\x00'
              7d35 0021  ld   $21
              7d36 00c0  ld   $c0
              7d37 0004  ld   $04
              7d38 00f2  ld   $f2
              7d39 0003  ld   $03
              7d3a 003f  ld   $3f         ;'?'
              7d3b 0000  ld   $00         ;'\x00'
              7d3c 0021  ld   $21
              7d3d 00e0  ld   $e0
              7d3e 000f  ld   $0f
              7d3f 00fc  ld   $fc
              7d40 0003  ld   $03
              7d41 003f  ld   $3f         ;'?'
              7d42 0022  ld   $22         ;'"'
              7d43 004e  ld   $4e         ;'N'
              7d44 0045  ld   $45         ;'E'
              7d45 0057  ld   $57         ;'W'
              7d46 0020  ld   $20         ;' '
              7d47 0047  ld   $47         ;'G'
              7d48 0041  ld   $41         ;'A'
              7d49 004d  ld   $4d         ;'M'
              7d4a 0045  ld   $45         ;'E'
              7d4b 002e  ld   $2e         ;'.'
              7d4c 0022  ld   $22         ;'"'
              7d4d 0000  ld   $00         ;'\x00'
              7d4e 0022  ld   $22
              7d4f 00a0  ld   $a0
              7d50 0006  ld   $06
              7d51 004c  ld   $4c
              7d52 0004  ld   $04
              7d53 0049  ld   $49         ;'I'
              7d54 003d  ld   $3d         ;'='
              7d55 0037  ld   $37         ;'7'
              7d56 0000  ld   $00         ;'\x00'
              7d57 0022  ld   $22
              7d58 00c0  ld   $c0
              7d59 000f  ld   $0f
              7d5a 0056  ld   $56
              7d5b 0004  ld   $04
              7d5c 0041  ld   $41         ;'A'
              7d5d 0028  ld   $28         ;'('
              7d5e 0049  ld   $49         ;'I'
              7d5f 0029  ld   $29         ;')'
              7d60 003d  ld   $3d         ;'='
              7d61 0030  ld   $30         ;'0'
              7d62 003a  ld   $3a         ;':'
              7d63 0049  ld   $49         ;'I'
              7d64 003d  ld   $3d         ;'='
              7d65 0049  ld   $49         ;'I'
              7d66 002b  ld   $2b         ;'+'
              7d67 0031  ld   $31         ;'1'
              7d68 0000  ld   $00         ;'\x00'
              7d69 0022  ld   $22
              7d6a 00e0  ld   $e0
              7d6b 0011  ld   $11
              7d6c 0060  ld   $60
              7d6d 0004  ld   $04
              7d6e 0049  ld   $49         ;'I'
              7d6f 0046  ld   $46         ;'F'
              7d70 0049  ld   $49         ;'I'
              7d71 003c  ld   $3c         ;'<'
              7d72 0031  ld   $31         ;'1'
              7d73 0036  ld   $36         ;'6'
              7d74 0047  ld   $47         ;'G'
              7d75 004f  ld   $4f         ;'O'
              7d76 0054  ld   $54         ;'T'
              7d77 004f  ld   $4f         ;'O'
              7d78 0031  ld   $31         ;'1'
              7d79 0031  ld   $31         ;'1'
              7d7a 0031  ld   $31         ;'1'
              7d7b 0030  ld   $30         ;'0'
              7d7c 0000  ld   $00         ;'\x00'
              7d7d 0023  ld   $23
              7d7e 00a0  ld   $a0
              7d7f 0006  ld   $06
              7d80 006a  ld   $6a
              7d81 0004  ld   $04
              7d82 0055  ld   $55         ;'U'
              7d83 003d  ld   $3d         ;'='
              7d84 0039  ld   $39         ;'9'
              7d85 0000  ld   $00         ;'\x00'
              7d86 0023  ld   $23
              7d87 00c0  ld   $c0
              7d88 0006  ld   $06
              7d89 0074  ld   $74
              7d8a 0004  ld   $04
              7d8b 005a  ld   $5a         ;'Z'
              7d8c 003d  ld   $3d         ;'='
              7d8d 0030  ld   $30         ;'0'
              7d8e 0000  ld   $00         ;'\x00'
              7d8f 0023  ld   $23
              7d90 00e0  ld   $e0
              7d91 0010  ld   $10
              7d92 007f  ld   $7f
              7d93 0004  ld   $04
              7d94 0049  ld   $49         ;'I'
              7d95 0046  ld   $46         ;'F'
              7d96 0046  ld   $46         ;'F'
              7d97 003d  ld   $3d         ;'='
              7d98 0030  ld   $30         ;'0'
              7d99 0047  ld   $47         ;'G'
              7d9a 004f  ld   $4f         ;'O'
              7d9b 0054  ld   $54         ;'T'
              7d9c 004f  ld   $4f         ;'O'
              7d9d 0034  ld   $34         ;'4'
              7d9e 0030  ld   $30         ;'0'
              7d9f 0031  ld   $31         ;'1'
              7da0 0030  ld   $30         ;'0'
              7da1 0000  ld   $00         ;'\x00'
              7da2 0024  ld   $24
              7da3 00a0  ld   $a0
              7da4 000b  ld   $0b
              7da5 0089  ld   $89
              7da6 0004  ld   $04
              7da7 0047  ld   $47         ;'G'
              7da8 004f  ld   $4f         ;'O'
              7da9 0054  ld   $54         ;'T'
              7daa 004f  ld   $4f         ;'O'
              7dab 0032  ld   $32         ;'2'
              7dac 0030  ld   $30         ;'0'
              7dad 0031  ld   $31         ;'1'
              7dae 0030  ld   $30         ;'0'
              7daf 0000  ld   $00         ;'\x00'
              7db0 0024  ld   $24
              7db1 00c0  ld   $c0
              7db2 0006  ld   $06
              7db3 00e6  ld   $e6
              7db4 0005  ld   $05
              7db5 005a  ld   $5a         ;'Z'
              7db6 003d  ld   $3d         ;'='
              7db7 0031  ld   $31         ;'1'
              7db8 0000  ld   $00         ;'\x00'
              7db9 0024  ld   $24
              7dba 00e0  ld   $e0
              7dbb 0006  ld   $06
              7dbc 00f0  ld   $f0
              7dbd 0005  ld   $05
              7dbe 0046  ld   $46         ;'F'
              7dbf 003d  ld   $3d         ;'='
              7dc0 0030  ld   $30         ;'0'
              7dc1 0000  ld   $00         ;'\x00'
              7dc2 0025  ld   $25
              7dc3 00a0  ld   $a0
              7dc4 0006  ld   $06
              7dc5 00da  ld   $da
              7dc6 0007  ld   $07
              7dc7 0049  ld   $49         ;'I'
              7dc8 003d  ld   $3d         ;'='
              7dc9 0036  ld   $36         ;'6'
              7dca 0000  ld   $00         ;'\x00'
              7dcb 0025  ld   $25
              7dcc 00c0  ld   $c0
              7dcd 0008  ld   $08
              7dce 003e  ld   $3e
              7dcf 0008  ld   $08
              7dd0 0049  ld   $49         ;'I'
              7dd1 003d  ld   $3d         ;'='
              7dd2 0049  ld   $49         ;'I'
              7dd3 002b  ld   $2b         ;'+'
              7dd4 0031  ld   $31         ;'1'
              7dd5 0000  ld   $00         ;'\x00'
              7dd6 0025  ld   $25
              7dd7 00e0  ld   $e0
              7dd8 0008  ld   $08
              7dd9 0048  ld   $48
              7dda 0008  ld   $08
              7ddb 003f  ld   $3f         ;'?'
              7ddc 0022  ld   $22         ;'"'
              7ddd 0020  ld   $20         ;' '
              7dde 0022  ld   $22         ;'"'
              7ddf 003b  ld   $3b         ;';'
              7de0 0000  ld   $00         ;'\x00'
              7de1 0026  ld   $26
              7de2 00a0  ld   $a0
              7de3 0013  ld   $13
              7de4 0053  ld   $53
              7de5 0008  ld   $08
              7de6 0047  ld   $47         ;'G'
              7de7 004f  ld   $4f         ;'O'
              7de8 0054  ld   $54         ;'T'
              7de9 004f  ld   $4f         ;'O'
              7dea 0041  ld   $41         ;'A'
              7deb 0028  ld   $28         ;'('
              7dec 0049  ld   $49         ;'I'
              7ded 0029  ld   $29         ;')'
              7dee 002a  ld   $2a         ;'*'
              7def 0032  ld   $32         ;'2'
              7df0 0030  ld   $30         ;'0'
              7df1 002b  ld   $2b         ;'+'
              7df2 0032  ld   $32         ;'2'
              7df3 0032  ld   $32         ;'2'
              7df4 0030  ld   $30         ;'0'
              7df5 0030  ld   $30         ;'0'
              7df6 0000  ld   $00         ;'\x00'
              7df7 0026  ld   $26
              7df8 00c0  ld   $c0
              7df9 0008  ld   $08
              7dfa 0098  ld   $98
              7dfb fe00  bra  ac          ;+-----------------------------------+
              7dfc fcfd  bra  $7dfd       ;|                                   |
              7dfd 1418  ld   $18,y       ;| Trampoline for page $7d00 lookups |
              7dfe e006  jmp  y,$06       ;|                                   |
              7dff c218  st   [$18]       ;+-----------------------------------+
              7e00 0008  ld   $08
              7e01 003f  ld   $3f         ;'?'
              7e02 0049  ld   $49         ;'I'
              7e03 002d  ld   $2d         ;'-'
              7e04 0036  ld   $36         ;'6'
              7e05 003b  ld   $3b         ;';'
              7e06 0000  ld   $00         ;'\x00'
              7e07 0026  ld   $26
              7e08 00e0  ld   $e0
              7e09 000b  ld   $0b
              7e0a 00a2  ld   $a2
              7e0b 0008  ld   $08
              7e0c 0047  ld   $47         ;'G'
              7e0d 004f  ld   $4f         ;'O'
              7e0e 0054  ld   $54         ;'T'
              7e0f 004f  ld   $4f         ;'O'
              7e10 0032  ld   $32         ;'2'
              7e11 0033  ld   $33         ;'3'
              7e12 0030  ld   $30         ;'0'
              7e13 0030  ld   $30         ;'0'
              7e14 0000  ld   $00         ;'\x00'
              7e15 0027  ld   $27
              7e16 00a0  ld   $a0
              7e17 0008  ld   $08
              7e18 00ac  ld   $ac
              7e19 0008  ld   $08
              7e1a 003f  ld   $3f         ;'?'
              7e1b 0022  ld   $22         ;'"'
              7e1c 0058  ld   $58         ;'X'
              7e1d 0022  ld   $22         ;'"'
              7e1e 003b  ld   $3b         ;';'
              7e1f 0000  ld   $00         ;'\x00'
              7e20 0027  ld   $27
              7e21 00c0  ld   $c0
              7e22 000b  ld   $0b
              7e23 00b6  ld   $b6
              7e24 0008  ld   $08
              7e25 0047  ld   $47         ;'G'
              7e26 004f  ld   $4f         ;'O'
              7e27 0054  ld   $54         ;'T'
              7e28 004f  ld   $4f         ;'O'
              7e29 0032  ld   $32         ;'2'
              7e2a 0033  ld   $33         ;'3'
              7e2b 0030  ld   $30         ;'0'
              7e2c 0030  ld   $30         ;'0'
              7e2d 0000  ld   $00         ;'\x00'
              7e2e 0027  ld   $27
              7e2f 00e0  ld   $e0
              7e30 0008  ld   $08
              7e31 00d4  ld   $d4
              7e32 0008  ld   $08
              7e33 003f  ld   $3f         ;'?'
              7e34 0022  ld   $22         ;'"'
              7e35 004f  ld   $4f         ;'O'
              7e36 0022  ld   $22         ;'"'
              7e37 003b  ld   $3b         ;';'
              7e38 0000  ld   $00         ;'\x00'
              7e39 0028  ld   $28
              7e3a 00a0  ld   $a0
              7e3b 0014  ld   $14
              7e3c 00fc  ld   $fc
              7e3d 0008  ld   $08
              7e3e 0049  ld   $49         ;'I'
              7e3f 0046  ld   $46         ;'F'
              7e40 0049  ld   $49         ;'I'
              7e41 002f  ld   $2f         ;'/'
              7e42 0033  ld   $33         ;'3'
              7e43 002a  ld   $2a         ;'*'
              7e44 0033  ld   $33         ;'3'
              7e45 003d  ld   $3d         ;'='
              7e46 0049  ld   $49         ;'I'
              7e47 0047  ld   $47         ;'G'
              7e48 004f  ld   $4f         ;'O'
              7e49 0054  ld   $54         ;'T'
              7e4a 004f  ld   $4f         ;'O'
              7e4b 0032  ld   $32         ;'2'
              7e4c 0034  ld   $34         ;'4'
              7e4d 0030  ld   $30         ;'0'
              7e4e 0030  ld   $30         ;'0'
              7e4f 0000  ld   $00         ;'\x00'
              7e50 0028  ld   $28
              7e51 00c0  ld   $c0
              7e52 0009  ld   $09
              7e53 0006  ld   $06
              7e54 0009  ld   $09
              7e55 003f  ld   $3f         ;'?'
              7e56 0022  ld   $22         ;'"'
              7e57 0020  ld   $20         ;' '
              7e58 007c  ld   $7c         ;'|'
              7e59 0022  ld   $22         ;'"'
              7e5a 003b  ld   $3b         ;';'
              7e5b 0000  ld   $00         ;'\x00'
              7e5c 0028  ld   $28
              7e5d 00e0  ld   $e0
              7e5e 000b  ld   $0b
              7e5f 0010  ld   $10
              7e60 0009  ld   $09
              7e61 0047  ld   $47         ;'G'
              7e62 004f  ld   $4f         ;'O'
              7e63 0054  ld   $54         ;'T'
              7e64 004f  ld   $4f         ;'O'
              7e65 0032  ld   $32         ;'2'
              7e66 0031  ld   $31         ;'1'
              7e67 0031  ld   $31         ;'1'
              7e68 0030  ld   $30         ;'0'
              7e69 0000  ld   $00         ;'\x00'
              7e6a 0029  ld   $29
              7e6b 00a0  ld   $a0
              7e6c 0004  ld   $04
              7e6d 0060  ld   $60
              7e6e 0009  ld   $09
              7e6f 003f  ld   $3f         ;'?'
              7e70 0000  ld   $00         ;'\x00'
              7e71 0029  ld   $29
              7e72 00c0  ld   $c0
              7e73 0011  ld   $11
              7e74 0074  ld   $74
              7e75 0009  ld   $09
              7e76 0049  ld   $49         ;'I'
              7e77 0046  ld   $46         ;'F'
              7e78 0049  ld   $49         ;'I'
              7e79 003d  ld   $3d         ;'='
              7e7a 0031  ld   $31         ;'1'
              7e7b 0035  ld   $35         ;'5'
              7e7c 0047  ld   $47         ;'G'
              7e7d 004f  ld   $4f         ;'O'
              7e7e 0054  ld   $54         ;'T'
              7e7f 004f  ld   $4f         ;'O'
              7e80 0033  ld   $33         ;'3'
              7e81 0030  ld   $30         ;'0'
              7e82 0030  ld   $30         ;'0'
              7e83 0030  ld   $30         ;'0'
              7e84 0000  ld   $00         ;'\x00'
              7e85 0029  ld   $29
              7e86 00e0  ld   $e0
              7e87 0011  ld   $11
              7e88 007e  ld   $7e
              7e89 0009  ld   $09
              7e8a 003f  ld   $3f         ;'?'
              7e8b 0022  ld   $22         ;'"'
              7e8c 002d  ld   $2d         ;'-'
              7e8d 002d  ld   $2d         ;'-'
              7e8e 002d  ld   $2d         ;'-'
              7e8f 002b  ld   $2b         ;'+'
              7e90 002d  ld   $2d         ;'-'
              7e91 002d  ld   $2d         ;'-'
              7e92 002d  ld   $2d         ;'-'
              7e93 002b  ld   $2b         ;'+'
              7e94 002d  ld   $2d         ;'-'
              7e95 002d  ld   $2d         ;'-'
              7e96 002d  ld   $2d         ;'-'
              7e97 0022  ld   $22         ;'"'
              7e98 0000  ld   $00         ;'\x00'
              7e99 002a  ld   $2a
              7e9a 00a0  ld   $a0
              7e9b 000b  ld   $0b
              7e9c 0088  ld   $88
              7e9d 0009  ld   $09
              7e9e 0047  ld   $47         ;'G'
              7e9f 004f  ld   $4f         ;'O'
              7ea0 0054  ld   $54         ;'T'
              7ea1 004f  ld   $4f         ;'O'
              7ea2 0032  ld   $32         ;'2'
              7ea3 0031  ld   $31         ;'1'
              7ea4 0031  ld   $31         ;'1'
              7ea5 0030  ld   $30         ;'0'
              7ea6 0000  ld   $00         ;'\x00'
              7ea7 002a  ld   $2a
              7ea8 00c0  ld   $c0
              7ea9 0010  ld   $10
              7eaa 00b8  ld   $b8
              7eab 000b  ld   $0b
              7eac 0049  ld   $49         ;'I'
              7ead 0046  ld   $46         ;'F'
              7eae 005a  ld   $5a         ;'Z'
              7eaf 003d  ld   $3d         ;'='
              7eb0 0030  ld   $30         ;'0'
              7eb1 0047  ld   $47         ;'G'
              7eb2 004f  ld   $4f         ;'O'
              7eb3 0054  ld   $54         ;'T'
              7eb4 004f  ld   $4f         ;'O'
              7eb5 0033  ld   $33         ;'3'
              7eb6 0031  ld   $31         ;'1'
              7eb7 0030  ld   $30         ;'0'
              7eb8 0030  ld   $30         ;'0'
              7eb9 0000  ld   $00         ;'\x00'
              7eba 002a  ld   $2a
              7ebb 00e0  ld   $e0
              7ebc 0010  ld   $10
              7ebd 00cc  ld   $cc
              7ebe 000b  ld   $0b
              7ebf 0049  ld   $49         ;'I'
              7ec0 0046  ld   $46         ;'F'
              7ec1 0046  ld   $46         ;'F'
              7ec2 003d  ld   $3d         ;'='
              7ec3 0031  ld   $31         ;'1'
              7ec4 0047  ld   $47         ;'G'
              7ec5 004f  ld   $4f         ;'O'
              7ec6 0054  ld   $54         ;'T'
              7ec7 004f  ld   $4f         ;'O'
              7ec8 0033  ld   $33         ;'3'
              7ec9 0030  ld   $30         ;'0'
              7eca 0035  ld   $35         ;'5'
              7ecb 0030  ld   $30         ;'0'
              7ecc 0000  ld   $00         ;'\x00'
              7ecd 002b  ld   $2b
              7ece 00a0  ld   $a0
              7ecf 000e  ld   $0e
              7ed0 00d6  ld   $d6
              7ed1 000b  ld   $0b
              7ed2 003f  ld   $3f         ;'?'
              7ed3 0022  ld   $22         ;'"'
              7ed4 0059  ld   $59         ;'Y'
              7ed5 004f  ld   $4f         ;'O'
              7ed6 0055  ld   $55         ;'U'
              7ed7 0020  ld   $20         ;' '
              7ed8 0057  ld   $57         ;'W'
              7ed9 0049  ld   $49         ;'I'
              7eda 004e  ld   $4e         ;'N'
              7edb 002e  ld   $2e         ;'.'
              7edc 0022  ld   $22         ;'"'
              7edd 0000  ld   $00         ;'\x00'
              7ede 002b  ld   $2b
              7edf 00c0  ld   $c0
              7ee0 000b  ld   $0b
              7ee1 00e0  ld   $e0
              7ee2 000b  ld   $0b
              7ee3 0047  ld   $47         ;'G'
              7ee4 004f  ld   $4f         ;'O'
              7ee5 0054  ld   $54         ;'T'
              7ee6 004f  ld   $4f         ;'O'
              7ee7 0031  ld   $31         ;'1'
              7ee8 0030  ld   $30         ;'0'
              7ee9 0031  ld   $31         ;'1'
              7eea 0030  ld   $30         ;'0'
              7eeb 0000  ld   $00         ;'\x00'
              7eec 002b  ld   $2b
              7eed 00e0  ld   $e0
              7eee 000c  ld   $0c
              7eef 00ea  ld   $ea
              7ef0 000b  ld   $0b
              7ef1 003f  ld   $3f         ;'?'
              7ef2 0022  ld   $22         ;'"'
              7ef3 0049  ld   $49         ;'I'
              7ef4 0020  ld   $20         ;' '
              7ef5 0057  ld   $57         ;'W'
              7ef6 0049  ld   $49         ;'I'
              7ef7 004e  ld   $4e         ;'N'
              7ef8 002e  ld   $2e         ;'.'
              7ef9 0022  ld   $22         ;'"'
              7efa 0000  ld   $00         ;'\x00'
              7efb fe00  bra  ac          ;+-----------------------------------+
              7efc fcfd  bra  $7efd       ;|                                   |
              7efd 1418  ld   $18,y       ;| Trampoline for page $7e00 lookups |
              7efe e006  jmp  y,$06       ;|                                   |
              7eff c218  st   [$18]       ;+-----------------------------------+
              7f00 002c  ld   $2c
              7f01 00a0  ld   $a0
              7f02 000b  ld   $0b
              7f03 00f4  ld   $f4
              7f04 000b  ld   $0b
              7f05 0047  ld   $47         ;'G'
              7f06 004f  ld   $4f         ;'O'
              7f07 0054  ld   $54         ;'T'
              7f08 004f  ld   $4f         ;'O'
              7f09 0031  ld   $31         ;'1'
              7f0a 0030  ld   $30         ;'0'
              7f0b 0031  ld   $31         ;'1'
              7f0c 0030  ld   $30         ;'0'
              7f0d 0000  ld   $00         ;'\x00'
              7f0e 002c  ld   $2c
              7f0f 00c0  ld   $c0
              7f10 0010  ld   $10
              7f11 001c  ld   $1c
              7f12 000c  ld   $0c
              7f13 0049  ld   $49         ;'I'
              7f14 0046  ld   $46         ;'F'
              7f15 0055  ld   $55         ;'U'
              7f16 003e  ld   $3e         ;'>'
              7f17 0030  ld   $30         ;'0'
              7f18 0047  ld   $47         ;'G'
              7f19 004f  ld   $4f         ;'O'
              7f1a 0054  ld   $54         ;'T'
              7f1b 004f  ld   $4f         ;'O'
              7f1c 0033  ld   $33         ;'3'
              7f1d 0032  ld   $32         ;'2'
              7f1e 0031  ld   $31         ;'1'
              7f1f 0030  ld   $30         ;'0'
              7f20 0000  ld   $00         ;'\x00'
              7f21 002c  ld   $2c
              7f22 00e0  ld   $e0
              7f23 0011  ld   $11
              7f24 0026  ld   $26
              7f25 000c  ld   $0c
              7f26 003f  ld   $3f         ;'?'
              7f27 0022  ld   $22         ;'"'
              7f28 0043  ld   $43         ;'C'
              7f29 0041  ld   $41         ;'A'
              7f2a 0054  ld   $54         ;'T'
              7f2b 0027  ld   $27         ;"'"
              7f2c 0053  ld   $53         ;'S'
              7f2d 0020  ld   $20         ;' '
              7f2e 0047  ld   $47         ;'G'
              7f2f 0041  ld   $41         ;'A'
              7f30 004d  ld   $4d         ;'M'
              7f31 0045  ld   $45         ;'E'
              7f32 002e  ld   $2e         ;'.'
              7f33 0022  ld   $22         ;'"'
              7f34 0000  ld   $00         ;'\x00'
              7f35 002d  ld   $2d
              7f36 00a0  ld   $a0
              7f37 0008  ld   $08
              7f38 0030  ld   $30
              7f39 000c  ld   $0c
              7f3a 0046  ld   $46         ;'F'
              7f3b 003d  ld   $3d         ;'='
              7f3c 0031  ld   $31         ;'1'
              7f3d 002d  ld   $2d         ;'-'
              7f3e 0046  ld   $46         ;'F'
              7f3f 0000  ld   $00         ;'\x00'
              7f40 002d  ld   $2d
              7f41 00c0  ld   $c0
              7f42 000b  ld   $0b
              7f43 003a  ld   $3a
              7f44 000c  ld   $0c
              7f45 0047  ld   $47         ;'G'
              7f46 004f  ld   $4f         ;'O'
              7f47 0054  ld   $54         ;'T'
              7f48 004f  ld   $4f         ;'O'
              7f49 0031  ld   $31         ;'1'
              7f4a 0030  ld   $30         ;'0'
              7f4b 0031  ld   $31         ;'1'
              7f4c 0030  ld   $30         ;'0'
              7f4d 0000  ld   $00         ;'\x00'
              7f4e 002d  ld   $2d
              7f4f 00e0  ld   $e0
              7f50 000f  ld   $0f
              7f51 008a  ld   $8a
              7f52 000c  ld   $0c
              7f53 003f  ld   $3f         ;'?'
              7f54 0022  ld   $22         ;'"'
              7f55 0059  ld   $59         ;'Y'
              7f56 004f  ld   $4f         ;'O'
              7f57 0055  ld   $55         ;'U'
              7f58 0052  ld   $52         ;'R'
              7f59 0020  ld   $20         ;' '
              7f5a 0050  ld   $50         ;'P'
              7f5b 004c  ld   $4c         ;'L'
              7f5c 0041  ld   $41         ;'A'
              7f5d 0022  ld   $22         ;'"'
              7f5e 003b  ld   $3b         ;';'
              7f5f 0000  ld   $00         ;'\x00'
              7f60 002e  ld   $2e
              7f61 00a0  ld   $a0
              7f62 000d  ld   $0d
              7f63 0097  ld   $97
              7f64 000c  ld   $0c
              7f65 0049  ld   $49         ;'I'
              7f66 004e  ld   $4e         ;'N'
              7f67 0050  ld   $50         ;'P'
              7f68 0055  ld   $55         ;'U'
              7f69 0054  ld   $54         ;'T'
              7f6a 0059  ld   $59         ;'Y'
              7f6b 003a  ld   $3a         ;':'
              7f6c 0049  ld   $49         ;'I'
              7f6d 003d  ld   $3d         ;'='
              7f6e 0059  ld   $59         ;'Y'
              7f6f 0000  ld   $00         ;'\x00'
              7f70 002e  ld   $2e
              7f71 00c0  ld   $c0
              7f72 0011  ld   $11
              7f73 009f  ld   $9f
              7f74 000c  ld   $0c
              7f75 0049  ld   $49         ;'I'
              7f76 0046  ld   $46         ;'F'
              7f77 0049  ld   $49         ;'I'
              7f78 003c  ld   $3c         ;'<'
              7f79 003d  ld   $3d         ;'='
              7f7a 0030  ld   $30         ;'0'
              7f7b 0047  ld   $47         ;'G'
              7f7c 004f  ld   $4f         ;'O'
              7f7d 0054  ld   $54         ;'T'
              7f7e 004f  ld   $4f         ;'O'
              7f7f 0033  ld   $33         ;'3'
              7f80 0032  ld   $32         ;'2'
              7f81 0034  ld   $34         ;'4'
              7f82 0030  ld   $30         ;'0'
              7f83 0000  ld   $00         ;'\x00'
              7f84 002e  ld   $2e
              7f85 00e0  ld   $e0
              7f86 0011  ld   $11
              7f87 00a0  ld   $a0
              7f88 000c  ld   $0c
              7f89 0049  ld   $49         ;'I'
              7f8a 0046  ld   $46         ;'F'
              7f8b 0049  ld   $49         ;'I'
              7f8c 003c  ld   $3c         ;'<'
              7f8d 0031  ld   $31         ;'1'
              7f8e 0030  ld   $30         ;'0'
              7f8f 0047  ld   $47         ;'G'
              7f90 004f  ld   $4f         ;'O'
              7f91 0054  ld   $54         ;'T'
              7f92 004f  ld   $4f         ;'O'
              7f93 0033  ld   $33         ;'3'
              7f94 0032  ld   $32         ;'2'
              7f95 0037  ld   $37         ;'7'
              7f96 0030  ld   $30         ;'0'
              7f97 0000  ld   $00         ;'\x00'
              7f98 002f  ld   $2f
              7f99 00a0  ld   $a0
              7f9a 0014  ld   $14
              7f9b 00a8  ld   $a8
              7f9c 000c  ld   $0c
              7f9d 003f  ld   $3f         ;'?'
              7f9e 0022  ld   $22         ;'"'
              7f9f 0050  ld   $50         ;'P'
              7fa0 004c  ld   $4c         ;'L'
              7fa1 0045  ld   $45         ;'E'
              7fa2 0041  ld   $41         ;'A'
              7fa3 0053  ld   $53         ;'S'
              7fa4 0045  ld   $45         ;'E'
              7fa5 0020  ld   $20         ;' '
              7fa6 0054  ld   $54         ;'T'
              7fa7 0059  ld   $59         ;'Y'
              7fa8 0050  ld   $50         ;'P'
              7fa9 0045  ld   $45         ;'E'
              7faa 0020  ld   $20         ;' '
              7fab 0041  ld   $41         ;'A'
              7fac 0022  ld   $22         ;'"'
              7fad 003b  ld   $3b         ;';'
              7fae 0000  ld   $00         ;'\x00'
              7faf 002f  ld   $2f
              7fb0 00c0  ld   $c0
              7fb1 000d  ld   $0d
              7fb2 00aa  ld   $aa
              7fb3 000c  ld   $0c
              7fb4 003f  ld   $3f         ;'?'
              7fb5 0022  ld   $22         ;'"'
              7fb6 0020  ld   $20         ;' '
              7fb7 004e  ld   $4e         ;'N'
              7fb8 0055  ld   $55         ;'U'
              7fb9 004d  ld   $4d         ;'M'
              7fba 0042  ld   $42         ;'B'
              7fbb 0045  ld   $45         ;'E'
              7fbc 0052  ld   $52         ;'R'
              7fbd 0022  ld   $22         ;'"'
              7fbe 0000  ld   $00         ;'\x00'
              7fbf 002f  ld   $2f
              7fc0 00e0  ld   $e0
              7fc1 0016  ld   $16
              7fc2 00ab  ld   $ab
              7fc3 000c  ld   $0c
              7fc4 003f  ld   $3f         ;'?'
              7fc5 0022  ld   $22         ;'"'
              7fc6 0042  ld   $42         ;'B'
              7fc7 0045  ld   $45         ;'E'
              7fc8 0054  ld   $54         ;'T'
              7fc9 0057  ld   $57         ;'W'
              7fca 0045  ld   $45         ;'E'
              7fcb 0045  ld   $45         ;'E'
              7fcc 004e  ld   $4e         ;'N'
              7fcd 0020  ld   $20         ;' '
              7fce 0031  ld   $31         ;'1'
              7fcf 0020  ld   $20         ;' '
              7fd0 0041  ld   $41         ;'A'
              7fd1 004e  ld   $4e         ;'N'
              7fd2 0044  ld   $44         ;'D'
              7fd3 0020  ld   $20         ;' '
              7fd4 0039  ld   $39         ;'9'
              7fd5 0022  ld   $22         ;'"'
              7fd6 003b  ld   $3b         ;';'
              7fd7 0000  ld   $00         ;'\x00'
              7fd8 0030  ld   $30
              7fd9 00a0  ld   $a0
              7fda 0010  ld   $10
              7fdb 00b3  ld   $b3
              7fdc 000c  ld   $0c
              7fdd 003f  ld   $3f         ;'?'
              7fde 0022  ld   $22         ;'"'
              7fdf 0020  ld   $20         ;' '
              7fe0 0057  ld   $57         ;'W'
              7fe1 0048  ld   $48         ;'H'
              7fe2 0045  ld   $45         ;'E'
              7fe3 0052  ld   $52         ;'R'
              7fe4 0045  ld   $45         ;'E'
              7fe5 0020  ld   $20         ;' '
              7fe6 0059  ld   $59         ;'Y'
              7fe7 004f  ld   $4f         ;'O'
              7fe8 0055  ld   $55         ;'U'
              7fe9 0022  ld   $22         ;'"'
              7fea 0000  ld   $00         ;'\x00'
              7feb 0030  ld   $30
              7fec 00c0  ld   $c0
              7fed 0013  ld   $13
              7fee 00b4  ld   $b4
              7fef 000c  ld   $0c
              7ff0 003f  ld   $3f         ;'?'
              7ff1 0022  ld   $22         ;'"'
              7ff2 0057  ld   $57         ;'W'
              7ff3 0049  ld   $49         ;'I'
              7ff4 0053  ld   $53         ;'S'
              7ff5 0048  ld   $48         ;'H'
              7ff6 0020  ld   $20         ;' '
              7ff7 0054  ld   $54         ;'T'
              7ff8 004f  ld   $4f         ;'O'
              7ff9 0020  ld   $20         ;' '
              7ffa 0050  ld   $50         ;'P'
              7ffb fe00  bra  ac          ;+-----------------------------------+
              7ffc fcfd  bra  $7ffd       ;|                                   |
              7ffd 1418  ld   $18,y       ;| Trampoline for page $7f00 lookups |
              7ffe e006  jmp  y,$06       ;|                                   |
              7fff c218  st   [$18]       ;+-----------------------------------+
              8000 004c  ld   $4c         ;'L'
              8001 0041  ld   $41         ;'A'
              8002 0059  ld   $59         ;'Y'
              8003 0022  ld   $22         ;'"'
              8004 003b  ld   $3b         ;';'
              8005 0000  ld   $00         ;'\x00'
              8006 0030  ld   $30
              8007 00e0  ld   $e0
              8008 000d  ld   $0d
              8009 00b5  ld   $b5
              800a 000c  ld   $0c
              800b 003f  ld   $3f         ;'?'
              800c 0022  ld   $22         ;'"'
              800d 0020  ld   $20         ;' '
              800e 0059  ld   $59         ;'Y'
              800f 004f  ld   $4f         ;'O'
              8010 0055  ld   $55         ;'U'
              8011 0052  ld   $52         ;'R'
              8012 0020  ld   $20         ;' '
              8013 0058  ld   $58         ;'X'
              8014 0022  ld   $22         ;'"'
              8015 0000  ld   $00         ;'\x00'
              8016 0031  ld   $31
              8017 00a0  ld   $a0
              8018 000b  ld   $0b
              8019 00bc  ld   $bc
              801a 000c  ld   $0c
              801b 0047  ld   $47         ;'G'
              801c 004f  ld   $4f         ;'O'
              801d 0054  ld   $54         ;'T'
              801e 004f  ld   $4f         ;'O'
              801f 0033  ld   $33         ;'3'
              8020 0032  ld   $32         ;'2'
              8021 0031  ld   $31         ;'1'
              8022 0030  ld   $30         ;'0'
              8023 0000  ld   $00         ;'\x00'
              8024 0031  ld   $31
              8025 00c0  ld   $c0
              8026 0015  ld   $15
              8027 00c6  ld   $c6
              8028 000c  ld   $0c
              8029 0049  ld   $49         ;'I'
              802a 0046  ld   $46         ;'F'
              802b 0041  ld   $41         ;'A'
              802c 0028  ld   $28         ;'('
              802d 0049  ld   $49         ;'I'
              802e 002b  ld   $2b         ;'+'
              802f 0036  ld   $36         ;'6'
              8030 0029  ld   $29         ;')'
              8031 003d  ld   $3d         ;'='
              8032 0030  ld   $30         ;'0'
              8033 0047  ld   $47         ;'G'
              8034 004f  ld   $4f         ;'O'
              8035 0054  ld   $54         ;'T'
              8036 004f  ld   $4f         ;'O'
              8037 0033  ld   $33         ;'3'
              8038 0033  ld   $33         ;'3'
              8039 0031  ld   $31         ;'1'
              803a 0030  ld   $30         ;'0'
              803b 0000  ld   $00         ;'\x00'
              803c 0031  ld   $31
              803d 00e0  ld   $e0
              803e 0015  ld   $15
              803f 00d1  ld   $d1
              8040 000c  ld   $0c
              8041 003f  ld   $3f         ;'?'
              8042 0022  ld   $22         ;'"'
              8043 0054  ld   $54         ;'T'
              8044 0048  ld   $48         ;'H'
              8045 0041  ld   $41         ;'A'
              8046 0054  ld   $54         ;'T'
              8047 0020  ld   $20         ;' '
              8048 0053  ld   $53         ;'S'
              8049 0051  ld   $51         ;'Q'
              804a 0055  ld   $55         ;'U'
              804b 0041  ld   $41         ;'A'
              804c 0052  ld   $52         ;'R'
              804d 0045  ld   $45         ;'E'
              804e 0020  ld   $20         ;' '
              804f 0049  ld   $49         ;'I'
              8050 0053  ld   $53         ;'S'
              8051 0022  ld   $22         ;'"'
              8052 003b  ld   $3b         ;';'
              8053 0000  ld   $00         ;'\x00'
              8054 0032  ld   $32
              8055 00a0  ld   $a0
              8056 0017  ld   $17
              8057 00d2  ld   $d2
              8058 000c  ld   $0c
              8059 003f  ld   $3f         ;'?'
              805a 0022  ld   $22         ;'"'
              805b 0020  ld   $20         ;' '
              805c 0041  ld   $41         ;'A'
              805d 004c  ld   $4c         ;'L'
              805e 0052  ld   $52         ;'R'
              805f 0045  ld   $45         ;'E'
              8060 0041  ld   $41         ;'A'
              8061 0044  ld   $44         ;'D'
              8062 0059  ld   $59         ;'Y'
              8063 0022  ld   $22         ;'"'
              8064 003a  ld   $3a         ;':'
              8065 003f  ld   $3f         ;'?'
              8066 0022  ld   $22         ;'"'
              8067 0054  ld   $54         ;'T'
              8068 0041  ld   $41         ;'A'
              8069 004b  ld   $4b         ;'K'
              806a 0045  ld   $45         ;'E'
              806b 004e  ld   $4e         ;'N'
              806c 0022  ld   $22         ;'"'
              806d 0000  ld   $00         ;'\x00'
              806e 0032  ld   $32
              806f 00c0  ld   $c0
              8070 000b  ld   $0b
              8071 00da  ld   $da
              8072 000c  ld   $0c
              8073 0047  ld   $47         ;'G'
              8074 004f  ld   $4f         ;'O'
              8075 0054  ld   $54         ;'T'
              8076 004f  ld   $4f         ;'O'
              8077 0033  ld   $33         ;'3'
              8078 0032  ld   $32         ;'2'
              8079 0031  ld   $31         ;'1'
              807a 0030  ld   $30         ;'0'
              807b 0000  ld   $00         ;'\x00'
              807c 0032  ld   $32
              807d 00e0  ld   $e0
              807e 0011  ld   $11
              807f 00ee  ld   $ee
              8080 000c  ld   $0c
              8081 0041  ld   $41         ;'A'
              8082 0028  ld   $28         ;'('
              8083 0049  ld   $49         ;'I'
              8084 002b  ld   $2b         ;'+'
              8085 0036  ld   $36         ;'6'
              8086 0029  ld   $29         ;')'
              8087 003d  ld   $3d         ;'='
              8088 0031  ld   $31         ;'1'
              8089 003a  ld   $3a         ;':'
              808a 0055  ld   $55         ;'U'
              808b 003d  ld   $3d         ;'='
              808c 0055  ld   $55         ;'U'
              808d 002d  ld   $2d         ;'-'
              808e 0031  ld   $31         ;'1'
              808f 0000  ld   $00         ;'\x00'
              8090 0033  ld   $33
              8091 00a0  ld   $a0
              8092 0009  ld   $09
              8093 00f8  ld   $f8
              8094 000c  ld   $0c
              8095 0057  ld   $57         ;'W'
              8096 003d  ld   $3d         ;'='
              8097 0036  ld   $36         ;'6'
              8098 0031  ld   $31         ;'1'
              8099 0030  ld   $30         ;'0'
              809a 0030  ld   $30         ;'0'
              809b 0000  ld   $00         ;'\x00'
              809c 0033  ld   $33
              809d 00c0  ld   $c0
              809e 0009  ld   $09
              809f 0002  ld   $02
              80a0 000d  ld   $0d
              80a1 0047  ld   $47         ;'G'
              80a2 004f  ld   $4f         ;'O'
              80a3 0053  ld   $53         ;'S'
              80a4 0055  ld   $55         ;'U'
              80a5 0042  ld   $42         ;'B'
              80a6 0057  ld   $57         ;'W'
              80a7 0000  ld   $00         ;'\x00'
              80a8 0033  ld   $33
              80a9 00e0  ld   $e0
              80aa 0011  ld   $11
              80ab 000d  ld   $0d
              80ac 000d  ld   $0d
              80ad 0049  ld   $49         ;'I'
              80ae 0046  ld   $46         ;'F'
              80af 004a  ld   $4a         ;'J'
              80b0 003c  ld   $3c         ;'<'
              80b1 003d  ld   $3d         ;'='
              80b2 0030  ld   $30         ;'0'
              80b3 0047  ld   $47         ;'G'
              80b4 004f  ld   $4f         ;'O'
              80b5 0054  ld   $54         ;'T'
              80b6 004f  ld   $4f         ;'O'
              80b7 0033  ld   $33         ;'3'
              80b8 0033  ld   $33         ;'3'
              80b9 0035  ld   $35         ;'5'
              80ba 0030  ld   $30         ;'0'
              80bb 0000  ld   $00         ;'\x00'
              80bc 0034  ld   $34
              80bd 00a0  ld   $a0
              80be 0014  ld   $14
              80bf 000e  ld   $0e
              80c0 000d  ld   $0d
              80c1 0049  ld   $49         ;'I'
              80c2 0046  ld   $46         ;'F'
              80c3 004c  ld   $4c         ;'L'
              80c4 002a  ld   $2a         ;'*'
              80c5 004d  ld   $4d         ;'M'
              80c6 002a  ld   $2a         ;'*'
              80c7 004e  ld   $4e         ;'N'
              80c8 003d  ld   $3d         ;'='
              80c9 0031  ld   $31         ;'1'
              80ca 0047  ld   $47         ;'G'
              80cb 004f  ld   $4f         ;'O'
              80cc 0054  ld   $54         ;'T'
              80cd 004f  ld   $4f         ;'O'
              80ce 0031  ld   $31         ;'1'
              80cf 0035  ld   $35         ;'5'
              80d0 0031  ld   $31         ;'1'
              80d1 0030  ld   $30         ;'0'
              80d2 0000  ld   $00         ;'\x00'
              80d3 0034  ld   $34
              80d4 00c0  ld   $c0
              80d5 000a  ld   $0a
              80d6 0016  ld   $16
              80d7 000d  ld   $0d
              80d8 0057  ld   $57         ;'W'
              80d9 003d  ld   $3d         ;'='
              80da 0057  ld   $57         ;'W'
              80db 002b  ld   $2b         ;'+'
              80dc 0031  ld   $31         ;'1'
              80dd 0030  ld   $30         ;'0'
              80de 0030  ld   $30         ;'0'
              80df 0000  ld   $00         ;'\x00'
              80e0 0034  ld   $34
              80e1 00e0  ld   $e0
              80e2 0013  ld   $13
              80e3 0020  ld   $20
              80e4 000d  ld   $0d
              80e5 0049  ld   $49         ;'I'
              80e6 0046  ld   $46         ;'F'
              80e7 0057  ld   $57         ;'W'
              80e8 003c  ld   $3c         ;'<'
              80e9 0036  ld   $36         ;'6'
              80ea 0035  ld   $35         ;'5'
              80eb 0030  ld   $30         ;'0'
              80ec 0030  ld   $30         ;'0'
              80ed 0047  ld   $47         ;'G'
              80ee 004f  ld   $4f         ;'O'
              80ef 0054  ld   $54         ;'T'
              80f0 004f  ld   $4f         ;'O'
              80f1 0033  ld   $33         ;'3'
              80f2 0033  ld   $33         ;'3'
              80f3 0033  ld   $33         ;'3'
              80f4 0030  ld   $30         ;'0'
              80f5 0000  ld   $00         ;'\x00'
              80f6 0035  ld   $35
              80f7 00a0  ld   $a0
              80f8 0010  ld   $10
              80f9 0052  ld   $52
              80fa 000d  ld   $0d
              80fb fe00  bra  ac          ;+-----------------------------------+
              80fc fcfd  bra  $80fd       ;|                                   |
              80fd 1418  ld   $18,y       ;| Trampoline for page $8000 lookups |
              80fe e006  jmp  y,$06       ;|                                   |
              80ff c218  st   [$18]       ;+-----------------------------------+
              8100 0049  ld   $49         ;'I'
              8101 0046  ld   $46         ;'F'
              8102 0055  ld   $55         ;'U'
              8103 003d  ld   $3d         ;'='
              8104 0030  ld   $30         ;'0'
              8105 0047  ld   $47         ;'G'
              8106 004f  ld   $4f         ;'O'
              8107 0054  ld   $54         ;'T'
              8108 004f  ld   $4f         ;'O'
              8109 0032  ld   $32         ;'2'
              810a 0030  ld   $30         ;'0'
              810b 0031  ld   $31         ;'1'
              810c 0030  ld   $30         ;'0'
              810d 0000  ld   $00         ;'\x00'
              810e 0035  ld   $35
              810f 00c0  ld   $c0
              8110 0006  ld   $06
              8111 00aa  ld   $aa
              8112 000f  ld   $0f
              8113 0049  ld   $49         ;'I'
              8114 003d  ld   $3d         ;'='
              8115 0031  ld   $31         ;'1'
              8116 0000  ld   $00         ;'\x00'
              8117 0035  ld   $35
              8118 00e0  ld   $e0
              8119 0007  ld   $07
              811a 00b4  ld   $b4
              811b 000f  ld   $0f
              811c 0054  ld   $54         ;'T'
              811d 003d  ld   $3d         ;'='
              811e 002d  ld   $2d         ;'-'
              811f 0031  ld   $31         ;'1'
              8120 0000  ld   $00         ;'\x00'
              8121 0036  ld   $36
              8122 00a0  ld   $a0
              8123 0006  ld   $06
              8124 00cc  ld   $cc
              8125 0010  ld   $10
              8126 0053  ld   $53         ;'S'
              8127 003d  ld   $3d         ;'='
              8128 0030  ld   $30         ;'0'
              8129 0000  ld   $00         ;'\x00'
              812a 0036  ld   $36
              812b 00c0  ld   $c0
              812c 0015  ld   $15
              812d 00d7  ld   $d7
              812e 0010  ld   $10
              812f 0049  ld   $49         ;'I'
              8130 0046  ld   $46         ;'F'
              8131 0041  ld   $41         ;'A'
              8132 0028  ld   $28         ;'('
              8133 0049  ld   $49         ;'I'
              8134 002b  ld   $2b         ;'+'
              8135 0036  ld   $36         ;'6'
              8136 0029  ld   $29         ;')'
              8137 003e  ld   $3e         ;'>'
              8138 0030  ld   $30         ;'0'
              8139 0047  ld   $47         ;'G'
              813a 004f  ld   $4f         ;'O'
              813b 0054  ld   $54         ;'T'
              813c 004f  ld   $4f         ;'O'
              813d 0034  ld   $34         ;'4'
              813e 0034  ld   $34         ;'4'
              813f 0038  ld   $38         ;'8'
              8140 0030  ld   $30         ;'0'
              8141 0000  ld   $00         ;'\x00'
              8142 0036  ld   $36
              8143 00e0  ld   $e0
              8144 0009  ld   $09
              8145 00e0  ld   $e0
              8146 0010  ld   $10
              8147 0057  ld   $57         ;'W'
              8148 003d  ld   $3d         ;'='
              8149 0036  ld   $36         ;'6'
              814a 0031  ld   $31         ;'1'
              814b 0030  ld   $30         ;'0'
              814c 0030  ld   $30         ;'0'
              814d 0000  ld   $00         ;'\x00'
              814e 0037  ld   $37
              814f 00a0  ld   $a0
              8150 0009  ld   $09
              8151 00ea  ld   $ea
              8152 0010  ld   $10
              8153 0047  ld   $47         ;'G'
              8154 004f  ld   $4f         ;'O'
              8155 0053  ld   $53         ;'S'
              8156 0055  ld   $55         ;'U'
              8157 0042  ld   $42         ;'B'
              8158 0057  ld   $57         ;'W'
              8159 0000  ld   $00         ;'\x00'
              815a 0037  ld   $37
              815b 00c0  ld   $c0
              815c 0010  ld   $10
              815d 00f4  ld   $f4
              815e 0010  ld   $10
              815f 0049  ld   $49         ;'I'
              8160 0046  ld   $46         ;'F'
              8161 004a  ld   $4a         ;'J'
              8162 003d  ld   $3d         ;'='
              8163 0030  ld   $30         ;'0'
              8164 0047  ld   $47         ;'G'
              8165 004f  ld   $4f         ;'O'
              8166 0054  ld   $54         ;'T'
              8167 004f  ld   $4f         ;'O'
              8168 0034  ld   $34         ;'4'
              8169 0034  ld   $34         ;'4'
              816a 0031  ld   $31         ;'1'
              816b 0030  ld   $30         ;'0'
              816c 0000  ld   $00         ;'\x00'
              816d 0037  ld   $37
              816e 00e0  ld   $e0
              816f 000a  ld   $0a
              8170 00fe  ld   $fe
              8171 0010  ld   $10
              8172 004a  ld   $4a         ;'J'
              8173 003d  ld   $3d         ;'='
              8174 004c  ld   $4c         ;'L'
              8175 002b  ld   $2b         ;'+'
              8176 004d  ld   $4d         ;'M'
              8177 002b  ld   $2b         ;'+'
              8178 004e  ld   $4e         ;'N'
              8179 0000  ld   $00         ;'\x00'
              817a 0038  ld   $38
              817b 00a0  ld   $a0
              817c 0010  ld   $10
              817d 0009  ld   $09
              817e 0011  ld   $11
              817f 0049  ld   $49         ;'I'
              8180 0046  ld   $46         ;'F'
              8181 004a  ld   $4a         ;'J'
              8182 003d  ld   $3d         ;'='
              8183 0034  ld   $34         ;'4'
              8184 0047  ld   $47         ;'G'
              8185 004f  ld   $4f         ;'O'
              8186 0054  ld   $54         ;'T'
              8187 004f  ld   $4f         ;'O'
              8188 0034  ld   $34         ;'4'
              8189 0034  ld   $34         ;'4'
              818a 0031  ld   $31         ;'1'
              818b 0030  ld   $30         ;'0'
              818c 0000  ld   $00         ;'\x00'
              818d 0038  ld   $38
              818e 00c0  ld   $c0
              818f 000e  ld   $0e
              8190 0013  ld   $13
              8191 0011  ld   $11
              8192 0049  ld   $49         ;'I'
              8193 0046  ld   $46         ;'F'
              8194 004a  ld   $4a         ;'J'
              8195 003d  ld   $3d         ;'='
              8196 0032  ld   $32         ;'2'
              8197 0053  ld   $53         ;'S'
              8198 003d  ld   $3d         ;'='
              8199 0053  ld   $53         ;'S'
              819a 002b  ld   $2b         ;'+'
              819b 0032  ld   $32         ;'2'
              819c 0030  ld   $30         ;'0'
              819d 0000  ld   $00         ;'\x00'
              819e 0038  ld   $38
              819f 00e0  ld   $e0
              81a0 000f  ld   $0f
              81a1 001d  ld   $1d
              81a2 0011  ld   $11
              81a3 0049  ld   $49         ;'I'
              81a4 0046  ld   $46         ;'F'
              81a5 004a  ld   $4a         ;'J'
              81a6 003d  ld   $3d         ;'='
              81a7 0036  ld   $36         ;'6'
              81a8 0053  ld   $53         ;'S'
              81a9 003d  ld   $3d         ;'='
              81aa 0053  ld   $53         ;'S'
              81ab 002b  ld   $2b         ;'+'
              81ac 0031  ld   $31         ;'1'
              81ad 0030  ld   $30         ;'0'
              81ae 0030  ld   $30         ;'0'
              81af 0000  ld   $00         ;'\x00'
              81b0 0039  ld   $39
              81b1 00a0  ld   $a0
              81b2 000d  ld   $0d
              81b3 0027  ld   $27
              81b4 0011  ld   $11
              81b5 0049  ld   $49         ;'I'
              81b6 0046  ld   $46         ;'F'
              81b7 004a  ld   $4a         ;'J'
              81b8 003d  ld   $3d         ;'='
              81b9 0030  ld   $30         ;'0'
              81ba 0053  ld   $53         ;'S'
              81bb 003d  ld   $3d         ;'='
              81bc 0053  ld   $53         ;'S'
              81bd 002b  ld   $2b         ;'+'
              81be 0032  ld   $32         ;'2'
              81bf 0000  ld   $00         ;'\x00'
              81c0 0039  ld   $39
              81c1 00c0  ld   $c0
              81c2 0008  ld   $08
              81c3 0030  ld   $30
              81c4 0011  ld   $11
              81c5 0053  ld   $53         ;'S'
              81c6 003d  ld   $3d         ;'='
              81c7 0053  ld   $53         ;'S'
              81c8 002b  ld   $2b         ;'+'
              81c9 004a  ld   $4a         ;'J'
              81ca 0000  ld   $00         ;'\x00'
              81cb 0039  ld   $39
              81cc 00e0  ld   $e0
              81cd 000a  ld   $0a
              81ce 003a  ld   $3a
              81cf 0011  ld   $11
              81d0 0057  ld   $57         ;'W'
              81d1 003d  ld   $3d         ;'='
              81d2 0057  ld   $57         ;'W'
              81d3 002b  ld   $2b         ;'+'
              81d4 0031  ld   $31         ;'1'
              81d5 0030  ld   $30         ;'0'
              81d6 0030  ld   $30         ;'0'
              81d7 0000  ld   $00         ;'\x00'
              81d8 003a  ld   $3a
              81d9 00a0  ld   $a0
              81da 0013  ld   $13
              81db 0044  ld   $44
              81dc 0011  ld   $11
              81dd 0049  ld   $49         ;'I'
              81de 0046  ld   $46         ;'F'
              81df 0057  ld   $57         ;'W'
              81e0 003c  ld   $3c         ;'<'
              81e1 0036  ld   $36         ;'6'
              81e2 0035  ld   $35         ;'5'
              81e3 0030  ld   $30         ;'0'
              81e4 0030  ld   $30         ;'0'
              81e5 0047  ld   $47         ;'G'
              81e6 004f  ld   $4f         ;'O'
              81e7 0054  ld   $54         ;'T'
              81e8 004f  ld   $4f         ;'O'
              81e9 0034  ld   $34         ;'4'
              81ea 0033  ld   $33         ;'3'
              81eb 0033  ld   $33         ;'3'
              81ec 0030  ld   $30         ;'0'
              81ed 0000  ld   $00         ;'\x00'
              81ee 003a  ld   $3a
              81ef 00c0  ld   $c0
              81f0 0010  ld   $10
              81f1 004f  ld   $4f
              81f2 0011  ld   $11
              81f3 0049  ld   $49         ;'I'
              81f4 0046  ld   $46         ;'F'
              81f5 0053  ld   $53         ;'S'
              81f6 003c  ld   $3c         ;'<'
              81f7 0054  ld   $54         ;'T'
              81f8 0047  ld   $47         ;'G'
              81f9 004f  ld   $4f         ;'O'
              81fa 0054  ld   $54         ;'T'
              81fb fe00  bra  ac          ;+-----------------------------------+
              81fc fcfd  bra  $81fd       ;|                                   |
              81fd 1418  ld   $18,y       ;| Trampoline for page $8100 lookups |
              81fe e006  jmp  y,$06       ;|                                   |
              81ff c218  st   [$18]       ;+-----------------------------------+
              8200 004f  ld   $4f         ;'O'
              8201 0034  ld   $34         ;'4'
              8202 0034  ld   $34         ;'4'
              8203 0037  ld   $37         ;'7'
              8204 0030  ld   $30         ;'0'
              8205 0000  ld   $00         ;'\x00'
              8206 003a  ld   $3a
              8207 00e0  ld   $e0
              8208 0006  ld   $06
              8209 0058  ld   $58
              820a 0011  ld   $11
              820b 0054  ld   $54         ;'T'
              820c 003d  ld   $3d         ;'='
              820d 0053  ld   $53         ;'S'
              820e 0000  ld   $00         ;'\x00'
              820f 003b  ld   $3b
              8210 00a0  ld   $a0
              8211 0006  ld   $06
              8212 0062  ld   $62
              8213 0011  ld   $11
              8214 0042  ld   $42         ;'B'
              8215 003d  ld   $3d         ;'='
              8216 0049  ld   $49         ;'I'
              8217 0000  ld   $00         ;'\x00'
              8218 003b  ld   $3b
              8219 00c0  ld   $c0
              821a 0008  ld   $08
              821b 0076  ld   $76
              821c 0011  ld   $11
              821d 003f  ld   $3f         ;'?'
              821e 0022  ld   $22         ;'"'
              821f 002e  ld   $2e         ;'.'
              8220 0022  ld   $22         ;'"'
              8221 003b  ld   $3b         ;';'
              8222 0000  ld   $00         ;'\x00'
              8223 003b  ld   $3b
              8224 00e0  ld   $e0
              8225 0008  ld   $08
              8226 0080  ld   $80
              8227 0011  ld   $11
              8228 0049  ld   $49         ;'I'
              8229 003d  ld   $3d         ;'='
              822a 0049  ld   $49         ;'I'
              822b 002b  ld   $2b         ;'+'
              822c 0031  ld   $31         ;'1'
              822d 0000  ld   $00         ;'\x00'
              822e 003c  ld   $3c
              822f 00a0  ld   $a0
              8230 0011  ld   $11
              8231 008a  ld   $8a
              8232 0011  ld   $11
              8233 0049  ld   $49         ;'I'
              8234 0046  ld   $46         ;'F'
              8235 0049  ld   $49         ;'I'
              8236 003c  ld   $3c         ;'<'
              8237 0031  ld   $31         ;'1'
              8238 0030  ld   $30         ;'0'
              8239 0047  ld   $47         ;'G'
              823a 004f  ld   $4f         ;'O'
              823b 0054  ld   $54         ;'T'
              823c 004f  ld   $4f         ;'O'
              823d 0034  ld   $34         ;'4'
              823e 0033  ld   $33         ;'3'
              823f 0030  ld   $30         ;'0'
              8240 0030  ld   $30         ;'0'
              8241 0000  ld   $00         ;'\x00'
              8242 003c  ld   $3c
              8243 00c0  ld   $c0
              8244 000f  ld   $0f
              8245 0094  ld   $94
              8246 0011  ld   $11
              8247 003f  ld   $3f         ;'?'
              8248 0022  ld   $22         ;'"'
              8249 0049  ld   $49         ;'I'
              824a 0020  ld   $20         ;' '
              824b 0050  ld   $50         ;'P'
              824c 004c  ld   $4c         ;'L'
              824d 0041  ld   $41         ;'A'
              824e 0059  ld   $59         ;'Y'
              824f 0020  ld   $20         ;' '
              8250 0022  ld   $22         ;'"'
              8251 003b  ld   $3b         ;';'
              8252 0042  ld   $42         ;'B'
              8253 0000  ld   $00         ;'\x00'
              8254 003c  ld   $3c
              8255 00e0  ld   $e0
              8256 0004  ld   $04
              8257 009e  ld   $9e
              8258 0011  ld   $11
              8259 003f  ld   $3f         ;'?'
              825a 0000  ld   $00         ;'\x00'
              825b 003d  ld   $3d
              825c 00a0  ld   $a0
              825d 000b  ld   $0b
              825e 00a9  ld   $a9
              825f 0011  ld   $11
              8260 0041  ld   $41         ;'A'
              8261 0028  ld   $28         ;'('
              8262 0042  ld   $42         ;'B'
              8263 002b  ld   $2b         ;'+'
              8264 0036  ld   $36         ;'6'
              8265 0029  ld   $29         ;')'
              8266 003d  ld   $3d         ;'='
              8267 0033  ld   $33         ;'3'
              8268 0000  ld   $00         ;'\x00'
              8269 003d  ld   $3d
              826a 00c0  ld   $c0
              826b 0008  ld   $08
              826c 00b2  ld   $b2
              826d 0011  ld   $11
              826e 0055  ld   $55         ;'U'
              826f 003d  ld   $3d         ;'='
              8270 0055  ld   $55         ;'U'
              8271 002d  ld   $2d         ;'-'
              8272 0031  ld   $31         ;'1'
              8273 0000  ld   $00         ;'\x00'
              8274 003d  ld   $3d
              8275 00e0  ld   $e0
              8276 0012  ld   $12
              8277 00bd  ld   $bd
              8278 0011  ld   $11
              8279 0049  ld   $49         ;'I'
              827a 0046  ld   $46         ;'F'
              827b 0054  ld   $54         ;'T'
              827c 003c  ld   $3c         ;'<'
              827d 0031  ld   $31         ;'1'
              827e 0030  ld   $30         ;'0'
              827f 0030  ld   $30         ;'0'
              8280 0047  ld   $47         ;'G'
              8281 004f  ld   $4f         ;'O'
              8282 0054  ld   $54         ;'T'
              8283 004f  ld   $4f         ;'O'
              8284 0032  ld   $32         ;'2'
              8285 0030  ld   $30         ;'0'
              8286 0031  ld   $31         ;'1'
              8287 0030  ld   $30         ;'0'
              8288 0000  ld   $00         ;'\x00'
              8289 003e  ld   $3e
              828a 00a0  ld   $a0
              828b 0006  ld   $06
              828c 00d0  ld   $d0
              828d 0011  ld   $11
              828e 0046  ld   $46         ;'F'
              828f 003d  ld   $3d         ;'='
              8290 0031  ld   $31         ;'1'
              8291 0000  ld   $00         ;'\x00'
              8292 003e  ld   $3e
              8293 00c0  ld   $c0
              8294 0006  ld   $06
              8295 00da  ld   $da
              8296 0011  ld   $11
              8297 005a  ld   $5a         ;'Z'
              8298 003d  ld   $3d         ;'='
              8299 0031  ld   $31         ;'1'
              829a 0000  ld   $00         ;'\x00'
              829b 003e  ld   $3e
              829c 00e0  ld   $e0
              829d 000b  ld   $0b
              829e 00e4  ld   $e4
              829f 0011  ld   $11
              82a0 0047  ld   $47         ;'G'
              82a1 004f  ld   $4f         ;'O'
              82a2 0054  ld   $54         ;'T'
              82a3 004f  ld   $4f         ;'O'
              82a4 0032  ld   $32         ;'2'
              82a5 0030  ld   $30         ;'0'
              82a6 0031  ld   $31         ;'1'
              82a7 0030  ld   $30         ;'0'
              82a8 0000  ld   $00         ;'\x00'
              82a9 003f  ld   $3f
              82aa 00a0  ld   $a0
              82ab 0010  ld   $10
              82ac 00d4  ld   $d4
              82ad 0017  ld   $17
              82ae 004a  ld   $4a         ;'J'
              82af 003d  ld   $3d         ;'='
              82b0 0028  ld   $28         ;'('
              82b1 0049  ld   $49         ;'I'
              82b2 002d  ld   $2d         ;'-'
              82b3 0031  ld   $31         ;'1'
              82b4 0029  ld   $29         ;')'
              82b5 002f  ld   $2f         ;'/'
              82b6 0033  ld   $33         ;'3'
              82b7 002a  ld   $2a         ;'*'
              82b8 0033  ld   $33         ;'3'
              82b9 002b  ld   $2b         ;'+'
              82ba 0038  ld   $38         ;'8'
              82bb 0000  ld   $00         ;'\x00'
              82bc 003f  ld   $3f
              82bd 00c0  ld   $c0
              82be 0006  ld   $06
              82bf 00de  ld   $de
              82c0 0017  ld   $17
              82c1 0044  ld   $44         ;'D'
              82c2 003d  ld   $3d         ;'='
              82c3 0031  ld   $31         ;'1'
              82c4 0000  ld   $00         ;'\x00'
              82c5 003f  ld   $3f
              82c6 00e0  ld   $e0
              82c7 000b  ld   $0b
              82c8 00e8  ld   $e8
              82c9 0017  ld   $17
              82ca 0047  ld   $47         ;'G'
              82cb 004f  ld   $4f         ;'O'
              82cc 0054  ld   $54         ;'T'
              82cd 004f  ld   $4f         ;'O'
              82ce 0036  ld   $36         ;'6'
              82cf 0035  ld   $35         ;'5'
              82d0 0030  ld   $30         ;'0'
              82d1 0030  ld   $30         ;'0'
              82d2 0000  ld   $00         ;'\x00'
              82d3 0040  ld   $40
              82d4 00a0  ld   $a0
              82d5 0012  ld   $12
              82d6 0038  ld   $38
              82d7 0018  ld   $18
              82d8 004a  ld   $4a         ;'J'
              82d9 003d  ld   $3d         ;'='
              82da 0049  ld   $49         ;'I'
              82db 002d  ld   $2d         ;'-'
              82dc 0028  ld   $28         ;'('
              82dd 0049  ld   $49         ;'I'
              82de 002d  ld   $2d         ;'-'
              82df 0031  ld   $31         ;'1'
              82e0 0029  ld   $29         ;')'
              82e1 002f  ld   $2f         ;'/'
              82e2 0033  ld   $33         ;'3'
              82e3 002a  ld   $2a         ;'*'
              82e4 0033  ld   $33         ;'3'
              82e5 002b  ld   $2b         ;'+'
              82e6 0039  ld   $39         ;'9'
              82e7 0000  ld   $00         ;'\x00'
              82e8 0040  ld   $40
              82e9 00c0  ld   $c0
              82ea 0006  ld   $06
              82eb 0042  ld   $42
              82ec 0018  ld   $18
              82ed 0044  ld   $44         ;'D'
              82ee 003d  ld   $3d         ;'='
              82ef 0033  ld   $33         ;'3'
              82f0 0000  ld   $00         ;'\x00'
              82f1 0040  ld   $40
              82f2 00e0  ld   $e0
              82f3 000b  ld   $0b
              82f4 004c  ld   $4c
              82f5 0018  ld   $18
              82f6 0047  ld   $47         ;'G'
              82f7 004f  ld   $4f         ;'O'
              82f8 0054  ld   $54         ;'T'
              82f9 004f  ld   $4f         ;'O'
              82fa 0036  ld   $36         ;'6'
              82fb fe00  bra  ac          ;+-----------------------------------+
              82fc fcfd  bra  $82fd       ;|                                   |
              82fd 1418  ld   $18,y       ;| Trampoline for page $8200 lookups |
              82fe e006  jmp  y,$06       ;|                                   |
              82ff c218  st   [$18]       ;+-----------------------------------+
              8300 0035  ld   $35         ;'5'
              8301 0030  ld   $30         ;'0'
              8302 0030  ld   $30         ;'0'
              8303 0000  ld   $00         ;'\x00'
              8304 0041  ld   $41
              8305 00a0  ld   $a0
              8306 0013  ld   $13
              8307 009c  ld   $9c
              8308 0018  ld   $18
              8309 0049  ld   $49         ;'I'
              830a 0046  ld   $46         ;'F'
              830b 0049  ld   $49         ;'I'
              830c 0025  ld   $25         ;'%'
              830d 0034  ld   $34         ;'4'
              830e 003c  ld   $3c         ;'<'
              830f 003e  ld   $3e         ;'>'
              8310 0031  ld   $31         ;'1'
              8311 0047  ld   $47         ;'G'
              8312 004f  ld   $4f         ;'O'
              8313 0054  ld   $54         ;'T'
              8314 004f  ld   $4f         ;'O'
              8315 0036  ld   $36         ;'6'
              8316 0034  ld   $34         ;'4'
              8317 0034  ld   $34         ;'4'
              8318 0030  ld   $30         ;'0'
              8319 0000  ld   $00         ;'\x00'
              831a 0041  ld   $41
              831b 00c0  ld   $c0
              831c 0006  ld   $06
              831d 00a6  ld   $a6
              831e 0018  ld   $18
              831f 0044  ld   $44         ;'D'
              8320 003d  ld   $3d         ;'='
              8321 0034  ld   $34         ;'4'
              8322 0000  ld   $00         ;'\x00'
              8323 0041  ld   $41
              8324 00e0  ld   $e0
              8325 0007  ld   $07
              8326 00ba  ld   $ba
              8327 0018  ld   $18
              8328 004a  ld   $4a         ;'J'
              8329 003d  ld   $3d         ;'='
              832a 0031  ld   $31         ;'1'
              832b 0031  ld   $31         ;'1'
              832c 0000  ld   $00         ;'\x00'
              832d 0042  ld   $42
              832e 00a0  ld   $a0
              832f 000b  ld   $0b
              8330 00c4  ld   $c4
              8331 0018  ld   $18
              8332 0047  ld   $47         ;'G'
              8333 004f  ld   $4f         ;'O'
              8334 0054  ld   $54         ;'T'
              8335 004f  ld   $4f         ;'O'
              8336 0036  ld   $36         ;'6'
              8337 0035  ld   $35         ;'5'
              8338 0030  ld   $30         ;'0'
              8339 0030  ld   $30         ;'0'
              833a 0000  ld   $00         ;'\x00'
              833b 0042  ld   $42
              833c 00c0  ld   $c0
              833d 0006  ld   $06
              833e 0000  ld   $00
              833f 0019  ld   $19
              8340 0044  ld   $44         ;'D'
              8341 003d  ld   $3d         ;'='
              8342 0032  ld   $32         ;'2'
              8343 0000  ld   $00         ;'\x00'
              8344 0042  ld   $42
              8345 00e0  ld   $e0
              8346 0011  ld   $11
              8347 000b  ld   $0b
              8348 0019  ld   $19
              8349 0049  ld   $49         ;'I'
              834a 0046  ld   $46         ;'F'
              834b 0049  ld   $49         ;'I'
              834c 003c  ld   $3c         ;'<'
              834d 003d  ld   $3d         ;'='
              834e 0031  ld   $31         ;'1'
              834f 0047  ld   $47         ;'G'
              8350 004f  ld   $4f         ;'O'
              8351 0054  ld   $54         ;'T'
              8352 004f  ld   $4f         ;'O'
              8353 0036  ld   $36         ;'6'
              8354 0034  ld   $34         ;'4'
              8355 0034  ld   $34         ;'4'
              8356 0030  ld   $30         ;'0'
              8357 0000  ld   $00         ;'\x00'
              8358 0043  ld   $43
              8359 00a0  ld   $a0
              835a 0011  ld   $11
              835b 000c  ld   $0c
              835c 0019  ld   $19
              835d 0049  ld   $49         ;'I'
              835e 0046  ld   $46         ;'F'
              835f 0049  ld   $49         ;'I'
              8360 003e  ld   $3e         ;'>'
              8361 003d  ld   $3d         ;'='
              8362 0039  ld   $39         ;'9'
              8363 0047  ld   $47         ;'G'
              8364 004f  ld   $4f         ;'O'
              8365 0054  ld   $54         ;'T'
              8366 004f  ld   $4f         ;'O'
              8367 0036  ld   $36         ;'6'
              8368 0034  ld   $34         ;'4'
              8369 0034  ld   $34         ;'4'
              836a 0030  ld   $30         ;'0'
              836b 0000  ld   $00         ;'\x00'
              836c 0043  ld   $43
              836d 00c0  ld   $c0
              836e 0012  ld   $12
              836f 000d  ld   $0d
              8370 0019  ld   $19
              8371 0049  ld   $49         ;'I'
              8372 0046  ld   $46         ;'F'
              8373 0049  ld   $49         ;'I'
              8374 0025  ld   $25         ;'%'
              8375 0032  ld   $32         ;'2'
              8376 003d  ld   $3d         ;'='
              8377 0031  ld   $31         ;'1'
              8378 0047  ld   $47         ;'G'
              8379 004f  ld   $4f         ;'O'
              837a 0054  ld   $54         ;'T'
              837b 004f  ld   $4f         ;'O'
              837c 0036  ld   $36         ;'6'
              837d 0033  ld   $33         ;'3'
              837e 0033  ld   $33         ;'3'
              837f 0030  ld   $30         ;'0'
              8380 0000  ld   $00         ;'\x00'
              8381 0043  ld   $43
              8382 00e0  ld   $e0
              8383 0006  ld   $06
              8384 0028  ld   $28
              8385 0019  ld   $19
              8386 004a  ld   $4a         ;'J'
              8387 003d  ld   $3d         ;'='
              8388 0030  ld   $30         ;'0'
              8389 0000  ld   $00         ;'\x00'
              838a 0044  ld   $44
              838b 00a0  ld   $a0
              838c 0009  ld   $09
              838d 0032  ld   $32
              838e 0019  ld   $19
              838f 0052  ld   $52         ;'R'
              8390 0045  ld   $45         ;'E'
              8391 0054  ld   $54         ;'T'
              8392 0055  ld   $55         ;'U'
              8393 0052  ld   $52         ;'R'
              8394 004e  ld   $4e         ;'N'
              8395 0000  ld   $00         ;'\x00'
              8396 0044  ld   $44
              8397 00c0  ld   $c0
              8398 000b  ld   $0b
              8399 0064  ld   $64
              839a 0019  ld   $19
              839b 004c  ld   $4c         ;'L'
              839c 003d  ld   $3d         ;'='
              839d 0041  ld   $41         ;'A'
              839e 0028  ld   $28         ;'('
              839f 004a  ld   $4a         ;'J'
              83a0 002d  ld   $2d         ;'-'
              83a1 0044  ld   $44         ;'D'
              83a2 0029  ld   $29         ;')'
              83a3 0000  ld   $00         ;'\x00'
              83a4 0044  ld   $44
              83a5 00e0  ld   $e0
              83a6 0009  ld   $09
              83a7 0066  ld   $66
              83a8 0019  ld   $19
              83a9 004d  ld   $4d         ;'M'
              83aa 003d  ld   $3d         ;'='
              83ab 0041  ld   $41         ;'A'
              83ac 0028  ld   $28         ;'('
              83ad 004a  ld   $4a         ;'J'
              83ae 0029  ld   $29         ;')'
              83af 0000  ld   $00         ;'\x00'
              83b0 0045  ld   $45
              83b1 00a0  ld   $a0
              83b2 000b  ld   $0b
              83b3 006e  ld   $6e
              83b4 0019  ld   $19
              83b5 004e  ld   $4e         ;'N'
              83b6 003d  ld   $3d         ;'='
              83b7 0041  ld   $41         ;'A'
              83b8 0028  ld   $28         ;'('
              83b9 004a  ld   $4a         ;'J'
              83ba 002b  ld   $2b         ;'+'
              83bb 0044  ld   $44         ;'D'
              83bc 0029  ld   $29         ;')'
              83bd 0000  ld   $00         ;'\x00'
              83be 0045  ld   $45
              83bf 00c0  ld   $c0
              83c0 0009  ld   $09
              83c1 0082  ld   $82
              83c2 0019  ld   $19
              83c3 0052  ld   $52         ;'R'
              83c4 0045  ld   $45         ;'E'
              83c5 0054  ld   $54         ;'T'
              83c6 0055  ld   $55         ;'U'
              83c7 0052  ld   $52         ;'R'
              83c8 004e  ld   $4e         ;'N'
              83c9 0000  ld   $00         ;'\x00'
              83ca 0045  ld   $45
              83cb 00e2  ld   $e2
              83cc 0004  ld   $04
              83cd 0052  ld   $52         ;'R'
              83ce 0055  ld   $55         ;'U'
              83cf 004e  ld   $4e         ;'N'
              83d0 0000  ld   $00         ;'\x00'
              83d1 001b  ld   $1b
              83d2 00a0  ld   $a0
              83d3 0002  ld   $02
              83d4 00e0  ld   $e0
              83d5 0045  ld   $45
              83d6 0000  ld   $00
              83d7 0000  ld   $00         ;End of Apps/TicTac/TicTac_v2.gtb, size 2007
                                          ;+-----------------------------------+
                                          ;| Apps/WozMon/WozMon_v2.gcl         |
                                          ;+-----------------------------------+
              83d8 dc54  st   $54,[y,x++] ;'T'
              83d9 dc69  st   $69,[y,x++] ;'i'
              83da dc63  st   $63,[y,x++] ;'c'
              83db dc54  st   $54,[y,x++] ;'T'
              83dc dc61  st   $61,[y,x++] ;'a'
              83dd dc63  st   $63,[y,x++] ;'c'
              83de dc00  st   $00,[y,x++] ;'\x00'
              83df dc00  st   $00,[y,x++] ;'\x00'
              83e0 00d9  ld   $d9
              83e1 c218  st   [$18]
              83e2 007b  ld   $7b
              83e3 14e0  ld   $e0,y
              83e4 e071  jmp  y,$71
              83e5 c219  st   [$19]
WozMon:       83e6 0002  ld   $02         ;| RAM segment address (high byte first)
              83e7 0000  ld   $00         ;|
              83e8 00e2  ld   $e2         ;| Length (1..256)
              83e9 00cd  ld   $cd         ;0200 DEF
              83ea 000a  ld   $0a
              83eb 002a  ld   $2a
              83ec 002a  ld   $2a
              83ed 0020  ld   $20
              83ee 0057  ld   $57
              83ef 006f  ld   $6f
              83f0 007a  ld   $7a
              83f1 004d  ld   $4d
              83f2 006f  ld   $6f
              83f3 006e  ld   $6e
              83f4 0000  ld   $00
              83f5 002b  ld   $2b         ;020c STW
              83f6 0030  ld   $30         ;020c 'tmp'
              83f7 0011  ld   $11         ;020e LDWI
              83f8 00df  ld   $df
              83f9 0001  ld   $01
              83fa 00f6  ld   $f6         ;0211 DEEK
              83fb fe00  bra  ac          ;+-----------------------------------+
              83fc fcfd  bra  $83fd       ;|                                   |
              83fd 1418  ld   $18,y       ;| Trampoline for page $8300 lookups |
              83fe e006  jmp  y,$06       ;|                                   |
              83ff c218  st   [$18]       ;+-----------------------------------+
              8400 002b  ld   $2b         ;0212 STW
              8401 0032  ld   $32         ;0212 'Pos'
              8402 00cd  ld   $cd         ;0214 DEF
              8403 0060  ld   $60
              8404 00e6  ld   $e6         ;0216 SUBI
              8405 0052  ld   $52
              8406 0035  ld   $35         ;0218 BCC
              8407 0053  ld   $53         ;0219 GE
              8408 0022  ld   $22
              8409 00e3  ld   $e3         ;021b ADDI
              840a 0032  ld   $32
              840b 002b  ld   $2b         ;021d STW
              840c 0034  ld   $34         ;021d 'i'
              840d 0011  ld   $11         ;021f LDWI
              840e 0000  ld   $00
              840f 0007  ld   $07
              8410 0090  ld   $90         ;0222 BRA
              8411 0027  ld   $27
              8412 002b  ld   $2b         ;0224 STW
              8413 0034  ld   $34         ;0224 'i'
              8414 0011  ld   $11         ;0226 LDWI
              8415 0000  ld   $00
              8416 0008  ld   $08
              8417 002b  ld   $2b         ;0229 STW
              8418 0036  ld   $36         ;0229 'k'
              8419 0021  ld   $21         ;022b LDW
              841a 0034  ld   $34         ;022b 'i'
              841b 00e9  ld   $e9         ;022d LSLW
              841c 00e9  ld   $e9         ;022e LSLW
              841d 0099  ld   $99         ;022f ADDW
              841e 0034  ld   $34         ;022f 'i'
              841f 0099  ld   $99         ;0231 ADDW
              8420 0036  ld   $36         ;0231 'k'
              8421 002b  ld   $2b         ;0233 STW
              8422 0036  ld   $36         ;0233 'k'
              8423 0011  ld   $11         ;0235 LDWI
              8424 00e1  ld   $e1
              8425 0004  ld   $04
              8426 002b  ld   $2b         ;0238 STW
              8427 0022  ld   $22
              8428 0021  ld   $21         ;023a LDW
              8429 002a  ld   $2a
              842a 002b  ld   $2b         ;023c STW
              842b 0024  ld   $24
              842c 0021  ld   $21         ;023e LDW
              842d 0032  ld   $32         ;023e 'Pos'
              842e 002b  ld   $2b         ;0240 STW
              842f 0028  ld   $28
              8430 00ec  ld   $ec         ;0242 STLW
              8431 00fe  ld   $fe
              8432 00e3  ld   $e3         ;0244 ADDI
              8433 0006  ld   $06
              8434 002b  ld   $2b         ;0246 STW
              8435 0032  ld   $32         ;0246 'Pos'
              8436 0059  ld   $59         ;0248 LDI
              8437 0005  ld   $05
              8438 002b  ld   $2b         ;024a STW
              8439 0034  ld   $34         ;024a 'i'
              843a 0021  ld   $21         ;024c LDW
              843b 0036  ld   $36         ;024c 'k'
              843c 007f  ld   $7f         ;024e LUP
              843d 0000  ld   $00
              843e 005e  ld   $5e         ;0250 ST
              843f 0026  ld   $26
              8440 00b4  ld   $b4         ;0252 SYS
              8441 00cc  ld   $cc
              8442 0093  ld   $93         ;0254 INC
              8443 0036  ld   $36         ;0254 'k'
              8444 0093  ld   $93         ;0256 INC
              8445 0028  ld   $28
              8446 0021  ld   $21         ;0258 LDW
              8447 0034  ld   $34         ;0258 'i'
              8448 00e6  ld   $e6         ;025a SUBI
              8449 0001  ld   $01
              844a 0035  ld   $35         ;025c BCC
              844b 004d  ld   $4d         ;025d GT
              844c 0048  ld   $48
              844d 00ee  ld   $ee         ;025f LDLW
              844e 00fe  ld   $fe
              844f 00ff  ld   $ff         ;0261 RET
              8450 002b  ld   $2b         ;0262 STW
              8451 0038  ld   $38         ;0262 'PrintChar'
              8452 00cd  ld   $cd         ;0264 DEF
              8453 00ad  ld   $ad
              8454 001a  ld   $1a         ;0266 LD
              8455 0032  ld   $32         ;0266 'Pos'
              8456 0035  ld   $35         ;0268 BCC
              8457 003f  ld   $3f         ;0269 EQ
              8458 00ac  ld   $ac
              8459 0011  ld   $11         ;026b LDWI
              845a 00e1  ld   $e1
              845b 0004  ld   $04
              845c 002b  ld   $2b         ;026e STW
              845d 0022  ld   $22
              845e 0011  ld   $11         ;0270 LDWI
              845f 0000  ld   $00
              8460 0008  ld   $08
              8461 005e  ld   $5e         ;0273 ST
              8462 0032  ld   $32         ;0273 'Pos'
              8463 0099  ld   $99         ;0275 ADDW
              8464 0032  ld   $32         ;0275 'Pos'
              8465 0035  ld   $35         ;0277 BCC
              8466 0053  ld   $53         ;0278 GE
              8467 007b  ld   $7b
              8468 0011  ld   $11         ;027a LDWI
              8469 0000  ld   $00
              846a 0008  ld   $08
              846b 002b  ld   $2b         ;027d STW
              846c 0032  ld   $32         ;027d 'Pos'
              846d 002b  ld   $2b         ;027f STW
              846e 0028  ld   $28
              846f 005e  ld   $5e         ;0281 ST
              8470 0026  ld   $26
              8471 00b4  ld   $b4         ;0283 SYS
              8472 00cc  ld   $cc
              8473 0093  ld   $93         ;0285 INC
              8474 0028  ld   $28
              8475 001a  ld   $1a         ;0287 LD
              8476 0028  ld   $28
              8477 008c  ld   $8c         ;0289 XORI
              8478 00a0  ld   $a0
              8479 0035  ld   $35         ;028b BCC
              847a 0072  ld   $72         ;028c NE
              847b 0081  ld   $81
              847c 0011  ld   $11         ;028e LDWI
              847d 00ee  ld   $ee
              847e 0001  ld   $01
              847f 002b  ld   $2b         ;0291 STW
              8480 0034  ld   $34         ;0291 'i'
              8481 0021  ld   $21         ;0293 LDW
              8482 0034  ld   $34         ;0293 'i'
              8483 00ad  ld   $ad         ;0295 PEEK
              8484 00e6  ld   $e6         ;0296 SUBI
              8485 0078  ld   $78
              8486 0035  ld   $35         ;0298 BCC
              8487 0053  ld   $53         ;0299 GE
              8488 009d  ld   $9d
              8489 008c  ld   $8c         ;029b XORI
              848a 0080  ld   $80
              848b 0090  ld   $90         ;029d BRA
              848c 009f  ld   $9f
              848d 008c  ld   $8c         ;029f XORI
              848e 0008  ld   $08
              848f 00f0  ld   $f0         ;02a1 POKE
              8490 0034  ld   $34         ;02a1 'i'
              8491 0021  ld   $21         ;02a3 LDW
              8492 0034  ld   $34         ;02a3 'i'
              8493 00e6  ld   $e6         ;02a5 SUBI
              8494 0002  ld   $02
              8495 002b  ld   $2b         ;02a7 STW
              8496 0034  ld   $34         ;02a7 'i'
              8497 008c  ld   $8c         ;02a9 XORI
              8498 00fe  ld   $fe
              8499 0035  ld   $35         ;02ab BCC
              849a 0072  ld   $72         ;02ac NE
              849b 0091  ld   $91
              849c 00ff  ld   $ff         ;02ae RET
              849d 002b  ld   $2b         ;02af STW
              849e 003a  ld   $3a         ;02af 'CNewline'
              849f 00cd  ld   $cd         ;02b1 DEF
              84a0 00d9  ld   $d9
              84a1 0075  ld   $75         ;02b3 PUSH
              84a2 002b  ld   $2b         ;02b4 STW
              84a3 0030  ld   $30         ;02b4 'tmp'
              84a4 0011  ld   $11         ;02b6 LDWI
              84a5 0052  ld   $52
              84a6 0006  ld   $06
              84a7 002b  ld   $2b         ;02b9 STW
              84a8 0022  ld   $22
              84a9 0021  ld   $21         ;02bb LDW
              84aa 0030  ld   $30         ;02bb 'tmp'
              84ab 00b4  ld   $b4         ;02bd SYS
              84ac 00f6  ld   $f6
              84ad 00e6  ld   $e6         ;02bf SUBI
              84ae 000a  ld   $0a
              84af 0035  ld   $35         ;02c1 BCC
              84b0 0050  ld   $50         ;02c2 LT
              84b1 00c4  ld   $c4
              84b2 00e3  ld   $e3         ;02c4 ADDI
              84b3 0007  ld   $07
              84b4 00e3  ld   $e3         ;02c6 ADDI
              84b5 003a  ld   $3a
              84b6 00cf  ld   $cf         ;02c8 CALL
              84b7 0038  ld   $38         ;02c8 'PrintChar'
              84b8 0021  ld   $21         ;02ca LDW
              84b9 0030  ld   $30         ;02ca 'tmp'
              84ba 0082  ld   $82         ;02cc ANDI
              84bb 000f  ld   $0f
              84bc 00e6  ld   $e6         ;02ce SUBI
              84bd 000a  ld   $0a
              84be 0035  ld   $35         ;02d0 BCC
              84bf 0050  ld   $50         ;02d1 LT
              84c0 00d3  ld   $d3
              84c1 00e3  ld   $e3         ;02d3 ADDI
              84c2 0007  ld   $07
              84c3 00e3  ld   $e3         ;02d5 ADDI
              84c4 003a  ld   $3a
              84c5 00cf  ld   $cf         ;02d7 CALL
              84c6 0038  ld   $38         ;02d7 'PrintChar'
              84c7 0063  ld   $63         ;02d9 POP
              84c8 00ff  ld   $ff         ;02da RET
              84c9 002b  ld   $2b         ;02db STW
              84ca 003c  ld   $3c         ;02db 'PrintByte'
              84cb 0011  ld   $11         ;02dd LDWI
              84cc 0000  ld   $00
              84cd 0003  ld   $03
              84ce 00cf  ld   $cf         ;02e0 CALL
              84cf 0018  ld   $18         ;02e0 vAC
              84d0 0003  ld   $03         ;| RAM segment address (high byte first)
              84d1 0000  ld   $00         ;|
              84d2 00f3  ld   $f3         ;| Length (1..256)
              84d3 00cd  ld   $cd         ;0300 DEF
              84d4 00d3  ld   $d3
              84d5 0075  ld   $75         ;0302 PUSH
              84d6 0059  ld   $59         ;0303 LDI
              84d7 0080  ld   $80
              84d8 002b  ld   $2b         ;0305 STW
              84d9 003e  ld   $3e         ;0305 'Buffer'
              84da 00cf  ld   $cf         ;0307 CALL
              84db 003a  ld   $3a         ;0307 'CNewline'
              84dc 0093  ld   $93         ;0309 INC
              84dd 003e  ld   $3e         ;0309 'Buffer'
              84de 0021  ld   $21         ;030b LDW
              84df 003e  ld   $3e         ;030b 'Buffer'
              84e0 00ad  ld   $ad         ;030d PEEK
              84e1 0035  ld   $35         ;030e BCC
              84e2 003f  ld   $3f         ;030f EQ
              84e3 00d1  ld   $d1
              84e4 00e6  ld   $e6         ;0311 SUBI
              84e5 002e  ld   $2e
              84e6 0035  ld   $35         ;0313 BCC
              84e7 0050  ld   $50         ;0314 LT
              84e8 0007  ld   $07
              84e9 0035  ld   $35         ;0316 BCC
              84ea 0072  ld   $72         ;0317 NE
              84eb 001d  ld   $1d
              84ec 0059  ld   $59         ;0319 LDI
              84ed 0001  ld   $01
              84ee 002b  ld   $2b         ;031b STW
              84ef 0040  ld   $40         ;031b 'Mode'
              84f0 0090  ld   $90         ;031d BRA
              84f1 0007  ld   $07
              84f2 00e6  ld   $e6         ;031f SUBI
              84f3 000c  ld   $0c
              84f4 0035  ld   $35         ;0321 BCC
              84f5 0072  ld   $72         ;0322 NE
              84f6 0028  ld   $28
              84f7 00e6  ld   $e6         ;0324 SUBI
              84f8 0001  ld   $01
              84f9 002b  ld   $2b         ;0326 STW
              84fa 0040  ld   $40         ;0326 'Mode'
              84fb fe00  bra  ac          ;+-----------------------------------+
              84fc fcfd  bra  $84fd       ;|                                   |
              84fd 1418  ld   $18,y       ;| Trampoline for page $8400 lookups |
              84fe e006  jmp  y,$06       ;|                                   |
              84ff c218  st   [$18]       ;+-----------------------------------+
              8500 0090  ld   $90         ;0328 BRA
              8501 0007  ld   $07
              8502 00e6  ld   $e6         ;032a SUBI
              8503 0018  ld   $18
              8504 0035  ld   $35         ;032c BCC
              8505 0072  ld   $72         ;032d NE
              8506 0031  ld   $31
              8507 00cf  ld   $cf         ;032f CALL
              8508 0042  ld   $42         ;032f 'Examine'
              8509 0090  ld   $90         ;0331 BRA
              850a 0007  ld   $07
              850b 0059  ld   $59         ;0333 LDI
              850c 0000  ld   $00
              850d 002b  ld   $2b         ;0335 STW
              850e 0030  ld   $30         ;0335 'tmp'
              850f 002b  ld   $2b         ;0337 STW
              8510 0044  ld   $44         ;0337 'Value'
              8511 00e9  ld   $e9         ;0339 LSLW
              8512 00e9  ld   $e9         ;033a LSLW
              8513 00e9  ld   $e9         ;033b LSLW
              8514 00e9  ld   $e9         ;033c LSLW
              8515 002b  ld   $2b         ;033d STW
              8516 0034  ld   $34         ;033d 'i'
              8517 0021  ld   $21         ;033f LDW
              8518 003e  ld   $3e         ;033f 'Buffer'
              8519 00ad  ld   $ad         ;0341 PEEK
              851a 0093  ld   $93         ;0342 INC
              851b 003e  ld   $3e         ;0342 'Buffer'
              851c 00e6  ld   $e6         ;0344 SUBI
              851d 0030  ld   $30
              851e 0035  ld   $35         ;0346 BCC
              851f 0050  ld   $50         ;0347 LT
              8520 0068  ld   $68
              8521 00e6  ld   $e6         ;0349 SUBI
              8522 000a  ld   $0a
              8523 0035  ld   $35         ;034b BCC
              8524 0053  ld   $53         ;034c GE
              8525 0054  ld   $54
              8526 002b  ld   $2b         ;034e STW
              8527 0030  ld   $30         ;034e 'tmp'
              8528 00e3  ld   $e3         ;0350 ADDI
              8529 000a  ld   $0a
              852a 0099  ld   $99         ;0352 ADDW
              852b 0034  ld   $34         ;0352 'i'
              852c 0090  ld   $90         ;0354 BRA
              852d 0035  ld   $35
              852e 00e6  ld   $e6         ;0356 SUBI
              852f 0006  ld   $06
              8530 0082  ld   $82         ;0358 ANDI
              8531 001f  ld   $1f
              8532 0035  ld   $35         ;035a BCC
              8533 0056  ld   $56         ;035b LE
              8534 0068  ld   $68
              8535 00e6  ld   $e6         ;035d SUBI
              8536 0007  ld   $07
              8537 0035  ld   $35         ;035f BCC
              8538 0053  ld   $53         ;0360 GE
              8539 0068  ld   $68
              853a 002b  ld   $2b         ;0362 STW
              853b 0030  ld   $30         ;0362 'tmp'
              853c 00e3  ld   $e3         ;0364 ADDI
              853d 0010  ld   $10
              853e 0099  ld   $99         ;0366 ADDW
              853f 0034  ld   $34         ;0366 'i'
              8540 0090  ld   $90         ;0368 BRA
              8541 0035  ld   $35
              8542 0021  ld   $21         ;036a LDW
              8543 0030  ld   $30         ;036a 'tmp'
              8544 0035  ld   $35         ;036c BCC
              8545 003f  ld   $3f         ;036d EQ
              8546 00cd  ld   $cd
              8547 0021  ld   $21         ;036f LDW
              8548 003e  ld   $3e         ;036f 'Buffer'
              8549 00e6  ld   $e6         ;0371 SUBI
              854a 0002  ld   $02
              854b 002b  ld   $2b         ;0373 STW
              854c 003e  ld   $3e         ;0373 'Buffer'
              854d 0021  ld   $21         ;0375 LDW
              854e 0040  ld   $40         ;0375 'Mode'
              854f 0035  ld   $35         ;0377 BCC
              8550 0053  ld   $53         ;0378 GE
              8551 0084  ld   $84
              8552 0021  ld   $21         ;037a LDW
              8553 0044  ld   $44         ;037a 'Value'
              8554 00f0  ld   $f0         ;037c POKE
              8555 0046  ld   $46         ;037c 'Store'
              8556 0021  ld   $21         ;037e LDW
              8557 0046  ld   $46         ;037e 'Store'
              8558 00e3  ld   $e3         ;0380 ADDI
              8559 0001  ld   $01
              855a 002b  ld   $2b         ;0382 STW
              855b 0046  ld   $46         ;0382 'Store'
              855c 0090  ld   $90         ;0384 BRA
              855d 0007  ld   $07
              855e 0035  ld   $35         ;0386 BCC
              855f 0072  ld   $72         ;0387 NE
              8560 0091  ld   $91
              8561 00cf  ld   $cf         ;0389 CALL
              8562 003a  ld   $3a         ;0389 'CNewline'
              8563 0021  ld   $21         ;038b LDW
              8564 0044  ld   $44         ;038b 'Value'
              8565 002b  ld   $2b         ;038d STW
              8566 0046  ld   $46         ;038d 'Store'
              8567 00e6  ld   $e6         ;038f SUBI
              8568 0001  ld   $01
              8569 002b  ld   $2b         ;0391 STW
              856a 0042  ld   $42         ;0391 'Examine'
              856b 0021  ld   $21         ;0393 LDW
              856c 0042  ld   $42         ;0393 'Examine'
              856d 00b8  ld   $b8         ;0395 SUBW
              856e 0044  ld   $44         ;0395 'Value'
              856f 0035  ld   $35         ;0397 BCC
              8570 0053  ld   $53         ;0398 GE
              8571 00c7  ld   $c7
              8572 0021  ld   $21         ;039a LDW
              8573 0042  ld   $42         ;039a 'Examine'
              8574 00e3  ld   $e3         ;039c ADDI
              8575 0001  ld   $01
              8576 002b  ld   $2b         ;039e STW
              8577 0042  ld   $42         ;039e 'Examine'
              8578 0082  ld   $82         ;03a0 ANDI
              8579 0007  ld   $07
              857a 0035  ld   $35         ;03a2 BCC
              857b 0072  ld   $72         ;03a3 NE
              857c 00a5  ld   $a5
              857d 00cf  ld   $cf         ;03a5 CALL
              857e 003a  ld   $3a         ;03a5 'CNewline'
              857f 001a  ld   $1a         ;03a7 LD
              8580 0032  ld   $32         ;03a7 'Pos'
              8581 0035  ld   $35         ;03a9 BCC
              8582 0072  ld   $72         ;03aa NE
              8583 00ba  ld   $ba
              8584 0059  ld   $59         ;03ac LDI
              8585 0002  ld   $02
              8586 005e  ld   $5e         ;03ae ST
              8587 0032  ld   $32         ;03ae 'Pos'
              8588 001a  ld   $1a         ;03b0 LD
              8589 0043  ld   $43         ;03b0 'Examine'+1
              858a 00cf  ld   $cf         ;03b2 CALL
              858b 003c  ld   $3c         ;03b2 'PrintByte'
              858c 001a  ld   $1a         ;03b4 LD
              858d 0042  ld   $42         ;03b4 'Examine'
              858e 00cf  ld   $cf         ;03b6 CALL
              858f 003c  ld   $3c         ;03b6 'PrintByte'
              8590 0059  ld   $59         ;03b8 LDI
              8591 003a  ld   $3a
              8592 00cf  ld   $cf         ;03ba CALL
              8593 0038  ld   $38         ;03ba 'PrintChar'
              8594 0021  ld   $21         ;03bc LDW
              8595 0032  ld   $32         ;03bc 'Pos'
              8596 00e3  ld   $e3         ;03be ADDI
              8597 0004  ld   $04
              8598 002b  ld   $2b         ;03c0 STW
              8599 0032  ld   $32         ;03c0 'Pos'
              859a 0021  ld   $21         ;03c2 LDW
              859b 0042  ld   $42         ;03c2 'Examine'
              859c 00ad  ld   $ad         ;03c4 PEEK
              859d 00cf  ld   $cf         ;03c5 CALL
              859e 003c  ld   $3c         ;03c5 'PrintByte'
              859f 0090  ld   $90         ;03c7 BRA
              85a0 0091  ld   $91
              85a1 0059  ld   $59         ;03c9 LDI
              85a2 0000  ld   $00
              85a3 002b  ld   $2b         ;03cb STW
              85a4 0040  ld   $40         ;03cb 'Mode'
              85a5 0090  ld   $90         ;03cd BRA
              85a6 0007  ld   $07
              85a7 0059  ld   $59         ;03cf LDI
              85a8 005c  ld   $5c
              85a9 00cf  ld   $cf         ;03d1 CALL
              85aa 0038  ld   $38         ;03d1 'PrintChar'
              85ab 0063  ld   $63         ;03d3 POP
              85ac 00ff  ld   $ff         ;03d4 RET
              85ad 002b  ld   $2b         ;03d5 STW
              85ae 0048  ld   $48         ;03d5 'ProcessBuffer'
              85af 0093  ld   $93         ;03d7 INC
              85b0 0032  ld   $32         ;03d7 'Pos'
              85b1 0011  ld   $11         ;03d9 LDWI
              85b2 0020  ld   $20
              85b3 000f  ld   $0f
              85b4 002b  ld   $2b         ;03dc STW
              85b5 002a  ld   $2a
              85b6 005e  ld   $5e         ;03de ST
              85b7 0024  ld   $24
              85b8 00cf  ld   $cf         ;03e0 CALL
              85b9 003a  ld   $3a         ;03e0 'CNewline'
              85ba 0059  ld   $59         ;03e2 LDI
              85bb 002a  ld   $2a
              85bc 00cf  ld   $cf         ;03e4 CALL
              85bd 0038  ld   $38         ;03e4 'PrintChar'
              85be 0021  ld   $21         ;03e6 LDW
              85bf 0030  ld   $30         ;03e6 'tmp'
              85c0 00ad  ld   $ad         ;03e8 PEEK
              85c1 0093  ld   $93         ;03e9 INC
              85c2 0030  ld   $30         ;03e9 'tmp'
              85c3 0035  ld   $35         ;03eb BCC
              85c4 0072  ld   $72         ;03ec NE
              85c5 00e2  ld   $e2
              85c6 0011  ld   $11         ;03ee LDWI
              85c7 0000  ld   $00
              85c8 0004  ld   $04
              85c9 00cf  ld   $cf         ;03f1 CALL
              85ca 0018  ld   $18         ;03f1 vAC
              85cb 0004  ld   $04         ;| RAM segment address (high byte first)
              85cc 0000  ld   $00         ;|
              85cd 0072  ld   $72         ;| Length (1..256)
              85ce 0059  ld   $59         ;0400 LDI
              85cf 0081  ld   $81
              85d0 002b  ld   $2b         ;0402 STW
              85d1 003e  ld   $3e         ;0402 'Buffer'
              85d2 00cf  ld   $cf         ;0404 CALL
              85d3 003a  ld   $3a         ;0404 'CNewline'
              85d4 0059  ld   $59         ;0406 LDI
              85d5 007f  ld   $7f
              85d6 005e  ld   $5e         ;0408 ST
              85d7 002b  ld   $2b
              85d8 00cf  ld   $cf         ;040a CALL
              85d9 0038  ld   $38         ;040a 'PrintChar'
              85da 002b  ld   $2b         ;040c STW
              85db 0032  ld   $32         ;040c 'Pos'
              85dc 001a  ld   $1a         ;040e LD
              85dd 000f  ld   $0f
              85de 002b  ld   $2b         ;0410 STW
              85df 0030  ld   $30         ;0410 'tmp'
              85e0 001a  ld   $1a         ;0412 LD
              85e1 000f  ld   $0f
              85e2 00f0  ld   $f0         ;0414 POKE
              85e3 003e  ld   $3e         ;0414 'Buffer'
              85e4 00fc  ld   $fc         ;0416 XORW
              85e5 0030  ld   $30         ;0416 'tmp'
              85e6 0035  ld   $35         ;0418 BCC
              85e7 0072  ld   $72         ;0419 NE
              85e8 001e  ld   $1e
              85e9 0021  ld   $21         ;041b LDW
              85ea 003e  ld   $3e         ;041b 'Buffer'
              85eb 00ad  ld   $ad         ;041d PEEK
              85ec 0090  ld   $90         ;041e BRA
              85ed 000e  ld   $0e
              85ee 0021  ld   $21         ;0420 LDW
              85ef 003e  ld   $3e         ;0420 'Buffer'
              85f0 00ad  ld   $ad         ;0422 PEEK
              85f1 008c  ld   $8c         ;0423 XORI
              85f2 000a  ld   $0a
              85f3 0035  ld   $35         ;0425 BCC
              85f4 003f  ld   $3f         ;0426 EQ
              85f5 0060  ld   $60
              85f6 008c  ld   $8c         ;0428 XORI
              85f7 0075  ld   $75
              85f8 0035  ld   $35         ;042a BCC
              85f9 0072  ld   $72         ;042b NE
              85fa 0042  ld   $42
              85fb fe00  bra  ac          ;+-----------------------------------+
              85fc fcfd  bra  $85fd       ;|                                   |
              85fd 1418  ld   $18,y       ;| Trampoline for page $8500 lookups |
              85fe e006  jmp  y,$06       ;|                                   |
              85ff c218  st   [$18]       ;+-----------------------------------+
              8600 0059  ld   $59         ;042d LDI
              8601 0020  ld   $20
              8602 00cf  ld   $cf         ;042f CALL
              8603 0038  ld   $38         ;042f 'PrintChar'
              8604 002b  ld   $2b         ;0431 STW
              8605 0032  ld   $32         ;0431 'Pos'
              8606 001a  ld   $1a         ;0433 LD
              8607 0032  ld   $32         ;0433 'Pos'
              8608 00e6  ld   $e6         ;0435 SUBI
              8609 0006  ld   $06
              860a 0035  ld   $35         ;0437 BCC
              860b 0050  ld   $50         ;0438 LT
              860c 0040  ld   $40
              860d 005e  ld   $5e         ;043a ST
              860e 0032  ld   $32         ;043a 'Pos'
              860f 0021  ld   $21         ;043c LDW
              8610 003e  ld   $3e         ;043c 'Buffer'
              8611 00e6  ld   $e6         ;043e SUBI
              8612 0001  ld   $01
              8613 002b  ld   $2b         ;0440 STW
              8614 003e  ld   $3e         ;0440 'Buffer'
              8615 0090  ld   $90         ;0442 BRA
              8616 0004  ld   $04
              8617 00e6  ld   $e6         ;0444 SUBI
              8618 0060  ld   $60
              8619 0035  ld   $35         ;0446 BCC
              861a 0053  ld   $53         ;0447 GE
              861b 0004  ld   $04
              861c 001a  ld   $1a         ;0449 LD
              861d 0032  ld   $32         ;0449 'Pos'
              861e 008c  ld   $8c         ;044b XORI
              861f 0096  ld   $96
              8620 0035  ld   $35         ;044d BCC
              8621 0072  ld   $72         ;044e NE
              8622 0057  ld   $57
              8623 0059  ld   $59         ;0450 LDI
              8624 005c  ld   $5c
              8625 00cf  ld   $cf         ;0452 CALL
              8626 0038  ld   $38         ;0452 'PrintChar'
              8627 0011  ld   $11         ;0454 LDWI
              8628 0000  ld   $00
              8629 0004  ld   $04
              862a 00cf  ld   $cf         ;0457 CALL
              862b 0018  ld   $18         ;0457 vAC
              862c 0021  ld   $21         ;0459 LDW
              862d 003e  ld   $3e         ;0459 'Buffer'
              862e 00ad  ld   $ad         ;045b PEEK
              862f 00cf  ld   $cf         ;045c CALL
              8630 0038  ld   $38         ;045c 'PrintChar'
              8631 0093  ld   $93         ;045e INC
              8632 003e  ld   $3e         ;045e 'Buffer'
              8633 0090  ld   $90         ;0460 BRA
              8634 0004  ld   $04
              8635 00f0  ld   $f0         ;0462 POKE
              8636 003e  ld   $3e         ;0462 'Buffer'
              8637 002b  ld   $2b         ;0464 STW
              8638 0040  ld   $40         ;0464 'Mode'
              8639 0059  ld   $59         ;0466 LDI
              863a 0020  ld   $20
              863b 00cf  ld   $cf         ;0468 CALL
              863c 0038  ld   $38         ;0468 'PrintChar'
              863d 0059  ld   $59         ;046a LDI
              863e 000f  ld   $0f
              863f 005e  ld   $5e         ;046c ST
              8640 002b  ld   $2b
              8641 00cf  ld   $cf         ;046e CALL
              8642 0048  ld   $48         ;046e 'ProcessBuffer'
              8643 0090  ld   $90         ;0470 BRA
              8644 00fe  ld   $fe
              8645 0000  ld   $00         ;End of Apps/WozMon/WozMon_v2.gcl, size 608
                                          ;+-----------------------------------+
                                          ;| Apps/Apple-1/Apple-1_v2.gt1       |
                                          ;+-----------------------------------+
              8646 dc57  st   $57,[y,x++] ;'W'
              8647 dc6f  st   $6f,[y,x++] ;'o'
              8648 dc7a  st   $7a,[y,x++] ;'z'
              8649 dc4d  st   $4d,[y,x++] ;'M'
              864a dc6f  st   $6f,[y,x++] ;'o'
              864b dc6e  st   $6e,[y,x++] ;'n'
              864c dc00  st   $00,[y,x++] ;'\x00'
              864d dc00  st   $00,[y,x++] ;'\x00'
              864e 00e6  ld   $e6
              864f c218  st   [$18]
              8650 0083  ld   $83
              8651 14e0  ld   $e0,y
              8652 e071  jmp  y,$71
              8653 c219  st   [$19]
Apple1:       8654 0002  ld   $02
              8655 0000  ld   $00
              8656 0054  ld   $54
              8657 001a  ld   $1a
              8658 0021  ld   $21
              8659 00e6  ld   $e6
              865a 0040  ld   $40
              865b 0035  ld   $35
              865c 0053  ld   $53
              865d 000b  ld   $0b
              865e 0021  ld   $21
              865f 000e  ld   $0e
              8660 00f3  ld   $f3
              8661 0017  ld   $17
              8662 0090  ld   $90
              8663 0005  ld   $05
              8664 0059  ld   $59
              8665 00a0  ld   $a0
              8666 002b  ld   $2b
              8667 0024  ld   $24
              8668 0011  ld   $11
              8669 0060  ld   $60
              866a 007e  ld   $7e
              866b 002b  ld   $2b
              866c 0026  ld   $26
              866d 0011  ld   $11
              866e 0003  ld   $03
              866f 000b  ld   $0b
              8670 002b  ld   $2b
              8671 0022  ld   $22
              8672 00b4  ld   $b4
              8673 00f3  ld   $f3
              8674 0011  ld   $11
              8675 00ee  ld   $ee
              8676 0001  ld   $01
              8677 002b  ld   $2b
              8678 007a  ld   $7a
              8679 0059  ld   $59
              867a 007e  ld   $7e
              867b 00f0  ld   $f0
              867c 007a  ld   $7a
              867d 001a  ld   $1a
              867e 007a  ld   $7a
              867f 00e6  ld   $e6
              8680 0002  ld   $02
              8681 005e  ld   $5e
              8682 007a  ld   $7a
              8683 0035  ld   $35
              8684 0053  ld   $53
              8685 0020  ld   $20
              8686 0011  ld   $11
              8687 0001  ld   $01
              8688 0001  ld   $01
              8689 002b  ld   $2b
              868a 007a  ld   $7a
              868b 0059  ld   $59
              868c 0060  ld   $60
              868d 00f0  ld   $f0
              868e 007a  ld   $7a
              868f 0011  ld   $11
              8690 00ff  ld   $ff
              8691 0010  ld   $10
              8692 002b  ld   $2b
              8693 007a  ld   $7a
              8694 0011  ld   $11
              8695 00f6  ld   $f6
              8696 0001  ld   $01
              8697 002b  ld   $2b
              8698 007c  ld   $7c
              8699 0011  ld   $11
              869a 0000  ld   $00
              869b 005e  ld   $5e
              869c 00f3  ld   $f3
              869d 007c  ld   $7c
              869e 0059  ld   $59
              869f 00fe  ld   $fe
              86a0 005e  ld   $5e
              86a1 000e  ld   $0e
              86a2 0011  ld   $11
              86a3 0000  ld   $00
              86a4 005f  ld   $5f
              86a5 002b  ld   $2b
              86a6 001a  ld   $1a
              86a7 0011  ld   $11
              86a8 00ac  ld   $ac
              86a9 005e  ld   $5e
              86aa 00ff  ld   $ff
              86ab 0003  ld   $03
              86ac 0000  ld   $00
              86ad 00cf  ld   $cf
              86ae 00a2  ld   $a2
              86af 0024  ld   $24
              86b0 00bd  ld   $bd
              86b1 0093  ld   $93
              86b2 0003  ld   $03
              86b3 0020  ld   $20
              86b4 00ef  ld   $ef
              86b5 00ff  ld   $ff
              86b6 00ca  ld   $ca
              86b7 00d0  ld   $d0
              86b8 00f7  ld   $f7
              86b9 0086  ld   $86
              86ba 00e2  ld   $e2
              86bb 00e6  ld   $e6
              86bc 00e3  ld   $e3
              86bd 00d0  ld   $d0
              86be 0002  ld   $02
              86bf 00e6  ld   $e6
              86c0 00e4  ld   $e4
              86c1 00ad  ld   $ad
              86c2 0011  ld   $11
              86c3 00d0  ld   $d0
              86c4 0010  ld   $10
              86c5 00f5  ld   $f5
              86c6 0020  ld   $20
              86c7 00c6  ld   $c6
              86c8 0003  ld   $03
              86c9 00e6  ld   $e6
              86ca 00e2  ld   $e2
              86cb 00a5  ld   $a5
              86cc 00e2  ld   $e2
              86cd 0029  ld   $29
              86ce 000f  ld   $0f
              86cf 00c9  ld   $c9
              86d0 000a  ld   $0a
              86d1 00b0  ld   $b0
              86d2 00f6  ld   $f6
              86d3 0020  ld   $20
              86d4 00c1  ld   $c1
              86d5 0003  ld   $03
              86d6 00a5  ld   $a5
              86d7 00e2  ld   $e2
              86d8 0020  ld   $20
              86d9 00dc  ld   $dc
              86da 00ff  ld   $ff
              86db 00a9  ld   $a9
              86dc 00a0  ld   $a0
              86dd 00a8  ld   $a8
              86de 0020  ld   $20
              86df 00ef  ld   $ef
              86e0 00ff  ld   $ff
              86e1 00a5  ld   $a5
              86e2 00e3  ld   $e3
              86e3 0085  ld   $85
              86e4 00e5  ld   $e5
              86e5 00a5  ld   $a5
              86e6 00e4  ld   $e4
              86e7 00a2  ld   $a2
              86e8 0005  ld   $05
              86e9 0094  ld   $94
              86ea 00e5  ld   $e5
              86eb 00a0  ld   $a0
              86ec 0003  ld   $03
              86ed 004a  ld   $4a
              86ee 0026  ld   $26
              86ef 00e5  ld   $e5
              86f0 0036  ld   $36
              86f1 00e5  ld   $e5
              86f2 0088  ld   $88
              86f3 00d0  ld   $d0
              86f4 00f8  ld   $f8
              86f5 00ca  ld   $ca
              86f6 00d0  ld   $d0
              86f7 00f1  ld   $f1
              86f8 0020  ld   $20
              86f9 00c6  ld   $c6
              86fa 0003  ld   $03
              86fb fe00  bra  ac          ;+-----------------------------------+
              86fc fcfd  bra  $86fd       ;|                                   |
              86fd 1418  ld   $18,y       ;| Trampoline for page $8600 lookups |
              86fe e006  jmp  y,$06       ;|                                   |
              86ff c218  st   [$18]       ;+-----------------------------------+
              8700 0020  ld   $20
              8701 00ef  ld   $ef
              8702 00ff  ld   $ff
              8703 0049  ld   $49
              8704 00b0  ld   $b0
              8705 00c9  ld   $c9
              8706 0008  ld   $08
              8707 00b0  ld   $b0
              8708 00cf  ld   $cf
              8709 0095  ld   $95
              870a 00ef  ld   $ef
              870b 00ca  ld   $ca
              870c 00e0  ld   $e0
              870d 00fb  ld   $fb
              870e 00d0  ld   $d0
              870f 00ed  ld   $ed
              8710 00a0  ld   $a0
              8711 00fb  ld   $fb
              8712 00a9  ld   $a9
              8713 00a0  ld   $a0
              8714 0020  ld   $20
              8715 00ef  ld   $ef
              8716 00ff  ld   $ff
              8717 00b5  ld   $b5
              8718 00f0  ld   $f0
              8719 00d5  ld   $d5
              871a 00eb  ld   $eb
              871b 00d0  ld   $d0
              871c 000d  ld   $0d
              871d 0094  ld   $94
              871e 00eb  ld   $eb
              871f 00a9  ld   $a9
              8720 00ab  ld   $ab
              8721 0095  ld   $95
              8722 00f0  ld   $f0
              8723 00c8  ld   $c8
              8724 00d0  ld   $d0
              8725 00ee  ld   $ee
              8726 00a2  ld   $a2
              8727 002d  ld   $2d
              8728 00d0  ld   $d0
              8729 008b  ld   $8b
              872a 00e8  ld   $e8
              872b 00d0  ld   $d0
              872c 00ea  ld   $ea
              872d 00a0  ld   $a0
              872e 00fb  ld   $fb
              872f 00b6  ld   $b6
              8730 00f0  ld   $f0
              8731 008a  ld   $8a
              8732 00a2  ld   $a2
              8733 00fb  ld   $fb
              8734 00d5  ld   $d5
              8735 00eb  ld   $eb
              8736 00d0  ld   $d0
              8737 0007  ld   $07
              8738 0094  ld   $94
              8739 00eb  ld   $eb
              873a 00a9  ld   $a9
              873b 00ad  ld   $ad
              873c 0020  ld   $20
              873d 00ef  ld   $ef
              873e 00ff  ld   $ff
              873f 00e8  ld   $e8
              8740 00d0  ld   $d0
              8741 00f2  ld   $f2
              8742 00c8  ld   $c8
              8743 00d0  ld   $d0
              8744 00ea  ld   $ea
              8745 00f0  ld   $f0
              8746 0087  ld   $87
              8747 00bf  ld   $bf
              8748 00d9  ld   $d9
              8749 00c4  ld   $c4
              874a 00c1  ld   $c1
              874b 00c5  ld   $c5
              874c 00d2  ld   $d2
              874d 008d  ld   $8d
              874e 008d  ld   $8d
              874f 00b7  ld   $b7
              8750 00ad  ld   $ad
              8751 00b0  ld   $b0
              8752 00a0  ld   $a0
              8753 00cd  ld   $cd
              8754 00cf  ld   $cf
              8755 00d2  ld   $d2
              8756 00c6  ld   $c6
              8757 00a0  ld   $a0
              8758 00d3  ld   $d3
              8759 00d4  ld   $d4
              875a 00c9  ld   $c9
              875b 00c7  ld   $c7
              875c 00c9  ld   $c9
              875d 00c4  ld   $c4
              875e 00a0  ld   $a0
              875f 00c5  ld   $c5
              8760 00d6  ld   $d6
              8761 00c9  ld   $c9
              8762 00c6  ld   $c6
              8763 00a0  ld   $a0
              8764 00d3  ld   $d3
              8765 00d3  ld   $d3
              8766 00c5  ld   $c5
              8767 00d5  ld   $d5
              8768 00c7  ld   $c7
              8769 008d  ld   $8d
              876a 008d  ld   $8d
              876b 00ce  ld   $ce
              876c 00c9  ld   $c9
              876d 00d7  ld   $d7
              876e 00a0  ld   $a0
              876f 00d5  ld   $d5
              8770 00cf  ld   $cf
              8771 00d9  ld   $d9
              8772 00a0  ld   $a0
              8773 00ab  ld   $ab
              8774 00a9  ld   $a9
              8775 008d  ld   $8d
              8776 004c  ld   $4c
              8777 00ef  ld   $ef
              8778 00ff  ld   $ff
              8779 00ad  ld   $ad
              877a 0011  ld   $11
              877b 00d0  ld   $d0
              877c 0010  ld   $10
              877d 00fb  ld   $fb
              877e 00ad  ld   $ad
              877f 0010  ld   $10
              8780 00d0  ld   $d0
              8781 0060  ld   $60
              8782 0004  ld   $04
              8783 0000  ld   $00
              8784 0000  ld   $00
              8785 00d8  ld   $d8
              8786 00a2  ld   $a2
              8787 00ff  ld   $ff
              8788 009a  ld   $9a
              8789 00a9  ld   $a9
              878a 002a  ld   $2a
              878b 0085  ld   $85
              878c 005a  ld   $5a
              878d 0020  ld   $20
              878e 0055  ld   $55
              878f 0005  ld   $05
              8790 00a9  ld   $a9
              8791 008b  ld   $8b
              8792 0085  ld   $85
              8793 0058  ld   $58
              8794 00a9  ld   $a9
              8795 0006  ld   $06
              8796 0085  ld   $85
              8797 0059  ld   $59
              8798 0020  ld   $20
              8799 00ad  ld   $ad
              879a 0004  ld   $04
              879b 0020  ld   $20
              879c 00cb  ld   $cb
              879d 0004  ld   $04
              879e 00d0  ld   $d0
              879f 000e  ld   $0e
              87a0 00a9  ld   $a9
              87a1 00be  ld   $be
              87a2 0085  ld   $85
              87a3 0058  ld   $58
              87a4 00a9  ld   $a9
              87a5 0006  ld   $06
              87a6 0085  ld   $85
              87a7 0059  ld   $59
              87a8 0020  ld   $20
              87a9 00ad  ld   $ad
              87aa 0004  ld   $04
              87ab 0020  ld   $20
              87ac 00e8  ld   $e8
              87ad 0004  ld   $04
              87ae 0020  ld   $20
              87af 001f  ld   $1f
              87b0 0006  ld   $06
              87b1 0020  ld   $20
              87b2 006a  ld   $6a
              87b3 0005  ld   $05
              87b4 0020  ld   $20
              87b5 00e8  ld   $e8
              87b6 0004  ld   $04
              87b7 0020  ld   $20
              87b8 00a8  ld   $a8
              87b9 0004  ld   $04
              87ba 0020  ld   $20
              87bb 0009  ld   $09
              87bc 0005  ld   $05
              87bd 0020  ld   $20
              87be 0027  ld   $27
              87bf 0005  ld   $05
              87c0 0020  ld   $20
              87c1 00bb  ld   $bb
              87c2 0004  ld   $04
              87c3 00c9  ld   $c9
              87c4 0051  ld   $51
              87c5 00d0  ld   $d0
              87c6 0003  ld   $03
              87c7 004c  ld   $4c
              87c8 009a  ld   $9a
              87c9 0004  ld   $04
              87ca 0020  ld   $20
              87cb 009e  ld   $9e
              87cc 0005  ld   $05
              87cd 00a5  ld   $a5
              87ce 0051  ld   $51
              87cf 00c9  ld   $c9
              87d0 0010  ld   $10
              87d1 00d0  ld   $d0
              87d2 000a  ld   $0a
              87d3 00c6  ld   $c6
              87d4 005d  ld   $5d
              87d5 00f0  ld   $f0
              87d6 00b6  ld   $b6
              87d7 0020  ld   $20
              87d8 0038  ld   $38
              87d9 0005  ld   $05
              87da 004c  ld   $4c
              87db 003b  ld   $3b
              87dc 0004  ld   $04
              87dd 0020  ld   $20
              87de 00e8  ld   $e8
              87df 0004  ld   $04
              87e0 0020  ld   $20
              87e1 00a8  ld   $a8
              87e2 0004  ld   $04
              87e3 0020  ld   $20
              87e4 000c  ld   $0c
              87e5 0006  ld   $06
              87e6 00f0  ld   $f0
              87e7 0003  ld   $03
              87e8 004c  ld   $4c
              87e9 0035  ld   $35
              87ea 0004  ld   $04
              87eb 0020  ld   $20
              87ec 0043  ld   $43
              87ed 0005  ld   $05
              87ee 00a9  ld   $a9
              87ef 008e  ld   $8e
              87f0 0085  ld   $85
              87f1 0058  ld   $58
              87f2 00a9  ld   $a9
              87f3 0007  ld   $07
              87f4 0085  ld   $85
              87f5 0059  ld   $59
              87f6 0020  ld   $20
              87f7 00ad  ld   $ad
              87f8 0004  ld   $04
              87f9 00a5  ld   $a5
              87fa 0055  ld   $55
              87fb fe00  bra  ac          ;+-----------------------------------+
              87fc fcfd  bra  $87fd       ;|                                   |
              87fd 1418  ld   $18,y       ;| Trampoline for page $8700 lookups |
              87fe e006  jmp  y,$06       ;|                                   |
              87ff c218  st   [$18]       ;+-----------------------------------+
              8800 0020  ld   $20
              8801 00ef  ld   $ef
              8802 00ff  ld   $ff
              8803 00a9  ld   $a9
              8804 00a3  ld   $a3
              8805 0085  ld   $85
              8806 0058  ld   $58
              8807 00a9  ld   $a9
              8808 0007  ld   $07
              8809 0085  ld   $85
              880a 0059  ld   $59
              880b 0020  ld   $20
              880c 00ad  ld   $ad
              880d 0004  ld   $04
              880e 0020  ld   $20
              880f 0027  ld   $27
              8810 0005  ld   $05
              8811 00a9  ld   $a9
              8812 00bb  ld   $bb
              8813 0085  ld   $85
              8814 0058  ld   $58
              8815 00a9  ld   $a9
              8816 0007  ld   $07
              8817 0085  ld   $85
              8818 0059  ld   $59
              8819 0020  ld   $20
              881a 00ad  ld   $ad
              881b 0004  ld   $04
              881c 0020  ld   $20
              881d 00cb  ld   $cb
              881e 0004  ld   $04
              881f 00d0  ld   $d0
              8820 0003  ld   $03
              8821 004c  ld   $4c
              8822 0029  ld   $29
              8823 0004  ld   $04
              8824 00a9  ld   $a9
              8825 00d0  ld   $d0
              8826 0085  ld   $85
              8827 0058  ld   $58
              8828 00a9  ld   $a9
              8829 0007  ld   $07
              882a 0085  ld   $85
              882b 0059  ld   $59
              882c 0020  ld   $20
              882d 00ad  ld   $ad
              882e 0004  ld   $04
              882f 004c  ld   $4c
              8830 0000  ld   $00
              8831 00c1  ld   $c1
              8832 00a9  ld   $a9
              8833 000d  ld   $0d
              8834 004c  ld   $4c
              8835 00ef  ld   $ef
              8836 00ff  ld   $ff
              8837 00a0  ld   $a0
              8838 0000  ld   $00
              8839 00b1  ld   $b1
              883a 0058  ld   $58
              883b 00f0  ld   $f0
              883c 0007  ld   $07
              883d 0020  ld   $20
              883e 00ef  ld   $ef
              883f 00ff  ld   $ff
              8840 00c8  ld   $c8
              8841 004c  ld   $4c
              8842 00af  ld   $af
              8843 0004  ld   $04
              8844 0060  ld   $60
              8845 0020  ld   $20
              8846 00de  ld   $de
              8847 0004  ld   $04
              8848 00ad  ld   $ad
              8849 0011  ld   $11
              884a 00d0  ld   $d0
              884b 0010  ld   $10
              884c 00f8  ld   $f8
              884d 00ad  ld   $ad
              884e 0010  ld   $10
              884f 00d0  ld   $d0
              8850 0029  ld   $29
              8851 007f  ld   $7f
              8852 004c  ld   $4c
              8853 00ef  ld   $ef
              8854 00ff  ld   $ff
              8855 0020  ld   $20
              8856 00bb  ld   $bb
              8857 0004  ld   $04
              8858 00c9  ld   $c9
              8859 004e  ld   $4e
              885a 00f0  ld   $f0
              885b 000a  ld   $0a
              885c 00c9  ld   $c9
              885d 0059  ld   $59
              885e 00f0  ld   $f0
              885f 0007  ld   $07
              8860 0020  ld   $20
              8861 0038  ld   $38
              8862 0005  ld   $05
              8863 004c  ld   $4c
              8864 00cb  ld   $cb
              8865 0004  ld   $04
              8866 00ba  ld   $ba
              8867 0060  ld   $60
              8868 00a5  ld   $a5
              8869 005a  ld   $5a
              886a 000a  ld   $0a
              886b 0090  ld   $90
              886c 0002  ld   $02
              886d 0049  ld   $49
              886e 00a9  ld   $a9
              886f 0085  ld   $85
              8870 005a  ld   $5a
              8871 0060  ld   $60
              8872 0020  ld   $20
              8873 00a8  ld   $a8
              8874 0004  ld   $04
              8875 0020  ld   $20
              8876 00a8  ld   $a8
              8877 0004  ld   $04
              8878 00a2  ld   $a2
              8879 0000  ld   $00
              887a 00a0  ld   $a0
              887b 0004  ld   $04
              887c 00b5  ld   $b5
              887d 0040  ld   $40
              887e 0020  ld   $20
              887f 00ef  ld   $ef
              8880 00ff  ld   $ff
              8881 0088  ld   $88
              8882 00d0  ld   $d0
              8883 0005  ld   $05
              8884 00a0  ld   $a0
              8885 0004  ld   $04
              8886 0020  ld   $20
              8887 00a8  ld   $a8
              8888 0004  ld   $04
              8889 00e8  ld   $e8
              888a 0005  ld   $05
              888b 0000  ld   $00
              888c 0000  ld   $00
              888d 00e0  ld   $e0
              888e 0010  ld   $10
              888f 00d0  ld   $d0
              8890 00ee  ld   $ee
              8891 00a9  ld   $a9
              8892 0008  ld   $08
              8893 0085  ld   $85
              8894 005d  ld   $5d
              8895 0060  ld   $60
              8896 00e6  ld   $e6
              8897 0056  ld   $56
              8898 00a5  ld   $a5
              8899 0056  ld   $56
              889a 0029  ld   $29
              889b 000f  ld   $0f
              889c 00c9  ld   $c9
              889d 000a  ld   $0a
              889e 00b0  ld   $b0
              889f 00f6  ld   $f6
              88a0 00a5  ld   $a5
              88a1 0056  ld   $56
              88a2 0038  ld   $38
              88a3 00e9  ld   $e9
              88a4 00a0  ld   $a0
              88a5 0090  ld   $90
              88a6 000c  ld   $0c
              88a7 0085  ld   $85
              88a8 0056  ld   $56
              88a9 00e6  ld   $e6
              88aa 0057  ld   $57
              88ab 00a5  ld   $a5
              88ac 0057  ld   $57
              88ad 0029  ld   $29
              88ae 000f  ld   $0f
              88af 00c9  ld   $c9
              88b0 000a  ld   $0a
              88b1 00b0  ld   $b0
              88b2 00f6  ld   $f6
              88b3 0060  ld   $60
              88b4 00a5  ld   $a5
              88b5 0057  ld   $57
              88b6 00f0  ld   $f0
              88b7 0003  ld   $03
              88b8 0020  ld   $20
              88b9 00dc  ld   $dc
              88ba 00ff  ld   $ff
              88bb 00a5  ld   $a5
              88bc 0056  ld   $56
              88bd 0020  ld   $20
              88be 00dc  ld   $dc
              88bf 00ff  ld   $ff
              88c0 00a9  ld   $a9
              88c1 0020  ld   $20
              88c2 004c  ld   $4c
              88c3 00ef  ld   $ef
              88c4 00ff  ld   $ff
              88c5 00a9  ld   $a9
              88c6 007a  ld   $7a
              88c7 0085  ld   $85
              88c8 0058  ld   $58
              88c9 00a9  ld   $a9
              88ca 0007  ld   $07
              88cb 0085  ld   $85
              88cc 0059  ld   $59
              88cd 004c  ld   $4c
              88ce 00ad  ld   $ad
              88cf 0004  ld   $04
              88d0 00a5  ld   $a5
              88d1 005a  ld   $5a
              88d2 0029  ld   $29
              88d3 0038  ld   $38
              88d4 00aa  ld   $aa
              88d5 00bd  ld   $bd
              88d6 0049  ld   $49
              88d7 0006  ld   $06
              88d8 00f0  ld   $f0
              88d9 0007  ld   $07
              88da 0020  ld   $20
              88db 00ef  ld   $ef
              88dc 00ff  ld   $ff
              88dd 00e8  ld   $e8
              88de 004c  ld   $4c
              88df 0048  ld   $48
              88e0 0005  ld   $05
              88e1 0060  ld   $60
              88e2 00a9  ld   $a9
              88e3 0020  ld   $20
              88e4 0085  ld   $85
              88e5 004f  ld   $4f
              88e6 00a9  ld   $a9
              88e7 000f  ld   $0f
              88e8 0085  ld   $85
              88e9 0052  ld   $52
              88ea 00a2  ld   $a2
              88eb 000f  ld   $0f
              88ec 00a0  ld   $a0
              88ed 004f  ld   $4f
              88ee 0098  ld   $98
              88ef 009d  ld   $9d
              88f0 003f  ld   $3f
              88f1 0000  ld   $00
              88f2 0088  ld   $88
              88f3 00ca  ld   $ca
              88f4 00d0  ld   $d0
              88f5 00f8  ld   $f8
              88f6 0060  ld   $60
              88f7 00a9  ld   $a9
              88f8 0000  ld   $00
              88f9 0085  ld   $85
              88fa 0056  ld   $56
              88fb fe00  bra  ac          ;+-----------------------------------+
              88fc fcfd  bra  $88fd       ;|                                   |
              88fd 1418  ld   $18,y       ;| Trampoline for page $8800 lookups |
              88fe e006  jmp  y,$06       ;|                                   |
              88ff c218  st   [$18]       ;+-----------------------------------+
              8900 0085  ld   $85
              8901 0057  ld   $57
              8902 0085  ld   $85
              8903 005c  ld   $5c
              8904 00a6  ld   $a6
              8905 0055  ld   $55
              8906 00bd  ld   $bd
              8907 0013  ld   $13
              8908 0006  ld   $06
              8909 0085  ld   $85
              890a 005b  ld   $5b
              890b 0020  ld   $20
              890c 00de  ld   $de
              890d 0004  ld   $04
              890e 00a5  ld   $a5
              890f 005a  ld   $5a
              8910 0029  ld   $29
              8911 000f  ld   $0f
              8912 0018  ld   $18
              8913 0069  ld   $69
              8914 0041  ld   $41
              8915 00c5  ld   $c5
              8916 005c  ld   $5c
              8917 00f0  ld   $f0
              8918 00f2  ld   $f2
              8919 0020  ld   $20
              891a 009e  ld   $9e
              891b 0005  ld   $05
              891c 00a5  ld   $a5
              891d 0051  ld   $51
              891e 00c9  ld   $c9
              891f 0010  ld   $10
              8920 00f0  ld   $f0
              8921 00e9  ld   $e9
              8922 00a5  ld   $a5
              8923 0050  ld   $50
              8924 0085  ld   $85
              8925 005c  ld   $5c
              8926 00c6  ld   $c6
              8927 005b  ld   $5b
              8928 00d0  ld   $d0
              8929 00e1  ld   $e1
              892a 0020  ld   $20
              892b 000c  ld   $0c
              892c 0006  ld   $06
              892d 00f0  ld   $f0
              892e 00cd  ld   $cd
              892f 0060  ld   $60
              8930 0085  ld   $85
              8931 0050  ld   $50
              8932 00c9  ld   $c9
              8933 0020  ld   $20
              8934 00f0  ld   $f0
              8935 003c  ld   $3c
              8936 00a2  ld   $a2
              8937 0000  ld   $00
              8938 00b5  ld   $b5
              8939 0040  ld   $40
              893a 00c5  ld   $c5
              893b 0050  ld   $50
              893c 00f0  ld   $f0
              893d 0008  ld   $08
              893e 00e8  ld   $e8
              893f 00e0  ld   $e0
              8940 0010  ld   $10
              8941 00d0  ld   $d0
              8942 00f5  ld   $f5
              8943 004c  ld   $4c
              8944 00e0  ld   $e0
              8945 0005  ld   $05
              8946 0086  ld   $86
              8947 0051  ld   $51
              8948 008a  ld   $8a
              8949 0029  ld   $29
              894a 000c  ld   $0c
              894b 0085  ld   $85
              894c 0053  ld   $53
              894d 00a5  ld   $a5
              894e 0052  ld   $52
              894f 0029  ld   $29
              8950 000c  ld   $0c
              8951 00c5  ld   $c5
              8952 0053  ld   $53
              8953 00d0  ld   $d0
              8954 0010  ld   $10
              8955 008a  ld   $8a
              8956 0038  ld   $38
              8957 00e5  ld   $e5
              8958 0052  ld   $52
              8959 0010  ld   $10
              895a 0005  ld   $05
              895b 00a9  ld   $a9
              895c 00ff  ld   $ff
              895d 004c  ld   $4c
              895e 00f2  ld   $f2
              895f 0005  ld   $05
              8960 00a9  ld   $a9
              8961 0001  ld   $01
              8962 004c  ld   $4c
              8963 00f2  ld   $f2
              8964 0005  ld   $05
              8965 008a  ld   $8a
              8966 0029  ld   $29
              8967 0003  ld   $03
              8968 0085  ld   $85
              8969 0053  ld   $53
              896a 00a5  ld   $a5
              896b 0052  ld   $52
              896c 0029  ld   $29
              896d 0003  ld   $03
              896e 00c5  ld   $c5
              896f 0053  ld   $53
              8970 00f0  ld   $f0
              8971 0005  ld   $05
              8972 00a2  ld   $a2
              8973 0010  ld   $10
              8974 0086  ld   $86
              8975 0051  ld   $51
              8976 0060  ld   $60
              8977 008a  ld   $8a
              8978 0038  ld   $38
              8979 00e5  ld   $e5
              897a 0052  ld   $52
              897b 0010  ld   $10
              897c 0005  ld   $05
              897d 00a9  ld   $a9
              897e 00fc  ld   $fc
              897f 004c  ld   $4c
              8980 00f2  ld   $f2
              8981 0005  ld   $05
              8982 00a9  ld   $a9
              8983 0004  ld   $04
              8984 0085  ld   $85
              8985 0054  ld   $54
              8986 00a5  ld   $a5
              8987 0052  ld   $52
              8988 00aa  ld   $aa
              8989 0018  ld   $18
              898a 0065  ld   $65
              898b 0054  ld   $54
              898c 00a8  ld   $a8
              898d 00b9  ld   $b9
              898e 0040  ld   $40
              898f 0000  ld   $00
              8990 0095  ld   $95
              8991 0040  ld   $40
              8992 0006  ld   $06
              8993 0000  ld   $00
              8994 0000  ld   $00
              8995 00a9  ld   $a9
              8996 0020  ld   $20
              8997 0099  ld   $99
              8998 0040  ld   $40
              8999 0000  ld   $00
              899a 0084  ld   $84
              899b 0052  ld   $52
              899c 00c4  ld   $c4
              899d 0051  ld   $51
              899e 00d0  ld   $d0
              899f 00e9  ld   $e9
              89a0 0060  ld   $60
              89a1 00a2  ld   $a2
              89a2 000f  ld   $0f
              89a3 00a9  ld   $a9
              89a4 004f  ld   $4f
              89a5 0085  ld   $85
              89a6 0053  ld   $53
              89a7 00bd  ld   $bd
              89a8 003f  ld   $3f
              89a9 0000  ld   $00
              89aa 00c5  ld   $c5
              89ab 0053  ld   $53
              89ac 00d0  ld   $d0
              89ad 0005  ld   $05
              89ae 00c6  ld   $c6
              89af 0053  ld   $53
              89b0 00ca  ld   $ca
              89b1 00d0  ld   $d0
              89b2 00f4  ld   $f4
              89b3 0060  ld   $60
              89b4 00a9  ld   $a9
              89b5 0060  ld   $60
              89b6 0085  ld   $85
              89b7 0058  ld   $58
              89b8 00a9  ld   $a9
              89b9 0007  ld   $07
              89ba 0085  ld   $85
              89bb 0059  ld   $59
              89bc 0020  ld   $20
              89bd 00ad  ld   $ad
              89be 0004  ld   $04
              89bf 0020  ld   $20
              89c0 00bb  ld   $bb
              89c1 0004  ld   $04
              89c2 0085  ld   $85
              89c3 0055  ld   $55
              89c4 00c9  ld   $c9
              89c5 0031  ld   $31
              89c6 0010  ld   $10
              89c7 0003  ld   $03
              89c8 004c  ld   $4c
              89c9 003e  ld   $3e
              89ca 0006  ld   $06
              89cb 00a9  ld   $a9
              89cc 0035  ld   $35
              89cd 0038  ld   $38
              89ce 00e5  ld   $e5
              89cf 0055  ld   $55
              89d0 0030  ld   $30
              89d1 0001  ld   $01
              89d2 0060  ld   $60
              89d3 0020  ld   $20
              89d4 0038  ld   $38
              89d5 0005  ld   $05
              89d6 004c  ld   $4c
              89d7 002a  ld   $2a
              89d8 0006  ld   $06
              89d9 0003  ld   $03
              89da 0009  ld   $09
              89db 0013  ld   $13
              89dc 0023  ld   $23
              89dd 00ff  ld   $ff
              89de 0048  ld   $48
              89df 004f  ld   $4f
              89e0 004f  ld   $4f
              89e1 0052  ld   $52
              89e2 0041  ld   $41
              89e3 0059  ld   $59
              89e4 0021  ld   $21
              89e5 0000  ld   $00
              89e6 0048  ld   $48
              89e7 0055  ld   $55
              89e8 005a  ld   $5a
              89e9 005a  ld   $5a
              89ea 0041  ld   $41
              89eb 0048  ld   $48
              89ec 0021  ld   $21
              89ed 0000  ld   $00
              89ee 0057  ld   $57
              89ef 004f  ld   $4f
              89f0 004f  ld   $4f
              89f1 0048  ld   $48
              89f2 004f  ld   $4f
              89f3 004f  ld   $4f
              89f4 0021  ld   $21
              89f5 0000  ld   $00
              89f6 0059  ld   $59
              89f7 0049  ld   $49
              89f8 0050  ld   $50
              89f9 0050  ld   $50
              89fa 0049  ld   $49
              89fb fe00  bra  ac          ;+-----------------------------------+
              89fc fcfd  bra  $89fd       ;|                                   |
              89fd 1418  ld   $18,y       ;| Trampoline for page $8900 lookups |
              89fe e006  jmp  y,$06       ;|                                   |
              89ff c218  st   [$18]       ;+-----------------------------------+
              8a00 0045  ld   $45
              8a01 0021  ld   $21
              8a02 0000  ld   $00
              8a03 0053  ld   $53
              8a04 0057  ld   $57
              8a05 0045  ld   $45
              8a06 0045  ld   $45
              8a07 0054  ld   $54
              8a08 0021  ld   $21
              8a09 0000  ld   $00
              8a0a 0000  ld   $00
              8a0b 0043  ld   $43
              8a0c 004f  ld   $4f
              8a0d 004f  ld   $4f
              8a0e 004c  ld   $4c
              8a0f 0021  ld   $21
              8a10 0000  ld   $00
              8a11 0000  ld   $00
              8a12 0000  ld   $00
              8a13 004e  ld   $4e
              8a14 0049  ld   $49
              8a15 0043  ld   $43
              8a16 0045  ld   $45
              8a17 0021  ld   $21
              8a18 0000  ld   $00
              8a19 0000  ld   $00
              8a1a 0000  ld   $00
              8a1b 0047  ld   $47
              8a1c 0041  ld   $41
              8a1d 0044  ld   $44
              8a1e 005a  ld   $5a
              8a1f 004f  ld   $4f
              8a20 004f  ld   $4f
              8a21 004b  ld   $4b
              8a22 0053  ld   $53
              8a23 0021  ld   $21
              8a24 0000  ld   $00
              8a25 000d  ld   $0d
              8a26 000d  ld   $0d
              8a27 0031  ld   $31
              8a28 0035  ld   $35
              8a29 0020  ld   $20
              8a2a 0050  ld   $50
              8a2b 0055  ld   $55
              8a2c 005a  ld   $5a
              8a2d 005a  ld   $5a
              8a2e 004c  ld   $4c
              8a2f 0045  ld   $45
              8a30 0020  ld   $20
              8a31 002d  ld   $2d
              8a32 0020  ld   $20
              8a33 0042  ld   $42
              8a34 0059  ld   $59
              8a35 0020  ld   $20
              8a36 004a  ld   $4a
              8a37 0045  ld   $45
              8a38 0046  ld   $46
              8a39 0046  ld   $46
              8a3a 0020  ld   $20
              8a3b 004a  ld   $4a
              8a3c 0045  ld   $45
              8a3d 0054  ld   $54
              8a3e 0054  ld   $54
              8a3f 004f  ld   $4f
              8a40 004e  ld   $4e
              8a41 000d  ld   $0d
              8a42 000d  ld   $0d
              8a43 0049  ld   $49
              8a44 004e  ld   $4e
              8a45 0053  ld   $53
              8a46 0054  ld   $54
              8a47 0052  ld   $52
              8a48 0055  ld   $55
              8a49 0043  ld   $43
              8a4a 0054  ld   $54
              8a4b 0049  ld   $49
              8a4c 004f  ld   $4f
              8a4d 004e  ld   $4e
              8a4e 0053  ld   $53
              8a4f 0020  ld   $20
              8a50 0028  ld   $28
              8a51 0059  ld   $59
              8a52 002f  ld   $2f
              8a53 004e  ld   $4e
              8a54 0029  ld   $29
              8a55 003f  ld   $3f
              8a56 0020  ld   $20
              8a57 0000  ld   $00
              8a58 000d  ld   $0d
              8a59 000d  ld   $0d
              8a5a 0054  ld   $54
              8a5b 0059  ld   $59
              8a5c 0050  ld   $50
              8a5d 0045  ld   $45
              8a5e 0020  ld   $20
              8a5f 0041  ld   $41
              8a60 0020  ld   $20
              8a61 004c  ld   $4c
              8a62 0045  ld   $45
              8a63 0054  ld   $54
              8a64 0054  ld   $54
              8a65 0045  ld   $45
              8a66 0052  ld   $52
              8a67 0020  ld   $20
              8a68 004f  ld   $4f
              8a69 004e  ld   $4e
              8a6a 0020  ld   $20
              8a6b 0054  ld   $54
              8a6c 0048  ld   $48
              8a6d 0045  ld   $45
              8a6e 0020  ld   $20
              8a6f 0053  ld   $53
              8a70 0041  ld   $41
              8a71 004d  ld   $4d
              8a72 0045  ld   $45
              8a73 000d  ld   $0d
              8a74 0052  ld   $52
              8a75 004f  ld   $4f
              8a76 0057  ld   $57
              8a77 0020  ld   $20
              8a78 004f  ld   $4f
              8a79 0052  ld   $52
              8a7a 0020  ld   $20
              8a7b 0043  ld   $43
              8a7c 004f  ld   $4f
              8a7d 004c  ld   $4c
              8a7e 0055  ld   $55
              8a7f 004d  ld   $4d
              8a80 004e  ld   $4e
              8a81 0020  ld   $20
              8a82 0041  ld   $41
              8a83 0053  ld   $53
              8a84 0020  ld   $20
              8a85 0054  ld   $54
              8a86 0048  ld   $48
              8a87 0045  ld   $45
              8a88 0020  ld   $20
              8a89 0045  ld   $45
              8a8a 004d  ld   $4d
              8a8b 0050  ld   $50
              8a8c 0054  ld   $54
              8a8d 0059  ld   $59
              8a8e 000d  ld   $0d
              8a8f 0053  ld   $53
              8a90 0050  ld   $50
              8a91 0041  ld   $41
              8a92 0043  ld   $43
              8a93 0045  ld   $45
              8a94 0020  ld   $20
              8a95 0054  ld   $54
              8a96 004f  ld   $4f
              8a97 0020  ld   $20
              8a98 0053  ld   $53
              8a99 004c  ld   $4c
              8a9a 0007  ld   $07
              8a9b 0000  ld   $00
              8a9c 00d8  ld   $d8
              8a9d 0049  ld   $49
              8a9e 0044  ld   $44
              8a9f 0045  ld   $45
              8aa0 0020  ld   $20
              8aa1 0054  ld   $54
              8aa2 0048  ld   $48
              8aa3 0041  ld   $41
              8aa4 0054  ld   $54
              8aa5 0020  ld   $20
              8aa6 004c  ld   $4c
              8aa7 0045  ld   $45
              8aa8 0054  ld   $54
              8aa9 0054  ld   $54
              8aaa 0045  ld   $45
              8aab 0052  ld   $52
              8aac 000d  ld   $0d
              8aad 0028  ld   $28
              8aae 0041  ld   $41
              8aaf 004e  ld   $4e
              8ab0 0044  ld   $44
              8ab1 0020  ld   $20
              8ab2 0041  ld   $41
              8ab3 004e  ld   $4e
              8ab4 0059  ld   $59
              8ab5 0020  ld   $20
              8ab6 0042  ld   $42
              8ab7 0045  ld   $45
              8ab8 0054  ld   $54
              8ab9 0057  ld   $57
              8aba 0045  ld   $45
              8abb 0045  ld   $45
              8abc 004e  ld   $4e
              8abd 0029  ld   $29
              8abe 0020  ld   $20
              8abf 0054  ld   $54
              8ac0 004f  ld   $4f
              8ac1 0057  ld   $57
              8ac2 0041  ld   $41
              8ac3 0052  ld   $52
              8ac4 0044  ld   $44
              8ac5 0053  ld   $53
              8ac6 000d  ld   $0d
              8ac7 0054  ld   $54
              8ac8 0048  ld   $48
              8ac9 0045  ld   $45
              8aca 0020  ld   $20
              8acb 0053  ld   $53
              8acc 0050  ld   $50
              8acd 0041  ld   $41
              8ace 0043  ld   $43
              8acf 0045  ld   $45
              8ad0 002e  ld   $2e
              8ad1 0020  ld   $20
              8ad2 0054  ld   $54
              8ad3 0059  ld   $59
              8ad4 0050  ld   $50
              8ad5 0045  ld   $45
              8ad6 0020  ld   $20
              8ad7 0051  ld   $51
              8ad8 0020  ld   $20
              8ad9 0054  ld   $54
              8ada 004f  ld   $4f
              8adb 0020  ld   $20
              8adc 0051  ld   $51
              8add 0055  ld   $55
              8ade 0049  ld   $49
              8adf 0054  ld   $54
              8ae0 002e  ld   $2e
              8ae1 000d  ld   $0d
              8ae2 0054  ld   $54
              8ae3 0048  ld   $48
              8ae4 0049  ld   $49
              8ae5 0053  ld   $53
              8ae6 0020  ld   $20
              8ae7 0049  ld   $49
              8ae8 0053  ld   $53
              8ae9 0020  ld   $20
              8aea 0054  ld   $54
              8aeb 0048  ld   $48
              8aec 0045  ld   $45
              8aed 0020  ld   $20
              8aee 0053  ld   $53
              8aef 004f  ld   $4f
              8af0 004c  ld   $4c
              8af1 0056  ld   $56
              8af2 0045  ld   $45
              8af3 0044  ld   $44
              8af4 0020  ld   $20
              8af5 0050  ld   $50
              8af6 0055  ld   $55
              8af7 005a  ld   $5a
              8af8 005a  ld   $5a
              8af9 004c  ld   $4c
              8afa 0045  ld   $45
              8afb fe00  bra  ac          ;+-----------------------------------+
              8afc fcfd  bra  $8afd       ;|                                   |
              8afd 1418  ld   $18,y       ;| Trampoline for page $8a00 lookups |
              8afe e006  jmp  y,$06       ;|                                   |
              8aff c218  st   [$18]       ;+-----------------------------------+
              8b00 003a  ld   $3a
              8b01 0000  ld   $00
              8b02 000d  ld   $0d
              8b03 0044  ld   $44
              8b04 0049  ld   $49
              8b05 0046  ld   $46
              8b06 0046  ld   $46
              8b07 0049  ld   $49
              8b08 0043  ld   $43
              8b09 0055  ld   $55
              8b0a 004c  ld   $4c
              8b0b 0054  ld   $54
              8b0c 0059  ld   $59
              8b0d 0020  ld   $20
              8b0e 004c  ld   $4c
              8b0f 0045  ld   $45
              8b10 0056  ld   $56
              8b11 0045  ld   $45
              8b12 004c  ld   $4c
              8b13 0020  ld   $20
              8b14 0028  ld   $28
              8b15 0031  ld   $31
              8b16 002d  ld   $2d
              8b17 0035  ld   $35
              8b18 0029  ld   $29
              8b19 003f  ld   $3f
              8b1a 0020  ld   $20
              8b1b 0000  ld   $00
              8b1c 000d  ld   $0d
              8b1d 0053  ld   $53
              8b1e 004f  ld   $4f
              8b1f 0052  ld   $52
              8b20 0052  ld   $52
              8b21 0059  ld   $59
              8b22 002e  ld   $2e
              8b23 0020  ld   $20
              8b24 0054  ld   $54
              8b25 0052  ld   $52
              8b26 0059  ld   $59
              8b27 0020  ld   $20
              8b28 0041  ld   $41
              8b29 0047  ld   $47
              8b2a 0041  ld   $41
              8b2b 0049  ld   $49
              8b2c 004e  ld   $4e
              8b2d 003a  ld   $3a
              8b2e 0020  ld   $20
              8b2f 0000  ld   $00
              8b30 0020  ld   $20
              8b31 0059  ld   $59
              8b32 004f  ld   $4f
              8b33 0055  ld   $55
              8b34 0020  ld   $20
              8b35 0053  ld   $53
              8b36 004f  ld   $4f
              8b37 004c  ld   $4c
              8b38 0056  ld   $56
              8b39 0045  ld   $45
              8b3a 0044  ld   $44
              8b3b 000d  ld   $0d
              8b3c 0041  ld   $41
              8b3d 0020  ld   $20
              8b3e 004c  ld   $4c
              8b3f 0045  ld   $45
              8b40 0056  ld   $56
              8b41 0045  ld   $45
              8b42 004c  ld   $4c
              8b43 0020  ld   $20
              8b44 0000  ld   $00
              8b45 0020  ld   $20
              8b46 0050  ld   $50
              8b47 0055  ld   $55
              8b48 005a  ld   $5a
              8b49 005a  ld   $5a
              8b4a 004c  ld   $4c
              8b4b 0045  ld   $45
              8b4c 0021  ld   $21
              8b4d 000d  ld   $0d
              8b4e 000d  ld   $0d
              8b4f 0054  ld   $54
              8b50 004f  ld   $4f
              8b51 0054  ld   $54
              8b52 0041  ld   $41
              8b53 004c  ld   $4c
              8b54 0020  ld   $20
              8b55 004d  ld   $4d
              8b56 004f  ld   $4f
              8b57 0056  ld   $56
              8b58 0045  ld   $45
              8b59 0053  ld   $53
              8b5a 003a  ld   $3a
              8b5b 0020  ld   $20
              8b5c 0000  ld   $00
              8b5d 000d  ld   $0d
              8b5e 000d  ld   $0d
              8b5f 0050  ld   $50
              8b60 004c  ld   $4c
              8b61 0041  ld   $41
              8b62 0059  ld   $59
              8b63 0020  ld   $20
              8b64 0041  ld   $41
              8b65 0047  ld   $47
              8b66 0041  ld   $41
              8b67 0049  ld   $49
              8b68 004e  ld   $4e
              8b69 0020  ld   $20
              8b6a 0028  ld   $28
              8b6b 0059  ld   $59
              8b6c 002f  ld   $2f
              8b6d 004e  ld   $4e
              8b6e 0029  ld   $29
              8b6f 003f  ld   $3f
              8b70 0020  ld   $20
              8b71 0000  ld   $00
              8b72 000d  ld   $0d
              8b73 000d  ld   $0d
              8b74 0042  ld   $42
              8b75 0059  ld   $59
              8b76 0045  ld   $45
              8b77 0021  ld   $21
              8b78 000d  ld   $0d
              8b79 0000  ld   $00
              8b7a 000b  ld   $0b
              8b7b 00e5  ld   $e5
              8b7c 001b  ld   $1b
              8b7d 0020  ld   $20
              8b7e 00ef  ld   $ef
              8b7f 00ff  ld   $ff
              8b80 00e8  ld   $e8
              8b81 00bd  ld   $bd
              8b82 00f1  ld   $f1
              8b83 000b  ld   $0b
              8b84 00d0  ld   $d0
              8b85 00f7  ld   $f7
              8b86 004c  ld   $4c
              8b87 009d  ld   $9d
              8b88 000c  ld   $0c
              8b89 000d  ld   $0d
              8b8a 0055  ld   $55
              8b8b 0053  ld   $53
              8b8c 0041  ld   $41
              8b8d 0047  ld   $47
              8b8e 0045  ld   $45
              8b8f 003a  ld   $3a
              8b90 000d  ld   $0d
              8b91 0020  ld   $20
              8b92 0021  ld   $21
              8b93 0038  ld   $38
              8b94 0030  ld   $30
              8b95 0030  ld   $30
              8b96 003a  ld   $3a
              8b97 0050  ld   $50
              8b98 000c  ld   $0c
              8b99 0000  ld   $00
              8b9a 008a  ld   $8a
              8b9b 0048  ld   $48
              8b9c 0041  ld   $41
              8b9d 0020  ld   $20
              8b9e 0020  ld   $20
              8b9f 0020  ld   $20
              8ba0 0020  ld   $20
              8ba1 0041  ld   $41
              8ba2 0053  ld   $53
              8ba3 0053  ld   $53
              8ba4 0045  ld   $45
              8ba5 004d  ld   $4d
              8ba6 0042  ld   $42
              8ba7 004c  ld   $4c
              8ba8 0045  ld   $45
              8ba9 0020  ld   $20
              8baa 0031  ld   $31
              8bab 0053  ld   $53
              8bac 0054  ld   $54
              8bad 000d  ld   $0d
              8bae 0020  ld   $20
              8baf 0021  ld   $21
              8bb0 0020  ld   $20
              8bb1 004c  ld   $4c
              8bb2 0044  ld   $44
              8bb3 0041  ld   $41
              8bb4 0020  ld   $20
              8bb5 0023  ld   $23
              8bb6 0031  ld   $31
              8bb7 0020  ld   $20
              8bb8 0020  ld   $20
              8bb9 0020  ld   $20
              8bba 0020  ld   $20
              8bbb 0041  ld   $41
              8bbc 0053  ld   $53
              8bbd 0053  ld   $53
              8bbe 0045  ld   $45
              8bbf 004d  ld   $4d
              8bc0 0042  ld   $42
              8bc1 004c  ld   $4c
              8bc2 0045  ld   $45
              8bc3 0020  ld   $20
              8bc4 004e  ld   $4e
              8bc5 0045  ld   $45
              8bc6 0058  ld   $58
              8bc7 0054  ld   $54
              8bc8 000d  ld   $0d
              8bc9 0020  ld   $20
              8bca 0021  ld   $21
              8bcb 0038  ld   $38
              8bcc 0030  ld   $30
              8bcd 0030  ld   $30
              8bce 004c  ld   $4c
              8bcf 0020  ld   $20
              8bd0 0020  ld   $20
              8bd1 0020  ld   $20
              * 7 times
              8bd6 0044  ld   $44
              8bd7 0049  ld   $49
              8bd8 0053  ld   $53
              8bd9 0041  ld   $41
              8bda 0053  ld   $53
              8bdb 0053  ld   $53
              8bdc 0045  ld   $45
              8bdd 004d  ld   $4d
              8bde 0042  ld   $42
              8bdf 004c  ld   $4c
              8be0 0045  ld   $45
              8be1 000d  ld   $0d
              8be2 0020  ld   $20
              8be3 0021  ld   $21
              8be4 004c  ld   $4c
              8be5 0020  ld   $20
              8be6 0020  ld   $20
              8be7 0020  ld   $20
              * 10 times
              8bef 004e  ld   $4e
              8bf0 0045  ld   $45
              8bf1 0058  ld   $58
              8bf2 0054  ld   $54
              8bf3 0020  ld   $20
              8bf4 0053  ld   $53
              8bf5 0043  ld   $43
              8bf6 0052  ld   $52
              8bf7 0045  ld   $45
              8bf8 0045  ld   $45
              8bf9 004e  ld   $4e
              8bfa 000d  ld   $0d
              8bfb fe00  bra  ac          ;+-----------------------------------+
              8bfc fcfd  bra  $8bfd       ;|                                   |
              8bfd 1418  ld   $18,y       ;| Trampoline for page $8b00 lookups |
              8bfe e006  jmp  y,$06       ;|                                   |
              8bff c218  st   [$18]       ;+-----------------------------------+
              8c00 0020  ld   $20
              8c01 0021  ld   $21
              8c02 0028  ld   $28
              8c03 0052  ld   $52
              8c04 0045  ld   $45
              8c05 0054  ld   $54
              8c06 0055  ld   $55
              8c07 0052  ld   $52
              8c08 004e  ld   $4e
              8c09 0029  ld   $29
              8c0a 0020  ld   $20
              8c0b 0020  ld   $20
              8c0c 0020  ld   $20
              8c0d 0045  ld   $45
              8c0e 0058  ld   $58
              8c0f 0049  ld   $49
              8c10 0054  ld   $54
              8c11 000d  ld   $0d
              8c12 0020  ld   $20
              8c13 0042  ld   $42
              8c14 0045  ld   $45
              8c15 0045  ld   $45
              8c16 0052  ld   $52
              8c17 0020  ld   $20
              8c18 0020  ld   $20
              8c19 0020  ld   $20
              * 8 times
              8c1f 0053  ld   $53
              8c20 004b  ld   $4b
              8c21 0049  ld   $49
              8c22 0050  ld   $50
              8c23 0020  ld   $20
              8c24 0055  ld   $55
              8c25 0053  ld   $53
              8c26 0041  ld   $41
              8c27 0047  ld   $47
              8c28 0045  ld   $45
              8c29 0000  ld   $00
              8c2a 000c  ld   $0c
              8c2b 008a  ld   $8a
              8c2c 0076  ld   $76
              8c2d 00a9  ld   $a9
              8c2e 000c  ld   $0c
              8c2f 0048  ld   $48
              8c30 0020  ld   $20
              8c31 00fd  ld   $fd
              8c32 000d  ld   $0d
              8c33 0020  ld   $20
              8c34 00f1  ld   $f1
              8c35 000e  ld   $0e
              8c36 0085  ld   $85
              8c37 0044  ld   $44
              8c38 0084  ld   $84
              8c39 0045  ld   $45
              8c3a 0068  ld   $68
              8c3b 0038  ld   $38
              8c3c 00e9  ld   $e9
              8c3d 0001  ld   $01
              8c3e 00d0  ld   $d0
              8c3f 00ef  ld   $ef
              8c40 0020  ld   $20
              8c41 0095  ld   $95
              8c42 000e  ld   $0e
              8c43 008a  ld   $8a
              8c44 00d0  ld   $d0
              8c45 0003  ld   $03
              8c46 004c  ld   $4c
              8c47 001f  ld   $1f
              8c48 00ff  ld   $ff
              8c49 00a0  ld   $a0
              8c4a 0000  ld   $00
              8c4b 0020  ld   $20
              8c4c 00c0  ld   $c0
              8c4d 000e  ld   $0e
              8c4e 0048  ld   $48
              8c4f 008a  ld   $8a
              8c50 00f0  ld   $f0
              8c51 0007  ld   $07
              8c52 00b5  ld   $b5
              8c53 0046  ld   $46
              8c54 0095  ld   $95
              8c55 0044  ld   $44
              8c56 00ca  ld   $ca
              8c57 0010  ld   $10
              8c58 00f9  ld   $f9
              8c59 0068  ld   $68
              8c5a 00c9  ld   $c9
              8c5b 0005  ld   $05
              8c5c 00f0  ld   $f0
              8c5d 00cf  ld   $cf
              8c5e 00c9  ld   $c9
              8c5f 0099  ld   $99
              8c60 00f0  ld   $f0
              8c61 0004  ld   $04
              8c62 00c9  ld   $c9
              8c63 0093  ld   $93
              8c64 00d0  ld   $d0
              8c65 0076  ld   $76
              8c66 00a9  ld   $a9
              8c67 0003  ld   $03
              8c68 0085  ld   $85
              8c69 0047  ld   $47
              8c6a 0020  ld   $20
              8c6b 00b2  ld   $b2
              8c6c 000e  ld   $0e
              8c6d 000a  ld   $0a
              8c6e 00e9  ld   $e9
              8c6f 00be  ld   $be
              8c70 00c5  ld   $c5
              8c71 00c2  ld   $c2
              8c72 0090  ld   $90
              8c73 0068  ld   $68
              8c74 000a  ld   $0a
              8c75 000a  ld   $0a
              8c76 00a2  ld   $a2
              8c77 0004  ld   $04
              8c78 000a  ld   $0a
              8c79 0026  ld   $26
              8c7a 004a  ld   $4a
              8c7b 0026  ld   $26
              8c7c 004b  ld   $4b
              8c7d 00ca  ld   $ca
              8c7e 0010  ld   $10
              8c7f 00f8  ld   $f8
              8c80 00c6  ld   $c6
              8c81 0047  ld   $47
              8c82 00f0  ld   $f0
              8c83 00f4  ld   $f4
              8c84 0010  ld   $10
              8c85 00e4  ld   $e4
              8c86 00a2  ld   $a2
              8c87 0005  ld   $05
              8c88 0020  ld   $20
              8c89 00b2  ld   $b2
              8c8a 000e  ld   $0e
              8c8b 0084  ld   $84
              8c8c 003a  ld   $3a
              8c8d 00dd  ld   $dd
              8c8e 0052  ld   $52
              8c8f 000f  ld   $0f
              8c90 00d0  ld   $d0
              8c91 0013  ld   $13
              8c92 0020  ld   $20
              8c93 00b2  ld   $b2
              8c94 000e  ld   $0e
              8c95 00dd  ld   $dd
              8c96 0058  ld   $58
              8c97 000f  ld   $0f
              8c98 00f0  ld   $f0
              8c99 000d  ld   $0d
              8c9a 00bd  ld   $bd
              8c9b 0058  ld   $58
              8c9c 000f  ld   $0f
              8c9d 00f0  ld   $f0
              8c9e 0007  ld   $07
              8c9f 00c9  ld   $c9
              8ca0 00a4  ld   $a4
              8ca1 00f0  ld   $f0
              8ca2 0003  ld   $03
              8ca3 000d  ld   $0d
              8ca4 0000  ld   $00
              8ca5 0000  ld   $00
              8ca6 00a4  ld   $a4
              8ca7 003a  ld   $3a
              8ca8 0018  ld   $18
              8ca9 0088  ld   $88
              8caa 0026  ld   $26
              8cab 004c  ld   $4c
              8cac 00e0  ld   $e0
              8cad 0003  ld   $03
              8cae 00d0  ld   $d0
              8caf 000d  ld   $0d
              8cb0 0020  ld   $20
              8cb1 00c0  ld   $c0
              8cb2 000e  ld   $0e
              8cb3 00a5  ld   $a5
              8cb4 0049  ld   $49
              8cb5 00f0  ld   $f0
              8cb6 0001  ld   $01
              8cb7 00e8  ld   $e8
              8cb8 0086  ld   $86
              8cb9 0038  ld   $38
              8cba 00a2  ld   $a2
              8cbb 0003  ld   $03
              8cbc 0088  ld   $88
              8cbd 0086  ld   $86
              8cbe 0047  ld   $47
              8cbf 00ca  ld   $ca
              8cc0 0010  ld   $10
              8cc1 00c9  ld   $c9
              8cc2 00a5  ld   $a5
              8cc3 004c  ld   $4c
              8cc4 000a  ld   $0a
              8cc5 000a  ld   $0a
              8cc6 0005  ld   $05
              8cc7 0038  ld   $38
              8cc8 00c9  ld   $c9
              8cc9 0020  ld   $20
              8cca 00b0  ld   $b0
              8ccb 0006  ld   $06
              8ccc 00a6  ld   $a6
              8ccd 0038  ld   $38
              8cce 00f0  ld   $f0
              8ccf 0002  ld   $02
              8cd0 0009  ld   $09
              8cd1 0080  ld   $80
              8cd2 0085  ld   $85
              8cd3 004c  ld   $4c
              8cd4 0084  ld   $84
              8cd5 003a  ld   $3a
              8cd6 00b9  ld   $b9
              8cd7 0000  ld   $00
              8cd8 0002  ld   $02
              8cd9 00c9  ld   $c9
              8cda 00bb  ld   $bb
              8cdb 00f0  ld   $f0
              8cdc 0004  ld   $04
              8cdd 00c9  ld   $c9
              8cde 008d  ld   $8d
              8cdf 00d0  ld   $d0
              8ce0 002c  ld   $2c
              8ce1 00a5  ld   $a5
              8ce2 0047  ld   $47
              8ce3 0020  ld   $20
              8ce4 00b7  ld   $b7
              8ce5 000d  ld   $0d
              8ce6 00aa  ld   $aa
              8ce7 00bd  ld   $bd
              8ce8 009e  ld   $9e
              8ce9 000f  ld   $0f
              8cea 00c5  ld   $c5
              8ceb 004a  ld   $4a
              8cec 00d0  ld   $d0
              8ced 0013  ld   $13
              8cee 00bd  ld   $bd
              8cef 005e  ld   $5e
              8cf0 000f  ld   $0f
              8cf1 00c5  ld   $c5
              8cf2 004b  ld   $4b
              8cf3 00d0  ld   $d0
              8cf4 000c  ld   $0c
              8cf5 00a5  ld   $a5
              8cf6 004c  ld   $4c
              8cf7 00a4  ld   $a4
              8cf8 0040  ld   $40
              8cf9 00c0  ld   $c0
              8cfa 009d  ld   $9d
              8cfb fe00  bra  ac          ;+-----------------------------------+
              8cfc fcfd  bra  $8cfd       ;|                                   |
              8cfd 1418  ld   $18,y       ;| Trampoline for page $8c00 lookups |
              8cfe e006  jmp  y,$06       ;|                                   |
              8cff c218  st   [$18]       ;+-----------------------------------+
              8d00 00f0  ld   $f0
              8d01 0020  ld   $20
              8d02 00c5  ld   $c5
              8d03 0040  ld   $40
              8d04 00f0  ld   $f0
              8d05 0037  ld   $37
              8d06 00c6  ld   $c6
              8d07 0047  ld   $47
              8d08 00d0  ld   $d0
              8d09 00dc  ld   $dc
              8d0a 00e6  ld   $e6
              8d0b 004c  ld   $4c
              8d0c 00c6  ld   $c6
              8d0d 0038  ld   $38
              8d0e 00f0  ld   $f0
              8d0f 00d6  ld   $d6
              8d10 00a4  ld   $a4
              8d11 003a  ld   $3a
              8d12 0098  ld   $98
              8d13 00aa  ld   $aa
              8d14 0020  ld   $20
              8d15 00bb  ld   $bb
              8d16 000e  ld   $0e
              8d17 0020  ld   $20
              8d18 0079  ld   $79
              8d19 000e  ld   $0e
              8d1a 00a9  ld   $a9
              8d1b 00de  ld   $de
              8d1c 0020  ld   $20
              8d1d 00ef  ld   $ef
              8d1e 00ff  ld   $ff
              8d1f 004c  ld   $4c
              8d20 009d  ld   $9d
              8d21 000c  ld   $0c
              8d22 00e9  ld   $e9
              8d23 0081  ld   $81
              8d24 004a  ld   $4a
              8d25 00d0  ld   $d0
              8d26 00e9  ld   $e9
              8d27 00a4  ld   $a4
              8d28 0049  ld   $49
              8d29 00a6  ld   $a6
              8d2a 0048  ld   $48
              8d2b 00d0  ld   $d0
              8d2c 0001  ld   $01
              8d2d 0088  ld   $88
              8d2e 00ca  ld   $ca
              8d2f 008a  ld   $8a
              8d30 0018  ld   $18
              8d31 00e5  ld   $e5
              8d32 0044  ld   $44
              8d33 0085  ld   $85
              8d34 0048  ld   $48
              8d35 0010  ld   $10
              8d36 0001  ld   $01
              8d37 00c8  ld   $c8
              8d38 0098  ld   $98
              8d39 00e5  ld   $e5
              8d3a 0045  ld   $45
              8d3b 00d0  ld   $d0
              8d3c 0043  ld   $43
              8d3d 00a4  ld   $a4
              8d3e 0041  ld   $41
              8d3f 00b9  ld   $b9
              8d40 0047  ld   $47
              8d41 0000  ld   $00
              8d42 0091  ld   $91
              8d43 0044  ld   $44
              8d44 0088  ld   $88
              8d45 0010  ld   $10
              8d46 00f8  ld   $f8
              8d47 00a9  ld   $a9
              8d48 0001  ld   $01
              8d49 004c  ld   $4c
              8d4a 008c  ld   $8c
              8d4b 000c  ld   $0c
              8d4c 00a6  ld   $a6
              8d4d 0044  ld   $44
              8d4e 00a4  ld   $a4
              8d4f 0045  ld   $45
              8d50 0020  ld   $20
              8d51 00bb  ld   $bb
              8d52 000e  ld   $0e
              8d53 0020  ld   $20
              8d54 006f  ld   $6f
              8d55 000e  ld   $0e
              8d56 00a0  ld   $a0
              8d57 0000  ld   $00
              8d58 00a9  ld   $a9
              8d59 00ad  ld   $ad
              8d5a 0020  ld   $20
              8d5b 00ef  ld   $ef
              8d5c 00ff  ld   $ff
              8d5d 0020  ld   $20
              8d5e 0077  ld   $77
              8d5f 000e  ld   $0e
              8d60 00a1  ld   $a1
              8d61 0044  ld   $44
              8d62 00a8  ld   $a8
              8d63 004a  ld   $4a
              8d64 0090  ld   $90
              8d65 000b  ld   $0b
              8d66 004a  ld   $4a
              8d67 00b0  ld   $b0
              8d68 0017  ld   $17
              8d69 00c9  ld   $c9
              8d6a 0022  ld   $22
              8d6b 00f0  ld   $f0
              8d6c 0013  ld   $13
              8d6d 0029  ld   $29
              8d6e 0007  ld   $07
              8d6f 0009  ld   $09
              8d70 0080  ld   $80
              8d71 004a  ld   $4a
              8d72 00aa  ld   $aa
              8d73 00bd  ld   $bd
              8d74 0000  ld   $00
              8d75 000f  ld   $0f
              8d76 00b0  ld   $b0
              8d77 0004  ld   $04
              8d78 004a  ld   $4a
              8d79 004a  ld   $4a
              8d7a 004a  ld   $4a
              8d7b 004a  ld   $4a
              8d7c 0029  ld   $29
              8d7d 000f  ld   $0f
              8d7e 00d0  ld   $d0
              8d7f 0004  ld   $04
              8d80 00a0  ld   $a0
              8d81 0080  ld   $80
              8d82 00a9  ld   $a9
              8d83 0000  ld   $00
              8d84 00aa  ld   $aa
              8d85 00bd  ld   $bd
              8d86 0044  ld   $44
              8d87 000f  ld   $0f
              8d88 0085  ld   $85
              8d89 0040  ld   $40
              8d8a 0029  ld   $29
              8d8b 0003  ld   $03
              8d8c 0085  ld   $85
              8d8d 0041  ld   $41
              8d8e 0098  ld   $98
              8d8f 0029  ld   $29
              8d90 008f  ld   $8f
              8d91 00aa  ld   $aa
              8d92 0098  ld   $98
              8d93 00a0  ld   $a0
              8d94 0003  ld   $03
              8d95 00e0  ld   $e0
              8d96 008a  ld   $8a
              8d97 00f0  ld   $f0
              8d98 000b  ld   $0b
              8d99 004a  ld   $4a
              8d9a 0090  ld   $90
              8d9b 0008  ld   $08
              8d9c 004a  ld   $4a
              8d9d 004a  ld   $4a
              8d9e 0009  ld   $09
              8d9f 0020  ld   $20
              8da0 0088  ld   $88
              8da1 00d0  ld   $d0
              8da2 00fa  ld   $fa
              8da3 00c8  ld   $c8
              8da4 0088  ld   $88
              8da5 00d0  ld   $d0
              8da6 00f2  ld   $f2
              8da7 0060  ld   $60
              8da8 0020  ld   $20
              8da9 00a1  ld   $a1
              8daa 000d  ld   $0d
              8dab 000e  ld   $0e
              8dac 0000  ld   $00
              8dad 0000  ld   $00
              8dae 0048  ld   $48
              8daf 00b1  ld   $b1
              8db0 0044  ld   $44
              8db1 0020  ld   $20
              8db2 00dc  ld   $dc
              8db3 00ff  ld   $ff
              8db4 00a2  ld   $a2
              8db5 0001  ld   $01
              8db6 0020  ld   $20
              8db7 0079  ld   $79
              8db8 000e  ld   $0e
              8db9 00c4  ld   $c4
              8dba 0041  ld   $41
              8dbb 00c8  ld   $c8
              8dbc 0090  ld   $90
              8dbd 00f1  ld   $f1
              8dbe 00a2  ld   $a2
              8dbf 0003  ld   $03
              8dc0 00c0  ld   $c0
              8dc1 0003  ld   $03
              8dc2 0090  ld   $90
              8dc3 00f2  ld   $f2
              8dc4 0068  ld   $68
              8dc5 00a8  ld   $a8
              8dc6 00b9  ld   $b9
              8dc7 005e  ld   $5e
              8dc8 000f  ld   $0f
              8dc9 0085  ld   $85
              8dca 0042  ld   $42
              8dcb 00b9  ld   $b9
              8dcc 009e  ld   $9e
              8dcd 000f  ld   $0f
              8dce 0085  ld   $85
              8dcf 0043  ld   $43
              8dd0 00a9  ld   $a9
              8dd1 0000  ld   $00
              8dd2 00a0  ld   $a0
              8dd3 0005  ld   $05
              8dd4 0006  ld   $06
              8dd5 0043  ld   $43
              8dd6 0026  ld   $26
              8dd7 0042  ld   $42
              8dd8 002a  ld   $2a
              8dd9 0088  ld   $88
              8dda 00d0  ld   $d0
              8ddb 00f8  ld   $f8
              8ddc 0069  ld   $69
              8ddd 00bf  ld   $bf
              8dde 0020  ld   $20
              8ddf 00ef  ld   $ef
              8de0 00ff  ld   $ff
              8de1 00ca  ld   $ca
              8de2 00d0  ld   $d0
              8de3 00ec  ld   $ec
              8de4 0020  ld   $20
              8de5 0077  ld   $77
              8de6 000e  ld   $0e
              8de7 00a2  ld   $a2
              8de8 0006  ld   $06
              8de9 00e0  ld   $e0
              8dea 0003  ld   $03
              8deb 00d0  ld   $d0
              8dec 0012  ld   $12
              8ded 00a4  ld   $a4
              8dee 0041  ld   $41
              8def 00f0  ld   $f0
              8df0 000e  ld   $0e
              8df1 00a5  ld   $a5
              8df2 0040  ld   $40
              8df3 00c9  ld   $c9
              8df4 00e8  ld   $e8
              8df5 00b1  ld   $b1
              8df6 0044  ld   $44
              8df7 00b0  ld   $b0
              8df8 001c  ld   $1c
              8df9 0020  ld   $20
              8dfa 00dc  ld   $dc
              8dfb fe00  bra  ac          ;+-----------------------------------+
              8dfc fcfd  bra  $8dfd       ;|                                   |
              8dfd 1418  ld   $18,y       ;| Trampoline for page $8d00 lookups |
              8dfe e006  jmp  y,$06       ;|                                   |
              8dff c218  st   [$18]       ;+-----------------------------------+
              8e00 00ff  ld   $ff
              8e01 0088  ld   $88
              8e02 00d0  ld   $d0
              8e03 00f2  ld   $f2
              8e04 0006  ld   $06
              8e05 0040  ld   $40
              8e06 0090  ld   $90
              8e07 000e  ld   $0e
              8e08 00bd  ld   $bd
              8e09 0051  ld   $51
              8e0a 000f  ld   $0f
              8e0b 0020  ld   $20
              8e0c 00ef  ld   $ef
              8e0d 00ff  ld   $ff
              8e0e 00bd  ld   $bd
              8e0f 0057  ld   $57
              8e10 000f  ld   $0f
              8e11 00f0  ld   $f0
              8e12 0003  ld   $03
              8e13 0020  ld   $20
              8e14 00ef  ld   $ef
              8e15 00ff  ld   $ff
              8e16 00ca  ld   $ca
              8e17 00d0  ld   $d0
              8e18 00d5  ld   $d5
              8e19 0060  ld   $60
              8e1a 0020  ld   $20
              8e1b 00f4  ld   $f4
              8e1c 000e  ld   $0e
              8e1d 00aa  ld   $aa
              8e1e 00e8  ld   $e8
              8e1f 00d0  ld   $d0
              8e20 0001  ld   $01
              8e21 00c8  ld   $c8
              8e22 0098  ld   $98
              8e23 0020  ld   $20
              8e24 00dc  ld   $dc
              8e25 00ff  ld   $ff
              8e26 008a  ld   $8a
              8e27 004c  ld   $4c
              8e28 00dc  ld   $dc
              8e29 00ff  ld   $ff
              8e2a 00a2  ld   $a2
              8e2b 0001  ld   $01
              8e2c 00a9  ld   $a9
              8e2d 00a0  ld   $a0
              8e2e 0020  ld   $20
              8e2f 00ef  ld   $ef
              8e30 00ff  ld   $ff
              8e31 00ca  ld   $ca
              8e32 00d0  ld   $d0
              8e33 00f8  ld   $f8
              8e34 0060  ld   $60
              8e35 00c9  ld   $c9
              8e36 009b  ld   $9b
              8e37 00f0  ld   $f0
              8e38 000a  ld   $0a
              8e39 0020  ld   $20
              8e3a 00ef  ld   $ef
              8e3b 00ff  ld   $ff
              8e3c 00c9  ld   $c9
              8e3d 00df  ld   $df
              8e3e 00f0  ld   $f0
              8e3f 0012  ld   $12
              8e40 00e8  ld   $e8
              8e41 0010  ld   $10
              8e42 0012  ld   $12
              8e43 00a9  ld   $a9
              8e44 00dc  ld   $dc
              8e45 0020  ld   $20
              8e46 00ef  ld   $ef
              8e47 00ff  ld   $ff
              8e48 0020  ld   $20
              8e49 00bb  ld   $bb
              8e4a 000e  ld   $0e
              8e4b 00a9  ld   $a9
              8e4c 00a1  ld   $a1
              8e4d 0020  ld   $20
              8e4e 00ef  ld   $ef
              8e4f 00ff  ld   $ff
              8e50 00a2  ld   $a2
              8e51 0001  ld   $01
              8e52 00ca  ld   $ca
              8e53 0030  ld   $30
              8e54 00f3  ld   $f3
              8e55 002c  ld   $2c
              8e56 0011  ld   $11
              8e57 00d0  ld   $d0
              8e58 0010  ld   $10
              8e59 00fb  ld   $fb
              8e5a 00ad  ld   $ad
              8e5b 0010  ld   $10
              8e5c 00d0  ld   $d0
              8e5d 009d  ld   $9d
              8e5e 0000  ld   $00
              8e5f 0002  ld   $02
              8e60 00c9  ld   $c9
              8e61 008d  ld   $8d
              8e62 00d0  ld   $d0
              8e63 00d1  ld   $d1
              8e64 0060  ld   $60
              8e65 00b9  ld   $b9
              8e66 0000  ld   $00
              8e67 0002  ld   $02
              8e68 00c8  ld   $c8
              8e69 00c9  ld   $c9
              8e6a 00a0  ld   $a0
              8e6b 00f0  ld   $f0
              8e6c 00f8  ld   $f8
              8e6d 0060  ld   $60
              8e6e 00a9  ld   $a9
              8e6f 008d  ld   $8d
              8e70 004c  ld   $4c
              8e71 00ef  ld   $ef
              8e72 00ff  ld   $ff
              8e73 00a2  ld   $a2
              8e74 0000  ld   $00
              8e75 0086  ld   $86
              8e76 0048  ld   $48
              8e77 0086  ld   $86
              8e78 0049  ld   $49
              8e79 00f0  ld   $f0
              8e7a 0015  ld   $15
              8e7b 00a2  ld   $a2
              8e7c 0003  ld   $03
              8e7d 000a  ld   $0a
              8e7e 000a  ld   $0a
              8e7f 000a  ld   $0a
              * 5 times
              8e82 0026  ld   $26
              8e83 0048  ld   $48
              8e84 0026  ld   $26
              8e85 0049  ld   $49
              8e86 00ca  ld   $ca
              8e87 0010  ld   $10
              8e88 00f8  ld   $f8
              8e89 00b5  ld   $b5
              8e8a 0049  ld   $49
              8e8b 0095  ld   $95
              8e8c 0047  ld   $47
              8e8d 00e8  ld   $e8
              8e8e 00f0  ld   $f0
              8e8f 00f9  ld   $f9
              8e90 00b9  ld   $b9
              8e91 0000  ld   $00
              8e92 0002  ld   $02
              8e93 00c8  ld   $c8
              8e94 0049  ld   $49
              8e95 00b0  ld   $b0
              8e96 00c9  ld   $c9
              8e97 000a  ld   $0a
              8e98 0090  ld   $90
              8e99 00e1  ld   $e1
              8e9a 0069  ld   $69
              8e9b 0088  ld   $88
              8e9c 00c9  ld   $c9
              8e9d 00fa  ld   $fa
              8e9e 00b0  ld   $b0
              8e9f 00db  ld   $db
              8ea0 0060  ld   $60
              8ea1 004c  ld   $4c
              8ea2 00e9  ld   $e9
              8ea3 000b  ld   $0b
              8ea4 00a5  ld   $a5
              8ea5 0041  ld   $41
              8ea6 0038  ld   $38
              8ea7 00a4  ld   $a4
              8ea8 0045  ld   $45
              8ea9 00aa  ld   $aa
              8eaa 0010  ld   $10
              8eab 0001  ld   $01
              8eac 0088  ld   $88
              8ead 0065  ld   $65
              8eae 0044  ld   $44
              8eaf 0090  ld   $90
              8eb0 0001  ld   $01
              8eb1 00c8  ld   $c8
              8eb2 0060  ld   $60
              8eb3 000f  ld   $0f
              8eb4 0000  ld   $00
              8eb5 00de  ld   $de
              8eb6 0040  ld   $40
              8eb7 0002  ld   $02
              8eb8 0045  ld   $45
              8eb9 0003  ld   $03
              8eba 00d0  ld   $d0
              8ebb 0008  ld   $08
              8ebc 0040  ld   $40
              8ebd 0009  ld   $09
              8ebe 0030  ld   $30
              8ebf 0022  ld   $22
              8ec0 0045  ld   $45
              8ec1 0033  ld   $33
              8ec2 00d0  ld   $d0
              8ec3 0008  ld   $08
              8ec4 0040  ld   $40
              8ec5 0009  ld   $09
              8ec6 0040  ld   $40
              8ec7 0002  ld   $02
              8ec8 0045  ld   $45
              8ec9 0033  ld   $33
              8eca 00d0  ld   $d0
              8ecb 0008  ld   $08
              8ecc 0040  ld   $40
              8ecd 0009  ld   $09
              8ece 0040  ld   $40
              8ecf 0002  ld   $02
              8ed0 0045  ld   $45
              8ed1 00b3  ld   $b3
              8ed2 00d0  ld   $d0
              8ed3 0008  ld   $08
              8ed4 0040  ld   $40
              8ed5 0009  ld   $09
              8ed6 0000  ld   $00
              8ed7 0022  ld   $22
              8ed8 0044  ld   $44
              8ed9 0033  ld   $33
              8eda 00d0  ld   $d0
              8edb 008c  ld   $8c
              8edc 0044  ld   $44
              8edd 0000  ld   $00
              8ede 0011  ld   $11
              8edf 0022  ld   $22
              8ee0 0044  ld   $44
              8ee1 0033  ld   $33
              8ee2 00d0  ld   $d0
              8ee3 008c  ld   $8c
              8ee4 0044  ld   $44
              8ee5 009a  ld   $9a
              8ee6 0010  ld   $10
              8ee7 0022  ld   $22
              8ee8 0044  ld   $44
              8ee9 0033  ld   $33
              8eea 00d0  ld   $d0
              8eeb 0008  ld   $08
              8eec 0040  ld   $40
              8eed 0009  ld   $09
              8eee 0010  ld   $10
              8eef 0022  ld   $22
              8ef0 0044  ld   $44
              8ef1 0033  ld   $33
              8ef2 00d0  ld   $d0
              8ef3 0008  ld   $08
              8ef4 0040  ld   $40
              8ef5 0009  ld   $09
              8ef6 0062  ld   $62
              8ef7 0013  ld   $13
              8ef8 0078  ld   $78
              8ef9 00a9  ld   $a9
              8efa 0000  ld   $00
              8efb fe00  bra  ac          ;+-----------------------------------+
              8efc fcfd  bra  $8efd       ;|                                   |
              8efd 1418  ld   $18,y       ;| Trampoline for page $8e00 lookups |
              8efe e006  jmp  y,$06       ;|                                   |
              8eff c218  st   [$18]       ;+-----------------------------------+
              8f00 0021  ld   $21
              8f01 0081  ld   $81
              8f02 0082  ld   $82
              8f03 0000  ld   $00
              8f04 0000  ld   $00
              8f05 0059  ld   $59
              8f06 004d  ld   $4d
              8f07 0091  ld   $91
              8f08 0092  ld   $92
              8f09 0086  ld   $86
              8f0a 004a  ld   $4a
              8f0b 0085  ld   $85
              8f0c 009d  ld   $9d
              8f0d 00ac  ld   $ac
              8f0e 00a9  ld   $a9
              8f0f 00ac  ld   $ac
              8f10 00a3  ld   $a3
              8f11 00a8  ld   $a8
              8f12 00a4  ld   $a4
              8f13 00d9  ld   $d9
              8f14 0000  ld   $00
              8f15 00d8  ld   $d8
              8f16 00a4  ld   $a4
              8f17 00a4  ld   $a4
              8f18 0000  ld   $00
              8f19 001c  ld   $1c
              8f1a 008a  ld   $8a
              8f1b 001c  ld   $1c
              8f1c 0023  ld   $23
              8f1d 005d  ld   $5d
              8f1e 008b  ld   $8b
              8f1f 001b  ld   $1b
              8f20 00a1  ld   $a1
              8f21 009d  ld   $9d
              8f22 008a  ld   $8a
              8f23 001d  ld   $1d
              8f24 0023  ld   $23
              8f25 009d  ld   $9d
              8f26 008b  ld   $8b
              8f27 001d  ld   $1d
              8f28 00a1  ld   $a1
              8f29 0000  ld   $00
              8f2a 0029  ld   $29
              8f2b 0019  ld   $19
              8f2c 00ae  ld   $ae
              8f2d 0069  ld   $69
              8f2e 00a8  ld   $a8
              8f2f 0019  ld   $19
              8f30 0023  ld   $23
              8f31 0024  ld   $24
              8f32 0053  ld   $53
              8f33 001b  ld   $1b
              8f34 0023  ld   $23
              8f35 0024  ld   $24
              8f36 0053  ld   $53
              8f37 0019  ld   $19
              8f38 00a1  ld   $a1
              8f39 0000  ld   $00
              8f3a 001a  ld   $1a
              8f3b 005b  ld   $5b
              8f3c 005b  ld   $5b
              8f3d 00a5  ld   $a5
              8f3e 0069  ld   $69
              8f3f 0024  ld   $24
              8f40 0024  ld   $24
              8f41 00ae  ld   $ae
              8f42 00ae  ld   $ae
              8f43 00a8  ld   $a8
              8f44 00ad  ld   $ad
              8f45 0029  ld   $29
              8f46 0000  ld   $00
              8f47 007c  ld   $7c
              8f48 0000  ld   $00
              8f49 0015  ld   $15
              8f4a 009c  ld   $9c
              8f4b 006d  ld   $6d
              8f4c 009c  ld   $9c
              8f4d 00a5  ld   $a5
              8f4e 0069  ld   $69
              8f4f 0029  ld   $29
              8f50 0053  ld   $53
              8f51 0084  ld   $84
              8f52 0013  ld   $13
              8f53 0034  ld   $34
              8f54 0011  ld   $11
              8f55 00a5  ld   $a5
              8f56 0069  ld   $69
              8f57 0023  ld   $23
              8f58 00a0  ld   $a0
              8f59 00d8  ld   $d8
              8f5a 0062  ld   $62
              8f5b 005a  ld   $5a
              8f5c 0048  ld   $48
              8f5d 0026  ld   $26
              8f5e 0062  ld   $62
              8f5f 0094  ld   $94
              8f60 0088  ld   $88
              8f61 0054  ld   $54
              8f62 0044  ld   $44
              8f63 00c8  ld   $c8
              8f64 0054  ld   $54
              8f65 0068  ld   $68
              8f66 0044  ld   $44
              8f67 00e8  ld   $e8
              8f68 0094  ld   $94
              8f69 0000  ld   $00
              8f6a 00b4  ld   $b4
              8f6b 0008  ld   $08
              8f6c 0084  ld   $84
              8f6d 0074  ld   $74
              8f6e 00b4  ld   $b4
              8f6f 0028  ld   $28
              8f70 006e  ld   $6e
              8f71 0074  ld   $74
              8f72 00f4  ld   $f4
              8f73 00cc  ld   $cc
              8f74 004a  ld   $4a
              8f75 0072  ld   $72
              8f76 00f2  ld   $f2
              8f77 00a4  ld   $a4
              8f78 008a  ld   $8a
              8f79 0000  ld   $00
              8f7a 00aa  ld   $aa
              8f7b 00a2  ld   $a2
              8f7c 00a2  ld   $a2
              8f7d 0074  ld   $74
              8f7e 0074  ld   $74
              8f7f 0074  ld   $74
              8f80 0072  ld   $72
              8f81 0044  ld   $44
              8f82 0068  ld   $68
              8f83 00b2  ld   $b2
              8f84 0032  ld   $32
              8f85 00b2  ld   $b2
              8f86 0000  ld   $00
              8f87 0022  ld   $22
              8f88 0026  ld   $26
              8f89 001a  ld   $1a
              8f8a 001a  ld   $1a
              8f8b 0026  ld   $26
              8f8c 0026  ld   $26
              8f8d 0072  ld   $72
              8f8e 0072  ld   $72
              8f8f 0088  ld   $88
              8f90 00c8  ld   $c8
              8f91 00c4  ld   $c4
              8f92 00ca  ld   $ca
              8f93 0026  ld   $26
              8f94 0048  ld   $48
              8f95 0044  ld   $44
              8f96 0044  ld   $44
              8f97 00a2  ld   $a2
              8f98 00c8  ld   $c8
              8f99 005e  ld   $5e
              8f9a 0000  ld   $00
              8f9b 00e3  ld   $e3
              8f9c 0075  ld   $75
              8f9d 002b  ld   $2b
              8f9e 003e  ld   $3e
              8f9f 001a  ld   $1a
              8fa0 003d  ld   $3d
              8fa1 00fc  ld   $fc
              8fa2 000f  ld   $0f
              8fa3 0082  ld   $82
              8fa4 00ff  ld   $ff
              8fa5 0035  ld   $35
              8fa6 003f  ld   $3f
              8fa7 003b  ld   $3b
              8fa8 0011  ld   $11
              8fa9 0010  ld   $10
              8faa 00d0  ld   $d0
              8fab 002b  ld   $2b
              8fac 0030  ld   $30
              8fad 001a  ld   $1a
              8fae 000f  ld   $0f
              8faf 005e  ld   $5e
              8fb0 003d  ld   $3d
              8fb1 008c  ld   $8c
              8fb2 00ff  ld   $ff
              8fb3 0035  ld   $35
              8fb4 003f  ld   $3f
              8fb5 003b  ld   $3b
              8fb6 008c  ld   $8c
              8fb7 00ff  ld   $ff
              8fb8 00e6  ld   $e6
              8fb9 0060  ld   $60
              8fba 0035  ld   $35
              8fbb 0050  ld   $50
              8fbc 0021  ld   $21
              8fbd 00e6  ld   $e6
              8fbe 0020  ld   $20
              8fbf 00e3  ld   $e3
              8fc0 0060  ld   $60
              8fc1 008c  ld   $8c
              8fc2 000a  ld   $0a
              8fc3 0035  ld   $35
              8fc4 0072  ld   $72
              8fc5 002a  ld   $2a
              8fc6 0059  ld   $59
              8fc7 0007  ld   $07
              8fc8 008c  ld   $8c
              8fc9 000a  ld   $0a
              8fca 008c  ld   $8c
              8fcb 001a  ld   $1a
              8fcc 0035  ld   $35
              8fcd 0072  ld   $72
              8fce 0033  ld   $33
              8fcf 00ec  ld   $ec
              8fd0 0000  ld   $00
              8fd1 008c  ld   $8c
              8fd2 001a  ld   $1a
              8fd3 0082  ld   $82
              8fd4 007f  ld   $7f
              8fd5 00e6  ld   $e6
              8fd6 0080  ld   $80
              8fd7 00f3  ld   $f3
              8fd8 0030  ld   $30
              8fd9 0011  ld   $11
              8fda 0012  ld   $12
              8fdb 00d0  ld   $d0
              8fdc 002b  ld   $2b
              8fdd 0030  ld   $30
              8fde 00ad  ld   $ad
              8fdf 0035  ld   $35
              8fe0 003f  ld   $3f
              8fe1 0075  ld   $75
              8fe2 005e  ld   $5e
              8fe3 003c  ld   $3c
              8fe4 0088  ld   $88
              8fe5 0080  ld   $80
              8fe6 0085  ld   $85
              8fe7 000f  ld   $0f
              8fe8 005f  ld   $5f
              8fe9 001a  ld   $1a
              8fea 001c  ld   $1c
              8feb 00e3  ld   $e3
              8fec 0002  ld   $02
              8fed 00f6  ld   $f6
              8fee 00e3  ld   $e3
              8fef 0042  ld   $42
              8ff0 0035  ld   $35
              8ff1 0072  ld   $72
              8ff2 005b  ld   $5b
              8ff3 0021  ld   $21
              8ff4 007a  ld   $7a
              8ff5 00e6  ld   $e6
              8ff6 0002  ld   $02
              8ff7 002b  ld   $2b
              8ff8 007a  ld   $7a
              8ff9 0059  ld   $59
              8ffa 0000  ld   $00
              8ffb fe00  bra  ac          ;+-----------------------------------+
              8ffc fcfd  bra  $8ffd       ;|                                   |
              8ffd 1418  ld   $18,y       ;| Trampoline for page $8f00 lookups |
              8ffe e006  jmp  y,$06       ;|                                   |
              8fff c218  st   [$18]       ;+-----------------------------------+
              9000 00f0  ld   $f0
              9001 0030  ld   $30
              9002 0011  ld   $11
              9003 0010  ld   $10
              9004 00d0  ld   $d0
              9005 002b  ld   $2b
              9006 0030  ld   $30
              9007 00ad  ld   $ad
              9008 0035  ld   $35
              9009 003f  ld   $3f
              900a 006c  ld   $6c
              900b 00fc  ld   $fc
              900c 003c  ld   $3c
              900d 0082  ld   $82
              900e 007f  ld   $7f
              900f 0035  ld   $35
              9010 0072  ld   $72
              9011 0071  ld   $71
              9012 00f3  ld   $f3
              9013 0030  ld   $30
              9014 0059  ld   $59
              9015 001f  ld   $1f
              9016 005e  ld   $5e
              9017 003c  ld   $3c
              9018 001a  ld   $1a
              9019 003c  ld   $3c
              901a 00e6  ld   $e6
              901b 0001  ld   $01
              901c 0035  ld   $35
              901d 0053  ld   $53
              901e 0089  ld   $89
              901f 0059  ld   $59
              9020 00a0  ld   $a0
              9021 0085  ld   $85
              9022 000f  ld   $0f
              9023 005f  ld   $5f
              9024 0021  ld   $21
              9025 007a  ld   $7a
              9026 00e6  ld   $e6
              9027 0006  ld   $06
              9028 002b  ld   $2b
              9029 007a  ld   $7a
              902a 0059  ld   $59
              902b 001e  ld   $1e
              902c 005e  ld   $5e
              902d 003c  ld   $3c
              902e 008c  ld   $8c
              902f 0014  ld   $14
              9030 0035  ld   $35
              9031 0072  ld   $72
              9032 009b  ld   $9b
              9033 0059  ld   $59
              9034 00c0  ld   $c0
              9035 0085  ld   $85
              9036 000f  ld   $0f
              9037 005f  ld   $5f
              9038 0021  ld   $21
              9039 007a  ld   $7a
              903a 00e6  ld   $e6
              903b 0006  ld   $06
              903c 002b  ld   $2b
              903d 007a  ld   $7a
              903e 0011  ld   $11
              903f 0007  ld   $07
              9040 005f  ld   $5f
              9041 002b  ld   $2b
              9042 0030  ld   $30
              9043 0063  ld   $63
              9044 0059  ld   $59
              9045 00ff  ld   $ff
              9046 005e  ld   $5e
              9047 000e  ld   $0e
              9048 0011  ld   $11
              9049 0000  ld   $00
              904a 0004  ld   $04
              904b 007f  ld   $7f
              904c 003e  ld   $3e
              904d 0018  ld   $18
              904e 00a2  ld   $a2
              904f 0000  ld   $00
              9050 00a0  ld   $a0
              9051 000c  ld   $0c
              9052 00b9  ld   $b9
              9053 00ce  ld   $ce
              9054 005e  ld   $5e
              9055 0084  ld   $84
              9056 003a  ld   $3a
              9057 00a0  ld   $a0
              9058 0007  ld   $07
              9059 009d  ld   $9d
              905a 0000  ld   $00
              905b 0001  ld   $01
              905c 0069  ld   $69
              905d 0001  ld   $01
              905e 00e8  ld   $e8
              905f 00e8  ld   $e8
              9060 0088  ld   $88
              9061 00d0  ld   $d0
              9062 00f6  ld   $f6
              9063 00e8  ld   $e8
              9064 00e8  ld   $e8
              9065 00e8  ld   $e8
              9066 00e8  ld   $e8
              9067 00a4  ld   $a4
              9068 003a  ld   $3a
              9069 0088  ld   $88
              906a 0010  ld   $10
              906b 00e6  ld   $e6
              906c 004c  ld   $4c
              906d 0005  ld   $05
              906e 00c1  ld   $c1
              906f 0077  ld   $77
              9070 0070  ld   $70
              9071 0056  ld   $56
              9072 004f  ld   $4f
              9073 0048  ld   $48
              9074 0041  ld   $41
              9075 003a  ld   $3a
              9076 0033  ld   $33
              9077 002c  ld   $2c
              9078 0025  ld   $25
              9079 001e  ld   $1e
              907a 0017  ld   $17
              907b 0010  ld   $10
              907c 00d8  ld   $d8
              907d 0058  ld   $58
              907e 00a2  ld   $a2
              907f 00f7  ld   $f7
              9080 009a  ld   $9a
              9081 004c  ld   $4c
              9082 001a  ld   $1a
              9083 00ff  ld   $ff
              9084 005f  ld   $5f
              9085 0000  ld   $00
              9086 0000  ld   $00
              9087 002b  ld   $2b
              9088 001a  ld   $1a
              9089 0011  ld   $11
              908a 000c  ld   $0c
              908b 000b  ld   $0b
              908c 002b  ld   $2b
              908d 0022  ld   $22
              908e 00b4  ld   $b4
              908f 00e6  ld   $e6
              9090 0011  ld   $11
              9091 00fe  ld   $fe
              9092 00ff  ld   $ff
              9093 00f6  ld   $f6
              9094 0090  ld   $90
              9095 00fe  ld   $fe
              9096 002b  ld   $2b
              9097 007c  ld   $7c
              9098 00df  ld   $df
              9099 00fa  ld   $fa
              909a 0021  ld   $21
              909b 0024  ld   $24
              909c 00ec  ld   $ec
              909d 0000  ld   $00
              909e 0021  ld   $21
              909f 0026  ld   $26
              90a0 00ec  ld   $ec
              90a1 0002  ld   $02
              90a2 0021  ld   $21
              90a3 0028  ld   $28
              90a4 00ec  ld   $ec
              90a5 0004  ld   $04
              90a6 0011  ld   $11
              90a7 00e1  ld   $e1
              90a8 0004  ld   $04
              90a9 002b  ld   $2b
              90aa 0022  ld   $22
              90ab 0011  ld   $11
              90ac 0000  ld   $00
              90ad 003f  ld   $3f
              90ae 002b  ld   $2b
              90af 0024  ld   $24
              90b0 005e  ld   $5e
              90b1 0026  ld   $26
              90b2 0021  ld   $21
              90b3 007c  ld   $7c
              90b4 005e  ld   $5e
              90b5 0027  ld   $27
              90b6 008c  ld   $8c
              90b7 008d  ld   $8d
              90b8 0035  ld   $35
              90b9 003f  ld   $3f
              90ba 003b  ld   $3b
              90bb 001a  ld   $1a
              90bc 007a  ld   $7a
              90bd 00e6  ld   $e6
              90be 00fb  ld   $fb
              90bf 0035  ld   $35
              90c0 0056  ld   $56
              90c1 003b  ld   $3b
              90c2 0059  ld   $59
              90c3 0000  ld   $00
              90c4 0035  ld   $35
              90c5 0072  ld   $72
              90c6 0096  ld   $96
              90c7 0021  ld   $21
              90c8 007a  ld   $7a
              90c9 002b  ld   $2b
              90ca 0028  ld   $28
              90cb 0082  ld   $82
              90cc 00ff  ld   $ff
              90cd 00e6  ld   $e6
              90ce 00fb  ld   $fb
              90cf 0035  ld   $35
              90d0 004d  ld   $4d
              90d1 004c  ld   $4c
              90d2 0011  ld   $11
              90d3 00fb  ld   $fb
              90d4 00ff  ld   $ff
              90d5 00b4  ld   $b4
              90d6 00cb  ld   $cb
              90d7 0093  ld   $93
              90d8 0028  ld   $28
              90d9 00e3  ld   $e3
              90da 0001  ld   $01
              90db 0035  ld   $35
              90dc 0050  ld   $50
              90dd 004c  ld   $4c
              90de 0059  ld   $59
              90df 0061  ld   $61
              90e0 005e  ld   $5e
              90e1 007a  ld   $7a
              90e2 00e3  ld   $e3
              90e3 009f  ld   $9f
              90e4 002b  ld   $2b
              90e5 007c  ld   $7c
              90e6 00ad  ld   $ad
              90e7 005e  ld   $5e
              90e8 007b  ld   $7b
              90e9 0021  ld   $21
              90ea 007a  ld   $7a
              90eb 00e6  ld   $e6
              90ec 0002  ld   $02
              90ed 002b  ld   $2b
              90ee 0028  ld   $28
              90ef 0011  ld   $11
              90f0 0000  ld   $00
              90f1 0007  ld   $07
              90f2 0099  ld   $99
              90f3 0028  ld   $28
              90f4 00ad  ld   $ad
              90f5 0082  ld   $82
              90f6 0001  ld   $01
              90f7 005e  ld   $5e
              90f8 0026  ld   $26
              90f9 00b4  ld   $b4
              90fa 00cb  ld   $cb
              90fb fe00  bra  ac          ;+-----------------------------------+
              90fc fcfd  bra  $90fd       ;|                                   |
              90fd 1418  ld   $18,y       ;| Trampoline for page $9000 lookups |
              90fe e006  jmp  y,$06       ;|                                   |
              90ff c218  st   [$18]       ;+-----------------------------------+
              9100 0093  ld   $93
              9101 0028  ld   $28
              9102 001a  ld   $1a
              9103 0028  ld   $28
              9104 0035  ld   $35
              9105 0072  ld   $72
              9106 0066  ld   $66
              9107 0021  ld   $21
              9108 007c  ld   $7c
              9109 00e3  ld   $e3
              910a 0012  ld   $12
              910b 002b  ld   $2b
              910c 007e  ld   $7e
              910d 00ad  ld   $ad
              910e 005e  ld   $5e
              910f 0026  ld   $26
              9110 0021  ld   $21
              9111 007c  ld   $7c
              9112 00ad  ld   $ad
              9113 00f0  ld   $f0
              9114 007e  ld   $7e
              9115 001a  ld   $1a
              9116 0026  ld   $26
              9117 00f0  ld   $f0
              9118 007c  ld   $7c
              9119 0093  ld   $93
              911a 007c  ld   $7c
              911b 0093  ld   $93
              911c 007c  ld   $7c
              911d 001a  ld   $1a
              911e 007c  ld   $7c
              911f 008c  ld   $8c
              9120 00d8  ld   $d8
              9121 0035  ld   $35
              9122 0072  ld   $72
              9123 0079  ld   $79
              9124 001a  ld   $1a
              9125 0027  ld   $27
              9126 00e6  ld   $e6
              9127 00a0  ld   $a0
              9128 0035  ld   $35
              9129 0050  ld   $50
              912a 00ef  ld   $ef
              912b 00e6  ld   $e6
              912c 0040  ld   $40
              912d 0035  ld   $35
              912e 0050  ld   $50
              912f 00a4  ld   $a4
              9130 00e6  ld   $e6
              9131 0020  ld   $20
              9132 00e3  ld   $e3
              9133 000e  ld   $0e
              9134 0035  ld   $35
              9135 0053  ld   $53
              9136 00b2  ld   $b2
              9137 00e3  ld   $e3
              9138 0032  ld   $32
              9139 002b  ld   $2b
              913a 007c  ld   $7c
              913b 0011  ld   $11
              913c 0000  ld   $00
              913d 0007  ld   $07
              913e 0090  ld   $90
              913f 00b7  ld   $b7
              9140 002b  ld   $2b
              9141 007c  ld   $7c
              9142 0011  ld   $11
              9143 0000  ld   $00
              9144 0008  ld   $08
              9145 002b  ld   $2b
              9146 007e  ld   $7e
              9147 0021  ld   $21
              9148 007c  ld   $7c
              9149 00e9  ld   $e9
              914a 00e9  ld   $e9
              914b 0099  ld   $99
              914c 007c  ld   $7c
              914d 0099  ld   $99
              914e 007e  ld   $7e
              914f 002b  ld   $2b
              9150 007e  ld   $7e
              9151 0021  ld   $21
              9152 007a  ld   $7a
              9153 002b  ld   $2b
              9154 0028  ld   $28
              9155 00e3  ld   $e3
              9156 0006  ld   $06
              9157 002b  ld   $2b
              9158 007a  ld   $7a
              9159 0059  ld   $59
              915a 0005  ld   $05
              915b 002b  ld   $2b
              915c 007c  ld   $7c
              915d 0021  ld   $21
              915e 007e  ld   $7e
              915f 007f  ld   $7f
              9160 0000  ld   $00
              9161 0082  ld   $82
              9162 00fe  ld   $fe
              9163 005e  ld   $5e
              9164 0026  ld   $26
              9165 0011  ld   $11
              9166 0000  ld   $00
              9167 0007  ld   $07
              9168 0099  ld   $99
              9169 0028  ld   $28
              916a 00ad  ld   $ad
              916b 0035  ld   $35
              916c 003f  ld   $3f
              916d 00e2  ld   $e2
              916e 0093  ld   $93
              916f 0026  ld   $26
              9170 00b4  ld   $b4
              9171 00cb  ld   $cb
              9172 0093  ld   $93
              9173 007e  ld   $7e
              9174 0093  ld   $93
              9175 0028  ld   $28
              9176 0021  ld   $21
              9177 007c  ld   $7c
              9178 00e6  ld   $e6
              9179 0001  ld   $01
              917a 0035  ld   $35
              917b 004d  ld   $4d
              917c 00cd  ld   $cd
              917d 00ee  ld   $ee
              917e 0000  ld   $00
              917f 002b  ld   $2b
              9180 0024  ld   $24
              9181 00ee  ld   $ee
              9182 0002  ld   $02
              9183 002b  ld   $2b
              9184 0026  ld   $26
              9185 00ee  ld   $ee
              9186 0004  ld   $04
              9187 002b  ld   $2b
              9188 0028  ld   $28
              9189 00df  ld   $df
              918a 0006  ld   $06
              918b 00ff  ld   $ff
              918c 00c1  ld   $c1
              918d 0000  ld   $00
              918e 0058  ld   $58
              918f 00a9  ld   $a9
              9190 00aa  ld   $aa
              9191 0020  ld   $20
              9192 00ef  ld   $ef
              9193 00ff  ld   $ff
              9194 00ae  ld   $ae
              9195 0000  ld   $00
              9196 00c2  ld   $c2
              9197 00bd  ld   $bd
              9198 0000  ld   $00
              9199 00c2  ld   $c2
              919a 0020  ld   $20
              919b 00ef  ld   $ef
              919c 00ff  ld   $ff
              919d 00ca  ld   $ca
              919e 00d0  ld   $d0
              919f 00f7  ld   $f7
              91a0 00ae  ld   $ae
              91a1 0025  ld   $25
              91a2 00c1  ld   $c1
              91a3 00bd  ld   $bd
              91a4 0025  ld   $25
              91a5 00c1  ld   $c1
              91a6 0020  ld   $20
              91a7 00ef  ld   $ef
              91a8 00ff  ld   $ff
              91a9 00ca  ld   $ca
              91aa 00d0  ld   $d0
              91ab 00f7  ld   $f7
              91ac 002c  ld   $2c
              91ad 0012  ld   $12
              91ae 00d0  ld   $d0
              91af 0030  ld   $30
              91b0 00fb  ld   $fb
              91b1 004c  ld   $4c
              91b2 0000  ld   $00
              91b3 00ff  ld   $ff
              91b4 0032  ld   $32
              91b5 008d  ld   $8d
              91b6 00ce  ld   $ce
              91b7 00cf  ld   $cf
              91b8 00cd  ld   $cd
              91b9 00da  ld   $da
              91ba 00cf  ld   $cf
              91bb 00d7  ld   $d7
              91bc 00a0  ld   $a0
              91bd 00da  ld   $da
              91be 00ad  ld   $ad
              91bf 00cc  ld   $cc
              91c0 00d4  ld   $d4
              91c1 00c3  ld   $c3
              91c2 008d  ld   $8d
              91c3 00d4  ld   $d4
              91c4 00d2  ld   $d2
              91c5 00c1  ld   $c1
              91c6 00d4  ld   $d4
              91c7 00d3  ld   $d3
              91c8 00a0  ld   $a0
              91c9 00cd  ld   $cd
              91ca 00d2  ld   $d2
              91cb 00c1  ld   $c1
              91cc 00d7  ld   $d7
              91cd 00a0  ld   $a0
              91ce 00c3  ld   $c3
              91cf 00c9  ld   $c9
              91d0 00d3  ld   $d3
              91d1 00c1  ld   $c1
              91d2 00c2  ld   $c2
              91d3 00a0  ld   $a0
              91d4 00d2  ld   $d2
              91d5 00b3  ld   $b3
              91d6 00c2  ld   $c2
              91d7 00b2  ld   $b2
              91d8 00c5  ld   $c5
              91d9 008d  ld   $8d
              91da 00c3  ld   $c3
              91db 00c9  ld   $c9
              91dc 00d3  ld   $d3
              91dd 00c1  ld   $c1
              91de 00c2  ld   $c2
              91df 00a0  ld   $a0
              91e0 00d2  ld   $d2
              91e1 00c5  ld   $c5
              91e2 00c7  ld   $c7
              91e3 00c5  ld   $c5
              91e4 00d4  ld   $d4
              91e5 00ce  ld   $ce
              91e6 00c9  ld   $c9
              91e7 00c2  ld   $c2
              91e8 0000  ld   $00
              91e9 005b  ld   $5b
              91ea 005a  ld   $5a
              91eb 00a0  ld   $a0
              91ec 00d2  ld   $d2
              91ed 00b0  ld   $b0
              91ee 00b0  ld   $b0
              91ef 00b0  ld   $b0
              91f0 00c5  ld   $c5
              91f1 008d  ld   $8d
              91f2 00d5  ld   $d5
              91f3 00ce  ld   $ce
              91f4 00c5  ld   $c5
              91f5 00cd  ld   $cd
              91f6 00a0  ld   $a0
              91f7 00d2  ld   $d2
              91f8 00b0  ld   $b0
              91f9 00b0  ld   $b0
              91fa 00b1  ld   $b1
              91fb fe00  bra  ac          ;+-----------------------------------+
              91fc fcfd  bra  $91fd       ;|                                   |
              91fd 1418  ld   $18,y       ;| Trampoline for page $9100 lookups |
              91fe e006  jmp  y,$06       ;|                                   |
              91ff c218  st   [$18]       ;+-----------------------------------+
              9200 00c3  ld   $c3
              9201 008d  ld   $8d
              9202 00d2  ld   $d2
              9203 00c5  ld   $c5
              9204 00cc  ld   $cc
              9205 00c2  ld   $c2
              9206 00cd  ld   $cd
              9207 00c5  ld   $c5
              9208 00d3  ld   $d3
              9209 00d3  ld   $d3
              920a 00c1  ld   $c1
              920b 00ad  ld   $ad
              920c 00c9  ld   $c9
              920d 00ce  ld   $ce
              920e 00c9  ld   $c9
              920f 00cd  ld   $cd
              9210 00a0  ld   $a0
              9211 00a0  ld   $a0
              9212 00d2  ld   $d2
              9213 00c5  ld   $c5
              9214 00c5  ld   $c5
              9215 00c5  ld   $c5
              9216 008d  ld   $8d
              9217 00c5  ld   $c5
              9218 00cc  ld   $cc
              9219 00da  ld   $da
              921a 00da  ld   $da
              921b 00d5  ld   $d5
              921c 00d0  ld   $d0
              921d 00ad  ld   $ad
              921e 00b5  ld   $b5
              921f 00b1  ld   $b1
              9220 00a0  ld   $a0
              9221 00a0  ld   $a0
              9222 00d2  ld   $d2
              9223 00b0  ld   $b0
              9224 00b0  ld   $b0
              9225 00b4  ld   $b4
              9226 008d  ld   $8d
              9227 00c4  ld   $c4
              9228 00ce  ld   $ce
              9229 00c9  ld   $c9
              922a 00cd  ld   $cd
              922b 00d2  ld   $d2
              922c 00c5  ld   $c5
              922d 00d4  ld   $d4
              922e 00d3  ld   $d3
              922f 00c1  ld   $c1
              9230 00cd  ld   $cd
              9231 00a0  ld   $a0
              9232 00a0  ld   $a0
              9233 00d2  ld   $d2
              9234 00b0  ld   $b0
              9235 00b0  ld   $b0
              9236 00b3  ld   $b3
              9237 008d  ld   $8d
              9238 008d  ld   $8d
              9239 00cc  ld   $cc
              923a 00d4  ld   $d4
              923b 00d4  ld   $d4
              923c 00a0  ld   $a0
              923d 00ce  ld   $ce
              923e 00cf  ld   $cf
              923f 00a0  ld   $a0
              9240 00b1  ld   $b1
              9241 00ad  ld   $ad
              9242 00c5  ld   $c5
              9243 00cc  ld   $cc
              9244 00d0  ld   $d0
              9245 00d0  ld   $d0
              9246 00c1  ld   $c1
              9247 008d  ld   $8d
              9248 008d  ld   $8d
              9249 008d  ld   $8d
              924a 00d0  ld   $d0
              924b 0010  ld   $10
              924c 0004  ld   $04
              924d 0000  ld   $00
              924e 0000  ld   $00
              924f 0000  ld   $00
              9250 0000  ld   $00
              9251 00e0  ld   $e0
              9252 0000  ld   $00
              9253 0000  ld   $00
              9254 004c  ld   $4c
              9255 00b0  ld   $b0
              9256 00e2  ld   $e2
              9257 00ad  ld   $ad
              9258 0011  ld   $11
              9259 00d0  ld   $d0
              925a 0010  ld   $10
              925b 00fb  ld   $fb
              925c 00ad  ld   $ad
              925d 0010  ld   $10
              925e 00d0  ld   $d0
              925f 0060  ld   $60
              9260 008a  ld   $8a
              9261 0029  ld   $29
              9262 0020  ld   $20
              9263 00f0  ld   $f0
              9264 0023  ld   $23
              9265 00a9  ld   $a9
              9266 00a0  ld   $a0
              9267 0085  ld   $85
              9268 0044  ld   $44
              9269 004c  ld   $4c
              926a 00c9  ld   $c9
              926b 00e3  ld   $e3
              926c 00a9  ld   $a9
              926d 0020  ld   $20
              926e 00c5  ld   $c5
              926f 0081  ld   $81
              9270 00b0  ld   $b0
              9271 000c  ld   $0c
              9272 00a9  ld   $a9
              9273 008d  ld   $8d
              9274 00a0  ld   $a0
              9275 0007  ld   $07
              9276 0020  ld   $20
              9277 00c9  ld   $c9
              9278 00e3  ld   $e3
              9279 00a9  ld   $a9
              927a 00a0  ld   $a0
              927b 0088  ld   $88
              927c 00d0  ld   $d0
              927d 00f8  ld   $f8
              927e 00a0  ld   $a0
              927f 0000  ld   $00
              9280 00b1  ld   $b1
              9281 0042  ld   $42
              9282 00e6  ld   $e6
              9283 0042  ld   $42
              9284 00d0  ld   $d0
              9285 0002  ld   $02
              9286 00e6  ld   $e6
              9287 0043  ld   $43
              9288 0060  ld   $60
              9289 0020  ld   $20
              928a 0015  ld   $15
              928b 00e7  ld   $e7
              928c 0020  ld   $20
              928d 0076  ld   $76
              928e 00e5  ld   $e5
              928f 00a5  ld   $a5
              9290 0042  ld   $42
              9291 00c5  ld   $c5
              9292 0046  ld   $46
              9293 00a5  ld   $a5
              9294 0043  ld   $43
              9295 00e5  ld   $e5
              9296 0047  ld   $47
              9297 00b0  ld   $b0
              9298 00ef  ld   $ef
              9299 0020  ld   $20
              929a 006d  ld   $6d
              929b 00e0  ld   $e0
              929c 004c  ld   $4c
              929d 003b  ld   $3b
              929e 00e0  ld   $e0
              929f 00a5  ld   $a5
              92a0 00ca  ld   $ca
              92a1 0085  ld   $85
              92a2 0042  ld   $42
              92a3 00a5  ld   $a5
              92a4 00cb  ld   $cb
              92a5 0085  ld   $85
              92a6 0043  ld   $43
              92a7 00a5  ld   $a5
              92a8 004c  ld   $4c
              92a9 0085  ld   $85
              92aa 0046  ld   $46
              92ab 00a5  ld   $a5
              92ac 004d  ld   $4d
              92ad 0085  ld   $85
              92ae 0047  ld   $47
              92af 00d0  ld   $d0
              92b0 00de  ld   $de
              92b1 0020  ld   $20
              92b2 0015  ld   $15
              92b3 00e7  ld   $e7
              92b4 0020  ld   $20
              92b5 006d  ld   $6d
              92b6 00e5  ld   $e5
              92b7 00a5  ld   $a5
              92b8 0044  ld   $44
              92b9 0085  ld   $85
              92ba 0042  ld   $42
              92bb 00a5  ld   $a5
              92bc 0045  ld   $45
              92bd 0085  ld   $85
              92be 0043  ld   $43
              92bf 00b0  ld   $b0
              92c0 00c7  ld   $c7
              92c1 0086  ld   $86
              92c2 00d8  ld   $d8
              92c3 00a9  ld   $a9
              92c4 00a0  ld   $a0
              92c5 0085  ld   $85
              92c6 0082  ld   $82
              92c7 0020  ld   $20
              92c8 002a  ld   $2a
              92c9 00e0  ld   $e0
              92ca 0098  ld   $98
              92cb 0085  ld   $85
              92cc 0044  ld   $44
              92cd 0020  ld   $20
              92ce 002a  ld   $2a
              92cf 00e0  ld   $e0
              92d0 00aa  ld   $aa
              92d1 0020  ld   $20
              92d2 002a  ld   $2a
              92d3 00e0  ld   $e0
              92d4 0020  ld   $20
              92d5 001b  ld   $1b
              92d6 00e5  ld   $e5
              92d7 0020  ld   $20
              92d8 0018  ld   $18
              92d9 00e0  ld   $e0
              92da 0084  ld   $84
              92db 0082  ld   $82
              92dc 00aa  ld   $aa
              92dd 0010  ld   $10
              92de 0018  ld   $18
              92df 000a  ld   $0a
              92e0 0010  ld   $10
              92e1 00e9  ld   $e9
              92e2 00a5  ld   $a5
              92e3 0044  ld   $44
              92e4 00d0  ld   $d0
              92e5 0003  ld   $03
              92e6 0020  ld   $20
              92e7 0011  ld   $11
              92e8 00e0  ld   $e0
              92e9 008a  ld   $8a
              92ea 0020  ld   $20
              92eb 00c9  ld   $c9
              92ec 00e3  ld   $e3
              92ed 00a9  ld   $a9
              92ee 0025  ld   $25
              92ef 0020  ld   $20
              92f0 001a  ld   $1a
              92f1 00e0  ld   $e0
              92f2 00aa  ld   $aa
              92f3 0030  ld   $30
              92f4 00f5  ld   $f5
              92f5 0085  ld   $85
              92f6 0044  ld   $44
              92f7 00c9  ld   $c9
              92f8 0001  ld   $01
              92f9 00d0  ld   $d0
              92fa 0005  ld   $05
              92fb fe00  bra  ac          ;+-----------------------------------+
              92fc fcfd  bra  $92fd       ;|                                   |
              92fd 1418  ld   $18,y       ;| Trampoline for page $9200 lookups |
              92fe e006  jmp  y,$06       ;|                                   |
              92ff c218  st   [$18]       ;+-----------------------------------+
              9300 00a6  ld   $a6
              9301 00d8  ld   $d8
              9302 004c  ld   $4c
              9303 00cd  ld   $cd
              9304 00e3  ld   $e3
              9305 0048  ld   $48
              9306 0084  ld   $84
              9307 00ce  ld   $ce
              9308 00a2  ld   $a2
              9309 00ed  ld   $ed
              930a 0086  ld   $86
              930b 00cf  ld   $cf
              930c 00c9  ld   $c9
              930d 0051  ld   $51
              930e 0090  ld   $90
              930f 0004  ld   $04
              9310 00c6  ld   $c6
              9311 00cf  ld   $cf
              9312 00e9  ld   $e9
              9313 0050  ld   $50
              9314 0048  ld   $48
              9315 00b1  ld   $b1
              9316 00ce  ld   $ce
              9317 00aa  ld   $aa
              9318 0088  ld   $88
              9319 00b1  ld   $b1
              931a 00ce  ld   $ce
              931b 0010  ld   $10
              931c 00fa  ld   $fa
              931d 00e0  ld   $e0
              931e 00c0  ld   $c0
              931f 00b0  ld   $b0
              9320 0004  ld   $04
              9321 00e0  ld   $e0
              9322 0000  ld   $00
              9323 0030  ld   $30
              9324 00f2  ld   $f2
              9325 00aa  ld   $aa
              9326 0068  ld   $68
              9327 00e9  ld   $e9
              9328 0001  ld   $01
              9329 00d0  ld   $d0
              932a 00e9  ld   $e9
              932b 0024  ld   $24
              932c 0044  ld   $44
              932d 0030  ld   $30
              932e 0003  ld   $03
              932f 0020  ld   $20
              9330 00f8  ld   $f8
              9331 00ef  ld   $ef
              9332 00b1  ld   $b1
              9333 00ce  ld   $ce
              9334 0010  ld   $10
              9335 0010  ld   $10
              9336 00aa  ld   $aa
              9337 0029  ld   $29
              9338 003f  ld   $3f
              9339 0085  ld   $85
              933a 0044  ld   $44
              933b 0018  ld   $18
              933c 0069  ld   $69
              933d 00a0  ld   $a0
              933e 0020  ld   $20
              933f 00c9  ld   $c9
              9340 00e3  ld   $e3
              9341 0088  ld   $88
              9342 00e0  ld   $e0
              9343 00c0  ld   $c0
              9344 0090  ld   $90
              9345 00ec  ld   $ec
              9346 0020  ld   $20
              9347 000c  ld   $0c
              9348 00e0  ld   $e0
              9349 0068  ld   $68
              934a 00c9  ld   $c9
              934b 005d  ld   $5d
              934c 00f0  ld   $f0
              934d 00a4  ld   $a4
              934e 00c9  ld   $c9
              934f 0028  ld   $28
              9350 00d0  ld   $d0
              9351 008a  ld   $8a
              9352 00f0  ld   $f0
              9353 009e  ld   $9e
              9354 0020  ld   $20
              9355 0018  ld   $18
              9356 00e1  ld   $e1
              9357 0095  ld   $95
              9358 0050  ld   $50
              9359 00e1  ld   $e1
              935a 0000  ld   $00
              935b 0000  ld   $00
              935c 00d5  ld   $d5
              935d 0088  ld   $88
              935e 0090  ld   $90
              935f 0011  ld   $11
              9360 00a0  ld   $a0
              9361 002b  ld   $2b
              9362 004c  ld   $4c
              9363 00e0  ld   $e0
              9364 00e3  ld   $e3
              9365 0020  ld   $20
              9366 0034  ld   $34
              9367 00ee  ld   $ee
              9368 00d5  ld   $d5
              9369 0050  ld   $50
              936a 0090  ld   $90
              936b 00f4  ld   $f4
              936c 0020  ld   $20
              936d 00e4  ld   $e4
              936e 00ef  ld   $ef
              936f 0095  ld   $95
              9370 0088  ld   $88
              9371 004c  ld   $4c
              9372 0023  ld   $23
              9373 00e8  ld   $e8
              9374 0020  ld   $20
              9375 0034  ld   $34
              9376 00ee  ld   $ee
              9377 00f0  ld   $f0
              9378 00e7  ld   $e7
              9379 0038  ld   $38
              937a 00e9  ld   $e9
              937b 0001  ld   $01
              937c 0060  ld   $60
              937d 0020  ld   $20
              937e 0018  ld   $18
              937f 00e1  ld   $e1
              9380 0095  ld   $95
              9381 0050  ld   $50
              9382 0018  ld   $18
              9383 00f5  ld   $f5
              9384 0088  ld   $88
              9385 004c  ld   $4c
              9386 0002  ld   $02
              9387 00e1  ld   $e1
              9388 00a0  ld   $a0
              9389 0014  ld   $14
              938a 00d0  ld   $d0
              938b 00d6  ld   $d6
              938c 0020  ld   $20
              938d 0018  ld   $18
              938e 00e1  ld   $e1
              938f 00e8  ld   $e8
              9390 00b5  ld   $b5
              9391 0050  ld   $50
              9392 0085  ld   $85
              9393 00da  ld   $da
              9394 0065  ld   $65
              9395 00ce  ld   $ce
              9396 0048  ld   $48
              9397 00a8  ld   $a8
              9398 00b5  ld   $b5
              9399 0088  ld   $88
              939a 0085  ld   $85
              939b 00db  ld   $db
              939c 0065  ld   $65
              939d 00cf  ld   $cf
              939e 0048  ld   $48
              939f 00c4  ld   $c4
              93a0 00ca  ld   $ca
              93a1 00e5  ld   $e5
              93a2 00cb  ld   $cb
              93a3 00b0  ld   $b0
              93a4 00e3  ld   $e3
              93a5 00a5  ld   $a5
              93a6 00da  ld   $da
              93a7 0069  ld   $69
              93a8 00fe  ld   $fe
              93a9 0085  ld   $85
              93aa 00da  ld   $da
              93ab 00a9  ld   $a9
              93ac 00ff  ld   $ff
              93ad 00a8  ld   $a8
              93ae 0065  ld   $65
              93af 00db  ld   $db
              93b0 0085  ld   $85
              93b1 00db  ld   $db
              93b2 00c8  ld   $c8
              93b3 00b1  ld   $b1
              93b4 00da  ld   $da
              93b5 00d9  ld   $d9
              93b6 00cc  ld   $cc
              93b7 0000  ld   $00
              93b8 00d0  ld   $d0
              93b9 000f  ld   $0f
              93ba 0098  ld   $98
              93bb 00f0  ld   $f0
              93bc 00f5  ld   $f5
              93bd 0068  ld   $68
              93be 0091  ld   $91
              93bf 00da  ld   $da
              93c0 0099  ld   $99
              93c1 00cc  ld   $cc
              93c2 0000  ld   $00
              93c3 0088  ld   $88
              93c4 0010  ld   $10
              93c5 00f7  ld   $f7
              93c6 00e8  ld   $e8
              93c7 0060  ld   $60
              93c8 00ea  ld   $ea
              93c9 00a0  ld   $a0
              93ca 0080  ld   $80
              93cb 00d0  ld   $d0
              93cc 0095  ld   $95
              93cd 00a9  ld   $a9
              93ce 0000  ld   $00
              93cf 0020  ld   $20
              93d0 000a  ld   $0a
              93d1 00e7  ld   $e7
              93d2 00a0  ld   $a0
              93d3 0002  ld   $02
              93d4 0094  ld   $94
              93d5 0088  ld   $88
              93d6 0020  ld   $20
              93d7 000a  ld   $0a
              93d8 00e7  ld   $e7
              93d9 00a9  ld   $a9
              93da 00bf  ld   $bf
              93db 0020  ld   $20
              93dc 00c9  ld   $c9
              93dd 00e3  ld   $e3
              93de 00a0  ld   $a0
              93df 0000  ld   $00
              93e0 0020  ld   $20
              93e1 009e  ld   $9e
              93e2 00e2  ld   $e2
              93e3 0094  ld   $94
              93e4 0088  ld   $88
              93e5 00ea  ld   $ea
              93e6 00ea  ld   $ea
              93e7 00ea  ld   $ea
              93e8 00b5  ld   $b5
              93e9 0051  ld   $51
              93ea 0085  ld   $85
              93eb 00ce  ld   $ce
              93ec 00b5  ld   $b5
              93ed 0089  ld   $89
              93ee 0085  ld   $85
              93ef 00cf  ld   $cf
              93f0 00e8  ld   $e8
              93f1 00e8  ld   $e8
              93f2 0020  ld   $20
              93f3 00bc  ld   $bc
              93f4 00e1  ld   $e1
              93f5 00b5  ld   $b5
              93f6 004e  ld   $4e
              93f7 00d5  ld   $d5
              93f8 0086  ld   $86
              93f9 00b0  ld   $b0
              93fa 0015  ld   $15
              93fb fe00  bra  ac          ;+-----------------------------------+
              93fc fcfd  bra  $93fd       ;|                                   |
              93fd 1418  ld   $18,y       ;| Trampoline for page $9300 lookups |
              93fe e006  jmp  y,$06       ;|                                   |
              93ff c218  st   [$18]       ;+-----------------------------------+
              9400 00f6  ld   $f6
              9401 004e  ld   $4e
              9402 00a8  ld   $a8
              9403 00b1  ld   $b1
              9404 00ce  ld   $ce
              9405 00b4  ld   $b4
              9406 0050  ld   $50
              9407 00c4  ld   $c4
              9408 0044  ld   $44
              9409 0090  ld   $90
              940a 0004  ld   $04
              940b 00a0  ld   $a0
              940c 0083  ld   $83
              940d 00d0  ld   $d0
              940e 00c1  ld   $c1
              940f 0091  ld   $91
              9410 00da  ld   $da
              9411 00f6  ld   $f6
              9412 0050  ld   $50
              9413 0090  ld   $90
              9414 00e5  ld   $e5
              9415 00b4  ld   $b4
              9416 0050  ld   $50
              9417 008a  ld   $8a
              9418 0091  ld   $91
              9419 00da  ld   $da
              941a 00e8  ld   $e8
              941b 00e8  ld   $e8
              941c 0060  ld   $60
              941d 00b5  ld   $b5
              941e 0051  ld   $51
              941f 0085  ld   $85
              9420 00da  ld   $da
              9421 0038  ld   $38
              9422 00e9  ld   $e9
              9423 0002  ld   $02
              9424 0085  ld   $85
              9425 0044  ld   $44
              9426 00b5  ld   $b5
              9427 0089  ld   $89
              9428 0085  ld   $85
              9429 00db  ld   $db
              942a 00e9  ld   $e9
              942b 0000  ld   $00
              942c 0085  ld   $85
              942d 0045  ld   $45
              942e 00a0  ld   $a0
              942f 0000  ld   $00
              9430 00b1  ld   $b1
              9431 0044  ld   $44
              9432 0018  ld   $18
              9433 00e5  ld   $e5
              9434 00da  ld   $da
              9435 0085  ld   $85
              9436 0044  ld   $44
              9437 0060  ld   $60
              9438 00b5  ld   $b5
              9439 0053  ld   $53
              943a 0085  ld   $85
              943b 00ce  ld   $ce
              943c 00b5  ld   $b5
              943d 008b  ld   $8b
              943e 0085  ld   $85
              943f 00cf  ld   $cf
              9440 00b5  ld   $b5
              9441 0051  ld   $51
              9442 0085  ld   $85
              9443 00da  ld   $da
              9444 00b5  ld   $b5
              9445 0089  ld   $89
              9446 0085  ld   $85
              9447 00db  ld   $db
              9448 00e8  ld   $e8
              9449 00e8  ld   $e8
              944a 00e8  ld   $e8
              944b 00a0  ld   $a0
              944c 0000  ld   $00
              944d 0094  ld   $94
              944e 0088  ld   $88
              944f 0094  ld   $94
              9450 00a8  ld   $a8
              9451 00c8  ld   $c8
              9452 0094  ld   $94
              9453 0050  ld   $50
              9454 00b5  ld   $b5
              9455 004d  ld   $4d
              9456 00d5  ld   $d5
              9457 0085  ld   $85
              9458 0008  ld   $08
              9459 0048  ld   $48
              945a 00b5  ld   $b5
              945b 004f  ld   $4f
              945c 00d5  ld   $d5
              945d 0087  ld   $87
              945e 0090  ld   $90
              945f 0007  ld   $07
              9460 0068  ld   $68
              9461 00e2  ld   $e2
              9462 0000  ld   $00
              9463 0000  ld   $00
              9464 0028  ld   $28
              9465 00b0  ld   $b0
              9466 0002  ld   $02
              9467 0056  ld   $56
              9468 0050  ld   $50
              9469 0060  ld   $60
              946a 00a8  ld   $a8
              946b 00b1  ld   $b1
              946c 00ce  ld   $ce
              946d 0085  ld   $85
              946e 0044  ld   $44
              946f 0068  ld   $68
              9470 00a8  ld   $a8
              9471 0028  ld   $28
              9472 00b0  ld   $b0
              9473 00f3  ld   $f3
              9474 00b1  ld   $b1
              9475 00da  ld   $da
              9476 00c5  ld   $c5
              9477 0044  ld   $44
              9478 00d0  ld   $d0
              9479 00ed  ld   $ed
              947a 00f6  ld   $f6
              947b 004f  ld   $4f
              947c 00f6  ld   $f6
              947d 004d  ld   $4d
              947e 00b0  ld   $b0
              947f 00d7  ld   $d7
              9480 0020  ld   $20
              9481 00d7  ld   $d7
              9482 00e1  ld   $e1
              9483 004c  ld   $4c
              9484 0036  ld   $36
              9485 00e7  ld   $e7
              9486 0020  ld   $20
              9487 0054  ld   $54
              9488 00e2  ld   $e2
              9489 0006  ld   $06
              948a 00ce  ld   $ce
              948b 0026  ld   $26
              948c 00cf  ld   $cf
              948d 0090  ld   $90
              948e 000d  ld   $0d
              948f 0018  ld   $18
              9490 00a5  ld   $a5
              9491 0046  ld   $46
              9492 0065  ld   $65
              9493 00da  ld   $da
              9494 0085  ld   $85
              9495 0046  ld   $46
              9496 00a5  ld   $a5
              9497 0047  ld   $47
              9498 0065  ld   $65
              9499 00db  ld   $db
              949a 0085  ld   $85
              949b 0047  ld   $47
              949c 0088  ld   $88
              949d 00f0  ld   $f0
              949e 0009  ld   $09
              949f 0006  ld   $06
              94a0 0046  ld   $46
              94a1 0026  ld   $26
              94a2 0047  ld   $47
              94a3 0010  ld   $10
              94a4 00e4  ld   $e4
              94a5 004c  ld   $4c
              94a6 007e  ld   $7e
              94a7 00e7  ld   $e7
              94a8 00a5  ld   $a5
              94a9 0046  ld   $46
              94aa 0020  ld   $20
              94ab 0008  ld   $08
              94ac 00e7  ld   $e7
              94ad 00a5  ld   $a5
              94ae 0047  ld   $47
              94af 0095  ld   $95
              94b0 00a8  ld   $a8
              94b1 0006  ld   $06
              94b2 0045  ld   $45
              94b3 0090  ld   $90
              94b4 0028  ld   $28
              94b5 004c  ld   $4c
              94b6 006f  ld   $6f
              94b7 00e7  ld   $e7
              94b8 00a9  ld   $a9
              94b9 0055  ld   $55
              94ba 0085  ld   $85
              94bb 0045  ld   $45
              94bc 0020  ld   $20
              94bd 005b  ld   $5b
              94be 00e2  ld   $e2
              94bf 00a5  ld   $a5
              94c0 00ce  ld   $ce
              94c1 0085  ld   $85
              94c2 00da  ld   $da
              94c3 00a5  ld   $a5
              94c4 00cf  ld   $cf
              94c5 0085  ld   $85
              94c6 00db  ld   $db
              94c7 0020  ld   $20
              94c8 0015  ld   $15
              94c9 00e7  ld   $e7
              94ca 0084  ld   $84
              94cb 0046  ld   $46
              94cc 0084  ld   $84
              94cd 0047  ld   $47
              94ce 00a5  ld   $a5
              94cf 00cf  ld   $cf
              94d0 0010  ld   $10
              94d1 0009  ld   $09
              94d2 00ca  ld   $ca
              94d3 0006  ld   $06
              94d4 0045  ld   $45
              94d5 0020  ld   $20
              94d6 006f  ld   $6f
              94d7 00e7  ld   $e7
              94d8 0020  ld   $20
              94d9 0015  ld   $15
              94da 00e7  ld   $e7
              94db 00a0  ld   $a0
              94dc 0010  ld   $10
              94dd 0060  ld   $60
              94de 0020  ld   $20
              94df 006c  ld   $6c
              94e0 00ee  ld   $ee
              94e1 00f0  ld   $f0
              94e2 00c5  ld   $c5
              94e3 00ff  ld   $ff
              94e4 00c9  ld   $c9
              94e5 0084  ld   $84
              94e6 00d0  ld   $d0
              94e7 0002  ld   $02
              94e8 0046  ld   $46
              94e9 0078  ld   $78
              94ea 00c9  ld   $c9
              94eb 00df  ld   $df
              94ec 00f0  ld   $f0
              94ed 0011  ld   $11
              94ee 00c9  ld   $c9
              94ef 009b  ld   $9b
              94f0 00f0  ld   $f0
              94f1 0006  ld   $06
              94f2 0099  ld   $99
              94f3 0000  ld   $00
              94f4 0002  ld   $02
              94f5 00c8  ld   $c8
              94f6 0010  ld   $10
              94f7 000a  ld   $0a
              94f8 00a0  ld   $a0
              94f9 008b  ld   $8b
              94fa 0020  ld   $20
              94fb fe00  bra  ac          ;+-----------------------------------+
              94fc fcfd  bra  $94fd       ;|                                   |
              94fd 1418  ld   $18,y       ;| Trampoline for page $9400 lookups |
              94fe e006  jmp  y,$06       ;|                                   |
              94ff c218  st   [$18]       ;+-----------------------------------+
              9500 00c4  ld   $c4
              9501 00e3  ld   $e3
              9502 00a0  ld   $a0
              9503 0001  ld   $01
              9504 0088  ld   $88
              9505 0030  ld   $30
              9506 00f6  ld   $f6
              9507 0020  ld   $20
              9508 0003  ld   $03
              9509 00e0  ld   $e0
              950a 00ea  ld   $ea
              950b 00ea  ld   $ea
              950c 0020  ld   $20
              950d 00c9  ld   $c9
              950e 00e3  ld   $e3
              950f 00c9  ld   $c9
              9510 008d  ld   $8d
              9511 00d0  ld   $d0
              9512 00d6  ld   $d6
              9513 00a9  ld   $a9
              9514 00df  ld   $df
              9515 0099  ld   $99
              9516 0000  ld   $00
              9517 0002  ld   $02
              9518 0060  ld   $60
              9519 0020  ld   $20
              951a 00d3  ld   $d3
              951b 00ef  ld   $ef
              951c 0020  ld   $20
              951d 00cd  ld   $cd
              951e 00e3  ld   $e3
              951f 0046  ld   $46
              9520 00d9  ld   $d9
              9521 00a9  ld   $a9
              9522 00be  ld   $be
              9523 0020  ld   $20
              9524 00c9  ld   $c9
              9525 00e3  ld   $e3
              9526 00a0  ld   $a0
              9527 0000  ld   $00
              9528 0084  ld   $84
              9529 0082  ld   $82
              952a 0024  ld   $24
              952b 0078  ld   $78
              952c 0010  ld   $10
              952d 000c  ld   $0c
              952e 00a6  ld   $a6
              952f 0076  ld   $76
              9530 00a5  ld   $a5
              9531 0077  ld   $77
              9532 0020  ld   $20
              9533 001b  ld   $1b
              9534 00e5  ld   $e5
              9535 00a9  ld   $a9
              9536 00a0  ld   $a0
              9537 0020  ld   $20
              9538 00c9  ld   $c9
              9539 00e3  ld   $e3
              953a 00a2  ld   $a2
              953b 00ff  ld   $ff
              953c 009a  ld   $9a
              953d 0020  ld   $20
              953e 009e  ld   $9e
              953f 00e2  ld   $e2
              9540 0084  ld   $84
              9541 00e9  ld   $e9
              9542 008a  ld   $8a
              9543 0085  ld   $85
              9544 00c8  ld   $c8
              9545 00a2  ld   $a2
              9546 0018  ld   $18
              9547 0020  ld   $20
              9548 0091  ld   $91
              9549 00e4  ld   $e4
              954a 00a5  ld   $a5
              954b 00c8  ld   $c8
              954c 0069  ld   $69
              954d 0000  ld   $00
              954e 0085  ld   $85
              954f 00de  ld   $de
              9550 00a9  ld   $a9
              9551 0000  ld   $00
              9552 00aa  ld   $aa
              9553 0069  ld   $69
              9554 0002  ld   $02
              9555 0085  ld   $85
              9556 00df  ld   $df
              9557 00a1  ld   $a1
              9558 00de  ld   $de
              9559 0029  ld   $29
              955a 00f0  ld   $f0
              955b 00c9  ld   $c9
              955c 00b0  ld   $b0
              955d 00f0  ld   $f0
              955e 0003  ld   $03
              955f 004c  ld   $4c
              9560 0083  ld   $83
              9561 00e8  ld   $e8
              9562 00a0  ld   $a0
              9563 0002  ld   $02
              9564 00b1  ld   $b1
              9565 00de  ld   $de
              9566 0099  ld   $99
              9567 00cd  ld   $cd
              9568 0000  ld   $00
              9569 00e3  ld   $e3
              956a 0000  ld   $00
              956b 0000  ld   $00
              956c 0088  ld   $88
              956d 00d0  ld   $d0
              956e 00f8  ld   $f8
              956f 0020  ld   $20
              9570 008a  ld   $8a
              9571 00e3  ld   $e3
              9572 00a5  ld   $a5
              9573 00e9  ld   $e9
              9574 00e5  ld   $e5
              9575 00c8  ld   $c8
              9576 00c9  ld   $c9
              9577 0004  ld   $04
              9578 00f0  ld   $f0
              9579 00a8  ld   $a8
              957a 0091  ld   $91
              957b 00de  ld   $de
              957c 00a5  ld   $a5
              957d 00ca  ld   $ca
              957e 00f1  ld   $f1
              957f 00de  ld   $de
              9580 0085  ld   $85
              9581 0044  ld   $44
              9582 00a5  ld   $a5
              9583 00cb  ld   $cb
              9584 00e9  ld   $e9
              9585 0000  ld   $00
              9586 0085  ld   $85
              9587 0045  ld   $45
              9588 00a5  ld   $a5
              9589 0044  ld   $44
              958a 00c5  ld   $c5
              958b 00cc  ld   $cc
              958c 00a5  ld   $a5
              958d 0045  ld   $45
              958e 00e5  ld   $e5
              958f 00cd  ld   $cd
              9590 0090  ld   $90
              9591 0045  ld   $45
              9592 00a5  ld   $a5
              9593 00ca  ld   $ca
              9594 00f1  ld   $f1
              9595 00de  ld   $de
              9596 0085  ld   $85
              9597 0046  ld   $46
              9598 00a5  ld   $a5
              9599 00cb  ld   $cb
              959a 00e9  ld   $e9
              959b 0000  ld   $00
              959c 0085  ld   $85
              959d 0047  ld   $47
              959e 00b1  ld   $b1
              959f 00ca  ld   $ca
              95a0 0091  ld   $91
              95a1 0046  ld   $46
              95a2 00e6  ld   $e6
              95a3 00ca  ld   $ca
              95a4 00d0  ld   $d0
              95a5 0002  ld   $02
              95a6 00e6  ld   $e6
              95a7 00cb  ld   $cb
              95a8 00a5  ld   $a5
              95a9 0042  ld   $42
              95aa 00c5  ld   $c5
              95ab 00ca  ld   $ca
              95ac 00a5  ld   $a5
              95ad 0043  ld   $43
              95ae 00e5  ld   $e5
              95af 00cb  ld   $cb
              95b0 00b0  ld   $b0
              95b1 00e0  ld   $e0
              95b2 00b5  ld   $b5
              95b3 0044  ld   $44
              95b4 0095  ld   $95
              95b5 00ca  ld   $ca
              95b6 00ca  ld   $ca
              95b7 0010  ld   $10
              95b8 00f9  ld   $f9
              95b9 00b1  ld   $b1
              95ba 00de  ld   $de
              95bb 00a8  ld   $a8
              95bc 0088  ld   $88
              95bd 00b1  ld   $b1
              95be 00de  ld   $de
              95bf 0091  ld   $91
              95c0 0046  ld   $46
              95c1 0098  ld   $98
              95c2 00d0  ld   $d0
              95c3 00f8  ld   $f8
              95c4 0024  ld   $24
              95c5 0078  ld   $78
              95c6 0010  ld   $10
              95c7 0009  ld   $09
              95c8 00b5  ld   $b5
              95c9 0077  ld   $77
              95ca 0075  ld   $75
              95cb 0075  ld   $75
              95cc 0095  ld   $95
              95cd 0077  ld   $77
              95ce 00e8  ld   $e8
              95cf 00f0  ld   $f0
              95d0 00f7  ld   $f7
              95d1 0010  ld   $10
              95d2 007e  ld   $7e
              95d3 0000  ld   $00
              95d4 0000  ld   $00
              95d5 0000  ld   $00
              95d6 0000  ld   $00
              95d7 00a0  ld   $a0
              95d8 0014  ld   $14
              95d9 00d0  ld   $d0
              95da 0071  ld   $71
              95db 0020  ld   $20
              95dc 0015  ld   $15
              95dd 00e7  ld   $e7
              95de 00a5  ld   $a5
              95df 0042  ld   $42
              95e0 0085  ld   $85
              95e1 0046  ld   $46
              95e2 00a5  ld   $a5
              95e3 0043  ld   $43
              95e4 0085  ld   $85
              95e5 0047  ld   $47
              95e6 0020  ld   $20
              95e7 0075  ld   $75
              95e8 00e5  ld   $e5
              95e9 00a5  ld   $a5
              95ea 0042  ld   $42
              95eb 0085  ld   $85
              95ec 0044  ld   $44
              95ed 00a5  ld   $a5
              95ee 0043  ld   $43
              95ef 0085  ld   $85
              95f0 0045  ld   $45
              95f1 00d0  ld   $d0
              95f2 000e  ld   $0e
              95f3 0020  ld   $20
              95f4 0015  ld   $15
              95f5 00e7  ld   $e7
              95f6 0020  ld   $20
              95f7 006d  ld   $6d
              95f8 00e5  ld   $e5
              95f9 00a5  ld   $a5
              95fa 0046  ld   $46
              95fb fe00  bra  ac          ;+-----------------------------------+
              95fc fcfd  bra  $95fd       ;|                                   |
              95fd 1418  ld   $18,y       ;| Trampoline for page $9500 lookups |
              95fe e006  jmp  y,$06       ;|                                   |
              95ff c218  st   [$18]       ;+-----------------------------------+
              9600 0085  ld   $85
              9601 0042  ld   $42
              9602 00a5  ld   $a5
              9603 0047  ld   $47
              9604 0085  ld   $85
              9605 0043  ld   $43
              9606 00a0  ld   $a0
              9607 0000  ld   $00
              9608 00a5  ld   $a5
              9609 00ca  ld   $ca
              960a 00c5  ld   $c5
              960b 0044  ld   $44
              960c 00a5  ld   $a5
              960d 00cb  ld   $cb
              960e 00e5  ld   $e5
              960f 0045  ld   $45
              9610 00b0  ld   $b0
              9611 0016  ld   $16
              9612 00a5  ld   $a5
              9613 0044  ld   $44
              9614 00d0  ld   $d0
              9615 0002  ld   $02
              9616 00c6  ld   $c6
              9617 0045  ld   $45
              9618 00c6  ld   $c6
              9619 0044  ld   $44
              961a 00a5  ld   $a5
              961b 0046  ld   $46
              961c 00d0  ld   $d0
              961d 0002  ld   $02
              961e 00c6  ld   $c6
              961f 0047  ld   $47
              9620 00c6  ld   $c6
              9621 0046  ld   $46
              9622 00b1  ld   $b1
              9623 0044  ld   $44
              9624 0091  ld   $91
              9625 0046  ld   $46
              9626 0090  ld   $90
              9627 00e0  ld   $e0
              9628 00a5  ld   $a5
              9629 0046  ld   $46
              962a 0085  ld   $85
              962b 00ca  ld   $ca
              962c 00a5  ld   $a5
              962d 0047  ld   $47
              962e 0085  ld   $85
              962f 00cb  ld   $cb
              9630 0060  ld   $60
              9631 0020  ld   $20
              9632 00c9  ld   $c9
              9633 00e3  ld   $e3
              9634 00c8  ld   $c8
              9635 00b9  ld   $b9
              9636 0000  ld   $00
              9637 00eb  ld   $eb
              9638 0030  ld   $30
              9639 00f7  ld   $f7
              963a 00c9  ld   $c9
              963b 008d  ld   $8d
              963c 00d0  ld   $d0
              963d 0006  ld   $06
              963e 00a9  ld   $a9
              963f 0000  ld   $00
              9640 0085  ld   $85
              9641 0081  ld   $81
              9642 00a9  ld   $a9
              9643 008d  ld   $8d
              9644 00e6  ld   $e6
              9645 0081  ld   $81
              9646 004c  ld   $4c
              9647 00ef  ld   $ef
              9648 00ff  ld   $ff
              9649 00ea  ld   $ea
              964a 00ea  ld   $ea
              964b 00ea  ld   $ea
              * 6 times
              964f 00a0  ld   $a0
              9650 0006  ld   $06
              9651 0020  ld   $20
              9652 00d3  ld   $d3
              9653 00ee  ld   $ee
              9654 0024  ld   $24
              9655 00d9  ld   $d9
              9656 0030  ld   $30
              9657 0003  ld   $03
              9658 004c  ld   $4c
              9659 00b6  ld   $b6
              965a 00e2  ld   $e2
              965b 004c  ld   $4c
              965c 009a  ld   $9a
              965d 00eb  ld   $eb
              965e 002a  ld   $2a
              965f 0069  ld   $69
              9660 00a0  ld   $a0
              9661 00dd  ld   $dd
              9662 0000  ld   $00
              9663 0002  ld   $02
              9664 00d0  ld   $d0
              9665 0053  ld   $53
              9666 00b1  ld   $b1
              9667 0086  ld   $86
              9668 000a  ld   $0a
              9669 0030  ld   $30
              966a 0006  ld   $06
              966b 0088  ld   $88
              966c 00b1  ld   $b1
              966d 0086  ld   $86
              966e 0030  ld   $30
              966f 0029  ld   $29
              9670 00c8  ld   $c8
              9671 00e4  ld   $e4
              9672 0000  ld   $00
              9673 0000  ld   $00
              9674 0086  ld   $86
              9675 00c8  ld   $c8
              9676 0098  ld   $98
              9677 0048  ld   $48
              9678 00a2  ld   $a2
              9679 0000  ld   $00
              967a 00a1  ld   $a1
              967b 0086  ld   $86
              967c 00aa  ld   $aa
              967d 004a  ld   $4a
              967e 0049  ld   $49
              967f 0048  ld   $48
              9680 0011  ld   $11
              9681 0086  ld   $86
              9682 00c9  ld   $c9
              9683 00c0  ld   $c0
              9684 0090  ld   $90
              9685 0001  ld   $01
              9686 00e8  ld   $e8
              9687 00c8  ld   $c8
              9688 00d0  ld   $d0
              9689 00f3  ld   $f3
              968a 0068  ld   $68
              968b 00a8  ld   $a8
              968c 008a  ld   $8a
              968d 004c  ld   $4c
              968e 00c0  ld   $c0
              968f 00e4  ld   $e4
              9690 00e6  ld   $e6
              9691 00e9  ld   $e9
              9692 00a6  ld   $a6
              9693 00e9  ld   $e9
              9694 00f0  ld   $f0
              9695 00bc  ld   $bc
              9696 009d  ld   $9d
              9697 0000  ld   $00
              9698 0002  ld   $02
              9699 0060  ld   $60
              969a 00a6  ld   $a6
              969b 00c8  ld   $c8
              969c 00a9  ld   $a9
              969d 00a0  ld   $a0
              969e 00e8  ld   $e8
              969f 00dd  ld   $dd
              96a0 0000  ld   $00
              96a1 0002  ld   $02
              96a2 00b0  ld   $b0
              96a3 00fa  ld   $fa
              96a4 00b1  ld   $b1
              96a5 0086  ld   $86
              96a6 0029  ld   $29
              96a7 003f  ld   $3f
              96a8 004a  ld   $4a
              96a9 00d0  ld   $d0
              96aa 00b6  ld   $b6
              96ab 00bd  ld   $bd
              96ac 0000  ld   $00
              96ad 0002  ld   $02
              96ae 00b0  ld   $b0
              96af 0006  ld   $06
              96b0 0069  ld   $69
              96b1 003f  ld   $3f
              96b2 00c9  ld   $c9
              96b3 001a  ld   $1a
              96b4 0090  ld   $90
              96b5 006f  ld   $6f
              96b6 0069  ld   $69
              96b7 004f  ld   $4f
              96b8 00c9  ld   $c9
              96b9 000a  ld   $0a
              96ba 0090  ld   $90
              96bb 0069  ld   $69
              96bc 00a6  ld   $a6
              96bd 0085  ld   $85
              96be 00c8  ld   $c8
              96bf 00b1  ld   $b1
              96c0 0086  ld   $86
              96c1 0029  ld   $29
              96c2 00e0  ld   $e0
              96c3 00c9  ld   $c9
              96c4 0020  ld   $20
              96c5 00f0  ld   $f0
              96c6 007a  ld   $7a
              96c7 00b5  ld   $b5
              96c8 00b0  ld   $b0
              96c9 0085  ld   $85
              96ca 00c8  ld   $c8
              96cb 00b5  ld   $b5
              96cc 00d1  ld   $d1
              96cd 0085  ld   $85
              96ce 00e9  ld   $e9
              96cf 0088  ld   $88
              96d0 00b1  ld   $b1
              96d1 0086  ld   $86
              96d2 000a  ld   $0a
              96d3 0010  ld   $10
              96d4 00fa  ld   $fa
              96d5 0088  ld   $88
              96d6 00b0  ld   $b0
              96d7 0038  ld   $38
              96d8 000a  ld   $0a
              96d9 0030  ld   $30
              96da 0035  ld   $35
              96db 00b4  ld   $b4
              96dc 0058  ld   $58
              96dd 0084  ld   $84
              96de 0087  ld   $87
              96df 00b4  ld   $b4
              96e0 0090  ld   $90
              96e1 00e8  ld   $e8
              96e2 0010  ld   $10
              96e3 00da  ld   $da
              96e4 00f0  ld   $f0
              96e5 00b3  ld   $b3
              96e6 00c9  ld   $c9
              96e7 007e  ld   $7e
              96e8 00b0  ld   $b0
              96e9 0022  ld   $22
              96ea 00ca  ld   $ca
              96eb 0010  ld   $10
              96ec 0004  ld   $04
              96ed 00a0  ld   $a0
              96ee 0006  ld   $06
              96ef 0010  ld   $10
              96f0 0029  ld   $29
              96f1 0094  ld   $94
              96f2 0090  ld   $90
              96f3 00a4  ld   $a4
              96f4 0087  ld   $87
              96f5 0094  ld   $94
              96f6 0058  ld   $58
              96f7 00a4  ld   $a4
              96f8 00c8  ld   $c8
              96f9 0094  ld   $94
              96fa 00b0  ld   $b0
              96fb fe00  bra  ac          ;+-----------------------------------+
              96fc fcfd  bra  $96fd       ;|                                   |
              96fd 1418  ld   $18,y       ;| Trampoline for page $9600 lookups |
              96fe e006  jmp  y,$06       ;|                                   |
              96ff c218  st   [$18]       ;+-----------------------------------+
              9700 00a4  ld   $a4
              9701 00e9  ld   $e9
              9702 0094  ld   $94
              9703 00d1  ld   $d1
              9704 0029  ld   $29
              9705 001f  ld   $1f
              9706 00a8  ld   $a8
              9707 00b9  ld   $b9
              9708 0020  ld   $20
              9709 00ec  ld   $ec
              970a 000a  ld   $0a
              970b 00a8  ld   $a8
              970c 00a9  ld   $a9
              970d 0076  ld   $76
              970e 002a  ld   $2a
              970f 0085  ld   $85
              9710 0087  ld   $87
              9711 00d0  ld   $d0
              9712 0001  ld   $01
              9713 00c8  ld   $c8
              9714 00c8  ld   $c8
              9715 0086  ld   $86
              9716 0085  ld   $85
              9717 00b1  ld   $b1
              9718 0086  ld   $86
              9719 0030  ld   $30
              971a 0084  ld   $84
              971b 00d0  ld   $d0
              971c 0005  ld   $05
              971d 00a0  ld   $a0
              971e 000e  ld   $0e
              971f 004c  ld   $4c
              9720 00e0  ld   $e0
              9721 00e3  ld   $e3
              9722 00c9  ld   $c9
              9723 0003  ld   $03
              9724 00b0  ld   $b0
              9725 00c3  ld   $c3
              9726 004a  ld   $4a
              9727 00a6  ld   $a6
              9728 00c8  ld   $c8
              9729 00e8  ld   $e8
              972a 00bd  ld   $bd
              972b 0000  ld   $00
              972c 0002  ld   $02
              972d 0090  ld   $90
              972e 0004  ld   $04
              972f 00c9  ld   $c9
              9730 00a2  ld   $a2
              9731 00f0  ld   $f0
              9732 000a  ld   $0a
              9733 00c9  ld   $c9
              9734 00df  ld   $df
              9735 00f0  ld   $f0
              9736 0006  ld   $06
              9737 0086  ld   $86
              9738 00c8  ld   $c8
              9739 0020  ld   $20
              973a 001c  ld   $1c
              973b 00e4  ld   $e4
              973c 00c8  ld   $c8
              973d 0088  ld   $88
              973e 00a6  ld   $a6
              973f 0085  ld   $85
              9740 00b1  ld   $b1
              9741 0086  ld   $86
              9742 0088  ld   $88
              9743 000a  ld   $0a
              9744 0010  ld   $10
              9745 00cf  ld   $cf
              9746 00b4  ld   $b4
              9747 0058  ld   $58
              9748 0084  ld   $84
              9749 0087  ld   $87
              974a 00b4  ld   $b4
              974b 0090  ld   $90
              974c 00e8  ld   $e8
              974d 00b1  ld   $b1
              974e 0086  ld   $86
              974f 0029  ld   $29
              9750 009f  ld   $9f
              9751 00d0  ld   $d0
              9752 00ed  ld   $ed
              9753 0085  ld   $85
              9754 0072  ld   $72
              9755 0085  ld   $85
              9756 0073  ld   $73
              9757 0098  ld   $98
              9758 0048  ld   $48
              9759 0086  ld   $86
              975a 0085  ld   $85
              975b 00b4  ld   $b4
              975c 00d0  ld   $d0
              975d 0084  ld   $84
              975e 00c9  ld   $c9
              975f 0018  ld   $18
              9760 00a9  ld   $a9
              9761 000a  ld   $0a
              9762 0085  ld   $85
              9763 0079  ld   $79
              9764 00a2  ld   $a2
              9765 0000  ld   $00
              9766 00c8  ld   $c8
              9767 00b9  ld   $b9
              9768 0000  ld   $00
              9769 0002  ld   $02
              976a 0029  ld   $29
              976b 000f  ld   $0f
              976c 0065  ld   $65
              976d 0072  ld   $72
              976e 0048  ld   $48
              976f 008a  ld   $8a
              9770 0065  ld   $65
              9771 0073  ld   $73
              9772 0030  ld   $30
              9773 001c  ld   $1c
              9774 00aa  ld   $aa
              9775 0068  ld   $68
              9776 00c6  ld   $c6
              9777 0079  ld   $79
              9778 00d0  ld   $d0
              9779 00e5  ld   $e5
              977a 0000  ld   $00
              977b 0000  ld   $00
              977c 00f2  ld   $f2
              977d 0085  ld   $85
              977e 0072  ld   $72
              977f 0086  ld   $86
              9780 0073  ld   $73
              9781 00c4  ld   $c4
              9782 00e9  ld   $e9
              9783 00d0  ld   $d0
              9784 00de  ld   $de
              9785 00a4  ld   $a4
              9786 00c9  ld   $c9
              9787 00c8  ld   $c8
              9788 0084  ld   $84
              9789 00e9  ld   $e9
              978a 0020  ld   $20
              978b 001c  ld   $1c
              978c 00e4  ld   $e4
              978d 0068  ld   $68
              978e 00a8  ld   $a8
              978f 00a5  ld   $a5
              9790 0073  ld   $73
              9791 00b0  ld   $b0
              9792 00a9  ld   $a9
              9793 00a0  ld   $a0
              9794 0000  ld   $00
              9795 0010  ld   $10
              9796 008b  ld   $8b
              9797 0085  ld   $85
              9798 0073  ld   $73
              9799 0086  ld   $86
              979a 0072  ld   $72
              979b 00a2  ld   $a2
              979c 0004  ld   $04
              979d 0086  ld   $86
              979e 00c9  ld   $c9
              979f 00a9  ld   $a9
              97a0 00b0  ld   $b0
              97a1 0085  ld   $85
              97a2 0079  ld   $79
              97a3 00a5  ld   $a5
              97a4 0072  ld   $72
              97a5 00dd  ld   $dd
              97a6 0063  ld   $63
              97a7 00e5  ld   $e5
              97a8 00a5  ld   $a5
              97a9 0073  ld   $73
              97aa 00fd  ld   $fd
              97ab 0068  ld   $68
              97ac 00e5  ld   $e5
              97ad 0090  ld   $90
              97ae 000d  ld   $0d
              97af 0085  ld   $85
              97b0 0073  ld   $73
              97b1 00a5  ld   $a5
              97b2 0072  ld   $72
              97b3 00fd  ld   $fd
              97b4 0063  ld   $63
              97b5 00e5  ld   $e5
              97b6 0085  ld   $85
              97b7 0072  ld   $72
              97b8 00e6  ld   $e6
              97b9 0079  ld   $79
              97ba 00d0  ld   $d0
              97bb 00e7  ld   $e7
              97bc 00a5  ld   $a5
              97bd 0079  ld   $79
              97be 00e8  ld   $e8
              97bf 00ca  ld   $ca
              97c0 00f0  ld   $f0
              97c1 000e  ld   $0e
              97c2 00c9  ld   $c9
              97c3 00b0  ld   $b0
              97c4 00f0  ld   $f0
              97c5 0002  ld   $02
              97c6 0085  ld   $85
              97c7 00c9  ld   $c9
              97c8 0024  ld   $24
              97c9 00c9  ld   $c9
              97ca 0030  ld   $30
              97cb 0004  ld   $04
              97cc 00a5  ld   $a5
              97cd 0082  ld   $82
              97ce 00f0  ld   $f0
              97cf 000b  ld   $0b
              97d0 0020  ld   $20
              97d1 00c9  ld   $c9
              97d2 00e3  ld   $e3
              97d3 0024  ld   $24
              97d4 0078  ld   $78
              97d5 0010  ld   $10
              97d6 0004  ld   $04
              97d7 0099  ld   $99
              97d8 0000  ld   $00
              97d9 0002  ld   $02
              97da 00c8  ld   $c8
              97db 00ca  ld   $ca
              97dc 0010  ld   $10
              97dd 00c1  ld   $c1
              97de 0060  ld   $60
              97df 0001  ld   $01
              97e0 000a  ld   $0a
              97e1 0064  ld   $64
              97e2 00e8  ld   $e8
              97e3 0010  ld   $10
              97e4 0000  ld   $00
              97e5 0000  ld   $00
              97e6 0000  ld   $00
              97e7 0003  ld   $03
              97e8 0027  ld   $27
              97e9 00a5  ld   $a5
              97ea 00ca  ld   $ca
              97eb 0085  ld   $85
              97ec 0046  ld   $46
              97ed 00a5  ld   $a5
              97ee 00cb  ld   $cb
              97ef 0085  ld   $85
              97f0 0047  ld   $47
              97f1 00e8  ld   $e8
              97f2 00a5  ld   $a5
              97f3 0047  ld   $47
              97f4 0085  ld   $85
              97f5 0045  ld   $45
              97f6 00a5  ld   $a5
              97f7 0046  ld   $46
              97f8 0085  ld   $85
              97f9 0044  ld   $44
              97fa 00c5  ld   $c5
              97fb fe00  bra  ac          ;+-----------------------------------+
              97fc fcfd  bra  $97fd       ;|                                   |
              97fd 1418  ld   $18,y       ;| Trampoline for page $9700 lookups |
              97fe e006  jmp  y,$06       ;|                                   |
              97ff c218  st   [$18]       ;+-----------------------------------+
              9800 004c  ld   $4c
              9801 00a5  ld   $a5
              9802 0045  ld   $45
              9803 00e5  ld   $e5
              9804 004d  ld   $4d
              9805 00b0  ld   $b0
              9806 0026  ld   $26
              9807 00a0  ld   $a0
              9808 0001  ld   $01
              9809 00b1  ld   $b1
              980a 0044  ld   $44
              980b 00e5  ld   $e5
              980c 00ce  ld   $ce
              980d 00c8  ld   $c8
              980e 00b1  ld   $b1
              980f 0044  ld   $44
              9810 00e5  ld   $e5
              9811 00cf  ld   $cf
              9812 00b0  ld   $b0
              9813 0019  ld   $19
              9814 00a0  ld   $a0
              9815 0000  ld   $00
              9816 00a5  ld   $a5
              9817 0046  ld   $46
              9818 0071  ld   $71
              9819 0044  ld   $44
              981a 0085  ld   $85
              981b 0046  ld   $46
              981c 0090  ld   $90
              981d 0003  ld   $03
              981e 00e6  ld   $e6
              981f 0047  ld   $47
              9820 0018  ld   $18
              9821 00c8  ld   $c8
              9822 00a5  ld   $a5
              9823 00ce  ld   $ce
              9824 00f1  ld   $f1
              9825 0044  ld   $44
              9826 00c8  ld   $c8
              9827 00a5  ld   $a5
              9828 00cf  ld   $cf
              9829 00f1  ld   $f1
              982a 0044  ld   $44
              982b 00b0  ld   $b0
              982c 00ca  ld   $ca
              982d 0060  ld   $60
              982e 0046  ld   $46
              982f 0078  ld   $78
              9830 00a5  ld   $a5
              9831 004c  ld   $4c
              9832 0085  ld   $85
              9833 00ca  ld   $ca
              9834 00a5  ld   $a5
              9835 004d  ld   $4d
              9836 0085  ld   $85
              9837 00cb  ld   $cb
              9838 00a5  ld   $a5
              9839 004a  ld   $4a
              983a 0085  ld   $85
              983b 00cc  ld   $cc
              983c 00a5  ld   $a5
              983d 004b  ld   $4b
              983e 0085  ld   $85
              983f 00cd  ld   $cd
              9840 00a9  ld   $a9
              9841 0000  ld   $00
              9842 0085  ld   $85
              9843 0083  ld   $83
              9844 0085  ld   $85
              9845 0084  ld   $84
              9846 0085  ld   $85
              9847 0086  ld   $86
              9848 00a9  ld   $a9
              9849 0000  ld   $00
              984a 0085  ld   $85
              984b 001d  ld   $1d
              984c 0060  ld   $60
              984d 00a5  ld   $a5
              984e 00d0  ld   $d0
              984f 0069  ld   $69
              9850 0005  ld   $05
              9851 0085  ld   $85
              9852 00d2  ld   $d2
              9853 00a5  ld   $a5
              9854 00d1  ld   $d1
              9855 0069  ld   $69
              9856 0000  ld   $00
              9857 0085  ld   $85
              9858 00d3  ld   $d3
              9859 00a5  ld   $a5
              985a 00d2  ld   $d2
              985b 00c5  ld   $c5
              985c 00ca  ld   $ca
              985d 00a5  ld   $a5
              985e 00d3  ld   $d3
              985f 00e5  ld   $e5
              9860 00cb  ld   $cb
              9861 0090  ld   $90
              9862 0003  ld   $03
              9863 004c  ld   $4c
              9864 006b  ld   $6b
              9865 00e3  ld   $e3
              9866 00a5  ld   $a5
              9867 00ce  ld   $ce
              9868 0091  ld   $91
              9869 00d0  ld   $d0
              986a 00a5  ld   $a5
              986b 00cf  ld   $cf
              986c 00c8  ld   $c8
              986d 0091  ld   $91
              986e 00d0  ld   $d0
              986f 00a5  ld   $a5
              9870 00d2  ld   $d2
              9871 00c8  ld   $c8
              9872 0091  ld   $91
              9873 00d0  ld   $d0
              9874 00a5  ld   $a5
              9875 00d3  ld   $d3
              9876 00c8  ld   $c8
              9877 0091  ld   $91
              9878 00d0  ld   $d0
              9879 00a9  ld   $a9
              987a 0000  ld   $00
              987b 00c8  ld   $c8
              987c 0091  ld   $91
              987d 00d0  ld   $d0
              987e 00c8  ld   $c8
              987f 0091  ld   $91
              9880 00d0  ld   $d0
              9881 00e6  ld   $e6
              9882 0000  ld   $00
              9883 0000  ld   $00
              9884 00a5  ld   $a5
              9885 00d2  ld   $d2
              9886 0085  ld   $85
              9887 00cc  ld   $cc
              9888 00a5  ld   $a5
              9889 00d3  ld   $d3
              988a 0085  ld   $85
              988b 00cd  ld   $cd
              988c 00a5  ld   $a5
              988d 00d0  ld   $d0
              988e 0090  ld   $90
              988f 0043  ld   $43
              9890 0085  ld   $85
              9891 00ce  ld   $ce
              9892 0084  ld   $84
              9893 00cf  ld   $cf
              9894 0020  ld   $20
              9895 00ff  ld   $ff
              9896 00e6  ld   $e6
              9897 0030  ld   $30
              9898 000e  ld   $0e
              9899 00c9  ld   $c9
              989a 0040  ld   $40
              989b 00f0  ld   $f0
              989c 000a  ld   $0a
              989d 004c  ld   $4c
              989e 0028  ld   $28
              989f 00e6  ld   $e6
              98a0 0006  ld   $06
              98a1 00c9  ld   $c9
              98a2 0049  ld   $49
              98a3 00d0  ld   $d0
              98a4 0007  ld   $07
              98a5 00a9  ld   $a9
              98a6 0049  ld   $49
              98a7 0085  ld   $85
              98a8 00cf  ld   $cf
              98a9 0020  ld   $20
              98aa 00ff  ld   $ff
              98ab 00e6  ld   $e6
              98ac 00a5  ld   $a5
              98ad 004b  ld   $4b
              98ae 0085  ld   $85
              98af 00d1  ld   $d1
              98b0 00a5  ld   $a5
              98b1 004a  ld   $4a
              98b2 0085  ld   $85
              98b3 00d0  ld   $d0
              98b4 00c5  ld   $c5
              98b5 00cc  ld   $cc
              98b6 00a5  ld   $a5
              98b7 00d1  ld   $d1
              98b8 00e5  ld   $e5
              98b9 00cd  ld   $cd
              98ba 00b0  ld   $b0
              98bb 0094  ld   $94
              98bc 00b1  ld   $b1
              98bd 00d0  ld   $d0
              98be 00c8  ld   $c8
              98bf 00c5  ld   $c5
              98c0 00ce  ld   $ce
              98c1 00d0  ld   $d0
              98c2 0006  ld   $06
              98c3 00b1  ld   $b1
              98c4 00d0  ld   $d0
              98c5 00c5  ld   $c5
              98c6 00cf  ld   $cf
              98c7 00f0  ld   $f0
              98c8 000e  ld   $0e
              98c9 00c8  ld   $c8
              98ca 00b1  ld   $b1
              98cb 00d0  ld   $d0
              98cc 0048  ld   $48
              98cd 00c8  ld   $c8
              98ce 00b1  ld   $b1
              98cf 00d0  ld   $d0
              98d0 0085  ld   $85
              98d1 00d1  ld   $d1
              98d2 0068  ld   $68
              98d3 00a0  ld   $a0
              98d4 0000  ld   $00
              98d5 00f0  ld   $f0
              98d6 00db  ld   $db
              98d7 00a5  ld   $a5
              98d8 00d0  ld   $d0
              98d9 0069  ld   $69
              98da 0003  ld   $03
              98db 0020  ld   $20
              98dc 000a  ld   $0a
              98dd 00e7  ld   $e7
              98de 00a5  ld   $a5
              98df 00d1  ld   $d1
              98e0 0069  ld   $69
              98e1 0000  ld   $00
              98e2 0095  ld   $95
              98e3 0088  ld   $88
              98e4 00a5  ld   $a5
              98e5 00cf  ld   $cf
              98e6 00c9  ld   $c9
              98e7 0040  ld   $40
              98e8 00d0  ld   $d0
              98e9 001c  ld   $1c
              98ea 0088  ld   $88
              98eb 0098  ld   $98
              98ec 0020  ld   $20
              98ed 000a  ld   $0a
              98ee 00e7  ld   $e7
              98ef 0088  ld   $88
              98f0 0094  ld   $94
              98f1 0088  ld   $88
              98f2 00a0  ld   $a0
              98f3 0003  ld   $03
              98f4 00f6  ld   $f6
              98f5 0088  ld   $88
              98f6 00c8  ld   $c8
              98f7 00b1  ld   $b1
              98f8 00d0  ld   $d0
              98f9 0030  ld   $30
              98fa 00f9  ld   $f9
              98fb fe00  bra  ac          ;+-----------------------------------+
              98fc fcfd  bra  $98fd       ;|                                   |
              98fd 1418  ld   $18,y       ;| Trampoline for page $9800 lookups |
              98fe e006  jmp  y,$06       ;|                                   |
              98ff c218  st   [$18]       ;+-----------------------------------+
              9900 0010  ld   $10
              9901 0009  ld   $09
              9902 00a9  ld   $a9
              9903 0000  ld   $00
              9904 0085  ld   $85
              9905 00d4  ld   $d4
              9906 0085  ld   $85
              9907 00d5  ld   $d5
              9908 00a2  ld   $a2
              9909 0018  ld   $18
              990a 0048  ld   $48
              990b 00a0  ld   $a0
              990c 0000  ld   $00
              990d 00b1  ld   $b1
              990e 00de  ld   $de
              990f 0010  ld   $10
              9910 0018  ld   $18
              9911 000a  ld   $0a
              9912 0030  ld   $30
              9913 0081  ld   $81
              9914 0020  ld   $20
              9915 00ff  ld   $ff
              9916 00e6  ld   $e6
              9917 0020  ld   $20
              9918 0008  ld   $08
              9919 00e7  ld   $e7
              991a 0020  ld   $20
              991b 00ff  ld   $ff
              991c 00e6  ld   $e6
              991d 0095  ld   $95
              991e 00a8  ld   $a8
              991f 0024  ld   $24
              9920 00d4  ld   $d4
              9921 0010  ld   $10
              9922 0001  ld   $01
              9923 00ca  ld   $ca
              9924 0020  ld   $20
              9925 00ff  ld   $ff
              9926 00e6  ld   $e6
              9927 00b0  ld   $b0
              9928 00e6  ld   $e6
              9929 00c9  ld   $c9
              992a 0028  ld   $28
              992b 00d0  ld   $d0
              992c 001f  ld   $1f
              992d 00a5  ld   $a5
              992e 00de  ld   $de
              992f 0020  ld   $20
              9930 000a  ld   $0a
              9931 00e7  ld   $e7
              9932 00a5  ld   $a5
              9933 00df  ld   $df
              9934 0095  ld   $95
              9935 0088  ld   $88
              9936 0024  ld   $24
              9937 00d4  ld   $d4
              9938 0030  ld   $30
              9939 000b  ld   $0b
              993a 00a9  ld   $a9
              993b 0001  ld   $01
              993c 0020  ld   $20
              993d 000a  ld   $0a
              993e 00e7  ld   $e7
              993f 00a9  ld   $a9
              9940 0000  ld   $00
              9941 0095  ld   $95
              9942 0088  ld   $88
              9943 00f6  ld   $f6
              9944 0088  ld   $88
              9945 0020  ld   $20
              9946 00ff  ld   $ff
              9947 00e6  ld   $e6
              9948 0030  ld   $30
              9949 00f9  ld   $f9
              994a 00b0  ld   $b0
              994b 00d3  ld   $d3
              994c 0024  ld   $24
              994d 00d4  ld   $d4
              994e 0010  ld   $10
              994f 0006  ld   $06
              9950 00c9  ld   $c9
              9951 0004  ld   $04
              9952 00b0  ld   $b0
              9953 00d0  ld   $d0
              9954 0046  ld   $46
              9955 00d4  ld   $d4
              9956 00a8  ld   $a8
              9957 0085  ld   $85
              9958 00d6  ld   $d6
              9959 00b9  ld   $b9
              995a 0098  ld   $98
              995b 00e9  ld   $e9
              995c 0029  ld   $29
              995d 0055  ld   $55
              995e 000a  ld   $0a
              995f 0085  ld   $85
              9960 00d7  ld   $d7
              9961 0068  ld   $68
              9962 00a8  ld   $a8
              9963 00b9  ld   $b9
              9964 0098  ld   $98
              9965 00e9  ld   $e9
              9966 0029  ld   $29
              9967 00aa  ld   $aa
              9968 00c5  ld   $c5
              9969 00d7  ld   $d7
              996a 00b0  ld   $b0
              996b 0009  ld   $09
              996c 0098  ld   $98
              996d 0048  ld   $48
              996e 0020  ld   $20
              996f 00ff  ld   $ff
              9970 00e6  ld   $e6
              9971 00a5  ld   $a5
              9972 00d6  ld   $d6
              9973 0090  ld   $90
              9974 0095  ld   $95
              9975 00b9  ld   $b9
              9976 0010  ld   $10
              9977 00ea  ld   $ea
              9978 0085  ld   $85
              9979 00ce  ld   $ce
              997a 00b9  ld   $b9
              997b 0088  ld   $88
              997c 00ea  ld   $ea
              997d 0085  ld   $85
              997e 00cf  ld   $cf
              997f 0020  ld   $20
              9980 00fc  ld   $fc
              9981 00e6  ld   $e6
              9982 004c  ld   $4c
              9983 00d8  ld   $d8
              9984 00e6  ld   $e6
              9985 006c  ld   $6c
              9986 00ce  ld   $ce
              9987 0000  ld   $00
              9988 00e6  ld   $e6
              9989 00e7  ld   $e7
              998a 0000  ld   $00
              998b 0000  ld   $00
              998c 00de  ld   $de
              998d 00d0  ld   $d0
              998e 0002  ld   $02
              998f 00e6  ld   $e6
              9990 00df  ld   $df
              9991 00b1  ld   $b1
              9992 00de  ld   $de
              9993 0060  ld   $60
              9994 0094  ld   $94
              9995 0087  ld   $87
              9996 00ca  ld   $ca
              9997 0030  ld   $30
              9998 0003  ld   $03
              9999 0095  ld   $95
              999a 0050  ld   $50
              999b 0060  ld   $60
              999c 00a0  ld   $a0
              999d 0066  ld   $66
              999e 004c  ld   $4c
              999f 00e0  ld   $e0
              99a0 00e3  ld   $e3
              99a1 00a0  ld   $a0
              99a2 0000  ld   $00
              99a3 00b5  ld   $b5
              99a4 0050  ld   $50
              99a5 0085  ld   $85
              99a6 00ce  ld   $ce
              99a7 00b5  ld   $b5
              99a8 00a8  ld   $a8
              99a9 0085  ld   $85
              99aa 00cf  ld   $cf
              99ab 00b5  ld   $b5
              99ac 0088  ld   $88
              99ad 00f0  ld   $f0
              99ae 000e  ld   $0e
              99af 0085  ld   $85
              99b0 00cf  ld   $cf
              99b1 00b1  ld   $b1
              99b2 00ce  ld   $ce
              99b3 0048  ld   $48
              99b4 00c8  ld   $c8
              99b5 00b1  ld   $b1
              99b6 00ce  ld   $ce
              99b7 0085  ld   $85
              99b8 00cf  ld   $cf
              99b9 0068  ld   $68
              99ba 0085  ld   $85
              99bb 00ce  ld   $ce
              99bc 0088  ld   $88
              99bd 00e8  ld   $e8
              99be 0060  ld   $60
              99bf 0020  ld   $20
              99c0 004a  ld   $4a
              99c1 00e7  ld   $e7
              99c2 0020  ld   $20
              99c3 0015  ld   $15
              99c4 00e7  ld   $e7
              99c5 0098  ld   $98
              99c6 0020  ld   $20
              99c7 0008  ld   $08
              99c8 00e7  ld   $e7
              99c9 0095  ld   $95
              99ca 00a8  ld   $a8
              99cb 00c5  ld   $c5
              99cc 00ce  ld   $ce
              99cd 00d0  ld   $d0
              99ce 0006  ld   $06
              99cf 00c5  ld   $c5
              99d0 00cf  ld   $cf
              99d1 00d0  ld   $d0
              99d2 0002  ld   $02
              99d3 00f6  ld   $f6
              99d4 0050  ld   $50
              99d5 0060  ld   $60
              99d6 0020  ld   $20
              99d7 0082  ld   $82
              99d8 00e7  ld   $e7
              99d9 0020  ld   $20
              99da 0059  ld   $59
              99db 00e7  ld   $e7
              99dc 0020  ld   $20
              99dd 0015  ld   $15
              99de 00e7  ld   $e7
              99df 0024  ld   $24
              99e0 00cf  ld   $cf
              99e1 0030  ld   $30
              99e2 001b  ld   $1b
              99e3 00ca  ld   $ca
              99e4 0060  ld   $60
              99e5 0020  ld   $20
              99e6 0015  ld   $15
              99e7 00e7  ld   $e7
              99e8 00a5  ld   $a5
              99e9 00cf  ld   $cf
              99ea 00d0  ld   $d0
              99eb 0004  ld   $04
              99ec 00a5  ld   $a5
              99ed 00ce  ld   $ce
              99ee 00f0  ld   $f0
              99ef 00f3  ld   $f3
              99f0 00a9  ld   $a9
              99f1 00ff  ld   $ff
              99f2 0020  ld   $20
              99f3 0008  ld   $08
              99f4 00e7  ld   $e7
              99f5 0095  ld   $95
              99f6 00a8  ld   $a8
              99f7 0024  ld   $24
              99f8 00cf  ld   $cf
              99f9 0030  ld   $30
              99fa 00e9  ld   $e9
              99fb fe00  bra  ac          ;+-----------------------------------+
              99fc fcfd  bra  $99fd       ;|                                   |
              99fd 1418  ld   $18,y       ;| Trampoline for page $9900 lookups |
              99fe e006  jmp  y,$06       ;|                                   |
              99ff c218  st   [$18]       ;+-----------------------------------+
              9a00 0020  ld   $20
              9a01 0015  ld   $15
              9a02 00e7  ld   $e7
              9a03 0098  ld   $98
              9a04 0038  ld   $38
              9a05 00e5  ld   $e5
              9a06 00ce  ld   $ce
              9a07 0020  ld   $20
              9a08 0008  ld   $08
              9a09 00e7  ld   $e7
              9a0a 0098  ld   $98
              9a0b 00e5  ld   $e5
              9a0c 00cf  ld   $cf
              9a0d 0050  ld   $50
              9a0e 0023  ld   $23
              9a0f 00a0  ld   $a0
              9a10 0000  ld   $00
              9a11 0010  ld   $10
              9a12 0090  ld   $90
              9a13 0020  ld   $20
              9a14 006f  ld   $6f
              9a15 00e7  ld   $e7
              9a16 0020  ld   $20
              9a17 0015  ld   $15
              9a18 00e7  ld   $e7
              9a19 00a5  ld   $a5
              9a1a 00ce  ld   $ce
              9a1b 0085  ld   $85
              9a1c 00da  ld   $da
              9a1d 00a5  ld   $a5
              9a1e 00cf  ld   $cf
              9a1f 0085  ld   $85
              9a20 00db  ld   $db
              9a21 0020  ld   $20
              9a22 0015  ld   $15
              9a23 00e7  ld   $e7
              9a24 0018  ld   $18
              9a25 00a5  ld   $a5
              9a26 00ce  ld   $ce
              9a27 0065  ld   $65
              9a28 00da  ld   $da
              9a29 0020  ld   $20
              9a2a 0008  ld   $08
              9a2b 00e7  ld   $e7
              9a2c 00a5  ld   $a5
              9a2d 00cf  ld   $cf
              9a2e 0065  ld   $65
              9a2f 00db  ld   $db
              9a30 0070  ld   $70
              9a31 00dd  ld   $dd
              9a32 0095  ld   $95
              9a33 00a8  ld   $a8
              9a34 0060  ld   $60
              9a35 0020  ld   $20
              9a36 0015  ld   $15
              9a37 00e7  ld   $e7
              9a38 00a4  ld   $a4
              9a39 00ce  ld   $ce
              9a3a 00f0  ld   $f0
              9a3b 0005  ld   $05
              9a3c 0088  ld   $88
              9a3d 00a5  ld   $a5
              9a3e 00cf  ld   $cf
              9a3f 00f0  ld   $f0
              9a40 000c  ld   $0c
              9a41 0060  ld   $60
              9a42 00a5  ld   $a5
              9a43 0081  ld   $81
              9a44 0009  ld   $09
              9a45 0007  ld   $07
              9a46 00a8  ld   $a8
              9a47 00c8  ld   $c8
              9a48 00a9  ld   $a9
              9a49 00a0  ld   $a0
              9a4a 0020  ld   $20
              9a4b 00c9  ld   $c9
              9a4c 00e3  ld   $e3
              9a4d 00c4  ld   $c4
              9a4e 0081  ld   $81
              9a4f 00b0  ld   $b0
              9a50 00f7  ld   $f7
              9a51 0060  ld   $60
              9a52 0020  ld   $20
              9a53 00b1  ld   $b1
              9a54 00e7  ld   $e7
              9a55 0020  ld   $20
              9a56 0015  ld   $15
              9a57 00e7  ld   $e7
              9a58 00a5  ld   $a5
              9a59 00cf  ld   $cf
              9a5a 0010  ld   $10
              9a5b 000a  ld   $0a
              9a5c 00a9  ld   $a9
              9a5d 00ad  ld   $ad
              9a5e 0020  ld   $20
              9a5f 00c9  ld   $c9
              9a60 00e3  ld   $e3
              9a61 0020  ld   $20
              9a62 0072  ld   $72
              9a63 00e7  ld   $e7
              9a64 0050  ld   $50
              9a65 00ef  ld   $ef
              9a66 0088  ld   $88
              9a67 0084  ld   $84
              9a68 00d5  ld   $d5
              9a69 0086  ld   $86
              9a6a 00cf  ld   $cf
              9a6b 00a6  ld   $a6
              9a6c 00ce  ld   $ce
              9a6d 0020  ld   $20
              9a6e 001b  ld   $1b
              9a6f 00e5  ld   $e5
              9a70 00a6  ld   $a6
              9a71 00cf  ld   $cf
              9a72 0060  ld   $60
              9a73 0020  ld   $20
              9a74 0015  ld   $15
              9a75 00e7  ld   $e7
              9a76 00a5  ld   $a5
              9a77 00ce  ld   $ce
              9a78 0085  ld   $85
              9a79 0076  ld   $76
              9a7a 00a5  ld   $a5
              9a7b 00cf  ld   $cf
              9a7c 0085  ld   $85
              9a7d 0077  ld   $77
              9a7e 0088  ld   $88
              9a7f 0084  ld   $84
              9a80 0078  ld   $78
              9a81 00c8  ld   $c8
              9a82 00a9  ld   $a9
              9a83 000a  ld   $0a
              9a84 0085  ld   $85
              9a85 0074  ld   $74
              9a86 0084  ld   $84
              9a87 0075  ld   $75
              9a88 0060  ld   $60
              9a89 0020  ld   $20
              9a8a 0015  ld   $15
              9a8b 00e7  ld   $e7
              9a8c 00a5  ld   $a5
              9a8d 00ce  ld   $ce
              9a8e 00a4  ld   $a4
              9a8f 00cf  ld   $cf
              9a90 0010  ld   $10
              9a91 00e8  ld   $e8
              9a92 0000  ld   $00
              9a93 0000  ld   $00
              9a94 00f2  ld   $f2
              9a95 0020  ld   $20
              9a96 0015  ld   $15
              9a97 00e7  ld   $e7
              9a98 00b5  ld   $b5
              9a99 0050  ld   $50
              9a9a 0085  ld   $85
              9a9b 00da  ld   $da
              9a9c 00b5  ld   $b5
              9a9d 0088  ld   $88
              9a9e 0085  ld   $85
              9a9f 00db  ld   $db
              9aa0 00a5  ld   $a5
              9aa1 00ce  ld   $ce
              9aa2 0091  ld   $91
              9aa3 00da  ld   $da
              9aa4 00c8  ld   $c8
              9aa5 00a5  ld   $a5
              9aa6 00cf  ld   $cf
              9aa7 0091  ld   $91
              9aa8 00da  ld   $da
              9aa9 00e8  ld   $e8
              9aaa 0060  ld   $60
              9aab 0068  ld   $68
              9aac 0068  ld   $68
              9aad 0024  ld   $24
              9aae 00d5  ld   $d5
              9aaf 0010  ld   $10
              9ab0 0005  ld   $05
              9ab1 0020  ld   $20
              9ab2 00cd  ld   $cd
              9ab3 00e3  ld   $e3
              9ab4 0046  ld   $46
              9ab5 00d5  ld   $d5
              9ab6 0060  ld   $60
              9ab7 00a0  ld   $a0
              9ab8 00ff  ld   $ff
              9ab9 0084  ld   $84
              9aba 00d7  ld   $d7
              9abb 0060  ld   $60
              9abc 0020  ld   $20
              9abd 00cd  ld   $cd
              9abe 00ef  ld   $ef
              9abf 00f0  ld   $f0
              9ac0 0007  ld   $07
              9ac1 00a9  ld   $a9
              9ac2 0025  ld   $25
              9ac3 0085  ld   $85
              9ac4 00d6  ld   $d6
              9ac5 0088  ld   $88
              9ac6 0084  ld   $84
              9ac7 00d4  ld   $d4
              9ac8 00e8  ld   $e8
              9ac9 0060  ld   $60
              9aca 00a5  ld   $a5
              9acb 00ca  ld   $ca
              9acc 00a4  ld   $a4
              9acd 00cb  ld   $cb
              9ace 00d0  ld   $d0
              9acf 005a  ld   $5a
              9ad0 00a0  ld   $a0
              9ad1 0041  ld   $41
              9ad2 00a5  ld   $a5
              9ad3 0084  ld   $84
              9ad4 00c9  ld   $c9
              9ad5 0008  ld   $08
              9ad6 00b0  ld   $b0
              9ad7 005e  ld   $5e
              9ad8 00a8  ld   $a8
              9ad9 00e6  ld   $e6
              9ada 0084  ld   $84
              9adb 00a5  ld   $a5
              9adc 00de  ld   $de
              9add 0099  ld   $99
              9ade 0000  ld   $00
              9adf 0011  ld   $11
              9ae0 00a5  ld   $a5
              9ae1 00df  ld   $df
              9ae2 0099  ld   $99
              9ae3 0008  ld   $08
              9ae4 0011  ld   $11
              9ae5 00a5  ld   $a5
              9ae6 00dc  ld   $dc
              9ae7 0099  ld   $99
              9ae8 0010  ld   $10
              9ae9 0011  ld   $11
              9aea 00a5  ld   $a5
              9aeb 00dd  ld   $dd
              9aec 0099  ld   $99
              9aed 0018  ld   $18
              9aee 0011  ld   $11
              9aef 0020  ld   $20
              9af0 0015  ld   $15
              9af1 00e7  ld   $e7
              9af2 0020  ld   $20
              9af3 006d  ld   $6d
              9af4 00e5  ld   $e5
              9af5 0090  ld   $90
              9af6 0004  ld   $04
              9af7 00a0  ld   $a0
              9af8 0037  ld   $37
              9af9 00d0  ld   $d0
              9afa 003b  ld   $3b
              9afb fe00  bra  ac          ;+-----------------------------------+
              9afc fcfd  bra  $9afd       ;|                                   |
              9afd 1418  ld   $18,y       ;| Trampoline for page $9a00 lookups |
              9afe e006  jmp  y,$06       ;|                                   |
              9aff c218  st   [$18]       ;+-----------------------------------+
              9b00 00a5  ld   $a5
              9b01 0044  ld   $44
              9b02 00a4  ld   $a4
              9b03 0045  ld   $45
              9b04 0085  ld   $85
              9b05 00dc  ld   $dc
              9b06 0084  ld   $84
              9b07 00dd  ld   $dd
              9b08 002c  ld   $2c
              9b09 0011  ld   $11
              9b0a 00d0  ld   $d0
              9b0b 0030  ld   $30
              9b0c 004f  ld   $4f
              9b0d 0018  ld   $18
              9b0e 0069  ld   $69
              9b0f 0003  ld   $03
              9b10 0090  ld   $90
              9b11 0001  ld   $01
              9b12 00c8  ld   $c8
              9b13 00a2  ld   $a2
              9b14 00ff  ld   $ff
              9b15 0086  ld   $86
              9b16 00d9  ld   $d9
              9b17 009a  ld   $9a
              9b18 0085  ld   $85
              9b19 00de  ld   $de
              9b1a 0084  ld   $84
              9b1b 00df  ld   $df
              9b1c 0020  ld   $20
              9b1d 0079  ld   $79
              9b1e 00e6  ld   $e6
              9b1f 0024  ld   $24
              9b20 00d9  ld   $d9
              9b21 0010  ld   $10
              9b22 0049  ld   $49
              9b23 0018  ld   $18
              9b24 00a0  ld   $a0
              9b25 0000  ld   $00
              9b26 00a5  ld   $a5
              9b27 00dc  ld   $dc
              9b28 0071  ld   $71
              9b29 00dc  ld   $dc
              9b2a 00a4  ld   $a4
              9b2b 00dd  ld   $dd
              9b2c 0090  ld   $90
              9b2d 0001  ld   $01
              9b2e 00c8  ld   $c8
              9b2f 00c5  ld   $c5
              9b30 004c  ld   $4c
              9b31 00d0  ld   $d0
              9b32 00d1  ld   $d1
              9b33 00c4  ld   $c4
              9b34 004d  ld   $4d
              9b35 00d0  ld   $d0
              9b36 00cd  ld   $cd
              9b37 00a0  ld   $a0
              9b38 0034  ld   $34
              9b39 0046  ld   $46
              9b3a 00d9  ld   $d9
              9b3b 004c  ld   $4c
              9b3c 00e0  ld   $e0
              9b3d 00e3  ld   $e3
              9b3e 00a0  ld   $a0
              9b3f 004a  ld   $4a
              9b40 00a5  ld   $a5
              9b41 0084  ld   $84
              9b42 00f0  ld   $f0
              9b43 00f7  ld   $f7
              9b44 00c6  ld   $c6
              9b45 0084  ld   $84
              9b46 00a8  ld   $a8
              9b47 00b9  ld   $b9
              9b48 000f  ld   $0f
              9b49 0011  ld   $11
              9b4a 0085  ld   $85
              9b4b 00dc  ld   $dc
              9b4c 00b9  ld   $b9
              9b4d 0017  ld   $17
              9b4e 0011  ld   $11
              9b4f 0085  ld   $85
              9b50 00dd  ld   $dd
              9b51 00be  ld   $be
              9b52 0087  ld   $87
              9b53 0000  ld   $00
              9b54 00b9  ld   $b9
              9b55 0007  ld   $07
              9b56 0011  ld   $11
              9b57 00a8  ld   $a8
              9b58 008a  ld   $8a
              9b59 004c  ld   $4c
              9b5a 007a  ld   $7a
              9b5b 00e8  ld   $e8
              9b5c 00a0  ld   $a0
              9b5d 0063  ld   $63
              9b5e 0020  ld   $20
              9b5f 00c4  ld   $c4
              9b60 00e3  ld   $e3
              9b61 00a0  ld   $a0
              9b62 0001  ld   $01
              9b63 00b1  ld   $b1
              9b64 00dc  ld   $dc
              9b65 00aa  ld   $aa
              9b66 00c8  ld   $c8
              9b67 00b1  ld   $b1
              9b68 00dc  ld   $dc
              9b69 0020  ld   $20
              9b6a 001b  ld   $1b
              9b6b 00e5  ld   $e5
              9b6c 004c  ld   $4c
              9b6d 00b3  ld   $b3
              9b6e 00e2  ld   $e2
              9b6f 00c6  ld   $c6
              9b70 0083  ld   $83
              9b71 00a0  ld   $a0
              9b72 005b  ld   $5b
              9b73 00a5  ld   $a5
              9b74 0083  ld   $83
              9b75 00f0  ld   $f0
              9b76 00c4  ld   $c4
              9b77 00a8  ld   $a8
              9b78 00b5  ld   $b5
              9b79 0050  ld   $50
              9b7a 00d9  ld   $d9
              9b7b 00ff  ld   $ff
              9b7c 0011  ld   $11
              9b7d 00d0  ld   $d0
              9b7e 00f0  ld   $f0
              9b7f 00b5  ld   $b5
              9b80 0088  ld   $88
              9b81 00d9  ld   $d9
              9b82 0007  ld   $07
              9b83 0012  ld   $12
              9b84 00d0  ld   $d0
              9b85 00e9  ld   $e9
              9b86 00b9  ld   $b9
              9b87 000f  ld   $0f
              9b88 0012  ld   $12
              9b89 0085  ld   $85
              9b8a 00da  ld   $da
              9b8b 00b9  ld   $b9
              9b8c 0017  ld   $17
              9b8d 0012  ld   $12
              9b8e 0085  ld   $85
              9b8f 00db  ld   $db
              9b90 0020  ld   $20
              9b91 0015  ld   $15
              9b92 00e7  ld   $e7
              9b93 00ca  ld   $ca
              9b94 0020  ld   $20
              9b95 0093  ld   $93
              9b96 00e7  ld   $e7
              9b97 0020  ld   $20
              9b98 0001  ld   $01
              9b99 00e9  ld   $e9
              9b9a 0000  ld   $00
              9b9b 0000  ld   $00
              9b9c 00e8  ld   $e8
              9b9d 00ca  ld   $ca
              9b9e 00a4  ld   $a4
              9b9f 0083  ld   $83
              9ba0 00b9  ld   $b9
              9ba1 0047  ld   $47
              9ba2 0012  ld   $12
              9ba3 0095  ld   $95
              9ba4 00a7  ld   $a7
              9ba5 00b9  ld   $b9
              9ba6 003f  ld   $3f
              9ba7 0012  ld   $12
              9ba8 00a0  ld   $a0
              9ba9 0000  ld   $00
              9baa 0020  ld   $20
              9bab 0008  ld   $08
              9bac 00e7  ld   $e7
              9bad 0020  ld   $20
              9bae 0082  ld   $82
              9baf 00e7  ld   $e7
              9bb0 0020  ld   $20
              9bb1 0059  ld   $59
              9bb2 00e7  ld   $e7
              9bb3 0020  ld   $20
              9bb4 0015  ld   $15
              9bb5 00e7  ld   $e7
              9bb6 00a4  ld   $a4
              9bb7 0083  ld   $83
              9bb8 00a5  ld   $a5
              9bb9 00ce  ld   $ce
              9bba 00f0  ld   $f0
              9bbb 0005  ld   $05
              9bbc 0059  ld   $59
              9bbd 0017  ld   $17
              9bbe 0012  ld   $12
              9bbf 0010  ld   $10
              9bc0 0012  ld   $12
              9bc1 00b9  ld   $b9
              9bc2 001f  ld   $1f
              9bc3 0012  ld   $12
              9bc4 0085  ld   $85
              9bc5 00dc  ld   $dc
              9bc6 00b9  ld   $b9
              9bc7 0027  ld   $27
              9bc8 0012  ld   $12
              9bc9 0085  ld   $85
              9bca 00dd  ld   $dd
              9bcb 00be  ld   $be
              9bcc 002f  ld   $2f
              9bcd 0012  ld   $12
              9bce 00b9  ld   $b9
              9bcf 0037  ld   $37
              9bd0 0012  ld   $12
              9bd1 00d0  ld   $d0
              9bd2 0087  ld   $87
              9bd3 00c6  ld   $c6
              9bd4 0083  ld   $83
              9bd5 0060  ld   $60
              9bd6 00a0  ld   $a0
              9bd7 0054  ld   $54
              9bd8 00a5  ld   $a5
              9bd9 0083  ld   $83
              9bda 00c9  ld   $c9
              9bdb 0008  ld   $08
              9bdc 00f0  ld   $f0
              9bdd 009a  ld   $9a
              9bde 00e6  ld   $e6
              9bdf 0083  ld   $83
              9be0 00a8  ld   $a8
              9be1 00b5  ld   $b5
              9be2 0050  ld   $50
              9be3 0099  ld   $99
              9be4 0000  ld   $00
              9be5 0012  ld   $12
              9be6 00b5  ld   $b5
              9be7 0088  ld   $88
              9be8 0099  ld   $99
              9be9 0008  ld   $08
              9bea 0012  ld   $12
              9beb 0060  ld   $60
              9bec 0020  ld   $20
              9bed 0015  ld   $15
              9bee 00e7  ld   $e7
              9bef 00a4  ld   $a4
              9bf0 0083  ld   $83
              9bf1 00a5  ld   $a5
              9bf2 00ce  ld   $ce
              9bf3 0099  ld   $99
              9bf4 003f  ld   $3f
              9bf5 0012  ld   $12
              9bf6 00a5  ld   $a5
              9bf7 00cf  ld   $cf
              9bf8 0099  ld   $99
              9bf9 0047  ld   $47
              9bfa 0012  ld   $12
              9bfb fe00  bra  ac          ;+-----------------------------------+
              9bfc fcfd  bra  $9bfd       ;|                                   |
              9bfd 1418  ld   $18,y       ;| Trampoline for page $9b00 lookups |
              9bfe e006  jmp  y,$06       ;|                                   |
              9bff c218  st   [$18]       ;+-----------------------------------+
              9c00 00a9  ld   $a9
              9c01 0001  ld   $01
              9c02 0099  ld   $99
              9c03 000f  ld   $0f
              9c04 0012  ld   $12
              9c05 00a9  ld   $a9
              9c06 0000  ld   $00
              9c07 0099  ld   $99
              9c08 0017  ld   $17
              9c09 0012  ld   $12
              9c0a 00a5  ld   $a5
              9c0b 00dc  ld   $dc
              9c0c 0099  ld   $99
              9c0d 001f  ld   $1f
              9c0e 0012  ld   $12
              9c0f 00a5  ld   $a5
              9c10 00dd  ld   $dd
              9c11 0099  ld   $99
              9c12 0027  ld   $27
              9c13 0012  ld   $12
              9c14 00a5  ld   $a5
              9c15 00de  ld   $de
              9c16 0099  ld   $99
              9c17 002f  ld   $2f
              9c18 0012  ld   $12
              9c19 00a5  ld   $a5
              9c1a 00df  ld   $df
              9c1b 0099  ld   $99
              9c1c 0037  ld   $37
              9c1d 0012  ld   $12
              9c1e 0060  ld   $60
              9c1f 0020  ld   $20
              9c20 0015  ld   $15
              9c21 00e7  ld   $e7
              9c22 00a4  ld   $a4
              9c23 0083  ld   $83
              9c24 00a5  ld   $a5
              9c25 00ce  ld   $ce
              9c26 0099  ld   $99
              9c27 000f  ld   $0f
              9c28 0012  ld   $12
              9c29 00a5  ld   $a5
              9c2a 00cf  ld   $cf
              9c2b 004c  ld   $4c
              9c2c 0066  ld   $66
              9c2d 00e9  ld   $e9
              9c2e 0000  ld   $00
              9c2f 0000  ld   $00
              9c30 0000  ld   $00
              * 14 times
              9c3c 00ab  ld   $ab
              9c3d 0003  ld   $03
              9c3e 0003  ld   $03
              9c3f 0003  ld   $03
              * 14 times
              9c4b 003f  ld   $3f
              9c4c 003f  ld   $3f
              9c4d 00c0  ld   $c0
              9c4e 00c0  ld   $c0
              9c4f 003c  ld   $3c
              9c50 003c  ld   $3c
              9c51 003c  ld   $3c
              * 7 times
              9c56 0030  ld   $30
              9c57 000f  ld   $0f
              9c58 00c0  ld   $c0
              9c59 00cc  ld   $cc
              9c5a 00ff  ld   $ff
              9c5b 0055  ld   $55
              9c5c 0000  ld   $00
              9c5d 00ab  ld   $ab
              9c5e 00ab  ld   $ab
              9c5f 0003  ld   $03
              9c60 0003  ld   $03
              9c61 00ff  ld   $ff
              9c62 00ff  ld   $ff
              9c63 0055  ld   $55
              9c64 00ff  ld   $ff
              9c65 00ff  ld   $ff
              9c66 0055  ld   $55
              9c67 00cf  ld   $cf
              9c68 00cf  ld   $cf
              9c69 00cf  ld   $cf
              * 5 times
              9c6c 00ff  ld   $ff
              9c6d 0055  ld   $55
              9c6e 00c3  ld   $c3
              9c6f 00c3  ld   $c3
              9c70 00c3  ld   $c3
              9c71 0055  ld   $55
              9c72 00f0  ld   $f0
              9c73 00f0  ld   $f0
              9c74 00cf  ld   $cf
              9c75 0056  ld   $56
              9c76 0056  ld   $56
              9c77 0056  ld   $56
              9c78 0055  ld   $55
              9c79 00ff  ld   $ff
              9c7a 00ff  ld   $ff
              9c7b 0055  ld   $55
              9c7c 0003  ld   $03
              9c7d 0003  ld   $03
              9c7e 0003  ld   $03
              * 7 times
              9c83 00ff  ld   $ff
              9c84 00ff  ld   $ff
              9c85 00ff  ld   $ff
              9c86 0003  ld   $03
              9c87 0003  ld   $03
              9c88 0003  ld   $03
              * 16 times
              9c96 0000  ld   $00
              9c97 00ab  ld   $ab
              9c98 0003  ld   $03
              9c99 0057  ld   $57
              9c9a 0003  ld   $03
              9c9b 0003  ld   $03
              9c9c 0003  ld   $03
              9c9d 0003  ld   $03
              9c9e 0007  ld   $07
              9c9f 0003  ld   $03
              9ca0 0003  ld   $03
              9ca1 00ea  ld   $ea
              9ca2 0000  ld   $00
              9ca3 0000  ld   $00
              9ca4 0003  ld   $03
              9ca5 0003  ld   $03
              9ca6 0003  ld   $03
              * 10 times
              9cae 00aa  ld   $aa
              9caf 00ff  ld   $ff
              9cb0 00ff  ld   $ff
              9cb1 00ff  ld   $ff
              * 5 times
              9cb4 0017  ld   $17
              9cb5 00ff  ld   $ff
              9cb6 00ff  ld   $ff
              9cb7 0019  ld   $19
              9cb8 005d  ld   $5d
              9cb9 0035  ld   $35
              9cba 004b  ld   $4b
              9cbb 00f2  ld   $f2
              9cbc 00ec  ld   $ec
              9cbd 0087  ld   $87
              9cbe 006f  ld   $6f
              9cbf 00ad  ld   $ad
              9cc0 00b7  ld   $b7
              9cc1 00e2  ld   $e2
              9cc2 00f8  ld   $f8
              9cc3 0054  ld   $54
              9cc4 0080  ld   $80
              9cc5 0096  ld   $96
              9cc6 0085  ld   $85
              9cc7 0082  ld   $82
              9cc8 0022  ld   $22
              9cc9 0010  ld   $10
              9cca 0033  ld   $33
              9ccb 004a  ld   $4a
              9ccc 0013  ld   $13
              9ccd 0006  ld   $06
              9cce 000b  ld   $0b
              9ccf 004a  ld   $4a
              9cd0 0001  ld   $01
              9cd1 0040  ld   $40
              9cd2 0047  ld   $47
              9cd3 007a  ld   $7a
              9cd4 0000  ld   $00
              9cd5 00ff  ld   $ff
              9cd6 0023  ld   $23
              9cd7 0009  ld   $09
              9cd8 005b  ld   $5b
              9cd9 0016  ld   $16
              9cda 00b6  ld   $b6
              9cdb 00cb  ld   $cb
              9cdc 00ff  ld   $ff
              9cdd 00ff  ld   $ff
              9cde 00fb  ld   $fb
              9cdf 00ff  ld   $ff
              9ce0 00ff  ld   $ff
              9ce1 0024  ld   $24
              9ce2 00f6  ld   $f6
              9ce3 004e  ld   $4e
              9ce4 0059  ld   $59
              9ce5 0050  ld   $50
              9ce6 0000  ld   $00
              9ce7 00ff  ld   $ff
              9ce8 0023  ld   $23
              9ce9 00a3  ld   $a3
              9cea 006f  ld   $6f
              9ceb 0036  ld   $36
              9cec 0023  ld   $23
              9ced 00d7  ld   $d7
              9cee 001c  ld   $1c
              9cef 0022  ld   $22
              9cf0 00c2  ld   $c2
              9cf1 00ae  ld   $ae
              9cf2 00ba  ld   $ba
              9cf3 0023  ld   $23
              9cf4 00ff  ld   $ff
              9cf5 00ff  ld   $ff
              9cf6 0021  ld   $21
              9cf7 0030  ld   $30
              9cf8 001e  ld   $1e
              9cf9 0003  ld   $03
              9cfa 00c4  ld   $c4
              9cfb fe00  bra  ac          ;+-----------------------------------+
              9cfc fcfd  bra  $9cfd       ;|                                   |
              9cfd 1418  ld   $18,y       ;| Trampoline for page $9c00 lookups |
              9cfe e006  jmp  y,$06       ;|                                   |
              9cff c218  st   [$18]       ;+-----------------------------------+
              9d00 0020  ld   $20
              9d01 0000  ld   $00
              9d02 00c1  ld   $c1
              9d03 00ff  ld   $ff
              9d04 00ff  ld   $ff
              9d05 00ff  ld   $ff
              9d06 00a0  ld   $a0
              9d07 0030  ld   $30
              9d08 001e  ld   $1e
              9d09 00a4  ld   $a4
              9d0a 00d3  ld   $d3
              9d0b 00b6  ld   $b6
              9d0c 00bc  ld   $bc
              9d0d 00aa  ld   $aa
              9d0e 003a  ld   $3a
              9d0f 0001  ld   $01
              9d10 0050  ld   $50
              9d11 007e  ld   $7e
              9d12 00d8  ld   $d8
              9d13 00d8  ld   $d8
              9d14 00a5  ld   $a5
              9d15 003c  ld   $3c
              9d16 00ff  ld   $ff
              9d17 0016  ld   $16
              9d18 005b  ld   $5b
              9d19 0028  ld   $28
              9d1a 0003  ld   $03
              9d1b 00c4  ld   $c4
              9d1c 001d  ld   $1d
              9d1d 0000  ld   $00
              9d1e 000c  ld   $0c
              9d1f 004e  ld   $4e
              9d20 0000  ld   $00
              9d21 003e  ld   $3e
              9d22 0000  ld   $00
              9d23 00a6  ld   $a6
              9d24 00b0  ld   $b0
              9d25 0000  ld   $00
              9d26 00bc  ld   $bc
              9d27 00c6  ld   $c6
              9d28 0057  ld   $57
              9d29 008c  ld   $8c
              9d2a 0001  ld   $01
              9d2b 0027  ld   $27
              9d2c 00ff  ld   $ff
              9d2d 00ff  ld   $ff
              9d2e 00ff  ld   $ff
              * 5 times
              9d31 00e8  ld   $e8
              9d32 00ff  ld   $ff
              9d33 00ff  ld   $ff
              9d34 00e8  ld   $e8
              9d35 00e0  ld   $e0
              9d36 00e0  ld   $e0
              9d37 00e0  ld   $e0
              9d38 00ef  ld   $ef
              9d39 00ef  ld   $ef
              9d3a 00e3  ld   $e3
              9d3b 00e3  ld   $e3
              9d3c 00e5  ld   $e5
              9d3d 00e5  ld   $e5
              9d3e 00e7  ld   $e7
              9d3f 00e7  ld   $e7
              9d40 00ee  ld   $ee
              9d41 00ef  ld   $ef
              9d42 00ef  ld   $ef
              9d43 00e7  ld   $e7
              9d44 00e7  ld   $e7
              9d45 00e2  ld   $e2
              9d46 00ef  ld   $ef
              9d47 00e7  ld   $e7
              9d48 00e7  ld   $e7
              9d49 00ec  ld   $ec
              9d4a 00ec  ld   $ec
              9d4b 00ec  ld   $ec
              9d4c 00e7  ld   $e7
              9d4d 00ec  ld   $ec
              9d4e 00ec  ld   $ec
              9d4f 00ec  ld   $ec
              9d50 00e2  ld   $e2
              9d51 0000  ld   $00
              9d52 00ff  ld   $ff
              9d53 00e8  ld   $e8
              9d54 00e1  ld   $e1
              9d55 00e8  ld   $e8
              9d56 00e8  ld   $e8
              9d57 00ef  ld   $ef
              9d58 00eb  ld   $eb
              9d59 00ff  ld   $ff
              9d5a 00ff  ld   $ff
              9d5b 00e0  ld   $e0
              9d5c 00ff  ld   $ff
              9d5d 00ff  ld   $ff
              9d5e 00ef  ld   $ef
              9d5f 00ee  ld   $ee
              9d60 00ef  ld   $ef
              9d61 00e7  ld   $e7
              9d62 00e7  ld   $e7
              9d63 0000  ld   $00
              9d64 00ff  ld   $ff
              9d65 00e8  ld   $e8
              9d66 00e7  ld   $e7
              9d67 00e7  ld   $e7
              9d68 00e7  ld   $e7
              9d69 00e8  ld   $e8
              9d6a 00e1  ld   $e1
              9d6b 00e2  ld   $e2
              9d6c 00ee  ld   $ee
              9d6d 00ee  ld   $ee
              9d6e 00ee  ld   $ee
              9d6f 00ee  ld   $ee
              9d70 00e8  ld   $e8
              9d71 00ff  ld   $ff
              9d72 00ff  ld   $ff
              9d73 00e1  ld   $e1
              9d74 00e1  ld   $e1
              9d75 00ef  ld   $ef
              9d76 00ee  ld   $ee
              9d77 00e7  ld   $e7
              9d78 00e8  ld   $e8
              9d79 00ee  ld   $ee
              9d7a 00e7  ld   $e7
              9d7b 00ff  ld   $ff
              9d7c 00ff  ld   $ff
              9d7d 00ff  ld   $ff
              9d7e 00ee  ld   $ee
              9d7f 00e1  ld   $e1
              9d80 00ef  ld   $ef
              9d81 00e7  ld   $e7
              9d82 00e8  ld   $e8
              9d83 00ef  ld   $ef
              9d84 00ef  ld   $ef
              9d85 00eb  ld   $eb
              9d86 00e9  ld   $e9
              9d87 00e8  ld   $e8
              9d88 00e9  ld   $e9
              9d89 00e9  ld   $e9
              9d8a 00e8  ld   $e8
              9d8b 00e8  ld   $e8
              9d8c 00e8  ld   $e8
              9d8d 00e8  ld   $e8
              9d8e 00ff  ld   $ff
              9d8f 00e8  ld   $e8
              9d90 00e8  ld   $e8
              9d91 00e8  ld   $e8
              9d92 00ee  ld   $ee
              9d93 00e7  ld   $e7
              9d94 00e8  ld   $e8
              9d95 00ef  ld   $ef
              9d96 00ef  ld   $ef
              9d97 00ee  ld   $ee
              9d98 00ef  ld   $ef
              9d99 00ee  ld   $ee
              9d9a 00ef  ld   $ef
              9d9b 00ee  ld   $ee
              9d9c 00ee  ld   $ee
              9d9d 00ef  ld   $ef
              9d9e 00ee  ld   $ee
              9d9f 00ee  ld   $ee
              9da0 00ee  ld   $ee
              9da1 00e1  ld   $e1
              9da2 00e8  ld   $e8
              9da3 00e8  ld   $e8
              9da4 00ff  ld   $ff
              9da5 00ff  ld   $ff
              9da6 00ff  ld   $ff
              * 5 times
              9da9 00eb  ld   $eb
              9daa 0000  ld   $00
              9dab 0000  ld   $00
              9dac 00be  ld   $be
              9dad 00b3  ld   $b3
              9dae 00b2  ld   $b2
              9daf 00b7  ld   $b7
              9db0 00b6  ld   $b6
              9db1 0037  ld   $37
              9db2 00d4  ld   $d4
              9db3 00cf  ld   $cf
              9db4 00cf  ld   $cf
              9db5 00a0  ld   $a0
              9db6 00cc  ld   $cc
              9db7 00cf  ld   $cf
              9db8 00ce  ld   $ce
              9db9 0047  ld   $47
              9dba 00d3  ld   $d3
              9dbb 00d9  ld   $d9
              9dbc 00ce  ld   $ce
              9dbd 00d4  ld   $d4
              9dbe 00c1  ld   $c1
              9dbf 0058  ld   $58
              9dc0 00cd  ld   $cd
              9dc1 00c5  ld   $c5
              9dc2 00cd  ld   $cd
              9dc3 00a0  ld   $a0
              9dc4 00c6  ld   $c6
              9dc5 00d5  ld   $d5
              9dc6 00cc  ld   $cc
              9dc7 004c  ld   $4c
              9dc8 00d4  ld   $d4
              9dc9 00cf  ld   $cf
              9dca 00cf  ld   $cf
              9dcb 00a0  ld   $a0
              9dcc 00cd  ld   $cd
              9dcd 00c1  ld   $c1
              9dce 00ce  ld   $ce
              9dcf 00d9  ld   $d9
              9dd0 00a0  ld   $a0
              9dd1 00d0  ld   $d0
              9dd2 00c1  ld   $c1
              9dd3 00d2  ld   $d2
              9dd4 00c5  ld   $c5
              9dd5 00ce  ld   $ce
              9dd6 0053  ld   $53
              9dd7 00d3  ld   $d3
              9dd8 00d4  ld   $d4
              9dd9 00d2  ld   $d2
              9dda 00c9  ld   $c9
              9ddb 00ce  ld   $ce
              9ddc 0047  ld   $47
              9ddd 00ce  ld   $ce
              9dde 00cf  ld   $cf
              9ddf 00a0  ld   $a0
              9de0 00c5  ld   $c5
              9de1 00ce  ld   $ce
              9de2 0044  ld   $44
              9de3 00c2  ld   $c2
              9de4 00c1  ld   $c1
              9de5 00c4  ld   $c4
              9de6 00a0  ld   $a0
              9de7 00c2  ld   $c2
              9de8 00d2  ld   $d2
              9de9 00c1  ld   $c1
              9dea 00ce  ld   $ce
              9deb 00c3  ld   $c3
              9dec 0048  ld   $48
              9ded 00be  ld   $be
              9dee 00b8  ld   $b8
              9def 00a0  ld   $a0
              9df0 00c7  ld   $c7
              9df1 00cf  ld   $cf
              9df2 00d3  ld   $d3
              9df3 00d5  ld   $d5
              9df4 00c2  ld   $c2
              9df5 0053  ld   $53
              9df6 00c2  ld   $c2
              9df7 00c1  ld   $c1
              9df8 00c4  ld   $c4
              9df9 00a0  ld   $a0
              9dfa 00d2  ld   $d2
              9dfb fe00  bra  ac          ;+-----------------------------------+
              9dfc fcfd  bra  $9dfd       ;|                                   |
              9dfd 1418  ld   $18,y       ;| Trampoline for page $9d00 lookups |
              9dfe e006  jmp  y,$06       ;|                                   |
              9dff c218  st   [$18]       ;+-----------------------------------+
              9e00 00c5  ld   $c5
              9e01 00d4  ld   $d4
              9e02 00d5  ld   $d5
              9e03 00d2  ld   $d2
              9e04 004e  ld   $4e
              9e05 00be  ld   $be
              9e06 00b8  ld   $b8
              9e07 00a0  ld   $a0
              9e08 00c6  ld   $c6
              9e09 00cf  ld   $cf
              9e0a 00d2  ld   $d2
              9e0b 0053  ld   $53
              9e0c 00c2  ld   $c2
              9e0d 00c1  ld   $c1
              9e0e 00c4  ld   $c4
              9e0f 00a0  ld   $a0
              9e10 00ce  ld   $ce
              9e11 00c5  ld   $c5
              9e12 00d8  ld   $d8
              9e13 0054  ld   $54
              9e14 00d3  ld   $d3
              9e15 00d4  ld   $d4
              9e16 00cf  ld   $cf
              9e17 00d0  ld   $d0
              9e18 00d0  ld   $d0
              9e19 00c5  ld   $c5
              9e1a 00c4  ld   $c4
              9e1b 00a0  ld   $a0
              9e1c 00c1  ld   $c1
              9e1d 00d4  ld   $d4
              9e1e 0020  ld   $20
              9e1f 00aa  ld   $aa
              9e20 00aa  ld   $aa
              9e21 00aa  ld   $aa
              9e22 0020  ld   $20
              9e23 00a0  ld   $a0
              9e24 00c5  ld   $c5
              9e25 00d2  ld   $d2
              9e26 00d2  ld   $d2
              9e27 000d  ld   $0d
              9e28 00be  ld   $be
              9e29 00b2  ld   $b2
              9e2a 00b5  ld   $b5
              9e2b 0035  ld   $35
              9e2c 00d2  ld   $d2
              9e2d 00c1  ld   $c1
              9e2e 00ce  ld   $ce
              9e2f 00c7  ld   $c7
              9e30 0045  ld   $45
              9e31 00c4  ld   $c4
              9e32 00c9  ld   $c9
              9e33 004d  ld   $4d
              9e34 00d3  ld   $d3
              9e35 00d4  ld   $d4
              9e36 00d2  ld   $d2
              9e37 00a0  ld   $a0
              9e38 00cf  ld   $cf
              9e39 00d6  ld   $d6
              9e3a 00c6  ld   $c6
              9e3b 004c  ld   $4c
              9e3c 00dc  ld   $dc
              9e3d 000d  ld   $0d
              9e3e 00d2  ld   $d2
              9e3f 00c5  ld   $c5
              9e40 00d4  ld   $d4
              9e41 00d9  ld   $d9
              9e42 00d0  ld   $d0
              9e43 00c5  ld   $c5
              9e44 00a0  ld   $a0
              9e45 00cc  ld   $cc
              9e46 00c9  ld   $c9
              9e47 00ce  ld   $ce
              9e48 00c5  ld   $c5
              9e49 008d  ld   $8d
              9e4a 003f  ld   $3f
              9e4b 0046  ld   $46
              9e4c 00d9  ld   $d9
              9e4d 0090  ld   $90
              9e4e 0003  ld   $03
              9e4f 004c  ld   $4c
              9e50 00c3  ld   $c3
              9e51 00e8  ld   $e8
              9e52 00a6  ld   $a6
              9e53 00cf  ld   $cf
              9e54 009a  ld   $9a
              9e55 00a6  ld   $a6
              9e56 00ce  ld   $ce
              9e57 00a0  ld   $a0
              9e58 008d  ld   $8d
              9e59 00d0  ld   $d0
              9e5a 0002  ld   $02
              9e5b 00a0  ld   $a0
              9e5c 0099  ld   $99
              9e5d 0020  ld   $20
              9e5e 00c4  ld   $c4
              9e5f 00e3  ld   $e3
              9e60 0086  ld   $86
              9e61 00ce  ld   $ce
              9e62 00ba  ld   $ba
              9e63 0086  ld   $86
              9e64 00cf  ld   $cf
              9e65 00a0  ld   $a0
              9e66 00fe  ld   $fe
              9e67 0084  ld   $84
              9e68 00d9  ld   $d9
              9e69 00c8  ld   $c8
              9e6a 0084  ld   $84
              9e6b 00c8  ld   $c8
              9e6c 0020  ld   $20
              9e6d 0099  ld   $99
              9e6e 00e2  ld   $e2
              9e6f 0084  ld   $84
              9e70 00e9  ld   $e9
              9e71 00a2  ld   $a2
              9e72 0018  ld   $18
              9e73 00a9  ld   $a9
              9e74 0030  ld   $30
              9e75 0020  ld   $20
              9e76 0091  ld   $91
              9e77 00e4  ld   $e4
              9e78 00e6  ld   $e6
              9e79 00d9  ld   $d9
              9e7a 00a6  ld   $a6
              9e7b 00ce  ld   $ce
              9e7c 00a4  ld   $a4
              9e7d 00c8  ld   $c8
              9e7e 000a  ld   $0a
              9e7f 0085  ld   $85
              9e80 00ce  ld   $ce
              9e81 00c8  ld   $c8
              9e82 00b9  ld   $b9
              9e83 0000  ld   $00
              9e84 0002  ld   $02
              9e85 00c9  ld   $c9
              9e86 0074  ld   $74
              9e87 00f0  ld   $f0
              9e88 00d2  ld   $d2
              9e89 0049  ld   $49
              9e8a 00b0  ld   $b0
              9e8b 00c9  ld   $c9
              9e8c 000a  ld   $0a
              9e8d 00b0  ld   $b0
              9e8e 00f0  ld   $f0
              9e8f 00c8  ld   $c8
              9e90 00c8  ld   $c8
              9e91 0084  ld   $84
              9e92 00c8  ld   $c8
              9e93 00b9  ld   $b9
              9e94 0000  ld   $00
              9e95 0002  ld   $02
              9e96 0048  ld   $48
              9e97 00b9  ld   $b9
              9e98 00ff  ld   $ff
              9e99 0001  ld   $01
              9e9a 00a0  ld   $a0
              9e9b 0000  ld   $00
              9e9c 0020  ld   $20
              9e9d 0008  ld   $08
              9e9e 00e7  ld   $e7
              9e9f 0068  ld   $68
              9ea0 0095  ld   $95
              9ea1 00a8  ld   $a8
              9ea2 00a5  ld   $a5
              9ea3 00ce  ld   $ce
              9ea4 00c9  ld   $c9
              9ea5 00c7  ld   $c7
              9ea6 00d0  ld   $d0
              9ea7 0003  ld   $03
              9ea8 0020  ld   $20
              9ea9 006f  ld   $6f
              9eaa 00e7  ld   $e7
              9eab 004c  ld   $4c
              9eac 0001  ld   $01
              9ead 00e8  ld   $e8
              9eae 00ff  ld   $ff
              9eaf 00ff  ld   $ff
              9eb0 00ff  ld   $ff
              9eb1 00ec  ld   $ec
              9eb2 0000  ld   $00
              9eb3 0000  ld   $00
              9eb4 0050  ld   $50
              9eb5 0020  ld   $20
              9eb6 0013  ld   $13
              9eb7 00ec  ld   $ec
              9eb8 00d0  ld   $d0
              9eb9 0015  ld   $15
              9eba 0020  ld   $20
              9ebb 000b  ld   $0b
              9ebc 00ec  ld   $ec
              9ebd 00d0  ld   $d0
              9ebe 0010  ld   $10
              9ebf 0020  ld   $20
              9ec0 0082  ld   $82
              9ec1 00e7  ld   $e7
              9ec2 0020  ld   $20
              9ec3 006f  ld   $6f
              9ec4 00e7  ld   $e7
              9ec5 0050  ld   $50
              9ec6 0003  ld   $03
              9ec7 0020  ld   $20
              9ec8 0082  ld   $82
              9ec9 00e7  ld   $e7
              9eca 0020  ld   $20
              9ecb 0059  ld   $59
              9ecc 00e7  ld   $e7
              9ecd 0056  ld   $56
              9ece 0050  ld   $50
              9ecf 004c  ld   $4c
              9ed0 0036  ld   $36
              9ed1 00e7  ld   $e7
              9ed2 00ff  ld   $ff
              9ed3 00ff  ld   $ff
              9ed4 00c1  ld   $c1
              9ed5 00ff  ld   $ff
              9ed6 007f  ld   $7f
              9ed7 00d1  ld   $d1
              9ed8 00cc  ld   $cc
              9ed9 00c7  ld   $c7
              9eda 00cf  ld   $cf
              9edb 00ce  ld   $ce
              9edc 00c5  ld   $c5
              9edd 009a  ld   $9a
              9ede 0098  ld   $98
              9edf 008b  ld   $8b
              9ee0 0096  ld   $96
              9ee1 0095  ld   $95
              9ee2 0093  ld   $93
              9ee3 00bf  ld   $bf
              9ee4 00b2  ld   $b2
              9ee5 0032  ld   $32
              9ee6 002d  ld   $2d
              9ee7 002b  ld   $2b
              9ee8 00bc  ld   $bc
              9ee9 00b0  ld   $b0
              9eea 00ac  ld   $ac
              9eeb 00be  ld   $be
              9eec 0035  ld   $35
              9eed 008e  ld   $8e
              9eee 0061  ld   $61
              9eef 00ff  ld   $ff
              9ef0 00ff  ld   $ff
              9ef1 00ff  ld   $ff
              9ef2 00dd  ld   $dd
              9ef3 00fb  ld   $fb
              9ef4 0020  ld   $20
              9ef5 00c9  ld   $c9
              9ef6 00ef  ld   $ef
              9ef7 0015  ld   $15
              9ef8 004f  ld   $4f
              9ef9 0010  ld   $10
              9efa 0005  ld   $05
              9efb fe00  bra  ac          ;+-----------------------------------+
              9efc fcfd  bra  $9efd       ;|                                   |
              9efd 1418  ld   $18,y       ;| Trampoline for page $9e00 lookups |
              9efe e006  jmp  y,$06       ;|                                   |
              9eff c218  st   [$18]       ;+-----------------------------------+
              9f00 0020  ld   $20
              9f01 00c9  ld   $c9
              9f02 00ef  ld   $ef
              9f03 0035  ld   $35
              9f04 004f  ld   $4f
              9f05 0095  ld   $95
              9f06 0050  ld   $50
              9f07 0010  ld   $10
              9f08 00cb  ld   $cb
              9f09 004c  ld   $4c
              9f0a 00c9  ld   $c9
              9f0b 00ef  ld   $ef
              9f0c 0040  ld   $40
              9f0d 0060  ld   $60
              9f0e 008d  ld   $8d
              9f0f 0060  ld   $60
              9f10 008b  ld   $8b
              9f11 0000  ld   $00
              9f12 007e  ld   $7e
              9f13 008c  ld   $8c
              9f14 0033  ld   $33
              9f15 0000  ld   $00
              9f16 0000  ld   $00
              9f17 0060  ld   $60
              9f18 0003  ld   $03
              9f19 00bf  ld   $bf
              9f1a 0012  ld   $12
              9f1b 0000  ld   $00
              9f1c 0040  ld   $40
              9f1d 0089  ld   $89
              9f1e 00c9  ld   $c9
              9f1f 0047  ld   $47
              9f20 009d  ld   $9d
              9f21 0017  ld   $17
              9f22 0068  ld   $68
              9f23 009d  ld   $9d
              9f24 000a  ld   $0a
              9f25 0000  ld   $00
              9f26 0040  ld   $40
              9f27 0060  ld   $60
              9f28 008d  ld   $8d
              9f29 0060  ld   $60
              9f2a 008b  ld   $8b
              9f2b 0000  ld   $00
              9f2c 007e  ld   $7e
              9f2d 008c  ld   $8c
              9f2e 003c  ld   $3c
              9f2f 0000  ld   $00
              9f30 0000  ld   $00
              9f31 0060  ld   $60
              9f32 0003  ld   $03
              9f33 00bf  ld   $bf
              9f34 001b  ld   $1b
              9f35 004b  ld   $4b
              9f36 0067  ld   $67
              9f37 00b4  ld   $b4
              9f38 00a1  ld   $a1
              9f39 0007  ld   $07
              9f3a 008c  ld   $8c
              9f3b 0007  ld   $07
              9f3c 00ae  ld   $ae
              9f3d 00a9  ld   $a9
              9f3e 00ac  ld   $ac
              9f3f 00a8  ld   $a8
              9f40 0067  ld   $67
              9f41 008c  ld   $8c
              9f42 0007  ld   $07
              9f43 00b4  ld   $b4
              9f44 00af  ld   $af
              9f45 00ac  ld   $ac
              9f46 00b0  ld   $b0
              9f47 0067  ld   $67
              9f48 009d  ld   $9d
              9f49 00b2  ld   $b2
              9f4a 00af  ld   $af
              9f4b 00ac  ld   $ac
              9f4c 00af  ld   $af
              9f4d 00a3  ld   $a3
              9f4e 0067  ld   $67
              9f4f 008c  ld   $8c
              9f50 0007  ld   $07
              9f51 00a5  ld   $a5
              9f52 00ab  ld   $ab
              9f53 00af  ld   $af
              9f54 00b0  ld   $b0
              9f55 00f4  ld   $f4
              9f56 00ae  ld   $ae
              9f57 00a9  ld   $a9
              9f58 00b2  ld   $b2
              9f59 00b0  ld   $b0
              9f5a 007f  ld   $7f
              9f5b 000e  ld   $0e
              9f5c 0027  ld   $27
              9f5d 00b4  ld   $b4
              9f5e 00ae  ld   $ae
              9f5f 00a9  ld   $a9
              9f60 00b2  ld   $b2
              9f61 00b0  ld   $b0
              9f62 007f  ld   $7f
              9f63 000e  ld   $0e
              9f64 0028  ld   $28
              9f65 00b4  ld   $b4
              9f66 00ae  ld   $ae
              9f67 00a9  ld   $a9
              9f68 00b2  ld   $b2
              9f69 00b0  ld   $b0
              9f6a 0064  ld   $64
              9f6b 0007  ld   $07
              9f6c 00a6  ld   $a6
              9f6d 00a9  ld   $a9
              9f6e 0067  ld   $67
              9f6f 00af  ld   $af
              9f70 00b4  ld   $b4
              9f71 00af  ld   $af
              9f72 00a7  ld   $a7
              9f73 0078  ld   $78
              9f74 00b4  ld   $b4
              9f75 00a5  ld   $a5
              9f76 00ac  ld   $ac
              9f77 0078  ld   $78
              9f78 007f  ld   $7f
              9f79 0002  ld   $02
              9f7a 00ad  ld   $ad
              9f7b 00a5  ld   $a5
              9f7c 00b2  ld   $b2
              9f7d 0067  ld   $67
              9f7e 00a2  ld   $a2
              9f7f 00b5  ld   $b5
              9f80 00b3  ld   $b3
              9f81 00af  ld   $af
              9f82 00a7  ld   $a7
              9f83 00ee  ld   $ee
              9f84 00b2  ld   $b2
              9f85 00b5  ld   $b5
              9f86 00b4  ld   $b4
              9f87 00a5  ld   $a5
              9f88 00b2  ld   $b2
              9f89 007e  ld   $7e
              9f8a 008c  ld   $8c
              9f8b 0039  ld   $39
              9f8c 00b4  ld   $b4
              9f8d 00b8  ld   $b8
              9f8e 00a5  ld   $a5
              9f8f 00ae  ld   $ae
              9f90 0067  ld   $67
              9f91 00b0  ld   $b0
              9f92 00a5  ld   $a5
              9f93 00b4  ld   $b4
              9f94 00b3  ld   $b3
              9f95 0027  ld   $27
              9f96 00af  ld   $af
              9f97 00b4  ld   $b4
              9f98 0007  ld   $07
              9f99 009d  ld   $9d
              9f9a 0019  ld   $19
              9f9b 00b2  ld   $b2
              9f9c 00af  ld   $af
              9f9d 00a6  ld   $a6
              9f9e 007f  ld   $7f
              9f9f 0005  ld   $05
              9fa0 0037  ld   $37
              9fa1 00b4  ld   $b4
              9fa2 00b5  ld   $b5
              9fa3 00b0  ld   $b0
              9fa4 00ae  ld   $ae
              9fa5 00a9  ld   $a9
              9fa6 007f  ld   $7f
              9fa7 0005  ld   $05
              9fa8 0028  ld   $28
              9fa9 00b4  ld   $b4
              9faa 00b5  ld   $b5
              9fab 00b0  ld   $b0
              9fac 00ae  ld   $ae
              9fad 00a9  ld   $a9
              9fae 007f  ld   $7f
              9faf 0005  ld   $05
              9fb0 002a  ld   $2a
              9fb1 00b4  ld   $b4
              9fb2 00b5  ld   $b5
              9fb3 00b0  ld   $b0
              9fb4 00ae  ld   $ae
              9fb5 00a9  ld   $a9
              9fb6 00e4  ld   $e4
              9fb7 00ae  ld   $ae
              9fb8 00a5  ld   $a5
              9fb9 00ed  ld   $ed
              9fba 0000  ld   $00
              9fbb 0000  ld   $00
              9fbc 0000  ld   $00
              9fbd 00ff  ld   $ff
              9fbe 00ff  ld   $ff
              9fbf 0047  ld   $47
              9fc0 00a2  ld   $a2
              9fc1 00a1  ld   $a1
              9fc2 00b4  ld   $b4
              9fc3 007f  ld   $7f
              9fc4 000d  ld   $0d
              9fc5 0030  ld   $30
              9fc6 00ad  ld   $ad
              9fc7 00a9  ld   $a9
              9fc8 00a4  ld   $a4
              9fc9 007f  ld   $7f
              9fca 000d  ld   $0d
              9fcb 0023  ld   $23
              9fcc 00ad  ld   $ad
              9fcd 00a9  ld   $a9
              9fce 00a4  ld   $a4
              9fcf 0067  ld   $67
              9fd0 00ac  ld   $ac
              9fd1 00ac  ld   $ac
              9fd2 00a1  ld   $a1
              9fd3 00a3  ld   $a3
              9fd4 0000  ld   $00
              9fd5 0040  ld   $40
              9fd6 0080  ld   $80
              9fd7 00c0  ld   $c0
              9fd8 00c1  ld   $c1
              9fd9 0080  ld   $80
              9fda 0000  ld   $00
              9fdb 0047  ld   $47
              9fdc 008c  ld   $8c
              9fdd 0068  ld   $68
              9fde 008c  ld   $8c
              9fdf 00db  ld   $db
              9fe0 0067  ld   $67
              9fe1 009b  ld   $9b
              9fe2 0068  ld   $68
              9fe3 009b  ld   $9b
              9fe4 0050  ld   $50
              9fe5 008c  ld   $8c
              9fe6 0063  ld   $63
              9fe7 008c  ld   $8c
              9fe8 007f  ld   $7f
              9fe9 0001  ld   $01
              9fea 0051  ld   $51
              9feb 0007  ld   $07
              9fec 0088  ld   $88
              9fed 0029  ld   $29
              9fee 0084  ld   $84
              9fef 0080  ld   $80
              9ff0 00c4  ld   $c4
              9ff1 0080  ld   $80
              9ff2 0057  ld   $57
              9ff3 0071  ld   $71
              9ff4 0007  ld   $07
              9ff5 0088  ld   $88
              9ff6 0014  ld   $14
              9ff7 00ed  ld   $ed
              9ff8 00a5  ld   $a5
              9ff9 00ad  ld   $ad
              9ffa 00af  ld   $af
              9ffb fe00  bra  ac          ;+-----------------------------------+
              9ffc fcfd  bra  $9ffd       ;|                                   |
              9ffd 1418  ld   $18,y       ;| Trampoline for page $9f00 lookups |
              9ffe e006  jmp  y,$06       ;|                                   |
              9fff c218  st   [$18]       ;+-----------------------------------+
              a000 00ac  ld   $ac
              a001 00ed  ld   $ed
              a002 00a5  ld   $a5
              a003 00ad  ld   $ad
              a004 00a9  ld   $a9
              a005 00a8  ld   $a8
              a006 00f2  ld   $f2
              a007 00af  ld   $af
              a008 00ac  ld   $ac
              a009 00af  ld   $af
              a00a 00a3  ld   $a3
              a00b 0071  ld   $71
              a00c 0008  ld   $08
              a00d 0088  ld   $88
              a00e 00ae  ld   $ae
              a00f 00a5  ld   $a5
              a010 00ac  ld   $ac
              a011 0068  ld   $68
              a012 0083  ld   $83
              a013 0008  ld   $08
              a014 0068  ld   $68
              a015 009d  ld   $9d
              a016 0008  ld   $08
              a017 0071  ld   $71
              a018 0007  ld   $07
              a019 0088  ld   $88
              a01a 0060  ld   $60
              a01b 0076  ld   $76
              a01c 00b4  ld   $b4
              a01d 00af  ld   $af
              a01e 00ae  ld   $ae
              a01f 0076  ld   $76
              a020 008d  ld   $8d
              a021 0076  ld   $76
              a022 008b  ld   $8b
              a023 0051  ld   $51
              a024 0007  ld   $07
              a025 0088  ld   $88
              a026 0019  ld   $19
              a027 00b8  ld   $b8
              a028 00a4  ld   $a4
              a029 00ae  ld   $ae
              a02a 00b2  ld   $b2
              a02b 00f2  ld   $f2
              a02c 00b3  ld   $b3
              a02d 00b5  ld   $b5
              a02e 00f3  ld   $f3
              a02f 00a2  ld   $a2
              a030 00a1  ld   $a1
              a031 00ee  ld   $ee
              a032 00a7  ld   $a7
              a033 00b3  ld   $b3
              a034 00e4  ld   $e4
              a035 00ae  ld   $ae
              a036 00b2  ld   $b2
              a037 00eb  ld   $eb
              a038 00a5  ld   $a5
              a039 00a5  ld   $a5
              a03a 00b0  ld   $b0
              a03b 0051  ld   $51
              a03c 0007  ld   $07
              a03d 0088  ld   $88
              a03e 0039  ld   $39
              a03f 0081  ld   $81
              a040 00c1  ld   $c1
              a041 004f  ld   $4f
              a042 007f  ld   $7f
              a043 000f  ld   $0f
              a044 002f  ld   $2f
              a045 0000  ld   $00
              a046 0051  ld   $51
              a047 0006  ld   $06
              a048 0088  ld   $88
              a049 0029  ld   $29
              a04a 00c2  ld   $c2
              a04b 000c  ld   $0c
              a04c 0082  ld   $82
              a04d 0057  ld   $57
              a04e 008c  ld   $8c
              a04f 006a  ld   $6a
              a050 008c  ld   $8c
              a051 0042  ld   $42
              a052 00ae  ld   $ae
              a053 00a5  ld   $a5
              a054 00a8  ld   $a8
              a055 00b4  ld   $b4
              a056 0060  ld   $60
              a057 00ae  ld   $ae
              a058 00a5  ld   $a5
              a059 00a8  ld   $a8
              a05a 00b4  ld   $b4
              a05b 004f  ld   $4f
              a05c 007e  ld   $7e
              a05d 001e  ld   $1e
              a05e 0035  ld   $35
              a05f 008c  ld   $8c
              a060 0027  ld   $27
              a061 0051  ld   $51
              a062 0007  ld   $07
              a063 0088  ld   $88
              a064 0009  ld   $09
              a065 008b  ld   $8b
              a066 00fe  ld   $fe
              a067 00e4  ld   $e4
              a068 00af  ld   $af
              a069 00ad  ld   $ad
              a06a 00f2  ld   $f2
              a06b 00af  ld   $af
              a06c 00e4  ld   $e4
              a06d 00ae  ld   $ae
              a06e 00a1  ld   $a1
              a06f 00dc  ld   $dc
              a070 00de  ld   $de
              a071 009c  ld   $9c
              a072 00dd  ld   $dd
              a073 009c  ld   $9c
              a074 00de  ld   $de
              a075 00dd  ld   $dd
              a076 009e  ld   $9e
              a077 00c3  ld   $c3
              a078 00dd  ld   $dd
              a079 00cf  ld   $cf
              a07a 00ca  ld   $ca
              a07b 00cd  ld   $cd
              a07c 00cb  ld   $cb
              a07d 0000  ld   $00
              a07e 0047  ld   $47
              a07f 009d  ld   $9d
              a080 00ad  ld   $ad
              a081 00a5  ld   $a5
              a082 00ad  ld   $ad
              a083 00af  ld   $af
              a084 00ac  ld   $ac
              a085 0076  ld   $76
              a086 009d  ld   $9d
              a087 00ad  ld   $ad
              a088 00a5  ld   $a5
              a089 00ad  ld   $ad
              a08a 00a9  ld   $a9
              a08b 00a8  ld   $a8
              a08c 00e6  ld   $e6
              a08d 00a6  ld   $a6
              a08e 00af  ld   $af
              a08f 0060  ld   $60
              a090 008c  ld   $8c
              a091 0020  ld   $20
              a092 00af  ld   $af
              a093 00b4  ld   $b4
              a094 00b5  ld   $b5
              a095 00a1  ld   $a1
              a096 00f2  ld   $f2
              a097 00ac  ld   $ac
              a098 00a3  ld   $a3
              a099 00f2  ld   $f2
              a09a 00a3  ld   $a3
              a09b 00b3  ld   $b3
              a09c 0060  ld   $60
              a09d 008c  ld   $8c
              a09e 0020  ld   $20
              a09f 00ac  ld   $ac
              a0a0 00a5  ld   $a5
              a0a1 00a4  ld   $a4
              a0a2 00ee  ld   $ee
              a0a3 00b5  ld   $b5
              a0a4 00b2  ld   $b2
              a0a5 0060  ld   $60
              a0a6 00ae  ld   $ae
              a0a7 00b5  ld   $b5
              a0a8 00b2  ld   $b2
              a0a9 00f4  ld   $f4
              a0aa 00b3  ld   $b3
              a0ab 00a9  ld   $a9
              a0ac 00ac  ld   $ac
              a0ad 0060  ld   $60
              a0ae 008c  ld   $8c
              a0af 0020  ld   $20
              a0b0 00b4  ld   $b4
              a0b1 00b3  ld   $b3
              a0b2 00a9  ld   $a9
              a0b3 00ac  ld   $ac
              a0b4 007a  ld   $7a
              a0b5 007e  ld   $7e
              a0b6 009a  ld   $9a
              a0b7 0022  ld   $22
              a0b8 0020  ld   $20
              a0b9 0000  ld   $00
              a0ba 0060  ld   $60
              a0bb 0003  ld   $03
              a0bc 00bf  ld   $bf
              a0bd 0060  ld   $60
              a0be 0003  ld   $03
              a0bf 00bf  ld   $bf
              a0c0 001f  ld   $1f
              a0c1 00ee  ld   $ee
              a0c2 0000  ld   $00
              a0c3 0000  ld   $00
              a0c4 0020  ld   $20
              a0c5 00b1  ld   $b1
              a0c6 00e7  ld   $e7
              a0c7 00e8  ld   $e8
              a0c8 00e8  ld   $e8
              a0c9 00b5  ld   $b5
              a0ca 004f  ld   $4f
              a0cb 0085  ld   $85
              a0cc 00da  ld   $da
              a0cd 00b5  ld   $b5
              a0ce 0087  ld   $87
              a0cf 0085  ld   $85
              a0d0 00db  ld   $db
              a0d1 00b4  ld   $b4
              a0d2 004e  ld   $4e
              a0d3 0098  ld   $98
              a0d4 00d5  ld   $d5
              a0d5 0086  ld   $86
              a0d6 00b0  ld   $b0
              a0d7 0009  ld   $09
              a0d8 00b1  ld   $b1
              a0d9 00da  ld   $da
              a0da 0020  ld   $20
              a0db 00c9  ld   $c9
              a0dc 00e3  ld   $e3
              a0dd 00c8  ld   $c8
              a0de 004c  ld   $4c
              a0df 000f  ld   $0f
              a0e0 00ee  ld   $ee
              a0e1 00a9  ld   $a9
              a0e2 00ff  ld   $ff
              a0e3 0085  ld   $85
              a0e4 00d5  ld   $d5
              a0e5 0060  ld   $60
              a0e6 00e8  ld   $e8
              a0e7 00a9  ld   $a9
              a0e8 0000  ld   $00
              a0e9 0095  ld   $95
              a0ea 0088  ld   $88
              a0eb 0095  ld   $95
              a0ec 00a8  ld   $a8
              a0ed 00b5  ld   $b5
              a0ee 0087  ld   $87
              a0ef 0038  ld   $38
              a0f0 00f5  ld   $f5
              a0f1 004f  ld   $4f
              a0f2 0095  ld   $95
              a0f3 0050  ld   $50
              a0f4 004c  ld   $4c
              a0f5 0023  ld   $23
              a0f6 00e8  ld   $e8
              a0f7 00ff  ld   $ff
              a0f8 0020  ld   $20
              a0f9 0015  ld   $15
              a0fa 00e7  ld   $e7
              a0fb fe00  bra  ac          ;+-----------------------------------+
              a0fc fcfd  bra  $a0fd       ;|                                   |
              a0fd 1418  ld   $18,y       ;| Trampoline for page $a000 lookups |
              a0fe e006  jmp  y,$06       ;|                                   |
              a0ff c218  st   [$18]       ;+-----------------------------------+
              a100 00a5  ld   $a5
              a101 00cf  ld   $cf
              a102 00d0  ld   $d0
              a103 0028  ld   $28
              a104 00a5  ld   $a5
              a105 00ce  ld   $ce
              a106 0060  ld   $60
              a107 0020  ld   $20
              a108 0034  ld   $34
              a109 00ee  ld   $ee
              a10a 00a4  ld   $a4
              a10b 00c8  ld   $c8
              a10c 00c9  ld   $c9
              a10d 0030  ld   $30
              a10e 00b0  ld   $b0
              a10f 0021  ld   $21
              a110 00c0  ld   $c0
              a111 0028  ld   $28
              a112 00b0  ld   $b0
              a113 001d  ld   $1d
              a114 0060  ld   $60
              a115 00ea  ld   $ea
              a116 00ea  ld   $ea
              a117 0020  ld   $20
              a118 0034  ld   $34
              a119 00ee  ld   $ee
              a11a 0060  ld   $60
              a11b 00ea  ld   $ea
              a11c 008a  ld   $8a
              a11d 00a2  ld   $a2
              a11e 0001  ld   $01
              a11f 00b4  ld   $b4
              a120 00ce  ld   $ce
              a121 0094  ld   $94
              a122 004c  ld   $4c
              a123 00b4  ld   $b4
              a124 0048  ld   $48
              a125 0094  ld   $94
              a126 00ca  ld   $ca
              a127 00ca  ld   $ca
              a128 00f0  ld   $f0
              a129 00f5  ld   $f5
              a12a 00aa  ld   $aa
              a12b 0060  ld   $60
              a12c 00a0  ld   $a0
              a12d 0077  ld   $77
              a12e 004c  ld   $4c
              a12f 00e0  ld   $e0
              a130 00e3  ld   $e3
              a131 00a0  ld   $a0
              a132 007b  ld   $7b
              a133 00d0  ld   $d0
              a134 00f9  ld   $f9
              a135 0020  ld   $20
              a136 0054  ld   $54
              a137 00e2  ld   $e2
              a138 00a5  ld   $a5
              a139 00da  ld   $da
              a13a 00d0  ld   $d0
              a13b 0007  ld   $07
              a13c 00a5  ld   $a5
              a13d 00db  ld   $db
              a13e 00d0  ld   $d0
              a13f 0003  ld   $03
              a140 004c  ld   $4c
              a141 007e  ld   $7e
              a142 00e7  ld   $e7
              a143 0006  ld   $06
              a144 00ce  ld   $ce
              a145 0026  ld   $26
              a146 00cf  ld   $cf
              a147 0026  ld   $26
              a148 0046  ld   $46
              a149 0026  ld   $26
              a14a 0047  ld   $47
              a14b 00a5  ld   $a5
              a14c 0046  ld   $46
              a14d 00c5  ld   $c5
              a14e 00da  ld   $da
              a14f 00a5  ld   $a5
              a150 0047  ld   $47
              a151 00e5  ld   $e5
              a152 00db  ld   $db
              a153 0090  ld   $90
              a154 000a  ld   $0a
              a155 0085  ld   $85
              a156 0047  ld   $47
              a157 00a5  ld   $a5
              a158 0046  ld   $46
              a159 00e5  ld   $e5
              a15a 00da  ld   $da
              a15b 0085  ld   $85
              a15c 0046  ld   $46
              a15d 00e6  ld   $e6
              a15e 00ce  ld   $ce
              a15f 0088  ld   $88
              a160 00d0  ld   $d0
              a161 00e1  ld   $e1
              a162 0060  ld   $60
              a163 00ff  ld   $ff
              a164 00ff  ld   $ff
              a165 00ff  ld   $ff
              * 6 times
              a169 0020  ld   $20
              a16a 0015  ld   $15
              a16b 00e7  ld   $e7
              a16c 006c  ld   $6c
              a16d 00ce  ld   $ce
              a16e 0000  ld   $00
              a16f 00a5  ld   $a5
              a170 004c  ld   $4c
              a171 00d0  ld   $d0
              a172 0002  ld   $02
              a173 00c6  ld   $c6
              a174 004d  ld   $4d
              a175 00c6  ld   $c6
              a176 004c  ld   $4c
              a177 00a5  ld   $a5
              a178 0048  ld   $48
              a179 00d0  ld   $d0
              a17a 0002  ld   $02
              a17b 00c6  ld   $c6
              a17c 0049  ld   $49
              a17d 00c6  ld   $c6
              a17e 0048  ld   $48
              a17f 00a0  ld   $a0
              a180 0000  ld   $00
              a181 00b1  ld   $b1
              a182 004c  ld   $4c
              a183 0091  ld   $91
              a184 0048  ld   $48
              a185 00a5  ld   $a5
              a186 00ca  ld   $ca
              a187 00c5  ld   $c5
              a188 004c  ld   $4c
              a189 00a5  ld   $a5
              a18a 00cb  ld   $cb
              a18b 00e5  ld   $e5
              a18c 004d  ld   $4d
              a18d 0090  ld   $90
              a18e 00e0  ld   $e0
              a18f 004c  ld   $4c
              a190 0053  ld   $53
              a191 00ee  ld   $ee
              a192 00c9  ld   $c9
              a193 0028  ld   $28
              a194 00b0  ld   $b0
              a195 009b  ld   $9b
              a196 00a8  ld   $a8
              a197 00a5  ld   $a5
              a198 00c8  ld   $c8
              a199 0060  ld   $60
              a19a 00ea  ld   $ea
              a19b 00ea  ld   $ea
              a19c 0098  ld   $98
              a19d 00aa  ld   $aa
              a19e 00a0  ld   $a0
              a19f 006e  ld   $6e
              a1a0 0020  ld   $20
              a1a1 00c4  ld   $c4
              a1a2 00e3  ld   $e3
              a1a3 008a  ld   $8a
              a1a4 00a8  ld   $a8
              a1a5 0020  ld   $20
              a1a6 00c4  ld   $c4
              a1a7 00e3  ld   $e3
              a1a8 00a0  ld   $a0
              a1a9 0072  ld   $72
              a1aa 004c  ld   $4c
              a1ab 00c4  ld   $c4
              a1ac 00e3  ld   $e3
              a1ad 0020  ld   $20
              a1ae 0015  ld   $15
              a1af 00e7  ld   $e7
              a1b0 0006  ld   $06
              a1b1 00ce  ld   $ce
              a1b2 0026  ld   $26
              a1b3 00cf  ld   $cf
              a1b4 0030  ld   $30
              a1b5 00fa  ld   $fa
              a1b6 00b0  ld   $b0
              a1b7 00dc  ld   $dc
              a1b8 00d0  ld   $d0
              a1b9 0004  ld   $04
              a1ba 00c5  ld   $c5
              a1bb 00ce  ld   $ce
              a1bc 00b0  ld   $b0
              a1bd 00d6  ld   $d6
              a1be 0060  ld   $60
              a1bf 0020  ld   $20
              a1c0 0015  ld   $15
              a1c1 00e7  ld   $e7
              a1c2 00b1  ld   $b1
              a1c3 00ce  ld   $ce
              a1c4 0094  ld   $94
              a1c5 00a7  ld   $a7
              a1c6 004c  ld   $4c
              a1c7 0008  ld   $08
              a1c8 00e7  ld   $e7
              a1c9 00ef  ld   $ef
              a1ca 0000  ld   $00
              a1cb 0000  ld   $00
              a1cc 0020  ld   $20
              a1cd 0034  ld   $34
              a1ce 00ee  ld   $ee
              a1cf 00a5  ld   $a5
              a1d0 00ce  ld   $ce
              a1d1 0048  ld   $48
              a1d2 0020  ld   $20
              a1d3 0015  ld   $15
              a1d4 00e7  ld   $e7
              a1d5 0068  ld   $68
              a1d6 0091  ld   $91
              a1d7 00ce  ld   $ce
              a1d8 0060  ld   $60
              a1d9 00ff  ld   $ff
              a1da 00ff  ld   $ff
              a1db 00ff  ld   $ff
              a1dc 0020  ld   $20
              a1dd 006c  ld   $6c
              a1de 00ee  ld   $ee
              a1df 00a5  ld   $a5
              a1e0 00ce  ld   $ce
              a1e1 0085  ld   $85
              a1e2 0046  ld   $46
              a1e3 00a5  ld   $a5
              a1e4 00cf  ld   $cf
              a1e5 0085  ld   $85
              a1e6 0047  ld   $47
              a1e7 004c  ld   $4c
              a1e8 0044  ld   $44
              a1e9 00e2  ld   $e2
              a1ea 0020  ld   $20
              a1eb 00e4  ld   $e4
              a1ec 00ee  ld   $ee
              a1ed 004c  ld   $4c
              a1ee 0034  ld   $34
              a1ef 00e1  ld   $e1
              a1f0 0020  ld   $20
              a1f1 00e4  ld   $e4
              a1f2 00ee  ld   $ee
              a1f3 00b4  ld   $b4
              a1f4 0088  ld   $88
              a1f5 00b5  ld   $b5
              a1f6 0050  ld   $50
              a1f7 0069  ld   $69
              a1f8 00fe  ld   $fe
              a1f9 00b0  ld   $b0
              a1fa 0001  ld   $01
              a1fb fe00  bra  ac          ;+-----------------------------------+
              a1fc fcfd  bra  $a1fd       ;|                                   |
              a1fd 1418  ld   $18,y       ;| Trampoline for page $a100 lookups |
              a1fe e006  jmp  y,$06       ;|                                   |
              a1ff c218  st   [$18]       ;+-----------------------------------+
              a200 0088  ld   $88
              a201 0085  ld   $85
              a202 00da  ld   $da
              a203 0084  ld   $84
              a204 00db  ld   $db
              a205 0018  ld   $18
              a206 0065  ld   $65
              a207 00ce  ld   $ce
              a208 0095  ld   $95
              a209 0050  ld   $50
              a20a 0098  ld   $98
              a20b 0065  ld   $65
              a20c 00cf  ld   $cf
              a20d 0095  ld   $95
              a20e 0088  ld   $88
              a20f 00a0  ld   $a0
              a210 0000  ld   $00
              a211 00b5  ld   $b5
              a212 0050  ld   $50
              a213 00d1  ld   $d1
              a214 00da  ld   $da
              a215 00c8  ld   $c8
              a216 00b5  ld   $b5
              a217 0088  ld   $88
              a218 00f1  ld   $f1
              a219 00da  ld   $da
              a21a 00b0  ld   $b0
              a21b 0080  ld   $80
              a21c 004c  ld   $4c
              a21d 0023  ld   $23
              a21e 00e8  ld   $e8
              a21f 0020  ld   $20
              a220 0015  ld   $15
              a221 00e7  ld   $e7
              a222 00a5  ld   $a5
              a223 004e  ld   $4e
              a224 0020  ld   $20
              a225 0008  ld   $08
              a226 00e7  ld   $e7
              a227 00a5  ld   $a5
              a228 004f  ld   $4f
              a229 00d0  ld   $d0
              a22a 0004  ld   $04
              a22b 00c5  ld   $c5
              a22c 004e  ld   $4e
              a22d 0069  ld   $69
              a22e 0000  ld   $00
              a22f 0029  ld   $29
              a230 007f  ld   $7f
              a231 0085  ld   $85
              a232 004f  ld   $4f
              a233 0095  ld   $95
              a234 00a8  ld   $a8
              a235 00a0  ld   $a0
              a236 0011  ld   $11
              a237 00a5  ld   $a5
              a238 004f  ld   $4f
              a239 000a  ld   $0a
              a23a 0018  ld   $18
              a23b 0069  ld   $69
              a23c 0040  ld   $40
              a23d 000a  ld   $0a
              a23e 0026  ld   $26
              a23f 004e  ld   $4e
              a240 0026  ld   $26
              a241 004f  ld   $4f
              a242 0088  ld   $88
              a243 00d0  ld   $d0
              a244 00f2  ld   $f2
              a245 00a5  ld   $a5
              a246 00ce  ld   $ce
              a247 0020  ld   $20
              a248 0008  ld   $08
              a249 00e7  ld   $e7
              a24a 00a5  ld   $a5
              a24b 00cf  ld   $cf
              a24c 0095  ld   $95
              a24d 00a8  ld   $a8
              a24e 004c  ld   $4c
              a24f 007a  ld   $7a
              a250 00e2  ld   $e2
              a251 0020  ld   $20
              a252 0015  ld   $15
              a253 00e7  ld   $e7
              a254 00a4  ld   $a4
              a255 00ce  ld   $ce
              a256 00c4  ld   $c4
              a257 004c  ld   $4c
              a258 00a5  ld   $a5
              a259 00cf  ld   $cf
              a25a 00e5  ld   $e5
              a25b 004d  ld   $4d
              a25c 0090  ld   $90
              a25d 001f  ld   $1f
              a25e 0084  ld   $84
              a25f 0048  ld   $48
              a260 00a5  ld   $a5
              a261 00cf  ld   $cf
              a262 0085  ld   $85
              a263 0049  ld   $49
              a264 004c  ld   $4c
              a265 00b6  ld   $b6
              a266 00ee  ld   $ee
              a267 0020  ld   $20
              a268 0015  ld   $15
              a269 00e7  ld   $e7
              a26a 00a4  ld   $a4
              a26b 00ce  ld   $ce
              a26c 00c4  ld   $c4
              a26d 00ca  ld   $ca
              a26e 00a5  ld   $a5
              a26f 00cf  ld   $cf
              a270 00e5  ld   $e5
              a271 00cb  ld   $cb
              a272 00b0  ld   $b0
              a273 0009  ld   $09
              a274 0084  ld   $84
              a275 004a  ld   $4a
              a276 00a5  ld   $a5
              a277 00cf  ld   $cf
              a278 0085  ld   $85
              a279 004b  ld   $4b
              a27a 004c  ld   $4c
              a27b 00b7  ld   $b7
              a27c 00e5  ld   $e5
              a27d 004c  ld   $4c
              a27e 00cb  ld   $cb
              a27f 00ee  ld   $ee
              a280 00ea  ld   $ea
              a281 00ea  ld   $ea
              a282 00ea  ld   $ea
              a283 00ea  ld   $ea
              a284 0020  ld   $20
              a285 00c9  ld   $c9
              a286 00ef  ld   $ef
              a287 0020  ld   $20
              a288 0071  ld   $71
              a289 00e1  ld   $e1
              a28a 004c  ld   $4c
              a28b 00bf  ld   $bf
              a28c 00ef  ld   $ef
              a28d 0020  ld   $20
              a28e 0003  ld   $03
              a28f 00ee  ld   $ee
              a290 00a9  ld   $a9
              a291 00ff  ld   $ff
              a292 0085  ld   $85
              a293 00c8  ld   $c8
              a294 00a9  ld   $a9
              a295 0074  ld   $74
              a296 008d  ld   $8d
              a297 0000  ld   $00
              a298 0002  ld   $02
              a299 0060  ld   $60
              a29a 0020  ld   $20
              a29b 0036  ld   $36
              a29c 00e7  ld   $e7
              a29d 00e8  ld   $e8
              a29e 0020  ld   $20
              a29f 0036  ld   $36
              a2a0 00e7  ld   $e7
              a2a1 00b5  ld   $b5
              a2a2 0050  ld   $50
              a2a3 0060  ld   $60
              a2a4 00a9  ld   $a9
              a2a5 0000  ld   $00
              a2a6 0085  ld   $85
              a2a7 004a  ld   $4a
              a2a8 0085  ld   $85
              a2a9 004c  ld   $4c
              a2aa 00a9  ld   $a9
              a2ab 0008  ld   $08
              a2ac 0085  ld   $85
              a2ad 004b  ld   $4b
              a2ae 00a9  ld   $a9
              a2af 0010  ld   $10
              a2b0 0085  ld   $85
              a2b1 004d  ld   $4d
              a2b2 004c  ld   $4c
              a2b3 00ad  ld   $ad
              a2b4 00e5  ld   $e5
              a2b5 00d5  ld   $d5
              a2b6 0088  ld   $88
              a2b7 00d0  ld   $d0
              a2b8 0001  ld   $01
              a2b9 0018  ld   $18
              a2ba 004c  ld   $4c
              a2bb 0002  ld   $02
              a2bc 00e1  ld   $e1
              a2bd 0020  ld   $20
              a2be 00b7  ld   $b7
              a2bf 00e5  ld   $e5
              a2c0 004c  ld   $4c
              a2c1 0036  ld   $36
              a2c2 00e8  ld   $e8
              a2c3 0020  ld   $20
              a2c4 00b7  ld   $b7
              a2c5 00e5  ld   $e5
              a2c6 004c  ld   $4c
              a2c7 005b  ld   $5b
              a2c8 00e8  ld   $e8
              a2c9 00e0  ld   $e0
              a2ca 0080  ld   $80
              a2cb 00d0  ld   $d0
              a2cc 0001  ld   $01
              a2cd 0088  ld   $88
              a2ce 004c  ld   $4c
              a2cf 000c  ld   $0c
              a2d0 00e0  ld   $e0
              a2d1 00ff  ld   $ff
              a2d2 0000  ld   $00
              a2d3 0000  ld   $00
              a2d4 00d8  ld   $d8
              a2d5 0058  ld   $58
              a2d6 00a0  ld   $a0
              a2d7 007f  ld   $7f
              a2d8 008c  ld   $8c
              a2d9 0012  ld   $12
              a2da 00d0  ld   $d0
              a2db 00a9  ld   $a9
              a2dc 00a7  ld   $a7
              a2dd 008d  ld   $8d
              a2de 0011  ld   $11
              a2df 00d0  ld   $d0
              a2e0 008d  ld   $8d
              a2e1 0013  ld   $13
              a2e2 00d0  ld   $d0
              a2e3 00c9  ld   $c9
              a2e4 00df  ld   $df
              a2e5 00f0  ld   $f0
              a2e6 0013  ld   $13
              a2e7 00c9  ld   $c9
              a2e8 009b  ld   $9b
              a2e9 00f0  ld   $f0
              a2ea 0003  ld   $03
              a2eb 00c8  ld   $c8
              a2ec 0010  ld   $10
              a2ed 000f  ld   $0f
              a2ee 00a9  ld   $a9
              a2ef 00dc  ld   $dc
              a2f0 0020  ld   $20
              a2f1 00ef  ld   $ef
              a2f2 00ff  ld   $ff
              a2f3 00a9  ld   $a9
              a2f4 008d  ld   $8d
              a2f5 0020  ld   $20
              a2f6 00ef  ld   $ef
              a2f7 00ff  ld   $ff
              a2f8 00a0  ld   $a0
              a2f9 0001  ld   $01
              a2fa 0088  ld   $88
              a2fb fe00  bra  ac          ;+-----------------------------------+
              a2fc fcfd  bra  $a2fd       ;|                                   |
              a2fd 1418  ld   $18,y       ;| Trampoline for page $a200 lookups |
              a2fe e006  jmp  y,$06       ;|                                   |
              a2ff c218  st   [$18]       ;+-----------------------------------+
              a300 0030  ld   $30
              a301 00f6  ld   $f6
              a302 00ad  ld   $ad
              a303 0011  ld   $11
              a304 00d0  ld   $d0
              a305 0010  ld   $10
              a306 00fb  ld   $fb
              a307 00ad  ld   $ad
              a308 0010  ld   $10
              a309 00d0  ld   $d0
              a30a 0099  ld   $99
              a30b 0000  ld   $00
              a30c 0002  ld   $02
              a30d 0020  ld   $20
              a30e 00ef  ld   $ef
              a30f 00ff  ld   $ff
              a310 00c9  ld   $c9
              a311 008d  ld   $8d
              a312 00d0  ld   $d0
              a313 00d4  ld   $d4
              a314 00a0  ld   $a0
              a315 00ff  ld   $ff
              a316 00a9  ld   $a9
              a317 0000  ld   $00
              a318 00aa  ld   $aa
              a319 000a  ld   $0a
              a31a 0085  ld   $85
              a31b 003b  ld   $3b
              a31c 00c8  ld   $c8
              a31d 00b9  ld   $b9
              a31e 0000  ld   $00
              a31f 0002  ld   $02
              a320 00c9  ld   $c9
              a321 008d  ld   $8d
              a322 00f0  ld   $f0
              a323 00d4  ld   $d4
              a324 00c9  ld   $c9
              a325 00ae  ld   $ae
              a326 0090  ld   $90
              a327 00f4  ld   $f4
              a328 00f0  ld   $f0
              a329 00f0  ld   $f0
              a32a 00c9  ld   $c9
              a32b 00ba  ld   $ba
              a32c 00f0  ld   $f0
              a32d 00eb  ld   $eb
              a32e 00c9  ld   $c9
              a32f 00d2  ld   $d2
              a330 00f0  ld   $f0
              a331 003b  ld   $3b
              a332 0086  ld   $86
              a333 0038  ld   $38
              a334 0086  ld   $86
              a335 0039  ld   $39
              a336 0084  ld   $84
              a337 003a  ld   $3a
              a338 00b9  ld   $b9
              a339 0000  ld   $00
              a33a 0002  ld   $02
              a33b 0049  ld   $49
              a33c 00b0  ld   $b0
              a33d 00c9  ld   $c9
              a33e 000a  ld   $0a
              a33f 0090  ld   $90
              a340 0006  ld   $06
              a341 0069  ld   $69
              a342 0088  ld   $88
              a343 00c9  ld   $c9
              a344 00fa  ld   $fa
              a345 0090  ld   $90
              a346 0011  ld   $11
              a347 000a  ld   $0a
              a348 000a  ld   $0a
              a349 000a  ld   $0a
              a34a 000a  ld   $0a
              a34b 00a2  ld   $a2
              a34c 0004  ld   $04
              a34d 000a  ld   $0a
              a34e 0026  ld   $26
              a34f 0038  ld   $38
              a350 0026  ld   $26
              a351 0039  ld   $39
              a352 00ca  ld   $ca
              a353 00d0  ld   $d0
              a354 00f8  ld   $f8
              a355 00c8  ld   $c8
              a356 00d0  ld   $d0
              a357 00e0  ld   $e0
              a358 00c4  ld   $c4
              a359 003a  ld   $3a
              a35a 00f0  ld   $f0
              a35b 0097  ld   $97
              a35c 0024  ld   $24
              a35d 003b  ld   $3b
              a35e 0050  ld   $50
              a35f 0010  ld   $10
              a360 00a5  ld   $a5
              a361 0038  ld   $38
              a362 0081  ld   $81
              a363 0036  ld   $36
              a364 00e6  ld   $e6
              a365 0036  ld   $36
              a366 00d0  ld   $d0
              a367 00b5  ld   $b5
              a368 00e6  ld   $e6
              a369 0037  ld   $37
              a36a 004c  ld   $4c
              a36b 0044  ld   $44
              a36c 00ff  ld   $ff
              a36d 006c  ld   $6c
              a36e 0034  ld   $34
              a36f 0000  ld   $00
              a370 0030  ld   $30
              a371 002b  ld   $2b
              a372 00a2  ld   $a2
              a373 0002  ld   $02
              a374 00b5  ld   $b5
              a375 0037  ld   $37
              a376 0095  ld   $95
              a377 0035  ld   $35
              a378 0095  ld   $95
              a379 0033  ld   $33
              a37a 00ca  ld   $ca
              a37b 00d0  ld   $d0
              a37c 00f7  ld   $f7
              a37d 00d0  ld   $d0
              a37e 0014  ld   $14
              a37f 00a9  ld   $a9
              a380 008d  ld   $8d
              a381 0020  ld   $20
              a382 00ef  ld   $ef
              a383 00ff  ld   $ff
              a384 00a5  ld   $a5
              a385 0035  ld   $35
              a386 0020  ld   $20
              a387 00dc  ld   $dc
              a388 00ff  ld   $ff
              a389 00a5  ld   $a5
              a38a 0034  ld   $34
              a38b 0020  ld   $20
              a38c 00dc  ld   $dc
              a38d 00ff  ld   $ff
              a38e 00a9  ld   $a9
              a38f 00ba  ld   $ba
              a390 0020  ld   $20
              a391 00ef  ld   $ef
              a392 00ff  ld   $ff
              a393 00a9  ld   $a9
              a394 00a0  ld   $a0
              a395 0020  ld   $20
              a396 00ef  ld   $ef
              a397 00ff  ld   $ff
              a398 00a1  ld   $a1
              a399 0034  ld   $34
              a39a 0020  ld   $20
              a39b 00dc  ld   $dc
              a39c 00ff  ld   $ff
              a39d 0086  ld   $86
              a39e 003b  ld   $3b
              a39f 00a5  ld   $a5
              a3a0 0034  ld   $34
              a3a1 00c5  ld   $c5
              a3a2 0038  ld   $38
              a3a3 00a5  ld   $a5
              a3a4 0035  ld   $35
              a3a5 00e5  ld   $e5
              a3a6 0039  ld   $39
              a3a7 00b0  ld   $b0
              a3a8 00c1  ld   $c1
              a3a9 00e6  ld   $e6
              a3aa 0034  ld   $34
              a3ab 00d0  ld   $d0
              a3ac 0002  ld   $02
              a3ad 00e6  ld   $e6
              a3ae 0035  ld   $35
              a3af 00a5  ld   $a5
              a3b0 0034  ld   $34
              a3b1 0029  ld   $29
              a3b2 0007  ld   $07
              a3b3 0010  ld   $10
              a3b4 00c8  ld   $c8
              a3b5 0048  ld   $48
              a3b6 004a  ld   $4a
              a3b7 004a  ld   $4a
              a3b8 004a  ld   $4a
              a3b9 004a  ld   $4a
              a3ba 0020  ld   $20
              a3bb 00e5  ld   $e5
              a3bc 00ff  ld   $ff
              a3bd 0068  ld   $68
              a3be 0029  ld   $29
              a3bf 000f  ld   $0f
              a3c0 0009  ld   $09
              a3c1 00b0  ld   $b0
              a3c2 00c9  ld   $c9
              a3c3 00ba  ld   $ba
              a3c4 0090  ld   $90
              a3c5 0002  ld   $02
              a3c6 0069  ld   $69
              a3c7 0006  ld   $06
              a3c8 008d  ld   $8d
              a3c9 0012  ld   $12
              a3ca 00d0  ld   $d0
              a3cb 002c  ld   $2c
              a3cc 0012  ld   $12
              a3cd 00d0  ld   $d0
              a3ce 00d0  ld   $d0
              a3cf 00fb  ld   $fb
              a3d0 0060  ld   $60
              a3d1 0000  ld   $00
              a3d2 0000  ld   $00
              a3d3 0000  ld   $00
              * 5 times
              a3d6 00ff  ld   $ff
              a3d7 00db  ld   $db
              a3d8 005e  ld   $5e
              a3d9 0000  ld   $00
              a3da 0000  ld   $00         ;End of Apps/Apple-1/Apple-1_v2.gt1, size 7559
                                          ;+-----------------------------------+
                                          ;| Apps/MSBASIC/MSBASIC_v1.gt1       |
                                          ;+-----------------------------------+
              a3db dc41  st   $41,[y,x++] ;'A'
              a3dc dc70  st   $70,[y,x++] ;'p'
              a3dd dc70  st   $70,[y,x++] ;'p'
              a3de dc6c  st   $6c,[y,x++] ;'l'
              a3df dc65  st   $65,[y,x++] ;'e'
              a3e0 dc31  st   $31,[y,x++] ;'1'
              a3e1 dc00  st   $00,[y,x++] ;'\x00'
              a3e2 dc00  st   $00,[y,x++] ;'\x00'
              a3e3 0054  ld   $54
              a3e4 c218  st   [$18]
              a3e5 0086  ld   $86
              a3e6 14e0  ld   $e0,y
              a3e7 e071  jmp  y,$71
              a3e8 c219  st   [$19]
MSBASIC:      a3e9 0002  ld   $02
              a3ea 0000  ld   $00
              a3eb 0012  ld   $12
              a3ec 001a  ld   $1a
              a3ed 0021  ld   $21
              a3ee 00e6  ld   $e6
              a3ef 0038  ld   $38
              a3f0 0035  ld   $35
              a3f1 0053  ld   $53
              a3f2 000b  ld   $0b
              a3f3 0021  ld   $21
              a3f4 000e  ld   $0e
              a3f5 00f3  ld   $f3
              a3f6 0017  ld   $17
              a3f7 0090  ld   $90
              a3f8 0005  ld   $05
              a3f9 0011  ld   $11
              a3fa 0000  ld   $00
              a3fb fe00  bra  ac          ;+-----------------------------------+
              a3fc fcfd  bra  $a3fd       ;|                                   |
              a3fd 1418  ld   $18,y       ;| Trampoline for page $a300 lookups |
              a3fe e006  jmp  y,$06       ;|                                   |
              a3ff c218  st   [$18]       ;+-----------------------------------+
              a400 0024  ld   $24
              a401 00cf  ld   $cf
              a402 0018  ld   $18
              a403 0002  ld   $02
              a404 0018  ld   $18
              a405 00e8  ld   $e8
              a406 0027  ld   $27
              a407 0009  ld   $09
              a408 003e  ld   $3e
              a409 0008  ld   $08
              a40a 0090  ld   $90
              a40b 000d  ld   $0d
              a40c 00e6  ld   $e6
              a40d 0009  ld   $09
              a40e 0051  ld   $51
              a40f 000c  ld   $0c
              a410 00c5  ld   $c5
              a411 0010  ld   $10
              a412 007f  ld   $7f
              a413 000c  ld   $0c
              a414 0093  ld   $93
              a415 000a  ld   $0a
              a416 0093  ld   $93
              a417 0009  ld   $09
              a418 006b  ld   $6b
              a419 0009  ld   $09
              a41a 0016  ld   $16
              a41b 000a  ld   $0a
              a41c 0016  ld   $16
              a41d 0009  ld   $09
              a41e 0076  ld   $76
              a41f 0009  ld   $09
              a420 00c0  ld   $c0
              a421 0009  ld   $09
              a422 0029  ld   $29
              a423 000a  ld   $0a
              a424 0025  ld   $25
              a425 0009  ld   $09
              a426 0039  ld   $39
              a427 000a  ld   $0a
              a428 0071  ld   $71
              a429 0018  ld   $18
              a42a 00ff  ld   $ff
              a42b 0031  ld   $31
              a42c 00ff  ld   $ff
              a42d 002f  ld   $2f
              a42e 006d  ld   $6d
              a42f 000f  ld   $0f
              a430 00ee  ld   $ee
              a431 0013  ld   $13
              a432 0068  ld   $68
              a433 0018  ld   $18
              a434 0078  ld   $78
              a435 000b  ld   $0b
              a436 0051  ld   $51
              a437 0009  ld   $09
              a438 009b  ld   $9b
              a439 0007  ld   $07
              a43a 005d  ld   $5d
              a43b 0007  ld   $07
              a43c 003f  ld   $3f
              a43d 000c  ld   $0c
              a43e 0041  ld   $41
              a43f 0007  ld   $07
              a440 00b1  ld   $b1
              a441 001c  ld   $1c
              a442 0044  ld   $44
              a443 001d  ld   $1d
              a444 00d0  ld   $d0
              a445 001c  ld   $1c
              a446 0038  ld   $38
              a447 0000  ld   $00
              a448 00b8  ld   $b8
              a449 0013  ld   $13
              a44a 00d9  ld   $d9
              a44b 0013  ld   $13
              a44c 00ca  ld   $ca
              a44d 001f  ld   $1f
              a44e 00eb  ld   $eb
              a44f 0020  ld   $20
              a450 0062  ld   $62
              a451 001a  ld   $1a
              a452 0046  ld   $46
              a453 0020  ld   $20
              a454 0040  ld   $40
              a455 0021  ld   $21
              a456 0047  ld   $47
              a457 0021  ld   $21
              a458 0090  ld   $90
              a459 0021  ld   $21
              a45a 00fe  ld   $fe
              a45b 0021  ld   $21
              a45c 004a  ld   $4a
              a45d 0018  ld   $18
              a45e 00b8  ld   $b8
              a45f 0017  ld   $17
              a460 00a1  ld   $a1
              a461 0014  ld   $14
              a462 00e9  ld   $e9
              a463 0017  ld   $17
              a464 00c7  ld   $c7
              a465 0017  ld   $17
              a466 0028  ld   $28
              a467 0017  ld   $17
              a468 003c  ld   $3c
              a469 0017  ld   $17
              a46a 0068  ld   $68
              a46b 0017  ld   $17
              a46c 0073  ld   $73
              a46d 0017  ld   $17
              a46e 0079  ld   $79
              a46f 00e1  ld   $e1
              a470 0018  ld   $18
              a471 0079  ld   $79
              a472 0097  ld   $97
              a473 0018  ld   $18
              a474 007b  ld   $7b
              a475 00a2  ld   $a2
              a476 001a  ld   $1a
              a477 007b  ld   $7b
              a478 0089  ld   $89
              a479 001b  ld   $1b
              a47a 007f  ld   $7f
              a47b 00d3  ld   $d3
              a47c 001f  ld   $1f
              a47d 0050  ld   $50
              a47e 002d  ld   $2d
              a47f 0010  ld   $10
              a480 0046  ld   $46
              a481 002a  ld   $2a
              a482 0010  ld   $10
              a483 007d  ld   $7d
              a484 000c  ld   $0c
              a485 0020  ld   $20
              a486 005a  ld   $5a
              a487 0039  ld   $39
              a488 000f  ld   $0f
              a489 0064  ld   $64
              a48a 005a  ld   $5a
              a48b 0010  ld   $10
              a48c 0045  ld   $45
              a48d 004e  ld   $4e
              a48e 00c4  ld   $c4
              a48f 0046  ld   $46
              a490 004f  ld   $4f
              a491 00d2  ld   $d2
              a492 004e  ld   $4e
              a493 0045  ld   $45
              a494 0058  ld   $58
              a495 00d4  ld   $d4
              a496 0044  ld   $44
              a497 0041  ld   $41
              a498 0054  ld   $54
              a499 00c1  ld   $c1
              a49a 0049  ld   $49
              a49b 004e  ld   $4e
              a49c 0050  ld   $50
              a49d 0055  ld   $55
              a49e 00d4  ld   $d4
              a49f 0044  ld   $44
              a4a0 0049  ld   $49
              a4a1 00cd  ld   $cd
              a4a2 0052  ld   $52
              a4a3 0045  ld   $45
              a4a4 0041  ld   $41
              a4a5 00c4  ld   $c4
              a4a6 004c  ld   $4c
              a4a7 0045  ld   $45
              a4a8 00d4  ld   $d4
              a4a9 0047  ld   $47
              a4aa 004f  ld   $4f
              a4ab 0054  ld   $54
              a4ac 00cf  ld   $cf
              a4ad 0052  ld   $52
              a4ae 0055  ld   $55
              a4af 00ce  ld   $ce
              a4b0 0049  ld   $49
              a4b1 00c6  ld   $c6
              a4b2 0052  ld   $52
              a4b3 0045  ld   $45
              a4b4 0053  ld   $53
              a4b5 0054  ld   $54
              a4b6 004f  ld   $4f
              a4b7 0052  ld   $52
              a4b8 00c5  ld   $c5
              a4b9 0047  ld   $47
              a4ba 004f  ld   $4f
              a4bb 0053  ld   $53
              a4bc 0055  ld   $55
              a4bd 00c2  ld   $c2
              a4be 0052  ld   $52
              a4bf 0045  ld   $45
              a4c0 0054  ld   $54
              a4c1 0055  ld   $55
              a4c2 0052  ld   $52
              a4c3 00ce  ld   $ce
              a4c4 0052  ld   $52
              a4c5 0045  ld   $45
              a4c6 00cd  ld   $cd
              a4c7 0053  ld   $53
              a4c8 0054  ld   $54
              a4c9 004f  ld   $4f
              a4ca 00d0  ld   $d0
              a4cb 004f  ld   $4f
              a4cc 00ce  ld   $ce
              a4cd 0057  ld   $57
              a4ce 0041  ld   $41
              a4cf 0049  ld   $49
              a4d0 00d4  ld   $d4
              a4d1 004c  ld   $4c
              a4d2 004f  ld   $4f
              a4d3 0041  ld   $41
              a4d4 00c4  ld   $c4
              a4d5 0053  ld   $53
              a4d6 0041  ld   $41
              a4d7 0056  ld   $56
              a4d8 00c5  ld   $c5
              a4d9 0056  ld   $56
              a4da 0045  ld   $45
              a4db 0052  ld   $52
              a4dc 0049  ld   $49
              a4dd 0046  ld   $46
              a4de 00d9  ld   $d9
              a4df 0044  ld   $44
              a4e0 0045  ld   $45
              a4e1 00c6  ld   $c6
              a4e2 0050  ld   $50
              a4e3 004f  ld   $4f
              a4e4 004b  ld   $4b
              a4e5 00c5  ld   $c5
              a4e6 0050  ld   $50
              a4e7 0052  ld   $52
              a4e8 0049  ld   $49
              a4e9 004e  ld   $4e
              a4ea 00d4  ld   $d4
              a4eb 0043  ld   $43
              a4ec 004f  ld   $4f
              a4ed 004e  ld   $4e
              a4ee 0003  ld   $03
              a4ef 0000  ld   $00
              a4f0 0000  ld   $00
              a4f1 00d4  ld   $d4
              a4f2 004c  ld   $4c
              a4f3 0049  ld   $49
              a4f4 0053  ld   $53
              a4f5 00d4  ld   $d4
              a4f6 0043  ld   $43
              a4f7 004c  ld   $4c
              a4f8 00d2  ld   $d2
              a4f9 0047  ld   $47
              a4fa 0045  ld   $45
              a4fb fe00  bra  ac          ;+-----------------------------------+
              a4fc fcfd  bra  $a4fd       ;|                                   |
              a4fd 1418  ld   $18,y       ;| Trampoline for page $a400 lookups |
              a4fe e006  jmp  y,$06       ;|                                   |
              a4ff c218  st   [$18]       ;+-----------------------------------+
              a500 00d4  ld   $d4
              a501 004e  ld   $4e
              a502 0045  ld   $45
              a503 00d7  ld   $d7
              a504 0054  ld   $54
              a505 0041  ld   $41
              a506 0042  ld   $42
              a507 00a8  ld   $a8
              a508 0054  ld   $54
              a509 00cf  ld   $cf
              a50a 0046  ld   $46
              a50b 00ce  ld   $ce
              a50c 0053  ld   $53
              a50d 0050  ld   $50
              a50e 0043  ld   $43
              a50f 00a8  ld   $a8
              a510 0054  ld   $54
              a511 0048  ld   $48
              a512 0045  ld   $45
              a513 00ce  ld   $ce
              a514 004e  ld   $4e
              a515 004f  ld   $4f
              a516 00d4  ld   $d4
              a517 0053  ld   $53
              a518 0054  ld   $54
              a519 0045  ld   $45
              a51a 00d0  ld   $d0
              a51b 00ab  ld   $ab
              a51c 00ad  ld   $ad
              a51d 00aa  ld   $aa
              a51e 00af  ld   $af
              a51f 00de  ld   $de
              a520 0041  ld   $41
              a521 004e  ld   $4e
              a522 00c4  ld   $c4
              a523 004f  ld   $4f
              a524 00d2  ld   $d2
              a525 00be  ld   $be
              a526 00bd  ld   $bd
              a527 00bc  ld   $bc
              a528 0053  ld   $53
              a529 0047  ld   $47
              a52a 00ce  ld   $ce
              a52b 0049  ld   $49
              a52c 004e  ld   $4e
              a52d 00d4  ld   $d4
              a52e 0041  ld   $41
              a52f 0042  ld   $42
              a530 00d3  ld   $d3
              a531 0055  ld   $55
              a532 0053  ld   $53
              a533 00d2  ld   $d2
              a534 0046  ld   $46
              a535 0052  ld   $52
              a536 00c5  ld   $c5
              a537 0050  ld   $50
              a538 004f  ld   $4f
              a539 00d3  ld   $d3
              a53a 0053  ld   $53
              a53b 0051  ld   $51
              a53c 00d2  ld   $d2
              a53d 0052  ld   $52
              a53e 004e  ld   $4e
              a53f 00c4  ld   $c4
              a540 004c  ld   $4c
              a541 004f  ld   $4f
              a542 00c7  ld   $c7
              a543 0045  ld   $45
              a544 0058  ld   $58
              a545 00d0  ld   $d0
              a546 0043  ld   $43
              a547 004f  ld   $4f
              a548 00d3  ld   $d3
              a549 0053  ld   $53
              a54a 0049  ld   $49
              a54b 00ce  ld   $ce
              a54c 0054  ld   $54
              a54d 0041  ld   $41
              a54e 00ce  ld   $ce
              a54f 0041  ld   $41
              a550 0054  ld   $54
              a551 00ce  ld   $ce
              a552 0050  ld   $50
              a553 0045  ld   $45
              a554 0045  ld   $45
              a555 00cb  ld   $cb
              a556 004c  ld   $4c
              a557 0045  ld   $45
              a558 00ce  ld   $ce
              a559 0053  ld   $53
              a55a 0054  ld   $54
              a55b 0052  ld   $52
              a55c 00a4  ld   $a4
              a55d 0056  ld   $56
              a55e 0041  ld   $41
              a55f 00cc  ld   $cc
              a560 0041  ld   $41
              a561 0053  ld   $53
              a562 00c3  ld   $c3
              a563 0043  ld   $43
              a564 0048  ld   $48
              a565 0052  ld   $52
              a566 00a4  ld   $a4
              a567 004c  ld   $4c
              a568 0045  ld   $45
              a569 0046  ld   $46
              a56a 0054  ld   $54
              a56b 00a4  ld   $a4
              a56c 0052  ld   $52
              a56d 0049  ld   $49
              a56e 0047  ld   $47
              a56f 0048  ld   $48
              a570 0054  ld   $54
              a571 00a4  ld   $a4
              a572 004d  ld   $4d
              a573 0049  ld   $49
              a574 0044  ld   $44
              a575 00a4  ld   $a4
              a576 0047  ld   $47
              a577 00cf  ld   $cf
              a578 0000  ld   $00
              a579 004e  ld   $4e
              a57a 0045  ld   $45
              a57b 0058  ld   $58
              a57c 0054  ld   $54
              a57d 0020  ld   $20
              a57e 0057  ld   $57
              a57f 0049  ld   $49
              a580 0054  ld   $54
              a581 0048  ld   $48
              a582 004f  ld   $4f
              a583 0055  ld   $55
              a584 0054  ld   $54
              a585 0020  ld   $20
              a586 0046  ld   $46
              a587 004f  ld   $4f
              a588 00d2  ld   $d2
              a589 0053  ld   $53
              a58a 0059  ld   $59
              a58b 004e  ld   $4e
              a58c 0054  ld   $54
              a58d 0041  ld   $41
              a58e 00d8  ld   $d8
              a58f 0052  ld   $52
              a590 0045  ld   $45
              a591 0054  ld   $54
              a592 0055  ld   $55
              a593 0052  ld   $52
              a594 004e  ld   $4e
              a595 0020  ld   $20
              a596 0057  ld   $57
              a597 0049  ld   $49
              a598 0054  ld   $54
              a599 0048  ld   $48
              a59a 004f  ld   $4f
              a59b 0055  ld   $55
              a59c 0054  ld   $54
              a59d 0020  ld   $20
              a59e 0047  ld   $47
              a59f 004f  ld   $4f
              a5a0 0053  ld   $53
              a5a1 0055  ld   $55
              a5a2 00c2  ld   $c2
              a5a3 004f  ld   $4f
              a5a4 0055  ld   $55
              a5a5 0054  ld   $54
              a5a6 0020  ld   $20
              a5a7 004f  ld   $4f
              a5a8 0046  ld   $46
              a5a9 0020  ld   $20
              a5aa 0044  ld   $44
              a5ab 0041  ld   $41
              a5ac 0054  ld   $54
              a5ad 00c1  ld   $c1
              a5ae 0049  ld   $49
              a5af 004c  ld   $4c
              a5b0 004c  ld   $4c
              a5b1 0045  ld   $45
              a5b2 0047  ld   $47
              a5b3 0041  ld   $41
              a5b4 004c  ld   $4c
              a5b5 0020  ld   $20
              a5b6 0051  ld   $51
              a5b7 0055  ld   $55
              a5b8 0041  ld   $41
              a5b9 004e  ld   $4e
              a5ba 0054  ld   $54
              a5bb 0049  ld   $49
              a5bc 0054  ld   $54
              a5bd 00d9  ld   $d9
              a5be 004f  ld   $4f
              a5bf 0056  ld   $56
              a5c0 0045  ld   $45
              a5c1 0052  ld   $52
              a5c2 0046  ld   $46
              a5c3 004c  ld   $4c
              a5c4 004f  ld   $4f
              a5c5 00d7  ld   $d7
              a5c6 004f  ld   $4f
              a5c7 0055  ld   $55
              a5c8 0054  ld   $54
              a5c9 0020  ld   $20
              a5ca 004f  ld   $4f
              a5cb 0046  ld   $46
              a5cc 0020  ld   $20
              a5cd 004d  ld   $4d
              a5ce 0045  ld   $45
              a5cf 004d  ld   $4d
              a5d0 004f  ld   $4f
              a5d1 0052  ld   $52
              a5d2 00d9  ld   $d9
              a5d3 0055  ld   $55
              a5d4 004e  ld   $4e
              a5d5 0044  ld   $44
              a5d6 0045  ld   $45
              a5d7 0046  ld   $46
              a5d8 0027  ld   $27
              a5d9 0044  ld   $44
              a5da 0020  ld   $20
              a5db 0053  ld   $53
              a5dc 0054  ld   $54
              a5dd 0041  ld   $41
              a5de 0054  ld   $54
              a5df 0045  ld   $45
              a5e0 004d  ld   $4d
              a5e1 0045  ld   $45
              a5e2 004e  ld   $4e
              a5e3 00d4  ld   $d4
              a5e4 0042  ld   $42
              a5e5 0041  ld   $41
              a5e6 0044  ld   $44
              a5e7 0020  ld   $20
              a5e8 0053  ld   $53
              a5e9 0055  ld   $55
              a5ea 0042  ld   $42
              a5eb 0053  ld   $53
              a5ec 0043  ld   $43
              a5ed 0052  ld   $52
              a5ee 0049  ld   $49
              a5ef 0050  ld   $50
              a5f0 00d4  ld   $d4
              a5f1 0052  ld   $52
              a5f2 0045  ld   $45
              a5f3 0044  ld   $44
              a5f4 0049  ld   $49
              a5f5 004d  ld   $4d
              a5f6 0004  ld   $04
              a5f7 0000  ld   $00
              a5f8 0000  ld   $00
              a5f9 0027  ld   $27
              a5fa 0044  ld   $44
              a5fb fe00  bra  ac          ;+-----------------------------------+
              a5fc fcfd  bra  $a5fd       ;|                                   |
              a5fd 1418  ld   $18,y       ;| Trampoline for page $a500 lookups |
              a5fe e006  jmp  y,$06       ;|                                   |
              a5ff c218  st   [$18]       ;+-----------------------------------+
              a600 0020  ld   $20
              a601 0041  ld   $41
              a602 0052  ld   $52
              a603 0052  ld   $52
              a604 0041  ld   $41
              a605 00d9  ld   $d9
              a606 0044  ld   $44
              a607 0049  ld   $49
              a608 0056  ld   $56
              a609 0049  ld   $49
              a60a 0053  ld   $53
              a60b 0049  ld   $49
              a60c 004f  ld   $4f
              a60d 004e  ld   $4e
              a60e 0020  ld   $20
              a60f 0042  ld   $42
              a610 0059  ld   $59
              a611 0020  ld   $20
              a612 005a  ld   $5a
              a613 0045  ld   $45
              a614 0052  ld   $52
              a615 00cf  ld   $cf
              a616 0049  ld   $49
              a617 004c  ld   $4c
              a618 004c  ld   $4c
              a619 0045  ld   $45
              a61a 0047  ld   $47
              a61b 0041  ld   $41
              a61c 004c  ld   $4c
              a61d 0020  ld   $20
              a61e 0044  ld   $44
              a61f 0049  ld   $49
              a620 0052  ld   $52
              a621 0045  ld   $45
              a622 0043  ld   $43
              a623 00d4  ld   $d4
              a624 0054  ld   $54
              a625 0059  ld   $59
              a626 0050  ld   $50
              a627 0045  ld   $45
              a628 0020  ld   $20
              a629 004d  ld   $4d
              a62a 0049  ld   $49
              a62b 0053  ld   $53
              a62c 004d  ld   $4d
              a62d 0041  ld   $41
              a62e 0054  ld   $54
              a62f 0043  ld   $43
              a630 00c8  ld   $c8
              a631 0053  ld   $53
              a632 0054  ld   $54
              a633 0052  ld   $52
              a634 0049  ld   $49
              a635 004e  ld   $4e
              a636 0047  ld   $47
              a637 0020  ld   $20
              a638 0054  ld   $54
              a639 004f  ld   $4f
              a63a 004f  ld   $4f
              a63b 0020  ld   $20
              a63c 004c  ld   $4c
              a63d 004f  ld   $4f
              a63e 004e  ld   $4e
              a63f 00c7  ld   $c7
              a640 0046  ld   $46
              a641 004f  ld   $4f
              a642 0052  ld   $52
              a643 004d  ld   $4d
              a644 0055  ld   $55
              a645 004c  ld   $4c
              a646 0041  ld   $41
              a647 0020  ld   $20
              a648 0054  ld   $54
              a649 004f  ld   $4f
              a64a 004f  ld   $4f
              a64b 0020  ld   $20
              a64c 0043  ld   $43
              a64d 004f  ld   $4f
              a64e 004d  ld   $4d
              a64f 0050  ld   $50
              a650 004c  ld   $4c
              a651 0045  ld   $45
              a652 00d8  ld   $d8
              a653 0043  ld   $43
              a654 0041  ld   $41
              a655 004e  ld   $4e
              a656 0027  ld   $27
              a657 0054  ld   $54
              a658 0020  ld   $20
              a659 0043  ld   $43
              a65a 004f  ld   $4f
              a65b 004e  ld   $4e
              a65c 0054  ld   $54
              a65d 0049  ld   $49
              a65e 004e  ld   $4e
              a65f 0055  ld   $55
              a660 00c5  ld   $c5
              a661 0055  ld   $55
              a662 004e  ld   $4e
              a663 0044  ld   $44
              a664 0045  ld   $45
              a665 0046  ld   $46
              a666 0027  ld   $27
              a667 0044  ld   $44
              a668 0020  ld   $20
              a669 0046  ld   $46
              a66a 0055  ld   $55
              a66b 004e  ld   $4e
              a66c 0043  ld   $43
              a66d 0054  ld   $54
              a66e 0049  ld   $49
              a66f 004f  ld   $4f
              a670 00ce  ld   $ce
              a671 0020  ld   $20
              a672 0000  ld   $00
              a673 002e  ld   $2e
              a674 0038  ld   $38
              a675 004c  ld   $4c
              a676 00cc  ld   $cc
              a677 000f  ld   $0f
              a678 00a0  ld   $a0
              a679 001b  ld   $1b
              a67a 0018  ld   $18
              a67b 0088  ld   $88
              a67c 0069  ld   $69
              a67d 0006  ld   $06
              a67e 0090  ld   $90
              a67f 00fb  ld   $fb
              a680 0060  ld   $60
              a681 0020  ld   $20
              a682 0045  ld   $45
              a683 0052  ld   $52
              a684 0052  ld   $52
              a685 004f  ld   $4f
              a686 0052  ld   $52
              a687 0000  ld   $00
              a688 0020  ld   $20
              a689 0049  ld   $49
              a68a 004e  ld   $4e
              a68b 0020  ld   $20
              a68c 0000  ld   $00
              a68d 000d  ld   $0d
              a68e 000a  ld   $0a
              a68f 0052  ld   $52
              a690 0045  ld   $45
              a691 0041  ld   $41
              a692 0044  ld   $44
              a693 0059  ld   $59
              a694 002e  ld   $2e
              a695 000d  ld   $0d
              a696 000a  ld   $0a
              a697 0000  ld   $00
              a698 000d  ld   $0d
              a699 000a  ld   $0a
              a69a 0042  ld   $42
              a69b 0052  ld   $52
              a69c 0045  ld   $45
              a69d 0041  ld   $41
              a69e 004b  ld   $4b
              a69f 0000  ld   $00
              a6a0 00ba  ld   $ba
              a6a1 00e8  ld   $e8
              a6a2 00e8  ld   $e8
              a6a3 00e8  ld   $e8
              a6a4 00e8  ld   $e8
              a6a5 00b5  ld   $b5
              a6a6 0001  ld   $01
              a6a7 00c9  ld   $c9
              a6a8 0081  ld   $81
              a6a9 00d0  ld   $d0
              a6aa 001d  ld   $1d
              a6ab 00a5  ld   $a5
              a6ac 007c  ld   $7c
              a6ad 00d0  ld   $d0
              a6ae 0008  ld   $08
              a6af 00b5  ld   $b5
              a6b0 0002  ld   $02
              a6b1 0085  ld   $85
              a6b2 007b  ld   $7b
              a6b3 00b5  ld   $b5
              a6b4 0003  ld   $03
              a6b5 0085  ld   $85
              a6b6 007c  ld   $7c
              a6b7 00d5  ld   $d5
              a6b8 0003  ld   $03
              a6b9 00d0  ld   $d0
              a6ba 0006  ld   $06
              a6bb 00a5  ld   $a5
              a6bc 007b  ld   $7b
              a6bd 00d5  ld   $d5
              a6be 0002  ld   $02
              a6bf 00f0  ld   $f0
              a6c0 0007  ld   $07
              a6c1 008a  ld   $8a
              a6c2 0018  ld   $18
              a6c3 0069  ld   $69
              a6c4 0012  ld   $12
              a6c5 00aa  ld   $aa
              a6c6 00d0  ld   $d0
              a6c7 00dd  ld   $dd
              a6c8 0060  ld   $60
              a6c9 0020  ld   $20
              a6ca 001b  ld   $1b
              a6cb 0005  ld   $05
              a6cc 0085  ld   $85
              a6cd 0063  ld   $63
              a6ce 0084  ld   $84
              a6cf 0064  ld   $64
              a6d0 0038  ld   $38
              a6d1 00a5  ld   $a5
              a6d2 008d  ld   $8d
              a6d3 00e5  ld   $e5
              a6d4 0092  ld   $92
              a6d5 0085  ld   $85
              a6d6 0054  ld   $54
              a6d7 00a8  ld   $a8
              a6d8 00a5  ld   $a5
              a6d9 008e  ld   $8e
              a6da 00e5  ld   $e5
              a6db 0093  ld   $93
              a6dc 00aa  ld   $aa
              a6dd 00e8  ld   $e8
              a6de 0098  ld   $98
              a6df 00f0  ld   $f0
              a6e0 0023  ld   $23
              a6e1 00a5  ld   $a5
              a6e2 008d  ld   $8d
              a6e3 0038  ld   $38
              a6e4 00e5  ld   $e5
              a6e5 0054  ld   $54
              a6e6 0085  ld   $85
              a6e7 008d  ld   $8d
              a6e8 00b0  ld   $b0
              a6e9 0003  ld   $03
              a6ea 00c6  ld   $c6
              a6eb 008e  ld   $8e
              a6ec 0038  ld   $38
              a6ed 00a5  ld   $a5
              a6ee 008b  ld   $8b
              a6ef 00e5  ld   $e5
              a6f0 0054  ld   $54
              a6f1 0085  ld   $85
              a6f2 008b  ld   $8b
              a6f3 00b0  ld   $b0
              a6f4 0008  ld   $08
              a6f5 00c6  ld   $c6
              a6f6 008c  ld   $8c
              a6f7 0090  ld   $90
              a6f8 0004  ld   $04
              a6f9 00b1  ld   $b1
              a6fa 008d  ld   $8d
              a6fb fe00  bra  ac          ;+-----------------------------------+
              a6fc fcfd  bra  $a6fd       ;|                                   |
              a6fd 1418  ld   $18,y       ;| Trampoline for page $a600 lookups |
              a6fe e006  jmp  y,$06       ;|                                   |
              a6ff c218  st   [$18]       ;+-----------------------------------+
              a700 0091  ld   $91
              a701 008b  ld   $8b
              a702 0088  ld   $88
              a703 0005  ld   $05
              a704 0000  ld   $00
              a705 0000  ld   $00
              a706 00d0  ld   $d0
              a707 00f9  ld   $f9
              a708 00b1  ld   $b1
              a709 008d  ld   $8d
              a70a 0091  ld   $91
              a70b 008b  ld   $8b
              a70c 00c6  ld   $c6
              a70d 008e  ld   $8e
              a70e 00c6  ld   $c6
              a70f 008c  ld   $8c
              a710 00ca  ld   $ca
              a711 00d0  ld   $d0
              a712 00f2  ld   $f2
              a713 0060  ld   $60
              a714 000a  ld   $0a
              a715 0069  ld   $69
              a716 00b2  ld   $b2
              a717 00b0  ld   $b0
              a718 0035  ld   $35
              a719 0085  ld   $85
              a71a 0054  ld   $54
              a71b 00ba  ld   $ba
              a71c 00e4  ld   $e4
              a71d 0054  ld   $54
              a71e 0090  ld   $90
              a71f 002e  ld   $2e
              a720 0060  ld   $60
              a721 00c4  ld   $c4
              a722 0066  ld   $66
              a723 0090  ld   $90
              a724 0028  ld   $28
              a725 00d0  ld   $d0
              a726 0004  ld   $04
              a727 00c5  ld   $c5
              a728 0065  ld   $65
              a729 0090  ld   $90
              a72a 0022  ld   $22
              a72b 0048  ld   $48
              a72c 00a2  ld   $a2
              a72d 0009  ld   $09
              a72e 0098  ld   $98
              a72f 0048  ld   $48
              a730 00b5  ld   $b5
              a731 008a  ld   $8a
              a732 00ca  ld   $ca
              a733 0010  ld   $10
              a734 00fa  ld   $fa
              a735 0020  ld   $20
              a736 0062  ld   $62
              a737 0015  ld   $15
              a738 00a2  ld   $a2
              a739 00f7  ld   $f7
              a73a 0068  ld   $68
              a73b 0095  ld   $95
              a73c 0094  ld   $94
              a73d 00e8  ld   $e8
              a73e 0030  ld   $30
              a73f 00fa  ld   $fa
              a740 0068  ld   $68
              a741 00a8  ld   $a8
              a742 0068  ld   $68
              a743 00c4  ld   $c4
              a744 0066  ld   $66
              a745 0090  ld   $90
              a746 0006  ld   $06
              a747 00d0  ld   $d0
              a748 0005  ld   $05
              a749 00c5  ld   $c5
              a74a 0065  ld   $65
              a74b 00b0  ld   $b0
              a74c 0001  ld   $01
              a74d 0060  ld   $60
              a74e 00a2  ld   $a2
              a74f 004d  ld   $4d
              a750 0046  ld   $46
              a751 0045  ld   $45
              a752 0020  ld   $20
              a753 00ac  ld   $ac
              a754 000b  ld   $0b
              a755 0020  ld   $20
              a756 000f  ld   $0f
              a757 000c  ld   $0c
              a758 00bd  ld   $bd
              a759 0083  ld   $83
              a75a 0003  ld   $03
              a75b 0048  ld   $48
              a75c 0029  ld   $29
              a75d 007f  ld   $7f
              a75e 0020  ld   $20
              a75f 0011  ld   $11
              a760 000c  ld   $0c
              a761 00e8  ld   $e8
              a762 0068  ld   $68
              a763 0010  ld   $10
              a764 00f3  ld   $f3
              a765 0020  ld   $20
              a766 007a  ld   $7a
              a767 0007  ld   $07
              a768 00a9  ld   $a9
              a769 0083  ld   $83
              a76a 00a0  ld   $a0
              a76b 0004  ld   $04
              a76c 0020  ld   $20
              a76d 00ef  ld   $ef
              a76e 000b  ld   $0b
              a76f 00a4  ld   $a4
              a770 006c  ld   $6c
              a771 00c8  ld   $c8
              a772 00f0  ld   $f0
              a773 0003  ld   $03
              a774 0020  ld   $20
              a775 003a  ld   $3a
              a776 001e  ld   $1e
              a777 0046  ld   $46
              a778 0045  ld   $45
              a779 00a9  ld   $a9
              a77a 008f  ld   $8f
              a77b 00a0  ld   $a0
              a77c 0004  ld   $04
              a77d 0020  ld   $20
              a77e 00ef  ld   $ef
              a77f 000b  ld   $0b
              a780 0020  ld   $20
              a781 0057  ld   $57
              a782 0006  ld   $06
              a783 0086  ld   $86
              a784 00a6  ld   $a6
              a785 0084  ld   $84
              a786 00a7  ld   $a7
              a787 0020  ld   $20
              a788 006b  ld   $6b
              a789 0022  ld   $22
              a78a 00aa  ld   $aa
              a78b 00f0  ld   $f0
              a78c 00f3  ld   $f3
              a78d 00a2  ld   $a2
              a78e 00ff  ld   $ff
              a78f 0086  ld   $86
              a790 006c  ld   $6c
              a791 0090  ld   $90
              a792 0006  ld   $06
              a793 0020  ld   $20
              a794 007e  ld   $7e
              a795 0006  ld   $06
              a796 004c  ld   $4c
              a797 00de  ld   $de
              a798 0008  ld   $08
              a799 0020  ld   $20
              a79a 005a  ld   $5a
              a79b 000a  ld   $0a
              a79c 0020  ld   $20
              a79d 007e  ld   $7e
              a79e 0006  ld   $06
              a79f 0084  ld   $84
              a7a0 003d  ld   $3d
              a7a1 0020  ld   $20
              a7a2 0013  ld   $13
              a7a3 0007  ld   $07
              a7a4 0090  ld   $90
              a7a5 0044  ld   $44
              a7a6 00a0  ld   $a0
              a7a7 0001  ld   $01
              a7a8 00b1  ld   $b1
              a7a9 0092  ld   $92
              a7aa 0085  ld   $85
              a7ab 0055  ld   $55
              a7ac 00a5  ld   $a5
              a7ad 005f  ld   $5f
              a7ae 0085  ld   $85
              a7af 0054  ld   $54
              a7b0 00a5  ld   $a5
              a7b1 0093  ld   $93
              a7b2 0085  ld   $85
              a7b3 0057  ld   $57
              a7b4 00a5  ld   $a5
              a7b5 0092  ld   $92
              a7b6 0088  ld   $88
              a7b7 00f1  ld   $f1
              a7b8 0092  ld   $92
              a7b9 0018  ld   $18
              a7ba 0065  ld   $65
              a7bb 005f  ld   $5f
              a7bc 0085  ld   $85
              a7bd 005f  ld   $5f
              a7be 0085  ld   $85
              a7bf 0056  ld   $56
              a7c0 00a5  ld   $a5
              a7c1 0060  ld   $60
              a7c2 0069  ld   $69
              a7c3 00ff  ld   $ff
              a7c4 0085  ld   $85
              a7c5 0060  ld   $60
              a7c6 00e5  ld   $e5
              a7c7 0093  ld   $93
              a7c8 00aa  ld   $aa
              a7c9 0038  ld   $38
              a7ca 00a5  ld   $a5
              a7cb 0092  ld   $92
              a7cc 00e5  ld   $e5
              a7cd 005f  ld   $5f
              a7ce 00a8  ld   $a8
              a7cf 00b0  ld   $b0
              a7d0 0003  ld   $03
              a7d1 00e8  ld   $e8
              a7d2 00c6  ld   $c6
              a7d3 0057  ld   $57
              a7d4 0018  ld   $18
              a7d5 0065  ld   $65
              a7d6 0054  ld   $54
              a7d7 0090  ld   $90
              a7d8 0003  ld   $03
              a7d9 00c6  ld   $c6
              a7da 0055  ld   $55
              a7db 0018  ld   $18
              a7dc 00b1  ld   $b1
              a7dd 0054  ld   $54
              a7de 0091  ld   $91
              a7df 0056  ld   $56
              a7e0 00c8  ld   $c8
              a7e1 00d0  ld   $d0
              a7e2 00f9  ld   $f9
              a7e3 00e6  ld   $e6
              a7e4 0055  ld   $55
              a7e5 00e6  ld   $e6
              a7e6 0057  ld   $57
              a7e7 00ca  ld   $ca
              a7e8 00d0  ld   $d0
              a7e9 00f2  ld   $f2
              a7ea 0020  ld   $20
              a7eb 0059  ld   $59
              a7ec 0007  ld   $07
              a7ed 0020  ld   $20
              a7ee 002a  ld   $2a
              a7ef 0006  ld   $06
              a7f0 00ad  ld   $ad
              a7f1 0005  ld   $05
              a7f2 0024  ld   $24
              a7f3 00f0  ld   $f0
              a7f4 008b  ld   $8b
              a7f5 0018  ld   $18
              a7f6 00a5  ld   $a5
              a7f7 005f  ld   $5f
              a7f8 0085  ld   $85
              a7f9 008d  ld   $8d
              a7fa 0065  ld   $65
              a7fb fe00  bra  ac          ;+-----------------------------------+
              a7fc fcfd  bra  $a7fd       ;|                                   |
              a7fd 1418  ld   $18,y       ;| Trampoline for page $a700 lookups |
              a7fe e006  jmp  y,$06       ;|                                   |
              a7ff c218  st   [$18]       ;+-----------------------------------+
              a800 003d  ld   $3d
              a801 0085  ld   $85
              a802 008b  ld   $8b
              a803 00a4  ld   $a4
              a804 0060  ld   $60
              a805 0084  ld   $84
              a806 008e  ld   $8e
              a807 0090  ld   $90
              a808 0001  ld   $01
              a809 00c8  ld   $c8
              a80a 0084  ld   $84
              a80b 0006  ld   $06
              a80c 0000  ld   $00
              a80d 0000  ld   $00
              a80e 008c  ld   $8c
              a80f 0020  ld   $20
              a810 00cb  ld   $cb
              a811 0004  ld   $04
              a812 00a5  ld   $a5
              a813 0046  ld   $46
              a814 00a4  ld   $a4
              a815 0047  ld   $47
              a816 008d  ld   $8d
              a817 0003  ld   $03
              a818 0024  ld   $24
              a819 008c  ld   $8c
              a81a 0004  ld   $04
              a81b 0024  ld   $24
              a81c 00a5  ld   $a5
              a81d 0063  ld   $63
              a81e 00a4  ld   $a4
              a81f 0064  ld   $64
              a820 0085  ld   $85
              a821 005f  ld   $5f
              a822 0084  ld   $84
              a823 0060  ld   $60
              a824 00a4  ld   $a4
              a825 003d  ld   $3d
              a826 0088  ld   $88
              a827 00b9  ld   $b9
              a828 0001  ld   $01
              a829 0024  ld   $24
              a82a 0091  ld   $91
              a82b 0092  ld   $92
              a82c 0088  ld   $88
              a82d 0010  ld   $10
              a82e 00f8  ld   $f8
              a82f 0020  ld   $20
              a830 0059  ld   $59
              a831 0007  ld   $07
              a832 0020  ld   $20
              a833 002a  ld   $2a
              a834 0006  ld   $06
              a835 004c  ld   $4c
              a836 007a  ld   $7a
              a837 0005  ld   $05
              a838 00a5  ld   $a5
              a839 005d  ld   $5d
              a83a 00a4  ld   $a4
              a83b 005e  ld   $5e
              a83c 0085  ld   $85
              a83d 0054  ld   $54
              a83e 0084  ld   $84
              a83f 0055  ld   $55
              a840 0018  ld   $18
              a841 00a0  ld   $a0
              a842 0001  ld   $01
              a843 00b1  ld   $b1
              a844 0054  ld   $54
              a845 00f0  ld   $f0
              a846 001d  ld   $1d
              a847 00a0  ld   $a0
              a848 0004  ld   $04
              a849 00c8  ld   $c8
              a84a 00b1  ld   $b1
              a84b 0054  ld   $54
              a84c 00d0  ld   $d0
              a84d 00fb  ld   $fb
              a84e 00c8  ld   $c8
              a84f 0098  ld   $98
              a850 0065  ld   $65
              a851 0054  ld   $54
              a852 00aa  ld   $aa
              a853 00a0  ld   $a0
              a854 0000  ld   $00
              a855 0091  ld   $91
              a856 0054  ld   $54
              a857 00a5  ld   $a5
              a858 0055  ld   $55
              a859 0069  ld   $69
              a85a 0000  ld   $00
              a85b 00c8  ld   $c8
              a85c 0091  ld   $91
              a85d 0054  ld   $54
              a85e 0086  ld   $86
              a85f 0054  ld   $54
              a860 0085  ld   $85
              a861 0055  ld   $55
              a862 0090  ld   $90
              a863 00dd  ld   $dd
              a864 0060  ld   $60
              a865 00a2  ld   $a2
              a866 0000  ld   $00
              a867 0020  ld   $20
              a868 006e  ld   $6e
              a869 0006  ld   $06
              a86a 00c9  ld   $c9
              a86b 000d  ld   $0d
              a86c 00f0  ld   $f0
              a86d 000b  ld   $0b
              a86e 0020  ld   $20
              a86f 0000  ld   $00
              a870 002f  ld   $2f
              a871 00f0  ld   $f0
              a872 00f4  ld   $f4
              a873 009d  ld   $9d
              a874 0005  ld   $05
              a875 0024  ld   $24
              a876 00e8  ld   $e8
              a877 00d0  ld   $d0
              a878 00ee  ld   $ee
              a879 004c  ld   $4c
              a87a 00a3  ld   $a3
              a87b 000b  ld   $0b
              a87c 0020  ld   $20
              a87d 0000  ld   $00
              a87e 002c  ld   $2c
              a87f 00c9  ld   $c9
              a880 000f  ld   $0f
              a881 00d0  ld   $d0
              a882 0008  ld   $08
              a883 0048  ld   $48
              a884 00a5  ld   $a5
              a885 0045  ld   $45
              a886 0049  ld   $49
              a887 00ff  ld   $ff
              a888 0085  ld   $85
              a889 0045  ld   $45
              a88a 0068  ld   $68
              a88b 0060  ld   $60
              a88c 00a6  ld   $a6
              a88d 00a6  ld   $a6
              a88e 00a0  ld   $a0
              a88f 0004  ld   $04
              a890 0084  ld   $84
              a891 0041  ld   $41
              a892 00bd  ld   $bd
              a893 0000  ld   $00
              a894 0024  ld   $24
              a895 0010  ld   $10
              a896 0007  ld   $07
              a897 00c9  ld   $c9
              a898 00ff  ld   $ff
              a899 00f0  ld   $f0
              a89a 003e  ld   $3e
              a89b 00e8  ld   $e8
              a89c 00d0  ld   $d0
              a89d 00f4  ld   $f4
              a89e 00c9  ld   $c9
              a89f 0020  ld   $20
              a8a0 00f0  ld   $f0
              a8a1 0037  ld   $37
              a8a2 0085  ld   $85
              a8a3 003c  ld   $3c
              a8a4 00c9  ld   $c9
              a8a5 0022  ld   $22
              a8a6 00f0  ld   $f0
              a8a7 0056  ld   $56
              a8a8 0024  ld   $24
              a8a9 0041  ld   $41
              a8aa 0070  ld   $70
              a8ab 002d  ld   $2d
              a8ac 00c9  ld   $c9
              a8ad 003f  ld   $3f
              a8ae 00d0  ld   $d0
              a8af 0004  ld   $04
              a8b0 00a9  ld   $a9
              a8b1 0097  ld   $97
              a8b2 00d0  ld   $d0
              a8b3 0025  ld   $25
              a8b4 00c9  ld   $c9
              a8b5 0030  ld   $30
              a8b6 0090  ld   $90
              a8b7 0004  ld   $04
              a8b8 00c9  ld   $c9
              a8b9 003c  ld   $3c
              a8ba 0090  ld   $90
              a8bb 001d  ld   $1d
              a8bc 0084  ld   $84
              a8bd 00a4  ld   $a4
              a8be 00a0  ld   $a0
              a8bf 0000  ld   $00
              a8c0 0084  ld   $84
              a8c1 003d  ld   $3d
              a8c2 0088  ld   $88
              a8c3 0086  ld   $86
              a8c4 00a6  ld   $a6
              a8c5 00ca  ld   $ca
              a8c6 00c8  ld   $c8
              a8c7 00e8  ld   $e8
              a8c8 00bd  ld   $bd
              a8c9 0000  ld   $00
              a8ca 0024  ld   $24
              a8cb 0038  ld   $38
              a8cc 00f9  ld   $f9
              a8cd 009e  ld   $9e
              a8ce 0002  ld   $02
              a8cf 00f0  ld   $f0
              a8d0 00f5  ld   $f5
              a8d1 00c9  ld   $c9
              a8d2 0080  ld   $80
              a8d3 00d0  ld   $d0
              a8d4 0030  ld   $30
              a8d5 0005  ld   $05
              a8d6 003d  ld   $3d
              a8d7 00a4  ld   $a4
              a8d8 00a4  ld   $a4
              a8d9 00e8  ld   $e8
              a8da 00c8  ld   $c8
              a8db 0099  ld   $99
              a8dc 0000  ld   $00
              a8dd 0024  ld   $24
              a8de 00b9  ld   $b9
              a8df 0000  ld   $00
              a8e0 0024  ld   $24
              a8e1 00f0  ld   $f0
              a8e2 0036  ld   $36
              a8e3 0038  ld   $38
              a8e4 00e9  ld   $e9
              a8e5 003a  ld   $3a
              a8e6 00f0  ld   $f0
              a8e7 0004  ld   $04
              a8e8 00c9  ld   $c9
              a8e9 0049  ld   $49
              a8ea 00d0  ld   $d0
              a8eb 0002  ld   $02
              a8ec 0085  ld   $85
              a8ed 0041  ld   $41
              a8ee 0038  ld   $38
              a8ef 00e9  ld   $e9
              a8f0 0054  ld   $54
              a8f1 00d0  ld   $d0
              a8f2 009f  ld   $9f
              a8f3 0085  ld   $85
              a8f4 003c  ld   $3c
              a8f5 00bd  ld   $bd
              a8f6 0000  ld   $00
              a8f7 0024  ld   $24
              a8f8 00f0  ld   $f0
              a8f9 00df  ld   $df
              a8fa 00c5  ld   $c5
              a8fb fe00  bra  ac          ;+-----------------------------------+
              a8fc fcfd  bra  $a8fd       ;|                                   |
              a8fd 1418  ld   $18,y       ;| Trampoline for page $a800 lookups |
              a8fe e006  jmp  y,$06       ;|                                   |
              a8ff c218  st   [$18]       ;+-----------------------------------+
              a900 003c  ld   $3c
              a901 00f0  ld   $f0
              a902 00db  ld   $db
              a903 00c8  ld   $c8
              a904 0099  ld   $99
              a905 0000  ld   $00
              a906 0024  ld   $24
              a907 00e8  ld   $e8
              a908 00d0  ld   $d0
              a909 00f0  ld   $f0
              a90a 00a6  ld   $a6
              a90b 00a6  ld   $a6
              a90c 00e6  ld   $e6
              a90d 003d  ld   $3d
              a90e 00c8  ld   $c8
              a90f 00b9  ld   $b9
              a910 009d  ld   $9d
              a911 0002  ld   $02
              a912 0010  ld   $10
              a913 0007  ld   $07
              a914 0000  ld   $00
              a915 0000  ld   $00
              a916 00fa  ld   $fa
              a917 00b9  ld   $b9
              a918 009e  ld   $9e
              a919 0002  ld   $02
              a91a 00d0  ld   $d0
              a91b 00b4  ld   $b4
              a91c 00bd  ld   $bd
              a91d 0000  ld   $00
              a91e 0024  ld   $24
              a91f 0010  ld   $10
              a920 00be  ld   $be
              a921 0099  ld   $99
              a922 0002  ld   $02
              a923 0024  ld   $24
              a924 00a9  ld   $a9
              a925 0004  ld   $04
              a926 0085  ld   $85
              a927 00a6  ld   $a6
              a928 0060  ld   $60
              a929 00a5  ld   $a5
              a92a 005d  ld   $5d
              a92b 00a6  ld   $a6
              a92c 005e  ld   $5e
              a92d 00a0  ld   $a0
              a92e 0001  ld   $01
              a92f 0085  ld   $85
              a930 0092  ld   $92
              a931 0086  ld   $86
              a932 0093  ld   $93
              a933 00b1  ld   $b1
              a934 0092  ld   $92
              a935 00f0  ld   $f0
              a936 001f  ld   $1f
              a937 00c8  ld   $c8
              a938 00c8  ld   $c8
              a939 00a5  ld   $a5
              a93a 0047  ld   $47
              a93b 00d1  ld   $d1
              a93c 0092  ld   $92
              a93d 0090  ld   $90
              a93e 0018  ld   $18
              a93f 00f0  ld   $f0
              a940 0003  ld   $03
              a941 0088  ld   $88
              a942 00d0  ld   $d0
              a943 0009  ld   $09
              a944 00a5  ld   $a5
              a945 0046  ld   $46
              a946 0088  ld   $88
              a947 00d1  ld   $d1
              a948 0092  ld   $92
              a949 0090  ld   $90
              a94a 000c  ld   $0c
              a94b 00f0  ld   $f0
              a94c 000a  ld   $0a
              a94d 0088  ld   $88
              a94e 00b1  ld   $b1
              a94f 0092  ld   $92
              a950 00aa  ld   $aa
              a951 0088  ld   $88
              a952 00b1  ld   $b1
              a953 0092  ld   $92
              a954 00b0  ld   $b0
              a955 00d7  ld   $d7
              a956 0018  ld   $18
              a957 0060  ld   $60
              a958 00d0  ld   $d0
              a959 00fd  ld   $fd
              a95a 00a9  ld   $a9
              a95b 0000  ld   $00
              a95c 00a8  ld   $a8
              a95d 0091  ld   $91
              a95e 005d  ld   $5d
              a95f 00c8  ld   $c8
              a960 0091  ld   $91
              a961 005d  ld   $5d
              a962 00a5  ld   $a5
              a963 005d  ld   $5d
              a964 0018  ld   $18
              a965 0069  ld   $69
              a966 0002  ld   $02
              a967 0085  ld   $85
              a968 005f  ld   $5f
              a969 00a5  ld   $a5
              a96a 005e  ld   $5e
              a96b 0069  ld   $69
              a96c 0000  ld   $00
              a96d 0085  ld   $85
              a96e 0060  ld   $60
              a96f 0020  ld   $20
              a970 008e  ld   $8e
              a971 0007  ld   $07
              a972 00a9  ld   $a9
              a973 0000  ld   $00
              a974 00d0  ld   $d0
              a975 002d  ld   $2d
              a976 00a5  ld   $a5
              a977 0069  ld   $69
              a978 00a4  ld   $a4
              a979 006a  ld   $6a
              a97a 0085  ld   $85
              a97b 0065  ld   $65
              a97c 0084  ld   $84
              a97d 0066  ld   $66
              a97e 0020  ld   $20
              a97f 0000  ld   $00
              a980 002e  ld   $2e
              a981 00a5  ld   $a5
              a982 005f  ld   $5f
              a983 00a4  ld   $a4
              a984 0060  ld   $60
              a985 0085  ld   $85
              a986 0061  ld   $61
              a987 0084  ld   $84
              a988 0062  ld   $62
              a989 0085  ld   $85
              a98a 0063  ld   $63
              a98b 0084  ld   $84
              a98c 0064  ld   $64
              a98d 0020  ld   $20
              a98e 0017  ld   $17
              a98f 0009  ld   $09
              a990 00a2  ld   $a2
              a991 004b  ld   $4b
              a992 0086  ld   $86
              a993 0048  ld   $48
              a994 0068  ld   $68
              a995 00a8  ld   $a8
              a996 0068  ld   $68
              a997 00a2  ld   $a2
              a998 00ff  ld   $ff
              a999 009a  ld   $9a
              a99a 0048  ld   $48
              a99b 0098  ld   $98
              a99c 0048  ld   $48
              a99d 00a9  ld   $a9
              a99e 0000  ld   $00
              a99f 0085  ld   $85
              a9a0 0070  ld   $70
              a9a1 0085  ld   $85
              a9a2 0042  ld   $42
              a9a3 0060  ld   $60
              a9a4 0018  ld   $18
              a9a5 00a5  ld   $a5
              a9a6 005d  ld   $5d
              a9a7 0069  ld   $69
              a9a8 00ff  ld   $ff
              a9a9 0085  ld   $85
              a9aa 00a6  ld   $a6
              a9ab 00a5  ld   $a5
              a9ac 005e  ld   $5e
              a9ad 0069  ld   $69
              a9ae 00ff  ld   $ff
              a9af 0085  ld   $85
              a9b0 00a7  ld   $a7
              a9b1 0060  ld   $60
              a9b2 0090  ld   $90
              a9b3 0006  ld   $06
              a9b4 00f0  ld   $f0
              a9b5 0004  ld   $04
              a9b6 00c9  ld   $c9
              a9b7 00a5  ld   $a5
              a9b8 00d0  ld   $d0
              a9b9 00e9  ld   $e9
              a9ba 0020  ld   $20
              a9bb 005a  ld   $5a
              a9bc 000a  ld   $0a
              a9bd 0020  ld   $20
              a9be 0013  ld   $13
              a9bf 0007  ld   $07
              a9c0 0020  ld   $20
              a9c1 0071  ld   $71
              a9c2 0022  ld   $22
              a9c3 00f0  ld   $f0
              a9c4 000c  ld   $0c
              a9c5 00c9  ld   $c9
              a9c6 00a5  ld   $a5
              a9c7 00d0  ld   $d0
              a9c8 008e  ld   $8e
              a9c9 0020  ld   $20
              a9ca 006b  ld   $6b
              a9cb 0022  ld   $22
              a9cc 0020  ld   $20
              a9cd 005a  ld   $5a
              a9ce 000a  ld   $0a
              a9cf 00d0  ld   $d0
              a9d0 0086  ld   $86
              a9d1 0068  ld   $68
              a9d2 0068  ld   $68
              a9d3 00a5  ld   $a5
              a9d4 0046  ld   $46
              a9d5 0005  ld   $05
              a9d6 0047  ld   $47
              a9d7 00d0  ld   $d0
              a9d8 0006  ld   $06
              a9d9 00a9  ld   $a9
              a9da 00ff  ld   $ff
              a9db 0085  ld   $85
              a9dc 0046  ld   $46
              a9dd 0085  ld   $85
              a9de 0047  ld   $47
              a9df 00a0  ld   $a0
              a9e0 0001  ld   $01
              a9e1 0084  ld   $84
              a9e2 0041  ld   $41
              a9e3 00b1  ld   $b1
              a9e4 0092  ld   $92
              a9e5 00f0  ld   $f0
              a9e6 0043  ld   $43
              a9e7 0020  ld   $20
              a9e8 0000  ld   $00
              a9e9 002d  ld   $2d
              a9ea 0020  ld   $20
              a9eb 00ac  ld   $ac
              a9ec 000b  ld   $0b
              a9ed 00c8  ld   $c8
              a9ee 00b1  ld   $b1
              a9ef 0092  ld   $92
              a9f0 00aa  ld   $aa
              a9f1 00c8  ld   $c8
              a9f2 00b1  ld   $b1
              a9f3 0092  ld   $92
              a9f4 00c5  ld   $c5
              a9f5 0047  ld   $47
              a9f6 00d0  ld   $d0
              a9f7 0004  ld   $04
              a9f8 00e4  ld   $e4
              a9f9 0046  ld   $46
              a9fa 00f0  ld   $f0
              a9fb fe00  bra  ac          ;+-----------------------------------+
              a9fc fcfd  bra  $a9fd       ;|                                   |
              a9fd 1418  ld   $18,y       ;| Trampoline for page $a900 lookups |
              a9fe e006  jmp  y,$06       ;|                                   |
              a9ff c218  st   [$18]       ;+-----------------------------------+
              aa00 0002  ld   $02
              aa01 00b0  ld   $b0
              aa02 002c  ld   $2c
              aa03 0084  ld   $84
              aa04 007b  ld   $7b
              aa05 0020  ld   $20
              aa06 0045  ld   $45
              aa07 001e  ld   $1e
              aa08 00a9  ld   $a9
              aa09 0020  ld   $20
              aa0a 00a4  ld   $a4
              aa0b 007b  ld   $7b
              aa0c 0029  ld   $29
              aa0d 007f  ld   $7f
              aa0e 0020  ld   $20
              aa0f 0011  ld   $11
              aa10 000c  ld   $0c
              aa11 00c9  ld   $c9
              aa12 0022  ld   $22
              aa13 00d0  ld   $d0
              aa14 0006  ld   $06
              aa15 00a5  ld   $a5
              aa16 0041  ld   $41
              aa17 0049  ld   $49
              aa18 00ff  ld   $ff
              aa19 0085  ld   $85
              aa1a 0041  ld   $41
              aa1b 0008  ld   $08
              aa1c 0000  ld   $00
              aa1d 0000  ld   $00
              aa1e 00c8  ld   $c8
              aa1f 00f0  ld   $f0
              aa20 0011  ld   $11
              aa21 00b1  ld   $b1
              aa22 0092  ld   $92
              aa23 00d0  ld   $d0
              aa24 0010  ld   $10
              aa25 00a8  ld   $a8
              aa26 00b1  ld   $b1
              aa27 0092  ld   $92
              aa28 00aa  ld   $aa
              aa29 00c8  ld   $c8
              aa2a 00b1  ld   $b1
              aa2b 0092  ld   $92
              aa2c 0086  ld   $86
              aa2d 0092  ld   $92
              aa2e 0085  ld   $85
              aa2f 0093  ld   $93
              aa30 00d0  ld   $d0
              aa31 00b5  ld   $b5
              aa32 004c  ld   $4c
              aa33 0071  ld   $71
              aa34 0005  ld   $05
              aa35 0010  ld   $10
              aa36 00da  ld   $da
              aa37 00c9  ld   $c9
              aa38 00ff  ld   $ff
              aa39 00f0  ld   $f0
              aa3a 00d6  ld   $d6
              aa3b 0024  ld   $24
              aa3c 0041  ld   $41
              aa3d 0030  ld   $30
              aa3e 00d2  ld   $d2
              aa3f 0038  ld   $38
              aa40 00e9  ld   $e9
              aa41 007f  ld   $7f
              aa42 00aa  ld   $aa
              aa43 0084  ld   $84
              aa44 007b  ld   $7b
              aa45 00a0  ld   $a0
              aa46 00ff  ld   $ff
              aa47 00ca  ld   $ca
              aa48 00f0  ld   $f0
              aa49 0008  ld   $08
              aa4a 00c8  ld   $c8
              aa4b 00b9  ld   $b9
              aa4c 009e  ld   $9e
              aa4d 0002  ld   $02
              aa4e 0010  ld   $10
              aa4f 00fa  ld   $fa
              aa50 0030  ld   $30
              aa51 00f5  ld   $f5
              aa52 00c8  ld   $c8
              aa53 00b9  ld   $b9
              aa54 009e  ld   $9e
              aa55 0002  ld   $02
              aa56 0030  ld   $30
              aa57 00b5  ld   $b5
              aa58 0020  ld   $20
              aa59 0011  ld   $11
              aa5a 000c  ld   $0c
              aa5b 00d0  ld   $d0
              aa5c 00f5  ld   $f5
              aa5d 00a9  ld   $a9
              aa5e 0080  ld   $80
              aa5f 0085  ld   $85
              aa60 0042  ld   $42
              aa61 0020  ld   $20
              aa62 0094  ld   $94
              aa63 000a  ld   $0a
              aa64 0020  ld   $20
              aa65 00a2  ld   $a2
              aa66 0004  ld   $04
              aa67 00d0  ld   $d0
              aa68 0005  ld   $05
              aa69 008a  ld   $8a
              aa6a 0069  ld   $69
              aa6b 000f  ld   $0f
              aa6c 00aa  ld   $aa
              aa6d 009a  ld   $9a
              aa6e 0068  ld   $68
              aa6f 0068  ld   $68
              aa70 00a9  ld   $a9
              aa71 0009  ld   $09
              aa72 0020  ld   $20
              aa73 000e  ld   $0e
              aa74 0005  ld   $05
              aa75 0020  ld   $20
              aa76 00f5  ld   $f5
              aa77 0009  ld   $09
              aa78 0018  ld   $18
              aa79 0098  ld   $98
              aa7a 0065  ld   $65
              aa7b 00a6  ld   $a6
              aa7c 0048  ld   $48
              aa7d 00a5  ld   $a5
              aa7e 00a7  ld   $a7
              aa7f 0069  ld   $69
              aa80 0000  ld   $00
              aa81 0048  ld   $48
              aa82 00a5  ld   $a5
              aa83 006c  ld   $6c
              aa84 0048  ld   $48
              aa85 00a5  ld   $a5
              aa86 006b  ld   $6b
              aa87 0048  ld   $48
              aa88 00a9  ld   $a9
              aa89 009e  ld   $9e
              aa8a 0020  ld   $20
              aa8b 0065  ld   $65
              aa8c 000f  ld   $0f
              aa8d 0020  ld   $20
              aa8e 00f9  ld   $f9
              aa8f 000d  ld   $0d
              aa90 0020  ld   $20
              aa91 00f6  ld   $f6
              aa92 000d  ld   $0d
              aa93 00a5  ld   $a5
              aa94 0099  ld   $99
              aa95 0009  ld   $09
              aa96 007f  ld   $7f
              aa97 0025  ld   $25
              aa98 0095  ld   $95
              aa99 0085  ld   $85
              aa9a 0095  ld   $95
              aa9b 00a9  ld   $a9
              aa9c 0088  ld   $88
              aa9d 00a0  ld   $a0
              aa9e 0008  ld   $08
              aa9f 0085  ld   $85
              aaa0 0054  ld   $54
              aaa1 0084  ld   $84
              aaa2 0055  ld   $55
              aaa3 004c  ld   $4c
              aaa4 00af  ld   $af
              aaa5 000e  ld   $0e
              aaa6 00a9  ld   $a9
              aaa7 0034  ld   $34
              aaa8 00a0  ld   $a0
              aaa9 001a  ld   $1a
              aaaa 0020  ld   $20
              aaab 001a  ld   $1a
              aaac 001c  ld   $1c
              aaad 0020  ld   $20
              aaae 0071  ld   $71
              aaaf 0022  ld   $22
              aab0 00c9  ld   $c9
              aab1 00a3  ld   $a3
              aab2 00d0  ld   $d0
              aab3 0006  ld   $06
              aab4 0020  ld   $20
              aab5 006b  ld   $6b
              aab6 0022  ld   $22
              aab7 0020  ld   $20
              aab8 00f6  ld   $f6
              aab9 000d  ld   $0d
              aaba 0020  ld   $20
              aabb 00a3  ld   $a3
              aabc 001c  ld   $1c
              aabd 0020  ld   $20
              aabe 00a4  ld   $a4
              aabf 000e  ld   $0e
              aac0 00a5  ld   $a5
              aac1 007c  ld   $7c
              aac2 0048  ld   $48
              aac3 00a5  ld   $a5
              aac4 007b  ld   $7b
              aac5 0048  ld   $48
              aac6 00a9  ld   $a9
              aac7 0081  ld   $81
              aac8 0048  ld   $48
              aac9 0020  ld   $20
              aaca 0000  ld   $00
              aacb 002d  ld   $2d
              aacc 00a5  ld   $a5
              aacd 00a6  ld   $a6
              aace 00a4  ld   $a4
              aacf 00a7  ld   $a7
              aad0 00c0  ld   $c0
              aad1 0024  ld   $24
              aad2 00ea  ld   $ea
              aad3 00f0  ld   $f0
              aad4 0004  ld   $04
              aad5 0085  ld   $85
              aad6 006f  ld   $6f
              aad7 0084  ld   $84
              aad8 0070  ld   $70
              aad9 00a0  ld   $a0
              aada 0000  ld   $00
              aadb 00b1  ld   $b1
              aadc 00a6  ld   $a6
              aadd 00d0  ld   $d0
              aade 0040  ld   $40
              aadf 00a0  ld   $a0
              aae0 0002  ld   $02
              aae1 00b1  ld   $b1
              aae2 00a6  ld   $a6
              aae3 0018  ld   $18
              aae4 00d0  ld   $d0
              aae5 0003  ld   $03
              aae6 004c  ld   $4c
              aae7 0042  ld   $42
              aae8 0009  ld   $09
              aae9 00c8  ld   $c8
              aaea 00b1  ld   $b1
              aaeb 00a6  ld   $a6
              aaec 0085  ld   $85
              aaed 006b  ld   $6b
              aaee 00c8  ld   $c8
              aaef 00b1  ld   $b1
              aaf0 00a6  ld   $a6
              aaf1 0085  ld   $85
              aaf2 006c  ld   $6c
              aaf3 0098  ld   $98
              aaf4 0065  ld   $65
              aaf5 00a6  ld   $a6
              aaf6 0085  ld   $85
              aaf7 00a6  ld   $a6
              aaf8 0090  ld   $90
              aaf9 0002  ld   $02
              aafa 00e6  ld   $e6
              aafb fe00  bra  ac          ;+-----------------------------------+
              aafc fcfd  bra  $aafd       ;|                                   |
              aafd 1418  ld   $18,y       ;| Trampoline for page $aa00 lookups |
              aafe e006  jmp  y,$06       ;|                                   |
              aaff c218  st   [$18]       ;+-----------------------------------+
              ab00 00a7  ld   $a7
              ab01 0020  ld   $20
              ab02 006b  ld   $6b
              ab03 0022  ld   $22
              ab04 0020  ld   $20
              ab05 00e7  ld   $e7
              ab06 0008  ld   $08
              ab07 004c  ld   $4c
              ab08 00ab  ld   $ab
              ab09 0008  ld   $08
              ab0a 00f0  ld   $f0
              ab0b 003c  ld   $3c
              ab0c 00e9  ld   $e9
              ab0d 0080  ld   $80
              ab0e 0090  ld   $90
              ab0f 0011  ld   $11
              ab10 00c9  ld   $c9
              ab11 001d  ld   $1d
              ab12 00b0  ld   $b0
              ab13 0017  ld   $17
              ab14 000a  ld   $0a
              ab15 00a8  ld   $a8
              ab16 00b9  ld   $b9
              ab17 0019  ld   $19
              ab18 0002  ld   $02
              ab19 0048  ld   $48
              ab1a 00b9  ld   $b9
              ab1b 0018  ld   $18
              ab1c 0002  ld   $02
              ab1d 0048  ld   $48
              ab1e 004c  ld   $4c
              ab1f 006b  ld   $6b
              ab20 0022  ld   $22
              ab21 004c  ld   $4c
              ab22 0094  ld   $94
              ab23 0009  ld   $09
              ab24 0000  ld   $00
              ab25 0000  ld   $00
              ab26 000a  ld   $0a
              ab27 00c9  ld   $c9
              ab28 003a  ld   $3a
              ab29 00f0  ld   $f0
              ab2a 00d9  ld   $d9
              ab2b 004c  ld   $4c
              ab2c 006e  ld   $6e
              ab2d 000f  ld   $0f
              ab2e 00c9  ld   $c9
              ab2f 0045  ld   $45
              ab30 00d0  ld   $d0
              ab31 00f9  ld   $f9
              ab32 0020  ld   $20
              ab33 006b  ld   $6b
              ab34 0022  ld   $22
              ab35 00a9  ld   $a9
              ab36 009e  ld   $9e
              ab37 0020  ld   $20
              ab38 0065  ld   $65
              ab39 000f  ld   $0f
              ab3a 004c  ld   $4c
              ab3b 0094  ld   $94
              ab3c 0009  ld   $09
              ab3d 0038  ld   $38
              ab3e 00a5  ld   $a5
              ab3f 005d  ld   $5d
              ab40 00e9  ld   $e9
              ab41 0001  ld   $01
              ab42 00a4  ld   $a4
              ab43 005e  ld   $5e
              ab44 00b0  ld   $b0
              ab45 0001  ld   $01
              ab46 0088  ld   $88
              ab47 0085  ld   $85
              ab48 0073  ld   $73
              ab49 0084  ld   $84
              ab4a 0074  ld   $74
              ab4b 0060  ld   $60
              ab4c 00b0  ld   $b0
              ab4d 0001  ld   $01
              ab4e 0018  ld   $18
              ab4f 00d0  ld   $d0
              ab50 0040  ld   $40
              ab51 00a5  ld   $a5
              ab52 00a6  ld   $a6
              ab53 00a4  ld   $a4
              ab54 00a7  ld   $a7
              ab55 00a6  ld   $a6
              ab56 006c  ld   $6c
              ab57 00e8  ld   $e8
              ab58 00f0  ld   $f0
              ab59 000c  ld   $0c
              ab5a 0085  ld   $85
              ab5b 006f  ld   $6f
              ab5c 0084  ld   $84
              ab5d 0070  ld   $70
              ab5e 00a5  ld   $a5
              ab5f 006b  ld   $6b
              ab60 00a4  ld   $a4
              ab61 006c  ld   $6c
              ab62 0085  ld   $85
              ab63 006d  ld   $6d
              ab64 0084  ld   $84
              ab65 006e  ld   $6e
              ab66 0068  ld   $68
              ab67 0068  ld   $68
              ab68 00a9  ld   $a9
              ab69 009a  ld   $9a
              ab6a 00a0  ld   $a0
              ab6b 0004  ld   $04
              ab6c 00a2  ld   $a2
              ab6d 0000  ld   $00
              ab6e 0086  ld   $86
              ab6f 0045  ld   $45
              ab70 0090  ld   $90
              ab71 0003  ld   $03
              ab72 004c  ld   $4c
              ab73 0066  ld   $66
              ab74 0005  ld   $05
              ab75 004c  ld   $4c
              ab76 0071  ld   $71
              ab77 0005  ld   $05
              ab78 00d0  ld   $d0
              ab79 0017  ld   $17
              ab7a 00a2  ld   $a2
              ab7b 00d2  ld   $d2
              ab7c 00a4  ld   $a4
              ab7d 0070  ld   $70
              ab7e 00d0  ld   $d0
              ab7f 0003  ld   $03
              ab80 004c  ld   $4c
              ab81 004a  ld   $4a
              ab82 0005  ld   $05
              ab83 00a5  ld   $a5
              ab84 006f  ld   $6f
              ab85 0085  ld   $85
              ab86 00a6  ld   $a6
              ab87 0084  ld   $84
              ab88 00a7  ld   $a7
              ab89 00a5  ld   $a5
              ab8a 006d  ld   $6d
              ab8b 00a4  ld   $a4
              ab8c 006e  ld   $6e
              ab8d 0085  ld   $85
              ab8e 006b  ld   $6b
              ab8f 0084  ld   $84
              ab90 006c  ld   $6c
              ab91 0060  ld   $60
              ab92 00d0  ld   $d0
              ab93 0003  ld   $03
              ab94 004c  ld   $4c
              ab95 0059  ld   $59
              ab96 0007  ld   $07
              ab97 0020  ld   $20
              ab98 0060  ld   $60
              ab99 0007  ld   $07
              ab9a 004c  ld   $4c
              ab9b 008b  ld   $8b
              ab9c 0009  ld   $09
              ab9d 00a9  ld   $a9
              ab9e 0003  ld   $03
              ab9f 0020  ld   $20
              aba0 000e  ld   $0e
              aba1 0005  ld   $05
              aba2 00a5  ld   $a5
              aba3 00a7  ld   $a7
              aba4 0048  ld   $48
              aba5 00a5  ld   $a5
              aba6 00a6  ld   $a6
              aba7 0048  ld   $48
              aba8 00a5  ld   $a5
              aba9 006c  ld   $6c
              abaa 0048  ld   $48
              abab 00a5  ld   $a5
              abac 006b  ld   $6b
              abad 0048  ld   $48
              abae 00a9  ld   $a9
              abaf 008c  ld   $8c
              abb0 0048  ld   $48
              abb1 0020  ld   $20
              abb2 0071  ld   $71
              abb3 0022  ld   $22
              abb4 0020  ld   $20
              abb5 0094  ld   $94
              abb6 0009  ld   $09
              abb7 004c  ld   $4c
              abb8 00ab  ld   $ab
              abb9 0008  ld   $08
              abba 0020  ld   $20
              abbb 005a  ld   $5a
              abbc 000a  ld   $0a
              abbd 0020  ld   $20
              abbe 00f8  ld   $f8
              abbf 0009  ld   $09
              abc0 00a5  ld   $a5
              abc1 006c  ld   $6c
              abc2 00c5  ld   $c5
              abc3 0047  ld   $47
              abc4 00b0  ld   $b0
              abc5 000b  ld   $0b
              abc6 0098  ld   $98
              abc7 0038  ld   $38
              abc8 0065  ld   $65
              abc9 00a6  ld   $a6
              abca 00a6  ld   $a6
              abcb 00a7  ld   $a7
              abcc 0090  ld   $90
              abcd 0007  ld   $07
              abce 00e8  ld   $e8
              abcf 00b0  ld   $b0
              abd0 0004  ld   $04
              abd1 00a5  ld   $a5
              abd2 005d  ld   $5d
              abd3 00a6  ld   $a6
              abd4 005e  ld   $5e
              abd5 0020  ld   $20
              abd6 0017  ld   $17
              abd7 0007  ld   $07
              abd8 0090  ld   $90
              abd9 001e  ld   $1e
              abda 00a5  ld   $a5
              abdb 0092  ld   $92
              abdc 00e9  ld   $e9
              abdd 0001  ld   $01
              abde 0085  ld   $85
              abdf 00a6  ld   $a6
              abe0 00a5  ld   $a5
              abe1 0093  ld   $93
              abe2 00e9  ld   $e9
              abe3 0000  ld   $00
              abe4 0085  ld   $85
              abe5 00a7  ld   $a7
              abe6 0060  ld   $60
              abe7 00d0  ld   $d0
              abe8 00fd  ld   $fd
              abe9 00a9  ld   $a9
              abea 00ff  ld   $ff
              abeb 0085  ld   $85
              abec 007c  ld   $7c
              abed 0020  ld   $20
              abee 00a2  ld   $a2
              abef 0004  ld   $04
              abf0 009a  ld   $9a
              abf1 00c9  ld   $c9
              abf2 008c  ld   $8c
              abf3 00f0  ld   $f0
              abf4 000b  ld   $0b
              abf5 00a2  ld   $a2
              abf6 0016  ld   $16
              abf7 002c  ld   $2c
              abf8 00a2  ld   $a2
              abf9 005a  ld   $5a
              abfa 004c  ld   $4c
              abfb fe00  bra  ac          ;+-----------------------------------+
              abfc fcfd  bra  $abfd       ;|                                   |
              abfd 1418  ld   $18,y       ;| Trampoline for page $ab00 lookups |
              abfe e006  jmp  y,$06       ;|                                   |
              abff c218  st   [$18]       ;+-----------------------------------+
              ac00 004a  ld   $4a
              ac01 0005  ld   $05
              ac02 004c  ld   $4c
              ac03 006e  ld   $6e
              ac04 000f  ld   $0f
              ac05 0068  ld   $68
              ac06 0068  ld   $68
              ac07 0085  ld   $85
              ac08 006b  ld   $6b
              ac09 0068  ld   $68
              ac0a 0085  ld   $85
              ac0b 006c  ld   $6c
              ac0c 0068  ld   $68
              ac0d 0085  ld   $85
              ac0e 00a6  ld   $a6
              ac0f 0068  ld   $68
              ac10 0085  ld   $85
              ac11 00a7  ld   $a7
              ac12 0020  ld   $20
              ac13 00f5  ld   $f5
              ac14 0009  ld   $09
              ac15 0098  ld   $98
              ac16 0018  ld   $18
              ac17 0065  ld   $65
              ac18 00a6  ld   $a6
              ac19 0085  ld   $85
              ac1a 00a6  ld   $a6
              ac1b 0090  ld   $90
              ac1c 0002  ld   $02
              ac1d 00e6  ld   $e6
              ac1e 00a7  ld   $a7
              ac1f 0060  ld   $60
              ac20 00a2  ld   $a2
              ac21 003a  ld   $3a
              ac22 002c  ld   $2c
              ac23 00a2  ld   $a2
              ac24 0000  ld   $00
              ac25 0086  ld   $86
              ac26 003b  ld   $3b
              ac27 00a0  ld   $a0
              ac28 0000  ld   $00
              ac29 0084  ld   $84
              ac2a 003c  ld   $3c
              ac2b 000a  ld   $0a
              ac2c 0000  ld   $00
              ac2d 0000  ld   $00
              ac2e 00a5  ld   $a5
              ac2f 003c  ld   $3c
              ac30 00a6  ld   $a6
              ac31 003b  ld   $3b
              ac32 0085  ld   $85
              ac33 003b  ld   $3b
              ac34 0086  ld   $86
              ac35 003c  ld   $3c
              ac36 00b1  ld   $b1
              ac37 00a6  ld   $a6
              ac38 00f0  ld   $f0
              ac39 00e8  ld   $e8
              ac3a 00c5  ld   $c5
              ac3b 003c  ld   $3c
              ac3c 00f0  ld   $f0
              ac3d 00e4  ld   $e4
              ac3e 00c8  ld   $c8
              ac3f 00c9  ld   $c9
              ac40 0022  ld   $22
              ac41 00d0  ld   $d0
              ac42 00f3  ld   $f3
              ac43 00f0  ld   $f0
              ac44 00e9  ld   $e9
              ac45 0020  ld   $20
              ac46 000a  ld   $0a
              ac47 000e  ld   $0e
              ac48 0020  ld   $20
              ac49 0071  ld   $71
              ac4a 0022  ld   $22
              ac4b 00c9  ld   $c9
              ac4c 0088  ld   $88
              ac4d 00f0  ld   $f0
              ac4e 0005  ld   $05
              ac4f 00a9  ld   $a9
              ac50 00a1  ld   $a1
              ac51 0020  ld   $20
              ac52 0065  ld   $65
              ac53 000f  ld   $0f
              ac54 00a5  ld   $a5
              ac55 0094  ld   $94
              ac56 00d0  ld   $d0
              ac57 0005  ld   $05
              ac58 0020  ld   $20
              ac59 00f8  ld   $f8
              ac5a 0009  ld   $09
              ac5b 00f0  ld   $f0
              ac5c 00bb  ld   $bb
              ac5d 0020  ld   $20
              ac5e 0071  ld   $71
              ac5f 0022  ld   $22
              ac60 00b0  ld   $b0
              ac61 0003  ld   $03
              ac62 004c  ld   $4c
              ac63 0094  ld   $94
              ac64 0009  ld   $09
              ac65 004c  ld   $4c
              ac66 00e7  ld   $e7
              ac67 0008  ld   $08
              ac68 0020  ld   $20
              ac69 00da  ld   $da
              ac6a 0017  ld   $17
              ac6b 0048  ld   $48
              ac6c 00c9  ld   $c9
              ac6d 008c  ld   $8c
              ac6e 00f0  ld   $f0
              ac6f 0004  ld   $04
              ac70 00c9  ld   $c9
              ac71 0088  ld   $88
              ac72 00d0  ld   $d0
              ac73 0091  ld   $91
              ac74 00c6  ld   $c6
              ac75 0098  ld   $98
              ac76 00d0  ld   $d0
              ac77 0004  ld   $04
              ac78 0068  ld   $68
              ac79 004c  ld   $4c
              ac7a 00e9  ld   $e9
              ac7b 0008  ld   $08
              ac7c 0020  ld   $20
              ac7d 006b  ld   $6b
              ac7e 0022  ld   $22
              ac7f 0020  ld   $20
              ac80 005a  ld   $5a
              ac81 000a  ld   $0a
              ac82 00c9  ld   $c9
              ac83 002c  ld   $2c
              ac84 00f0  ld   $f0
              ac85 00ee  ld   $ee
              ac86 0068  ld   $68
              ac87 0060  ld   $60
              ac88 00a2  ld   $a2
              ac89 0000  ld   $00
              ac8a 0086  ld   $86
              ac8b 0046  ld   $46
              ac8c 0086  ld   $86
              ac8d 0047  ld   $47
              ac8e 00b0  ld   $b0
              ac8f 00f7  ld   $f7
              ac90 00e9  ld   $e9
              ac91 002f  ld   $2f
              ac92 0085  ld   $85
              ac93 003b  ld   $3b
              ac94 00a5  ld   $a5
              ac95 0047  ld   $47
              ac96 0085  ld   $85
              ac97 0054  ld   $54
              ac98 00c9  ld   $c9
              ac99 0019  ld   $19
              ac9a 00b0  ld   $b0
              ac9b 00d4  ld   $d4
              ac9c 00a5  ld   $a5
              ac9d 0046  ld   $46
              ac9e 000a  ld   $0a
              ac9f 0026  ld   $26
              aca0 0054  ld   $54
              aca1 000a  ld   $0a
              aca2 0026  ld   $26
              aca3 0054  ld   $54
              aca4 0065  ld   $65
              aca5 0046  ld   $46
              aca6 0085  ld   $85
              aca7 0046  ld   $46
              aca8 00a5  ld   $a5
              aca9 0054  ld   $54
              acaa 0065  ld   $65
              acab 0047  ld   $47
              acac 0085  ld   $85
              acad 0047  ld   $47
              acae 0006  ld   $06
              acaf 0046  ld   $46
              acb0 0026  ld   $26
              acb1 0047  ld   $47
              acb2 00a5  ld   $a5
              acb3 0046  ld   $46
              acb4 0065  ld   $65
              acb5 003b  ld   $3b
              acb6 0085  ld   $85
              acb7 0046  ld   $46
              acb8 0090  ld   $90
              acb9 0002  ld   $02
              acba 00e6  ld   $e6
              acbb 0047  ld   $47
              acbc 0020  ld   $20
              acbd 006b  ld   $6b
              acbe 0022  ld   $22
              acbf 004c  ld   $4c
              acc0 0060  ld   $60
              acc1 000a  ld   $0a
              acc2 0020  ld   $20
              acc3 00d0  ld   $d0
              acc4 0010  ld   $10
              acc5 0085  ld   $85
              acc6 007b  ld   $7b
              acc7 0084  ld   $84
              acc8 007c  ld   $7c
              acc9 00a9  ld   $a9
              acca 00ac  ld   $ac
              accb 0020  ld   $20
              accc 0065  ld   $65
              accd 000f  ld   $0f
              acce 00a5  ld   $a5
              accf 0040  ld   $40
              acd0 0048  ld   $48
              acd1 00a5  ld   $a5
              acd2 003f  ld   $3f
              acd3 0048  ld   $48
              acd4 0020  ld   $20
              acd5 000a  ld   $0a
              acd6 000e  ld   $0e
              acd7 0068  ld   $68
              acd8 002a  ld   $2a
              acd9 0020  ld   $20
              acda 00fc  ld   $fc
              acdb 000d  ld   $0d
              acdc 00d0  ld   $d0
              acdd 0018  ld   $18
              acde 0068  ld   $68
              acdf 0010  ld   $10
              ace0 0012  ld   $12
              ace1 0020  ld   $20
              ace2 0093  ld   $93
              ace3 001c  ld   $1c
              ace4 0020  ld   $20
              ace5 00fd  ld   $fd
              ace6 0011  ld   $11
              ace7 00a0  ld   $a0
              ace8 0000  ld   $00
              ace9 00a5  ld   $a5
              acea 0097  ld   $97
              aceb 0091  ld   $91
              acec 007b  ld   $7b
              aced 00c8  ld   $c8
              acee 00a5  ld   $a5
              acef 0098  ld   $98
              acf0 0091  ld   $91
              acf1 007b  ld   $7b
              acf2 0060  ld   $60
              acf3 004c  ld   $4c
              acf4 0048  ld   $48
              acf5 001c  ld   $1c
              acf6 0068  ld   $68
              acf7 00a4  ld   $a4
              acf8 007c  ld   $7c
              acf9 00c0  ld   $c0
              acfa 001f  ld   $1f
              acfb fe00  bra  ac          ;+-----------------------------------+
              acfc fcfd  bra  $acfd       ;|                                   |
              acfd 1418  ld   $18,y       ;| Trampoline for page $ac00 lookups |
              acfe e006  jmp  y,$06       ;|                                   |
              acff c218  st   [$18]       ;+-----------------------------------+
              ad00 00d0  ld   $d0
              ad01 0050  ld   $50
              ad02 0020  ld   $20
              ad03 00e2  ld   $e2
              ad04 0016  ld   $16
              ad05 00c9  ld   $c9
              ad06 0006  ld   $06
              ad07 00d0  ld   $d0
              ad08 0041  ld   $41
              ad09 00a0  ld   $a0
              ad0a 0000  ld   $00
              ad0b 0084  ld   $84
              ad0c 0094  ld   $94
              ad0d 0084  ld   $84
              ad0e 0099  ld   $99
              ad0f 0084  ld   $84
              ad10 00a4  ld   $a4
              ad11 0020  ld   $20
              ad12 0010  ld   $10
              ad13 000b  ld   $0b
              ad14 0020  ld   $20
              ad15 005a  ld   $5a
              ad16 001b  ld   $1b
              ad17 00e6  ld   $e6
              ad18 00a4  ld   $a4
              ad19 00a4  ld   $a4
              ad1a 00a4  ld   $a4
              ad1b 0020  ld   $20
              ad1c 0010  ld   $10
              ad1d 000b  ld   $0b
              ad1e 0020  ld   $20
              ad1f 0084  ld   $84
              ad20 001c  ld   $1c
              ad21 00aa  ld   $aa
              ad22 00f0  ld   $f0
              ad23 0005  ld   $05
              ad24 00e8  ld   $e8
              ad25 008a  ld   $8a
              ad26 0020  ld   $20
              ad27 0065  ld   $65
              ad28 001b  ld   $1b
              ad29 00a4  ld   $a4
              ad2a 00a4  ld   $a4
              ad2b 00c8  ld   $c8
              ad2c 00c0  ld   $c0
              ad2d 0006  ld   $06
              ad2e 00d0  ld   $d0
              ad2f 00df  ld   $df
              ad30 0020  ld   $20
              ad31 005a  ld   $5a
              ad32 001b  ld   $1b
              ad33 000b  ld   $0b
              ad34 0000  ld   $00
              ad35 0000  ld   $00
              ad36 0020  ld   $20
              ad37 0013  ld   $13
              ad38 001d  ld   $1d
              ad39 00a2  ld   $a2
              ad3a 0002  ld   $02
              ad3b 0078  ld   $78
              ad3c 00b5  ld   $b5
              ad3d 0096  ld   $96
              ad3e 009d  ld   $9d
              ad3f 0000  ld   $00
              ad40 0002  ld   $02
              ad41 00ca  ld   $ca
              ad42 0010  ld   $10
              ad43 00f8  ld   $f8
              ad44 0058  ld   $58
              ad45 0060  ld   $60
              ad46 00b1  ld   $b1
              ad47 0054  ld   $54
              ad48 0020  ld   $20
              ad49 007d  ld   $7d
              ad4a 0022  ld   $22
              ad4b 0090  ld   $90
              ad4c 0003  ld   $03
              ad4d 004c  ld   $4c
              ad4e 0082  ld   $82
              ad4f 0012  ld   $12
              ad50 00e9  ld   $e9
              ad51 002f  ld   $2f
              ad52 004c  ld   $4c
              ad53 00f6  ld   $f6
              ad54 001d  ld   $1d
              ad55 00a0  ld   $a0
              ad56 0002  ld   $02
              ad57 00b1  ld   $b1
              ad58 0097  ld   $97
              ad59 00c5  ld   $c5
              ad5a 0066  ld   $66
              ad5b 0090  ld   $90
              ad5c 0017  ld   $17
              ad5d 00d0  ld   $d0
              ad5e 0007  ld   $07
              ad5f 0088  ld   $88
              ad60 00b1  ld   $b1
              ad61 0097  ld   $97
              ad62 00c5  ld   $c5
              ad63 0065  ld   $65
              ad64 0090  ld   $90
              ad65 000e  ld   $0e
              ad66 00a4  ld   $a4
              ad67 0098  ld   $98
              ad68 00c4  ld   $c4
              ad69 0060  ld   $60
              ad6a 0090  ld   $90
              ad6b 0008  ld   $08
              ad6c 00d0  ld   $d0
              ad6d 000d  ld   $0d
              ad6e 00a5  ld   $a5
              ad6f 0097  ld   $97
              ad70 00c5  ld   $c5
              ad71 005f  ld   $5f
              ad72 00b0  ld   $b0
              ad73 0007  ld   $07
              ad74 00a5  ld   $a5
              ad75 0097  ld   $97
              ad76 00a4  ld   $a4
              ad77 0098  ld   $98
              ad78 004c  ld   $4c
              ad79 005b  ld   $5b
              ad7a 000b  ld   $0b
              ad7b 00a0  ld   $a0
              ad7c 0000  ld   $00
              ad7d 00b1  ld   $b1
              ad7e 0097  ld   $97
              ad7f 0020  ld   $20
              ad80 00b1  ld   $b1
              ad81 0014  ld   $14
              ad82 00a5  ld   $a5
              ad83 0083  ld   $83
              ad84 00a4  ld   $a4
              ad85 0084  ld   $84
              ad86 0085  ld   $85
              ad87 00a2  ld   $a2
              ad88 0084  ld   $84
              ad89 00a3  ld   $a3
              ad8a 0020  ld   $20
              ad8b 00b6  ld   $b6
              ad8c 0016  ld   $16
              ad8d 00a9  ld   $a9
              ad8e 0094  ld   $94
              ad8f 00a0  ld   $a0
              ad90 0000  ld   $00
              ad91 0085  ld   $85
              ad92 0083  ld   $83
              ad93 0084  ld   $84
              ad94 0084  ld   $84
              ad95 0020  ld   $20
              ad96 0017  ld   $17
              ad97 0017  ld   $17
              ad98 00a0  ld   $a0
              ad99 0000  ld   $00
              ad9a 00b1  ld   $b1
              ad9b 0083  ld   $83
              ad9c 0091  ld   $91
              ad9d 007b  ld   $7b
              ad9e 00c8  ld   $c8
              ad9f 00b1  ld   $b1
              ada0 0083  ld   $83
              ada1 0091  ld   $91
              ada2 007b  ld   $7b
              ada3 00c8  ld   $c8
              ada4 00b1  ld   $b1
              ada5 0083  ld   $83
              ada6 0091  ld   $91
              ada7 007b  ld   $7b
              ada8 0060  ld   $60
              ada9 0020  ld   $20
              adaa 00f2  ld   $f2
              adab 000b  ld   $0b
              adac 0020  ld   $20
              adad 0071  ld   $71
              adae 0022  ld   $22
              adaf 00f0  ld   $f0
              adb0 0031  ld   $31
              adb1 00f0  ld   $f0
              adb2 003b  ld   $3b
              adb3 00c9  ld   $c9
              adb4 009d  ld   $9d
              adb5 00f0  ld   $f0
              adb6 0049  ld   $49
              adb7 00c9  ld   $c9
              adb8 00a0  ld   $a0
              adb9 0018  ld   $18
              adba 00f0  ld   $f0
              adbb 0044  ld   $44
              adbc 00c9  ld   $c9
              adbd 002c  ld   $2c
              adbe 00f0  ld   $f0
              adbf 002f  ld   $2f
              adc0 00c9  ld   $c9
              adc1 003b  ld   $3b
              adc2 00f0  ld   $f0
              adc3 0056  ld   $56
              adc4 0020  ld   $20
              adc5 000a  ld   $0a
              adc6 000e  ld   $0e
              adc7 0024  ld   $24
              adc8 003f  ld   $3f
              adc9 0030  ld   $30
              adca 00de  ld   $de
              adcb 0020  ld   $20
              adcc 0055  ld   $55
              adcd 001e  ld   $1e
              adce 0020  ld   $20
              adcf 00c3  ld   $c3
              add0 0014  ld   $14
              add1 0020  ld   $20
              add2 00f2  ld   $f2
              add3 000b  ld   $0b
              add4 0020  ld   $20
              add5 000c  ld   $0c
              add6 000c  ld   $0c
              add7 00d0  ld   $d0
              add8 00d3  ld   $d3
              add9 00a9  ld   $a9
              adda 0000  ld   $00
              addb 009d  ld   $9d
              addc 0005  ld   $05
              addd 0024  ld   $24
              adde 00a2  ld   $a2
              addf 0004  ld   $04
              ade0 00a0  ld   $a0
              ade1 0024  ld   $24
              ade2 00a9  ld   $a9
              ade3 000d  ld   $0d
              ade4 0020  ld   $20
              ade5 0011  ld   $11
              ade6 000c  ld   $0c
              ade7 00a9  ld   $a9
              ade8 000a  ld   $0a
              ade9 0020  ld   $20
              adea 0011  ld   $11
              adeb 000c  ld   $0c
              adec 0049  ld   $49
              aded 00ff  ld   $ff
              adee 0060  ld   $60
              adef 00a5  ld   $a5
              adf0 0030  ld   $30
              adf1 0020  ld   $20
              adf2 007a  ld   $7a
              adf3 0004  ld   $04
              adf4 0098  ld   $98
              adf5 0038  ld   $38
              adf6 00e9  ld   $e9
              adf7 000a  ld   $0a
              adf8 00b0  ld   $b0
              adf9 00fc  ld   $fc
              adfa 0049  ld   $49
              adfb fe00  bra  ac          ;+-----------------------------------+
              adfc fcfd  bra  $adfd       ;|                                   |
              adfd 1418  ld   $18,y       ;| Trampoline for page $ad00 lookups |
              adfe e006  jmp  y,$06       ;|                                   |
              adff c218  st   [$18]       ;+-----------------------------------+
              ae00 00ff  ld   $ff
              ae01 0069  ld   $69
              ae02 0001  ld   $01
              ae03 00d0  ld   $d0
              ae04 0015  ld   $15
              ae05 0008  ld   $08
              ae06 0020  ld   $20
              ae07 00d7  ld   $d7
              ae08 0017  ld   $17
              ae09 00c9  ld   $c9
              ae0a 0029  ld   $29
              ae0b 00d0  ld   $d0
              ae0c 005b  ld   $5b
              ae0d 0028  ld   $28
              ae0e 0090  ld   $90
              ae0f 000b  ld   $0b
              ae10 00a5  ld   $a5
              ae11 0030  ld   $30
              ae12 0020  ld   $20
              ae13 007a  ld   $7a
              ae14 0004  ld   $04
              ae15 008a  ld   $8a
              ae16 00e5  ld   $e5
              ae17 002b  ld   $2b
              ae18 0090  ld   $90
              ae19 0005  ld   $05
              ae1a 00aa  ld   $aa
              ae1b 00e8  ld   $e8
              ae1c 00ca  ld   $ca
              ae1d 00d0  ld   $d0
              ae1e 0006  ld   $06
              ae1f 0020  ld   $20
              ae20 006b  ld   $6b
              ae21 0022  ld   $22
              ae22 004c  ld   $4c
              ae23 007b  ld   $7b
              ae24 000b  ld   $0b
              ae25 0020  ld   $20
              ae26 000c  ld   $0c
              ae27 000c  ld   $0c
              ae28 00d0  ld   $d0
              ae29 00f2  ld   $f2
              ae2a 0020  ld   $20
              ae2b 00c3  ld   $c3
              ae2c 0014  ld   $14
              ae2d 0020  ld   $20
              ae2e 00e2  ld   $e2
              ae2f 0016  ld   $16
              ae30 00aa  ld   $aa
              ae31 00a0  ld   $a0
              ae32 0000  ld   $00
              ae33 00e8  ld   $e8
              ae34 00ca  ld   $ca
              ae35 00f0  ld   $f0
              ae36 00bc  ld   $bc
              ae37 00b1  ld   $b1
              ae38 0054  ld   $54
              ae39 0020  ld   $20
              ae3a 0011  ld   $11
              ae3b 000c  ld   $0c
              ae3c 0000  ld   $00
              ae3d 0000  ld   $00
              ae3e 000c  ld   $0c
              ae3f 00c8  ld   $c8
              ae40 00c9  ld   $c9
              ae41 000d  ld   $0d
              ae42 00d0  ld   $d0
              ae43 00f3  ld   $f3
              ae44 0020  ld   $20
              ae45 00b6  ld   $b6
              ae46 000b  ld   $0b
              ae47 004c  ld   $4c
              ae48 00f9  ld   $f9
              ae49 000b  ld   $0b
              ae4a 00a9  ld   $a9
              ae4b 0020  ld   $20
              ae4c 002c  ld   $2c
              ae4d 00a9  ld   $a9
              ae4e 003f  ld   $3f
              ae4f 0024  ld   $24
              ae50 0045  ld   $45
              ae51 0030  ld   $30
              ae52 0003  ld   $03
              ae53 0020  ld   $20
              ae54 0000  ld   $00
              ae55 002b  ld   $2b
              ae56 0029  ld   $29
              ae57 00ff  ld   $ff
              ae58 0060  ld   $60
              ae59 00a5  ld   $a5
              ae5a 0043  ld   $43
              ae5b 00f0  ld   $f0
              ae5c 0011  ld   $11
              ae5d 0030  ld   $30
              ae5e 0004  ld   $04
              ae5f 00a0  ld   $a0
              ae60 00ff  ld   $ff
              ae61 00d0  ld   $d0
              ae62 0004  ld   $04
              ae63 00a5  ld   $a5
              ae64 0071  ld   $71
              ae65 00a4  ld   $a4
              ae66 0072  ld   $72
              ae67 0085  ld   $85
              ae68 006b  ld   $6b
              ae69 0084  ld   $84
              ae6a 006c  ld   $6c
              ae6b 004c  ld   $4c
              ae6c 006e  ld   $6e
              ae6d 000f  ld   $0f
              ae6e 00a9  ld   $a9
              ae6f 007e  ld   $7e
              ae70 00a0  ld   $a0
              ae71 000d  ld   $0d
              ae72 0020  ld   $20
              ae73 00ef  ld   $ef
              ae74 000b  ld   $0b
              ae75 00a5  ld   $a5
              ae76 006f  ld   $6f
              ae77 00a4  ld   $a4
              ae78 0070  ld   $70
              ae79 0085  ld   $85
              ae7a 00a6  ld   $a6
              ae7b 0084  ld   $84
              ae7c 00a7  ld   $a7
              ae7d 0060  ld   $60
              ae7e 0020  ld   $20
              ae7f 00e2  ld   $e2
              ae80 0013  ld   $13
              ae81 00a2  ld   $a2
              ae82 0006  ld   $06
              ae83 00a0  ld   $a0
              ae84 0024  ld   $24
              ae85 00a9  ld   $a9
              ae86 0000  ld   $00
              ae87 008d  ld   $8d
              ae88 0006  ld   $06
              ae89 0024  ld   $24
              ae8a 00a9  ld   $a9
              ae8b 0040  ld   $40
              ae8c 0020  ld   $20
              ae8d 0089  ld   $89
              ae8e 000c  ld   $0c
              ae8f 0060  ld   $60
              ae90 0046  ld   $46
              ae91 0045  ld   $45
              ae92 00c9  ld   $c9
              ae93 0022  ld   $22
              ae94 00d0  ld   $d0
              ae95 000b  ld   $0b
              ae96 0020  ld   $20
              ae97 0023  ld   $23
              ae98 000f  ld   $0f
              ae99 00a9  ld   $a9
              ae9a 003b  ld   $3b
              ae9b 0020  ld   $20
              ae9c 0065  ld   $65
              ae9d 000f  ld   $0f
              ae9e 0020  ld   $20
              ae9f 00f2  ld   $f2
              aea0 000b  ld   $0b
              aea1 0020  ld   $20
              aea2 00e2  ld   $e2
              aea3 0013  ld   $13
              aea4 00a9  ld   $a9
              aea5 002c  ld   $2c
              aea6 008d  ld   $8d
              aea7 0004  ld   $04
              aea8 0024  ld   $24
              aea9 0020  ld   $20
              aeaa 0077  ld   $77
              aeab 000c  ld   $0c
              aeac 00ad  ld   $ad
              aead 0005  ld   $05
              aeae 0024  ld   $24
              aeaf 00d0  ld   $d0
              aeb0 0014  ld   $14
              aeb1 0018  ld   $18
              aeb2 004c  ld   $4c
              aeb3 0038  ld   $38
              aeb4 0009  ld   $09
              aeb5 0020  ld   $20
              aeb6 000f  ld   $0f
              aeb7 000c  ld   $0c
              aeb8 0020  ld   $20
              aeb9 000c  ld   $0c
              aeba 000c  ld   $0c
              aebb 004c  ld   $4c
              aebc 0057  ld   $57
              aebd 0006  ld   $06
              aebe 00a6  ld   $a6
              aebf 0073  ld   $73
              aec0 00a4  ld   $a4
              aec1 0074  ld   $74
              aec2 00a9  ld   $a9
              aec3 0098  ld   $98
              aec4 002c  ld   $2c
              aec5 00a9  ld   $a9
              aec6 0000  ld   $00
              aec7 0085  ld   $85
              aec8 0043  ld   $43
              aec9 0086  ld   $86
              aeca 0075  ld   $75
              aecb 0084  ld   $84
              aecc 0076  ld   $76
              aecd 0020  ld   $20
              aece 00d0  ld   $d0
              aecf 0010  ld   $10
              aed0 0085  ld   $85
              aed1 007b  ld   $7b
              aed2 0084  ld   $84
              aed3 007c  ld   $7c
              aed4 00a5  ld   $a5
              aed5 00a6  ld   $a6
              aed6 00a4  ld   $a4
              aed7 00a7  ld   $a7
              aed8 0085  ld   $85
              aed9 007d  ld   $7d
              aeda 0084  ld   $84
              aedb 007e  ld   $7e
              aedc 00a6  ld   $a6
              aedd 0075  ld   $75
              aede 00a4  ld   $a4
              aedf 0076  ld   $76
              aee0 0086  ld   $86
              aee1 00a6  ld   $a6
              aee2 0084  ld   $84
              aee3 00a7  ld   $a7
              aee4 0020  ld   $20
              aee5 0071  ld   $71
              aee6 0022  ld   $22
              aee7 00d0  ld   $d0
              aee8 001c  ld   $1c
              aee9 0024  ld   $24
              aeea 0043  ld   $43
              aeeb 0050  ld   $50
              aeec 000c  ld   $0c
              aeed 0020  ld   $20
              aeee 0000  ld   $00
              aeef 002c  ld   $2c
              aef0 008d  ld   $8d
              aef1 0005  ld   $05
              aef2 0024  ld   $24
              aef3 00a2  ld   $a2
              aef4 0004  ld   $04
              aef5 00a0  ld   $a0
              aef6 0024  ld   $24
              aef7 00d0  ld   $d0
              aef8 0008  ld   $08
              aef9 0030  ld   $30
              aefa 0071  ld   $71
              aefb fe00  bra  ac          ;+-----------------------------------+
              aefc fcfd  bra  $aefd       ;|                                   |
              aefd 1418  ld   $18,y       ;| Trampoline for page $ae00 lookups |
              aefe e006  jmp  y,$06       ;|                                   |
              aeff c218  st   [$18]       ;+-----------------------------------+
              af00 0020  ld   $20
              af01 000f  ld   $0f
              af02 000c  ld   $0c
              af03 0020  ld   $20
              af04 0077  ld   $77
              af05 000c  ld   $0c
              af06 0086  ld   $86
              af07 00a6  ld   $a6
              af08 0084  ld   $84
              af09 00a7  ld   $a7
              af0a 0020  ld   $20
              af0b 006b  ld   $6b
              af0c 0022  ld   $22
              af0d 0024  ld   $24
              af0e 003f  ld   $3f
              af0f 0010  ld   $10
              af10 0031  ld   $31
              af11 0024  ld   $24
              af12 0043  ld   $43
              af13 0050  ld   $50
              af14 0009  ld   $09
              af15 00e8  ld   $e8
              af16 0086  ld   $86
              af17 00a6  ld   $a6
              af18 00a9  ld   $a9
              af19 0000  ld   $00
              af1a 0085  ld   $85
              af1b 003b  ld   $3b
              af1c 00f0  ld   $f0
              af1d 000c  ld   $0c
              af1e 0085  ld   $85
              af1f 003b  ld   $3b
              af20 00c9  ld   $c9
              af21 0022  ld   $22
              af22 00f0  ld   $f0
              af23 0007  ld   $07
              af24 00a9  ld   $a9
              af25 003a  ld   $3a
              af26 0085  ld   $85
              af27 003b  ld   $3b
              af28 00a9  ld   $a9
              af29 002c  ld   $2c
              af2a 0018  ld   $18
              af2b 0085  ld   $85
              af2c 003c  ld   $3c
              af2d 00a5  ld   $a5
              af2e 00a6  ld   $a6
              af2f 00a4  ld   $a4
              af30 00a7  ld   $a7
              af31 0069  ld   $69
              af32 0000  ld   $00
              af33 0090  ld   $90
              af34 0001  ld   $01
              af35 00c8  ld   $c8
              af36 0020  ld   $20
              af37 00c9  ld   $c9
              af38 0014  ld   $14
              af39 0020  ld   $20
              af3a 001f  ld   $1f
              af3b 0018  ld   $18
              af3c 0020  ld   $20
              af3d 00c9  ld   $c9
              af3e 000a  ld   $0a
              af3f 004c  ld   $4c
              af40 0007  ld   $07
              af41 000d  ld   $0d
              af42 0020  ld   $20
              af43 000d  ld   $0d
              af44 0000  ld   $00
              af45 0000  ld   $00
              af46 006b  ld   $6b
              af47 001d  ld   $1d
              af48 00a5  ld   $a5
              af49 0040  ld   $40
              af4a 0020  ld   $20
              af4b 00b1  ld   $b1
              af4c 000a  ld   $0a
              af4d 0020  ld   $20
              af4e 0071  ld   $71
              af4f 0022  ld   $22
              af50 00f0  ld   $f0
              af51 0007  ld   $07
              af52 00c9  ld   $c9
              af53 002c  ld   $2c
              af54 00f0  ld   $f0
              af55 0003  ld   $03
              af56 004c  ld   $4c
              af57 001b  ld   $1b
              af58 000c  ld   $0c
              af59 00a5  ld   $a5
              af5a 00a6  ld   $a6
              af5b 00a4  ld   $a4
              af5c 00a7  ld   $a7
              af5d 0085  ld   $85
              af5e 0075  ld   $75
              af5f 0084  ld   $84
              af60 0076  ld   $76
              af61 00a5  ld   $a5
              af62 007d  ld   $7d
              af63 00a4  ld   $a4
              af64 007e  ld   $7e
              af65 0085  ld   $85
              af66 00a6  ld   $a6
              af67 0084  ld   $84
              af68 00a7  ld   $a7
              af69 0020  ld   $20
              af6a 0071  ld   $71
              af6b 0022  ld   $22
              af6c 00f0  ld   $f0
              af6d 002c  ld   $2c
              af6e 0020  ld   $20
              af6f 0063  ld   $63
              af70 000f  ld   $0f
              af71 004c  ld   $4c
              af72 008f  ld   $8f
              af73 000c  ld   $0c
              af74 0020  ld   $20
              af75 00f5  ld   $f5
              af76 0009  ld   $09
              af77 00c8  ld   $c8
              af78 00aa  ld   $aa
              af79 00d0  ld   $d0
              af7a 0012  ld   $12
              af7b 00a2  ld   $a2
              af7c 002a  ld   $2a
              af7d 00c8  ld   $c8
              af7e 00b1  ld   $b1
              af7f 00a6  ld   $a6
              af80 00f0  ld   $f0
              af81 0069  ld   $69
              af82 00c8  ld   $c8
              af83 00b1  ld   $b1
              af84 00a6  ld   $a6
              af85 0085  ld   $85
              af86 0071  ld   $71
              af87 00c8  ld   $c8
              af88 00b1  ld   $b1
              af89 00a6  ld   $a6
              af8a 00c8  ld   $c8
              af8b 0085  ld   $85
              af8c 0072  ld   $72
              af8d 00b1  ld   $b1
              af8e 00a6  ld   $a6
              af8f 00aa  ld   $aa
              af90 0020  ld   $20
              af91 00ea  ld   $ea
              af92 0009  ld   $09
              af93 00e0  ld   $e0
              af94 0083  ld   $83
              af95 00d0  ld   $d0
              af96 00dd  ld   $dd
              af97 004c  ld   $4c
              af98 00c7  ld   $c7
              af99 000c  ld   $0c
              af9a 00a5  ld   $a5
              af9b 0075  ld   $75
              af9c 00a4  ld   $a4
              af9d 0076  ld   $76
              af9e 00a6  ld   $a6
              af9f 0043  ld   $43
              afa0 0010  ld   $10
              afa1 0003  ld   $03
              afa2 004c  ld   $4c
              afa3 0021  ld   $21
              afa4 0009  ld   $09
              afa5 00a0  ld   $a0
              afa6 0000  ld   $00
              afa7 00b1  ld   $b1
              afa8 0075  ld   $75
              afa9 00f0  ld   $f0
              afaa 0007  ld   $07
              afab 00a9  ld   $a9
              afac 006d  ld   $6d
              afad 00a0  ld   $a0
              afae 000d  ld   $0d
              afaf 004c  ld   $4c
              afb0 00ef  ld   $ef
              afb1 000b  ld   $0b
              afb2 0060  ld   $60
              afb3 003f  ld   $3f
              afb4 0045  ld   $45
              afb5 0058  ld   $58
              afb6 0054  ld   $54
              afb7 0052  ld   $52
              afb8 0041  ld   $41
              afb9 0020  ld   $20
              afba 0049  ld   $49
              afbb 0047  ld   $47
              afbc 004e  ld   $4e
              afbd 004f  ld   $4f
              afbe 0052  ld   $52
              afbf 0045  ld   $45
              afc0 0044  ld   $44
              afc1 000d  ld   $0d
              afc2 000a  ld   $0a
              afc3 0000  ld   $00
              afc4 003f  ld   $3f
              afc5 0052  ld   $52
              afc6 0045  ld   $45
              afc7 0044  ld   $44
              afc8 004f  ld   $4f
              afc9 0020  ld   $20
              afca 0046  ld   $46
              afcb 0052  ld   $52
              afcc 004f  ld   $4f
              afcd 004d  ld   $4d
              afce 0020  ld   $20
              afcf 0053  ld   $53
              afd0 0054  ld   $54
              afd1 0041  ld   $41
              afd2 0052  ld   $52
              afd3 0054  ld   $54
              afd4 000d  ld   $0d
              afd5 000a  ld   $0a
              afd6 0000  ld   $00
              afd7 00d0  ld   $d0
              afd8 0004  ld   $04
              afd9 00a0  ld   $a0
              afda 0000  ld   $00
              afdb 00f0  ld   $f0
              afdc 0003  ld   $03
              afdd 0020  ld   $20
              afde 00d0  ld   $d0
              afdf 0010  ld   $10
              afe0 0085  ld   $85
              afe1 007b  ld   $7b
              afe2 0084  ld   $84
              afe3 007c  ld   $7c
              afe4 0020  ld   $20
              afe5 00a2  ld   $a2
              afe6 0004  ld   $04
              afe7 00f0  ld   $f0
              afe8 0004  ld   $04
              afe9 00a2  ld   $a2
              afea 0000  ld   $00
              afeb 00f0  ld   $f0
              afec 0060  ld   $60
              afed 009a  ld   $9a
              afee 008a  ld   $8a
              afef 0018  ld   $18
              aff0 0069  ld   $69
              aff1 0004  ld   $04
              aff2 0048  ld   $48
              aff3 0069  ld   $69
              aff4 0006  ld   $06
              aff5 0085  ld   $85
              aff6 0056  ld   $56
              aff7 0068  ld   $68
              aff8 00a0  ld   $a0
              aff9 0000  ld   $00
              affa 0020  ld   $20
              affb fe00  bra  ac          ;+-----------------------------------+
              affc fcfd  bra  $affd       ;|                                   |
              affd 1418  ld   $18,y       ;| Trampoline for page $af00 lookups |
              affe e006  jmp  y,$06       ;|                                   |
              afff c218  st   [$18]       ;+-----------------------------------+
              b000 001a  ld   $1a
              b001 001c  ld   $1c
              b002 00ba  ld   $ba
              b003 00b5  ld   $b5
              b004 0009  ld   $09
              b005 0085  ld   $85
              b006 0099  ld   $99
              b007 00a5  ld   $a5
              b008 007b  ld   $7b
              b009 00a4  ld   $a4
              b00a 007c  ld   $7c
              b00b 0020  ld   $20
              b00c 00df  ld   $df
              b00d 0018  ld   $18
              b00e 0020  ld   $20
              b00f 0048  ld   $48
              b010 001c  ld   $1c
              b011 00a0  ld   $a0
              b012 0000  ld   $00
              b013 0020  ld   $20
              b014 00d5  ld   $d5
              b015 001c  ld   $1c
              b016 00ba  ld   $ba
              b017 0038  ld   $38
              b018 00f5  ld   $f5
              b019 0009  ld   $09
              b01a 00f0  ld   $f0
              b01b 0013  ld   $13
              b01c 00b5  ld   $b5
              b01d 000f  ld   $0f
              b01e 0085  ld   $85
              b01f 006b  ld   $6b
              b020 00b5  ld   $b5
              b021 0010  ld   $10
              b022 0085  ld   $85
              b023 006c  ld   $6c
              b024 00b5  ld   $b5
              b025 0012  ld   $12
              b026 0085  ld   $85
              b027 00a6  ld   $a6
              b028 00b5  ld   $b5
              b029 0011  ld   $11
              b02a 0085  ld   $85
              b02b 00a7  ld   $a7
              b02c 004c  ld   $4c
              b02d 00ab  ld   $ab
              b02e 0008  ld   $08
              b02f 008a  ld   $8a
              b030 0069  ld   $69
              b031 0011  ld   $11
              b032 00aa  ld   $aa
              b033 009a  ld   $9a
              b034 0020  ld   $20
              b035 0071  ld   $71
              b036 0022  ld   $22
              b037 00c9  ld   $c9
              b038 002c  ld   $2c
              b039 00d0  ld   $d0
              b03a 00f1  ld   $f1
              b03b 0020  ld   $20
              b03c 006b  ld   $6b
              b03d 0022  ld   $22
              b03e 0020  ld   $20
              b03f 0097  ld   $97
              b040 000d  ld   $0d
              b041 0020  ld   $20
              b042 000a  ld   $0a
              b043 000e  ld   $0e
              b044 0018  ld   $18
              b045 0024  ld   $24
              b046 0038  ld   $38
              b047 0024  ld   $24
              b048 003f  ld   $3f
              b049 0030  ld   $30
              b04a 0003  ld   $03
              b04b 000e  ld   $0e
              b04c 0000  ld   $00
              b04d 0000  ld   $00
              b04e 00b0  ld   $b0
              b04f 0003  ld   $03
              b050 0060  ld   $60
              b051 00b0  ld   $b0
              b052 00fd  ld   $fd
              b053 00a2  ld   $a2
              b054 00a3  ld   $a3
              b055 004c  ld   $4c
              b056 004a  ld   $4a
              b057 0005  ld   $05
              b058 00a6  ld   $a6
              b059 00a6  ld   $a6
              b05a 00d0  ld   $d0
              b05b 0002  ld   $02
              b05c 00c6  ld   $c6
              b05d 00a7  ld   $a7
              b05e 00c6  ld   $c6
              b05f 00a6  ld   $a6
              b060 00a2  ld   $a2
              b061 0000  ld   $00
              b062 0024  ld   $24
              b063 0048  ld   $48
              b064 008a  ld   $8a
              b065 0048  ld   $48
              b066 00a9  ld   $a9
              b067 0001  ld   $01
              b068 0020  ld   $20
              b069 000e  ld   $0e
              b06a 0005  ld   $05
              b06b 0020  ld   $20
              b06c 00ef  ld   $ef
              b06d 000e  ld   $0e
              b06e 00a9  ld   $a9
              b06f 0000  ld   $00
              b070 0085  ld   $85
              b071 007f  ld   $7f
              b072 0020  ld   $20
              b073 0071  ld   $71
              b074 0022  ld   $22
              b075 0038  ld   $38
              b076 00e9  ld   $e9
              b077 00ab  ld   $ab
              b078 0090  ld   $90
              b079 0017  ld   $17
              b07a 00c9  ld   $c9
              b07b 0003  ld   $03
              b07c 00b0  ld   $b0
              b07d 0013  ld   $13
              b07e 00c9  ld   $c9
              b07f 0001  ld   $01
              b080 002a  ld   $2a
              b081 0049  ld   $49
              b082 0001  ld   $01
              b083 0045  ld   $45
              b084 007f  ld   $7f
              b085 00c5  ld   $c5
              b086 007f  ld   $7f
              b087 0090  ld   $90
              b088 0061  ld   $61
              b089 0085  ld   $85
              b08a 007f  ld   $7f
              b08b 0020  ld   $20
              b08c 006b  ld   $6b
              b08d 0022  ld   $22
              b08e 004c  ld   $4c
              b08f 0027  ld   $27
              b090 000e  ld   $0e
              b091 00a6  ld   $a6
              b092 007f  ld   $7f
              b093 00d0  ld   $d0
              b094 002c  ld   $2c
              b095 00b0  ld   $b0
              b096 007b  ld   $7b
              b097 0069  ld   $69
              b098 0007  ld   $07
              b099 0090  ld   $90
              b09a 0077  ld   $77
              b09b 0065  ld   $65
              b09c 003f  ld   $3f
              b09d 00d0  ld   $d0
              b09e 0003  ld   $03
              b09f 004c  ld   $4c
              b0a0 0079  ld   $79
              b0a1 0016  ld   $16
              b0a2 0069  ld   $69
              b0a3 00ff  ld   $ff
              b0a4 0085  ld   $85
              b0a5 0054  ld   $54
              b0a6 000a  ld   $0a
              b0a7 0065  ld   $65
              b0a8 0054  ld   $54
              b0a9 00a8  ld   $a8
              b0aa 0068  ld   $68
              b0ab 00d9  ld   $d9
              b0ac 0080  ld   $80
              b0ad 0002  ld   $02
              b0ae 00b0  ld   $b0
              b0af 0067  ld   $67
              b0b0 0020  ld   $20
              b0b1 00f9  ld   $f9
              b0b2 000d  ld   $0d
              b0b3 0048  ld   $48
              b0b4 0020  ld   $20
              b0b5 008c  ld   $8c
              b0b6 000e  ld   $0e
              b0b7 0068  ld   $68
              b0b8 00a4  ld   $a4
              b0b9 007d  ld   $7d
              b0ba 0010  ld   $10
              b0bb 0017  ld   $17
              b0bc 00aa  ld   $aa
              b0bd 00f0  ld   $f0
              b0be 0056  ld   $56
              b0bf 00d0  ld   $d0
              b0c0 005f  ld   $5f
              b0c1 0046  ld   $46
              b0c2 003f  ld   $3f
              b0c3 008a  ld   $8a
              b0c4 002a  ld   $2a
              b0c5 00a6  ld   $a6
              b0c6 00a6  ld   $a6
              b0c7 00d0  ld   $d0
              b0c8 0002  ld   $02
              b0c9 00c6  ld   $c6
              b0ca 00a7  ld   $a7
              b0cb 00c6  ld   $c6
              b0cc 00a6  ld   $a6
              b0cd 00a0  ld   $a0
              b0ce 001b  ld   $1b
              b0cf 0085  ld   $85
              b0d0 007f  ld   $7f
              b0d1 00d0  ld   $d0
              b0d2 00d7  ld   $d7
              b0d3 00d9  ld   $d9
              b0d4 0080  ld   $80
              b0d5 0002  ld   $02
              b0d6 00b0  ld   $b0
              b0d7 0048  ld   $48
              b0d8 0090  ld   $90
              b0d9 00d9  ld   $d9
              b0da 00b9  ld   $b9
              b0db 0082  ld   $82
              b0dc 0002  ld   $02
              b0dd 0048  ld   $48
              b0de 00b9  ld   $b9
              b0df 0081  ld   $81
              b0e0 0002  ld   $02
              b0e1 0048  ld   $48
              b0e2 0020  ld   $20
              b0e3 009f  ld   $9f
              b0e4 000e  ld   $0e
              b0e5 00a5  ld   $a5
              b0e6 007f  ld   $7f
              b0e7 004c  ld   $4c
              b0e8 0015  ld   $15
              b0e9 000e  ld   $0e
              b0ea 004c  ld   $4c
              b0eb 006e  ld   $6e
              b0ec 000f  ld   $0f
              b0ed 00a5  ld   $a5
              b0ee 0099  ld   $99
              b0ef 00be  ld   $be
              b0f0 0080  ld   $80
              b0f1 0002  ld   $02
              b0f2 00a8  ld   $a8
              b0f3 0068  ld   $68
              b0f4 0085  ld   $85
              b0f5 0054  ld   $54
              b0f6 00e6  ld   $e6
              b0f7 0054  ld   $54
              b0f8 0068  ld   $68
              b0f9 0085  ld   $85
              b0fa 0055  ld   $55
              b0fb fe00  bra  ac          ;+-----------------------------------+
              b0fc fcfd  bra  $b0fd       ;|                                   |
              b0fd 1418  ld   $18,y       ;| Trampoline for page $b000 lookups |
              b0fe e006  jmp  y,$06       ;|                                   |
              b0ff c218  st   [$18]       ;+-----------------------------------+
              b100 0098  ld   $98
              b101 0048  ld   $48
              b102 0020  ld   $20
              b103 0093  ld   $93
              b104 001c  ld   $1c
              b105 00a5  ld   $a5
              b106 0098  ld   $98
              b107 0048  ld   $48
              b108 00a5  ld   $a5
              b109 0097  ld   $97
              b10a 0048  ld   $48
              b10b 00a5  ld   $a5
              b10c 0096  ld   $96
              b10d 0048  ld   $48
              b10e 00a5  ld   $a5
              b10f 0095  ld   $95
              b110 0048  ld   $48
              b111 00a5  ld   $a5
              b112 0094  ld   $94
              b113 0048  ld   $48
              b114 006c  ld   $6c
              b115 0054  ld   $54
              b116 0000  ld   $00
              b117 00a0  ld   $a0
              b118 00ff  ld   $ff
              b119 0068  ld   $68
              b11a 00f0  ld   $f0
              b11b 0023  ld   $23
              b11c 00c9  ld   $c9
              b11d 0064  ld   $64
              b11e 00f0  ld   $f0
              b11f 0003  ld   $03
              b120 0020  ld   $20
              b121 00f9  ld   $f9
              b122 000d  ld   $0d
              b123 0084  ld   $84
              b124 007d  ld   $7d
              b125 0068  ld   $68
              b126 004a  ld   $4a
              b127 0085  ld   $85
              b128 0044  ld   $44
              b129 0068  ld   $68
              b12a 0085  ld   $85
              b12b 009c  ld   $9c
              b12c 0068  ld   $68
              b12d 0085  ld   $85
              b12e 009d  ld   $9d
              b12f 0068  ld   $68
              b130 0085  ld   $85
              b131 009e  ld   $9e
              b132 0068  ld   $68
              b133 0085  ld   $85
              b134 009f  ld   $9f
              b135 0068  ld   $68
              b136 0085  ld   $85
              b137 00a0  ld   $a0
              b138 0068  ld   $68
              b139 0085  ld   $85
              b13a 00a1  ld   $a1
              b13b 0045  ld   $45
              b13c 0099  ld   $99
              b13d 0085  ld   $85
              b13e 00a2  ld   $a2
              b13f 00a5  ld   $a5
              b140 0094  ld   $94
              b141 0060  ld   $60
              b142 00a9  ld   $a9
              b143 0000  ld   $00
              b144 0085  ld   $85
              b145 003f  ld   $3f
              b146 0020  ld   $20
              b147 006b  ld   $6b
              b148 0022  ld   $22
              b149 00b0  ld   $b0
              b14a 0003  ld   $03
              b14b 004c  ld   $4c
              b14c 006b  ld   $6b
              b14d 001d  ld   $1d
              b14e 0020  ld   $20
              b14f 005a  ld   $5a
              b150 0011  ld   $11
              b151 00b0  ld   $b0
              b152 007a  ld   $7a
              b153 000f  ld   $0f
              b154 0000  ld   $00
              b155 0000  ld   $00
              b156 00c9  ld   $c9
              b157 00ff  ld   $ff
              b158 00d0  ld   $d0
              b159 000f  ld   $0f
              b15a 00a9  ld   $a9
              b15b 000e  ld   $0e
              b15c 00a0  ld   $a0
              b15d 000f  ld   $0f
              b15e 0020  ld   $20
              b15f 001a  ld   $1a
              b160 001c  ld   $1c
              b161 004c  ld   $4c
              b162 006b  ld   $6b
              b163 0022  ld   $22
              b164 0082  ld   $82
              b165 0049  ld   $49
              b166 000f  ld   $0f
              b167 00da  ld   $da
              b168 00a1  ld   $a1
              b169 00c9  ld   $c9
              b16a 002e  ld   $2e
              b16b 00f0  ld   $f0
              b16c 00e1  ld   $e1
              b16d 00c9  ld   $c9
              b16e 00a5  ld   $a5
              b16f 00f0  ld   $f0
              b170 0058  ld   $58
              b171 00c9  ld   $c9
              b172 00a4  ld   $a4
              b173 00f0  ld   $f0
              b174 00d4  ld   $d4
              b175 00c9  ld   $c9
              b176 0022  ld   $22
              b177 00d0  ld   $d0
              b178 000f  ld   $0f
              b179 00a5  ld   $a5
              b17a 00a6  ld   $a6
              b17b 00a4  ld   $a4
              b17c 00a7  ld   $a7
              b17d 0069  ld   $69
              b17e 0000  ld   $00
              b17f 0090  ld   $90
              b180 0001  ld   $01
              b181 00c8  ld   $c8
              b182 0020  ld   $20
              b183 00c3  ld   $c3
              b184 0014  ld   $14
              b185 004c  ld   $4c
              b186 001f  ld   $1f
              b187 0018  ld   $18
              b188 00c9  ld   $c9
              b189 00a2  ld   $a2
              b18a 00d0  ld   $d0
              b18b 0013  ld   $13
              b18c 00a0  ld   $a0
              b18d 0018  ld   $18
              b18e 00d0  ld   $d0
              b18f 003b  ld   $3b
              b190 0020  ld   $20
              b191 00fd  ld   $fd
              b192 0011  ld   $11
              b193 00a5  ld   $a5
              b194 0098  ld   $98
              b195 0049  ld   $49
              b196 00ff  ld   $ff
              b197 00a8  ld   $a8
              b198 00a5  ld   $a5
              b199 0097  ld   $97
              b19a 0049  ld   $49
              b19b 00ff  ld   $ff
              b19c 004c  ld   $4c
              b19d 00cc  ld   $cc
              b19e 0013  ld   $13
              b19f 00c9  ld   $c9
              b1a0 009f  ld   $9f
              b1a1 00d0  ld   $d0
              b1a2 0003  ld   $03
              b1a3 004c  ld   $4c
              b1a4 0030  ld   $30
              b1a5 0014  ld   $14
              b1a6 00c9  ld   $c9
              b1a7 00ae  ld   $ae
              b1a8 0090  ld   $90
              b1a9 0003  ld   $03
              b1aa 004c  ld   $4c
              b1ab 00ec  ld   $ec
              b1ac 000f  ld   $0f
              b1ad 0020  ld   $20
              b1ae 0060  ld   $60
              b1af 000f  ld   $0f
              b1b0 0020  ld   $20
              b1b1 000a  ld   $0a
              b1b2 000e  ld   $0e
              b1b3 00a9  ld   $a9
              b1b4 0029  ld   $29
              b1b5 002c  ld   $2c
              b1b6 00a9  ld   $a9
              b1b7 0028  ld   $28
              b1b8 002c  ld   $2c
              b1b9 00a9  ld   $a9
              b1ba 002c  ld   $2c
              b1bb 00a0  ld   $a0
              b1bc 0000  ld   $00
              b1bd 00d1  ld   $d1
              b1be 00a6  ld   $a6
              b1bf 00d0  ld   $d0
              b1c0 0003  ld   $03
              b1c1 004c  ld   $4c
              b1c2 006b  ld   $6b
              b1c3 0022  ld   $22
              b1c4 00a2  ld   $a2
              b1c5 0010  ld   $10
              b1c6 004c  ld   $4c
              b1c7 004a  ld   $4a
              b1c8 0005  ld   $05
              b1c9 00a0  ld   $a0
              b1ca 0015  ld   $15
              b1cb 0068  ld   $68
              b1cc 0068  ld   $68
              b1cd 004c  ld   $4c
              b1ce 0066  ld   $66
              b1cf 000e  ld   $0e
              b1d0 0020  ld   $20
              b1d1 00d0  ld   $d0
              b1d2 0010  ld   $10
              b1d3 0085  ld   $85
              b1d4 0097  ld   $97
              b1d5 0084  ld   $84
              b1d6 0098  ld   $98
              b1d7 00a5  ld   $a5
              b1d8 0077  ld   $77
              b1d9 00a4  ld   $a4
              b1da 0078  ld   $78
              b1db 00a6  ld   $a6
              b1dc 003f  ld   $3f
              b1dd 00f0  ld   $f0
              b1de 0021  ld   $21
              b1df 00a2  ld   $a2
              b1e0 0000  ld   $00
              b1e1 0086  ld   $86
              b1e2 00a3  ld   $a3
              b1e3 00c9  ld   $c9
              b1e4 0054  ld   $54
              b1e5 00d0  ld   $d0
              b1e6 0018  ld   $18
              b1e7 00c0  ld   $c0
              b1e8 00c9  ld   $c9
              b1e9 00d0  ld   $d0
              b1ea 0014  ld   $14
              b1eb 0020  ld   $20
              b1ec 0073  ld   $73
              b1ed 0004  ld   $04
              b1ee 0084  ld   $84
              b1ef 0091  ld   $91
              b1f0 0088  ld   $88
              b1f1 0084  ld   $84
              b1f2 00a4  ld   $a4
              b1f3 00a0  ld   $a0
              b1f4 0006  ld   $06
              b1f5 0084  ld   $84
              b1f6 0090  ld   $90
              b1f7 00a0  ld   $a0
              b1f8 0024  ld   $24
              b1f9 0020  ld   $20
              b1fa 00e0  ld   $e0
              b1fb fe00  bra  ac          ;+-----------------------------------+
              b1fc fcfd  bra  $b1fd       ;|                                   |
              b1fd 1418  ld   $18,y       ;| Trampoline for page $b100 lookups |
              b1fe e006  jmp  y,$06       ;|                                   |
              b1ff c218  st   [$18]       ;+-----------------------------------+
              b200 001e  ld   $1e
              b201 004c  ld   $4c
              b202 00ab  ld   $ab
              b203 0014  ld   $14
              b204 0060  ld   $60
              b205 00a6  ld   $a6
              b206 0040  ld   $40
              b207 0010  ld   $10
              b208 000d  ld   $0d
              b209 00a0  ld   $a0
              b20a 0000  ld   $00
              b20b 00b1  ld   $b1
              b20c 0097  ld   $97
              b20d 00aa  ld   $aa
              b20e 00c8  ld   $c8
              b20f 00b1  ld   $b1
              b210 0097  ld   $97
              b211 00a8  ld   $a8
              b212 008a  ld   $8a
              b213 004c  ld   $4c
              b214 00cc  ld   $cc
              b215 0013  ld   $13
              b216 00c9  ld   $c9
              b217 0054  ld   $54
              b218 00d0  ld   $d0
              b219 0019  ld   $19
              b21a 00c0  ld   $c0
              b21b 0049  ld   $49
              b21c 00d0  ld   $d0
              b21d 0022  ld   $22
              b21e 0020  ld   $20
              b21f 0073  ld   $73
              b220 0004  ld   $04
              b221 0098  ld   $98
              b222 00a2  ld   $a2
              b223 00a0  ld   $a0
              b224 004c  ld   $4c
              b225 00c7  ld   $c7
              b226 001c  ld   $1c
              b227 00a9  ld   $a9
              b228 00fe  ld   $fe
              b229 00a0  ld   $a0
              b22a 0001  ld   $01
              b22b 0078  ld   $78
              b22c 0020  ld   $20
              b22d 001a  ld   $1a
              b22e 001c  ld   $1c
              b22f 0058  ld   $58
              b230 0084  ld   $84
              b231 0095  ld   $95
              b232 0060  ld   $60
              b233 00c9  ld   $c9
              b234 0053  ld   $53
              b235 00d0  ld   $d0
              b236 0009  ld   $09
              b237 00c0  ld   $c0
              b238 0054  ld   $54
              b239 00d0  ld   $d0
              b23a 0005  ld   $05
              b23b 00a5  ld   $a5
              b23c 0019  ld   $19
              b23d 004c  ld   $4c
              b23e 00b4  ld   $b4
              b23f 001c  ld   $1c
              b240 00a5  ld   $a5
              b241 0097  ld   $97
              b242 00a4  ld   $a4
              b243 0098  ld   $98
              b244 004c  ld   $4c
              b245 001a  ld   $1a
              b246 001c  ld   $1c
              b247 000a  ld   $0a
              b248 0048  ld   $48
              b249 00aa  ld   $aa
              b24a 0020  ld   $20
              b24b 006b  ld   $6b
              b24c 0022  ld   $22
              b24d 00e0  ld   $e0
              b24e 0083  ld   $83
              b24f 0090  ld   $90
              b250 0020  ld   $20
              b251 0020  ld   $20
              b252 0060  ld   $60
              b253 000f  ld   $0f
              b254 0020  ld   $20
              b255 000a  ld   $0a
              b256 000e  ld   $0e
              b257 0020  ld   $20
              b258 0063  ld   $63
              b259 000f  ld   $0f
              b25a 0020  ld   $20
              b25b 0010  ld   $10
              b25c 0000  ld   $00
              b25d 0000  ld   $00
              b25e 00fb  ld   $fb
              b25f 000d  ld   $0d
              b260 0068  ld   $68
              b261 00aa  ld   $aa
              b262 00a5  ld   $a5
              b263 0098  ld   $98
              b264 0048  ld   $48
              b265 00a5  ld   $a5
              b266 0097  ld   $97
              b267 0048  ld   $48
              b268 008a  ld   $8a
              b269 0048  ld   $48
              b26a 0020  ld   $20
              b26b 00da  ld   $da
              b26c 0017  ld   $17
              b26d 0068  ld   $68
              b26e 00a8  ld   $a8
              b26f 008a  ld   $8a
              b270 0048  ld   $48
              b271 004c  ld   $4c
              b272 001b  ld   $1b
              b273 0010  ld   $10
              b274 0020  ld   $20
              b275 0057  ld   $57
              b276 000f  ld   $0f
              b277 0068  ld   $68
              b278 00a8  ld   $a8
              b279 00b9  ld   $b9
              b27a 00f6  ld   $f6
              b27b 0001  ld   $01
              b27c 0085  ld   $85
              b27d 0088  ld   $88
              b27e 00b9  ld   $b9
              b27f 00f7  ld   $f7
              b280 0001  ld   $01
              b281 0085  ld   $85
              b282 0089  ld   $89
              b283 0020  ld   $20
              b284 0087  ld   $87
              b285 0000  ld   $00
              b286 004c  ld   $4c
              b287 00f9  ld   $f9
              b288 000d  ld   $0d
              b289 00a0  ld   $a0
              b28a 00ff  ld   $ff
              b28b 002c  ld   $2c
              b28c 00a0  ld   $a0
              b28d 0000  ld   $00
              b28e 0084  ld   $84
              b28f 003d  ld   $3d
              b290 0020  ld   $20
              b291 00fd  ld   $fd
              b292 0011  ld   $11
              b293 00a5  ld   $a5
              b294 0097  ld   $97
              b295 0045  ld   $45
              b296 003d  ld   $3d
              b297 0085  ld   $85
              b298 003b  ld   $3b
              b299 00a5  ld   $a5
              b29a 0098  ld   $98
              b29b 0045  ld   $45
              b29c 003d  ld   $3d
              b29d 0085  ld   $85
              b29e 003c  ld   $3c
              b29f 0020  ld   $20
              b2a0 0074  ld   $74
              b2a1 001c  ld   $1c
              b2a2 0020  ld   $20
              b2a3 00fd  ld   $fd
              b2a4 0011  ld   $11
              b2a5 00a5  ld   $a5
              b2a6 0098  ld   $98
              b2a7 0045  ld   $45
              b2a8 003d  ld   $3d
              b2a9 0025  ld   $25
              b2aa 003c  ld   $3c
              b2ab 0045  ld   $45
              b2ac 003d  ld   $3d
              b2ad 00a8  ld   $a8
              b2ae 00a5  ld   $a5
              b2af 0097  ld   $97
              b2b0 0045  ld   $45
              b2b1 003d  ld   $3d
              b2b2 0025  ld   $25
              b2b3 003b  ld   $3b
              b2b4 0045  ld   $45
              b2b5 003d  ld   $3d
              b2b6 004c  ld   $4c
              b2b7 00cc  ld   $cc
              b2b8 0013  ld   $13
              b2b9 0020  ld   $20
              b2ba 00fc  ld   $fc
              b2bb 000d  ld   $0d
              b2bc 00b0  ld   $b0
              b2bd 0013  ld   $13
              b2be 00a5  ld   $a5
              b2bf 00a1  ld   $a1
              b2c0 0009  ld   $09
              b2c1 007f  ld   $7f
              b2c2 0025  ld   $25
              b2c3 009d  ld   $9d
              b2c4 0085  ld   $85
              b2c5 009d  ld   $9d
              b2c6 00a9  ld   $a9
              b2c7 009c  ld   $9c
              b2c8 00a0  ld   $a0
              b2c9 0000  ld   $00
              b2ca 0020  ld   $20
              b2cb 00d3  ld   $d3
              b2cc 001c  ld   $1c
              b2cd 00aa  ld   $aa
              b2ce 004c  ld   $4c
              b2cf 00a6  ld   $a6
              b2d0 0010  ld   $10
              b2d1 00a9  ld   $a9
              b2d2 0000  ld   $00
              b2d3 0085  ld   $85
              b2d4 003f  ld   $3f
              b2d5 00c6  ld   $c6
              b2d6 007f  ld   $7f
              b2d7 0020  ld   $20
              b2d8 00e2  ld   $e2
              b2d9 0016  ld   $16
              b2da 0085  ld   $85
              b2db 0094  ld   $94
              b2dc 0086  ld   $86
              b2dd 0095  ld   $95
              b2de 0084  ld   $84
              b2df 0096  ld   $96
              b2e0 00a5  ld   $a5
              b2e1 009f  ld   $9f
              b2e2 00a4  ld   $a4
              b2e3 00a0  ld   $a0
              b2e4 0020  ld   $20
              b2e5 00e6  ld   $e6
              b2e6 0016  ld   $16
              b2e7 0086  ld   $86
              b2e8 009f  ld   $9f
              b2e9 0084  ld   $84
              b2ea 00a0  ld   $a0
              b2eb 00aa  ld   $aa
              b2ec 0038  ld   $38
              b2ed 00e5  ld   $e5
              b2ee 0094  ld   $94
              b2ef 00f0  ld   $f0
              b2f0 0008  ld   $08
              b2f1 00a9  ld   $a9
              b2f2 0001  ld   $01
              b2f3 0090  ld   $90
              b2f4 0004  ld   $04
              b2f5 00a6  ld   $a6
              b2f6 0094  ld   $94
              b2f7 00a9  ld   $a9
              b2f8 00ff  ld   $ff
              b2f9 0085  ld   $85
              b2fa 0099  ld   $99
              b2fb fe00  bra  ac          ;+-----------------------------------+
              b2fc fcfd  bra  $b2fd       ;|                                   |
              b2fd 1418  ld   $18,y       ;| Trampoline for page $b200 lookups |
              b2fe e006  jmp  y,$06       ;|                                   |
              b2ff c218  st   [$18]       ;+-----------------------------------+
              b300 00a0  ld   $a0
              b301 00ff  ld   $ff
              b302 00e8  ld   $e8
              b303 00c8  ld   $c8
              b304 00ca  ld   $ca
              b305 00d0  ld   $d0
              b306 0007  ld   $07
              b307 00a6  ld   $a6
              b308 0099  ld   $99
              b309 0030  ld   $30
              b30a 000f  ld   $0f
              b30b 0018  ld   $18
              b30c 0090  ld   $90
              b30d 000c  ld   $0c
              b30e 00b1  ld   $b1
              b30f 009f  ld   $9f
              b310 00d1  ld   $d1
              b311 0095  ld   $95
              b312 00f0  ld   $f0
              b313 00ef  ld   $ef
              b314 00a2  ld   $a2
              b315 00ff  ld   $ff
              b316 00b0  ld   $b0
              b317 0002  ld   $02
              b318 00a2  ld   $a2
              b319 0001  ld   $01
              b31a 00e8  ld   $e8
              b31b 008a  ld   $8a
              b31c 002a  ld   $2a
              b31d 0025  ld   $25
              b31e 0044  ld   $44
              b31f 00f0  ld   $f0
              b320 0002  ld   $02
              b321 00a9  ld   $a9
              b322 00ff  ld   $ff
              b323 004c  ld   $4c
              b324 00b4  ld   $b4
              b325 001c  ld   $1c
              b326 0020  ld   $20
              b327 0063  ld   $63
              b328 000f  ld   $0f
              b329 00aa  ld   $aa
              b32a 0020  ld   $20
              b32b 00d5  ld   $d5
              b32c 0010  ld   $10
              b32d 0020  ld   $20
              b32e 0071  ld   $71
              b32f 0022  ld   $22
              b330 00d0  ld   $d0
              b331 00f4  ld   $f4
              b332 0060  ld   $60
              b333 00a2  ld   $a2
              b334 0000  ld   $00
              b335 0020  ld   $20
              b336 0071  ld   $71
              b337 0022  ld   $22
              b338 0086  ld   $86
              b339 003e  ld   $3e
              b33a 0085  ld   $85
              b33b 0077  ld   $77
              b33c 0020  ld   $20
              b33d 0071  ld   $71
              b33e 0022  ld   $22
              b33f 0020  ld   $20
              b340 005a  ld   $5a
              b341 0011  ld   $11
              b342 00b0  ld   $b0
              b343 0003  ld   $03
              b344 004c  ld   $4c
              b345 006e  ld   $6e
              b346 000f  ld   $0f
              b347 00a2  ld   $a2
              b348 0000  ld   $00
              b349 0086  ld   $86
              b34a 003f  ld   $3f
              b34b 0086  ld   $86
              b34c 0040  ld   $40
              b34d 0020  ld   $20
              b34e 006b  ld   $6b
              b34f 0022  ld   $22
              b350 0090  ld   $90
              b351 0005  ld   $05
              b352 0020  ld   $20
              b353 005a  ld   $5a
              b354 0011  ld   $11
              b355 0090  ld   $90
              b356 000b  ld   $0b
              b357 00aa  ld   $aa
              b358 0020  ld   $20
              b359 006b  ld   $6b
              b35a 0022  ld   $22
              b35b 0090  ld   $90
              b35c 00fb  ld   $fb
              b35d 0020  ld   $20
              b35e 005a  ld   $5a
              b35f 0011  ld   $11
              b360 00b0  ld   $b0
              b361 00f6  ld   $f6
              b362 00c9  ld   $c9
              b363 0011  ld   $11
              b364 0000  ld   $00
              b365 0000  ld   $00
              b366 0024  ld   $24
              b367 00d0  ld   $d0
              b368 0006  ld   $06
              b369 00a9  ld   $a9
              b36a 00ff  ld   $ff
              b36b 0085  ld   $85
              b36c 003f  ld   $3f
              b36d 00d0  ld   $d0
              b36e 0010  ld   $10
              b36f 00c9  ld   $c9
              b370 0025  ld   $25
              b371 00d0  ld   $d0
              b372 0013  ld   $13
              b373 00a5  ld   $a5
              b374 0042  ld   $42
              b375 00d0  ld   $d0
              b376 00d0  ld   $d0
              b377 00a9  ld   $a9
              b378 0080  ld   $80
              b379 0085  ld   $85
              b37a 0040  ld   $40
              b37b 0005  ld   $05
              b37c 0077  ld   $77
              b37d 0085  ld   $85
              b37e 0077  ld   $77
              b37f 008a  ld   $8a
              b380 0009  ld   $09
              b381 0080  ld   $80
              b382 00aa  ld   $aa
              b383 0020  ld   $20
              b384 006b  ld   $6b
              b385 0022  ld   $22
              b386 0086  ld   $86
              b387 0078  ld   $78
              b388 0038  ld   $38
              b389 0005  ld   $05
              b38a 0042  ld   $42
              b38b 00e9  ld   $e9
              b38c 0028  ld   $28
              b38d 00d0  ld   $d0
              b38e 0003  ld   $03
              b38f 004c  ld   $4c
              b390 000f  ld   $0f
              b391 0012  ld   $12
              b392 00a9  ld   $a9
              b393 0000  ld   $00
              b394 0085  ld   $85
              b395 0042  ld   $42
              b396 00a5  ld   $a5
              b397 005f  ld   $5f
              b398 00a6  ld   $a6
              b399 0060  ld   $60
              b39a 00a0  ld   $a0
              b39b 0000  ld   $00
              b39c 0086  ld   $86
              b39d 0093  ld   $93
              b39e 0085  ld   $85
              b39f 0092  ld   $92
              b3a0 00e4  ld   $e4
              b3a1 0062  ld   $62
              b3a2 00d0  ld   $d0
              b3a3 0004  ld   $04
              b3a4 00c5  ld   $c5
              b3a5 0061  ld   $61
              b3a6 00f0  ld   $f0
              b3a7 0022  ld   $22
              b3a8 00a5  ld   $a5
              b3a9 0077  ld   $77
              b3aa 00d1  ld   $d1
              b3ab 0092  ld   $92
              b3ac 00d0  ld   $d0
              b3ad 0008  ld   $08
              b3ae 00a5  ld   $a5
              b3af 0078  ld   $78
              b3b0 00c8  ld   $c8
              b3b1 00d1  ld   $d1
              b3b2 0092  ld   $92
              b3b3 00f0  ld   $f0
              b3b4 007d  ld   $7d
              b3b5 0088  ld   $88
              b3b6 0018  ld   $18
              b3b7 00a5  ld   $a5
              b3b8 0092  ld   $92
              b3b9 0069  ld   $69
              b3ba 0007  ld   $07
              b3bb 0090  ld   $90
              b3bc 00e1  ld   $e1
              b3bd 00e8  ld   $e8
              b3be 00d0  ld   $d0
              b3bf 00dc  ld   $dc
              b3c0 00c9  ld   $c9
              b3c1 0041  ld   $41
              b3c2 0090  ld   $90
              b3c3 0005  ld   $05
              b3c4 00e9  ld   $e9
              b3c5 005b  ld   $5b
              b3c6 0038  ld   $38
              b3c7 00e9  ld   $e9
              b3c8 00a5  ld   $a5
              b3c9 0060  ld   $60
              b3ca 0068  ld   $68
              b3cb 0048  ld   $48
              b3cc 00c9  ld   $c9
              b3cd 007c  ld   $7c
              b3ce 00d0  ld   $d0
              b3cf 0005  ld   $05
              b3d0 00a9  ld   $a9
              b3d1 008b  ld   $8b
              b3d2 00a0  ld   $a0
              b3d3 001f  ld   $1f
              b3d4 0060  ld   $60
              b3d5 00a5  ld   $a5
              b3d6 0077  ld   $77
              b3d7 00a4  ld   $a4
              b3d8 0078  ld   $78
              b3d9 00c9  ld   $c9
              b3da 0054  ld   $54
              b3db 00d0  ld   $d0
              b3dc 000b  ld   $0b
              b3dd 00c0  ld   $c0
              b3de 00c9  ld   $c9
              b3df 00f0  ld   $f0
              b3e0 00ef  ld   $ef
              b3e1 00c0  ld   $c0
              b3e2 0049  ld   $49
              b3e3 00d0  ld   $d0
              b3e4 0003  ld   $03
              b3e5 004c  ld   $4c
              b3e6 006e  ld   $6e
              b3e7 000f  ld   $0f
              b3e8 00c9  ld   $c9
              b3e9 0053  ld   $53
              b3ea 00d0  ld   $d0
              b3eb 0004  ld   $04
              b3ec 00c0  ld   $c0
              b3ed 0054  ld   $54
              b3ee 00f0  ld   $f0
              b3ef 00f5  ld   $f5
              b3f0 00a5  ld   $a5
              b3f1 0061  ld   $61
              b3f2 00a4  ld   $a4
              b3f3 0062  ld   $62
              b3f4 0085  ld   $85
              b3f5 0092  ld   $92
              b3f6 0084  ld   $84
              b3f7 0093  ld   $93
              b3f8 00a5  ld   $a5
              b3f9 0063  ld   $63
              b3fa 00a4  ld   $a4
              b3fb fe00  bra  ac          ;+-----------------------------------+
              b3fc fcfd  bra  $b3fd       ;|                                   |
              b3fd 1418  ld   $18,y       ;| Trampoline for page $b300 lookups |
              b3fe e006  jmp  y,$06       ;|                                   |
              b3ff c218  st   [$18]       ;+-----------------------------------+
              b400 0064  ld   $64
              b401 0085  ld   $85
              b402 008d  ld   $8d
              b403 0084  ld   $84
              b404 008e  ld   $8e
              b405 0018  ld   $18
              b406 0069  ld   $69
              b407 0007  ld   $07
              b408 0090  ld   $90
              b409 0001  ld   $01
              b40a 00c8  ld   $c8
              b40b 0085  ld   $85
              b40c 008b  ld   $8b
              b40d 0084  ld   $84
              b40e 008c  ld   $8c
              b40f 0020  ld   $20
              b410 00cb  ld   $cb
              b411 0004  ld   $04
              b412 00a5  ld   $a5
              b413 008b  ld   $8b
              b414 00a4  ld   $a4
              b415 008c  ld   $8c
              b416 00c8  ld   $c8
              b417 0085  ld   $85
              b418 0061  ld   $61
              b419 0084  ld   $84
              b41a 0062  ld   $62
              b41b 00a0  ld   $a0
              b41c 0000  ld   $00
              b41d 00a5  ld   $a5
              b41e 0077  ld   $77
              b41f 0091  ld   $91
              b420 0092  ld   $92
              b421 00c8  ld   $c8
              b422 00a5  ld   $a5
              b423 0078  ld   $78
              b424 0091  ld   $91
              b425 0092  ld   $92
              b426 00a9  ld   $a9
              b427 0000  ld   $00
              b428 00c8  ld   $c8
              b429 0091  ld   $91
              b42a 0092  ld   $92
              b42b 00c8  ld   $c8
              b42c 0091  ld   $91
              b42d 0092  ld   $92
              b42e 00c8  ld   $c8
              b42f 0091  ld   $91
              b430 0092  ld   $92
              b431 00c8  ld   $c8
              b432 0091  ld   $91
              b433 0092  ld   $92
              b434 00c8  ld   $c8
              b435 0091  ld   $91
              b436 0092  ld   $92
              b437 00a5  ld   $a5
              b438 0092  ld   $92
              b439 0018  ld   $18
              b43a 0069  ld   $69
              b43b 0002  ld   $02
              b43c 00a4  ld   $a4
              b43d 0093  ld   $93
              b43e 0090  ld   $90
              b43f 0001  ld   $01
              b440 00c8  ld   $c8
              b441 0085  ld   $85
              b442 0079  ld   $79
              b443 0084  ld   $84
              b444 007a  ld   $7a
              b445 0060  ld   $60
              b446 00a5  ld   $a5
              b447 003d  ld   $3d
              b448 000a  ld   $0a
              b449 0069  ld   $69
              b44a 0005  ld   $05
              b44b 0065  ld   $65
              b44c 0092  ld   $92
              b44d 00a4  ld   $a4
              b44e 0093  ld   $93
              b44f 0090  ld   $90
              b450 0001  ld   $01
              b451 00c8  ld   $c8
              b452 0085  ld   $85
              b453 008b  ld   $8b
              b454 0084  ld   $84
              b455 008c  ld   $8c
              b456 0060  ld   $60
              b457 0090  ld   $90
              b458 0080  ld   $80
              b459 0000  ld   $00
              b45a 0000  ld   $00
              b45b 0020  ld   $20
              b45c 006b  ld   $6b
              b45d 0022  ld   $22
              b45e 0020  ld   $20
              b45f 000a  ld   $0a
              b460 000e  ld   $0e
              b461 0020  ld   $20
              b462 00f9  ld   $f9
              b463 000d  ld   $0d
              b464 00a5  ld   $a5
              b465 0099  ld   $99
              b466 0030  ld   $30
              b467 000d  ld   $0d
              b468 00a5  ld   $a5
              b469 0094  ld   $94
              b46a 00c9  ld   $c9
              b46b 0012  ld   $12
              b46c 0000  ld   $00
              b46d 0000  ld   $00
              b46e 0090  ld   $90
              b46f 0090  ld   $90
              b470 0009  ld   $09
              b471 00a9  ld   $a9
              b472 00ec  ld   $ec
              b473 00a0  ld   $a0
              b474 0011  ld   $11
              b475 0020  ld   $20
              b476 00d3  ld   $d3
              b477 001c  ld   $1c
              b478 00d0  ld   $d0
              b479 0076  ld   $76
              b47a 004c  ld   $4c
              b47b 0013  ld   $13
              b47c 001d  ld   $1d
              b47d 00a5  ld   $a5
              b47e 003e  ld   $3e
              b47f 0005  ld   $05
              b480 0040  ld   $40
              b481 0048  ld   $48
              b482 00a5  ld   $a5
              b483 003f  ld   $3f
              b484 0048  ld   $48
              b485 00a0  ld   $a0
              b486 0000  ld   $00
              b487 0098  ld   $98
              b488 0048  ld   $48
              b489 00a5  ld   $a5
              b48a 0078  ld   $78
              b48b 0048  ld   $48
              b48c 00a5  ld   $a5
              b48d 0077  ld   $77
              b48e 0048  ld   $48
              b48f 0020  ld   $20
              b490 00f0  ld   $f0
              b491 0011  ld   $11
              b492 0068  ld   $68
              b493 0085  ld   $85
              b494 0077  ld   $77
              b495 0068  ld   $68
              b496 0085  ld   $85
              b497 0078  ld   $78
              b498 0068  ld   $68
              b499 00a8  ld   $a8
              b49a 00ba  ld   $ba
              b49b 00b5  ld   $b5
              b49c 0002  ld   $02
              b49d 0048  ld   $48
              b49e 00b5  ld   $b5
              b49f 0001  ld   $01
              b4a0 0048  ld   $48
              b4a1 00a5  ld   $a5
              b4a2 0097  ld   $97
              b4a3 0095  ld   $95
              b4a4 0002  ld   $02
              b4a5 00a5  ld   $a5
              b4a6 0098  ld   $98
              b4a7 0095  ld   $95
              b4a8 0001  ld   $01
              b4a9 00c8  ld   $c8
              b4aa 0020  ld   $20
              b4ab 0071  ld   $71
              b4ac 0022  ld   $22
              b4ad 00c9  ld   $c9
              b4ae 002c  ld   $2c
              b4af 00f0  ld   $f0
              b4b0 00d6  ld   $d6
              b4b1 0084  ld   $84
              b4b2 003d  ld   $3d
              b4b3 0020  ld   $20
              b4b4 005d  ld   $5d
              b4b5 000f  ld   $0f
              b4b6 0068  ld   $68
              b4b7 0085  ld   $85
              b4b8 003f  ld   $3f
              b4b9 0068  ld   $68
              b4ba 0085  ld   $85
              b4bb 0040  ld   $40
              b4bc 0029  ld   $29
              b4bd 007f  ld   $7f
              b4be 0085  ld   $85
              b4bf 003e  ld   $3e
              b4c0 00a6  ld   $a6
              b4c1 0061  ld   $61
              b4c2 00a5  ld   $a5
              b4c3 0062  ld   $62
              b4c4 0086  ld   $86
              b4c5 0092  ld   $92
              b4c6 0085  ld   $85
              b4c7 0093  ld   $93
              b4c8 00c5  ld   $c5
              b4c9 0064  ld   $64
              b4ca 00d0  ld   $d0
              b4cb 0004  ld   $04
              b4cc 00e4  ld   $e4
              b4cd 0063  ld   $63
              b4ce 00f0  ld   $f0
              b4cf 0039  ld   $39
              b4d0 00a0  ld   $a0
              b4d1 0000  ld   $00
              b4d2 00b1  ld   $b1
              b4d3 0092  ld   $92
              b4d4 00c8  ld   $c8
              b4d5 00c5  ld   $c5
              b4d6 0077  ld   $77
              b4d7 00d0  ld   $d0
              b4d8 0006  ld   $06
              b4d9 00a5  ld   $a5
              b4da 0078  ld   $78
              b4db 00d1  ld   $d1
              b4dc 0092  ld   $92
              b4dd 00f0  ld   $f0
              b4de 0016  ld   $16
              b4df 00c8  ld   $c8
              b4e0 00b1  ld   $b1
              b4e1 0092  ld   $92
              b4e2 0018  ld   $18
              b4e3 0065  ld   $65
              b4e4 0092  ld   $92
              b4e5 00aa  ld   $aa
              b4e6 00c8  ld   $c8
              b4e7 00b1  ld   $b1
              b4e8 0092  ld   $92
              b4e9 0065  ld   $65
              b4ea 0093  ld   $93
              b4eb 0090  ld   $90
              b4ec 00d7  ld   $d7
              b4ed 00a2  ld   $a2
              b4ee 006b  ld   $6b
              b4ef 002c  ld   $2c
              b4f0 00a2  ld   $a2
              b4f1 0035  ld   $35
              b4f2 004c  ld   $4c
              b4f3 004a  ld   $4a
              b4f4 0005  ld   $05
              b4f5 00a2  ld   $a2
              b4f6 0078  ld   $78
              b4f7 00a5  ld   $a5
              b4f8 003e  ld   $3e
              b4f9 00d0  ld   $d0
              b4fa 00f7  ld   $f7
              b4fb fe00  bra  ac          ;+-----------------------------------+
              b4fc fcfd  bra  $b4fd       ;|                                   |
              b4fd 1418  ld   $18,y       ;| Trampoline for page $b400 lookups |
              b4fe e006  jmp  y,$06       ;|                                   |
              b4ff c218  st   [$18]       ;+-----------------------------------+
              b500 0020  ld   $20
              b501 00db  ld   $db
              b502 0011  ld   $11
              b503 00a5  ld   $a5
              b504 003d  ld   $3d
              b505 00a0  ld   $a0
              b506 0004  ld   $04
              b507 00d1  ld   $d1
              b508 0092  ld   $92
              b509 00d0  ld   $d0
              b50a 00e7  ld   $e7
              b50b 004c  ld   $4c
              b50c 0025  ld   $25
              b50d 0013  ld   $13
              b50e 0020  ld   $20
              b50f 00db  ld   $db
              b510 0011  ld   $11
              b511 0020  ld   $20
              b512 001b  ld   $1b
              b513 0005  ld   $05
              b514 00a9  ld   $a9
              b515 0000  ld   $00
              b516 00a8  ld   $a8
              b517 0085  ld   $85
              b518 00a5  ld   $a5
              b519 00a2  ld   $a2
              b51a 0005  ld   $05
              b51b 00a5  ld   $a5
              b51c 0077  ld   $77
              b51d 0091  ld   $91
              b51e 0092  ld   $92
              b51f 0010  ld   $10
              b520 0001  ld   $01
              b521 00ca  ld   $ca
              b522 00c8  ld   $c8
              b523 00a5  ld   $a5
              b524 0078  ld   $78
              b525 0091  ld   $91
              b526 0092  ld   $92
              b527 0010  ld   $10
              b528 0002  ld   $02
              b529 00ca  ld   $ca
              b52a 00ca  ld   $ca
              b52b 0086  ld   $86
              b52c 00a4  ld   $a4
              b52d 00a5  ld   $a5
              b52e 003d  ld   $3d
              b52f 00c8  ld   $c8
              b530 00c8  ld   $c8
              b531 00c8  ld   $c8
              b532 0091  ld   $91
              b533 0092  ld   $92
              b534 00a2  ld   $a2
              b535 000b  ld   $0b
              b536 00a9  ld   $a9
              b537 0000  ld   $00
              b538 0024  ld   $24
              b539 003e  ld   $3e
              b53a 0050  ld   $50
              b53b 0008  ld   $08
              b53c 0068  ld   $68
              b53d 0018  ld   $18
              b53e 0069  ld   $69
              b53f 0001  ld   $01
              b540 00aa  ld   $aa
              b541 0068  ld   $68
              b542 0069  ld   $69
              b543 0000  ld   $00
              b544 00c8  ld   $c8
              b545 0091  ld   $91
              b546 0092  ld   $92
              b547 00c8  ld   $c8
              b548 008a  ld   $8a
              b549 0091  ld   $91
              b54a 0092  ld   $92
              b54b 0020  ld   $20
              b54c 0087  ld   $87
              b54d 0013  ld   $13
              b54e 0086  ld   $86
              b54f 00a4  ld   $a4
              b550 0085  ld   $85
              b551 00a5  ld   $a5
              b552 00a4  ld   $a4
              b553 0054  ld   $54
              b554 00c6  ld   $c6
              b555 003d  ld   $3d
              b556 00d0  ld   $d0
              b557 00dc  ld   $dc
              b558 0065  ld   $65
              b559 008c  ld   $8c
              b55a 00b0  ld   $b0
              b55b 005d  ld   $5d
              b55c 0085  ld   $85
              b55d 008c  ld   $8c
              b55e 00a8  ld   $a8
              b55f 008a  ld   $8a
              b560 0065  ld   $65
              b561 008b  ld   $8b
              b562 0090  ld   $90
              b563 0003  ld   $03
              b564 00c8  ld   $c8
              b565 00f0  ld   $f0
              b566 0052  ld   $52
              b567 0020  ld   $20
              b568 001b  ld   $1b
              b569 0005  ld   $05
              b56a 0085  ld   $85
              b56b 0063  ld   $63
              b56c 0084  ld   $84
              b56d 0064  ld   $64
              b56e 00a9  ld   $a9
              b56f 0000  ld   $00
              b570 00e6  ld   $e6
              b571 00a5  ld   $a5
              b572 00a4  ld   $a4
              b573 0013  ld   $13
              b574 0000  ld   $00
              b575 0000  ld   $00
              b576 00a4  ld   $a4
              b577 00f0  ld   $f0
              b578 0005  ld   $05
              b579 0088  ld   $88
              b57a 0091  ld   $91
              b57b 008b  ld   $8b
              b57c 00d0  ld   $d0
              b57d 00fb  ld   $fb
              b57e 00c6  ld   $c6
              b57f 008c  ld   $8c
              b580 00c6  ld   $c6
              b581 00a5  ld   $a5
              b582 00d0  ld   $d0
              b583 00f5  ld   $f5
              b584 00e6  ld   $e6
              b585 008c  ld   $8c
              b586 0038  ld   $38
              b587 00a5  ld   $a5
              b588 0063  ld   $63
              b589 00e5  ld   $e5
              b58a 0092  ld   $92
              b58b 00a0  ld   $a0
              b58c 0002  ld   $02
              b58d 0091  ld   $91
              b58e 0092  ld   $92
              b58f 00a5  ld   $a5
              b590 0064  ld   $64
              b591 00c8  ld   $c8
              b592 00e5  ld   $e5
              b593 0093  ld   $93
              b594 0091  ld   $91
              b595 0092  ld   $92
              b596 00a5  ld   $a5
              b597 003e  ld   $3e
              b598 00d0  ld   $d0
              b599 0062  ld   $62
              b59a 00c8  ld   $c8
              b59b 00b1  ld   $b1
              b59c 0092  ld   $92
              b59d 0085  ld   $85
              b59e 003d  ld   $3d
              b59f 00a9  ld   $a9
              b5a0 0000  ld   $00
              b5a1 0085  ld   $85
              b5a2 00a4  ld   $a4
              b5a3 0085  ld   $85
              b5a4 00a5  ld   $a5
              b5a5 00c8  ld   $c8
              b5a6 0068  ld   $68
              b5a7 00aa  ld   $aa
              b5a8 0085  ld   $85
              b5a9 0097  ld   $97
              b5aa 0068  ld   $68
              b5ab 0085  ld   $85
              b5ac 0098  ld   $98
              b5ad 00d1  ld   $d1
              b5ae 0092  ld   $92
              b5af 0090  ld   $90
              b5b0 000e  ld   $0e
              b5b1 00d0  ld   $d0
              b5b2 0006  ld   $06
              b5b3 00c8  ld   $c8
              b5b4 008a  ld   $8a
              b5b5 00d1  ld   $d1
              b5b6 0092  ld   $92
              b5b7 0090  ld   $90
              b5b8 0007  ld   $07
              b5b9 004c  ld   $4c
              b5ba 007f  ld   $7f
              b5bb 0012  ld   $12
              b5bc 004c  ld   $4c
              b5bd 0048  ld   $48
              b5be 0005  ld   $05
              b5bf 00c8  ld   $c8
              b5c0 00a5  ld   $a5
              b5c1 00a5  ld   $a5
              b5c2 0005  ld   $05
              b5c3 00a4  ld   $a4
              b5c4 0018  ld   $18
              b5c5 00f0  ld   $f0
              b5c6 000a  ld   $0a
              b5c7 0020  ld   $20
              b5c8 0087  ld   $87
              b5c9 0013  ld   $13
              b5ca 008a  ld   $8a
              b5cb 0065  ld   $65
              b5cc 0097  ld   $97
              b5cd 00aa  ld   $aa
              b5ce 0098  ld   $98
              b5cf 00a4  ld   $a4
              b5d0 0054  ld   $54
              b5d1 0065  ld   $65
              b5d2 0098  ld   $98
              b5d3 0086  ld   $86
              b5d4 00a4  ld   $a4
              b5d5 00c6  ld   $c6
              b5d6 003d  ld   $3d
              b5d7 00d0  ld   $d0
              b5d8 00ca  ld   $ca
              b5d9 0085  ld   $85
              b5da 00a5  ld   $a5
              b5db 00a2  ld   $a2
              b5dc 0005  ld   $05
              b5dd 00a5  ld   $a5
              b5de 0077  ld   $77
              b5df 0010  ld   $10
              b5e0 0001  ld   $01
              b5e1 00ca  ld   $ca
              b5e2 00a5  ld   $a5
              b5e3 0078  ld   $78
              b5e4 0010  ld   $10
              b5e5 0002  ld   $02
              b5e6 00ca  ld   $ca
              b5e7 00ca  ld   $ca
              b5e8 0086  ld   $86
              b5e9 005a  ld   $5a
              b5ea 00a9  ld   $a9
              b5eb 0000  ld   $00
              b5ec 0020  ld   $20
              b5ed 0090  ld   $90
              b5ee 0013  ld   $13
              b5ef 008a  ld   $8a
              b5f0 0065  ld   $65
              b5f1 008b  ld   $8b
              b5f2 0085  ld   $85
              b5f3 0079  ld   $79
              b5f4 0098  ld   $98
              b5f5 0065  ld   $65
              b5f6 008c  ld   $8c
              b5f7 0085  ld   $85
              b5f8 007a  ld   $7a
              b5f9 00a8  ld   $a8
              b5fa 00a5  ld   $a5
              b5fb fe00  bra  ac          ;+-----------------------------------+
              b5fc fcfd  bra  $b5fd       ;|                                   |
              b5fd 1418  ld   $18,y       ;| Trampoline for page $b500 lookups |
              b5fe e006  jmp  y,$06       ;|                                   |
              b5ff c218  st   [$18]       ;+-----------------------------------+
              b600 0079  ld   $79
              b601 0060  ld   $60
              b602 0084  ld   $84
              b603 0054  ld   $54
              b604 00b1  ld   $b1
              b605 0092  ld   $92
              b606 0085  ld   $85
              b607 005a  ld   $5a
              b608 0088  ld   $88
              b609 00b1  ld   $b1
              b60a 0092  ld   $92
              b60b 0085  ld   $85
              b60c 005b  ld   $5b
              b60d 00a9  ld   $a9
              b60e 0010  ld   $10
              b60f 0085  ld   $85
              b610 0090  ld   $90
              b611 00a2  ld   $a2
              b612 0000  ld   $00
              b613 00a0  ld   $a0
              b614 0000  ld   $00
              b615 008a  ld   $8a
              b616 000a  ld   $0a
              b617 00aa  ld   $aa
              b618 0098  ld   $98
              b619 002a  ld   $2a
              b61a 00a8  ld   $a8
              b61b 00b0  ld   $b0
              b61c 00a4  ld   $a4
              b61d 0006  ld   $06
              b61e 00a4  ld   $a4
              b61f 0026  ld   $26
              b620 00a5  ld   $a5
              b621 0090  ld   $90
              b622 000b  ld   $0b
              b623 0018  ld   $18
              b624 008a  ld   $8a
              b625 0065  ld   $65
              b626 005a  ld   $5a
              b627 00aa  ld   $aa
              b628 0098  ld   $98
              b629 0065  ld   $65
              b62a 005b  ld   $5b
              b62b 00a8  ld   $a8
              b62c 00b0  ld   $b0
              b62d 0093  ld   $93
              b62e 00c6  ld   $c6
              b62f 0090  ld   $90
              b630 00d0  ld   $d0
              b631 00e3  ld   $e3
              b632 0060  ld   $60
              b633 00a5  ld   $a5
              b634 003f  ld   $3f
              b635 00f0  ld   $f0
              b636 0003  ld   $03
              b637 0020  ld   $20
              b638 00e2  ld   $e2
              b639 0016  ld   $16
              b63a 0020  ld   $20
              b63b 0062  ld   $62
              b63c 0015  ld   $15
              b63d 0038  ld   $38
              b63e 00a5  ld   $a5
              b63f 0065  ld   $65
              b640 00e5  ld   $e5
              b641 0063  ld   $63
              b642 00a8  ld   $a8
              b643 00a5  ld   $a5
              b644 0066  ld   $66
              b645 00e5  ld   $e5
              b646 0064  ld   $64
              b647 00a2  ld   $a2
              b648 0000  ld   $00
              b649 0086  ld   $86
              b64a 003f  ld   $3f
              b64b 0085  ld   $85
              b64c 0095  ld   $95
              b64d 0084  ld   $84
              b64e 0096  ld   $96
              b64f 00a2  ld   $a2
              b650 0090  ld   $90
              b651 004c  ld   $4c
              b652 00bc  ld   $bc
              b653 001c  ld   $1c
              b654 00a5  ld   $a5
              b655 0030  ld   $30
              b656 0020  ld   $20
              b657 007a  ld   $7a
              b658 0004  ld   $04
              b659 00a9  ld   $a9
              b65a 0000  ld   $00
              b65b 00f0  ld   $f0
              b65c 00ea  ld   $ea
              b65d 00a6  ld   $a6
              b65e 006c  ld   $6c
              b65f 00e8  ld   $e8
              b660 00d0  ld   $d0
              b661 009f  ld   $9f
              b662 00a2  ld   $a2
              b663 0095  ld   $95
              b664 002c  ld   $2c
              b665 00a2  ld   $a2
              b666 00e0  ld   $e0
              b667 004c  ld   $4c
              b668 004a  ld   $4a
              b669 0005  ld   $05
              b66a 0020  ld   $20
              b66b 001d  ld   $1d
              b66c 0014  ld   $14
              b66d 0020  ld   $20
              b66e 00e2  ld   $e2
              b66f 0013  ld   $13
              b670 0020  ld   $20
              b671 0060  ld   $60
              b672 000f  ld   $0f
              b673 00a9  ld   $a9
              b674 0080  ld   $80
              b675 0085  ld   $85
              b676 0042  ld   $42
              b677 0020  ld   $20
              b678 00d0  ld   $d0
              b679 0010  ld   $10
              b67a 0020  ld   $20
              b67b 0014  ld   $14
              b67c 0000  ld   $00
              b67d 0000  ld   $00
              b67e 00f9  ld   $f9
              b67f 000d  ld   $0d
              b680 0020  ld   $20
              b681 005d  ld   $5d
              b682 000f  ld   $0f
              b683 00a9  ld   $a9
              b684 00ac  ld   $ac
              b685 0020  ld   $20
              b686 0065  ld   $65
              b687 000f  ld   $0f
              b688 0048  ld   $48
              b689 00a5  ld   $a5
              b68a 007a  ld   $7a
              b68b 0048  ld   $48
              b68c 00a5  ld   $a5
              b68d 0079  ld   $79
              b68e 0048  ld   $48
              b68f 00a5  ld   $a5
              b690 00a7  ld   $a7
              b691 0048  ld   $48
              b692 00a5  ld   $a5
              b693 00a6  ld   $a6
              b694 0048  ld   $48
              b695 0020  ld   $20
              b696 00e7  ld   $e7
              b697 0009  ld   $09
              b698 004c  ld   $4c
              b699 008b  ld   $8b
              b69a 0014  ld   $14
              b69b 00a9  ld   $a9
              b69c 009f  ld   $9f
              b69d 0020  ld   $20
              b69e 0065  ld   $65
              b69f 000f  ld   $0f
              b6a0 0009  ld   $09
              b6a1 0080  ld   $80
              b6a2 0085  ld   $85
              b6a3 0042  ld   $42
              b6a4 0020  ld   $20
              b6a5 00d7  ld   $d7
              b6a6 0010  ld   $10
              b6a7 0085  ld   $85
              b6a8 0081  ld   $81
              b6a9 0084  ld   $84
              b6aa 0082  ld   $82
              b6ab 004c  ld   $4c
              b6ac 00f9  ld   $f9
              b6ad 000d  ld   $0d
              b6ae 0020  ld   $20
              b6af 001d  ld   $1d
              b6b0 0014  ld   $14
              b6b1 00a5  ld   $a5
              b6b2 0082  ld   $82
              b6b3 0048  ld   $48
              b6b4 00a5  ld   $a5
              b6b5 0081  ld   $81
              b6b6 0048  ld   $48
              b6b7 0020  ld   $20
              b6b8 0057  ld   $57
              b6b9 000f  ld   $0f
              b6ba 0020  ld   $20
              b6bb 00f9  ld   $f9
              b6bc 000d  ld   $0d
              b6bd 0068  ld   $68
              b6be 0085  ld   $85
              b6bf 0081  ld   $81
              b6c0 0068  ld   $68
              b6c1 0085  ld   $85
              b6c2 0082  ld   $82
              b6c3 00a0  ld   $a0
              b6c4 0002  ld   $02
              b6c5 00b1  ld   $b1
              b6c6 0081  ld   $81
              b6c7 0085  ld   $85
              b6c8 0079  ld   $79
              b6c9 00aa  ld   $aa
              b6ca 00c8  ld   $c8
              b6cb 00b1  ld   $b1
              b6cc 0081  ld   $81
              b6cd 00f0  ld   $f0
              b6ce 0099  ld   $99
              b6cf 0085  ld   $85
              b6d0 007a  ld   $7a
              b6d1 00c8  ld   $c8
              b6d2 00b1  ld   $b1
              b6d3 0079  ld   $79
              b6d4 0048  ld   $48
              b6d5 0088  ld   $88
              b6d6 0010  ld   $10
              b6d7 00fa  ld   $fa
              b6d8 00a4  ld   $a4
              b6d9 007a  ld   $7a
              b6da 0020  ld   $20
              b6db 004c  ld   $4c
              b6dc 001c  ld   $1c
              b6dd 00a5  ld   $a5
              b6de 00a7  ld   $a7
              b6df 0048  ld   $48
              b6e0 00a5  ld   $a5
              b6e1 00a6  ld   $a6
              b6e2 0048  ld   $48
              b6e3 00b1  ld   $b1
              b6e4 0081  ld   $81
              b6e5 0085  ld   $85
              b6e6 00a6  ld   $a6
              b6e7 00c8  ld   $c8
              b6e8 00b1  ld   $b1
              b6e9 0081  ld   $81
              b6ea 0085  ld   $85
              b6eb 00a7  ld   $a7
              b6ec 00a5  ld   $a5
              b6ed 007a  ld   $7a
              b6ee 0048  ld   $48
              b6ef 00a5  ld   $a5
              b6f0 0079  ld   $79
              b6f1 0048  ld   $48
              b6f2 0020  ld   $20
              b6f3 00f6  ld   $f6
              b6f4 000d  ld   $0d
              b6f5 0068  ld   $68
              b6f6 0085  ld   $85
              b6f7 0081  ld   $81
              b6f8 0068  ld   $68
              b6f9 0085  ld   $85
              b6fa 0082  ld   $82
              b6fb fe00  bra  ac          ;+-----------------------------------+
              b6fc fcfd  bra  $b6fd       ;|                                   |
              b6fd 1418  ld   $18,y       ;| Trampoline for page $b600 lookups |
              b6fe e006  jmp  y,$06       ;|                                   |
              b6ff c218  st   [$18]       ;+-----------------------------------+
              b700 0020  ld   $20
              b701 0071  ld   $71
              b702 0022  ld   $22
              b703 00f0  ld   $f0
              b704 0003  ld   $03
              b705 004c  ld   $4c
              b706 006e  ld   $6e
              b707 000f  ld   $0f
              b708 0068  ld   $68
              b709 0085  ld   $85
              b70a 00a6  ld   $a6
              b70b 0068  ld   $68
              b70c 0085  ld   $85
              b70d 00a7  ld   $a7
              b70e 00a0  ld   $a0
              b70f 0000  ld   $00
              b710 0068  ld   $68
              b711 0091  ld   $91
              b712 0081  ld   $81
              b713 0068  ld   $68
              b714 00c8  ld   $c8
              b715 0091  ld   $91
              b716 0081  ld   $81
              b717 0068  ld   $68
              b718 00c8  ld   $c8
              b719 0091  ld   $91
              b71a 0081  ld   $81
              b71b 0068  ld   $68
              b71c 00c8  ld   $c8
              b71d 0091  ld   $91
              b71e 0081  ld   $81
              b71f 0068  ld   $68
              b720 00c8  ld   $c8
              b721 0091  ld   $91
              b722 0081  ld   $81
              b723 0060  ld   $60
              b724 0020  ld   $20
              b725 00f9  ld   $f9
              b726 000d  ld   $0d
              b727 00a0  ld   $a0
              b728 0000  ld   $00
              b729 0020  ld   $20
              b72a 0057  ld   $57
              b72b 001e  ld   $1e
              b72c 0068  ld   $68
              b72d 0068  ld   $68
              b72e 00a9  ld   $a9
              b72f 0004  ld   $04
              b730 00a0  ld   $a0
              b731 0002  ld   $02
              b732 00d0  ld   $d0
              b733 0012  ld   $12
              b734 00a6  ld   $a6
              b735 0097  ld   $97
              b736 00a4  ld   $a4
              b737 0098  ld   $98
              b738 0086  ld   $86
              b739 0083  ld   $83
              b73a 0084  ld   $84
              b73b 0084  ld   $84
              b73c 0020  ld   $20
              b73d 0030  ld   $30
              b73e 0015  ld   $15
              b73f 0086  ld   $86
              b740 0095  ld   $95
              b741 0084  ld   $84
              b742 0096  ld   $96
              b743 0085  ld   $85
              b744 0094  ld   $94
              b745 0060  ld   $60
              b746 00a2  ld   $a2
              b747 0022  ld   $22
              b748 0086  ld   $86
              b749 003b  ld   $3b
              b74a 0086  ld   $86
              b74b 003c  ld   $3c
              b74c 0085  ld   $85
              b74d 00a2  ld   $a2
              b74e 0084  ld   $84
              b74f 00a3  ld   $a3
              b750 0085  ld   $85
              b751 0095  ld   $95
              b752 0084  ld   $84
              b753 0096  ld   $96
              b754 00a0  ld   $a0
              b755 00ff  ld   $ff
              b756 00c8  ld   $c8
              b757 00b1  ld   $b1
              b758 00a2  ld   $a2
              b759 00f0  ld   $f0
              b75a 000c  ld   $0c
              b75b 00c5  ld   $c5
              b75c 003b  ld   $3b
              b75d 00f0  ld   $f0
              b75e 0004  ld   $04
              b75f 00c5  ld   $c5
              b760 003c  ld   $3c
              b761 00d0  ld   $d0
              b762 00f3  ld   $f3
              b763 00c9  ld   $c9
              b764 0022  ld   $22
              b765 00f0  ld   $f0
              b766 0001  ld   $01
              b767 0018  ld   $18
              b768 0084  ld   $84
              b769 0094  ld   $94
              b76a 0098  ld   $98
              b76b 0065  ld   $65
              b76c 00a2  ld   $a2
              b76d 0085  ld   $85
              b76e 00a4  ld   $a4
              b76f 00a6  ld   $a6
              b770 00a3  ld   $a3
              b771 0090  ld   $90
              b772 0001  ld   $01
              b773 00e8  ld   $e8
              b774 0086  ld   $86
              b775 00a5  ld   $a5
              b776 00a5  ld   $a5
              b777 00a3  ld   $a3
              b778 00f0  ld   $f0
              b779 0004  ld   $04
              b77a 00c9  ld   $c9
              b77b 0024  ld   $24
              b77c 00d0  ld   $d0
              b77d 000b  ld   $0b
              b77e 0098  ld   $98
              b77f 0020  ld   $20
              b780 00b1  ld   $b1
              b781 0014  ld   $14
              b782 00a6  ld   $a6
              b783 0015  ld   $15
              b784 0000  ld   $00
              b785 0000  ld   $00
              b786 00a2  ld   $a2
              b787 00a4  ld   $a4
              b788 00a3  ld   $a3
              b789 0020  ld   $20
              b78a 00c4  ld   $c4
              b78b 0016  ld   $16
              b78c 00a6  ld   $a6
              b78d 0048  ld   $48
              b78e 00e0  ld   $e0
              b78f 0054  ld   $54
              b790 00d0  ld   $d0
              b791 0005  ld   $05
              b792 00a2  ld   $a2
              b793 00bf  ld   $bf
              b794 004c  ld   $4c
              b795 004a  ld   $4a
              b796 0005  ld   $05
              b797 00a5  ld   $a5
              b798 0094  ld   $94
              b799 0095  ld   $95
              b79a 0000  ld   $00
              b79b 00a5  ld   $a5
              b79c 0095  ld   $95
              b79d 0095  ld   $95
              b79e 0001  ld   $01
              b79f 00a5  ld   $a5
              b7a0 0096  ld   $96
              b7a1 0095  ld   $95
              b7a2 0002  ld   $02
              b7a3 00a0  ld   $a0
              b7a4 0000  ld   $00
              b7a5 0086  ld   $86
              b7a6 0097  ld   $97
              b7a7 0084  ld   $84
              b7a8 0098  ld   $98
              b7a9 0084  ld   $84
              b7aa 00a3  ld   $a3
              b7ab 0088  ld   $88
              b7ac 0084  ld   $84
              b7ad 003f  ld   $3f
              b7ae 0086  ld   $86
              b7af 0049  ld   $49
              b7b0 00e8  ld   $e8
              b7b1 00e8  ld   $e8
              b7b2 00e8  ld   $e8
              b7b3 0086  ld   $86
              b7b4 0048  ld   $48
              b7b5 0060  ld   $60
              b7b6 0046  ld   $46
              b7b7 0041  ld   $41
              b7b8 0048  ld   $48
              b7b9 0049  ld   $49
              b7ba 00ff  ld   $ff
              b7bb 0038  ld   $38
              b7bc 0065  ld   $65
              b7bd 0065  ld   $65
              b7be 00a4  ld   $a4
              b7bf 0066  ld   $66
              b7c0 00b0  ld   $b0
              b7c1 0001  ld   $01
              b7c2 0088  ld   $88
              b7c3 00c4  ld   $c4
              b7c4 0064  ld   $64
              b7c5 0090  ld   $90
              b7c6 0011  ld   $11
              b7c7 00d0  ld   $d0
              b7c8 0004  ld   $04
              b7c9 00c5  ld   $c5
              b7ca 0063  ld   $63
              b7cb 0090  ld   $90
              b7cc 000b  ld   $0b
              b7cd 0085  ld   $85
              b7ce 0065  ld   $65
              b7cf 0084  ld   $84
              b7d0 0066  ld   $66
              b7d1 0085  ld   $85
              b7d2 0067  ld   $67
              b7d3 0084  ld   $84
              b7d4 0068  ld   $68
              b7d5 00aa  ld   $aa
              b7d6 0068  ld   $68
              b7d7 0060  ld   $60
              b7d8 00a2  ld   $a2
              b7d9 004d  ld   $4d
              b7da 00a5  ld   $a5
              b7db 0041  ld   $41
              b7dc 0030  ld   $30
              b7dd 00b6  ld   $b6
              b7de 0020  ld   $20
              b7df 0062  ld   $62
              b7e0 0015  ld   $15
              b7e1 00a9  ld   $a9
              b7e2 0080  ld   $80
              b7e3 0085  ld   $85
              b7e4 0041  ld   $41
              b7e5 0068  ld   $68
              b7e6 00d0  ld   $d0
              b7e7 00d0  ld   $d0
              b7e8 00a6  ld   $a6
              b7e9 0069  ld   $69
              b7ea 00a5  ld   $a5
              b7eb 006a  ld   $6a
              b7ec 0086  ld   $86
              b7ed 0065  ld   $65
              b7ee 0085  ld   $85
              b7ef 0066  ld   $66
              b7f0 00a0  ld   $a0
              b7f1 0000  ld   $00
              b7f2 0084  ld   $84
              b7f3 0082  ld   $82
              b7f4 0084  ld   $84
              b7f5 0081  ld   $81
              b7f6 00a5  ld   $a5
              b7f7 0063  ld   $63
              b7f8 00a6  ld   $a6
              b7f9 0064  ld   $64
              b7fa 0085  ld   $85
              b7fb fe00  bra  ac          ;+-----------------------------------+
              b7fc fcfd  bra  $b7fd       ;|                                   |
              b7fd 1418  ld   $18,y       ;| Trampoline for page $b700 lookups |
              b7fe e006  jmp  y,$06       ;|                                   |
              b7ff c218  st   [$18]       ;+-----------------------------------+
              b800 0092  ld   $92
              b801 0086  ld   $86
              b802 0093  ld   $93
              b803 00a9  ld   $a9
              b804 004b  ld   $4b
              b805 00a2  ld   $a2
              b806 0000  ld   $00
              b807 0085  ld   $85
              b808 0054  ld   $54
              b809 0086  ld   $86
              b80a 0055  ld   $55
              b80b 00c5  ld   $c5
              b80c 0048  ld   $48
              b80d 00f0  ld   $f0
              b80e 0005  ld   $05
              b80f 0020  ld   $20
              b810 0003  ld   $03
              b811 0016  ld   $16
              b812 00f0  ld   $f0
              b813 00f7  ld   $f7
              b814 00a9  ld   $a9
              b815 0007  ld   $07
              b816 0085  ld   $85
              b817 0086  ld   $86
              b818 00a5  ld   $a5
              b819 005f  ld   $5f
              b81a 00a6  ld   $a6
              b81b 0060  ld   $60
              b81c 0085  ld   $85
              b81d 0054  ld   $54
              b81e 0086  ld   $86
              b81f 0055  ld   $55
              b820 00e4  ld   $e4
              b821 0062  ld   $62
              b822 00d0  ld   $d0
              b823 0004  ld   $04
              b824 00c5  ld   $c5
              b825 0061  ld   $61
              b826 00f0  ld   $f0
              b827 0005  ld   $05
              b828 0020  ld   $20
              b829 00f9  ld   $f9
              b82a 0015  ld   $15
              b82b 00f0  ld   $f0
              b82c 00f3  ld   $f3
              b82d 0085  ld   $85
              b82e 008b  ld   $8b
              b82f 0086  ld   $86
              b830 008c  ld   $8c
              b831 00a9  ld   $a9
              b832 0003  ld   $03
              b833 0085  ld   $85
              b834 0086  ld   $86
              b835 00a5  ld   $a5
              b836 008b  ld   $8b
              b837 00a6  ld   $a6
              b838 008c  ld   $8c
              b839 00e4  ld   $e4
              b83a 0064  ld   $64
              b83b 00d0  ld   $d0
              b83c 0007  ld   $07
              b83d 00c5  ld   $c5
              b83e 0063  ld   $63
              b83f 00d0  ld   $d0
              b840 0003  ld   $03
              b841 004c  ld   $4c
              b842 0042  ld   $42
              b843 0016  ld   $16
              b844 0085  ld   $85
              b845 0054  ld   $54
              b846 0086  ld   $86
              b847 0055  ld   $55
              b848 00a0  ld   $a0
              b849 0000  ld   $00
              b84a 00b1  ld   $b1
              b84b 0054  ld   $54
              b84c 00aa  ld   $aa
              b84d 00c8  ld   $c8
              b84e 00b1  ld   $b1
              b84f 0054  ld   $54
              b850 0008  ld   $08
              b851 00c8  ld   $c8
              b852 00b1  ld   $b1
              b853 0054  ld   $54
              b854 0065  ld   $65
              b855 008b  ld   $8b
              b856 0085  ld   $85
              b857 008b  ld   $8b
              b858 00c8  ld   $c8
              b859 00b1  ld   $b1
              b85a 0054  ld   $54
              b85b 0065  ld   $65
              b85c 008c  ld   $8c
              b85d 0085  ld   $85
              b85e 008c  ld   $8c
              b85f 0028  ld   $28
              b860 0010  ld   $10
              b861 00d3  ld   $d3
              b862 008a  ld   $8a
              b863 0030  ld   $30
              b864 00d0  ld   $d0
              b865 00c8  ld   $c8
              b866 00b1  ld   $b1
              b867 0054  ld   $54
              b868 00a0  ld   $a0
              b869 0000  ld   $00
              b86a 000a  ld   $0a
              b86b 0069  ld   $69
              b86c 0005  ld   $05
              b86d 0065  ld   $65
              b86e 0054  ld   $54
              b86f 0085  ld   $85
              b870 0054  ld   $54
              b871 0090  ld   $90
              b872 0002  ld   $02
              b873 00e6  ld   $e6
              b874 0055  ld   $55
              b875 00a6  ld   $a6
              b876 0055  ld   $55
              b877 00e4  ld   $e4
              b878 008c  ld   $8c
              b879 00d0  ld   $d0
              b87a 0004  ld   $04
              b87b 00c5  ld   $c5
              b87c 008b  ld   $8b
              b87d 00f0  ld   $f0
              b87e 00ba  ld   $ba
              b87f 0020  ld   $20
              b880 0003  ld   $03
              b881 0016  ld   $16
              b882 00f0  ld   $f0
              b883 00f3  ld   $f3
              b884 00b1  ld   $b1
              b885 0054  ld   $54
              b886 0030  ld   $30
              b887 0035  ld   $35
              b888 00c8  ld   $c8
              b889 00b1  ld   $b1
              b88a 0054  ld   $54
              b88b 0016  ld   $16
              b88c 0000  ld   $00
              b88d 0000  ld   $00
              b88e 0010  ld   $10
              b88f 0030  ld   $30
              b890 00c8  ld   $c8
              b891 00b1  ld   $b1
              b892 0054  ld   $54
              b893 00f0  ld   $f0
              b894 002b  ld   $2b
              b895 00c8  ld   $c8
              b896 00b1  ld   $b1
              b897 0054  ld   $54
              b898 00aa  ld   $aa
              b899 00c8  ld   $c8
              b89a 00b1  ld   $b1
              b89b 0054  ld   $54
              b89c 00c5  ld   $c5
              b89d 0066  ld   $66
              b89e 0090  ld   $90
              b89f 0006  ld   $06
              b8a0 00d0  ld   $d0
              b8a1 001e  ld   $1e
              b8a2 00e4  ld   $e4
              b8a3 0065  ld   $65
              b8a4 00b0  ld   $b0
              b8a5 001a  ld   $1a
              b8a6 00c5  ld   $c5
              b8a7 0093  ld   $93
              b8a8 0090  ld   $90
              b8a9 0016  ld   $16
              b8aa 00d0  ld   $d0
              b8ab 0004  ld   $04
              b8ac 00e4  ld   $e4
              b8ad 0092  ld   $92
              b8ae 0090  ld   $90
              b8af 0010  ld   $10
              b8b0 0086  ld   $86
              b8b1 0092  ld   $92
              b8b2 0085  ld   $85
              b8b3 0093  ld   $93
              b8b4 00a5  ld   $a5
              b8b5 0054  ld   $54
              b8b6 00a6  ld   $a6
              b8b7 0055  ld   $55
              b8b8 0085  ld   $85
              b8b9 0081  ld   $81
              b8ba 0086  ld   $86
              b8bb 0082  ld   $82
              b8bc 00a5  ld   $a5
              b8bd 0086  ld   $86
              b8be 0085  ld   $85
              b8bf 0088  ld   $88
              b8c0 00a5  ld   $a5
              b8c1 0086  ld   $86
              b8c2 0018  ld   $18
              b8c3 0065  ld   $65
              b8c4 0054  ld   $54
              b8c5 0085  ld   $85
              b8c6 0054  ld   $54
              b8c7 0090  ld   $90
              b8c8 0002  ld   $02
              b8c9 00e6  ld   $e6
              b8ca 0055  ld   $55
              b8cb 00a6  ld   $a6
              b8cc 0055  ld   $55
              b8cd 00a0  ld   $a0
              b8ce 0000  ld   $00
              b8cf 0060  ld   $60
              b8d0 00a5  ld   $a5
              b8d1 0082  ld   $82
              b8d2 0005  ld   $05
              b8d3 0081  ld   $81
              b8d4 00f0  ld   $f0
              b8d5 00f5  ld   $f5
              b8d6 00a5  ld   $a5
              b8d7 0088  ld   $88
              b8d8 0029  ld   $29
              b8d9 0004  ld   $04
              b8da 004a  ld   $4a
              b8db 00a8  ld   $a8
              b8dc 0085  ld   $85
              b8dd 0088  ld   $88
              b8de 00b1  ld   $b1
              b8df 0081  ld   $81
              b8e0 0065  ld   $65
              b8e1 0092  ld   $92
              b8e2 0085  ld   $85
              b8e3 008d  ld   $8d
              b8e4 00a5  ld   $a5
              b8e5 0093  ld   $93
              b8e6 0069  ld   $69
              b8e7 0000  ld   $00
              b8e8 0085  ld   $85
              b8e9 008e  ld   $8e
              b8ea 00a5  ld   $a5
              b8eb 0065  ld   $65
              b8ec 00a6  ld   $a6
              b8ed 0066  ld   $66
              b8ee 0085  ld   $85
              b8ef 008b  ld   $8b
              b8f0 0086  ld   $86
              b8f1 008c  ld   $8c
              b8f2 0020  ld   $20
              b8f3 00d2  ld   $d2
              b8f4 0004  ld   $04
              b8f5 00a4  ld   $a4
              b8f6 0088  ld   $88
              b8f7 00c8  ld   $c8
              b8f8 00a5  ld   $a5
              b8f9 008b  ld   $8b
              b8fa 0091  ld   $91
              b8fb fe00  bra  ac          ;+-----------------------------------+
              b8fc fcfd  bra  $b8fd       ;|                                   |
              b8fd 1418  ld   $18,y       ;| Trampoline for page $b800 lookups |
              b8fe e006  jmp  y,$06       ;|                                   |
              b8ff c218  st   [$18]       ;+-----------------------------------+
              b900 0081  ld   $81
              b901 00aa  ld   $aa
              b902 00e6  ld   $e6
              b903 008c  ld   $8c
              b904 00a5  ld   $a5
              b905 008c  ld   $8c
              b906 00c8  ld   $c8
              b907 0091  ld   $91
              b908 0081  ld   $81
              b909 004c  ld   $4c
              b90a 0066  ld   $66
              b90b 0015  ld   $15
              b90c 00a5  ld   $a5
              b90d 0098  ld   $98
              b90e 0048  ld   $48
              b90f 00a5  ld   $a5
              b910 0097  ld   $97
              b911 0048  ld   $48
              b912 0020  ld   $20
              b913 00ef  ld   $ef
              b914 000e  ld   $0e
              b915 0020  ld   $20
              b916 00fb  ld   $fb
              b917 000d  ld   $0d
              b918 0068  ld   $68
              b919 0085  ld   $85
              b91a 00a2  ld   $a2
              b91b 0068  ld   $68
              b91c 0085  ld   $85
              b91d 00a3  ld   $a3
              b91e 00a0  ld   $a0
              b91f 0000  ld   $00
              b920 00b1  ld   $b1
              b921 00a2  ld   $a2
              b922 0018  ld   $18
              b923 0071  ld   $71
              b924 0097  ld   $97
              b925 0090  ld   $90
              b926 0005  ld   $05
              b927 00a2  ld   $a2
              b928 00b0  ld   $b0
              b929 004c  ld   $4c
              b92a 004a  ld   $4a
              b92b 0005  ld   $05
              b92c 0020  ld   $20
              b92d 00b1  ld   $b1
              b92e 0014  ld   $14
              b92f 0020  ld   $20
              b930 00b6  ld   $b6
              b931 0016  ld   $16
              b932 00a5  ld   $a5
              b933 0083  ld   $83
              b934 00a4  ld   $a4
              b935 0084  ld   $84
              b936 0020  ld   $20
              b937 00e6  ld   $e6
              b938 0016  ld   $16
              b939 0020  ld   $20
              b93a 00c8  ld   $c8
              b93b 0016  ld   $16
              b93c 00a5  ld   $a5
              b93d 00a2  ld   $a2
              b93e 00a4  ld   $a4
              b93f 00a3  ld   $a3
              b940 0020  ld   $20
              b941 00e6  ld   $e6
              b942 0016  ld   $16
              b943 0020  ld   $20
              b944 0006  ld   $06
              b945 0015  ld   $15
              b946 004c  ld   $4c
              b947 0024  ld   $24
              b948 000e  ld   $0e
              b949 00a0  ld   $a0
              b94a 0000  ld   $00
              b94b 00b1  ld   $b1
              b94c 00a2  ld   $a2
              b94d 0048  ld   $48
              b94e 00c8  ld   $c8
              b94f 00b1  ld   $b1
              b950 00a2  ld   $a2
              b951 00aa  ld   $aa
              b952 00c8  ld   $c8
              b953 00b1  ld   $b1
              b954 00a2  ld   $a2
              b955 00a8  ld   $a8
              b956 0068  ld   $68
              b957 0086  ld   $86
              b958 0054  ld   $54
              b959 0084  ld   $84
              b95a 0055  ld   $55
              b95b 00a8  ld   $a8
              b95c 00f0  ld   $f0
              b95d 000a  ld   $0a
              b95e 0048  ld   $48
              b95f 0088  ld   $88
              b960 00b1  ld   $b1
              b961 0054  ld   $54
              b962 0091  ld   $91
              b963 0067  ld   $67
              b964 0098  ld   $98
              b965 00d0  ld   $d0
              b966 00f8  ld   $f8
              b967 0068  ld   $68
              b968 0018  ld   $18
              b969 0065  ld   $65
              b96a 0067  ld   $67
              b96b 0085  ld   $85
              b96c 0067  ld   $67
              b96d 0090  ld   $90
              b96e 0002  ld   $02
              b96f 00e6  ld   $e6
              b970 0068  ld   $68
              b971 0060  ld   $60
              b972 0020  ld   $20
              b973 00fb  ld   $fb
              b974 000d  ld   $0d
              b975 00a5  ld   $a5
              b976 0097  ld   $97
              b977 00a4  ld   $a4
              b978 0098  ld   $98
              b979 0085  ld   $85
              b97a 0054  ld   $54
              b97b 0084  ld   $84
              b97c 0055  ld   $55
              b97d 0020  ld   $20
              b97e 0017  ld   $17
              b97f 0017  ld   $17
              b980 0008  ld   $08
              b981 00a0  ld   $a0
              b982 0000  ld   $00
              b983 00b1  ld   $b1
              b984 0054  ld   $54
              b985 0048  ld   $48
              b986 00c8  ld   $c8
              b987 00b1  ld   $b1
              b988 0054  ld   $54
              b989 00aa  ld   $aa
              b98a 00c8  ld   $c8
              b98b 00b1  ld   $b1
              b98c 0054  ld   $54
              b98d 00a8  ld   $a8
              b98e 0068  ld   $68
              b98f 0028  ld   $28
              b990 00d0  ld   $d0
              b991 0013  ld   $13
              b992 00c4  ld   $c4
              b993 0017  ld   $17
              b994 0000  ld   $00
              b995 0000  ld   $00
              b996 0066  ld   $66
              b997 00d0  ld   $d0
              b998 000f  ld   $0f
              b999 00e4  ld   $e4
              b99a 0065  ld   $65
              b99b 00d0  ld   $d0
              b99c 000b  ld   $0b
              b99d 0048  ld   $48
              b99e 0018  ld   $18
              b99f 0065  ld   $65
              b9a0 0065  ld   $65
              b9a1 0085  ld   $85
              b9a2 0065  ld   $65
              b9a3 0090  ld   $90
              b9a4 0002  ld   $02
              b9a5 00e6  ld   $e6
              b9a6 0066  ld   $66
              b9a7 0068  ld   $68
              b9a8 0086  ld   $86
              b9a9 0054  ld   $54
              b9aa 0084  ld   $84
              b9ab 0055  ld   $55
              b9ac 0060  ld   $60
              b9ad 00c4  ld   $c4
              b9ae 004a  ld   $4a
              b9af 00d0  ld   $d0
              b9b0 000c  ld   $0c
              b9b1 00c5  ld   $c5
              b9b2 0049  ld   $49
              b9b3 00d0  ld   $d0
              b9b4 0008  ld   $08
              b9b5 0085  ld   $85
              b9b6 0048  ld   $48
              b9b7 00e9  ld   $e9
              b9b8 0003  ld   $03
              b9b9 0085  ld   $85
              b9ba 0049  ld   $49
              b9bb 00a0  ld   $a0
              b9bc 0000  ld   $00
              b9bd 0060  ld   $60
              b9be 0020  ld   $20
              b9bf 00dd  ld   $dd
              b9c0 0017  ld   $17
              b9c1 008a  ld   $8a
              b9c2 0048  ld   $48
              b9c3 00a9  ld   $a9
              b9c4 0001  ld   $01
              b9c5 0020  ld   $20
              b9c6 00b9  ld   $b9
              b9c7 0014  ld   $14
              b9c8 0068  ld   $68
              b9c9 00a0  ld   $a0
              b9ca 0000  ld   $00
              b9cb 0091  ld   $91
              b9cc 0095  ld   $95
              b9cd 0068  ld   $68
              b9ce 0068  ld   $68
              b9cf 004c  ld   $4c
              b9d0 0006  ld   $06
              b9d1 0015  ld   $15
              b9d2 0020  ld   $20
              b9d3 009d  ld   $9d
              b9d4 0017  ld   $17
              b9d5 00d1  ld   $d1
              b9d6 0083  ld   $83
              b9d7 0098  ld   $98
              b9d8 0090  ld   $90
              b9d9 0004  ld   $04
              b9da 00b1  ld   $b1
              b9db 0083  ld   $83
              b9dc 00aa  ld   $aa
              b9dd 0098  ld   $98
              b9de 0048  ld   $48
              b9df 008a  ld   $8a
              b9e0 0048  ld   $48
              b9e1 0020  ld   $20
              b9e2 00b9  ld   $b9
              b9e3 0014  ld   $14
              b9e4 00a5  ld   $a5
              b9e5 0083  ld   $83
              b9e6 00a4  ld   $a4
              b9e7 0084  ld   $84
              b9e8 0020  ld   $20
              b9e9 00e6  ld   $e6
              b9ea 0016  ld   $16
              b9eb 0068  ld   $68
              b9ec 00a8  ld   $a8
              b9ed 0068  ld   $68
              b9ee 0018  ld   $18
              b9ef 0065  ld   $65
              b9f0 0054  ld   $54
              b9f1 0085  ld   $85
              b9f2 0054  ld   $54
              b9f3 0090  ld   $90
              b9f4 0002  ld   $02
              b9f5 00e6  ld   $e6
              b9f6 0055  ld   $55
              b9f7 0098  ld   $98
              b9f8 0020  ld   $20
              b9f9 00c8  ld   $c8
              b9fa 0016  ld   $16
              b9fb fe00  bra  ac          ;+-----------------------------------+
              b9fc fcfd  bra  $b9fd       ;|                                   |
              b9fd 1418  ld   $18,y       ;| Trampoline for page $b900 lookups |
              b9fe e006  jmp  y,$06       ;|                                   |
              b9ff c218  st   [$18]       ;+-----------------------------------+
              ba00 004c  ld   $4c
              ba01 0006  ld   $06
              ba02 0015  ld   $15
              ba03 0020  ld   $20
              ba04 009d  ld   $9d
              ba05 0017  ld   $17
              ba06 0018  ld   $18
              ba07 00f1  ld   $f1
              ba08 0083  ld   $83
              ba09 0049  ld   $49
              ba0a 00ff  ld   $ff
              ba0b 004c  ld   $4c
              ba0c 0042  ld   $42
              ba0d 0017  ld   $17
              ba0e 00a9  ld   $a9
              ba0f 00ff  ld   $ff
              ba10 0085  ld   $85
              ba11 0098  ld   $98
              ba12 0020  ld   $20
              ba13 0071  ld   $71
              ba14 0022  ld   $22
              ba15 00c9  ld   $c9
              ba16 0029  ld   $29
              ba17 00f0  ld   $f0
              ba18 0006  ld   $06
              ba19 0020  ld   $20
              ba1a 0063  ld   $63
              ba1b 000f  ld   $0f
              ba1c 0020  ld   $20
              ba1d 00da  ld   $da
              ba1e 0017  ld   $17
              ba1f 0020  ld   $20
              ba20 009d  ld   $9d
              ba21 0017  ld   $17
              ba22 00f0  ld   $f0
              ba23 004b  ld   $4b
              ba24 00ca  ld   $ca
              ba25 008a  ld   $8a
              ba26 0048  ld   $48
              ba27 0018  ld   $18
              ba28 00a2  ld   $a2
              ba29 0000  ld   $00
              ba2a 00f1  ld   $f1
              ba2b 0083  ld   $83
              ba2c 00b0  ld   $b0
              ba2d 00b6  ld   $b6
              ba2e 0049  ld   $49
              ba2f 00ff  ld   $ff
              ba30 00c5  ld   $c5
              ba31 0098  ld   $98
              ba32 0090  ld   $90
              ba33 00b1  ld   $b1
              ba34 00a5  ld   $a5
              ba35 0098  ld   $98
              ba36 00b0  ld   $b0
              ba37 00ad  ld   $ad
              ba38 0020  ld   $20
              ba39 005d  ld   $5d
              ba3a 000f  ld   $0f
              ba3b 0068  ld   $68
              ba3c 00a8  ld   $a8
              ba3d 0068  ld   $68
              ba3e 0085  ld   $85
              ba3f 0088  ld   $88
              ba40 0068  ld   $68
              ba41 0068  ld   $68
              ba42 0068  ld   $68
              ba43 00aa  ld   $aa
              ba44 0068  ld   $68
              ba45 0085  ld   $85
              ba46 0083  ld   $83
              ba47 0068  ld   $68
              ba48 0085  ld   $85
              ba49 0084  ld   $84
              ba4a 00a5  ld   $a5
              ba4b 0088  ld   $88
              ba4c 0048  ld   $48
              ba4d 0098  ld   $98
              ba4e 0048  ld   $48
              ba4f 00a0  ld   $a0
              ba50 0000  ld   $00
              ba51 008a  ld   $8a
              ba52 0060  ld   $60
              ba53 0020  ld   $20
              ba54 00be  ld   $be
              ba55 0017  ld   $17
              ba56 004c  ld   $4c
              ba57 00de  ld   $de
              ba58 0013  ld   $13
              ba59 0020  ld   $20
              ba5a 00df  ld   $df
              ba5b 0016  ld   $16
              ba5c 00a2  ld   $a2
              ba5d 0000  ld   $00
              ba5e 0086  ld   $86
              ba5f 003f  ld   $3f
              ba60 00a8  ld   $a8
              ba61 0060  ld   $60
              ba62 0020  ld   $20
              ba63 00be  ld   $be
              ba64 0017  ld   $17
              ba65 00f0  ld   $f0
              ba66 0008  ld   $08
              ba67 00a0  ld   $a0
              ba68 0000  ld   $00
              ba69 00b1  ld   $b1
              ba6a 0054  ld   $54
              ba6b 00a8  ld   $a8
              ba6c 004c  ld   $4c
              ba6d 00de  ld   $de
              ba6e 0013  ld   $13
              ba6f 004c  ld   $4c
              ba70 0082  ld   $82
              ba71 0012  ld   $12
              ba72 0020  ld   $20
              ba73 006b  ld   $6b
              ba74 0022  ld   $22
              ba75 0020  ld   $20
              ba76 00f6  ld   $f6
              ba77 000d  ld   $0d
              ba78 0020  ld   $20
              ba79 00f6  ld   $f6
              ba7a 0011  ld   $11
              ba7b 00a6  ld   $a6
              ba7c 0097  ld   $97
              ba7d 00d0  ld   $d0
              ba7e 00f0  ld   $f0
              ba7f 00a6  ld   $a6
              ba80 0098  ld   $98
              ba81 004c  ld   $4c
              ba82 0071  ld   $71
              ba83 0022  ld   $22
              ba84 0020  ld   $20
              ba85 00be  ld   $be
              ba86 0017  ld   $17
              ba87 00d0  ld   $d0
              ba88 0003  ld   $03
              ba89 004c  ld   $4c
              ba8a 006f  ld   $6f
              ba8b 0019  ld   $19
              ba8c 00a6  ld   $a6
              ba8d 00a6  ld   $a6
              ba8e 00a4  ld   $a4
              ba8f 00a7  ld   $a7
              ba90 0086  ld   $86
              ba91 00a4  ld   $a4
              ba92 0084  ld   $84
              ba93 00a5  ld   $a5
              ba94 00a6  ld   $a6
              ba95 0054  ld   $54
              ba96 0086  ld   $86
              ba97 00a6  ld   $a6
              ba98 0018  ld   $18
              ba99 0065  ld   $65
              ba9a 0054  ld   $54
              ba9b 0018  ld   $18
              ba9c 0000  ld   $00
              ba9d 0000  ld   $00
              ba9e 0085  ld   $85
              ba9f 0056  ld   $56
              baa0 00a6  ld   $a6
              baa1 0055  ld   $55
              baa2 0086  ld   $86
              baa3 00a7  ld   $a7
              baa4 0090  ld   $90
              baa5 0001  ld   $01
              baa6 00e8  ld   $e8
              baa7 0086  ld   $86
              baa8 0057  ld   $57
              baa9 00a0  ld   $a0
              baaa 0000  ld   $00
              baab 00b1  ld   $b1
              baac 0056  ld   $56
              baad 0048  ld   $48
              baae 00a9  ld   $a9
              baaf 0000  ld   $00
              bab0 0091  ld   $91
              bab1 0056  ld   $56
              bab2 0020  ld   $20
              bab3 0071  ld   $71
              bab4 0022  ld   $22
              bab5 0020  ld   $20
              bab6 006b  ld   $6b
              bab7 001d  ld   $1d
              bab8 0068  ld   $68
              bab9 00a0  ld   $a0
              baba 0000  ld   $00
              babb 0091  ld   $91
              babc 0056  ld   $56
              babd 00a6  ld   $a6
              babe 00a4  ld   $a4
              babf 00a4  ld   $a4
              bac0 00a5  ld   $a5
              bac1 0086  ld   $86
              bac2 00a6  ld   $a6
              bac3 0084  ld   $84
              bac4 00a7  ld   $a7
              bac5 0060  ld   $60
              bac6 0020  ld   $20
              bac7 00f6  ld   $f6
              bac8 000d  ld   $0d
              bac9 0020  ld   $20
              baca 0034  ld   $34
              bacb 0018  ld   $18
              bacc 0020  ld   $20
              bacd 0063  ld   $63
              bace 000f  ld   $0f
              bacf 004c  ld   $4c
              bad0 00da  ld   $da
              bad1 0017  ld   $17
              bad2 00a5  ld   $a5
              bad3 0099  ld   $99
              bad4 0030  ld   $30
              bad5 009c  ld   $9c
              bad6 00a5  ld   $a5
              bad7 0094  ld   $94
              bad8 00c9  ld   $c9
              bad9 0091  ld   $91
              bada 00b0  ld   $b0
              badb 0096  ld   $96
              badc 0020  ld   $20
              badd 0013  ld   $13
              bade 001d  ld   $1d
              badf 00a5  ld   $a5
              bae0 0097  ld   $97
              bae1 00a4  ld   $a4
              bae2 0098  ld   $98
              bae3 0084  ld   $84
              bae4 0046  ld   $46
              bae5 0085  ld   $85
              bae6 0047  ld   $47
              bae7 0060  ld   $60
              bae8 00a5  ld   $a5
              bae9 0047  ld   $47
              baea 0048  ld   $48
              baeb 00a5  ld   $a5
              baec 0046  ld   $46
              baed 0048  ld   $48
              baee 0020  ld   $20
              baef 0034  ld   $34
              baf0 0018  ld   $18
              baf1 00a0  ld   $a0
              baf2 0000  ld   $00
              baf3 00ea  ld   $ea
              baf4 00ea  ld   $ea
              baf5 00ea  ld   $ea
              * 8 times
              bafb fe00  bra  ac          ;+-----------------------------------+
              bafc fcfd  bra  $bafd       ;|                                   |
              bafd 1418  ld   $18,y       ;| Trampoline for page $ba00 lookups |
              bafe e006  jmp  y,$06       ;|                                   |
              baff c218  st   [$18]       ;+-----------------------------------+
              bb00 00b1  ld   $b1
              bb01 0046  ld   $46
              bb02 00a8  ld   $a8
              bb03 0068  ld   $68
              bb04 0085  ld   $85
              bb05 0046  ld   $46
              bb06 0068  ld   $68
              bb07 0085  ld   $85
              bb08 0047  ld   $47
              bb09 004c  ld   $4c
              bb0a 00de  ld   $de
              bb0b 0013  ld   $13
              bb0c 0020  ld   $20
              bb0d 0028  ld   $28
              bb0e 0018  ld   $18
              bb0f 008a  ld   $8a
              bb10 00a0  ld   $a0
              bb11 0000  ld   $00
              bb12 0091  ld   $91
              bb13 0046  ld   $46
              bb14 0060  ld   $60
              bb15 0020  ld   $20
              bb16 0028  ld   $28
              bb17 0018  ld   $18
              bb18 0086  ld   $86
              bb19 007b  ld   $7b
              bb1a 00a2  ld   $a2
              bb1b 0000  ld   $00
              bb1c 0020  ld   $20
              bb1d 0071  ld   $71
              bb1e 0022  ld   $22
              bb1f 00f0  ld   $f0
              bb20 0029  ld   $29
              bb21 0020  ld   $20
              bb22 002e  ld   $2e
              bb23 0018  ld   $18
              bb24 0086  ld   $86
              bb25 007c  ld   $7c
              bb26 00a0  ld   $a0
              bb27 0000  ld   $00
              bb28 00b1  ld   $b1
              bb29 0046  ld   $46
              bb2a 0045  ld   $45
              bb2b 007c  ld   $7c
              bb2c 0025  ld   $25
              bb2d 007b  ld   $7b
              bb2e 00f0  ld   $f0
              bb2f 00f8  ld   $f8
              bb30 0060  ld   $60
              bb31 00a9  ld   $a9
              bb32 0089  ld   $89
              bb33 00a0  ld   $a0
              bb34 001f  ld   $1f
              bb35 004c  ld   $4c
              bb36 00df  ld   $df
              bb37 0018  ld   $18
              bb38 0020  ld   $20
              bb39 0004  ld   $04
              bb3a 001b  ld   $1b
              bb3b 00a5  ld   $a5
              bb3c 0099  ld   $99
              bb3d 0049  ld   $49
              bb3e 00ff  ld   $ff
              bb3f 0085  ld   $85
              bb40 0099  ld   $99
              bb41 0045  ld   $45
              bb42 00a1  ld   $a1
              bb43 0085  ld   $85
              bb44 00a2  ld   $a2
              bb45 00a5  ld   $a5
              bb46 0094  ld   $94
              bb47 004c  ld   $4c
              bb48 00e2  ld   $e2
              bb49 0018  ld   $18
              bb4a 00a5  ld   $a5
              bb4b 0046  ld   $46
              bb4c 0049  ld   $49
              bb4d 00e8  ld   $e8
              bb4e 00d0  ld   $d0
              bb4f 0008  ld   $08
              bb50 00a2  ld   $a2
              bb51 0014  ld   $14
              bb52 0045  ld   $45
              bb53 0047  ld   $47
              bb54 0049  ld   $49
              bb55 001c  ld   $1c
              bb56 00f0  ld   $f0
              bb57 000e  ld   $0e
              bb58 00a5  ld   $a5
              bb59 0046  ld   $46
              bb5a 00c9  ld   $c9
              bb5b 0066  ld   $66
              bb5c 00d0  ld   $d0
              bb5d 00c6  ld   $c6
              bb5e 00a5  ld   $a5
              bb5f 0047  ld   $47
              bb60 00e9  ld   $e9
              bb61 0019  ld   $19
              bb62 00d0  ld   $d0
              bb63 00c0  ld   $c0
              bb64 00a2  ld   $a2
              bb65 000a  ld   $0a
              bb66 00bd  ld   $bd
              bb67 00e9  ld   $e9
              bb68 0021  ld   $21
              bb69 0029  ld   $29
              bb6a 003f  ld   $3f
              bb6b 0049  ld   $49
              bb6c 0020  ld   $20
              bb6d 0018  ld   $18
              bb6e 0069  ld   $69
              bb6f 0020  ld   $20
              bb70 0020  ld   $20
              bb71 0000  ld   $00
              bb72 002b  ld   $2b
              bb73 00ca  ld   $ca
              bb74 0049  ld   $49
              bb75 0021  ld   $21
              bb76 00d0  ld   $d0
              bb77 00ee  ld   $ee
              bb78 00c6  ld   $c6
              bb79 007b  ld   $7b
              bb7a 00d0  ld   $d0
              bb7b 00e8  ld   $e8
              bb7c 0060  ld   $60
              bb7d 0020  ld   $20
              bb7e 0011  ld   $11
              bb7f 001a  ld   $1a
              bb80 0090  ld   $90
              bb81 003c  ld   $3c
              bb82 0020  ld   $20
              bb83 0004  ld   $04
              bb84 001b  ld   $1b
              bb85 00d0  ld   $d0
              bb86 0003  ld   $03
              bb87 004c  ld   $4c
              bb88 0074  ld   $74
              bb89 001c  ld   $1c
              bb8a 00a6  ld   $a6
              bb8b 00a3  ld   $a3
              bb8c 0086  ld   $86
              bb8d 0089  ld   $89
              bb8e 00a2  ld   $a2
              bb8f 009c  ld   $9c
              bb90 00a5  ld   $a5
              bb91 009c  ld   $9c
              bb92 00a8  ld   $a8
              bb93 00f0  ld   $f0
              bb94 009b  ld   $9b
              bb95 0038  ld   $38
              bb96 00e5  ld   $e5
              bb97 0094  ld   $94
              bb98 00f0  ld   $f0
              bb99 0024  ld   $24
              bb9a 0090  ld   $90
              bb9b 0012  ld   $12
              bb9c 0084  ld   $84
              bb9d 0094  ld   $94
              bb9e 00a4  ld   $a4
              bb9f 00a1  ld   $a1
              bba0 0084  ld   $84
              bba1 0099  ld   $99
              bba2 0049  ld   $49
              bba3 0019  ld   $19
              bba4 0000  ld   $00
              bba5 0000  ld   $00
              bba6 00ff  ld   $ff
              bba7 0069  ld   $69
              bba8 0000  ld   $00
              bba9 00a0  ld   $a0
              bbaa 0000  ld   $00
              bbab 0084  ld   $84
              bbac 0089  ld   $89
              bbad 00a2  ld   $a2
              bbae 0094  ld   $94
              bbaf 00d0  ld   $d0
              bbb0 0004  ld   $04
              bbb1 00a0  ld   $a0
              bbb2 0000  ld   $00
              bbb3 0084  ld   $84
              bbb4 00a3  ld   $a3
              bbb5 00c9  ld   $c9
              bbb6 00f9  ld   $f9
              bbb7 0030  ld   $30
              bbb8 00c7  ld   $c7
              bbb9 00a8  ld   $a8
              bbba 00a5  ld   $a5
              bbbb 00a3  ld   $a3
              bbbc 0056  ld   $56
              bbbd 0001  ld   $01
              bbbe 0020  ld   $20
              bbbf 0028  ld   $28
              bbc0 001a  ld   $1a
              bbc1 0024  ld   $24
              bbc2 00a2  ld   $a2
              bbc3 0010  ld   $10
              bbc4 0057  ld   $57
              bbc5 00a0  ld   $a0
              bbc6 0094  ld   $94
              bbc7 00e0  ld   $e0
              bbc8 009c  ld   $9c
              bbc9 00f0  ld   $f0
              bbca 0002  ld   $02
              bbcb 00a0  ld   $a0
              bbcc 009c  ld   $9c
              bbcd 0038  ld   $38
              bbce 0049  ld   $49
              bbcf 00ff  ld   $ff
              bbd0 0065  ld   $65
              bbd1 0089  ld   $89
              bbd2 0085  ld   $85
              bbd3 00a3  ld   $a3
              bbd4 00b9  ld   $b9
              bbd5 0004  ld   $04
              bbd6 0000  ld   $00
              bbd7 00f5  ld   $f5
              bbd8 0004  ld   $04
              bbd9 0085  ld   $85
              bbda 0098  ld   $98
              bbdb 00b9  ld   $b9
              bbdc 0003  ld   $03
              bbdd 0000  ld   $00
              bbde 00f5  ld   $f5
              bbdf 0003  ld   $03
              bbe0 0085  ld   $85
              bbe1 0097  ld   $97
              bbe2 00b9  ld   $b9
              bbe3 0002  ld   $02
              bbe4 0000  ld   $00
              bbe5 00f5  ld   $f5
              bbe6 0002  ld   $02
              bbe7 0085  ld   $85
              bbe8 0096  ld   $96
              bbe9 00b9  ld   $b9
              bbea 0001  ld   $01
              bbeb 0000  ld   $00
              bbec 00f5  ld   $f5
              bbed 0001  ld   $01
              bbee 0085  ld   $85
              bbef 0095  ld   $95
              bbf0 00b0  ld   $b0
              bbf1 0003  ld   $03
              bbf2 0020  ld   $20
              bbf3 00bf  ld   $bf
              bbf4 0019  ld   $19
              bbf5 00a0  ld   $a0
              bbf6 0000  ld   $00
              bbf7 0098  ld   $98
              bbf8 0018  ld   $18
              bbf9 00a6  ld   $a6
              bbfa 0095  ld   $95
              bbfb fe00  bra  ac          ;+-----------------------------------+
              bbfc fcfd  bra  $bbfd       ;|                                   |
              bbfd 1418  ld   $18,y       ;| Trampoline for page $bb00 lookups |
              bbfe e006  jmp  y,$06       ;|                                   |
              bbff c218  st   [$18]       ;+-----------------------------------+
              bc00 00d0  ld   $d0
              bc01 004a  ld   $4a
              bc02 00a6  ld   $a6
              bc03 0096  ld   $96
              bc04 0086  ld   $86
              bc05 0095  ld   $95
              bc06 00a6  ld   $a6
              bc07 0097  ld   $97
              bc08 0086  ld   $86
              bc09 0096  ld   $96
              bc0a 00a6  ld   $a6
              bc0b 0098  ld   $98
              bc0c 0086  ld   $86
              bc0d 0097  ld   $97
              bc0e 00a6  ld   $a6
              bc0f 00a3  ld   $a3
              bc10 0086  ld   $86
              bc11 0098  ld   $98
              bc12 0084  ld   $84
              bc13 00a3  ld   $a3
              bc14 0069  ld   $69
              bc15 0008  ld   $08
              bc16 00c9  ld   $c9
              bc17 0020  ld   $20
              bc18 00d0  ld   $d0
              bc19 00e4  ld   $e4
              bc1a 00a9  ld   $a9
              bc1b 0000  ld   $00
              bc1c 0085  ld   $85
              bc1d 0094  ld   $94
              bc1e 0085  ld   $85
              bc1f 0099  ld   $99
              bc20 0060  ld   $60
              bc21 0065  ld   $65
              bc22 0089  ld   $89
              bc23 0085  ld   $85
              bc24 00a3  ld   $a3
              bc25 00a5  ld   $a5
              bc26 0098  ld   $98
              bc27 0065  ld   $65
              bc28 00a0  ld   $a0
              bc29 0085  ld   $85
              bc2a 0098  ld   $98
              bc2b 00a5  ld   $a5
              bc2c 0097  ld   $97
              bc2d 0065  ld   $65
              bc2e 009f  ld   $9f
              bc2f 0085  ld   $85
              bc30 0097  ld   $97
              bc31 00a5  ld   $a5
              bc32 0096  ld   $96
              bc33 0065  ld   $65
              bc34 009e  ld   $9e
              bc35 0085  ld   $85
              bc36 0096  ld   $96
              bc37 00a5  ld   $a5
              bc38 0095  ld   $95
              bc39 0065  ld   $65
              bc3a 009d  ld   $9d
              bc3b 0085  ld   $85
              bc3c 0095  ld   $95
              bc3d 004c  ld   $4c
              bc3e 00ae  ld   $ae
              bc3f 0019  ld   $19
              bc40 0069  ld   $69
              bc41 0001  ld   $01
              bc42 0006  ld   $06
              bc43 00a3  ld   $a3
              bc44 0026  ld   $26
              bc45 0098  ld   $98
              bc46 0026  ld   $26
              bc47 0097  ld   $97
              bc48 0026  ld   $26
              bc49 0096  ld   $96
              bc4a 0026  ld   $26
              bc4b 0095  ld   $95
              bc4c 0010  ld   $10
              bc4d 00f2  ld   $f2
              bc4e 0038  ld   $38
              bc4f 00e5  ld   $e5
              bc50 0094  ld   $94
              bc51 00b0  ld   $b0
              bc52 00c7  ld   $c7
              bc53 0049  ld   $49
              bc54 00ff  ld   $ff
              bc55 0069  ld   $69
              bc56 0001  ld   $01
              bc57 0085  ld   $85
              bc58 0094  ld   $94
              bc59 0090  ld   $90
              bc5a 000e  ld   $0e
              bc5b 00e6  ld   $e6
              bc5c 0094  ld   $94
              bc5d 00f0  ld   $f0
              bc5e 0042  ld   $42
              bc5f 0066  ld   $66
              bc60 0095  ld   $95
              bc61 0066  ld   $66
              bc62 0096  ld   $96
              bc63 0066  ld   $66
              bc64 0097  ld   $97
              bc65 0066  ld   $66
              bc66 0098  ld   $98
              bc67 0066  ld   $66
              bc68 00a3  ld   $a3
              bc69 0060  ld   $60
              bc6a 00a5  ld   $a5
              bc6b 0099  ld   $99
              bc6c 0049  ld   $49
              bc6d 00ff  ld   $ff
              bc6e 0085  ld   $85
              bc6f 0099  ld   $99
              bc70 00a5  ld   $a5
              bc71 0095  ld   $95
              bc72 0049  ld   $49
              bc73 00ff  ld   $ff
              bc74 0085  ld   $85
              bc75 0095  ld   $95
              bc76 00a5  ld   $a5
              bc77 0096  ld   $96
              bc78 0049  ld   $49
              bc79 00ff  ld   $ff
              bc7a 0085  ld   $85
              bc7b 0096  ld   $96
              bc7c 00a5  ld   $a5
              bc7d 0097  ld   $97
              bc7e 0049  ld   $49
              bc7f 00ff  ld   $ff
              bc80 0085  ld   $85
              bc81 0097  ld   $97
              bc82 00a5  ld   $a5
              bc83 0098  ld   $98
              bc84 0049  ld   $49
              bc85 00ff  ld   $ff
              bc86 0085  ld   $85
              bc87 0098  ld   $98
              bc88 00a5  ld   $a5
              bc89 00a3  ld   $a3
              bc8a 0049  ld   $49
              bc8b 00ff  ld   $ff
              bc8c 0085  ld   $85
              bc8d 00a3  ld   $a3
              bc8e 00e6  ld   $e6
              bc8f 00a3  ld   $a3
              bc90 00d0  ld   $d0
              bc91 000e  ld   $0e
              bc92 00e6  ld   $e6
              bc93 0098  ld   $98
              bc94 00d0  ld   $d0
              bc95 000a  ld   $0a
              bc96 00e6  ld   $e6
              bc97 0097  ld   $97
              bc98 00d0  ld   $d0
              bc99 0006  ld   $06
              bc9a 00e6  ld   $e6
              bc9b 0096  ld   $96
              bc9c 00d0  ld   $d0
              bc9d 0002  ld   $02
              bc9e 00e6  ld   $e6
              bc9f 0095  ld   $95
              bca0 0060  ld   $60
              bca1 00a2  ld   $a2
              bca2 0045  ld   $45
              bca3 004c  ld   $4c
              bca4 004a  ld   $4a
              bca5 0005  ld   $05
              bca6 00a2  ld   $a2
              bca7 0057  ld   $57
              bca8 00b4  ld   $b4
              bca9 0004  ld   $04
              bcaa 0084  ld   $84
              bcab 001a  ld   $1a
              bcac 0000  ld   $00
              bcad 0000  ld   $00
              bcae 00a3  ld   $a3
              bcaf 00b4  ld   $b4
              bcb0 0003  ld   $03
              bcb1 0094  ld   $94
              bcb2 0004  ld   $04
              bcb3 00b4  ld   $b4
              bcb4 0002  ld   $02
              bcb5 0094  ld   $94
              bcb6 0003  ld   $03
              bcb7 00b4  ld   $b4
              bcb8 0001  ld   $01
              bcb9 0094  ld   $94
              bcba 0002  ld   $02
              bcbb 00a4  ld   $a4
              bcbc 009b  ld   $9b
              bcbd 0094  ld   $94
              bcbe 0001  ld   $01
              bcbf 0069  ld   $69
              bcc0 0008  ld   $08
              bcc1 0030  ld   $30
              bcc2 00e8  ld   $e8
              bcc3 00f0  ld   $f0
              bcc4 00e6  ld   $e6
              bcc5 00e9  ld   $e9
              bcc6 0008  ld   $08
              bcc7 00a8  ld   $a8
              bcc8 00a5  ld   $a5
              bcc9 00a3  ld   $a3
              bcca 00b0  ld   $b0
              bccb 0014  ld   $14
              bccc 0016  ld   $16
              bccd 0001  ld   $01
              bcce 0090  ld   $90
              bccf 0002  ld   $02
              bcd0 00f6  ld   $f6
              bcd1 0001  ld   $01
              bcd2 0076  ld   $76
              bcd3 0001  ld   $01
              bcd4 0076  ld   $76
              bcd5 0001  ld   $01
              bcd6 0076  ld   $76
              bcd7 0002  ld   $02
              bcd8 0076  ld   $76
              bcd9 0003  ld   $03
              bcda 0076  ld   $76
              bcdb 0004  ld   $04
              bcdc 006a  ld   $6a
              bcdd 00c8  ld   $c8
              bcde 00d0  ld   $d0
              bcdf 00ec  ld   $ec
              bce0 0018  ld   $18
              bce1 0060  ld   $60
              bce2 0081  ld   $81
              bce3 0000  ld   $00
              bce4 0000  ld   $00
              bce5 0000  ld   $00
              bce6 0000  ld   $00
              bce7 0003  ld   $03
              bce8 007f  ld   $7f
              bce9 005e  ld   $5e
              bcea 0056  ld   $56
              bceb 00cb  ld   $cb
              bcec 0079  ld   $79
              bced 0080  ld   $80
              bcee 0013  ld   $13
              bcef 009b  ld   $9b
              bcf0 000b  ld   $0b
              bcf1 0064  ld   $64
              bcf2 0080  ld   $80
              bcf3 0076  ld   $76
              bcf4 0038  ld   $38
              bcf5 0093  ld   $93
              bcf6 0016  ld   $16
              bcf7 0082  ld   $82
              bcf8 0038  ld   $38
              bcf9 00aa  ld   $aa
              bcfa 003b  ld   $3b
              bcfb fe00  bra  ac          ;+-----------------------------------+
              bcfc fcfd  bra  $bcfd       ;|                                   |
              bcfd 1418  ld   $18,y       ;| Trampoline for page $bc00 lookups |
              bcfe e006  jmp  y,$06       ;|                                   |
              bcff c218  st   [$18]       ;+-----------------------------------+
              bd00 0020  ld   $20
              bd01 0080  ld   $80
              bd02 0035  ld   $35
              bd03 0004  ld   $04
              bd04 00f3  ld   $f3
              bd05 0034  ld   $34
              bd06 0081  ld   $81
              bd07 0035  ld   $35
              bd08 0004  ld   $04
              bd09 00f3  ld   $f3
              bd0a 0034  ld   $34
              bd0b 0080  ld   $80
              bd0c 0080  ld   $80
              bd0d 0000  ld   $00
              bd0e 0000  ld   $00
              bd0f 0000  ld   $00
              bd10 0080  ld   $80
              bd11 0031  ld   $31
              bd12 0072  ld   $72
              bd13 0017  ld   $17
              bd14 00f8  ld   $f8
              bd15 0020  ld   $20
              bd16 00a3  ld   $a3
              bd17 001c  ld   $1c
              bd18 00f0  ld   $f0
              bd19 0002  ld   $02
              bd1a 0010  ld   $10
              bd1b 0003  ld   $03
              bd1c 004c  ld   $4c
              bd1d 0082  ld   $82
              bd1e 0012  ld   $12
              bd1f 00a5  ld   $a5
              bd20 0094  ld   $94
              bd21 00e9  ld   $e9
              bd22 007f  ld   $7f
              bd23 0048  ld   $48
              bd24 00a9  ld   $a9
              bd25 0080  ld   $80
              bd26 0085  ld   $85
              bd27 0094  ld   $94
              bd28 00a9  ld   $a9
              bd29 004e  ld   $4e
              bd2a 00a0  ld   $a0
              bd2b 001a  ld   $1a
              bd2c 0020  ld   $20
              bd2d 00df  ld   $df
              bd2e 0018  ld   $18
              bd2f 00a9  ld   $a9
              bd30 0053  ld   $53
              bd31 00a0  ld   $a0
              bd32 001a  ld   $1a
              bd33 0020  ld   $20
              bd34 0087  ld   $87
              bd35 001b  ld   $1b
              bd36 00a9  ld   $a9
              bd37 0034  ld   $34
              bd38 00a0  ld   $a0
              bd39 001a  ld   $1a
              bd3a 0020  ld   $20
              bd3b 0095  ld   $95
              bd3c 0018  ld   $18
              bd3d 00a9  ld   $a9
              bd3e 0039  ld   $39
              bd3f 00a0  ld   $a0
              bd40 001a  ld   $1a
              bd41 0020  ld   $20
              bd42 0099  ld   $99
              bd43 0020  ld   $20
              bd44 00a9  ld   $a9
              bd45 0058  ld   $58
              bd46 00a0  ld   $a0
              bd47 001a  ld   $1a
              bd48 0020  ld   $20
              bd49 00df  ld   $df
              bd4a 0018  ld   $18
              bd4b 0068  ld   $68
              bd4c 0020  ld   $20
              bd4d 00f6  ld   $f6
              bd4e 001d  ld   $1d
              bd4f 00a9  ld   $a9
              bd50 005d  ld   $5d
              bd51 00a0  ld   $a0
              bd52 001a  ld   $1a
              bd53 0020  ld   $20
              bd54 0004  ld   $04
              bd55 001b  ld   $1b
              bd56 00d0  ld   $d0
              bd57 0003  ld   $03
              bd58 004c  ld   $4c
              bd59 0003  ld   $03
              bd5a 001b  ld   $1b
              bd5b 0020  ld   $20
              bd5c 002f  ld   $2f
              bd5d 001b  ld   $1b
              bd5e 00a9  ld   $a9
              bd5f 0000  ld   $00
              bd60 0085  ld   $85
              bd61 0058  ld   $58
              bd62 0085  ld   $85
              bd63 0059  ld   $59
              bd64 0085  ld   $85
              bd65 005a  ld   $5a
              bd66 0085  ld   $85
              bd67 005b  ld   $5b
              bd68 00a5  ld   $a5
              bd69 00a3  ld   $a3
              bd6a 0020  ld   $20
              bd6b 00d1  ld   $d1
              bd6c 001a  ld   $1a
              bd6d 00a5  ld   $a5
              bd6e 0098  ld   $98
              bd6f 0020  ld   $20
              bd70 00d1  ld   $d1
              bd71 001a  ld   $1a
              bd72 00a5  ld   $a5
              bd73 0097  ld   $97
              bd74 0020  ld   $20
              bd75 00d1  ld   $d1
              bd76 001a  ld   $1a
              bd77 00a5  ld   $a5
              bd78 0096  ld   $96
              bd79 0020  ld   $20
              bd7a 00d1  ld   $d1
              bd7b 001a  ld   $1a
              bd7c 00a5  ld   $a5
              bd7d 0095  ld   $95
              bd7e 0020  ld   $20
              bd7f 00d6  ld   $d6
              bd80 001a  ld   $1a
              bd81 004c  ld   $4c
              bd82 0007  ld   $07
              bd83 001c  ld   $1c
              bd84 00d0  ld   $d0
              bd85 0003  ld   $03
              bd86 004c  ld   $4c
              bd87 00fb  ld   $fb
              bd88 0019  ld   $19
              bd89 004a  ld   $4a
              bd8a 0009  ld   $09
              bd8b 0080  ld   $80
              bd8c 00a8  ld   $a8
              bd8d 0090  ld   $90
              bd8e 0019  ld   $19
              bd8f 0018  ld   $18
              bd90 00a5  ld   $a5
              bd91 005b  ld   $5b
              bd92 0065  ld   $65
              bd93 00a0  ld   $a0
              bd94 0085  ld   $85
              bd95 005b  ld   $5b
              bd96 00a5  ld   $a5
              bd97 005a  ld   $5a
              bd98 0065  ld   $65
              bd99 009f  ld   $9f
              bd9a 0085  ld   $85
              bd9b 005a  ld   $5a
              bd9c 00a5  ld   $a5
              bd9d 0059  ld   $59
              bd9e 0065  ld   $65
              bd9f 009e  ld   $9e
              bda0 0085  ld   $85
              bda1 0059  ld   $59
              bda2 00a5  ld   $a5
              bda3 0058  ld   $58
              bda4 0065  ld   $65
              bda5 009d  ld   $9d
              bda6 0085  ld   $85
              bda7 0058  ld   $58
              bda8 0066  ld   $66
              bda9 0058  ld   $58
              bdaa 0066  ld   $66
              bdab 0059  ld   $59
              bdac 0066  ld   $66
              bdad 005a  ld   $5a
              bdae 0066  ld   $66
              bdaf 005b  ld   $5b
              bdb0 0066  ld   $66
              bdb1 00a3  ld   $a3
              bdb2 0098  ld   $98
              bdb3 001b  ld   $1b
              bdb4 0000  ld   $00
              bdb5 0000  ld   $00
              bdb6 004a  ld   $4a
              bdb7 00d0  ld   $d0
              bdb8 00d6  ld   $d6
              bdb9 0060  ld   $60
              bdba 0085  ld   $85
              bdbb 0054  ld   $54
              bdbc 0084  ld   $84
              bdbd 0055  ld   $55
              bdbe 00a0  ld   $a0
              bdbf 0004  ld   $04
              bdc0 00b1  ld   $b1
              bdc1 0054  ld   $54
              bdc2 0085  ld   $85
              bdc3 00a0  ld   $a0
              bdc4 0088  ld   $88
              bdc5 00b1  ld   $b1
              bdc6 0054  ld   $54
              bdc7 0085  ld   $85
              bdc8 009f  ld   $9f
              bdc9 0088  ld   $88
              bdca 00b1  ld   $b1
              bdcb 0054  ld   $54
              bdcc 0085  ld   $85
              bdcd 009e  ld   $9e
              bdce 0088  ld   $88
              bdcf 00b1  ld   $b1
              bdd0 0054  ld   $54
              bdd1 0085  ld   $85
              bdd2 00a1  ld   $a1
              bdd3 0045  ld   $45
              bdd4 0099  ld   $99
              bdd5 0085  ld   $85
              bdd6 00a2  ld   $a2
              bdd7 00a5  ld   $a5
              bdd8 00a1  ld   $a1
              bdd9 0009  ld   $09
              bdda 0080  ld   $80
              bddb 0085  ld   $85
              bddc 009d  ld   $9d
              bddd 0088  ld   $88
              bdde 00b1  ld   $b1
              bddf 0054  ld   $54
              bde0 0085  ld   $85
              bde1 009c  ld   $9c
              bde2 00a5  ld   $a5
              bde3 0094  ld   $94
              bde4 0060  ld   $60
              bde5 00a5  ld   $a5
              bde6 009c  ld   $9c
              bde7 00f0  ld   $f0
              bde8 001f  ld   $1f
              bde9 0018  ld   $18
              bdea 0065  ld   $65
              bdeb 0094  ld   $94
              bdec 0090  ld   $90
              bded 0004  ld   $04
              bdee 0030  ld   $30
              bdef 001d  ld   $1d
              bdf0 0018  ld   $18
              bdf1 002c  ld   $2c
              bdf2 0010  ld   $10
              bdf3 0014  ld   $14
              bdf4 0069  ld   $69
              bdf5 0080  ld   $80
              bdf6 0085  ld   $85
              bdf7 0094  ld   $94
              bdf8 00d0  ld   $d0
              bdf9 0003  ld   $03
              bdfa 004c  ld   $4c
              bdfb fe00  bra  ac          ;+-----------------------------------+
              bdfc fcfd  bra  $bdfd       ;|                                   |
              bdfd 1418  ld   $18,y       ;| Trampoline for page $bd00 lookups |
              bdfe e006  jmp  y,$06       ;|                                   |
              bdff c218  st   [$18]       ;+-----------------------------------+
              be00 0073  ld   $73
              be01 0019  ld   $19
              be02 00a5  ld   $a5
              be03 00a2  ld   $a2
              be04 0085  ld   $85
              be05 0099  ld   $99
              be06 0060  ld   $60
              be07 00a5  ld   $a5
              be08 0099  ld   $99
              be09 0049  ld   $49
              be0a 00ff  ld   $ff
              be0b 0030  ld   $30
              be0c 0005  ld   $05
              be0d 0068  ld   $68
              be0e 0068  ld   $68
              be0f 004c  ld   $4c
              be10 006f  ld   $6f
              be11 0019  ld   $19
              be12 004c  ld   $4c
              be13 00f6  ld   $f6
              be14 0019  ld   $19
              be15 0020  ld   $20
              be16 0084  ld   $84
              be17 001c  ld   $1c
              be18 00aa  ld   $aa
              be19 00f0  ld   $f0
              be1a 0010  ld   $10
              be1b 0018  ld   $18
              be1c 0069  ld   $69
              be1d 0002  ld   $02
              be1e 00b0  ld   $b0
              be1f 00f2  ld   $f2
              be20 00a2  ld   $a2
              be21 0000  ld   $00
              be22 0086  ld   $86
              be23 00a2  ld   $a2
              be24 0020  ld   $20
              be25 00ef  ld   $ef
              be26 0018  ld   $18
              be27 00e6  ld   $e6
              be28 0094  ld   $94
              be29 00f0  ld   $f0
              be2a 00e7  ld   $e7
              be2b 0060  ld   $60
              be2c 0084  ld   $84
              be2d 0020  ld   $20
              be2e 0000  ld   $00
              be2f 0000  ld   $00
              be30 0000  ld   $00
              be31 0020  ld   $20
              be32 0084  ld   $84
              be33 001c  ld   $1c
              be34 00a9  ld   $a9
              be35 0071  ld   $71
              be36 00a0  ld   $a0
              be37 001b  ld   $1b
              be38 00a2  ld   $a2
              be39 0000  ld   $00
              be3a 0086  ld   $86
              be3b 00a2  ld   $a2
              be3c 0020  ld   $20
              be3d 001a  ld   $1a
              be3e 001c  ld   $1c
              be3f 004c  ld   $4c
              be40 008a  ld   $8a
              be41 001b  ld   $1b
              be42 0020  ld   $20
              be43 0004  ld   $04
              be44 001b  ld   $1b
              be45 00f0  ld   $f0
              be46 0076  ld   $76
              be47 0020  ld   $20
              be48 0093  ld   $93
              be49 001c  ld   $1c
              be4a 00a9  ld   $a9
              be4b 0000  ld   $00
              be4c 0038  ld   $38
              be4d 00e5  ld   $e5
              be4e 0094  ld   $94
              be4f 0085  ld   $85
              be50 0094  ld   $94
              be51 0020  ld   $20
              be52 002f  ld   $2f
              be53 001b  ld   $1b
              be54 00e6  ld   $e6
              be55 0094  ld   $94
              be56 00f0  ld   $f0
              be57 00ba  ld   $ba
              be58 00a2  ld   $a2
              be59 00fc  ld   $fc
              be5a 00a9  ld   $a9
              be5b 0001  ld   $01
              be5c 00a4  ld   $a4
              be5d 009d  ld   $9d
              be5e 00c4  ld   $c4
              be5f 0095  ld   $95
              be60 00d0  ld   $d0
              be61 0010  ld   $10
              be62 00a4  ld   $a4
              be63 009e  ld   $9e
              be64 00c4  ld   $c4
              be65 0096  ld   $96
              be66 00d0  ld   $d0
              be67 000a  ld   $0a
              be68 00a4  ld   $a4
              be69 009f  ld   $9f
              be6a 00c4  ld   $c4
              be6b 0097  ld   $97
              be6c 00d0  ld   $d0
              be6d 0004  ld   $04
              be6e 00a4  ld   $a4
              be6f 00a0  ld   $a0
              be70 00c4  ld   $c4
              be71 0098  ld   $98
              be72 0008  ld   $08
              be73 002a  ld   $2a
              be74 0090  ld   $90
              be75 0009  ld   $09
              be76 00e8  ld   $e8
              be77 0095  ld   $95
              be78 005b  ld   $5b
              be79 00f0  ld   $f0
              be7a 0032  ld   $32
              be7b 0010  ld   $10
              be7c 0034  ld   $34
              be7d 00a9  ld   $a9
              be7e 0001  ld   $01
              be7f 0028  ld   $28
              be80 00b0  ld   $b0
              be81 000e  ld   $0e
              be82 0006  ld   $06
              be83 00a0  ld   $a0
              be84 0026  ld   $26
              be85 009f  ld   $9f
              be86 0026  ld   $26
              be87 009e  ld   $9e
              be88 0026  ld   $26
              be89 009d  ld   $9d
              be8a 00b0  ld   $b0
              be8b 00e6  ld   $e6
              be8c 0030  ld   $30
              be8d 00ce  ld   $ce
              be8e 0010  ld   $10
              be8f 00e2  ld   $e2
              be90 00a8  ld   $a8
              be91 00a5  ld   $a5
              be92 00a0  ld   $a0
              be93 00e5  ld   $e5
              be94 0098  ld   $98
              be95 0085  ld   $85
              be96 00a0  ld   $a0
              be97 00a5  ld   $a5
              be98 009f  ld   $9f
              be99 00e5  ld   $e5
              be9a 0097  ld   $97
              be9b 0085  ld   $85
              be9c 009f  ld   $9f
              be9d 00a5  ld   $a5
              be9e 009e  ld   $9e
              be9f 00e5  ld   $e5
              bea0 0096  ld   $96
              bea1 0085  ld   $85
              bea2 009e  ld   $9e
              bea3 00a5  ld   $a5
              bea4 009d  ld   $9d
              bea5 00e5  ld   $e5
              bea6 0095  ld   $95
              bea7 0085  ld   $85
              bea8 009d  ld   $9d
              bea9 0098  ld   $98
              beaa 004c  ld   $4c
              beab 00c7  ld   $c7
              beac 001b  ld   $1b
              bead 00a9  ld   $a9
              beae 0040  ld   $40
              beaf 00d0  ld   $d0
              beb0 00ce  ld   $ce
              beb1 000a  ld   $0a
              beb2 000a  ld   $0a
              beb3 000a  ld   $0a
              * 6 times
              beb7 0085  ld   $85
              beb8 00a3  ld   $a3
              beb9 0028  ld   $28
              beba 004c  ld   $4c
              bebb 001c  ld   $1c
              bebc 0000  ld   $00
              bebd 0000  ld   $00
              bebe 0007  ld   $07
              bebf 001c  ld   $1c
              bec0 00a2  ld   $a2
              bec1 0085  ld   $85
              bec2 004c  ld   $4c
              bec3 004a  ld   $4a
              bec4 0005  ld   $05
              bec5 00a5  ld   $a5
              bec6 0058  ld   $58
              bec7 0085  ld   $85
              bec8 0095  ld   $95
              bec9 00a5  ld   $a5
              beca 0059  ld   $59
              becb 0085  ld   $85
              becc 0096  ld   $96
              becd 00a5  ld   $a5
              bece 005a  ld   $5a
              becf 0085  ld   $85
              bed0 0097  ld   $97
              bed1 00a5  ld   $a5
              bed2 005b  ld   $5b
              bed3 0085  ld   $85
              bed4 0098  ld   $98
              bed5 004c  ld   $4c
              bed6 004f  ld   $4f
              bed7 0019  ld   $19
              bed8 0085  ld   $85
              bed9 0054  ld   $54
              beda 0084  ld   $84
              bedb 0055  ld   $55
              bedc 00a0  ld   $a0
              bedd 0004  ld   $04
              bede 00b1  ld   $b1
              bedf 0054  ld   $54
              bee0 0085  ld   $85
              bee1 0098  ld   $98
              bee2 0088  ld   $88
              bee3 00b1  ld   $b1
              bee4 0054  ld   $54
              bee5 0085  ld   $85
              bee6 0097  ld   $97
              bee7 0088  ld   $88
              bee8 00b1  ld   $b1
              bee9 0054  ld   $54
              beea 0085  ld   $85
              beeb 0096  ld   $96
              beec 0088  ld   $88
              beed 00b1  ld   $b1
              beee 0054  ld   $54
              beef 0085  ld   $85
              bef0 0099  ld   $99
              bef1 0009  ld   $09
              bef2 0080  ld   $80
              bef3 0085  ld   $85
              bef4 0095  ld   $95
              bef5 0088  ld   $88
              bef6 00b1  ld   $b1
              bef7 0054  ld   $54
              bef8 0085  ld   $85
              bef9 0094  ld   $94
              befa 0084  ld   $84
              befb fe00  bra  ac          ;+-----------------------------------+
              befc fcfd  bra  $befd       ;|                                   |
              befd 1418  ld   $18,y       ;| Trampoline for page $be00 lookups |
              befe e006  jmp  y,$06       ;|                                   |
              beff c218  st   [$18]       ;+-----------------------------------+
              bf00 00a3  ld   $a3
              bf01 0060  ld   $60
              bf02 00a2  ld   $a2
              bf03 008f  ld   $8f
              bf04 002c  ld   $2c
              bf05 00a2  ld   $a2
              bf06 008a  ld   $8a
              bf07 00a0  ld   $a0
              bf08 0000  ld   $00
              bf09 00f0  ld   $f0
              bf0a 0004  ld   $04
              bf0b 00a6  ld   $a6
              bf0c 007b  ld   $7b
              bf0d 00a4  ld   $a4
              bf0e 007c  ld   $7c
              bf0f 0020  ld   $20
              bf10 0093  ld   $93
              bf11 001c  ld   $1c
              bf12 0086  ld   $86
              bf13 0054  ld   $54
              bf14 0084  ld   $84
              bf15 0055  ld   $55
              bf16 00a0  ld   $a0
              bf17 0004  ld   $04
              bf18 00a5  ld   $a5
              bf19 0098  ld   $98
              bf1a 0091  ld   $91
              bf1b 0054  ld   $54
              bf1c 0088  ld   $88
              bf1d 00a5  ld   $a5
              bf1e 0097  ld   $97
              bf1f 0091  ld   $91
              bf20 0054  ld   $54
              bf21 0088  ld   $88
              bf22 00a5  ld   $a5
              bf23 0096  ld   $96
              bf24 0091  ld   $91
              bf25 0054  ld   $54
              bf26 0088  ld   $88
              bf27 00a5  ld   $a5
              bf28 0099  ld   $99
              bf29 0009  ld   $09
              bf2a 007f  ld   $7f
              bf2b 0025  ld   $25
              bf2c 0095  ld   $95
              bf2d 0091  ld   $91
              bf2e 0054  ld   $54
              bf2f 0088  ld   $88
              bf30 00a5  ld   $a5
              bf31 0094  ld   $94
              bf32 0091  ld   $91
              bf33 0054  ld   $54
              bf34 0084  ld   $84
              bf35 00a3  ld   $a3
              bf36 0060  ld   $60
              bf37 00a5  ld   $a5
              bf38 00a1  ld   $a1
              bf39 0085  ld   $85
              bf3a 0099  ld   $99
              bf3b 00a2  ld   $a2
              bf3c 0005  ld   $05
              bf3d 00b5  ld   $b5
              bf3e 009b  ld   $9b
              bf3f 0095  ld   $95
              bf40 0093  ld   $93
              bf41 00ca  ld   $ca
              bf42 00d0  ld   $d0
              bf43 00f9  ld   $f9
              bf44 0086  ld   $86
              bf45 00a3  ld   $a3
              bf46 0060  ld   $60
              bf47 0020  ld   $20
              bf48 0093  ld   $93
              bf49 001c  ld   $1c
              bf4a 00a2  ld   $a2
              bf4b 0006  ld   $06
              bf4c 00b5  ld   $b5
              bf4d 0093  ld   $93
              bf4e 0095  ld   $95
              bf4f 009b  ld   $9b
              bf50 00ca  ld   $ca
              bf51 00d0  ld   $d0
              bf52 00f9  ld   $f9
              bf53 0086  ld   $86
              bf54 00a3  ld   $a3
              bf55 0060  ld   $60
              bf56 00a5  ld   $a5
              bf57 0094  ld   $94
              bf58 00f0  ld   $f0
              bf59 00fb  ld   $fb
              bf5a 0006  ld   $06
              bf5b 00a3  ld   $a3
              bf5c 0090  ld   $90
              bf5d 00f7  ld   $f7
              bf5e 0020  ld   $20
              bf5f 00e7  ld   $e7
              bf60 0019  ld   $19
              bf61 00d0  ld   $d0
              bf62 00f2  ld   $f2
              bf63 004c  ld   $4c
              bf64 00b0  ld   $b0
              bf65 0019  ld   $19
              bf66 00a5  ld   $a5
              bf67 0094  ld   $94
              bf68 00f0  ld   $f0
              bf69 0009  ld   $09
              bf6a 00a5  ld   $a5
              bf6b 0099  ld   $99
              bf6c 002a  ld   $2a
              bf6d 00a9  ld   $a9
              bf6e 00ff  ld   $ff
              bf6f 00b0  ld   $b0
              bf70 0002  ld   $02
              bf71 00a9  ld   $a9
              bf72 0001  ld   $01
              bf73 0060  ld   $60
              bf74 0020  ld   $20
              bf75 00a3  ld   $a3
              bf76 001c  ld   $1c
              bf77 0085  ld   $85
              bf78 0095  ld   $95
              bf79 00a9  ld   $a9
              bf7a 0000  ld   $00
              bf7b 0085  ld   $85
              bf7c 0096  ld   $96
              bf7d 00a2  ld   $a2
              bf7e 0088  ld   $88
              bf7f 00a5  ld   $a5
              bf80 0095  ld   $95
              bf81 0049  ld   $49
              bf82 00ff  ld   $ff
              bf83 002a  ld   $2a
              bf84 00a9  ld   $a9
              bf85 0000  ld   $00
              bf86 0085  ld   $85
              bf87 0098  ld   $98
              bf88 0085  ld   $85
              bf89 0097  ld   $97
              bf8a 0086  ld   $86
              bf8b 0094  ld   $94
              bf8c 0085  ld   $85
              bf8d 00a3  ld   $a3
              bf8e 0085  ld   $85
              bf8f 0099  ld   $99
              bf90 004c  ld   $4c
              bf91 004a  ld   $4a
              bf92 0019  ld   $19
              bf93 0046  ld   $46
              bf94 0099  ld   $99
              bf95 0060  ld   $60
              bf96 0085  ld   $85
              bf97 0056  ld   $56
              bf98 0084  ld   $84
              bf99 0057  ld   $57
              bf9a 00a0  ld   $a0
              bf9b 0000  ld   $00
              bf9c 00b1  ld   $b1
              bf9d 0056  ld   $56
              bf9e 00c8  ld   $c8
              bf9f 00aa  ld   $aa
              bfa0 00f0  ld   $f0
              bfa1 00c4  ld   $c4
              bfa2 00b1  ld   $b1
              bfa3 0056  ld   $56
              bfa4 0045  ld   $45
              bfa5 0099  ld   $99
              bfa6 0030  ld   $30
              bfa7 00c2  ld   $c2
              bfa8 00e4  ld   $e4
              bfa9 0094  ld   $94
              bfaa 00d0  ld   $d0
              bfab 0021  ld   $21
              bfac 00b1  ld   $b1
              bfad 0056  ld   $56
              bfae 0009  ld   $09
              bfaf 0080  ld   $80
              bfb0 00c5  ld   $c5
              bfb1 0095  ld   $95
              bfb2 00d0  ld   $d0
              bfb3 0019  ld   $19
              bfb4 00c8  ld   $c8
              bfb5 00b1  ld   $b1
              bfb6 0056  ld   $56
              bfb7 00c5  ld   $c5
              bfb8 0096  ld   $96
              bfb9 00d0  ld   $d0
              bfba 0012  ld   $12
              bfbb 00c8  ld   $c8
              bfbc 00b1  ld   $b1
              bfbd 0056  ld   $56
              bfbe 00c5  ld   $c5
              bfbf 0097  ld   $97
              bfc0 00d0  ld   $d0
              bfc1 000b  ld   $0b
              bfc2 00c8  ld   $c8
              bfc3 001d  ld   $1d
              bfc4 0000  ld   $00
              bfc5 0000  ld   $00
              bfc6 00a9  ld   $a9
              bfc7 007f  ld   $7f
              bfc8 00c5  ld   $c5
              bfc9 00a3  ld   $a3
              bfca 00b1  ld   $b1
              bfcb 0056  ld   $56
              bfcc 00e5  ld   $e5
              bfcd 0098  ld   $98
              bfce 00f0  ld   $f0
              bfcf 0028  ld   $28
              bfd0 00a5  ld   $a5
              bfd1 0099  ld   $99
              bfd2 0090  ld   $90
              bfd3 0002  ld   $02
              bfd4 0049  ld   $49
              bfd5 00ff  ld   $ff
              bfd6 004c  ld   $4c
              bfd7 00a9  ld   $a9
              bfd8 001c  ld   $1c
              bfd9 00a5  ld   $a5
              bfda 0094  ld   $94
              bfdb 00f0  ld   $f0
              bfdc 004a  ld   $4a
              bfdd 0038  ld   $38
              bfde 00e9  ld   $e9
              bfdf 00a0  ld   $a0
              bfe0 0024  ld   $24
              bfe1 0099  ld   $99
              bfe2 0010  ld   $10
              bfe3 0009  ld   $09
              bfe4 00aa  ld   $aa
              bfe5 00a9  ld   $a9
              bfe6 00ff  ld   $ff
              bfe7 0085  ld   $85
              bfe8 009b  ld   $9b
              bfe9 0020  ld   $20
              bfea 00c5  ld   $c5
              bfeb 0019  ld   $19
              bfec 008a  ld   $8a
              bfed 00a2  ld   $a2
              bfee 0094  ld   $94
              bfef 00c9  ld   $c9
              bff0 00f9  ld   $f9
              bff1 0010  ld   $10
              bff2 0006  ld   $06
              bff3 0020  ld   $20
              bff4 0011  ld   $11
              bff5 001a  ld   $1a
              bff6 0084  ld   $84
              bff7 009b  ld   $9b
              bff8 0060  ld   $60
              bff9 00a8  ld   $a8
              bffa 00a5  ld   $a5
              bffb fe00  bra  ac          ;+-----------------------------------+
              bffc fcfd  bra  $bffd       ;|                                   |
              bffd 1418  ld   $18,y       ;| Trampoline for page $bf00 lookups |
              bffe e006  jmp  y,$06       ;|                                   |
              bfff c218  st   [$18]       ;+-----------------------------------+
              c000 0099  ld   $99
              c001 0029  ld   $29
              c002 0080  ld   $80
              c003 0046  ld   $46
              c004 0095  ld   $95
              c005 0005  ld   $05
              c006 0095  ld   $95
              c007 0085  ld   $85
              c008 0095  ld   $95
              c009 0020  ld   $20
              c00a 0028  ld   $28
              c00b 001a  ld   $1a
              c00c 0084  ld   $84
              c00d 009b  ld   $9b
              c00e 0060  ld   $60
              c00f 00a5  ld   $a5
              c010 0094  ld   $94
              c011 00c9  ld   $c9
              c012 00a0  ld   $a0
              c013 00b0  ld   $b0
              c014 0020  ld   $20
              c015 0020  ld   $20
              c016 0013  ld   $13
              c017 001d  ld   $1d
              c018 0084  ld   $84
              c019 00a3  ld   $a3
              c01a 00a5  ld   $a5
              c01b 0099  ld   $99
              c01c 0084  ld   $84
              c01d 0099  ld   $99
              c01e 0049  ld   $49
              c01f 0080  ld   $80
              c020 002a  ld   $2a
              c021 00a9  ld   $a9
              c022 00a0  ld   $a0
              c023 0085  ld   $85
              c024 0094  ld   $94
              c025 00a5  ld   $a5
              c026 0098  ld   $98
              c027 0085  ld   $85
              c028 003b  ld   $3b
              c029 004c  ld   $4c
              c02a 004a  ld   $4a
              c02b 0019  ld   $19
              c02c 0085  ld   $85
              c02d 0095  ld   $95
              c02e 0085  ld   $85
              c02f 0096  ld   $96
              c030 0085  ld   $85
              c031 0097  ld   $97
              c032 0085  ld   $85
              c033 0098  ld   $98
              c034 00a8  ld   $a8
              c035 0060  ld   $60
              c036 00a0  ld   $a0
              c037 0000  ld   $00
              c038 00a2  ld   $a2
              c039 000a  ld   $0a
              c03a 0094  ld   $94
              c03b 0090  ld   $90
              c03c 00ca  ld   $ca
              c03d 0010  ld   $10
              c03e 00fb  ld   $fb
              c03f 0090  ld   $90
              c040 000f  ld   $0f
              c041 00c9  ld   $c9
              c042 002d  ld   $2d
              c043 00d0  ld   $d0
              c044 0004  ld   $04
              c045 0086  ld   $86
              c046 009a  ld   $9a
              c047 00f0  ld   $f0
              c048 0004  ld   $04
              c049 00c9  ld   $c9
              c04a 002b  ld   $2b
              c04b 00d0  ld   $d0
              c04c 0005  ld   $05
              c04d 0020  ld   $20
              c04e 006b  ld   $6b
              c04f 0022  ld   $22
              c050 0090  ld   $90
              c051 005b  ld   $5b
              c052 00c9  ld   $c9
              c053 002e  ld   $2e
              c054 00f0  ld   $f0
              c055 002e  ld   $2e
              c056 00c9  ld   $c9
              c057 0045  ld   $45
              c058 00d0  ld   $d0
              c059 0030  ld   $30
              c05a 0020  ld   $20
              c05b 006b  ld   $6b
              c05c 0022  ld   $22
              c05d 0090  ld   $90
              c05e 0017  ld   $17
              c05f 00c9  ld   $c9
              c060 00a5  ld   $a5
              c061 00f0  ld   $f0
              c062 000e  ld   $0e
              c063 00c9  ld   $c9
              c064 002d  ld   $2d
              c065 00f0  ld   $f0
              c066 000a  ld   $0a
              c067 00c9  ld   $c9
              c068 00a4  ld   $a4
              c069 00f0  ld   $f0
              c06a 0008  ld   $08
              c06b 00c9  ld   $c9
              c06c 002b  ld   $2b
              c06d 00f0  ld   $f0
              c06e 0004  ld   $04
              c06f 00d0  ld   $d0
              c070 0007  ld   $07
              c071 0066  ld   $66
              c072 0093  ld   $93
              c073 0020  ld   $20
              c074 006b  ld   $6b
              c075 0022  ld   $22
              c076 0090  ld   $90
              c077 005c  ld   $5c
              c078 0024  ld   $24
              c079 0093  ld   $93
              c07a 0010  ld   $10
              c07b 000e  ld   $0e
              c07c 00a9  ld   $a9
              c07d 0000  ld   $00
              c07e 0038  ld   $38
              c07f 00e5  ld   $e5
              c080 0091  ld   $91
              c081 004c  ld   $4c
              c082 00c1  ld   $c1
              c083 001d  ld   $1d
              c084 0066  ld   $66
              c085 0092  ld   $92
              c086 0024  ld   $24
              c087 0092  ld   $92
              c088 0050  ld   $50
              c089 00c3  ld   $c3
              c08a 00a5  ld   $a5
              c08b 0091  ld   $91
              c08c 0038  ld   $38
              c08d 00e5  ld   $e5
              c08e 0090  ld   $90
              c08f 0085  ld   $85
              c090 0091  ld   $91
              c091 00f0  ld   $f0
              c092 0012  ld   $12
              c093 0010  ld   $10
              c094 0009  ld   $09
              c095 0020  ld   $20
              c096 0076  ld   $76
              c097 001b  ld   $1b
              c098 00e6  ld   $e6
              c099 0091  ld   $91
              c09a 00d0  ld   $d0
              c09b 00f9  ld   $f9
              c09c 00f0  ld   $f0
              c09d 0007  ld   $07
              c09e 0020  ld   $20
              c09f 005a  ld   $5a
              c0a0 001b  ld   $1b
              c0a1 00c6  ld   $c6
              c0a2 0091  ld   $91
              c0a3 00d0  ld   $d0
              c0a4 00f9  ld   $f9
              c0a5 00a5  ld   $a5
              c0a6 009a  ld   $9a
              c0a7 0030  ld   $30
              c0a8 0001  ld   $01
              c0a9 0060  ld   $60
              c0aa 004c  ld   $4c
              c0ab 000d  ld   $0d
              c0ac 0020  ld   $20
              c0ad 0048  ld   $48
              c0ae 0024  ld   $24
              c0af 0092  ld   $92
              c0b0 0010  ld   $10
              c0b1 0002  ld   $02
              c0b2 00e6  ld   $e6
              c0b3 0090  ld   $90
              c0b4 0020  ld   $20
              c0b5 005a  ld   $5a
              c0b6 001b  ld   $1b
              c0b7 0068  ld   $68
              c0b8 0038  ld   $38
              c0b9 00e9  ld   $e9
              c0ba 0030  ld   $30
              c0bb 0020  ld   $20
              c0bc 00f6  ld   $f6
              c0bd 001d  ld   $1d
              c0be 004c  ld   $4c
              c0bf 0082  ld   $82
              c0c0 001d  ld   $1d
              c0c1 0048  ld   $48
              c0c2 0020  ld   $20
              c0c3 0084  ld   $84
              c0c4 001c  ld   $1c
              c0c5 0068  ld   $68
              c0c6 0020  ld   $20
              c0c7 00b4  ld   $b4
              c0c8 001c  ld   $1c
              c0c9 00a5  ld   $a5
              c0ca 00a1  ld   $a1
              c0cb 001e  ld   $1e
              c0cc 0000  ld   $00
              c0cd 0000  ld   $00
              c0ce 0045  ld   $45
              c0cf 0099  ld   $99
              c0d0 0085  ld   $85
              c0d1 00a2  ld   $a2
              c0d2 00a6  ld   $a6
              c0d3 0094  ld   $94
              c0d4 004c  ld   $4c
              c0d5 00e2  ld   $e2
              c0d6 0018  ld   $18
              c0d7 00a5  ld   $a5
              c0d8 0091  ld   $91
              c0d9 00c9  ld   $c9
              c0da 000a  ld   $0a
              c0db 0090  ld   $90
              c0dc 0009  ld   $09
              c0dd 00a9  ld   $a9
              c0de 0064  ld   $64
              c0df 0024  ld   $24
              c0e0 0093  ld   $93
              c0e1 0030  ld   $30
              c0e2 0011  ld   $11
              c0e3 004c  ld   $4c
              c0e4 00f6  ld   $f6
              c0e5 0019  ld   $19
              c0e6 000a  ld   $0a
              c0e7 000a  ld   $0a
              c0e8 0018  ld   $18
              c0e9 0065  ld   $65
              c0ea 0091  ld   $91
              c0eb 000a  ld   $0a
              c0ec 0018  ld   $18
              c0ed 00a0  ld   $a0
              c0ee 0000  ld   $00
              c0ef 0071  ld   $71
              c0f0 00a6  ld   $a6
              c0f1 0038  ld   $38
              c0f2 00e9  ld   $e9
              c0f3 0030  ld   $30
              c0f4 0085  ld   $85
              c0f5 0091  ld   $91
              c0f6 004c  ld   $4c
              c0f7 00a8  ld   $a8
              c0f8 001d  ld   $1d
              c0f9 009b  ld   $9b
              c0fa 003e  ld   $3e
              c0fb fe00  bra  ac          ;+-----------------------------------+
              c0fc fcfd  bra  $c0fd       ;|                                   |
              c0fd 1418  ld   $18,y       ;| Trampoline for page $c000 lookups |
              c0fe e006  jmp  y,$06       ;|                                   |
              c0ff c218  st   [$18]       ;+-----------------------------------+
              c100 00bc  ld   $bc
              c101 001f  ld   $1f
              c102 00fd  ld   $fd
              c103 009e  ld   $9e
              c104 006e  ld   $6e
              c105 006b  ld   $6b
              c106 0027  ld   $27
              c107 00fd  ld   $fd
              c108 009e  ld   $9e
              c109 006e  ld   $6e
              c10a 006b  ld   $6b
              c10b 0028  ld   $28
              c10c 0000  ld   $00
              c10d 00a9  ld   $a9
              c10e 008a  ld   $8a
              c10f 00a0  ld   $a0
              c110 0004  ld   $04
              c111 0020  ld   $20
              c112 0052  ld   $52
              c113 001e  ld   $1e
              c114 00a5  ld   $a5
              c115 006c  ld   $6c
              c116 00a6  ld   $a6
              c117 006b  ld   $6b
              c118 0085  ld   $85
              c119 0095  ld   $95
              c11a 0086  ld   $86
              c11b 0096  ld   $96
              c11c 00a2  ld   $a2
              c11d 0090  ld   $90
              c11e 0038  ld   $38
              c11f 0020  ld   $20
              c120 00c1  ld   $c1
              c121 001c  ld   $1c
              c122 0020  ld   $20
              c123 0055  ld   $55
              c124 001e  ld   $1e
              c125 004c  ld   $4c
              c126 00ef  ld   $ef
              c127 000b  ld   $0b
              c128 00a0  ld   $a0
              c129 0001  ld   $01
              c12a 00a9  ld   $a9
              c12b 0020  ld   $20
              c12c 0024  ld   $24
              c12d 0099  ld   $99
              c12e 0010  ld   $10
              c12f 0002  ld   $02
              c130 00a9  ld   $a9
              c131 002d  ld   $2d
              c132 0099  ld   $99
              c133 0004  ld   $04
              c134 0002  ld   $02
              c135 0085  ld   $85
              c136 0099  ld   $99
              c137 0084  ld   $84
              c138 00a4  ld   $a4
              c139 00c8  ld   $c8
              c13a 00a9  ld   $a9
              c13b 0030  ld   $30
              c13c 00a6  ld   $a6
              c13d 0094  ld   $94
              c13e 00d0  ld   $d0
              c13f 0003  ld   $03
              c140 004c  ld   $4c
              c141 007c  ld   $7c
              c142 001f  ld   $1f
              c143 00a9  ld   $a9
              c144 0000  ld   $00
              c145 00e0  ld   $e0
              c146 0080  ld   $80
              c147 00f0  ld   $f0
              c148 0002  ld   $02
              c149 00b0  ld   $b0
              c14a 0009  ld   $09
              c14b 00a9  ld   $a9
              c14c 0035  ld   $35
              c14d 00a0  ld   $a0
              c14e 001e  ld   $1e
              c14f 0020  ld   $20
              c150 00a0  ld   $a0
              c151 001a  ld   $1a
              c152 00a9  ld   $a9
              c153 00f7  ld   $f7
              c154 0085  ld   $85
              c155 0090  ld   $90
              c156 00a9  ld   $a9
              c157 0030  ld   $30
              c158 00a0  ld   $a0
              c159 001e  ld   $1e
              c15a 0020  ld   $20
              c15b 00d3  ld   $d3
              c15c 001c  ld   $1c
              c15d 00f0  ld   $f0
              c15e 001e  ld   $1e
              c15f 0010  ld   $10
              c160 0012  ld   $12
              c161 00a9  ld   $a9
              c162 002b  ld   $2b
              c163 00a0  ld   $a0
              c164 001e  ld   $1e
              c165 0020  ld   $20
              c166 00d3  ld   $d3
              c167 001c  ld   $1c
              c168 00f0  ld   $f0
              c169 0002  ld   $02
              c16a 0010  ld   $10
              c16b 000e  ld   $0e
              c16c 0020  ld   $20
              c16d 005a  ld   $5a
              c16e 001b  ld   $1b
              c16f 00c6  ld   $c6
              c170 0090  ld   $90
              c171 00d0  ld   $d0
              c172 00ee  ld   $ee
              c173 0020  ld   $20
              c174 0076  ld   $76
              c175 001b  ld   $1b
              c176 00e6  ld   $e6
              c177 0090  ld   $90
              c178 00d0  ld   $d0
              c179 00dc  ld   $dc
              c17a 0020  ld   $20
              c17b 008e  ld   $8e
              c17c 0018  ld   $18
              c17d 0020  ld   $20
              c17e 0013  ld   $13
              c17f 001d  ld   $1d
              c180 00a2  ld   $a2
              c181 0001  ld   $01
              c182 00a5  ld   $a5
              c183 0090  ld   $90
              c184 0018  ld   $18
              c185 0069  ld   $69
              c186 000a  ld   $0a
              c187 0030  ld   $30
              c188 0009  ld   $09
              c189 00c9  ld   $c9
              c18a 000b  ld   $0b
              c18b 00b0  ld   $b0
              c18c 0006  ld   $06
              c18d 0069  ld   $69
              c18e 00ff  ld   $ff
              c18f 00aa  ld   $aa
              c190 00a9  ld   $a9
              c191 0002  ld   $02
              c192 0038  ld   $38
              c193 00e9  ld   $e9
              c194 0002  ld   $02
              c195 0085  ld   $85
              c196 0091  ld   $91
              c197 0086  ld   $86
              c198 0090  ld   $90
              c199 008a  ld   $8a
              c19a 00f0  ld   $f0
              c19b 0002  ld   $02
              c19c 0010  ld   $10
              c19d 0013  ld   $13
              c19e 00a4  ld   $a4
              c19f 00a4  ld   $a4
              c1a0 00a9  ld   $a9
              c1a1 002e  ld   $2e
              c1a2 00c8  ld   $c8
              c1a3 0099  ld   $99
              c1a4 0004  ld   $04
              c1a5 0002  ld   $02
              c1a6 008a  ld   $8a
              c1a7 00f0  ld   $f0
              c1a8 0006  ld   $06
              c1a9 00a9  ld   $a9
              c1aa 0030  ld   $30
              c1ab 00c8  ld   $c8
              c1ac 0099  ld   $99
              c1ad 0004  ld   $04
              c1ae 0002  ld   $02
              c1af 0084  ld   $84
              c1b0 00a4  ld   $a4
              c1b1 00a0  ld   $a0
              c1b2 0000  ld   $00
              c1b3 00a2  ld   $a2
              c1b4 0080  ld   $80
              c1b5 00a5  ld   $a5
              c1b6 0098  ld   $98
              c1b7 0018  ld   $18
              c1b8 0079  ld   $79
              c1b9 0091  ld   $91
              c1ba 001f  ld   $1f
              c1bb 0085  ld   $85
              c1bc 0098  ld   $98
              c1bd 00a5  ld   $a5
              c1be 0097  ld   $97
              c1bf 0079  ld   $79
              c1c0 0090  ld   $90
              c1c1 001f  ld   $1f
              c1c2 0085  ld   $85
              c1c3 0097  ld   $97
              c1c4 00a5  ld   $a5
              c1c5 0096  ld   $96
              c1c6 0079  ld   $79
              c1c7 008f  ld   $8f
              c1c8 001f  ld   $1f
              c1c9 0085  ld   $85
              c1ca 0096  ld   $96
              c1cb 00a5  ld   $a5
              c1cc 0095  ld   $95
              c1cd 0079  ld   $79
              c1ce 008e  ld   $8e
              c1cf 001f  ld   $1f
              c1d0 0085  ld   $85
              c1d1 0095  ld   $95
              c1d2 00e8  ld   $e8
              c1d3 001f  ld   $1f
              c1d4 0000  ld   $00
              c1d5 0000  ld   $00
              c1d6 00b0  ld   $b0
              c1d7 0004  ld   $04
              c1d8 0010  ld   $10
              c1d9 00de  ld   $de
              c1da 0030  ld   $30
              c1db 0002  ld   $02
              c1dc 0030  ld   $30
              c1dd 00da  ld   $da
              c1de 008a  ld   $8a
              c1df 0090  ld   $90
              c1e0 0004  ld   $04
              c1e1 0049  ld   $49
              c1e2 00ff  ld   $ff
              c1e3 0069  ld   $69
              c1e4 000a  ld   $0a
              c1e5 0069  ld   $69
              c1e6 002f  ld   $2f
              c1e7 00c8  ld   $c8
              c1e8 00c8  ld   $c8
              c1e9 00c8  ld   $c8
              c1ea 00c8  ld   $c8
              c1eb 0084  ld   $84
              c1ec 0079  ld   $79
              c1ed 00a4  ld   $a4
              c1ee 00a4  ld   $a4
              c1ef 00c8  ld   $c8
              c1f0 00aa  ld   $aa
              c1f1 0029  ld   $29
              c1f2 007f  ld   $7f
              c1f3 0099  ld   $99
              c1f4 0004  ld   $04
              c1f5 0002  ld   $02
              c1f6 00c6  ld   $c6
              c1f7 0090  ld   $90
              c1f8 00d0  ld   $d0
              c1f9 0006  ld   $06
              c1fa 00a9  ld   $a9
              c1fb fe00  bra  ac          ;+-----------------------------------+
              c1fc fcfd  bra  $c1fd       ;|                                   |
              c1fd 1418  ld   $18,y       ;| Trampoline for page $c100 lookups |
              c1fe e006  jmp  y,$06       ;|                                   |
              c1ff c218  st   [$18]       ;+-----------------------------------+
              c200 002e  ld   $2e
              c201 00c8  ld   $c8
              c202 0099  ld   $99
              c203 0004  ld   $04
              c204 0002  ld   $02
              c205 0084  ld   $84
              c206 00a4  ld   $a4
              c207 00a4  ld   $a4
              c208 0079  ld   $79
              c209 008a  ld   $8a
              c20a 0049  ld   $49
              c20b 00ff  ld   $ff
              c20c 0029  ld   $29
              c20d 0080  ld   $80
              c20e 00aa  ld   $aa
              c20f 00c0  ld   $c0
              c210 0024  ld   $24
              c211 00f0  ld   $f0
              c212 0004  ld   $04
              c213 00c0  ld   $c0
              c214 003c  ld   $3c
              c215 00d0  ld   $d0
              c216 00a6  ld   $a6
              c217 00a4  ld   $a4
              c218 00a4  ld   $a4
              c219 00b9  ld   $b9
              c21a 0004  ld   $04
              c21b 0002  ld   $02
              c21c 0088  ld   $88
              c21d 00c9  ld   $c9
              c21e 0030  ld   $30
              c21f 00f0  ld   $f0
              c220 00f8  ld   $f8
              c221 00c9  ld   $c9
              c222 002e  ld   $2e
              c223 00f0  ld   $f0
              c224 0001  ld   $01
              c225 00c8  ld   $c8
              c226 00a9  ld   $a9
              c227 002b  ld   $2b
              c228 00a6  ld   $a6
              c229 0091  ld   $91
              c22a 00f0  ld   $f0
              c22b 002e  ld   $2e
              c22c 0010  ld   $10
              c22d 0008  ld   $08
              c22e 00a9  ld   $a9
              c22f 0000  ld   $00
              c230 0038  ld   $38
              c231 00e5  ld   $e5
              c232 0091  ld   $91
              c233 00aa  ld   $aa
              c234 00a9  ld   $a9
              c235 002d  ld   $2d
              c236 0099  ld   $99
              c237 0006  ld   $06
              c238 0002  ld   $02
              c239 00a9  ld   $a9
              c23a 0045  ld   $45
              c23b 0099  ld   $99
              c23c 0005  ld   $05
              c23d 0002  ld   $02
              c23e 008a  ld   $8a
              c23f 00a2  ld   $a2
              c240 002f  ld   $2f
              c241 0038  ld   $38
              c242 00e8  ld   $e8
              c243 00e9  ld   $e9
              c244 000a  ld   $0a
              c245 00b0  ld   $b0
              c246 00fb  ld   $fb
              c247 0069  ld   $69
              c248 003a  ld   $3a
              c249 0099  ld   $99
              c24a 0008  ld   $08
              c24b 0002  ld   $02
              c24c 008a  ld   $8a
              c24d 0099  ld   $99
              c24e 0007  ld   $07
              c24f 0002  ld   $02
              c250 00a9  ld   $a9
              c251 0000  ld   $00
              c252 0099  ld   $99
              c253 0009  ld   $09
              c254 0002  ld   $02
              c255 00f0  ld   $f0
              c256 0008  ld   $08
              c257 0099  ld   $99
              c258 0004  ld   $04
              c259 0002  ld   $02
              c25a 00a9  ld   $a9
              c25b 0000  ld   $00
              c25c 0099  ld   $99
              c25d 0005  ld   $05
              c25e 0002  ld   $02
              c25f 00a9  ld   $a9
              c260 0005  ld   $05
              c261 00a0  ld   $a0
              c262 0002  ld   $02
              c263 0060  ld   $60
              c264 0080  ld   $80
              c265 0000  ld   $00
              c266 0000  ld   $00
              c267 0000  ld   $00
              c268 0000  ld   $00
              c269 00fa  ld   $fa
              c26a 000a  ld   $0a
              c26b 001f  ld   $1f
              c26c 0000  ld   $00
              c26d 0000  ld   $00
              c26e 0098  ld   $98
              c26f 0096  ld   $96
              c270 0080  ld   $80
              c271 00ff  ld   $ff
              c272 00f0  ld   $f0
              c273 00bd  ld   $bd
              c274 00c0  ld   $c0
              c275 0000  ld   $00
              c276 0001  ld   $01
              c277 0086  ld   $86
              c278 00a0  ld   $a0
              c279 00ff  ld   $ff
              c27a 00ff  ld   $ff
              c27b 00d8  ld   $d8
              c27c 00f0  ld   $f0
              c27d 0000  ld   $00
              c27e 0000  ld   $00
              c27f 0003  ld   $03
              c280 00e8  ld   $e8
              c281 00ff  ld   $ff
              c282 00ff  ld   $ff
              c283 00ff  ld   $ff
              c284 009c  ld   $9c
              c285 0000  ld   $00
              c286 0000  ld   $00
              c287 0000  ld   $00
              c288 000a  ld   $0a
              c289 00ff  ld   $ff
              c28a 00ff  ld   $ff
              c28b 00ff  ld   $ff
              * 5 times
              c28e 00df  ld   $df
              c28f 000a  ld   $0a
              c290 0080  ld   $80
              c291 0000  ld   $00
              c292 0003  ld   $03
              c293 004b  ld   $4b
              c294 00c0  ld   $c0
              c295 00ff  ld   $ff
              c296 00ff  ld   $ff
              c297 0073  ld   $73
              c298 0060  ld   $60
              c299 0000  ld   $00
              c29a 0000  ld   $00
              c29b 000e  ld   $0e
              c29c 0010  ld   $10
              c29d 00ff  ld   $ff
              c29e 00ff  ld   $ff
              c29f 00fd  ld   $fd
              c2a0 00a8  ld   $a8
              c2a1 0000  ld   $00
              c2a2 0000  ld   $00
              c2a3 0000  ld   $00
              c2a4 003c  ld   $3c
              c2a5 0020  ld   $20
              c2a6 0084  ld   $84
              c2a7 001c  ld   $1c
              c2a8 00a9  ld   $a9
              c2a9 0089  ld   $89
              c2aa 00a0  ld   $a0
              c2ab 001f  ld   $1f
              c2ac 0020  ld   $20
              c2ad 001a  ld   $1a
              c2ae 001c  ld   $1c
              c2af 00f0  ld   $f0
              c2b0 0070  ld   $70
              c2b1 00a5  ld   $a5
              c2b2 009c  ld   $9c
              c2b3 00d0  ld   $d0
              c2b4 0003  ld   $03
              c2b5 004c  ld   $4c
              c2b6 0071  ld   $71
              c2b7 0019  ld   $19
              c2b8 00a2  ld   $a2
              c2b9 0081  ld   $81
              c2ba 00a0  ld   $a0
              c2bb 0000  ld   $00
              c2bc 0020  ld   $20
              c2bd 004c  ld   $4c
              c2be 001c  ld   $1c
              c2bf 00a5  ld   $a5
              c2c0 00a1  ld   $a1
              c2c1 0010  ld   $10
              c2c2 000f  ld   $0f
              c2c3 0020  ld   $20
              c2c4 0044  ld   $44
              c2c5 001d  ld   $1d
              c2c6 00a9  ld   $a9
              c2c7 0081  ld   $81
              c2c8 00a0  ld   $a0
              c2c9 0000  ld   $00
              c2ca 0020  ld   $20
              c2cb 00d3  ld   $d3
              c2cc 001c  ld   $1c
              c2cd 00d0  ld   $d0
              c2ce 0003  ld   $03
              c2cf 0098  ld   $98
              c2d0 00a4  ld   $a4
              c2d1 003b  ld   $3b
              c2d2 0020  ld   $20
              c2d3 0076  ld   $76
              c2d4 001c  ld   $1c
              c2d5 0098  ld   $98
              c2d6 0048  ld   $48
              c2d7 0020  ld   $20
              c2d8 0062  ld   $62
              c2d9 001a  ld   $1a
              c2da 00a9  ld   $a9
              c2db 0020  ld   $20
              c2dc 0000  ld   $00
              c2dd 0000  ld   $00
              c2de 0081  ld   $81
              c2df 00a0  ld   $a0
              c2e0 0000  ld   $00
              c2e1 0020  ld   $20
              c2e2 00a0  ld   $a0
              c2e3 001a  ld   $1a
              c2e4 0020  ld   $20
              c2e5 0046  ld   $46
              c2e6 0020  ld   $20
              c2e7 0068  ld   $68
              c2e8 004a  ld   $4a
              c2e9 0090  ld   $90
              c2ea 000a  ld   $0a
              c2eb 00a5  ld   $a5
              c2ec 0094  ld   $94
              c2ed 00f0  ld   $f0
              c2ee 0006  ld   $06
              c2ef 00a5  ld   $a5
              c2f0 0099  ld   $99
              c2f1 0049  ld   $49
              c2f2 00ff  ld   $ff
              c2f3 0085  ld   $85
              c2f4 0099  ld   $99
              c2f5 0060  ld   $60
              c2f6 0081  ld   $81
              c2f7 0038  ld   $38
              c2f8 00aa  ld   $aa
              c2f9 003b  ld   $3b
              c2fa 0029  ld   $29
              c2fb fe00  bra  ac          ;+-----------------------------------+
              c2fc fcfd  bra  $c2fd       ;|                                   |
              c2fd 1418  ld   $18,y       ;| Trampoline for page $c200 lookups |
              c2fe e006  jmp  y,$06       ;|                                   |
              c2ff c218  st   [$18]       ;+-----------------------------------+
              c300 0007  ld   $07
              c301 0071  ld   $71
              c302 0034  ld   $34
              c303 0058  ld   $58
              c304 003e  ld   $3e
              c305 0056  ld   $56
              c306 0074  ld   $74
              c307 0016  ld   $16
              c308 007e  ld   $7e
              c309 00b3  ld   $b3
              c30a 001b  ld   $1b
              c30b 0077  ld   $77
              c30c 002f  ld   $2f
              c30d 00ee  ld   $ee
              c30e 00e3  ld   $e3
              c30f 0085  ld   $85
              c310 007a  ld   $7a
              c311 001d  ld   $1d
              c312 0084  ld   $84
              c313 001c  ld   $1c
              c314 002a  ld   $2a
              c315 007c  ld   $7c
              c316 0063  ld   $63
              c317 0059  ld   $59
              c318 0058  ld   $58
              c319 000a  ld   $0a
              c31a 007e  ld   $7e
              c31b 0075  ld   $75
              c31c 00fd  ld   $fd
              c31d 00e7  ld   $e7
              c31e 00c6  ld   $c6
              c31f 0080  ld   $80
              c320 0031  ld   $31
              c321 0072  ld   $72
              c322 0018  ld   $18
              c323 0010  ld   $10
              c324 0081  ld   $81
              c325 0000  ld   $00
              c326 0000  ld   $00
              c327 0000  ld   $00
              c328 0000  ld   $00
              c329 00a9  ld   $a9
              c32a 0018  ld   $18
              c32b 00a0  ld   $a0
              c32c 0020  ld   $20
              c32d 0020  ld   $20
              c32e 00a0  ld   $a0
              c32f 001a  ld   $1a
              c330 00a5  ld   $a5
              c331 00a3  ld   $a3
              c332 0069  ld   $69
              c333 0050  ld   $50
              c334 0090  ld   $90
              c335 0003  ld   $03
              c336 0020  ld   $20
              c337 009b  ld   $9b
              c338 001c  ld   $1c
              c339 0085  ld   $85
              c33a 0089  ld   $89
              c33b 0020  ld   $20
              c33c 0087  ld   $87
              c33d 001c  ld   $1c
              c33e 00a5  ld   $a5
              c33f 0094  ld   $94
              c340 00c9  ld   $c9
              c341 0088  ld   $88
              c342 0090  ld   $90
              c343 0003  ld   $03
              c344 0020  ld   $20
              c345 004c  ld   $4c
              c346 001b  ld   $1b
              c347 0020  ld   $20
              c348 0044  ld   $44
              c349 001d  ld   $1d
              c34a 00a5  ld   $a5
              c34b 003b  ld   $3b
              c34c 0018  ld   $18
              c34d 0069  ld   $69
              c34e 0081  ld   $81
              c34f 00f0  ld   $f0
              c350 00f3  ld   $f3
              c351 0038  ld   $38
              c352 00e9  ld   $e9
              c353 0001  ld   $01
              c354 0048  ld   $48
              c355 00a2  ld   $a2
              c356 0005  ld   $05
              c357 00b5  ld   $b5
              c358 009c  ld   $9c
              c359 00b4  ld   $b4
              c35a 0094  ld   $94
              c35b 0095  ld   $95
              c35c 0094  ld   $94
              c35d 0094  ld   $94
              c35e 009c  ld   $9c
              c35f 00ca  ld   $ca
              c360 0010  ld   $10
              c361 00f5  ld   $f5
              c362 00a5  ld   $a5
              c363 0089  ld   $89
              c364 0085  ld   $85
              c365 00a3  ld   $a3
              c366 0020  ld   $20
              c367 0098  ld   $98
              c368 0018  ld   $18
              c369 0020  ld   $20
              c36a 000d  ld   $0d
              c36b 0020  ld   $20
              c36c 00a9  ld   $a9
              c36d 001d  ld   $1d
              c36e 00a0  ld   $a0
              c36f 0020  ld   $20
              c370 0020  ld   $20
              c371 00af  ld   $af
              c372 0020  ld   $20
              c373 00a9  ld   $a9
              c374 0000  ld   $00
              c375 0085  ld   $85
              c376 00a2  ld   $a2
              c377 0068  ld   $68
              c378 0020  ld   $20
              c379 0031  ld   $31
              c37a 001b  ld   $1b
              c37b 0060  ld   $60
              c37c 0085  ld   $85
              c37d 00a4  ld   $a4
              c37e 0084  ld   $84
              c37f 00a5  ld   $a5
              c380 0020  ld   $20
              c381 0042  ld   $42
              c382 001c  ld   $1c
              c383 00a9  ld   $a9
              c384 008a  ld   $8a
              c385 0020  ld   $20
              c386 00a0  ld   $a0
              c387 001a  ld   $1a
              c388 0020  ld   $20
              c389 00b3  ld   $b3
              c38a 0020  ld   $20
              c38b 00a9  ld   $a9
              c38c 008a  ld   $8a
              c38d 00a0  ld   $a0
              c38e 0000  ld   $00
              c38f 004c  ld   $4c
              c390 00a0  ld   $a0
              c391 001a  ld   $1a
              c392 0085  ld   $85
              c393 00a4  ld   $a4
              c394 0084  ld   $84
              c395 00a5  ld   $a5
              c396 0020  ld   $20
              c397 003f  ld   $3f
              c398 001c  ld   $1c
              c399 00b1  ld   $b1
              c39a 00a4  ld   $a4
              c39b 0085  ld   $85
              c39c 009a  ld   $9a
              c39d 00a4  ld   $a4
              c39e 00a4  ld   $a4
              c39f 00c8  ld   $c8
              c3a0 0098  ld   $98
              c3a1 00d0  ld   $d0
              c3a2 0002  ld   $02
              c3a3 00e6  ld   $e6
              c3a4 00a5  ld   $a5
              c3a5 0085  ld   $85
              c3a6 00a4  ld   $a4
              c3a7 00a4  ld   $a4
              c3a8 00a5  ld   $a5
              c3a9 0020  ld   $20
              c3aa 00a0  ld   $a0
              c3ab 001a  ld   $1a
              c3ac 00a5  ld   $a5
              c3ad 00a4  ld   $a4
              c3ae 00a4  ld   $a4
              c3af 00a5  ld   $a5
              c3b0 0018  ld   $18
              c3b1 0069  ld   $69
              c3b2 0005  ld   $05
              c3b3 0090  ld   $90
              c3b4 0001  ld   $01
              c3b5 00c8  ld   $c8
              c3b6 0085  ld   $85
              c3b7 00a4  ld   $a4
              c3b8 0084  ld   $84
              c3b9 00a5  ld   $a5
              c3ba 0020  ld   $20
              c3bb 00df  ld   $df
              c3bc 0018  ld   $18
              c3bd 00a9  ld   $a9
              c3be 008f  ld   $8f
              c3bf 00a0  ld   $a0
              c3c0 0000  ld   $00
              c3c1 00c6  ld   $c6
              c3c2 009a  ld   $9a
              c3c3 00d0  ld   $d0
              c3c4 00e4  ld   $e4
              c3c5 0060  ld   $60
              c3c6 0098  ld   $98
              c3c7 0035  ld   $35
              c3c8 0044  ld   $44
              c3c9 007a  ld   $7a
              c3ca 0068  ld   $68
              c3cb 0028  ld   $28
              c3cc 00b1  ld   $b1
              c3cd 0046  ld   $46
              c3ce 0020  ld   $20
              c3cf 00a3  ld   $a3
              c3d0 001c  ld   $1c
              c3d1 0030  ld   $30
              c3d2 002a  ld   $2a
              c3d3 00d0  ld   $d0
              c3d4 0013  ld   $13
              c3d5 00a5  ld   $a5
              c3d6 0006  ld   $06
              c3d7 0085  ld   $85
              c3d8 0095  ld   $95
              c3d9 00a5  ld   $a5
              c3da 000a  ld   $0a
              c3db 0085  ld   $85
              c3dc 0096  ld   $96
              c3dd 00a5  ld   $a5
              c3de 0007  ld   $07
              c3df 0085  ld   $85
              c3e0 0097  ld   $97
              c3e1 00a5  ld   $a5
              c3e2 000b  ld   $0b
              c3e3 0021  ld   $21
              c3e4 0000  ld   $00
              c3e5 0000  ld   $00
              c3e6 0085  ld   $85
              c3e7 0098  ld   $98
              c3e8 004c  ld   $4c
              c3e9 002a  ld   $2a
              c3ea 0021  ld   $21
              c3eb 00a9  ld   $a9
              c3ec 0088  ld   $88
              c3ed 00a0  ld   $a0
              c3ee 0022  ld   $22
              c3ef 0020  ld   $20
              c3f0 001a  ld   $1a
              c3f1 001c  ld   $1c
              c3f2 00a9  ld   $a9
              c3f3 00e3  ld   $e3
              c3f4 00a0  ld   $a0
              c3f5 0020  ld   $20
              c3f6 0020  ld   $20
              c3f7 00a0  ld   $a0
              c3f8 001a  ld   $1a
              c3f9 00a9  ld   $a9
              c3fa 00e7  ld   $e7
              c3fb fe00  bra  ac          ;+-----------------------------------+
              c3fc fcfd  bra  $c3fd       ;|                                   |
              c3fd 1418  ld   $18,y       ;| Trampoline for page $c300 lookups |
              c3fe e006  jmp  y,$06       ;|                                   |
              c3ff c218  st   [$18]       ;+-----------------------------------+
              c400 00a0  ld   $a0
              c401 0020  ld   $20
              c402 0020  ld   $20
              c403 00df  ld   $df
              c404 0018  ld   $18
              c405 00a6  ld   $a6
              c406 0098  ld   $98
              c407 00a5  ld   $a5
              c408 0095  ld   $95
              c409 0085  ld   $85
              c40a 0098  ld   $98
              c40b 0086  ld   $86
              c40c 0095  ld   $95
              c40d 00a6  ld   $a6
              c40e 0096  ld   $96
              c40f 00a5  ld   $a5
              c410 0097  ld   $97
              c411 0085  ld   $85
              c412 0096  ld   $96
              c413 0086  ld   $86
              c414 0097  ld   $97
              c415 00a9  ld   $a9
              c416 0000  ld   $00
              c417 0085  ld   $85
              c418 0099  ld   $99
              c419 00a5  ld   $a5
              c41a 0094  ld   $94
              c41b 0085  ld   $85
              c41c 00a3  ld   $a3
              c41d 00a9  ld   $a9
              c41e 0080  ld   $80
              c41f 0085  ld   $85
              c420 0094  ld   $94
              c421 0020  ld   $20
              c422 004f  ld   $4f
              c423 0019  ld   $19
              c424 00a2  ld   $a2
              c425 0088  ld   $88
              c426 00a0  ld   $a0
              c427 0022  ld   $22
              c428 004c  ld   $4c
              c429 004c  ld   $4c
              c42a 001c  ld   $1c
              c42b 00a9  ld   $a9
              c42c 00bc  ld   $bc
              c42d 00a0  ld   $a0
              c42e 0021  ld   $21
              c42f 0020  ld   $20
              c430 00df  ld   $df
              c431 0018  ld   $18
              c432 0020  ld   $20
              c433 0084  ld   $84
              c434 001c  ld   $1c
              c435 00a9  ld   $a9
              c436 00c1  ld   $c1
              c437 00a0  ld   $a0
              c438 0021  ld   $21
              c439 00a6  ld   $a6
              c43a 00a1  ld   $a1
              c43b 0020  ld   $20
              c43c 007f  ld   $7f
              c43d 001b  ld   $1b
              c43e 0020  ld   $20
              c43f 0084  ld   $84
              c440 001c  ld   $1c
              c441 0020  ld   $20
              c442 0044  ld   $44
              c443 001d  ld   $1d
              c444 00a9  ld   $a9
              c445 0000  ld   $00
              c446 0085  ld   $85
              c447 00a2  ld   $a2
              c448 0020  ld   $20
              c449 0098  ld   $98
              c44a 0018  ld   $18
              c44b 00a9  ld   $a9
              c44c 00c6  ld   $c6
              c44d 00a0  ld   $a0
              c44e 0021  ld   $21
              c44f 0020  ld   $20
              c450 0095  ld   $95
              c451 0018  ld   $18
              c452 00a5  ld   $a5
              c453 0099  ld   $99
              c454 0048  ld   $48
              c455 0010  ld   $10
              c456 000d  ld   $0d
              c457 0020  ld   $20
              c458 008e  ld   $8e
              c459 0018  ld   $18
              c45a 00a5  ld   $a5
              c45b 0099  ld   $99
              c45c 0030  ld   $30
              c45d 0009  ld   $09
              c45e 00a5  ld   $a5
              c45f 0044  ld   $44
              c460 0049  ld   $49
              c461 00ff  ld   $ff
              c462 0085  ld   $85
              c463 0044  ld   $44
              c464 0020  ld   $20
              c465 000d  ld   $0d
              c466 0020  ld   $20
              c467 00a9  ld   $a9
              c468 00c6  ld   $c6
              c469 00a0  ld   $a0
              c46a 0021  ld   $21
              c46b 0020  ld   $20
              c46c 00df  ld   $df
              c46d 0018  ld   $18
              c46e 0068  ld   $68
              c46f 0010  ld   $10
              c470 0003  ld   $03
              c471 0020  ld   $20
              c472 000d  ld   $0d
              c473 0020  ld   $20
              c474 00a9  ld   $a9
              c475 00cb  ld   $cb
              c476 00a0  ld   $a0
              c477 0021  ld   $21
              c478 004c  ld   $4c
              c479 0099  ld   $99
              c47a 0020  ld   $20
              c47b 0020  ld   $20
              c47c 0042  ld   $42
              c47d 001c  ld   $1c
              c47e 00a9  ld   $a9
              c47f 0000  ld   $00
              c480 0085  ld   $85
              c481 0044  ld   $44
              c482 0020  ld   $20
              c483 0047  ld   $47
              c484 0021  ld   $21
              c485 00a2  ld   $a2
              c486 0081  ld   $81
              c487 00a0  ld   $a0
              c488 0000  ld   $00
              c489 0020  ld   $20
              c48a 003d  ld   $3d
              c48b 0021  ld   $21
              c48c 00a9  ld   $a9
              c48d 008a  ld   $8a
              c48e 00a0  ld   $a0
              c48f 0000  ld   $00
              c490 0020  ld   $20
              c491 001a  ld   $1a
              c492 001c  ld   $1c
              c493 00a9  ld   $a9
              c494 0000  ld   $00
              c495 0085  ld   $85
              c496 0099  ld   $99
              c497 00a5  ld   $a5
              c498 0044  ld   $44
              c499 0020  ld   $20
              c49a 00b8  ld   $b8
              c49b 0021  ld   $21
              c49c 00a9  ld   $a9
              c49d 0081  ld   $81
              c49e 00a0  ld   $a0
              c49f 0000  ld   $00
              c4a0 004c  ld   $4c
              c4a1 0087  ld   $87
              c4a2 001b  ld   $1b
              c4a3 0048  ld   $48
              c4a4 004c  ld   $4c
              c4a5 0079  ld   $79
              c4a6 0021  ld   $21
              c4a7 0081  ld   $81
              c4a8 0049  ld   $49
              c4a9 000f  ld   $0f
              c4aa 00da  ld   $da
              c4ab 00a2  ld   $a2
              c4ac 0083  ld   $83
              c4ad 0049  ld   $49
              c4ae 000f  ld   $0f
              c4af 00da  ld   $da
              c4b0 00a2  ld   $a2
              c4b1 007f  ld   $7f
              c4b2 0000  ld   $00
              c4b3 0000  ld   $00
              c4b4 0000  ld   $00
              c4b5 0000  ld   $00
              c4b6 0005  ld   $05
              c4b7 0084  ld   $84
              c4b8 00e6  ld   $e6
              c4b9 001a  ld   $1a
              c4ba 002d  ld   $2d
              c4bb 001b  ld   $1b
              c4bc 0086  ld   $86
              c4bd 0028  ld   $28
              c4be 0007  ld   $07
              c4bf 00fb  ld   $fb
              c4c0 00f8  ld   $f8
              c4c1 0087  ld   $87
              c4c2 0099  ld   $99
              c4c3 0068  ld   $68
              c4c4 0089  ld   $89
              c4c5 0001  ld   $01
              c4c6 0087  ld   $87
              c4c7 0023  ld   $23
              c4c8 0035  ld   $35
              c4c9 00df  ld   $df
              c4ca 00e1  ld   $e1
              c4cb 0086  ld   $86
              c4cc 00a5  ld   $a5
              c4cd 005d  ld   $5d
              c4ce 00e7  ld   $e7
              c4cf 0028  ld   $28
              c4d0 0083  ld   $83
              c4d1 0049  ld   $49
              c4d2 000f  ld   $0f
              c4d3 00da  ld   $da
              c4d4 00a2  ld   $a2
              c4d5 00a1  ld   $a1
              c4d6 0054  ld   $54
              c4d7 0046  ld   $46
              c4d8 008f  ld   $8f
              c4d9 0013  ld   $13
              c4da 008f  ld   $8f
              c4db 0052  ld   $52
              c4dc 0043  ld   $43
              c4dd 0089  ld   $89
              c4de 00cd  ld   $cd
              c4df 00e1  ld   $e1
              c4e0 004e  ld   $4e
              c4e1 008f  ld   $8f
              c4e2 0092  ld   $92
              c4e3 0014  ld   $14
              c4e4 00ad  ld   $ad
              c4e5 0081  ld   $81
              c4e6 0047  ld   $47
              c4e7 0089  ld   $89
              c4e8 00c7  ld   $c7
              c4e9 00a5  ld   $a5
              c4ea 0099  ld   $99
              c4eb 0022  ld   $22
              c4ec 0000  ld   $00
              c4ed 0000  ld   $00
              c4ee 0048  ld   $48
              c4ef 0010  ld   $10
              c4f0 0003  ld   $03
              c4f1 0020  ld   $20
              c4f2 000d  ld   $0d
              c4f3 0020  ld   $20
              c4f4 00a5  ld   $a5
              c4f5 0094  ld   $94
              c4f6 0048  ld   $48
              c4f7 00c9  ld   $c9
              c4f8 0081  ld   $81
              c4f9 0090  ld   $90
              c4fa 0007  ld   $07
              c4fb fe00  bra  ac          ;+-----------------------------------+
              c4fc fcfd  bra  $c4fd       ;|                                   |
              c4fd 1418  ld   $18,y       ;| Trampoline for page $c400 lookups |
              c4fe e006  jmp  y,$06       ;|                                   |
              c4ff c218  st   [$18]       ;+-----------------------------------+
              c500 00a9  ld   $a9
              c501 0034  ld   $34
              c502 00a0  ld   $a0
              c503 001a  ld   $1a
              c504 0020  ld   $20
              c505 0087  ld   $87
              c506 001b  ld   $1b
              c507 00a9  ld   $a9
              c508 002e  ld   $2e
              c509 00a0  ld   $a0
              c50a 0022  ld   $22
              c50b 0020  ld   $20
              c50c 0099  ld   $99
              c50d 0020  ld   $20
              c50e 0068  ld   $68
              c50f 00c9  ld   $c9
              c510 0081  ld   $81
              c511 0090  ld   $90
              c512 0007  ld   $07
              c513 00a9  ld   $a9
              c514 00bc  ld   $bc
              c515 00a0  ld   $a0
              c516 0021  ld   $21
              c517 0020  ld   $20
              c518 0095  ld   $95
              c519 0018  ld   $18
              c51a 0068  ld   $68
              c51b 0010  ld   $10
              c51c 0003  ld   $03
              c51d 004c  ld   $4c
              c51e 000d  ld   $0d
              c51f 0020  ld   $20
              c520 0060  ld   $60
              c521 000b  ld   $0b
              c522 0076  ld   $76
              c523 00b3  ld   $b3
              c524 0083  ld   $83
              c525 00bd  ld   $bd
              c526 00d3  ld   $d3
              c527 0079  ld   $79
              c528 001e  ld   $1e
              c529 00f4  ld   $f4
              c52a 00a6  ld   $a6
              c52b 00f5  ld   $f5
              c52c 007b  ld   $7b
              c52d 0083  ld   $83
              c52e 00fc  ld   $fc
              c52f 00b0  ld   $b0
              c530 0010  ld   $10
              c531 007c  ld   $7c
              c532 000c  ld   $0c
              c533 001f  ld   $1f
              c534 0067  ld   $67
              c535 00ca  ld   $ca
              c536 007c  ld   $7c
              c537 00de  ld   $de
              c538 0053  ld   $53
              c539 00cb  ld   $cb
              c53a 00c1  ld   $c1
              c53b 007d  ld   $7d
              c53c 0014  ld   $14
              c53d 0064  ld   $64
              c53e 0070  ld   $70
              c53f 004c  ld   $4c
              c540 007d  ld   $7d
              c541 00b7  ld   $b7
              c542 00ea  ld   $ea
              c543 0051  ld   $51
              c544 007a  ld   $7a
              c545 007d  ld   $7d
              c546 0063  ld   $63
              c547 0030  ld   $30
              c548 0088  ld   $88
              c549 007e  ld   $7e
              c54a 007e  ld   $7e
              c54b 0092  ld   $92
              c54c 0044  ld   $44
              c54d 0099  ld   $99
              c54e 003a  ld   $3a
              c54f 007e  ld   $7e
              c550 004c  ld   $4c
              c551 00cc  ld   $cc
              c552 0091  ld   $91
              c553 00c7  ld   $c7
              c554 007f  ld   $7f
              c555 00aa  ld   $aa
              c556 00aa  ld   $aa
              c557 00aa  ld   $aa
              c558 0013  ld   $13
              c559 0081  ld   $81
              c55a 0000  ld   $00
              c55b 0000  ld   $00
              c55c 0000  ld   $00
              c55d 0000  ld   $00
              c55e 00e6  ld   $e6
              c55f 00a6  ld   $a6
              c560 00d0  ld   $d0
              c561 0002  ld   $02
              c562 00e6  ld   $e6
              c563 00a7  ld   $a7
              c564 0084  ld   $84
              c565 0019  ld   $19
              c566 00a0  ld   $a0
              c567 0000  ld   $00
              c568 00b1  ld   $b1
              c569 00a6  ld   $a6
              c56a 00a4  ld   $a4
              c56b 0019  ld   $19
              c56c 00c9  ld   $c9
              c56d 003a  ld   $3a
              c56e 00b0  ld   $b0
              c56f 000a  ld   $0a
              c570 00c9  ld   $c9
              c571 0020  ld   $20
              c572 00f0  ld   $f0
              c573 00ea  ld   $ea
              c574 0038  ld   $38
              c575 00e9  ld   $e9
              c576 0030  ld   $30
              c577 0038  ld   $38
              c578 00e9  ld   $e9
              c579 00d0  ld   $d0
              c57a 0060  ld   $60
              c57b 0080  ld   $80
              c57c 004f  ld   $4f
              c57d 00c7  ld   $c7
              c57e 0052  ld   $52
              c57f 0058  ld   $58
              c580 00a2  ld   $a2
              c581 00fb  ld   $fb
              c582 009a  ld   $9a
              c583 00a9  ld   $a9
              c584 004c  ld   $4c
              c585 0085  ld   $85
              c586 0087  ld   $87
              c587 0085  ld   $85
              c588 0038  ld   $38
              c589 00a9  ld   $a9
              c58a 0082  ld   $82
              c58b 00a0  ld   $a0
              c58c 0012  ld   $12
              c58d 0085  ld   $85
              c58e 0039  ld   $39
              c58f 0084  ld   $84
              c590 003a  ld   $3a
              c591 00a9  ld   $a9
              c592 0028  ld   $28
              c593 0085  ld   $85
              c594 0019  ld   $19
              c595 00a9  ld   $a9
              c596 001e  ld   $1e
              c597 0085  ld   $85
              c598 0019  ld   $19
              c599 00a2  ld   $a2
              c59a 0000  ld   $00
              c59b 00a9  ld   $a9
              c59c 0003  ld   $03
              c59d 0085  ld   $85
              c59e 0086  ld   $86
              c59f 008a  ld   $8a
              c5a0 0085  ld   $85
              c5a1 009b  ld   $9b
              c5a2 0085  ld   $85
              c5a3 0019  ld   $19
              c5a4 0085  ld   $85
              c5a5 004a  ld   $4a
              c5a6 0048  ld   $48
              c5a7 0085  ld   $85
              c5a8 0045  ld   $45
              c5a9 00e8  ld   $e8
              c5aa 008e  ld   $8e
              c5ab 0002  ld   $02
              c5ac 0024  ld   $24
              c5ad 008e  ld   $8e
              c5ae 0001  ld   $01
              c5af 0024  ld   $24
              c5b0 00a2  ld   $a2
              c5b1 004b  ld   $4b
              c5b2 0086  ld   $86
              c5b3 0048  ld   $48
              c5b4 00a0  ld   $a0
              c5b5 0071  ld   $71
              c5b6 0085  ld   $85
              c5b7 005d  ld   $5d
              c5b8 0084  ld   $84
              c5b9 005e  ld   $5e
              c5ba 0085  ld   $85
              c5bb 0046  ld   $46
              c5bc 0084  ld   $84
              c5bd 0047  ld   $47
              c5be 00a8  ld   $a8
              c5bf 00e6  ld   $e6
              c5c0 0046  ld   $46
              c5c1 00d0  ld   $d0
              c5c2 0004  ld   $04
              c5c3 00e6  ld   $e6
              c5c4 0047  ld   $47
              c5c5 0030  ld   $30
              c5c6 000f  ld   $0f
              c5c7 00a9  ld   $a9
              c5c8 0055  ld   $55
              c5c9 0091  ld   $91
              c5ca 0046  ld   $46
              c5cb 00d1  ld   $d1
              c5cc 0046  ld   $46
              c5cd 00d0  ld   $d0
              c5ce 0007  ld   $07
              c5cf 000a  ld   $0a
              c5d0 0091  ld   $91
              c5d1 0046  ld   $46
              c5d2 00d1  ld   $d1
              c5d3 0046  ld   $46
              c5d4 00f0  ld   $f0
              c5d5 00e9  ld   $e9
              c5d6 00a5  ld   $a5
              c5d7 0001  ld   $01
              c5d8 00c9  ld   $c9
              c5d9 0001  ld   $01
              c5da 00e9  ld   $e9
              c5db 0000  ld   $00
              c5dc 0085  ld   $85
              c5dd 0047  ld   $47
              c5de 00a5  ld   $a5
              c5df 0046  ld   $46
              c5e0 00a4  ld   $a4
              c5e1 0047  ld   $47
              c5e2 0085  ld   $85
              c5e3 0069  ld   $69
              c5e4 0084  ld   $84
              c5e5 006a  ld   $6a
              c5e6 0085  ld   $85
              c5e7 0065  ld   $65
              c5e8 0084  ld   $84
              c5e9 0066  ld   $66
              c5ea 00a2  ld   $a2
              c5eb 0000  ld   $00
              c5ec 00a0  ld   $a0
              c5ed 0071  ld   $71
              c5ee 0086  ld   $86
              c5ef 005d  ld   $5d
              c5f0 0084  ld   $84
              c5f1 005e  ld   $5e
              c5f2 00a0  ld   $a0
              c5f3 0023  ld   $23
              c5f4 0000  ld   $00
              c5f5 004e  ld   $4e
              c5f6 0000  ld   $00
              c5f7 0098  ld   $98
              c5f8 0091  ld   $91
              c5f9 005d  ld   $5d
              c5fa 00e6  ld   $e6
              c5fb fe00  bra  ac          ;+-----------------------------------+
              c5fc fcfd  bra  $c5fd       ;|                                   |
              c5fd 1418  ld   $18,y       ;| Trampoline for page $c500 lookups |
              c5fe e006  jmp  y,$06       ;|                                   |
              c5ff c218  st   [$18]       ;+-----------------------------------+
              c600 005d  ld   $5d
              c601 00a5  ld   $a5
              c602 005d  ld   $5d
              c603 00a4  ld   $a4
              c604 005e  ld   $5e
              c605 0020  ld   $20
              c606 001b  ld   $1b
              c607 0005  ld   $05
              c608 00a9  ld   $a9
              c609 003b  ld   $3b
              c60a 00a0  ld   $a0
              c60b 0023  ld   $23
              c60c 0020  ld   $20
              c60d 00ef  ld   $ef
              c60e 000b  ld   $0b
              c60f 00a5  ld   $a5
              c610 0069  ld   $69
              c611 0038  ld   $38
              c612 00e5  ld   $e5
              c613 005d  ld   $5d
              c614 00aa  ld   $aa
              c615 00a5  ld   $a5
              c616 006a  ld   $6a
              c617 00e5  ld   $e5
              c618 005e  ld   $5e
              c619 0020  ld   $20
              c61a 0045  ld   $45
              c61b 001e  ld   $1e
              c61c 00a9  ld   $a9
              c61d 002e  ld   $2e
              c61e 00a0  ld   $a0
              c61f 0023  ld   $23
              c620 0020  ld   $20
              c621 00ef  ld   $ef
              c622 000b  ld   $0b
              c623 0020  ld   $20
              c624 0044  ld   $44
              c625 0007  ld   $07
              c626 004c  ld   $4c
              c627 0071  ld   $71
              c628 0005  ld   $05
              c629 0020  ld   $20
              c62a 0042  ld   $42
              c62b 0059  ld   $59
              c62c 0054  ld   $54
              c62d 0045  ld   $45
              c62e 0053  ld   $53
              c62f 0020  ld   $20
              c630 0046  ld   $46
              c631 0052  ld   $52
              c632 0045  ld   $45
              c633 0045  ld   $45
              c634 000d  ld   $0d
              c635 0000  ld   $00
              c636 0023  ld   $23
              c637 0023  ld   $23
              c638 0023  ld   $23
              c639 0020  ld   $20
              c63a 004d  ld   $4d
              c63b 0053  ld   $53
              c63c 0020  ld   $20
              c63d 0042  ld   $42
              c63e 0041  ld   $41
              c63f 0053  ld   $53
              c640 0049  ld   $49
              c641 0043  ld   $43
              c642 0020  ld   $20
              c643 0023  ld   $23
              c644 0023  ld   $23
              c645 0023  ld   $23
              c646 000d  ld   $0d
              c647 000d  ld   $0d
              c648 0000  ld   $00
              c649 0024  ld   $24
              c64a 0000  ld   $00
              c64b 0038  ld   $38
              c64c 0011  ld   $11
              c64d 0000  ld   $00
              c64e 000b  ld   $0b
              c64f 002b  ld   $2b
              c650 0022  ld   $22
              c651 0059  ld   $59
              c652 0003  ld   $03
              c653 00b4  ld   $b4
              c654 00e6  ld   $e6
              c655 0011  ld   $11
              c656 0000  ld   $00
              c657 0002  ld   $02
              c658 002b  ld   $2b
              c659 0030  ld   $30
              c65a 0059  ld   $59
              c65b 0000  ld   $00
              c65c 00f3  ld   $f3
              c65d 0030  ld   $30
              c65e 0093  ld   $93
              c65f 0030  ld   $30
              c660 0093  ld   $93
              c661 0030  ld   $30
              c662 00f3  ld   $f3
              c663 0030  ld   $30
              c664 0011  ld   $11
              c665 0000  ld   $00
              c666 0001  ld   $01
              c667 002b  ld   $2b
              c668 0030  ld   $30
              c669 0011  ld   $11
              c66a 0000  ld   $00
              c66b 0027  ld   $27
              c66c 002b  ld   $2b
              c66d 0032  ld   $32
              c66e 0011  ld   $11
              c66f 0000  ld   $00
              c670 00a0  ld   $a0
              c671 002b  ld   $2b
              c672 0024  ld   $24
              c673 0011  ld   $11
              c674 0060  ld   $60
              c675 0070  ld   $70
              c676 002b  ld   $2b
              c677 0026  ld   $26
              c678 0011  ld   $11
              c679 0003  ld   $03
              c67a 000b  ld   $0b
              c67b 002b  ld   $2b
              c67c 0022  ld   $22
              c67d 00b4  ld   $b4
              c67e 00f3  ld   $f3
              c67f 0011  ld   $11
              c680 0000  ld   $00
              c681 0025  ld   $25
              c682 00cf  ld   $cf
              c683 0018  ld   $18
              c684 0025  ld   $25
              c685 0000  ld   $00
              c686 0054  ld   $54
              c687 0011  ld   $11
              c688 0000  ld   $00
              c689 0001  ld   $01
              c68a 002b  ld   $2b
              c68b 0030  ld   $30
              c68c 0011  ld   $11
              c68d 00e0  ld   $e0
              c68e 0001  ld   $01
              c68f 002b  ld   $2b
              c690 0034  ld   $34
              c691 0059  ld   $59
              c692 0023  ld   $23
              c693 002b  ld   $2b
              c694 0036  ld   $36
              c695 0021  ld   $21
              c696 0034  ld   $34
              c697 0035  ld   $35
              c698 0050  ld   $50
              c699 001b  ld   $1b
              c69a 0021  ld   $21
              c69b 0036  ld   $36
              c69c 00f0  ld   $f0
              c69d 0030  ld   $30
              c69e 0093  ld   $93
              c69f 0036  ld   $36
              c6a0 0021  ld   $21
              c6a1 0034  ld   $34
              c6a2 0090  ld   $90
              c6a3 0023  ld   $23
              c6a4 0059  ld   $59
              c6a5 0070  ld   $70
              c6a6 00f0  ld   $f0
              c6a7 0030  ld   $30
              c6a8 0021  ld   $21
              c6a9 0034  ld   $34
              c6aa 00e3  ld   $e3
              c6ab 0010  ld   $10
              c6ac 00e9  ld   $e9
              c6ad 002b  ld   $2b
              c6ae 0034  ld   $34
              c6af 0093  ld   $93
              c6b0 0030  ld   $30
              c6b1 0093  ld   $93
              c6b2 0030  ld   $30
              c6b3 001a  ld   $1a
              c6b4 0030  ld   $30
              c6b5 008c  ld   $8c
              c6b6 00f0  ld   $f0
              c6b7 0035  ld   $35
              c6b8 0072  ld   $72
              c6b9 000c  ld   $0c
              c6ba 0011  ld   $11
              c6bb 0001  ld   $01
              c6bc 0001  ld   $01
              c6bd 002b  ld   $2b
              c6be 0030  ld   $30
              c6bf 0059  ld   $59
              c6c0 0060  ld   $60
              c6c1 00f0  ld   $f0
              c6c2 0030  ld   $30
              c6c3 0059  ld   $59
              c6c4 0006  ld   $06
              c6c5 005e  ld   $5e
              c6c6 002a  ld   $2a
              c6c7 0059  ld   $59
              c6c8 000d  ld   $0d
              c6c9 00cf  ld   $cf
              c6ca 0032  ld   $32
              c6cb 001a  ld   $1a
              c6cc 002a  ld   $2a
              c6cd 00e6  ld   $e6
              c6ce 0001  ld   $01
              c6cf 0035  ld   $35
              c6d0 004d  ld   $4d
              c6d1 003c  ld   $3c
              c6d2 0011  ld   $11
              c6d3 0000  ld   $00
              c6d4 0026  ld   $26
              c6d5 002b  ld   $2b
              c6d6 001a  ld   $1a
              c6d7 0011  ld   $11
              c6d8 008d  ld   $8d
              c6d9 0022  ld   $22
              c6da 00ff  ld   $ff
              c6db 0026  ld   $26
              c6dc 0000  ld   $00
              c6dd 0047  ld   $47
              c6de 002b  ld   $2b
              c6df 001a  ld   $1a
              c6e0 0011  ld   $11
              c6e1 000c  ld   $0c
              c6e2 000b  ld   $0b
              c6e3 002b  ld   $2b
              c6e4 0022  ld   $22
              c6e5 00b4  ld   $b4
              c6e6 00e6  ld   $e6
              c6e7 0075  ld   $75
              c6e8 00cf  ld   $cf
              c6e9 0032  ld   $32
              c6ea 0063  ld   $63
              c6eb 0090  ld   $90
              c6ec 0000  ld   $00
              c6ed 0011  ld   $11
              c6ee 00e1  ld   $e1
              c6ef 0004  ld   $04
              c6f0 002b  ld   $2b
              c6f1 0022  ld   $22
              c6f2 0011  ld   $11
              c6f3 0000  ld   $00
              c6f4 000b  ld   $0b
              c6f5 002b  ld   $2b
              c6f6 0024  ld   $24
              c6f7 0021  ld   $21
              c6f8 0030  ld   $30
              c6f9 002b  ld   $2b
              c6fa 0028  ld   $28
              c6fb fe00  bra  ac          ;+-----------------------------------+
              c6fc fcfd  bra  $c6fd       ;|                                   |
              c6fd 1418  ld   $18,y       ;| Trampoline for page $c600 lookups |
              c6fe e006  jmp  y,$06       ;|                                   |
              c6ff c218  st   [$18]       ;+-----------------------------------+
              c700 00e3  ld   $e3
              c701 0006  ld   $06
              c702 002b  ld   $2b
              c703 0030  ld   $30
              c704 0059  ld   $59
              c705 0005  ld   $05
              c706 002b  ld   $2b
              c707 0034  ld   $34
              c708 0021  ld   $21
              c709 0036  ld   $36
              c70a 007f  ld   $7f
              c70b 0000  ld   $00
              c70c 0082  ld   $82
              c70d 00fe  ld   $fe
              c70e 005e  ld   $5e
              c70f 0026  ld   $26
              c710 0011  ld   $11
              c711 0000  ld   $00
              c712 0007  ld   $07
              c713 0099  ld   $99
              c714 0028  ld   $28
              c715 00ad  ld   $ad
              c716 0035  ld   $35
              c717 003f  ld   $3f
              c718 0036  ld   $36
              c719 0093  ld   $93
              c71a 0026  ld   $26
              c71b 00b4  ld   $b4
              c71c 00cb  ld   $cb
              c71d 0093  ld   $93
              c71e 0036  ld   $36
              c71f 0093  ld   $93
              c720 0028  ld   $28
              c721 0021  ld   $21
              c722 0034  ld   $34
              c723 00e6  ld   $e6
              c724 0001  ld   $01
              c725 0035  ld   $35
              c726 004d  ld   $4d
              c727 0021  ld   $21
              c728 0063  ld   $63
              c729 00ff  ld   $ff
              c72a 0027  ld   $27
              c72b 0000  ld   $00
              c72c 0059  ld   $59
              c72d 0075  ld   $75
              c72e 00e6  ld   $e6
              c72f 00ff  ld   $ff
              c730 0035  ld   $35
              c731 003f  ld   $3f
              c732 0041  ld   $41
              c733 00e3  ld   $e3
              c734 00df  ld   $df
              c735 0035  ld   $35
              c736 0053  ld   $53
              c737 001a  ld   $1a
              c738 002b  ld   $2b
              c739 0024  ld   $24
              c73a 0011  ld   $11
              c73b 0000  ld   $00
              c73c 0029  ld   $29
              c73d 00cf  ld   $cf
              c73e 0018  ld   $18
              c73f 0035  ld   $35
              c740 0072  ld   $72
              c741 0015  ld   $15
              c742 0063  ld   $63
              c743 00ff  ld   $ff
              c744 0011  ld   $11
              c745 009b  ld   $9b
              c746 0007  ld   $07
              c747 0090  ld   $90
              c748 003f  ld   $3f
              c749 00e6  ld   $e6
              c74a 005f  ld   $5f
              c74b 0035  ld   $35
              c74c 0056  ld   $56
              c74d 0022  ld   $22
              c74e 0011  ld   $11
              c74f 00c0  ld   $c0
              c750 00ff  ld   $ff
              c751 00e3  ld   $e3
              c752 002d  ld   $2d
              c753 0035  ld   $35
              c754 0053  ld   $53
              c755 0030  ld   $30
              c756 00e3  ld   $e3
              c757 0032  ld   $32
              c758 002b  ld   $2b
              c759 0034  ld   $34
              c75a 0011  ld   $11
              c75b 0000  ld   $00
              c75c 0007  ld   $07
              c75d 0090  ld   $90
              c75e 0035  ld   $35
              c75f 002b  ld   $2b
              c760 0034  ld   $34
              c761 0011  ld   $11
              c762 0000  ld   $00
              c763 0008  ld   $08
              c764 002b  ld   $2b
              c765 0036  ld   $36
              c766 0021  ld   $21
              c767 0034  ld   $34
              c768 00e9  ld   $e9
              c769 00e9  ld   $e9
              c76a 0099  ld   $99
              c76b 0034  ld   $34
              c76c 0099  ld   $99
              c76d 0036  ld   $36
              c76e 0090  ld   $90
              c76f 0044  ld   $44
              c770 0011  ld   $11
              c771 000c  ld   $0c
              c772 0008  ld   $08
              c773 002b  ld   $2b
              c774 0036  ld   $36
              c775 001a  ld   $1a
              c776 0030  ld   $30
              c777 00e6  ld   $e6
              c778 00fb  ld   $fb
              c779 0035  ld   $35
              c77a 0056  ld   $56
              c77b 0052  ld   $52
              c77c 0011  ld   $11
              c77d 0000  ld   $00
              c77e 0028  ld   $28
              c77f 00cf  ld   $cf
              c780 0018  ld   $18
              c781 0011  ld   $11
              c782 000f  ld   $0f
              c783 0026  ld   $26
              c784 00cf  ld   $cf
              c785 0018  ld   $18
              c786 0028  ld   $28
              c787 0000  ld   $00
              c788 004c  ld   $4c
              c789 0011  ld   $11
              c78a 00e1  ld   $e1
              c78b 0004  ld   $04
              c78c 002b  ld   $2b
              c78d 0022  ld   $22
              c78e 0011  ld   $11
              c78f 0000  ld   $00
              c790 000b  ld   $0b
              c791 002b  ld   $2b
              c792 0024  ld   $24
              c793 0059  ld   $59
              c794 0062  ld   $62
              c795 005e  ld   $5e
              c796 0030  ld   $30
              c797 00e3  ld   $e3
              c798 009e  ld   $9e
              c799 002b  ld   $2b
              c79a 0034  ld   $34
              c79b 00ad  ld   $ad
              c79c 005e  ld   $5e
              c79d 0031  ld   $31
              c79e 0021  ld   $21
              c79f 0030  ld   $30
              c7a0 00e6  ld   $e6
              c7a1 0002  ld   $02
              c7a2 002b  ld   $2b
              c7a3 0028  ld   $28
              c7a4 0011  ld   $11
              c7a5 0000  ld   $00
              c7a6 0007  ld   $07
              c7a7 0099  ld   $99
              c7a8 0028  ld   $28
              c7a9 00ad  ld   $ad
              c7aa 0082  ld   $82
              c7ab 0001  ld   $01
              c7ac 005e  ld   $5e
              c7ad 0026  ld   $26
              c7ae 00b4  ld   $b4
              c7af 00cb  ld   $cb
              c7b0 0093  ld   $93
              c7b1 0028  ld   $28
              c7b2 001a  ld   $1a
              c7b3 0028  ld   $28
              c7b4 0035  ld   $35
              c7b5 0072  ld   $72
              c7b6 0019  ld   $19
              c7b7 0021  ld   $21
              c7b8 0034  ld   $34
              c7b9 00e3  ld   $e3
              c7ba 0016  ld   $16
              c7bb 002b  ld   $2b
              c7bc 0028  ld   $28
              c7bd 00ad  ld   $ad
              c7be 005e  ld   $5e
              c7bf 0026  ld   $26
              c7c0 0021  ld   $21
              c7c1 0034  ld   $34
              c7c2 00ad  ld   $ad
              c7c3 00f0  ld   $f0
              c7c4 0028  ld   $28
              c7c5 001a  ld   $1a
              c7c6 0026  ld   $26
              c7c7 00f0  ld   $f0
              c7c8 0034  ld   $34
              c7c9 0093  ld   $93
              c7ca 0034  ld   $34
              c7cb 0093  ld   $93
              c7cc 0034  ld   $34
              c7cd 001a  ld   $1a
              c7ce 0034  ld   $34
              c7cf 008c  ld   $8c
              c7d0 00da  ld   $da
              c7d1 0035  ld   $35
              c7d2 0072  ld   $72
              c7d3 002c  ld   $2c
              c7d4 00ff  ld   $ff
              c7d5 0029  ld   $29
              c7d6 0000  ld   $00
              c7d7 001f  ld   $1f
              c7d8 0021  ld   $21
              c7d9 0024  ld   $24
              c7da 00e3  ld   $e3
              c7db 0013  ld   $13
              c7dc 0035  ld   $35
              c7dd 0072  ld   $72
              c7de 000d  ld   $0d
              c7df 0075  ld   $75
              c7e0 0011  ld   $11
              c7e1 0000  ld   $00
              c7e2 0028  ld   $28
              c7e3 00cf  ld   $cf
              c7e4 0018  ld   $18
              c7e5 0063  ld   $63
              c7e6 00ff  ld   $ff
              c7e7 00e3  ld   $e3
              c7e8 0003  ld   $03
              c7e9 0035  ld   $35
              c7ea 003f  ld   $3f
              c7eb 001c  ld   $1c
              c7ec 00e3  ld   $e3
              c7ed 0003  ld   $03
              c7ee 0035  ld   $35
              c7ef 0072  ld   $72
              c7f0 001c  ld   $1c
              c7f1 0059  ld   $59
              c7f2 0006  ld   $06
              c7f3 005e  ld   $5e
              c7f4 002c  ld   $2c
              c7f5 0063  ld   $63
              c7f6 00ff  ld   $ff
              c7f7 002a  ld   $2a
              c7f8 0000  ld   $00
              c7f9 003e  ld   $3e
              c7fa 00a5  ld   $a5
              c7fb fe00  bra  ac          ;+-----------------------------------+
              c7fc fcfd  bra  $c7fd       ;|                                   |
              c7fd 1418  ld   $18,y       ;| Trampoline for page $c700 lookups |
              c7fe e006  jmp  y,$06       ;|                                   |
              c7ff c218  st   [$18]       ;+-----------------------------------+
              c800 000f  ld   $0f
              c801 0085  ld   $85
              c802 003e  ld   $3e
              c803 00a5  ld   $a5
              c804 000f  ld   $0f
              c805 00c5  ld   $c5
              c806 003e  ld   $3e
              c807 00d0  ld   $d0
              c808 001b  ld   $1b
              c809 00a5  ld   $a5
              c80a 000e  ld   $0e
              c80b 0029  ld   $29
              c80c 000f  ld   $0f
              c80d 00d0  ld   $d0
              c80e 00f4  ld   $f4
              c80f 00a5  ld   $a5
              c810 000e  ld   $0e
              c811 0029  ld   $29
              c812 0010  ld   $10
              c813 00d0  ld   $d0
              c814 0003  ld   $03
              c815 00a9  ld   $a9
              c816 0020  ld   $20
              c817 002c  ld   $2c
              c818 00a9  ld   $a9
              c819 007f  ld   $7f
              c81a 0000  ld   $00
              c81b 0020  ld   $20
              c81c 0032  ld   $32
              c81d 002a  ld   $2a
              c81e 0020  ld   $20
              c81f 0000  ld   $00
              c820 002e  ld   $2e
              c821 004c  ld   $4c
              c822 0004  ld   $04
              c823 002a  ld   $2a
              c824 00c9  ld   $c9
              c825 00ff  ld   $ff
              c826 00f0  ld   $f0
              c827 00d9  ld   $d9
              c828 0048  ld   $48
              c829 00a9  ld   $a9
              c82a 0020  ld   $20
              c82b 0000  ld   $00
              c82c 0020  ld   $20
              c82d 0032  ld   $32
              c82e 002a  ld   $2a
              c82f 0068  ld   $68
              c830 0060  ld   $60
              c831 00a5  ld   $a5
              c832 0030  ld   $30
              c833 0038  ld   $38
              c834 00e9  ld   $e9
              c835 0006  ld   $06
              c836 00c9  ld   $c9
              c837 0060  ld   $60
              c838 0090  ld   $90
              c839 0002  ld   $02
              c83a 0085  ld   $85
              c83b 0030  ld   $30
              c83c 0060  ld   $60
              c83d 002b  ld   $2b
              c83e 0000  ld   $00
              c83f 0013  ld   $13
              c840 0085  ld   $85
              c841 0043  ld   $43
              c842 0048  ld   $48
              c843 0008  ld   $08
              c844 008a  ld   $8a
              c845 0048  ld   $48
              c846 0098  ld   $98
              c847 0048  ld   $48
              c848 00a5  ld   $a5
              c849 0043  ld   $43
              c84a 0000  ld   $00
              c84b 0068  ld   $68
              c84c 00a8  ld   $a8
              c84d 0068  ld   $68
              c84e 00aa  ld   $aa
              c84f 0028  ld   $28
              c850 0068  ld   $68
              c851 0018  ld   $18
              c852 0060  ld   $60
              c853 002c  ld   $2c
              c854 0000  ld   $00
              c855 0041  ld   $41
              c856 0024  ld   $24
              c857 0043  ld   $43
              c858 0050  ld   $50
              c859 0018  ld   $18
              c85a 00a5  ld   $a5
              c85b 000f  ld   $0f
              c85c 00c9  ld   $c9
              c85d 00ff  ld   $ff
              c85e 0069  ld   $69
              c85f 0000  ld   $00
              c860 00c9  ld   $c9
              c861 0060  ld   $60
              c862 00d0  ld   $d0
              c863 0002  ld   $02
              c864 00a9  ld   $a9
              c865 001f  ld   $1f
              c866 0090  ld   $90
              c867 0002  ld   $02
              c868 00e9  ld   $e9
              c869 0020  ld   $20
              c86a 00c9  ld   $c9
              c86b 000a  ld   $0a
              c86c 00d0  ld   $d0
              c86d 0002  ld   $02
              c86e 00a9  ld   $a9
              c86f 000d  ld   $0d
              c870 0018  ld   $18
              c871 0060  ld   $60
              c872 008a  ld   $8a
              c873 0048  ld   $48
              c874 0098  ld   $98
              c875 0048  ld   $48
              c876 0020  ld   $20
              c877 0000  ld   $00
              c878 002a  ld   $2a
              c879 0020  ld   $20
              c87a 000a  ld   $0a
              c87b 002c  ld   $2c
              c87c 00c9  ld   $c9
              c87d 0007  ld   $07
              c87e 00d0  ld   $d0
              c87f 0004  ld   $04
              c880 0000  ld   $00
              c881 004c  ld   $4c
              c882 0020  ld   $20
              c883 002c  ld   $2c
              c884 00c9  ld   $c9
              c885 000d  ld   $0d
              c886 0090  ld   $90
              c887 00ee  ld   $ee
              c888 00f0  ld   $f0
              c889 0003  ld   $03
              c88a 0048  ld   $48
              c88b 0000  ld   $00
              c88c 0068  ld   $68
              c88d 0085  ld   $85
              c88e 003e  ld   $3e
              c88f 0068  ld   $68
              c890 00a8  ld   $a8
              c891 0068  ld   $68
              c892 00aa  ld   $aa
              c893 00a5  ld   $a5
              c894 003e  ld   $3e
              c895 0018  ld   $18
              c896 0060  ld   $60
              c897 002d  ld   $2d
              c898 0000  ld   $00
              c899 0018  ld   $18
              c89a 00a5  ld   $a5
              c89b 000f  ld   $0f
              c89c 00c9  ld   $c9
              c89d 0003  ld   $03
              c89e 00d0  ld   $d0
              c89f 0003  ld   $03
              c8a0 004c  ld   $4c
              c8a1 0026  ld   $26
              c8a2 0009  ld   $09
              c8a3 00a5  ld   $a5
              c8a4 000e  ld   $0e
              c8a5 00cd  ld   $cd
              c8a6 0003  ld   $03
              c8a7 0002  ld   $02
              c8a8 0010  ld   $10
              c8a9 0007  ld   $07
              c8aa 0084  ld   $84
              c8ab 003e  ld   $3e
              c8ac 0020  ld   $20
              c8ad 0000  ld   $00
              c8ae 002e  ld   $2e
              c8af 00a4  ld   $a4
              c8b0 003e  ld   $3e
              c8b1 0060  ld   $60
              c8b2 002e  ld   $2e
              c8b3 0000  ld   $00
              c8b4 0036  ld   $36
              c8b5 00a5  ld   $a5
              c8b6 000e  ld   $0e
              c8b7 00a8  ld   $a8
              c8b8 0038  ld   $38
              c8b9 00ed  ld   $ed
              c8ba 0003  ld   $03
              c8bb 0002  ld   $02
              c8bc 008c  ld   $8c
              c8bd 0003  ld   $03
              c8be 0002  ld   $02
              c8bf 0018  ld   $18
              c8c0 006d  ld   $6d
              c8c1 0002  ld   $02
              c8c2 0002  ld   $02
              c8c3 008d  ld   $8d
              c8c4 0002  ld   $02
              c8c5 0002  ld   $02
              c8c6 00a9  ld   $a9
              c8c7 0000  ld   $00
              c8c8 006d  ld   $6d
              c8c9 0001  ld   $01
              c8ca 0002  ld   $02
              c8cb 008d  ld   $8d
              c8cc 0001  ld   $01
              c8cd 0002  ld   $02
              c8ce 00a9  ld   $a9
              c8cf 0000  ld   $00
              c8d0 006d  ld   $6d
              c8d1 0000  ld   $00
              c8d2 0002  ld   $02
              c8d3 008d  ld   $8d
              c8d4 0000  ld   $00
              c8d5 0002  ld   $02
              c8d6 00ad  ld   $ad
              c8d7 0001  ld   $01
              c8d8 0002  ld   $02
              c8d9 00c9  ld   $c9
              c8da 001a  ld   $1a
              c8db 00ad  ld   $ad
              c8dc 0000  ld   $00
              c8dd 0002  ld   $02
              c8de 00e9  ld   $e9
              c8df 004f  ld   $4f
              c8e0 0090  ld   $90
              c8e1 0008  ld   $08
              c8e2 00a9  ld   $a9
              c8e3 0000  ld   $00
              c8e4 008d  ld   $8d
              c8e5 0000  ld   $00
              c8e6 0002  ld   $02
              c8e7 008d  ld   $8d
              c8e8 0001  ld   $01
              c8e9 0002  ld   $02
              c8ea 0060  ld   $60
              c8eb 002f  ld   $2f
              c8ec 0000  ld   $00
              c8ed 002a  ld   $2a
              c8ee 00c9  ld   $c9
              c8ef 005f  ld   $5f
              c8f0 00f0  ld   $f0
              c8f1 0005  ld   $05
              c8f2 00e0  ld   $e0
              c8f3 005a  ld   $5a
              c8f4 00b0  ld   $b0
              c8f5 0011  ld   $11
              c8f6 0060  ld   $60
              c8f7 008a  ld   $8a
              c8f8 0048  ld   $48
              c8f9 0020  ld   $20
              c8fa 0032  ld   $32
              c8fb fe00  bra  ac          ;+-----------------------------------+
              c8fc fcfd  bra  $c8fd       ;|                                   |
              c8fd 1418  ld   $18,y       ;| Trampoline for page $c800 lookups |
              c8fe e006  jmp  y,$06       ;|                                   |
              c8ff c218  st   [$18]       ;+-----------------------------------+
              c900 002a  ld   $2a
              c901 00a9  ld   $a9
              c902 0020  ld   $20
              c903 0000  ld   $00
              c904 0020  ld   $20
              c905 0032  ld   $32
              c906 002a  ld   $2a
              c907 0068  ld   $68
              c908 00aa  ld   $aa
              c909 00f0  ld   $f0
              c90a 0008  ld   $08
              c90b 00ca  ld   $ca
              c90c 0020  ld   $20
              c90d 0032  ld   $32
              c90e 002a  ld   $2a
              c90f 0090  ld   $90
              c910 0003  ld   $03
              c911 00a9  ld   $a9
              c912 0000  ld   $00
              c913 0060  ld   $60
              c914 00a9  ld   $a9
              c915 003f  ld   $3f
              c916 0000  ld   $00
              c917 00a9  ld   $a9
              c918 000d  ld   $0d
              c919 0000  ld   $00
              c91a 00a2  ld   $a2
              c91b 0000  ld   $00
              c91c 0060  ld   $60
              c91d 0030  ld   $30
              c91e 0000  ld   $00
              c91f 0050  ld   $50
              c920 0008  ld   $08
              c921 0048  ld   $48
              c922 00a0  ld   $a0
              c923 0000  ld   $00
              c924 00b9  ld   $b9
              c925 002a  ld   $2a
              c926 0030  ld   $30
              c927 00c8  ld   $c8
              c928 0020  ld   $20
              c929 0000  ld   $00
              c92a 002b  ld   $2b
              c92b 00d0  ld   $d0
              c92c 00f7  ld   $f7
              c92d 00a9  ld   $a9
              c92e 0005  ld   $05
              c92f 00a0  ld   $a0
              c930 0024  ld   $24
              c931 0085  ld   $85
              c932 0034  ld   $34
              c933 0084  ld   $84
              c934 0035  ld   $35
              c935 00a9  ld   $a9
              c936 0000  ld   $00
              c937 0085  ld   $85
              c938 0036  ld   $36
              c939 00a9  ld   $a9
              c93a 000a  ld   $0a
              c93b 0085  ld   $85
              c93c 0037  ld   $37
              c93d 00a9  ld   $a9
              c93e 00fe  ld   $fe
              c93f 00a0  ld   $a0
              c940 0030  ld   $30
              c941 0085  ld   $85
              c942 0016  ld   $16
              c943 0084  ld   $84
              c944 0017  ld   $17
              c945 0068  ld   $68
              c946 0028  ld   $28
              c947 004c  ld   $4c
              c948 009c  ld   $9c
              c949 0007  ld   $07
              c94a 000d  ld   $0d
              c94b 0053  ld   $53
              c94c 0045  ld   $45
              c94d 004e  ld   $4e
              c94e 0044  ld   $44
              c94f 0049  ld   $49
              c950 004e  ld   $4e
              c951 0047  ld   $47
              c952 0020  ld   $20
              c953 0054  ld   $54
              c954 004f  ld   $4f
              c955 0020  ld   $20
              c956 0042  ld   $42
              c957 0041  ld   $41
              c958 0042  ld   $42
              c959 0045  ld   $45
              c95a 004c  ld   $4c
              c95b 0046  ld   $46
              c95c 0049  ld   $49
              c95d 0053  ld   $53
              c95e 0048  ld   $48
              c95f 000d  ld   $0d
              c960 0000  ld   $00
              c961 0021  ld   $21
              c962 0034  ld   $34
              c963 00ad  ld   $ad
              c964 00cf  ld   $cf
              c965 0032  ld   $32
              c966 0011  ld   $11
              c967 0000  ld   $00
              c968 0026  ld   $26
              c969 002b  ld   $2b
              c96a 001a  ld   $1a
              c96b 00ee  ld   $ee
              c96c 0000  ld   $00
              c96d 00df  ld   $df
              c96e 0002  ld   $02
              c96f 00ff  ld   $ff
              c970 0031  ld   $31
              c971 0000  ld   $00
              c972 005a  ld   $5a
              c973 00ee  ld   $ee
              c974 0003  ld   $03
              c975 00f0  ld   $f0
              c976 0034  ld   $34
              c977 001a  ld   $1a
              c978 0037  ld   $37
              c979 008c  ld   $8c
              c97a 000a  ld   $0a
              c97b 0035  ld   $35
              c97c 0072  ld   $72
              c97d 0017  ld   $17
              c97e 0021  ld   $21
              c97f 0034  ld   $34
              c980 00ad  ld   $ad
              c981 00e6  ld   $e6
              c982 0020  ld   $20
              c983 0035  ld   $35
              c984 0056  ld   $56
              c985 0017  ld   $17
              c986 0075  ld   $75
              c987 0011  ld   $11
              c988 0041  ld   $41
              c989 0030  ld   $30
              c98a 00cf  ld   $cf
              c98b 0018  ld   $18
              c98c 001a  ld   $1a
              c98d 0036  ld   $36
              c98e 00e3  ld   $e3
              c98f 0008  ld   $08
              c990 005e  ld   $5e
              c991 0036  ld   $36
              c992 0021  ld   $21
              c993 0034  ld   $34
              c994 00ad  ld   $ad
              c995 005e  ld   $5e
              c996 0037  ld   $37
              c997 0093  ld   $93
              c998 0034  ld   $34
              c999 008c  ld   $8c
              c99a 000a  ld   $0a
              c99b 0035  ld   $35
              c99c 003f  ld   $3f
              c99d 002b  ld   $2b
              c99e 001a  ld   $1a
              c99f 0036  ld   $36
              c9a0 0035  ld   $35
              c9a1 0072  ld   $72
              c9a2 004f  ld   $4f
              c9a3 0011  ld   $11
              c9a4 0005  ld   $05
              c9a5 0024  ld   $24
              c9a6 002b  ld   $2b
              c9a7 0034  ld   $34
              c9a8 002b  ld   $2b
              c9a9 0024  ld   $24
              c9aa 0059  ld   $59
              c9ab 0001  ld   $01
              c9ac 005e  ld   $5e
              c9ad 0026  ld   $26
              c9ae 001a  ld   $1a
              c9af 0036  ld   $36
              c9b0 005e  ld   $5e
              c9b1 0027  ld   $27
              c9b2 0011  ld   $11
              c9b3 0006  ld   $06
              c9b4 000b  ld   $0b
              c9b5 002b  ld   $2b
              c9b6 0022  ld   $22
              c9b7 00b4  ld   $b4
              c9b8 00e6  ld   $e6
              c9b9 0035  ld   $35
              c9ba 003f  ld   $3f
              c9bb 004b  ld   $4b
              c9bc 0059  ld   $59
              c9bd 0003  ld   $03
              c9be 005e  ld   $5e
              c9bf 000f  ld   $0f
              c9c0 0059  ld   $59
              c9c1 0000  ld   $00
              c9c2 005e  ld   $5e
              c9c3 0036  ld   $36
              c9c4 0011  ld   $11
              c9c5 000c  ld   $0c
              c9c6 000b  ld   $0b
              c9c7 002b  ld   $2b
              c9c8 0022  ld   $22
              c9c9 00b4  ld   $b4
              c9ca 00e6  ld   $e6
              c9cb 0090  ld   $90
              c9cc 00fe  ld   $fe
              c9cd 0032  ld   $32
              c9ce 0000  ld   $00
              c9cf 0025  ld   $25
              c9d0 00a0  ld   $a0
              c9d1 0000  ld   $00
              c9d2 00b9  ld   $b9
              c9d3 000e  ld   $0e
              c9d4 0032  ld   $32
              c9d5 00c8  ld   $c8
              c9d6 0020  ld   $20
              c9d7 0000  ld   $00
              c9d8 002b  ld   $2b
              c9d9 00d0  ld   $d0
              c9da 00f7  ld   $f7
              c9db 004c  ld   $4c
              c9dc 0026  ld   $26
              c9dd 0009  ld   $09
              c9de 000d  ld   $0d
              c9df 0055  ld   $55
              c9e0 0053  ld   $53
              c9e1 0045  ld   $45
              c9e2 0020  ld   $20
              c9e3 0042  ld   $42
              c9e4 0041  ld   $41
              c9e5 0042  ld   $42
              c9e6 0045  ld   $45
              c9e7 004c  ld   $4c
              c9e8 0046  ld   $46
              c9e9 0049  ld   $49
              c9ea 0053  ld   $53
              c9eb 0048  ld   $48
              c9ec 0020  ld   $20
              c9ed 0054  ld   $54
              c9ee 004f  ld   $4f
              c9ef 0020  ld   $20
              c9f0 004c  ld   $4c
              c9f1 004f  ld   $4f
              c9f2 0041  ld   $41
              c9f3 0044  ld   $44
              c9f4 0000  ld   $00
              c9f5 0000  ld   $00
              c9f6 0000  ld   $00         ;End of Apps/MSBASIC/MSBASIC_v1.gt1, size 9742
                                          ;+-----------------------------------+
                                          ;| Apps/Horizon/Horizon_at67_v1.gt1  |
                                          ;+-----------------------------------+
              c9f7 0200  nop              ;4 fillers
              c9f8 0200  nop
              c9f9 0200  nop
              c9fa 0200  nop
              c9fb fe00  bra  ac          ;+-----------------------------------+
              c9fc fcfd  bra  $c9fd       ;|                                   |
              c9fd 1418  ld   $18,y       ;| Trampoline for page $c900 lookups |
              c9fe e006  jmp  y,$06       ;|                                   |
              c9ff c218  st   [$18]       ;+-----------------------------------+
              ca00 dc4d  st   $4d,[y,x++] ;'M'
              ca01 dc53  st   $53,[y,x++] ;'S'
              ca02 dc42  st   $42,[y,x++] ;'B'
              ca03 dc41  st   $41,[y,x++] ;'A'
              ca04 dc53  st   $53,[y,x++] ;'S'
              ca05 dc49  st   $49,[y,x++] ;'I'
              ca06 dc43  st   $43,[y,x++] ;'C'
              ca07 dc00  st   $00,[y,x++] ;'\x00'
              ca08 00e9  ld   $e9
              ca09 c218  st   [$18]
              ca0a 00a3  ld   $a3
              ca0b 14e0  ld   $e0,y
              ca0c e071  jmp  y,$71
              ca0d c219  st   [$19]
Egg:          ca0e 0002  ld   $02
              ca0f 0000  ld   $00
              ca10 00c0  ld   $c0
              ca11 0011  ld   $11
              ca12 00b4  ld   $b4
              ca13 0026  ld   $26
              ca14 002b  ld   $2b
              ca15 00dc  ld   $dc
              ca16 0011  ld   $11
              ca17 00bd  ld   $bd
              ca18 0026  ld   $26
              ca19 002b  ld   $2b
              ca1a 00d0  ld   $d0
              ca1b 0011  ld   $11
              ca1c 00c6  ld   $c6
              ca1d 0026  ld   $26
              ca1e 002b  ld   $2b
              ca1f 00d2  ld   $d2
              ca20 0011  ld   $11
              ca21 00cf  ld   $cf
              ca22 0026  ld   $26
              ca23 002b  ld   $2b
              ca24 00d4  ld   $d4
              ca25 0011  ld   $11
              ca26 00d8  ld   $d8
              ca27 0026  ld   $26
              ca28 002b  ld   $2b
              ca29 00d6  ld   $d6
              ca2a 0011  ld   $11
              ca2b 00e1  ld   $e1
              ca2c 0026  ld   $26
              ca2d 002b  ld   $2b
              ca2e 00d8  ld   $d8
              ca2f 0011  ld   $11
              ca30 00ea  ld   $ea
              ca31 0026  ld   $26
              ca32 002b  ld   $2b
              ca33 00da  ld   $da
              ca34 0011  ld   $11
              ca35 0020  ld   $20
              ca36 000f  ld   $0f
              ca37 002b  ld   $2b
              ca38 00a2  ld   $a2
              ca39 0011  ld   $11
              ca3a 0001  ld   $01
              ca3b 0000  ld   $00
              ca3c 002b  ld   $2b
              ca3d 00ac  ld   $ac
              ca3e 0011  ld   $11
              ca3f 0000  ld   $00
              ca40 00ff  ld   $ff
              ca41 002b  ld   $2b
              ca42 00ae  ld   $ae
              ca43 0011  ld   $11
              ca44 0000  ld   $00
              ca45 0000  ld   $00
              ca46 002b  ld   $2b
              ca47 00a6  ld   $a6
              ca48 0059  ld   $59
              ca49 0000  ld   $00
              ca4a 005e  ld   $5e
              ca4b 002c  ld   $2c
              ca4c 0011  ld   $11
              ca4d 00a0  ld   $a0
              ca4e 0025  ld   $25
              ca4f 00cf  ld   $cf
              ca50 0018  ld   $18
              ca51 0011  ld   $11
              ca52 00c3  ld   $c3
              ca53 0025  ld   $25
              ca54 00cf  ld   $cf
              ca55 0018  ld   $18
              ca56 0059  ld   $59
              ca57 0000  ld   $00
              ca58 002b  ld   $2b
              ca59 0030  ld   $30
              ca5a 002b  ld   $2b
              ca5b 0032  ld   $32
              ca5c 002b  ld   $2b
              ca5d 0034  ld   $34
              ca5e 002b  ld   $2b
              ca5f 0036  ld   $36
              ca60 002b  ld   $2b
              ca61 0038  ld   $38
              ca62 002b  ld   $2b
              ca63 003a  ld   $3a
              ca64 002b  ld   $2b
              ca65 003c  ld   $3c
              ca66 0059  ld   $59
              ca67 003f  ld   $3f
              ca68 002b  ld   $2b
              ca69 003e  ld   $3e
              ca6a 0059  ld   $59
              ca6b 0003  ld   $03
              ca6c 002b  ld   $2b
              ca6d 0040  ld   $40
              ca6e 0059  ld   $59
              ca6f 0020  ld   $20
              ca70 002b  ld   $2b
              ca71 0042  ld   $42
              ca72 0011  ld   $11
              ca73 00a0  ld   $a0
              ca74 0026  ld   $26
              ca75 002b  ld   $2b
              ca76 0084  ld   $84
              ca77 0059  ld   $59
              ca78 003f  ld   $3f
              ca79 00f3  ld   $f3
              ca7a 0084  ld   $84
              ca7b 0011  ld   $11
              ca7c 00a2  ld   $a2
              ca7d 0026  ld   $26
              ca7e 002b  ld   $2b
              ca7f 0084  ld   $84
              ca80 0059  ld   $59
              ca81 002a  ld   $2a
              ca82 00f3  ld   $f3
              ca83 0084  ld   $84
              ca84 0011  ld   $11
              ca85 00a4  ld   $a4
              ca86 0026  ld   $26
              ca87 002b  ld   $2b
              ca88 0084  ld   $84
              ca89 0059  ld   $59
              ca8a 0015  ld   $15
              ca8b 00f3  ld   $f3
              ca8c 0084  ld   $84
              ca8d 0011  ld   $11
              ca8e 00a6  ld   $a6
              ca8f 0026  ld   $26
              ca90 002b  ld   $2b
              ca91 0084  ld   $84
              ca92 0059  ld   $59
              ca93 0000  ld   $00
              ca94 00f3  ld   $f3
              ca95 0084  ld   $84
              ca96 0011  ld   $11
              ca97 00aa  ld   $aa
              ca98 0026  ld   $26
              ca99 002b  ld   $2b
              ca9a 0084  ld   $84
              ca9b 0059  ld   $59
              ca9c 0003  ld   $03
              ca9d 00f3  ld   $f3
              ca9e 0084  ld   $84
              ca9f 0011  ld   $11
              caa0 00ac  ld   $ac
              caa1 0026  ld   $26
              caa2 002b  ld   $2b
              caa3 0084  ld   $84
              caa4 0059  ld   $59
              caa5 0002  ld   $02
              caa6 00f3  ld   $f3
              caa7 0084  ld   $84
              caa8 0011  ld   $11
              caa9 00ae  ld   $ae
              caaa 0026  ld   $26
              caab 002b  ld   $2b
              caac 0084  ld   $84
              caad 0059  ld   $59
              caae 0001  ld   $01
              caaf 00f3  ld   $f3
              cab0 0084  ld   $84
              cab1 0011  ld   $11
              cab2 00b0  ld   $b0
              cab3 0026  ld   $26
              cab4 002b  ld   $2b
              cab5 0084  ld   $84
              cab6 0059  ld   $59
              cab7 0000  ld   $00
              cab8 00f3  ld   $f3
              cab9 0084  ld   $84
              caba 0059  ld   $59
              cabb 0000  ld   $00
              cabc 002b  ld   $2b
              cabd 0044  ld   $44
              cabe 002b  ld   $2b
              cabf 0046  ld   $46
              cac0 0059  ld   $59
              cac1 0036  ld   $36
              cac2 002b  ld   $2b
              cac3 0048  ld   $48
              cac4 0059  ld   $59
              cac5 0077  ld   $77
              cac6 002b  ld   $2b
              cac7 0030  ld   $30
              cac8 0021  ld   $21
              cac9 0042  ld   $42
              caca 002b  ld   $2b
              cacb 00b0  ld   $b0
              cacc 0011  ld   $11
              cacd 00ff  ld   $ff
              cace 00ff  ld   $ff
              cacf 002b  ld   $2b
              cad0 00b2  ld   $b2
              cad1 0002  ld   $02
              cad2 00c0  ld   $c0
              cad3 0037  ld   $37
              cad4 0011  ld   $11
              cad5 00a0  ld   $a0
              cad6 0026  ld   $26
              cad7 0099  ld   $99
              cad8 0046  ld   $46
              cad9 0099  ld   $99
              cada 0046  ld   $46
              cadb 00f6  ld   $f6
              cadc 002b  ld   $2b
              cadd 003e  ld   $3e
              cade 0011  ld   $11
              cadf 00aa  ld   $aa
              cae0 0026  ld   $26
              cae1 0099  ld   $99
              cae2 0046  ld   $46
              cae3 0099  ld   $99
              cae4 0046  ld   $46
              cae5 00f6  ld   $f6
              cae6 002b  ld   $2b
              cae7 0040  ld   $40
              cae8 0021  ld   $21
              cae9 0044  ld   $44
              caea 00e3  ld   $e3
              caeb 0001  ld   $01
              caec 002b  ld   $2b
              caed 0044  ld   $44
              caee 0021  ld   $21
              caef 0044  ld   $44
              caf0 00b8  ld   $b8
              caf1 0048  ld   $48
              caf2 0035  ld   $35
              caf3 003f  ld   $3f
              caf4 00e4  ld   $e4
              caf5 0011  ld   $11
              caf6 000d  ld   $0d
              caf7 0003  ld   $03
              caf8 00cf  ld   $cf
              caf9 0018  ld   $18
              cafa 0021  ld   $21
              cafb fe00  bra  ac          ;+-----------------------------------+
              cafc fcfd  bra  $cafd       ;|                                   |
              cafd 1418  ld   $18,y       ;| Trampoline for page $ca00 lookups |
              cafe e006  jmp  y,$06       ;|                                   |
              caff c218  st   [$18]       ;+-----------------------------------+
              cb00 0046  ld   $46
              cb01 00e3  ld   $e3
              cb02 0001  ld   $01
              cb03 002b  ld   $2b
              cb04 0046  ld   $46
              cb05 0059  ld   $59
              cb06 0000  ld   $00
              cb07 002b  ld   $2b
              cb08 0044  ld   $44
              cb09 002b  ld   $2b
              cb0a 00de  ld   $de
              cb0b 0011  ld   $11
              cb0c 0000  ld   $00
              cb0d 0003  ld   $03
              cb0e 00cf  ld   $cf
              cb0f 0018  ld   $18
              cb10 0003  ld   $03
              cb11 0000  ld   $00
              cb12 000d  ld   $0d
              cb13 0021  ld   $21
              cb14 00de  ld   $de
              cb15 0021  ld   $21
              cb16 0048  ld   $48
              cb17 002b  ld   $2b
              cb18 0098  ld   $98
              cb19 0011  ld   $11
              cb1a 00f3  ld   $f3
              cb1b 0026  ld   $26
              cb1c 00cf  ld   $cf
              cb1d 0018  ld   $18
              cb1e 002b  ld   $2b
              cb1f 0048  ld   $48
              cb20 0003  ld   $03
              cb21 000d  ld   $0d
              cb22 002c  ld   $2c
              cb23 0021  ld   $21
              cb24 0030  ld   $30
              cb25 002b  ld   $2b
              cb26 003c  ld   $3c
              cb27 0011  ld   $11
              cb28 00a7  ld   $a7
              cb29 0004  ld   $04
              cb2a 00cf  ld   $cf
              cb2b 0018  ld   $18
              cb2c 0021  ld   $21
              cb2d 0030  ld   $30
              cb2e 00b8  ld   $b8
              cb2f 0042  ld   $42
              cb30 00e3  ld   $e3
              cb31 0028  ld   $28
              cb32 002b  ld   $2b
              cb33 00c0  ld   $c0
              cb34 0011  ld   $11
              cb35 0090  ld   $90
              cb36 0001  ld   $01
              cb37 002b  ld   $2b
              cb38 0082  ld   $82
              cb39 0021  ld   $21
              cb3a 00c0  ld   $c0
              cb3b 002b  ld   $2b
              cb3c 0084  ld   $84
              cb3d 0011  ld   $11
              cb3e 00a0  ld   $a0
              cb3f 0024  ld   $24
              cb40 00cf  ld   $cf
              cb41 0018  ld   $18
              cb42 0082  ld   $82
              cb43 0001  ld   $01
              cb44 0035  ld   $35
              cb45 0072  ld   $72
              cb46 0037  ld   $37
              cb47 0021  ld   $21
              cb48 003e  ld   $3e
              cb49 00fc  ld   $fc
              cb4a 0040  ld   $40
              cb4b 002b  ld   $2b
              cb4c 0036  ld   $36
              cb4d 0090  ld   $90
              cb4e 003b  ld   $3b
              cb4f 0003  ld   $03
              cb50 0039  ld   $39
              cb51 0004  ld   $04
              cb52 0059  ld   $59
              cb53 0000  ld   $00
              cb54 002b  ld   $2b
              cb55 0036  ld   $36
              cb56 0003  ld   $03
              cb57 003d  ld   $3d
              cb58 0029  ld   $29
              cb59 0059  ld   $59
              cb5a 0050  ld   $50
              cb5b 002b  ld   $2b
              cb5c 0082  ld   $82
              cb5d 0021  ld   $21
              cb5e 003a  ld   $3a
              cb5f 002b  ld   $2b
              cb60 0084  ld   $84
              cb61 0011  ld   $11
              cb62 00a0  ld   $a0
              cb63 0024  ld   $24
              cb64 00cf  ld   $cf
              cb65 0018  ld   $18
              cb66 0021  ld   $21
              cb67 0092  ld   $92
              cb68 002b  ld   $2b
              cb69 0034  ld   $34
              cb6a 0021  ld   $21
              cb6b 0030  ld   $30
              cb6c 00e3  ld   $e3
              cb6d 0008  ld   $08
              cb6e 002b  ld   $2b
              cb6f 00c0  ld   $c0
              cb70 001a  ld   $1a
              cb71 00c0  ld   $c0
              cb72 005e  ld   $5e
              cb73 0039  ld   $39
              cb74 0059  ld   $59
              cb75 0000  ld   $00
              cb76 002b  ld   $2b
              cb77 0032  ld   $32
              cb78 0021  ld   $21
              cb79 003a  ld   $3a
              cb7a 00e3  ld   $e3
              cb7b 009f  ld   $9f
              cb7c 002b  ld   $2b
              cb7d 00b4  ld   $b4
              cb7e 0059  ld   $59
              cb7f 0001  ld   $01
              cb80 002b  ld   $2b
              cb81 00b6  ld   $b6
              cb82 0003  ld   $03
              cb83 0066  ld   $66
              cb84 000d  ld   $0d
              cb85 0021  ld   $21
              cb86 0034  ld   $34
              cb87 0035  ld   $35
              cb88 0072  ld   $72
              cb89 0071  ld   $71
              cb8a 0021  ld   $21
              cb8b 003a  ld   $3a
              cb8c 00e6  ld   $e6
              cb8d 0001  ld   $01
              cb8e 002b  ld   $2b
              cb8f 0034  ld   $34
              cb90 0090  ld   $90
              cb91 0077  ld   $77
              cb92 0003  ld   $03
              cb93 0073  ld   $73
              cb94 0006  ld   $06
              cb95 0021  ld   $21
              cb96 0034  ld   $34
              cb97 00e6  ld   $e6
              cb98 0001  ld   $01
              cb99 002b  ld   $2b
              cb9a 0034  ld   $34
              cb9b 0003  ld   $03
              cb9c 0079  ld   $79
              cb9d 0011  ld   $11
              cb9e 0021  ld   $21
              cb9f 0034  ld   $34
              cba0 0099  ld   $99
              cba1 0034  ld   $34
              cba2 00b8  ld   $b8
              cba3 003a  ld   $3a
              cba4 0035  ld   $35
              cba5 0050  ld   $50
              cba6 0088  ld   $88
              cba7 0021  ld   $21
              cba8 003e  ld   $3e
              cba9 00fc  ld   $fc
              cbaa 0036  ld   $36
              cbab 002b  ld   $2b
              cbac 004a  ld   $4a
              cbad 0090  ld   $90
              cbae 008e  ld   $8e
              cbaf 0003  ld   $03
              cbb0 008a  ld   $8a
              cbb1 0006  ld   $06
              cbb2 0021  ld   $21
              cbb3 0040  ld   $40
              cbb4 00fc  ld   $fc
              cbb5 0036  ld   $36
              cbb6 002b  ld   $2b
              cbb7 004a  ld   $4a
              cbb8 0003  ld   $03
              cbb9 0090  ld   $90
              cbba 004a  ld   $4a
              cbbb 0021  ld   $21
              cbbc 0038  ld   $38
              cbbd 0099  ld   $99
              cbbe 0032  ld   $32
              cbbf 002b  ld   $2b
              cbc0 00c0  ld   $c0
              cbc1 0021  ld   $21
              cbc2 004a  ld   $4a
              cbc3 00f0  ld   $f0
              cbc4 00c0  ld   $c0
              cbc5 0021  ld   $21
              cbc6 0032  ld   $32
              cbc7 0099  ld   $99
              cbc8 00b6  ld   $b6
              cbc9 002b  ld   $2b
              cbca 0032  ld   $32
              cbcb 00b8  ld   $b8
              cbcc 00b4  ld   $b4
              cbcd 0035  ld   $35
              cbce 004d  ld   $4d
              cbcf 00a8  ld   $a8
              cbd0 0011  ld   $11
              cbd1 0066  ld   $66
              cbd2 0003  ld   $03
              cbd3 00cf  ld   $cf
              cbd4 0018  ld   $18
              cbd5 0021  ld   $21
              cbd6 0030  ld   $30
              cbd7 0099  ld   $99
              cbd8 0030  ld   $30
              cbd9 002b  ld   $2b
              cbda 00c0  ld   $c0
              cbdb 0011  ld   $11
              cbdc 00f9  ld   $f9
              cbdd 0001  ld   $01
              cbde 002b  ld   $2b
              cbdf 0082  ld   $82
              cbe0 0021  ld   $21
              cbe1 00c0  ld   $c0
              cbe2 00f0  ld   $f0
              cbe3 0082  ld   $82
              cbe4 0021  ld   $21
              cbe5 0030  ld   $30
              cbe6 0099  ld   $99
              cbe7 00b2  ld   $b2
              cbe8 002b  ld   $2b
              cbe9 0030  ld   $30
              cbea 00b8  ld   $b8
              cbeb 00b0  ld   $b0
              cbec 0035  ld   $35
              cbed 0050  ld   $50
              cbee 00c7  ld   $c7
              cbef 0011  ld   $11
              cbf0 00c0  ld   $c0
              cbf1 0002  ld   $02
              cbf2 00cf  ld   $cf
              cbf3 0018  ld   $18
              cbf4 0011  ld   $11
              cbf5 00f9  ld   $f9
              cbf6 0001  ld   $01
              cbf7 002b  ld   $2b
              cbf8 0082  ld   $82
              cbf9 0059  ld   $59
              cbfa 0000  ld   $00
              cbfb fe00  bra  ac          ;+-----------------------------------+
              cbfc fcfd  bra  $cbfd       ;|                                   |
              cbfd 1418  ld   $18,y       ;| Trampoline for page $cb00 lookups |
              cbfe e006  jmp  y,$06       ;|                                   |
              cbff c218  st   [$18]       ;+-----------------------------------+
              cc00 00f0  ld   $f0
              cc01 0082  ld   $82
              cc02 0059  ld   $59
              cc03 0000  ld   $00
              cc04 002b  ld   $2b
              cc05 0032  ld   $32
              cc06 0059  ld   $59
              cc07 0008  ld   $08
              cc08 002b  ld   $2b
              cc09 004c  ld   $4c
              cc0a 0003  ld   $03
              cc0b 00da  ld   $da
              cc0c 001f  ld   $1f
              cc0d 0021  ld   $21
              cc0e 0032  ld   $32
              cc0f 0082  ld   $82
              cc10 00ff  ld   $ff
              cc11 002b  ld   $2b
              cc12 0034  ld   $34
              cc13 0059  ld   $59
              cc14 0000  ld   $00
              cc15 002b  ld   $2b
              cc16 0036  ld   $36
              cc17 0011  ld   $11
              cc18 00f0  ld   $f0
              cc19 0001  ld   $01
              cc1a 002b  ld   $2b
              cc1b 004e  ld   $4e
              cc1c 0021  ld   $21
              cc1d 0042  ld   $42
              cc1e 002b  ld   $2b
              cc1f 003c  ld   $3c
              cc20 0011  ld   $11
              cc21 00a7  ld   $a7
              cc22 0004  ld   $04
              cc23 00cf  ld   $cf
              cc24 0018  ld   $18
              cc25 002b  ld   $2b
              cc26 00de  ld   $de
              cc27 0011  ld   $11
              cc28 0000  ld   $00
              cc29 0004  ld   $04
              cc2a 00cf  ld   $cf
              cc2b 0018  ld   $18
              cc2c 0004  ld   $04
              cc2d 0000  ld   $00
              cc2e 000e  ld   $0e
              cc2f 0021  ld   $21
              cc30 00de  ld   $de
              cc31 0059  ld   $59
              cc32 0000  ld   $00
              cc33 002b  ld   $2b
              cc34 0030  ld   $30
              cc35 0021  ld   $21
              cc36 003a  ld   $3a
              cc37 002b  ld   $2b
              cc38 00b0  ld   $b0
              cc39 0059  ld   $59
              cc3a 0001  ld   $01
              cc3b 002b  ld   $2b
              cc3c 00b2  ld   $b2
              cc3d 0004  ld   $04
              cc3e 000e  ld   $0e
              cc3f 002e  ld   $2e
              cc40 0021  ld   $21
              cc41 0036  ld   $36
              cc42 0099  ld   $99
              cc43 0034  ld   $34
              cc44 002b  ld   $2b
              cc45 0036  ld   $36
              cc46 0021  ld   $21
              cc47 0030  ld   $30
              cc48 0099  ld   $99
              cc49 00b2  ld   $b2
              cc4a 002b  ld   $2b
              cc4b 0030  ld   $30
              cc4c 00b8  ld   $b8
              cc4d 00b0  ld   $b0
              cc4e 0035  ld   $35
              cc4f 004d  ld   $4d
              cc50 0022  ld   $22
              cc51 0011  ld   $11
              cc52 000e  ld   $0e
              cc53 0004  ld   $04
              cc54 00cf  ld   $cf
              cc55 0018  ld   $18
              cc56 0021  ld   $21
              cc57 0034  ld   $34
              cc58 0099  ld   $99
              cc59 0034  ld   $34
              cc5a 002b  ld   $2b
              cc5b 0034  ld   $34
              cc5c 0011  ld   $11
              cc5d 0001  ld   $01
              cc5e 0001  ld   $01
              cc5f 0099  ld   $99
              cc60 0042  ld   $42
              cc61 0099  ld   $99
              cc62 0042  ld   $42
              cc63 002b  ld   $2b
              cc64 004a  ld   $4a
              cc65 0059  ld   $59
              cc66 0001  ld   $01
              cc67 002b  ld   $2b
              cc68 0082  ld   $82
              cc69 0011  ld   $11
              cc6a 00a0  ld   $a0
              cc6b 0023  ld   $23
              cc6c 00cf  ld   $cf
              cc6d 0018  ld   $18
              cc6e 0004  ld   $04
              cc6f 003c  ld   $3c
              cc70 0035  ld   $35
              cc71 001a  ld   $1a
              cc72 0037  ld   $37
              cc73 00f0  ld   $f0
              cc74 004a  ld   $4a
              cc75 0021  ld   $21
              cc76 0036  ld   $36
              cc77 0082  ld   $82
              cc78 00ff  ld   $ff
              cc79 0099  ld   $99
              cc7a 0034  ld   $34
              cc7b 002b  ld   $2b
              cc7c 0036  ld   $36
              cc7d 0021  ld   $21
              cc7e 004a  ld   $4a
              cc7f 00e3  ld   $e3
              cc80 0004  ld   $04
              cc81 002b  ld   $2b
              cc82 004a  ld   $4a
              cc83 00b8  ld   $b8
              cc84 004e  ld   $4e
              cc85 0035  ld   $35
              cc86 0053  ld   $53
              cc87 0056  ld   $56
              cc88 0011  ld   $11
              cc89 003c  ld   $3c
              cc8a 0004  ld   $04
              cc8b 00cf  ld   $cf
              cc8c 0018  ld   $18
              cc8d 0059  ld   $59
              cc8e 0011  ld   $11
              cc8f 00ad  ld   $ad
              cc90 002b  ld   $2b
              cc91 0082  ld   $82
              cc92 0059  ld   $59
              cc93 0000  ld   $00
              cc94 002b  ld   $2b
              cc95 0084  ld   $84
              cc96 0011  ld   $11
              cc97 00bb  ld   $bb
              cc98 0023  ld   $23
              cc99 00cf  ld   $cf
              cc9a 0018  ld   $18
              cc9b 0021  ld   $21
              cc9c 0032  ld   $32
              cc9d 0099  ld   $99
              cc9e 004c  ld   $4c
              cc9f 002b  ld   $2b
              cca0 0032  ld   $32
              cca1 0011  ld   $11
              cca2 00da  ld   $da
              cca3 0003  ld   $03
              cca4 00cf  ld   $cf
              cca5 0018  ld   $18
              cca6 0004  ld   $04
              cca7 0071  ld   $71
              cca8 0010  ld   $10
              cca9 0075  ld   $75
              ccaa 0021  ld   $21
              ccab 004c  ld   $4c
              ccac 00e3  ld   $e3
              ccad 0001  ld   $01
              ccae 002b  ld   $2b
              ccaf 004c  ld   $4c
              ccb0 00e6  ld   $e6
              ccb1 0020  ld   $20
              ccb2 0035  ld   $35
              ccb3 0056  ld   $56
              ccb4 007f  ld   $7f
              ccb5 0059  ld   $59
              ccb6 0020  ld   $20
              ccb7 002b  ld   $2b
              ccb8 004c  ld   $4c
              ccb9 0004  ld   $04
              ccba 0081  ld   $81
              ccbb 0002  ld   $02
              ccbc 0063  ld   $63
              ccbd 00ff  ld   $ff
              ccbe 0004  ld   $04
              ccbf 0083  ld   $83
              ccc0 0014  ld   $14
              ccc1 0075  ld   $75
              ccc2 0021  ld   $21
              ccc3 004c  ld   $4c
              ccc4 00e6  ld   $e6
              ccc5 0001  ld   $01
              ccc6 002b  ld   $2b
              ccc7 004c  ld   $4c
              ccc8 0011  ld   $11
              ccc9 00e0  ld   $e0
              ccca 00ff  ld   $ff
              cccb 00b8  ld   $b8
              cccc 004c  ld   $4c
              cccd 0035  ld   $35
              ccce 0050  ld   $50
              cccf 0095  ld   $95
              ccd0 0011  ld   $11
              ccd1 00e0  ld   $e0
              ccd2 00ff  ld   $ff
              ccd3 002b  ld   $2b
              ccd4 004c  ld   $4c
              ccd5 0004  ld   $04
              ccd6 0097  ld   $97
              ccd7 0002  ld   $02
              ccd8 0063  ld   $63
              ccd9 00ff  ld   $ff
              ccda 0004  ld   $04
              ccdb 0099  ld   $99
              ccdc 0007  ld   $07
              ccdd 0075  ld   $75
              ccde 0059  ld   $59
              ccdf 0000  ld   $00
              cce0 002b  ld   $2b
              cce1 004c  ld   $4c
              cce2 0063  ld   $63
              cce3 00ff  ld   $ff
              cce4 0004  ld   $04
              cce5 00a0  ld   $a0
              cce6 0007  ld   $07
              cce7 0075  ld   $75
              cce8 0059  ld   $59
              cce9 0000  ld   $00
              ccea 002b  ld   $2b
              cceb 004c  ld   $4c
              ccec 0063  ld   $63
              cced 00ff  ld   $ff
              ccee 0004  ld   $04
              ccef 00a7  ld   $a7
              ccf0 0017  ld   $17
              ccf1 0075  ld   $75
              ccf2 0011  ld   $11
              ccf3 00e9  ld   $e9
              ccf4 00ff  ld   $ff
              ccf5 0099  ld   $99
              ccf6 003c  ld   $3c
              ccf7 002b  ld   $2b
              ccf8 003a  ld   $3a
              ccf9 0021  ld   $21
              ccfa 003a  ld   $3a
              ccfb fe00  bra  ac          ;+-----------------------------------+
              ccfc fcfd  bra  $ccfd       ;|                                   |
              ccfd 1418  ld   $18,y       ;| Trampoline for page $cc00 lookups |
              ccfe e006  jmp  y,$06       ;|                                   |
              ccff c218  st   [$18]       ;+-----------------------------------+
              cd00 00e3  ld   $e3
              cd01 0001  ld   $01
              cd02 002b  ld   $2b
              cd03 00c0  ld   $c0
              cd04 0011  ld   $11
              cd05 00fe  ld   $fe
              cd06 00ff  ld   $ff
              cd07 00f8  ld   $f8
              cd08 00c0  ld   $c0
              cd09 002b  ld   $2b
              cd0a 003a  ld   $3a
              cd0b 0063  ld   $63
              cd0c 00ff  ld   $ff
              cd0d 0004  ld   $04
              cd0e 00be  ld   $be
              cd0f 0002  ld   $02
              cd10 0090  ld   $90
              cd11 00bc  ld   $bc
              cd12 0022  ld   $22
              cd13 00a0  ld   $a0
              cd14 0008  ld   $08
              cd15 0071  ld   $71
              cd16 0004  ld   $04
              cd17 0083  ld   $83
              cd18 0004  ld   $04
              cd19 0099  ld   $99
              cd1a 0004  ld   $04
              cd1b 00a0  ld   $a0
              cd1c 0004  ld   $04
              cd1d 0022  ld   $22
              cd1e 00a8  ld   $a8
              cd1f 001f  ld   $1f
              cd20 0075  ld   $75
              cd21 0059  ld   $59
              cd22 0008  ld   $08
              cd23 002b  ld   $2b
              cd24 0098  ld   $98
              cd25 0011  ld   $11
              cd26 0000  ld   $00
              cd27 0001  ld   $01
              cd28 002b  ld   $2b
              cd29 009a  ld   $9a
              cd2a 00cf  ld   $cf
              cd2b 00dc  ld   $dc
              cd2c 0021  ld   $21
              cd2d 0098  ld   $98
              cd2e 00f3  ld   $f3
              cd2f 009a  ld   $9a
              cd30 0093  ld   $93
              cd31 009a  ld   $9a
              cd32 0093  ld   $93
              cd33 009a  ld   $9a
              cd34 0093  ld   $93
              cd35 0098  ld   $98
              cd36 001a  ld   $1a
              cd37 0098  ld   $98
              cd38 00e6  ld   $e6
              cd39 0080  ld   $80
              cd3a 0035  ld   $35
              cd3b 0050  ld   $50
              cd3c 00b0  ld   $b0
              cd3d 0063  ld   $63
              cd3e 00ff  ld   $ff
              cd3f 0023  ld   $23
              cd40 00a0  ld   $a0
              cd41 001b  ld   $1b
              cd42 0021  ld   $21
              cd43 0082  ld   $82
              cd44 00e6  ld   $e6
              cd45 0001  ld   $01
              cd46 002b  ld   $2b
              cd47 0082  ld   $82
              cd48 0035  ld   $35
              cd49 0053  ld   $53
              cd4a 00a8  ld   $a8
              cd4b 00ff  ld   $ff
              cd4c 001a  ld   $1a
              cd4d 000e  ld   $0e
              cd4e 00b8  ld   $b8
              cd4f 00aa  ld   $aa
              cd50 0035  ld   $35
              cd51 003f  ld   $3f
              cd52 00a8  ld   $a8
              cd53 001a  ld   $1a
              cd54 000e  ld   $0e
              cd55 002b  ld   $2b
              cd56 00aa  ld   $aa
              cd57 0075  ld   $75
              cd58 00cf  ld   $cf
              cd59 00dc  ld   $dc
              cd5a 0063  ld   $63
              cd5b 0090  ld   $90
              cd5c 009e  ld   $9e
              cd5d 0023  ld   $23
              cd5e 00bb  ld   $bb
              cd5f 003a  ld   $3a
              cd60 0075  ld   $75
              cd61 0011  ld   $11
              cd62 00f5  ld   $f5
              cd63 0023  ld   $23
              cd64 002b  ld   $2b
              cd65 0086  ld   $86
              cd66 002b  ld   $2b
              cd67 0092  ld   $92
              cd68 0011  ld   $11
              cd69 00a0  ld   $a0
              cd6a 0022  ld   $22
              cd6b 002b  ld   $2b
              cd6c 0088  ld   $88
              cd6d 0021  ld   $21
              cd6e 0092  ld   $92
              cd6f 00f6  ld   $f6
              cd70 002b  ld   $2b
              cd71 0094  ld   $94
              cd72 001a  ld   $1a
              cd73 0095  ld   $95
              cd74 0082  ld   $82
              cd75 0080  ld   $80
              cd76 0035  ld   $35
              cd77 003f  ld   $3f
              cd78 00db  ld   $db
              cd79 0021  ld   $21
              cd7a 0084  ld   $84
              cd7b 0035  ld   $35
              cd7c 003f  ld   $3f
              cd7d 00d9  ld   $d9
              cd7e 00cf  ld   $cf
              cd7f 0084  ld   $84
              cd80 0063  ld   $63
              cd81 00ff  ld   $ff
              cd82 0021  ld   $21
              cd83 0094  ld   $94
              cd84 00b8  ld   $b8
              cd85 0082  ld   $82
              cd86 0035  ld   $35
              cd87 003f  ld   $3f
              cd88 00e8  ld   $e8
              cd89 0093  ld   $93
              cd8a 0092  ld   $92
              cd8b 0093  ld   $93
              cd8c 0092  ld   $92
              cd8d 0090  ld   $90
              cd8e 00c6  ld   $c6
              cd8f 0021  ld   $21
              cd90 0092  ld   $92
              cd91 00b8  ld   $b8
              cd92 0086  ld   $86
              cd93 0099  ld   $99
              cd94 0088  ld   $88
              cd95 00f6  ld   $f6
              cd96 00cf  ld   $cf
              cd97 0018  ld   $18
              cd98 0063  ld   $63
              cd99 00ff  ld   $ff
              cd9a 0023  ld   $23
              cd9b 00f5  ld   $f5
              cd9c 000a  ld   $0a
              cd9d 00fe  ld   $fe
              cd9e 0000  ld   $00
              cd9f 00fd  ld   $fd
              cda0 0000  ld   $00
              cda1 00bf  ld   $bf
              cda2 0000  ld   $00
              cda3 007f  ld   $7f
              cda4 0000  ld   $00
              cda5 00ff  ld   $ff
              cda6 00ff  ld   $ff
              cda7 0024  ld   $24
              cda8 00a0  ld   $a0
              cda9 005a  ld   $5a
              cdaa 0021  ld   $21
              cdab 0082  ld   $82
              cdac 00fc  ld   $fc
              cdad 0084  ld   $84
              cdae 002b  ld   $2b
              cdaf 0094  ld   $94
              cdb0 0021  ld   $21
              cdb1 0082  ld   $82
              cdb2 0035  ld   $35
              cdb3 0053  ld   $53
              cdb4 00af  ld   $af
              cdb5 0059  ld   $59
              cdb6 0000  ld   $00
              cdb7 00b8  ld   $b8
              cdb8 0082  ld   $82
              cdb9 002b  ld   $2b
              cdba 0082  ld   $82
              cdbb 0021  ld   $21
              cdbc 0084  ld   $84
              cdbd 0035  ld   $35
              cdbe 0053  ld   $53
              cdbf 00ba  ld   $ba
              cdc0 0059  ld   $59
              cdc1 0000  ld   $00
              cdc2 00b8  ld   $b8
              cdc3 0084  ld   $84
              cdc4 002b  ld   $2b
              cdc5 0084  ld   $84
              cdc6 0059  ld   $59
              cdc7 0000  ld   $00
              cdc8 002b  ld   $2b
              cdc9 0092  ld   $92
              cdca 002b  ld   $2b
              cdcb 0096  ld   $96
              cdcc 0021  ld   $21
              cdcd 0092  ld   $92
              cdce 0099  ld   $99
              cdcf 0092  ld   $92
              cdd0 002b  ld   $2b
              cdd1 0092  ld   $92
              cdd2 0021  ld   $21
              cdd3 0082  ld   $82
              cdd4 0035  ld   $35
              cdd5 0053  ld   $53
              cdd6 00cd  ld   $cd
              cdd7 0093  ld   $93
              cdd8 0092  ld   $92
              cdd9 0021  ld   $21
              cdda 0082  ld   $82
              cddb 0099  ld   $99
              cddc 0082  ld   $82
              cddd 002b  ld   $2b
              cdde 0082  ld   $82
              cddf 0021  ld   $21
              cde0 0092  ld   $92
              cde1 00b8  ld   $b8
              cde2 0084  ld   $84
              cde3 0035  ld   $35
              cde4 0050  ld   $50
              cde5 00de  ld   $de
              cde6 002b  ld   $2b
              cde7 0092  ld   $92
              cde8 0093  ld   $93
              cde9 0082  ld   $82
              cdea 0075  ld   $75
              cdeb 00cf  ld   $cf
              cdec 00dc  ld   $dc
              cded 0063  ld   $63
              cdee 0021  ld   $21
              cdef 0096  ld   $96
              cdf0 00e3  ld   $e3
              cdf1 0001  ld   $01
              cdf2 0082  ld   $82
              cdf3 000f  ld   $0f
              cdf4 0035  ld   $35
              cdf5 0072  ld   $72
              cdf6 00be  ld   $be
              cdf7 0021  ld   $21
              cdf8 0094  ld   $94
              cdf9 0035  ld   $35
              cdfa 0053  ld   $53
              cdfb fe00  bra  ac          ;+-----------------------------------+
              cdfc fcfd  bra  $cdfd       ;|                                   |
              cdfd 1418  ld   $18,y       ;| Trampoline for page $cd00 lookups |
              cdfe e006  jmp  y,$06       ;|                                   |
              cdff c218  st   [$18]       ;+-----------------------------------+
              ce00 00f5  ld   $f5
              ce01 0059  ld   $59
              ce02 0000  ld   $00
              ce03 00b8  ld   $b8
              ce04 0082  ld   $82
              ce05 00ff  ld   $ff
              ce06 0021  ld   $21
              ce07 0082  ld   $82
              ce08 00ff  ld   $ff
              ce09 0025  ld   $25
              ce0a 00a0  ld   $a0
              ce0b 0023  ld   $23
              ce0c 0075  ld   $75
              ce0d 0011  ld   $11
              ce0e 00a8  ld   $a8
              ce0f 0022  ld   $22
              ce10 00cf  ld   $cf
              ce11 0018  ld   $18
              ce12 0011  ld   $11
              ce13 0002  ld   $02
              ce14 0000  ld   $00
              ce15 002b  ld   $2b
              ce16 00a4  ld   $a4
              ce17 0011  ld   $11
              ce18 00ff  ld   $ff
              ce19 007f  ld   $7f
              ce1a 00f8  ld   $f8
              ce1b 00ac  ld   $ac
              ce1c 002b  ld   $2b
              ce1d 00ac  ld   $ac
              ce1e 001a  ld   $1a
              ce1f 00a2  ld   $a2
              ce20 005e  ld   $5e
              ce21 0024  ld   $24
              ce22 005e  ld   $5e
              ce23 0025  ld   $25
              ce24 005e  ld   $5e
              ce25 0026  ld   $26
              ce26 005e  ld   $5e
              ce27 0027  ld   $27
              ce28 0011  ld   $11
              ce29 00d4  ld   $d4
              ce2a 0004  ld   $04
              ce2b 002b  ld   $2b
              ce2c 0022  ld   $22
              ce2d 0063  ld   $63
              ce2e 00ff  ld   $ff
              ce2f 0025  ld   $25
              ce30 00c3  ld   $c3
              ce31 003a  ld   $3a
              ce32 0075  ld   $75
              ce33 0011  ld   $11
              ce34 00a0  ld   $a0
              ce35 0025  ld   $25
              ce36 00cf  ld   $cf
              ce37 0018  ld   $18
              ce38 0011  ld   $11
              ce39 0000  ld   $00
              ce3a 0008  ld   $08
              ce3b 002b  ld   $2b
              ce3c 0028  ld   $28
              ce3d 001a  ld   $1a
              ce3e 0029  ld   $29
              ce3f 005e  ld   $5e
              ce40 0094  ld   $94
              ce41 00cf  ld   $cf
              ce42 00dc  ld   $dc
              ce43 001a  ld   $1a
              ce44 0094  ld   $94
              ce45 005e  ld   $5e
              ce46 0029  ld   $29
              ce47 00b4  ld   $b4
              ce48 00ff  ld   $ff
              ce49 0011  ld   $11
              ce4a 0087  ld   $87
              ce4b 0000  ld   $00
              ce4c 00b8  ld   $b8
              ce4d 0094  ld   $94
              ce4e 005e  ld   $5e
              ce4f 0029  ld   $29
              ce50 00b4  ld   $b4
              ce51 00ff  ld   $ff
              ce52 001a  ld   $1a
              ce53 0028  ld   $28
              ce54 00e3  ld   $e3
              ce55 0004  ld   $04
              ce56 005e  ld   $5e
              ce57 0028  ld   $28
              ce58 00e6  ld   $e6
              ce59 00a0  ld   $a0
              ce5a 0035  ld   $35
              ce5b 0050  ld   $50
              ce5c 00d0  ld   $d0
              ce5d 0059  ld   $59
              ce5e 0000  ld   $00
              ce5f 005e  ld   $5e
              ce60 0028  ld   $28
              ce61 0093  ld   $93
              ce62 0094  ld   $94
              ce63 001a  ld   $1a
              ce64 0094  ld   $94
              ce65 00e6  ld   $e6
              ce66 0044  ld   $44
              ce67 0035  ld   $35
              ce68 0050  ld   $50
              ce69 00d0  ld   $d0
              ce6a 0063  ld   $63
              ce6b 00ff  ld   $ff
              ce6c 0026  ld   $26
              ce6d 00a0  ld   $a0
              ce6e 000a  ld   $0a
              ce6f 0000  ld   $00
              ce70 0000  ld   $00
              ce71 0000  ld   $00
              * 10 times
              ce79 0026  ld   $26
              ce7a 00aa  ld   $aa
              ce7b 000a  ld   $0a
              ce7c 0000  ld   $00
              ce7d 0000  ld   $00
              ce7e 0000  ld   $00
              * 10 times
              ce86 0026  ld   $26
              ce87 00b4  ld   $b4
              ce88 0009  ld   $09
              ce89 0075  ld   $75
              ce8a 0011  ld   $11
              ce8b 00bc  ld   $bc
              ce8c 0026  ld   $26
              ce8d 00cf  ld   $cf
              ce8e 0018  ld   $18
              ce8f 0063  ld   $63
              ce90 00ff  ld   $ff
              ce91 00ff  ld   $ff
              ce92 0026  ld   $26
              ce93 00bd  ld   $bd
              ce94 0009  ld   $09
              ce95 0035  ld   $35
              ce96 003f  ld   $3f
              ce97 00c1  ld   $c1
              ce98 0059  ld   $59
              ce99 0000  ld   $00
              ce9a 00ff  ld   $ff
              ce9b 0059  ld   $59
              ce9c 0001  ld   $01
              ce9d 00ff  ld   $ff
              ce9e 0026  ld   $26
              ce9f 00c6  ld   $c6
              cea0 0009  ld   $09
              cea1 0035  ld   $35
              cea2 0072  ld   $72
              cea3 00ca  ld   $ca
              cea4 0059  ld   $59
              cea5 0000  ld   $00
              cea6 00ff  ld   $ff
              cea7 0059  ld   $59
              cea8 0001  ld   $01
              cea9 00ff  ld   $ff
              ceaa 0026  ld   $26
              ceab 00cf  ld   $cf
              ceac 0009  ld   $09
              cead 0035  ld   $35
              ceae 0056  ld   $56
              ceaf 00d3  ld   $d3
              ceb0 0059  ld   $59
              ceb1 0000  ld   $00
              ceb2 00ff  ld   $ff
              ceb3 0059  ld   $59
              ceb4 0001  ld   $01
              ceb5 00ff  ld   $ff
              ceb6 0026  ld   $26
              ceb7 00d8  ld   $d8
              ceb8 0009  ld   $09
              ceb9 0035  ld   $35
              ceba 0053  ld   $53
              cebb 00dc  ld   $dc
              cebc 0059  ld   $59
              cebd 0000  ld   $00
              cebe 00ff  ld   $ff
              cebf 0059  ld   $59
              cec0 0001  ld   $01
              cec1 00ff  ld   $ff
              cec2 0026  ld   $26
              cec3 00e1  ld   $e1
              cec4 0009  ld   $09
              cec5 0035  ld   $35
              cec6 0050  ld   $50
              cec7 00e5  ld   $e5
              cec8 0059  ld   $59
              cec9 0000  ld   $00
              ceca 00ff  ld   $ff
              cecb 0059  ld   $59
              cecc 0001  ld   $01
              cecd 00ff  ld   $ff
              cece 0026  ld   $26
              cecf 00ea  ld   $ea
              ced0 0009  ld   $09
              ced1 0035  ld   $35
              ced2 004d  ld   $4d
              ced3 00ee  ld   $ee
              ced4 0059  ld   $59
              ced5 0000  ld   $00
              ced6 00ff  ld   $ff
              ced7 0059  ld   $59
              ced8 0001  ld   $01
              ced9 00ff  ld   $ff
              ceda 0026  ld   $26
              cedb 00f3  ld   $f3
              cedc 000a  ld   $0a
              cedd 0011  ld   $11
              cede 0000  ld   $00
              cedf 0006  ld   $06
              cee0 002b  ld   $2b
              cee1 0022  ld   $22
              cee2 0021  ld   $21
              cee3 0098  ld   $98
              cee4 00b4  ld   $b4
              cee5 00f6  ld   $f6
              cee6 00ff  ld   $ff
              cee7 0000  ld   $00
              cee8 0000  ld   $00         ;End of Apps/Horizon/Horizon_at67_v1.gt1, size 1243
                                          ;+-----------------------------------+
                                          ;| Apps/CardBoot/CardBoot.gt1        |
                                          ;+-----------------------------------+
              cee9 dc45  st   $45,[y,x++] ;'E'
              ceea dc67  st   $67,[y,x++] ;'g'
              ceeb dc67  st   $67,[y,x++] ;'g'
              ceec dc00  st   $00,[y,x++] ;'\x00'
              ceed dc00  st   $00,[y,x++] ;'\x00'
              ceee dc00  st   $00,[y,x++] ;'\x00'
              ceef dc00  st   $00,[y,x++] ;'\x00'
              cef0 dc00  st   $00,[y,x++] ;'\x00'
              cef1 000e  ld   $0e
              cef2 c218  st   [$18]
              cef3 00ca  ld   $ca
              cef4 14e0  ld   $e0,y
              cef5 e071  jmp  y,$71
              cef6 c219  st   [$19]
Boot:         cef7 0002  ld   $02
              cef8 0000  ld   $00
              cef9 004c  ld   $4c
              cefa 001a  ld   $1a
              cefb fe00  bra  ac          ;+-----------------------------------+
              cefc fcfd  bra  $cefd       ;|                                   |
              cefd 1418  ld   $18,y       ;| Trampoline for page $ce00 lookups |
              cefe e006  jmp  y,$06       ;|                                   |
              ceff c218  st   [$18]       ;+-----------------------------------+
              cf00 0021  ld   $21
              cf01 00e6  ld   $e6
              cf02 0040  ld   $40
              cf03 0035  ld   $35
              cf04 0053  ld   $53
              cf05 000b  ld   $0b
              cf06 0021  ld   $21
              cf07 000e  ld   $0e
              cf08 00f3  ld   $f3
              cf09 0017  ld   $17
              cf0a 0090  ld   $90
              cf0b 0005  ld   $05
              cf0c 0011  ld   $11
              cf0d 0000  ld   $00
              cf0e 007d  ld   $7d
              cf0f 002b  ld   $2b
              cf10 0030  ld   $30
              cf11 0011  ld   $11
              cf12 00f9  ld   $f9
              cf13 0001  ld   $01
              cf14 002b  ld   $2b
              cf15 0032  ld   $32
              cf16 0059  ld   $59
              cf17 0000  ld   $00
              cf18 0085  ld   $85
              cf19 00b1  ld   $b1
              cf1a 0072  ld   $72
              cf1b 0059  ld   $59
              cf1c 0020  ld   $20
              cf1d 00f0  ld   $f0
              cf1e 0032  ld   $32
              cf1f 0011  ld   $11
              cf20 00e8  ld   $e8
              cf21 0001  ld   $01
              cf22 002b  ld   $2b
              cf23 0034  ld   $34
              cf24 0059  ld   $59
              cf25 007b  ld   $7b
              cf26 00f0  ld   $f0
              cf27 0034  ld   $34
              cf28 0021  ld   $21
              cf29 0034  ld   $34
              cf2a 00e3  ld   $e3
              cf2b 0002  ld   $02
              cf2c 002b  ld   $2b
              cf2d 0034  ld   $34
              cf2e 0011  ld   $11
              cf2f 00f0  ld   $f0
              cf30 0001  ld   $01
              cf31 00fc  ld   $fc
              cf32 0034  ld   $34
              cf33 0035  ld   $35
              cf34 0072  ld   $72
              cf35 0023  ld   $23
              cf36 0011  ld   $11
              cf37 007c  ld   $7c
              cf38 0000  ld   $00
              cf39 005e  ld   $5e
              cf3a 0027  ld   $27
              cf3b 0059  ld   $59
              cf3c 00ff  ld   $ff
              cf3d 002b  ld   $2b
              cf3e 0025  ld   $25
              cf3f 0059  ld   $59
              cf40 0000  ld   $00
              cf41 005e  ld   $5e
              cf42 0024  ld   $24
              cf43 00b4  ld   $b4
              cf44 00f3  ld   $f3
              cf45 0011  ld   $11
              cf46 00a0  ld   $a0
              cf47 0058  ld   $58
              cf48 002b  ld   $2b
              cf49 001a  ld   $1a
              cf4a 00ff  ld   $ff
              cf4b 0058  ld   $58
              cf4c 00a0  ld   $a0
              cf4d 0042  ld   $42
              cf4e 00cd  ld   $cd
              cf4f 00c8  ld   $c8
              cf50 0075  ld   $75
              cf51 0059  ld   $59
              cf52 0000  ld   $00
              cf53 002b  ld   $2b
              cf54 0036  ld   $36
              cf55 0059  ld   $59
              cf56 000a  ld   $0a
              cf57 002b  ld   $2b
              cf58 0034  ld   $34
              cf59 0085  ld   $85
              cf5a 00bc  ld   $bc
              cf5b 005d  ld   $5d
              cf5c 0021  ld   $21
              cf5d 0034  ld   $34
              cf5e 00e6  ld   $e6
              cf5f 0001  ld   $01
              cf60 0035  ld   $35
              cf61 004d  ld   $4d
              cf62 00a7  ld   $a7
              cf63 0085  ld   $85
              cf64 00a2  ld   $a2
              cf65 005d  ld   $5d
              cf66 00cd  ld   $cd
              cf67 00be  ld   $be
              cf68 0040  ld   $40
              cf69 0000  ld   $00
              cf6a 0000  ld   $00
              cf6b 0000  ld   $00
              cf6c 0000  ld   $00
              cf6d 0095  ld   $95
              cf6e 0085  ld   $85
              cf6f 00a2  ld   $a2
              cf70 005f  ld   $5f
              cf71 0085  ld   $85
              cf72 00da  ld   $da
              cf73 005f  ld   $5f
              cf74 008c  ld   $8c
              cf75 0001  ld   $01
              cf76 0063  ld   $63
              cf77 00ff  ld   $ff
              cf78 00cd  ld   $cd
              cf79 00dd  ld   $dd
              cf7a 0075  ld   $75
              cf7b 0085  ld   $85
              cf7c 00a2  ld   $a2
              cf7d 0058  ld   $58
              cf7e 0035  ld   $35
              cf7f 003f  ld   $3f
              cf80 00db  ld   $db
              cf81 0085  ld   $85
              cf82 00af  ld   $af
              cf83 005d  ld   $5d
              cf84 001a  ld   $1a
              cf85 000e  ld   $0e
              cf86 00e6  ld   $e6
              cf87 003c  ld   $3c
              cf88 0035  ld   $35
              cf89 0050  ld   $50
              cf8a 00cb  ld   $cb
              cf8b 0063  ld   $63
              cf8c 00ff  ld   $ff
              cf8d 0093  ld   $93
              cf8e 001b  ld   $1b
              cf8f 00ff  ld   $ff
              cf90 0059  ld   $59
              cf91 00a0  ld   $a0
              cf92 0044  ld   $44
              cf93 00cd  ld   $cd
              cf94 00df  ld   $df
              cf95 0075  ld   $75
              cf96 0085  ld   $85
              cf97 00a2  ld   $a2
              cf98 005d  ld   $5d
              cf99 00cd  ld   $cd
              cf9a 00ac  ld   $ac
              cf9b 0048  ld   $48
              cf9c 0000  ld   $00
              cf9d 0000  ld   $00
              cf9e 0001  ld   $01
              cf9f 00aa  ld   $aa
              cfa0 0087  ld   $87
              cfa1 0085  ld   $85
              cfa2 00a2  ld   $a2
              cfa3 005f  ld   $5f
              cfa4 0085  ld   $85
              cfa5 00da  ld   $da
              cfa6 005f  ld   $5f
              cfa7 008c  ld   $8c
              cfa8 00ff  ld   $ff
              cfa9 0035  ld   $35
              cfaa 003f  ld   $3f
              cfab 00d9  ld   $d9
              cfac 0021  ld   $21
              cfad 0038  ld   $38
              cfae 0082  ld   $82
              cfaf 0004  ld   $04
              cfb0 0035  ld   $35
              cfb1 003f  ld   $3f
              cfb2 00c4  ld   $c4
              cfb3 0059  ld   $59
              cfb4 0001  ld   $01
              cfb5 002b  ld   $2b
              cfb6 0036  ld   $36
              cfb7 0090  ld   $90
              cfb8 00d9  ld   $d9
              cfb9 0085  ld   $85
              cfba 00bc  ld   $bc
              cfbb 005d  ld   $5d
              cfbc 0085  ld   $85
              cfbd 00bc  ld   $bc
              cfbe 005d  ld   $5d
              cfbf 0085  ld   $85
              cfc0 00bc  ld   $bc
              cfc1 005d  ld   $5d
              cfc2 0085  ld   $85
              cfc3 00bc  ld   $bc
              cfc4 005d  ld   $5d
              cfc5 008c  ld   $8c
              cfc6 00aa  ld   $aa
              cfc7 0035  ld   $35
              cfc8 0072  ld   $72
              cfc9 00d9  ld   $d9
              cfca 0059  ld   $59
              cfcb 0002  ld   $02
              cfcc 002b  ld   $2b
              cfcd 0036  ld   $36
              cfce 0021  ld   $21
              cfcf 0038  ld   $38
              cfd0 0082  ld   $82
              cfd1 00fa  ld   $fa
              cfd2 0063  ld   $63
              cfd3 00ff  ld   $ff
              cfd4 0093  ld   $93
              cfd5 001b  ld   $1b
              cfd6 00ff  ld   $ff
              cfd7 005a  ld   $5a
              cfd8 00a0  ld   $a0
              cfd9 0044  ld   $44
              cfda 00cd  ld   $cd
              cfdb 00ca  ld   $ca
              cfdc 0075  ld   $75
              cfdd 0085  ld   $85
              cfde 00a2  ld   $a2
              cfdf 005d  ld   $5d
              cfe0 00cd  ld   $cd
              cfe1 00ac  ld   $ac
              cfe2 007a  ld   $7a
              cfe3 0000  ld   $00
              cfe4 0000  ld   $00
              cfe5 0000  ld   $00
              * 5 times
              cfe8 0085  ld   $85
              cfe9 00a2  ld   $a2
              cfea 005f  ld   $5f
              cfeb 0085  ld   $85
              cfec 00da  ld   $da
              cfed 005f  ld   $5f
              cfee 0085  ld   $85
              cfef 00bc  ld   $bc
              cff0 005d  ld   $5d
              cff1 0082  ld   $82
              cff2 0040  ld   $40
              cff3 0035  ld   $35
              cff4 003f  ld   $3f
              cff5 00be  ld   $be
              cff6 0059  ld   $59
              cff7 0004  ld   $04
              cff8 002b  ld   $2b
              cff9 0036  ld   $36
              cffa 0085  ld   $85
              cffb fe00  bra  ac          ;+-----------------------------------+
              cffc fcfd  bra  $cffd       ;|                                   |
              cffd 1418  ld   $18,y       ;| Trampoline for page $cf00 lookups |
              cffe e006  jmp  y,$06       ;|                                   |
              cfff c218  st   [$18]       ;+-----------------------------------+
              d000 00bc  ld   $bc
              d001 005d  ld   $5d
              d002 0085  ld   $85
              d003 00bc  ld   $bc
              d004 005d  ld   $5d
              d005 0021  ld   $21
              d006 0038  ld   $38
              d007 0082  ld   $82
              d008 00fe  ld   $fe
              d009 0063  ld   $63
              d00a 00ff  ld   $ff
              d00b 00cd  ld   $cd
              d00c 00df  ld   $df
              d00d 0075  ld   $75
              d00e 00cd  ld   $cd
              d00f 00d5  ld   $d5
              d010 0077  ld   $77
              d011 0000  ld   $00
              d012 0000  ld   $00
              d013 0000  ld   $00
              * 5 times
              d016 0085  ld   $85
              d017 00a2  ld   $a2
              d018 005f  ld   $5f
              d019 0085  ld   $85
              d01a 00da  ld   $da
              d01b 005f  ld   $5f
              d01c 0082  ld   $82
              d01d 00fe  ld   $fe
              d01e 0063  ld   $63
              d01f 00ff  ld   $ff
              d020 0093  ld   $93
              d021 001b  ld   $1b
              d022 00ff  ld   $ff
              d023 005b  ld   $5b
              d024 00a0  ld   $a0
              d025 0055  ld   $55
              d026 00cd  ld   $cd
              d027 00c4  ld   $c4
              d028 0075  ld   $75
              d029 0021  ld   $21
              d02a 0036  ld   $36
              d02b 008c  ld   $8c
              d02c 0001  ld   $01
              d02d 0035  ld   $35
              d02e 0072  ld   $72
              d02f 00b2  ld   $b2
              d030 00cd  ld   $cd
              d031 00b0  ld   $b0
              d032 0069  ld   $69
              d033 0000  ld   $00
              d034 0000  ld   $00
              d035 0000  ld   $00
              * 5 times
              d038 0090  ld   $90
              d039 00ba  ld   $ba
              d03a 00cd  ld   $cd
              d03b 00ba  ld   $ba
              d03c 0069  ld   $69
              d03d 0040  ld   $40
              d03e 0000  ld   $00
              d03f 0000  ld   $00
              d040 0000  ld   $00
              d041 0000  ld   $00
              d042 0085  ld   $85
              d043 00a2  ld   $a2
              d044 005f  ld   $5f
              d045 0085  ld   $85
              d046 00da  ld   $da
              d047 005f  ld   $5f
              d048 0082  ld   $82
              d049 00fe  ld   $fe
              d04a 0063  ld   $63
              d04b 00ff  ld   $ff
              d04c 00cd  ld   $cd
              d04d 00db  ld   $db
              d04e 0075  ld   $75
              d04f 0085  ld   $85
              d050 00ce  ld   $ce
              d051 005a  ld   $5a
              d052 0085  ld   $85
              d053 00a2  ld   $a2
              d054 005b  ld   $5b
              d055 0021  ld   $21
              d056 0038  ld   $38
              d057 0035  ld   $35
              d058 003f  ld   $3f
              d059 00d9  ld   $d9
              d05a 001a  ld   $1a
              d05b 000e  ld   $0e
              d05c 00e6  ld   $e6
              d05d 0078  ld   $78
              d05e 0035  ld   $35
              d05f 0050  ld   $50
              d060 00c7  ld   $c7
              d061 0063  ld   $63
              d062 00ff  ld   $ff
              d063 00cd  ld   $cd
              d064 00f0  ld   $f0
              d065 0075  ld   $75
              d066 00cd  ld   $cd
              d067 00e6  ld   $e6
              d068 0050  ld   $50
              d069 0000  ld   $00
              d06a 0000  ld   $00
              d06b 0002  ld   $02
              d06c 0000  ld   $00
              d06d 0000  ld   $00
              d06e 0085  ld   $85
              d06f 00a2  ld   $a2
              d070 005f  ld   $5f
              d071 0085  ld   $85
              d072 00da  ld   $da
              d073 005f  ld   $5f
              d074 0082  ld   $82
              d075 00fe  ld   $fe
              d076 0063  ld   $63
              d077 00ff  ld   $ff
              d078 0093  ld   $93
              d079 001b  ld   $1b
              d07a 00ff  ld   $ff
              d07b 005c  ld   $5c
              d07c 00a0  ld   $a0
              d07d 0041  ld   $41
              d07e 00cd  ld   $cd
              d07f 00dc  ld   $dc
              d080 0075  ld   $75
              d081 00cd  ld   $cd
              d082 00a9  ld   $a9
              d083 0051  ld   $51
              d084 0000  ld   $00
              d085 0000  ld   $00
              d086 0000  ld   $00
              * 5 times
              d089 002b  ld   $2b
              d08a 003a  ld   $3a
              d08b 002b  ld   $2b
              d08c 003c  ld   $3c
              d08d 001a  ld   $1a
              d08e 003f  ld   $3f
              d08f 0093  ld   $93
              d090 003c  ld   $3c
              d091 00f0  ld   $f0
              d092 003c  ld   $3c
              d093 001a  ld   $1a
              d094 003e  ld   $3e
              d095 0093  ld   $93
              d096 003c  ld   $3c
              d097 00f0  ld   $f0
              d098 003c  ld   $3c
              d099 001a  ld   $1a
              d09a 0041  ld   $41
              d09b 0093  ld   $93
              d09c 003c  ld   $3c
              d09d 00f0  ld   $f0
              d09e 003c  ld   $3c
              d09f 001a  ld   $1a
              d0a0 0040  ld   $40
              d0a1 0093  ld   $93
              d0a2 003c  ld   $3c
              d0a3 00f0  ld   $f0
              d0a4 003c  ld   $3c
              d0a5 0021  ld   $21
              d0a6 003a  ld   $3a
              d0a7 0085  ld   $85
              d0a8 00a2  ld   $a2
              d0a9 005f  ld   $5f
              d0aa 0085  ld   $85
              d0ab 00da  ld   $da
              d0ac 005f  ld   $5f
              d0ad 0082  ld   $82
              d0ae 00fe  ld   $fe
              d0af 0035  ld   $35
              d0b0 0072  ld   $72
              d0b1 00da  ld   $da
              d0b2 0085  ld   $85
              d0b3 00bc  ld   $bc
              d0b4 005d  ld   $5d
              d0b5 008c  ld   $8c
              d0b6 00ff  ld   $ff
              d0b7 0035  ld   $35
              d0b8 003f  ld   $3f
              d0b9 00d2  ld   $d2
              d0ba 0063  ld   $63
              d0bb 00ff  ld   $ff
              d0bc 0093  ld   $93
              d0bd 001b  ld   $1b
              d0be 00ff  ld   $ff
              d0bf 005d  ld   $5d
              d0c0 00a0  ld   $a0
              d0c1 0035  ld   $35
              d0c2 00cd  ld   $cd
              d0c3 00ab  ld   $ab
              d0c4 0011  ld   $11
              d0c5 0009  ld   $09
              d0c6 000b  ld   $0b
              d0c7 002b  ld   $2b
              d0c8 0022  ld   $22
              d0c9 0011  ld   $11
              d0ca 0078  ld   $78
              d0cb 0080  ld   $80
              d0cc 00b4  ld   $b4
              d0cd 00fa  ld   $fa
              d0ce 00ff  ld   $ff
              d0cf 00cd  ld   $cd
              d0d0 00b8  ld   $b8
              d0d1 0011  ld   $11
              d0d2 0009  ld   $09
              d0d3 000b  ld   $0b
              d0d4 002b  ld   $2b
              d0d5 0022  ld   $22
              d0d6 0011  ld   $11
              d0d7 007c  ld   $7c
              d0d8 0080  ld   $80
              d0d9 00b4  ld   $b4
              d0da 00fa  ld   $fa
              d0db 00ff  ld   $ff
              d0dc 00cd  ld   $cd
              d0dd 00d0  ld   $d0
              d0de 0059  ld   $59
              d0df 00ff  ld   $ff
              d0e0 005e  ld   $5e
              d0e1 002a  ld   $2a
              d0e2 0059  ld   $59
              d0e3 002a  ld   $2a
              d0e4 002b  ld   $2b
              d0e5 0024  ld   $24
              d0e6 00e3  ld   $e3
              d0e7 0001  ld   $01
              d0e8 002b  ld   $2b
              d0e9 0026  ld   $26
              d0ea 0011  ld   $11
              d0eb 0015  ld   $15
              d0ec 000b  ld   $0b
              d0ed 002b  ld   $2b
              d0ee 0022  ld   $22
              d0ef 00b4  ld   $b4
              d0f0 00cb  ld   $cb
              d0f1 001a  ld   $1a
              d0f2 002a  ld   $2a
              d0f3 00ff  ld   $ff
              d0f4 0093  ld   $93
              d0f5 001b  ld   $1b
              d0f6 00ff  ld   $ff
              d0f7 005e  ld   $5e
              d0f8 00a0  ld   $a0
              d0f9 0029  ld   $29
              d0fa 00cd  ld   $cd
              d0fb fe00  bra  ac          ;+-----------------------------------+
              d0fc fcfd  bra  $d0fd       ;|                                   |
              d0fd 1418  ld   $18,y       ;| Trampoline for page $d000 lookups |
              d0fe e006  jmp  y,$06       ;|                                   |
              d0ff c218  st   [$18]       ;+-----------------------------------+
              d100 00c4  ld   $c4
              d101 00fc  ld   $fc
              d102 0043  ld   $43
              d103 005e  ld   $5e
              d104 0043  ld   $43
              d105 0059  ld   $59
              d106 0008  ld   $08
              d107 002b  ld   $2b
              d108 0034  ld   $34
              d109 0021  ld   $21
              d10a 0042  ld   $42
              d10b 0035  ld   $35
              d10c 0053  ld   $53
              d10d 00b8  ld   $b8
              d10e 0099  ld   $99
              d10f 0042  ld   $42
              d110 002b  ld   $2b
              d111 0042  ld   $42
              d112 0011  ld   $11
              d113 0021  ld   $21
              d114 0010  ld   $10
              d115 00fc  ld   $fc
              d116 0042  ld   $42
              d117 0090  ld   $90
              d118 00ba  ld   $ba
              d119 0099  ld   $99
              d11a 0042  ld   $42
              d11b 002b  ld   $2b
              d11c 0042  ld   $42
              d11d 0021  ld   $21
              d11e 0034  ld   $34
              d11f 00e6  ld   $e6
              d120 0001  ld   $01
              d121 0035  ld   $35
              d122 004d  ld   $4d
              d123 00a6  ld   $a6
              d124 00ff  ld   $ff
              d125 0093  ld   $93
              d126 001b  ld   $1b
              d127 00ff  ld   $ff
              d128 005f  ld   $5f
              d129 00a0  ld   $a0
              d12a 0057  ld   $57
              d12b 00cd  ld   $cd
              d12c 00d6  ld   $d6
              d12d 0075  ld   $75
              d12e 002b  ld   $2b
              d12f 003a  ld   $3a
              d130 0021  ld   $21
              d131 0044  ld   $44
              d132 002b  ld   $2b
              d133 003c  ld   $3c
              d134 0059  ld   $59
              d135 00ff  ld   $ff
              d136 00f0  ld   $f0
              d137 003c  ld   $3c
              d138 0093  ld   $93
              d139 003c  ld   $3c
              d13a 00f0  ld   $f0
              d13b 003c  ld   $3c
              d13c 0093  ld   $93
              d13d 003c  ld   $3c
              d13e 0059  ld   $59
              d13f 0006  ld   $06
              d140 002b  ld   $2b
              d141 0034  ld   $34
              d142 0021  ld   $21
              d143 003a  ld   $3a
              d144 00ad  ld   $ad
              d145 0093  ld   $93
              d146 003a  ld   $3a
              d147 00f0  ld   $f0
              d148 003c  ld   $3c
              d149 0093  ld   $93
              d14a 003c  ld   $3c
              d14b 0021  ld   $21
              d14c 0034  ld   $34
              d14d 00e6  ld   $e6
              d14e 0001  ld   $01
              d14f 0035  ld   $35
              d150 004d  ld   $4d
              d151 00b3  ld   $b3
              d152 0021  ld   $21
              d153 0044  ld   $44
              d154 002b  ld   $2b
              d155 0024  ld   $24
              d156 00e3  ld   $e3
              d157 0008  ld   $08
              d158 002b  ld   $2b
              d159 0026  ld   $26
              d15a 0011  ld   $11
              d15b 0015  ld   $15
              d15c 000b  ld   $0b
              d15d 002b  ld   $2b
              d15e 0022  ld   $22
              d15f 00b4  ld   $b4
              d160 00cb  ld   $cb
              d161 0063  ld   $63
              d162 00ff  ld   $ff
              d163 00cd  ld   $cd
              d164 00f2  ld   $f2
              d165 0075  ld   $75
              d166 0059  ld   $59
              d167 0008  ld   $08
              d168 002b  ld   $2b
              d169 0034  ld   $34
              d16a 0085  ld   $85
              d16b 00bc  ld   $bc
              d16c 005d  ld   $5d
              d16d 0082  ld   $82
              d16e 0080  ld   $80
              d16f 0035  ld   $35
              d170 003f  ld   $3f
              d171 00ec  ld   $ec
              d172 0021  ld   $21
              d173 0034  ld   $34
              d174 00e6  ld   $e6
              d175 0001  ld   $01
              d176 0035  ld   $35
              d177 004d  ld   $4d
              d178 00db  ld   $db
              d179 001a  ld   $1a
              d17a 002a  ld   $2a
              d17b 002b  ld   $2b
              d17c 0038  ld   $38
              d17d 0063  ld   $63
              d17e 00ff  ld   $ff
              d17f 0093  ld   $93
              d180 001b  ld   $1b
              d181 00ff  ld   $ff
              d182 0060  ld   $60
              d183 00a0  ld   $a0
              d184 004f  ld   $4f
              d185 00cd  ld   $cd
              d186 00c3  ld   $c3
              d187 0075  ld   $75
              d188 0085  ld   $85
              d189 00cc  ld   $cc
              d18a 0058  ld   $58
              d18b 0085  ld   $85
              d18c 00a2  ld   $a2
              d18d 0059  ld   $59
              d18e 0085  ld   $85
              d18f 00c8  ld   $c8
              d190 005b  ld   $5b
              d191 0021  ld   $21
              d192 0036  ld   $36
              d193 00e6  ld   $e6
              d194 0002  ld   $02
              d195 0035  ld   $35
              d196 0072  ld   $72
              d197 00b4  ld   $b4
              d198 0085  ld   $85
              d199 00a2  ld   $a2
              d19a 005a  ld   $5a
              d19b 0021  ld   $21
              d19c 0036  ld   $36
              d19d 00e6  ld   $e6
              d19e 0002  ld   $02
              d19f 0035  ld   $35
              d1a0 004d  ld   $4d
              d1a1 00be  ld   $be
              d1a2 0085  ld   $85
              d1a3 00df  ld   $df
              d1a4 005b  ld   $5b
              d1a5 0085  ld   $85
              d1a6 00af  ld   $af
              d1a7 005d  ld   $5d
              d1a8 0063  ld   $63
              d1a9 00ff  ld   $ff
              d1aa 00cd  ld   $cd
              d1ab 00ea  ld   $ea
              d1ac 0075  ld   $75
              d1ad 0085  ld   $85
              d1ae 00a2  ld   $a2
              d1af 0063  ld   $63
              d1b0 00cd  ld   $cd
              d1b1 00d3  ld   $d3
              d1b2 0056  ld   $56
              d1b3 006f  ld   $6f
              d1b4 006c  ld   $6c
              d1b5 002e  ld   $2e
              d1b6 0049  ld   $49
              d1b7 0044  ld   $44
              d1b8 0020  ld   $20
              d1b9 0000  ld   $00
              d1ba 0085  ld   $85
              d1bb 00a2  ld   $a2
              d1bc 0069  ld   $69
              d1bd 0059  ld   $59
              d1be 000b  ld   $0b
              d1bf 0099  ld   $99
              d1c0 0030  ld   $30
              d1c1 00f6  ld   $f6
              d1c2 002b  ld   $2b
              d1c3 0046  ld   $46
              d1c4 0085  ld   $85
              d1c5 00ce  ld   $ce
              d1c6 0067  ld   $67
              d1c7 0011  ld   $11
              d1c8 0000  ld   $00
              d1c9 0002  ld   $02
              d1ca 00fc  ld   $fc
              d1cb 0046  ld   $46
              d1cc 0085  ld   $85
              d1cd 00bb  ld   $bb
              d1ce 0068  ld   $68
              d1cf 0063  ld   $63
              d1d0 00ff  ld   $ff
              d1d1 0093  ld   $93
              d1d2 001b  ld   $1b
              d1d3 00ff  ld   $ff
              d1d4 0061  ld   $61
              d1d5 00a0  ld   $a0
              d1d6 005e  ld   $5e
              d1d7 00cd  ld   $cd
              d1d8 00ea  ld   $ea
              d1d9 0075  ld   $75
              d1da 0059  ld   $59
              d1db 0000  ld   $00
              d1dc 002b  ld   $2b
              d1dd 0040  ld   $40
              d1de 002b  ld   $2b
              d1df 003e  ld   $3e
              d1e0 0085  ld   $85
              d1e1 00a2  ld   $a2
              d1e2 0063  ld   $63
              d1e3 00cd  ld   $cd
              d1e4 00b1  ld   $b1
              d1e5 004d  ld   $4d
              d1e6 0042  ld   $42
              d1e7 0052  ld   $52
              d1e8 0020  ld   $20
              d1e9 0000  ld   $00
              d1ea 0085  ld   $85
              d1eb 00a2  ld   $a2
              d1ec 0069  ld   $69
              d1ed 0011  ld   $11
              d1ee 00fe  ld   $fe
              d1ef 0001  ld   $01
              d1f0 0099  ld   $99
              d1f1 0030  ld   $30
              d1f2 00f6  ld   $f6
              d1f3 002b  ld   $2b
              d1f4 0046  ld   $46
              d1f5 0011  ld   $11
              d1f6 0055  ld   $55
              d1f7 00aa  ld   $aa
              d1f8 00fc  ld   $fc
              d1f9 0046  ld   $46
              d1fa 0035  ld   $35
              d1fb fe00  bra  ac          ;+-----------------------------------+
              d1fc fcfd  bra  $d1fd       ;|                                   |
              d1fd 1418  ld   $18,y       ;| Trampoline for page $d100 lookups |
              d1fe e006  jmp  y,$06       ;|                                   |
              d1ff c218  st   [$18]       ;+-----------------------------------+
              d200 0072  ld   $72
              d201 00e8  ld   $e8
              d202 0011  ld   $11
              d203 00c6  ld   $c6
              d204 0001  ld   $01
              d205 0099  ld   $99
              d206 0030  ld   $30
              d207 00f6  ld   $f6
              d208 002b  ld   $2b
              d209 0040  ld   $40
              d20a 0011  ld   $11
              d20b 00c8  ld   $c8
              d20c 0001  ld   $01
              d20d 0099  ld   $99
              d20e 0030  ld   $30
              d20f 00f6  ld   $f6
              d210 002b  ld   $2b
              d211 003e  ld   $3e
              d212 0011  ld   $11
              d213 00c2  ld   $c2
              d214 0001  ld   $01
              d215 0099  ld   $99
              d216 0030  ld   $30
              d217 00ad  ld   $ad
              d218 002b  ld   $2b
              d219 0046  ld   $46
              d21a 0085  ld   $85
              d21b 00a2  ld   $a2
              d21c 0068  ld   $68
              d21d 0059  ld   $59
              d21e 000b  ld   $0b
              d21f 00fc  ld   $fc
              d220 0046  ld   $46
              d221 0035  ld   $35
              d222 003f  ld   $3f
              d223 00e8  ld   $e8
              d224 008c  ld   $8c
              d225 0007  ld   $07
              d226 0063  ld   $63
              d227 00ff  ld   $ff
              d228 00cd  ld   $cd
              d229 00f9  ld   $f9
              d22a 002b  ld   $2b
              d22b 0048  ld   $48
              d22c 0099  ld   $99
              d22d 0048  ld   $48
              d22e 00e6  ld   $e6
              d22f 0001  ld   $01
              d230 005e  ld   $5e
              d231 0019  ld   $19
              d232 0088  ld   $88
              d233 00ff  ld   $ff
              d234 002b  ld   $2b
              d235 004a  ld   $4a
              d236 00ff  ld   $ff
              d237 0093  ld   $93
              d238 001b  ld   $1b
              d239 00ff  ld   $ff
              d23a 0062  ld   $62
              d23b 00a0  ld   $a0
              d23c 0060  ld   $60
              d23d 00cd  ld   $cd
              d23e 00fb  ld   $fb
              d23f 0075  ld   $75
              d240 0059  ld   $59
              d241 000d  ld   $0d
              d242 0099  ld   $99
              d243 0030  ld   $30
              d244 00ad  ld   $ad
              d245 0085  ld   $85
              d246 00ee  ld   $ee
              d247 0061  ld   $61
              d248 0021  ld   $21
              d249 0040  ld   $40
              d24a 002b  ld   $2b
              d24b 004c  ld   $4c
              d24c 0021  ld   $21
              d24d 003e  ld   $3e
              d24e 002b  ld   $2b
              d24f 004e  ld   $4e
              d250 0059  ld   $59
              d251 000e  ld   $0e
              d252 0099  ld   $99
              d253 0030  ld   $30
              d254 00f6  ld   $f6
              d255 002b  ld   $2b
              d256 0050  ld   $50
              d257 0085  ld   $85
              d258 00d2  ld   $d2
              d259 0066  ld   $66
              d25a 002b  ld   $2b
              d25b 0052  ld   $52
              d25c 0021  ld   $21
              d25d 004e  ld   $4e
              d25e 002b  ld   $2b
              d25f 0054  ld   $54
              d260 0059  ld   $59
              d261 0024  ld   $24
              d262 0099  ld   $99
              d263 0030  ld   $30
              d264 00f6  ld   $f6
              d265 002b  ld   $2b
              d266 0050  ld   $50
              d267 0059  ld   $59
              d268 0026  ld   $26
              d269 0099  ld   $99
              d26a 0030  ld   $30
              d26b 00f6  ld   $f6
              d26c 002b  ld   $2b
              d26d 0056  ld   $56
              d26e 0085  ld   $85
              d26f 00d6  ld   $d6
              d270 0066  ld   $66
              d271 0085  ld   $85
              d272 00d6  ld   $d6
              d273 0066  ld   $66
              d274 0059  ld   $59
              d275 0000  ld   $00
              d276 00b8  ld   $b8
              d277 0048  ld   $48
              d278 00b8  ld   $b8
              d279 0048  ld   $48
              d27a 002b  ld   $2b
              d27b 0050  ld   $50
              d27c 0011  ld   $11
              d27d 00ff  ld   $ff
              d27e 00ff  ld   $ff
              d27f 002b  ld   $2b
              d280 0056  ld   $56
              d281 0085  ld   $85
              d282 00d6  ld   $d6
              d283 0066  ld   $66
              d284 002b  ld   $2b
              d285 0058  ld   $58
              d286 0021  ld   $21
              d287 004e  ld   $4e
              d288 002b  ld   $2b
              d289 005a  ld   $5a
              d28a 0059  ld   $59
              d28b 002c  ld   $2c
              d28c 0099  ld   $99
              d28d 0030  ld   $30
              d28e 00f6  ld   $f6
              d28f 002b  ld   $2b
              d290 005c  ld   $5c
              d291 0059  ld   $59
              d292 002e  ld   $2e
              d293 0099  ld   $99
              d294 0030  ld   $30
              d295 00f6  ld   $f6
              d296 002b  ld   $2b
              d297 005e  ld   $5e
              d298 0063  ld   $63
              d299 00ff  ld   $ff
              d29a 0093  ld   $93
              d29b 001b  ld   $1b
              d29c 00ff  ld   $ff
              d29d 0063  ld   $63
              d29e 00a0  ld   $a0
              d29f 003e  ld   $3e
              d2a0 00cd  ld   $cd
              d2a1 00d9  ld   $d9
              d2a2 0075  ld   $75
              d2a3 0085  ld   $85
              d2a4 00a2  ld   $a2
              d2a5 005d  ld   $5d
              d2a6 0021  ld   $21
              d2a7 0036  ld   $36
              d2a8 00e6  ld   $e6
              d2a9 0002  ld   $02
              d2aa 0035  ld   $35
              d2ab 004d  ld   $4d
              d2ac 00ae  ld   $ae
              d2ad 0085  ld   $85
              d2ae 00a2  ld   $a2
              d2af 0066  ld   $66
              d2b0 0085  ld   $85
              d2b1 00a2  ld   $a2
              d2b2 005c  ld   $5c
              d2b3 001a  ld   $1a
              d2b4 002a  ld   $2a
              d2b5 008c  ld   $8c
              d2b6 00fe  ld   $fe
              d2b7 0035  ld   $35
              d2b8 0072  ld   $72
              d2b9 00d7  ld   $d7
              d2ba 0011  ld   $11
              d2bb 0015  ld   $15
              d2bc 000b  ld   $0b
              d2bd 002b  ld   $2b
              d2be 0022  ld   $22
              d2bf 0011  ld   $11
              d2c0 0000  ld   $00
              d2c1 007c  ld   $7c
              d2c2 002b  ld   $2b
              d2c3 0024  ld   $24
              d2c4 0021  ld   $21
              d2c5 0030  ld   $30
              d2c6 002b  ld   $2b
              d2c7 0026  ld   $26
              d2c8 00b4  ld   $b4
              d2c9 00cb  ld   $cb
              d2ca 0093  ld   $93
              d2cb 0027  ld   $27
              d2cc 00b4  ld   $b4
              d2cd 00cb  ld   $cb
              d2ce 0085  ld   $85
              d2cf 00bc  ld   $bc
              d2d0 005d  ld   $5d
              d2d1 0085  ld   $85
              d2d2 00bc  ld   $bc
              d2d3 005d  ld   $5d
              d2d4 0085  ld   $85
              d2d5 00af  ld   $af
              d2d6 005d  ld   $5d
              d2d7 0059  ld   $59
              d2d8 0000  ld   $00
              d2d9 0063  ld   $63
              d2da 00ff  ld   $ff
              d2db 0093  ld   $93
              d2dc 001b  ld   $1b
              d2dd 00ff  ld   $ff
              d2de 0064  ld   $64
              d2df 00a0  ld   $a0
              d2e0 0050  ld   $50
              d2e1 00cd  ld   $cd
              d2e2 00eb  ld   $eb
              d2e3 0075  ld   $75
              d2e4 0021  ld   $21
              d2e5 0060  ld   $60
              d2e6 00fc  ld   $fc
              d2e7 0062  ld   $62
              d2e8 0035  ld   $35
              d2e9 0072  ld   $72
              d2ea 00ae  ld   $ae
              d2eb 0021  ld   $21
              d2ec 0064  ld   $64
              d2ed 00fc  ld   $fc
              d2ee 0066  ld   $66
              d2ef 001a  ld   $1a
              d2f0 0019  ld   $19
              d2f1 0035  ld   $35
              d2f2 0072  ld   $72
              d2f3 00b5  ld   $b5
              d2f4 0021  ld   $21
              d2f5 0066  ld   $66
              d2f6 0090  ld   $90
              d2f7 00bb  ld   $bb
              d2f8 0021  ld   $21
              d2f9 0064  ld   $64
              d2fa 0088  ld   $88
              d2fb fe00  bra  ac          ;+-----------------------------------+
              d2fc fcfd  bra  $d2fd       ;|                                   |
              d2fd 1418  ld   $18,y       ;| Trampoline for page $d200 lookups |
              d2fe e006  jmp  y,$06       ;|                                   |
              d2ff c218  st   [$18]       ;+-----------------------------------+
              d300 00ff  ld   $ff
              d301 00e3  ld   $e3
              d302 0001  ld   $01
              d303 00b8  ld   $b8
              d304 0064  ld   $64
              d305 002b  ld   $2b
              d306 0068  ld   $68
              d307 0035  ld   $35
              d308 003f  ld   $3f
              d309 00e5  ld   $e5
              d30a 0011  ld   $11
              d30b 00ff  ld   $ff
              d30c 0001  ld   $01
              d30d 00f8  ld   $f8
              d30e 0064  ld   $64
              d30f 0035  ld   $35
              d310 003f  ld   $3f
              d311 00ce  ld   $ce
              d312 0099  ld   $99
              d313 0030  ld   $30
              d314 0090  ld   $90
              d315 00e5  ld   $e5
              d316 0085  ld   $85
              d317 00a2  ld   $a2
              d318 0063  ld   $63
              d319 0035  ld   $35
              d31a 0072  ld   $72
              d31b 00db  ld   $db
              d31c 0085  ld   $85
              d31d 00a2  ld   $a2
              d31e 0075  ld   $75
              d31f 0021  ld   $21
              d320 0030  ld   $30
              d321 0090  ld   $90
              d322 00e5  ld   $e5
              d323 0021  ld   $21
              d324 0060  ld   $60
              d325 002b  ld   $2b
              d326 0062  ld   $62
              d327 0021  ld   $21
              d328 0064  ld   $64
              d329 002b  ld   $2b
              d32a 0066  ld   $66
              d32b 0059  ld   $59
              d32c 0000  ld   $00
              d32d 002b  ld   $2b
              d32e 006a  ld   $6a
              d32f 0021  ld   $21
              d330 0068  ld   $68
              d331 0063  ld   $63
              d332 00ff  ld   $ff
              d333 0093  ld   $93
              d334 001b  ld   $1b
              d335 00ff  ld   $ff
              d336 0065  ld   $65
              d337 00a0  ld   $a0
              d338 0060  ld   $60
              d339 00cd  ld   $cd
              d33a 00cb  ld   $cb
              d33b 0075  ld   $75
              d33c 0059  ld   $59
              d33d 0000  ld   $00
              d33e 002b  ld   $2b
              d33f 0064  ld   $64
              d340 002b  ld   $2b
              d341 0060  ld   $60
              d342 0021  ld   $21
              d343 003a  ld   $3a
              d344 00e3  ld   $e3
              d345 001c  ld   $1c
              d346 00f6  ld   $f6
              d347 002b  ld   $2b
              d348 0066  ld   $66
              d349 0021  ld   $21
              d34a 003a  ld   $3a
              d34b 00e3  ld   $e3
              d34c 001e  ld   $1e
              d34d 00f6  ld   $f6
              d34e 002b  ld   $2b
              d34f 0062  ld   $62
              d350 0021  ld   $21
              d351 003a  ld   $3a
              d352 00e3  ld   $e3
              d353 001a  ld   $1a
              d354 00f6  ld   $f6
              d355 002b  ld   $2b
              d356 004c  ld   $4c
              d357 0021  ld   $21
              d358 003a  ld   $3a
              d359 00e3  ld   $e3
              d35a 0014  ld   $14
              d35b 00f6  ld   $f6
              d35c 002b  ld   $2b
              d35d 004e  ld   $4e
              d35e 0085  ld   $85
              d35f 00a2  ld   $a2
              d360 0076  ld   $76
              d361 0085  ld   $85
              d362 00cf  ld   $cf
              d363 0065  ld   $65
              d364 0063  ld   $63
              d365 00ff  ld   $ff
              d366 00cd  ld   $cd
              d367 00fb  ld   $fb
              d368 0075  ld   $75
              d369 001a  ld   $1a
              d36a 004f  ld   $4f
              d36b 0082  ld   $82
              d36c 000f  ld   $0f
              d36d 005e  ld   $5e
              d36e 004f  ld   $4f
              d36f 0059  ld   $59
              d370 0001  ld   $01
              d371 002b  ld   $2b
              d372 0046  ld   $46
              d373 00b8  ld   $b8
              d374 0048  ld   $48
              d375 0035  ld   $35
              d376 0053  ld   $53
              d377 00e6  ld   $e6
              d378 0085  ld   $85
              d379 00c2  ld   $c2
              d37a 0066  ld   $66
              d37b 0021  ld   $21
              d37c 0046  ld   $46
              d37d 0099  ld   $99
              d37e 0046  ld   $46
              d37f 0090  ld   $90
              d380 00d6  ld   $d6
              d381 0021  ld   $21
              d382 0058  ld   $58
              d383 002b  ld   $2b
              d384 0050  ld   $50
              d385 0021  ld   $21
              d386 005a  ld   $5a
              d387 002b  ld   $2b
              d388 0056  ld   $56
              d389 0085  ld   $85
              d38a 00d6  ld   $d6
              d38b 0066  ld   $66
              d38c 0021  ld   $21
              d38d 004c  ld   $4c
              d38e 002b  ld   $2b
              d38f 0040  ld   $40
              d390 0021  ld   $21
              d391 004e  ld   $4e
              d392 002b  ld   $2b
              d393 003e  ld   $3e
              d394 0063  ld   $63
              d395 00ff  ld   $ff
              d396 0093  ld   $93
              d397 001b  ld   $1b
              d398 00ff  ld   $ff
              d399 0066  ld   $66
              d39a 00a0  ld   $a0
              d39b 005f  ld   $5f
              d39c 00cd  ld   $cd
              d39d 00be  ld   $be
              d39e 0075  ld   $75
              d39f 0059  ld   $59
              d3a0 0000  ld   $00
              d3a1 005e  ld   $5e
              d3a2 0050  ld   $50
              d3a3 001a  ld   $1a
              d3a4 004c  ld   $4c
              d3a5 005e  ld   $5e
              d3a6 0051  ld   $51
              d3a7 001a  ld   $1a
              d3a8 004d  ld   $4d
              d3a9 005e  ld   $5e
              d3aa 0056  ld   $56
              d3ab 001a  ld   $1a
              d3ac 004e  ld   $4e
              d3ad 005e  ld   $5e
              d3ae 0057  ld   $57
              d3af 0021  ld   $21
              d3b0 0050  ld   $50
              d3b1 002b  ld   $2b
              d3b2 004c  ld   $4c
              d3b3 0021  ld   $21
              d3b4 0056  ld   $56
              d3b5 002b  ld   $2b
              d3b6 004e  ld   $4e
              d3b7 0085  ld   $85
              d3b8 00d6  ld   $d6
              d3b9 0066  ld   $66
              d3ba 0063  ld   $63
              d3bb 00ff  ld   $ff
              d3bc 00cd  ld   $cd
              d3bd 00fa  ld   $fa
              d3be 0075  ld   $75
              d3bf 0021  ld   $21
              d3c0 004c  ld   $4c
              d3c1 002b  ld   $2b
              d3c2 0050  ld   $50
              d3c3 0021  ld   $21
              d3c4 004e  ld   $4e
              d3c5 002b  ld   $2b
              d3c6 0056  ld   $56
              d3c7 0085  ld   $85
              d3c8 00d6  ld   $d6
              d3c9 0066  ld   $66
              d3ca 0021  ld   $21
              d3cb 0056  ld   $56
              d3cc 0063  ld   $63
              d3cd 00ff  ld   $ff
              d3ce 0059  ld   $59
              d3cf 0000  ld   $00
              d3d0 002b  ld   $2b
              d3d1 0056  ld   $56
              d3d2 0021  ld   $21
              d3d3 004c  ld   $4c
              d3d4 00fc  ld   $fc
              d3d5 0050  ld   $50
              d3d6 0035  ld   $35
              d3d7 0053  ld   $53
              d3d8 00df  ld   $df
              d3d9 0021  ld   $21
              d3da 004c  ld   $4c
              d3db 0090  ld   $90
              d3dc 00e2  ld   $e2
              d3dd 0011  ld   $11
              d3de 0000  ld   $00
              d3df 0080  ld   $80
              d3e0 0099  ld   $99
              d3e1 0050  ld   $50
              d3e2 0035  ld   $35
              d3e3 0050  ld   $50
              d3e4 00ed  ld   $ed
              d3e5 0021  ld   $21
              d3e6 004e  ld   $4e
              d3e7 00e3  ld   $e3
              d3e8 0001  ld   $01
              d3e9 002b  ld   $2b
              d3ea 004e  ld   $4e
              d3eb 0021  ld   $21
              d3ec 004e  ld   $4e
              d3ed 0099  ld   $99
              d3ee 0056  ld   $56
              d3ef 002b  ld   $2b
              d3f0 004e  ld   $4e
              d3f1 0021  ld   $21
              d3f2 004c  ld   $4c
              d3f3 0099  ld   $99
              d3f4 0050  ld   $50
              d3f5 002b  ld   $2b
              d3f6 004c  ld   $4c
              d3f7 00ff  ld   $ff
              d3f8 0093  ld   $93
              d3f9 001b  ld   $1b
              d3fa 00ff  ld   $ff
              d3fb fe00  bra  ac          ;+-----------------------------------+
              d3fc fcfd  bra  $d3fd       ;|                                   |
              d3fd 1418  ld   $18,y       ;| Trampoline for page $d300 lookups |
              d3fe e006  jmp  y,$06       ;|                                   |
              d3ff c218  st   [$18]       ;+-----------------------------------+
              d400 0067  ld   $67
              d401 00a0  ld   $a0
              d402 0040  ld   $40
              d403 00cd  ld   $cd
              d404 00b8  ld   $b8
              d405 0075  ld   $75
              d406 00e6  ld   $e6
              d407 0020  ld   $20
              d408 0035  ld   $35
              d409 0053  ld   $53
              d40a 00aa  ld   $aa
              d40b 0059  ld   $59
              d40c 007f  ld   $7f
              d40d 0090  ld   $90
              d40e 00b1  ld   $b1
              d40f 00e6  ld   $e6
              d410 0060  ld   $60
              d411 0035  ld   $35
              d412 0050  ld   $50
              d413 00b1  ld   $b1
              d414 0059  ld   $59
              d415 007f  ld   $7f
              d416 0082  ld   $82
              d417 007f  ld   $7f
              d418 0085  ld   $85
              d419 00a2  ld   $a2
              d41a 006e  ld   $6e
              d41b 0063  ld   $63
              d41c 00ff  ld   $ff
              d41d 00cd  ld   $cd
              d41e 00ca  ld   $ca
              d41f 0075  ld   $75
              d420 0021  ld   $21
              d421 004e  ld   $4e
              d422 0085  ld   $85
              d423 00ce  ld   $ce
              d424 0067  ld   $67
              d425 0021  ld   $21
              d426 004c  ld   $4c
              d427 0085  ld   $85
              d428 00ce  ld   $ce
              d429 0067  ld   $67
              d42a 0085  ld   $85
              d42b 00a2  ld   $a2
              d42c 006d  ld   $6d
              d42d 0063  ld   $63
              d42e 00ff  ld   $ff
              d42f 00cd  ld   $cd
              d430 00db  ld   $db
              d431 0075  ld   $75
              d432 002b  ld   $2b
              d433 0046  ld   $46
              d434 001a  ld   $1a
              d435 0047  ld   $47
              d436 0085  ld   $85
              d437 00a2  ld   $a2
              d438 0068  ld   $68
              d439 001a  ld   $1a
              d43a 0046  ld   $46
              d43b 0085  ld   $85
              d43c 00a2  ld   $a2
              d43d 0068  ld   $68
              d43e 0063  ld   $63
              d43f 00ff  ld   $ff
              d440 0093  ld   $93
              d441 001b  ld   $1b
              d442 00ff  ld   $ff
              d443 0068  ld   $68
              d444 00a0  ld   $a0
              d445 0054  ld   $54
              d446 00cd  ld   $cd
              d447 00b7  ld   $b7
              d448 0075  ld   $75
              d449 00df  ld   $df
              d44a 00fe  ld   $fe
              d44b 00ec  ld   $ec
              d44c 0000  ld   $00
              d44d 00e9  ld   $e9
              d44e 00e9  ld   $e9
              d44f 00e9  ld   $e9
              d450 00e9  ld   $e9
              d451 001a  ld   $1a
              d452 0019  ld   $19
              d453 0085  ld   $85
              d454 00de  ld   $de
              d455 0068  ld   $68
              d456 00ee  ld   $ee
              d457 0000  ld   $00
              d458 00df  ld   $df
              d459 0002  ld   $02
              d45a 0085  ld   $85
              d45b 00de  ld   $de
              d45c 0068  ld   $68
              d45d 0063  ld   $63
              d45e 00ff  ld   $ff
              d45f 00cd  ld   $cd
              d460 00da  ld   $da
              d461 0075  ld   $75
              d462 002b  ld   $2b
              d463 0046  ld   $46
              d464 0035  ld   $35
              d465 0072  ld   $72
              d466 00c8  ld   $c8
              d467 00cd  ld   $cd
              d468 00c6  ld   $c6
              d469 0020  ld   $20
              d46a 004f  ld   $4f
              d46b 004b  ld   $4b
              d46c 000a  ld   $0a
              d46d 0000  ld   $00
              d46e 0090  ld   $90
              d46f 00d3  ld   $d3
              d470 00cd  ld   $cd
              d471 00d3  ld   $d3
              d472 0020  ld   $20
              d473 0046  ld   $46
              d474 0041  ld   $41
              d475 0049  ld   $49
              d476 004c  ld   $4c
              d477 0045  ld   $45
              d478 0044  ld   $44
              d479 000a  ld   $0a
              d47a 0000  ld   $00
              d47b 0085  ld   $85
              d47c 00a2  ld   $a2
              d47d 0069  ld   $69
              d47e 0021  ld   $21
              d47f 0046  ld   $46
              d480 0063  ld   $63
              d481 00ff  ld   $ff
              d482 00cd  ld   $cd
              d483 00ef  ld   $ef
              d484 0075  ld   $75
              d485 0082  ld   $82
              d486 000f  ld   $0f
              d487 00e6  ld   $e6
              d488 000a  ld   $0a
              d489 0035  ld   $35
              d48a 0053  ld   $53
              d48b 00e8  ld   $e8
              d48c 00e3  ld   $e3
              d48d 003a  ld   $3a
              d48e 0090  ld   $90
              d48f 00ea  ld   $ea
              d490 00e3  ld   $e3
              d491 0041  ld   $41
              d492 0085  ld   $85
              d493 00a2  ld   $a2
              d494 006e  ld   $6e
              d495 0063  ld   $63
              d496 00ff  ld   $ff
              d497 0093  ld   $93
              d498 001b  ld   $1b
              d499 00ff  ld   $ff
              d49a 0069  ld   $69
              d49b 00a0  ld   $a0
              d49c 004f  ld   $4f
              d49d 00cd  ld   $cd
              d49e 00be  ld   $be
              d49f 0075  ld   $75
              d4a0 002b  ld   $2b
              d4a1 003c  ld   $3c
              d4a2 0021  ld   $21
              d4a3 003c  ld   $3c
              d4a4 00ad  ld   $ad
              d4a5 0035  ld   $35
              d4a6 003f  ld   $3f
              d4a7 00bc  ld   $bc
              d4a8 008c  ld   $8c
              d4a9 000a  ld   $0a
              d4aa 0035  ld   $35
              d4ab 003f  ld   $3f
              d4ac 00b5  ld   $b5
              d4ad 008c  ld   $8c
              d4ae 000a  ld   $0a
              d4af 0085  ld   $85
              d4b0 00a2  ld   $a2
              d4b1 006e  ld   $6e
              d4b2 0090  ld   $90
              d4b3 00b8  ld   $b8
              d4b4 0085  ld   $85
              d4b5 00a2  ld   $a2
              d4b6 006d  ld   $6d
              d4b7 0093  ld   $93
              d4b8 003c  ld   $3c
              d4b9 0090  ld   $90
              d4ba 00a3  ld   $a3
              d4bb 0063  ld   $63
              d4bc 00ff  ld   $ff
              d4bd 00cd  ld   $cd
              d4be 00ea  ld   $ea
              d4bf 0075  ld   $75
              d4c0 00cd  ld   $cd
              d4c1 00cb  ld   $cb
              d4c2 0056  ld   $56
              d4c3 006f  ld   $6f
              d4c4 006c  ld   $6c
              d4c5 0075  ld   $75
              d4c6 006d  ld   $6d
              d4c7 0065  ld   $65
              d4c8 0020  ld   $20
              d4c9 0000  ld   $00
              d4ca 0085  ld   $85
              d4cb 00a2  ld   $a2
              d4cc 0069  ld   $69
              d4cd 0021  ld   $21
              d4ce 003a  ld   $3a
              d4cf 002b  ld   $2b
              d4d0 003c  ld   $3c
              d4d1 0059  ld   $59
              d4d2 000b  ld   $0b
              d4d3 002b  ld   $2b
              d4d4 0046  ld   $46
              d4d5 0021  ld   $21
              d4d6 003c  ld   $3c
              d4d7 00ad  ld   $ad
              d4d8 0093  ld   $93
              d4d9 003c  ld   $3c
              d4da 0085  ld   $85
              d4db 00a2  ld   $a2
              d4dc 0067  ld   $67
              d4dd 0021  ld   $21
              d4de 0046  ld   $46
              d4df 00e6  ld   $e6
              d4e0 0001  ld   $01
              d4e1 0035  ld   $35
              d4e2 004d  ld   $4d
              d4e3 00d4  ld   $d4
              d4e4 0085  ld   $85
              d4e5 00a2  ld   $a2
              d4e6 006d  ld   $6d
              d4e7 0063  ld   $63
              d4e8 00ff  ld   $ff
              d4e9 0093  ld   $93
              d4ea 001b  ld   $1b
              d4eb 00ff  ld   $ff
              d4ec 006a  ld   $6a
              d4ed 00a0  ld   $a0
              d4ee 0050  ld   $50
              d4ef 00cd  ld   $cd
              d4f0 00b5  ld   $b5
              d4f1 0075  ld   $75
              d4f2 002b  ld   $2b
              d4f3 006c  ld   $6c
              d4f4 0059  ld   $59
              d4f5 0030  ld   $30
              d4f6 002b  ld   $2b
              d4f7 0046  ld   $46
              d4f8 0059  ld   $59
              d4f9 000a  ld   $0a
              d4fa 0085  ld   $85
              d4fb fe00  bra  ac          ;+-----------------------------------+
              d4fc fcfd  bra  $d4fd       ;|                                   |
              d4fd 1418  ld   $18,y       ;| Trampoline for page $d400 lookups |
              d4fe e006  jmp  y,$06       ;|                                   |
              d4ff c218  st   [$18]       ;+-----------------------------------+
              d500 00a2  ld   $a2
              d501 006c  ld   $6c
              d502 0021  ld   $21
              d503 006c  ld   $6c
              d504 00e3  ld   $e3
              d505 0030  ld   $30
              d506 0085  ld   $85
              d507 00a2  ld   $a2
              d508 006e  ld   $6e
              d509 0063  ld   $63
              d50a 00ff  ld   $ff
              d50b 00cd  ld   $cd
              d50c 00eb  ld   $eb
              d50d 0075  ld   $75
              d50e 0011  ld   $11
              d50f 0000  ld   $00
              d510 0006  ld   $06
              d511 002b  ld   $2b
              d512 0022  ld   $22
              d513 0021  ld   $21
              d514 003a  ld   $3a
              d515 00e3  ld   $e3
              d516 0011  ld   $11
              d517 00ad  ld   $ad
              d518 00b4  ld   $b4
              d519 00f6  ld   $f6
              d51a 00e6  ld   $e6
              d51b 0014  ld   $14
              d51c 0035  ld   $35
              d51d 0053  ld   $53
              d51e 00cb  ld   $cb
              d51f 00e3  ld   $e3
              d520 0064  ld   $64
              d521 0085  ld   $85
              d522 00a2  ld   $a2
              d523 006a  ld   $6a
              d524 0011  ld   $11
              d525 006d  ld   $6d
              d526 0006  ld   $06
              d527 002b  ld   $2b
              d528 0022  ld   $22
              d529 0021  ld   $21
              d52a 003a  ld   $3a
              d52b 00e3  ld   $e3
              d52c 0010  ld   $10
              d52d 00f6  ld   $f6
              d52e 00b4  ld   $b4
              d52f 00f5  ld   $f5
              d530 0082  ld   $82
              d531 000f  ld   $0f
              d532 0085  ld   $85
              d533 00a2  ld   $a2
              d534 006a  ld   $6a
              d535 0021  ld   $21
              d536 003a  ld   $3a
              d537 00e3  ld   $e3
              d538 0010  ld   $10
              d539 00ad  ld   $ad
              d53a 0082  ld   $82
              d53b 001f  ld   $1f
              d53c 0085  ld   $85
              d53d 00a2  ld   $a2
              d53e 006a  ld   $6a
              d53f 0063  ld   $63
              d540 00ff  ld   $ff
              d541 0093  ld   $93
              d542 001b  ld   $1b
              d543 00ff  ld   $ff
              d544 006b  ld   $6b
              d545 00a0  ld   $a0
              d546 0055  ld   $55
              d547 00cd  ld   $cd
              d548 00bb  ld   $bb
              d549 0075  ld   $75
              d54a 0085  ld   $85
              d54b 00b9  ld   $b9
              d54c 006a  ld   $6a
              d54d 0059  ld   $59
              d54e 0004  ld   $04
              d54f 0099  ld   $99
              d550 006e  ld   $6e
              d551 002b  ld   $2b
              d552 006e  ld   $6e
              d553 0085  ld   $85
              d554 00a2  ld   $a2
              d555 0070  ld   $70
              d556 0059  ld   $59
              d557 0004  ld   $04
              d558 0099  ld   $99
              d559 006e  ld   $6e
              d55a 002b  ld   $2b
              d55b 006e  ld   $6e
              d55c 0085  ld   $85
              d55d 00bf  ld   $bf
              d55e 006b  ld   $6b
              d55f 0085  ld   $85
              d560 00a2  ld   $a2
              d561 006d  ld   $6d
              d562 0063  ld   $63
              d563 00ff  ld   $ff
              d564 00cd  ld   $cd
              d565 00f0  ld   $f0
              d566 0075  ld   $75
              d567 0021  ld   $21
              d568 003a  ld   $3a
              d569 002b  ld   $2b
              d56a 003c  ld   $3c
              d56b 0059  ld   $59
              d56c 000b  ld   $0b
              d56d 002b  ld   $2b
              d56e 0046  ld   $46
              d56f 008c  ld   $8c
              d570 0003  ld   $03
              d571 0035  ld   $35
              d572 0072  ld   $72
              d573 00d8  ld   $d8
              d574 0021  ld   $21
              d575 003c  ld   $3c
              d576 00ad  ld   $ad
              d577 008c  ld   $8c
              d578 0020  ld   $20
              d579 0035  ld   $35
              d57a 003f  ld   $3f
              d57b 00d8  ld   $d8
              d57c 0059  ld   $59
              d57d 002e  ld   $2e
              d57e 0085  ld   $85
              d57f 00a2  ld   $a2
              d580 006e  ld   $6e
              d581 0021  ld   $21
              d582 003c  ld   $3c
              d583 00ad  ld   $ad
              d584 0093  ld   $93
              d585 003c  ld   $3c
              d586 008c  ld   $8c
              d587 0020  ld   $20
              d588 0035  ld   $35
              d589 003f  ld   $3f
              d58a 00e7  ld   $e7
              d58b 008c  ld   $8c
              d58c 0020  ld   $20
              d58d 0085  ld   $85
              d58e 00a2  ld   $a2
              d58f 0067  ld   $67
              d590 0021  ld   $21
              d591 0046  ld   $46
              d592 00e6  ld   $e6
              d593 0001  ld   $01
              d594 0035  ld   $35
              d595 004d  ld   $4d
              d596 00c4  ld   $c4
              d597 0063  ld   $63
              d598 00ff  ld   $ff
              d599 0093  ld   $93
              d59a 001b  ld   $1b
              d59b 00ff  ld   $ff
              d59c 006c  ld   $6c
              d59d 00a0  ld   $a0
              d59e 002c  ld   $2c
              d59f 00cd  ld   $cd
              d5a0 00c7  ld   $c7
              d5a1 0075  ld   $75
              d5a2 002b  ld   $2b
              d5a3 0034  ld   $34
              d5a4 0021  ld   $21
              d5a5 006c  ld   $6c
              d5a6 00b8  ld   $b8
              d5a7 0034  ld   $34
              d5a8 0035  ld   $35
              d5a9 0050  ld   $50
              d5aa 00b0  ld   $b0
              d5ab 002b  ld   $2b
              d5ac 006c  ld   $6c
              d5ad 0093  ld   $93
              d5ae 0046  ld   $46
              d5af 0090  ld   $90
              d5b0 00a5  ld   $a5
              d5b1 0021  ld   $21
              d5b2 0046  ld   $46
              d5b3 0035  ld   $35
              d5b4 0072  ld   $72
              d5b5 00bc  ld   $bc
              d5b6 0059  ld   $59
              d5b7 0020  ld   $20
              d5b8 0085  ld   $85
              d5b9 00a2  ld   $a2
              d5ba 006e  ld   $6e
              d5bb 0090  ld   $90
              d5bc 00c5  ld   $c5
              d5bd 0088  ld   $88
              d5be 0030  ld   $30
              d5bf 0085  ld   $85
              d5c0 00a2  ld   $a2
              d5c1 006e  ld   $6e
              d5c2 0059  ld   $59
              d5c3 0030  ld   $30
              d5c4 002b  ld   $2b
              d5c5 0046  ld   $46
              d5c6 0063  ld   $63
              d5c7 00ff  ld   $ff
              d5c8 0093  ld   $93
              d5c9 001b  ld   $1b
              d5ca 00ff  ld   $ff
              d5cb 006d  ld   $6d
              d5cc 00a0  ld   $a0
              d5cd 004c  ld   $4c
              d5ce 00cd  ld   $cd
              d5cf 00e7  ld   $e7
              d5d0 0011  ld   $11
              d5d1 0000  ld   $00
              d5d2 003f  ld   $3f
              d5d3 002b  ld   $2b
              d5d4 0024  ld   $24
              d5d5 0059  ld   $59
              d5d6 0000  ld   $00
              d5d7 005e  ld   $5e
              d5d8 006e  ld   $6e
              d5d9 0011  ld   $11
              d5da 0020  ld   $20
              d5db 0001  ld   $01
              d5dc 00ad  ld   $ad
              d5dd 005e  ld   $5e
              d5de 006f  ld   $6f
              d5df 0021  ld   $21
              d5e0 006e  ld   $6e
              d5e1 002b  ld   $2b
              d5e2 0028  ld   $28
              d5e3 005e  ld   $5e
              d5e4 0026  ld   $26
              d5e5 0011  ld   $11
              d5e6 00e1  ld   $e1
              d5e7 0004  ld   $04
              d5e8 002b  ld   $2b
              d5e9 0022  ld   $22
              d5ea 00b4  ld   $b4
              d5eb 00cb  ld   $cb
              d5ec 0093  ld   $93
              d5ed 0028  ld   $28
              d5ee 001a  ld   $1a
              d5ef 0028  ld   $28
              d5f0 008c  ld   $8c
              d5f1 00a0  ld   $a0
              d5f2 0035  ld   $35
              d5f3 0072  ld   $72
              d5f4 00b5  ld   $b5
              d5f5 0059  ld   $59
              d5f6 0001  ld   $01
              d5f7 005e  ld   $5e
              d5f8 0035  ld   $35
              d5f9 0059  ld   $59
              d5fa 00c0  ld   $c0
              d5fb fe00  bra  ac          ;+-----------------------------------+
              d5fc fcfd  bra  $d5fd       ;|                                   |
              d5fd 1418  ld   $18,y       ;| Trampoline for page $d500 lookups |
              d5fe e006  jmp  y,$06       ;|                                   |
              d5ff c218  st   [$18]       ;+-----------------------------------+
              d600 00e3  ld   $e3
              d601 001e  ld   $1e
              d602 005e  ld   $5e
              d603 0034  ld   $34
              d604 0021  ld   $21
              d605 0034  ld   $34
              d606 00ad  ld   $ad
              d607 00e6  ld   $e6
              d608 0070  ld   $70
              d609 0035  ld   $35
              d60a 0053  ld   $53
              d60b 00db  ld   $db
              d60c 00e3  ld   $e3
              d60d 0078  ld   $78
              d60e 0090  ld   $90
              d60f 00dd  ld   $dd
              d610 00e3  ld   $e3
              d611 0018  ld   $18
              d612 00f0  ld   $f0
              d613 0034  ld   $34
              d614 001a  ld   $1a
              d615 0034  ld   $34
              d616 00e6  ld   $e6
              d617 0020  ld   $20
              d618 0035  ld   $35
              d619 004d  ld   $4d
              d61a 00cb  ld   $cb
              d61b 00ff  ld   $ff
              d61c 0093  ld   $93
              d61d 001b  ld   $1b
              d61e 00ff  ld   $ff
              d61f 006e  ld   $6e
              d620 00a0  ld   $a0
              d621 004e  ld   $4e
              d622 00cd  ld   $cd
              d623 00e9  ld   $e9
              d624 00e6  ld   $e6
              d625 0052  ld   $52
              d626 0035  ld   $35
              d627 0053  ld   $53
              d628 00ae  ld   $ae
              d629 00e3  ld   $e3
              d62a 0032  ld   $32
              d62b 002b  ld   $2b
              d62c 0034  ld   $34
              d62d 0011  ld   $11
              d62e 0000  ld   $00
              d62f 0007  ld   $07
              d630 0090  ld   $90
              d631 00b3  ld   $b3
              d632 002b  ld   $2b
              d633 0034  ld   $34
              d634 0011  ld   $11
              d635 0000  ld   $00
              d636 0008  ld   $08
              d637 002b  ld   $2b
              d638 0070  ld   $70
              d639 0021  ld   $21
              d63a 0034  ld   $34
              d63b 00e9  ld   $e9
              d63c 00e9  ld   $e9
              d63d 0099  ld   $99
              d63e 0034  ld   $34
              d63f 0099  ld   $99
              d640 0070  ld   $70
              d641 002b  ld   $2b
              d642 0070  ld   $70
              d643 0011  ld   $11
              d644 0000  ld   $00
              d645 003f  ld   $3f
              d646 002b  ld   $2b
              d647 0024  ld   $24
              d648 0021  ld   $21
              d649 006e  ld   $6e
              d64a 002b  ld   $2b
              d64b 0028  ld   $28
              d64c 00e3  ld   $e3
              d64d 0006  ld   $06
              d64e 002b  ld   $2b
              d64f 006e  ld   $6e
              d650 0011  ld   $11
              d651 00e1  ld   $e1
              d652 0004  ld   $04
              d653 002b  ld   $2b
              d654 0022  ld   $22
              d655 0059  ld   $59
              d656 0005  ld   $05
              d657 002b  ld   $2b
              d658 0034  ld   $34
              d659 0021  ld   $21
              d65a 0070  ld   $70
              d65b 007f  ld   $7f
              d65c 0000  ld   $00
              d65d 005e  ld   $5e
              d65e 0026  ld   $26
              d65f 00b4  ld   $b4
              d660 00cb  ld   $cb
              d661 0093  ld   $93
              d662 0070  ld   $70
              d663 0093  ld   $93
              d664 0028  ld   $28
              d665 0021  ld   $21
              d666 0034  ld   $34
              d667 00e6  ld   $e6
              d668 0001  ld   $01
              d669 0035  ld   $35
              d66a 004d  ld   $4d
              d66b 00d3  ld   $d3
              d66c 00ff  ld   $ff
              d66d 0093  ld   $93
              d66e 001b  ld   $1b
              d66f 00ff  ld   $ff
              d670 006f  ld   $6f
              d671 00a0  ld   $a0
              d672 004f  ld   $4f
              d673 00cd  ld   $cd
              d674 00ea  ld   $ea
              d675 0075  ld   $75
              d676 0085  ld   $85
              d677 00a2  ld   $a2
              d678 0064  ld   $64
              d679 0021  ld   $21
              d67a 006a  ld   $6a
              d67b 002b  ld   $2b
              d67c 003a  ld   $3a
              d67d 00ad  ld   $ad
              d67e 0035  ld   $35
              d67f 003f  ld   $3f
              d680 00e8  ld   $e8
              d681 008c  ld   $8c
              d682 00e5  ld   $e5
              d683 0035  ld   $35
              d684 003f  ld   $3f
              d685 00e1  ld   $e1
              d686 0021  ld   $21
              d687 003a  ld   $3a
              d688 00e3  ld   $e3
              d689 000b  ld   $0b
              d68a 00ad  ld   $ad
              d68b 002b  ld   $2b
              d68c 0046  ld   $46
              d68d 008c  ld   $8c
              d68e 000f  ld   $0f
              d68f 0035  ld   $35
              d690 003f  ld   $3f
              d691 00e1  ld   $e1
              d692 0082  ld   $82
              d693 0002  ld   $02
              d694 0035  ld   $35
              d695 003f  ld   $3f
              d696 00e1  ld   $e1
              d697 0021  ld   $21
              d698 0046  ld   $46
              d699 0082  ld   $82
              d69a 0008  ld   $08
              d69b 0035  ld   $35
              d69c 003f  ld   $3f
              d69d 00ce  ld   $ce
              d69e 0085  ld   $85
              d69f 00c2  ld   $c2
              d6a0 0069  ld   $69
              d6a1 0090  ld   $90
              d6a2 00e1  ld   $e1
              d6a3 0085  ld   $85
              d6a4 00a2  ld   $a2
              d6a5 006b  ld   $6b
              d6a6 0085  ld   $85
              d6a7 00a2  ld   $a2
              d6a8 0074  ld   $74
              d6a9 0035  ld   $35
              d6aa 0072  ld   $72
              d6ab 00e1  ld   $e1
              d6ac 0059  ld   $59
              d6ad 00d0  ld   $d0
              d6ae 00f0  ld   $f0
              d6af 0032  ld   $32
              d6b0 0085  ld   $85
              d6b1 00a2  ld   $a2
              d6b2 0073  ld   $73
              d6b3 0085  ld   $85
              d6b4 00cd  ld   $cd
              d6b5 0074  ld   $74
              d6b6 0059  ld   $59
              d6b7 0020  ld   $20
              d6b8 0085  ld   $85
              d6b9 00c6  ld   $c6
              d6ba 0075  ld   $75
              d6bb 0090  ld   $90
              d6bc 00a1  ld   $a1
              d6bd 0063  ld   $63
              d6be 00ff  ld   $ff
              d6bf 0093  ld   $93
              d6c0 001b  ld   $1b
              d6c1 00ff  ld   $ff
              d6c2 0070  ld   $70
              d6c3 00a0  ld   $a0
              d6c4 005e  ld   $5e
              d6c5 00cd  ld   $cd
              d6c6 00f9  ld   $f9
              d6c7 0075  ld   $75
              d6c8 0021  ld   $21
              d6c9 003a  ld   $3a
              d6ca 00e3  ld   $e3
              d6cb 000b  ld   $0b
              d6cc 00ad  ld   $ad
              d6cd 0082  ld   $82
              d6ce 0010  ld   $10
              d6cf 0035  ld   $35
              d6d0 003f  ld   $3f
              d6d1 00b7  ld   $b7
              d6d2 00cd  ld   $cd
              d6d3 00b5  ld   $b5
              d6d4 0020  ld   $20
              d6d5 0020  ld   $20
              d6d6 003c  ld   $3c
              d6d7 0044  ld   $44
              d6d8 0049  ld   $49
              d6d9 0052  ld   $52
              d6da 003e  ld   $3e
              d6db 0000  ld   $00
              d6dc 0090  ld   $90
              d6dd 00f4  ld   $f4
              d6de 0021  ld   $21
              d6df 003a  ld   $3a
              d6e0 00e3  ld   $e3
              d6e1 001c  ld   $1c
              d6e2 00f6  ld   $f6
              d6e3 002b  ld   $2b
              d6e4 004c  ld   $4c
              d6e5 0021  ld   $21
              d6e6 003a  ld   $3a
              d6e7 00e3  ld   $e3
              d6e8 001e  ld   $1e
              d6e9 00f6  ld   $f6
              d6ea 002b  ld   $2b
              d6eb 004e  ld   $4e
              d6ec 0085  ld   $85
              d6ed 00a2  ld   $a2
              d6ee 0071  ld   $71
              d6ef 0059  ld   $59
              d6f0 0000  ld   $00
              d6f1 002b  ld   $2b
              d6f2 0070  ld   $70
              d6f3 0059  ld   $59
              d6f4 0008  ld   $08
              d6f5 002b  ld   $2b
              d6f6 0034  ld   $34
              d6f7 0021  ld   $21
              d6f8 003c  ld   $3c
              d6f9 00ad  ld   $ad
              d6fa 008c  ld   $8c
              d6fb fe00  bra  ac          ;+-----------------------------------+
              d6fc fcfd  bra  $d6fd       ;|                                   |
              d6fd 1418  ld   $18,y       ;| Trampoline for page $d600 lookups |
              d6fe e006  jmp  y,$06       ;|                                   |
              d6ff c218  st   [$18]       ;+-----------------------------------+
              d700 0030  ld   $30
              d701 0035  ld   $35
              d702 0072  ld   $72
              d703 00f0  ld   $f0
              d704 0021  ld   $21
              d705 0034  ld   $34
              d706 00e6  ld   $e6
              d707 0006  ld   $06
              d708 0035  ld   $35
              d709 0053  ld   $53
              d70a 00e5  ld   $e5
              d70b 0059  ld   $59
              d70c 0020  ld   $20
              d70d 00f0  ld   $f0
              d70e 003c  ld   $3c
              d70f 0090  ld   $90
              d710 00e7  ld   $e7
              d711 0093  ld   $93
              d712 0070  ld   $70
              d713 0093  ld   $93
              d714 003c  ld   $3c
              d715 0021  ld   $21
              d716 0034  ld   $34
              d717 00e6  ld   $e6
              d718 0001  ld   $01
              d719 0035  ld   $35
              d71a 0053  ld   $53
              d71b 00ce  ld   $ce
              d71c 0021  ld   $21
              d71d 0044  ld   $44
              d71e 0099  ld   $99
              d71f 0070  ld   $70
              d720 0085  ld   $85
              d721 00a2  ld   $a2
              d722 0069  ld   $69
              d723 0063  ld   $63
              d724 00ff  ld   $ff
              d725 0093  ld   $93
              d726 001b  ld   $1b
              d727 00ff  ld   $ff
              d728 0071  ld   $71
              d729 00a0  ld   $a0
              d72a 0060  ld   $60
              d72b 00cd  ld   $cd
              d72c 00fb  ld   $fb
              d72d 0075  ld   $75
              d72e 0059  ld   $59
              d72f 0009  ld   $09
              d730 002b  ld   $2b
              d731 0034  ld   $34
              d732 0021  ld   $21
              d733 0044  ld   $44
              d734 0099  ld   $99
              d735 0034  ld   $34
              d736 002b  ld   $2b
              d737 003c  ld   $3c
              d738 0059  ld   $59
              d739 0030  ld   $30
              d73a 00f0  ld   $f0
              d73b 003c  ld   $3c
              d73c 0021  ld   $21
              d73d 0034  ld   $34
              d73e 00e6  ld   $e6
              d73f 0001  ld   $01
              d740 0035  ld   $35
              d741 0053  ld   $53
              d742 00a3  ld   $a3
              d743 0059  ld   $59
              d744 001f  ld   $1f
              d745 002b  ld   $2b
              d746 0070  ld   $70
              d747 0085  ld   $85
              d748 00c2  ld   $c2
              d749 0066  ld   $66
              d74a 0035  ld   $35
              d74b 0050  ld   $50
              d74c 00c4  ld   $c4
              d74d 0059  ld   $59
              d74e 006a  ld   $6a
              d74f 0090  ld   $90
              d750 00c6  ld   $c6
              d751 0059  ld   $59
              d752 0069  ld   $69
              d753 002b  ld   $2b
              d754 0046  ld   $46
              d755 0059  ld   $59
              d756 0009  ld   $09
              d757 002b  ld   $2b
              d758 0034  ld   $34
              d759 0021  ld   $21
              d75a 0044  ld   $44
              d75b 0099  ld   $99
              d75c 0034  ld   $34
              d75d 002b  ld   $2b
              d75e 003c  ld   $3c
              d75f 0021  ld   $21
              d760 003c  ld   $3c
              d761 00ad  ld   $ad
              d762 00e9  ld   $e9
              d763 00b8  ld   $b8
              d764 0046  ld   $46
              d765 0035  ld   $35
              d766 0053  ld   $53
              d767 00e3  ld   $e3
              d768 00e3  ld   $e3
              d769 003a  ld   $3a
              d76a 00f0  ld   $f0
              d76b 003c  ld   $3c
              d76c 0059  ld   $59
              d76d 006a  ld   $6a
              d76e 0090  ld   $90
              d76f 00e9  ld   $e9
              d770 00e3  ld   $e3
              d771 0030  ld   $30
              d772 00f0  ld   $f0
              d773 003c  ld   $3c
              d774 0059  ld   $59
              d775 0069  ld   $69
              d776 002b  ld   $2b
              d777 0046  ld   $46
              d778 0021  ld   $21
              d779 0034  ld   $34
              d77a 00e6  ld   $e6
              d77b 0001  ld   $01
              d77c 0035  ld   $35
              d77d 0053  ld   $53
              d77e 00ca  ld   $ca
              d77f 0021  ld   $21
              d780 0070  ld   $70
              d781 00e6  ld   $e6
              d782 0001  ld   $01
              d783 0035  ld   $35
              d784 0053  ld   $53
              d785 00b8  ld   $b8
              d786 0063  ld   $63
              d787 00ff  ld   $ff
              d788 0093  ld   $93
              d789 001b  ld   $1b
              d78a 00ff  ld   $ff
              d78b 0072  ld   $72
              d78c 00a0  ld   $a0
              d78d 004f  ld   $4f
              d78e 00cd  ld   $cd
              d78f 00ab  ld   $ab
              d790 002d  ld   $2d
              d791 002d  ld   $2d
              d792 002d  ld   $2d
              * 10 times
              d79a 0000  ld   $00
              d79b 002b  ld   $2b
              d79c 0044  ld   $44
              d79d 00cd  ld   $cd
              d79e 00ea  ld   $ea
              d79f 0075  ld   $75
              d7a0 005e  ld   $5e
              d7a1 0025  ld   $25
              d7a2 0011  ld   $11
              d7a3 0003  ld   $03
              d7a4 000b  ld   $0b
              d7a5 002b  ld   $2b
              d7a6 0022  ld   $22
              d7a7 0059  ld   $59
              d7a8 0018  ld   $18
              d7a9 002b  ld   $2b
              d7aa 0034  ld   $34
              d7ab 0011  ld   $11
              d7ac 0020  ld   $20
              d7ad 0001  ld   $01
              d7ae 002b  ld   $2b
              d7af 0046  ld   $46
              d7b0 0021  ld   $21
              d7b1 0034  ld   $34
              d7b2 00f0  ld   $f0
              d7b3 0046  ld   $46
              d7b4 005e  ld   $5e
              d7b5 0027  ld   $27
              d7b6 0059  ld   $59
              d7b7 0000  ld   $00
              d7b8 005e  ld   $5e
              d7b9 0026  ld   $26
              d7ba 0059  ld   $59
              d7bb 00a0  ld   $a0
              d7bc 005e  ld   $5e
              d7bd 0024  ld   $24
              d7be 00b4  ld   $b4
              d7bf 00f3  ld   $f3
              d7c0 0059  ld   $59
              d7c1 0001  ld   $01
              d7c2 0099  ld   $99
              d7c3 0034  ld   $34
              d7c4 002b  ld   $2b
              d7c5 0034  ld   $34
              d7c6 0059  ld   $59
              d7c7 0002  ld   $02
              d7c8 0099  ld   $99
              d7c9 0046  ld   $46
              d7ca 002b  ld   $2b
              d7cb 0046  ld   $46
              d7cc 0011  ld   $11
              d7cd 00f0  ld   $f0
              d7ce 0001  ld   $01
              d7cf 00fc  ld   $fc
              d7d0 0046  ld   $46
              d7d1 0035  ld   $35
              d7d2 0072  ld   $72
              d7d3 00c0  ld   $c0
              d7d4 0059  ld   $59
              d7d5 0000  ld   $00
              d7d6 00f0  ld   $f0
              d7d7 0032  ld   $32
              d7d8 0063  ld   $63
              d7d9 00ff  ld   $ff
              d7da 0093  ld   $93
              d7db 001b  ld   $1b
              d7dc 00ff  ld   $ff
              d7dd 0073  ld   $73
              d7de 00a0  ld   $a0
              d7df 0056  ld   $56
              d7e0 00cd  ld   $cd
              d7e1 00f1  ld   $f1
              d7e2 0075  ld   $75
              d7e3 00cd  ld   $cd
              d7e4 00ac  ld   $ac
              d7e5 004c  ld   $4c
              d7e6 006f  ld   $6f
              d7e7 0061  ld   $61
              d7e8 0064  ld   $64
              d7e9 0069  ld   $69
              d7ea 006e  ld   $6e
              d7eb 0067  ld   $67
              d7ec 0020  ld   $20
              d7ed 0000  ld   $00
              d7ee 0085  ld   $85
              d7ef 00a2  ld   $a2
              d7f0 0069  ld   $69
              d7f1 0085  ld   $85
              d7f2 00bf  ld   $bf
              d7f3 006b  ld   $6b
              d7f4 0085  ld   $85
              d7f5 00a2  ld   $a2
              d7f6 0065  ld   $65
              d7f7 0085  ld   $85
              d7f8 00de  ld   $de
              d7f9 0075  ld   $75
              d7fa 005e  ld   $5e
              d7fb fe00  bra  ac          ;+-----------------------------------+
              d7fc fcfd  bra  $d7fd       ;|                                   |
              d7fd 1418  ld   $18,y       ;| Trampoline for page $d700 lookups |
              d7fe e006  jmp  y,$06       ;|                                   |
              d7ff c218  st   [$18]       ;+-----------------------------------+
              d800 0073  ld   $73
              d801 0085  ld   $85
              d802 00de  ld   $de
              d803 0075  ld   $75
              d804 005e  ld   $5e
              d805 0072  ld   $72
              d806 0085  ld   $85
              d807 00de  ld   $de
              d808 0075  ld   $75
              d809 00e6  ld   $e6
              d80a 0001  ld   $01
              d80b 0082  ld   $82
              d80c 00ff  ld   $ff
              d80d 00e3  ld   $e3
              d80e 0001  ld   $01
              d80f 002b  ld   $2b
              d810 0074  ld   $74
              d811 0085  ld   $85
              d812 00a2  ld   $a2
              d813 0078  ld   $78
              d814 0021  ld   $21
              d815 0074  ld   $74
              d816 0035  ld   $35
              d817 0072  ld   $72
              d818 00d8  ld   $d8
              d819 0085  ld   $85
              d81a 00de  ld   $de
              d81b 0075  ld   $75
              d81c 0035  ld   $35
              d81d 0072  ld   $72
              d81e 00b8  ld   $b8
              d81f 0085  ld   $85
              d820 00de  ld   $de
              d821 0075  ld   $75
              d822 005e  ld   $5e
              d823 0073  ld   $73
              d824 0085  ld   $85
              d825 00de  ld   $de
              d826 0075  ld   $75
              d827 005e  ld   $5e
              d828 0072  ld   $72
              d829 0085  ld   $85
              d82a 00de  ld   $de
              d82b 0075  ld   $75
              d82c 0035  ld   $35
              d82d 0050  ld   $50
              d82e 00ec  ld   $ec
              d82f 0059  ld   $59
              d830 0000  ld   $00
              d831 002b  ld   $2b
              d832 0072  ld   $72
              d833 0085  ld   $85
              d834 00af  ld   $af
              d835 005d  ld   $5d
              d836 0063  ld   $63
              d837 00ff  ld   $ff
              d838 0093  ld   $93
              d839 001b  ld   $1b
              d83a 00ff  ld   $ff
              d83b 0074  ld   $74
              d83c 00a0  ld   $a0
              d83d 003c  ld   $3c
              d83e 00cd  ld   $cd
              d83f 00c9  ld   $c9
              d840 00cd  ld   $cd
              d841 00ae  ld   $ae
              d842 0053  ld   $53
              d843 0059  ld   $59
              d844 0053  ld   $53
              d845 0054  ld   $54
              d846 0045  ld   $45
              d847 004d  ld   $4d
              d848 0020  ld   $20
              d849 0020  ld   $20
              d84a 0047  ld   $47
              d84b 0054  ld   $54
              d84c 0031  ld   $31
              d84d 0000  ld   $00
              d84e 002b  ld   $2b
              d84f 003c  ld   $3c
              d850 0021  ld   $21
              d851 003a  ld   $3a
              d852 002b  ld   $2b
              d853 0034  ld   $34
              d854 0021  ld   $21
              d855 003c  ld   $3c
              d856 00ad  ld   $ad
              d857 0093  ld   $93
              d858 003c  ld   $3c
              d859 0035  ld   $35
              d85a 003f  ld   $3f
              d85b 00c8  ld   $c8
              d85c 002b  ld   $2b
              d85d 0070  ld   $70
              d85e 0021  ld   $21
              d85f 0034  ld   $34
              d860 00ad  ld   $ad
              d861 0093  ld   $93
              d862 0034  ld   $34
              d863 00fc  ld   $fc
              d864 0070  ld   $70
              d865 0035  ld   $35
              d866 003f  ld   $3f
              d867 00b4  ld   $b4
              d868 00ff  ld   $ff
              d869 00cd  ld   $cd
              d86a 00d7  ld   $d7
              d86b 0059  ld   $59
              d86c 0020  ld   $20
              d86d 0085  ld   $85
              d86e 00b1  ld   $b1
              d86f 0072  ld   $72
              d870 0021  ld   $21
              d871 0072  ld   $72
              d872 0035  ld   $35
              d873 003f  ld   $3f
              d874 00d2  ld   $d2
              d875 00cf  ld   $cf
              d876 0018  ld   $18
              d877 0093  ld   $93
              d878 001b  ld   $1b
              d879 00ff  ld   $ff
              d87a 0075  ld   $75
              d87b 00a0  ld   $a0
              d87c 0059  ld   $59
              d87d 00cd  ld   $cd
              d87e 00c2  ld   $c2
              d87f 0075  ld   $75
              d880 0093  ld   $93
              d881 0040  ld   $40
              d882 0011  ld   $11
              d883 0000  ld   $00
              d884 0002  ld   $02
              d885 0099  ld   $99
              d886 0064  ld   $64
              d887 00f8  ld   $f8
              d888 004a  ld   $4a
              d889 0035  ld   $35
              d88a 0072  ld   $72
              d88b 00c0  ld   $c0
              d88c 0021  ld   $21
              d88d 0076  ld   $76
              d88e 00e3  ld   $e3
              d88f 0004  ld   $04
              d890 002b  ld   $2b
              d891 0076  ld   $76
              d892 00f6  ld   $f6
              d893 002b  ld   $2b
              d894 004c  ld   $4c
              d895 0021  ld   $21
              d896 0076  ld   $76
              d897 00e3  ld   $e3
              d898 0002  ld   $02
              d899 00f6  ld   $f6
              d89a 002b  ld   $2b
              d89b 004e  ld   $4e
              d89c 0085  ld   $85
              d89d 00cf  ld   $cf
              d89e 0065  ld   $65
              d89f 0063  ld   $63
              d8a0 00ff  ld   $ff
              d8a1 00cd  ld   $cd
              d8a2 00da  ld   $da
              d8a3 002b  ld   $2b
              d8a4 0034  ld   $34
              d8a5 0099  ld   $99
              d8a6 0064  ld   $64
              d8a7 002b  ld   $2b
              d8a8 0064  ld   $64
              d8a9 0035  ld   $35
              d8aa 0072  ld   $72
              d8ab 00d3  ld   $d3
              d8ac 0059  ld   $59
              d8ad 0001  ld   $01
              d8ae 0099  ld   $99
              d8af 0060  ld   $60
              d8b0 002b  ld   $2b
              d8b1 0060  ld   $60
              d8b2 0021  ld   $21
              d8b3 0068  ld   $68
              d8b4 00b8  ld   $b8
              d8b5 0034  ld   $34
              d8b6 002b  ld   $2b
              d8b7 0068  ld   $68
              d8b8 00ff  ld   $ff
              d8b9 00cd  ld   $cd
              d8ba 00f4  ld   $f4
              d8bb 0075  ld   $75
              d8bc 0085  ld   $85
              d8bd 00a2  ld   $a2
              d8be 0064  ld   $64
              d8bf 0035  ld   $35
              d8c0 0056  ld   $56
              d8c1 00ef  ld   $ef
              d8c2 0059  ld   $59
              d8c3 0001  ld   $01
              d8c4 0085  ld   $85
              d8c5 00c6  ld   $c6
              d8c6 0075  ld   $75
              d8c7 0021  ld   $21
              d8c8 006a  ld   $6a
              d8c9 00ad  ld   $ad
              d8ca 0093  ld   $93
              d8cb 006a  ld   $6a
              d8cc 0090  ld   $90
              d8cd 00f2  ld   $f2
              d8ce 0011  ld   $11
              d8cf 00ff  ld   $ff
              d8d0 00ff  ld   $ff
              d8d1 0063  ld   $63
              d8d2 00ff  ld   $ff
              d8d3 0093  ld   $93
              d8d4 001b  ld   $1b
              d8d5 00ff  ld   $ff
              d8d6 0076  ld   $76
              d8d7 00a0  ld   $a0
              d8d8 0044  ld   $44
              d8d9 00cd  ld   $cd
              d8da 00df  ld   $df
              d8db 0075  ld   $75
              d8dc 0011  ld   $11
              d8dd 0000  ld   $00
              d8de 007f  ld   $7f
              d8df 002b  ld   $2b
              d8e0 0076  ld   $76
              d8e1 0021  ld   $21
              d8e2 004c  ld   $4c
              d8e3 00f3  ld   $f3
              d8e4 0076  ld   $76
              d8e5 0093  ld   $93
              d8e6 0076  ld   $76
              d8e7 0093  ld   $93
              d8e8 0076  ld   $76
              d8e9 0021  ld   $21
              d8ea 004e  ld   $4e
              d8eb 00f3  ld   $f3
              d8ec 0076  ld   $76
              d8ed 0093  ld   $93
              d8ee 0076  ld   $76
              d8ef 0093  ld   $93
              d8f0 0076  ld   $76
              d8f1 0011  ld   $11
              d8f2 0000  ld   $00
              d8f3 00f0  ld   $f0
              d8f4 00fa  ld   $fa
              d8f5 004e  ld   $4e
              d8f6 00e3  ld   $e3
              d8f7 0001  ld   $01
              d8f8 0035  ld   $35
              d8f9 0072  ld   $72
              d8fa 00c6  ld   $c6
              d8fb fe00  bra  ac          ;+-----------------------------------+
              d8fc fcfd  bra  $d8fd       ;|                                   |
              d8fd 1418  ld   $18,y       ;| Trampoline for page $d800 lookups |
              d8fe e006  jmp  y,$06       ;|                                   |
              d8ff c218  st   [$18]       ;+-----------------------------------+
              d900 0059  ld   $59
              d901 0007  ld   $07
              d902 00fa  ld   $fa
              d903 004c  ld   $4c
              d904 00e3  ld   $e3
              d905 0001  ld   $01
              d906 0035  ld   $35
              d907 003f  ld   $3f
              d908 00ce  ld   $ce
              d909 0085  ld   $85
              d90a 00a2  ld   $a2
              d90b 0077  ld   $77
              d90c 0090  ld   $90
              d90d 00a6  ld   $a6
              d90e 0011  ld   $11
              d90f 0000  ld   $00
              d910 007f  ld   $7f
              d911 002b  ld   $2b
              d912 0076  ld   $76
              d913 00f6  ld   $f6
              d914 002b  ld   $2b
              d915 004c  ld   $4c
              d916 0021  ld   $21
              d917 0076  ld   $76
              d918 00e3  ld   $e3
              d919 0002  ld   $02
              d91a 00f6  ld   $f6
              d91b 002b  ld   $2b
              d91c 004e  ld   $4e
              d91d 0063  ld   $63
              d91e 00ff  ld   $ff
              d91f 0093  ld   $93
              d920 001b  ld   $1b
              d921 00ff  ld   $ff
              d922 0077  ld   $77
              d923 00a0  ld   $a0
              d924 005d  ld   $5d
              d925 00cd  ld   $cd
              d926 00f8  ld   $f8
              d927 0075  ld   $75
              d928 001a  ld   $1a
              d929 004d  ld   $4d
              d92a 005e  ld   $5e
              d92b 0050  ld   $50
              d92c 001a  ld   $1a
              d92d 004e  ld   $4e
              d92e 005e  ld   $5e
              d92f 0051  ld   $51
              d930 001a  ld   $1a
              d931 004f  ld   $4f
              d932 002b  ld   $2b
              d933 0056  ld   $56
              d934 001a  ld   $1a
              d935 004c  ld   $4c
              d936 002b  ld   $2b
              d937 0078  ld   $78
              d938 0082  ld   $82
              d939 0080  ld   $80
              d93a 00ad  ld   $ad
              d93b 002b  ld   $2b
              d93c 004c  ld   $4c
              d93d 0059  ld   $59
              d93e 0000  ld   $00
              d93f 002b  ld   $2b
              d940 004e  ld   $4e
              d941 0085  ld   $85
              d942 00d6  ld   $d6
              d943 0066  ld   $66
              d944 0085  ld   $85
              d945 00d6  ld   $d6
              d946 0066  ld   $66
              d947 0021  ld   $21
              d948 0052  ld   $52
              d949 002b  ld   $2b
              d94a 0050  ld   $50
              d94b 0021  ld   $21
              d94c 0054  ld   $54
              d94d 002b  ld   $2b
              d94e 0056  ld   $56
              d94f 0085  ld   $85
              d950 00d6  ld   $d6
              d951 0066  ld   $66
              d952 00fc  ld   $fc
              d953 0040  ld   $40
              d954 0035  ld   $35
              d955 0072  ld   $72
              d956 00d4  ld   $d4
              d957 0021  ld   $21
              d958 004e  ld   $4e
              d959 00fc  ld   $fc
              d95a 003e  ld   $3e
              d95b 0035  ld   $35
              d95c 003f  ld   $3f
              d95d 00e2  ld   $e2
              d95e 0021  ld   $21
              d95f 004c  ld   $4c
              d960 002b  ld   $2b
              d961 0040  ld   $40
              d962 0021  ld   $21
              d963 004e  ld   $4e
              d964 002b  ld   $2b
              d965 003e  ld   $3e
              d966 0085  ld   $85
              d967 00a2  ld   $a2
              d968 0063  ld   $63
              d969 0021  ld   $21
              d96a 0078  ld   $78
              d96b 0082  ld   $82
              d96c 007f  ld   $7f
              d96d 00e9  ld   $e9
              d96e 00e9  ld   $e9
              d96f 0099  ld   $99
              d970 0030  ld   $30
              d971 002b  ld   $2b
              d972 0078  ld   $78
              d973 00f6  ld   $f6
              d974 002b  ld   $2b
              d975 004c  ld   $4c
              d976 0021  ld   $21
              d977 0078  ld   $78
              d978 00e3  ld   $e3
              d979 0002  ld   $02
              d97a 00f6  ld   $f6
              d97b 002b  ld   $2b
              d97c 004e  ld   $4e
              d97d 0063  ld   $63
              d97e 00ff  ld   $ff
              d97f 0093  ld   $93
              d980 001b  ld   $1b
              d981 00ff  ld   $ff
              d982 0078  ld   $78
              d983 00a0  ld   $a0
              d984 0038  ld   $38
              d985 00cd  ld   $cd
              d986 00d3  ld   $d3
              d987 0075  ld   $75
              d988 0085  ld   $85
              d989 00a2  ld   $a2
              d98a 0064  ld   $64
              d98b 0035  ld   $35
              d98c 0056  ld   $56
              d98d 00d1  ld   $d1
              d98e 00b8  ld   $b8
              d98f 0074  ld   $74
              d990 0035  ld   $35
              d991 0056  ld   $56
              d992 00ae  ld   $ae
              d993 0059  ld   $59
              d994 0000  ld   $00
              d995 0099  ld   $99
              d996 0074  ld   $74
              d997 0085  ld   $85
              d998 00c6  ld   $c6
              d999 0075  ld   $75
              d99a 0021  ld   $21
              d99b 006a  ld   $6a
              d99c 002b  ld   $2b
              d99d 0026  ld   $26
              d99e 0021  ld   $21
              d99f 0072  ld   $72
              d9a0 002b  ld   $2b
              d9a1 0024  ld   $24
              d9a2 0099  ld   $99
              d9a3 0034  ld   $34
              d9a4 002b  ld   $2b
              d9a5 0072  ld   $72
              d9a6 0011  ld   $11
              d9a7 00e9  ld   $e9
              d9a8 0000  ld   $00
              d9a9 002b  ld   $2b
              d9aa 0022  ld   $22
              d9ab 0021  ld   $21
              d9ac 0034  ld   $34
              d9ad 00b4  ld   $b4
              d9ae 00e6  ld   $e6
              d9af 0021  ld   $21
              d9b0 0074  ld   $74
              d9b1 00b8  ld   $b8
              d9b2 0034  ld   $34
              d9b3 002b  ld   $2b
              d9b4 0074  ld   $74
              d9b5 0035  ld   $35
              d9b6 004d  ld   $4d
              d9b7 00a1  ld   $a1
              d9b8 0063  ld   $63
              d9b9 00ff  ld   $ff
              d9ba 0093  ld   $93
              d9bb 001b  ld   $1b
              d9bc 00ff  ld   $ff
              d9bd 0079  ld   $79
              d9be 00a0  ld   $a0
              d9bf 0040  ld   $40
              d9c0 00cd  ld   $cd
              d9c1 00bf  ld   $bf
              d9c2 0075  ld   $75
              d9c3 0059  ld   $59
              d9c4 0000  ld   $00
              d9c5 002b  ld   $2b
              d9c6 0064  ld   $64
              d9c7 002b  ld   $2b
              d9c8 0060  ld   $60
              d9c9 0059  ld   $59
              d9ca 0000  ld   $00
              d9cb 002b  ld   $2b
              d9cc 0066  ld   $66
              d9cd 0059  ld   $59
              d9ce 0001  ld   $01
              d9cf 002b  ld   $2b
              d9d0 0062  ld   $62
              d9d1 0021  ld   $21
              d9d2 005c  ld   $5c
              d9d3 002b  ld   $2b
              d9d4 004c  ld   $4c
              d9d5 0021  ld   $21
              d9d6 005e  ld   $5e
              d9d7 002b  ld   $2b
              d9d8 004e  ld   $4e
              d9d9 0085  ld   $85
              d9da 00a2  ld   $a2
              d9db 0076  ld   $76
              d9dc 0085  ld   $85
              d9dd 00cf  ld   $cf
              d9de 0065  ld   $65
              d9df 0063  ld   $63
              d9e0 00ff  ld   $ff
              d9e1 00cd  ld   $cd
              d9e2 00db  ld   $db
              d9e3 0075  ld   $75
              d9e4 00cd  ld   $cd
              d9e5 00ce  ld   $ce
              d9e6 0043  ld   $43
              d9e7 0061  ld   $61
              d9e8 0072  ld   $72
              d9e9 0064  ld   $64
              d9ea 0054  ld   $54
              d9eb 0079  ld   $79
              d9ec 0070  ld   $70
              d9ed 0065  ld   $65
              d9ee 0020  ld   $20
              d9ef 0000  ld   $00
              d9f0 0085  ld   $85
              d9f1 00a2  ld   $a2
              d9f2 0069  ld   $69
              d9f3 0021  ld   $21
              d9f4 0036  ld   $36
              d9f5 0085  ld   $85
              d9f6 00a2  ld   $a2
              d9f7 0068  ld   $68
              d9f8 0085  ld   $85
              d9f9 00a2  ld   $a2
              d9fa 006d  ld   $6d
              d9fb fe00  bra  ac          ;+-----------------------------------+
              d9fc fcfd  bra  $d9fd       ;|                                   |
              d9fd 1418  ld   $18,y       ;| Trampoline for page $d900 lookups |
              d9fe e006  jmp  y,$06       ;|                                   |
              d9ff c218  st   [$18]       ;+-----------------------------------+
              da00 0063  ld   $63
              da01 00ff  ld   $ff
              da02 0093  ld   $93
              da03 001b  ld   $1b
              da04 00ff  ld   $ff
              da05 007a  ld   $7a
              da06 00a0  ld   $a0
              da07 0057  ld   $57
              da08 00cd  ld   $cd
              da09 00af  ld   $af
              da0a 000a  ld   $0a
              da0b 002a  ld   $2a
              da0c 002a  ld   $2a
              da0d 002a  ld   $2a
              da0e 0020  ld   $20
              da0f 0043  ld   $43
              da10 0061  ld   $61
              da11 0072  ld   $72
              da12 0064  ld   $64
              da13 0042  ld   $42
              da14 006f  ld   $6f
              da15 006f  ld   $6f
              da16 0074  ld   $74
              da17 000a  ld   $0a
              da18 0000  ld   $00
              da19 0085  ld   $85
              da1a 00a2  ld   $a2
              da1b 0069  ld   $69
              da1c 0059  ld   $59
              da1d 0000  ld   $00
              da1e 005e  ld   $5e
              da1f 000e  ld   $0e
              da20 0085  ld   $85
              da21 00a2  ld   $a2
              da22 0060  ld   $60
              da23 0085  ld   $85
              da24 00c3  ld   $c3
              da25 0079  ld   $79
              da26 0085  ld   $85
              da27 00a2  ld   $a2
              da28 0061  ld   $61
              da29 0085  ld   $85
              da2a 00bb  ld   $bb
              da2b 0068  ld   $68
              da2c 0085  ld   $85
              da2d 00c7  ld   $c7
              da2e 0060  ld   $60
              da2f 0035  ld   $35
              da30 0072  ld   $72
              da31 00d1  ld   $d1
              da32 0085  ld   $85
              da33 00a2  ld   $a2
              da34 0062  ld   $62
              da35 0085  ld   $85
              da36 00a2  ld   $a2
              da37 0079  ld   $79
              da38 0085  ld   $85
              da39 00a2  ld   $a2
              da3a 006f  ld   $6f
              da3b 0059  ld   $59
              da3c 0020  ld   $20
              da3d 00f0  ld   $f0
              da3e 0032  ld   $32
              da3f 0085  ld   $85
              da40 00a2  ld   $a2
              da41 006d  ld   $6d
              da42 00cd  ld   $cd
              da43 00f0  ld   $f0
              da44 0053  ld   $53
              da45 0059  ld   $59
              da46 0053  ld   $53
              da47 0054  ld   $54
              da48 0045  ld   $45
              da49 004d  ld   $4d
              da4a 002e  ld   $2e
              da4b 0047  ld   $47
              da4c 0054  ld   $54
              da4d 0031  ld   $31
              da4e 0020  ld   $20
              da4f 006e  ld   $6e
              da50 006f  ld   $6f
              da51 0074  ld   $74
              da52 0020  ld   $20
              da53 0066  ld   $66
              da54 006f  ld   $6f
              da55 0075  ld   $75
              da56 006e  ld   $6e
              da57 0064  ld   $64
              da58 0021  ld   $21
              da59 0000  ld   $00
              da5a 0085  ld   $85
              da5b 00a2  ld   $a2
              da5c 0069  ld   $69
              da5d 00b4  ld   $b4
              da5e 0080  ld   $80
              da5f 0000  ld   $00
              da60 0000  ld   $00         ;End of Apps/CardBoot/CardBoot.gt1, size 2922
                                          ;+-----------------------------------+
                                          ;| Apps/MainMenu/MainMenu_vX0.gcl    |
                                          ;+-----------------------------------+
              da61 dc42  st   $42,[y,x++] ;'B'
              da62 dc6f  st   $6f,[y,x++] ;'o'
              da63 dc6f  st   $6f,[y,x++] ;'o'
              da64 dc74  st   $74,[y,x++] ;'t'
              da65 dc00  st   $00,[y,x++] ;'\x00'
              da66 dc00  st   $00,[y,x++] ;'\x00'
              da67 dc00  st   $00,[y,x++] ;'\x00'
              da68 dc00  st   $00,[y,x++] ;'\x00'
              da69 00f7  ld   $f7
              da6a c218  st   [$18]
              da6b 00ce  ld   $ce
              da6c 14e0  ld   $e0,y
              da6d e071  jmp  y,$71
              da6e c219  st   [$19]
Main:         da6f 0002  ld   $02         ;| RAM segment address (high byte first)
              da70 0000  ld   $00         ;|
              da71 00dd  ld   $dd         ;| Length (1..256)
              da72 0021  ld   $21         ;0200 LDW
              da73 0011  ld   $11
              da74 0035  ld   $35         ;0202 BCC
              da75 0056  ld   $56         ;0203 LE
              da76 000f  ld   $0f
              da77 0082  ld   $82         ;0205 ANDI
              da78 0010  ld   $10
              da79 0035  ld   $35         ;0207 BCC
              da7a 0072  ld   $72         ;0208 NE
              da7b 000f  ld   $0f
              da7c 0011  ld   $11         ;020a LDWI
              da7d 000e  ld   $0e
              da7e 00ca  ld   $ca
              da7f 002b  ld   $2b         ;020d STW
              da80 0024  ld   $24         ;020d '_sysArgs0'
              da81 00b4  ld   $b4         ;020f SYS
              da82 00e3  ld   $e3
              da83 00cd  ld   $cd         ;0211 DEF
              da84 005f  ld   $5f
              da85 0021  ld   $21         ;0213 LDW
              da86 0030  ld   $30         ;0213 'Char'
              da87 00e6  ld   $e6         ;0215 SUBI
              da88 0052  ld   $52
              da89 0035  ld   $35         ;0217 BCC
              da8a 0053  ld   $53         ;0218 GE
              da8b 0021  ld   $21
              da8c 00e3  ld   $e3         ;021a ADDI
              da8d 0032  ld   $32
              da8e 002b  ld   $2b         ;021c STW
              da8f 0032  ld   $32         ;021c 'i'
              da90 0011  ld   $11         ;021e LDWI
              da91 0000  ld   $00
              da92 0007  ld   $07
              da93 0090  ld   $90         ;0221 BRA
              da94 0026  ld   $26
              da95 002b  ld   $2b         ;0223 STW
              da96 0032  ld   $32         ;0223 'i'
              da97 0011  ld   $11         ;0225 LDWI
              da98 0000  ld   $00
              da99 0008  ld   $08
              da9a 002b  ld   $2b         ;0228 STW
              da9b 0034  ld   $34         ;0228 'fontData'
              da9c 0021  ld   $21         ;022a LDW
              da9d 0032  ld   $32         ;022a 'i'
              da9e 00e9  ld   $e9         ;022c LSLW
              da9f 00e9  ld   $e9         ;022d LSLW
              daa0 0099  ld   $99         ;022e ADDW
              daa1 0032  ld   $32         ;022e 'i'
              daa2 0099  ld   $99         ;0230 ADDW
              daa3 0034  ld   $34         ;0230 'fontData'
              daa4 002b  ld   $2b         ;0232 STW
              daa5 0034  ld   $34         ;0232 'fontData'
              daa6 0059  ld   $59         ;0234 LDI
              daa7 0020  ld   $20
              daa8 005e  ld   $5e         ;0236 ST
              daa9 0024  ld   $24
              daaa 0021  ld   $21         ;0238 LDW
              daab 0036  ld   $36         ;0238 'Color'
              daac 005e  ld   $5e         ;023a ST
              daad 0025  ld   $25
              daae 0021  ld   $21         ;023c LDW
              daaf 0038  ld   $38         ;023c 'Pos'
              dab0 002b  ld   $2b         ;023e STW
              dab1 0028  ld   $28
              dab2 00e3  ld   $e3         ;0240 ADDI
              dab3 0006  ld   $06
              dab4 002b  ld   $2b         ;0242 STW
              dab5 0038  ld   $38         ;0242 'Pos'
              dab6 0011  ld   $11         ;0244 LDWI
              dab7 00e1  ld   $e1
              dab8 0004  ld   $04
              dab9 002b  ld   $2b         ;0247 STW
              daba 0022  ld   $22
              dabb 0059  ld   $59         ;0249 LDI
              dabc 00fb  ld   $fb
              dabd 002b  ld   $2b         ;024b STW
              dabe 0032  ld   $32         ;024b 'i'
              dabf 0021  ld   $21         ;024d LDW
              dac0 0034  ld   $34         ;024d 'fontData'
              dac1 007f  ld   $7f         ;024f LUP
              dac2 0000  ld   $00
              dac3 0093  ld   $93         ;0251 INC
              dac4 0034  ld   $34         ;0251 'fontData'
              dac5 005e  ld   $5e         ;0253 ST
              dac6 0026  ld   $26
              dac7 00b4  ld   $b4         ;0255 SYS
              dac8 00cc  ld   $cc
              dac9 0093  ld   $93         ;0257 INC
              daca 0028  ld   $28
              dacb 0093  ld   $93         ;0259 INC
              dacc 0032  ld   $32         ;0259 'i'
              dacd 0021  ld   $21         ;025b LDW
              dace 0032  ld   $32         ;025b 'i'
              dacf 0035  ld   $35         ;025d BCC
              dad0 0072  ld   $72         ;025e NE
              dad1 004b  ld   $4b
              dad2 00ff  ld   $ff         ;0260 RET
              dad3 002b  ld   $2b         ;0261 STW
              dad4 003a  ld   $3a         ;0261 'PrintChar'
              dad5 00cd  ld   $cd         ;0263 DEF
              dad6 008c  ld   $8c
              dad7 0075  ld   $75         ;0265 PUSH
              dad8 002b  ld   $2b         ;0266 STW
              dad9 003c  ld   $3c         ;0266 'Text'
              dada 0021  ld   $21         ;0268 LDW
              dadb 003c  ld   $3c         ;0268 'Text'
              dadc 00ad  ld   $ad         ;026a PEEK
              dadd 0035  ld   $35         ;026b BCC
              dade 003f  ld   $3f         ;026c EQ
              dadf 008a  ld   $8a
              dae0 002b  ld   $2b         ;026e STW
              dae1 0030  ld   $30         ;026e 'Char'
              dae2 0093  ld   $93         ;0270 INC
              dae3 003c  ld   $3c         ;0270 'Text'
              dae4 008c  ld   $8c         ;0272 XORI
              dae5 0009  ld   $09
              dae6 0035  ld   $35         ;0274 BCC
              dae7 0072  ld   $72         ;0275 NE
              dae8 007d  ld   $7d
              dae9 0021  ld   $21         ;0277 LDW
              daea 0038  ld   $38         ;0277 'Pos'
              daeb 00e3  ld   $e3         ;0279 ADDI
              daec 0012  ld   $12
              daed 002b  ld   $2b         ;027b STW
              daee 0038  ld   $38         ;027b 'Pos'
              daef 0090  ld   $90         ;027d BRA
              daf0 0066  ld   $66
              daf1 008c  ld   $8c         ;027f XORI
              daf2 0003  ld   $03
              daf3 0035  ld   $35         ;0281 BCC
              daf4 0072  ld   $72         ;0282 NE
              daf5 0086  ld   $86
              daf6 00cf  ld   $cf         ;0284 CALL
              daf7 003e  ld   $3e         ;0284 'Newline'
              daf8 0090  ld   $90         ;0286 BRA
              daf9 0066  ld   $66
              dafa 00cf  ld   $cf         ;0288 CALL
              dafb fe00  bra  ac          ;+-----------------------------------+
              dafc fcfd  bra  $dafd       ;|                                   |
              dafd 1418  ld   $18,y       ;| Trampoline for page $da00 lookups |
              dafe e006  jmp  y,$06       ;|                                   |
              daff c218  st   [$18]       ;+-----------------------------------+
              db00 003a  ld   $3a         ;0288 'PrintChar'
              db01 0090  ld   $90         ;028a BRA
              db02 0066  ld   $66
              db03 0063  ld   $63         ;028c POP
              db04 00ff  ld   $ff         ;028d RET
              db05 002b  ld   $2b         ;028e STW
              db06 0040  ld   $40         ;028e 'PrintText'
              db07 00cd  ld   $cd         ;0290 DEF
              db08 00a6  ld   $a6
              db09 0075  ld   $75         ;0292 PUSH
              db0a 0059  ld   $59         ;0293 LDI
              db0b 002d  ld   $2d
              db0c 002b  ld   $2b         ;0295 STW
              db0d 0030  ld   $30         ;0295 'Char'
              db0e 0059  ld   $59         ;0297 LDI
              db0f 001a  ld   $1a
              db10 002b  ld   $2b         ;0299 STW
              db11 0042  ld   $42         ;0299 'j'
              db12 00cf  ld   $cf         ;029b CALL
              db13 003a  ld   $3a         ;029b 'PrintChar'
              db14 0021  ld   $21         ;029d LDW
              db15 0042  ld   $42         ;029d 'j'
              db16 00e6  ld   $e6         ;029f SUBI
              db17 0001  ld   $01
              db18 0035  ld   $35         ;02a1 BCC
              db19 004d  ld   $4d         ;02a2 GT
              db1a 0097  ld   $97
              db1b 00cf  ld   $cf         ;02a4 CALL
              db1c 003e  ld   $3e         ;02a4 'Newline'
              db1d 0063  ld   $63         ;02a6 POP
              db1e 00ff  ld   $ff         ;02a7 RET
              db1f 002b  ld   $2b         ;02a8 STW
              db20 0044  ld   $44         ;02a8 'PrintDivider'
              db21 00cd  ld   $cd         ;02aa DEF
              db22 00d6  ld   $d6
              db23 0075  ld   $75         ;02ac PUSH
              db24 0021  ld   $21         ;02ad LDW
              db25 0046  ld   $46         ;02ad 'MenuItem'
              db26 00e6  ld   $e6         ;02af SUBI
              db27 0005  ld   $05
              db28 0035  ld   $35         ;02b1 BCC
              db29 0053  ld   $53         ;02b2 GE
              db2a 00b7  ld   $b7
              db2b 0011  ld   $11         ;02b4 LDWI
              db2c 000b  ld   $0b
              db2d 0020  ld   $20
              db2e 0090  ld   $90         ;02b7 BRA
              db2f 00ba  ld   $ba
              db30 0011  ld   $11         ;02b9 LDWI
              db31 0059  ld   $59
              db32 00f8  ld   $f8
              db33 002b  ld   $2b         ;02bc STW
              db34 0038  ld   $38         ;02bc 'Pos'
              db35 0021  ld   $21         ;02be LDW
              db36 0046  ld   $46         ;02be 'MenuItem'
              db37 002b  ld   $2b         ;02c0 STW
              db38 0042  ld   $42         ;02c0 'j'
              db39 0011  ld   $11         ;02c2 LDWI
              db3a 0000  ld   $00
              db3b 0008  ld   $08
              db3c 0099  ld   $99         ;02c5 ADDW
              db3d 0038  ld   $38         ;02c5 'Pos'
              db3e 002b  ld   $2b         ;02c7 STW
              db3f 0038  ld   $38         ;02c7 'Pos'
              db40 0021  ld   $21         ;02c9 LDW
              db41 0042  ld   $42         ;02c9 'j'
              db42 00e6  ld   $e6         ;02cb SUBI
              db43 0001  ld   $01
              db44 0035  ld   $35         ;02cd BCC
              db45 0053  ld   $53         ;02ce GE
              db46 00be  ld   $be
              db47 0059  ld   $59         ;02d0 LDI
              db48 0082  ld   $82
              db49 002b  ld   $2b         ;02d2 STW
              db4a 0030  ld   $30         ;02d2 'Char'
              db4b 00cf  ld   $cf         ;02d4 CALL
              db4c 003a  ld   $3a         ;02d4 'PrintChar'
              db4d 0063  ld   $63         ;02d6 POP
              db4e 00ff  ld   $ff         ;02d7 RET
              db4f 002b  ld   $2b         ;02d8 STW
              db50 0048  ld   $48         ;02d8 'PrintArrow'
              db51 0093  ld   $93         ;02da INC
              db52 001b  ld   $1b         ;02da '_vLR'+1
              db53 00ff  ld   $ff         ;02dc RET
              db54 0003  ld   $03         ;| RAM segment address (high byte first)
              db55 0000  ld   $00         ;|
              db56 00a0  ld   $a0         ;| Length (1..256)
              db57 00cd  ld   $cd         ;0300 DEF
              db58 0099  ld   $99
              db59 0075  ld   $75         ;0302 PUSH
              db5a 001a  ld   $1a         ;0303 LD
              db5b 000e  ld   $0e
              db5c 002b  ld   $2b         ;0305 STW
              db5d 0036  ld   $36         ;0305 'Color'
              db5e 00cf  ld   $cf         ;0307 CALL
              db5f 0048  ld   $48         ;0307 'PrintArrow'
              db60 001a  ld   $1a         ;0309 LD
              db61 0011  ld   $11
              db62 008c  ld   $8c         ;030b XORI
              db63 00fe  ld   $fe
              db64 0035  ld   $35         ;030d BCC
              db65 0072  ld   $72         ;030e NE
              db66 001f  ld   $1f
              db67 00cf  ld   $cf         ;0310 CALL
              db68 004a  ld   $4a         ;0310 'WipeOutArrow'
              db69 0021  ld   $21         ;0312 LDW
              db6a 0046  ld   $46         ;0312 'MenuItem'
              db6b 00e6  ld   $e6         ;0314 SUBI
              db6c 0004  ld   $04
              db6d 0035  ld   $35         ;0316 BCC
              db6e 004d  ld   $4d         ;0317 GT
              db6f 001b  ld   $1b
              db70 00e3  ld   $e3         ;0319 ADDI
              db71 0009  ld   $09
              db72 002b  ld   $2b         ;031b STW
              db73 0046  ld   $46         ;031b 'MenuItem'
              db74 0059  ld   $59         ;031d LDI
              db75 00ef  ld   $ef
              db76 005e  ld   $5e         ;031f ST
              db77 0011  ld   $11
              db78 001a  ld   $1a         ;0321 LD
              db79 0011  ld   $11
              db7a 008c  ld   $8c         ;0323 XORI
              db7b 00fd  ld   $fd
              db7c 0035  ld   $35         ;0325 BCC
              db7d 0072  ld   $72         ;0326 NE
              db7e 0035  ld   $35
              db7f 00cf  ld   $cf         ;0328 CALL
              db80 004a  ld   $4a         ;0328 'WipeOutArrow'
              db81 0021  ld   $21         ;032a LDW
              db82 0046  ld   $46         ;032a 'MenuItem'
              db83 00e6  ld   $e6         ;032c SUBI
              db84 0005  ld   $05
              db85 0035  ld   $35         ;032e BCC
              db86 0050  ld   $50         ;032f LT
              db87 0031  ld   $31
              db88 002b  ld   $2b         ;0331 STW
              db89 0046  ld   $46         ;0331 'MenuItem'
              db8a 0059  ld   $59         ;0333 LDI
              db8b 00ef  ld   $ef
              db8c 005e  ld   $5e         ;0335 ST
              db8d 0011  ld   $11
              db8e 001a  ld   $1a         ;0337 LD
              db8f 0011  ld   $11
              db90 008c  ld   $8c         ;0339 XORI
              db91 00fb  ld   $fb
              db92 0035  ld   $35         ;033b BCC
              db93 0072  ld   $72         ;033c NE
              db94 0050  ld   $50
              db95 00cf  ld   $cf         ;033e CALL
              db96 004a  ld   $4a         ;033e 'WipeOutArrow'
              db97 0021  ld   $21         ;0340 LDW
              db98 0046  ld   $46         ;0340 'MenuItem'
              db99 00e6  ld   $e6         ;0342 SUBI
              db9a 0004  ld   $04
              db9b 0035  ld   $35         ;0344 BCC
              db9c 003f  ld   $3f         ;0345 EQ
              db9d 004c  ld   $4c
              db9e 00e6  ld   $e6         ;0347 SUBI
              db9f 0005  ld   $05
              dba0 0035  ld   $35         ;0349 BCC
              dba1 003f  ld   $3f         ;034a EQ
              dba2 004c  ld   $4c
              dba3 0093  ld   $93         ;034c INC
              dba4 0046  ld   $46         ;034c 'MenuItem'
              dba5 0059  ld   $59         ;034e LDI
              dba6 00ef  ld   $ef
              dba7 005e  ld   $5e         ;0350 ST
              dba8 0011  ld   $11
              dba9 001a  ld   $1a         ;0352 LD
              dbaa 0011  ld   $11
              dbab 008c  ld   $8c         ;0354 XORI
              dbac 00f7  ld   $f7
              dbad 0035  ld   $35         ;0356 BCC
              dbae 0072  ld   $72         ;0357 NE
              dbaf 006d  ld   $6d
              dbb0 00cf  ld   $cf         ;0359 CALL
              dbb1 004a  ld   $4a         ;0359 'WipeOutArrow'
              dbb2 0021  ld   $21         ;035b LDW
              dbb3 0046  ld   $46         ;035b 'MenuItem'
              dbb4 0035  ld   $35         ;035d BCC
              dbb5 003f  ld   $3f         ;035e EQ
              dbb6 0069  ld   $69
              dbb7 00e6  ld   $e6         ;0360 SUBI
              dbb8 0005  ld   $05
              dbb9 0035  ld   $35         ;0362 BCC
              dbba 003f  ld   $3f         ;0363 EQ
              dbbb 0069  ld   $69
              dbbc 0021  ld   $21         ;0365 LDW
              dbbd 0046  ld   $46         ;0365 'MenuItem'
              dbbe 00e6  ld   $e6         ;0367 SUBI
              dbbf 0001  ld   $01
              dbc0 002b  ld   $2b         ;0369 STW
              dbc1 0046  ld   $46         ;0369 'MenuItem'
              dbc2 0059  ld   $59         ;036b LDI
              dbc3 00ef  ld   $ef
              dbc4 005e  ld   $5e         ;036d ST
              dbc5 0011  ld   $11
              dbc6 001a  ld   $1a         ;036f LD
              dbc7 0011  ld   $11
              dbc8 0082  ld   $82         ;0371 ANDI
              dbc9 0080  ld   $80
              dbca 0035  ld   $35         ;0373 BCC
              dbcb 0072  ld   $72         ;0374 NE
              dbcc 0001  ld   $01
              dbcd 0059  ld   $59         ;0376 LDI
              dbce 002a  ld   $2a
              dbcf 002b  ld   $2b         ;0378 STW
              dbd0 0036  ld   $36         ;0378 'Color'
              dbd1 00cf  ld   $cf         ;037a CALL
              dbd2 0048  ld   $48         ;037a 'PrintArrow'
              dbd3 00cd  ld   $cd         ;037c DEF
              dbd4 0090  ld   $90
              dbd5 004f  ld   $4f
              dbd6 0054  ld   $54
              dbd7 00f0  ld   $f0
              dbd8 004c  ld   $4c
              dbd9 009c  ld   $9c
              dbda 005f  ld   $5f
              dbdb 00b5  ld   $b5
              dbdc 0065  ld   $65
              dbdd 0091  ld   $91
              dbde 0064  ld   $64
              dbdf 0019  ld   $19
              dbe0 0068  ld   $68
              dbe1 00d9  ld   $d9
              dbe2 007b  ld   $7b
              dbe3 0051  ld   $51
              dbe4 006f  ld   $6f
              dbe5 00e9  ld   $e9
              dbe6 00a3  ld   $a3
              dbe7 0054  ld   $54
              dbe8 0086  ld   $86
              dbe9 0099  ld   $99         ;0392 ADDW
              dbea 0046  ld   $46         ;0392 'MenuItem'
              dbeb 0099  ld   $99         ;0394 ADDW
              dbec 0046  ld   $46         ;0394 'MenuItem'
              dbed 00f6  ld   $f6         ;0396 DEEK
              dbee 002b  ld   $2b         ;0397 STW
              dbef 004c  ld   $4c         ;0397 'Program'
              dbf0 0063  ld   $63         ;0399 POP
              dbf1 00ff  ld   $ff         ;039a RET
              dbf2 002b  ld   $2b         ;039b STW
              dbf3 004e  ld   $4e         ;039b 'SelectMenu'
              dbf4 0093  ld   $93         ;039d INC
              dbf5 001b  ld   $1b         ;039d '_vLR'+1
              dbf6 00ff  ld   $ff         ;039f RET
              dbf7 0004  ld   $04         ;| RAM segment address (high byte first)
              dbf8 0000  ld   $00         ;|
              dbf9 00c0  ld   $c0         ;| Length (1..256)
              dbfa 00cd  ld   $cd         ;0400 DEF
              dbfb fe00  bra  ac          ;+-----------------------------------+
              dbfc fcfd  bra  $dbfd       ;|                                   |
              dbfd 1418  ld   $18,y       ;| Trampoline for page $db00 lookups |
              dbfe e006  jmp  y,$06       ;|                                   |
              dbff c218  st   [$18]       ;+-----------------------------------+
              dc00 000b  ld   $0b
              dc01 001a  ld   $1a         ;0402 LD
              dc02 0039  ld   $39         ;0402 'Pos'+1
              dc03 00e3  ld   $e3         ;0404 ADDI
              dc04 0008  ld   $08
              dc05 005e  ld   $5e         ;0406 ST
              dc06 0039  ld   $39         ;0406 'Pos'+1
              dc07 0059  ld   $59         ;0408 LDI
              dc08 0002  ld   $02
              dc09 005e  ld   $5e         ;040a ST
              dc0a 0038  ld   $38         ;040a 'Pos'
              dc0b 00ff  ld   $ff         ;040c RET
              dc0c 002b  ld   $2b         ;040d STW
              dc0d 003e  ld   $3e         ;040d 'Newline'
              dc0e 00cd  ld   $cd         ;040f DEF
              dc0f 006b  ld   $6b
              dc10 0009  ld   $09         ;0411 9
              dc11 0053  ld   $53         ;0412 'S'
              dc12 0044  ld   $44         ;0413 'D'
              dc13 0043  ld   $43         ;0414 'C'
              dc14 0061  ld   $61         ;0415 'a'
              dc15 0072  ld   $72         ;0416 'r'
              dc16 0064  ld   $64         ;0417 'd'
              dc17 0009  ld   $09         ;0418 9
              dc18 0020  ld   $20         ;0419 ' '
              dc19 0009  ld   $09         ;041a 9
              dc1a 0053  ld   $53         ;041b 'S'
              dc1b 006e  ld   $6e         ;041c 'n'
              dc1c 0061  ld   $61         ;041d 'a'
              dc1d 006b  ld   $6b         ;041e 'k'
              dc1e 0065  ld   $65         ;041f 'e'
              dc1f 000a  ld   $0a         ;0420 10
              dc20 0009  ld   $09         ;0421 9
              dc21 0052  ld   $52         ;0422 'R'
              dc22 0061  ld   $61         ;0423 'a'
              dc23 0063  ld   $63         ;0424 'c'
              dc24 0065  ld   $65         ;0425 'e'
              dc25 0072  ld   $72         ;0426 'r'
              dc26 0009  ld   $09         ;0427 9
              dc27 0020  ld   $20         ;0428 ' '
              dc28 0020  ld   $20         ;0429 ' '
              dc29 0009  ld   $09         ;042a 9
              dc2a 0054  ld   $54         ;042b 'T'
              dc2b 0069  ld   $69         ;042c 'i'
              dc2c 0063  ld   $63         ;042d 'c'
              dc2d 0054  ld   $54         ;042e 'T'
              dc2e 0061  ld   $61         ;042f 'a'
              dc2f 0063  ld   $63         ;0430 'c'
              dc30 0054  ld   $54         ;0431 'T'
              dc31 006f  ld   $6f         ;0432 'o'
              dc32 0065  ld   $65         ;0433 'e'
              dc33 000a  ld   $0a         ;0434 10
              dc34 0009  ld   $09         ;0435 9
              dc35 004d  ld   $4d         ;0436 'M'
              dc36 0061  ld   $61         ;0437 'a'
              dc37 006e  ld   $6e         ;0438 'n'
              dc38 0064  ld   $64         ;0439 'd'
              dc39 0065  ld   $65         ;043a 'e'
              dc3a 006c  ld   $6c         ;043b 'l'
              dc3b 0062  ld   $62         ;043c 'b'
              dc3c 0072  ld   $72         ;043d 'r'
              dc3d 006f  ld   $6f         ;043e 'o'
              dc3e 0074  ld   $74         ;043f 't'
              dc3f 0009  ld   $09         ;0440 9
              dc40 0042  ld   $42         ;0441 'B'
              dc41 0041  ld   $41         ;0442 'A'
              dc42 0053  ld   $53         ;0443 'S'
              dc43 0049  ld   $49         ;0444 'I'
              dc44 0043  ld   $43         ;0445 'C'
              dc45 000a  ld   $0a         ;0446 10
              dc46 0009  ld   $09         ;0447 9
              dc47 0043  ld   $43         ;0448 'C'
              dc48 0072  ld   $72         ;0449 'r'
              dc49 0065  ld   $65         ;044a 'e'
              dc4a 0064  ld   $64         ;044b 'd'
              dc4b 0069  ld   $69         ;044c 'i'
              dc4c 0074  ld   $74         ;044d 't'
              dc4d 0073  ld   $73         ;044e 's'
              dc4e 0009  ld   $09         ;044f 9
              dc4f 0009  ld   $09         ;0450 9
              dc50 004d  ld   $4d         ;0451 'M'
              dc51 0053  ld   $53         ;0452 'S'
              dc52 0020  ld   $20         ;0453 ' '
              dc53 0042  ld   $42         ;0454 'B'
              dc54 0041  ld   $41         ;0455 'A'
              dc55 0053  ld   $53         ;0456 'S'
              dc56 0049  ld   $49         ;0457 'I'
              dc57 0043  ld   $43         ;0458 'C'
              dc58 000a  ld   $0a         ;0459 10
              dc59 0009  ld   $09         ;045a 9
              dc5a 004c  ld   $4c         ;045b 'L'
              dc5b 006f  ld   $6f         ;045c 'o'
              dc5c 0061  ld   $61         ;045d 'a'
              dc5d 0064  ld   $64         ;045e 'd'
              dc5e 0065  ld   $65         ;045f 'e'
              dc5f 0072  ld   $72         ;0460 'r'
              dc60 0009  ld   $09         ;0461 9
              dc61 0020  ld   $20         ;0462 ' '
              dc62 0009  ld   $09         ;0463 9
              dc63 0041  ld   $41         ;0464 'A'
              dc64 0070  ld   $70         ;0465 'p'
              dc65 0070  ld   $70         ;0466 'p'
              dc66 006c  ld   $6c         ;0467 'l'
              dc67 0065  ld   $65         ;0468 'e'
              dc68 002d  ld   $2d         ;0469 '-'
              dc69 0031  ld   $31         ;046a '1'
              dc6a 000a  ld   $0a         ;046b 10
              dc6b 0000  ld   $00         ;046c 0
              dc6c 002b  ld   $2b         ;046d STW
              dc6d 0050  ld   $50         ;046d 'MainMenu'
              dc6e 00cd  ld   $cd         ;046f DEF
              dc6f 00b9  ld   $b9
              dc70 0055  ld   $55         ;0471 'U'
              dc71 0073  ld   $73         ;0472 's'
              dc72 0065  ld   $65         ;0473 'e'
              dc73 0020  ld   $20         ;0474 ' '
              dc74 005b  ld   $5b         ;0475 91
              dc75 0041  ld   $41         ;0476 'A'
              dc76 0072  ld   $72         ;0477 'r'
              dc77 0072  ld   $72         ;0478 'r'
              dc78 006f  ld   $6f         ;0479 'o'
              dc79 0077  ld   $77         ;047a 'w'
              dc7a 0073  ld   $73         ;047b 's'
              dc7b 005d  ld   $5d         ;047c 93
              dc7c 0020  ld   $20         ;047d ' '
              dc7d 0074  ld   $74         ;047e 't'
              dc7e 006f  ld   $6f         ;047f 'o'
              dc7f 0020  ld   $20         ;0480 ' '
              dc80 0073  ld   $73         ;0481 's'
              dc81 0065  ld   $65         ;0482 'e'
              dc82 006c  ld   $6c         ;0483 'l'
              dc83 0065  ld   $65         ;0484 'e'
              dc84 0063  ld   $63         ;0485 'c'
              dc85 0074  ld   $74         ;0486 't'
              dc86 000a  ld   $0a         ;0487 10
              dc87 0050  ld   $50         ;0488 'P'
              dc88 0072  ld   $72         ;0489 'r'
              dc89 0065  ld   $65         ;048a 'e'
              dc8a 0073  ld   $73         ;048b 's'
              dc8b 0073  ld   $73         ;048c 's'
              dc8c 0020  ld   $20         ;048d ' '
              dc8d 005b  ld   $5b         ;048e 91
              dc8e 0041  ld   $41         ;048f 'A'
              dc8f 005d  ld   $5d         ;0490 93
              dc90 0020  ld   $20         ;0491 ' '
              dc91 0074  ld   $74         ;0492 't'
              dc92 006f  ld   $6f         ;0493 'o'
              dc93 0020  ld   $20         ;0494 ' '
              dc94 0073  ld   $73         ;0495 's'
              dc95 0074  ld   $74         ;0496 't'
              dc96 0061  ld   $61         ;0497 'a'
              dc97 0072  ld   $72         ;0498 'r'
              dc98 0074  ld   $74         ;0499 't'
              dc99 0020  ld   $20         ;049a ' '
              dc9a 0070  ld   $70         ;049b 'p'
              dc9b 0072  ld   $72         ;049c 'r'
              dc9c 006f  ld   $6f         ;049d 'o'
              dc9d 0067  ld   $67         ;049e 'g'
              dc9e 0072  ld   $72         ;049f 'r'
              dc9f 0061  ld   $61         ;04a0 'a'
              dca0 006d  ld   $6d         ;04a1 'm'
              dca1 000a  ld   $0a         ;04a2 10
              dca2 000a  ld   $0a         ;04a3 10
              dca3 0048  ld   $48         ;04a4 'H'
              dca4 006f  ld   $6f         ;04a5 'o'
              dca5 006c  ld   $6c         ;04a6 'l'
              dca6 0064  ld   $64         ;04a7 'd'
              dca7 0020  ld   $20         ;04a8 ' '
              dca8 005b  ld   $5b         ;04a9 91
              dca9 0053  ld   $53         ;04aa 'S'
              dcaa 0074  ld   $74         ;04ab 't'
              dcab 0061  ld   $61         ;04ac 'a'
              dcac 0072  ld   $72         ;04ad 'r'
              dcad 0074  ld   $74         ;04ae 't'
              dcae 005d  ld   $5d         ;04af 93
              dcaf 0020  ld   $20         ;04b0 ' '
              dcb0 0066  ld   $66         ;04b1 'f'
              dcb1 006f  ld   $6f         ;04b2 'o'
              dcb2 0072  ld   $72         ;04b3 'r'
              dcb3 0020  ld   $20         ;04b4 ' '
              dcb4 0072  ld   $72         ;04b5 'r'
              dcb5 0065  ld   $65         ;04b6 'e'
              dcb6 0073  ld   $73         ;04b7 's'
              dcb7 0065  ld   $65         ;04b8 'e'
              dcb8 0074  ld   $74         ;04b9 't'
              dcb9 0000  ld   $00         ;04ba 0
              dcba 002b  ld   $2b         ;04bb STW
              dcbb 0052  ld   $52         ;04bb 'HelpText'
              dcbc 0093  ld   $93         ;04bd INC
              dcbd 001b  ld   $1b         ;04bd '_vLR'+1
              dcbe 00ff  ld   $ff         ;04bf RET
              dcbf 0005  ld   $05         ;| RAM segment address (high byte first)
              dcc0 0000  ld   $00         ;|
              dcc1 00b7  ld   $b7         ;| Length (1..256)
              dcc2 00cd  ld   $cd         ;0500 DEF
              dcc3 0011  ld   $11
              dcc4 0075  ld   $75         ;0502 PUSH
              dcc5 0021  ld   $21         ;0503 LDW
              dcc6 0038  ld   $38         ;0503 'Pos'
              dcc7 00e6  ld   $e6         ;0505 SUBI
              dcc8 000c  ld   $0c
              dcc9 002b  ld   $2b         ;0507 STW
              dcca 0038  ld   $38         ;0507 'Pos'
              dccb 0059  ld   $59         ;0509 LDI
              dccc 0020  ld   $20
              dccd 002b  ld   $2b         ;050b STW
              dcce 0030  ld   $30         ;050b 'Char'
              dccf 00cf  ld   $cf         ;050d CALL
              dcd0 003a  ld   $3a         ;050d 'PrintChar'
              dcd1 00cf  ld   $cf         ;050f CALL
              dcd2 003a  ld   $3a         ;050f 'PrintChar'
              dcd3 0063  ld   $63         ;0511 POP
              dcd4 00ff  ld   $ff         ;0512 RET
              dcd5 002b  ld   $2b         ;0513 STW
              dcd6 004a  ld   $4a         ;0513 'WipeOutArrow'
              dcd7 00cd  ld   $cd         ;0515 DEF
              dcd8 0030  ld   $30
              dcd9 0075  ld   $75         ;0517 PUSH
              dcda 0059  ld   $59         ;0518 LDI
              dcdb 002a  ld   $2a
              dcdc 002b  ld   $2b         ;051a STW
              dcdd 0036  ld   $36         ;051a 'Color'
              dcde 00cf  ld   $cf         ;051c CALL
              dcdf 0044  ld   $44         ;051c 'PrintDivider'
              dce0 0059  ld   $59         ;051e LDI
              dce1 000f  ld   $0f
              dce2 002b  ld   $2b         ;0520 STW
              dce3 0036  ld   $36         ;0520 'Color'
              dce4 0021  ld   $21         ;0522 LDW
              dce5 0050  ld   $50         ;0522 'MainMenu'
              dce6 00cf  ld   $cf         ;0524 CALL
              dce7 0040  ld   $40         ;0524 'PrintText'
              dce8 0059  ld   $59         ;0526 LDI
              dce9 002a  ld   $2a
              dcea 002b  ld   $2b         ;0528 STW
              dceb 0036  ld   $36         ;0528 'Color'
              dcec 00cf  ld   $cf         ;052a CALL
              dced 0044  ld   $44         ;052a 'PrintDivider'
              dcee 0021  ld   $21         ;052c LDW
              dcef 0052  ld   $52         ;052c 'HelpText'
              dcf0 00cf  ld   $cf         ;052e CALL
              dcf1 0040  ld   $40         ;052e 'PrintText'
              dcf2 0063  ld   $63         ;0530 POP
              dcf3 00ff  ld   $ff         ;0531 RET
              dcf4 002b  ld   $2b         ;0532 STW
              dcf5 0054  ld   $54         ;0532 'PrintMenu'
              dcf6 001a  ld   $1a         ;0534 LD
              dcf7 0021  ld   $21
              dcf8 0088  ld   $88         ;0536 ORI
              dcf9 0003  ld   $03
              dcfa 005e  ld   $5e         ;0538 ST
              dcfb fe00  bra  ac          ;+-----------------------------------+
              dcfc fcfd  bra  $dcfd       ;|                                   |
              dcfd 1418  ld   $18,y       ;| Trampoline for page $dc00 lookups |
              dcfe e006  jmp  y,$06       ;|                                   |
              dcff c218  st   [$18]       ;+-----------------------------------+
              dd00 0021  ld   $21
              dd01 0059  ld   $59         ;053a LDI
              dd02 005a  ld   $5a
              dd03 005e  ld   $5e         ;053c ST
              dd04 002c  ld   $2c
              dd05 0011  ld   $11         ;053e LDWI
              dd06 0002  ld   $02
              dd07 0020  ld   $20
              dd08 002b  ld   $2b         ;0541 STW
              dd09 0038  ld   $38         ;0541 'Pos'
              dd0a 00cf  ld   $cf         ;0543 CALL
              dd0b 0054  ld   $54         ;0543 'PrintMenu'
              dd0c 0059  ld   $59         ;0545 LDI
              dd0d 0000  ld   $00
              dd0e 002b  ld   $2b         ;0547 STW
              dd0f 0046  ld   $46         ;0547 'MenuItem'
              dd10 00cf  ld   $cf         ;0549 CALL
              dd11 004e  ld   $4e         ;0549 'SelectMenu'
              dd12 0011  ld   $11         ;054b LDWI
              dd13 0000  ld   $00
              dd14 0008  ld   $08
              dd15 002b  ld   $2b         ;054e STW
              dd16 0028  ld   $28         ;054e '_sysArgs4'
              dd17 0011  ld   $11         ;0550 LDWI
              dd18 0001  ld   $01
              dd19 0088  ld   $88
              dd1a 002b  ld   $2b         ;0553 STW
              dd1b 0032  ld   $32         ;0553 'i'
              dd1c 0011  ld   $11         ;0555 LDWI
              dd1d 0080  ld   $80
              dd1e 00ff  ld   $ff
              dd1f 002b  ld   $2b         ;0558 STW
              dd20 0042  ld   $42         ;0558 'j'
              dd21 0021  ld   $21         ;055a LDW
              dd22 0038  ld   $38         ;055a 'Pos'
              dd23 00e3  ld   $e3         ;055c ADDI
              dd24 0030  ld   $30
              dd25 00f8  ld   $f8         ;055e ANDW
              dd26 0042  ld   $42         ;055e 'j'
              dd27 002b  ld   $2b         ;0560 STW
              dd28 0056  ld   $56         ;0560 'q'
              dd29 0011  ld   $11         ;0562 LDWI
              dd2a 00e1  ld   $e1
              dd2b 0004  ld   $04
              dd2c 002b  ld   $2b         ;0565 STW
              dd2d 0022  ld   $22         ;0565 '_sysFn'
              dd2e 0059  ld   $59         ;0567 LDI
              dd2f 0020  ld   $20
              dd30 005e  ld   $5e         ;0569 ST
              dd31 0024  ld   $24
              dd32 005e  ld   $5e         ;056b ST
              dd33 0025  ld   $25
              dd34 0021  ld   $21         ;056d LDW
              dd35 0028  ld   $28         ;056d '_sysArgs4'
              dd36 00e3  ld   $e3         ;056f ADDI
              dd37 0030  ld   $30
              dd38 00f8  ld   $f8         ;0571 ANDW
              dd39 0042  ld   $42         ;0571 'j'
              dd3a 00fc  ld   $fc         ;0573 XORW
              dd3b 0056  ld   $56         ;0573 'q'
              dd3c 0035  ld   $35         ;0575 BCC
              dd3d 003f  ld   $3f         ;0576 EQ
              dd3e 007f  ld   $7f
              dd3f 001a  ld   $1a         ;0578 LD
              dd40 0059  ld   $59         ;0578 'p'+1
              dd41 008c  ld   $8c         ;057a XORI
              dd42 0078  ld   $78
              dd43 0035  ld   $35         ;057c BCC
              dd44 003f  ld   $3f         ;057d EQ
              dd45 007f  ld   $7f
              dd46 00b4  ld   $b4         ;057f SYS
              dd47 00cc  ld   $cc
              dd48 0011  ld   $11         ;0581 LDWI
              dd49 0000  ld   $00
              dd4a 0008  ld   $08
              dd4b 0099  ld   $99         ;0584 921
              dd4c 0028  ld   $28         ;0585 40
              dd4d 002b  ld   $2b         ;0586 STW
              dd4e 0028  ld   $28
              dd4f 0035  ld   $35         ;0588 BCC
              dd50 004d  ld   $4d         ;0589 GT
              dd51 006d  ld   $6d
              dd52 0099  ld   $99         ;058b ADDW
              dd53 0032  ld   $32         ;058b 'i'
              dd54 002b  ld   $2b         ;058d STW
              dd55 0028  ld   $28
              dd56 0082  ld   $82         ;058f ANDI
              dd57 00ff  ld   $ff
              dd58 008c  ld   $8c         ;0591 XORI
              dd59 00a0  ld   $a0
              dd5a 0035  ld   $35         ;0593 BCC
              dd5b 0072  ld   $72         ;0594 NE
              dd5c 006b  ld   $6b
              dd5d 0059  ld   $59         ;0596 LDI
              dd5e 00ad  ld   $ad
              dd5f 002b  ld   $2b         ;0598 STW
              dd60 0022  ld   $22         ;0598 '_sysFn'
              dd61 0021  ld   $21         ;059a LDW
              dd62 004c  ld   $4c         ;059a 'Program'
              dd63 002b  ld   $2b         ;059c STW
              dd64 0024  ld   $24         ;059c '_sysArgs0'
              dd65 0011  ld   $11         ;059e LDWI
              dd66 0000  ld   $00
              dd67 0002  ld   $02
              dd68 002b  ld   $2b         ;05a1 STW
              dd69 001a  ld   $1a         ;05a1 '_vLR'
              dd6a 0021  ld   $21         ;05a3 LDW
              dd6b 0046  ld   $46         ;05a3 'MenuItem'
              dd6c 00e6  ld   $e6         ;05a5 SUBI
              dd6d 0008  ld   $08
              dd6e 0035  ld   $35         ;05a7 BCC
              dd6f 003f  ld   $3f         ;05a8 EQ
              dd70 00aa  ld   $aa
              dd71 00e6  ld   $e6         ;05aa SUBI
              dd72 0001  ld   $01
              dd73 0035  ld   $35         ;05ac BCC
              dd74 0072  ld   $72         ;05ad NE
              dd75 00b3  ld   $b3
              dd76 001a  ld   $1a         ;05af LD
              dd77 0021  ld   $21
              dd78 0082  ld   $82         ;05b1 ANDI
              dd79 00f8  ld   $f8
              dd7a 005e  ld   $5e         ;05b3 ST
              dd7b 0021  ld   $21
              dd7c 00b4  ld   $b4         ;05b5 SYS
              dd7d 00e3  ld   $e3
              dd7e 0000  ld   $00         ;End of Apps/MainMenu/MainMenu_vX0.gcl, size 784
                                          ;+-----------------------------------+
                                          ;| Core/Reset_vX0.gcl                |
                                          ;+-----------------------------------+
              dd7f dc4d  st   $4d,[y,x++] ;'M'
              dd80 dc61  st   $61,[y,x++] ;'a'
              dd81 dc69  st   $69,[y,x++] ;'i'
              dd82 dc6e  st   $6e,[y,x++] ;'n'
              dd83 dc00  st   $00,[y,x++] ;'\x00'
              dd84 dc00  st   $00,[y,x++] ;'\x00'
              dd85 dc00  st   $00,[y,x++] ;'\x00'
              dd86 dc00  st   $00,[y,x++] ;'\x00'
              dd87 006f  ld   $6f
              dd88 c218  st   [$18]
              dd89 00da  ld   $da
              dd8a 14e0  ld   $e0,y
              dd8b e071  jmp  y,$71
              dd8c c219  st   [$19]
Reset:        dd8d 0002  ld   $02         ;| RAM segment address (high byte first)
              dd8e 0000  ld   $00         ;|
              dd8f 00f3  ld   $f3         ;| Length (1..256)
              dd90 0011  ld   $11         ;0200 LDWI
              dd91 00f8  ld   $f8
              dd92 0001  ld   $01
              dd93 002b  ld   $2b         ;0203 STW
              dd94 0030  ld   $30         ;0203 'CtrlBits'
              dd95 00cd  ld   $cd         ;0205 DEF
              dd96 0075  ld   $75
              dd97 0075  ld   $75         ;0207 PUSH
              dd98 001a  ld   $1a         ;0208 LD
              dd99 0001  ld   $01
              dd9a 00e6  ld   $e6         ;020a SUBI
              dd9b 0001  ld   $01
              dd9c 0082  ld   $82         ;020c ANDI
              dd9d 00ff  ld   $ff
              dd9e 00e3  ld   $e3         ;020e ADDI
              dd9f 0001  ld   $01
              dda0 002b  ld   $2b         ;0210 STW
              dda1 0032  ld   $32         ;0210 'i'
              dda2 0011  ld   $11         ;0212 LDWI
              dda3 0009  ld   $09
              dda4 000b  ld   $0b
              dda5 002b  ld   $2b         ;0215 STW
              dda6 0022  ld   $22         ;0215 '_sysFn'
              dda7 0059  ld   $59         ;0217 LDI
              dda8 00aa  ld   $aa
              dda9 005e  ld   $5e         ;0219 ST
              ddaa 007c  ld   $7c
              ddab 0059  ld   $59         ;021b LDI
              ddac 007c  ld   $7c
              ddad 00b4  ld   $b4         ;021d SYS
              ddae 00fb  ld   $fb
              ddaf 001a  ld   $1a         ;021f LD
              ddb0 007c  ld   $7c
              ddb1 008c  ld   $8c         ;0221 XORI
              ddb2 00aa  ld   $aa
              ddb3 0035  ld   $35         ;0223 BCC
              ddb4 003f  ld   $3f         ;0224 EQ
              ddb5 002a  ld   $2a
              ddb6 0059  ld   $59         ;0226 LDI
              ddb7 0000  ld   $00
              ddb8 00f0  ld   $f0         ;0228 POKE
              ddb9 0030  ld   $30         ;0228 'CtrlBits'
              ddba 0090  ld   $90         ;022a BRA
              ddbb 0054  ld   $54
              ddbc 0011  ld   $11         ;022c LDWI
              ddbd 0024  ld   $24
              ddbe 0080  ld   $80
              ddbf 002b  ld   $2b         ;022f STW
              ddc0 0034  ld   $34         ;022f 'q'
              ddc1 0059  ld   $59         ;0231 LDI
              ddc2 00bc  ld   $bc
              ddc3 00b4  ld   $b4         ;0233 SYS
              ddc4 00fb  ld   $fb
              ddc5 0021  ld   $21         ;0235 LDW
              ddc6 0034  ld   $34         ;0235 'q'
              ddc7 00ad  ld   $ad         ;0237 PEEK
              ddc8 008c  ld   $8c         ;0238 XORI
              ddc9 00ff  ld   $ff
              ddca 00f0  ld   $f0         ;023a POKE
              ddcb 0034  ld   $34         ;023a 'q'
              ddcc 002b  ld   $2b         ;023c STW
              ddcd 0024  ld   $24         ;023c '_sysArgs0'
              ddce 008c  ld   $8c         ;023e XORI
              ddcf 00ff  ld   $ff
              ddd0 00f0  ld   $f0         ;0240 POKE
              ddd1 0034  ld   $34         ;0240 'q'
              ddd2 00fc  ld   $fc         ;0242 XORW
              ddd3 0024  ld   $24         ;0242 '_sysArgs0'
              ddd4 0035  ld   $35         ;0244 BCC
              ddd5 003f  ld   $3f         ;0245 EQ
              ddd6 004f  ld   $4f
              ddd7 0059  ld   $59         ;0247 LDI
              ddd8 0031  ld   $31
              ddd9 002b  ld   $2b         ;0249 STW
              ddda 0036  ld   $36         ;0249 'Char'
              dddb 00cf  ld   $cf         ;024b CALL
              dddc 0038  ld   $38         ;024b 'PrintChar'
              dddd 0059  ld   $59         ;024d LDI
              ddde 0070  ld   $70
              dddf 002b  ld   $2b         ;024f STW
              dde0 0032  ld   $32         ;024f 'i'
              dde1 0011  ld   $11         ;0251 LDWI
              dde2 007c  ld   $7c
              dde3 0080  ld   $80
              dde4 00b4  ld   $b4         ;0254 SYS
              dde5 00fb  ld   $fb
              dde6 0011  ld   $11         ;0256 LDWI
              dde7 002f  ld   $2f
              dde8 002f  ld   $2f
              dde9 002b  ld   $2b         ;0259 STW
              ddea 0036  ld   $36         ;0259 'Char'
              ddeb 0021  ld   $21         ;025b LDW
              ddec 0032  ld   $32         ;025b 'i'
              dded 0093  ld   $93         ;025d INC
              ddee 0036  ld   $36         ;025d 'Char'
              ddef 00e6  ld   $e6         ;025f SUBI
              ddf0 0028  ld   $28
              ddf1 0035  ld   $35         ;0261 BCC
              ddf2 0053  ld   $53         ;0262 GE
              ddf3 005b  ld   $5b
              ddf4 00e3  ld   $e3         ;0264 ADDI
              ddf5 0028  ld   $28
              ddf6 0093  ld   $93         ;0266 INC
              ddf7 0037  ld   $37         ;0266 'Char'+1
              ddf8 00e6  ld   $e6         ;0268 SUBI
              ddf9 0004  ld   $04
              ddfa 0035  ld   $35         ;026a BCC
              ddfb fe00  bra  ac          ;+-----------------------------------+
              ddfc fcfd  bra  $ddfd       ;|                                   |
              ddfd 1418  ld   $18,y       ;| Trampoline for page $dd00 lookups |
              ddfe e006  jmp  y,$06       ;|                                   |
              ddff c218  st   [$18]       ;+-----------------------------------+
              de00 0053  ld   $53         ;026b GE
              de01 0064  ld   $64
              de02 00cf  ld   $cf         ;026d CALL
              de03 0038  ld   $38         ;026d 'PrintChar'
              de04 001a  ld   $1a         ;026f LD
              de05 0037  ld   $37         ;026f 'Char'+1
              de06 002b  ld   $2b         ;0271 STW
              de07 0036  ld   $36         ;0271 'Char'
              de08 00cf  ld   $cf         ;0273 CALL
              de09 0038  ld   $38         ;0273 'PrintChar'
              de0a 0063  ld   $63         ;0275 POP
              de0b 00ff  ld   $ff         ;0276 RET
              de0c 002b  ld   $2b         ;0277 STW
              de0d 003a  ld   $3a         ;0277 'CheckMemory'
              de0e 00cd  ld   $cd         ;0279 DEF
              de0f 009d  ld   $9d
              de10 0075  ld   $75         ;027b PUSH
              de11 002b  ld   $2b         ;027c STW
              de12 003c  ld   $3c         ;027c 'Text'
              de13 0021  ld   $21         ;027e LDW
              de14 003c  ld   $3c         ;027e 'Text'
              de15 00ad  ld   $ad         ;0280 PEEK
              de16 0035  ld   $35         ;0281 BCC
              de17 003f  ld   $3f         ;0282 EQ
              de18 009b  ld   $9b
              de19 002b  ld   $2b         ;0284 STW
              de1a 0036  ld   $36         ;0284 'Char'
              de1b 008c  ld   $8c         ;0286 XORI
              de1c 000a  ld   $0a
              de1d 0035  ld   $35         ;0288 BCC
              de1e 003f  ld   $3f         ;0289 EQ
              de1f 008d  ld   $8d
              de20 00cf  ld   $cf         ;028b CALL
              de21 0038  ld   $38         ;028b 'PrintChar'
              de22 0090  ld   $90         ;028d BRA
              de23 0097  ld   $97
              de24 0059  ld   $59         ;028f LDI
              de25 0002  ld   $02
              de26 005e  ld   $5e         ;0291 ST
              de27 003e  ld   $3e         ;0291 'Pos'
              de28 001a  ld   $1a         ;0293 LD
              de29 003f  ld   $3f         ;0293 'Pos'+1
              de2a 00e3  ld   $e3         ;0295 ADDI
              de2b 0008  ld   $08
              de2c 005e  ld   $5e         ;0297 ST
              de2d 003f  ld   $3f         ;0297 'Pos'+1
              de2e 0093  ld   $93         ;0299 INC
              de2f 003c  ld   $3c         ;0299 'Text'
              de30 0090  ld   $90         ;029b BRA
              de31 007c  ld   $7c
              de32 0063  ld   $63         ;029d POP
              de33 00ff  ld   $ff         ;029e RET
              de34 002b  ld   $2b         ;029f STW
              de35 0040  ld   $40         ;029f 'PrintS'
              de36 00cd  ld   $cd         ;02a1 DEF
              de37 00ec  ld   $ec
              de38 001a  ld   $1a         ;02a3 LD
              de39 0036  ld   $36         ;02a3 'Char'
              de3a 00e6  ld   $e6         ;02a5 SUBI
              de3b 0052  ld   $52
              de3c 0035  ld   $35         ;02a7 BCC
              de3d 0053  ld   $53         ;02a8 GE
              de3e 00b1  ld   $b1
              de3f 00e3  ld   $e3         ;02aa ADDI
              de40 0032  ld   $32
              de41 002b  ld   $2b         ;02ac STW
              de42 0032  ld   $32         ;02ac 'i'
              de43 0011  ld   $11         ;02ae LDWI
              de44 0000  ld   $00
              de45 0007  ld   $07
              de46 0090  ld   $90         ;02b1 BRA
              de47 00b6  ld   $b6
              de48 002b  ld   $2b         ;02b3 STW
              de49 0032  ld   $32         ;02b3 'i'
              de4a 0011  ld   $11         ;02b5 LDWI
              de4b 0000  ld   $00
              de4c 0008  ld   $08
              de4d 002b  ld   $2b         ;02b8 STW
              de4e 0042  ld   $42         ;02b8 'j'
              de4f 0021  ld   $21         ;02ba LDW
              de50 0032  ld   $32         ;02ba 'i'
              de51 00e9  ld   $e9         ;02bc LSLW
              de52 00e9  ld   $e9         ;02bd LSLW
              de53 0099  ld   $99         ;02be ADDW
              de54 0032  ld   $32         ;02be 'i'
              de55 0099  ld   $99         ;02c0 ADDW
              de56 0042  ld   $42         ;02c0 'j'
              de57 002b  ld   $2b         ;02c2 STW
              de58 0042  ld   $42         ;02c2 'j'
              de59 0011  ld   $11         ;02c4 LDWI
              de5a 00e1  ld   $e1
              de5b 0004  ld   $04
              de5c 002b  ld   $2b         ;02c7 STW
              de5d 0022  ld   $22         ;02c7 '_sysFn'
              de5e 0011  ld   $11         ;02c9 LDWI
              de5f 0020  ld   $20
              de60 003f  ld   $3f
              de61 002b  ld   $2b         ;02cc STW
              de62 0024  ld   $24
              de63 0021  ld   $21         ;02ce LDW
              de64 003e  ld   $3e         ;02ce 'Pos'
              de65 002b  ld   $2b         ;02d0 STW
              de66 0028  ld   $28
              de67 00e3  ld   $e3         ;02d2 ADDI
              de68 0006  ld   $06
              de69 002b  ld   $2b         ;02d4 STW
              de6a 003e  ld   $3e         ;02d4 'Pos'
              de6b 0059  ld   $59         ;02d6 LDI
              de6c 0005  ld   $05
              de6d 002b  ld   $2b         ;02d8 STW
              de6e 0032  ld   $32         ;02d8 'i'
              de6f 0021  ld   $21         ;02da LDW
              de70 0042  ld   $42         ;02da 'j'
              de71 007f  ld   $7f         ;02dc LUP
              de72 0000  ld   $00
              de73 005e  ld   $5e         ;02de ST
              de74 0026  ld   $26
              de75 00b4  ld   $b4         ;02e0 SYS
              de76 00cc  ld   $cc
              de77 0093  ld   $93         ;02e2 INC
              de78 0042  ld   $42         ;02e2 'j'
              de79 0093  ld   $93         ;02e4 INC
              de7a 0028  ld   $28
              de7b 0021  ld   $21         ;02e6 LDW
              de7c 0032  ld   $32         ;02e6 'i'
              de7d 00e6  ld   $e6         ;02e8 SUBI
              de7e 0001  ld   $01
              de7f 0035  ld   $35         ;02ea BCC
              de80 004d  ld   $4d         ;02eb GT
              de81 00d6  ld   $d6
              de82 00ff  ld   $ff         ;02ed RET
              de83 002b  ld   $2b         ;02ee STW
              de84 0038  ld   $38         ;02ee 'PrintChar'
              de85 0093  ld   $93         ;02f0 INC
              de86 001b  ld   $1b
              de87 00ff  ld   $ff         ;02f2 RET
              de88 0003  ld   $03         ;| RAM segment address (high byte first)
              de89 0000  ld   $00         ;|
              de8a 00ea  ld   $ea         ;| Length (1..256)
              de8b 00cd  ld   $cd         ;0300 DEF
              de8c 0037  ld   $37
              de8d 002b  ld   $2b         ;0302 STW
              de8e 0032  ld   $32         ;0302 'i'
              de8f 0088  ld   $88         ;0304 ORI
              de90 00ff  ld   $ff
              de91 008c  ld   $8c         ;0306 XORI
              de92 00ff  ld   $ff
              de93 0088  ld   $88         ;0308 ORI
              de94 00fa  ld   $fa
              de95 002b  ld   $2b         ;030a STW
              de96 0044  ld   $44         ;030a 'p'
              de97 001a  ld   $1a         ;030c LD
              de98 0032  ld   $32         ;030c 'i'
              de99 002b  ld   $2b         ;030e STW
              de9a 0032  ld   $32         ;030e 'i'
              de9b 0059  ld   $59         ;0310 LDI
              de9c 0000  ld   $00
              de9d 00f0  ld   $f0         ;0312 POKE
              de9e 0044  ld   $44         ;0312 'p'
              de9f 0093  ld   $93         ;0314 INC
              dea0 0044  ld   $44         ;0314 'p'
              dea1 0059  ld   $59         ;0316 LDI
              dea2 0003  ld   $03
              dea3 00f0  ld   $f0         ;0318 POKE
              dea4 0044  ld   $44         ;0318 'p'
              dea5 0093  ld   $93         ;031a INC
              dea6 0044  ld   $44         ;031a 'p'
              dea7 0011  ld   $11         ;031c LDWI
              dea8 0000  ld   $00
              dea9 0009  ld   $09
              deaa 0099  ld   $99         ;031f ADDW
              deab 0032  ld   $32         ;031f 'i'
              deac 007f  ld   $7f         ;0321 LUP
              dead 0000  ld   $00
              deae 00f0  ld   $f0         ;0323 POKE
              deaf 0044  ld   $44         ;0323 'p'
              deb0 0093  ld   $93         ;0325 INC
              deb1 0044  ld   $44         ;0325 'p'
              deb2 0011  ld   $11         ;0327 LDWI
              deb3 0000  ld   $00
              deb4 0009  ld   $09
              deb5 0099  ld   $99         ;032a ADDW
              deb6 0032  ld   $32         ;032a 'i'
              deb7 007f  ld   $7f         ;032c LUP
              deb8 0001  ld   $01
              deb9 00f0  ld   $f0         ;032e POKE
              deba 0044  ld   $44         ;032e 'p'
              debb 0093  ld   $93         ;0330 INC
              debc 0044  ld   $44         ;0330 'p'
              debd 00f0  ld   $f0         ;0332 POKE
              debe 0044  ld   $44         ;0332 'p'
              debf 0093  ld   $93         ;0334 INC
              dec0 0044  ld   $44         ;0334 'p'
              dec1 00f0  ld   $f0         ;0336 POKE
              dec2 0044  ld   $44         ;0336 'p'
              dec3 00ff  ld   $ff         ;0338 RET
              dec4 002b  ld   $2b         ;0339 STW
              dec5 0046  ld   $46         ;0339 'SetupChannel'
              dec6 00cd  ld   $cd         ;033b DEF
              dec7 00c9  ld   $c9
              dec8 0075  ld   $75         ;033d PUSH
              dec9 0059  ld   $59         ;033e LDI
              deca 0010  ld   $10
              decb 002b  ld   $2b         ;0340 STW
              decc 0042  ld   $42         ;0340 'j'
              decd 0059  ld   $59         ;0342 LDI
              dece 000a  ld   $0a
              decf 002b  ld   $2b         ;0344 STW
              ded0 0032  ld   $32         ;0344 'i'
              ded1 00cf  ld   $cf         ;0346 CALL
              ded2 0048  ld   $48         ;0346 'SendOnesToCard'
              ded3 0021  ld   $21         ;0348 LDW
              ded4 0032  ld   $32         ;0348 'i'
              ded5 00e6  ld   $e6         ;034a SUBI
              ded6 0001  ld   $01
              ded7 0035  ld   $35         ;034c BCC
              ded8 004d  ld   $4d         ;034d GT
              ded9 0042  ld   $42
              deda 0011  ld   $11         ;034f LDWI
              dedb 0009  ld   $09
              dedc 000b  ld   $0b
              dedd 002b  ld   $2b         ;0352 STW
              dede 0022  ld   $22         ;0352 '_sysFn'
              dedf 0011  ld   $11         ;0354 LDWI
              dee0 0078  ld   $78
              dee1 0080  ld   $80
              dee2 00b4  ld   $b4         ;0357 SYS
              dee3 00fb  ld   $fb
              dee4 00cd  ld   $cd         ;0359 DEF
              dee5 0061  ld   $61
              dee6 00ff  ld   $ff         ;035b 255
              dee7 00ff  ld   $ff         ;035c 255
              dee8 0040  ld   $40         ;035d 64
              dee9 0000  ld   $00         ;035e 0
              deea 0000  ld   $00         ;035f 0
              deeb 0000  ld   $00         ;0360 0
              deec 0000  ld   $00         ;0361 0
              deed 0095  ld   $95         ;0362 149
              deee 002b  ld   $2b         ;0363 STW
              deef 0044  ld   $44         ;0363 'p'
              def0 0059  ld   $59         ;0365 LDI
              def1 0081  ld   $81
              def2 002b  ld   $2b         ;0367 STW
              def3 0034  ld   $34         ;0367 'q'
              def4 0059  ld   $59         ;0369 LDI
              def5 0008  ld   $08
              def6 002b  ld   $2b         ;036b STW
              def7 0032  ld   $32         ;036b 'i'
              def8 0021  ld   $21         ;036d LDW
              def9 0044  ld   $44         ;036d 'p'
              defa 00ad  ld   $ad         ;036f PEEK
              defb fe00  bra  ac          ;+-----------------------------------+
              defc fcfd  bra  $defd       ;|                                   |
              defd 1418  ld   $18,y       ;| Trampoline for page $de00 lookups |
              defe e006  jmp  y,$06       ;|                                   |
              deff c218  st   [$18]       ;+-----------------------------------+
              df00 0093  ld   $93         ;0370 INC
              df01 0044  ld   $44         ;0370 'p'
              df02 00f0  ld   $f0         ;0372 POKE
              df03 0034  ld   $34         ;0372 'q'
              df04 0093  ld   $93         ;0374 INC
              df05 0034  ld   $34         ;0374 'q'
              df06 0021  ld   $21         ;0376 LDW
              df07 0032  ld   $32         ;0376 'i'
              df08 00e6  ld   $e6         ;0378 SUBI
              df09 0001  ld   $01
              df0a 0035  ld   $35         ;037a BCC
              df0b 004d  ld   $4d         ;037b GT
              df0c 0069  ld   $69
              df0d 0059  ld   $59         ;037d LDI
              df0e 0081  ld   $81
              df0f 002b  ld   $2b         ;037f STW
              df10 0024  ld   $24         ;037f '_sysArgs0'
              df11 00e3  ld   $e3         ;0381 ADDI
              df12 0008  ld   $08
              df13 002b  ld   $2b         ;0383 STW
              df14 0026  ld   $26         ;0383 '_sysArgs2'
              df15 0011  ld   $11         ;0385 LDWI
              df16 0015  ld   $15
              df17 000b  ld   $0b
              df18 002b  ld   $2b         ;0388 STW
              df19 0022  ld   $22         ;0388 '_sysFn'
              df1a 00b4  ld   $b4         ;038a SYS
              df1b 00cc  ld   $cc
              df1c 0059  ld   $59         ;038c LDI
              df1d 0010  ld   $10
              df1e 002b  ld   $2b         ;038e STW
              df1f 0032  ld   $32         ;038e 'i'
              df20 00cf  ld   $cf         ;0390 CALL
              df21 0048  ld   $48         ;0390 'SendOnesToCard'
              df22 0082  ld   $82         ;0392 ANDI
              df23 0080  ld   $80
              df24 0035  ld   $35         ;0394 BCC
              df25 003f  ld   $3f         ;0395 EQ
              df26 009c  ld   $9c
              df27 0021  ld   $21         ;0397 LDW
              df28 0032  ld   $32         ;0397 'i'
              df29 00e6  ld   $e6         ;0399 SUBI
              df2a 0001  ld   $01
              df2b 0035  ld   $35         ;039b BCC
              df2c 004d  ld   $4d         ;039c GT
              df2d 008c  ld   $8c
              df2e 0011  ld   $11         ;039e LDWI
              df2f 0009  ld   $09
              df30 000b  ld   $0b
              df31 002b  ld   $2b         ;03a1 STW
              df32 0022  ld   $22         ;03a1 '_sysFn'
              df33 0011  ld   $11         ;03a3 LDWI
              df34 007c  ld   $7c
              df35 0080  ld   $80
              df36 00b4  ld   $b4         ;03a6 SYS
              df37 00fb  ld   $fb
              df38 001a  ld   $1a         ;03a8 LD
              df39 002a  ld   $2a
              df3a 0035  ld   $35         ;03aa BCC
              df3b 003f  ld   $3f         ;03ab EQ
              df3c 00c7  ld   $c7
              df3d 008c  ld   $8c         ;03ad XORI
              df3e 0001  ld   $01
              df3f 0035  ld   $35         ;03af BCC
              df40 0072  ld   $72         ;03b0 NE
              df41 00c0  ld   $c0
              df42 0011  ld   $11         ;03b2 LDWI
              df43 00f7  ld   $f7
              df44 00ce  ld   $ce
              df45 002b  ld   $2b         ;03b5 STW
              df46 0024  ld   $24         ;03b5 '_sysArgs0'
              df47 0011  ld   $11         ;03b7 LDWI
              df48 0000  ld   $00
              df49 0002  ld   $02
              df4a 002b  ld   $2b         ;03ba STW
              df4b 001a  ld   $1a         ;03ba '_vLR'
              df4c 0059  ld   $59         ;03bc LDI
              df4d 00ad  ld   $ad
              df4e 002b  ld   $2b         ;03be STW
              df4f 0022  ld   $22         ;03be '_sysFn'
              df50 00b4  ld   $b4         ;03c0 SYS
              df51 00e3  ld   $e3
              df52 0021  ld   $21         ;03c2 LDW
              df53 0042  ld   $42         ;03c2 'j'
              df54 00e6  ld   $e6         ;03c4 SUBI
              df55 0001  ld   $01
              df56 0035  ld   $35         ;03c6 BCC
              df57 004d  ld   $4d         ;03c7 GT
              df58 003e  ld   $3e
              df59 0063  ld   $63         ;03c9 POP
              df5a 00ff  ld   $ff         ;03ca RET
              df5b 002b  ld   $2b         ;03cb STW
              df5c 004a  ld   $4a         ;03cb 'CheckCard'
              df5d 00cd  ld   $cd         ;03cd DEF
              df5e 00e3  ld   $e3
              df5f 0059  ld   $59         ;03cf LDI
              df60 00ff  ld   $ff
              df61 005e  ld   $5e         ;03d1 ST
              df62 002a  ld   $2a
              df63 0059  ld   $59         ;03d3 LDI
              df64 002a  ld   $2a
              df65 002b  ld   $2b         ;03d5 STW
              df66 0024  ld   $24         ;03d5 '_sysArgs0'
              df67 00e3  ld   $e3         ;03d7 ADDI
              df68 0001  ld   $01
              df69 002b  ld   $2b         ;03d9 STW
              df6a 0026  ld   $26         ;03d9 '_sysArgs2'
              df6b 0011  ld   $11         ;03db LDWI
              df6c 0015  ld   $15
              df6d 000b  ld   $0b
              df6e 002b  ld   $2b         ;03de STW
              df6f 0022  ld   $22         ;03de '_sysFn'
              df70 00b4  ld   $b4         ;03e0 SYS
              df71 00cc  ld   $cc
              df72 001a  ld   $1a         ;03e2 LD
              df73 002a  ld   $2a
              df74 00ff  ld   $ff         ;03e4 RET
              df75 002b  ld   $2b         ;03e5 STW
              df76 0048  ld   $48         ;03e5 'SendOnesToCard'
              df77 0093  ld   $93         ;03e7 INC
              df78 001b  ld   $1b
              df79 00ff  ld   $ff         ;03e9 RET
              df7a 0004  ld   $04         ;| RAM segment address (high byte first)
              df7b 0000  ld   $00         ;|
              df7c 00d5  ld   $d5         ;| Length (1..256)
              df7d 0011  ld   $11         ;0400 LDWI
              df7e 000f  ld   $0f
              df7f 000b  ld   $0b
              df80 002b  ld   $2b         ;0403 STW
              df81 0022  ld   $22
              df82 0059  ld   $59         ;0405 LDI
              df83 0000  ld   $00
              df84 00b4  ld   $b4         ;0407 SYS
              df85 00f6  ld   $f6
              df86 0011  ld   $11         ;0409 LDWI
              df87 0012  ld   $12
              df88 000b  ld   $0b
              df89 002b  ld   $2b         ;040c STW
              df8a 0022  ld   $22
              df8b 0059  ld   $59         ;040e LDI
              df8c 0000  ld   $00
              df8d 00b4  ld   $b4         ;0410 SYS
              df8e 00f8  ld   $f8
              df8f 00b4  ld   $b4         ;0412 SYS
              df90 00f8  ld   $f8
              df91 00b4  ld   $b4         ;0414 SYS
              df92 00f8  ld   $f8
              df93 00b4  ld   $b4         ;0416 SYS
              df94 00f8  ld   $f8
              df95 0011  ld   $11         ;0418 LDWI
              df96 0058  ld   $58
              df97 0001  ld   $01
              df98 00cf  ld   $cf         ;041b CALL
              df99 0046  ld   $46         ;041b 'SetupChannel'
              df9a 0011  ld   $11         ;041d LDWI
              df9b 0070  ld   $70
              df9c 0002  ld   $02
              df9d 00cf  ld   $cf         ;0420 CALL
              df9e 0046  ld   $46         ;0420 'SetupChannel'
              df9f 0011  ld   $11         ;0422 LDWI
              dfa0 0078  ld   $78
              dfa1 0003  ld   $03
              dfa2 00cf  ld   $cf         ;0425 CALL
              dfa3 0046  ld   $46         ;0425 'SetupChannel'
              dfa4 0011  ld   $11         ;0427 LDWI
              dfa5 007e  ld   $7e
              dfa6 0004  ld   $04
              dfa7 00cf  ld   $cf         ;042a CALL
              dfa8 0046  ld   $46         ;042a 'SetupChannel'
              dfa9 0011  ld   $11         ;042c LDWI
              dfaa 0000  ld   $00
              dfab 0001  ld   $01
              dfac 002b  ld   $2b         ;042f STW
              dfad 0044  ld   $44         ;042f 'p'
              dfae 0011  ld   $11         ;0431 LDWI
              dfaf 0000  ld   $00
              dfb0 0008  ld   $08
              dfb1 002b  ld   $2b         ;0434 STW
              dfb2 0034  ld   $34         ;0434 'q'
              dfb3 001a  ld   $1a         ;0436 LD
              dfb4 0035  ld   $35         ;0436 'q'+1
              dfb5 00f0  ld   $f0         ;0438 POKE
              dfb6 0044  ld   $44         ;0438 'p'
              dfb7 0093  ld   $93         ;043a INC
              dfb8 0044  ld   $44         ;043a 'p'
              dfb9 0059  ld   $59         ;043c LDI
              dfba 0000  ld   $00
              dfbb 00f0  ld   $f0         ;043e POKE
              dfbc 0044  ld   $44         ;043e 'p'
              dfbd 0093  ld   $93         ;0440 INC
              dfbe 0044  ld   $44         ;0440 'p'
              dfbf 0093  ld   $93         ;0442 INC
              dfc0 0035  ld   $35         ;0442 'q'+1
              dfc1 0021  ld   $21         ;0444 LDW
              dfc2 0034  ld   $34         ;0444 'q'
              dfc3 0035  ld   $35         ;0446 BCC
              dfc4 004d  ld   $4d         ;0447 GT
              dfc5 0034  ld   $34
              dfc6 0011  ld   $11         ;0449 LDWI
              dfc7 0003  ld   $03
              dfc8 000b  ld   $0b
              dfc9 002b  ld   $2b         ;044c STW
              dfca 0022  ld   $22         ;044c '_sysFn'
              dfcb 0059  ld   $59         ;044e LDI
              dfcc 0020  ld   $20
              dfcd 005e  ld   $5e         ;0450 ST
              dfce 0025  ld   $25
              dfcf 0011  ld   $11         ;0452 LDWI
              dfd0 0000  ld   $00
              dfd1 0008  ld   $08
              dfd2 002b  ld   $2b         ;0455 STW
              dfd3 0044  ld   $44         ;0455 'p'
              dfd4 002b  ld   $2b         ;0457 STW
              dfd5 0026  ld   $26         ;0457 '_sysArgs2'
              dfd6 0059  ld   $59         ;0459 LDI
              dfd7 00a0  ld   $a0
              dfd8 005e  ld   $5e         ;045b ST
              dfd9 0024  ld   $24
              dfda 00b4  ld   $b4         ;045d SYS
              dfdb 00f4  ld   $f4
              dfdc 0011  ld   $11         ;045f LDWI
              dfdd 0000  ld   $00
              dfde 0001  ld   $01
              dfdf 0099  ld   $99         ;0462 ADDW
              dfe0 0044  ld   $44         ;0462 'p'
              dfe1 0035  ld   $35         ;0464 BCC
              dfe2 004d  ld   $4d         ;0465 GT
              dfe3 0053  ld   $53
              dfe4 001a  ld   $1a         ;0467 LD
              dfe5 002e  ld   $2e
              dfe6 0082  ld   $82         ;0469 ANDI
              dfe7 0080  ld   $80
              dfe8 0035  ld   $35         ;046b BCC
              dfe9 0072  ld   $72         ;046c NE
              dfea 0070  ld   $70
              dfeb 005e  ld   $5e         ;046e ST
              dfec 002e  ld   $2e
              dfed 005e  ld   $5e         ;0470 ST
              dfee 002d  ld   $2d
              dfef 0059  ld   $59         ;0472 LDI
              dff0 0009  ld   $09
              dff1 005e  ld   $5e         ;0474 ST
              dff2 002f  ld   $2f
              dff3 0011  ld   $11         ;0476 LDWI
              dff4 0014  ld   $14
              dff5 0008  ld   $08
              dff6 002b  ld   $2b         ;0479 STW
              dff7 003e  ld   $3e         ;0479 'Pos'
              dff8 00cd  ld   $cd         ;047b DEF
              dff9 0089  ld   $89
              dffa 002a  ld   $2a         ;047d '*'
              dffb fe00  bra  ac          ;+-----------------------------------+
              dffc fcfd  bra  $dffd       ;|                                   |
              dffd 1418  ld   $18,y       ;| Trampoline for page $df00 lookups |
              dffe e006  jmp  y,$06       ;|                                   |
              dfff c218  st   [$18]       ;+-----------------------------------+
              e000 002a  ld   $2a         ;047e '*'
              e001 002a  ld   $2a         ;047f '*'
              e002 0020  ld   $20         ;0480 ' '
              e003 0047  ld   $47         ;0481 'G'
              e004 0069  ld   $69         ;0482 'i'
              e005 0067  ld   $67         ;0483 'g'
              e006 0061  ld   $61         ;0484 'a'
              e007 0074  ld   $74         ;0485 't'
              e008 0072  ld   $72         ;0486 'r'
              e009 006f  ld   $6f         ;0487 'o'
              e00a 006e  ld   $6e         ;0488 'n'
              e00b 0020  ld   $20         ;0489 ' '
              e00c 0000  ld   $00         ;048a 0
              e00d 00cf  ld   $cf         ;048b CALL
              e00e 0040  ld   $40         ;048b 'PrintS'
              e00f 00cf  ld   $cf         ;048d CALL
              e010 003a  ld   $3a         ;048d 'CheckMemory'
              e011 00cd  ld   $cd         ;048f DEF
              e012 00b0  ld   $b0
              e013 004b  ld   $4b         ;0491 'K'
              e014 0020  ld   $20         ;0492 ' '
              e015 002a  ld   $2a         ;0493 '*'
              e016 002a  ld   $2a         ;0494 '*'
              e017 002a  ld   $2a         ;0495 '*'
              e018 0020  ld   $20         ;0496 ' '
              e019 000a  ld   $0a         ;0497 10
              e01a 0020  ld   $20         ;0498 ' '
              e01b 0054  ld   $54         ;0499 'T'
              e01c 0054  ld   $54         ;049a 'T'
              e01d 004c  ld   $4c         ;049b 'L'
              e01e 0020  ld   $20         ;049c ' '
              e01f 006d  ld   $6d         ;049d 'm'
              e020 0069  ld   $69         ;049e 'i'
              e021 0063  ld   $63         ;049f 'c'
              e022 0072  ld   $72         ;04a0 'r'
              e023 006f  ld   $6f         ;04a1 'o'
              e024 0063  ld   $63         ;04a2 'c'
              e025 006f  ld   $6f         ;04a3 'o'
              e026 006d  ld   $6d         ;04a4 'm'
              e027 0070  ld   $70         ;04a5 'p'
              e028 0075  ld   $75         ;04a6 'u'
              e029 0074  ld   $74         ;04a7 't'
              e02a 0065  ld   $65         ;04a8 'e'
              e02b 0072  ld   $72         ;04a9 'r'
              e02c 0020  ld   $20         ;04aa ' '
              e02d 0052  ld   $52         ;04ab 'R'
              e02e 004f  ld   $4f         ;04ac 'O'
              e02f 004d  ld   $4d         ;04ad 'M'
              e030 0076  ld   $76         ;04ae 'v'
              e031 0058  ld   $58         ;04af 'X'
              e032 0030  ld   $30         ;04b0 '0'
              e033 0000  ld   $00         ;04b1 0
              e034 00cf  ld   $cf         ;04b2 CALL
              e035 0040  ld   $40         ;04b2 'PrintS'
              e036 0011  ld   $11         ;04b4 LDWI
              e037 0000  ld   $00
              e038 000b  ld   $0b
              e039 002b  ld   $2b         ;04b7 STW
              e03a 0022  ld   $22         ;04b7 '_sysFn'
              e03b 0059  ld   $59         ;04b9 LDI
              e03c 0001  ld   $01
              e03d 00b4  ld   $b4         ;04bb SYS
              e03e 00e7  ld   $e7
              e03f 0021  ld   $21         ;04bd LDW
              e040 0030  ld   $30         ;04bd 'CtrlBits'
              e041 00ad  ld   $ad         ;04bf PEEK
              e042 0035  ld   $35         ;04c0 BCC
              e043 003f  ld   $3f         ;04c1 EQ
              e044 00c3  ld   $c3
              e045 00cf  ld   $cf         ;04c3 CALL
              e046 004a  ld   $4a         ;04c3 'CheckCard'
              e047 0011  ld   $11         ;04c5 LDWI
              e048 006f  ld   $6f
              e049 00da  ld   $da
              e04a 002b  ld   $2b         ;04c8 STW
              e04b 0024  ld   $24         ;04c8 '_sysArgs0'
              e04c 0011  ld   $11         ;04ca LDWI
              e04d 0000  ld   $00
              e04e 0002  ld   $02
              e04f 002b  ld   $2b         ;04cd STW
              e050 001a  ld   $1a         ;04cd '_vLR'
              e051 0059  ld   $59         ;04cf LDI
              e052 00ad  ld   $ad
              e053 002b  ld   $2b         ;04d1 STW
              e054 0022  ld   $22         ;04d1 '_sysFn'
              e055 00b4  ld   $b4         ;04d3 SYS
              e056 00e3  ld   $e3
              e057 0000  ld   $00         ;End of Core/Reset_vX0.gcl, size 715
sys_ReadRomDir:
              e058 f05e  beq  .sysDir#20
              e059 1024  ld   $24,x
              e05a 1600  ld   ac,y
              e05b 0118  ld   [$18]
              e05c a00e  suba $0e
              e05d e200  jmp  y,ac
.sysDir#20:   e05e 1400  ld   $00,y
              e05f 0063  ld   $63
              e060 14e0  ld   $e0,y
              e061 e200  jmp  y,ac
              e062 1400  ld   $00,y
.sysDir#25:   e063 dc52  st   $52,[y,x++] ;'R'
              e064 dc65  st   $65,[y,x++] ;'e'
              e065 dc73  st   $73,[y,x++] ;'s'
              e066 dc65  st   $65,[y,x++] ;'e'
              e067 dc74  st   $74,[y,x++] ;'t'
              e068 dc00  st   $00,[y,x++] ;'\x00'
              e069 dc00  st   $00,[y,x++] ;'\x00'
              e06a dc00  st   $00,[y,x++] ;'\x00'
              e06b 008d  ld   $8d
              e06c c218  st   [$18]
              e06d 00dd  ld   $dd
              e06e 14e0  ld   $e0,y
              e06f e071  jmp  y,$71
              e070 c219  st   [$19]
.sysDir#39:   e071 1403  ld   $03,y
              e072 e0cb  jmp  y,$cb
              e073 00ea  ld   $ea
              e074 0200  nop              ;135 fillers
              e075 0200  nop
              e076 0200  nop
              * 135 times
              e0fb fe00  bra  ac          ;+-----------------------------------+
              e0fc fcfd  bra  $e0fd       ;|                                   |
              e0fd 1418  ld   $18,y       ;| Trampoline for page $e000 lookups |
              e0fe e006  jmp  y,$06       ;|                                   |
              e0ff c218  st   [$18]       ;+-----------------------------------+
              e100
